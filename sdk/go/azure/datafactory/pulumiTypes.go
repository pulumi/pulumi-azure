// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datafactory

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type CustomDatasetLinkedService struct {
	// The name of the Data Factory Linked Service.
	Name string `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters map[string]string `pulumi:"parameters"`
}

// CustomDatasetLinkedServiceInput is an input type that accepts CustomDatasetLinkedServiceArgs and CustomDatasetLinkedServiceOutput values.
// You can construct a concrete instance of `CustomDatasetLinkedServiceInput` via:
//
//	CustomDatasetLinkedServiceArgs{...}
type CustomDatasetLinkedServiceInput interface {
	pulumi.Input

	ToCustomDatasetLinkedServiceOutput() CustomDatasetLinkedServiceOutput
	ToCustomDatasetLinkedServiceOutputWithContext(context.Context) CustomDatasetLinkedServiceOutput
}

type CustomDatasetLinkedServiceArgs struct {
	// The name of the Data Factory Linked Service.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (CustomDatasetLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDatasetLinkedService)(nil)).Elem()
}

func (i CustomDatasetLinkedServiceArgs) ToCustomDatasetLinkedServiceOutput() CustomDatasetLinkedServiceOutput {
	return i.ToCustomDatasetLinkedServiceOutputWithContext(context.Background())
}

func (i CustomDatasetLinkedServiceArgs) ToCustomDatasetLinkedServiceOutputWithContext(ctx context.Context) CustomDatasetLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDatasetLinkedServiceOutput)
}

func (i CustomDatasetLinkedServiceArgs) ToCustomDatasetLinkedServicePtrOutput() CustomDatasetLinkedServicePtrOutput {
	return i.ToCustomDatasetLinkedServicePtrOutputWithContext(context.Background())
}

func (i CustomDatasetLinkedServiceArgs) ToCustomDatasetLinkedServicePtrOutputWithContext(ctx context.Context) CustomDatasetLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDatasetLinkedServiceOutput).ToCustomDatasetLinkedServicePtrOutputWithContext(ctx)
}

// CustomDatasetLinkedServicePtrInput is an input type that accepts CustomDatasetLinkedServiceArgs, CustomDatasetLinkedServicePtr and CustomDatasetLinkedServicePtrOutput values.
// You can construct a concrete instance of `CustomDatasetLinkedServicePtrInput` via:
//
//	        CustomDatasetLinkedServiceArgs{...}
//
//	or:
//
//	        nil
type CustomDatasetLinkedServicePtrInput interface {
	pulumi.Input

	ToCustomDatasetLinkedServicePtrOutput() CustomDatasetLinkedServicePtrOutput
	ToCustomDatasetLinkedServicePtrOutputWithContext(context.Context) CustomDatasetLinkedServicePtrOutput
}

type customDatasetLinkedServicePtrType CustomDatasetLinkedServiceArgs

func CustomDatasetLinkedServicePtr(v *CustomDatasetLinkedServiceArgs) CustomDatasetLinkedServicePtrInput {
	return (*customDatasetLinkedServicePtrType)(v)
}

func (*customDatasetLinkedServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDatasetLinkedService)(nil)).Elem()
}

func (i *customDatasetLinkedServicePtrType) ToCustomDatasetLinkedServicePtrOutput() CustomDatasetLinkedServicePtrOutput {
	return i.ToCustomDatasetLinkedServicePtrOutputWithContext(context.Background())
}

func (i *customDatasetLinkedServicePtrType) ToCustomDatasetLinkedServicePtrOutputWithContext(ctx context.Context) CustomDatasetLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDatasetLinkedServicePtrOutput)
}

type CustomDatasetLinkedServiceOutput struct{ *pulumi.OutputState }

func (CustomDatasetLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDatasetLinkedService)(nil)).Elem()
}

func (o CustomDatasetLinkedServiceOutput) ToCustomDatasetLinkedServiceOutput() CustomDatasetLinkedServiceOutput {
	return o
}

func (o CustomDatasetLinkedServiceOutput) ToCustomDatasetLinkedServiceOutputWithContext(ctx context.Context) CustomDatasetLinkedServiceOutput {
	return o
}

func (o CustomDatasetLinkedServiceOutput) ToCustomDatasetLinkedServicePtrOutput() CustomDatasetLinkedServicePtrOutput {
	return o.ToCustomDatasetLinkedServicePtrOutputWithContext(context.Background())
}

func (o CustomDatasetLinkedServiceOutput) ToCustomDatasetLinkedServicePtrOutputWithContext(ctx context.Context) CustomDatasetLinkedServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomDatasetLinkedService) *CustomDatasetLinkedService {
		return &v
	}).(CustomDatasetLinkedServicePtrOutput)
}

// The name of the Data Factory Linked Service.
func (o CustomDatasetLinkedServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDatasetLinkedService) string { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o CustomDatasetLinkedServiceOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v CustomDatasetLinkedService) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type CustomDatasetLinkedServicePtrOutput struct{ *pulumi.OutputState }

func (CustomDatasetLinkedServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDatasetLinkedService)(nil)).Elem()
}

func (o CustomDatasetLinkedServicePtrOutput) ToCustomDatasetLinkedServicePtrOutput() CustomDatasetLinkedServicePtrOutput {
	return o
}

func (o CustomDatasetLinkedServicePtrOutput) ToCustomDatasetLinkedServicePtrOutputWithContext(ctx context.Context) CustomDatasetLinkedServicePtrOutput {
	return o
}

func (o CustomDatasetLinkedServicePtrOutput) Elem() CustomDatasetLinkedServiceOutput {
	return o.ApplyT(func(v *CustomDatasetLinkedService) CustomDatasetLinkedService {
		if v != nil {
			return *v
		}
		var ret CustomDatasetLinkedService
		return ret
	}).(CustomDatasetLinkedServiceOutput)
}

// The name of the Data Factory Linked Service.
func (o CustomDatasetLinkedServicePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomDatasetLinkedService) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o CustomDatasetLinkedServicePtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CustomDatasetLinkedService) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type DataFlowSink struct {
	// A `dataset` block as defined below.
	Dataset *DataFlowSinkDataset `pulumi:"dataset"`
	// The description for the Data Flow Source.
	Description *string `pulumi:"description"`
	// A `flowlet` block as defined below.
	Flowlet *DataFlowSinkFlowlet `pulumi:"flowlet"`
	// A `linkedService` block as defined below.
	LinkedService *DataFlowSinkLinkedService `pulumi:"linkedService"`
	// The name for the Data Flow Source.
	Name string `pulumi:"name"`
	// A `rejectedLinkedService` block as defined below.
	RejectedLinkedService *DataFlowSinkRejectedLinkedService `pulumi:"rejectedLinkedService"`
	// A `schemaLinkedService` block as defined below.
	SchemaLinkedService *DataFlowSinkSchemaLinkedService `pulumi:"schemaLinkedService"`
}

// DataFlowSinkInput is an input type that accepts DataFlowSinkArgs and DataFlowSinkOutput values.
// You can construct a concrete instance of `DataFlowSinkInput` via:
//
//	DataFlowSinkArgs{...}
type DataFlowSinkInput interface {
	pulumi.Input

	ToDataFlowSinkOutput() DataFlowSinkOutput
	ToDataFlowSinkOutputWithContext(context.Context) DataFlowSinkOutput
}

type DataFlowSinkArgs struct {
	// A `dataset` block as defined below.
	Dataset DataFlowSinkDatasetPtrInput `pulumi:"dataset"`
	// The description for the Data Flow Source.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A `flowlet` block as defined below.
	Flowlet DataFlowSinkFlowletPtrInput `pulumi:"flowlet"`
	// A `linkedService` block as defined below.
	LinkedService DataFlowSinkLinkedServicePtrInput `pulumi:"linkedService"`
	// The name for the Data Flow Source.
	Name pulumi.StringInput `pulumi:"name"`
	// A `rejectedLinkedService` block as defined below.
	RejectedLinkedService DataFlowSinkRejectedLinkedServicePtrInput `pulumi:"rejectedLinkedService"`
	// A `schemaLinkedService` block as defined below.
	SchemaLinkedService DataFlowSinkSchemaLinkedServicePtrInput `pulumi:"schemaLinkedService"`
}

func (DataFlowSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowSink)(nil)).Elem()
}

func (i DataFlowSinkArgs) ToDataFlowSinkOutput() DataFlowSinkOutput {
	return i.ToDataFlowSinkOutputWithContext(context.Background())
}

func (i DataFlowSinkArgs) ToDataFlowSinkOutputWithContext(ctx context.Context) DataFlowSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSinkOutput)
}

// DataFlowSinkArrayInput is an input type that accepts DataFlowSinkArray and DataFlowSinkArrayOutput values.
// You can construct a concrete instance of `DataFlowSinkArrayInput` via:
//
//	DataFlowSinkArray{ DataFlowSinkArgs{...} }
type DataFlowSinkArrayInput interface {
	pulumi.Input

	ToDataFlowSinkArrayOutput() DataFlowSinkArrayOutput
	ToDataFlowSinkArrayOutputWithContext(context.Context) DataFlowSinkArrayOutput
}

type DataFlowSinkArray []DataFlowSinkInput

func (DataFlowSinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataFlowSink)(nil)).Elem()
}

func (i DataFlowSinkArray) ToDataFlowSinkArrayOutput() DataFlowSinkArrayOutput {
	return i.ToDataFlowSinkArrayOutputWithContext(context.Background())
}

func (i DataFlowSinkArray) ToDataFlowSinkArrayOutputWithContext(ctx context.Context) DataFlowSinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSinkArrayOutput)
}

type DataFlowSinkOutput struct{ *pulumi.OutputState }

func (DataFlowSinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowSink)(nil)).Elem()
}

func (o DataFlowSinkOutput) ToDataFlowSinkOutput() DataFlowSinkOutput {
	return o
}

func (o DataFlowSinkOutput) ToDataFlowSinkOutputWithContext(ctx context.Context) DataFlowSinkOutput {
	return o
}

// A `dataset` block as defined below.
func (o DataFlowSinkOutput) Dataset() DataFlowSinkDatasetPtrOutput {
	return o.ApplyT(func(v DataFlowSink) *DataFlowSinkDataset { return v.Dataset }).(DataFlowSinkDatasetPtrOutput)
}

// The description for the Data Flow Source.
func (o DataFlowSinkOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataFlowSink) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A `flowlet` block as defined below.
func (o DataFlowSinkOutput) Flowlet() DataFlowSinkFlowletPtrOutput {
	return o.ApplyT(func(v DataFlowSink) *DataFlowSinkFlowlet { return v.Flowlet }).(DataFlowSinkFlowletPtrOutput)
}

// A `linkedService` block as defined below.
func (o DataFlowSinkOutput) LinkedService() DataFlowSinkLinkedServicePtrOutput {
	return o.ApplyT(func(v DataFlowSink) *DataFlowSinkLinkedService { return v.LinkedService }).(DataFlowSinkLinkedServicePtrOutput)
}

// The name for the Data Flow Source.
func (o DataFlowSinkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataFlowSink) string { return v.Name }).(pulumi.StringOutput)
}

// A `rejectedLinkedService` block as defined below.
func (o DataFlowSinkOutput) RejectedLinkedService() DataFlowSinkRejectedLinkedServicePtrOutput {
	return o.ApplyT(func(v DataFlowSink) *DataFlowSinkRejectedLinkedService { return v.RejectedLinkedService }).(DataFlowSinkRejectedLinkedServicePtrOutput)
}

// A `schemaLinkedService` block as defined below.
func (o DataFlowSinkOutput) SchemaLinkedService() DataFlowSinkSchemaLinkedServicePtrOutput {
	return o.ApplyT(func(v DataFlowSink) *DataFlowSinkSchemaLinkedService { return v.SchemaLinkedService }).(DataFlowSinkSchemaLinkedServicePtrOutput)
}

type DataFlowSinkArrayOutput struct{ *pulumi.OutputState }

func (DataFlowSinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataFlowSink)(nil)).Elem()
}

func (o DataFlowSinkArrayOutput) ToDataFlowSinkArrayOutput() DataFlowSinkArrayOutput {
	return o
}

func (o DataFlowSinkArrayOutput) ToDataFlowSinkArrayOutputWithContext(ctx context.Context) DataFlowSinkArrayOutput {
	return o
}

func (o DataFlowSinkArrayOutput) Index(i pulumi.IntInput) DataFlowSinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataFlowSink {
		return vs[0].([]DataFlowSink)[vs[1].(int)]
	}).(DataFlowSinkOutput)
}

type DataFlowSinkDataset struct {
	// The name for the Data Factory Dataset.
	Name string `pulumi:"name"`
	// A map of parameters to associate with the Data Factory dataset.
	Parameters map[string]string `pulumi:"parameters"`
}

// DataFlowSinkDatasetInput is an input type that accepts DataFlowSinkDatasetArgs and DataFlowSinkDatasetOutput values.
// You can construct a concrete instance of `DataFlowSinkDatasetInput` via:
//
//	DataFlowSinkDatasetArgs{...}
type DataFlowSinkDatasetInput interface {
	pulumi.Input

	ToDataFlowSinkDatasetOutput() DataFlowSinkDatasetOutput
	ToDataFlowSinkDatasetOutputWithContext(context.Context) DataFlowSinkDatasetOutput
}

type DataFlowSinkDatasetArgs struct {
	// The name for the Data Factory Dataset.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory dataset.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (DataFlowSinkDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowSinkDataset)(nil)).Elem()
}

func (i DataFlowSinkDatasetArgs) ToDataFlowSinkDatasetOutput() DataFlowSinkDatasetOutput {
	return i.ToDataFlowSinkDatasetOutputWithContext(context.Background())
}

func (i DataFlowSinkDatasetArgs) ToDataFlowSinkDatasetOutputWithContext(ctx context.Context) DataFlowSinkDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSinkDatasetOutput)
}

func (i DataFlowSinkDatasetArgs) ToDataFlowSinkDatasetPtrOutput() DataFlowSinkDatasetPtrOutput {
	return i.ToDataFlowSinkDatasetPtrOutputWithContext(context.Background())
}

func (i DataFlowSinkDatasetArgs) ToDataFlowSinkDatasetPtrOutputWithContext(ctx context.Context) DataFlowSinkDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSinkDatasetOutput).ToDataFlowSinkDatasetPtrOutputWithContext(ctx)
}

// DataFlowSinkDatasetPtrInput is an input type that accepts DataFlowSinkDatasetArgs, DataFlowSinkDatasetPtr and DataFlowSinkDatasetPtrOutput values.
// You can construct a concrete instance of `DataFlowSinkDatasetPtrInput` via:
//
//	        DataFlowSinkDatasetArgs{...}
//
//	or:
//
//	        nil
type DataFlowSinkDatasetPtrInput interface {
	pulumi.Input

	ToDataFlowSinkDatasetPtrOutput() DataFlowSinkDatasetPtrOutput
	ToDataFlowSinkDatasetPtrOutputWithContext(context.Context) DataFlowSinkDatasetPtrOutput
}

type dataFlowSinkDatasetPtrType DataFlowSinkDatasetArgs

func DataFlowSinkDatasetPtr(v *DataFlowSinkDatasetArgs) DataFlowSinkDatasetPtrInput {
	return (*dataFlowSinkDatasetPtrType)(v)
}

func (*dataFlowSinkDatasetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFlowSinkDataset)(nil)).Elem()
}

func (i *dataFlowSinkDatasetPtrType) ToDataFlowSinkDatasetPtrOutput() DataFlowSinkDatasetPtrOutput {
	return i.ToDataFlowSinkDatasetPtrOutputWithContext(context.Background())
}

func (i *dataFlowSinkDatasetPtrType) ToDataFlowSinkDatasetPtrOutputWithContext(ctx context.Context) DataFlowSinkDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSinkDatasetPtrOutput)
}

type DataFlowSinkDatasetOutput struct{ *pulumi.OutputState }

func (DataFlowSinkDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowSinkDataset)(nil)).Elem()
}

func (o DataFlowSinkDatasetOutput) ToDataFlowSinkDatasetOutput() DataFlowSinkDatasetOutput {
	return o
}

func (o DataFlowSinkDatasetOutput) ToDataFlowSinkDatasetOutputWithContext(ctx context.Context) DataFlowSinkDatasetOutput {
	return o
}

func (o DataFlowSinkDatasetOutput) ToDataFlowSinkDatasetPtrOutput() DataFlowSinkDatasetPtrOutput {
	return o.ToDataFlowSinkDatasetPtrOutputWithContext(context.Background())
}

func (o DataFlowSinkDatasetOutput) ToDataFlowSinkDatasetPtrOutputWithContext(ctx context.Context) DataFlowSinkDatasetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataFlowSinkDataset) *DataFlowSinkDataset {
		return &v
	}).(DataFlowSinkDatasetPtrOutput)
}

// The name for the Data Factory Dataset.
func (o DataFlowSinkDatasetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataFlowSinkDataset) string { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the Data Factory dataset.
func (o DataFlowSinkDatasetOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataFlowSinkDataset) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type DataFlowSinkDatasetPtrOutput struct{ *pulumi.OutputState }

func (DataFlowSinkDatasetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFlowSinkDataset)(nil)).Elem()
}

func (o DataFlowSinkDatasetPtrOutput) ToDataFlowSinkDatasetPtrOutput() DataFlowSinkDatasetPtrOutput {
	return o
}

func (o DataFlowSinkDatasetPtrOutput) ToDataFlowSinkDatasetPtrOutputWithContext(ctx context.Context) DataFlowSinkDatasetPtrOutput {
	return o
}

func (o DataFlowSinkDatasetPtrOutput) Elem() DataFlowSinkDatasetOutput {
	return o.ApplyT(func(v *DataFlowSinkDataset) DataFlowSinkDataset {
		if v != nil {
			return *v
		}
		var ret DataFlowSinkDataset
		return ret
	}).(DataFlowSinkDatasetOutput)
}

// The name for the Data Factory Dataset.
func (o DataFlowSinkDatasetPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataFlowSinkDataset) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the Data Factory dataset.
func (o DataFlowSinkDatasetPtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataFlowSinkDataset) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type DataFlowSinkFlowlet struct {
	// Specifies the reference data flow parameters from dataset.
	DatasetParameters *string `pulumi:"datasetParameters"`
	// The name for the Data Factory Flowlet.
	Name string `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Flowlet.
	Parameters map[string]string `pulumi:"parameters"`
}

// DataFlowSinkFlowletInput is an input type that accepts DataFlowSinkFlowletArgs and DataFlowSinkFlowletOutput values.
// You can construct a concrete instance of `DataFlowSinkFlowletInput` via:
//
//	DataFlowSinkFlowletArgs{...}
type DataFlowSinkFlowletInput interface {
	pulumi.Input

	ToDataFlowSinkFlowletOutput() DataFlowSinkFlowletOutput
	ToDataFlowSinkFlowletOutputWithContext(context.Context) DataFlowSinkFlowletOutput
}

type DataFlowSinkFlowletArgs struct {
	// Specifies the reference data flow parameters from dataset.
	DatasetParameters pulumi.StringPtrInput `pulumi:"datasetParameters"`
	// The name for the Data Factory Flowlet.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Flowlet.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (DataFlowSinkFlowletArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowSinkFlowlet)(nil)).Elem()
}

func (i DataFlowSinkFlowletArgs) ToDataFlowSinkFlowletOutput() DataFlowSinkFlowletOutput {
	return i.ToDataFlowSinkFlowletOutputWithContext(context.Background())
}

func (i DataFlowSinkFlowletArgs) ToDataFlowSinkFlowletOutputWithContext(ctx context.Context) DataFlowSinkFlowletOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSinkFlowletOutput)
}

func (i DataFlowSinkFlowletArgs) ToDataFlowSinkFlowletPtrOutput() DataFlowSinkFlowletPtrOutput {
	return i.ToDataFlowSinkFlowletPtrOutputWithContext(context.Background())
}

func (i DataFlowSinkFlowletArgs) ToDataFlowSinkFlowletPtrOutputWithContext(ctx context.Context) DataFlowSinkFlowletPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSinkFlowletOutput).ToDataFlowSinkFlowletPtrOutputWithContext(ctx)
}

// DataFlowSinkFlowletPtrInput is an input type that accepts DataFlowSinkFlowletArgs, DataFlowSinkFlowletPtr and DataFlowSinkFlowletPtrOutput values.
// You can construct a concrete instance of `DataFlowSinkFlowletPtrInput` via:
//
//	        DataFlowSinkFlowletArgs{...}
//
//	or:
//
//	        nil
type DataFlowSinkFlowletPtrInput interface {
	pulumi.Input

	ToDataFlowSinkFlowletPtrOutput() DataFlowSinkFlowletPtrOutput
	ToDataFlowSinkFlowletPtrOutputWithContext(context.Context) DataFlowSinkFlowletPtrOutput
}

type dataFlowSinkFlowletPtrType DataFlowSinkFlowletArgs

func DataFlowSinkFlowletPtr(v *DataFlowSinkFlowletArgs) DataFlowSinkFlowletPtrInput {
	return (*dataFlowSinkFlowletPtrType)(v)
}

func (*dataFlowSinkFlowletPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFlowSinkFlowlet)(nil)).Elem()
}

func (i *dataFlowSinkFlowletPtrType) ToDataFlowSinkFlowletPtrOutput() DataFlowSinkFlowletPtrOutput {
	return i.ToDataFlowSinkFlowletPtrOutputWithContext(context.Background())
}

func (i *dataFlowSinkFlowletPtrType) ToDataFlowSinkFlowletPtrOutputWithContext(ctx context.Context) DataFlowSinkFlowletPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSinkFlowletPtrOutput)
}

type DataFlowSinkFlowletOutput struct{ *pulumi.OutputState }

func (DataFlowSinkFlowletOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowSinkFlowlet)(nil)).Elem()
}

func (o DataFlowSinkFlowletOutput) ToDataFlowSinkFlowletOutput() DataFlowSinkFlowletOutput {
	return o
}

func (o DataFlowSinkFlowletOutput) ToDataFlowSinkFlowletOutputWithContext(ctx context.Context) DataFlowSinkFlowletOutput {
	return o
}

func (o DataFlowSinkFlowletOutput) ToDataFlowSinkFlowletPtrOutput() DataFlowSinkFlowletPtrOutput {
	return o.ToDataFlowSinkFlowletPtrOutputWithContext(context.Background())
}

func (o DataFlowSinkFlowletOutput) ToDataFlowSinkFlowletPtrOutputWithContext(ctx context.Context) DataFlowSinkFlowletPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataFlowSinkFlowlet) *DataFlowSinkFlowlet {
		return &v
	}).(DataFlowSinkFlowletPtrOutput)
}

// Specifies the reference data flow parameters from dataset.
func (o DataFlowSinkFlowletOutput) DatasetParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataFlowSinkFlowlet) *string { return v.DatasetParameters }).(pulumi.StringPtrOutput)
}

// The name for the Data Factory Flowlet.
func (o DataFlowSinkFlowletOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataFlowSinkFlowlet) string { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the Data Factory Flowlet.
func (o DataFlowSinkFlowletOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataFlowSinkFlowlet) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type DataFlowSinkFlowletPtrOutput struct{ *pulumi.OutputState }

func (DataFlowSinkFlowletPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFlowSinkFlowlet)(nil)).Elem()
}

func (o DataFlowSinkFlowletPtrOutput) ToDataFlowSinkFlowletPtrOutput() DataFlowSinkFlowletPtrOutput {
	return o
}

func (o DataFlowSinkFlowletPtrOutput) ToDataFlowSinkFlowletPtrOutputWithContext(ctx context.Context) DataFlowSinkFlowletPtrOutput {
	return o
}

func (o DataFlowSinkFlowletPtrOutput) Elem() DataFlowSinkFlowletOutput {
	return o.ApplyT(func(v *DataFlowSinkFlowlet) DataFlowSinkFlowlet {
		if v != nil {
			return *v
		}
		var ret DataFlowSinkFlowlet
		return ret
	}).(DataFlowSinkFlowletOutput)
}

// Specifies the reference data flow parameters from dataset.
func (o DataFlowSinkFlowletPtrOutput) DatasetParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataFlowSinkFlowlet) *string {
		if v == nil {
			return nil
		}
		return v.DatasetParameters
	}).(pulumi.StringPtrOutput)
}

// The name for the Data Factory Flowlet.
func (o DataFlowSinkFlowletPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataFlowSinkFlowlet) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the Data Factory Flowlet.
func (o DataFlowSinkFlowletPtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataFlowSinkFlowlet) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type DataFlowSinkLinkedService struct {
	// The name for the Data Factory Linked Service.
	Name string `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters map[string]string `pulumi:"parameters"`
}

// DataFlowSinkLinkedServiceInput is an input type that accepts DataFlowSinkLinkedServiceArgs and DataFlowSinkLinkedServiceOutput values.
// You can construct a concrete instance of `DataFlowSinkLinkedServiceInput` via:
//
//	DataFlowSinkLinkedServiceArgs{...}
type DataFlowSinkLinkedServiceInput interface {
	pulumi.Input

	ToDataFlowSinkLinkedServiceOutput() DataFlowSinkLinkedServiceOutput
	ToDataFlowSinkLinkedServiceOutputWithContext(context.Context) DataFlowSinkLinkedServiceOutput
}

type DataFlowSinkLinkedServiceArgs struct {
	// The name for the Data Factory Linked Service.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (DataFlowSinkLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowSinkLinkedService)(nil)).Elem()
}

func (i DataFlowSinkLinkedServiceArgs) ToDataFlowSinkLinkedServiceOutput() DataFlowSinkLinkedServiceOutput {
	return i.ToDataFlowSinkLinkedServiceOutputWithContext(context.Background())
}

func (i DataFlowSinkLinkedServiceArgs) ToDataFlowSinkLinkedServiceOutputWithContext(ctx context.Context) DataFlowSinkLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSinkLinkedServiceOutput)
}

func (i DataFlowSinkLinkedServiceArgs) ToDataFlowSinkLinkedServicePtrOutput() DataFlowSinkLinkedServicePtrOutput {
	return i.ToDataFlowSinkLinkedServicePtrOutputWithContext(context.Background())
}

func (i DataFlowSinkLinkedServiceArgs) ToDataFlowSinkLinkedServicePtrOutputWithContext(ctx context.Context) DataFlowSinkLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSinkLinkedServiceOutput).ToDataFlowSinkLinkedServicePtrOutputWithContext(ctx)
}

// DataFlowSinkLinkedServicePtrInput is an input type that accepts DataFlowSinkLinkedServiceArgs, DataFlowSinkLinkedServicePtr and DataFlowSinkLinkedServicePtrOutput values.
// You can construct a concrete instance of `DataFlowSinkLinkedServicePtrInput` via:
//
//	        DataFlowSinkLinkedServiceArgs{...}
//
//	or:
//
//	        nil
type DataFlowSinkLinkedServicePtrInput interface {
	pulumi.Input

	ToDataFlowSinkLinkedServicePtrOutput() DataFlowSinkLinkedServicePtrOutput
	ToDataFlowSinkLinkedServicePtrOutputWithContext(context.Context) DataFlowSinkLinkedServicePtrOutput
}

type dataFlowSinkLinkedServicePtrType DataFlowSinkLinkedServiceArgs

func DataFlowSinkLinkedServicePtr(v *DataFlowSinkLinkedServiceArgs) DataFlowSinkLinkedServicePtrInput {
	return (*dataFlowSinkLinkedServicePtrType)(v)
}

func (*dataFlowSinkLinkedServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFlowSinkLinkedService)(nil)).Elem()
}

func (i *dataFlowSinkLinkedServicePtrType) ToDataFlowSinkLinkedServicePtrOutput() DataFlowSinkLinkedServicePtrOutput {
	return i.ToDataFlowSinkLinkedServicePtrOutputWithContext(context.Background())
}

func (i *dataFlowSinkLinkedServicePtrType) ToDataFlowSinkLinkedServicePtrOutputWithContext(ctx context.Context) DataFlowSinkLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSinkLinkedServicePtrOutput)
}

type DataFlowSinkLinkedServiceOutput struct{ *pulumi.OutputState }

func (DataFlowSinkLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowSinkLinkedService)(nil)).Elem()
}

func (o DataFlowSinkLinkedServiceOutput) ToDataFlowSinkLinkedServiceOutput() DataFlowSinkLinkedServiceOutput {
	return o
}

func (o DataFlowSinkLinkedServiceOutput) ToDataFlowSinkLinkedServiceOutputWithContext(ctx context.Context) DataFlowSinkLinkedServiceOutput {
	return o
}

func (o DataFlowSinkLinkedServiceOutput) ToDataFlowSinkLinkedServicePtrOutput() DataFlowSinkLinkedServicePtrOutput {
	return o.ToDataFlowSinkLinkedServicePtrOutputWithContext(context.Background())
}

func (o DataFlowSinkLinkedServiceOutput) ToDataFlowSinkLinkedServicePtrOutputWithContext(ctx context.Context) DataFlowSinkLinkedServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataFlowSinkLinkedService) *DataFlowSinkLinkedService {
		return &v
	}).(DataFlowSinkLinkedServicePtrOutput)
}

// The name for the Data Factory Linked Service.
func (o DataFlowSinkLinkedServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataFlowSinkLinkedService) string { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o DataFlowSinkLinkedServiceOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataFlowSinkLinkedService) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type DataFlowSinkLinkedServicePtrOutput struct{ *pulumi.OutputState }

func (DataFlowSinkLinkedServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFlowSinkLinkedService)(nil)).Elem()
}

func (o DataFlowSinkLinkedServicePtrOutput) ToDataFlowSinkLinkedServicePtrOutput() DataFlowSinkLinkedServicePtrOutput {
	return o
}

func (o DataFlowSinkLinkedServicePtrOutput) ToDataFlowSinkLinkedServicePtrOutputWithContext(ctx context.Context) DataFlowSinkLinkedServicePtrOutput {
	return o
}

func (o DataFlowSinkLinkedServicePtrOutput) Elem() DataFlowSinkLinkedServiceOutput {
	return o.ApplyT(func(v *DataFlowSinkLinkedService) DataFlowSinkLinkedService {
		if v != nil {
			return *v
		}
		var ret DataFlowSinkLinkedService
		return ret
	}).(DataFlowSinkLinkedServiceOutput)
}

// The name for the Data Factory Linked Service.
func (o DataFlowSinkLinkedServicePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataFlowSinkLinkedService) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o DataFlowSinkLinkedServicePtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataFlowSinkLinkedService) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type DataFlowSinkRejectedLinkedService struct {
	// The name for the Data Factory Linked Service with schema.
	Name string `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters map[string]string `pulumi:"parameters"`
}

// DataFlowSinkRejectedLinkedServiceInput is an input type that accepts DataFlowSinkRejectedLinkedServiceArgs and DataFlowSinkRejectedLinkedServiceOutput values.
// You can construct a concrete instance of `DataFlowSinkRejectedLinkedServiceInput` via:
//
//	DataFlowSinkRejectedLinkedServiceArgs{...}
type DataFlowSinkRejectedLinkedServiceInput interface {
	pulumi.Input

	ToDataFlowSinkRejectedLinkedServiceOutput() DataFlowSinkRejectedLinkedServiceOutput
	ToDataFlowSinkRejectedLinkedServiceOutputWithContext(context.Context) DataFlowSinkRejectedLinkedServiceOutput
}

type DataFlowSinkRejectedLinkedServiceArgs struct {
	// The name for the Data Factory Linked Service with schema.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (DataFlowSinkRejectedLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowSinkRejectedLinkedService)(nil)).Elem()
}

func (i DataFlowSinkRejectedLinkedServiceArgs) ToDataFlowSinkRejectedLinkedServiceOutput() DataFlowSinkRejectedLinkedServiceOutput {
	return i.ToDataFlowSinkRejectedLinkedServiceOutputWithContext(context.Background())
}

func (i DataFlowSinkRejectedLinkedServiceArgs) ToDataFlowSinkRejectedLinkedServiceOutputWithContext(ctx context.Context) DataFlowSinkRejectedLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSinkRejectedLinkedServiceOutput)
}

func (i DataFlowSinkRejectedLinkedServiceArgs) ToDataFlowSinkRejectedLinkedServicePtrOutput() DataFlowSinkRejectedLinkedServicePtrOutput {
	return i.ToDataFlowSinkRejectedLinkedServicePtrOutputWithContext(context.Background())
}

func (i DataFlowSinkRejectedLinkedServiceArgs) ToDataFlowSinkRejectedLinkedServicePtrOutputWithContext(ctx context.Context) DataFlowSinkRejectedLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSinkRejectedLinkedServiceOutput).ToDataFlowSinkRejectedLinkedServicePtrOutputWithContext(ctx)
}

// DataFlowSinkRejectedLinkedServicePtrInput is an input type that accepts DataFlowSinkRejectedLinkedServiceArgs, DataFlowSinkRejectedLinkedServicePtr and DataFlowSinkRejectedLinkedServicePtrOutput values.
// You can construct a concrete instance of `DataFlowSinkRejectedLinkedServicePtrInput` via:
//
//	        DataFlowSinkRejectedLinkedServiceArgs{...}
//
//	or:
//
//	        nil
type DataFlowSinkRejectedLinkedServicePtrInput interface {
	pulumi.Input

	ToDataFlowSinkRejectedLinkedServicePtrOutput() DataFlowSinkRejectedLinkedServicePtrOutput
	ToDataFlowSinkRejectedLinkedServicePtrOutputWithContext(context.Context) DataFlowSinkRejectedLinkedServicePtrOutput
}

type dataFlowSinkRejectedLinkedServicePtrType DataFlowSinkRejectedLinkedServiceArgs

func DataFlowSinkRejectedLinkedServicePtr(v *DataFlowSinkRejectedLinkedServiceArgs) DataFlowSinkRejectedLinkedServicePtrInput {
	return (*dataFlowSinkRejectedLinkedServicePtrType)(v)
}

func (*dataFlowSinkRejectedLinkedServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFlowSinkRejectedLinkedService)(nil)).Elem()
}

func (i *dataFlowSinkRejectedLinkedServicePtrType) ToDataFlowSinkRejectedLinkedServicePtrOutput() DataFlowSinkRejectedLinkedServicePtrOutput {
	return i.ToDataFlowSinkRejectedLinkedServicePtrOutputWithContext(context.Background())
}

func (i *dataFlowSinkRejectedLinkedServicePtrType) ToDataFlowSinkRejectedLinkedServicePtrOutputWithContext(ctx context.Context) DataFlowSinkRejectedLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSinkRejectedLinkedServicePtrOutput)
}

type DataFlowSinkRejectedLinkedServiceOutput struct{ *pulumi.OutputState }

func (DataFlowSinkRejectedLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowSinkRejectedLinkedService)(nil)).Elem()
}

func (o DataFlowSinkRejectedLinkedServiceOutput) ToDataFlowSinkRejectedLinkedServiceOutput() DataFlowSinkRejectedLinkedServiceOutput {
	return o
}

func (o DataFlowSinkRejectedLinkedServiceOutput) ToDataFlowSinkRejectedLinkedServiceOutputWithContext(ctx context.Context) DataFlowSinkRejectedLinkedServiceOutput {
	return o
}

func (o DataFlowSinkRejectedLinkedServiceOutput) ToDataFlowSinkRejectedLinkedServicePtrOutput() DataFlowSinkRejectedLinkedServicePtrOutput {
	return o.ToDataFlowSinkRejectedLinkedServicePtrOutputWithContext(context.Background())
}

func (o DataFlowSinkRejectedLinkedServiceOutput) ToDataFlowSinkRejectedLinkedServicePtrOutputWithContext(ctx context.Context) DataFlowSinkRejectedLinkedServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataFlowSinkRejectedLinkedService) *DataFlowSinkRejectedLinkedService {
		return &v
	}).(DataFlowSinkRejectedLinkedServicePtrOutput)
}

// The name for the Data Factory Linked Service with schema.
func (o DataFlowSinkRejectedLinkedServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataFlowSinkRejectedLinkedService) string { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o DataFlowSinkRejectedLinkedServiceOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataFlowSinkRejectedLinkedService) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type DataFlowSinkRejectedLinkedServicePtrOutput struct{ *pulumi.OutputState }

func (DataFlowSinkRejectedLinkedServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFlowSinkRejectedLinkedService)(nil)).Elem()
}

func (o DataFlowSinkRejectedLinkedServicePtrOutput) ToDataFlowSinkRejectedLinkedServicePtrOutput() DataFlowSinkRejectedLinkedServicePtrOutput {
	return o
}

func (o DataFlowSinkRejectedLinkedServicePtrOutput) ToDataFlowSinkRejectedLinkedServicePtrOutputWithContext(ctx context.Context) DataFlowSinkRejectedLinkedServicePtrOutput {
	return o
}

func (o DataFlowSinkRejectedLinkedServicePtrOutput) Elem() DataFlowSinkRejectedLinkedServiceOutput {
	return o.ApplyT(func(v *DataFlowSinkRejectedLinkedService) DataFlowSinkRejectedLinkedService {
		if v != nil {
			return *v
		}
		var ret DataFlowSinkRejectedLinkedService
		return ret
	}).(DataFlowSinkRejectedLinkedServiceOutput)
}

// The name for the Data Factory Linked Service with schema.
func (o DataFlowSinkRejectedLinkedServicePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataFlowSinkRejectedLinkedService) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o DataFlowSinkRejectedLinkedServicePtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataFlowSinkRejectedLinkedService) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type DataFlowSinkSchemaLinkedService struct {
	// The name for the Data Factory Linked Service with schema.
	Name string `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters map[string]string `pulumi:"parameters"`
}

// DataFlowSinkSchemaLinkedServiceInput is an input type that accepts DataFlowSinkSchemaLinkedServiceArgs and DataFlowSinkSchemaLinkedServiceOutput values.
// You can construct a concrete instance of `DataFlowSinkSchemaLinkedServiceInput` via:
//
//	DataFlowSinkSchemaLinkedServiceArgs{...}
type DataFlowSinkSchemaLinkedServiceInput interface {
	pulumi.Input

	ToDataFlowSinkSchemaLinkedServiceOutput() DataFlowSinkSchemaLinkedServiceOutput
	ToDataFlowSinkSchemaLinkedServiceOutputWithContext(context.Context) DataFlowSinkSchemaLinkedServiceOutput
}

type DataFlowSinkSchemaLinkedServiceArgs struct {
	// The name for the Data Factory Linked Service with schema.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (DataFlowSinkSchemaLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowSinkSchemaLinkedService)(nil)).Elem()
}

func (i DataFlowSinkSchemaLinkedServiceArgs) ToDataFlowSinkSchemaLinkedServiceOutput() DataFlowSinkSchemaLinkedServiceOutput {
	return i.ToDataFlowSinkSchemaLinkedServiceOutputWithContext(context.Background())
}

func (i DataFlowSinkSchemaLinkedServiceArgs) ToDataFlowSinkSchemaLinkedServiceOutputWithContext(ctx context.Context) DataFlowSinkSchemaLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSinkSchemaLinkedServiceOutput)
}

func (i DataFlowSinkSchemaLinkedServiceArgs) ToDataFlowSinkSchemaLinkedServicePtrOutput() DataFlowSinkSchemaLinkedServicePtrOutput {
	return i.ToDataFlowSinkSchemaLinkedServicePtrOutputWithContext(context.Background())
}

func (i DataFlowSinkSchemaLinkedServiceArgs) ToDataFlowSinkSchemaLinkedServicePtrOutputWithContext(ctx context.Context) DataFlowSinkSchemaLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSinkSchemaLinkedServiceOutput).ToDataFlowSinkSchemaLinkedServicePtrOutputWithContext(ctx)
}

// DataFlowSinkSchemaLinkedServicePtrInput is an input type that accepts DataFlowSinkSchemaLinkedServiceArgs, DataFlowSinkSchemaLinkedServicePtr and DataFlowSinkSchemaLinkedServicePtrOutput values.
// You can construct a concrete instance of `DataFlowSinkSchemaLinkedServicePtrInput` via:
//
//	        DataFlowSinkSchemaLinkedServiceArgs{...}
//
//	or:
//
//	        nil
type DataFlowSinkSchemaLinkedServicePtrInput interface {
	pulumi.Input

	ToDataFlowSinkSchemaLinkedServicePtrOutput() DataFlowSinkSchemaLinkedServicePtrOutput
	ToDataFlowSinkSchemaLinkedServicePtrOutputWithContext(context.Context) DataFlowSinkSchemaLinkedServicePtrOutput
}

type dataFlowSinkSchemaLinkedServicePtrType DataFlowSinkSchemaLinkedServiceArgs

func DataFlowSinkSchemaLinkedServicePtr(v *DataFlowSinkSchemaLinkedServiceArgs) DataFlowSinkSchemaLinkedServicePtrInput {
	return (*dataFlowSinkSchemaLinkedServicePtrType)(v)
}

func (*dataFlowSinkSchemaLinkedServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFlowSinkSchemaLinkedService)(nil)).Elem()
}

func (i *dataFlowSinkSchemaLinkedServicePtrType) ToDataFlowSinkSchemaLinkedServicePtrOutput() DataFlowSinkSchemaLinkedServicePtrOutput {
	return i.ToDataFlowSinkSchemaLinkedServicePtrOutputWithContext(context.Background())
}

func (i *dataFlowSinkSchemaLinkedServicePtrType) ToDataFlowSinkSchemaLinkedServicePtrOutputWithContext(ctx context.Context) DataFlowSinkSchemaLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSinkSchemaLinkedServicePtrOutput)
}

type DataFlowSinkSchemaLinkedServiceOutput struct{ *pulumi.OutputState }

func (DataFlowSinkSchemaLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowSinkSchemaLinkedService)(nil)).Elem()
}

func (o DataFlowSinkSchemaLinkedServiceOutput) ToDataFlowSinkSchemaLinkedServiceOutput() DataFlowSinkSchemaLinkedServiceOutput {
	return o
}

func (o DataFlowSinkSchemaLinkedServiceOutput) ToDataFlowSinkSchemaLinkedServiceOutputWithContext(ctx context.Context) DataFlowSinkSchemaLinkedServiceOutput {
	return o
}

func (o DataFlowSinkSchemaLinkedServiceOutput) ToDataFlowSinkSchemaLinkedServicePtrOutput() DataFlowSinkSchemaLinkedServicePtrOutput {
	return o.ToDataFlowSinkSchemaLinkedServicePtrOutputWithContext(context.Background())
}

func (o DataFlowSinkSchemaLinkedServiceOutput) ToDataFlowSinkSchemaLinkedServicePtrOutputWithContext(ctx context.Context) DataFlowSinkSchemaLinkedServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataFlowSinkSchemaLinkedService) *DataFlowSinkSchemaLinkedService {
		return &v
	}).(DataFlowSinkSchemaLinkedServicePtrOutput)
}

// The name for the Data Factory Linked Service with schema.
func (o DataFlowSinkSchemaLinkedServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataFlowSinkSchemaLinkedService) string { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o DataFlowSinkSchemaLinkedServiceOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataFlowSinkSchemaLinkedService) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type DataFlowSinkSchemaLinkedServicePtrOutput struct{ *pulumi.OutputState }

func (DataFlowSinkSchemaLinkedServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFlowSinkSchemaLinkedService)(nil)).Elem()
}

func (o DataFlowSinkSchemaLinkedServicePtrOutput) ToDataFlowSinkSchemaLinkedServicePtrOutput() DataFlowSinkSchemaLinkedServicePtrOutput {
	return o
}

func (o DataFlowSinkSchemaLinkedServicePtrOutput) ToDataFlowSinkSchemaLinkedServicePtrOutputWithContext(ctx context.Context) DataFlowSinkSchemaLinkedServicePtrOutput {
	return o
}

func (o DataFlowSinkSchemaLinkedServicePtrOutput) Elem() DataFlowSinkSchemaLinkedServiceOutput {
	return o.ApplyT(func(v *DataFlowSinkSchemaLinkedService) DataFlowSinkSchemaLinkedService {
		if v != nil {
			return *v
		}
		var ret DataFlowSinkSchemaLinkedService
		return ret
	}).(DataFlowSinkSchemaLinkedServiceOutput)
}

// The name for the Data Factory Linked Service with schema.
func (o DataFlowSinkSchemaLinkedServicePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataFlowSinkSchemaLinkedService) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o DataFlowSinkSchemaLinkedServicePtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataFlowSinkSchemaLinkedService) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type DataFlowSource struct {
	// A `dataset` block as defined below.
	Dataset *DataFlowSourceDataset `pulumi:"dataset"`
	// The description for the Data Flow Source.
	Description *string `pulumi:"description"`
	// A `flowlet` block as defined below.
	Flowlet *DataFlowSourceFlowlet `pulumi:"flowlet"`
	// A `linkedService` block as defined below.
	LinkedService *DataFlowSourceLinkedService `pulumi:"linkedService"`
	// The name for the Data Flow Source.
	Name string `pulumi:"name"`
	// A `rejectedLinkedService` block as defined below.
	RejectedLinkedService *DataFlowSourceRejectedLinkedService `pulumi:"rejectedLinkedService"`
	// A `schemaLinkedService` block as defined below.
	SchemaLinkedService *DataFlowSourceSchemaLinkedService `pulumi:"schemaLinkedService"`
}

// DataFlowSourceInput is an input type that accepts DataFlowSourceArgs and DataFlowSourceOutput values.
// You can construct a concrete instance of `DataFlowSourceInput` via:
//
//	DataFlowSourceArgs{...}
type DataFlowSourceInput interface {
	pulumi.Input

	ToDataFlowSourceOutput() DataFlowSourceOutput
	ToDataFlowSourceOutputWithContext(context.Context) DataFlowSourceOutput
}

type DataFlowSourceArgs struct {
	// A `dataset` block as defined below.
	Dataset DataFlowSourceDatasetPtrInput `pulumi:"dataset"`
	// The description for the Data Flow Source.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A `flowlet` block as defined below.
	Flowlet DataFlowSourceFlowletPtrInput `pulumi:"flowlet"`
	// A `linkedService` block as defined below.
	LinkedService DataFlowSourceLinkedServicePtrInput `pulumi:"linkedService"`
	// The name for the Data Flow Source.
	Name pulumi.StringInput `pulumi:"name"`
	// A `rejectedLinkedService` block as defined below.
	RejectedLinkedService DataFlowSourceRejectedLinkedServicePtrInput `pulumi:"rejectedLinkedService"`
	// A `schemaLinkedService` block as defined below.
	SchemaLinkedService DataFlowSourceSchemaLinkedServicePtrInput `pulumi:"schemaLinkedService"`
}

func (DataFlowSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowSource)(nil)).Elem()
}

func (i DataFlowSourceArgs) ToDataFlowSourceOutput() DataFlowSourceOutput {
	return i.ToDataFlowSourceOutputWithContext(context.Background())
}

func (i DataFlowSourceArgs) ToDataFlowSourceOutputWithContext(ctx context.Context) DataFlowSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSourceOutput)
}

// DataFlowSourceArrayInput is an input type that accepts DataFlowSourceArray and DataFlowSourceArrayOutput values.
// You can construct a concrete instance of `DataFlowSourceArrayInput` via:
//
//	DataFlowSourceArray{ DataFlowSourceArgs{...} }
type DataFlowSourceArrayInput interface {
	pulumi.Input

	ToDataFlowSourceArrayOutput() DataFlowSourceArrayOutput
	ToDataFlowSourceArrayOutputWithContext(context.Context) DataFlowSourceArrayOutput
}

type DataFlowSourceArray []DataFlowSourceInput

func (DataFlowSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataFlowSource)(nil)).Elem()
}

func (i DataFlowSourceArray) ToDataFlowSourceArrayOutput() DataFlowSourceArrayOutput {
	return i.ToDataFlowSourceArrayOutputWithContext(context.Background())
}

func (i DataFlowSourceArray) ToDataFlowSourceArrayOutputWithContext(ctx context.Context) DataFlowSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSourceArrayOutput)
}

type DataFlowSourceOutput struct{ *pulumi.OutputState }

func (DataFlowSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowSource)(nil)).Elem()
}

func (o DataFlowSourceOutput) ToDataFlowSourceOutput() DataFlowSourceOutput {
	return o
}

func (o DataFlowSourceOutput) ToDataFlowSourceOutputWithContext(ctx context.Context) DataFlowSourceOutput {
	return o
}

// A `dataset` block as defined below.
func (o DataFlowSourceOutput) Dataset() DataFlowSourceDatasetPtrOutput {
	return o.ApplyT(func(v DataFlowSource) *DataFlowSourceDataset { return v.Dataset }).(DataFlowSourceDatasetPtrOutput)
}

// The description for the Data Flow Source.
func (o DataFlowSourceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataFlowSource) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A `flowlet` block as defined below.
func (o DataFlowSourceOutput) Flowlet() DataFlowSourceFlowletPtrOutput {
	return o.ApplyT(func(v DataFlowSource) *DataFlowSourceFlowlet { return v.Flowlet }).(DataFlowSourceFlowletPtrOutput)
}

// A `linkedService` block as defined below.
func (o DataFlowSourceOutput) LinkedService() DataFlowSourceLinkedServicePtrOutput {
	return o.ApplyT(func(v DataFlowSource) *DataFlowSourceLinkedService { return v.LinkedService }).(DataFlowSourceLinkedServicePtrOutput)
}

// The name for the Data Flow Source.
func (o DataFlowSourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataFlowSource) string { return v.Name }).(pulumi.StringOutput)
}

// A `rejectedLinkedService` block as defined below.
func (o DataFlowSourceOutput) RejectedLinkedService() DataFlowSourceRejectedLinkedServicePtrOutput {
	return o.ApplyT(func(v DataFlowSource) *DataFlowSourceRejectedLinkedService { return v.RejectedLinkedService }).(DataFlowSourceRejectedLinkedServicePtrOutput)
}

// A `schemaLinkedService` block as defined below.
func (o DataFlowSourceOutput) SchemaLinkedService() DataFlowSourceSchemaLinkedServicePtrOutput {
	return o.ApplyT(func(v DataFlowSource) *DataFlowSourceSchemaLinkedService { return v.SchemaLinkedService }).(DataFlowSourceSchemaLinkedServicePtrOutput)
}

type DataFlowSourceArrayOutput struct{ *pulumi.OutputState }

func (DataFlowSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataFlowSource)(nil)).Elem()
}

func (o DataFlowSourceArrayOutput) ToDataFlowSourceArrayOutput() DataFlowSourceArrayOutput {
	return o
}

func (o DataFlowSourceArrayOutput) ToDataFlowSourceArrayOutputWithContext(ctx context.Context) DataFlowSourceArrayOutput {
	return o
}

func (o DataFlowSourceArrayOutput) Index(i pulumi.IntInput) DataFlowSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataFlowSource {
		return vs[0].([]DataFlowSource)[vs[1].(int)]
	}).(DataFlowSourceOutput)
}

type DataFlowSourceDataset struct {
	// The name for the Data Factory Dataset.
	Name string `pulumi:"name"`
	// A map of parameters to associate with the Data Factory dataset.
	Parameters map[string]string `pulumi:"parameters"`
}

// DataFlowSourceDatasetInput is an input type that accepts DataFlowSourceDatasetArgs and DataFlowSourceDatasetOutput values.
// You can construct a concrete instance of `DataFlowSourceDatasetInput` via:
//
//	DataFlowSourceDatasetArgs{...}
type DataFlowSourceDatasetInput interface {
	pulumi.Input

	ToDataFlowSourceDatasetOutput() DataFlowSourceDatasetOutput
	ToDataFlowSourceDatasetOutputWithContext(context.Context) DataFlowSourceDatasetOutput
}

type DataFlowSourceDatasetArgs struct {
	// The name for the Data Factory Dataset.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory dataset.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (DataFlowSourceDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowSourceDataset)(nil)).Elem()
}

func (i DataFlowSourceDatasetArgs) ToDataFlowSourceDatasetOutput() DataFlowSourceDatasetOutput {
	return i.ToDataFlowSourceDatasetOutputWithContext(context.Background())
}

func (i DataFlowSourceDatasetArgs) ToDataFlowSourceDatasetOutputWithContext(ctx context.Context) DataFlowSourceDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSourceDatasetOutput)
}

func (i DataFlowSourceDatasetArgs) ToDataFlowSourceDatasetPtrOutput() DataFlowSourceDatasetPtrOutput {
	return i.ToDataFlowSourceDatasetPtrOutputWithContext(context.Background())
}

func (i DataFlowSourceDatasetArgs) ToDataFlowSourceDatasetPtrOutputWithContext(ctx context.Context) DataFlowSourceDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSourceDatasetOutput).ToDataFlowSourceDatasetPtrOutputWithContext(ctx)
}

// DataFlowSourceDatasetPtrInput is an input type that accepts DataFlowSourceDatasetArgs, DataFlowSourceDatasetPtr and DataFlowSourceDatasetPtrOutput values.
// You can construct a concrete instance of `DataFlowSourceDatasetPtrInput` via:
//
//	        DataFlowSourceDatasetArgs{...}
//
//	or:
//
//	        nil
type DataFlowSourceDatasetPtrInput interface {
	pulumi.Input

	ToDataFlowSourceDatasetPtrOutput() DataFlowSourceDatasetPtrOutput
	ToDataFlowSourceDatasetPtrOutputWithContext(context.Context) DataFlowSourceDatasetPtrOutput
}

type dataFlowSourceDatasetPtrType DataFlowSourceDatasetArgs

func DataFlowSourceDatasetPtr(v *DataFlowSourceDatasetArgs) DataFlowSourceDatasetPtrInput {
	return (*dataFlowSourceDatasetPtrType)(v)
}

func (*dataFlowSourceDatasetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFlowSourceDataset)(nil)).Elem()
}

func (i *dataFlowSourceDatasetPtrType) ToDataFlowSourceDatasetPtrOutput() DataFlowSourceDatasetPtrOutput {
	return i.ToDataFlowSourceDatasetPtrOutputWithContext(context.Background())
}

func (i *dataFlowSourceDatasetPtrType) ToDataFlowSourceDatasetPtrOutputWithContext(ctx context.Context) DataFlowSourceDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSourceDatasetPtrOutput)
}

type DataFlowSourceDatasetOutput struct{ *pulumi.OutputState }

func (DataFlowSourceDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowSourceDataset)(nil)).Elem()
}

func (o DataFlowSourceDatasetOutput) ToDataFlowSourceDatasetOutput() DataFlowSourceDatasetOutput {
	return o
}

func (o DataFlowSourceDatasetOutput) ToDataFlowSourceDatasetOutputWithContext(ctx context.Context) DataFlowSourceDatasetOutput {
	return o
}

func (o DataFlowSourceDatasetOutput) ToDataFlowSourceDatasetPtrOutput() DataFlowSourceDatasetPtrOutput {
	return o.ToDataFlowSourceDatasetPtrOutputWithContext(context.Background())
}

func (o DataFlowSourceDatasetOutput) ToDataFlowSourceDatasetPtrOutputWithContext(ctx context.Context) DataFlowSourceDatasetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataFlowSourceDataset) *DataFlowSourceDataset {
		return &v
	}).(DataFlowSourceDatasetPtrOutput)
}

// The name for the Data Factory Dataset.
func (o DataFlowSourceDatasetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataFlowSourceDataset) string { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the Data Factory dataset.
func (o DataFlowSourceDatasetOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataFlowSourceDataset) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type DataFlowSourceDatasetPtrOutput struct{ *pulumi.OutputState }

func (DataFlowSourceDatasetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFlowSourceDataset)(nil)).Elem()
}

func (o DataFlowSourceDatasetPtrOutput) ToDataFlowSourceDatasetPtrOutput() DataFlowSourceDatasetPtrOutput {
	return o
}

func (o DataFlowSourceDatasetPtrOutput) ToDataFlowSourceDatasetPtrOutputWithContext(ctx context.Context) DataFlowSourceDatasetPtrOutput {
	return o
}

func (o DataFlowSourceDatasetPtrOutput) Elem() DataFlowSourceDatasetOutput {
	return o.ApplyT(func(v *DataFlowSourceDataset) DataFlowSourceDataset {
		if v != nil {
			return *v
		}
		var ret DataFlowSourceDataset
		return ret
	}).(DataFlowSourceDatasetOutput)
}

// The name for the Data Factory Dataset.
func (o DataFlowSourceDatasetPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataFlowSourceDataset) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the Data Factory dataset.
func (o DataFlowSourceDatasetPtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataFlowSourceDataset) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type DataFlowSourceFlowlet struct {
	// Specifies the reference data flow parameters from dataset.
	DatasetParameters *string `pulumi:"datasetParameters"`
	// The name for the Data Factory Flowlet.
	Name string `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Flowlet.
	Parameters map[string]string `pulumi:"parameters"`
}

// DataFlowSourceFlowletInput is an input type that accepts DataFlowSourceFlowletArgs and DataFlowSourceFlowletOutput values.
// You can construct a concrete instance of `DataFlowSourceFlowletInput` via:
//
//	DataFlowSourceFlowletArgs{...}
type DataFlowSourceFlowletInput interface {
	pulumi.Input

	ToDataFlowSourceFlowletOutput() DataFlowSourceFlowletOutput
	ToDataFlowSourceFlowletOutputWithContext(context.Context) DataFlowSourceFlowletOutput
}

type DataFlowSourceFlowletArgs struct {
	// Specifies the reference data flow parameters from dataset.
	DatasetParameters pulumi.StringPtrInput `pulumi:"datasetParameters"`
	// The name for the Data Factory Flowlet.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Flowlet.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (DataFlowSourceFlowletArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowSourceFlowlet)(nil)).Elem()
}

func (i DataFlowSourceFlowletArgs) ToDataFlowSourceFlowletOutput() DataFlowSourceFlowletOutput {
	return i.ToDataFlowSourceFlowletOutputWithContext(context.Background())
}

func (i DataFlowSourceFlowletArgs) ToDataFlowSourceFlowletOutputWithContext(ctx context.Context) DataFlowSourceFlowletOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSourceFlowletOutput)
}

func (i DataFlowSourceFlowletArgs) ToDataFlowSourceFlowletPtrOutput() DataFlowSourceFlowletPtrOutput {
	return i.ToDataFlowSourceFlowletPtrOutputWithContext(context.Background())
}

func (i DataFlowSourceFlowletArgs) ToDataFlowSourceFlowletPtrOutputWithContext(ctx context.Context) DataFlowSourceFlowletPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSourceFlowletOutput).ToDataFlowSourceFlowletPtrOutputWithContext(ctx)
}

// DataFlowSourceFlowletPtrInput is an input type that accepts DataFlowSourceFlowletArgs, DataFlowSourceFlowletPtr and DataFlowSourceFlowletPtrOutput values.
// You can construct a concrete instance of `DataFlowSourceFlowletPtrInput` via:
//
//	        DataFlowSourceFlowletArgs{...}
//
//	or:
//
//	        nil
type DataFlowSourceFlowletPtrInput interface {
	pulumi.Input

	ToDataFlowSourceFlowletPtrOutput() DataFlowSourceFlowletPtrOutput
	ToDataFlowSourceFlowletPtrOutputWithContext(context.Context) DataFlowSourceFlowletPtrOutput
}

type dataFlowSourceFlowletPtrType DataFlowSourceFlowletArgs

func DataFlowSourceFlowletPtr(v *DataFlowSourceFlowletArgs) DataFlowSourceFlowletPtrInput {
	return (*dataFlowSourceFlowletPtrType)(v)
}

func (*dataFlowSourceFlowletPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFlowSourceFlowlet)(nil)).Elem()
}

func (i *dataFlowSourceFlowletPtrType) ToDataFlowSourceFlowletPtrOutput() DataFlowSourceFlowletPtrOutput {
	return i.ToDataFlowSourceFlowletPtrOutputWithContext(context.Background())
}

func (i *dataFlowSourceFlowletPtrType) ToDataFlowSourceFlowletPtrOutputWithContext(ctx context.Context) DataFlowSourceFlowletPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSourceFlowletPtrOutput)
}

type DataFlowSourceFlowletOutput struct{ *pulumi.OutputState }

func (DataFlowSourceFlowletOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowSourceFlowlet)(nil)).Elem()
}

func (o DataFlowSourceFlowletOutput) ToDataFlowSourceFlowletOutput() DataFlowSourceFlowletOutput {
	return o
}

func (o DataFlowSourceFlowletOutput) ToDataFlowSourceFlowletOutputWithContext(ctx context.Context) DataFlowSourceFlowletOutput {
	return o
}

func (o DataFlowSourceFlowletOutput) ToDataFlowSourceFlowletPtrOutput() DataFlowSourceFlowletPtrOutput {
	return o.ToDataFlowSourceFlowletPtrOutputWithContext(context.Background())
}

func (o DataFlowSourceFlowletOutput) ToDataFlowSourceFlowletPtrOutputWithContext(ctx context.Context) DataFlowSourceFlowletPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataFlowSourceFlowlet) *DataFlowSourceFlowlet {
		return &v
	}).(DataFlowSourceFlowletPtrOutput)
}

// Specifies the reference data flow parameters from dataset.
func (o DataFlowSourceFlowletOutput) DatasetParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataFlowSourceFlowlet) *string { return v.DatasetParameters }).(pulumi.StringPtrOutput)
}

// The name for the Data Factory Flowlet.
func (o DataFlowSourceFlowletOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataFlowSourceFlowlet) string { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the Data Factory Flowlet.
func (o DataFlowSourceFlowletOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataFlowSourceFlowlet) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type DataFlowSourceFlowletPtrOutput struct{ *pulumi.OutputState }

func (DataFlowSourceFlowletPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFlowSourceFlowlet)(nil)).Elem()
}

func (o DataFlowSourceFlowletPtrOutput) ToDataFlowSourceFlowletPtrOutput() DataFlowSourceFlowletPtrOutput {
	return o
}

func (o DataFlowSourceFlowletPtrOutput) ToDataFlowSourceFlowletPtrOutputWithContext(ctx context.Context) DataFlowSourceFlowletPtrOutput {
	return o
}

func (o DataFlowSourceFlowletPtrOutput) Elem() DataFlowSourceFlowletOutput {
	return o.ApplyT(func(v *DataFlowSourceFlowlet) DataFlowSourceFlowlet {
		if v != nil {
			return *v
		}
		var ret DataFlowSourceFlowlet
		return ret
	}).(DataFlowSourceFlowletOutput)
}

// Specifies the reference data flow parameters from dataset.
func (o DataFlowSourceFlowletPtrOutput) DatasetParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataFlowSourceFlowlet) *string {
		if v == nil {
			return nil
		}
		return v.DatasetParameters
	}).(pulumi.StringPtrOutput)
}

// The name for the Data Factory Flowlet.
func (o DataFlowSourceFlowletPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataFlowSourceFlowlet) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the Data Factory Flowlet.
func (o DataFlowSourceFlowletPtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataFlowSourceFlowlet) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type DataFlowSourceLinkedService struct {
	// The name for the Data Factory Linked Service.
	Name string `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters map[string]string `pulumi:"parameters"`
}

// DataFlowSourceLinkedServiceInput is an input type that accepts DataFlowSourceLinkedServiceArgs and DataFlowSourceLinkedServiceOutput values.
// You can construct a concrete instance of `DataFlowSourceLinkedServiceInput` via:
//
//	DataFlowSourceLinkedServiceArgs{...}
type DataFlowSourceLinkedServiceInput interface {
	pulumi.Input

	ToDataFlowSourceLinkedServiceOutput() DataFlowSourceLinkedServiceOutput
	ToDataFlowSourceLinkedServiceOutputWithContext(context.Context) DataFlowSourceLinkedServiceOutput
}

type DataFlowSourceLinkedServiceArgs struct {
	// The name for the Data Factory Linked Service.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (DataFlowSourceLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowSourceLinkedService)(nil)).Elem()
}

func (i DataFlowSourceLinkedServiceArgs) ToDataFlowSourceLinkedServiceOutput() DataFlowSourceLinkedServiceOutput {
	return i.ToDataFlowSourceLinkedServiceOutputWithContext(context.Background())
}

func (i DataFlowSourceLinkedServiceArgs) ToDataFlowSourceLinkedServiceOutputWithContext(ctx context.Context) DataFlowSourceLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSourceLinkedServiceOutput)
}

func (i DataFlowSourceLinkedServiceArgs) ToDataFlowSourceLinkedServicePtrOutput() DataFlowSourceLinkedServicePtrOutput {
	return i.ToDataFlowSourceLinkedServicePtrOutputWithContext(context.Background())
}

func (i DataFlowSourceLinkedServiceArgs) ToDataFlowSourceLinkedServicePtrOutputWithContext(ctx context.Context) DataFlowSourceLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSourceLinkedServiceOutput).ToDataFlowSourceLinkedServicePtrOutputWithContext(ctx)
}

// DataFlowSourceLinkedServicePtrInput is an input type that accepts DataFlowSourceLinkedServiceArgs, DataFlowSourceLinkedServicePtr and DataFlowSourceLinkedServicePtrOutput values.
// You can construct a concrete instance of `DataFlowSourceLinkedServicePtrInput` via:
//
//	        DataFlowSourceLinkedServiceArgs{...}
//
//	or:
//
//	        nil
type DataFlowSourceLinkedServicePtrInput interface {
	pulumi.Input

	ToDataFlowSourceLinkedServicePtrOutput() DataFlowSourceLinkedServicePtrOutput
	ToDataFlowSourceLinkedServicePtrOutputWithContext(context.Context) DataFlowSourceLinkedServicePtrOutput
}

type dataFlowSourceLinkedServicePtrType DataFlowSourceLinkedServiceArgs

func DataFlowSourceLinkedServicePtr(v *DataFlowSourceLinkedServiceArgs) DataFlowSourceLinkedServicePtrInput {
	return (*dataFlowSourceLinkedServicePtrType)(v)
}

func (*dataFlowSourceLinkedServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFlowSourceLinkedService)(nil)).Elem()
}

func (i *dataFlowSourceLinkedServicePtrType) ToDataFlowSourceLinkedServicePtrOutput() DataFlowSourceLinkedServicePtrOutput {
	return i.ToDataFlowSourceLinkedServicePtrOutputWithContext(context.Background())
}

func (i *dataFlowSourceLinkedServicePtrType) ToDataFlowSourceLinkedServicePtrOutputWithContext(ctx context.Context) DataFlowSourceLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSourceLinkedServicePtrOutput)
}

type DataFlowSourceLinkedServiceOutput struct{ *pulumi.OutputState }

func (DataFlowSourceLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowSourceLinkedService)(nil)).Elem()
}

func (o DataFlowSourceLinkedServiceOutput) ToDataFlowSourceLinkedServiceOutput() DataFlowSourceLinkedServiceOutput {
	return o
}

func (o DataFlowSourceLinkedServiceOutput) ToDataFlowSourceLinkedServiceOutputWithContext(ctx context.Context) DataFlowSourceLinkedServiceOutput {
	return o
}

func (o DataFlowSourceLinkedServiceOutput) ToDataFlowSourceLinkedServicePtrOutput() DataFlowSourceLinkedServicePtrOutput {
	return o.ToDataFlowSourceLinkedServicePtrOutputWithContext(context.Background())
}

func (o DataFlowSourceLinkedServiceOutput) ToDataFlowSourceLinkedServicePtrOutputWithContext(ctx context.Context) DataFlowSourceLinkedServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataFlowSourceLinkedService) *DataFlowSourceLinkedService {
		return &v
	}).(DataFlowSourceLinkedServicePtrOutput)
}

// The name for the Data Factory Linked Service.
func (o DataFlowSourceLinkedServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataFlowSourceLinkedService) string { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o DataFlowSourceLinkedServiceOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataFlowSourceLinkedService) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type DataFlowSourceLinkedServicePtrOutput struct{ *pulumi.OutputState }

func (DataFlowSourceLinkedServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFlowSourceLinkedService)(nil)).Elem()
}

func (o DataFlowSourceLinkedServicePtrOutput) ToDataFlowSourceLinkedServicePtrOutput() DataFlowSourceLinkedServicePtrOutput {
	return o
}

func (o DataFlowSourceLinkedServicePtrOutput) ToDataFlowSourceLinkedServicePtrOutputWithContext(ctx context.Context) DataFlowSourceLinkedServicePtrOutput {
	return o
}

func (o DataFlowSourceLinkedServicePtrOutput) Elem() DataFlowSourceLinkedServiceOutput {
	return o.ApplyT(func(v *DataFlowSourceLinkedService) DataFlowSourceLinkedService {
		if v != nil {
			return *v
		}
		var ret DataFlowSourceLinkedService
		return ret
	}).(DataFlowSourceLinkedServiceOutput)
}

// The name for the Data Factory Linked Service.
func (o DataFlowSourceLinkedServicePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataFlowSourceLinkedService) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o DataFlowSourceLinkedServicePtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataFlowSourceLinkedService) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type DataFlowSourceRejectedLinkedService struct {
	// The name for the Data Factory Linked Service with schema.
	Name string `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters map[string]string `pulumi:"parameters"`
}

// DataFlowSourceRejectedLinkedServiceInput is an input type that accepts DataFlowSourceRejectedLinkedServiceArgs and DataFlowSourceRejectedLinkedServiceOutput values.
// You can construct a concrete instance of `DataFlowSourceRejectedLinkedServiceInput` via:
//
//	DataFlowSourceRejectedLinkedServiceArgs{...}
type DataFlowSourceRejectedLinkedServiceInput interface {
	pulumi.Input

	ToDataFlowSourceRejectedLinkedServiceOutput() DataFlowSourceRejectedLinkedServiceOutput
	ToDataFlowSourceRejectedLinkedServiceOutputWithContext(context.Context) DataFlowSourceRejectedLinkedServiceOutput
}

type DataFlowSourceRejectedLinkedServiceArgs struct {
	// The name for the Data Factory Linked Service with schema.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (DataFlowSourceRejectedLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowSourceRejectedLinkedService)(nil)).Elem()
}

func (i DataFlowSourceRejectedLinkedServiceArgs) ToDataFlowSourceRejectedLinkedServiceOutput() DataFlowSourceRejectedLinkedServiceOutput {
	return i.ToDataFlowSourceRejectedLinkedServiceOutputWithContext(context.Background())
}

func (i DataFlowSourceRejectedLinkedServiceArgs) ToDataFlowSourceRejectedLinkedServiceOutputWithContext(ctx context.Context) DataFlowSourceRejectedLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSourceRejectedLinkedServiceOutput)
}

func (i DataFlowSourceRejectedLinkedServiceArgs) ToDataFlowSourceRejectedLinkedServicePtrOutput() DataFlowSourceRejectedLinkedServicePtrOutput {
	return i.ToDataFlowSourceRejectedLinkedServicePtrOutputWithContext(context.Background())
}

func (i DataFlowSourceRejectedLinkedServiceArgs) ToDataFlowSourceRejectedLinkedServicePtrOutputWithContext(ctx context.Context) DataFlowSourceRejectedLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSourceRejectedLinkedServiceOutput).ToDataFlowSourceRejectedLinkedServicePtrOutputWithContext(ctx)
}

// DataFlowSourceRejectedLinkedServicePtrInput is an input type that accepts DataFlowSourceRejectedLinkedServiceArgs, DataFlowSourceRejectedLinkedServicePtr and DataFlowSourceRejectedLinkedServicePtrOutput values.
// You can construct a concrete instance of `DataFlowSourceRejectedLinkedServicePtrInput` via:
//
//	        DataFlowSourceRejectedLinkedServiceArgs{...}
//
//	or:
//
//	        nil
type DataFlowSourceRejectedLinkedServicePtrInput interface {
	pulumi.Input

	ToDataFlowSourceRejectedLinkedServicePtrOutput() DataFlowSourceRejectedLinkedServicePtrOutput
	ToDataFlowSourceRejectedLinkedServicePtrOutputWithContext(context.Context) DataFlowSourceRejectedLinkedServicePtrOutput
}

type dataFlowSourceRejectedLinkedServicePtrType DataFlowSourceRejectedLinkedServiceArgs

func DataFlowSourceRejectedLinkedServicePtr(v *DataFlowSourceRejectedLinkedServiceArgs) DataFlowSourceRejectedLinkedServicePtrInput {
	return (*dataFlowSourceRejectedLinkedServicePtrType)(v)
}

func (*dataFlowSourceRejectedLinkedServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFlowSourceRejectedLinkedService)(nil)).Elem()
}

func (i *dataFlowSourceRejectedLinkedServicePtrType) ToDataFlowSourceRejectedLinkedServicePtrOutput() DataFlowSourceRejectedLinkedServicePtrOutput {
	return i.ToDataFlowSourceRejectedLinkedServicePtrOutputWithContext(context.Background())
}

func (i *dataFlowSourceRejectedLinkedServicePtrType) ToDataFlowSourceRejectedLinkedServicePtrOutputWithContext(ctx context.Context) DataFlowSourceRejectedLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSourceRejectedLinkedServicePtrOutput)
}

type DataFlowSourceRejectedLinkedServiceOutput struct{ *pulumi.OutputState }

func (DataFlowSourceRejectedLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowSourceRejectedLinkedService)(nil)).Elem()
}

func (o DataFlowSourceRejectedLinkedServiceOutput) ToDataFlowSourceRejectedLinkedServiceOutput() DataFlowSourceRejectedLinkedServiceOutput {
	return o
}

func (o DataFlowSourceRejectedLinkedServiceOutput) ToDataFlowSourceRejectedLinkedServiceOutputWithContext(ctx context.Context) DataFlowSourceRejectedLinkedServiceOutput {
	return o
}

func (o DataFlowSourceRejectedLinkedServiceOutput) ToDataFlowSourceRejectedLinkedServicePtrOutput() DataFlowSourceRejectedLinkedServicePtrOutput {
	return o.ToDataFlowSourceRejectedLinkedServicePtrOutputWithContext(context.Background())
}

func (o DataFlowSourceRejectedLinkedServiceOutput) ToDataFlowSourceRejectedLinkedServicePtrOutputWithContext(ctx context.Context) DataFlowSourceRejectedLinkedServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataFlowSourceRejectedLinkedService) *DataFlowSourceRejectedLinkedService {
		return &v
	}).(DataFlowSourceRejectedLinkedServicePtrOutput)
}

// The name for the Data Factory Linked Service with schema.
func (o DataFlowSourceRejectedLinkedServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataFlowSourceRejectedLinkedService) string { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o DataFlowSourceRejectedLinkedServiceOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataFlowSourceRejectedLinkedService) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type DataFlowSourceRejectedLinkedServicePtrOutput struct{ *pulumi.OutputState }

func (DataFlowSourceRejectedLinkedServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFlowSourceRejectedLinkedService)(nil)).Elem()
}

func (o DataFlowSourceRejectedLinkedServicePtrOutput) ToDataFlowSourceRejectedLinkedServicePtrOutput() DataFlowSourceRejectedLinkedServicePtrOutput {
	return o
}

func (o DataFlowSourceRejectedLinkedServicePtrOutput) ToDataFlowSourceRejectedLinkedServicePtrOutputWithContext(ctx context.Context) DataFlowSourceRejectedLinkedServicePtrOutput {
	return o
}

func (o DataFlowSourceRejectedLinkedServicePtrOutput) Elem() DataFlowSourceRejectedLinkedServiceOutput {
	return o.ApplyT(func(v *DataFlowSourceRejectedLinkedService) DataFlowSourceRejectedLinkedService {
		if v != nil {
			return *v
		}
		var ret DataFlowSourceRejectedLinkedService
		return ret
	}).(DataFlowSourceRejectedLinkedServiceOutput)
}

// The name for the Data Factory Linked Service with schema.
func (o DataFlowSourceRejectedLinkedServicePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataFlowSourceRejectedLinkedService) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o DataFlowSourceRejectedLinkedServicePtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataFlowSourceRejectedLinkedService) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type DataFlowSourceSchemaLinkedService struct {
	// The name for the Data Factory Linked Service with schema.
	Name string `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters map[string]string `pulumi:"parameters"`
}

// DataFlowSourceSchemaLinkedServiceInput is an input type that accepts DataFlowSourceSchemaLinkedServiceArgs and DataFlowSourceSchemaLinkedServiceOutput values.
// You can construct a concrete instance of `DataFlowSourceSchemaLinkedServiceInput` via:
//
//	DataFlowSourceSchemaLinkedServiceArgs{...}
type DataFlowSourceSchemaLinkedServiceInput interface {
	pulumi.Input

	ToDataFlowSourceSchemaLinkedServiceOutput() DataFlowSourceSchemaLinkedServiceOutput
	ToDataFlowSourceSchemaLinkedServiceOutputWithContext(context.Context) DataFlowSourceSchemaLinkedServiceOutput
}

type DataFlowSourceSchemaLinkedServiceArgs struct {
	// The name for the Data Factory Linked Service with schema.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (DataFlowSourceSchemaLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowSourceSchemaLinkedService)(nil)).Elem()
}

func (i DataFlowSourceSchemaLinkedServiceArgs) ToDataFlowSourceSchemaLinkedServiceOutput() DataFlowSourceSchemaLinkedServiceOutput {
	return i.ToDataFlowSourceSchemaLinkedServiceOutputWithContext(context.Background())
}

func (i DataFlowSourceSchemaLinkedServiceArgs) ToDataFlowSourceSchemaLinkedServiceOutputWithContext(ctx context.Context) DataFlowSourceSchemaLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSourceSchemaLinkedServiceOutput)
}

func (i DataFlowSourceSchemaLinkedServiceArgs) ToDataFlowSourceSchemaLinkedServicePtrOutput() DataFlowSourceSchemaLinkedServicePtrOutput {
	return i.ToDataFlowSourceSchemaLinkedServicePtrOutputWithContext(context.Background())
}

func (i DataFlowSourceSchemaLinkedServiceArgs) ToDataFlowSourceSchemaLinkedServicePtrOutputWithContext(ctx context.Context) DataFlowSourceSchemaLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSourceSchemaLinkedServiceOutput).ToDataFlowSourceSchemaLinkedServicePtrOutputWithContext(ctx)
}

// DataFlowSourceSchemaLinkedServicePtrInput is an input type that accepts DataFlowSourceSchemaLinkedServiceArgs, DataFlowSourceSchemaLinkedServicePtr and DataFlowSourceSchemaLinkedServicePtrOutput values.
// You can construct a concrete instance of `DataFlowSourceSchemaLinkedServicePtrInput` via:
//
//	        DataFlowSourceSchemaLinkedServiceArgs{...}
//
//	or:
//
//	        nil
type DataFlowSourceSchemaLinkedServicePtrInput interface {
	pulumi.Input

	ToDataFlowSourceSchemaLinkedServicePtrOutput() DataFlowSourceSchemaLinkedServicePtrOutput
	ToDataFlowSourceSchemaLinkedServicePtrOutputWithContext(context.Context) DataFlowSourceSchemaLinkedServicePtrOutput
}

type dataFlowSourceSchemaLinkedServicePtrType DataFlowSourceSchemaLinkedServiceArgs

func DataFlowSourceSchemaLinkedServicePtr(v *DataFlowSourceSchemaLinkedServiceArgs) DataFlowSourceSchemaLinkedServicePtrInput {
	return (*dataFlowSourceSchemaLinkedServicePtrType)(v)
}

func (*dataFlowSourceSchemaLinkedServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFlowSourceSchemaLinkedService)(nil)).Elem()
}

func (i *dataFlowSourceSchemaLinkedServicePtrType) ToDataFlowSourceSchemaLinkedServicePtrOutput() DataFlowSourceSchemaLinkedServicePtrOutput {
	return i.ToDataFlowSourceSchemaLinkedServicePtrOutputWithContext(context.Background())
}

func (i *dataFlowSourceSchemaLinkedServicePtrType) ToDataFlowSourceSchemaLinkedServicePtrOutputWithContext(ctx context.Context) DataFlowSourceSchemaLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowSourceSchemaLinkedServicePtrOutput)
}

type DataFlowSourceSchemaLinkedServiceOutput struct{ *pulumi.OutputState }

func (DataFlowSourceSchemaLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowSourceSchemaLinkedService)(nil)).Elem()
}

func (o DataFlowSourceSchemaLinkedServiceOutput) ToDataFlowSourceSchemaLinkedServiceOutput() DataFlowSourceSchemaLinkedServiceOutput {
	return o
}

func (o DataFlowSourceSchemaLinkedServiceOutput) ToDataFlowSourceSchemaLinkedServiceOutputWithContext(ctx context.Context) DataFlowSourceSchemaLinkedServiceOutput {
	return o
}

func (o DataFlowSourceSchemaLinkedServiceOutput) ToDataFlowSourceSchemaLinkedServicePtrOutput() DataFlowSourceSchemaLinkedServicePtrOutput {
	return o.ToDataFlowSourceSchemaLinkedServicePtrOutputWithContext(context.Background())
}

func (o DataFlowSourceSchemaLinkedServiceOutput) ToDataFlowSourceSchemaLinkedServicePtrOutputWithContext(ctx context.Context) DataFlowSourceSchemaLinkedServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataFlowSourceSchemaLinkedService) *DataFlowSourceSchemaLinkedService {
		return &v
	}).(DataFlowSourceSchemaLinkedServicePtrOutput)
}

// The name for the Data Factory Linked Service with schema.
func (o DataFlowSourceSchemaLinkedServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataFlowSourceSchemaLinkedService) string { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o DataFlowSourceSchemaLinkedServiceOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataFlowSourceSchemaLinkedService) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type DataFlowSourceSchemaLinkedServicePtrOutput struct{ *pulumi.OutputState }

func (DataFlowSourceSchemaLinkedServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFlowSourceSchemaLinkedService)(nil)).Elem()
}

func (o DataFlowSourceSchemaLinkedServicePtrOutput) ToDataFlowSourceSchemaLinkedServicePtrOutput() DataFlowSourceSchemaLinkedServicePtrOutput {
	return o
}

func (o DataFlowSourceSchemaLinkedServicePtrOutput) ToDataFlowSourceSchemaLinkedServicePtrOutputWithContext(ctx context.Context) DataFlowSourceSchemaLinkedServicePtrOutput {
	return o
}

func (o DataFlowSourceSchemaLinkedServicePtrOutput) Elem() DataFlowSourceSchemaLinkedServiceOutput {
	return o.ApplyT(func(v *DataFlowSourceSchemaLinkedService) DataFlowSourceSchemaLinkedService {
		if v != nil {
			return *v
		}
		var ret DataFlowSourceSchemaLinkedService
		return ret
	}).(DataFlowSourceSchemaLinkedServiceOutput)
}

// The name for the Data Factory Linked Service with schema.
func (o DataFlowSourceSchemaLinkedServicePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataFlowSourceSchemaLinkedService) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o DataFlowSourceSchemaLinkedServicePtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataFlowSourceSchemaLinkedService) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type DataFlowTransformation struct {
	// A `dataset` block as defined below.
	Dataset *DataFlowTransformationDataset `pulumi:"dataset"`
	// The description for the Data Flow transformation.
	Description *string `pulumi:"description"`
	// A `flowlet` block as defined below.
	Flowlet *DataFlowTransformationFlowlet `pulumi:"flowlet"`
	// A `linkedService` block as defined below.
	LinkedService *DataFlowTransformationLinkedService `pulumi:"linkedService"`
	// The name for the Data Flow transformation.
	Name string `pulumi:"name"`
}

// DataFlowTransformationInput is an input type that accepts DataFlowTransformationArgs and DataFlowTransformationOutput values.
// You can construct a concrete instance of `DataFlowTransformationInput` via:
//
//	DataFlowTransformationArgs{...}
type DataFlowTransformationInput interface {
	pulumi.Input

	ToDataFlowTransformationOutput() DataFlowTransformationOutput
	ToDataFlowTransformationOutputWithContext(context.Context) DataFlowTransformationOutput
}

type DataFlowTransformationArgs struct {
	// A `dataset` block as defined below.
	Dataset DataFlowTransformationDatasetPtrInput `pulumi:"dataset"`
	// The description for the Data Flow transformation.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A `flowlet` block as defined below.
	Flowlet DataFlowTransformationFlowletPtrInput `pulumi:"flowlet"`
	// A `linkedService` block as defined below.
	LinkedService DataFlowTransformationLinkedServicePtrInput `pulumi:"linkedService"`
	// The name for the Data Flow transformation.
	Name pulumi.StringInput `pulumi:"name"`
}

func (DataFlowTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowTransformation)(nil)).Elem()
}

func (i DataFlowTransformationArgs) ToDataFlowTransformationOutput() DataFlowTransformationOutput {
	return i.ToDataFlowTransformationOutputWithContext(context.Background())
}

func (i DataFlowTransformationArgs) ToDataFlowTransformationOutputWithContext(ctx context.Context) DataFlowTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowTransformationOutput)
}

// DataFlowTransformationArrayInput is an input type that accepts DataFlowTransformationArray and DataFlowTransformationArrayOutput values.
// You can construct a concrete instance of `DataFlowTransformationArrayInput` via:
//
//	DataFlowTransformationArray{ DataFlowTransformationArgs{...} }
type DataFlowTransformationArrayInput interface {
	pulumi.Input

	ToDataFlowTransformationArrayOutput() DataFlowTransformationArrayOutput
	ToDataFlowTransformationArrayOutputWithContext(context.Context) DataFlowTransformationArrayOutput
}

type DataFlowTransformationArray []DataFlowTransformationInput

func (DataFlowTransformationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataFlowTransformation)(nil)).Elem()
}

func (i DataFlowTransformationArray) ToDataFlowTransformationArrayOutput() DataFlowTransformationArrayOutput {
	return i.ToDataFlowTransformationArrayOutputWithContext(context.Background())
}

func (i DataFlowTransformationArray) ToDataFlowTransformationArrayOutputWithContext(ctx context.Context) DataFlowTransformationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowTransformationArrayOutput)
}

type DataFlowTransformationOutput struct{ *pulumi.OutputState }

func (DataFlowTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowTransformation)(nil)).Elem()
}

func (o DataFlowTransformationOutput) ToDataFlowTransformationOutput() DataFlowTransformationOutput {
	return o
}

func (o DataFlowTransformationOutput) ToDataFlowTransformationOutputWithContext(ctx context.Context) DataFlowTransformationOutput {
	return o
}

// A `dataset` block as defined below.
func (o DataFlowTransformationOutput) Dataset() DataFlowTransformationDatasetPtrOutput {
	return o.ApplyT(func(v DataFlowTransformation) *DataFlowTransformationDataset { return v.Dataset }).(DataFlowTransformationDatasetPtrOutput)
}

// The description for the Data Flow transformation.
func (o DataFlowTransformationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataFlowTransformation) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A `flowlet` block as defined below.
func (o DataFlowTransformationOutput) Flowlet() DataFlowTransformationFlowletPtrOutput {
	return o.ApplyT(func(v DataFlowTransformation) *DataFlowTransformationFlowlet { return v.Flowlet }).(DataFlowTransformationFlowletPtrOutput)
}

// A `linkedService` block as defined below.
func (o DataFlowTransformationOutput) LinkedService() DataFlowTransformationLinkedServicePtrOutput {
	return o.ApplyT(func(v DataFlowTransformation) *DataFlowTransformationLinkedService { return v.LinkedService }).(DataFlowTransformationLinkedServicePtrOutput)
}

// The name for the Data Flow transformation.
func (o DataFlowTransformationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataFlowTransformation) string { return v.Name }).(pulumi.StringOutput)
}

type DataFlowTransformationArrayOutput struct{ *pulumi.OutputState }

func (DataFlowTransformationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataFlowTransformation)(nil)).Elem()
}

func (o DataFlowTransformationArrayOutput) ToDataFlowTransformationArrayOutput() DataFlowTransformationArrayOutput {
	return o
}

func (o DataFlowTransformationArrayOutput) ToDataFlowTransformationArrayOutputWithContext(ctx context.Context) DataFlowTransformationArrayOutput {
	return o
}

func (o DataFlowTransformationArrayOutput) Index(i pulumi.IntInput) DataFlowTransformationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataFlowTransformation {
		return vs[0].([]DataFlowTransformation)[vs[1].(int)]
	}).(DataFlowTransformationOutput)
}

type DataFlowTransformationDataset struct {
	// The name for the Data Factory Dataset.
	Name string `pulumi:"name"`
	// A map of parameters to associate with the Data Factory dataset.
	Parameters map[string]string `pulumi:"parameters"`
}

// DataFlowTransformationDatasetInput is an input type that accepts DataFlowTransformationDatasetArgs and DataFlowTransformationDatasetOutput values.
// You can construct a concrete instance of `DataFlowTransformationDatasetInput` via:
//
//	DataFlowTransformationDatasetArgs{...}
type DataFlowTransformationDatasetInput interface {
	pulumi.Input

	ToDataFlowTransformationDatasetOutput() DataFlowTransformationDatasetOutput
	ToDataFlowTransformationDatasetOutputWithContext(context.Context) DataFlowTransformationDatasetOutput
}

type DataFlowTransformationDatasetArgs struct {
	// The name for the Data Factory Dataset.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory dataset.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (DataFlowTransformationDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowTransformationDataset)(nil)).Elem()
}

func (i DataFlowTransformationDatasetArgs) ToDataFlowTransformationDatasetOutput() DataFlowTransformationDatasetOutput {
	return i.ToDataFlowTransformationDatasetOutputWithContext(context.Background())
}

func (i DataFlowTransformationDatasetArgs) ToDataFlowTransformationDatasetOutputWithContext(ctx context.Context) DataFlowTransformationDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowTransformationDatasetOutput)
}

func (i DataFlowTransformationDatasetArgs) ToDataFlowTransformationDatasetPtrOutput() DataFlowTransformationDatasetPtrOutput {
	return i.ToDataFlowTransformationDatasetPtrOutputWithContext(context.Background())
}

func (i DataFlowTransformationDatasetArgs) ToDataFlowTransformationDatasetPtrOutputWithContext(ctx context.Context) DataFlowTransformationDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowTransformationDatasetOutput).ToDataFlowTransformationDatasetPtrOutputWithContext(ctx)
}

// DataFlowTransformationDatasetPtrInput is an input type that accepts DataFlowTransformationDatasetArgs, DataFlowTransformationDatasetPtr and DataFlowTransformationDatasetPtrOutput values.
// You can construct a concrete instance of `DataFlowTransformationDatasetPtrInput` via:
//
//	        DataFlowTransformationDatasetArgs{...}
//
//	or:
//
//	        nil
type DataFlowTransformationDatasetPtrInput interface {
	pulumi.Input

	ToDataFlowTransformationDatasetPtrOutput() DataFlowTransformationDatasetPtrOutput
	ToDataFlowTransformationDatasetPtrOutputWithContext(context.Context) DataFlowTransformationDatasetPtrOutput
}

type dataFlowTransformationDatasetPtrType DataFlowTransformationDatasetArgs

func DataFlowTransformationDatasetPtr(v *DataFlowTransformationDatasetArgs) DataFlowTransformationDatasetPtrInput {
	return (*dataFlowTransformationDatasetPtrType)(v)
}

func (*dataFlowTransformationDatasetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFlowTransformationDataset)(nil)).Elem()
}

func (i *dataFlowTransformationDatasetPtrType) ToDataFlowTransformationDatasetPtrOutput() DataFlowTransformationDatasetPtrOutput {
	return i.ToDataFlowTransformationDatasetPtrOutputWithContext(context.Background())
}

func (i *dataFlowTransformationDatasetPtrType) ToDataFlowTransformationDatasetPtrOutputWithContext(ctx context.Context) DataFlowTransformationDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowTransformationDatasetPtrOutput)
}

type DataFlowTransformationDatasetOutput struct{ *pulumi.OutputState }

func (DataFlowTransformationDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowTransformationDataset)(nil)).Elem()
}

func (o DataFlowTransformationDatasetOutput) ToDataFlowTransformationDatasetOutput() DataFlowTransformationDatasetOutput {
	return o
}

func (o DataFlowTransformationDatasetOutput) ToDataFlowTransformationDatasetOutputWithContext(ctx context.Context) DataFlowTransformationDatasetOutput {
	return o
}

func (o DataFlowTransformationDatasetOutput) ToDataFlowTransformationDatasetPtrOutput() DataFlowTransformationDatasetPtrOutput {
	return o.ToDataFlowTransformationDatasetPtrOutputWithContext(context.Background())
}

func (o DataFlowTransformationDatasetOutput) ToDataFlowTransformationDatasetPtrOutputWithContext(ctx context.Context) DataFlowTransformationDatasetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataFlowTransformationDataset) *DataFlowTransformationDataset {
		return &v
	}).(DataFlowTransformationDatasetPtrOutput)
}

// The name for the Data Factory Dataset.
func (o DataFlowTransformationDatasetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataFlowTransformationDataset) string { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the Data Factory dataset.
func (o DataFlowTransformationDatasetOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataFlowTransformationDataset) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type DataFlowTransformationDatasetPtrOutput struct{ *pulumi.OutputState }

func (DataFlowTransformationDatasetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFlowTransformationDataset)(nil)).Elem()
}

func (o DataFlowTransformationDatasetPtrOutput) ToDataFlowTransformationDatasetPtrOutput() DataFlowTransformationDatasetPtrOutput {
	return o
}

func (o DataFlowTransformationDatasetPtrOutput) ToDataFlowTransformationDatasetPtrOutputWithContext(ctx context.Context) DataFlowTransformationDatasetPtrOutput {
	return o
}

func (o DataFlowTransformationDatasetPtrOutput) Elem() DataFlowTransformationDatasetOutput {
	return o.ApplyT(func(v *DataFlowTransformationDataset) DataFlowTransformationDataset {
		if v != nil {
			return *v
		}
		var ret DataFlowTransformationDataset
		return ret
	}).(DataFlowTransformationDatasetOutput)
}

// The name for the Data Factory Dataset.
func (o DataFlowTransformationDatasetPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataFlowTransformationDataset) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the Data Factory dataset.
func (o DataFlowTransformationDatasetPtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataFlowTransformationDataset) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type DataFlowTransformationFlowlet struct {
	// Specifies the reference data flow parameters from dataset.
	DatasetParameters *string `pulumi:"datasetParameters"`
	// The name for the Data Factory Flowlet.
	Name string `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Flowlet.
	Parameters map[string]string `pulumi:"parameters"`
}

// DataFlowTransformationFlowletInput is an input type that accepts DataFlowTransformationFlowletArgs and DataFlowTransformationFlowletOutput values.
// You can construct a concrete instance of `DataFlowTransformationFlowletInput` via:
//
//	DataFlowTransformationFlowletArgs{...}
type DataFlowTransformationFlowletInput interface {
	pulumi.Input

	ToDataFlowTransformationFlowletOutput() DataFlowTransformationFlowletOutput
	ToDataFlowTransformationFlowletOutputWithContext(context.Context) DataFlowTransformationFlowletOutput
}

type DataFlowTransformationFlowletArgs struct {
	// Specifies the reference data flow parameters from dataset.
	DatasetParameters pulumi.StringPtrInput `pulumi:"datasetParameters"`
	// The name for the Data Factory Flowlet.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Flowlet.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (DataFlowTransformationFlowletArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowTransformationFlowlet)(nil)).Elem()
}

func (i DataFlowTransformationFlowletArgs) ToDataFlowTransformationFlowletOutput() DataFlowTransformationFlowletOutput {
	return i.ToDataFlowTransformationFlowletOutputWithContext(context.Background())
}

func (i DataFlowTransformationFlowletArgs) ToDataFlowTransformationFlowletOutputWithContext(ctx context.Context) DataFlowTransformationFlowletOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowTransformationFlowletOutput)
}

func (i DataFlowTransformationFlowletArgs) ToDataFlowTransformationFlowletPtrOutput() DataFlowTransformationFlowletPtrOutput {
	return i.ToDataFlowTransformationFlowletPtrOutputWithContext(context.Background())
}

func (i DataFlowTransformationFlowletArgs) ToDataFlowTransformationFlowletPtrOutputWithContext(ctx context.Context) DataFlowTransformationFlowletPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowTransformationFlowletOutput).ToDataFlowTransformationFlowletPtrOutputWithContext(ctx)
}

// DataFlowTransformationFlowletPtrInput is an input type that accepts DataFlowTransformationFlowletArgs, DataFlowTransformationFlowletPtr and DataFlowTransformationFlowletPtrOutput values.
// You can construct a concrete instance of `DataFlowTransformationFlowletPtrInput` via:
//
//	        DataFlowTransformationFlowletArgs{...}
//
//	or:
//
//	        nil
type DataFlowTransformationFlowletPtrInput interface {
	pulumi.Input

	ToDataFlowTransformationFlowletPtrOutput() DataFlowTransformationFlowletPtrOutput
	ToDataFlowTransformationFlowletPtrOutputWithContext(context.Context) DataFlowTransformationFlowletPtrOutput
}

type dataFlowTransformationFlowletPtrType DataFlowTransformationFlowletArgs

func DataFlowTransformationFlowletPtr(v *DataFlowTransformationFlowletArgs) DataFlowTransformationFlowletPtrInput {
	return (*dataFlowTransformationFlowletPtrType)(v)
}

func (*dataFlowTransformationFlowletPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFlowTransformationFlowlet)(nil)).Elem()
}

func (i *dataFlowTransformationFlowletPtrType) ToDataFlowTransformationFlowletPtrOutput() DataFlowTransformationFlowletPtrOutput {
	return i.ToDataFlowTransformationFlowletPtrOutputWithContext(context.Background())
}

func (i *dataFlowTransformationFlowletPtrType) ToDataFlowTransformationFlowletPtrOutputWithContext(ctx context.Context) DataFlowTransformationFlowletPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowTransformationFlowletPtrOutput)
}

type DataFlowTransformationFlowletOutput struct{ *pulumi.OutputState }

func (DataFlowTransformationFlowletOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowTransformationFlowlet)(nil)).Elem()
}

func (o DataFlowTransformationFlowletOutput) ToDataFlowTransformationFlowletOutput() DataFlowTransformationFlowletOutput {
	return o
}

func (o DataFlowTransformationFlowletOutput) ToDataFlowTransformationFlowletOutputWithContext(ctx context.Context) DataFlowTransformationFlowletOutput {
	return o
}

func (o DataFlowTransformationFlowletOutput) ToDataFlowTransformationFlowletPtrOutput() DataFlowTransformationFlowletPtrOutput {
	return o.ToDataFlowTransformationFlowletPtrOutputWithContext(context.Background())
}

func (o DataFlowTransformationFlowletOutput) ToDataFlowTransformationFlowletPtrOutputWithContext(ctx context.Context) DataFlowTransformationFlowletPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataFlowTransformationFlowlet) *DataFlowTransformationFlowlet {
		return &v
	}).(DataFlowTransformationFlowletPtrOutput)
}

// Specifies the reference data flow parameters from dataset.
func (o DataFlowTransformationFlowletOutput) DatasetParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataFlowTransformationFlowlet) *string { return v.DatasetParameters }).(pulumi.StringPtrOutput)
}

// The name for the Data Factory Flowlet.
func (o DataFlowTransformationFlowletOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataFlowTransformationFlowlet) string { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the Data Factory Flowlet.
func (o DataFlowTransformationFlowletOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataFlowTransformationFlowlet) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type DataFlowTransformationFlowletPtrOutput struct{ *pulumi.OutputState }

func (DataFlowTransformationFlowletPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFlowTransformationFlowlet)(nil)).Elem()
}

func (o DataFlowTransformationFlowletPtrOutput) ToDataFlowTransformationFlowletPtrOutput() DataFlowTransformationFlowletPtrOutput {
	return o
}

func (o DataFlowTransformationFlowletPtrOutput) ToDataFlowTransformationFlowletPtrOutputWithContext(ctx context.Context) DataFlowTransformationFlowletPtrOutput {
	return o
}

func (o DataFlowTransformationFlowletPtrOutput) Elem() DataFlowTransformationFlowletOutput {
	return o.ApplyT(func(v *DataFlowTransformationFlowlet) DataFlowTransformationFlowlet {
		if v != nil {
			return *v
		}
		var ret DataFlowTransformationFlowlet
		return ret
	}).(DataFlowTransformationFlowletOutput)
}

// Specifies the reference data flow parameters from dataset.
func (o DataFlowTransformationFlowletPtrOutput) DatasetParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataFlowTransformationFlowlet) *string {
		if v == nil {
			return nil
		}
		return v.DatasetParameters
	}).(pulumi.StringPtrOutput)
}

// The name for the Data Factory Flowlet.
func (o DataFlowTransformationFlowletPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataFlowTransformationFlowlet) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the Data Factory Flowlet.
func (o DataFlowTransformationFlowletPtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataFlowTransformationFlowlet) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type DataFlowTransformationLinkedService struct {
	// The name for the Data Factory Linked Service.
	Name string `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters map[string]string `pulumi:"parameters"`
}

// DataFlowTransformationLinkedServiceInput is an input type that accepts DataFlowTransformationLinkedServiceArgs and DataFlowTransformationLinkedServiceOutput values.
// You can construct a concrete instance of `DataFlowTransformationLinkedServiceInput` via:
//
//	DataFlowTransformationLinkedServiceArgs{...}
type DataFlowTransformationLinkedServiceInput interface {
	pulumi.Input

	ToDataFlowTransformationLinkedServiceOutput() DataFlowTransformationLinkedServiceOutput
	ToDataFlowTransformationLinkedServiceOutputWithContext(context.Context) DataFlowTransformationLinkedServiceOutput
}

type DataFlowTransformationLinkedServiceArgs struct {
	// The name for the Data Factory Linked Service.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (DataFlowTransformationLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowTransformationLinkedService)(nil)).Elem()
}

func (i DataFlowTransformationLinkedServiceArgs) ToDataFlowTransformationLinkedServiceOutput() DataFlowTransformationLinkedServiceOutput {
	return i.ToDataFlowTransformationLinkedServiceOutputWithContext(context.Background())
}

func (i DataFlowTransformationLinkedServiceArgs) ToDataFlowTransformationLinkedServiceOutputWithContext(ctx context.Context) DataFlowTransformationLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowTransformationLinkedServiceOutput)
}

func (i DataFlowTransformationLinkedServiceArgs) ToDataFlowTransformationLinkedServicePtrOutput() DataFlowTransformationLinkedServicePtrOutput {
	return i.ToDataFlowTransformationLinkedServicePtrOutputWithContext(context.Background())
}

func (i DataFlowTransformationLinkedServiceArgs) ToDataFlowTransformationLinkedServicePtrOutputWithContext(ctx context.Context) DataFlowTransformationLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowTransformationLinkedServiceOutput).ToDataFlowTransformationLinkedServicePtrOutputWithContext(ctx)
}

// DataFlowTransformationLinkedServicePtrInput is an input type that accepts DataFlowTransformationLinkedServiceArgs, DataFlowTransformationLinkedServicePtr and DataFlowTransformationLinkedServicePtrOutput values.
// You can construct a concrete instance of `DataFlowTransformationLinkedServicePtrInput` via:
//
//	        DataFlowTransformationLinkedServiceArgs{...}
//
//	or:
//
//	        nil
type DataFlowTransformationLinkedServicePtrInput interface {
	pulumi.Input

	ToDataFlowTransformationLinkedServicePtrOutput() DataFlowTransformationLinkedServicePtrOutput
	ToDataFlowTransformationLinkedServicePtrOutputWithContext(context.Context) DataFlowTransformationLinkedServicePtrOutput
}

type dataFlowTransformationLinkedServicePtrType DataFlowTransformationLinkedServiceArgs

func DataFlowTransformationLinkedServicePtr(v *DataFlowTransformationLinkedServiceArgs) DataFlowTransformationLinkedServicePtrInput {
	return (*dataFlowTransformationLinkedServicePtrType)(v)
}

func (*dataFlowTransformationLinkedServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFlowTransformationLinkedService)(nil)).Elem()
}

func (i *dataFlowTransformationLinkedServicePtrType) ToDataFlowTransformationLinkedServicePtrOutput() DataFlowTransformationLinkedServicePtrOutput {
	return i.ToDataFlowTransformationLinkedServicePtrOutputWithContext(context.Background())
}

func (i *dataFlowTransformationLinkedServicePtrType) ToDataFlowTransformationLinkedServicePtrOutputWithContext(ctx context.Context) DataFlowTransformationLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFlowTransformationLinkedServicePtrOutput)
}

type DataFlowTransformationLinkedServiceOutput struct{ *pulumi.OutputState }

func (DataFlowTransformationLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataFlowTransformationLinkedService)(nil)).Elem()
}

func (o DataFlowTransformationLinkedServiceOutput) ToDataFlowTransformationLinkedServiceOutput() DataFlowTransformationLinkedServiceOutput {
	return o
}

func (o DataFlowTransformationLinkedServiceOutput) ToDataFlowTransformationLinkedServiceOutputWithContext(ctx context.Context) DataFlowTransformationLinkedServiceOutput {
	return o
}

func (o DataFlowTransformationLinkedServiceOutput) ToDataFlowTransformationLinkedServicePtrOutput() DataFlowTransformationLinkedServicePtrOutput {
	return o.ToDataFlowTransformationLinkedServicePtrOutputWithContext(context.Background())
}

func (o DataFlowTransformationLinkedServiceOutput) ToDataFlowTransformationLinkedServicePtrOutputWithContext(ctx context.Context) DataFlowTransformationLinkedServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataFlowTransformationLinkedService) *DataFlowTransformationLinkedService {
		return &v
	}).(DataFlowTransformationLinkedServicePtrOutput)
}

// The name for the Data Factory Linked Service.
func (o DataFlowTransformationLinkedServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataFlowTransformationLinkedService) string { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o DataFlowTransformationLinkedServiceOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataFlowTransformationLinkedService) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type DataFlowTransformationLinkedServicePtrOutput struct{ *pulumi.OutputState }

func (DataFlowTransformationLinkedServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFlowTransformationLinkedService)(nil)).Elem()
}

func (o DataFlowTransformationLinkedServicePtrOutput) ToDataFlowTransformationLinkedServicePtrOutput() DataFlowTransformationLinkedServicePtrOutput {
	return o
}

func (o DataFlowTransformationLinkedServicePtrOutput) ToDataFlowTransformationLinkedServicePtrOutputWithContext(ctx context.Context) DataFlowTransformationLinkedServicePtrOutput {
	return o
}

func (o DataFlowTransformationLinkedServicePtrOutput) Elem() DataFlowTransformationLinkedServiceOutput {
	return o.ApplyT(func(v *DataFlowTransformationLinkedService) DataFlowTransformationLinkedService {
		if v != nil {
			return *v
		}
		var ret DataFlowTransformationLinkedService
		return ret
	}).(DataFlowTransformationLinkedServiceOutput)
}

// The name for the Data Factory Linked Service.
func (o DataFlowTransformationLinkedServicePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataFlowTransformationLinkedService) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o DataFlowTransformationLinkedServicePtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataFlowTransformationLinkedService) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type DatasetAzureBlobSchemaColumn struct {
	// The description of the column.
	Description *string `pulumi:"description"`
	// The name of the column.
	Name string `pulumi:"name"`
	// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
	Type *string `pulumi:"type"`
}

// DatasetAzureBlobSchemaColumnInput is an input type that accepts DatasetAzureBlobSchemaColumnArgs and DatasetAzureBlobSchemaColumnOutput values.
// You can construct a concrete instance of `DatasetAzureBlobSchemaColumnInput` via:
//
//	DatasetAzureBlobSchemaColumnArgs{...}
type DatasetAzureBlobSchemaColumnInput interface {
	pulumi.Input

	ToDatasetAzureBlobSchemaColumnOutput() DatasetAzureBlobSchemaColumnOutput
	ToDatasetAzureBlobSchemaColumnOutputWithContext(context.Context) DatasetAzureBlobSchemaColumnOutput
}

type DatasetAzureBlobSchemaColumnArgs struct {
	// The description of the column.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the column.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DatasetAzureBlobSchemaColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetAzureBlobSchemaColumn)(nil)).Elem()
}

func (i DatasetAzureBlobSchemaColumnArgs) ToDatasetAzureBlobSchemaColumnOutput() DatasetAzureBlobSchemaColumnOutput {
	return i.ToDatasetAzureBlobSchemaColumnOutputWithContext(context.Background())
}

func (i DatasetAzureBlobSchemaColumnArgs) ToDatasetAzureBlobSchemaColumnOutputWithContext(ctx context.Context) DatasetAzureBlobSchemaColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetAzureBlobSchemaColumnOutput)
}

// DatasetAzureBlobSchemaColumnArrayInput is an input type that accepts DatasetAzureBlobSchemaColumnArray and DatasetAzureBlobSchemaColumnArrayOutput values.
// You can construct a concrete instance of `DatasetAzureBlobSchemaColumnArrayInput` via:
//
//	DatasetAzureBlobSchemaColumnArray{ DatasetAzureBlobSchemaColumnArgs{...} }
type DatasetAzureBlobSchemaColumnArrayInput interface {
	pulumi.Input

	ToDatasetAzureBlobSchemaColumnArrayOutput() DatasetAzureBlobSchemaColumnArrayOutput
	ToDatasetAzureBlobSchemaColumnArrayOutputWithContext(context.Context) DatasetAzureBlobSchemaColumnArrayOutput
}

type DatasetAzureBlobSchemaColumnArray []DatasetAzureBlobSchemaColumnInput

func (DatasetAzureBlobSchemaColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetAzureBlobSchemaColumn)(nil)).Elem()
}

func (i DatasetAzureBlobSchemaColumnArray) ToDatasetAzureBlobSchemaColumnArrayOutput() DatasetAzureBlobSchemaColumnArrayOutput {
	return i.ToDatasetAzureBlobSchemaColumnArrayOutputWithContext(context.Background())
}

func (i DatasetAzureBlobSchemaColumnArray) ToDatasetAzureBlobSchemaColumnArrayOutputWithContext(ctx context.Context) DatasetAzureBlobSchemaColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetAzureBlobSchemaColumnArrayOutput)
}

type DatasetAzureBlobSchemaColumnOutput struct{ *pulumi.OutputState }

func (DatasetAzureBlobSchemaColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetAzureBlobSchemaColumn)(nil)).Elem()
}

func (o DatasetAzureBlobSchemaColumnOutput) ToDatasetAzureBlobSchemaColumnOutput() DatasetAzureBlobSchemaColumnOutput {
	return o
}

func (o DatasetAzureBlobSchemaColumnOutput) ToDatasetAzureBlobSchemaColumnOutputWithContext(ctx context.Context) DatasetAzureBlobSchemaColumnOutput {
	return o
}

// The description of the column.
func (o DatasetAzureBlobSchemaColumnOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetAzureBlobSchemaColumn) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the column.
func (o DatasetAzureBlobSchemaColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetAzureBlobSchemaColumn) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
func (o DatasetAzureBlobSchemaColumnOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetAzureBlobSchemaColumn) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DatasetAzureBlobSchemaColumnArrayOutput struct{ *pulumi.OutputState }

func (DatasetAzureBlobSchemaColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetAzureBlobSchemaColumn)(nil)).Elem()
}

func (o DatasetAzureBlobSchemaColumnArrayOutput) ToDatasetAzureBlobSchemaColumnArrayOutput() DatasetAzureBlobSchemaColumnArrayOutput {
	return o
}

func (o DatasetAzureBlobSchemaColumnArrayOutput) ToDatasetAzureBlobSchemaColumnArrayOutputWithContext(ctx context.Context) DatasetAzureBlobSchemaColumnArrayOutput {
	return o
}

func (o DatasetAzureBlobSchemaColumnArrayOutput) Index(i pulumi.IntInput) DatasetAzureBlobSchemaColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetAzureBlobSchemaColumn {
		return vs[0].([]DatasetAzureBlobSchemaColumn)[vs[1].(int)]
	}).(DatasetAzureBlobSchemaColumnOutput)
}

type DatasetAzureSqlTableSchemaColumn struct {
	// The description of the column.
	Description *string `pulumi:"description"`
	// The name of the column.
	Name string `pulumi:"name"`
	// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
	Type *string `pulumi:"type"`
}

// DatasetAzureSqlTableSchemaColumnInput is an input type that accepts DatasetAzureSqlTableSchemaColumnArgs and DatasetAzureSqlTableSchemaColumnOutput values.
// You can construct a concrete instance of `DatasetAzureSqlTableSchemaColumnInput` via:
//
//	DatasetAzureSqlTableSchemaColumnArgs{...}
type DatasetAzureSqlTableSchemaColumnInput interface {
	pulumi.Input

	ToDatasetAzureSqlTableSchemaColumnOutput() DatasetAzureSqlTableSchemaColumnOutput
	ToDatasetAzureSqlTableSchemaColumnOutputWithContext(context.Context) DatasetAzureSqlTableSchemaColumnOutput
}

type DatasetAzureSqlTableSchemaColumnArgs struct {
	// The description of the column.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the column.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DatasetAzureSqlTableSchemaColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetAzureSqlTableSchemaColumn)(nil)).Elem()
}

func (i DatasetAzureSqlTableSchemaColumnArgs) ToDatasetAzureSqlTableSchemaColumnOutput() DatasetAzureSqlTableSchemaColumnOutput {
	return i.ToDatasetAzureSqlTableSchemaColumnOutputWithContext(context.Background())
}

func (i DatasetAzureSqlTableSchemaColumnArgs) ToDatasetAzureSqlTableSchemaColumnOutputWithContext(ctx context.Context) DatasetAzureSqlTableSchemaColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetAzureSqlTableSchemaColumnOutput)
}

// DatasetAzureSqlTableSchemaColumnArrayInput is an input type that accepts DatasetAzureSqlTableSchemaColumnArray and DatasetAzureSqlTableSchemaColumnArrayOutput values.
// You can construct a concrete instance of `DatasetAzureSqlTableSchemaColumnArrayInput` via:
//
//	DatasetAzureSqlTableSchemaColumnArray{ DatasetAzureSqlTableSchemaColumnArgs{...} }
type DatasetAzureSqlTableSchemaColumnArrayInput interface {
	pulumi.Input

	ToDatasetAzureSqlTableSchemaColumnArrayOutput() DatasetAzureSqlTableSchemaColumnArrayOutput
	ToDatasetAzureSqlTableSchemaColumnArrayOutputWithContext(context.Context) DatasetAzureSqlTableSchemaColumnArrayOutput
}

type DatasetAzureSqlTableSchemaColumnArray []DatasetAzureSqlTableSchemaColumnInput

func (DatasetAzureSqlTableSchemaColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetAzureSqlTableSchemaColumn)(nil)).Elem()
}

func (i DatasetAzureSqlTableSchemaColumnArray) ToDatasetAzureSqlTableSchemaColumnArrayOutput() DatasetAzureSqlTableSchemaColumnArrayOutput {
	return i.ToDatasetAzureSqlTableSchemaColumnArrayOutputWithContext(context.Background())
}

func (i DatasetAzureSqlTableSchemaColumnArray) ToDatasetAzureSqlTableSchemaColumnArrayOutputWithContext(ctx context.Context) DatasetAzureSqlTableSchemaColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetAzureSqlTableSchemaColumnArrayOutput)
}

type DatasetAzureSqlTableSchemaColumnOutput struct{ *pulumi.OutputState }

func (DatasetAzureSqlTableSchemaColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetAzureSqlTableSchemaColumn)(nil)).Elem()
}

func (o DatasetAzureSqlTableSchemaColumnOutput) ToDatasetAzureSqlTableSchemaColumnOutput() DatasetAzureSqlTableSchemaColumnOutput {
	return o
}

func (o DatasetAzureSqlTableSchemaColumnOutput) ToDatasetAzureSqlTableSchemaColumnOutputWithContext(ctx context.Context) DatasetAzureSqlTableSchemaColumnOutput {
	return o
}

// The description of the column.
func (o DatasetAzureSqlTableSchemaColumnOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetAzureSqlTableSchemaColumn) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the column.
func (o DatasetAzureSqlTableSchemaColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetAzureSqlTableSchemaColumn) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
func (o DatasetAzureSqlTableSchemaColumnOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetAzureSqlTableSchemaColumn) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DatasetAzureSqlTableSchemaColumnArrayOutput struct{ *pulumi.OutputState }

func (DatasetAzureSqlTableSchemaColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetAzureSqlTableSchemaColumn)(nil)).Elem()
}

func (o DatasetAzureSqlTableSchemaColumnArrayOutput) ToDatasetAzureSqlTableSchemaColumnArrayOutput() DatasetAzureSqlTableSchemaColumnArrayOutput {
	return o
}

func (o DatasetAzureSqlTableSchemaColumnArrayOutput) ToDatasetAzureSqlTableSchemaColumnArrayOutputWithContext(ctx context.Context) DatasetAzureSqlTableSchemaColumnArrayOutput {
	return o
}

func (o DatasetAzureSqlTableSchemaColumnArrayOutput) Index(i pulumi.IntInput) DatasetAzureSqlTableSchemaColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetAzureSqlTableSchemaColumn {
		return vs[0].([]DatasetAzureSqlTableSchemaColumn)[vs[1].(int)]
	}).(DatasetAzureSqlTableSchemaColumnOutput)
}

type DatasetBinaryAzureBlobStorageLocation struct {
	// The container on the Azure Blob Storage Account hosting the file.
	Container string `pulumi:"container"`
	// Is the `container` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicContainerEnabled *bool `pulumi:"dynamicContainerEnabled"`
	// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicFilenameEnabled *bool `pulumi:"dynamicFilenameEnabled"`
	// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicPathEnabled *bool `pulumi:"dynamicPathEnabled"`
	// The filename of the file in the blob container.
	Filename *string `pulumi:"filename"`
	// The folder path to the file in the blob container.
	Path *string `pulumi:"path"`
}

// DatasetBinaryAzureBlobStorageLocationInput is an input type that accepts DatasetBinaryAzureBlobStorageLocationArgs and DatasetBinaryAzureBlobStorageLocationOutput values.
// You can construct a concrete instance of `DatasetBinaryAzureBlobStorageLocationInput` via:
//
//	DatasetBinaryAzureBlobStorageLocationArgs{...}
type DatasetBinaryAzureBlobStorageLocationInput interface {
	pulumi.Input

	ToDatasetBinaryAzureBlobStorageLocationOutput() DatasetBinaryAzureBlobStorageLocationOutput
	ToDatasetBinaryAzureBlobStorageLocationOutputWithContext(context.Context) DatasetBinaryAzureBlobStorageLocationOutput
}

type DatasetBinaryAzureBlobStorageLocationArgs struct {
	// The container on the Azure Blob Storage Account hosting the file.
	Container pulumi.StringInput `pulumi:"container"`
	// Is the `container` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicContainerEnabled pulumi.BoolPtrInput `pulumi:"dynamicContainerEnabled"`
	// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicFilenameEnabled pulumi.BoolPtrInput `pulumi:"dynamicFilenameEnabled"`
	// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicPathEnabled pulumi.BoolPtrInput `pulumi:"dynamicPathEnabled"`
	// The filename of the file in the blob container.
	Filename pulumi.StringPtrInput `pulumi:"filename"`
	// The folder path to the file in the blob container.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (DatasetBinaryAzureBlobStorageLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetBinaryAzureBlobStorageLocation)(nil)).Elem()
}

func (i DatasetBinaryAzureBlobStorageLocationArgs) ToDatasetBinaryAzureBlobStorageLocationOutput() DatasetBinaryAzureBlobStorageLocationOutput {
	return i.ToDatasetBinaryAzureBlobStorageLocationOutputWithContext(context.Background())
}

func (i DatasetBinaryAzureBlobStorageLocationArgs) ToDatasetBinaryAzureBlobStorageLocationOutputWithContext(ctx context.Context) DatasetBinaryAzureBlobStorageLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetBinaryAzureBlobStorageLocationOutput)
}

func (i DatasetBinaryAzureBlobStorageLocationArgs) ToDatasetBinaryAzureBlobStorageLocationPtrOutput() DatasetBinaryAzureBlobStorageLocationPtrOutput {
	return i.ToDatasetBinaryAzureBlobStorageLocationPtrOutputWithContext(context.Background())
}

func (i DatasetBinaryAzureBlobStorageLocationArgs) ToDatasetBinaryAzureBlobStorageLocationPtrOutputWithContext(ctx context.Context) DatasetBinaryAzureBlobStorageLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetBinaryAzureBlobStorageLocationOutput).ToDatasetBinaryAzureBlobStorageLocationPtrOutputWithContext(ctx)
}

// DatasetBinaryAzureBlobStorageLocationPtrInput is an input type that accepts DatasetBinaryAzureBlobStorageLocationArgs, DatasetBinaryAzureBlobStorageLocationPtr and DatasetBinaryAzureBlobStorageLocationPtrOutput values.
// You can construct a concrete instance of `DatasetBinaryAzureBlobStorageLocationPtrInput` via:
//
//	        DatasetBinaryAzureBlobStorageLocationArgs{...}
//
//	or:
//
//	        nil
type DatasetBinaryAzureBlobStorageLocationPtrInput interface {
	pulumi.Input

	ToDatasetBinaryAzureBlobStorageLocationPtrOutput() DatasetBinaryAzureBlobStorageLocationPtrOutput
	ToDatasetBinaryAzureBlobStorageLocationPtrOutputWithContext(context.Context) DatasetBinaryAzureBlobStorageLocationPtrOutput
}

type datasetBinaryAzureBlobStorageLocationPtrType DatasetBinaryAzureBlobStorageLocationArgs

func DatasetBinaryAzureBlobStorageLocationPtr(v *DatasetBinaryAzureBlobStorageLocationArgs) DatasetBinaryAzureBlobStorageLocationPtrInput {
	return (*datasetBinaryAzureBlobStorageLocationPtrType)(v)
}

func (*datasetBinaryAzureBlobStorageLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetBinaryAzureBlobStorageLocation)(nil)).Elem()
}

func (i *datasetBinaryAzureBlobStorageLocationPtrType) ToDatasetBinaryAzureBlobStorageLocationPtrOutput() DatasetBinaryAzureBlobStorageLocationPtrOutput {
	return i.ToDatasetBinaryAzureBlobStorageLocationPtrOutputWithContext(context.Background())
}

func (i *datasetBinaryAzureBlobStorageLocationPtrType) ToDatasetBinaryAzureBlobStorageLocationPtrOutputWithContext(ctx context.Context) DatasetBinaryAzureBlobStorageLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetBinaryAzureBlobStorageLocationPtrOutput)
}

type DatasetBinaryAzureBlobStorageLocationOutput struct{ *pulumi.OutputState }

func (DatasetBinaryAzureBlobStorageLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetBinaryAzureBlobStorageLocation)(nil)).Elem()
}

func (o DatasetBinaryAzureBlobStorageLocationOutput) ToDatasetBinaryAzureBlobStorageLocationOutput() DatasetBinaryAzureBlobStorageLocationOutput {
	return o
}

func (o DatasetBinaryAzureBlobStorageLocationOutput) ToDatasetBinaryAzureBlobStorageLocationOutputWithContext(ctx context.Context) DatasetBinaryAzureBlobStorageLocationOutput {
	return o
}

func (o DatasetBinaryAzureBlobStorageLocationOutput) ToDatasetBinaryAzureBlobStorageLocationPtrOutput() DatasetBinaryAzureBlobStorageLocationPtrOutput {
	return o.ToDatasetBinaryAzureBlobStorageLocationPtrOutputWithContext(context.Background())
}

func (o DatasetBinaryAzureBlobStorageLocationOutput) ToDatasetBinaryAzureBlobStorageLocationPtrOutputWithContext(ctx context.Context) DatasetBinaryAzureBlobStorageLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetBinaryAzureBlobStorageLocation) *DatasetBinaryAzureBlobStorageLocation {
		return &v
	}).(DatasetBinaryAzureBlobStorageLocationPtrOutput)
}

// The container on the Azure Blob Storage Account hosting the file.
func (o DatasetBinaryAzureBlobStorageLocationOutput) Container() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetBinaryAzureBlobStorageLocation) string { return v.Container }).(pulumi.StringOutput)
}

// Is the `container` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetBinaryAzureBlobStorageLocationOutput) DynamicContainerEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetBinaryAzureBlobStorageLocation) *bool { return v.DynamicContainerEnabled }).(pulumi.BoolPtrOutput)
}

// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetBinaryAzureBlobStorageLocationOutput) DynamicFilenameEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetBinaryAzureBlobStorageLocation) *bool { return v.DynamicFilenameEnabled }).(pulumi.BoolPtrOutput)
}

// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetBinaryAzureBlobStorageLocationOutput) DynamicPathEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetBinaryAzureBlobStorageLocation) *bool { return v.DynamicPathEnabled }).(pulumi.BoolPtrOutput)
}

// The filename of the file in the blob container.
func (o DatasetBinaryAzureBlobStorageLocationOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetBinaryAzureBlobStorageLocation) *string { return v.Filename }).(pulumi.StringPtrOutput)
}

// The folder path to the file in the blob container.
func (o DatasetBinaryAzureBlobStorageLocationOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetBinaryAzureBlobStorageLocation) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type DatasetBinaryAzureBlobStorageLocationPtrOutput struct{ *pulumi.OutputState }

func (DatasetBinaryAzureBlobStorageLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetBinaryAzureBlobStorageLocation)(nil)).Elem()
}

func (o DatasetBinaryAzureBlobStorageLocationPtrOutput) ToDatasetBinaryAzureBlobStorageLocationPtrOutput() DatasetBinaryAzureBlobStorageLocationPtrOutput {
	return o
}

func (o DatasetBinaryAzureBlobStorageLocationPtrOutput) ToDatasetBinaryAzureBlobStorageLocationPtrOutputWithContext(ctx context.Context) DatasetBinaryAzureBlobStorageLocationPtrOutput {
	return o
}

func (o DatasetBinaryAzureBlobStorageLocationPtrOutput) Elem() DatasetBinaryAzureBlobStorageLocationOutput {
	return o.ApplyT(func(v *DatasetBinaryAzureBlobStorageLocation) DatasetBinaryAzureBlobStorageLocation {
		if v != nil {
			return *v
		}
		var ret DatasetBinaryAzureBlobStorageLocation
		return ret
	}).(DatasetBinaryAzureBlobStorageLocationOutput)
}

// The container on the Azure Blob Storage Account hosting the file.
func (o DatasetBinaryAzureBlobStorageLocationPtrOutput) Container() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetBinaryAzureBlobStorageLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Container
	}).(pulumi.StringPtrOutput)
}

// Is the `container` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetBinaryAzureBlobStorageLocationPtrOutput) DynamicContainerEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetBinaryAzureBlobStorageLocation) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicContainerEnabled
	}).(pulumi.BoolPtrOutput)
}

// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetBinaryAzureBlobStorageLocationPtrOutput) DynamicFilenameEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetBinaryAzureBlobStorageLocation) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicFilenameEnabled
	}).(pulumi.BoolPtrOutput)
}

// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetBinaryAzureBlobStorageLocationPtrOutput) DynamicPathEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetBinaryAzureBlobStorageLocation) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicPathEnabled
	}).(pulumi.BoolPtrOutput)
}

// The filename of the file in the blob container.
func (o DatasetBinaryAzureBlobStorageLocationPtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetBinaryAzureBlobStorageLocation) *string {
		if v == nil {
			return nil
		}
		return v.Filename
	}).(pulumi.StringPtrOutput)
}

// The folder path to the file in the blob container.
func (o DatasetBinaryAzureBlobStorageLocationPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetBinaryAzureBlobStorageLocation) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

type DatasetBinaryCompression struct {
	// The level of compression. Possible values are `Fastest` and `Optimal`.
	Level *string `pulumi:"level"`
	// The type of compression used during transport. Possible values are `BZip2`, `Deflate`, `GZip`, `Tar`, `TarGZip` and `ZipDeflate`.
	Type string `pulumi:"type"`
}

// DatasetBinaryCompressionInput is an input type that accepts DatasetBinaryCompressionArgs and DatasetBinaryCompressionOutput values.
// You can construct a concrete instance of `DatasetBinaryCompressionInput` via:
//
//	DatasetBinaryCompressionArgs{...}
type DatasetBinaryCompressionInput interface {
	pulumi.Input

	ToDatasetBinaryCompressionOutput() DatasetBinaryCompressionOutput
	ToDatasetBinaryCompressionOutputWithContext(context.Context) DatasetBinaryCompressionOutput
}

type DatasetBinaryCompressionArgs struct {
	// The level of compression. Possible values are `Fastest` and `Optimal`.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// The type of compression used during transport. Possible values are `BZip2`, `Deflate`, `GZip`, `Tar`, `TarGZip` and `ZipDeflate`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DatasetBinaryCompressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetBinaryCompression)(nil)).Elem()
}

func (i DatasetBinaryCompressionArgs) ToDatasetBinaryCompressionOutput() DatasetBinaryCompressionOutput {
	return i.ToDatasetBinaryCompressionOutputWithContext(context.Background())
}

func (i DatasetBinaryCompressionArgs) ToDatasetBinaryCompressionOutputWithContext(ctx context.Context) DatasetBinaryCompressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetBinaryCompressionOutput)
}

func (i DatasetBinaryCompressionArgs) ToDatasetBinaryCompressionPtrOutput() DatasetBinaryCompressionPtrOutput {
	return i.ToDatasetBinaryCompressionPtrOutputWithContext(context.Background())
}

func (i DatasetBinaryCompressionArgs) ToDatasetBinaryCompressionPtrOutputWithContext(ctx context.Context) DatasetBinaryCompressionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetBinaryCompressionOutput).ToDatasetBinaryCompressionPtrOutputWithContext(ctx)
}

// DatasetBinaryCompressionPtrInput is an input type that accepts DatasetBinaryCompressionArgs, DatasetBinaryCompressionPtr and DatasetBinaryCompressionPtrOutput values.
// You can construct a concrete instance of `DatasetBinaryCompressionPtrInput` via:
//
//	        DatasetBinaryCompressionArgs{...}
//
//	or:
//
//	        nil
type DatasetBinaryCompressionPtrInput interface {
	pulumi.Input

	ToDatasetBinaryCompressionPtrOutput() DatasetBinaryCompressionPtrOutput
	ToDatasetBinaryCompressionPtrOutputWithContext(context.Context) DatasetBinaryCompressionPtrOutput
}

type datasetBinaryCompressionPtrType DatasetBinaryCompressionArgs

func DatasetBinaryCompressionPtr(v *DatasetBinaryCompressionArgs) DatasetBinaryCompressionPtrInput {
	return (*datasetBinaryCompressionPtrType)(v)
}

func (*datasetBinaryCompressionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetBinaryCompression)(nil)).Elem()
}

func (i *datasetBinaryCompressionPtrType) ToDatasetBinaryCompressionPtrOutput() DatasetBinaryCompressionPtrOutput {
	return i.ToDatasetBinaryCompressionPtrOutputWithContext(context.Background())
}

func (i *datasetBinaryCompressionPtrType) ToDatasetBinaryCompressionPtrOutputWithContext(ctx context.Context) DatasetBinaryCompressionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetBinaryCompressionPtrOutput)
}

type DatasetBinaryCompressionOutput struct{ *pulumi.OutputState }

func (DatasetBinaryCompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetBinaryCompression)(nil)).Elem()
}

func (o DatasetBinaryCompressionOutput) ToDatasetBinaryCompressionOutput() DatasetBinaryCompressionOutput {
	return o
}

func (o DatasetBinaryCompressionOutput) ToDatasetBinaryCompressionOutputWithContext(ctx context.Context) DatasetBinaryCompressionOutput {
	return o
}

func (o DatasetBinaryCompressionOutput) ToDatasetBinaryCompressionPtrOutput() DatasetBinaryCompressionPtrOutput {
	return o.ToDatasetBinaryCompressionPtrOutputWithContext(context.Background())
}

func (o DatasetBinaryCompressionOutput) ToDatasetBinaryCompressionPtrOutputWithContext(ctx context.Context) DatasetBinaryCompressionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetBinaryCompression) *DatasetBinaryCompression {
		return &v
	}).(DatasetBinaryCompressionPtrOutput)
}

// The level of compression. Possible values are `Fastest` and `Optimal`.
func (o DatasetBinaryCompressionOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetBinaryCompression) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// The type of compression used during transport. Possible values are `BZip2`, `Deflate`, `GZip`, `Tar`, `TarGZip` and `ZipDeflate`.
func (o DatasetBinaryCompressionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetBinaryCompression) string { return v.Type }).(pulumi.StringOutput)
}

type DatasetBinaryCompressionPtrOutput struct{ *pulumi.OutputState }

func (DatasetBinaryCompressionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetBinaryCompression)(nil)).Elem()
}

func (o DatasetBinaryCompressionPtrOutput) ToDatasetBinaryCompressionPtrOutput() DatasetBinaryCompressionPtrOutput {
	return o
}

func (o DatasetBinaryCompressionPtrOutput) ToDatasetBinaryCompressionPtrOutputWithContext(ctx context.Context) DatasetBinaryCompressionPtrOutput {
	return o
}

func (o DatasetBinaryCompressionPtrOutput) Elem() DatasetBinaryCompressionOutput {
	return o.ApplyT(func(v *DatasetBinaryCompression) DatasetBinaryCompression {
		if v != nil {
			return *v
		}
		var ret DatasetBinaryCompression
		return ret
	}).(DatasetBinaryCompressionOutput)
}

// The level of compression. Possible values are `Fastest` and `Optimal`.
func (o DatasetBinaryCompressionPtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetBinaryCompression) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// The type of compression used during transport. Possible values are `BZip2`, `Deflate`, `GZip`, `Tar`, `TarGZip` and `ZipDeflate`.
func (o DatasetBinaryCompressionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetBinaryCompression) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type DatasetBinaryHttpServerLocation struct {
	// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicFilenameEnabled *bool `pulumi:"dynamicFilenameEnabled"`
	// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicPathEnabled *bool `pulumi:"dynamicPathEnabled"`
	// The filename of the file on the web server.
	Filename string `pulumi:"filename"`
	// The folder path to the file on the web server.
	Path string `pulumi:"path"`
	// The base URL to the web server hosting the file.
	RelativeUrl string `pulumi:"relativeUrl"`
}

// DatasetBinaryHttpServerLocationInput is an input type that accepts DatasetBinaryHttpServerLocationArgs and DatasetBinaryHttpServerLocationOutput values.
// You can construct a concrete instance of `DatasetBinaryHttpServerLocationInput` via:
//
//	DatasetBinaryHttpServerLocationArgs{...}
type DatasetBinaryHttpServerLocationInput interface {
	pulumi.Input

	ToDatasetBinaryHttpServerLocationOutput() DatasetBinaryHttpServerLocationOutput
	ToDatasetBinaryHttpServerLocationOutputWithContext(context.Context) DatasetBinaryHttpServerLocationOutput
}

type DatasetBinaryHttpServerLocationArgs struct {
	// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicFilenameEnabled pulumi.BoolPtrInput `pulumi:"dynamicFilenameEnabled"`
	// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicPathEnabled pulumi.BoolPtrInput `pulumi:"dynamicPathEnabled"`
	// The filename of the file on the web server.
	Filename pulumi.StringInput `pulumi:"filename"`
	// The folder path to the file on the web server.
	Path pulumi.StringInput `pulumi:"path"`
	// The base URL to the web server hosting the file.
	RelativeUrl pulumi.StringInput `pulumi:"relativeUrl"`
}

func (DatasetBinaryHttpServerLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetBinaryHttpServerLocation)(nil)).Elem()
}

func (i DatasetBinaryHttpServerLocationArgs) ToDatasetBinaryHttpServerLocationOutput() DatasetBinaryHttpServerLocationOutput {
	return i.ToDatasetBinaryHttpServerLocationOutputWithContext(context.Background())
}

func (i DatasetBinaryHttpServerLocationArgs) ToDatasetBinaryHttpServerLocationOutputWithContext(ctx context.Context) DatasetBinaryHttpServerLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetBinaryHttpServerLocationOutput)
}

func (i DatasetBinaryHttpServerLocationArgs) ToDatasetBinaryHttpServerLocationPtrOutput() DatasetBinaryHttpServerLocationPtrOutput {
	return i.ToDatasetBinaryHttpServerLocationPtrOutputWithContext(context.Background())
}

func (i DatasetBinaryHttpServerLocationArgs) ToDatasetBinaryHttpServerLocationPtrOutputWithContext(ctx context.Context) DatasetBinaryHttpServerLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetBinaryHttpServerLocationOutput).ToDatasetBinaryHttpServerLocationPtrOutputWithContext(ctx)
}

// DatasetBinaryHttpServerLocationPtrInput is an input type that accepts DatasetBinaryHttpServerLocationArgs, DatasetBinaryHttpServerLocationPtr and DatasetBinaryHttpServerLocationPtrOutput values.
// You can construct a concrete instance of `DatasetBinaryHttpServerLocationPtrInput` via:
//
//	        DatasetBinaryHttpServerLocationArgs{...}
//
//	or:
//
//	        nil
type DatasetBinaryHttpServerLocationPtrInput interface {
	pulumi.Input

	ToDatasetBinaryHttpServerLocationPtrOutput() DatasetBinaryHttpServerLocationPtrOutput
	ToDatasetBinaryHttpServerLocationPtrOutputWithContext(context.Context) DatasetBinaryHttpServerLocationPtrOutput
}

type datasetBinaryHttpServerLocationPtrType DatasetBinaryHttpServerLocationArgs

func DatasetBinaryHttpServerLocationPtr(v *DatasetBinaryHttpServerLocationArgs) DatasetBinaryHttpServerLocationPtrInput {
	return (*datasetBinaryHttpServerLocationPtrType)(v)
}

func (*datasetBinaryHttpServerLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetBinaryHttpServerLocation)(nil)).Elem()
}

func (i *datasetBinaryHttpServerLocationPtrType) ToDatasetBinaryHttpServerLocationPtrOutput() DatasetBinaryHttpServerLocationPtrOutput {
	return i.ToDatasetBinaryHttpServerLocationPtrOutputWithContext(context.Background())
}

func (i *datasetBinaryHttpServerLocationPtrType) ToDatasetBinaryHttpServerLocationPtrOutputWithContext(ctx context.Context) DatasetBinaryHttpServerLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetBinaryHttpServerLocationPtrOutput)
}

type DatasetBinaryHttpServerLocationOutput struct{ *pulumi.OutputState }

func (DatasetBinaryHttpServerLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetBinaryHttpServerLocation)(nil)).Elem()
}

func (o DatasetBinaryHttpServerLocationOutput) ToDatasetBinaryHttpServerLocationOutput() DatasetBinaryHttpServerLocationOutput {
	return o
}

func (o DatasetBinaryHttpServerLocationOutput) ToDatasetBinaryHttpServerLocationOutputWithContext(ctx context.Context) DatasetBinaryHttpServerLocationOutput {
	return o
}

func (o DatasetBinaryHttpServerLocationOutput) ToDatasetBinaryHttpServerLocationPtrOutput() DatasetBinaryHttpServerLocationPtrOutput {
	return o.ToDatasetBinaryHttpServerLocationPtrOutputWithContext(context.Background())
}

func (o DatasetBinaryHttpServerLocationOutput) ToDatasetBinaryHttpServerLocationPtrOutputWithContext(ctx context.Context) DatasetBinaryHttpServerLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetBinaryHttpServerLocation) *DatasetBinaryHttpServerLocation {
		return &v
	}).(DatasetBinaryHttpServerLocationPtrOutput)
}

// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetBinaryHttpServerLocationOutput) DynamicFilenameEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetBinaryHttpServerLocation) *bool { return v.DynamicFilenameEnabled }).(pulumi.BoolPtrOutput)
}

// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetBinaryHttpServerLocationOutput) DynamicPathEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetBinaryHttpServerLocation) *bool { return v.DynamicPathEnabled }).(pulumi.BoolPtrOutput)
}

// The filename of the file on the web server.
func (o DatasetBinaryHttpServerLocationOutput) Filename() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetBinaryHttpServerLocation) string { return v.Filename }).(pulumi.StringOutput)
}

// The folder path to the file on the web server.
func (o DatasetBinaryHttpServerLocationOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetBinaryHttpServerLocation) string { return v.Path }).(pulumi.StringOutput)
}

// The base URL to the web server hosting the file.
func (o DatasetBinaryHttpServerLocationOutput) RelativeUrl() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetBinaryHttpServerLocation) string { return v.RelativeUrl }).(pulumi.StringOutput)
}

type DatasetBinaryHttpServerLocationPtrOutput struct{ *pulumi.OutputState }

func (DatasetBinaryHttpServerLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetBinaryHttpServerLocation)(nil)).Elem()
}

func (o DatasetBinaryHttpServerLocationPtrOutput) ToDatasetBinaryHttpServerLocationPtrOutput() DatasetBinaryHttpServerLocationPtrOutput {
	return o
}

func (o DatasetBinaryHttpServerLocationPtrOutput) ToDatasetBinaryHttpServerLocationPtrOutputWithContext(ctx context.Context) DatasetBinaryHttpServerLocationPtrOutput {
	return o
}

func (o DatasetBinaryHttpServerLocationPtrOutput) Elem() DatasetBinaryHttpServerLocationOutput {
	return o.ApplyT(func(v *DatasetBinaryHttpServerLocation) DatasetBinaryHttpServerLocation {
		if v != nil {
			return *v
		}
		var ret DatasetBinaryHttpServerLocation
		return ret
	}).(DatasetBinaryHttpServerLocationOutput)
}

// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetBinaryHttpServerLocationPtrOutput) DynamicFilenameEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetBinaryHttpServerLocation) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicFilenameEnabled
	}).(pulumi.BoolPtrOutput)
}

// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetBinaryHttpServerLocationPtrOutput) DynamicPathEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetBinaryHttpServerLocation) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicPathEnabled
	}).(pulumi.BoolPtrOutput)
}

// The filename of the file on the web server.
func (o DatasetBinaryHttpServerLocationPtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetBinaryHttpServerLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Filename
	}).(pulumi.StringPtrOutput)
}

// The folder path to the file on the web server.
func (o DatasetBinaryHttpServerLocationPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetBinaryHttpServerLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// The base URL to the web server hosting the file.
func (o DatasetBinaryHttpServerLocationPtrOutput) RelativeUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetBinaryHttpServerLocation) *string {
		if v == nil {
			return nil
		}
		return &v.RelativeUrl
	}).(pulumi.StringPtrOutput)
}

type DatasetBinarySftpServerLocation struct {
	// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicFilenameEnabled *bool `pulumi:"dynamicFilenameEnabled"`
	// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicPathEnabled *bool `pulumi:"dynamicPathEnabled"`
	// The filename of the file on the SFTP server.
	Filename string `pulumi:"filename"`
	// The folder path to the file on the SFTP server.
	Path string `pulumi:"path"`
}

// DatasetBinarySftpServerLocationInput is an input type that accepts DatasetBinarySftpServerLocationArgs and DatasetBinarySftpServerLocationOutput values.
// You can construct a concrete instance of `DatasetBinarySftpServerLocationInput` via:
//
//	DatasetBinarySftpServerLocationArgs{...}
type DatasetBinarySftpServerLocationInput interface {
	pulumi.Input

	ToDatasetBinarySftpServerLocationOutput() DatasetBinarySftpServerLocationOutput
	ToDatasetBinarySftpServerLocationOutputWithContext(context.Context) DatasetBinarySftpServerLocationOutput
}

type DatasetBinarySftpServerLocationArgs struct {
	// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicFilenameEnabled pulumi.BoolPtrInput `pulumi:"dynamicFilenameEnabled"`
	// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicPathEnabled pulumi.BoolPtrInput `pulumi:"dynamicPathEnabled"`
	// The filename of the file on the SFTP server.
	Filename pulumi.StringInput `pulumi:"filename"`
	// The folder path to the file on the SFTP server.
	Path pulumi.StringInput `pulumi:"path"`
}

func (DatasetBinarySftpServerLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetBinarySftpServerLocation)(nil)).Elem()
}

func (i DatasetBinarySftpServerLocationArgs) ToDatasetBinarySftpServerLocationOutput() DatasetBinarySftpServerLocationOutput {
	return i.ToDatasetBinarySftpServerLocationOutputWithContext(context.Background())
}

func (i DatasetBinarySftpServerLocationArgs) ToDatasetBinarySftpServerLocationOutputWithContext(ctx context.Context) DatasetBinarySftpServerLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetBinarySftpServerLocationOutput)
}

func (i DatasetBinarySftpServerLocationArgs) ToDatasetBinarySftpServerLocationPtrOutput() DatasetBinarySftpServerLocationPtrOutput {
	return i.ToDatasetBinarySftpServerLocationPtrOutputWithContext(context.Background())
}

func (i DatasetBinarySftpServerLocationArgs) ToDatasetBinarySftpServerLocationPtrOutputWithContext(ctx context.Context) DatasetBinarySftpServerLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetBinarySftpServerLocationOutput).ToDatasetBinarySftpServerLocationPtrOutputWithContext(ctx)
}

// DatasetBinarySftpServerLocationPtrInput is an input type that accepts DatasetBinarySftpServerLocationArgs, DatasetBinarySftpServerLocationPtr and DatasetBinarySftpServerLocationPtrOutput values.
// You can construct a concrete instance of `DatasetBinarySftpServerLocationPtrInput` via:
//
//	        DatasetBinarySftpServerLocationArgs{...}
//
//	or:
//
//	        nil
type DatasetBinarySftpServerLocationPtrInput interface {
	pulumi.Input

	ToDatasetBinarySftpServerLocationPtrOutput() DatasetBinarySftpServerLocationPtrOutput
	ToDatasetBinarySftpServerLocationPtrOutputWithContext(context.Context) DatasetBinarySftpServerLocationPtrOutput
}

type datasetBinarySftpServerLocationPtrType DatasetBinarySftpServerLocationArgs

func DatasetBinarySftpServerLocationPtr(v *DatasetBinarySftpServerLocationArgs) DatasetBinarySftpServerLocationPtrInput {
	return (*datasetBinarySftpServerLocationPtrType)(v)
}

func (*datasetBinarySftpServerLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetBinarySftpServerLocation)(nil)).Elem()
}

func (i *datasetBinarySftpServerLocationPtrType) ToDatasetBinarySftpServerLocationPtrOutput() DatasetBinarySftpServerLocationPtrOutput {
	return i.ToDatasetBinarySftpServerLocationPtrOutputWithContext(context.Background())
}

func (i *datasetBinarySftpServerLocationPtrType) ToDatasetBinarySftpServerLocationPtrOutputWithContext(ctx context.Context) DatasetBinarySftpServerLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetBinarySftpServerLocationPtrOutput)
}

type DatasetBinarySftpServerLocationOutput struct{ *pulumi.OutputState }

func (DatasetBinarySftpServerLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetBinarySftpServerLocation)(nil)).Elem()
}

func (o DatasetBinarySftpServerLocationOutput) ToDatasetBinarySftpServerLocationOutput() DatasetBinarySftpServerLocationOutput {
	return o
}

func (o DatasetBinarySftpServerLocationOutput) ToDatasetBinarySftpServerLocationOutputWithContext(ctx context.Context) DatasetBinarySftpServerLocationOutput {
	return o
}

func (o DatasetBinarySftpServerLocationOutput) ToDatasetBinarySftpServerLocationPtrOutput() DatasetBinarySftpServerLocationPtrOutput {
	return o.ToDatasetBinarySftpServerLocationPtrOutputWithContext(context.Background())
}

func (o DatasetBinarySftpServerLocationOutput) ToDatasetBinarySftpServerLocationPtrOutputWithContext(ctx context.Context) DatasetBinarySftpServerLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetBinarySftpServerLocation) *DatasetBinarySftpServerLocation {
		return &v
	}).(DatasetBinarySftpServerLocationPtrOutput)
}

// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetBinarySftpServerLocationOutput) DynamicFilenameEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetBinarySftpServerLocation) *bool { return v.DynamicFilenameEnabled }).(pulumi.BoolPtrOutput)
}

// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetBinarySftpServerLocationOutput) DynamicPathEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetBinarySftpServerLocation) *bool { return v.DynamicPathEnabled }).(pulumi.BoolPtrOutput)
}

// The filename of the file on the SFTP server.
func (o DatasetBinarySftpServerLocationOutput) Filename() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetBinarySftpServerLocation) string { return v.Filename }).(pulumi.StringOutput)
}

// The folder path to the file on the SFTP server.
func (o DatasetBinarySftpServerLocationOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetBinarySftpServerLocation) string { return v.Path }).(pulumi.StringOutput)
}

type DatasetBinarySftpServerLocationPtrOutput struct{ *pulumi.OutputState }

func (DatasetBinarySftpServerLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetBinarySftpServerLocation)(nil)).Elem()
}

func (o DatasetBinarySftpServerLocationPtrOutput) ToDatasetBinarySftpServerLocationPtrOutput() DatasetBinarySftpServerLocationPtrOutput {
	return o
}

func (o DatasetBinarySftpServerLocationPtrOutput) ToDatasetBinarySftpServerLocationPtrOutputWithContext(ctx context.Context) DatasetBinarySftpServerLocationPtrOutput {
	return o
}

func (o DatasetBinarySftpServerLocationPtrOutput) Elem() DatasetBinarySftpServerLocationOutput {
	return o.ApplyT(func(v *DatasetBinarySftpServerLocation) DatasetBinarySftpServerLocation {
		if v != nil {
			return *v
		}
		var ret DatasetBinarySftpServerLocation
		return ret
	}).(DatasetBinarySftpServerLocationOutput)
}

// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetBinarySftpServerLocationPtrOutput) DynamicFilenameEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetBinarySftpServerLocation) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicFilenameEnabled
	}).(pulumi.BoolPtrOutput)
}

// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetBinarySftpServerLocationPtrOutput) DynamicPathEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetBinarySftpServerLocation) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicPathEnabled
	}).(pulumi.BoolPtrOutput)
}

// The filename of the file on the SFTP server.
func (o DatasetBinarySftpServerLocationPtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetBinarySftpServerLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Filename
	}).(pulumi.StringPtrOutput)
}

// The folder path to the file on the SFTP server.
func (o DatasetBinarySftpServerLocationPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetBinarySftpServerLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

type DatasetCosmosDBApiSchemaColumn struct {
	// The description of the column.
	Description *string `pulumi:"description"`
	// The name of the column.
	Name string `pulumi:"name"`
	// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
	Type *string `pulumi:"type"`
}

// DatasetCosmosDBApiSchemaColumnInput is an input type that accepts DatasetCosmosDBApiSchemaColumnArgs and DatasetCosmosDBApiSchemaColumnOutput values.
// You can construct a concrete instance of `DatasetCosmosDBApiSchemaColumnInput` via:
//
//	DatasetCosmosDBApiSchemaColumnArgs{...}
type DatasetCosmosDBApiSchemaColumnInput interface {
	pulumi.Input

	ToDatasetCosmosDBApiSchemaColumnOutput() DatasetCosmosDBApiSchemaColumnOutput
	ToDatasetCosmosDBApiSchemaColumnOutputWithContext(context.Context) DatasetCosmosDBApiSchemaColumnOutput
}

type DatasetCosmosDBApiSchemaColumnArgs struct {
	// The description of the column.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the column.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DatasetCosmosDBApiSchemaColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetCosmosDBApiSchemaColumn)(nil)).Elem()
}

func (i DatasetCosmosDBApiSchemaColumnArgs) ToDatasetCosmosDBApiSchemaColumnOutput() DatasetCosmosDBApiSchemaColumnOutput {
	return i.ToDatasetCosmosDBApiSchemaColumnOutputWithContext(context.Background())
}

func (i DatasetCosmosDBApiSchemaColumnArgs) ToDatasetCosmosDBApiSchemaColumnOutputWithContext(ctx context.Context) DatasetCosmosDBApiSchemaColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetCosmosDBApiSchemaColumnOutput)
}

// DatasetCosmosDBApiSchemaColumnArrayInput is an input type that accepts DatasetCosmosDBApiSchemaColumnArray and DatasetCosmosDBApiSchemaColumnArrayOutput values.
// You can construct a concrete instance of `DatasetCosmosDBApiSchemaColumnArrayInput` via:
//
//	DatasetCosmosDBApiSchemaColumnArray{ DatasetCosmosDBApiSchemaColumnArgs{...} }
type DatasetCosmosDBApiSchemaColumnArrayInput interface {
	pulumi.Input

	ToDatasetCosmosDBApiSchemaColumnArrayOutput() DatasetCosmosDBApiSchemaColumnArrayOutput
	ToDatasetCosmosDBApiSchemaColumnArrayOutputWithContext(context.Context) DatasetCosmosDBApiSchemaColumnArrayOutput
}

type DatasetCosmosDBApiSchemaColumnArray []DatasetCosmosDBApiSchemaColumnInput

func (DatasetCosmosDBApiSchemaColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetCosmosDBApiSchemaColumn)(nil)).Elem()
}

func (i DatasetCosmosDBApiSchemaColumnArray) ToDatasetCosmosDBApiSchemaColumnArrayOutput() DatasetCosmosDBApiSchemaColumnArrayOutput {
	return i.ToDatasetCosmosDBApiSchemaColumnArrayOutputWithContext(context.Background())
}

func (i DatasetCosmosDBApiSchemaColumnArray) ToDatasetCosmosDBApiSchemaColumnArrayOutputWithContext(ctx context.Context) DatasetCosmosDBApiSchemaColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetCosmosDBApiSchemaColumnArrayOutput)
}

type DatasetCosmosDBApiSchemaColumnOutput struct{ *pulumi.OutputState }

func (DatasetCosmosDBApiSchemaColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetCosmosDBApiSchemaColumn)(nil)).Elem()
}

func (o DatasetCosmosDBApiSchemaColumnOutput) ToDatasetCosmosDBApiSchemaColumnOutput() DatasetCosmosDBApiSchemaColumnOutput {
	return o
}

func (o DatasetCosmosDBApiSchemaColumnOutput) ToDatasetCosmosDBApiSchemaColumnOutputWithContext(ctx context.Context) DatasetCosmosDBApiSchemaColumnOutput {
	return o
}

// The description of the column.
func (o DatasetCosmosDBApiSchemaColumnOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetCosmosDBApiSchemaColumn) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the column.
func (o DatasetCosmosDBApiSchemaColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetCosmosDBApiSchemaColumn) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
func (o DatasetCosmosDBApiSchemaColumnOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetCosmosDBApiSchemaColumn) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DatasetCosmosDBApiSchemaColumnArrayOutput struct{ *pulumi.OutputState }

func (DatasetCosmosDBApiSchemaColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetCosmosDBApiSchemaColumn)(nil)).Elem()
}

func (o DatasetCosmosDBApiSchemaColumnArrayOutput) ToDatasetCosmosDBApiSchemaColumnArrayOutput() DatasetCosmosDBApiSchemaColumnArrayOutput {
	return o
}

func (o DatasetCosmosDBApiSchemaColumnArrayOutput) ToDatasetCosmosDBApiSchemaColumnArrayOutputWithContext(ctx context.Context) DatasetCosmosDBApiSchemaColumnArrayOutput {
	return o
}

func (o DatasetCosmosDBApiSchemaColumnArrayOutput) Index(i pulumi.IntInput) DatasetCosmosDBApiSchemaColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetCosmosDBApiSchemaColumn {
		return vs[0].([]DatasetCosmosDBApiSchemaColumn)[vs[1].(int)]
	}).(DatasetCosmosDBApiSchemaColumnOutput)
}

type DatasetDelimitedTextAzureBlobFsLocation struct {
	// Is the `fileSystem` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicFileSystemEnabled *bool `pulumi:"dynamicFileSystemEnabled"`
	// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicFilenameEnabled *bool `pulumi:"dynamicFilenameEnabled"`
	// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicPathEnabled *bool `pulumi:"dynamicPathEnabled"`
	// The storage data lake gen2 file system on the Azure Blob Storage Account hosting the file.
	FileSystem *string `pulumi:"fileSystem"`
	// The filename of the file.
	Filename *string `pulumi:"filename"`
	// The folder path to the file.
	Path *string `pulumi:"path"`
}

// DatasetDelimitedTextAzureBlobFsLocationInput is an input type that accepts DatasetDelimitedTextAzureBlobFsLocationArgs and DatasetDelimitedTextAzureBlobFsLocationOutput values.
// You can construct a concrete instance of `DatasetDelimitedTextAzureBlobFsLocationInput` via:
//
//	DatasetDelimitedTextAzureBlobFsLocationArgs{...}
type DatasetDelimitedTextAzureBlobFsLocationInput interface {
	pulumi.Input

	ToDatasetDelimitedTextAzureBlobFsLocationOutput() DatasetDelimitedTextAzureBlobFsLocationOutput
	ToDatasetDelimitedTextAzureBlobFsLocationOutputWithContext(context.Context) DatasetDelimitedTextAzureBlobFsLocationOutput
}

type DatasetDelimitedTextAzureBlobFsLocationArgs struct {
	// Is the `fileSystem` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicFileSystemEnabled pulumi.BoolPtrInput `pulumi:"dynamicFileSystemEnabled"`
	// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicFilenameEnabled pulumi.BoolPtrInput `pulumi:"dynamicFilenameEnabled"`
	// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicPathEnabled pulumi.BoolPtrInput `pulumi:"dynamicPathEnabled"`
	// The storage data lake gen2 file system on the Azure Blob Storage Account hosting the file.
	FileSystem pulumi.StringPtrInput `pulumi:"fileSystem"`
	// The filename of the file.
	Filename pulumi.StringPtrInput `pulumi:"filename"`
	// The folder path to the file.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (DatasetDelimitedTextAzureBlobFsLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetDelimitedTextAzureBlobFsLocation)(nil)).Elem()
}

func (i DatasetDelimitedTextAzureBlobFsLocationArgs) ToDatasetDelimitedTextAzureBlobFsLocationOutput() DatasetDelimitedTextAzureBlobFsLocationOutput {
	return i.ToDatasetDelimitedTextAzureBlobFsLocationOutputWithContext(context.Background())
}

func (i DatasetDelimitedTextAzureBlobFsLocationArgs) ToDatasetDelimitedTextAzureBlobFsLocationOutputWithContext(ctx context.Context) DatasetDelimitedTextAzureBlobFsLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetDelimitedTextAzureBlobFsLocationOutput)
}

func (i DatasetDelimitedTextAzureBlobFsLocationArgs) ToDatasetDelimitedTextAzureBlobFsLocationPtrOutput() DatasetDelimitedTextAzureBlobFsLocationPtrOutput {
	return i.ToDatasetDelimitedTextAzureBlobFsLocationPtrOutputWithContext(context.Background())
}

func (i DatasetDelimitedTextAzureBlobFsLocationArgs) ToDatasetDelimitedTextAzureBlobFsLocationPtrOutputWithContext(ctx context.Context) DatasetDelimitedTextAzureBlobFsLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetDelimitedTextAzureBlobFsLocationOutput).ToDatasetDelimitedTextAzureBlobFsLocationPtrOutputWithContext(ctx)
}

// DatasetDelimitedTextAzureBlobFsLocationPtrInput is an input type that accepts DatasetDelimitedTextAzureBlobFsLocationArgs, DatasetDelimitedTextAzureBlobFsLocationPtr and DatasetDelimitedTextAzureBlobFsLocationPtrOutput values.
// You can construct a concrete instance of `DatasetDelimitedTextAzureBlobFsLocationPtrInput` via:
//
//	        DatasetDelimitedTextAzureBlobFsLocationArgs{...}
//
//	or:
//
//	        nil
type DatasetDelimitedTextAzureBlobFsLocationPtrInput interface {
	pulumi.Input

	ToDatasetDelimitedTextAzureBlobFsLocationPtrOutput() DatasetDelimitedTextAzureBlobFsLocationPtrOutput
	ToDatasetDelimitedTextAzureBlobFsLocationPtrOutputWithContext(context.Context) DatasetDelimitedTextAzureBlobFsLocationPtrOutput
}

type datasetDelimitedTextAzureBlobFsLocationPtrType DatasetDelimitedTextAzureBlobFsLocationArgs

func DatasetDelimitedTextAzureBlobFsLocationPtr(v *DatasetDelimitedTextAzureBlobFsLocationArgs) DatasetDelimitedTextAzureBlobFsLocationPtrInput {
	return (*datasetDelimitedTextAzureBlobFsLocationPtrType)(v)
}

func (*datasetDelimitedTextAzureBlobFsLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetDelimitedTextAzureBlobFsLocation)(nil)).Elem()
}

func (i *datasetDelimitedTextAzureBlobFsLocationPtrType) ToDatasetDelimitedTextAzureBlobFsLocationPtrOutput() DatasetDelimitedTextAzureBlobFsLocationPtrOutput {
	return i.ToDatasetDelimitedTextAzureBlobFsLocationPtrOutputWithContext(context.Background())
}

func (i *datasetDelimitedTextAzureBlobFsLocationPtrType) ToDatasetDelimitedTextAzureBlobFsLocationPtrOutputWithContext(ctx context.Context) DatasetDelimitedTextAzureBlobFsLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetDelimitedTextAzureBlobFsLocationPtrOutput)
}

type DatasetDelimitedTextAzureBlobFsLocationOutput struct{ *pulumi.OutputState }

func (DatasetDelimitedTextAzureBlobFsLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetDelimitedTextAzureBlobFsLocation)(nil)).Elem()
}

func (o DatasetDelimitedTextAzureBlobFsLocationOutput) ToDatasetDelimitedTextAzureBlobFsLocationOutput() DatasetDelimitedTextAzureBlobFsLocationOutput {
	return o
}

func (o DatasetDelimitedTextAzureBlobFsLocationOutput) ToDatasetDelimitedTextAzureBlobFsLocationOutputWithContext(ctx context.Context) DatasetDelimitedTextAzureBlobFsLocationOutput {
	return o
}

func (o DatasetDelimitedTextAzureBlobFsLocationOutput) ToDatasetDelimitedTextAzureBlobFsLocationPtrOutput() DatasetDelimitedTextAzureBlobFsLocationPtrOutput {
	return o.ToDatasetDelimitedTextAzureBlobFsLocationPtrOutputWithContext(context.Background())
}

func (o DatasetDelimitedTextAzureBlobFsLocationOutput) ToDatasetDelimitedTextAzureBlobFsLocationPtrOutputWithContext(ctx context.Context) DatasetDelimitedTextAzureBlobFsLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetDelimitedTextAzureBlobFsLocation) *DatasetDelimitedTextAzureBlobFsLocation {
		return &v
	}).(DatasetDelimitedTextAzureBlobFsLocationPtrOutput)
}

// Is the `fileSystem` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetDelimitedTextAzureBlobFsLocationOutput) DynamicFileSystemEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetDelimitedTextAzureBlobFsLocation) *bool { return v.DynamicFileSystemEnabled }).(pulumi.BoolPtrOutput)
}

// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetDelimitedTextAzureBlobFsLocationOutput) DynamicFilenameEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetDelimitedTextAzureBlobFsLocation) *bool { return v.DynamicFilenameEnabled }).(pulumi.BoolPtrOutput)
}

// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetDelimitedTextAzureBlobFsLocationOutput) DynamicPathEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetDelimitedTextAzureBlobFsLocation) *bool { return v.DynamicPathEnabled }).(pulumi.BoolPtrOutput)
}

// The storage data lake gen2 file system on the Azure Blob Storage Account hosting the file.
func (o DatasetDelimitedTextAzureBlobFsLocationOutput) FileSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetDelimitedTextAzureBlobFsLocation) *string { return v.FileSystem }).(pulumi.StringPtrOutput)
}

// The filename of the file.
func (o DatasetDelimitedTextAzureBlobFsLocationOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetDelimitedTextAzureBlobFsLocation) *string { return v.Filename }).(pulumi.StringPtrOutput)
}

// The folder path to the file.
func (o DatasetDelimitedTextAzureBlobFsLocationOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetDelimitedTextAzureBlobFsLocation) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type DatasetDelimitedTextAzureBlobFsLocationPtrOutput struct{ *pulumi.OutputState }

func (DatasetDelimitedTextAzureBlobFsLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetDelimitedTextAzureBlobFsLocation)(nil)).Elem()
}

func (o DatasetDelimitedTextAzureBlobFsLocationPtrOutput) ToDatasetDelimitedTextAzureBlobFsLocationPtrOutput() DatasetDelimitedTextAzureBlobFsLocationPtrOutput {
	return o
}

func (o DatasetDelimitedTextAzureBlobFsLocationPtrOutput) ToDatasetDelimitedTextAzureBlobFsLocationPtrOutputWithContext(ctx context.Context) DatasetDelimitedTextAzureBlobFsLocationPtrOutput {
	return o
}

func (o DatasetDelimitedTextAzureBlobFsLocationPtrOutput) Elem() DatasetDelimitedTextAzureBlobFsLocationOutput {
	return o.ApplyT(func(v *DatasetDelimitedTextAzureBlobFsLocation) DatasetDelimitedTextAzureBlobFsLocation {
		if v != nil {
			return *v
		}
		var ret DatasetDelimitedTextAzureBlobFsLocation
		return ret
	}).(DatasetDelimitedTextAzureBlobFsLocationOutput)
}

// Is the `fileSystem` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetDelimitedTextAzureBlobFsLocationPtrOutput) DynamicFileSystemEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetDelimitedTextAzureBlobFsLocation) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicFileSystemEnabled
	}).(pulumi.BoolPtrOutput)
}

// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetDelimitedTextAzureBlobFsLocationPtrOutput) DynamicFilenameEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetDelimitedTextAzureBlobFsLocation) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicFilenameEnabled
	}).(pulumi.BoolPtrOutput)
}

// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetDelimitedTextAzureBlobFsLocationPtrOutput) DynamicPathEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetDelimitedTextAzureBlobFsLocation) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicPathEnabled
	}).(pulumi.BoolPtrOutput)
}

// The storage data lake gen2 file system on the Azure Blob Storage Account hosting the file.
func (o DatasetDelimitedTextAzureBlobFsLocationPtrOutput) FileSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetDelimitedTextAzureBlobFsLocation) *string {
		if v == nil {
			return nil
		}
		return v.FileSystem
	}).(pulumi.StringPtrOutput)
}

// The filename of the file.
func (o DatasetDelimitedTextAzureBlobFsLocationPtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetDelimitedTextAzureBlobFsLocation) *string {
		if v == nil {
			return nil
		}
		return v.Filename
	}).(pulumi.StringPtrOutput)
}

// The folder path to the file.
func (o DatasetDelimitedTextAzureBlobFsLocationPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetDelimitedTextAzureBlobFsLocation) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

type DatasetDelimitedTextAzureBlobStorageLocation struct {
	// The container on the Azure Blob Storage Account hosting the file.
	Container string `pulumi:"container"`
	// Is the `container` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicContainerEnabled *bool `pulumi:"dynamicContainerEnabled"`
	// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicFilenameEnabled *bool `pulumi:"dynamicFilenameEnabled"`
	// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicPathEnabled *bool `pulumi:"dynamicPathEnabled"`
	// The filename of the file.
	Filename *string `pulumi:"filename"`
	// The folder path to the file. This can be an empty string.
	Path *string `pulumi:"path"`
}

// DatasetDelimitedTextAzureBlobStorageLocationInput is an input type that accepts DatasetDelimitedTextAzureBlobStorageLocationArgs and DatasetDelimitedTextAzureBlobStorageLocationOutput values.
// You can construct a concrete instance of `DatasetDelimitedTextAzureBlobStorageLocationInput` via:
//
//	DatasetDelimitedTextAzureBlobStorageLocationArgs{...}
type DatasetDelimitedTextAzureBlobStorageLocationInput interface {
	pulumi.Input

	ToDatasetDelimitedTextAzureBlobStorageLocationOutput() DatasetDelimitedTextAzureBlobStorageLocationOutput
	ToDatasetDelimitedTextAzureBlobStorageLocationOutputWithContext(context.Context) DatasetDelimitedTextAzureBlobStorageLocationOutput
}

type DatasetDelimitedTextAzureBlobStorageLocationArgs struct {
	// The container on the Azure Blob Storage Account hosting the file.
	Container pulumi.StringInput `pulumi:"container"`
	// Is the `container` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicContainerEnabled pulumi.BoolPtrInput `pulumi:"dynamicContainerEnabled"`
	// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicFilenameEnabled pulumi.BoolPtrInput `pulumi:"dynamicFilenameEnabled"`
	// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicPathEnabled pulumi.BoolPtrInput `pulumi:"dynamicPathEnabled"`
	// The filename of the file.
	Filename pulumi.StringPtrInput `pulumi:"filename"`
	// The folder path to the file. This can be an empty string.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (DatasetDelimitedTextAzureBlobStorageLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetDelimitedTextAzureBlobStorageLocation)(nil)).Elem()
}

func (i DatasetDelimitedTextAzureBlobStorageLocationArgs) ToDatasetDelimitedTextAzureBlobStorageLocationOutput() DatasetDelimitedTextAzureBlobStorageLocationOutput {
	return i.ToDatasetDelimitedTextAzureBlobStorageLocationOutputWithContext(context.Background())
}

func (i DatasetDelimitedTextAzureBlobStorageLocationArgs) ToDatasetDelimitedTextAzureBlobStorageLocationOutputWithContext(ctx context.Context) DatasetDelimitedTextAzureBlobStorageLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetDelimitedTextAzureBlobStorageLocationOutput)
}

func (i DatasetDelimitedTextAzureBlobStorageLocationArgs) ToDatasetDelimitedTextAzureBlobStorageLocationPtrOutput() DatasetDelimitedTextAzureBlobStorageLocationPtrOutput {
	return i.ToDatasetDelimitedTextAzureBlobStorageLocationPtrOutputWithContext(context.Background())
}

func (i DatasetDelimitedTextAzureBlobStorageLocationArgs) ToDatasetDelimitedTextAzureBlobStorageLocationPtrOutputWithContext(ctx context.Context) DatasetDelimitedTextAzureBlobStorageLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetDelimitedTextAzureBlobStorageLocationOutput).ToDatasetDelimitedTextAzureBlobStorageLocationPtrOutputWithContext(ctx)
}

// DatasetDelimitedTextAzureBlobStorageLocationPtrInput is an input type that accepts DatasetDelimitedTextAzureBlobStorageLocationArgs, DatasetDelimitedTextAzureBlobStorageLocationPtr and DatasetDelimitedTextAzureBlobStorageLocationPtrOutput values.
// You can construct a concrete instance of `DatasetDelimitedTextAzureBlobStorageLocationPtrInput` via:
//
//	        DatasetDelimitedTextAzureBlobStorageLocationArgs{...}
//
//	or:
//
//	        nil
type DatasetDelimitedTextAzureBlobStorageLocationPtrInput interface {
	pulumi.Input

	ToDatasetDelimitedTextAzureBlobStorageLocationPtrOutput() DatasetDelimitedTextAzureBlobStorageLocationPtrOutput
	ToDatasetDelimitedTextAzureBlobStorageLocationPtrOutputWithContext(context.Context) DatasetDelimitedTextAzureBlobStorageLocationPtrOutput
}

type datasetDelimitedTextAzureBlobStorageLocationPtrType DatasetDelimitedTextAzureBlobStorageLocationArgs

func DatasetDelimitedTextAzureBlobStorageLocationPtr(v *DatasetDelimitedTextAzureBlobStorageLocationArgs) DatasetDelimitedTextAzureBlobStorageLocationPtrInput {
	return (*datasetDelimitedTextAzureBlobStorageLocationPtrType)(v)
}

func (*datasetDelimitedTextAzureBlobStorageLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetDelimitedTextAzureBlobStorageLocation)(nil)).Elem()
}

func (i *datasetDelimitedTextAzureBlobStorageLocationPtrType) ToDatasetDelimitedTextAzureBlobStorageLocationPtrOutput() DatasetDelimitedTextAzureBlobStorageLocationPtrOutput {
	return i.ToDatasetDelimitedTextAzureBlobStorageLocationPtrOutputWithContext(context.Background())
}

func (i *datasetDelimitedTextAzureBlobStorageLocationPtrType) ToDatasetDelimitedTextAzureBlobStorageLocationPtrOutputWithContext(ctx context.Context) DatasetDelimitedTextAzureBlobStorageLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetDelimitedTextAzureBlobStorageLocationPtrOutput)
}

type DatasetDelimitedTextAzureBlobStorageLocationOutput struct{ *pulumi.OutputState }

func (DatasetDelimitedTextAzureBlobStorageLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetDelimitedTextAzureBlobStorageLocation)(nil)).Elem()
}

func (o DatasetDelimitedTextAzureBlobStorageLocationOutput) ToDatasetDelimitedTextAzureBlobStorageLocationOutput() DatasetDelimitedTextAzureBlobStorageLocationOutput {
	return o
}

func (o DatasetDelimitedTextAzureBlobStorageLocationOutput) ToDatasetDelimitedTextAzureBlobStorageLocationOutputWithContext(ctx context.Context) DatasetDelimitedTextAzureBlobStorageLocationOutput {
	return o
}

func (o DatasetDelimitedTextAzureBlobStorageLocationOutput) ToDatasetDelimitedTextAzureBlobStorageLocationPtrOutput() DatasetDelimitedTextAzureBlobStorageLocationPtrOutput {
	return o.ToDatasetDelimitedTextAzureBlobStorageLocationPtrOutputWithContext(context.Background())
}

func (o DatasetDelimitedTextAzureBlobStorageLocationOutput) ToDatasetDelimitedTextAzureBlobStorageLocationPtrOutputWithContext(ctx context.Context) DatasetDelimitedTextAzureBlobStorageLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetDelimitedTextAzureBlobStorageLocation) *DatasetDelimitedTextAzureBlobStorageLocation {
		return &v
	}).(DatasetDelimitedTextAzureBlobStorageLocationPtrOutput)
}

// The container on the Azure Blob Storage Account hosting the file.
func (o DatasetDelimitedTextAzureBlobStorageLocationOutput) Container() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetDelimitedTextAzureBlobStorageLocation) string { return v.Container }).(pulumi.StringOutput)
}

// Is the `container` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetDelimitedTextAzureBlobStorageLocationOutput) DynamicContainerEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetDelimitedTextAzureBlobStorageLocation) *bool { return v.DynamicContainerEnabled }).(pulumi.BoolPtrOutput)
}

// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetDelimitedTextAzureBlobStorageLocationOutput) DynamicFilenameEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetDelimitedTextAzureBlobStorageLocation) *bool { return v.DynamicFilenameEnabled }).(pulumi.BoolPtrOutput)
}

// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetDelimitedTextAzureBlobStorageLocationOutput) DynamicPathEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetDelimitedTextAzureBlobStorageLocation) *bool { return v.DynamicPathEnabled }).(pulumi.BoolPtrOutput)
}

// The filename of the file.
func (o DatasetDelimitedTextAzureBlobStorageLocationOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetDelimitedTextAzureBlobStorageLocation) *string { return v.Filename }).(pulumi.StringPtrOutput)
}

// The folder path to the file. This can be an empty string.
func (o DatasetDelimitedTextAzureBlobStorageLocationOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetDelimitedTextAzureBlobStorageLocation) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type DatasetDelimitedTextAzureBlobStorageLocationPtrOutput struct{ *pulumi.OutputState }

func (DatasetDelimitedTextAzureBlobStorageLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetDelimitedTextAzureBlobStorageLocation)(nil)).Elem()
}

func (o DatasetDelimitedTextAzureBlobStorageLocationPtrOutput) ToDatasetDelimitedTextAzureBlobStorageLocationPtrOutput() DatasetDelimitedTextAzureBlobStorageLocationPtrOutput {
	return o
}

func (o DatasetDelimitedTextAzureBlobStorageLocationPtrOutput) ToDatasetDelimitedTextAzureBlobStorageLocationPtrOutputWithContext(ctx context.Context) DatasetDelimitedTextAzureBlobStorageLocationPtrOutput {
	return o
}

func (o DatasetDelimitedTextAzureBlobStorageLocationPtrOutput) Elem() DatasetDelimitedTextAzureBlobStorageLocationOutput {
	return o.ApplyT(func(v *DatasetDelimitedTextAzureBlobStorageLocation) DatasetDelimitedTextAzureBlobStorageLocation {
		if v != nil {
			return *v
		}
		var ret DatasetDelimitedTextAzureBlobStorageLocation
		return ret
	}).(DatasetDelimitedTextAzureBlobStorageLocationOutput)
}

// The container on the Azure Blob Storage Account hosting the file.
func (o DatasetDelimitedTextAzureBlobStorageLocationPtrOutput) Container() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetDelimitedTextAzureBlobStorageLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Container
	}).(pulumi.StringPtrOutput)
}

// Is the `container` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetDelimitedTextAzureBlobStorageLocationPtrOutput) DynamicContainerEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetDelimitedTextAzureBlobStorageLocation) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicContainerEnabled
	}).(pulumi.BoolPtrOutput)
}

// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetDelimitedTextAzureBlobStorageLocationPtrOutput) DynamicFilenameEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetDelimitedTextAzureBlobStorageLocation) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicFilenameEnabled
	}).(pulumi.BoolPtrOutput)
}

// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetDelimitedTextAzureBlobStorageLocationPtrOutput) DynamicPathEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetDelimitedTextAzureBlobStorageLocation) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicPathEnabled
	}).(pulumi.BoolPtrOutput)
}

// The filename of the file.
func (o DatasetDelimitedTextAzureBlobStorageLocationPtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetDelimitedTextAzureBlobStorageLocation) *string {
		if v == nil {
			return nil
		}
		return v.Filename
	}).(pulumi.StringPtrOutput)
}

// The folder path to the file. This can be an empty string.
func (o DatasetDelimitedTextAzureBlobStorageLocationPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetDelimitedTextAzureBlobStorageLocation) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

type DatasetDelimitedTextHttpServerLocation struct {
	// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicFilenameEnabled *bool `pulumi:"dynamicFilenameEnabled"`
	// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicPathEnabled *bool `pulumi:"dynamicPathEnabled"`
	// The filename of the file on the web server.
	Filename string `pulumi:"filename"`
	// The folder path to the file on the web server.
	Path string `pulumi:"path"`
	// The base URL to the web server hosting the file.
	RelativeUrl string `pulumi:"relativeUrl"`
}

// DatasetDelimitedTextHttpServerLocationInput is an input type that accepts DatasetDelimitedTextHttpServerLocationArgs and DatasetDelimitedTextHttpServerLocationOutput values.
// You can construct a concrete instance of `DatasetDelimitedTextHttpServerLocationInput` via:
//
//	DatasetDelimitedTextHttpServerLocationArgs{...}
type DatasetDelimitedTextHttpServerLocationInput interface {
	pulumi.Input

	ToDatasetDelimitedTextHttpServerLocationOutput() DatasetDelimitedTextHttpServerLocationOutput
	ToDatasetDelimitedTextHttpServerLocationOutputWithContext(context.Context) DatasetDelimitedTextHttpServerLocationOutput
}

type DatasetDelimitedTextHttpServerLocationArgs struct {
	// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicFilenameEnabled pulumi.BoolPtrInput `pulumi:"dynamicFilenameEnabled"`
	// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicPathEnabled pulumi.BoolPtrInput `pulumi:"dynamicPathEnabled"`
	// The filename of the file on the web server.
	Filename pulumi.StringInput `pulumi:"filename"`
	// The folder path to the file on the web server.
	Path pulumi.StringInput `pulumi:"path"`
	// The base URL to the web server hosting the file.
	RelativeUrl pulumi.StringInput `pulumi:"relativeUrl"`
}

func (DatasetDelimitedTextHttpServerLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetDelimitedTextHttpServerLocation)(nil)).Elem()
}

func (i DatasetDelimitedTextHttpServerLocationArgs) ToDatasetDelimitedTextHttpServerLocationOutput() DatasetDelimitedTextHttpServerLocationOutput {
	return i.ToDatasetDelimitedTextHttpServerLocationOutputWithContext(context.Background())
}

func (i DatasetDelimitedTextHttpServerLocationArgs) ToDatasetDelimitedTextHttpServerLocationOutputWithContext(ctx context.Context) DatasetDelimitedTextHttpServerLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetDelimitedTextHttpServerLocationOutput)
}

func (i DatasetDelimitedTextHttpServerLocationArgs) ToDatasetDelimitedTextHttpServerLocationPtrOutput() DatasetDelimitedTextHttpServerLocationPtrOutput {
	return i.ToDatasetDelimitedTextHttpServerLocationPtrOutputWithContext(context.Background())
}

func (i DatasetDelimitedTextHttpServerLocationArgs) ToDatasetDelimitedTextHttpServerLocationPtrOutputWithContext(ctx context.Context) DatasetDelimitedTextHttpServerLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetDelimitedTextHttpServerLocationOutput).ToDatasetDelimitedTextHttpServerLocationPtrOutputWithContext(ctx)
}

// DatasetDelimitedTextHttpServerLocationPtrInput is an input type that accepts DatasetDelimitedTextHttpServerLocationArgs, DatasetDelimitedTextHttpServerLocationPtr and DatasetDelimitedTextHttpServerLocationPtrOutput values.
// You can construct a concrete instance of `DatasetDelimitedTextHttpServerLocationPtrInput` via:
//
//	        DatasetDelimitedTextHttpServerLocationArgs{...}
//
//	or:
//
//	        nil
type DatasetDelimitedTextHttpServerLocationPtrInput interface {
	pulumi.Input

	ToDatasetDelimitedTextHttpServerLocationPtrOutput() DatasetDelimitedTextHttpServerLocationPtrOutput
	ToDatasetDelimitedTextHttpServerLocationPtrOutputWithContext(context.Context) DatasetDelimitedTextHttpServerLocationPtrOutput
}

type datasetDelimitedTextHttpServerLocationPtrType DatasetDelimitedTextHttpServerLocationArgs

func DatasetDelimitedTextHttpServerLocationPtr(v *DatasetDelimitedTextHttpServerLocationArgs) DatasetDelimitedTextHttpServerLocationPtrInput {
	return (*datasetDelimitedTextHttpServerLocationPtrType)(v)
}

func (*datasetDelimitedTextHttpServerLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetDelimitedTextHttpServerLocation)(nil)).Elem()
}

func (i *datasetDelimitedTextHttpServerLocationPtrType) ToDatasetDelimitedTextHttpServerLocationPtrOutput() DatasetDelimitedTextHttpServerLocationPtrOutput {
	return i.ToDatasetDelimitedTextHttpServerLocationPtrOutputWithContext(context.Background())
}

func (i *datasetDelimitedTextHttpServerLocationPtrType) ToDatasetDelimitedTextHttpServerLocationPtrOutputWithContext(ctx context.Context) DatasetDelimitedTextHttpServerLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetDelimitedTextHttpServerLocationPtrOutput)
}

type DatasetDelimitedTextHttpServerLocationOutput struct{ *pulumi.OutputState }

func (DatasetDelimitedTextHttpServerLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetDelimitedTextHttpServerLocation)(nil)).Elem()
}

func (o DatasetDelimitedTextHttpServerLocationOutput) ToDatasetDelimitedTextHttpServerLocationOutput() DatasetDelimitedTextHttpServerLocationOutput {
	return o
}

func (o DatasetDelimitedTextHttpServerLocationOutput) ToDatasetDelimitedTextHttpServerLocationOutputWithContext(ctx context.Context) DatasetDelimitedTextHttpServerLocationOutput {
	return o
}

func (o DatasetDelimitedTextHttpServerLocationOutput) ToDatasetDelimitedTextHttpServerLocationPtrOutput() DatasetDelimitedTextHttpServerLocationPtrOutput {
	return o.ToDatasetDelimitedTextHttpServerLocationPtrOutputWithContext(context.Background())
}

func (o DatasetDelimitedTextHttpServerLocationOutput) ToDatasetDelimitedTextHttpServerLocationPtrOutputWithContext(ctx context.Context) DatasetDelimitedTextHttpServerLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetDelimitedTextHttpServerLocation) *DatasetDelimitedTextHttpServerLocation {
		return &v
	}).(DatasetDelimitedTextHttpServerLocationPtrOutput)
}

// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetDelimitedTextHttpServerLocationOutput) DynamicFilenameEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetDelimitedTextHttpServerLocation) *bool { return v.DynamicFilenameEnabled }).(pulumi.BoolPtrOutput)
}

// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetDelimitedTextHttpServerLocationOutput) DynamicPathEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetDelimitedTextHttpServerLocation) *bool { return v.DynamicPathEnabled }).(pulumi.BoolPtrOutput)
}

// The filename of the file on the web server.
func (o DatasetDelimitedTextHttpServerLocationOutput) Filename() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetDelimitedTextHttpServerLocation) string { return v.Filename }).(pulumi.StringOutput)
}

// The folder path to the file on the web server.
func (o DatasetDelimitedTextHttpServerLocationOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetDelimitedTextHttpServerLocation) string { return v.Path }).(pulumi.StringOutput)
}

// The base URL to the web server hosting the file.
func (o DatasetDelimitedTextHttpServerLocationOutput) RelativeUrl() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetDelimitedTextHttpServerLocation) string { return v.RelativeUrl }).(pulumi.StringOutput)
}

type DatasetDelimitedTextHttpServerLocationPtrOutput struct{ *pulumi.OutputState }

func (DatasetDelimitedTextHttpServerLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetDelimitedTextHttpServerLocation)(nil)).Elem()
}

func (o DatasetDelimitedTextHttpServerLocationPtrOutput) ToDatasetDelimitedTextHttpServerLocationPtrOutput() DatasetDelimitedTextHttpServerLocationPtrOutput {
	return o
}

func (o DatasetDelimitedTextHttpServerLocationPtrOutput) ToDatasetDelimitedTextHttpServerLocationPtrOutputWithContext(ctx context.Context) DatasetDelimitedTextHttpServerLocationPtrOutput {
	return o
}

func (o DatasetDelimitedTextHttpServerLocationPtrOutput) Elem() DatasetDelimitedTextHttpServerLocationOutput {
	return o.ApplyT(func(v *DatasetDelimitedTextHttpServerLocation) DatasetDelimitedTextHttpServerLocation {
		if v != nil {
			return *v
		}
		var ret DatasetDelimitedTextHttpServerLocation
		return ret
	}).(DatasetDelimitedTextHttpServerLocationOutput)
}

// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetDelimitedTextHttpServerLocationPtrOutput) DynamicFilenameEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetDelimitedTextHttpServerLocation) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicFilenameEnabled
	}).(pulumi.BoolPtrOutput)
}

// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetDelimitedTextHttpServerLocationPtrOutput) DynamicPathEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetDelimitedTextHttpServerLocation) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicPathEnabled
	}).(pulumi.BoolPtrOutput)
}

// The filename of the file on the web server.
func (o DatasetDelimitedTextHttpServerLocationPtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetDelimitedTextHttpServerLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Filename
	}).(pulumi.StringPtrOutput)
}

// The folder path to the file on the web server.
func (o DatasetDelimitedTextHttpServerLocationPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetDelimitedTextHttpServerLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// The base URL to the web server hosting the file.
func (o DatasetDelimitedTextHttpServerLocationPtrOutput) RelativeUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetDelimitedTextHttpServerLocation) *string {
		if v == nil {
			return nil
		}
		return &v.RelativeUrl
	}).(pulumi.StringPtrOutput)
}

type DatasetDelimitedTextSchemaColumn struct {
	// The description of the column.
	Description *string `pulumi:"description"`
	// The name of the column.
	Name string `pulumi:"name"`
	// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
	Type *string `pulumi:"type"`
}

// DatasetDelimitedTextSchemaColumnInput is an input type that accepts DatasetDelimitedTextSchemaColumnArgs and DatasetDelimitedTextSchemaColumnOutput values.
// You can construct a concrete instance of `DatasetDelimitedTextSchemaColumnInput` via:
//
//	DatasetDelimitedTextSchemaColumnArgs{...}
type DatasetDelimitedTextSchemaColumnInput interface {
	pulumi.Input

	ToDatasetDelimitedTextSchemaColumnOutput() DatasetDelimitedTextSchemaColumnOutput
	ToDatasetDelimitedTextSchemaColumnOutputWithContext(context.Context) DatasetDelimitedTextSchemaColumnOutput
}

type DatasetDelimitedTextSchemaColumnArgs struct {
	// The description of the column.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the column.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DatasetDelimitedTextSchemaColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetDelimitedTextSchemaColumn)(nil)).Elem()
}

func (i DatasetDelimitedTextSchemaColumnArgs) ToDatasetDelimitedTextSchemaColumnOutput() DatasetDelimitedTextSchemaColumnOutput {
	return i.ToDatasetDelimitedTextSchemaColumnOutputWithContext(context.Background())
}

func (i DatasetDelimitedTextSchemaColumnArgs) ToDatasetDelimitedTextSchemaColumnOutputWithContext(ctx context.Context) DatasetDelimitedTextSchemaColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetDelimitedTextSchemaColumnOutput)
}

// DatasetDelimitedTextSchemaColumnArrayInput is an input type that accepts DatasetDelimitedTextSchemaColumnArray and DatasetDelimitedTextSchemaColumnArrayOutput values.
// You can construct a concrete instance of `DatasetDelimitedTextSchemaColumnArrayInput` via:
//
//	DatasetDelimitedTextSchemaColumnArray{ DatasetDelimitedTextSchemaColumnArgs{...} }
type DatasetDelimitedTextSchemaColumnArrayInput interface {
	pulumi.Input

	ToDatasetDelimitedTextSchemaColumnArrayOutput() DatasetDelimitedTextSchemaColumnArrayOutput
	ToDatasetDelimitedTextSchemaColumnArrayOutputWithContext(context.Context) DatasetDelimitedTextSchemaColumnArrayOutput
}

type DatasetDelimitedTextSchemaColumnArray []DatasetDelimitedTextSchemaColumnInput

func (DatasetDelimitedTextSchemaColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetDelimitedTextSchemaColumn)(nil)).Elem()
}

func (i DatasetDelimitedTextSchemaColumnArray) ToDatasetDelimitedTextSchemaColumnArrayOutput() DatasetDelimitedTextSchemaColumnArrayOutput {
	return i.ToDatasetDelimitedTextSchemaColumnArrayOutputWithContext(context.Background())
}

func (i DatasetDelimitedTextSchemaColumnArray) ToDatasetDelimitedTextSchemaColumnArrayOutputWithContext(ctx context.Context) DatasetDelimitedTextSchemaColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetDelimitedTextSchemaColumnArrayOutput)
}

type DatasetDelimitedTextSchemaColumnOutput struct{ *pulumi.OutputState }

func (DatasetDelimitedTextSchemaColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetDelimitedTextSchemaColumn)(nil)).Elem()
}

func (o DatasetDelimitedTextSchemaColumnOutput) ToDatasetDelimitedTextSchemaColumnOutput() DatasetDelimitedTextSchemaColumnOutput {
	return o
}

func (o DatasetDelimitedTextSchemaColumnOutput) ToDatasetDelimitedTextSchemaColumnOutputWithContext(ctx context.Context) DatasetDelimitedTextSchemaColumnOutput {
	return o
}

// The description of the column.
func (o DatasetDelimitedTextSchemaColumnOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetDelimitedTextSchemaColumn) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the column.
func (o DatasetDelimitedTextSchemaColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetDelimitedTextSchemaColumn) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
func (o DatasetDelimitedTextSchemaColumnOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetDelimitedTextSchemaColumn) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DatasetDelimitedTextSchemaColumnArrayOutput struct{ *pulumi.OutputState }

func (DatasetDelimitedTextSchemaColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetDelimitedTextSchemaColumn)(nil)).Elem()
}

func (o DatasetDelimitedTextSchemaColumnArrayOutput) ToDatasetDelimitedTextSchemaColumnArrayOutput() DatasetDelimitedTextSchemaColumnArrayOutput {
	return o
}

func (o DatasetDelimitedTextSchemaColumnArrayOutput) ToDatasetDelimitedTextSchemaColumnArrayOutputWithContext(ctx context.Context) DatasetDelimitedTextSchemaColumnArrayOutput {
	return o
}

func (o DatasetDelimitedTextSchemaColumnArrayOutput) Index(i pulumi.IntInput) DatasetDelimitedTextSchemaColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetDelimitedTextSchemaColumn {
		return vs[0].([]DatasetDelimitedTextSchemaColumn)[vs[1].(int)]
	}).(DatasetDelimitedTextSchemaColumnOutput)
}

type DatasetHttpSchemaColumn struct {
	// The description of the column.
	Description *string `pulumi:"description"`
	// The name of the column.
	Name string `pulumi:"name"`
	// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
	Type *string `pulumi:"type"`
}

// DatasetHttpSchemaColumnInput is an input type that accepts DatasetHttpSchemaColumnArgs and DatasetHttpSchemaColumnOutput values.
// You can construct a concrete instance of `DatasetHttpSchemaColumnInput` via:
//
//	DatasetHttpSchemaColumnArgs{...}
type DatasetHttpSchemaColumnInput interface {
	pulumi.Input

	ToDatasetHttpSchemaColumnOutput() DatasetHttpSchemaColumnOutput
	ToDatasetHttpSchemaColumnOutputWithContext(context.Context) DatasetHttpSchemaColumnOutput
}

type DatasetHttpSchemaColumnArgs struct {
	// The description of the column.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the column.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DatasetHttpSchemaColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetHttpSchemaColumn)(nil)).Elem()
}

func (i DatasetHttpSchemaColumnArgs) ToDatasetHttpSchemaColumnOutput() DatasetHttpSchemaColumnOutput {
	return i.ToDatasetHttpSchemaColumnOutputWithContext(context.Background())
}

func (i DatasetHttpSchemaColumnArgs) ToDatasetHttpSchemaColumnOutputWithContext(ctx context.Context) DatasetHttpSchemaColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetHttpSchemaColumnOutput)
}

// DatasetHttpSchemaColumnArrayInput is an input type that accepts DatasetHttpSchemaColumnArray and DatasetHttpSchemaColumnArrayOutput values.
// You can construct a concrete instance of `DatasetHttpSchemaColumnArrayInput` via:
//
//	DatasetHttpSchemaColumnArray{ DatasetHttpSchemaColumnArgs{...} }
type DatasetHttpSchemaColumnArrayInput interface {
	pulumi.Input

	ToDatasetHttpSchemaColumnArrayOutput() DatasetHttpSchemaColumnArrayOutput
	ToDatasetHttpSchemaColumnArrayOutputWithContext(context.Context) DatasetHttpSchemaColumnArrayOutput
}

type DatasetHttpSchemaColumnArray []DatasetHttpSchemaColumnInput

func (DatasetHttpSchemaColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetHttpSchemaColumn)(nil)).Elem()
}

func (i DatasetHttpSchemaColumnArray) ToDatasetHttpSchemaColumnArrayOutput() DatasetHttpSchemaColumnArrayOutput {
	return i.ToDatasetHttpSchemaColumnArrayOutputWithContext(context.Background())
}

func (i DatasetHttpSchemaColumnArray) ToDatasetHttpSchemaColumnArrayOutputWithContext(ctx context.Context) DatasetHttpSchemaColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetHttpSchemaColumnArrayOutput)
}

type DatasetHttpSchemaColumnOutput struct{ *pulumi.OutputState }

func (DatasetHttpSchemaColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetHttpSchemaColumn)(nil)).Elem()
}

func (o DatasetHttpSchemaColumnOutput) ToDatasetHttpSchemaColumnOutput() DatasetHttpSchemaColumnOutput {
	return o
}

func (o DatasetHttpSchemaColumnOutput) ToDatasetHttpSchemaColumnOutputWithContext(ctx context.Context) DatasetHttpSchemaColumnOutput {
	return o
}

// The description of the column.
func (o DatasetHttpSchemaColumnOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetHttpSchemaColumn) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the column.
func (o DatasetHttpSchemaColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetHttpSchemaColumn) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
func (o DatasetHttpSchemaColumnOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetHttpSchemaColumn) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DatasetHttpSchemaColumnArrayOutput struct{ *pulumi.OutputState }

func (DatasetHttpSchemaColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetHttpSchemaColumn)(nil)).Elem()
}

func (o DatasetHttpSchemaColumnArrayOutput) ToDatasetHttpSchemaColumnArrayOutput() DatasetHttpSchemaColumnArrayOutput {
	return o
}

func (o DatasetHttpSchemaColumnArrayOutput) ToDatasetHttpSchemaColumnArrayOutputWithContext(ctx context.Context) DatasetHttpSchemaColumnArrayOutput {
	return o
}

func (o DatasetHttpSchemaColumnArrayOutput) Index(i pulumi.IntInput) DatasetHttpSchemaColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetHttpSchemaColumn {
		return vs[0].([]DatasetHttpSchemaColumn)[vs[1].(int)]
	}).(DatasetHttpSchemaColumnOutput)
}

type DatasetJsonAzureBlobStorageLocation struct {
	// The container on the Azure Blob Storage Account hosting the file.
	Container string `pulumi:"container"`
	// Is the `container` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicContainerEnabled *bool `pulumi:"dynamicContainerEnabled"`
	// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicFilenameEnabled *bool `pulumi:"dynamicFilenameEnabled"`
	// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicPathEnabled *bool `pulumi:"dynamicPathEnabled"`
	// The filename of the file on the web server.
	Filename string `pulumi:"filename"`
	// The folder path to the file on the web server.
	Path string `pulumi:"path"`
}

// DatasetJsonAzureBlobStorageLocationInput is an input type that accepts DatasetJsonAzureBlobStorageLocationArgs and DatasetJsonAzureBlobStorageLocationOutput values.
// You can construct a concrete instance of `DatasetJsonAzureBlobStorageLocationInput` via:
//
//	DatasetJsonAzureBlobStorageLocationArgs{...}
type DatasetJsonAzureBlobStorageLocationInput interface {
	pulumi.Input

	ToDatasetJsonAzureBlobStorageLocationOutput() DatasetJsonAzureBlobStorageLocationOutput
	ToDatasetJsonAzureBlobStorageLocationOutputWithContext(context.Context) DatasetJsonAzureBlobStorageLocationOutput
}

type DatasetJsonAzureBlobStorageLocationArgs struct {
	// The container on the Azure Blob Storage Account hosting the file.
	Container pulumi.StringInput `pulumi:"container"`
	// Is the `container` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicContainerEnabled pulumi.BoolPtrInput `pulumi:"dynamicContainerEnabled"`
	// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicFilenameEnabled pulumi.BoolPtrInput `pulumi:"dynamicFilenameEnabled"`
	// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicPathEnabled pulumi.BoolPtrInput `pulumi:"dynamicPathEnabled"`
	// The filename of the file on the web server.
	Filename pulumi.StringInput `pulumi:"filename"`
	// The folder path to the file on the web server.
	Path pulumi.StringInput `pulumi:"path"`
}

func (DatasetJsonAzureBlobStorageLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetJsonAzureBlobStorageLocation)(nil)).Elem()
}

func (i DatasetJsonAzureBlobStorageLocationArgs) ToDatasetJsonAzureBlobStorageLocationOutput() DatasetJsonAzureBlobStorageLocationOutput {
	return i.ToDatasetJsonAzureBlobStorageLocationOutputWithContext(context.Background())
}

func (i DatasetJsonAzureBlobStorageLocationArgs) ToDatasetJsonAzureBlobStorageLocationOutputWithContext(ctx context.Context) DatasetJsonAzureBlobStorageLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetJsonAzureBlobStorageLocationOutput)
}

func (i DatasetJsonAzureBlobStorageLocationArgs) ToDatasetJsonAzureBlobStorageLocationPtrOutput() DatasetJsonAzureBlobStorageLocationPtrOutput {
	return i.ToDatasetJsonAzureBlobStorageLocationPtrOutputWithContext(context.Background())
}

func (i DatasetJsonAzureBlobStorageLocationArgs) ToDatasetJsonAzureBlobStorageLocationPtrOutputWithContext(ctx context.Context) DatasetJsonAzureBlobStorageLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetJsonAzureBlobStorageLocationOutput).ToDatasetJsonAzureBlobStorageLocationPtrOutputWithContext(ctx)
}

// DatasetJsonAzureBlobStorageLocationPtrInput is an input type that accepts DatasetJsonAzureBlobStorageLocationArgs, DatasetJsonAzureBlobStorageLocationPtr and DatasetJsonAzureBlobStorageLocationPtrOutput values.
// You can construct a concrete instance of `DatasetJsonAzureBlobStorageLocationPtrInput` via:
//
//	        DatasetJsonAzureBlobStorageLocationArgs{...}
//
//	or:
//
//	        nil
type DatasetJsonAzureBlobStorageLocationPtrInput interface {
	pulumi.Input

	ToDatasetJsonAzureBlobStorageLocationPtrOutput() DatasetJsonAzureBlobStorageLocationPtrOutput
	ToDatasetJsonAzureBlobStorageLocationPtrOutputWithContext(context.Context) DatasetJsonAzureBlobStorageLocationPtrOutput
}

type datasetJsonAzureBlobStorageLocationPtrType DatasetJsonAzureBlobStorageLocationArgs

func DatasetJsonAzureBlobStorageLocationPtr(v *DatasetJsonAzureBlobStorageLocationArgs) DatasetJsonAzureBlobStorageLocationPtrInput {
	return (*datasetJsonAzureBlobStorageLocationPtrType)(v)
}

func (*datasetJsonAzureBlobStorageLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetJsonAzureBlobStorageLocation)(nil)).Elem()
}

func (i *datasetJsonAzureBlobStorageLocationPtrType) ToDatasetJsonAzureBlobStorageLocationPtrOutput() DatasetJsonAzureBlobStorageLocationPtrOutput {
	return i.ToDatasetJsonAzureBlobStorageLocationPtrOutputWithContext(context.Background())
}

func (i *datasetJsonAzureBlobStorageLocationPtrType) ToDatasetJsonAzureBlobStorageLocationPtrOutputWithContext(ctx context.Context) DatasetJsonAzureBlobStorageLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetJsonAzureBlobStorageLocationPtrOutput)
}

type DatasetJsonAzureBlobStorageLocationOutput struct{ *pulumi.OutputState }

func (DatasetJsonAzureBlobStorageLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetJsonAzureBlobStorageLocation)(nil)).Elem()
}

func (o DatasetJsonAzureBlobStorageLocationOutput) ToDatasetJsonAzureBlobStorageLocationOutput() DatasetJsonAzureBlobStorageLocationOutput {
	return o
}

func (o DatasetJsonAzureBlobStorageLocationOutput) ToDatasetJsonAzureBlobStorageLocationOutputWithContext(ctx context.Context) DatasetJsonAzureBlobStorageLocationOutput {
	return o
}

func (o DatasetJsonAzureBlobStorageLocationOutput) ToDatasetJsonAzureBlobStorageLocationPtrOutput() DatasetJsonAzureBlobStorageLocationPtrOutput {
	return o.ToDatasetJsonAzureBlobStorageLocationPtrOutputWithContext(context.Background())
}

func (o DatasetJsonAzureBlobStorageLocationOutput) ToDatasetJsonAzureBlobStorageLocationPtrOutputWithContext(ctx context.Context) DatasetJsonAzureBlobStorageLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetJsonAzureBlobStorageLocation) *DatasetJsonAzureBlobStorageLocation {
		return &v
	}).(DatasetJsonAzureBlobStorageLocationPtrOutput)
}

// The container on the Azure Blob Storage Account hosting the file.
func (o DatasetJsonAzureBlobStorageLocationOutput) Container() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetJsonAzureBlobStorageLocation) string { return v.Container }).(pulumi.StringOutput)
}

// Is the `container` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetJsonAzureBlobStorageLocationOutput) DynamicContainerEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetJsonAzureBlobStorageLocation) *bool { return v.DynamicContainerEnabled }).(pulumi.BoolPtrOutput)
}

// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetJsonAzureBlobStorageLocationOutput) DynamicFilenameEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetJsonAzureBlobStorageLocation) *bool { return v.DynamicFilenameEnabled }).(pulumi.BoolPtrOutput)
}

// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetJsonAzureBlobStorageLocationOutput) DynamicPathEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetJsonAzureBlobStorageLocation) *bool { return v.DynamicPathEnabled }).(pulumi.BoolPtrOutput)
}

// The filename of the file on the web server.
func (o DatasetJsonAzureBlobStorageLocationOutput) Filename() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetJsonAzureBlobStorageLocation) string { return v.Filename }).(pulumi.StringOutput)
}

// The folder path to the file on the web server.
func (o DatasetJsonAzureBlobStorageLocationOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetJsonAzureBlobStorageLocation) string { return v.Path }).(pulumi.StringOutput)
}

type DatasetJsonAzureBlobStorageLocationPtrOutput struct{ *pulumi.OutputState }

func (DatasetJsonAzureBlobStorageLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetJsonAzureBlobStorageLocation)(nil)).Elem()
}

func (o DatasetJsonAzureBlobStorageLocationPtrOutput) ToDatasetJsonAzureBlobStorageLocationPtrOutput() DatasetJsonAzureBlobStorageLocationPtrOutput {
	return o
}

func (o DatasetJsonAzureBlobStorageLocationPtrOutput) ToDatasetJsonAzureBlobStorageLocationPtrOutputWithContext(ctx context.Context) DatasetJsonAzureBlobStorageLocationPtrOutput {
	return o
}

func (o DatasetJsonAzureBlobStorageLocationPtrOutput) Elem() DatasetJsonAzureBlobStorageLocationOutput {
	return o.ApplyT(func(v *DatasetJsonAzureBlobStorageLocation) DatasetJsonAzureBlobStorageLocation {
		if v != nil {
			return *v
		}
		var ret DatasetJsonAzureBlobStorageLocation
		return ret
	}).(DatasetJsonAzureBlobStorageLocationOutput)
}

// The container on the Azure Blob Storage Account hosting the file.
func (o DatasetJsonAzureBlobStorageLocationPtrOutput) Container() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetJsonAzureBlobStorageLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Container
	}).(pulumi.StringPtrOutput)
}

// Is the `container` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetJsonAzureBlobStorageLocationPtrOutput) DynamicContainerEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetJsonAzureBlobStorageLocation) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicContainerEnabled
	}).(pulumi.BoolPtrOutput)
}

// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetJsonAzureBlobStorageLocationPtrOutput) DynamicFilenameEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetJsonAzureBlobStorageLocation) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicFilenameEnabled
	}).(pulumi.BoolPtrOutput)
}

// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetJsonAzureBlobStorageLocationPtrOutput) DynamicPathEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetJsonAzureBlobStorageLocation) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicPathEnabled
	}).(pulumi.BoolPtrOutput)
}

// The filename of the file on the web server.
func (o DatasetJsonAzureBlobStorageLocationPtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetJsonAzureBlobStorageLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Filename
	}).(pulumi.StringPtrOutput)
}

// The folder path to the file on the web server.
func (o DatasetJsonAzureBlobStorageLocationPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetJsonAzureBlobStorageLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

type DatasetJsonHttpServerLocation struct {
	// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicFilenameEnabled *bool `pulumi:"dynamicFilenameEnabled"`
	// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicPathEnabled *bool `pulumi:"dynamicPathEnabled"`
	// The filename of the file on the web server.
	Filename string `pulumi:"filename"`
	// The folder path to the file on the web server.
	Path string `pulumi:"path"`
	// The base URL to the web server hosting the file.
	RelativeUrl string `pulumi:"relativeUrl"`
}

// DatasetJsonHttpServerLocationInput is an input type that accepts DatasetJsonHttpServerLocationArgs and DatasetJsonHttpServerLocationOutput values.
// You can construct a concrete instance of `DatasetJsonHttpServerLocationInput` via:
//
//	DatasetJsonHttpServerLocationArgs{...}
type DatasetJsonHttpServerLocationInput interface {
	pulumi.Input

	ToDatasetJsonHttpServerLocationOutput() DatasetJsonHttpServerLocationOutput
	ToDatasetJsonHttpServerLocationOutputWithContext(context.Context) DatasetJsonHttpServerLocationOutput
}

type DatasetJsonHttpServerLocationArgs struct {
	// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicFilenameEnabled pulumi.BoolPtrInput `pulumi:"dynamicFilenameEnabled"`
	// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicPathEnabled pulumi.BoolPtrInput `pulumi:"dynamicPathEnabled"`
	// The filename of the file on the web server.
	Filename pulumi.StringInput `pulumi:"filename"`
	// The folder path to the file on the web server.
	Path pulumi.StringInput `pulumi:"path"`
	// The base URL to the web server hosting the file.
	RelativeUrl pulumi.StringInput `pulumi:"relativeUrl"`
}

func (DatasetJsonHttpServerLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetJsonHttpServerLocation)(nil)).Elem()
}

func (i DatasetJsonHttpServerLocationArgs) ToDatasetJsonHttpServerLocationOutput() DatasetJsonHttpServerLocationOutput {
	return i.ToDatasetJsonHttpServerLocationOutputWithContext(context.Background())
}

func (i DatasetJsonHttpServerLocationArgs) ToDatasetJsonHttpServerLocationOutputWithContext(ctx context.Context) DatasetJsonHttpServerLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetJsonHttpServerLocationOutput)
}

func (i DatasetJsonHttpServerLocationArgs) ToDatasetJsonHttpServerLocationPtrOutput() DatasetJsonHttpServerLocationPtrOutput {
	return i.ToDatasetJsonHttpServerLocationPtrOutputWithContext(context.Background())
}

func (i DatasetJsonHttpServerLocationArgs) ToDatasetJsonHttpServerLocationPtrOutputWithContext(ctx context.Context) DatasetJsonHttpServerLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetJsonHttpServerLocationOutput).ToDatasetJsonHttpServerLocationPtrOutputWithContext(ctx)
}

// DatasetJsonHttpServerLocationPtrInput is an input type that accepts DatasetJsonHttpServerLocationArgs, DatasetJsonHttpServerLocationPtr and DatasetJsonHttpServerLocationPtrOutput values.
// You can construct a concrete instance of `DatasetJsonHttpServerLocationPtrInput` via:
//
//	        DatasetJsonHttpServerLocationArgs{...}
//
//	or:
//
//	        nil
type DatasetJsonHttpServerLocationPtrInput interface {
	pulumi.Input

	ToDatasetJsonHttpServerLocationPtrOutput() DatasetJsonHttpServerLocationPtrOutput
	ToDatasetJsonHttpServerLocationPtrOutputWithContext(context.Context) DatasetJsonHttpServerLocationPtrOutput
}

type datasetJsonHttpServerLocationPtrType DatasetJsonHttpServerLocationArgs

func DatasetJsonHttpServerLocationPtr(v *DatasetJsonHttpServerLocationArgs) DatasetJsonHttpServerLocationPtrInput {
	return (*datasetJsonHttpServerLocationPtrType)(v)
}

func (*datasetJsonHttpServerLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetJsonHttpServerLocation)(nil)).Elem()
}

func (i *datasetJsonHttpServerLocationPtrType) ToDatasetJsonHttpServerLocationPtrOutput() DatasetJsonHttpServerLocationPtrOutput {
	return i.ToDatasetJsonHttpServerLocationPtrOutputWithContext(context.Background())
}

func (i *datasetJsonHttpServerLocationPtrType) ToDatasetJsonHttpServerLocationPtrOutputWithContext(ctx context.Context) DatasetJsonHttpServerLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetJsonHttpServerLocationPtrOutput)
}

type DatasetJsonHttpServerLocationOutput struct{ *pulumi.OutputState }

func (DatasetJsonHttpServerLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetJsonHttpServerLocation)(nil)).Elem()
}

func (o DatasetJsonHttpServerLocationOutput) ToDatasetJsonHttpServerLocationOutput() DatasetJsonHttpServerLocationOutput {
	return o
}

func (o DatasetJsonHttpServerLocationOutput) ToDatasetJsonHttpServerLocationOutputWithContext(ctx context.Context) DatasetJsonHttpServerLocationOutput {
	return o
}

func (o DatasetJsonHttpServerLocationOutput) ToDatasetJsonHttpServerLocationPtrOutput() DatasetJsonHttpServerLocationPtrOutput {
	return o.ToDatasetJsonHttpServerLocationPtrOutputWithContext(context.Background())
}

func (o DatasetJsonHttpServerLocationOutput) ToDatasetJsonHttpServerLocationPtrOutputWithContext(ctx context.Context) DatasetJsonHttpServerLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetJsonHttpServerLocation) *DatasetJsonHttpServerLocation {
		return &v
	}).(DatasetJsonHttpServerLocationPtrOutput)
}

// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetJsonHttpServerLocationOutput) DynamicFilenameEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetJsonHttpServerLocation) *bool { return v.DynamicFilenameEnabled }).(pulumi.BoolPtrOutput)
}

// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetJsonHttpServerLocationOutput) DynamicPathEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetJsonHttpServerLocation) *bool { return v.DynamicPathEnabled }).(pulumi.BoolPtrOutput)
}

// The filename of the file on the web server.
func (o DatasetJsonHttpServerLocationOutput) Filename() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetJsonHttpServerLocation) string { return v.Filename }).(pulumi.StringOutput)
}

// The folder path to the file on the web server.
func (o DatasetJsonHttpServerLocationOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetJsonHttpServerLocation) string { return v.Path }).(pulumi.StringOutput)
}

// The base URL to the web server hosting the file.
func (o DatasetJsonHttpServerLocationOutput) RelativeUrl() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetJsonHttpServerLocation) string { return v.RelativeUrl }).(pulumi.StringOutput)
}

type DatasetJsonHttpServerLocationPtrOutput struct{ *pulumi.OutputState }

func (DatasetJsonHttpServerLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetJsonHttpServerLocation)(nil)).Elem()
}

func (o DatasetJsonHttpServerLocationPtrOutput) ToDatasetJsonHttpServerLocationPtrOutput() DatasetJsonHttpServerLocationPtrOutput {
	return o
}

func (o DatasetJsonHttpServerLocationPtrOutput) ToDatasetJsonHttpServerLocationPtrOutputWithContext(ctx context.Context) DatasetJsonHttpServerLocationPtrOutput {
	return o
}

func (o DatasetJsonHttpServerLocationPtrOutput) Elem() DatasetJsonHttpServerLocationOutput {
	return o.ApplyT(func(v *DatasetJsonHttpServerLocation) DatasetJsonHttpServerLocation {
		if v != nil {
			return *v
		}
		var ret DatasetJsonHttpServerLocation
		return ret
	}).(DatasetJsonHttpServerLocationOutput)
}

// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetJsonHttpServerLocationPtrOutput) DynamicFilenameEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetJsonHttpServerLocation) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicFilenameEnabled
	}).(pulumi.BoolPtrOutput)
}

// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetJsonHttpServerLocationPtrOutput) DynamicPathEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetJsonHttpServerLocation) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicPathEnabled
	}).(pulumi.BoolPtrOutput)
}

// The filename of the file on the web server.
func (o DatasetJsonHttpServerLocationPtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetJsonHttpServerLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Filename
	}).(pulumi.StringPtrOutput)
}

// The folder path to the file on the web server.
func (o DatasetJsonHttpServerLocationPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetJsonHttpServerLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// The base URL to the web server hosting the file.
func (o DatasetJsonHttpServerLocationPtrOutput) RelativeUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetJsonHttpServerLocation) *string {
		if v == nil {
			return nil
		}
		return &v.RelativeUrl
	}).(pulumi.StringPtrOutput)
}

type DatasetJsonSchemaColumn struct {
	// The description of the column.
	Description *string `pulumi:"description"`
	// The name of the column.
	Name string `pulumi:"name"`
	// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
	Type *string `pulumi:"type"`
}

// DatasetJsonSchemaColumnInput is an input type that accepts DatasetJsonSchemaColumnArgs and DatasetJsonSchemaColumnOutput values.
// You can construct a concrete instance of `DatasetJsonSchemaColumnInput` via:
//
//	DatasetJsonSchemaColumnArgs{...}
type DatasetJsonSchemaColumnInput interface {
	pulumi.Input

	ToDatasetJsonSchemaColumnOutput() DatasetJsonSchemaColumnOutput
	ToDatasetJsonSchemaColumnOutputWithContext(context.Context) DatasetJsonSchemaColumnOutput
}

type DatasetJsonSchemaColumnArgs struct {
	// The description of the column.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the column.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DatasetJsonSchemaColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetJsonSchemaColumn)(nil)).Elem()
}

func (i DatasetJsonSchemaColumnArgs) ToDatasetJsonSchemaColumnOutput() DatasetJsonSchemaColumnOutput {
	return i.ToDatasetJsonSchemaColumnOutputWithContext(context.Background())
}

func (i DatasetJsonSchemaColumnArgs) ToDatasetJsonSchemaColumnOutputWithContext(ctx context.Context) DatasetJsonSchemaColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetJsonSchemaColumnOutput)
}

// DatasetJsonSchemaColumnArrayInput is an input type that accepts DatasetJsonSchemaColumnArray and DatasetJsonSchemaColumnArrayOutput values.
// You can construct a concrete instance of `DatasetJsonSchemaColumnArrayInput` via:
//
//	DatasetJsonSchemaColumnArray{ DatasetJsonSchemaColumnArgs{...} }
type DatasetJsonSchemaColumnArrayInput interface {
	pulumi.Input

	ToDatasetJsonSchemaColumnArrayOutput() DatasetJsonSchemaColumnArrayOutput
	ToDatasetJsonSchemaColumnArrayOutputWithContext(context.Context) DatasetJsonSchemaColumnArrayOutput
}

type DatasetJsonSchemaColumnArray []DatasetJsonSchemaColumnInput

func (DatasetJsonSchemaColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetJsonSchemaColumn)(nil)).Elem()
}

func (i DatasetJsonSchemaColumnArray) ToDatasetJsonSchemaColumnArrayOutput() DatasetJsonSchemaColumnArrayOutput {
	return i.ToDatasetJsonSchemaColumnArrayOutputWithContext(context.Background())
}

func (i DatasetJsonSchemaColumnArray) ToDatasetJsonSchemaColumnArrayOutputWithContext(ctx context.Context) DatasetJsonSchemaColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetJsonSchemaColumnArrayOutput)
}

type DatasetJsonSchemaColumnOutput struct{ *pulumi.OutputState }

func (DatasetJsonSchemaColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetJsonSchemaColumn)(nil)).Elem()
}

func (o DatasetJsonSchemaColumnOutput) ToDatasetJsonSchemaColumnOutput() DatasetJsonSchemaColumnOutput {
	return o
}

func (o DatasetJsonSchemaColumnOutput) ToDatasetJsonSchemaColumnOutputWithContext(ctx context.Context) DatasetJsonSchemaColumnOutput {
	return o
}

// The description of the column.
func (o DatasetJsonSchemaColumnOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetJsonSchemaColumn) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the column.
func (o DatasetJsonSchemaColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetJsonSchemaColumn) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
func (o DatasetJsonSchemaColumnOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetJsonSchemaColumn) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DatasetJsonSchemaColumnArrayOutput struct{ *pulumi.OutputState }

func (DatasetJsonSchemaColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetJsonSchemaColumn)(nil)).Elem()
}

func (o DatasetJsonSchemaColumnArrayOutput) ToDatasetJsonSchemaColumnArrayOutput() DatasetJsonSchemaColumnArrayOutput {
	return o
}

func (o DatasetJsonSchemaColumnArrayOutput) ToDatasetJsonSchemaColumnArrayOutputWithContext(ctx context.Context) DatasetJsonSchemaColumnArrayOutput {
	return o
}

func (o DatasetJsonSchemaColumnArrayOutput) Index(i pulumi.IntInput) DatasetJsonSchemaColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetJsonSchemaColumn {
		return vs[0].([]DatasetJsonSchemaColumn)[vs[1].(int)]
	}).(DatasetJsonSchemaColumnOutput)
}

type DatasetMysqlSchemaColumn struct {
	// The description of the column.
	Description *string `pulumi:"description"`
	// The name of the column.
	Name string `pulumi:"name"`
	// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
	Type *string `pulumi:"type"`
}

// DatasetMysqlSchemaColumnInput is an input type that accepts DatasetMysqlSchemaColumnArgs and DatasetMysqlSchemaColumnOutput values.
// You can construct a concrete instance of `DatasetMysqlSchemaColumnInput` via:
//
//	DatasetMysqlSchemaColumnArgs{...}
type DatasetMysqlSchemaColumnInput interface {
	pulumi.Input

	ToDatasetMysqlSchemaColumnOutput() DatasetMysqlSchemaColumnOutput
	ToDatasetMysqlSchemaColumnOutputWithContext(context.Context) DatasetMysqlSchemaColumnOutput
}

type DatasetMysqlSchemaColumnArgs struct {
	// The description of the column.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the column.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DatasetMysqlSchemaColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetMysqlSchemaColumn)(nil)).Elem()
}

func (i DatasetMysqlSchemaColumnArgs) ToDatasetMysqlSchemaColumnOutput() DatasetMysqlSchemaColumnOutput {
	return i.ToDatasetMysqlSchemaColumnOutputWithContext(context.Background())
}

func (i DatasetMysqlSchemaColumnArgs) ToDatasetMysqlSchemaColumnOutputWithContext(ctx context.Context) DatasetMysqlSchemaColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetMysqlSchemaColumnOutput)
}

// DatasetMysqlSchemaColumnArrayInput is an input type that accepts DatasetMysqlSchemaColumnArray and DatasetMysqlSchemaColumnArrayOutput values.
// You can construct a concrete instance of `DatasetMysqlSchemaColumnArrayInput` via:
//
//	DatasetMysqlSchemaColumnArray{ DatasetMysqlSchemaColumnArgs{...} }
type DatasetMysqlSchemaColumnArrayInput interface {
	pulumi.Input

	ToDatasetMysqlSchemaColumnArrayOutput() DatasetMysqlSchemaColumnArrayOutput
	ToDatasetMysqlSchemaColumnArrayOutputWithContext(context.Context) DatasetMysqlSchemaColumnArrayOutput
}

type DatasetMysqlSchemaColumnArray []DatasetMysqlSchemaColumnInput

func (DatasetMysqlSchemaColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetMysqlSchemaColumn)(nil)).Elem()
}

func (i DatasetMysqlSchemaColumnArray) ToDatasetMysqlSchemaColumnArrayOutput() DatasetMysqlSchemaColumnArrayOutput {
	return i.ToDatasetMysqlSchemaColumnArrayOutputWithContext(context.Background())
}

func (i DatasetMysqlSchemaColumnArray) ToDatasetMysqlSchemaColumnArrayOutputWithContext(ctx context.Context) DatasetMysqlSchemaColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetMysqlSchemaColumnArrayOutput)
}

type DatasetMysqlSchemaColumnOutput struct{ *pulumi.OutputState }

func (DatasetMysqlSchemaColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetMysqlSchemaColumn)(nil)).Elem()
}

func (o DatasetMysqlSchemaColumnOutput) ToDatasetMysqlSchemaColumnOutput() DatasetMysqlSchemaColumnOutput {
	return o
}

func (o DatasetMysqlSchemaColumnOutput) ToDatasetMysqlSchemaColumnOutputWithContext(ctx context.Context) DatasetMysqlSchemaColumnOutput {
	return o
}

// The description of the column.
func (o DatasetMysqlSchemaColumnOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetMysqlSchemaColumn) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the column.
func (o DatasetMysqlSchemaColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetMysqlSchemaColumn) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
func (o DatasetMysqlSchemaColumnOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetMysqlSchemaColumn) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DatasetMysqlSchemaColumnArrayOutput struct{ *pulumi.OutputState }

func (DatasetMysqlSchemaColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetMysqlSchemaColumn)(nil)).Elem()
}

func (o DatasetMysqlSchemaColumnArrayOutput) ToDatasetMysqlSchemaColumnArrayOutput() DatasetMysqlSchemaColumnArrayOutput {
	return o
}

func (o DatasetMysqlSchemaColumnArrayOutput) ToDatasetMysqlSchemaColumnArrayOutputWithContext(ctx context.Context) DatasetMysqlSchemaColumnArrayOutput {
	return o
}

func (o DatasetMysqlSchemaColumnArrayOutput) Index(i pulumi.IntInput) DatasetMysqlSchemaColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetMysqlSchemaColumn {
		return vs[0].([]DatasetMysqlSchemaColumn)[vs[1].(int)]
	}).(DatasetMysqlSchemaColumnOutput)
}

type DatasetParquetAzureBlobFsLocation struct {
	// Is the `fileSystem` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicFileSystemEnabled *bool `pulumi:"dynamicFileSystemEnabled"`
	// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicFilenameEnabled *bool `pulumi:"dynamicFilenameEnabled"`
	// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicPathEnabled *bool `pulumi:"dynamicPathEnabled"`
	// The container on the Azure Data Lake Storage Account hosting the file.
	FileSystem *string `pulumi:"fileSystem"`
	// The filename of the file on the Azure Data Lake Storage Account.
	Filename *string `pulumi:"filename"`
	// The folder path to the file on the Azure Data Lake Storage Account.
	Path *string `pulumi:"path"`
}

// DatasetParquetAzureBlobFsLocationInput is an input type that accepts DatasetParquetAzureBlobFsLocationArgs and DatasetParquetAzureBlobFsLocationOutput values.
// You can construct a concrete instance of `DatasetParquetAzureBlobFsLocationInput` via:
//
//	DatasetParquetAzureBlobFsLocationArgs{...}
type DatasetParquetAzureBlobFsLocationInput interface {
	pulumi.Input

	ToDatasetParquetAzureBlobFsLocationOutput() DatasetParquetAzureBlobFsLocationOutput
	ToDatasetParquetAzureBlobFsLocationOutputWithContext(context.Context) DatasetParquetAzureBlobFsLocationOutput
}

type DatasetParquetAzureBlobFsLocationArgs struct {
	// Is the `fileSystem` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicFileSystemEnabled pulumi.BoolPtrInput `pulumi:"dynamicFileSystemEnabled"`
	// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicFilenameEnabled pulumi.BoolPtrInput `pulumi:"dynamicFilenameEnabled"`
	// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicPathEnabled pulumi.BoolPtrInput `pulumi:"dynamicPathEnabled"`
	// The container on the Azure Data Lake Storage Account hosting the file.
	FileSystem pulumi.StringPtrInput `pulumi:"fileSystem"`
	// The filename of the file on the Azure Data Lake Storage Account.
	Filename pulumi.StringPtrInput `pulumi:"filename"`
	// The folder path to the file on the Azure Data Lake Storage Account.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (DatasetParquetAzureBlobFsLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetParquetAzureBlobFsLocation)(nil)).Elem()
}

func (i DatasetParquetAzureBlobFsLocationArgs) ToDatasetParquetAzureBlobFsLocationOutput() DatasetParquetAzureBlobFsLocationOutput {
	return i.ToDatasetParquetAzureBlobFsLocationOutputWithContext(context.Background())
}

func (i DatasetParquetAzureBlobFsLocationArgs) ToDatasetParquetAzureBlobFsLocationOutputWithContext(ctx context.Context) DatasetParquetAzureBlobFsLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetParquetAzureBlobFsLocationOutput)
}

func (i DatasetParquetAzureBlobFsLocationArgs) ToDatasetParquetAzureBlobFsLocationPtrOutput() DatasetParquetAzureBlobFsLocationPtrOutput {
	return i.ToDatasetParquetAzureBlobFsLocationPtrOutputWithContext(context.Background())
}

func (i DatasetParquetAzureBlobFsLocationArgs) ToDatasetParquetAzureBlobFsLocationPtrOutputWithContext(ctx context.Context) DatasetParquetAzureBlobFsLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetParquetAzureBlobFsLocationOutput).ToDatasetParquetAzureBlobFsLocationPtrOutputWithContext(ctx)
}

// DatasetParquetAzureBlobFsLocationPtrInput is an input type that accepts DatasetParquetAzureBlobFsLocationArgs, DatasetParquetAzureBlobFsLocationPtr and DatasetParquetAzureBlobFsLocationPtrOutput values.
// You can construct a concrete instance of `DatasetParquetAzureBlobFsLocationPtrInput` via:
//
//	        DatasetParquetAzureBlobFsLocationArgs{...}
//
//	or:
//
//	        nil
type DatasetParquetAzureBlobFsLocationPtrInput interface {
	pulumi.Input

	ToDatasetParquetAzureBlobFsLocationPtrOutput() DatasetParquetAzureBlobFsLocationPtrOutput
	ToDatasetParquetAzureBlobFsLocationPtrOutputWithContext(context.Context) DatasetParquetAzureBlobFsLocationPtrOutput
}

type datasetParquetAzureBlobFsLocationPtrType DatasetParquetAzureBlobFsLocationArgs

func DatasetParquetAzureBlobFsLocationPtr(v *DatasetParquetAzureBlobFsLocationArgs) DatasetParquetAzureBlobFsLocationPtrInput {
	return (*datasetParquetAzureBlobFsLocationPtrType)(v)
}

func (*datasetParquetAzureBlobFsLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetParquetAzureBlobFsLocation)(nil)).Elem()
}

func (i *datasetParquetAzureBlobFsLocationPtrType) ToDatasetParquetAzureBlobFsLocationPtrOutput() DatasetParquetAzureBlobFsLocationPtrOutput {
	return i.ToDatasetParquetAzureBlobFsLocationPtrOutputWithContext(context.Background())
}

func (i *datasetParquetAzureBlobFsLocationPtrType) ToDatasetParquetAzureBlobFsLocationPtrOutputWithContext(ctx context.Context) DatasetParquetAzureBlobFsLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetParquetAzureBlobFsLocationPtrOutput)
}

type DatasetParquetAzureBlobFsLocationOutput struct{ *pulumi.OutputState }

func (DatasetParquetAzureBlobFsLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetParquetAzureBlobFsLocation)(nil)).Elem()
}

func (o DatasetParquetAzureBlobFsLocationOutput) ToDatasetParquetAzureBlobFsLocationOutput() DatasetParquetAzureBlobFsLocationOutput {
	return o
}

func (o DatasetParquetAzureBlobFsLocationOutput) ToDatasetParquetAzureBlobFsLocationOutputWithContext(ctx context.Context) DatasetParquetAzureBlobFsLocationOutput {
	return o
}

func (o DatasetParquetAzureBlobFsLocationOutput) ToDatasetParquetAzureBlobFsLocationPtrOutput() DatasetParquetAzureBlobFsLocationPtrOutput {
	return o.ToDatasetParquetAzureBlobFsLocationPtrOutputWithContext(context.Background())
}

func (o DatasetParquetAzureBlobFsLocationOutput) ToDatasetParquetAzureBlobFsLocationPtrOutputWithContext(ctx context.Context) DatasetParquetAzureBlobFsLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetParquetAzureBlobFsLocation) *DatasetParquetAzureBlobFsLocation {
		return &v
	}).(DatasetParquetAzureBlobFsLocationPtrOutput)
}

// Is the `fileSystem` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetParquetAzureBlobFsLocationOutput) DynamicFileSystemEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetParquetAzureBlobFsLocation) *bool { return v.DynamicFileSystemEnabled }).(pulumi.BoolPtrOutput)
}

// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetParquetAzureBlobFsLocationOutput) DynamicFilenameEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetParquetAzureBlobFsLocation) *bool { return v.DynamicFilenameEnabled }).(pulumi.BoolPtrOutput)
}

// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetParquetAzureBlobFsLocationOutput) DynamicPathEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetParquetAzureBlobFsLocation) *bool { return v.DynamicPathEnabled }).(pulumi.BoolPtrOutput)
}

// The container on the Azure Data Lake Storage Account hosting the file.
func (o DatasetParquetAzureBlobFsLocationOutput) FileSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetParquetAzureBlobFsLocation) *string { return v.FileSystem }).(pulumi.StringPtrOutput)
}

// The filename of the file on the Azure Data Lake Storage Account.
func (o DatasetParquetAzureBlobFsLocationOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetParquetAzureBlobFsLocation) *string { return v.Filename }).(pulumi.StringPtrOutput)
}

// The folder path to the file on the Azure Data Lake Storage Account.
func (o DatasetParquetAzureBlobFsLocationOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetParquetAzureBlobFsLocation) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type DatasetParquetAzureBlobFsLocationPtrOutput struct{ *pulumi.OutputState }

func (DatasetParquetAzureBlobFsLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetParquetAzureBlobFsLocation)(nil)).Elem()
}

func (o DatasetParquetAzureBlobFsLocationPtrOutput) ToDatasetParquetAzureBlobFsLocationPtrOutput() DatasetParquetAzureBlobFsLocationPtrOutput {
	return o
}

func (o DatasetParquetAzureBlobFsLocationPtrOutput) ToDatasetParquetAzureBlobFsLocationPtrOutputWithContext(ctx context.Context) DatasetParquetAzureBlobFsLocationPtrOutput {
	return o
}

func (o DatasetParquetAzureBlobFsLocationPtrOutput) Elem() DatasetParquetAzureBlobFsLocationOutput {
	return o.ApplyT(func(v *DatasetParquetAzureBlobFsLocation) DatasetParquetAzureBlobFsLocation {
		if v != nil {
			return *v
		}
		var ret DatasetParquetAzureBlobFsLocation
		return ret
	}).(DatasetParquetAzureBlobFsLocationOutput)
}

// Is the `fileSystem` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetParquetAzureBlobFsLocationPtrOutput) DynamicFileSystemEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetParquetAzureBlobFsLocation) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicFileSystemEnabled
	}).(pulumi.BoolPtrOutput)
}

// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetParquetAzureBlobFsLocationPtrOutput) DynamicFilenameEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetParquetAzureBlobFsLocation) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicFilenameEnabled
	}).(pulumi.BoolPtrOutput)
}

// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetParquetAzureBlobFsLocationPtrOutput) DynamicPathEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetParquetAzureBlobFsLocation) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicPathEnabled
	}).(pulumi.BoolPtrOutput)
}

// The container on the Azure Data Lake Storage Account hosting the file.
func (o DatasetParquetAzureBlobFsLocationPtrOutput) FileSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetParquetAzureBlobFsLocation) *string {
		if v == nil {
			return nil
		}
		return v.FileSystem
	}).(pulumi.StringPtrOutput)
}

// The filename of the file on the Azure Data Lake Storage Account.
func (o DatasetParquetAzureBlobFsLocationPtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetParquetAzureBlobFsLocation) *string {
		if v == nil {
			return nil
		}
		return v.Filename
	}).(pulumi.StringPtrOutput)
}

// The folder path to the file on the Azure Data Lake Storage Account.
func (o DatasetParquetAzureBlobFsLocationPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetParquetAzureBlobFsLocation) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

type DatasetParquetAzureBlobStorageLocation struct {
	// The container on the Azure Blob Storage Account hosting the file.
	Container string `pulumi:"container"`
	// Is the `container` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicContainerEnabled *bool `pulumi:"dynamicContainerEnabled"`
	// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicFilenameEnabled *bool `pulumi:"dynamicFilenameEnabled"`
	// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicPathEnabled *bool `pulumi:"dynamicPathEnabled"`
	// The filename of the file on the Azure Blob Storage Account.
	Filename *string `pulumi:"filename"`
	// The folder path to the file on the Azure Blob Storage Account.
	Path *string `pulumi:"path"`
}

// DatasetParquetAzureBlobStorageLocationInput is an input type that accepts DatasetParquetAzureBlobStorageLocationArgs and DatasetParquetAzureBlobStorageLocationOutput values.
// You can construct a concrete instance of `DatasetParquetAzureBlobStorageLocationInput` via:
//
//	DatasetParquetAzureBlobStorageLocationArgs{...}
type DatasetParquetAzureBlobStorageLocationInput interface {
	pulumi.Input

	ToDatasetParquetAzureBlobStorageLocationOutput() DatasetParquetAzureBlobStorageLocationOutput
	ToDatasetParquetAzureBlobStorageLocationOutputWithContext(context.Context) DatasetParquetAzureBlobStorageLocationOutput
}

type DatasetParquetAzureBlobStorageLocationArgs struct {
	// The container on the Azure Blob Storage Account hosting the file.
	Container pulumi.StringInput `pulumi:"container"`
	// Is the `container` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicContainerEnabled pulumi.BoolPtrInput `pulumi:"dynamicContainerEnabled"`
	// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicFilenameEnabled pulumi.BoolPtrInput `pulumi:"dynamicFilenameEnabled"`
	// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicPathEnabled pulumi.BoolPtrInput `pulumi:"dynamicPathEnabled"`
	// The filename of the file on the Azure Blob Storage Account.
	Filename pulumi.StringPtrInput `pulumi:"filename"`
	// The folder path to the file on the Azure Blob Storage Account.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (DatasetParquetAzureBlobStorageLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetParquetAzureBlobStorageLocation)(nil)).Elem()
}

func (i DatasetParquetAzureBlobStorageLocationArgs) ToDatasetParquetAzureBlobStorageLocationOutput() DatasetParquetAzureBlobStorageLocationOutput {
	return i.ToDatasetParquetAzureBlobStorageLocationOutputWithContext(context.Background())
}

func (i DatasetParquetAzureBlobStorageLocationArgs) ToDatasetParquetAzureBlobStorageLocationOutputWithContext(ctx context.Context) DatasetParquetAzureBlobStorageLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetParquetAzureBlobStorageLocationOutput)
}

func (i DatasetParquetAzureBlobStorageLocationArgs) ToDatasetParquetAzureBlobStorageLocationPtrOutput() DatasetParquetAzureBlobStorageLocationPtrOutput {
	return i.ToDatasetParquetAzureBlobStorageLocationPtrOutputWithContext(context.Background())
}

func (i DatasetParquetAzureBlobStorageLocationArgs) ToDatasetParquetAzureBlobStorageLocationPtrOutputWithContext(ctx context.Context) DatasetParquetAzureBlobStorageLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetParquetAzureBlobStorageLocationOutput).ToDatasetParquetAzureBlobStorageLocationPtrOutputWithContext(ctx)
}

// DatasetParquetAzureBlobStorageLocationPtrInput is an input type that accepts DatasetParquetAzureBlobStorageLocationArgs, DatasetParquetAzureBlobStorageLocationPtr and DatasetParquetAzureBlobStorageLocationPtrOutput values.
// You can construct a concrete instance of `DatasetParquetAzureBlobStorageLocationPtrInput` via:
//
//	        DatasetParquetAzureBlobStorageLocationArgs{...}
//
//	or:
//
//	        nil
type DatasetParquetAzureBlobStorageLocationPtrInput interface {
	pulumi.Input

	ToDatasetParquetAzureBlobStorageLocationPtrOutput() DatasetParquetAzureBlobStorageLocationPtrOutput
	ToDatasetParquetAzureBlobStorageLocationPtrOutputWithContext(context.Context) DatasetParquetAzureBlobStorageLocationPtrOutput
}

type datasetParquetAzureBlobStorageLocationPtrType DatasetParquetAzureBlobStorageLocationArgs

func DatasetParquetAzureBlobStorageLocationPtr(v *DatasetParquetAzureBlobStorageLocationArgs) DatasetParquetAzureBlobStorageLocationPtrInput {
	return (*datasetParquetAzureBlobStorageLocationPtrType)(v)
}

func (*datasetParquetAzureBlobStorageLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetParquetAzureBlobStorageLocation)(nil)).Elem()
}

func (i *datasetParquetAzureBlobStorageLocationPtrType) ToDatasetParquetAzureBlobStorageLocationPtrOutput() DatasetParquetAzureBlobStorageLocationPtrOutput {
	return i.ToDatasetParquetAzureBlobStorageLocationPtrOutputWithContext(context.Background())
}

func (i *datasetParquetAzureBlobStorageLocationPtrType) ToDatasetParquetAzureBlobStorageLocationPtrOutputWithContext(ctx context.Context) DatasetParquetAzureBlobStorageLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetParquetAzureBlobStorageLocationPtrOutput)
}

type DatasetParquetAzureBlobStorageLocationOutput struct{ *pulumi.OutputState }

func (DatasetParquetAzureBlobStorageLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetParquetAzureBlobStorageLocation)(nil)).Elem()
}

func (o DatasetParquetAzureBlobStorageLocationOutput) ToDatasetParquetAzureBlobStorageLocationOutput() DatasetParquetAzureBlobStorageLocationOutput {
	return o
}

func (o DatasetParquetAzureBlobStorageLocationOutput) ToDatasetParquetAzureBlobStorageLocationOutputWithContext(ctx context.Context) DatasetParquetAzureBlobStorageLocationOutput {
	return o
}

func (o DatasetParquetAzureBlobStorageLocationOutput) ToDatasetParquetAzureBlobStorageLocationPtrOutput() DatasetParquetAzureBlobStorageLocationPtrOutput {
	return o.ToDatasetParquetAzureBlobStorageLocationPtrOutputWithContext(context.Background())
}

func (o DatasetParquetAzureBlobStorageLocationOutput) ToDatasetParquetAzureBlobStorageLocationPtrOutputWithContext(ctx context.Context) DatasetParquetAzureBlobStorageLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetParquetAzureBlobStorageLocation) *DatasetParquetAzureBlobStorageLocation {
		return &v
	}).(DatasetParquetAzureBlobStorageLocationPtrOutput)
}

// The container on the Azure Blob Storage Account hosting the file.
func (o DatasetParquetAzureBlobStorageLocationOutput) Container() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetParquetAzureBlobStorageLocation) string { return v.Container }).(pulumi.StringOutput)
}

// Is the `container` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetParquetAzureBlobStorageLocationOutput) DynamicContainerEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetParquetAzureBlobStorageLocation) *bool { return v.DynamicContainerEnabled }).(pulumi.BoolPtrOutput)
}

// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetParquetAzureBlobStorageLocationOutput) DynamicFilenameEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetParquetAzureBlobStorageLocation) *bool { return v.DynamicFilenameEnabled }).(pulumi.BoolPtrOutput)
}

// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetParquetAzureBlobStorageLocationOutput) DynamicPathEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetParquetAzureBlobStorageLocation) *bool { return v.DynamicPathEnabled }).(pulumi.BoolPtrOutput)
}

// The filename of the file on the Azure Blob Storage Account.
func (o DatasetParquetAzureBlobStorageLocationOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetParquetAzureBlobStorageLocation) *string { return v.Filename }).(pulumi.StringPtrOutput)
}

// The folder path to the file on the Azure Blob Storage Account.
func (o DatasetParquetAzureBlobStorageLocationOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetParquetAzureBlobStorageLocation) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type DatasetParquetAzureBlobStorageLocationPtrOutput struct{ *pulumi.OutputState }

func (DatasetParquetAzureBlobStorageLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetParquetAzureBlobStorageLocation)(nil)).Elem()
}

func (o DatasetParquetAzureBlobStorageLocationPtrOutput) ToDatasetParquetAzureBlobStorageLocationPtrOutput() DatasetParquetAzureBlobStorageLocationPtrOutput {
	return o
}

func (o DatasetParquetAzureBlobStorageLocationPtrOutput) ToDatasetParquetAzureBlobStorageLocationPtrOutputWithContext(ctx context.Context) DatasetParquetAzureBlobStorageLocationPtrOutput {
	return o
}

func (o DatasetParquetAzureBlobStorageLocationPtrOutput) Elem() DatasetParquetAzureBlobStorageLocationOutput {
	return o.ApplyT(func(v *DatasetParquetAzureBlobStorageLocation) DatasetParquetAzureBlobStorageLocation {
		if v != nil {
			return *v
		}
		var ret DatasetParquetAzureBlobStorageLocation
		return ret
	}).(DatasetParquetAzureBlobStorageLocationOutput)
}

// The container on the Azure Blob Storage Account hosting the file.
func (o DatasetParquetAzureBlobStorageLocationPtrOutput) Container() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetParquetAzureBlobStorageLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Container
	}).(pulumi.StringPtrOutput)
}

// Is the `container` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetParquetAzureBlobStorageLocationPtrOutput) DynamicContainerEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetParquetAzureBlobStorageLocation) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicContainerEnabled
	}).(pulumi.BoolPtrOutput)
}

// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetParquetAzureBlobStorageLocationPtrOutput) DynamicFilenameEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetParquetAzureBlobStorageLocation) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicFilenameEnabled
	}).(pulumi.BoolPtrOutput)
}

// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetParquetAzureBlobStorageLocationPtrOutput) DynamicPathEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetParquetAzureBlobStorageLocation) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicPathEnabled
	}).(pulumi.BoolPtrOutput)
}

// The filename of the file on the Azure Blob Storage Account.
func (o DatasetParquetAzureBlobStorageLocationPtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetParquetAzureBlobStorageLocation) *string {
		if v == nil {
			return nil
		}
		return v.Filename
	}).(pulumi.StringPtrOutput)
}

// The folder path to the file on the Azure Blob Storage Account.
func (o DatasetParquetAzureBlobStorageLocationPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetParquetAzureBlobStorageLocation) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

type DatasetParquetHttpServerLocation struct {
	// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicFilenameEnabled *bool `pulumi:"dynamicFilenameEnabled"`
	// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicPathEnabled *bool `pulumi:"dynamicPathEnabled"`
	// The filename of the file on the web server.
	Filename string `pulumi:"filename"`
	// The folder path to the file on the web server.
	Path *string `pulumi:"path"`
	// The base URL to the web server hosting the file.
	RelativeUrl string `pulumi:"relativeUrl"`
}

// DatasetParquetHttpServerLocationInput is an input type that accepts DatasetParquetHttpServerLocationArgs and DatasetParquetHttpServerLocationOutput values.
// You can construct a concrete instance of `DatasetParquetHttpServerLocationInput` via:
//
//	DatasetParquetHttpServerLocationArgs{...}
type DatasetParquetHttpServerLocationInput interface {
	pulumi.Input

	ToDatasetParquetHttpServerLocationOutput() DatasetParquetHttpServerLocationOutput
	ToDatasetParquetHttpServerLocationOutputWithContext(context.Context) DatasetParquetHttpServerLocationOutput
}

type DatasetParquetHttpServerLocationArgs struct {
	// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicFilenameEnabled pulumi.BoolPtrInput `pulumi:"dynamicFilenameEnabled"`
	// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
	DynamicPathEnabled pulumi.BoolPtrInput `pulumi:"dynamicPathEnabled"`
	// The filename of the file on the web server.
	Filename pulumi.StringInput `pulumi:"filename"`
	// The folder path to the file on the web server.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The base URL to the web server hosting the file.
	RelativeUrl pulumi.StringInput `pulumi:"relativeUrl"`
}

func (DatasetParquetHttpServerLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetParquetHttpServerLocation)(nil)).Elem()
}

func (i DatasetParquetHttpServerLocationArgs) ToDatasetParquetHttpServerLocationOutput() DatasetParquetHttpServerLocationOutput {
	return i.ToDatasetParquetHttpServerLocationOutputWithContext(context.Background())
}

func (i DatasetParquetHttpServerLocationArgs) ToDatasetParquetHttpServerLocationOutputWithContext(ctx context.Context) DatasetParquetHttpServerLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetParquetHttpServerLocationOutput)
}

func (i DatasetParquetHttpServerLocationArgs) ToDatasetParquetHttpServerLocationPtrOutput() DatasetParquetHttpServerLocationPtrOutput {
	return i.ToDatasetParquetHttpServerLocationPtrOutputWithContext(context.Background())
}

func (i DatasetParquetHttpServerLocationArgs) ToDatasetParquetHttpServerLocationPtrOutputWithContext(ctx context.Context) DatasetParquetHttpServerLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetParquetHttpServerLocationOutput).ToDatasetParquetHttpServerLocationPtrOutputWithContext(ctx)
}

// DatasetParquetHttpServerLocationPtrInput is an input type that accepts DatasetParquetHttpServerLocationArgs, DatasetParquetHttpServerLocationPtr and DatasetParquetHttpServerLocationPtrOutput values.
// You can construct a concrete instance of `DatasetParquetHttpServerLocationPtrInput` via:
//
//	        DatasetParquetHttpServerLocationArgs{...}
//
//	or:
//
//	        nil
type DatasetParquetHttpServerLocationPtrInput interface {
	pulumi.Input

	ToDatasetParquetHttpServerLocationPtrOutput() DatasetParquetHttpServerLocationPtrOutput
	ToDatasetParquetHttpServerLocationPtrOutputWithContext(context.Context) DatasetParquetHttpServerLocationPtrOutput
}

type datasetParquetHttpServerLocationPtrType DatasetParquetHttpServerLocationArgs

func DatasetParquetHttpServerLocationPtr(v *DatasetParquetHttpServerLocationArgs) DatasetParquetHttpServerLocationPtrInput {
	return (*datasetParquetHttpServerLocationPtrType)(v)
}

func (*datasetParquetHttpServerLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetParquetHttpServerLocation)(nil)).Elem()
}

func (i *datasetParquetHttpServerLocationPtrType) ToDatasetParquetHttpServerLocationPtrOutput() DatasetParquetHttpServerLocationPtrOutput {
	return i.ToDatasetParquetHttpServerLocationPtrOutputWithContext(context.Background())
}

func (i *datasetParquetHttpServerLocationPtrType) ToDatasetParquetHttpServerLocationPtrOutputWithContext(ctx context.Context) DatasetParquetHttpServerLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetParquetHttpServerLocationPtrOutput)
}

type DatasetParquetHttpServerLocationOutput struct{ *pulumi.OutputState }

func (DatasetParquetHttpServerLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetParquetHttpServerLocation)(nil)).Elem()
}

func (o DatasetParquetHttpServerLocationOutput) ToDatasetParquetHttpServerLocationOutput() DatasetParquetHttpServerLocationOutput {
	return o
}

func (o DatasetParquetHttpServerLocationOutput) ToDatasetParquetHttpServerLocationOutputWithContext(ctx context.Context) DatasetParquetHttpServerLocationOutput {
	return o
}

func (o DatasetParquetHttpServerLocationOutput) ToDatasetParquetHttpServerLocationPtrOutput() DatasetParquetHttpServerLocationPtrOutput {
	return o.ToDatasetParquetHttpServerLocationPtrOutputWithContext(context.Background())
}

func (o DatasetParquetHttpServerLocationOutput) ToDatasetParquetHttpServerLocationPtrOutputWithContext(ctx context.Context) DatasetParquetHttpServerLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetParquetHttpServerLocation) *DatasetParquetHttpServerLocation {
		return &v
	}).(DatasetParquetHttpServerLocationPtrOutput)
}

// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetParquetHttpServerLocationOutput) DynamicFilenameEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetParquetHttpServerLocation) *bool { return v.DynamicFilenameEnabled }).(pulumi.BoolPtrOutput)
}

// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetParquetHttpServerLocationOutput) DynamicPathEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetParquetHttpServerLocation) *bool { return v.DynamicPathEnabled }).(pulumi.BoolPtrOutput)
}

// The filename of the file on the web server.
func (o DatasetParquetHttpServerLocationOutput) Filename() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetParquetHttpServerLocation) string { return v.Filename }).(pulumi.StringOutput)
}

// The folder path to the file on the web server.
func (o DatasetParquetHttpServerLocationOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetParquetHttpServerLocation) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The base URL to the web server hosting the file.
func (o DatasetParquetHttpServerLocationOutput) RelativeUrl() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetParquetHttpServerLocation) string { return v.RelativeUrl }).(pulumi.StringOutput)
}

type DatasetParquetHttpServerLocationPtrOutput struct{ *pulumi.OutputState }

func (DatasetParquetHttpServerLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetParquetHttpServerLocation)(nil)).Elem()
}

func (o DatasetParquetHttpServerLocationPtrOutput) ToDatasetParquetHttpServerLocationPtrOutput() DatasetParquetHttpServerLocationPtrOutput {
	return o
}

func (o DatasetParquetHttpServerLocationPtrOutput) ToDatasetParquetHttpServerLocationPtrOutputWithContext(ctx context.Context) DatasetParquetHttpServerLocationPtrOutput {
	return o
}

func (o DatasetParquetHttpServerLocationPtrOutput) Elem() DatasetParquetHttpServerLocationOutput {
	return o.ApplyT(func(v *DatasetParquetHttpServerLocation) DatasetParquetHttpServerLocation {
		if v != nil {
			return *v
		}
		var ret DatasetParquetHttpServerLocation
		return ret
	}).(DatasetParquetHttpServerLocationOutput)
}

// Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetParquetHttpServerLocationPtrOutput) DynamicFilenameEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetParquetHttpServerLocation) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicFilenameEnabled
	}).(pulumi.BoolPtrOutput)
}

// Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
func (o DatasetParquetHttpServerLocationPtrOutput) DynamicPathEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetParquetHttpServerLocation) *bool {
		if v == nil {
			return nil
		}
		return v.DynamicPathEnabled
	}).(pulumi.BoolPtrOutput)
}

// The filename of the file on the web server.
func (o DatasetParquetHttpServerLocationPtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetParquetHttpServerLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Filename
	}).(pulumi.StringPtrOutput)
}

// The folder path to the file on the web server.
func (o DatasetParquetHttpServerLocationPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetParquetHttpServerLocation) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The base URL to the web server hosting the file.
func (o DatasetParquetHttpServerLocationPtrOutput) RelativeUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetParquetHttpServerLocation) *string {
		if v == nil {
			return nil
		}
		return &v.RelativeUrl
	}).(pulumi.StringPtrOutput)
}

type DatasetParquetSchemaColumn struct {
	// The description of the column.
	Description *string `pulumi:"description"`
	// The name of the column.
	Name string `pulumi:"name"`
	// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
	Type *string `pulumi:"type"`
}

// DatasetParquetSchemaColumnInput is an input type that accepts DatasetParquetSchemaColumnArgs and DatasetParquetSchemaColumnOutput values.
// You can construct a concrete instance of `DatasetParquetSchemaColumnInput` via:
//
//	DatasetParquetSchemaColumnArgs{...}
type DatasetParquetSchemaColumnInput interface {
	pulumi.Input

	ToDatasetParquetSchemaColumnOutput() DatasetParquetSchemaColumnOutput
	ToDatasetParquetSchemaColumnOutputWithContext(context.Context) DatasetParquetSchemaColumnOutput
}

type DatasetParquetSchemaColumnArgs struct {
	// The description of the column.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the column.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DatasetParquetSchemaColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetParquetSchemaColumn)(nil)).Elem()
}

func (i DatasetParquetSchemaColumnArgs) ToDatasetParquetSchemaColumnOutput() DatasetParquetSchemaColumnOutput {
	return i.ToDatasetParquetSchemaColumnOutputWithContext(context.Background())
}

func (i DatasetParquetSchemaColumnArgs) ToDatasetParquetSchemaColumnOutputWithContext(ctx context.Context) DatasetParquetSchemaColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetParquetSchemaColumnOutput)
}

// DatasetParquetSchemaColumnArrayInput is an input type that accepts DatasetParquetSchemaColumnArray and DatasetParquetSchemaColumnArrayOutput values.
// You can construct a concrete instance of `DatasetParquetSchemaColumnArrayInput` via:
//
//	DatasetParquetSchemaColumnArray{ DatasetParquetSchemaColumnArgs{...} }
type DatasetParquetSchemaColumnArrayInput interface {
	pulumi.Input

	ToDatasetParquetSchemaColumnArrayOutput() DatasetParquetSchemaColumnArrayOutput
	ToDatasetParquetSchemaColumnArrayOutputWithContext(context.Context) DatasetParquetSchemaColumnArrayOutput
}

type DatasetParquetSchemaColumnArray []DatasetParquetSchemaColumnInput

func (DatasetParquetSchemaColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetParquetSchemaColumn)(nil)).Elem()
}

func (i DatasetParquetSchemaColumnArray) ToDatasetParquetSchemaColumnArrayOutput() DatasetParquetSchemaColumnArrayOutput {
	return i.ToDatasetParquetSchemaColumnArrayOutputWithContext(context.Background())
}

func (i DatasetParquetSchemaColumnArray) ToDatasetParquetSchemaColumnArrayOutputWithContext(ctx context.Context) DatasetParquetSchemaColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetParquetSchemaColumnArrayOutput)
}

type DatasetParquetSchemaColumnOutput struct{ *pulumi.OutputState }

func (DatasetParquetSchemaColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetParquetSchemaColumn)(nil)).Elem()
}

func (o DatasetParquetSchemaColumnOutput) ToDatasetParquetSchemaColumnOutput() DatasetParquetSchemaColumnOutput {
	return o
}

func (o DatasetParquetSchemaColumnOutput) ToDatasetParquetSchemaColumnOutputWithContext(ctx context.Context) DatasetParquetSchemaColumnOutput {
	return o
}

// The description of the column.
func (o DatasetParquetSchemaColumnOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetParquetSchemaColumn) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the column.
func (o DatasetParquetSchemaColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetParquetSchemaColumn) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
func (o DatasetParquetSchemaColumnOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetParquetSchemaColumn) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DatasetParquetSchemaColumnArrayOutput struct{ *pulumi.OutputState }

func (DatasetParquetSchemaColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetParquetSchemaColumn)(nil)).Elem()
}

func (o DatasetParquetSchemaColumnArrayOutput) ToDatasetParquetSchemaColumnArrayOutput() DatasetParquetSchemaColumnArrayOutput {
	return o
}

func (o DatasetParquetSchemaColumnArrayOutput) ToDatasetParquetSchemaColumnArrayOutputWithContext(ctx context.Context) DatasetParquetSchemaColumnArrayOutput {
	return o
}

func (o DatasetParquetSchemaColumnArrayOutput) Index(i pulumi.IntInput) DatasetParquetSchemaColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetParquetSchemaColumn {
		return vs[0].([]DatasetParquetSchemaColumn)[vs[1].(int)]
	}).(DatasetParquetSchemaColumnOutput)
}

type DatasetPostgresqlSchemaColumn struct {
	// The description of the column.
	Description *string `pulumi:"description"`
	// The name of the column.
	Name string `pulumi:"name"`
	// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
	Type *string `pulumi:"type"`
}

// DatasetPostgresqlSchemaColumnInput is an input type that accepts DatasetPostgresqlSchemaColumnArgs and DatasetPostgresqlSchemaColumnOutput values.
// You can construct a concrete instance of `DatasetPostgresqlSchemaColumnInput` via:
//
//	DatasetPostgresqlSchemaColumnArgs{...}
type DatasetPostgresqlSchemaColumnInput interface {
	pulumi.Input

	ToDatasetPostgresqlSchemaColumnOutput() DatasetPostgresqlSchemaColumnOutput
	ToDatasetPostgresqlSchemaColumnOutputWithContext(context.Context) DatasetPostgresqlSchemaColumnOutput
}

type DatasetPostgresqlSchemaColumnArgs struct {
	// The description of the column.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the column.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DatasetPostgresqlSchemaColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetPostgresqlSchemaColumn)(nil)).Elem()
}

func (i DatasetPostgresqlSchemaColumnArgs) ToDatasetPostgresqlSchemaColumnOutput() DatasetPostgresqlSchemaColumnOutput {
	return i.ToDatasetPostgresqlSchemaColumnOutputWithContext(context.Background())
}

func (i DatasetPostgresqlSchemaColumnArgs) ToDatasetPostgresqlSchemaColumnOutputWithContext(ctx context.Context) DatasetPostgresqlSchemaColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetPostgresqlSchemaColumnOutput)
}

// DatasetPostgresqlSchemaColumnArrayInput is an input type that accepts DatasetPostgresqlSchemaColumnArray and DatasetPostgresqlSchemaColumnArrayOutput values.
// You can construct a concrete instance of `DatasetPostgresqlSchemaColumnArrayInput` via:
//
//	DatasetPostgresqlSchemaColumnArray{ DatasetPostgresqlSchemaColumnArgs{...} }
type DatasetPostgresqlSchemaColumnArrayInput interface {
	pulumi.Input

	ToDatasetPostgresqlSchemaColumnArrayOutput() DatasetPostgresqlSchemaColumnArrayOutput
	ToDatasetPostgresqlSchemaColumnArrayOutputWithContext(context.Context) DatasetPostgresqlSchemaColumnArrayOutput
}

type DatasetPostgresqlSchemaColumnArray []DatasetPostgresqlSchemaColumnInput

func (DatasetPostgresqlSchemaColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetPostgresqlSchemaColumn)(nil)).Elem()
}

func (i DatasetPostgresqlSchemaColumnArray) ToDatasetPostgresqlSchemaColumnArrayOutput() DatasetPostgresqlSchemaColumnArrayOutput {
	return i.ToDatasetPostgresqlSchemaColumnArrayOutputWithContext(context.Background())
}

func (i DatasetPostgresqlSchemaColumnArray) ToDatasetPostgresqlSchemaColumnArrayOutputWithContext(ctx context.Context) DatasetPostgresqlSchemaColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetPostgresqlSchemaColumnArrayOutput)
}

type DatasetPostgresqlSchemaColumnOutput struct{ *pulumi.OutputState }

func (DatasetPostgresqlSchemaColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetPostgresqlSchemaColumn)(nil)).Elem()
}

func (o DatasetPostgresqlSchemaColumnOutput) ToDatasetPostgresqlSchemaColumnOutput() DatasetPostgresqlSchemaColumnOutput {
	return o
}

func (o DatasetPostgresqlSchemaColumnOutput) ToDatasetPostgresqlSchemaColumnOutputWithContext(ctx context.Context) DatasetPostgresqlSchemaColumnOutput {
	return o
}

// The description of the column.
func (o DatasetPostgresqlSchemaColumnOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetPostgresqlSchemaColumn) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the column.
func (o DatasetPostgresqlSchemaColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetPostgresqlSchemaColumn) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
func (o DatasetPostgresqlSchemaColumnOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetPostgresqlSchemaColumn) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DatasetPostgresqlSchemaColumnArrayOutput struct{ *pulumi.OutputState }

func (DatasetPostgresqlSchemaColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetPostgresqlSchemaColumn)(nil)).Elem()
}

func (o DatasetPostgresqlSchemaColumnArrayOutput) ToDatasetPostgresqlSchemaColumnArrayOutput() DatasetPostgresqlSchemaColumnArrayOutput {
	return o
}

func (o DatasetPostgresqlSchemaColumnArrayOutput) ToDatasetPostgresqlSchemaColumnArrayOutputWithContext(ctx context.Context) DatasetPostgresqlSchemaColumnArrayOutput {
	return o
}

func (o DatasetPostgresqlSchemaColumnArrayOutput) Index(i pulumi.IntInput) DatasetPostgresqlSchemaColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetPostgresqlSchemaColumn {
		return vs[0].([]DatasetPostgresqlSchemaColumn)[vs[1].(int)]
	}).(DatasetPostgresqlSchemaColumnOutput)
}

type DatasetSnowflakeSchemaColumn struct {
	// The name of the column.
	Name string `pulumi:"name"`
	// The total number of digits allowed.
	Precision *int `pulumi:"precision"`
	// The number of digits allowed to the right of the decimal point.
	Scale *int `pulumi:"scale"`
	// Type of the column. Valid values are `NUMBER`, `DECIMAL`, `NUMERIC`, `INT`, `INTEGER`, `BIGINT`, `SMALLINT`, `FLOAT``FLOAT4`, `FLOAT8`, `DOUBLE`, `DOUBLE PRECISION`, `REAL`, `VARCHAR`, `CHAR`, `CHARACTER`, `STRING`, `TEXT`, `BINARY`, `VARBINARY`, `BOOLEAN`, `DATE`, `DATETIME`, `TIME`, `TIMESTAMP`, `TIMESTAMP_LTZ`, `TIMESTAMP_NTZ`, `TIMESTAMP_TZ`, `VARIANT`, `OBJECT`, `ARRAY`, `GEOGRAPHY`. Please note these values are case sensitive.
	Type *string `pulumi:"type"`
}

// DatasetSnowflakeSchemaColumnInput is an input type that accepts DatasetSnowflakeSchemaColumnArgs and DatasetSnowflakeSchemaColumnOutput values.
// You can construct a concrete instance of `DatasetSnowflakeSchemaColumnInput` via:
//
//	DatasetSnowflakeSchemaColumnArgs{...}
type DatasetSnowflakeSchemaColumnInput interface {
	pulumi.Input

	ToDatasetSnowflakeSchemaColumnOutput() DatasetSnowflakeSchemaColumnOutput
	ToDatasetSnowflakeSchemaColumnOutputWithContext(context.Context) DatasetSnowflakeSchemaColumnOutput
}

type DatasetSnowflakeSchemaColumnArgs struct {
	// The name of the column.
	Name pulumi.StringInput `pulumi:"name"`
	// The total number of digits allowed.
	Precision pulumi.IntPtrInput `pulumi:"precision"`
	// The number of digits allowed to the right of the decimal point.
	Scale pulumi.IntPtrInput `pulumi:"scale"`
	// Type of the column. Valid values are `NUMBER`, `DECIMAL`, `NUMERIC`, `INT`, `INTEGER`, `BIGINT`, `SMALLINT`, `FLOAT``FLOAT4`, `FLOAT8`, `DOUBLE`, `DOUBLE PRECISION`, `REAL`, `VARCHAR`, `CHAR`, `CHARACTER`, `STRING`, `TEXT`, `BINARY`, `VARBINARY`, `BOOLEAN`, `DATE`, `DATETIME`, `TIME`, `TIMESTAMP`, `TIMESTAMP_LTZ`, `TIMESTAMP_NTZ`, `TIMESTAMP_TZ`, `VARIANT`, `OBJECT`, `ARRAY`, `GEOGRAPHY`. Please note these values are case sensitive.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DatasetSnowflakeSchemaColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetSnowflakeSchemaColumn)(nil)).Elem()
}

func (i DatasetSnowflakeSchemaColumnArgs) ToDatasetSnowflakeSchemaColumnOutput() DatasetSnowflakeSchemaColumnOutput {
	return i.ToDatasetSnowflakeSchemaColumnOutputWithContext(context.Background())
}

func (i DatasetSnowflakeSchemaColumnArgs) ToDatasetSnowflakeSchemaColumnOutputWithContext(ctx context.Context) DatasetSnowflakeSchemaColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetSnowflakeSchemaColumnOutput)
}

// DatasetSnowflakeSchemaColumnArrayInput is an input type that accepts DatasetSnowflakeSchemaColumnArray and DatasetSnowflakeSchemaColumnArrayOutput values.
// You can construct a concrete instance of `DatasetSnowflakeSchemaColumnArrayInput` via:
//
//	DatasetSnowflakeSchemaColumnArray{ DatasetSnowflakeSchemaColumnArgs{...} }
type DatasetSnowflakeSchemaColumnArrayInput interface {
	pulumi.Input

	ToDatasetSnowflakeSchemaColumnArrayOutput() DatasetSnowflakeSchemaColumnArrayOutput
	ToDatasetSnowflakeSchemaColumnArrayOutputWithContext(context.Context) DatasetSnowflakeSchemaColumnArrayOutput
}

type DatasetSnowflakeSchemaColumnArray []DatasetSnowflakeSchemaColumnInput

func (DatasetSnowflakeSchemaColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetSnowflakeSchemaColumn)(nil)).Elem()
}

func (i DatasetSnowflakeSchemaColumnArray) ToDatasetSnowflakeSchemaColumnArrayOutput() DatasetSnowflakeSchemaColumnArrayOutput {
	return i.ToDatasetSnowflakeSchemaColumnArrayOutputWithContext(context.Background())
}

func (i DatasetSnowflakeSchemaColumnArray) ToDatasetSnowflakeSchemaColumnArrayOutputWithContext(ctx context.Context) DatasetSnowflakeSchemaColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetSnowflakeSchemaColumnArrayOutput)
}

type DatasetSnowflakeSchemaColumnOutput struct{ *pulumi.OutputState }

func (DatasetSnowflakeSchemaColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetSnowflakeSchemaColumn)(nil)).Elem()
}

func (o DatasetSnowflakeSchemaColumnOutput) ToDatasetSnowflakeSchemaColumnOutput() DatasetSnowflakeSchemaColumnOutput {
	return o
}

func (o DatasetSnowflakeSchemaColumnOutput) ToDatasetSnowflakeSchemaColumnOutputWithContext(ctx context.Context) DatasetSnowflakeSchemaColumnOutput {
	return o
}

// The name of the column.
func (o DatasetSnowflakeSchemaColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetSnowflakeSchemaColumn) string { return v.Name }).(pulumi.StringOutput)
}

// The total number of digits allowed.
func (o DatasetSnowflakeSchemaColumnOutput) Precision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatasetSnowflakeSchemaColumn) *int { return v.Precision }).(pulumi.IntPtrOutput)
}

// The number of digits allowed to the right of the decimal point.
func (o DatasetSnowflakeSchemaColumnOutput) Scale() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatasetSnowflakeSchemaColumn) *int { return v.Scale }).(pulumi.IntPtrOutput)
}

// Type of the column. Valid values are `NUMBER`, `DECIMAL`, `NUMERIC`, `INT`, `INTEGER`, `BIGINT`, `SMALLINT`, `FLOAT“FLOAT4`, `FLOAT8`, `DOUBLE`, `DOUBLE PRECISION`, `REAL`, `VARCHAR`, `CHAR`, `CHARACTER`, `STRING`, `TEXT`, `BINARY`, `VARBINARY`, `BOOLEAN`, `DATE`, `DATETIME`, `TIME`, `TIMESTAMP`, `TIMESTAMP_LTZ`, `TIMESTAMP_NTZ`, `TIMESTAMP_TZ`, `VARIANT`, `OBJECT`, `ARRAY`, `GEOGRAPHY`. Please note these values are case sensitive.
func (o DatasetSnowflakeSchemaColumnOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetSnowflakeSchemaColumn) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DatasetSnowflakeSchemaColumnArrayOutput struct{ *pulumi.OutputState }

func (DatasetSnowflakeSchemaColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetSnowflakeSchemaColumn)(nil)).Elem()
}

func (o DatasetSnowflakeSchemaColumnArrayOutput) ToDatasetSnowflakeSchemaColumnArrayOutput() DatasetSnowflakeSchemaColumnArrayOutput {
	return o
}

func (o DatasetSnowflakeSchemaColumnArrayOutput) ToDatasetSnowflakeSchemaColumnArrayOutputWithContext(ctx context.Context) DatasetSnowflakeSchemaColumnArrayOutput {
	return o
}

func (o DatasetSnowflakeSchemaColumnArrayOutput) Index(i pulumi.IntInput) DatasetSnowflakeSchemaColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetSnowflakeSchemaColumn {
		return vs[0].([]DatasetSnowflakeSchemaColumn)[vs[1].(int)]
	}).(DatasetSnowflakeSchemaColumnOutput)
}

type DatasetSqlServerTableSchemaColumn struct {
	// The description of the column.
	Description *string `pulumi:"description"`
	// The name of the column.
	Name string `pulumi:"name"`
	// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
	Type *string `pulumi:"type"`
}

// DatasetSqlServerTableSchemaColumnInput is an input type that accepts DatasetSqlServerTableSchemaColumnArgs and DatasetSqlServerTableSchemaColumnOutput values.
// You can construct a concrete instance of `DatasetSqlServerTableSchemaColumnInput` via:
//
//	DatasetSqlServerTableSchemaColumnArgs{...}
type DatasetSqlServerTableSchemaColumnInput interface {
	pulumi.Input

	ToDatasetSqlServerTableSchemaColumnOutput() DatasetSqlServerTableSchemaColumnOutput
	ToDatasetSqlServerTableSchemaColumnOutputWithContext(context.Context) DatasetSqlServerTableSchemaColumnOutput
}

type DatasetSqlServerTableSchemaColumnArgs struct {
	// The description of the column.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the column.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DatasetSqlServerTableSchemaColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetSqlServerTableSchemaColumn)(nil)).Elem()
}

func (i DatasetSqlServerTableSchemaColumnArgs) ToDatasetSqlServerTableSchemaColumnOutput() DatasetSqlServerTableSchemaColumnOutput {
	return i.ToDatasetSqlServerTableSchemaColumnOutputWithContext(context.Background())
}

func (i DatasetSqlServerTableSchemaColumnArgs) ToDatasetSqlServerTableSchemaColumnOutputWithContext(ctx context.Context) DatasetSqlServerTableSchemaColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetSqlServerTableSchemaColumnOutput)
}

// DatasetSqlServerTableSchemaColumnArrayInput is an input type that accepts DatasetSqlServerTableSchemaColumnArray and DatasetSqlServerTableSchemaColumnArrayOutput values.
// You can construct a concrete instance of `DatasetSqlServerTableSchemaColumnArrayInput` via:
//
//	DatasetSqlServerTableSchemaColumnArray{ DatasetSqlServerTableSchemaColumnArgs{...} }
type DatasetSqlServerTableSchemaColumnArrayInput interface {
	pulumi.Input

	ToDatasetSqlServerTableSchemaColumnArrayOutput() DatasetSqlServerTableSchemaColumnArrayOutput
	ToDatasetSqlServerTableSchemaColumnArrayOutputWithContext(context.Context) DatasetSqlServerTableSchemaColumnArrayOutput
}

type DatasetSqlServerTableSchemaColumnArray []DatasetSqlServerTableSchemaColumnInput

func (DatasetSqlServerTableSchemaColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetSqlServerTableSchemaColumn)(nil)).Elem()
}

func (i DatasetSqlServerTableSchemaColumnArray) ToDatasetSqlServerTableSchemaColumnArrayOutput() DatasetSqlServerTableSchemaColumnArrayOutput {
	return i.ToDatasetSqlServerTableSchemaColumnArrayOutputWithContext(context.Background())
}

func (i DatasetSqlServerTableSchemaColumnArray) ToDatasetSqlServerTableSchemaColumnArrayOutputWithContext(ctx context.Context) DatasetSqlServerTableSchemaColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetSqlServerTableSchemaColumnArrayOutput)
}

type DatasetSqlServerTableSchemaColumnOutput struct{ *pulumi.OutputState }

func (DatasetSqlServerTableSchemaColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetSqlServerTableSchemaColumn)(nil)).Elem()
}

func (o DatasetSqlServerTableSchemaColumnOutput) ToDatasetSqlServerTableSchemaColumnOutput() DatasetSqlServerTableSchemaColumnOutput {
	return o
}

func (o DatasetSqlServerTableSchemaColumnOutput) ToDatasetSqlServerTableSchemaColumnOutputWithContext(ctx context.Context) DatasetSqlServerTableSchemaColumnOutput {
	return o
}

// The description of the column.
func (o DatasetSqlServerTableSchemaColumnOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetSqlServerTableSchemaColumn) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the column.
func (o DatasetSqlServerTableSchemaColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetSqlServerTableSchemaColumn) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the column. Valid values are `Byte`, `Byte[]`, `Boolean`, `Date`, `DateTime`,`DateTimeOffset`, `Decimal`, `Double`, `Guid`, `Int16`, `Int32`, `Int64`, `Single`, `String`, `TimeSpan`. Please note these values are case sensitive.
func (o DatasetSqlServerTableSchemaColumnOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetSqlServerTableSchemaColumn) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DatasetSqlServerTableSchemaColumnArrayOutput struct{ *pulumi.OutputState }

func (DatasetSqlServerTableSchemaColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetSqlServerTableSchemaColumn)(nil)).Elem()
}

func (o DatasetSqlServerTableSchemaColumnArrayOutput) ToDatasetSqlServerTableSchemaColumnArrayOutput() DatasetSqlServerTableSchemaColumnArrayOutput {
	return o
}

func (o DatasetSqlServerTableSchemaColumnArrayOutput) ToDatasetSqlServerTableSchemaColumnArrayOutputWithContext(ctx context.Context) DatasetSqlServerTableSchemaColumnArrayOutput {
	return o
}

func (o DatasetSqlServerTableSchemaColumnArrayOutput) Index(i pulumi.IntInput) DatasetSqlServerTableSchemaColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetSqlServerTableSchemaColumn {
		return vs[0].([]DatasetSqlServerTableSchemaColumn)[vs[1].(int)]
	}).(DatasetSqlServerTableSchemaColumnOutput)
}

type FactoryGithubConfiguration struct {
	// Specifies the GitHub account name.
	AccountName string `pulumi:"accountName"`
	// Specifies the branch of the repository to get code from.
	BranchName string `pulumi:"branchName"`
	// Specifies the GitHub Enterprise host name. For example: <https://github.mydomain.com>. Use <https://github.com> for open source repositories.
	GitUrl string `pulumi:"gitUrl"`
	// Is automated publishing enabled? Defaults to `true`.
	//
	// > **Note:** You must log in to the Data Factory management UI to complete the authentication to the GitHub repository.
	PublishingEnabled *bool `pulumi:"publishingEnabled"`
	// Specifies the name of the git repository.
	RepositoryName string `pulumi:"repositoryName"`
	// Specifies the root folder within the repository. Set to `/` for the top level.
	RootFolder string `pulumi:"rootFolder"`
}

// FactoryGithubConfigurationInput is an input type that accepts FactoryGithubConfigurationArgs and FactoryGithubConfigurationOutput values.
// You can construct a concrete instance of `FactoryGithubConfigurationInput` via:
//
//	FactoryGithubConfigurationArgs{...}
type FactoryGithubConfigurationInput interface {
	pulumi.Input

	ToFactoryGithubConfigurationOutput() FactoryGithubConfigurationOutput
	ToFactoryGithubConfigurationOutputWithContext(context.Context) FactoryGithubConfigurationOutput
}

type FactoryGithubConfigurationArgs struct {
	// Specifies the GitHub account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// Specifies the branch of the repository to get code from.
	BranchName pulumi.StringInput `pulumi:"branchName"`
	// Specifies the GitHub Enterprise host name. For example: <https://github.mydomain.com>. Use <https://github.com> for open source repositories.
	GitUrl pulumi.StringInput `pulumi:"gitUrl"`
	// Is automated publishing enabled? Defaults to `true`.
	//
	// > **Note:** You must log in to the Data Factory management UI to complete the authentication to the GitHub repository.
	PublishingEnabled pulumi.BoolPtrInput `pulumi:"publishingEnabled"`
	// Specifies the name of the git repository.
	RepositoryName pulumi.StringInput `pulumi:"repositoryName"`
	// Specifies the root folder within the repository. Set to `/` for the top level.
	RootFolder pulumi.StringInput `pulumi:"rootFolder"`
}

func (FactoryGithubConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FactoryGithubConfiguration)(nil)).Elem()
}

func (i FactoryGithubConfigurationArgs) ToFactoryGithubConfigurationOutput() FactoryGithubConfigurationOutput {
	return i.ToFactoryGithubConfigurationOutputWithContext(context.Background())
}

func (i FactoryGithubConfigurationArgs) ToFactoryGithubConfigurationOutputWithContext(ctx context.Context) FactoryGithubConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FactoryGithubConfigurationOutput)
}

func (i FactoryGithubConfigurationArgs) ToFactoryGithubConfigurationPtrOutput() FactoryGithubConfigurationPtrOutput {
	return i.ToFactoryGithubConfigurationPtrOutputWithContext(context.Background())
}

func (i FactoryGithubConfigurationArgs) ToFactoryGithubConfigurationPtrOutputWithContext(ctx context.Context) FactoryGithubConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FactoryGithubConfigurationOutput).ToFactoryGithubConfigurationPtrOutputWithContext(ctx)
}

// FactoryGithubConfigurationPtrInput is an input type that accepts FactoryGithubConfigurationArgs, FactoryGithubConfigurationPtr and FactoryGithubConfigurationPtrOutput values.
// You can construct a concrete instance of `FactoryGithubConfigurationPtrInput` via:
//
//	        FactoryGithubConfigurationArgs{...}
//
//	or:
//
//	        nil
type FactoryGithubConfigurationPtrInput interface {
	pulumi.Input

	ToFactoryGithubConfigurationPtrOutput() FactoryGithubConfigurationPtrOutput
	ToFactoryGithubConfigurationPtrOutputWithContext(context.Context) FactoryGithubConfigurationPtrOutput
}

type factoryGithubConfigurationPtrType FactoryGithubConfigurationArgs

func FactoryGithubConfigurationPtr(v *FactoryGithubConfigurationArgs) FactoryGithubConfigurationPtrInput {
	return (*factoryGithubConfigurationPtrType)(v)
}

func (*factoryGithubConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FactoryGithubConfiguration)(nil)).Elem()
}

func (i *factoryGithubConfigurationPtrType) ToFactoryGithubConfigurationPtrOutput() FactoryGithubConfigurationPtrOutput {
	return i.ToFactoryGithubConfigurationPtrOutputWithContext(context.Background())
}

func (i *factoryGithubConfigurationPtrType) ToFactoryGithubConfigurationPtrOutputWithContext(ctx context.Context) FactoryGithubConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FactoryGithubConfigurationPtrOutput)
}

type FactoryGithubConfigurationOutput struct{ *pulumi.OutputState }

func (FactoryGithubConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FactoryGithubConfiguration)(nil)).Elem()
}

func (o FactoryGithubConfigurationOutput) ToFactoryGithubConfigurationOutput() FactoryGithubConfigurationOutput {
	return o
}

func (o FactoryGithubConfigurationOutput) ToFactoryGithubConfigurationOutputWithContext(ctx context.Context) FactoryGithubConfigurationOutput {
	return o
}

func (o FactoryGithubConfigurationOutput) ToFactoryGithubConfigurationPtrOutput() FactoryGithubConfigurationPtrOutput {
	return o.ToFactoryGithubConfigurationPtrOutputWithContext(context.Background())
}

func (o FactoryGithubConfigurationOutput) ToFactoryGithubConfigurationPtrOutputWithContext(ctx context.Context) FactoryGithubConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FactoryGithubConfiguration) *FactoryGithubConfiguration {
		return &v
	}).(FactoryGithubConfigurationPtrOutput)
}

// Specifies the GitHub account name.
func (o FactoryGithubConfigurationOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v FactoryGithubConfiguration) string { return v.AccountName }).(pulumi.StringOutput)
}

// Specifies the branch of the repository to get code from.
func (o FactoryGithubConfigurationOutput) BranchName() pulumi.StringOutput {
	return o.ApplyT(func(v FactoryGithubConfiguration) string { return v.BranchName }).(pulumi.StringOutput)
}

// Specifies the GitHub Enterprise host name. For example: <https://github.mydomain.com>. Use <https://github.com> for open source repositories.
func (o FactoryGithubConfigurationOutput) GitUrl() pulumi.StringOutput {
	return o.ApplyT(func(v FactoryGithubConfiguration) string { return v.GitUrl }).(pulumi.StringOutput)
}

// Is automated publishing enabled? Defaults to `true`.
//
// > **Note:** You must log in to the Data Factory management UI to complete the authentication to the GitHub repository.
func (o FactoryGithubConfigurationOutput) PublishingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FactoryGithubConfiguration) *bool { return v.PublishingEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies the name of the git repository.
func (o FactoryGithubConfigurationOutput) RepositoryName() pulumi.StringOutput {
	return o.ApplyT(func(v FactoryGithubConfiguration) string { return v.RepositoryName }).(pulumi.StringOutput)
}

// Specifies the root folder within the repository. Set to `/` for the top level.
func (o FactoryGithubConfigurationOutput) RootFolder() pulumi.StringOutput {
	return o.ApplyT(func(v FactoryGithubConfiguration) string { return v.RootFolder }).(pulumi.StringOutput)
}

type FactoryGithubConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FactoryGithubConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FactoryGithubConfiguration)(nil)).Elem()
}

func (o FactoryGithubConfigurationPtrOutput) ToFactoryGithubConfigurationPtrOutput() FactoryGithubConfigurationPtrOutput {
	return o
}

func (o FactoryGithubConfigurationPtrOutput) ToFactoryGithubConfigurationPtrOutputWithContext(ctx context.Context) FactoryGithubConfigurationPtrOutput {
	return o
}

func (o FactoryGithubConfigurationPtrOutput) Elem() FactoryGithubConfigurationOutput {
	return o.ApplyT(func(v *FactoryGithubConfiguration) FactoryGithubConfiguration {
		if v != nil {
			return *v
		}
		var ret FactoryGithubConfiguration
		return ret
	}).(FactoryGithubConfigurationOutput)
}

// Specifies the GitHub account name.
func (o FactoryGithubConfigurationPtrOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryGithubConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.AccountName
	}).(pulumi.StringPtrOutput)
}

// Specifies the branch of the repository to get code from.
func (o FactoryGithubConfigurationPtrOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryGithubConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.BranchName
	}).(pulumi.StringPtrOutput)
}

// Specifies the GitHub Enterprise host name. For example: <https://github.mydomain.com>. Use <https://github.com> for open source repositories.
func (o FactoryGithubConfigurationPtrOutput) GitUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryGithubConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.GitUrl
	}).(pulumi.StringPtrOutput)
}

// Is automated publishing enabled? Defaults to `true`.
//
// > **Note:** You must log in to the Data Factory management UI to complete the authentication to the GitHub repository.
func (o FactoryGithubConfigurationPtrOutput) PublishingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FactoryGithubConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.PublishingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies the name of the git repository.
func (o FactoryGithubConfigurationPtrOutput) RepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryGithubConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RepositoryName
	}).(pulumi.StringPtrOutput)
}

// Specifies the root folder within the repository. Set to `/` for the top level.
func (o FactoryGithubConfigurationPtrOutput) RootFolder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryGithubConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RootFolder
	}).(pulumi.StringPtrOutput)
}

type FactoryGlobalParameter struct {
	// Specifies the global parameter name.
	Name string `pulumi:"name"`
	// Specifies the global parameter type. Possible Values are `Array`, `Bool`, `Float`, `Int`, `Object` or `String`.
	Type string `pulumi:"type"`
	// Specifies the global parameter value.
	//
	// > **Note:** For type `Array` and `Object` it is recommended to use `jsonencode()` for the value
	Value string `pulumi:"value"`
}

// FactoryGlobalParameterInput is an input type that accepts FactoryGlobalParameterArgs and FactoryGlobalParameterOutput values.
// You can construct a concrete instance of `FactoryGlobalParameterInput` via:
//
//	FactoryGlobalParameterArgs{...}
type FactoryGlobalParameterInput interface {
	pulumi.Input

	ToFactoryGlobalParameterOutput() FactoryGlobalParameterOutput
	ToFactoryGlobalParameterOutputWithContext(context.Context) FactoryGlobalParameterOutput
}

type FactoryGlobalParameterArgs struct {
	// Specifies the global parameter name.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the global parameter type. Possible Values are `Array`, `Bool`, `Float`, `Int`, `Object` or `String`.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies the global parameter value.
	//
	// > **Note:** For type `Array` and `Object` it is recommended to use `jsonencode()` for the value
	Value pulumi.StringInput `pulumi:"value"`
}

func (FactoryGlobalParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FactoryGlobalParameter)(nil)).Elem()
}

func (i FactoryGlobalParameterArgs) ToFactoryGlobalParameterOutput() FactoryGlobalParameterOutput {
	return i.ToFactoryGlobalParameterOutputWithContext(context.Background())
}

func (i FactoryGlobalParameterArgs) ToFactoryGlobalParameterOutputWithContext(ctx context.Context) FactoryGlobalParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FactoryGlobalParameterOutput)
}

// FactoryGlobalParameterArrayInput is an input type that accepts FactoryGlobalParameterArray and FactoryGlobalParameterArrayOutput values.
// You can construct a concrete instance of `FactoryGlobalParameterArrayInput` via:
//
//	FactoryGlobalParameterArray{ FactoryGlobalParameterArgs{...} }
type FactoryGlobalParameterArrayInput interface {
	pulumi.Input

	ToFactoryGlobalParameterArrayOutput() FactoryGlobalParameterArrayOutput
	ToFactoryGlobalParameterArrayOutputWithContext(context.Context) FactoryGlobalParameterArrayOutput
}

type FactoryGlobalParameterArray []FactoryGlobalParameterInput

func (FactoryGlobalParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FactoryGlobalParameter)(nil)).Elem()
}

func (i FactoryGlobalParameterArray) ToFactoryGlobalParameterArrayOutput() FactoryGlobalParameterArrayOutput {
	return i.ToFactoryGlobalParameterArrayOutputWithContext(context.Background())
}

func (i FactoryGlobalParameterArray) ToFactoryGlobalParameterArrayOutputWithContext(ctx context.Context) FactoryGlobalParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FactoryGlobalParameterArrayOutput)
}

type FactoryGlobalParameterOutput struct{ *pulumi.OutputState }

func (FactoryGlobalParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FactoryGlobalParameter)(nil)).Elem()
}

func (o FactoryGlobalParameterOutput) ToFactoryGlobalParameterOutput() FactoryGlobalParameterOutput {
	return o
}

func (o FactoryGlobalParameterOutput) ToFactoryGlobalParameterOutputWithContext(ctx context.Context) FactoryGlobalParameterOutput {
	return o
}

// Specifies the global parameter name.
func (o FactoryGlobalParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FactoryGlobalParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the global parameter type. Possible Values are `Array`, `Bool`, `Float`, `Int`, `Object` or `String`.
func (o FactoryGlobalParameterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FactoryGlobalParameter) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies the global parameter value.
//
// > **Note:** For type `Array` and `Object` it is recommended to use `jsonencode()` for the value
func (o FactoryGlobalParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FactoryGlobalParameter) string { return v.Value }).(pulumi.StringOutput)
}

type FactoryGlobalParameterArrayOutput struct{ *pulumi.OutputState }

func (FactoryGlobalParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FactoryGlobalParameter)(nil)).Elem()
}

func (o FactoryGlobalParameterArrayOutput) ToFactoryGlobalParameterArrayOutput() FactoryGlobalParameterArrayOutput {
	return o
}

func (o FactoryGlobalParameterArrayOutput) ToFactoryGlobalParameterArrayOutputWithContext(ctx context.Context) FactoryGlobalParameterArrayOutput {
	return o
}

func (o FactoryGlobalParameterArrayOutput) Index(i pulumi.IntInput) FactoryGlobalParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FactoryGlobalParameter {
		return vs[0].([]FactoryGlobalParameter)[vs[1].(int)]
	}).(FactoryGlobalParameterOutput)
}

type FactoryIdentity struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Data Factory.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId *string `pulumi:"principalId"`
	// Specifies the Tenant ID associated with the VSTS account.
	TenantId *string `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this Data Factory. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
	Type string `pulumi:"type"`
}

// FactoryIdentityInput is an input type that accepts FactoryIdentityArgs and FactoryIdentityOutput values.
// You can construct a concrete instance of `FactoryIdentityInput` via:
//
//	FactoryIdentityArgs{...}
type FactoryIdentityInput interface {
	pulumi.Input

	ToFactoryIdentityOutput() FactoryIdentityOutput
	ToFactoryIdentityOutputWithContext(context.Context) FactoryIdentityOutput
}

type FactoryIdentityArgs struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Data Factory.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// Specifies the Tenant ID associated with the VSTS account.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this Data Factory. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
	Type pulumi.StringInput `pulumi:"type"`
}

func (FactoryIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FactoryIdentity)(nil)).Elem()
}

func (i FactoryIdentityArgs) ToFactoryIdentityOutput() FactoryIdentityOutput {
	return i.ToFactoryIdentityOutputWithContext(context.Background())
}

func (i FactoryIdentityArgs) ToFactoryIdentityOutputWithContext(ctx context.Context) FactoryIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FactoryIdentityOutput)
}

func (i FactoryIdentityArgs) ToFactoryIdentityPtrOutput() FactoryIdentityPtrOutput {
	return i.ToFactoryIdentityPtrOutputWithContext(context.Background())
}

func (i FactoryIdentityArgs) ToFactoryIdentityPtrOutputWithContext(ctx context.Context) FactoryIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FactoryIdentityOutput).ToFactoryIdentityPtrOutputWithContext(ctx)
}

// FactoryIdentityPtrInput is an input type that accepts FactoryIdentityArgs, FactoryIdentityPtr and FactoryIdentityPtrOutput values.
// You can construct a concrete instance of `FactoryIdentityPtrInput` via:
//
//	        FactoryIdentityArgs{...}
//
//	or:
//
//	        nil
type FactoryIdentityPtrInput interface {
	pulumi.Input

	ToFactoryIdentityPtrOutput() FactoryIdentityPtrOutput
	ToFactoryIdentityPtrOutputWithContext(context.Context) FactoryIdentityPtrOutput
}

type factoryIdentityPtrType FactoryIdentityArgs

func FactoryIdentityPtr(v *FactoryIdentityArgs) FactoryIdentityPtrInput {
	return (*factoryIdentityPtrType)(v)
}

func (*factoryIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FactoryIdentity)(nil)).Elem()
}

func (i *factoryIdentityPtrType) ToFactoryIdentityPtrOutput() FactoryIdentityPtrOutput {
	return i.ToFactoryIdentityPtrOutputWithContext(context.Background())
}

func (i *factoryIdentityPtrType) ToFactoryIdentityPtrOutputWithContext(ctx context.Context) FactoryIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FactoryIdentityPtrOutput)
}

type FactoryIdentityOutput struct{ *pulumi.OutputState }

func (FactoryIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FactoryIdentity)(nil)).Elem()
}

func (o FactoryIdentityOutput) ToFactoryIdentityOutput() FactoryIdentityOutput {
	return o
}

func (o FactoryIdentityOutput) ToFactoryIdentityOutputWithContext(ctx context.Context) FactoryIdentityOutput {
	return o
}

func (o FactoryIdentityOutput) ToFactoryIdentityPtrOutput() FactoryIdentityPtrOutput {
	return o.ToFactoryIdentityPtrOutputWithContext(context.Background())
}

func (o FactoryIdentityOutput) ToFactoryIdentityPtrOutputWithContext(ctx context.Context) FactoryIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FactoryIdentity) *FactoryIdentity {
		return &v
	}).(FactoryIdentityPtrOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Data Factory.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
func (o FactoryIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FactoryIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this Managed Service Identity.
func (o FactoryIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FactoryIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// Specifies the Tenant ID associated with the VSTS account.
func (o FactoryIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FactoryIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Data Factory. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
func (o FactoryIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FactoryIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type FactoryIdentityPtrOutput struct{ *pulumi.OutputState }

func (FactoryIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FactoryIdentity)(nil)).Elem()
}

func (o FactoryIdentityPtrOutput) ToFactoryIdentityPtrOutput() FactoryIdentityPtrOutput {
	return o
}

func (o FactoryIdentityPtrOutput) ToFactoryIdentityPtrOutputWithContext(ctx context.Context) FactoryIdentityPtrOutput {
	return o
}

func (o FactoryIdentityPtrOutput) Elem() FactoryIdentityOutput {
	return o.ApplyT(func(v *FactoryIdentity) FactoryIdentity {
		if v != nil {
			return *v
		}
		var ret FactoryIdentity
		return ret
	}).(FactoryIdentityOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Data Factory.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
func (o FactoryIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FactoryIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this Managed Service Identity.
func (o FactoryIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// Specifies the Tenant ID associated with the VSTS account.
func (o FactoryIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Data Factory. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
func (o FactoryIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type FactoryVstsConfiguration struct {
	// Specifies the VSTS account name.
	AccountName string `pulumi:"accountName"`
	// Specifies the branch of the repository to get code from.
	BranchName string `pulumi:"branchName"`
	// Specifies the name of the VSTS project.
	ProjectName string `pulumi:"projectName"`
	// Is automated publishing enabled? Defaults to `true`.
	PublishingEnabled *bool `pulumi:"publishingEnabled"`
	// Specifies the name of the git repository.
	RepositoryName string `pulumi:"repositoryName"`
	// Specifies the root folder within the repository. Set to `/` for the top level.
	RootFolder string `pulumi:"rootFolder"`
	// Specifies the Tenant ID associated with the VSTS account.
	TenantId string `pulumi:"tenantId"`
}

// FactoryVstsConfigurationInput is an input type that accepts FactoryVstsConfigurationArgs and FactoryVstsConfigurationOutput values.
// You can construct a concrete instance of `FactoryVstsConfigurationInput` via:
//
//	FactoryVstsConfigurationArgs{...}
type FactoryVstsConfigurationInput interface {
	pulumi.Input

	ToFactoryVstsConfigurationOutput() FactoryVstsConfigurationOutput
	ToFactoryVstsConfigurationOutputWithContext(context.Context) FactoryVstsConfigurationOutput
}

type FactoryVstsConfigurationArgs struct {
	// Specifies the VSTS account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// Specifies the branch of the repository to get code from.
	BranchName pulumi.StringInput `pulumi:"branchName"`
	// Specifies the name of the VSTS project.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// Is automated publishing enabled? Defaults to `true`.
	PublishingEnabled pulumi.BoolPtrInput `pulumi:"publishingEnabled"`
	// Specifies the name of the git repository.
	RepositoryName pulumi.StringInput `pulumi:"repositoryName"`
	// Specifies the root folder within the repository. Set to `/` for the top level.
	RootFolder pulumi.StringInput `pulumi:"rootFolder"`
	// Specifies the Tenant ID associated with the VSTS account.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (FactoryVstsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FactoryVstsConfiguration)(nil)).Elem()
}

func (i FactoryVstsConfigurationArgs) ToFactoryVstsConfigurationOutput() FactoryVstsConfigurationOutput {
	return i.ToFactoryVstsConfigurationOutputWithContext(context.Background())
}

func (i FactoryVstsConfigurationArgs) ToFactoryVstsConfigurationOutputWithContext(ctx context.Context) FactoryVstsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FactoryVstsConfigurationOutput)
}

func (i FactoryVstsConfigurationArgs) ToFactoryVstsConfigurationPtrOutput() FactoryVstsConfigurationPtrOutput {
	return i.ToFactoryVstsConfigurationPtrOutputWithContext(context.Background())
}

func (i FactoryVstsConfigurationArgs) ToFactoryVstsConfigurationPtrOutputWithContext(ctx context.Context) FactoryVstsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FactoryVstsConfigurationOutput).ToFactoryVstsConfigurationPtrOutputWithContext(ctx)
}

// FactoryVstsConfigurationPtrInput is an input type that accepts FactoryVstsConfigurationArgs, FactoryVstsConfigurationPtr and FactoryVstsConfigurationPtrOutput values.
// You can construct a concrete instance of `FactoryVstsConfigurationPtrInput` via:
//
//	        FactoryVstsConfigurationArgs{...}
//
//	or:
//
//	        nil
type FactoryVstsConfigurationPtrInput interface {
	pulumi.Input

	ToFactoryVstsConfigurationPtrOutput() FactoryVstsConfigurationPtrOutput
	ToFactoryVstsConfigurationPtrOutputWithContext(context.Context) FactoryVstsConfigurationPtrOutput
}

type factoryVstsConfigurationPtrType FactoryVstsConfigurationArgs

func FactoryVstsConfigurationPtr(v *FactoryVstsConfigurationArgs) FactoryVstsConfigurationPtrInput {
	return (*factoryVstsConfigurationPtrType)(v)
}

func (*factoryVstsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FactoryVstsConfiguration)(nil)).Elem()
}

func (i *factoryVstsConfigurationPtrType) ToFactoryVstsConfigurationPtrOutput() FactoryVstsConfigurationPtrOutput {
	return i.ToFactoryVstsConfigurationPtrOutputWithContext(context.Background())
}

func (i *factoryVstsConfigurationPtrType) ToFactoryVstsConfigurationPtrOutputWithContext(ctx context.Context) FactoryVstsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FactoryVstsConfigurationPtrOutput)
}

type FactoryVstsConfigurationOutput struct{ *pulumi.OutputState }

func (FactoryVstsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FactoryVstsConfiguration)(nil)).Elem()
}

func (o FactoryVstsConfigurationOutput) ToFactoryVstsConfigurationOutput() FactoryVstsConfigurationOutput {
	return o
}

func (o FactoryVstsConfigurationOutput) ToFactoryVstsConfigurationOutputWithContext(ctx context.Context) FactoryVstsConfigurationOutput {
	return o
}

func (o FactoryVstsConfigurationOutput) ToFactoryVstsConfigurationPtrOutput() FactoryVstsConfigurationPtrOutput {
	return o.ToFactoryVstsConfigurationPtrOutputWithContext(context.Background())
}

func (o FactoryVstsConfigurationOutput) ToFactoryVstsConfigurationPtrOutputWithContext(ctx context.Context) FactoryVstsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FactoryVstsConfiguration) *FactoryVstsConfiguration {
		return &v
	}).(FactoryVstsConfigurationPtrOutput)
}

// Specifies the VSTS account name.
func (o FactoryVstsConfigurationOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v FactoryVstsConfiguration) string { return v.AccountName }).(pulumi.StringOutput)
}

// Specifies the branch of the repository to get code from.
func (o FactoryVstsConfigurationOutput) BranchName() pulumi.StringOutput {
	return o.ApplyT(func(v FactoryVstsConfiguration) string { return v.BranchName }).(pulumi.StringOutput)
}

// Specifies the name of the VSTS project.
func (o FactoryVstsConfigurationOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v FactoryVstsConfiguration) string { return v.ProjectName }).(pulumi.StringOutput)
}

// Is automated publishing enabled? Defaults to `true`.
func (o FactoryVstsConfigurationOutput) PublishingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FactoryVstsConfiguration) *bool { return v.PublishingEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies the name of the git repository.
func (o FactoryVstsConfigurationOutput) RepositoryName() pulumi.StringOutput {
	return o.ApplyT(func(v FactoryVstsConfiguration) string { return v.RepositoryName }).(pulumi.StringOutput)
}

// Specifies the root folder within the repository. Set to `/` for the top level.
func (o FactoryVstsConfigurationOutput) RootFolder() pulumi.StringOutput {
	return o.ApplyT(func(v FactoryVstsConfiguration) string { return v.RootFolder }).(pulumi.StringOutput)
}

// Specifies the Tenant ID associated with the VSTS account.
func (o FactoryVstsConfigurationOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v FactoryVstsConfiguration) string { return v.TenantId }).(pulumi.StringOutput)
}

type FactoryVstsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FactoryVstsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FactoryVstsConfiguration)(nil)).Elem()
}

func (o FactoryVstsConfigurationPtrOutput) ToFactoryVstsConfigurationPtrOutput() FactoryVstsConfigurationPtrOutput {
	return o
}

func (o FactoryVstsConfigurationPtrOutput) ToFactoryVstsConfigurationPtrOutputWithContext(ctx context.Context) FactoryVstsConfigurationPtrOutput {
	return o
}

func (o FactoryVstsConfigurationPtrOutput) Elem() FactoryVstsConfigurationOutput {
	return o.ApplyT(func(v *FactoryVstsConfiguration) FactoryVstsConfiguration {
		if v != nil {
			return *v
		}
		var ret FactoryVstsConfiguration
		return ret
	}).(FactoryVstsConfigurationOutput)
}

// Specifies the VSTS account name.
func (o FactoryVstsConfigurationPtrOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryVstsConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.AccountName
	}).(pulumi.StringPtrOutput)
}

// Specifies the branch of the repository to get code from.
func (o FactoryVstsConfigurationPtrOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryVstsConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.BranchName
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of the VSTS project.
func (o FactoryVstsConfigurationPtrOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryVstsConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ProjectName
	}).(pulumi.StringPtrOutput)
}

// Is automated publishing enabled? Defaults to `true`.
func (o FactoryVstsConfigurationPtrOutput) PublishingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FactoryVstsConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.PublishingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies the name of the git repository.
func (o FactoryVstsConfigurationPtrOutput) RepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryVstsConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RepositoryName
	}).(pulumi.StringPtrOutput)
}

// Specifies the root folder within the repository. Set to `/` for the top level.
func (o FactoryVstsConfigurationPtrOutput) RootFolder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryVstsConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RootFolder
	}).(pulumi.StringPtrOutput)
}

// Specifies the Tenant ID associated with the VSTS account.
func (o FactoryVstsConfigurationPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FactoryVstsConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

type FlowletDataFlowSink struct {
	// A `dataset` block as defined below.
	Dataset *FlowletDataFlowSinkDataset `pulumi:"dataset"`
	// The description for the Data Flow Source.
	Description *string `pulumi:"description"`
	// A `flowlet` block as defined below.
	Flowlet *FlowletDataFlowSinkFlowlet `pulumi:"flowlet"`
	// A `linkedService` block as defined below.
	LinkedService *FlowletDataFlowSinkLinkedService `pulumi:"linkedService"`
	// The name for the Data Flow Source.
	Name string `pulumi:"name"`
	// A `rejectedLinkedService` block as defined below.
	RejectedLinkedService *FlowletDataFlowSinkRejectedLinkedService `pulumi:"rejectedLinkedService"`
	// A `schemaLinkedService` block as defined below.
	SchemaLinkedService *FlowletDataFlowSinkSchemaLinkedService `pulumi:"schemaLinkedService"`
}

// FlowletDataFlowSinkInput is an input type that accepts FlowletDataFlowSinkArgs and FlowletDataFlowSinkOutput values.
// You can construct a concrete instance of `FlowletDataFlowSinkInput` via:
//
//	FlowletDataFlowSinkArgs{...}
type FlowletDataFlowSinkInput interface {
	pulumi.Input

	ToFlowletDataFlowSinkOutput() FlowletDataFlowSinkOutput
	ToFlowletDataFlowSinkOutputWithContext(context.Context) FlowletDataFlowSinkOutput
}

type FlowletDataFlowSinkArgs struct {
	// A `dataset` block as defined below.
	Dataset FlowletDataFlowSinkDatasetPtrInput `pulumi:"dataset"`
	// The description for the Data Flow Source.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A `flowlet` block as defined below.
	Flowlet FlowletDataFlowSinkFlowletPtrInput `pulumi:"flowlet"`
	// A `linkedService` block as defined below.
	LinkedService FlowletDataFlowSinkLinkedServicePtrInput `pulumi:"linkedService"`
	// The name for the Data Flow Source.
	Name pulumi.StringInput `pulumi:"name"`
	// A `rejectedLinkedService` block as defined below.
	RejectedLinkedService FlowletDataFlowSinkRejectedLinkedServicePtrInput `pulumi:"rejectedLinkedService"`
	// A `schemaLinkedService` block as defined below.
	SchemaLinkedService FlowletDataFlowSinkSchemaLinkedServicePtrInput `pulumi:"schemaLinkedService"`
}

func (FlowletDataFlowSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowSink)(nil)).Elem()
}

func (i FlowletDataFlowSinkArgs) ToFlowletDataFlowSinkOutput() FlowletDataFlowSinkOutput {
	return i.ToFlowletDataFlowSinkOutputWithContext(context.Background())
}

func (i FlowletDataFlowSinkArgs) ToFlowletDataFlowSinkOutputWithContext(ctx context.Context) FlowletDataFlowSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSinkOutput)
}

// FlowletDataFlowSinkArrayInput is an input type that accepts FlowletDataFlowSinkArray and FlowletDataFlowSinkArrayOutput values.
// You can construct a concrete instance of `FlowletDataFlowSinkArrayInput` via:
//
//	FlowletDataFlowSinkArray{ FlowletDataFlowSinkArgs{...} }
type FlowletDataFlowSinkArrayInput interface {
	pulumi.Input

	ToFlowletDataFlowSinkArrayOutput() FlowletDataFlowSinkArrayOutput
	ToFlowletDataFlowSinkArrayOutputWithContext(context.Context) FlowletDataFlowSinkArrayOutput
}

type FlowletDataFlowSinkArray []FlowletDataFlowSinkInput

func (FlowletDataFlowSinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowletDataFlowSink)(nil)).Elem()
}

func (i FlowletDataFlowSinkArray) ToFlowletDataFlowSinkArrayOutput() FlowletDataFlowSinkArrayOutput {
	return i.ToFlowletDataFlowSinkArrayOutputWithContext(context.Background())
}

func (i FlowletDataFlowSinkArray) ToFlowletDataFlowSinkArrayOutputWithContext(ctx context.Context) FlowletDataFlowSinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSinkArrayOutput)
}

type FlowletDataFlowSinkOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowSinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowSink)(nil)).Elem()
}

func (o FlowletDataFlowSinkOutput) ToFlowletDataFlowSinkOutput() FlowletDataFlowSinkOutput {
	return o
}

func (o FlowletDataFlowSinkOutput) ToFlowletDataFlowSinkOutputWithContext(ctx context.Context) FlowletDataFlowSinkOutput {
	return o
}

// A `dataset` block as defined below.
func (o FlowletDataFlowSinkOutput) Dataset() FlowletDataFlowSinkDatasetPtrOutput {
	return o.ApplyT(func(v FlowletDataFlowSink) *FlowletDataFlowSinkDataset { return v.Dataset }).(FlowletDataFlowSinkDatasetPtrOutput)
}

// The description for the Data Flow Source.
func (o FlowletDataFlowSinkOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowletDataFlowSink) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A `flowlet` block as defined below.
func (o FlowletDataFlowSinkOutput) Flowlet() FlowletDataFlowSinkFlowletPtrOutput {
	return o.ApplyT(func(v FlowletDataFlowSink) *FlowletDataFlowSinkFlowlet { return v.Flowlet }).(FlowletDataFlowSinkFlowletPtrOutput)
}

// A `linkedService` block as defined below.
func (o FlowletDataFlowSinkOutput) LinkedService() FlowletDataFlowSinkLinkedServicePtrOutput {
	return o.ApplyT(func(v FlowletDataFlowSink) *FlowletDataFlowSinkLinkedService { return v.LinkedService }).(FlowletDataFlowSinkLinkedServicePtrOutput)
}

// The name for the Data Flow Source.
func (o FlowletDataFlowSinkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowletDataFlowSink) string { return v.Name }).(pulumi.StringOutput)
}

// A `rejectedLinkedService` block as defined below.
func (o FlowletDataFlowSinkOutput) RejectedLinkedService() FlowletDataFlowSinkRejectedLinkedServicePtrOutput {
	return o.ApplyT(func(v FlowletDataFlowSink) *FlowletDataFlowSinkRejectedLinkedService { return v.RejectedLinkedService }).(FlowletDataFlowSinkRejectedLinkedServicePtrOutput)
}

// A `schemaLinkedService` block as defined below.
func (o FlowletDataFlowSinkOutput) SchemaLinkedService() FlowletDataFlowSinkSchemaLinkedServicePtrOutput {
	return o.ApplyT(func(v FlowletDataFlowSink) *FlowletDataFlowSinkSchemaLinkedService { return v.SchemaLinkedService }).(FlowletDataFlowSinkSchemaLinkedServicePtrOutput)
}

type FlowletDataFlowSinkArrayOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowSinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowletDataFlowSink)(nil)).Elem()
}

func (o FlowletDataFlowSinkArrayOutput) ToFlowletDataFlowSinkArrayOutput() FlowletDataFlowSinkArrayOutput {
	return o
}

func (o FlowletDataFlowSinkArrayOutput) ToFlowletDataFlowSinkArrayOutputWithContext(ctx context.Context) FlowletDataFlowSinkArrayOutput {
	return o
}

func (o FlowletDataFlowSinkArrayOutput) Index(i pulumi.IntInput) FlowletDataFlowSinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowletDataFlowSink {
		return vs[0].([]FlowletDataFlowSink)[vs[1].(int)]
	}).(FlowletDataFlowSinkOutput)
}

type FlowletDataFlowSinkDataset struct {
	// The name for the Data Factory Dataset.
	Name string `pulumi:"name"`
	// A map of parameters to associate with the Data Factory dataset.
	Parameters map[string]string `pulumi:"parameters"`
}

// FlowletDataFlowSinkDatasetInput is an input type that accepts FlowletDataFlowSinkDatasetArgs and FlowletDataFlowSinkDatasetOutput values.
// You can construct a concrete instance of `FlowletDataFlowSinkDatasetInput` via:
//
//	FlowletDataFlowSinkDatasetArgs{...}
type FlowletDataFlowSinkDatasetInput interface {
	pulumi.Input

	ToFlowletDataFlowSinkDatasetOutput() FlowletDataFlowSinkDatasetOutput
	ToFlowletDataFlowSinkDatasetOutputWithContext(context.Context) FlowletDataFlowSinkDatasetOutput
}

type FlowletDataFlowSinkDatasetArgs struct {
	// The name for the Data Factory Dataset.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory dataset.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (FlowletDataFlowSinkDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowSinkDataset)(nil)).Elem()
}

func (i FlowletDataFlowSinkDatasetArgs) ToFlowletDataFlowSinkDatasetOutput() FlowletDataFlowSinkDatasetOutput {
	return i.ToFlowletDataFlowSinkDatasetOutputWithContext(context.Background())
}

func (i FlowletDataFlowSinkDatasetArgs) ToFlowletDataFlowSinkDatasetOutputWithContext(ctx context.Context) FlowletDataFlowSinkDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSinkDatasetOutput)
}

func (i FlowletDataFlowSinkDatasetArgs) ToFlowletDataFlowSinkDatasetPtrOutput() FlowletDataFlowSinkDatasetPtrOutput {
	return i.ToFlowletDataFlowSinkDatasetPtrOutputWithContext(context.Background())
}

func (i FlowletDataFlowSinkDatasetArgs) ToFlowletDataFlowSinkDatasetPtrOutputWithContext(ctx context.Context) FlowletDataFlowSinkDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSinkDatasetOutput).ToFlowletDataFlowSinkDatasetPtrOutputWithContext(ctx)
}

// FlowletDataFlowSinkDatasetPtrInput is an input type that accepts FlowletDataFlowSinkDatasetArgs, FlowletDataFlowSinkDatasetPtr and FlowletDataFlowSinkDatasetPtrOutput values.
// You can construct a concrete instance of `FlowletDataFlowSinkDatasetPtrInput` via:
//
//	        FlowletDataFlowSinkDatasetArgs{...}
//
//	or:
//
//	        nil
type FlowletDataFlowSinkDatasetPtrInput interface {
	pulumi.Input

	ToFlowletDataFlowSinkDatasetPtrOutput() FlowletDataFlowSinkDatasetPtrOutput
	ToFlowletDataFlowSinkDatasetPtrOutputWithContext(context.Context) FlowletDataFlowSinkDatasetPtrOutput
}

type flowletDataFlowSinkDatasetPtrType FlowletDataFlowSinkDatasetArgs

func FlowletDataFlowSinkDatasetPtr(v *FlowletDataFlowSinkDatasetArgs) FlowletDataFlowSinkDatasetPtrInput {
	return (*flowletDataFlowSinkDatasetPtrType)(v)
}

func (*flowletDataFlowSinkDatasetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowletDataFlowSinkDataset)(nil)).Elem()
}

func (i *flowletDataFlowSinkDatasetPtrType) ToFlowletDataFlowSinkDatasetPtrOutput() FlowletDataFlowSinkDatasetPtrOutput {
	return i.ToFlowletDataFlowSinkDatasetPtrOutputWithContext(context.Background())
}

func (i *flowletDataFlowSinkDatasetPtrType) ToFlowletDataFlowSinkDatasetPtrOutputWithContext(ctx context.Context) FlowletDataFlowSinkDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSinkDatasetPtrOutput)
}

type FlowletDataFlowSinkDatasetOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowSinkDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowSinkDataset)(nil)).Elem()
}

func (o FlowletDataFlowSinkDatasetOutput) ToFlowletDataFlowSinkDatasetOutput() FlowletDataFlowSinkDatasetOutput {
	return o
}

func (o FlowletDataFlowSinkDatasetOutput) ToFlowletDataFlowSinkDatasetOutputWithContext(ctx context.Context) FlowletDataFlowSinkDatasetOutput {
	return o
}

func (o FlowletDataFlowSinkDatasetOutput) ToFlowletDataFlowSinkDatasetPtrOutput() FlowletDataFlowSinkDatasetPtrOutput {
	return o.ToFlowletDataFlowSinkDatasetPtrOutputWithContext(context.Background())
}

func (o FlowletDataFlowSinkDatasetOutput) ToFlowletDataFlowSinkDatasetPtrOutputWithContext(ctx context.Context) FlowletDataFlowSinkDatasetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowletDataFlowSinkDataset) *FlowletDataFlowSinkDataset {
		return &v
	}).(FlowletDataFlowSinkDatasetPtrOutput)
}

// The name for the Data Factory Dataset.
func (o FlowletDataFlowSinkDatasetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowletDataFlowSinkDataset) string { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the Data Factory dataset.
func (o FlowletDataFlowSinkDatasetOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v FlowletDataFlowSinkDataset) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type FlowletDataFlowSinkDatasetPtrOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowSinkDatasetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowletDataFlowSinkDataset)(nil)).Elem()
}

func (o FlowletDataFlowSinkDatasetPtrOutput) ToFlowletDataFlowSinkDatasetPtrOutput() FlowletDataFlowSinkDatasetPtrOutput {
	return o
}

func (o FlowletDataFlowSinkDatasetPtrOutput) ToFlowletDataFlowSinkDatasetPtrOutputWithContext(ctx context.Context) FlowletDataFlowSinkDatasetPtrOutput {
	return o
}

func (o FlowletDataFlowSinkDatasetPtrOutput) Elem() FlowletDataFlowSinkDatasetOutput {
	return o.ApplyT(func(v *FlowletDataFlowSinkDataset) FlowletDataFlowSinkDataset {
		if v != nil {
			return *v
		}
		var ret FlowletDataFlowSinkDataset
		return ret
	}).(FlowletDataFlowSinkDatasetOutput)
}

// The name for the Data Factory Dataset.
func (o FlowletDataFlowSinkDatasetPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowletDataFlowSinkDataset) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the Data Factory dataset.
func (o FlowletDataFlowSinkDatasetPtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FlowletDataFlowSinkDataset) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type FlowletDataFlowSinkFlowlet struct {
	// Specifies the reference data flow parameters from dataset.
	DatasetParameters *string `pulumi:"datasetParameters"`
	// The name for the Data Factory Flowlet.
	Name string `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Flowlet.
	Parameters map[string]string `pulumi:"parameters"`
}

// FlowletDataFlowSinkFlowletInput is an input type that accepts FlowletDataFlowSinkFlowletArgs and FlowletDataFlowSinkFlowletOutput values.
// You can construct a concrete instance of `FlowletDataFlowSinkFlowletInput` via:
//
//	FlowletDataFlowSinkFlowletArgs{...}
type FlowletDataFlowSinkFlowletInput interface {
	pulumi.Input

	ToFlowletDataFlowSinkFlowletOutput() FlowletDataFlowSinkFlowletOutput
	ToFlowletDataFlowSinkFlowletOutputWithContext(context.Context) FlowletDataFlowSinkFlowletOutput
}

type FlowletDataFlowSinkFlowletArgs struct {
	// Specifies the reference data flow parameters from dataset.
	DatasetParameters pulumi.StringPtrInput `pulumi:"datasetParameters"`
	// The name for the Data Factory Flowlet.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Flowlet.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (FlowletDataFlowSinkFlowletArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowSinkFlowlet)(nil)).Elem()
}

func (i FlowletDataFlowSinkFlowletArgs) ToFlowletDataFlowSinkFlowletOutput() FlowletDataFlowSinkFlowletOutput {
	return i.ToFlowletDataFlowSinkFlowletOutputWithContext(context.Background())
}

func (i FlowletDataFlowSinkFlowletArgs) ToFlowletDataFlowSinkFlowletOutputWithContext(ctx context.Context) FlowletDataFlowSinkFlowletOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSinkFlowletOutput)
}

func (i FlowletDataFlowSinkFlowletArgs) ToFlowletDataFlowSinkFlowletPtrOutput() FlowletDataFlowSinkFlowletPtrOutput {
	return i.ToFlowletDataFlowSinkFlowletPtrOutputWithContext(context.Background())
}

func (i FlowletDataFlowSinkFlowletArgs) ToFlowletDataFlowSinkFlowletPtrOutputWithContext(ctx context.Context) FlowletDataFlowSinkFlowletPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSinkFlowletOutput).ToFlowletDataFlowSinkFlowletPtrOutputWithContext(ctx)
}

// FlowletDataFlowSinkFlowletPtrInput is an input type that accepts FlowletDataFlowSinkFlowletArgs, FlowletDataFlowSinkFlowletPtr and FlowletDataFlowSinkFlowletPtrOutput values.
// You can construct a concrete instance of `FlowletDataFlowSinkFlowletPtrInput` via:
//
//	        FlowletDataFlowSinkFlowletArgs{...}
//
//	or:
//
//	        nil
type FlowletDataFlowSinkFlowletPtrInput interface {
	pulumi.Input

	ToFlowletDataFlowSinkFlowletPtrOutput() FlowletDataFlowSinkFlowletPtrOutput
	ToFlowletDataFlowSinkFlowletPtrOutputWithContext(context.Context) FlowletDataFlowSinkFlowletPtrOutput
}

type flowletDataFlowSinkFlowletPtrType FlowletDataFlowSinkFlowletArgs

func FlowletDataFlowSinkFlowletPtr(v *FlowletDataFlowSinkFlowletArgs) FlowletDataFlowSinkFlowletPtrInput {
	return (*flowletDataFlowSinkFlowletPtrType)(v)
}

func (*flowletDataFlowSinkFlowletPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowletDataFlowSinkFlowlet)(nil)).Elem()
}

func (i *flowletDataFlowSinkFlowletPtrType) ToFlowletDataFlowSinkFlowletPtrOutput() FlowletDataFlowSinkFlowletPtrOutput {
	return i.ToFlowletDataFlowSinkFlowletPtrOutputWithContext(context.Background())
}

func (i *flowletDataFlowSinkFlowletPtrType) ToFlowletDataFlowSinkFlowletPtrOutputWithContext(ctx context.Context) FlowletDataFlowSinkFlowletPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSinkFlowletPtrOutput)
}

type FlowletDataFlowSinkFlowletOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowSinkFlowletOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowSinkFlowlet)(nil)).Elem()
}

func (o FlowletDataFlowSinkFlowletOutput) ToFlowletDataFlowSinkFlowletOutput() FlowletDataFlowSinkFlowletOutput {
	return o
}

func (o FlowletDataFlowSinkFlowletOutput) ToFlowletDataFlowSinkFlowletOutputWithContext(ctx context.Context) FlowletDataFlowSinkFlowletOutput {
	return o
}

func (o FlowletDataFlowSinkFlowletOutput) ToFlowletDataFlowSinkFlowletPtrOutput() FlowletDataFlowSinkFlowletPtrOutput {
	return o.ToFlowletDataFlowSinkFlowletPtrOutputWithContext(context.Background())
}

func (o FlowletDataFlowSinkFlowletOutput) ToFlowletDataFlowSinkFlowletPtrOutputWithContext(ctx context.Context) FlowletDataFlowSinkFlowletPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowletDataFlowSinkFlowlet) *FlowletDataFlowSinkFlowlet {
		return &v
	}).(FlowletDataFlowSinkFlowletPtrOutput)
}

// Specifies the reference data flow parameters from dataset.
func (o FlowletDataFlowSinkFlowletOutput) DatasetParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowletDataFlowSinkFlowlet) *string { return v.DatasetParameters }).(pulumi.StringPtrOutput)
}

// The name for the Data Factory Flowlet.
func (o FlowletDataFlowSinkFlowletOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowletDataFlowSinkFlowlet) string { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the Data Factory Flowlet.
func (o FlowletDataFlowSinkFlowletOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v FlowletDataFlowSinkFlowlet) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type FlowletDataFlowSinkFlowletPtrOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowSinkFlowletPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowletDataFlowSinkFlowlet)(nil)).Elem()
}

func (o FlowletDataFlowSinkFlowletPtrOutput) ToFlowletDataFlowSinkFlowletPtrOutput() FlowletDataFlowSinkFlowletPtrOutput {
	return o
}

func (o FlowletDataFlowSinkFlowletPtrOutput) ToFlowletDataFlowSinkFlowletPtrOutputWithContext(ctx context.Context) FlowletDataFlowSinkFlowletPtrOutput {
	return o
}

func (o FlowletDataFlowSinkFlowletPtrOutput) Elem() FlowletDataFlowSinkFlowletOutput {
	return o.ApplyT(func(v *FlowletDataFlowSinkFlowlet) FlowletDataFlowSinkFlowlet {
		if v != nil {
			return *v
		}
		var ret FlowletDataFlowSinkFlowlet
		return ret
	}).(FlowletDataFlowSinkFlowletOutput)
}

// Specifies the reference data flow parameters from dataset.
func (o FlowletDataFlowSinkFlowletPtrOutput) DatasetParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowletDataFlowSinkFlowlet) *string {
		if v == nil {
			return nil
		}
		return v.DatasetParameters
	}).(pulumi.StringPtrOutput)
}

// The name for the Data Factory Flowlet.
func (o FlowletDataFlowSinkFlowletPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowletDataFlowSinkFlowlet) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the Data Factory Flowlet.
func (o FlowletDataFlowSinkFlowletPtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FlowletDataFlowSinkFlowlet) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type FlowletDataFlowSinkLinkedService struct {
	// The name for the Data Factory Linked Service.
	Name string `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters map[string]string `pulumi:"parameters"`
}

// FlowletDataFlowSinkLinkedServiceInput is an input type that accepts FlowletDataFlowSinkLinkedServiceArgs and FlowletDataFlowSinkLinkedServiceOutput values.
// You can construct a concrete instance of `FlowletDataFlowSinkLinkedServiceInput` via:
//
//	FlowletDataFlowSinkLinkedServiceArgs{...}
type FlowletDataFlowSinkLinkedServiceInput interface {
	pulumi.Input

	ToFlowletDataFlowSinkLinkedServiceOutput() FlowletDataFlowSinkLinkedServiceOutput
	ToFlowletDataFlowSinkLinkedServiceOutputWithContext(context.Context) FlowletDataFlowSinkLinkedServiceOutput
}

type FlowletDataFlowSinkLinkedServiceArgs struct {
	// The name for the Data Factory Linked Service.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (FlowletDataFlowSinkLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowSinkLinkedService)(nil)).Elem()
}

func (i FlowletDataFlowSinkLinkedServiceArgs) ToFlowletDataFlowSinkLinkedServiceOutput() FlowletDataFlowSinkLinkedServiceOutput {
	return i.ToFlowletDataFlowSinkLinkedServiceOutputWithContext(context.Background())
}

func (i FlowletDataFlowSinkLinkedServiceArgs) ToFlowletDataFlowSinkLinkedServiceOutputWithContext(ctx context.Context) FlowletDataFlowSinkLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSinkLinkedServiceOutput)
}

func (i FlowletDataFlowSinkLinkedServiceArgs) ToFlowletDataFlowSinkLinkedServicePtrOutput() FlowletDataFlowSinkLinkedServicePtrOutput {
	return i.ToFlowletDataFlowSinkLinkedServicePtrOutputWithContext(context.Background())
}

func (i FlowletDataFlowSinkLinkedServiceArgs) ToFlowletDataFlowSinkLinkedServicePtrOutputWithContext(ctx context.Context) FlowletDataFlowSinkLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSinkLinkedServiceOutput).ToFlowletDataFlowSinkLinkedServicePtrOutputWithContext(ctx)
}

// FlowletDataFlowSinkLinkedServicePtrInput is an input type that accepts FlowletDataFlowSinkLinkedServiceArgs, FlowletDataFlowSinkLinkedServicePtr and FlowletDataFlowSinkLinkedServicePtrOutput values.
// You can construct a concrete instance of `FlowletDataFlowSinkLinkedServicePtrInput` via:
//
//	        FlowletDataFlowSinkLinkedServiceArgs{...}
//
//	or:
//
//	        nil
type FlowletDataFlowSinkLinkedServicePtrInput interface {
	pulumi.Input

	ToFlowletDataFlowSinkLinkedServicePtrOutput() FlowletDataFlowSinkLinkedServicePtrOutput
	ToFlowletDataFlowSinkLinkedServicePtrOutputWithContext(context.Context) FlowletDataFlowSinkLinkedServicePtrOutput
}

type flowletDataFlowSinkLinkedServicePtrType FlowletDataFlowSinkLinkedServiceArgs

func FlowletDataFlowSinkLinkedServicePtr(v *FlowletDataFlowSinkLinkedServiceArgs) FlowletDataFlowSinkLinkedServicePtrInput {
	return (*flowletDataFlowSinkLinkedServicePtrType)(v)
}

func (*flowletDataFlowSinkLinkedServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowletDataFlowSinkLinkedService)(nil)).Elem()
}

func (i *flowletDataFlowSinkLinkedServicePtrType) ToFlowletDataFlowSinkLinkedServicePtrOutput() FlowletDataFlowSinkLinkedServicePtrOutput {
	return i.ToFlowletDataFlowSinkLinkedServicePtrOutputWithContext(context.Background())
}

func (i *flowletDataFlowSinkLinkedServicePtrType) ToFlowletDataFlowSinkLinkedServicePtrOutputWithContext(ctx context.Context) FlowletDataFlowSinkLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSinkLinkedServicePtrOutput)
}

type FlowletDataFlowSinkLinkedServiceOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowSinkLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowSinkLinkedService)(nil)).Elem()
}

func (o FlowletDataFlowSinkLinkedServiceOutput) ToFlowletDataFlowSinkLinkedServiceOutput() FlowletDataFlowSinkLinkedServiceOutput {
	return o
}

func (o FlowletDataFlowSinkLinkedServiceOutput) ToFlowletDataFlowSinkLinkedServiceOutputWithContext(ctx context.Context) FlowletDataFlowSinkLinkedServiceOutput {
	return o
}

func (o FlowletDataFlowSinkLinkedServiceOutput) ToFlowletDataFlowSinkLinkedServicePtrOutput() FlowletDataFlowSinkLinkedServicePtrOutput {
	return o.ToFlowletDataFlowSinkLinkedServicePtrOutputWithContext(context.Background())
}

func (o FlowletDataFlowSinkLinkedServiceOutput) ToFlowletDataFlowSinkLinkedServicePtrOutputWithContext(ctx context.Context) FlowletDataFlowSinkLinkedServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowletDataFlowSinkLinkedService) *FlowletDataFlowSinkLinkedService {
		return &v
	}).(FlowletDataFlowSinkLinkedServicePtrOutput)
}

// The name for the Data Factory Linked Service.
func (o FlowletDataFlowSinkLinkedServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowletDataFlowSinkLinkedService) string { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o FlowletDataFlowSinkLinkedServiceOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v FlowletDataFlowSinkLinkedService) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type FlowletDataFlowSinkLinkedServicePtrOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowSinkLinkedServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowletDataFlowSinkLinkedService)(nil)).Elem()
}

func (o FlowletDataFlowSinkLinkedServicePtrOutput) ToFlowletDataFlowSinkLinkedServicePtrOutput() FlowletDataFlowSinkLinkedServicePtrOutput {
	return o
}

func (o FlowletDataFlowSinkLinkedServicePtrOutput) ToFlowletDataFlowSinkLinkedServicePtrOutputWithContext(ctx context.Context) FlowletDataFlowSinkLinkedServicePtrOutput {
	return o
}

func (o FlowletDataFlowSinkLinkedServicePtrOutput) Elem() FlowletDataFlowSinkLinkedServiceOutput {
	return o.ApplyT(func(v *FlowletDataFlowSinkLinkedService) FlowletDataFlowSinkLinkedService {
		if v != nil {
			return *v
		}
		var ret FlowletDataFlowSinkLinkedService
		return ret
	}).(FlowletDataFlowSinkLinkedServiceOutput)
}

// The name for the Data Factory Linked Service.
func (o FlowletDataFlowSinkLinkedServicePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowletDataFlowSinkLinkedService) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o FlowletDataFlowSinkLinkedServicePtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FlowletDataFlowSinkLinkedService) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type FlowletDataFlowSinkRejectedLinkedService struct {
	// The name for the Data Factory Linked Service with schema.
	Name string `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters map[string]string `pulumi:"parameters"`
}

// FlowletDataFlowSinkRejectedLinkedServiceInput is an input type that accepts FlowletDataFlowSinkRejectedLinkedServiceArgs and FlowletDataFlowSinkRejectedLinkedServiceOutput values.
// You can construct a concrete instance of `FlowletDataFlowSinkRejectedLinkedServiceInput` via:
//
//	FlowletDataFlowSinkRejectedLinkedServiceArgs{...}
type FlowletDataFlowSinkRejectedLinkedServiceInput interface {
	pulumi.Input

	ToFlowletDataFlowSinkRejectedLinkedServiceOutput() FlowletDataFlowSinkRejectedLinkedServiceOutput
	ToFlowletDataFlowSinkRejectedLinkedServiceOutputWithContext(context.Context) FlowletDataFlowSinkRejectedLinkedServiceOutput
}

type FlowletDataFlowSinkRejectedLinkedServiceArgs struct {
	// The name for the Data Factory Linked Service with schema.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (FlowletDataFlowSinkRejectedLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowSinkRejectedLinkedService)(nil)).Elem()
}

func (i FlowletDataFlowSinkRejectedLinkedServiceArgs) ToFlowletDataFlowSinkRejectedLinkedServiceOutput() FlowletDataFlowSinkRejectedLinkedServiceOutput {
	return i.ToFlowletDataFlowSinkRejectedLinkedServiceOutputWithContext(context.Background())
}

func (i FlowletDataFlowSinkRejectedLinkedServiceArgs) ToFlowletDataFlowSinkRejectedLinkedServiceOutputWithContext(ctx context.Context) FlowletDataFlowSinkRejectedLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSinkRejectedLinkedServiceOutput)
}

func (i FlowletDataFlowSinkRejectedLinkedServiceArgs) ToFlowletDataFlowSinkRejectedLinkedServicePtrOutput() FlowletDataFlowSinkRejectedLinkedServicePtrOutput {
	return i.ToFlowletDataFlowSinkRejectedLinkedServicePtrOutputWithContext(context.Background())
}

func (i FlowletDataFlowSinkRejectedLinkedServiceArgs) ToFlowletDataFlowSinkRejectedLinkedServicePtrOutputWithContext(ctx context.Context) FlowletDataFlowSinkRejectedLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSinkRejectedLinkedServiceOutput).ToFlowletDataFlowSinkRejectedLinkedServicePtrOutputWithContext(ctx)
}

// FlowletDataFlowSinkRejectedLinkedServicePtrInput is an input type that accepts FlowletDataFlowSinkRejectedLinkedServiceArgs, FlowletDataFlowSinkRejectedLinkedServicePtr and FlowletDataFlowSinkRejectedLinkedServicePtrOutput values.
// You can construct a concrete instance of `FlowletDataFlowSinkRejectedLinkedServicePtrInput` via:
//
//	        FlowletDataFlowSinkRejectedLinkedServiceArgs{...}
//
//	or:
//
//	        nil
type FlowletDataFlowSinkRejectedLinkedServicePtrInput interface {
	pulumi.Input

	ToFlowletDataFlowSinkRejectedLinkedServicePtrOutput() FlowletDataFlowSinkRejectedLinkedServicePtrOutput
	ToFlowletDataFlowSinkRejectedLinkedServicePtrOutputWithContext(context.Context) FlowletDataFlowSinkRejectedLinkedServicePtrOutput
}

type flowletDataFlowSinkRejectedLinkedServicePtrType FlowletDataFlowSinkRejectedLinkedServiceArgs

func FlowletDataFlowSinkRejectedLinkedServicePtr(v *FlowletDataFlowSinkRejectedLinkedServiceArgs) FlowletDataFlowSinkRejectedLinkedServicePtrInput {
	return (*flowletDataFlowSinkRejectedLinkedServicePtrType)(v)
}

func (*flowletDataFlowSinkRejectedLinkedServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowletDataFlowSinkRejectedLinkedService)(nil)).Elem()
}

func (i *flowletDataFlowSinkRejectedLinkedServicePtrType) ToFlowletDataFlowSinkRejectedLinkedServicePtrOutput() FlowletDataFlowSinkRejectedLinkedServicePtrOutput {
	return i.ToFlowletDataFlowSinkRejectedLinkedServicePtrOutputWithContext(context.Background())
}

func (i *flowletDataFlowSinkRejectedLinkedServicePtrType) ToFlowletDataFlowSinkRejectedLinkedServicePtrOutputWithContext(ctx context.Context) FlowletDataFlowSinkRejectedLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSinkRejectedLinkedServicePtrOutput)
}

type FlowletDataFlowSinkRejectedLinkedServiceOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowSinkRejectedLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowSinkRejectedLinkedService)(nil)).Elem()
}

func (o FlowletDataFlowSinkRejectedLinkedServiceOutput) ToFlowletDataFlowSinkRejectedLinkedServiceOutput() FlowletDataFlowSinkRejectedLinkedServiceOutput {
	return o
}

func (o FlowletDataFlowSinkRejectedLinkedServiceOutput) ToFlowletDataFlowSinkRejectedLinkedServiceOutputWithContext(ctx context.Context) FlowletDataFlowSinkRejectedLinkedServiceOutput {
	return o
}

func (o FlowletDataFlowSinkRejectedLinkedServiceOutput) ToFlowletDataFlowSinkRejectedLinkedServicePtrOutput() FlowletDataFlowSinkRejectedLinkedServicePtrOutput {
	return o.ToFlowletDataFlowSinkRejectedLinkedServicePtrOutputWithContext(context.Background())
}

func (o FlowletDataFlowSinkRejectedLinkedServiceOutput) ToFlowletDataFlowSinkRejectedLinkedServicePtrOutputWithContext(ctx context.Context) FlowletDataFlowSinkRejectedLinkedServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowletDataFlowSinkRejectedLinkedService) *FlowletDataFlowSinkRejectedLinkedService {
		return &v
	}).(FlowletDataFlowSinkRejectedLinkedServicePtrOutput)
}

// The name for the Data Factory Linked Service with schema.
func (o FlowletDataFlowSinkRejectedLinkedServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowletDataFlowSinkRejectedLinkedService) string { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o FlowletDataFlowSinkRejectedLinkedServiceOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v FlowletDataFlowSinkRejectedLinkedService) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type FlowletDataFlowSinkRejectedLinkedServicePtrOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowSinkRejectedLinkedServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowletDataFlowSinkRejectedLinkedService)(nil)).Elem()
}

func (o FlowletDataFlowSinkRejectedLinkedServicePtrOutput) ToFlowletDataFlowSinkRejectedLinkedServicePtrOutput() FlowletDataFlowSinkRejectedLinkedServicePtrOutput {
	return o
}

func (o FlowletDataFlowSinkRejectedLinkedServicePtrOutput) ToFlowletDataFlowSinkRejectedLinkedServicePtrOutputWithContext(ctx context.Context) FlowletDataFlowSinkRejectedLinkedServicePtrOutput {
	return o
}

func (o FlowletDataFlowSinkRejectedLinkedServicePtrOutput) Elem() FlowletDataFlowSinkRejectedLinkedServiceOutput {
	return o.ApplyT(func(v *FlowletDataFlowSinkRejectedLinkedService) FlowletDataFlowSinkRejectedLinkedService {
		if v != nil {
			return *v
		}
		var ret FlowletDataFlowSinkRejectedLinkedService
		return ret
	}).(FlowletDataFlowSinkRejectedLinkedServiceOutput)
}

// The name for the Data Factory Linked Service with schema.
func (o FlowletDataFlowSinkRejectedLinkedServicePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowletDataFlowSinkRejectedLinkedService) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o FlowletDataFlowSinkRejectedLinkedServicePtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FlowletDataFlowSinkRejectedLinkedService) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type FlowletDataFlowSinkSchemaLinkedService struct {
	// The name for the Data Factory Linked Service with schema.
	Name string `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters map[string]string `pulumi:"parameters"`
}

// FlowletDataFlowSinkSchemaLinkedServiceInput is an input type that accepts FlowletDataFlowSinkSchemaLinkedServiceArgs and FlowletDataFlowSinkSchemaLinkedServiceOutput values.
// You can construct a concrete instance of `FlowletDataFlowSinkSchemaLinkedServiceInput` via:
//
//	FlowletDataFlowSinkSchemaLinkedServiceArgs{...}
type FlowletDataFlowSinkSchemaLinkedServiceInput interface {
	pulumi.Input

	ToFlowletDataFlowSinkSchemaLinkedServiceOutput() FlowletDataFlowSinkSchemaLinkedServiceOutput
	ToFlowletDataFlowSinkSchemaLinkedServiceOutputWithContext(context.Context) FlowletDataFlowSinkSchemaLinkedServiceOutput
}

type FlowletDataFlowSinkSchemaLinkedServiceArgs struct {
	// The name for the Data Factory Linked Service with schema.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (FlowletDataFlowSinkSchemaLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowSinkSchemaLinkedService)(nil)).Elem()
}

func (i FlowletDataFlowSinkSchemaLinkedServiceArgs) ToFlowletDataFlowSinkSchemaLinkedServiceOutput() FlowletDataFlowSinkSchemaLinkedServiceOutput {
	return i.ToFlowletDataFlowSinkSchemaLinkedServiceOutputWithContext(context.Background())
}

func (i FlowletDataFlowSinkSchemaLinkedServiceArgs) ToFlowletDataFlowSinkSchemaLinkedServiceOutputWithContext(ctx context.Context) FlowletDataFlowSinkSchemaLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSinkSchemaLinkedServiceOutput)
}

func (i FlowletDataFlowSinkSchemaLinkedServiceArgs) ToFlowletDataFlowSinkSchemaLinkedServicePtrOutput() FlowletDataFlowSinkSchemaLinkedServicePtrOutput {
	return i.ToFlowletDataFlowSinkSchemaLinkedServicePtrOutputWithContext(context.Background())
}

func (i FlowletDataFlowSinkSchemaLinkedServiceArgs) ToFlowletDataFlowSinkSchemaLinkedServicePtrOutputWithContext(ctx context.Context) FlowletDataFlowSinkSchemaLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSinkSchemaLinkedServiceOutput).ToFlowletDataFlowSinkSchemaLinkedServicePtrOutputWithContext(ctx)
}

// FlowletDataFlowSinkSchemaLinkedServicePtrInput is an input type that accepts FlowletDataFlowSinkSchemaLinkedServiceArgs, FlowletDataFlowSinkSchemaLinkedServicePtr and FlowletDataFlowSinkSchemaLinkedServicePtrOutput values.
// You can construct a concrete instance of `FlowletDataFlowSinkSchemaLinkedServicePtrInput` via:
//
//	        FlowletDataFlowSinkSchemaLinkedServiceArgs{...}
//
//	or:
//
//	        nil
type FlowletDataFlowSinkSchemaLinkedServicePtrInput interface {
	pulumi.Input

	ToFlowletDataFlowSinkSchemaLinkedServicePtrOutput() FlowletDataFlowSinkSchemaLinkedServicePtrOutput
	ToFlowletDataFlowSinkSchemaLinkedServicePtrOutputWithContext(context.Context) FlowletDataFlowSinkSchemaLinkedServicePtrOutput
}

type flowletDataFlowSinkSchemaLinkedServicePtrType FlowletDataFlowSinkSchemaLinkedServiceArgs

func FlowletDataFlowSinkSchemaLinkedServicePtr(v *FlowletDataFlowSinkSchemaLinkedServiceArgs) FlowletDataFlowSinkSchemaLinkedServicePtrInput {
	return (*flowletDataFlowSinkSchemaLinkedServicePtrType)(v)
}

func (*flowletDataFlowSinkSchemaLinkedServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowletDataFlowSinkSchemaLinkedService)(nil)).Elem()
}

func (i *flowletDataFlowSinkSchemaLinkedServicePtrType) ToFlowletDataFlowSinkSchemaLinkedServicePtrOutput() FlowletDataFlowSinkSchemaLinkedServicePtrOutput {
	return i.ToFlowletDataFlowSinkSchemaLinkedServicePtrOutputWithContext(context.Background())
}

func (i *flowletDataFlowSinkSchemaLinkedServicePtrType) ToFlowletDataFlowSinkSchemaLinkedServicePtrOutputWithContext(ctx context.Context) FlowletDataFlowSinkSchemaLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSinkSchemaLinkedServicePtrOutput)
}

type FlowletDataFlowSinkSchemaLinkedServiceOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowSinkSchemaLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowSinkSchemaLinkedService)(nil)).Elem()
}

func (o FlowletDataFlowSinkSchemaLinkedServiceOutput) ToFlowletDataFlowSinkSchemaLinkedServiceOutput() FlowletDataFlowSinkSchemaLinkedServiceOutput {
	return o
}

func (o FlowletDataFlowSinkSchemaLinkedServiceOutput) ToFlowletDataFlowSinkSchemaLinkedServiceOutputWithContext(ctx context.Context) FlowletDataFlowSinkSchemaLinkedServiceOutput {
	return o
}

func (o FlowletDataFlowSinkSchemaLinkedServiceOutput) ToFlowletDataFlowSinkSchemaLinkedServicePtrOutput() FlowletDataFlowSinkSchemaLinkedServicePtrOutput {
	return o.ToFlowletDataFlowSinkSchemaLinkedServicePtrOutputWithContext(context.Background())
}

func (o FlowletDataFlowSinkSchemaLinkedServiceOutput) ToFlowletDataFlowSinkSchemaLinkedServicePtrOutputWithContext(ctx context.Context) FlowletDataFlowSinkSchemaLinkedServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowletDataFlowSinkSchemaLinkedService) *FlowletDataFlowSinkSchemaLinkedService {
		return &v
	}).(FlowletDataFlowSinkSchemaLinkedServicePtrOutput)
}

// The name for the Data Factory Linked Service with schema.
func (o FlowletDataFlowSinkSchemaLinkedServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowletDataFlowSinkSchemaLinkedService) string { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o FlowletDataFlowSinkSchemaLinkedServiceOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v FlowletDataFlowSinkSchemaLinkedService) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type FlowletDataFlowSinkSchemaLinkedServicePtrOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowSinkSchemaLinkedServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowletDataFlowSinkSchemaLinkedService)(nil)).Elem()
}

func (o FlowletDataFlowSinkSchemaLinkedServicePtrOutput) ToFlowletDataFlowSinkSchemaLinkedServicePtrOutput() FlowletDataFlowSinkSchemaLinkedServicePtrOutput {
	return o
}

func (o FlowletDataFlowSinkSchemaLinkedServicePtrOutput) ToFlowletDataFlowSinkSchemaLinkedServicePtrOutputWithContext(ctx context.Context) FlowletDataFlowSinkSchemaLinkedServicePtrOutput {
	return o
}

func (o FlowletDataFlowSinkSchemaLinkedServicePtrOutput) Elem() FlowletDataFlowSinkSchemaLinkedServiceOutput {
	return o.ApplyT(func(v *FlowletDataFlowSinkSchemaLinkedService) FlowletDataFlowSinkSchemaLinkedService {
		if v != nil {
			return *v
		}
		var ret FlowletDataFlowSinkSchemaLinkedService
		return ret
	}).(FlowletDataFlowSinkSchemaLinkedServiceOutput)
}

// The name for the Data Factory Linked Service with schema.
func (o FlowletDataFlowSinkSchemaLinkedServicePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowletDataFlowSinkSchemaLinkedService) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o FlowletDataFlowSinkSchemaLinkedServicePtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FlowletDataFlowSinkSchemaLinkedService) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type FlowletDataFlowSource struct {
	// A `dataset` block as defined below.
	Dataset *FlowletDataFlowSourceDataset `pulumi:"dataset"`
	// The description for the Data Flow Source.
	Description *string `pulumi:"description"`
	// A `flowlet` block as defined below.
	Flowlet *FlowletDataFlowSourceFlowlet `pulumi:"flowlet"`
	// A `linkedService` block as defined below.
	LinkedService *FlowletDataFlowSourceLinkedService `pulumi:"linkedService"`
	// The name for the Data Flow Source.
	Name string `pulumi:"name"`
	// A `rejectedLinkedService` block as defined below.
	RejectedLinkedService *FlowletDataFlowSourceRejectedLinkedService `pulumi:"rejectedLinkedService"`
	// A `schemaLinkedService` block as defined below.
	SchemaLinkedService *FlowletDataFlowSourceSchemaLinkedService `pulumi:"schemaLinkedService"`
}

// FlowletDataFlowSourceInput is an input type that accepts FlowletDataFlowSourceArgs and FlowletDataFlowSourceOutput values.
// You can construct a concrete instance of `FlowletDataFlowSourceInput` via:
//
//	FlowletDataFlowSourceArgs{...}
type FlowletDataFlowSourceInput interface {
	pulumi.Input

	ToFlowletDataFlowSourceOutput() FlowletDataFlowSourceOutput
	ToFlowletDataFlowSourceOutputWithContext(context.Context) FlowletDataFlowSourceOutput
}

type FlowletDataFlowSourceArgs struct {
	// A `dataset` block as defined below.
	Dataset FlowletDataFlowSourceDatasetPtrInput `pulumi:"dataset"`
	// The description for the Data Flow Source.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A `flowlet` block as defined below.
	Flowlet FlowletDataFlowSourceFlowletPtrInput `pulumi:"flowlet"`
	// A `linkedService` block as defined below.
	LinkedService FlowletDataFlowSourceLinkedServicePtrInput `pulumi:"linkedService"`
	// The name for the Data Flow Source.
	Name pulumi.StringInput `pulumi:"name"`
	// A `rejectedLinkedService` block as defined below.
	RejectedLinkedService FlowletDataFlowSourceRejectedLinkedServicePtrInput `pulumi:"rejectedLinkedService"`
	// A `schemaLinkedService` block as defined below.
	SchemaLinkedService FlowletDataFlowSourceSchemaLinkedServicePtrInput `pulumi:"schemaLinkedService"`
}

func (FlowletDataFlowSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowSource)(nil)).Elem()
}

func (i FlowletDataFlowSourceArgs) ToFlowletDataFlowSourceOutput() FlowletDataFlowSourceOutput {
	return i.ToFlowletDataFlowSourceOutputWithContext(context.Background())
}

func (i FlowletDataFlowSourceArgs) ToFlowletDataFlowSourceOutputWithContext(ctx context.Context) FlowletDataFlowSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSourceOutput)
}

// FlowletDataFlowSourceArrayInput is an input type that accepts FlowletDataFlowSourceArray and FlowletDataFlowSourceArrayOutput values.
// You can construct a concrete instance of `FlowletDataFlowSourceArrayInput` via:
//
//	FlowletDataFlowSourceArray{ FlowletDataFlowSourceArgs{...} }
type FlowletDataFlowSourceArrayInput interface {
	pulumi.Input

	ToFlowletDataFlowSourceArrayOutput() FlowletDataFlowSourceArrayOutput
	ToFlowletDataFlowSourceArrayOutputWithContext(context.Context) FlowletDataFlowSourceArrayOutput
}

type FlowletDataFlowSourceArray []FlowletDataFlowSourceInput

func (FlowletDataFlowSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowletDataFlowSource)(nil)).Elem()
}

func (i FlowletDataFlowSourceArray) ToFlowletDataFlowSourceArrayOutput() FlowletDataFlowSourceArrayOutput {
	return i.ToFlowletDataFlowSourceArrayOutputWithContext(context.Background())
}

func (i FlowletDataFlowSourceArray) ToFlowletDataFlowSourceArrayOutputWithContext(ctx context.Context) FlowletDataFlowSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSourceArrayOutput)
}

type FlowletDataFlowSourceOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowSource)(nil)).Elem()
}

func (o FlowletDataFlowSourceOutput) ToFlowletDataFlowSourceOutput() FlowletDataFlowSourceOutput {
	return o
}

func (o FlowletDataFlowSourceOutput) ToFlowletDataFlowSourceOutputWithContext(ctx context.Context) FlowletDataFlowSourceOutput {
	return o
}

// A `dataset` block as defined below.
func (o FlowletDataFlowSourceOutput) Dataset() FlowletDataFlowSourceDatasetPtrOutput {
	return o.ApplyT(func(v FlowletDataFlowSource) *FlowletDataFlowSourceDataset { return v.Dataset }).(FlowletDataFlowSourceDatasetPtrOutput)
}

// The description for the Data Flow Source.
func (o FlowletDataFlowSourceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowletDataFlowSource) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A `flowlet` block as defined below.
func (o FlowletDataFlowSourceOutput) Flowlet() FlowletDataFlowSourceFlowletPtrOutput {
	return o.ApplyT(func(v FlowletDataFlowSource) *FlowletDataFlowSourceFlowlet { return v.Flowlet }).(FlowletDataFlowSourceFlowletPtrOutput)
}

// A `linkedService` block as defined below.
func (o FlowletDataFlowSourceOutput) LinkedService() FlowletDataFlowSourceLinkedServicePtrOutput {
	return o.ApplyT(func(v FlowletDataFlowSource) *FlowletDataFlowSourceLinkedService { return v.LinkedService }).(FlowletDataFlowSourceLinkedServicePtrOutput)
}

// The name for the Data Flow Source.
func (o FlowletDataFlowSourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowletDataFlowSource) string { return v.Name }).(pulumi.StringOutput)
}

// A `rejectedLinkedService` block as defined below.
func (o FlowletDataFlowSourceOutput) RejectedLinkedService() FlowletDataFlowSourceRejectedLinkedServicePtrOutput {
	return o.ApplyT(func(v FlowletDataFlowSource) *FlowletDataFlowSourceRejectedLinkedService {
		return v.RejectedLinkedService
	}).(FlowletDataFlowSourceRejectedLinkedServicePtrOutput)
}

// A `schemaLinkedService` block as defined below.
func (o FlowletDataFlowSourceOutput) SchemaLinkedService() FlowletDataFlowSourceSchemaLinkedServicePtrOutput {
	return o.ApplyT(func(v FlowletDataFlowSource) *FlowletDataFlowSourceSchemaLinkedService { return v.SchemaLinkedService }).(FlowletDataFlowSourceSchemaLinkedServicePtrOutput)
}

type FlowletDataFlowSourceArrayOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowletDataFlowSource)(nil)).Elem()
}

func (o FlowletDataFlowSourceArrayOutput) ToFlowletDataFlowSourceArrayOutput() FlowletDataFlowSourceArrayOutput {
	return o
}

func (o FlowletDataFlowSourceArrayOutput) ToFlowletDataFlowSourceArrayOutputWithContext(ctx context.Context) FlowletDataFlowSourceArrayOutput {
	return o
}

func (o FlowletDataFlowSourceArrayOutput) Index(i pulumi.IntInput) FlowletDataFlowSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowletDataFlowSource {
		return vs[0].([]FlowletDataFlowSource)[vs[1].(int)]
	}).(FlowletDataFlowSourceOutput)
}

type FlowletDataFlowSourceDataset struct {
	// The name for the Data Factory Dataset.
	Name string `pulumi:"name"`
	// A map of parameters to associate with the Data Factory dataset.
	Parameters map[string]string `pulumi:"parameters"`
}

// FlowletDataFlowSourceDatasetInput is an input type that accepts FlowletDataFlowSourceDatasetArgs and FlowletDataFlowSourceDatasetOutput values.
// You can construct a concrete instance of `FlowletDataFlowSourceDatasetInput` via:
//
//	FlowletDataFlowSourceDatasetArgs{...}
type FlowletDataFlowSourceDatasetInput interface {
	pulumi.Input

	ToFlowletDataFlowSourceDatasetOutput() FlowletDataFlowSourceDatasetOutput
	ToFlowletDataFlowSourceDatasetOutputWithContext(context.Context) FlowletDataFlowSourceDatasetOutput
}

type FlowletDataFlowSourceDatasetArgs struct {
	// The name for the Data Factory Dataset.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory dataset.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (FlowletDataFlowSourceDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowSourceDataset)(nil)).Elem()
}

func (i FlowletDataFlowSourceDatasetArgs) ToFlowletDataFlowSourceDatasetOutput() FlowletDataFlowSourceDatasetOutput {
	return i.ToFlowletDataFlowSourceDatasetOutputWithContext(context.Background())
}

func (i FlowletDataFlowSourceDatasetArgs) ToFlowletDataFlowSourceDatasetOutputWithContext(ctx context.Context) FlowletDataFlowSourceDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSourceDatasetOutput)
}

func (i FlowletDataFlowSourceDatasetArgs) ToFlowletDataFlowSourceDatasetPtrOutput() FlowletDataFlowSourceDatasetPtrOutput {
	return i.ToFlowletDataFlowSourceDatasetPtrOutputWithContext(context.Background())
}

func (i FlowletDataFlowSourceDatasetArgs) ToFlowletDataFlowSourceDatasetPtrOutputWithContext(ctx context.Context) FlowletDataFlowSourceDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSourceDatasetOutput).ToFlowletDataFlowSourceDatasetPtrOutputWithContext(ctx)
}

// FlowletDataFlowSourceDatasetPtrInput is an input type that accepts FlowletDataFlowSourceDatasetArgs, FlowletDataFlowSourceDatasetPtr and FlowletDataFlowSourceDatasetPtrOutput values.
// You can construct a concrete instance of `FlowletDataFlowSourceDatasetPtrInput` via:
//
//	        FlowletDataFlowSourceDatasetArgs{...}
//
//	or:
//
//	        nil
type FlowletDataFlowSourceDatasetPtrInput interface {
	pulumi.Input

	ToFlowletDataFlowSourceDatasetPtrOutput() FlowletDataFlowSourceDatasetPtrOutput
	ToFlowletDataFlowSourceDatasetPtrOutputWithContext(context.Context) FlowletDataFlowSourceDatasetPtrOutput
}

type flowletDataFlowSourceDatasetPtrType FlowletDataFlowSourceDatasetArgs

func FlowletDataFlowSourceDatasetPtr(v *FlowletDataFlowSourceDatasetArgs) FlowletDataFlowSourceDatasetPtrInput {
	return (*flowletDataFlowSourceDatasetPtrType)(v)
}

func (*flowletDataFlowSourceDatasetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowletDataFlowSourceDataset)(nil)).Elem()
}

func (i *flowletDataFlowSourceDatasetPtrType) ToFlowletDataFlowSourceDatasetPtrOutput() FlowletDataFlowSourceDatasetPtrOutput {
	return i.ToFlowletDataFlowSourceDatasetPtrOutputWithContext(context.Background())
}

func (i *flowletDataFlowSourceDatasetPtrType) ToFlowletDataFlowSourceDatasetPtrOutputWithContext(ctx context.Context) FlowletDataFlowSourceDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSourceDatasetPtrOutput)
}

type FlowletDataFlowSourceDatasetOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowSourceDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowSourceDataset)(nil)).Elem()
}

func (o FlowletDataFlowSourceDatasetOutput) ToFlowletDataFlowSourceDatasetOutput() FlowletDataFlowSourceDatasetOutput {
	return o
}

func (o FlowletDataFlowSourceDatasetOutput) ToFlowletDataFlowSourceDatasetOutputWithContext(ctx context.Context) FlowletDataFlowSourceDatasetOutput {
	return o
}

func (o FlowletDataFlowSourceDatasetOutput) ToFlowletDataFlowSourceDatasetPtrOutput() FlowletDataFlowSourceDatasetPtrOutput {
	return o.ToFlowletDataFlowSourceDatasetPtrOutputWithContext(context.Background())
}

func (o FlowletDataFlowSourceDatasetOutput) ToFlowletDataFlowSourceDatasetPtrOutputWithContext(ctx context.Context) FlowletDataFlowSourceDatasetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowletDataFlowSourceDataset) *FlowletDataFlowSourceDataset {
		return &v
	}).(FlowletDataFlowSourceDatasetPtrOutput)
}

// The name for the Data Factory Dataset.
func (o FlowletDataFlowSourceDatasetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowletDataFlowSourceDataset) string { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the Data Factory dataset.
func (o FlowletDataFlowSourceDatasetOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v FlowletDataFlowSourceDataset) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type FlowletDataFlowSourceDatasetPtrOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowSourceDatasetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowletDataFlowSourceDataset)(nil)).Elem()
}

func (o FlowletDataFlowSourceDatasetPtrOutput) ToFlowletDataFlowSourceDatasetPtrOutput() FlowletDataFlowSourceDatasetPtrOutput {
	return o
}

func (o FlowletDataFlowSourceDatasetPtrOutput) ToFlowletDataFlowSourceDatasetPtrOutputWithContext(ctx context.Context) FlowletDataFlowSourceDatasetPtrOutput {
	return o
}

func (o FlowletDataFlowSourceDatasetPtrOutput) Elem() FlowletDataFlowSourceDatasetOutput {
	return o.ApplyT(func(v *FlowletDataFlowSourceDataset) FlowletDataFlowSourceDataset {
		if v != nil {
			return *v
		}
		var ret FlowletDataFlowSourceDataset
		return ret
	}).(FlowletDataFlowSourceDatasetOutput)
}

// The name for the Data Factory Dataset.
func (o FlowletDataFlowSourceDatasetPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowletDataFlowSourceDataset) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the Data Factory dataset.
func (o FlowletDataFlowSourceDatasetPtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FlowletDataFlowSourceDataset) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type FlowletDataFlowSourceFlowlet struct {
	// Specifies the reference data flow parameters from dataset.
	DatasetParameters *string `pulumi:"datasetParameters"`
	// The name for the Data Factory Flowlet.
	Name string `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Flowlet.
	Parameters map[string]string `pulumi:"parameters"`
}

// FlowletDataFlowSourceFlowletInput is an input type that accepts FlowletDataFlowSourceFlowletArgs and FlowletDataFlowSourceFlowletOutput values.
// You can construct a concrete instance of `FlowletDataFlowSourceFlowletInput` via:
//
//	FlowletDataFlowSourceFlowletArgs{...}
type FlowletDataFlowSourceFlowletInput interface {
	pulumi.Input

	ToFlowletDataFlowSourceFlowletOutput() FlowletDataFlowSourceFlowletOutput
	ToFlowletDataFlowSourceFlowletOutputWithContext(context.Context) FlowletDataFlowSourceFlowletOutput
}

type FlowletDataFlowSourceFlowletArgs struct {
	// Specifies the reference data flow parameters from dataset.
	DatasetParameters pulumi.StringPtrInput `pulumi:"datasetParameters"`
	// The name for the Data Factory Flowlet.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Flowlet.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (FlowletDataFlowSourceFlowletArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowSourceFlowlet)(nil)).Elem()
}

func (i FlowletDataFlowSourceFlowletArgs) ToFlowletDataFlowSourceFlowletOutput() FlowletDataFlowSourceFlowletOutput {
	return i.ToFlowletDataFlowSourceFlowletOutputWithContext(context.Background())
}

func (i FlowletDataFlowSourceFlowletArgs) ToFlowletDataFlowSourceFlowletOutputWithContext(ctx context.Context) FlowletDataFlowSourceFlowletOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSourceFlowletOutput)
}

func (i FlowletDataFlowSourceFlowletArgs) ToFlowletDataFlowSourceFlowletPtrOutput() FlowletDataFlowSourceFlowletPtrOutput {
	return i.ToFlowletDataFlowSourceFlowletPtrOutputWithContext(context.Background())
}

func (i FlowletDataFlowSourceFlowletArgs) ToFlowletDataFlowSourceFlowletPtrOutputWithContext(ctx context.Context) FlowletDataFlowSourceFlowletPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSourceFlowletOutput).ToFlowletDataFlowSourceFlowletPtrOutputWithContext(ctx)
}

// FlowletDataFlowSourceFlowletPtrInput is an input type that accepts FlowletDataFlowSourceFlowletArgs, FlowletDataFlowSourceFlowletPtr and FlowletDataFlowSourceFlowletPtrOutput values.
// You can construct a concrete instance of `FlowletDataFlowSourceFlowletPtrInput` via:
//
//	        FlowletDataFlowSourceFlowletArgs{...}
//
//	or:
//
//	        nil
type FlowletDataFlowSourceFlowletPtrInput interface {
	pulumi.Input

	ToFlowletDataFlowSourceFlowletPtrOutput() FlowletDataFlowSourceFlowletPtrOutput
	ToFlowletDataFlowSourceFlowletPtrOutputWithContext(context.Context) FlowletDataFlowSourceFlowletPtrOutput
}

type flowletDataFlowSourceFlowletPtrType FlowletDataFlowSourceFlowletArgs

func FlowletDataFlowSourceFlowletPtr(v *FlowletDataFlowSourceFlowletArgs) FlowletDataFlowSourceFlowletPtrInput {
	return (*flowletDataFlowSourceFlowletPtrType)(v)
}

func (*flowletDataFlowSourceFlowletPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowletDataFlowSourceFlowlet)(nil)).Elem()
}

func (i *flowletDataFlowSourceFlowletPtrType) ToFlowletDataFlowSourceFlowletPtrOutput() FlowletDataFlowSourceFlowletPtrOutput {
	return i.ToFlowletDataFlowSourceFlowletPtrOutputWithContext(context.Background())
}

func (i *flowletDataFlowSourceFlowletPtrType) ToFlowletDataFlowSourceFlowletPtrOutputWithContext(ctx context.Context) FlowletDataFlowSourceFlowletPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSourceFlowletPtrOutput)
}

type FlowletDataFlowSourceFlowletOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowSourceFlowletOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowSourceFlowlet)(nil)).Elem()
}

func (o FlowletDataFlowSourceFlowletOutput) ToFlowletDataFlowSourceFlowletOutput() FlowletDataFlowSourceFlowletOutput {
	return o
}

func (o FlowletDataFlowSourceFlowletOutput) ToFlowletDataFlowSourceFlowletOutputWithContext(ctx context.Context) FlowletDataFlowSourceFlowletOutput {
	return o
}

func (o FlowletDataFlowSourceFlowletOutput) ToFlowletDataFlowSourceFlowletPtrOutput() FlowletDataFlowSourceFlowletPtrOutput {
	return o.ToFlowletDataFlowSourceFlowletPtrOutputWithContext(context.Background())
}

func (o FlowletDataFlowSourceFlowletOutput) ToFlowletDataFlowSourceFlowletPtrOutputWithContext(ctx context.Context) FlowletDataFlowSourceFlowletPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowletDataFlowSourceFlowlet) *FlowletDataFlowSourceFlowlet {
		return &v
	}).(FlowletDataFlowSourceFlowletPtrOutput)
}

// Specifies the reference data flow parameters from dataset.
func (o FlowletDataFlowSourceFlowletOutput) DatasetParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowletDataFlowSourceFlowlet) *string { return v.DatasetParameters }).(pulumi.StringPtrOutput)
}

// The name for the Data Factory Flowlet.
func (o FlowletDataFlowSourceFlowletOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowletDataFlowSourceFlowlet) string { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the Data Factory Flowlet.
func (o FlowletDataFlowSourceFlowletOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v FlowletDataFlowSourceFlowlet) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type FlowletDataFlowSourceFlowletPtrOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowSourceFlowletPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowletDataFlowSourceFlowlet)(nil)).Elem()
}

func (o FlowletDataFlowSourceFlowletPtrOutput) ToFlowletDataFlowSourceFlowletPtrOutput() FlowletDataFlowSourceFlowletPtrOutput {
	return o
}

func (o FlowletDataFlowSourceFlowletPtrOutput) ToFlowletDataFlowSourceFlowletPtrOutputWithContext(ctx context.Context) FlowletDataFlowSourceFlowletPtrOutput {
	return o
}

func (o FlowletDataFlowSourceFlowletPtrOutput) Elem() FlowletDataFlowSourceFlowletOutput {
	return o.ApplyT(func(v *FlowletDataFlowSourceFlowlet) FlowletDataFlowSourceFlowlet {
		if v != nil {
			return *v
		}
		var ret FlowletDataFlowSourceFlowlet
		return ret
	}).(FlowletDataFlowSourceFlowletOutput)
}

// Specifies the reference data flow parameters from dataset.
func (o FlowletDataFlowSourceFlowletPtrOutput) DatasetParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowletDataFlowSourceFlowlet) *string {
		if v == nil {
			return nil
		}
		return v.DatasetParameters
	}).(pulumi.StringPtrOutput)
}

// The name for the Data Factory Flowlet.
func (o FlowletDataFlowSourceFlowletPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowletDataFlowSourceFlowlet) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the Data Factory Flowlet.
func (o FlowletDataFlowSourceFlowletPtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FlowletDataFlowSourceFlowlet) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type FlowletDataFlowSourceLinkedService struct {
	// The name for the Data Factory Linked Service.
	Name string `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters map[string]string `pulumi:"parameters"`
}

// FlowletDataFlowSourceLinkedServiceInput is an input type that accepts FlowletDataFlowSourceLinkedServiceArgs and FlowletDataFlowSourceLinkedServiceOutput values.
// You can construct a concrete instance of `FlowletDataFlowSourceLinkedServiceInput` via:
//
//	FlowletDataFlowSourceLinkedServiceArgs{...}
type FlowletDataFlowSourceLinkedServiceInput interface {
	pulumi.Input

	ToFlowletDataFlowSourceLinkedServiceOutput() FlowletDataFlowSourceLinkedServiceOutput
	ToFlowletDataFlowSourceLinkedServiceOutputWithContext(context.Context) FlowletDataFlowSourceLinkedServiceOutput
}

type FlowletDataFlowSourceLinkedServiceArgs struct {
	// The name for the Data Factory Linked Service.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (FlowletDataFlowSourceLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowSourceLinkedService)(nil)).Elem()
}

func (i FlowletDataFlowSourceLinkedServiceArgs) ToFlowletDataFlowSourceLinkedServiceOutput() FlowletDataFlowSourceLinkedServiceOutput {
	return i.ToFlowletDataFlowSourceLinkedServiceOutputWithContext(context.Background())
}

func (i FlowletDataFlowSourceLinkedServiceArgs) ToFlowletDataFlowSourceLinkedServiceOutputWithContext(ctx context.Context) FlowletDataFlowSourceLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSourceLinkedServiceOutput)
}

func (i FlowletDataFlowSourceLinkedServiceArgs) ToFlowletDataFlowSourceLinkedServicePtrOutput() FlowletDataFlowSourceLinkedServicePtrOutput {
	return i.ToFlowletDataFlowSourceLinkedServicePtrOutputWithContext(context.Background())
}

func (i FlowletDataFlowSourceLinkedServiceArgs) ToFlowletDataFlowSourceLinkedServicePtrOutputWithContext(ctx context.Context) FlowletDataFlowSourceLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSourceLinkedServiceOutput).ToFlowletDataFlowSourceLinkedServicePtrOutputWithContext(ctx)
}

// FlowletDataFlowSourceLinkedServicePtrInput is an input type that accepts FlowletDataFlowSourceLinkedServiceArgs, FlowletDataFlowSourceLinkedServicePtr and FlowletDataFlowSourceLinkedServicePtrOutput values.
// You can construct a concrete instance of `FlowletDataFlowSourceLinkedServicePtrInput` via:
//
//	        FlowletDataFlowSourceLinkedServiceArgs{...}
//
//	or:
//
//	        nil
type FlowletDataFlowSourceLinkedServicePtrInput interface {
	pulumi.Input

	ToFlowletDataFlowSourceLinkedServicePtrOutput() FlowletDataFlowSourceLinkedServicePtrOutput
	ToFlowletDataFlowSourceLinkedServicePtrOutputWithContext(context.Context) FlowletDataFlowSourceLinkedServicePtrOutput
}

type flowletDataFlowSourceLinkedServicePtrType FlowletDataFlowSourceLinkedServiceArgs

func FlowletDataFlowSourceLinkedServicePtr(v *FlowletDataFlowSourceLinkedServiceArgs) FlowletDataFlowSourceLinkedServicePtrInput {
	return (*flowletDataFlowSourceLinkedServicePtrType)(v)
}

func (*flowletDataFlowSourceLinkedServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowletDataFlowSourceLinkedService)(nil)).Elem()
}

func (i *flowletDataFlowSourceLinkedServicePtrType) ToFlowletDataFlowSourceLinkedServicePtrOutput() FlowletDataFlowSourceLinkedServicePtrOutput {
	return i.ToFlowletDataFlowSourceLinkedServicePtrOutputWithContext(context.Background())
}

func (i *flowletDataFlowSourceLinkedServicePtrType) ToFlowletDataFlowSourceLinkedServicePtrOutputWithContext(ctx context.Context) FlowletDataFlowSourceLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSourceLinkedServicePtrOutput)
}

type FlowletDataFlowSourceLinkedServiceOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowSourceLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowSourceLinkedService)(nil)).Elem()
}

func (o FlowletDataFlowSourceLinkedServiceOutput) ToFlowletDataFlowSourceLinkedServiceOutput() FlowletDataFlowSourceLinkedServiceOutput {
	return o
}

func (o FlowletDataFlowSourceLinkedServiceOutput) ToFlowletDataFlowSourceLinkedServiceOutputWithContext(ctx context.Context) FlowletDataFlowSourceLinkedServiceOutput {
	return o
}

func (o FlowletDataFlowSourceLinkedServiceOutput) ToFlowletDataFlowSourceLinkedServicePtrOutput() FlowletDataFlowSourceLinkedServicePtrOutput {
	return o.ToFlowletDataFlowSourceLinkedServicePtrOutputWithContext(context.Background())
}

func (o FlowletDataFlowSourceLinkedServiceOutput) ToFlowletDataFlowSourceLinkedServicePtrOutputWithContext(ctx context.Context) FlowletDataFlowSourceLinkedServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowletDataFlowSourceLinkedService) *FlowletDataFlowSourceLinkedService {
		return &v
	}).(FlowletDataFlowSourceLinkedServicePtrOutput)
}

// The name for the Data Factory Linked Service.
func (o FlowletDataFlowSourceLinkedServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowletDataFlowSourceLinkedService) string { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o FlowletDataFlowSourceLinkedServiceOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v FlowletDataFlowSourceLinkedService) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type FlowletDataFlowSourceLinkedServicePtrOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowSourceLinkedServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowletDataFlowSourceLinkedService)(nil)).Elem()
}

func (o FlowletDataFlowSourceLinkedServicePtrOutput) ToFlowletDataFlowSourceLinkedServicePtrOutput() FlowletDataFlowSourceLinkedServicePtrOutput {
	return o
}

func (o FlowletDataFlowSourceLinkedServicePtrOutput) ToFlowletDataFlowSourceLinkedServicePtrOutputWithContext(ctx context.Context) FlowletDataFlowSourceLinkedServicePtrOutput {
	return o
}

func (o FlowletDataFlowSourceLinkedServicePtrOutput) Elem() FlowletDataFlowSourceLinkedServiceOutput {
	return o.ApplyT(func(v *FlowletDataFlowSourceLinkedService) FlowletDataFlowSourceLinkedService {
		if v != nil {
			return *v
		}
		var ret FlowletDataFlowSourceLinkedService
		return ret
	}).(FlowletDataFlowSourceLinkedServiceOutput)
}

// The name for the Data Factory Linked Service.
func (o FlowletDataFlowSourceLinkedServicePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowletDataFlowSourceLinkedService) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o FlowletDataFlowSourceLinkedServicePtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FlowletDataFlowSourceLinkedService) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type FlowletDataFlowSourceRejectedLinkedService struct {
	// The name for the Data Factory Linked Service with schema.
	Name string `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters map[string]string `pulumi:"parameters"`
}

// FlowletDataFlowSourceRejectedLinkedServiceInput is an input type that accepts FlowletDataFlowSourceRejectedLinkedServiceArgs and FlowletDataFlowSourceRejectedLinkedServiceOutput values.
// You can construct a concrete instance of `FlowletDataFlowSourceRejectedLinkedServiceInput` via:
//
//	FlowletDataFlowSourceRejectedLinkedServiceArgs{...}
type FlowletDataFlowSourceRejectedLinkedServiceInput interface {
	pulumi.Input

	ToFlowletDataFlowSourceRejectedLinkedServiceOutput() FlowletDataFlowSourceRejectedLinkedServiceOutput
	ToFlowletDataFlowSourceRejectedLinkedServiceOutputWithContext(context.Context) FlowletDataFlowSourceRejectedLinkedServiceOutput
}

type FlowletDataFlowSourceRejectedLinkedServiceArgs struct {
	// The name for the Data Factory Linked Service with schema.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (FlowletDataFlowSourceRejectedLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowSourceRejectedLinkedService)(nil)).Elem()
}

func (i FlowletDataFlowSourceRejectedLinkedServiceArgs) ToFlowletDataFlowSourceRejectedLinkedServiceOutput() FlowletDataFlowSourceRejectedLinkedServiceOutput {
	return i.ToFlowletDataFlowSourceRejectedLinkedServiceOutputWithContext(context.Background())
}

func (i FlowletDataFlowSourceRejectedLinkedServiceArgs) ToFlowletDataFlowSourceRejectedLinkedServiceOutputWithContext(ctx context.Context) FlowletDataFlowSourceRejectedLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSourceRejectedLinkedServiceOutput)
}

func (i FlowletDataFlowSourceRejectedLinkedServiceArgs) ToFlowletDataFlowSourceRejectedLinkedServicePtrOutput() FlowletDataFlowSourceRejectedLinkedServicePtrOutput {
	return i.ToFlowletDataFlowSourceRejectedLinkedServicePtrOutputWithContext(context.Background())
}

func (i FlowletDataFlowSourceRejectedLinkedServiceArgs) ToFlowletDataFlowSourceRejectedLinkedServicePtrOutputWithContext(ctx context.Context) FlowletDataFlowSourceRejectedLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSourceRejectedLinkedServiceOutput).ToFlowletDataFlowSourceRejectedLinkedServicePtrOutputWithContext(ctx)
}

// FlowletDataFlowSourceRejectedLinkedServicePtrInput is an input type that accepts FlowletDataFlowSourceRejectedLinkedServiceArgs, FlowletDataFlowSourceRejectedLinkedServicePtr and FlowletDataFlowSourceRejectedLinkedServicePtrOutput values.
// You can construct a concrete instance of `FlowletDataFlowSourceRejectedLinkedServicePtrInput` via:
//
//	        FlowletDataFlowSourceRejectedLinkedServiceArgs{...}
//
//	or:
//
//	        nil
type FlowletDataFlowSourceRejectedLinkedServicePtrInput interface {
	pulumi.Input

	ToFlowletDataFlowSourceRejectedLinkedServicePtrOutput() FlowletDataFlowSourceRejectedLinkedServicePtrOutput
	ToFlowletDataFlowSourceRejectedLinkedServicePtrOutputWithContext(context.Context) FlowletDataFlowSourceRejectedLinkedServicePtrOutput
}

type flowletDataFlowSourceRejectedLinkedServicePtrType FlowletDataFlowSourceRejectedLinkedServiceArgs

func FlowletDataFlowSourceRejectedLinkedServicePtr(v *FlowletDataFlowSourceRejectedLinkedServiceArgs) FlowletDataFlowSourceRejectedLinkedServicePtrInput {
	return (*flowletDataFlowSourceRejectedLinkedServicePtrType)(v)
}

func (*flowletDataFlowSourceRejectedLinkedServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowletDataFlowSourceRejectedLinkedService)(nil)).Elem()
}

func (i *flowletDataFlowSourceRejectedLinkedServicePtrType) ToFlowletDataFlowSourceRejectedLinkedServicePtrOutput() FlowletDataFlowSourceRejectedLinkedServicePtrOutput {
	return i.ToFlowletDataFlowSourceRejectedLinkedServicePtrOutputWithContext(context.Background())
}

func (i *flowletDataFlowSourceRejectedLinkedServicePtrType) ToFlowletDataFlowSourceRejectedLinkedServicePtrOutputWithContext(ctx context.Context) FlowletDataFlowSourceRejectedLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSourceRejectedLinkedServicePtrOutput)
}

type FlowletDataFlowSourceRejectedLinkedServiceOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowSourceRejectedLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowSourceRejectedLinkedService)(nil)).Elem()
}

func (o FlowletDataFlowSourceRejectedLinkedServiceOutput) ToFlowletDataFlowSourceRejectedLinkedServiceOutput() FlowletDataFlowSourceRejectedLinkedServiceOutput {
	return o
}

func (o FlowletDataFlowSourceRejectedLinkedServiceOutput) ToFlowletDataFlowSourceRejectedLinkedServiceOutputWithContext(ctx context.Context) FlowletDataFlowSourceRejectedLinkedServiceOutput {
	return o
}

func (o FlowletDataFlowSourceRejectedLinkedServiceOutput) ToFlowletDataFlowSourceRejectedLinkedServicePtrOutput() FlowletDataFlowSourceRejectedLinkedServicePtrOutput {
	return o.ToFlowletDataFlowSourceRejectedLinkedServicePtrOutputWithContext(context.Background())
}

func (o FlowletDataFlowSourceRejectedLinkedServiceOutput) ToFlowletDataFlowSourceRejectedLinkedServicePtrOutputWithContext(ctx context.Context) FlowletDataFlowSourceRejectedLinkedServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowletDataFlowSourceRejectedLinkedService) *FlowletDataFlowSourceRejectedLinkedService {
		return &v
	}).(FlowletDataFlowSourceRejectedLinkedServicePtrOutput)
}

// The name for the Data Factory Linked Service with schema.
func (o FlowletDataFlowSourceRejectedLinkedServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowletDataFlowSourceRejectedLinkedService) string { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o FlowletDataFlowSourceRejectedLinkedServiceOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v FlowletDataFlowSourceRejectedLinkedService) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type FlowletDataFlowSourceRejectedLinkedServicePtrOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowSourceRejectedLinkedServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowletDataFlowSourceRejectedLinkedService)(nil)).Elem()
}

func (o FlowletDataFlowSourceRejectedLinkedServicePtrOutput) ToFlowletDataFlowSourceRejectedLinkedServicePtrOutput() FlowletDataFlowSourceRejectedLinkedServicePtrOutput {
	return o
}

func (o FlowletDataFlowSourceRejectedLinkedServicePtrOutput) ToFlowletDataFlowSourceRejectedLinkedServicePtrOutputWithContext(ctx context.Context) FlowletDataFlowSourceRejectedLinkedServicePtrOutput {
	return o
}

func (o FlowletDataFlowSourceRejectedLinkedServicePtrOutput) Elem() FlowletDataFlowSourceRejectedLinkedServiceOutput {
	return o.ApplyT(func(v *FlowletDataFlowSourceRejectedLinkedService) FlowletDataFlowSourceRejectedLinkedService {
		if v != nil {
			return *v
		}
		var ret FlowletDataFlowSourceRejectedLinkedService
		return ret
	}).(FlowletDataFlowSourceRejectedLinkedServiceOutput)
}

// The name for the Data Factory Linked Service with schema.
func (o FlowletDataFlowSourceRejectedLinkedServicePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowletDataFlowSourceRejectedLinkedService) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o FlowletDataFlowSourceRejectedLinkedServicePtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FlowletDataFlowSourceRejectedLinkedService) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type FlowletDataFlowSourceSchemaLinkedService struct {
	// The name for the Data Factory Linked Service with schema.
	Name string `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters map[string]string `pulumi:"parameters"`
}

// FlowletDataFlowSourceSchemaLinkedServiceInput is an input type that accepts FlowletDataFlowSourceSchemaLinkedServiceArgs and FlowletDataFlowSourceSchemaLinkedServiceOutput values.
// You can construct a concrete instance of `FlowletDataFlowSourceSchemaLinkedServiceInput` via:
//
//	FlowletDataFlowSourceSchemaLinkedServiceArgs{...}
type FlowletDataFlowSourceSchemaLinkedServiceInput interface {
	pulumi.Input

	ToFlowletDataFlowSourceSchemaLinkedServiceOutput() FlowletDataFlowSourceSchemaLinkedServiceOutput
	ToFlowletDataFlowSourceSchemaLinkedServiceOutputWithContext(context.Context) FlowletDataFlowSourceSchemaLinkedServiceOutput
}

type FlowletDataFlowSourceSchemaLinkedServiceArgs struct {
	// The name for the Data Factory Linked Service with schema.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (FlowletDataFlowSourceSchemaLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowSourceSchemaLinkedService)(nil)).Elem()
}

func (i FlowletDataFlowSourceSchemaLinkedServiceArgs) ToFlowletDataFlowSourceSchemaLinkedServiceOutput() FlowletDataFlowSourceSchemaLinkedServiceOutput {
	return i.ToFlowletDataFlowSourceSchemaLinkedServiceOutputWithContext(context.Background())
}

func (i FlowletDataFlowSourceSchemaLinkedServiceArgs) ToFlowletDataFlowSourceSchemaLinkedServiceOutputWithContext(ctx context.Context) FlowletDataFlowSourceSchemaLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSourceSchemaLinkedServiceOutput)
}

func (i FlowletDataFlowSourceSchemaLinkedServiceArgs) ToFlowletDataFlowSourceSchemaLinkedServicePtrOutput() FlowletDataFlowSourceSchemaLinkedServicePtrOutput {
	return i.ToFlowletDataFlowSourceSchemaLinkedServicePtrOutputWithContext(context.Background())
}

func (i FlowletDataFlowSourceSchemaLinkedServiceArgs) ToFlowletDataFlowSourceSchemaLinkedServicePtrOutputWithContext(ctx context.Context) FlowletDataFlowSourceSchemaLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSourceSchemaLinkedServiceOutput).ToFlowletDataFlowSourceSchemaLinkedServicePtrOutputWithContext(ctx)
}

// FlowletDataFlowSourceSchemaLinkedServicePtrInput is an input type that accepts FlowletDataFlowSourceSchemaLinkedServiceArgs, FlowletDataFlowSourceSchemaLinkedServicePtr and FlowletDataFlowSourceSchemaLinkedServicePtrOutput values.
// You can construct a concrete instance of `FlowletDataFlowSourceSchemaLinkedServicePtrInput` via:
//
//	        FlowletDataFlowSourceSchemaLinkedServiceArgs{...}
//
//	or:
//
//	        nil
type FlowletDataFlowSourceSchemaLinkedServicePtrInput interface {
	pulumi.Input

	ToFlowletDataFlowSourceSchemaLinkedServicePtrOutput() FlowletDataFlowSourceSchemaLinkedServicePtrOutput
	ToFlowletDataFlowSourceSchemaLinkedServicePtrOutputWithContext(context.Context) FlowletDataFlowSourceSchemaLinkedServicePtrOutput
}

type flowletDataFlowSourceSchemaLinkedServicePtrType FlowletDataFlowSourceSchemaLinkedServiceArgs

func FlowletDataFlowSourceSchemaLinkedServicePtr(v *FlowletDataFlowSourceSchemaLinkedServiceArgs) FlowletDataFlowSourceSchemaLinkedServicePtrInput {
	return (*flowletDataFlowSourceSchemaLinkedServicePtrType)(v)
}

func (*flowletDataFlowSourceSchemaLinkedServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowletDataFlowSourceSchemaLinkedService)(nil)).Elem()
}

func (i *flowletDataFlowSourceSchemaLinkedServicePtrType) ToFlowletDataFlowSourceSchemaLinkedServicePtrOutput() FlowletDataFlowSourceSchemaLinkedServicePtrOutput {
	return i.ToFlowletDataFlowSourceSchemaLinkedServicePtrOutputWithContext(context.Background())
}

func (i *flowletDataFlowSourceSchemaLinkedServicePtrType) ToFlowletDataFlowSourceSchemaLinkedServicePtrOutputWithContext(ctx context.Context) FlowletDataFlowSourceSchemaLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowSourceSchemaLinkedServicePtrOutput)
}

type FlowletDataFlowSourceSchemaLinkedServiceOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowSourceSchemaLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowSourceSchemaLinkedService)(nil)).Elem()
}

func (o FlowletDataFlowSourceSchemaLinkedServiceOutput) ToFlowletDataFlowSourceSchemaLinkedServiceOutput() FlowletDataFlowSourceSchemaLinkedServiceOutput {
	return o
}

func (o FlowletDataFlowSourceSchemaLinkedServiceOutput) ToFlowletDataFlowSourceSchemaLinkedServiceOutputWithContext(ctx context.Context) FlowletDataFlowSourceSchemaLinkedServiceOutput {
	return o
}

func (o FlowletDataFlowSourceSchemaLinkedServiceOutput) ToFlowletDataFlowSourceSchemaLinkedServicePtrOutput() FlowletDataFlowSourceSchemaLinkedServicePtrOutput {
	return o.ToFlowletDataFlowSourceSchemaLinkedServicePtrOutputWithContext(context.Background())
}

func (o FlowletDataFlowSourceSchemaLinkedServiceOutput) ToFlowletDataFlowSourceSchemaLinkedServicePtrOutputWithContext(ctx context.Context) FlowletDataFlowSourceSchemaLinkedServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowletDataFlowSourceSchemaLinkedService) *FlowletDataFlowSourceSchemaLinkedService {
		return &v
	}).(FlowletDataFlowSourceSchemaLinkedServicePtrOutput)
}

// The name for the Data Factory Linked Service with schema.
func (o FlowletDataFlowSourceSchemaLinkedServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowletDataFlowSourceSchemaLinkedService) string { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o FlowletDataFlowSourceSchemaLinkedServiceOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v FlowletDataFlowSourceSchemaLinkedService) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type FlowletDataFlowSourceSchemaLinkedServicePtrOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowSourceSchemaLinkedServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowletDataFlowSourceSchemaLinkedService)(nil)).Elem()
}

func (o FlowletDataFlowSourceSchemaLinkedServicePtrOutput) ToFlowletDataFlowSourceSchemaLinkedServicePtrOutput() FlowletDataFlowSourceSchemaLinkedServicePtrOutput {
	return o
}

func (o FlowletDataFlowSourceSchemaLinkedServicePtrOutput) ToFlowletDataFlowSourceSchemaLinkedServicePtrOutputWithContext(ctx context.Context) FlowletDataFlowSourceSchemaLinkedServicePtrOutput {
	return o
}

func (o FlowletDataFlowSourceSchemaLinkedServicePtrOutput) Elem() FlowletDataFlowSourceSchemaLinkedServiceOutput {
	return o.ApplyT(func(v *FlowletDataFlowSourceSchemaLinkedService) FlowletDataFlowSourceSchemaLinkedService {
		if v != nil {
			return *v
		}
		var ret FlowletDataFlowSourceSchemaLinkedService
		return ret
	}).(FlowletDataFlowSourceSchemaLinkedServiceOutput)
}

// The name for the Data Factory Linked Service with schema.
func (o FlowletDataFlowSourceSchemaLinkedServicePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowletDataFlowSourceSchemaLinkedService) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o FlowletDataFlowSourceSchemaLinkedServicePtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FlowletDataFlowSourceSchemaLinkedService) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type FlowletDataFlowTransformation struct {
	// A `dataset` block as defined below.
	Dataset *FlowletDataFlowTransformationDataset `pulumi:"dataset"`
	// The description for the Data Flow transformation.
	Description *string `pulumi:"description"`
	// A `flowlet` block as defined below.
	Flowlet *FlowletDataFlowTransformationFlowlet `pulumi:"flowlet"`
	// A `linkedService` block as defined below.
	LinkedService *FlowletDataFlowTransformationLinkedService `pulumi:"linkedService"`
	// The name for the Data Flow transformation.
	Name string `pulumi:"name"`
}

// FlowletDataFlowTransformationInput is an input type that accepts FlowletDataFlowTransformationArgs and FlowletDataFlowTransformationOutput values.
// You can construct a concrete instance of `FlowletDataFlowTransformationInput` via:
//
//	FlowletDataFlowTransformationArgs{...}
type FlowletDataFlowTransformationInput interface {
	pulumi.Input

	ToFlowletDataFlowTransformationOutput() FlowletDataFlowTransformationOutput
	ToFlowletDataFlowTransformationOutputWithContext(context.Context) FlowletDataFlowTransformationOutput
}

type FlowletDataFlowTransformationArgs struct {
	// A `dataset` block as defined below.
	Dataset FlowletDataFlowTransformationDatasetPtrInput `pulumi:"dataset"`
	// The description for the Data Flow transformation.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A `flowlet` block as defined below.
	Flowlet FlowletDataFlowTransformationFlowletPtrInput `pulumi:"flowlet"`
	// A `linkedService` block as defined below.
	LinkedService FlowletDataFlowTransformationLinkedServicePtrInput `pulumi:"linkedService"`
	// The name for the Data Flow transformation.
	Name pulumi.StringInput `pulumi:"name"`
}

func (FlowletDataFlowTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowTransformation)(nil)).Elem()
}

func (i FlowletDataFlowTransformationArgs) ToFlowletDataFlowTransformationOutput() FlowletDataFlowTransformationOutput {
	return i.ToFlowletDataFlowTransformationOutputWithContext(context.Background())
}

func (i FlowletDataFlowTransformationArgs) ToFlowletDataFlowTransformationOutputWithContext(ctx context.Context) FlowletDataFlowTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowTransformationOutput)
}

// FlowletDataFlowTransformationArrayInput is an input type that accepts FlowletDataFlowTransformationArray and FlowletDataFlowTransformationArrayOutput values.
// You can construct a concrete instance of `FlowletDataFlowTransformationArrayInput` via:
//
//	FlowletDataFlowTransformationArray{ FlowletDataFlowTransformationArgs{...} }
type FlowletDataFlowTransformationArrayInput interface {
	pulumi.Input

	ToFlowletDataFlowTransformationArrayOutput() FlowletDataFlowTransformationArrayOutput
	ToFlowletDataFlowTransformationArrayOutputWithContext(context.Context) FlowletDataFlowTransformationArrayOutput
}

type FlowletDataFlowTransformationArray []FlowletDataFlowTransformationInput

func (FlowletDataFlowTransformationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowletDataFlowTransformation)(nil)).Elem()
}

func (i FlowletDataFlowTransformationArray) ToFlowletDataFlowTransformationArrayOutput() FlowletDataFlowTransformationArrayOutput {
	return i.ToFlowletDataFlowTransformationArrayOutputWithContext(context.Background())
}

func (i FlowletDataFlowTransformationArray) ToFlowletDataFlowTransformationArrayOutputWithContext(ctx context.Context) FlowletDataFlowTransformationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowTransformationArrayOutput)
}

type FlowletDataFlowTransformationOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowTransformation)(nil)).Elem()
}

func (o FlowletDataFlowTransformationOutput) ToFlowletDataFlowTransformationOutput() FlowletDataFlowTransformationOutput {
	return o
}

func (o FlowletDataFlowTransformationOutput) ToFlowletDataFlowTransformationOutputWithContext(ctx context.Context) FlowletDataFlowTransformationOutput {
	return o
}

// A `dataset` block as defined below.
func (o FlowletDataFlowTransformationOutput) Dataset() FlowletDataFlowTransformationDatasetPtrOutput {
	return o.ApplyT(func(v FlowletDataFlowTransformation) *FlowletDataFlowTransformationDataset { return v.Dataset }).(FlowletDataFlowTransformationDatasetPtrOutput)
}

// The description for the Data Flow transformation.
func (o FlowletDataFlowTransformationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowletDataFlowTransformation) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A `flowlet` block as defined below.
func (o FlowletDataFlowTransformationOutput) Flowlet() FlowletDataFlowTransformationFlowletPtrOutput {
	return o.ApplyT(func(v FlowletDataFlowTransformation) *FlowletDataFlowTransformationFlowlet { return v.Flowlet }).(FlowletDataFlowTransformationFlowletPtrOutput)
}

// A `linkedService` block as defined below.
func (o FlowletDataFlowTransformationOutput) LinkedService() FlowletDataFlowTransformationLinkedServicePtrOutput {
	return o.ApplyT(func(v FlowletDataFlowTransformation) *FlowletDataFlowTransformationLinkedService {
		return v.LinkedService
	}).(FlowletDataFlowTransformationLinkedServicePtrOutput)
}

// The name for the Data Flow transformation.
func (o FlowletDataFlowTransformationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowletDataFlowTransformation) string { return v.Name }).(pulumi.StringOutput)
}

type FlowletDataFlowTransformationArrayOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowTransformationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowletDataFlowTransformation)(nil)).Elem()
}

func (o FlowletDataFlowTransformationArrayOutput) ToFlowletDataFlowTransformationArrayOutput() FlowletDataFlowTransformationArrayOutput {
	return o
}

func (o FlowletDataFlowTransformationArrayOutput) ToFlowletDataFlowTransformationArrayOutputWithContext(ctx context.Context) FlowletDataFlowTransformationArrayOutput {
	return o
}

func (o FlowletDataFlowTransformationArrayOutput) Index(i pulumi.IntInput) FlowletDataFlowTransformationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowletDataFlowTransformation {
		return vs[0].([]FlowletDataFlowTransformation)[vs[1].(int)]
	}).(FlowletDataFlowTransformationOutput)
}

type FlowletDataFlowTransformationDataset struct {
	// The name for the Data Factory Dataset.
	Name string `pulumi:"name"`
	// A map of parameters to associate with the Data Factory dataset.
	Parameters map[string]string `pulumi:"parameters"`
}

// FlowletDataFlowTransformationDatasetInput is an input type that accepts FlowletDataFlowTransformationDatasetArgs and FlowletDataFlowTransformationDatasetOutput values.
// You can construct a concrete instance of `FlowletDataFlowTransformationDatasetInput` via:
//
//	FlowletDataFlowTransformationDatasetArgs{...}
type FlowletDataFlowTransformationDatasetInput interface {
	pulumi.Input

	ToFlowletDataFlowTransformationDatasetOutput() FlowletDataFlowTransformationDatasetOutput
	ToFlowletDataFlowTransformationDatasetOutputWithContext(context.Context) FlowletDataFlowTransformationDatasetOutput
}

type FlowletDataFlowTransformationDatasetArgs struct {
	// The name for the Data Factory Dataset.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory dataset.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (FlowletDataFlowTransformationDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowTransformationDataset)(nil)).Elem()
}

func (i FlowletDataFlowTransformationDatasetArgs) ToFlowletDataFlowTransformationDatasetOutput() FlowletDataFlowTransformationDatasetOutput {
	return i.ToFlowletDataFlowTransformationDatasetOutputWithContext(context.Background())
}

func (i FlowletDataFlowTransformationDatasetArgs) ToFlowletDataFlowTransformationDatasetOutputWithContext(ctx context.Context) FlowletDataFlowTransformationDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowTransformationDatasetOutput)
}

func (i FlowletDataFlowTransformationDatasetArgs) ToFlowletDataFlowTransformationDatasetPtrOutput() FlowletDataFlowTransformationDatasetPtrOutput {
	return i.ToFlowletDataFlowTransformationDatasetPtrOutputWithContext(context.Background())
}

func (i FlowletDataFlowTransformationDatasetArgs) ToFlowletDataFlowTransformationDatasetPtrOutputWithContext(ctx context.Context) FlowletDataFlowTransformationDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowTransformationDatasetOutput).ToFlowletDataFlowTransformationDatasetPtrOutputWithContext(ctx)
}

// FlowletDataFlowTransformationDatasetPtrInput is an input type that accepts FlowletDataFlowTransformationDatasetArgs, FlowletDataFlowTransformationDatasetPtr and FlowletDataFlowTransformationDatasetPtrOutput values.
// You can construct a concrete instance of `FlowletDataFlowTransformationDatasetPtrInput` via:
//
//	        FlowletDataFlowTransformationDatasetArgs{...}
//
//	or:
//
//	        nil
type FlowletDataFlowTransformationDatasetPtrInput interface {
	pulumi.Input

	ToFlowletDataFlowTransformationDatasetPtrOutput() FlowletDataFlowTransformationDatasetPtrOutput
	ToFlowletDataFlowTransformationDatasetPtrOutputWithContext(context.Context) FlowletDataFlowTransformationDatasetPtrOutput
}

type flowletDataFlowTransformationDatasetPtrType FlowletDataFlowTransformationDatasetArgs

func FlowletDataFlowTransformationDatasetPtr(v *FlowletDataFlowTransformationDatasetArgs) FlowletDataFlowTransformationDatasetPtrInput {
	return (*flowletDataFlowTransformationDatasetPtrType)(v)
}

func (*flowletDataFlowTransformationDatasetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowletDataFlowTransformationDataset)(nil)).Elem()
}

func (i *flowletDataFlowTransformationDatasetPtrType) ToFlowletDataFlowTransformationDatasetPtrOutput() FlowletDataFlowTransformationDatasetPtrOutput {
	return i.ToFlowletDataFlowTransformationDatasetPtrOutputWithContext(context.Background())
}

func (i *flowletDataFlowTransformationDatasetPtrType) ToFlowletDataFlowTransformationDatasetPtrOutputWithContext(ctx context.Context) FlowletDataFlowTransformationDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowTransformationDatasetPtrOutput)
}

type FlowletDataFlowTransformationDatasetOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowTransformationDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowTransformationDataset)(nil)).Elem()
}

func (o FlowletDataFlowTransformationDatasetOutput) ToFlowletDataFlowTransformationDatasetOutput() FlowletDataFlowTransformationDatasetOutput {
	return o
}

func (o FlowletDataFlowTransformationDatasetOutput) ToFlowletDataFlowTransformationDatasetOutputWithContext(ctx context.Context) FlowletDataFlowTransformationDatasetOutput {
	return o
}

func (o FlowletDataFlowTransformationDatasetOutput) ToFlowletDataFlowTransformationDatasetPtrOutput() FlowletDataFlowTransformationDatasetPtrOutput {
	return o.ToFlowletDataFlowTransformationDatasetPtrOutputWithContext(context.Background())
}

func (o FlowletDataFlowTransformationDatasetOutput) ToFlowletDataFlowTransformationDatasetPtrOutputWithContext(ctx context.Context) FlowletDataFlowTransformationDatasetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowletDataFlowTransformationDataset) *FlowletDataFlowTransformationDataset {
		return &v
	}).(FlowletDataFlowTransformationDatasetPtrOutput)
}

// The name for the Data Factory Dataset.
func (o FlowletDataFlowTransformationDatasetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowletDataFlowTransformationDataset) string { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the Data Factory dataset.
func (o FlowletDataFlowTransformationDatasetOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v FlowletDataFlowTransformationDataset) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type FlowletDataFlowTransformationDatasetPtrOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowTransformationDatasetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowletDataFlowTransformationDataset)(nil)).Elem()
}

func (o FlowletDataFlowTransformationDatasetPtrOutput) ToFlowletDataFlowTransformationDatasetPtrOutput() FlowletDataFlowTransformationDatasetPtrOutput {
	return o
}

func (o FlowletDataFlowTransformationDatasetPtrOutput) ToFlowletDataFlowTransformationDatasetPtrOutputWithContext(ctx context.Context) FlowletDataFlowTransformationDatasetPtrOutput {
	return o
}

func (o FlowletDataFlowTransformationDatasetPtrOutput) Elem() FlowletDataFlowTransformationDatasetOutput {
	return o.ApplyT(func(v *FlowletDataFlowTransformationDataset) FlowletDataFlowTransformationDataset {
		if v != nil {
			return *v
		}
		var ret FlowletDataFlowTransformationDataset
		return ret
	}).(FlowletDataFlowTransformationDatasetOutput)
}

// The name for the Data Factory Dataset.
func (o FlowletDataFlowTransformationDatasetPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowletDataFlowTransformationDataset) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the Data Factory dataset.
func (o FlowletDataFlowTransformationDatasetPtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FlowletDataFlowTransformationDataset) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type FlowletDataFlowTransformationFlowlet struct {
	// Specifies the reference data flow parameters from dataset.
	DatasetParameters *string `pulumi:"datasetParameters"`
	// The name for the Data Factory Flowlet.
	Name string `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Flowlet.
	Parameters map[string]string `pulumi:"parameters"`
}

// FlowletDataFlowTransformationFlowletInput is an input type that accepts FlowletDataFlowTransformationFlowletArgs and FlowletDataFlowTransformationFlowletOutput values.
// You can construct a concrete instance of `FlowletDataFlowTransformationFlowletInput` via:
//
//	FlowletDataFlowTransformationFlowletArgs{...}
type FlowletDataFlowTransformationFlowletInput interface {
	pulumi.Input

	ToFlowletDataFlowTransformationFlowletOutput() FlowletDataFlowTransformationFlowletOutput
	ToFlowletDataFlowTransformationFlowletOutputWithContext(context.Context) FlowletDataFlowTransformationFlowletOutput
}

type FlowletDataFlowTransformationFlowletArgs struct {
	// Specifies the reference data flow parameters from dataset.
	DatasetParameters pulumi.StringPtrInput `pulumi:"datasetParameters"`
	// The name for the Data Factory Flowlet.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Flowlet.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (FlowletDataFlowTransformationFlowletArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowTransformationFlowlet)(nil)).Elem()
}

func (i FlowletDataFlowTransformationFlowletArgs) ToFlowletDataFlowTransformationFlowletOutput() FlowletDataFlowTransformationFlowletOutput {
	return i.ToFlowletDataFlowTransformationFlowletOutputWithContext(context.Background())
}

func (i FlowletDataFlowTransformationFlowletArgs) ToFlowletDataFlowTransformationFlowletOutputWithContext(ctx context.Context) FlowletDataFlowTransformationFlowletOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowTransformationFlowletOutput)
}

func (i FlowletDataFlowTransformationFlowletArgs) ToFlowletDataFlowTransformationFlowletPtrOutput() FlowletDataFlowTransformationFlowletPtrOutput {
	return i.ToFlowletDataFlowTransformationFlowletPtrOutputWithContext(context.Background())
}

func (i FlowletDataFlowTransformationFlowletArgs) ToFlowletDataFlowTransformationFlowletPtrOutputWithContext(ctx context.Context) FlowletDataFlowTransformationFlowletPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowTransformationFlowletOutput).ToFlowletDataFlowTransformationFlowletPtrOutputWithContext(ctx)
}

// FlowletDataFlowTransformationFlowletPtrInput is an input type that accepts FlowletDataFlowTransformationFlowletArgs, FlowletDataFlowTransformationFlowletPtr and FlowletDataFlowTransformationFlowletPtrOutput values.
// You can construct a concrete instance of `FlowletDataFlowTransformationFlowletPtrInput` via:
//
//	        FlowletDataFlowTransformationFlowletArgs{...}
//
//	or:
//
//	        nil
type FlowletDataFlowTransformationFlowletPtrInput interface {
	pulumi.Input

	ToFlowletDataFlowTransformationFlowletPtrOutput() FlowletDataFlowTransformationFlowletPtrOutput
	ToFlowletDataFlowTransformationFlowletPtrOutputWithContext(context.Context) FlowletDataFlowTransformationFlowletPtrOutput
}

type flowletDataFlowTransformationFlowletPtrType FlowletDataFlowTransformationFlowletArgs

func FlowletDataFlowTransformationFlowletPtr(v *FlowletDataFlowTransformationFlowletArgs) FlowletDataFlowTransformationFlowletPtrInput {
	return (*flowletDataFlowTransformationFlowletPtrType)(v)
}

func (*flowletDataFlowTransformationFlowletPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowletDataFlowTransformationFlowlet)(nil)).Elem()
}

func (i *flowletDataFlowTransformationFlowletPtrType) ToFlowletDataFlowTransformationFlowletPtrOutput() FlowletDataFlowTransformationFlowletPtrOutput {
	return i.ToFlowletDataFlowTransformationFlowletPtrOutputWithContext(context.Background())
}

func (i *flowletDataFlowTransformationFlowletPtrType) ToFlowletDataFlowTransformationFlowletPtrOutputWithContext(ctx context.Context) FlowletDataFlowTransformationFlowletPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowTransformationFlowletPtrOutput)
}

type FlowletDataFlowTransformationFlowletOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowTransformationFlowletOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowTransformationFlowlet)(nil)).Elem()
}

func (o FlowletDataFlowTransformationFlowletOutput) ToFlowletDataFlowTransformationFlowletOutput() FlowletDataFlowTransformationFlowletOutput {
	return o
}

func (o FlowletDataFlowTransformationFlowletOutput) ToFlowletDataFlowTransformationFlowletOutputWithContext(ctx context.Context) FlowletDataFlowTransformationFlowletOutput {
	return o
}

func (o FlowletDataFlowTransformationFlowletOutput) ToFlowletDataFlowTransformationFlowletPtrOutput() FlowletDataFlowTransformationFlowletPtrOutput {
	return o.ToFlowletDataFlowTransformationFlowletPtrOutputWithContext(context.Background())
}

func (o FlowletDataFlowTransformationFlowletOutput) ToFlowletDataFlowTransformationFlowletPtrOutputWithContext(ctx context.Context) FlowletDataFlowTransformationFlowletPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowletDataFlowTransformationFlowlet) *FlowletDataFlowTransformationFlowlet {
		return &v
	}).(FlowletDataFlowTransformationFlowletPtrOutput)
}

// Specifies the reference data flow parameters from dataset.
func (o FlowletDataFlowTransformationFlowletOutput) DatasetParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowletDataFlowTransformationFlowlet) *string { return v.DatasetParameters }).(pulumi.StringPtrOutput)
}

// The name for the Data Factory Flowlet.
func (o FlowletDataFlowTransformationFlowletOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowletDataFlowTransformationFlowlet) string { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the Data Factory Flowlet.
func (o FlowletDataFlowTransformationFlowletOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v FlowletDataFlowTransformationFlowlet) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type FlowletDataFlowTransformationFlowletPtrOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowTransformationFlowletPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowletDataFlowTransformationFlowlet)(nil)).Elem()
}

func (o FlowletDataFlowTransformationFlowletPtrOutput) ToFlowletDataFlowTransformationFlowletPtrOutput() FlowletDataFlowTransformationFlowletPtrOutput {
	return o
}

func (o FlowletDataFlowTransformationFlowletPtrOutput) ToFlowletDataFlowTransformationFlowletPtrOutputWithContext(ctx context.Context) FlowletDataFlowTransformationFlowletPtrOutput {
	return o
}

func (o FlowletDataFlowTransformationFlowletPtrOutput) Elem() FlowletDataFlowTransformationFlowletOutput {
	return o.ApplyT(func(v *FlowletDataFlowTransformationFlowlet) FlowletDataFlowTransformationFlowlet {
		if v != nil {
			return *v
		}
		var ret FlowletDataFlowTransformationFlowlet
		return ret
	}).(FlowletDataFlowTransformationFlowletOutput)
}

// Specifies the reference data flow parameters from dataset.
func (o FlowletDataFlowTransformationFlowletPtrOutput) DatasetParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowletDataFlowTransformationFlowlet) *string {
		if v == nil {
			return nil
		}
		return v.DatasetParameters
	}).(pulumi.StringPtrOutput)
}

// The name for the Data Factory Flowlet.
func (o FlowletDataFlowTransformationFlowletPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowletDataFlowTransformationFlowlet) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the Data Factory Flowlet.
func (o FlowletDataFlowTransformationFlowletPtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FlowletDataFlowTransformationFlowlet) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type FlowletDataFlowTransformationLinkedService struct {
	// The name for the Data Factory Linked Service.
	Name string `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters map[string]string `pulumi:"parameters"`
}

// FlowletDataFlowTransformationLinkedServiceInput is an input type that accepts FlowletDataFlowTransformationLinkedServiceArgs and FlowletDataFlowTransformationLinkedServiceOutput values.
// You can construct a concrete instance of `FlowletDataFlowTransformationLinkedServiceInput` via:
//
//	FlowletDataFlowTransformationLinkedServiceArgs{...}
type FlowletDataFlowTransformationLinkedServiceInput interface {
	pulumi.Input

	ToFlowletDataFlowTransformationLinkedServiceOutput() FlowletDataFlowTransformationLinkedServiceOutput
	ToFlowletDataFlowTransformationLinkedServiceOutputWithContext(context.Context) FlowletDataFlowTransformationLinkedServiceOutput
}

type FlowletDataFlowTransformationLinkedServiceArgs struct {
	// The name for the Data Factory Linked Service.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (FlowletDataFlowTransformationLinkedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowTransformationLinkedService)(nil)).Elem()
}

func (i FlowletDataFlowTransformationLinkedServiceArgs) ToFlowletDataFlowTransformationLinkedServiceOutput() FlowletDataFlowTransformationLinkedServiceOutput {
	return i.ToFlowletDataFlowTransformationLinkedServiceOutputWithContext(context.Background())
}

func (i FlowletDataFlowTransformationLinkedServiceArgs) ToFlowletDataFlowTransformationLinkedServiceOutputWithContext(ctx context.Context) FlowletDataFlowTransformationLinkedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowTransformationLinkedServiceOutput)
}

func (i FlowletDataFlowTransformationLinkedServiceArgs) ToFlowletDataFlowTransformationLinkedServicePtrOutput() FlowletDataFlowTransformationLinkedServicePtrOutput {
	return i.ToFlowletDataFlowTransformationLinkedServicePtrOutputWithContext(context.Background())
}

func (i FlowletDataFlowTransformationLinkedServiceArgs) ToFlowletDataFlowTransformationLinkedServicePtrOutputWithContext(ctx context.Context) FlowletDataFlowTransformationLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowTransformationLinkedServiceOutput).ToFlowletDataFlowTransformationLinkedServicePtrOutputWithContext(ctx)
}

// FlowletDataFlowTransformationLinkedServicePtrInput is an input type that accepts FlowletDataFlowTransformationLinkedServiceArgs, FlowletDataFlowTransformationLinkedServicePtr and FlowletDataFlowTransformationLinkedServicePtrOutput values.
// You can construct a concrete instance of `FlowletDataFlowTransformationLinkedServicePtrInput` via:
//
//	        FlowletDataFlowTransformationLinkedServiceArgs{...}
//
//	or:
//
//	        nil
type FlowletDataFlowTransformationLinkedServicePtrInput interface {
	pulumi.Input

	ToFlowletDataFlowTransformationLinkedServicePtrOutput() FlowletDataFlowTransformationLinkedServicePtrOutput
	ToFlowletDataFlowTransformationLinkedServicePtrOutputWithContext(context.Context) FlowletDataFlowTransformationLinkedServicePtrOutput
}

type flowletDataFlowTransformationLinkedServicePtrType FlowletDataFlowTransformationLinkedServiceArgs

func FlowletDataFlowTransformationLinkedServicePtr(v *FlowletDataFlowTransformationLinkedServiceArgs) FlowletDataFlowTransformationLinkedServicePtrInput {
	return (*flowletDataFlowTransformationLinkedServicePtrType)(v)
}

func (*flowletDataFlowTransformationLinkedServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowletDataFlowTransformationLinkedService)(nil)).Elem()
}

func (i *flowletDataFlowTransformationLinkedServicePtrType) ToFlowletDataFlowTransformationLinkedServicePtrOutput() FlowletDataFlowTransformationLinkedServicePtrOutput {
	return i.ToFlowletDataFlowTransformationLinkedServicePtrOutputWithContext(context.Background())
}

func (i *flowletDataFlowTransformationLinkedServicePtrType) ToFlowletDataFlowTransformationLinkedServicePtrOutputWithContext(ctx context.Context) FlowletDataFlowTransformationLinkedServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowletDataFlowTransformationLinkedServicePtrOutput)
}

type FlowletDataFlowTransformationLinkedServiceOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowTransformationLinkedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowletDataFlowTransformationLinkedService)(nil)).Elem()
}

func (o FlowletDataFlowTransformationLinkedServiceOutput) ToFlowletDataFlowTransformationLinkedServiceOutput() FlowletDataFlowTransformationLinkedServiceOutput {
	return o
}

func (o FlowletDataFlowTransformationLinkedServiceOutput) ToFlowletDataFlowTransformationLinkedServiceOutputWithContext(ctx context.Context) FlowletDataFlowTransformationLinkedServiceOutput {
	return o
}

func (o FlowletDataFlowTransformationLinkedServiceOutput) ToFlowletDataFlowTransformationLinkedServicePtrOutput() FlowletDataFlowTransformationLinkedServicePtrOutput {
	return o.ToFlowletDataFlowTransformationLinkedServicePtrOutputWithContext(context.Background())
}

func (o FlowletDataFlowTransformationLinkedServiceOutput) ToFlowletDataFlowTransformationLinkedServicePtrOutputWithContext(ctx context.Context) FlowletDataFlowTransformationLinkedServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowletDataFlowTransformationLinkedService) *FlowletDataFlowTransformationLinkedService {
		return &v
	}).(FlowletDataFlowTransformationLinkedServicePtrOutput)
}

// The name for the Data Factory Linked Service.
func (o FlowletDataFlowTransformationLinkedServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowletDataFlowTransformationLinkedService) string { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o FlowletDataFlowTransformationLinkedServiceOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v FlowletDataFlowTransformationLinkedService) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type FlowletDataFlowTransformationLinkedServicePtrOutput struct{ *pulumi.OutputState }

func (FlowletDataFlowTransformationLinkedServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowletDataFlowTransformationLinkedService)(nil)).Elem()
}

func (o FlowletDataFlowTransformationLinkedServicePtrOutput) ToFlowletDataFlowTransformationLinkedServicePtrOutput() FlowletDataFlowTransformationLinkedServicePtrOutput {
	return o
}

func (o FlowletDataFlowTransformationLinkedServicePtrOutput) ToFlowletDataFlowTransformationLinkedServicePtrOutputWithContext(ctx context.Context) FlowletDataFlowTransformationLinkedServicePtrOutput {
	return o
}

func (o FlowletDataFlowTransformationLinkedServicePtrOutput) Elem() FlowletDataFlowTransformationLinkedServiceOutput {
	return o.ApplyT(func(v *FlowletDataFlowTransformationLinkedService) FlowletDataFlowTransformationLinkedService {
		if v != nil {
			return *v
		}
		var ret FlowletDataFlowTransformationLinkedService
		return ret
	}).(FlowletDataFlowTransformationLinkedServiceOutput)
}

// The name for the Data Factory Linked Service.
func (o FlowletDataFlowTransformationLinkedServicePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowletDataFlowTransformationLinkedService) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the Data Factory Linked Service.
func (o FlowletDataFlowTransformationLinkedServicePtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FlowletDataFlowTransformationLinkedService) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type IntegrationRuntimeManagedCatalogInfo struct {
	// Administrator login name for the SQL Server.
	AdministratorLogin *string `pulumi:"administratorLogin"`
	// Administrator login password for the SQL Server.
	AdministratorPassword *string `pulumi:"administratorPassword"`
	// Pricing tier for the database that will be created for the SSIS catalog. Valid values are: `Basic`, `Standard`, `Premium` and `PremiumRS`. Defaults to `Basic`.
	PricingTier *string `pulumi:"pricingTier"`
	// The endpoint of an Azure SQL Server that will be used to host the SSIS catalog.
	ServerEndpoint string `pulumi:"serverEndpoint"`
}

// IntegrationRuntimeManagedCatalogInfoInput is an input type that accepts IntegrationRuntimeManagedCatalogInfoArgs and IntegrationRuntimeManagedCatalogInfoOutput values.
// You can construct a concrete instance of `IntegrationRuntimeManagedCatalogInfoInput` via:
//
//	IntegrationRuntimeManagedCatalogInfoArgs{...}
type IntegrationRuntimeManagedCatalogInfoInput interface {
	pulumi.Input

	ToIntegrationRuntimeManagedCatalogInfoOutput() IntegrationRuntimeManagedCatalogInfoOutput
	ToIntegrationRuntimeManagedCatalogInfoOutputWithContext(context.Context) IntegrationRuntimeManagedCatalogInfoOutput
}

type IntegrationRuntimeManagedCatalogInfoArgs struct {
	// Administrator login name for the SQL Server.
	AdministratorLogin pulumi.StringPtrInput `pulumi:"administratorLogin"`
	// Administrator login password for the SQL Server.
	AdministratorPassword pulumi.StringPtrInput `pulumi:"administratorPassword"`
	// Pricing tier for the database that will be created for the SSIS catalog. Valid values are: `Basic`, `Standard`, `Premium` and `PremiumRS`. Defaults to `Basic`.
	PricingTier pulumi.StringPtrInput `pulumi:"pricingTier"`
	// The endpoint of an Azure SQL Server that will be used to host the SSIS catalog.
	ServerEndpoint pulumi.StringInput `pulumi:"serverEndpoint"`
}

func (IntegrationRuntimeManagedCatalogInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeManagedCatalogInfo)(nil)).Elem()
}

func (i IntegrationRuntimeManagedCatalogInfoArgs) ToIntegrationRuntimeManagedCatalogInfoOutput() IntegrationRuntimeManagedCatalogInfoOutput {
	return i.ToIntegrationRuntimeManagedCatalogInfoOutputWithContext(context.Background())
}

func (i IntegrationRuntimeManagedCatalogInfoArgs) ToIntegrationRuntimeManagedCatalogInfoOutputWithContext(ctx context.Context) IntegrationRuntimeManagedCatalogInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeManagedCatalogInfoOutput)
}

func (i IntegrationRuntimeManagedCatalogInfoArgs) ToIntegrationRuntimeManagedCatalogInfoPtrOutput() IntegrationRuntimeManagedCatalogInfoPtrOutput {
	return i.ToIntegrationRuntimeManagedCatalogInfoPtrOutputWithContext(context.Background())
}

func (i IntegrationRuntimeManagedCatalogInfoArgs) ToIntegrationRuntimeManagedCatalogInfoPtrOutputWithContext(ctx context.Context) IntegrationRuntimeManagedCatalogInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeManagedCatalogInfoOutput).ToIntegrationRuntimeManagedCatalogInfoPtrOutputWithContext(ctx)
}

// IntegrationRuntimeManagedCatalogInfoPtrInput is an input type that accepts IntegrationRuntimeManagedCatalogInfoArgs, IntegrationRuntimeManagedCatalogInfoPtr and IntegrationRuntimeManagedCatalogInfoPtrOutput values.
// You can construct a concrete instance of `IntegrationRuntimeManagedCatalogInfoPtrInput` via:
//
//	        IntegrationRuntimeManagedCatalogInfoArgs{...}
//
//	or:
//
//	        nil
type IntegrationRuntimeManagedCatalogInfoPtrInput interface {
	pulumi.Input

	ToIntegrationRuntimeManagedCatalogInfoPtrOutput() IntegrationRuntimeManagedCatalogInfoPtrOutput
	ToIntegrationRuntimeManagedCatalogInfoPtrOutputWithContext(context.Context) IntegrationRuntimeManagedCatalogInfoPtrOutput
}

type integrationRuntimeManagedCatalogInfoPtrType IntegrationRuntimeManagedCatalogInfoArgs

func IntegrationRuntimeManagedCatalogInfoPtr(v *IntegrationRuntimeManagedCatalogInfoArgs) IntegrationRuntimeManagedCatalogInfoPtrInput {
	return (*integrationRuntimeManagedCatalogInfoPtrType)(v)
}

func (*integrationRuntimeManagedCatalogInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeManagedCatalogInfo)(nil)).Elem()
}

func (i *integrationRuntimeManagedCatalogInfoPtrType) ToIntegrationRuntimeManagedCatalogInfoPtrOutput() IntegrationRuntimeManagedCatalogInfoPtrOutput {
	return i.ToIntegrationRuntimeManagedCatalogInfoPtrOutputWithContext(context.Background())
}

func (i *integrationRuntimeManagedCatalogInfoPtrType) ToIntegrationRuntimeManagedCatalogInfoPtrOutputWithContext(ctx context.Context) IntegrationRuntimeManagedCatalogInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeManagedCatalogInfoPtrOutput)
}

type IntegrationRuntimeManagedCatalogInfoOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeManagedCatalogInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeManagedCatalogInfo)(nil)).Elem()
}

func (o IntegrationRuntimeManagedCatalogInfoOutput) ToIntegrationRuntimeManagedCatalogInfoOutput() IntegrationRuntimeManagedCatalogInfoOutput {
	return o
}

func (o IntegrationRuntimeManagedCatalogInfoOutput) ToIntegrationRuntimeManagedCatalogInfoOutputWithContext(ctx context.Context) IntegrationRuntimeManagedCatalogInfoOutput {
	return o
}

func (o IntegrationRuntimeManagedCatalogInfoOutput) ToIntegrationRuntimeManagedCatalogInfoPtrOutput() IntegrationRuntimeManagedCatalogInfoPtrOutput {
	return o.ToIntegrationRuntimeManagedCatalogInfoPtrOutputWithContext(context.Background())
}

func (o IntegrationRuntimeManagedCatalogInfoOutput) ToIntegrationRuntimeManagedCatalogInfoPtrOutputWithContext(ctx context.Context) IntegrationRuntimeManagedCatalogInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationRuntimeManagedCatalogInfo) *IntegrationRuntimeManagedCatalogInfo {
		return &v
	}).(IntegrationRuntimeManagedCatalogInfoPtrOutput)
}

// Administrator login name for the SQL Server.
func (o IntegrationRuntimeManagedCatalogInfoOutput) AdministratorLogin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeManagedCatalogInfo) *string { return v.AdministratorLogin }).(pulumi.StringPtrOutput)
}

// Administrator login password for the SQL Server.
func (o IntegrationRuntimeManagedCatalogInfoOutput) AdministratorPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeManagedCatalogInfo) *string { return v.AdministratorPassword }).(pulumi.StringPtrOutput)
}

// Pricing tier for the database that will be created for the SSIS catalog. Valid values are: `Basic`, `Standard`, `Premium` and `PremiumRS`. Defaults to `Basic`.
func (o IntegrationRuntimeManagedCatalogInfoOutput) PricingTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeManagedCatalogInfo) *string { return v.PricingTier }).(pulumi.StringPtrOutput)
}

// The endpoint of an Azure SQL Server that will be used to host the SSIS catalog.
func (o IntegrationRuntimeManagedCatalogInfoOutput) ServerEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRuntimeManagedCatalogInfo) string { return v.ServerEndpoint }).(pulumi.StringOutput)
}

type IntegrationRuntimeManagedCatalogInfoPtrOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeManagedCatalogInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeManagedCatalogInfo)(nil)).Elem()
}

func (o IntegrationRuntimeManagedCatalogInfoPtrOutput) ToIntegrationRuntimeManagedCatalogInfoPtrOutput() IntegrationRuntimeManagedCatalogInfoPtrOutput {
	return o
}

func (o IntegrationRuntimeManagedCatalogInfoPtrOutput) ToIntegrationRuntimeManagedCatalogInfoPtrOutputWithContext(ctx context.Context) IntegrationRuntimeManagedCatalogInfoPtrOutput {
	return o
}

func (o IntegrationRuntimeManagedCatalogInfoPtrOutput) Elem() IntegrationRuntimeManagedCatalogInfoOutput {
	return o.ApplyT(func(v *IntegrationRuntimeManagedCatalogInfo) IntegrationRuntimeManagedCatalogInfo {
		if v != nil {
			return *v
		}
		var ret IntegrationRuntimeManagedCatalogInfo
		return ret
	}).(IntegrationRuntimeManagedCatalogInfoOutput)
}

// Administrator login name for the SQL Server.
func (o IntegrationRuntimeManagedCatalogInfoPtrOutput) AdministratorLogin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeManagedCatalogInfo) *string {
		if v == nil {
			return nil
		}
		return v.AdministratorLogin
	}).(pulumi.StringPtrOutput)
}

// Administrator login password for the SQL Server.
func (o IntegrationRuntimeManagedCatalogInfoPtrOutput) AdministratorPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeManagedCatalogInfo) *string {
		if v == nil {
			return nil
		}
		return v.AdministratorPassword
	}).(pulumi.StringPtrOutput)
}

// Pricing tier for the database that will be created for the SSIS catalog. Valid values are: `Basic`, `Standard`, `Premium` and `PremiumRS`. Defaults to `Basic`.
func (o IntegrationRuntimeManagedCatalogInfoPtrOutput) PricingTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeManagedCatalogInfo) *string {
		if v == nil {
			return nil
		}
		return v.PricingTier
	}).(pulumi.StringPtrOutput)
}

// The endpoint of an Azure SQL Server that will be used to host the SSIS catalog.
func (o IntegrationRuntimeManagedCatalogInfoPtrOutput) ServerEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeManagedCatalogInfo) *string {
		if v == nil {
			return nil
		}
		return &v.ServerEndpoint
	}).(pulumi.StringPtrOutput)
}

type IntegrationRuntimeManagedCustomSetupScript struct {
	// The blob endpoint for the container which contains a custom setup script that will be run on every node on startup. See [https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup](https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup) for more information.
	BlobContainerUri string `pulumi:"blobContainerUri"`
	// A container SAS token that gives access to the files. See [https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup](https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup) for more information.
	SasToken string `pulumi:"sasToken"`
}

// IntegrationRuntimeManagedCustomSetupScriptInput is an input type that accepts IntegrationRuntimeManagedCustomSetupScriptArgs and IntegrationRuntimeManagedCustomSetupScriptOutput values.
// You can construct a concrete instance of `IntegrationRuntimeManagedCustomSetupScriptInput` via:
//
//	IntegrationRuntimeManagedCustomSetupScriptArgs{...}
type IntegrationRuntimeManagedCustomSetupScriptInput interface {
	pulumi.Input

	ToIntegrationRuntimeManagedCustomSetupScriptOutput() IntegrationRuntimeManagedCustomSetupScriptOutput
	ToIntegrationRuntimeManagedCustomSetupScriptOutputWithContext(context.Context) IntegrationRuntimeManagedCustomSetupScriptOutput
}

type IntegrationRuntimeManagedCustomSetupScriptArgs struct {
	// The blob endpoint for the container which contains a custom setup script that will be run on every node on startup. See [https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup](https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup) for more information.
	BlobContainerUri pulumi.StringInput `pulumi:"blobContainerUri"`
	// A container SAS token that gives access to the files. See [https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup](https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup) for more information.
	SasToken pulumi.StringInput `pulumi:"sasToken"`
}

func (IntegrationRuntimeManagedCustomSetupScriptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeManagedCustomSetupScript)(nil)).Elem()
}

func (i IntegrationRuntimeManagedCustomSetupScriptArgs) ToIntegrationRuntimeManagedCustomSetupScriptOutput() IntegrationRuntimeManagedCustomSetupScriptOutput {
	return i.ToIntegrationRuntimeManagedCustomSetupScriptOutputWithContext(context.Background())
}

func (i IntegrationRuntimeManagedCustomSetupScriptArgs) ToIntegrationRuntimeManagedCustomSetupScriptOutputWithContext(ctx context.Context) IntegrationRuntimeManagedCustomSetupScriptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeManagedCustomSetupScriptOutput)
}

func (i IntegrationRuntimeManagedCustomSetupScriptArgs) ToIntegrationRuntimeManagedCustomSetupScriptPtrOutput() IntegrationRuntimeManagedCustomSetupScriptPtrOutput {
	return i.ToIntegrationRuntimeManagedCustomSetupScriptPtrOutputWithContext(context.Background())
}

func (i IntegrationRuntimeManagedCustomSetupScriptArgs) ToIntegrationRuntimeManagedCustomSetupScriptPtrOutputWithContext(ctx context.Context) IntegrationRuntimeManagedCustomSetupScriptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeManagedCustomSetupScriptOutput).ToIntegrationRuntimeManagedCustomSetupScriptPtrOutputWithContext(ctx)
}

// IntegrationRuntimeManagedCustomSetupScriptPtrInput is an input type that accepts IntegrationRuntimeManagedCustomSetupScriptArgs, IntegrationRuntimeManagedCustomSetupScriptPtr and IntegrationRuntimeManagedCustomSetupScriptPtrOutput values.
// You can construct a concrete instance of `IntegrationRuntimeManagedCustomSetupScriptPtrInput` via:
//
//	        IntegrationRuntimeManagedCustomSetupScriptArgs{...}
//
//	or:
//
//	        nil
type IntegrationRuntimeManagedCustomSetupScriptPtrInput interface {
	pulumi.Input

	ToIntegrationRuntimeManagedCustomSetupScriptPtrOutput() IntegrationRuntimeManagedCustomSetupScriptPtrOutput
	ToIntegrationRuntimeManagedCustomSetupScriptPtrOutputWithContext(context.Context) IntegrationRuntimeManagedCustomSetupScriptPtrOutput
}

type integrationRuntimeManagedCustomSetupScriptPtrType IntegrationRuntimeManagedCustomSetupScriptArgs

func IntegrationRuntimeManagedCustomSetupScriptPtr(v *IntegrationRuntimeManagedCustomSetupScriptArgs) IntegrationRuntimeManagedCustomSetupScriptPtrInput {
	return (*integrationRuntimeManagedCustomSetupScriptPtrType)(v)
}

func (*integrationRuntimeManagedCustomSetupScriptPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeManagedCustomSetupScript)(nil)).Elem()
}

func (i *integrationRuntimeManagedCustomSetupScriptPtrType) ToIntegrationRuntimeManagedCustomSetupScriptPtrOutput() IntegrationRuntimeManagedCustomSetupScriptPtrOutput {
	return i.ToIntegrationRuntimeManagedCustomSetupScriptPtrOutputWithContext(context.Background())
}

func (i *integrationRuntimeManagedCustomSetupScriptPtrType) ToIntegrationRuntimeManagedCustomSetupScriptPtrOutputWithContext(ctx context.Context) IntegrationRuntimeManagedCustomSetupScriptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeManagedCustomSetupScriptPtrOutput)
}

type IntegrationRuntimeManagedCustomSetupScriptOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeManagedCustomSetupScriptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeManagedCustomSetupScript)(nil)).Elem()
}

func (o IntegrationRuntimeManagedCustomSetupScriptOutput) ToIntegrationRuntimeManagedCustomSetupScriptOutput() IntegrationRuntimeManagedCustomSetupScriptOutput {
	return o
}

func (o IntegrationRuntimeManagedCustomSetupScriptOutput) ToIntegrationRuntimeManagedCustomSetupScriptOutputWithContext(ctx context.Context) IntegrationRuntimeManagedCustomSetupScriptOutput {
	return o
}

func (o IntegrationRuntimeManagedCustomSetupScriptOutput) ToIntegrationRuntimeManagedCustomSetupScriptPtrOutput() IntegrationRuntimeManagedCustomSetupScriptPtrOutput {
	return o.ToIntegrationRuntimeManagedCustomSetupScriptPtrOutputWithContext(context.Background())
}

func (o IntegrationRuntimeManagedCustomSetupScriptOutput) ToIntegrationRuntimeManagedCustomSetupScriptPtrOutputWithContext(ctx context.Context) IntegrationRuntimeManagedCustomSetupScriptPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationRuntimeManagedCustomSetupScript) *IntegrationRuntimeManagedCustomSetupScript {
		return &v
	}).(IntegrationRuntimeManagedCustomSetupScriptPtrOutput)
}

// The blob endpoint for the container which contains a custom setup script that will be run on every node on startup. See [https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup](https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup) for more information.
func (o IntegrationRuntimeManagedCustomSetupScriptOutput) BlobContainerUri() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRuntimeManagedCustomSetupScript) string { return v.BlobContainerUri }).(pulumi.StringOutput)
}

// A container SAS token that gives access to the files. See [https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup](https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup) for more information.
func (o IntegrationRuntimeManagedCustomSetupScriptOutput) SasToken() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRuntimeManagedCustomSetupScript) string { return v.SasToken }).(pulumi.StringOutput)
}

type IntegrationRuntimeManagedCustomSetupScriptPtrOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeManagedCustomSetupScriptPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeManagedCustomSetupScript)(nil)).Elem()
}

func (o IntegrationRuntimeManagedCustomSetupScriptPtrOutput) ToIntegrationRuntimeManagedCustomSetupScriptPtrOutput() IntegrationRuntimeManagedCustomSetupScriptPtrOutput {
	return o
}

func (o IntegrationRuntimeManagedCustomSetupScriptPtrOutput) ToIntegrationRuntimeManagedCustomSetupScriptPtrOutputWithContext(ctx context.Context) IntegrationRuntimeManagedCustomSetupScriptPtrOutput {
	return o
}

func (o IntegrationRuntimeManagedCustomSetupScriptPtrOutput) Elem() IntegrationRuntimeManagedCustomSetupScriptOutput {
	return o.ApplyT(func(v *IntegrationRuntimeManagedCustomSetupScript) IntegrationRuntimeManagedCustomSetupScript {
		if v != nil {
			return *v
		}
		var ret IntegrationRuntimeManagedCustomSetupScript
		return ret
	}).(IntegrationRuntimeManagedCustomSetupScriptOutput)
}

// The blob endpoint for the container which contains a custom setup script that will be run on every node on startup. See [https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup](https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup) for more information.
func (o IntegrationRuntimeManagedCustomSetupScriptPtrOutput) BlobContainerUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeManagedCustomSetupScript) *string {
		if v == nil {
			return nil
		}
		return &v.BlobContainerUri
	}).(pulumi.StringPtrOutput)
}

// A container SAS token that gives access to the files. See [https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup](https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup) for more information.
func (o IntegrationRuntimeManagedCustomSetupScriptPtrOutput) SasToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeManagedCustomSetupScript) *string {
		if v == nil {
			return nil
		}
		return &v.SasToken
	}).(pulumi.StringPtrOutput)
}

type IntegrationRuntimeManagedVnetIntegration struct {
	// Name of the subnet to which the nodes of the Managed Integration Runtime will be added.
	SubnetName string `pulumi:"subnetName"`
	// ID of the virtual network to which the nodes of the Managed Integration Runtime will be added.
	VnetId string `pulumi:"vnetId"`
}

// IntegrationRuntimeManagedVnetIntegrationInput is an input type that accepts IntegrationRuntimeManagedVnetIntegrationArgs and IntegrationRuntimeManagedVnetIntegrationOutput values.
// You can construct a concrete instance of `IntegrationRuntimeManagedVnetIntegrationInput` via:
//
//	IntegrationRuntimeManagedVnetIntegrationArgs{...}
type IntegrationRuntimeManagedVnetIntegrationInput interface {
	pulumi.Input

	ToIntegrationRuntimeManagedVnetIntegrationOutput() IntegrationRuntimeManagedVnetIntegrationOutput
	ToIntegrationRuntimeManagedVnetIntegrationOutputWithContext(context.Context) IntegrationRuntimeManagedVnetIntegrationOutput
}

type IntegrationRuntimeManagedVnetIntegrationArgs struct {
	// Name of the subnet to which the nodes of the Managed Integration Runtime will be added.
	SubnetName pulumi.StringInput `pulumi:"subnetName"`
	// ID of the virtual network to which the nodes of the Managed Integration Runtime will be added.
	VnetId pulumi.StringInput `pulumi:"vnetId"`
}

func (IntegrationRuntimeManagedVnetIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeManagedVnetIntegration)(nil)).Elem()
}

func (i IntegrationRuntimeManagedVnetIntegrationArgs) ToIntegrationRuntimeManagedVnetIntegrationOutput() IntegrationRuntimeManagedVnetIntegrationOutput {
	return i.ToIntegrationRuntimeManagedVnetIntegrationOutputWithContext(context.Background())
}

func (i IntegrationRuntimeManagedVnetIntegrationArgs) ToIntegrationRuntimeManagedVnetIntegrationOutputWithContext(ctx context.Context) IntegrationRuntimeManagedVnetIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeManagedVnetIntegrationOutput)
}

func (i IntegrationRuntimeManagedVnetIntegrationArgs) ToIntegrationRuntimeManagedVnetIntegrationPtrOutput() IntegrationRuntimeManagedVnetIntegrationPtrOutput {
	return i.ToIntegrationRuntimeManagedVnetIntegrationPtrOutputWithContext(context.Background())
}

func (i IntegrationRuntimeManagedVnetIntegrationArgs) ToIntegrationRuntimeManagedVnetIntegrationPtrOutputWithContext(ctx context.Context) IntegrationRuntimeManagedVnetIntegrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeManagedVnetIntegrationOutput).ToIntegrationRuntimeManagedVnetIntegrationPtrOutputWithContext(ctx)
}

// IntegrationRuntimeManagedVnetIntegrationPtrInput is an input type that accepts IntegrationRuntimeManagedVnetIntegrationArgs, IntegrationRuntimeManagedVnetIntegrationPtr and IntegrationRuntimeManagedVnetIntegrationPtrOutput values.
// You can construct a concrete instance of `IntegrationRuntimeManagedVnetIntegrationPtrInput` via:
//
//	        IntegrationRuntimeManagedVnetIntegrationArgs{...}
//
//	or:
//
//	        nil
type IntegrationRuntimeManagedVnetIntegrationPtrInput interface {
	pulumi.Input

	ToIntegrationRuntimeManagedVnetIntegrationPtrOutput() IntegrationRuntimeManagedVnetIntegrationPtrOutput
	ToIntegrationRuntimeManagedVnetIntegrationPtrOutputWithContext(context.Context) IntegrationRuntimeManagedVnetIntegrationPtrOutput
}

type integrationRuntimeManagedVnetIntegrationPtrType IntegrationRuntimeManagedVnetIntegrationArgs

func IntegrationRuntimeManagedVnetIntegrationPtr(v *IntegrationRuntimeManagedVnetIntegrationArgs) IntegrationRuntimeManagedVnetIntegrationPtrInput {
	return (*integrationRuntimeManagedVnetIntegrationPtrType)(v)
}

func (*integrationRuntimeManagedVnetIntegrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeManagedVnetIntegration)(nil)).Elem()
}

func (i *integrationRuntimeManagedVnetIntegrationPtrType) ToIntegrationRuntimeManagedVnetIntegrationPtrOutput() IntegrationRuntimeManagedVnetIntegrationPtrOutput {
	return i.ToIntegrationRuntimeManagedVnetIntegrationPtrOutputWithContext(context.Background())
}

func (i *integrationRuntimeManagedVnetIntegrationPtrType) ToIntegrationRuntimeManagedVnetIntegrationPtrOutputWithContext(ctx context.Context) IntegrationRuntimeManagedVnetIntegrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeManagedVnetIntegrationPtrOutput)
}

type IntegrationRuntimeManagedVnetIntegrationOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeManagedVnetIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeManagedVnetIntegration)(nil)).Elem()
}

func (o IntegrationRuntimeManagedVnetIntegrationOutput) ToIntegrationRuntimeManagedVnetIntegrationOutput() IntegrationRuntimeManagedVnetIntegrationOutput {
	return o
}

func (o IntegrationRuntimeManagedVnetIntegrationOutput) ToIntegrationRuntimeManagedVnetIntegrationOutputWithContext(ctx context.Context) IntegrationRuntimeManagedVnetIntegrationOutput {
	return o
}

func (o IntegrationRuntimeManagedVnetIntegrationOutput) ToIntegrationRuntimeManagedVnetIntegrationPtrOutput() IntegrationRuntimeManagedVnetIntegrationPtrOutput {
	return o.ToIntegrationRuntimeManagedVnetIntegrationPtrOutputWithContext(context.Background())
}

func (o IntegrationRuntimeManagedVnetIntegrationOutput) ToIntegrationRuntimeManagedVnetIntegrationPtrOutputWithContext(ctx context.Context) IntegrationRuntimeManagedVnetIntegrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationRuntimeManagedVnetIntegration) *IntegrationRuntimeManagedVnetIntegration {
		return &v
	}).(IntegrationRuntimeManagedVnetIntegrationPtrOutput)
}

// Name of the subnet to which the nodes of the Managed Integration Runtime will be added.
func (o IntegrationRuntimeManagedVnetIntegrationOutput) SubnetName() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRuntimeManagedVnetIntegration) string { return v.SubnetName }).(pulumi.StringOutput)
}

// ID of the virtual network to which the nodes of the Managed Integration Runtime will be added.
func (o IntegrationRuntimeManagedVnetIntegrationOutput) VnetId() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRuntimeManagedVnetIntegration) string { return v.VnetId }).(pulumi.StringOutput)
}

type IntegrationRuntimeManagedVnetIntegrationPtrOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeManagedVnetIntegrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeManagedVnetIntegration)(nil)).Elem()
}

func (o IntegrationRuntimeManagedVnetIntegrationPtrOutput) ToIntegrationRuntimeManagedVnetIntegrationPtrOutput() IntegrationRuntimeManagedVnetIntegrationPtrOutput {
	return o
}

func (o IntegrationRuntimeManagedVnetIntegrationPtrOutput) ToIntegrationRuntimeManagedVnetIntegrationPtrOutputWithContext(ctx context.Context) IntegrationRuntimeManagedVnetIntegrationPtrOutput {
	return o
}

func (o IntegrationRuntimeManagedVnetIntegrationPtrOutput) Elem() IntegrationRuntimeManagedVnetIntegrationOutput {
	return o.ApplyT(func(v *IntegrationRuntimeManagedVnetIntegration) IntegrationRuntimeManagedVnetIntegration {
		if v != nil {
			return *v
		}
		var ret IntegrationRuntimeManagedVnetIntegration
		return ret
	}).(IntegrationRuntimeManagedVnetIntegrationOutput)
}

// Name of the subnet to which the nodes of the Managed Integration Runtime will be added.
func (o IntegrationRuntimeManagedVnetIntegrationPtrOutput) SubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeManagedVnetIntegration) *string {
		if v == nil {
			return nil
		}
		return &v.SubnetName
	}).(pulumi.StringPtrOutput)
}

// ID of the virtual network to which the nodes of the Managed Integration Runtime will be added.
func (o IntegrationRuntimeManagedVnetIntegrationPtrOutput) VnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeManagedVnetIntegration) *string {
		if v == nil {
			return nil
		}
		return &v.VnetId
	}).(pulumi.StringPtrOutput)
}

type IntegrationRuntimeSelfHostedRbacAuthorization struct {
	// The resource identifier of the integration runtime to be shared.
	//
	// > **Please Note**: RBAC Authorization creates a [linked Self-hosted Integration Runtime targeting the Shared Self-hosted Integration Runtime in resourceId](https://docs.microsoft.com/azure/data-factory/create-shared-self-hosted-integration-runtime-powershell#share-the-self-hosted-integration-runtime-with-another-data-factory). The linked Self-hosted Integration Runtime needs Contributor access granted to the Shared Self-hosted Data Factory.
	//
	// For more information on the configuration, please check out the [Azure documentation](https://docs.microsoft.com/rest/api/datafactory/integrationruntimes/createorupdate#linkedintegrationruntimerbacauthorization)
	ResourceId string `pulumi:"resourceId"`
}

// IntegrationRuntimeSelfHostedRbacAuthorizationInput is an input type that accepts IntegrationRuntimeSelfHostedRbacAuthorizationArgs and IntegrationRuntimeSelfHostedRbacAuthorizationOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSelfHostedRbacAuthorizationInput` via:
//
//	IntegrationRuntimeSelfHostedRbacAuthorizationArgs{...}
type IntegrationRuntimeSelfHostedRbacAuthorizationInput interface {
	pulumi.Input

	ToIntegrationRuntimeSelfHostedRbacAuthorizationOutput() IntegrationRuntimeSelfHostedRbacAuthorizationOutput
	ToIntegrationRuntimeSelfHostedRbacAuthorizationOutputWithContext(context.Context) IntegrationRuntimeSelfHostedRbacAuthorizationOutput
}

type IntegrationRuntimeSelfHostedRbacAuthorizationArgs struct {
	// The resource identifier of the integration runtime to be shared.
	//
	// > **Please Note**: RBAC Authorization creates a [linked Self-hosted Integration Runtime targeting the Shared Self-hosted Integration Runtime in resourceId](https://docs.microsoft.com/azure/data-factory/create-shared-self-hosted-integration-runtime-powershell#share-the-self-hosted-integration-runtime-with-another-data-factory). The linked Self-hosted Integration Runtime needs Contributor access granted to the Shared Self-hosted Data Factory.
	//
	// For more information on the configuration, please check out the [Azure documentation](https://docs.microsoft.com/rest/api/datafactory/integrationruntimes/createorupdate#linkedintegrationruntimerbacauthorization)
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
}

func (IntegrationRuntimeSelfHostedRbacAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSelfHostedRbacAuthorization)(nil)).Elem()
}

func (i IntegrationRuntimeSelfHostedRbacAuthorizationArgs) ToIntegrationRuntimeSelfHostedRbacAuthorizationOutput() IntegrationRuntimeSelfHostedRbacAuthorizationOutput {
	return i.ToIntegrationRuntimeSelfHostedRbacAuthorizationOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSelfHostedRbacAuthorizationArgs) ToIntegrationRuntimeSelfHostedRbacAuthorizationOutputWithContext(ctx context.Context) IntegrationRuntimeSelfHostedRbacAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSelfHostedRbacAuthorizationOutput)
}

// IntegrationRuntimeSelfHostedRbacAuthorizationArrayInput is an input type that accepts IntegrationRuntimeSelfHostedRbacAuthorizationArray and IntegrationRuntimeSelfHostedRbacAuthorizationArrayOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSelfHostedRbacAuthorizationArrayInput` via:
//
//	IntegrationRuntimeSelfHostedRbacAuthorizationArray{ IntegrationRuntimeSelfHostedRbacAuthorizationArgs{...} }
type IntegrationRuntimeSelfHostedRbacAuthorizationArrayInput interface {
	pulumi.Input

	ToIntegrationRuntimeSelfHostedRbacAuthorizationArrayOutput() IntegrationRuntimeSelfHostedRbacAuthorizationArrayOutput
	ToIntegrationRuntimeSelfHostedRbacAuthorizationArrayOutputWithContext(context.Context) IntegrationRuntimeSelfHostedRbacAuthorizationArrayOutput
}

type IntegrationRuntimeSelfHostedRbacAuthorizationArray []IntegrationRuntimeSelfHostedRbacAuthorizationInput

func (IntegrationRuntimeSelfHostedRbacAuthorizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRuntimeSelfHostedRbacAuthorization)(nil)).Elem()
}

func (i IntegrationRuntimeSelfHostedRbacAuthorizationArray) ToIntegrationRuntimeSelfHostedRbacAuthorizationArrayOutput() IntegrationRuntimeSelfHostedRbacAuthorizationArrayOutput {
	return i.ToIntegrationRuntimeSelfHostedRbacAuthorizationArrayOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSelfHostedRbacAuthorizationArray) ToIntegrationRuntimeSelfHostedRbacAuthorizationArrayOutputWithContext(ctx context.Context) IntegrationRuntimeSelfHostedRbacAuthorizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSelfHostedRbacAuthorizationArrayOutput)
}

type IntegrationRuntimeSelfHostedRbacAuthorizationOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSelfHostedRbacAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSelfHostedRbacAuthorization)(nil)).Elem()
}

func (o IntegrationRuntimeSelfHostedRbacAuthorizationOutput) ToIntegrationRuntimeSelfHostedRbacAuthorizationOutput() IntegrationRuntimeSelfHostedRbacAuthorizationOutput {
	return o
}

func (o IntegrationRuntimeSelfHostedRbacAuthorizationOutput) ToIntegrationRuntimeSelfHostedRbacAuthorizationOutputWithContext(ctx context.Context) IntegrationRuntimeSelfHostedRbacAuthorizationOutput {
	return o
}

// The resource identifier of the integration runtime to be shared.
//
// > **Please Note**: RBAC Authorization creates a [linked Self-hosted Integration Runtime targeting the Shared Self-hosted Integration Runtime in resourceId](https://docs.microsoft.com/azure/data-factory/create-shared-self-hosted-integration-runtime-powershell#share-the-self-hosted-integration-runtime-with-another-data-factory). The linked Self-hosted Integration Runtime needs Contributor access granted to the Shared Self-hosted Data Factory.
//
// For more information on the configuration, please check out the [Azure documentation](https://docs.microsoft.com/rest/api/datafactory/integrationruntimes/createorupdate#linkedintegrationruntimerbacauthorization)
func (o IntegrationRuntimeSelfHostedRbacAuthorizationOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRuntimeSelfHostedRbacAuthorization) string { return v.ResourceId }).(pulumi.StringOutput)
}

type IntegrationRuntimeSelfHostedRbacAuthorizationArrayOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSelfHostedRbacAuthorizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRuntimeSelfHostedRbacAuthorization)(nil)).Elem()
}

func (o IntegrationRuntimeSelfHostedRbacAuthorizationArrayOutput) ToIntegrationRuntimeSelfHostedRbacAuthorizationArrayOutput() IntegrationRuntimeSelfHostedRbacAuthorizationArrayOutput {
	return o
}

func (o IntegrationRuntimeSelfHostedRbacAuthorizationArrayOutput) ToIntegrationRuntimeSelfHostedRbacAuthorizationArrayOutputWithContext(ctx context.Context) IntegrationRuntimeSelfHostedRbacAuthorizationArrayOutput {
	return o
}

func (o IntegrationRuntimeSelfHostedRbacAuthorizationArrayOutput) Index(i pulumi.IntInput) IntegrationRuntimeSelfHostedRbacAuthorizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationRuntimeSelfHostedRbacAuthorization {
		return vs[0].([]IntegrationRuntimeSelfHostedRbacAuthorization)[vs[1].(int)]
	}).(IntegrationRuntimeSelfHostedRbacAuthorizationOutput)
}

type IntegrationRuntimeSsisCatalogInfo struct {
	// Administrator login name for the SQL Server.
	AdministratorLogin *string `pulumi:"administratorLogin"`
	// Administrator login password for the SQL Server.
	AdministratorPassword *string `pulumi:"administratorPassword"`
	// The dual standby Azure-SSIS Integration Runtime pair with SSISDB failover.
	DualStandbyPairName *string `pulumi:"dualStandbyPairName"`
	// The name of SQL elastic pool where the database will be created for the SSIS catalog. Mutually exclusive with `pricingTier`.
	ElasticPoolName *string `pulumi:"elasticPoolName"`
	// Pricing tier for the database that will be created for the SSIS catalog. Valid values are: `Basic`, `S0`, `S1`, `S2`, `S3`, `S4`, `S6`, `S7`, `S9`, `S12`, `P1`, `P2`, `P4`, `P6`, `P11`, `P15`, `GP_S_Gen5_1`, `GP_S_Gen5_2`, `GP_S_Gen5_4`, `GP_S_Gen5_6`, `GP_S_Gen5_8`, `GP_S_Gen5_10`, `GP_S_Gen5_12`, `GP_S_Gen5_14`, `GP_S_Gen5_16`, `GP_S_Gen5_18`, `GP_S_Gen5_20`, `GP_S_Gen5_24`, `GP_S_Gen5_32`, `GP_S_Gen5_40`, `GP_Gen5_2`, `GP_Gen5_4`, `GP_Gen5_6`, `GP_Gen5_8`, `GP_Gen5_10`, `GP_Gen5_12`, `GP_Gen5_14`, `GP_Gen5_16`, `GP_Gen5_18`, `GP_Gen5_20`, `GP_Gen5_24`, `GP_Gen5_32`, `GP_Gen5_40`, `GP_Gen5_80`, `BC_Gen5_2`, `BC_Gen5_4`, `BC_Gen5_6`, `BC_Gen5_8`, `BC_Gen5_10`, `BC_Gen5_12`, `BC_Gen5_14`, `BC_Gen5_16`, `BC_Gen5_18`, `BC_Gen5_20`, `BC_Gen5_24`, `BC_Gen5_32`, `BC_Gen5_40`, `BC_Gen5_80`, `HS_Gen5_2`, `HS_Gen5_4`, `HS_Gen5_6`, `HS_Gen5_8`, `HS_Gen5_10`, `HS_Gen5_12`, `HS_Gen5_14`, `HS_Gen5_16`, `HS_Gen5_18`, `HS_Gen5_20`, `HS_Gen5_24`, `HS_Gen5_32`, `HS_Gen5_40` and `HS_Gen5_80`. Mutually exclusive with `elasticPoolName`.
	PricingTier *string `pulumi:"pricingTier"`
	// The endpoint of an Azure SQL Server that will be used to host the SSIS catalog.
	ServerEndpoint string `pulumi:"serverEndpoint"`
}

// IntegrationRuntimeSsisCatalogInfoInput is an input type that accepts IntegrationRuntimeSsisCatalogInfoArgs and IntegrationRuntimeSsisCatalogInfoOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisCatalogInfoInput` via:
//
//	IntegrationRuntimeSsisCatalogInfoArgs{...}
type IntegrationRuntimeSsisCatalogInfoInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisCatalogInfoOutput() IntegrationRuntimeSsisCatalogInfoOutput
	ToIntegrationRuntimeSsisCatalogInfoOutputWithContext(context.Context) IntegrationRuntimeSsisCatalogInfoOutput
}

type IntegrationRuntimeSsisCatalogInfoArgs struct {
	// Administrator login name for the SQL Server.
	AdministratorLogin pulumi.StringPtrInput `pulumi:"administratorLogin"`
	// Administrator login password for the SQL Server.
	AdministratorPassword pulumi.StringPtrInput `pulumi:"administratorPassword"`
	// The dual standby Azure-SSIS Integration Runtime pair with SSISDB failover.
	DualStandbyPairName pulumi.StringPtrInput `pulumi:"dualStandbyPairName"`
	// The name of SQL elastic pool where the database will be created for the SSIS catalog. Mutually exclusive with `pricingTier`.
	ElasticPoolName pulumi.StringPtrInput `pulumi:"elasticPoolName"`
	// Pricing tier for the database that will be created for the SSIS catalog. Valid values are: `Basic`, `S0`, `S1`, `S2`, `S3`, `S4`, `S6`, `S7`, `S9`, `S12`, `P1`, `P2`, `P4`, `P6`, `P11`, `P15`, `GP_S_Gen5_1`, `GP_S_Gen5_2`, `GP_S_Gen5_4`, `GP_S_Gen5_6`, `GP_S_Gen5_8`, `GP_S_Gen5_10`, `GP_S_Gen5_12`, `GP_S_Gen5_14`, `GP_S_Gen5_16`, `GP_S_Gen5_18`, `GP_S_Gen5_20`, `GP_S_Gen5_24`, `GP_S_Gen5_32`, `GP_S_Gen5_40`, `GP_Gen5_2`, `GP_Gen5_4`, `GP_Gen5_6`, `GP_Gen5_8`, `GP_Gen5_10`, `GP_Gen5_12`, `GP_Gen5_14`, `GP_Gen5_16`, `GP_Gen5_18`, `GP_Gen5_20`, `GP_Gen5_24`, `GP_Gen5_32`, `GP_Gen5_40`, `GP_Gen5_80`, `BC_Gen5_2`, `BC_Gen5_4`, `BC_Gen5_6`, `BC_Gen5_8`, `BC_Gen5_10`, `BC_Gen5_12`, `BC_Gen5_14`, `BC_Gen5_16`, `BC_Gen5_18`, `BC_Gen5_20`, `BC_Gen5_24`, `BC_Gen5_32`, `BC_Gen5_40`, `BC_Gen5_80`, `HS_Gen5_2`, `HS_Gen5_4`, `HS_Gen5_6`, `HS_Gen5_8`, `HS_Gen5_10`, `HS_Gen5_12`, `HS_Gen5_14`, `HS_Gen5_16`, `HS_Gen5_18`, `HS_Gen5_20`, `HS_Gen5_24`, `HS_Gen5_32`, `HS_Gen5_40` and `HS_Gen5_80`. Mutually exclusive with `elasticPoolName`.
	PricingTier pulumi.StringPtrInput `pulumi:"pricingTier"`
	// The endpoint of an Azure SQL Server that will be used to host the SSIS catalog.
	ServerEndpoint pulumi.StringInput `pulumi:"serverEndpoint"`
}

func (IntegrationRuntimeSsisCatalogInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisCatalogInfo)(nil)).Elem()
}

func (i IntegrationRuntimeSsisCatalogInfoArgs) ToIntegrationRuntimeSsisCatalogInfoOutput() IntegrationRuntimeSsisCatalogInfoOutput {
	return i.ToIntegrationRuntimeSsisCatalogInfoOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisCatalogInfoArgs) ToIntegrationRuntimeSsisCatalogInfoOutputWithContext(ctx context.Context) IntegrationRuntimeSsisCatalogInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisCatalogInfoOutput)
}

func (i IntegrationRuntimeSsisCatalogInfoArgs) ToIntegrationRuntimeSsisCatalogInfoPtrOutput() IntegrationRuntimeSsisCatalogInfoPtrOutput {
	return i.ToIntegrationRuntimeSsisCatalogInfoPtrOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisCatalogInfoArgs) ToIntegrationRuntimeSsisCatalogInfoPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisCatalogInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisCatalogInfoOutput).ToIntegrationRuntimeSsisCatalogInfoPtrOutputWithContext(ctx)
}

// IntegrationRuntimeSsisCatalogInfoPtrInput is an input type that accepts IntegrationRuntimeSsisCatalogInfoArgs, IntegrationRuntimeSsisCatalogInfoPtr and IntegrationRuntimeSsisCatalogInfoPtrOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisCatalogInfoPtrInput` via:
//
//	        IntegrationRuntimeSsisCatalogInfoArgs{...}
//
//	or:
//
//	        nil
type IntegrationRuntimeSsisCatalogInfoPtrInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisCatalogInfoPtrOutput() IntegrationRuntimeSsisCatalogInfoPtrOutput
	ToIntegrationRuntimeSsisCatalogInfoPtrOutputWithContext(context.Context) IntegrationRuntimeSsisCatalogInfoPtrOutput
}

type integrationRuntimeSsisCatalogInfoPtrType IntegrationRuntimeSsisCatalogInfoArgs

func IntegrationRuntimeSsisCatalogInfoPtr(v *IntegrationRuntimeSsisCatalogInfoArgs) IntegrationRuntimeSsisCatalogInfoPtrInput {
	return (*integrationRuntimeSsisCatalogInfoPtrType)(v)
}

func (*integrationRuntimeSsisCatalogInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeSsisCatalogInfo)(nil)).Elem()
}

func (i *integrationRuntimeSsisCatalogInfoPtrType) ToIntegrationRuntimeSsisCatalogInfoPtrOutput() IntegrationRuntimeSsisCatalogInfoPtrOutput {
	return i.ToIntegrationRuntimeSsisCatalogInfoPtrOutputWithContext(context.Background())
}

func (i *integrationRuntimeSsisCatalogInfoPtrType) ToIntegrationRuntimeSsisCatalogInfoPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisCatalogInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisCatalogInfoPtrOutput)
}

type IntegrationRuntimeSsisCatalogInfoOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisCatalogInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisCatalogInfo)(nil)).Elem()
}

func (o IntegrationRuntimeSsisCatalogInfoOutput) ToIntegrationRuntimeSsisCatalogInfoOutput() IntegrationRuntimeSsisCatalogInfoOutput {
	return o
}

func (o IntegrationRuntimeSsisCatalogInfoOutput) ToIntegrationRuntimeSsisCatalogInfoOutputWithContext(ctx context.Context) IntegrationRuntimeSsisCatalogInfoOutput {
	return o
}

func (o IntegrationRuntimeSsisCatalogInfoOutput) ToIntegrationRuntimeSsisCatalogInfoPtrOutput() IntegrationRuntimeSsisCatalogInfoPtrOutput {
	return o.ToIntegrationRuntimeSsisCatalogInfoPtrOutputWithContext(context.Background())
}

func (o IntegrationRuntimeSsisCatalogInfoOutput) ToIntegrationRuntimeSsisCatalogInfoPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisCatalogInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationRuntimeSsisCatalogInfo) *IntegrationRuntimeSsisCatalogInfo {
		return &v
	}).(IntegrationRuntimeSsisCatalogInfoPtrOutput)
}

// Administrator login name for the SQL Server.
func (o IntegrationRuntimeSsisCatalogInfoOutput) AdministratorLogin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisCatalogInfo) *string { return v.AdministratorLogin }).(pulumi.StringPtrOutput)
}

// Administrator login password for the SQL Server.
func (o IntegrationRuntimeSsisCatalogInfoOutput) AdministratorPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisCatalogInfo) *string { return v.AdministratorPassword }).(pulumi.StringPtrOutput)
}

// The dual standby Azure-SSIS Integration Runtime pair with SSISDB failover.
func (o IntegrationRuntimeSsisCatalogInfoOutput) DualStandbyPairName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisCatalogInfo) *string { return v.DualStandbyPairName }).(pulumi.StringPtrOutput)
}

// The name of SQL elastic pool where the database will be created for the SSIS catalog. Mutually exclusive with `pricingTier`.
func (o IntegrationRuntimeSsisCatalogInfoOutput) ElasticPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisCatalogInfo) *string { return v.ElasticPoolName }).(pulumi.StringPtrOutput)
}

// Pricing tier for the database that will be created for the SSIS catalog. Valid values are: `Basic`, `S0`, `S1`, `S2`, `S3`, `S4`, `S6`, `S7`, `S9`, `S12`, `P1`, `P2`, `P4`, `P6`, `P11`, `P15`, `GP_S_Gen5_1`, `GP_S_Gen5_2`, `GP_S_Gen5_4`, `GP_S_Gen5_6`, `GP_S_Gen5_8`, `GP_S_Gen5_10`, `GP_S_Gen5_12`, `GP_S_Gen5_14`, `GP_S_Gen5_16`, `GP_S_Gen5_18`, `GP_S_Gen5_20`, `GP_S_Gen5_24`, `GP_S_Gen5_32`, `GP_S_Gen5_40`, `GP_Gen5_2`, `GP_Gen5_4`, `GP_Gen5_6`, `GP_Gen5_8`, `GP_Gen5_10`, `GP_Gen5_12`, `GP_Gen5_14`, `GP_Gen5_16`, `GP_Gen5_18`, `GP_Gen5_20`, `GP_Gen5_24`, `GP_Gen5_32`, `GP_Gen5_40`, `GP_Gen5_80`, `BC_Gen5_2`, `BC_Gen5_4`, `BC_Gen5_6`, `BC_Gen5_8`, `BC_Gen5_10`, `BC_Gen5_12`, `BC_Gen5_14`, `BC_Gen5_16`, `BC_Gen5_18`, `BC_Gen5_20`, `BC_Gen5_24`, `BC_Gen5_32`, `BC_Gen5_40`, `BC_Gen5_80`, `HS_Gen5_2`, `HS_Gen5_4`, `HS_Gen5_6`, `HS_Gen5_8`, `HS_Gen5_10`, `HS_Gen5_12`, `HS_Gen5_14`, `HS_Gen5_16`, `HS_Gen5_18`, `HS_Gen5_20`, `HS_Gen5_24`, `HS_Gen5_32`, `HS_Gen5_40` and `HS_Gen5_80`. Mutually exclusive with `elasticPoolName`.
func (o IntegrationRuntimeSsisCatalogInfoOutput) PricingTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisCatalogInfo) *string { return v.PricingTier }).(pulumi.StringPtrOutput)
}

// The endpoint of an Azure SQL Server that will be used to host the SSIS catalog.
func (o IntegrationRuntimeSsisCatalogInfoOutput) ServerEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisCatalogInfo) string { return v.ServerEndpoint }).(pulumi.StringOutput)
}

type IntegrationRuntimeSsisCatalogInfoPtrOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisCatalogInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeSsisCatalogInfo)(nil)).Elem()
}

func (o IntegrationRuntimeSsisCatalogInfoPtrOutput) ToIntegrationRuntimeSsisCatalogInfoPtrOutput() IntegrationRuntimeSsisCatalogInfoPtrOutput {
	return o
}

func (o IntegrationRuntimeSsisCatalogInfoPtrOutput) ToIntegrationRuntimeSsisCatalogInfoPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisCatalogInfoPtrOutput {
	return o
}

func (o IntegrationRuntimeSsisCatalogInfoPtrOutput) Elem() IntegrationRuntimeSsisCatalogInfoOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisCatalogInfo) IntegrationRuntimeSsisCatalogInfo {
		if v != nil {
			return *v
		}
		var ret IntegrationRuntimeSsisCatalogInfo
		return ret
	}).(IntegrationRuntimeSsisCatalogInfoOutput)
}

// Administrator login name for the SQL Server.
func (o IntegrationRuntimeSsisCatalogInfoPtrOutput) AdministratorLogin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisCatalogInfo) *string {
		if v == nil {
			return nil
		}
		return v.AdministratorLogin
	}).(pulumi.StringPtrOutput)
}

// Administrator login password for the SQL Server.
func (o IntegrationRuntimeSsisCatalogInfoPtrOutput) AdministratorPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisCatalogInfo) *string {
		if v == nil {
			return nil
		}
		return v.AdministratorPassword
	}).(pulumi.StringPtrOutput)
}

// The dual standby Azure-SSIS Integration Runtime pair with SSISDB failover.
func (o IntegrationRuntimeSsisCatalogInfoPtrOutput) DualStandbyPairName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisCatalogInfo) *string {
		if v == nil {
			return nil
		}
		return v.DualStandbyPairName
	}).(pulumi.StringPtrOutput)
}

// The name of SQL elastic pool where the database will be created for the SSIS catalog. Mutually exclusive with `pricingTier`.
func (o IntegrationRuntimeSsisCatalogInfoPtrOutput) ElasticPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisCatalogInfo) *string {
		if v == nil {
			return nil
		}
		return v.ElasticPoolName
	}).(pulumi.StringPtrOutput)
}

// Pricing tier for the database that will be created for the SSIS catalog. Valid values are: `Basic`, `S0`, `S1`, `S2`, `S3`, `S4`, `S6`, `S7`, `S9`, `S12`, `P1`, `P2`, `P4`, `P6`, `P11`, `P15`, `GP_S_Gen5_1`, `GP_S_Gen5_2`, `GP_S_Gen5_4`, `GP_S_Gen5_6`, `GP_S_Gen5_8`, `GP_S_Gen5_10`, `GP_S_Gen5_12`, `GP_S_Gen5_14`, `GP_S_Gen5_16`, `GP_S_Gen5_18`, `GP_S_Gen5_20`, `GP_S_Gen5_24`, `GP_S_Gen5_32`, `GP_S_Gen5_40`, `GP_Gen5_2`, `GP_Gen5_4`, `GP_Gen5_6`, `GP_Gen5_8`, `GP_Gen5_10`, `GP_Gen5_12`, `GP_Gen5_14`, `GP_Gen5_16`, `GP_Gen5_18`, `GP_Gen5_20`, `GP_Gen5_24`, `GP_Gen5_32`, `GP_Gen5_40`, `GP_Gen5_80`, `BC_Gen5_2`, `BC_Gen5_4`, `BC_Gen5_6`, `BC_Gen5_8`, `BC_Gen5_10`, `BC_Gen5_12`, `BC_Gen5_14`, `BC_Gen5_16`, `BC_Gen5_18`, `BC_Gen5_20`, `BC_Gen5_24`, `BC_Gen5_32`, `BC_Gen5_40`, `BC_Gen5_80`, `HS_Gen5_2`, `HS_Gen5_4`, `HS_Gen5_6`, `HS_Gen5_8`, `HS_Gen5_10`, `HS_Gen5_12`, `HS_Gen5_14`, `HS_Gen5_16`, `HS_Gen5_18`, `HS_Gen5_20`, `HS_Gen5_24`, `HS_Gen5_32`, `HS_Gen5_40` and `HS_Gen5_80`. Mutually exclusive with `elasticPoolName`.
func (o IntegrationRuntimeSsisCatalogInfoPtrOutput) PricingTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisCatalogInfo) *string {
		if v == nil {
			return nil
		}
		return v.PricingTier
	}).(pulumi.StringPtrOutput)
}

// The endpoint of an Azure SQL Server that will be used to host the SSIS catalog.
func (o IntegrationRuntimeSsisCatalogInfoPtrOutput) ServerEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisCatalogInfo) *string {
		if v == nil {
			return nil
		}
		return &v.ServerEndpoint
	}).(pulumi.StringPtrOutput)
}

type IntegrationRuntimeSsisCustomSetupScript struct {
	// The blob endpoint for the container which contains a custom setup script that will be run on every node on startup. See [https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup](https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup) for more information.
	BlobContainerUri string `pulumi:"blobContainerUri"`
	// A container SAS token that gives access to the files. See [https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup](https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup) for more information.
	SasToken string `pulumi:"sasToken"`
}

// IntegrationRuntimeSsisCustomSetupScriptInput is an input type that accepts IntegrationRuntimeSsisCustomSetupScriptArgs and IntegrationRuntimeSsisCustomSetupScriptOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisCustomSetupScriptInput` via:
//
//	IntegrationRuntimeSsisCustomSetupScriptArgs{...}
type IntegrationRuntimeSsisCustomSetupScriptInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisCustomSetupScriptOutput() IntegrationRuntimeSsisCustomSetupScriptOutput
	ToIntegrationRuntimeSsisCustomSetupScriptOutputWithContext(context.Context) IntegrationRuntimeSsisCustomSetupScriptOutput
}

type IntegrationRuntimeSsisCustomSetupScriptArgs struct {
	// The blob endpoint for the container which contains a custom setup script that will be run on every node on startup. See [https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup](https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup) for more information.
	BlobContainerUri pulumi.StringInput `pulumi:"blobContainerUri"`
	// A container SAS token that gives access to the files. See [https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup](https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup) for more information.
	SasToken pulumi.StringInput `pulumi:"sasToken"`
}

func (IntegrationRuntimeSsisCustomSetupScriptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisCustomSetupScript)(nil)).Elem()
}

func (i IntegrationRuntimeSsisCustomSetupScriptArgs) ToIntegrationRuntimeSsisCustomSetupScriptOutput() IntegrationRuntimeSsisCustomSetupScriptOutput {
	return i.ToIntegrationRuntimeSsisCustomSetupScriptOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisCustomSetupScriptArgs) ToIntegrationRuntimeSsisCustomSetupScriptOutputWithContext(ctx context.Context) IntegrationRuntimeSsisCustomSetupScriptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisCustomSetupScriptOutput)
}

func (i IntegrationRuntimeSsisCustomSetupScriptArgs) ToIntegrationRuntimeSsisCustomSetupScriptPtrOutput() IntegrationRuntimeSsisCustomSetupScriptPtrOutput {
	return i.ToIntegrationRuntimeSsisCustomSetupScriptPtrOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisCustomSetupScriptArgs) ToIntegrationRuntimeSsisCustomSetupScriptPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisCustomSetupScriptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisCustomSetupScriptOutput).ToIntegrationRuntimeSsisCustomSetupScriptPtrOutputWithContext(ctx)
}

// IntegrationRuntimeSsisCustomSetupScriptPtrInput is an input type that accepts IntegrationRuntimeSsisCustomSetupScriptArgs, IntegrationRuntimeSsisCustomSetupScriptPtr and IntegrationRuntimeSsisCustomSetupScriptPtrOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisCustomSetupScriptPtrInput` via:
//
//	        IntegrationRuntimeSsisCustomSetupScriptArgs{...}
//
//	or:
//
//	        nil
type IntegrationRuntimeSsisCustomSetupScriptPtrInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisCustomSetupScriptPtrOutput() IntegrationRuntimeSsisCustomSetupScriptPtrOutput
	ToIntegrationRuntimeSsisCustomSetupScriptPtrOutputWithContext(context.Context) IntegrationRuntimeSsisCustomSetupScriptPtrOutput
}

type integrationRuntimeSsisCustomSetupScriptPtrType IntegrationRuntimeSsisCustomSetupScriptArgs

func IntegrationRuntimeSsisCustomSetupScriptPtr(v *IntegrationRuntimeSsisCustomSetupScriptArgs) IntegrationRuntimeSsisCustomSetupScriptPtrInput {
	return (*integrationRuntimeSsisCustomSetupScriptPtrType)(v)
}

func (*integrationRuntimeSsisCustomSetupScriptPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeSsisCustomSetupScript)(nil)).Elem()
}

func (i *integrationRuntimeSsisCustomSetupScriptPtrType) ToIntegrationRuntimeSsisCustomSetupScriptPtrOutput() IntegrationRuntimeSsisCustomSetupScriptPtrOutput {
	return i.ToIntegrationRuntimeSsisCustomSetupScriptPtrOutputWithContext(context.Background())
}

func (i *integrationRuntimeSsisCustomSetupScriptPtrType) ToIntegrationRuntimeSsisCustomSetupScriptPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisCustomSetupScriptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisCustomSetupScriptPtrOutput)
}

type IntegrationRuntimeSsisCustomSetupScriptOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisCustomSetupScriptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisCustomSetupScript)(nil)).Elem()
}

func (o IntegrationRuntimeSsisCustomSetupScriptOutput) ToIntegrationRuntimeSsisCustomSetupScriptOutput() IntegrationRuntimeSsisCustomSetupScriptOutput {
	return o
}

func (o IntegrationRuntimeSsisCustomSetupScriptOutput) ToIntegrationRuntimeSsisCustomSetupScriptOutputWithContext(ctx context.Context) IntegrationRuntimeSsisCustomSetupScriptOutput {
	return o
}

func (o IntegrationRuntimeSsisCustomSetupScriptOutput) ToIntegrationRuntimeSsisCustomSetupScriptPtrOutput() IntegrationRuntimeSsisCustomSetupScriptPtrOutput {
	return o.ToIntegrationRuntimeSsisCustomSetupScriptPtrOutputWithContext(context.Background())
}

func (o IntegrationRuntimeSsisCustomSetupScriptOutput) ToIntegrationRuntimeSsisCustomSetupScriptPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisCustomSetupScriptPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationRuntimeSsisCustomSetupScript) *IntegrationRuntimeSsisCustomSetupScript {
		return &v
	}).(IntegrationRuntimeSsisCustomSetupScriptPtrOutput)
}

// The blob endpoint for the container which contains a custom setup script that will be run on every node on startup. See [https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup](https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup) for more information.
func (o IntegrationRuntimeSsisCustomSetupScriptOutput) BlobContainerUri() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisCustomSetupScript) string { return v.BlobContainerUri }).(pulumi.StringOutput)
}

// A container SAS token that gives access to the files. See [https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup](https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup) for more information.
func (o IntegrationRuntimeSsisCustomSetupScriptOutput) SasToken() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisCustomSetupScript) string { return v.SasToken }).(pulumi.StringOutput)
}

type IntegrationRuntimeSsisCustomSetupScriptPtrOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisCustomSetupScriptPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeSsisCustomSetupScript)(nil)).Elem()
}

func (o IntegrationRuntimeSsisCustomSetupScriptPtrOutput) ToIntegrationRuntimeSsisCustomSetupScriptPtrOutput() IntegrationRuntimeSsisCustomSetupScriptPtrOutput {
	return o
}

func (o IntegrationRuntimeSsisCustomSetupScriptPtrOutput) ToIntegrationRuntimeSsisCustomSetupScriptPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisCustomSetupScriptPtrOutput {
	return o
}

func (o IntegrationRuntimeSsisCustomSetupScriptPtrOutput) Elem() IntegrationRuntimeSsisCustomSetupScriptOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisCustomSetupScript) IntegrationRuntimeSsisCustomSetupScript {
		if v != nil {
			return *v
		}
		var ret IntegrationRuntimeSsisCustomSetupScript
		return ret
	}).(IntegrationRuntimeSsisCustomSetupScriptOutput)
}

// The blob endpoint for the container which contains a custom setup script that will be run on every node on startup. See [https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup](https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup) for more information.
func (o IntegrationRuntimeSsisCustomSetupScriptPtrOutput) BlobContainerUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisCustomSetupScript) *string {
		if v == nil {
			return nil
		}
		return &v.BlobContainerUri
	}).(pulumi.StringPtrOutput)
}

// A container SAS token that gives access to the files. See [https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup](https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup) for more information.
func (o IntegrationRuntimeSsisCustomSetupScriptPtrOutput) SasToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisCustomSetupScript) *string {
		if v == nil {
			return nil
		}
		return &v.SasToken
	}).(pulumi.StringPtrOutput)
}

type IntegrationRuntimeSsisExpressCustomSetup struct {
	// One or more `commandKey` blocks as defined below.
	CommandKeys []IntegrationRuntimeSsisExpressCustomSetupCommandKey `pulumi:"commandKeys"`
	// One or more `component` blocks as defined below.
	Components []IntegrationRuntimeSsisExpressCustomSetupComponent `pulumi:"components"`
	// The Environment Variables for the Azure-SSIS Integration Runtime.
	Environment map[string]string `pulumi:"environment"`
	// The version of Azure Powershell installed for the Azure-SSIS Integration Runtime.
	//
	// > **NOTE** At least one of `env`, `powershellVersion`, `component` and `commandKey` should be specified.
	PowershellVersion *string `pulumi:"powershellVersion"`
}

// IntegrationRuntimeSsisExpressCustomSetupInput is an input type that accepts IntegrationRuntimeSsisExpressCustomSetupArgs and IntegrationRuntimeSsisExpressCustomSetupOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisExpressCustomSetupInput` via:
//
//	IntegrationRuntimeSsisExpressCustomSetupArgs{...}
type IntegrationRuntimeSsisExpressCustomSetupInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisExpressCustomSetupOutput() IntegrationRuntimeSsisExpressCustomSetupOutput
	ToIntegrationRuntimeSsisExpressCustomSetupOutputWithContext(context.Context) IntegrationRuntimeSsisExpressCustomSetupOutput
}

type IntegrationRuntimeSsisExpressCustomSetupArgs struct {
	// One or more `commandKey` blocks as defined below.
	CommandKeys IntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayInput `pulumi:"commandKeys"`
	// One or more `component` blocks as defined below.
	Components IntegrationRuntimeSsisExpressCustomSetupComponentArrayInput `pulumi:"components"`
	// The Environment Variables for the Azure-SSIS Integration Runtime.
	Environment pulumi.StringMapInput `pulumi:"environment"`
	// The version of Azure Powershell installed for the Azure-SSIS Integration Runtime.
	//
	// > **NOTE** At least one of `env`, `powershellVersion`, `component` and `commandKey` should be specified.
	PowershellVersion pulumi.StringPtrInput `pulumi:"powershellVersion"`
}

func (IntegrationRuntimeSsisExpressCustomSetupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisExpressCustomSetup)(nil)).Elem()
}

func (i IntegrationRuntimeSsisExpressCustomSetupArgs) ToIntegrationRuntimeSsisExpressCustomSetupOutput() IntegrationRuntimeSsisExpressCustomSetupOutput {
	return i.ToIntegrationRuntimeSsisExpressCustomSetupOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisExpressCustomSetupArgs) ToIntegrationRuntimeSsisExpressCustomSetupOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressCustomSetupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisExpressCustomSetupOutput)
}

func (i IntegrationRuntimeSsisExpressCustomSetupArgs) ToIntegrationRuntimeSsisExpressCustomSetupPtrOutput() IntegrationRuntimeSsisExpressCustomSetupPtrOutput {
	return i.ToIntegrationRuntimeSsisExpressCustomSetupPtrOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisExpressCustomSetupArgs) ToIntegrationRuntimeSsisExpressCustomSetupPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressCustomSetupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisExpressCustomSetupOutput).ToIntegrationRuntimeSsisExpressCustomSetupPtrOutputWithContext(ctx)
}

// IntegrationRuntimeSsisExpressCustomSetupPtrInput is an input type that accepts IntegrationRuntimeSsisExpressCustomSetupArgs, IntegrationRuntimeSsisExpressCustomSetupPtr and IntegrationRuntimeSsisExpressCustomSetupPtrOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisExpressCustomSetupPtrInput` via:
//
//	        IntegrationRuntimeSsisExpressCustomSetupArgs{...}
//
//	or:
//
//	        nil
type IntegrationRuntimeSsisExpressCustomSetupPtrInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisExpressCustomSetupPtrOutput() IntegrationRuntimeSsisExpressCustomSetupPtrOutput
	ToIntegrationRuntimeSsisExpressCustomSetupPtrOutputWithContext(context.Context) IntegrationRuntimeSsisExpressCustomSetupPtrOutput
}

type integrationRuntimeSsisExpressCustomSetupPtrType IntegrationRuntimeSsisExpressCustomSetupArgs

func IntegrationRuntimeSsisExpressCustomSetupPtr(v *IntegrationRuntimeSsisExpressCustomSetupArgs) IntegrationRuntimeSsisExpressCustomSetupPtrInput {
	return (*integrationRuntimeSsisExpressCustomSetupPtrType)(v)
}

func (*integrationRuntimeSsisExpressCustomSetupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeSsisExpressCustomSetup)(nil)).Elem()
}

func (i *integrationRuntimeSsisExpressCustomSetupPtrType) ToIntegrationRuntimeSsisExpressCustomSetupPtrOutput() IntegrationRuntimeSsisExpressCustomSetupPtrOutput {
	return i.ToIntegrationRuntimeSsisExpressCustomSetupPtrOutputWithContext(context.Background())
}

func (i *integrationRuntimeSsisExpressCustomSetupPtrType) ToIntegrationRuntimeSsisExpressCustomSetupPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressCustomSetupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisExpressCustomSetupPtrOutput)
}

type IntegrationRuntimeSsisExpressCustomSetupOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisExpressCustomSetupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisExpressCustomSetup)(nil)).Elem()
}

func (o IntegrationRuntimeSsisExpressCustomSetupOutput) ToIntegrationRuntimeSsisExpressCustomSetupOutput() IntegrationRuntimeSsisExpressCustomSetupOutput {
	return o
}

func (o IntegrationRuntimeSsisExpressCustomSetupOutput) ToIntegrationRuntimeSsisExpressCustomSetupOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressCustomSetupOutput {
	return o
}

func (o IntegrationRuntimeSsisExpressCustomSetupOutput) ToIntegrationRuntimeSsisExpressCustomSetupPtrOutput() IntegrationRuntimeSsisExpressCustomSetupPtrOutput {
	return o.ToIntegrationRuntimeSsisExpressCustomSetupPtrOutputWithContext(context.Background())
}

func (o IntegrationRuntimeSsisExpressCustomSetupOutput) ToIntegrationRuntimeSsisExpressCustomSetupPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressCustomSetupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationRuntimeSsisExpressCustomSetup) *IntegrationRuntimeSsisExpressCustomSetup {
		return &v
	}).(IntegrationRuntimeSsisExpressCustomSetupPtrOutput)
}

// One or more `commandKey` blocks as defined below.
func (o IntegrationRuntimeSsisExpressCustomSetupOutput) CommandKeys() IntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisExpressCustomSetup) []IntegrationRuntimeSsisExpressCustomSetupCommandKey {
		return v.CommandKeys
	}).(IntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayOutput)
}

// One or more `component` blocks as defined below.
func (o IntegrationRuntimeSsisExpressCustomSetupOutput) Components() IntegrationRuntimeSsisExpressCustomSetupComponentArrayOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisExpressCustomSetup) []IntegrationRuntimeSsisExpressCustomSetupComponent {
		return v.Components
	}).(IntegrationRuntimeSsisExpressCustomSetupComponentArrayOutput)
}

// The Environment Variables for the Azure-SSIS Integration Runtime.
func (o IntegrationRuntimeSsisExpressCustomSetupOutput) Environment() pulumi.StringMapOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisExpressCustomSetup) map[string]string { return v.Environment }).(pulumi.StringMapOutput)
}

// The version of Azure Powershell installed for the Azure-SSIS Integration Runtime.
//
// > **NOTE** At least one of `env`, `powershellVersion`, `component` and `commandKey` should be specified.
func (o IntegrationRuntimeSsisExpressCustomSetupOutput) PowershellVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisExpressCustomSetup) *string { return v.PowershellVersion }).(pulumi.StringPtrOutput)
}

type IntegrationRuntimeSsisExpressCustomSetupPtrOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisExpressCustomSetupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeSsisExpressCustomSetup)(nil)).Elem()
}

func (o IntegrationRuntimeSsisExpressCustomSetupPtrOutput) ToIntegrationRuntimeSsisExpressCustomSetupPtrOutput() IntegrationRuntimeSsisExpressCustomSetupPtrOutput {
	return o
}

func (o IntegrationRuntimeSsisExpressCustomSetupPtrOutput) ToIntegrationRuntimeSsisExpressCustomSetupPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressCustomSetupPtrOutput {
	return o
}

func (o IntegrationRuntimeSsisExpressCustomSetupPtrOutput) Elem() IntegrationRuntimeSsisExpressCustomSetupOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisExpressCustomSetup) IntegrationRuntimeSsisExpressCustomSetup {
		if v != nil {
			return *v
		}
		var ret IntegrationRuntimeSsisExpressCustomSetup
		return ret
	}).(IntegrationRuntimeSsisExpressCustomSetupOutput)
}

// One or more `commandKey` blocks as defined below.
func (o IntegrationRuntimeSsisExpressCustomSetupPtrOutput) CommandKeys() IntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisExpressCustomSetup) []IntegrationRuntimeSsisExpressCustomSetupCommandKey {
		if v == nil {
			return nil
		}
		return v.CommandKeys
	}).(IntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayOutput)
}

// One or more `component` blocks as defined below.
func (o IntegrationRuntimeSsisExpressCustomSetupPtrOutput) Components() IntegrationRuntimeSsisExpressCustomSetupComponentArrayOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisExpressCustomSetup) []IntegrationRuntimeSsisExpressCustomSetupComponent {
		if v == nil {
			return nil
		}
		return v.Components
	}).(IntegrationRuntimeSsisExpressCustomSetupComponentArrayOutput)
}

// The Environment Variables for the Azure-SSIS Integration Runtime.
func (o IntegrationRuntimeSsisExpressCustomSetupPtrOutput) Environment() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisExpressCustomSetup) map[string]string {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(pulumi.StringMapOutput)
}

// The version of Azure Powershell installed for the Azure-SSIS Integration Runtime.
//
// > **NOTE** At least one of `env`, `powershellVersion`, `component` and `commandKey` should be specified.
func (o IntegrationRuntimeSsisExpressCustomSetupPtrOutput) PowershellVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisExpressCustomSetup) *string {
		if v == nil {
			return nil
		}
		return v.PowershellVersion
	}).(pulumi.StringPtrOutput)
}

type IntegrationRuntimeSsisExpressCustomSetupCommandKey struct {
	// A `keyVaultSecretReference` block as defined below.
	KeyVaultPassword *IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPassword `pulumi:"keyVaultPassword"`
	// The password for the target device.
	Password *string `pulumi:"password"`
	// The target computer or domain name.
	TargetName string `pulumi:"targetName"`
	// The username for the target device.
	UserName string `pulumi:"userName"`
}

// IntegrationRuntimeSsisExpressCustomSetupCommandKeyInput is an input type that accepts IntegrationRuntimeSsisExpressCustomSetupCommandKeyArgs and IntegrationRuntimeSsisExpressCustomSetupCommandKeyOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisExpressCustomSetupCommandKeyInput` via:
//
//	IntegrationRuntimeSsisExpressCustomSetupCommandKeyArgs{...}
type IntegrationRuntimeSsisExpressCustomSetupCommandKeyInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyOutput() IntegrationRuntimeSsisExpressCustomSetupCommandKeyOutput
	ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyOutputWithContext(context.Context) IntegrationRuntimeSsisExpressCustomSetupCommandKeyOutput
}

type IntegrationRuntimeSsisExpressCustomSetupCommandKeyArgs struct {
	// A `keyVaultSecretReference` block as defined below.
	KeyVaultPassword IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrInput `pulumi:"keyVaultPassword"`
	// The password for the target device.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The target computer or domain name.
	TargetName pulumi.StringInput `pulumi:"targetName"`
	// The username for the target device.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (IntegrationRuntimeSsisExpressCustomSetupCommandKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisExpressCustomSetupCommandKey)(nil)).Elem()
}

func (i IntegrationRuntimeSsisExpressCustomSetupCommandKeyArgs) ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyOutput() IntegrationRuntimeSsisExpressCustomSetupCommandKeyOutput {
	return i.ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisExpressCustomSetupCommandKeyArgs) ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressCustomSetupCommandKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisExpressCustomSetupCommandKeyOutput)
}

// IntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayInput is an input type that accepts IntegrationRuntimeSsisExpressCustomSetupCommandKeyArray and IntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayInput` via:
//
//	IntegrationRuntimeSsisExpressCustomSetupCommandKeyArray{ IntegrationRuntimeSsisExpressCustomSetupCommandKeyArgs{...} }
type IntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayOutput() IntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayOutput
	ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayOutputWithContext(context.Context) IntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayOutput
}

type IntegrationRuntimeSsisExpressCustomSetupCommandKeyArray []IntegrationRuntimeSsisExpressCustomSetupCommandKeyInput

func (IntegrationRuntimeSsisExpressCustomSetupCommandKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRuntimeSsisExpressCustomSetupCommandKey)(nil)).Elem()
}

func (i IntegrationRuntimeSsisExpressCustomSetupCommandKeyArray) ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayOutput() IntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayOutput {
	return i.ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisExpressCustomSetupCommandKeyArray) ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayOutput)
}

type IntegrationRuntimeSsisExpressCustomSetupCommandKeyOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisExpressCustomSetupCommandKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisExpressCustomSetupCommandKey)(nil)).Elem()
}

func (o IntegrationRuntimeSsisExpressCustomSetupCommandKeyOutput) ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyOutput() IntegrationRuntimeSsisExpressCustomSetupCommandKeyOutput {
	return o
}

func (o IntegrationRuntimeSsisExpressCustomSetupCommandKeyOutput) ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressCustomSetupCommandKeyOutput {
	return o
}

// A `keyVaultSecretReference` block as defined below.
func (o IntegrationRuntimeSsisExpressCustomSetupCommandKeyOutput) KeyVaultPassword() IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisExpressCustomSetupCommandKey) *IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPassword {
		return v.KeyVaultPassword
	}).(IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput)
}

// The password for the target device.
func (o IntegrationRuntimeSsisExpressCustomSetupCommandKeyOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisExpressCustomSetupCommandKey) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The target computer or domain name.
func (o IntegrationRuntimeSsisExpressCustomSetupCommandKeyOutput) TargetName() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisExpressCustomSetupCommandKey) string { return v.TargetName }).(pulumi.StringOutput)
}

// The username for the target device.
func (o IntegrationRuntimeSsisExpressCustomSetupCommandKeyOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisExpressCustomSetupCommandKey) string { return v.UserName }).(pulumi.StringOutput)
}

type IntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRuntimeSsisExpressCustomSetupCommandKey)(nil)).Elem()
}

func (o IntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayOutput) ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayOutput() IntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayOutput {
	return o
}

func (o IntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayOutput) ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayOutput {
	return o
}

func (o IntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayOutput) Index(i pulumi.IntInput) IntegrationRuntimeSsisExpressCustomSetupCommandKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationRuntimeSsisExpressCustomSetupCommandKey {
		return vs[0].([]IntegrationRuntimeSsisExpressCustomSetupCommandKey)[vs[1].(int)]
	}).(IntegrationRuntimeSsisExpressCustomSetupCommandKeyOutput)
}

type IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPassword struct {
	// Specifies the name of an existing Key Vault Data Factory Linked Service.
	LinkedServiceName string `pulumi:"linkedServiceName"`
	// A map of parameters to associate with the Key Vault Data Factory Linked Service.
	Parameters map[string]string `pulumi:"parameters"`
	// Specifies the secret name in Azure Key Vault.
	SecretName string `pulumi:"secretName"`
	// Specifies the secret version in Azure Key Vault.
	SecretVersion *string `pulumi:"secretVersion"`
}

// IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordInput is an input type that accepts IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordArgs and IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordInput` via:
//
//	IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordArgs{...}
type IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordOutput() IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordOutput
	ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordOutputWithContext(context.Context) IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordOutput
}

type IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordArgs struct {
	// Specifies the name of an existing Key Vault Data Factory Linked Service.
	LinkedServiceName pulumi.StringInput `pulumi:"linkedServiceName"`
	// A map of parameters to associate with the Key Vault Data Factory Linked Service.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
	// Specifies the secret name in Azure Key Vault.
	SecretName pulumi.StringInput `pulumi:"secretName"`
	// Specifies the secret version in Azure Key Vault.
	SecretVersion pulumi.StringPtrInput `pulumi:"secretVersion"`
}

func (IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPassword)(nil)).Elem()
}

func (i IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordArgs) ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordOutput() IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordOutput {
	return i.ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordArgs) ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordOutput)
}

func (i IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordArgs) ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput() IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput {
	return i.ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordArgs) ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordOutput).ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutputWithContext(ctx)
}

// IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrInput is an input type that accepts IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordArgs, IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtr and IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrInput` via:
//
//	        IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordArgs{...}
//
//	or:
//
//	        nil
type IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput() IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput
	ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutputWithContext(context.Context) IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput
}

type integrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrType IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordArgs

func IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtr(v *IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordArgs) IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrInput {
	return (*integrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrType)(v)
}

func (*integrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPassword)(nil)).Elem()
}

func (i *integrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrType) ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput() IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput {
	return i.ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutputWithContext(context.Background())
}

func (i *integrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrType) ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput)
}

type IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPassword)(nil)).Elem()
}

func (o IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordOutput) ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordOutput() IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordOutput {
	return o
}

func (o IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordOutput) ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordOutput {
	return o
}

func (o IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordOutput) ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput() IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput {
	return o.ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutputWithContext(context.Background())
}

func (o IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordOutput) ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPassword) *IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPassword {
		return &v
	}).(IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput)
}

// Specifies the name of an existing Key Vault Data Factory Linked Service.
func (o IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordOutput) LinkedServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPassword) string {
		return v.LinkedServiceName
	}).(pulumi.StringOutput)
}

// A map of parameters to associate with the Key Vault Data Factory Linked Service.
func (o IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPassword) map[string]string {
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

// Specifies the secret name in Azure Key Vault.
func (o IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPassword) string { return v.SecretName }).(pulumi.StringOutput)
}

// Specifies the secret version in Azure Key Vault.
func (o IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPassword) *string {
		return v.SecretVersion
	}).(pulumi.StringPtrOutput)
}

type IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPassword)(nil)).Elem()
}

func (o IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput) ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput() IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput {
	return o
}

func (o IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput) ToIntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput {
	return o
}

func (o IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput) Elem() IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPassword) IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPassword {
		if v != nil {
			return *v
		}
		var ret IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPassword
		return ret
	}).(IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordOutput)
}

// Specifies the name of an existing Key Vault Data Factory Linked Service.
func (o IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput) LinkedServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPassword) *string {
		if v == nil {
			return nil
		}
		return &v.LinkedServiceName
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the Key Vault Data Factory Linked Service.
func (o IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPassword) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

// Specifies the secret name in Azure Key Vault.
func (o IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPassword) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

// Specifies the secret version in Azure Key Vault.
func (o IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPassword) *string {
		if v == nil {
			return nil
		}
		return v.SecretVersion
	}).(pulumi.StringPtrOutput)
}

type IntegrationRuntimeSsisExpressCustomSetupComponent struct {
	// A `keyVaultSecretReference` block as defined below.
	KeyVaultLicense *IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicense `pulumi:"keyVaultLicense"`
	// The license used for the Component.
	License *string `pulumi:"license"`
	// The Component Name installed for the Azure-SSIS Integration Runtime.
	Name string `pulumi:"name"`
}

// IntegrationRuntimeSsisExpressCustomSetupComponentInput is an input type that accepts IntegrationRuntimeSsisExpressCustomSetupComponentArgs and IntegrationRuntimeSsisExpressCustomSetupComponentOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisExpressCustomSetupComponentInput` via:
//
//	IntegrationRuntimeSsisExpressCustomSetupComponentArgs{...}
type IntegrationRuntimeSsisExpressCustomSetupComponentInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisExpressCustomSetupComponentOutput() IntegrationRuntimeSsisExpressCustomSetupComponentOutput
	ToIntegrationRuntimeSsisExpressCustomSetupComponentOutputWithContext(context.Context) IntegrationRuntimeSsisExpressCustomSetupComponentOutput
}

type IntegrationRuntimeSsisExpressCustomSetupComponentArgs struct {
	// A `keyVaultSecretReference` block as defined below.
	KeyVaultLicense IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrInput `pulumi:"keyVaultLicense"`
	// The license used for the Component.
	License pulumi.StringPtrInput `pulumi:"license"`
	// The Component Name installed for the Azure-SSIS Integration Runtime.
	Name pulumi.StringInput `pulumi:"name"`
}

func (IntegrationRuntimeSsisExpressCustomSetupComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisExpressCustomSetupComponent)(nil)).Elem()
}

func (i IntegrationRuntimeSsisExpressCustomSetupComponentArgs) ToIntegrationRuntimeSsisExpressCustomSetupComponentOutput() IntegrationRuntimeSsisExpressCustomSetupComponentOutput {
	return i.ToIntegrationRuntimeSsisExpressCustomSetupComponentOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisExpressCustomSetupComponentArgs) ToIntegrationRuntimeSsisExpressCustomSetupComponentOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressCustomSetupComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisExpressCustomSetupComponentOutput)
}

// IntegrationRuntimeSsisExpressCustomSetupComponentArrayInput is an input type that accepts IntegrationRuntimeSsisExpressCustomSetupComponentArray and IntegrationRuntimeSsisExpressCustomSetupComponentArrayOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisExpressCustomSetupComponentArrayInput` via:
//
//	IntegrationRuntimeSsisExpressCustomSetupComponentArray{ IntegrationRuntimeSsisExpressCustomSetupComponentArgs{...} }
type IntegrationRuntimeSsisExpressCustomSetupComponentArrayInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisExpressCustomSetupComponentArrayOutput() IntegrationRuntimeSsisExpressCustomSetupComponentArrayOutput
	ToIntegrationRuntimeSsisExpressCustomSetupComponentArrayOutputWithContext(context.Context) IntegrationRuntimeSsisExpressCustomSetupComponentArrayOutput
}

type IntegrationRuntimeSsisExpressCustomSetupComponentArray []IntegrationRuntimeSsisExpressCustomSetupComponentInput

func (IntegrationRuntimeSsisExpressCustomSetupComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRuntimeSsisExpressCustomSetupComponent)(nil)).Elem()
}

func (i IntegrationRuntimeSsisExpressCustomSetupComponentArray) ToIntegrationRuntimeSsisExpressCustomSetupComponentArrayOutput() IntegrationRuntimeSsisExpressCustomSetupComponentArrayOutput {
	return i.ToIntegrationRuntimeSsisExpressCustomSetupComponentArrayOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisExpressCustomSetupComponentArray) ToIntegrationRuntimeSsisExpressCustomSetupComponentArrayOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressCustomSetupComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisExpressCustomSetupComponentArrayOutput)
}

type IntegrationRuntimeSsisExpressCustomSetupComponentOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisExpressCustomSetupComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisExpressCustomSetupComponent)(nil)).Elem()
}

func (o IntegrationRuntimeSsisExpressCustomSetupComponentOutput) ToIntegrationRuntimeSsisExpressCustomSetupComponentOutput() IntegrationRuntimeSsisExpressCustomSetupComponentOutput {
	return o
}

func (o IntegrationRuntimeSsisExpressCustomSetupComponentOutput) ToIntegrationRuntimeSsisExpressCustomSetupComponentOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressCustomSetupComponentOutput {
	return o
}

// A `keyVaultSecretReference` block as defined below.
func (o IntegrationRuntimeSsisExpressCustomSetupComponentOutput) KeyVaultLicense() IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisExpressCustomSetupComponent) *IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicense {
		return v.KeyVaultLicense
	}).(IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput)
}

// The license used for the Component.
func (o IntegrationRuntimeSsisExpressCustomSetupComponentOutput) License() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisExpressCustomSetupComponent) *string { return v.License }).(pulumi.StringPtrOutput)
}

// The Component Name installed for the Azure-SSIS Integration Runtime.
func (o IntegrationRuntimeSsisExpressCustomSetupComponentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisExpressCustomSetupComponent) string { return v.Name }).(pulumi.StringOutput)
}

type IntegrationRuntimeSsisExpressCustomSetupComponentArrayOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisExpressCustomSetupComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRuntimeSsisExpressCustomSetupComponent)(nil)).Elem()
}

func (o IntegrationRuntimeSsisExpressCustomSetupComponentArrayOutput) ToIntegrationRuntimeSsisExpressCustomSetupComponentArrayOutput() IntegrationRuntimeSsisExpressCustomSetupComponentArrayOutput {
	return o
}

func (o IntegrationRuntimeSsisExpressCustomSetupComponentArrayOutput) ToIntegrationRuntimeSsisExpressCustomSetupComponentArrayOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressCustomSetupComponentArrayOutput {
	return o
}

func (o IntegrationRuntimeSsisExpressCustomSetupComponentArrayOutput) Index(i pulumi.IntInput) IntegrationRuntimeSsisExpressCustomSetupComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationRuntimeSsisExpressCustomSetupComponent {
		return vs[0].([]IntegrationRuntimeSsisExpressCustomSetupComponent)[vs[1].(int)]
	}).(IntegrationRuntimeSsisExpressCustomSetupComponentOutput)
}

type IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicense struct {
	// Specifies the name of an existing Key Vault Data Factory Linked Service.
	LinkedServiceName string `pulumi:"linkedServiceName"`
	// A map of parameters to associate with the Key Vault Data Factory Linked Service.
	Parameters map[string]string `pulumi:"parameters"`
	// Specifies the secret name in Azure Key Vault.
	SecretName string `pulumi:"secretName"`
	// Specifies the secret version in Azure Key Vault.
	SecretVersion *string `pulumi:"secretVersion"`
}

// IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseInput is an input type that accepts IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseArgs and IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseInput` via:
//
//	IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseArgs{...}
type IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseOutput() IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseOutput
	ToIntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseOutputWithContext(context.Context) IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseOutput
}

type IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseArgs struct {
	// Specifies the name of an existing Key Vault Data Factory Linked Service.
	LinkedServiceName pulumi.StringInput `pulumi:"linkedServiceName"`
	// A map of parameters to associate with the Key Vault Data Factory Linked Service.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
	// Specifies the secret name in Azure Key Vault.
	SecretName pulumi.StringInput `pulumi:"secretName"`
	// Specifies the secret version in Azure Key Vault.
	SecretVersion pulumi.StringPtrInput `pulumi:"secretVersion"`
}

func (IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicense)(nil)).Elem()
}

func (i IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseArgs) ToIntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseOutput() IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseOutput {
	return i.ToIntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseArgs) ToIntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseOutput)
}

func (i IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseArgs) ToIntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput() IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput {
	return i.ToIntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseArgs) ToIntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseOutput).ToIntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutputWithContext(ctx)
}

// IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrInput is an input type that accepts IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseArgs, IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtr and IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrInput` via:
//
//	        IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseArgs{...}
//
//	or:
//
//	        nil
type IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput() IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput
	ToIntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutputWithContext(context.Context) IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput
}

type integrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrType IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseArgs

func IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtr(v *IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseArgs) IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrInput {
	return (*integrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrType)(v)
}

func (*integrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicense)(nil)).Elem()
}

func (i *integrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrType) ToIntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput() IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput {
	return i.ToIntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutputWithContext(context.Background())
}

func (i *integrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrType) ToIntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput)
}

type IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicense)(nil)).Elem()
}

func (o IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseOutput) ToIntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseOutput() IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseOutput {
	return o
}

func (o IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseOutput) ToIntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseOutput {
	return o
}

func (o IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseOutput) ToIntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput() IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput {
	return o.ToIntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutputWithContext(context.Background())
}

func (o IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseOutput) ToIntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicense) *IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicense {
		return &v
	}).(IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput)
}

// Specifies the name of an existing Key Vault Data Factory Linked Service.
func (o IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseOutput) LinkedServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicense) string {
		return v.LinkedServiceName
	}).(pulumi.StringOutput)
}

// A map of parameters to associate with the Key Vault Data Factory Linked Service.
func (o IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicense) map[string]string {
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

// Specifies the secret name in Azure Key Vault.
func (o IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicense) string { return v.SecretName }).(pulumi.StringOutput)
}

// Specifies the secret version in Azure Key Vault.
func (o IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicense) *string {
		return v.SecretVersion
	}).(pulumi.StringPtrOutput)
}

type IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicense)(nil)).Elem()
}

func (o IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput) ToIntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput() IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput {
	return o
}

func (o IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput) ToIntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput {
	return o
}

func (o IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput) Elem() IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicense) IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicense {
		if v != nil {
			return *v
		}
		var ret IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicense
		return ret
	}).(IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseOutput)
}

// Specifies the name of an existing Key Vault Data Factory Linked Service.
func (o IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput) LinkedServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicense) *string {
		if v == nil {
			return nil
		}
		return &v.LinkedServiceName
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the Key Vault Data Factory Linked Service.
func (o IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicense) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

// Specifies the secret name in Azure Key Vault.
func (o IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicense) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

// Specifies the secret version in Azure Key Vault.
func (o IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicense) *string {
		if v == nil {
			return nil
		}
		return v.SecretVersion
	}).(pulumi.StringPtrOutput)
}

type IntegrationRuntimeSsisExpressVnetIntegration struct {
	// id of the subnet to which the nodes of the Azure-SSIS Integration Runtime will be added.
	SubnetId string `pulumi:"subnetId"`
}

// IntegrationRuntimeSsisExpressVnetIntegrationInput is an input type that accepts IntegrationRuntimeSsisExpressVnetIntegrationArgs and IntegrationRuntimeSsisExpressVnetIntegrationOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisExpressVnetIntegrationInput` via:
//
//	IntegrationRuntimeSsisExpressVnetIntegrationArgs{...}
type IntegrationRuntimeSsisExpressVnetIntegrationInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisExpressVnetIntegrationOutput() IntegrationRuntimeSsisExpressVnetIntegrationOutput
	ToIntegrationRuntimeSsisExpressVnetIntegrationOutputWithContext(context.Context) IntegrationRuntimeSsisExpressVnetIntegrationOutput
}

type IntegrationRuntimeSsisExpressVnetIntegrationArgs struct {
	// id of the subnet to which the nodes of the Azure-SSIS Integration Runtime will be added.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (IntegrationRuntimeSsisExpressVnetIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisExpressVnetIntegration)(nil)).Elem()
}

func (i IntegrationRuntimeSsisExpressVnetIntegrationArgs) ToIntegrationRuntimeSsisExpressVnetIntegrationOutput() IntegrationRuntimeSsisExpressVnetIntegrationOutput {
	return i.ToIntegrationRuntimeSsisExpressVnetIntegrationOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisExpressVnetIntegrationArgs) ToIntegrationRuntimeSsisExpressVnetIntegrationOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressVnetIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisExpressVnetIntegrationOutput)
}

func (i IntegrationRuntimeSsisExpressVnetIntegrationArgs) ToIntegrationRuntimeSsisExpressVnetIntegrationPtrOutput() IntegrationRuntimeSsisExpressVnetIntegrationPtrOutput {
	return i.ToIntegrationRuntimeSsisExpressVnetIntegrationPtrOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisExpressVnetIntegrationArgs) ToIntegrationRuntimeSsisExpressVnetIntegrationPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressVnetIntegrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisExpressVnetIntegrationOutput).ToIntegrationRuntimeSsisExpressVnetIntegrationPtrOutputWithContext(ctx)
}

// IntegrationRuntimeSsisExpressVnetIntegrationPtrInput is an input type that accepts IntegrationRuntimeSsisExpressVnetIntegrationArgs, IntegrationRuntimeSsisExpressVnetIntegrationPtr and IntegrationRuntimeSsisExpressVnetIntegrationPtrOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisExpressVnetIntegrationPtrInput` via:
//
//	        IntegrationRuntimeSsisExpressVnetIntegrationArgs{...}
//
//	or:
//
//	        nil
type IntegrationRuntimeSsisExpressVnetIntegrationPtrInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisExpressVnetIntegrationPtrOutput() IntegrationRuntimeSsisExpressVnetIntegrationPtrOutput
	ToIntegrationRuntimeSsisExpressVnetIntegrationPtrOutputWithContext(context.Context) IntegrationRuntimeSsisExpressVnetIntegrationPtrOutput
}

type integrationRuntimeSsisExpressVnetIntegrationPtrType IntegrationRuntimeSsisExpressVnetIntegrationArgs

func IntegrationRuntimeSsisExpressVnetIntegrationPtr(v *IntegrationRuntimeSsisExpressVnetIntegrationArgs) IntegrationRuntimeSsisExpressVnetIntegrationPtrInput {
	return (*integrationRuntimeSsisExpressVnetIntegrationPtrType)(v)
}

func (*integrationRuntimeSsisExpressVnetIntegrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeSsisExpressVnetIntegration)(nil)).Elem()
}

func (i *integrationRuntimeSsisExpressVnetIntegrationPtrType) ToIntegrationRuntimeSsisExpressVnetIntegrationPtrOutput() IntegrationRuntimeSsisExpressVnetIntegrationPtrOutput {
	return i.ToIntegrationRuntimeSsisExpressVnetIntegrationPtrOutputWithContext(context.Background())
}

func (i *integrationRuntimeSsisExpressVnetIntegrationPtrType) ToIntegrationRuntimeSsisExpressVnetIntegrationPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressVnetIntegrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisExpressVnetIntegrationPtrOutput)
}

type IntegrationRuntimeSsisExpressVnetIntegrationOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisExpressVnetIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisExpressVnetIntegration)(nil)).Elem()
}

func (o IntegrationRuntimeSsisExpressVnetIntegrationOutput) ToIntegrationRuntimeSsisExpressVnetIntegrationOutput() IntegrationRuntimeSsisExpressVnetIntegrationOutput {
	return o
}

func (o IntegrationRuntimeSsisExpressVnetIntegrationOutput) ToIntegrationRuntimeSsisExpressVnetIntegrationOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressVnetIntegrationOutput {
	return o
}

func (o IntegrationRuntimeSsisExpressVnetIntegrationOutput) ToIntegrationRuntimeSsisExpressVnetIntegrationPtrOutput() IntegrationRuntimeSsisExpressVnetIntegrationPtrOutput {
	return o.ToIntegrationRuntimeSsisExpressVnetIntegrationPtrOutputWithContext(context.Background())
}

func (o IntegrationRuntimeSsisExpressVnetIntegrationOutput) ToIntegrationRuntimeSsisExpressVnetIntegrationPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressVnetIntegrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationRuntimeSsisExpressVnetIntegration) *IntegrationRuntimeSsisExpressVnetIntegration {
		return &v
	}).(IntegrationRuntimeSsisExpressVnetIntegrationPtrOutput)
}

// id of the subnet to which the nodes of the Azure-SSIS Integration Runtime will be added.
func (o IntegrationRuntimeSsisExpressVnetIntegrationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisExpressVnetIntegration) string { return v.SubnetId }).(pulumi.StringOutput)
}

type IntegrationRuntimeSsisExpressVnetIntegrationPtrOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisExpressVnetIntegrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeSsisExpressVnetIntegration)(nil)).Elem()
}

func (o IntegrationRuntimeSsisExpressVnetIntegrationPtrOutput) ToIntegrationRuntimeSsisExpressVnetIntegrationPtrOutput() IntegrationRuntimeSsisExpressVnetIntegrationPtrOutput {
	return o
}

func (o IntegrationRuntimeSsisExpressVnetIntegrationPtrOutput) ToIntegrationRuntimeSsisExpressVnetIntegrationPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisExpressVnetIntegrationPtrOutput {
	return o
}

func (o IntegrationRuntimeSsisExpressVnetIntegrationPtrOutput) Elem() IntegrationRuntimeSsisExpressVnetIntegrationOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisExpressVnetIntegration) IntegrationRuntimeSsisExpressVnetIntegration {
		if v != nil {
			return *v
		}
		var ret IntegrationRuntimeSsisExpressVnetIntegration
		return ret
	}).(IntegrationRuntimeSsisExpressVnetIntegrationOutput)
}

// id of the subnet to which the nodes of the Azure-SSIS Integration Runtime will be added.
func (o IntegrationRuntimeSsisExpressVnetIntegrationPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisExpressVnetIntegration) *string {
		if v == nil {
			return nil
		}
		return &v.SubnetId
	}).(pulumi.StringPtrOutput)
}

type IntegrationRuntimeSsisPackageStore struct {
	// Name of the Linked Service to associate with the packages.
	LinkedServiceName string `pulumi:"linkedServiceName"`
	// Name of the package store.
	Name string `pulumi:"name"`
}

// IntegrationRuntimeSsisPackageStoreInput is an input type that accepts IntegrationRuntimeSsisPackageStoreArgs and IntegrationRuntimeSsisPackageStoreOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisPackageStoreInput` via:
//
//	IntegrationRuntimeSsisPackageStoreArgs{...}
type IntegrationRuntimeSsisPackageStoreInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisPackageStoreOutput() IntegrationRuntimeSsisPackageStoreOutput
	ToIntegrationRuntimeSsisPackageStoreOutputWithContext(context.Context) IntegrationRuntimeSsisPackageStoreOutput
}

type IntegrationRuntimeSsisPackageStoreArgs struct {
	// Name of the Linked Service to associate with the packages.
	LinkedServiceName pulumi.StringInput `pulumi:"linkedServiceName"`
	// Name of the package store.
	Name pulumi.StringInput `pulumi:"name"`
}

func (IntegrationRuntimeSsisPackageStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisPackageStore)(nil)).Elem()
}

func (i IntegrationRuntimeSsisPackageStoreArgs) ToIntegrationRuntimeSsisPackageStoreOutput() IntegrationRuntimeSsisPackageStoreOutput {
	return i.ToIntegrationRuntimeSsisPackageStoreOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisPackageStoreArgs) ToIntegrationRuntimeSsisPackageStoreOutputWithContext(ctx context.Context) IntegrationRuntimeSsisPackageStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisPackageStoreOutput)
}

// IntegrationRuntimeSsisPackageStoreArrayInput is an input type that accepts IntegrationRuntimeSsisPackageStoreArray and IntegrationRuntimeSsisPackageStoreArrayOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisPackageStoreArrayInput` via:
//
//	IntegrationRuntimeSsisPackageStoreArray{ IntegrationRuntimeSsisPackageStoreArgs{...} }
type IntegrationRuntimeSsisPackageStoreArrayInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisPackageStoreArrayOutput() IntegrationRuntimeSsisPackageStoreArrayOutput
	ToIntegrationRuntimeSsisPackageStoreArrayOutputWithContext(context.Context) IntegrationRuntimeSsisPackageStoreArrayOutput
}

type IntegrationRuntimeSsisPackageStoreArray []IntegrationRuntimeSsisPackageStoreInput

func (IntegrationRuntimeSsisPackageStoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRuntimeSsisPackageStore)(nil)).Elem()
}

func (i IntegrationRuntimeSsisPackageStoreArray) ToIntegrationRuntimeSsisPackageStoreArrayOutput() IntegrationRuntimeSsisPackageStoreArrayOutput {
	return i.ToIntegrationRuntimeSsisPackageStoreArrayOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisPackageStoreArray) ToIntegrationRuntimeSsisPackageStoreArrayOutputWithContext(ctx context.Context) IntegrationRuntimeSsisPackageStoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisPackageStoreArrayOutput)
}

type IntegrationRuntimeSsisPackageStoreOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisPackageStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisPackageStore)(nil)).Elem()
}

func (o IntegrationRuntimeSsisPackageStoreOutput) ToIntegrationRuntimeSsisPackageStoreOutput() IntegrationRuntimeSsisPackageStoreOutput {
	return o
}

func (o IntegrationRuntimeSsisPackageStoreOutput) ToIntegrationRuntimeSsisPackageStoreOutputWithContext(ctx context.Context) IntegrationRuntimeSsisPackageStoreOutput {
	return o
}

// Name of the Linked Service to associate with the packages.
func (o IntegrationRuntimeSsisPackageStoreOutput) LinkedServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisPackageStore) string { return v.LinkedServiceName }).(pulumi.StringOutput)
}

// Name of the package store.
func (o IntegrationRuntimeSsisPackageStoreOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisPackageStore) string { return v.Name }).(pulumi.StringOutput)
}

type IntegrationRuntimeSsisPackageStoreArrayOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisPackageStoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRuntimeSsisPackageStore)(nil)).Elem()
}

func (o IntegrationRuntimeSsisPackageStoreArrayOutput) ToIntegrationRuntimeSsisPackageStoreArrayOutput() IntegrationRuntimeSsisPackageStoreArrayOutput {
	return o
}

func (o IntegrationRuntimeSsisPackageStoreArrayOutput) ToIntegrationRuntimeSsisPackageStoreArrayOutputWithContext(ctx context.Context) IntegrationRuntimeSsisPackageStoreArrayOutput {
	return o
}

func (o IntegrationRuntimeSsisPackageStoreArrayOutput) Index(i pulumi.IntInput) IntegrationRuntimeSsisPackageStoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationRuntimeSsisPackageStore {
		return vs[0].([]IntegrationRuntimeSsisPackageStore)[vs[1].(int)]
	}).(IntegrationRuntimeSsisPackageStoreOutput)
}

type IntegrationRuntimeSsisProxy struct {
	// The path in the data store to be used when moving data between Self-Hosted and Azure-SSIS Integration Runtimes.
	Path *string `pulumi:"path"`
	// Name of Self Hosted Integration Runtime as a proxy.
	SelfHostedIntegrationRuntimeName string `pulumi:"selfHostedIntegrationRuntimeName"`
	// Name of Azure Blob Storage linked service to reference the staging data store to be used when moving data between self-hosted and Azure-SSIS integration runtimes.
	StagingStorageLinkedServiceName string `pulumi:"stagingStorageLinkedServiceName"`
}

// IntegrationRuntimeSsisProxyInput is an input type that accepts IntegrationRuntimeSsisProxyArgs and IntegrationRuntimeSsisProxyOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisProxyInput` via:
//
//	IntegrationRuntimeSsisProxyArgs{...}
type IntegrationRuntimeSsisProxyInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisProxyOutput() IntegrationRuntimeSsisProxyOutput
	ToIntegrationRuntimeSsisProxyOutputWithContext(context.Context) IntegrationRuntimeSsisProxyOutput
}

type IntegrationRuntimeSsisProxyArgs struct {
	// The path in the data store to be used when moving data between Self-Hosted and Azure-SSIS Integration Runtimes.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Name of Self Hosted Integration Runtime as a proxy.
	SelfHostedIntegrationRuntimeName pulumi.StringInput `pulumi:"selfHostedIntegrationRuntimeName"`
	// Name of Azure Blob Storage linked service to reference the staging data store to be used when moving data between self-hosted and Azure-SSIS integration runtimes.
	StagingStorageLinkedServiceName pulumi.StringInput `pulumi:"stagingStorageLinkedServiceName"`
}

func (IntegrationRuntimeSsisProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisProxy)(nil)).Elem()
}

func (i IntegrationRuntimeSsisProxyArgs) ToIntegrationRuntimeSsisProxyOutput() IntegrationRuntimeSsisProxyOutput {
	return i.ToIntegrationRuntimeSsisProxyOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisProxyArgs) ToIntegrationRuntimeSsisProxyOutputWithContext(ctx context.Context) IntegrationRuntimeSsisProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisProxyOutput)
}

func (i IntegrationRuntimeSsisProxyArgs) ToIntegrationRuntimeSsisProxyPtrOutput() IntegrationRuntimeSsisProxyPtrOutput {
	return i.ToIntegrationRuntimeSsisProxyPtrOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisProxyArgs) ToIntegrationRuntimeSsisProxyPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisProxyOutput).ToIntegrationRuntimeSsisProxyPtrOutputWithContext(ctx)
}

// IntegrationRuntimeSsisProxyPtrInput is an input type that accepts IntegrationRuntimeSsisProxyArgs, IntegrationRuntimeSsisProxyPtr and IntegrationRuntimeSsisProxyPtrOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisProxyPtrInput` via:
//
//	        IntegrationRuntimeSsisProxyArgs{...}
//
//	or:
//
//	        nil
type IntegrationRuntimeSsisProxyPtrInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisProxyPtrOutput() IntegrationRuntimeSsisProxyPtrOutput
	ToIntegrationRuntimeSsisProxyPtrOutputWithContext(context.Context) IntegrationRuntimeSsisProxyPtrOutput
}

type integrationRuntimeSsisProxyPtrType IntegrationRuntimeSsisProxyArgs

func IntegrationRuntimeSsisProxyPtr(v *IntegrationRuntimeSsisProxyArgs) IntegrationRuntimeSsisProxyPtrInput {
	return (*integrationRuntimeSsisProxyPtrType)(v)
}

func (*integrationRuntimeSsisProxyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeSsisProxy)(nil)).Elem()
}

func (i *integrationRuntimeSsisProxyPtrType) ToIntegrationRuntimeSsisProxyPtrOutput() IntegrationRuntimeSsisProxyPtrOutput {
	return i.ToIntegrationRuntimeSsisProxyPtrOutputWithContext(context.Background())
}

func (i *integrationRuntimeSsisProxyPtrType) ToIntegrationRuntimeSsisProxyPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisProxyPtrOutput)
}

type IntegrationRuntimeSsisProxyOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisProxy)(nil)).Elem()
}

func (o IntegrationRuntimeSsisProxyOutput) ToIntegrationRuntimeSsisProxyOutput() IntegrationRuntimeSsisProxyOutput {
	return o
}

func (o IntegrationRuntimeSsisProxyOutput) ToIntegrationRuntimeSsisProxyOutputWithContext(ctx context.Context) IntegrationRuntimeSsisProxyOutput {
	return o
}

func (o IntegrationRuntimeSsisProxyOutput) ToIntegrationRuntimeSsisProxyPtrOutput() IntegrationRuntimeSsisProxyPtrOutput {
	return o.ToIntegrationRuntimeSsisProxyPtrOutputWithContext(context.Background())
}

func (o IntegrationRuntimeSsisProxyOutput) ToIntegrationRuntimeSsisProxyPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisProxyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationRuntimeSsisProxy) *IntegrationRuntimeSsisProxy {
		return &v
	}).(IntegrationRuntimeSsisProxyPtrOutput)
}

// The path in the data store to be used when moving data between Self-Hosted and Azure-SSIS Integration Runtimes.
func (o IntegrationRuntimeSsisProxyOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisProxy) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Name of Self Hosted Integration Runtime as a proxy.
func (o IntegrationRuntimeSsisProxyOutput) SelfHostedIntegrationRuntimeName() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisProxy) string { return v.SelfHostedIntegrationRuntimeName }).(pulumi.StringOutput)
}

// Name of Azure Blob Storage linked service to reference the staging data store to be used when moving data between self-hosted and Azure-SSIS integration runtimes.
func (o IntegrationRuntimeSsisProxyOutput) StagingStorageLinkedServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisProxy) string { return v.StagingStorageLinkedServiceName }).(pulumi.StringOutput)
}

type IntegrationRuntimeSsisProxyPtrOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisProxyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeSsisProxy)(nil)).Elem()
}

func (o IntegrationRuntimeSsisProxyPtrOutput) ToIntegrationRuntimeSsisProxyPtrOutput() IntegrationRuntimeSsisProxyPtrOutput {
	return o
}

func (o IntegrationRuntimeSsisProxyPtrOutput) ToIntegrationRuntimeSsisProxyPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisProxyPtrOutput {
	return o
}

func (o IntegrationRuntimeSsisProxyPtrOutput) Elem() IntegrationRuntimeSsisProxyOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisProxy) IntegrationRuntimeSsisProxy {
		if v != nil {
			return *v
		}
		var ret IntegrationRuntimeSsisProxy
		return ret
	}).(IntegrationRuntimeSsisProxyOutput)
}

// The path in the data store to be used when moving data between Self-Hosted and Azure-SSIS Integration Runtimes.
func (o IntegrationRuntimeSsisProxyPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisProxy) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Name of Self Hosted Integration Runtime as a proxy.
func (o IntegrationRuntimeSsisProxyPtrOutput) SelfHostedIntegrationRuntimeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisProxy) *string {
		if v == nil {
			return nil
		}
		return &v.SelfHostedIntegrationRuntimeName
	}).(pulumi.StringPtrOutput)
}

// Name of Azure Blob Storage linked service to reference the staging data store to be used when moving data between self-hosted and Azure-SSIS integration runtimes.
func (o IntegrationRuntimeSsisProxyPtrOutput) StagingStorageLinkedServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisProxy) *string {
		if v == nil {
			return nil
		}
		return &v.StagingStorageLinkedServiceName
	}).(pulumi.StringPtrOutput)
}

type IntegrationRuntimeSsisVnetIntegration struct {
	// Static public IP addresses for the Azure-SSIS Integration Runtime. The size must be 2.
	PublicIps []string `pulumi:"publicIps"`
	// id of the subnet to which the nodes of the Azure-SSIS Integration Runtime will be added.
	//
	// > **NOTE** Only one of `subnetId` and `subnetName` can be specified. If `subnetName` is specified, `vnetId` must be provided.
	SubnetId *string `pulumi:"subnetId"`
	// Name of the subnet to which the nodes of the Azure-SSIS Integration Runtime will be added.
	SubnetName *string `pulumi:"subnetName"`
	// ID of the virtual network to which the nodes of the Azure-SSIS Integration Runtime will be added.
	VnetId *string `pulumi:"vnetId"`
}

// IntegrationRuntimeSsisVnetIntegrationInput is an input type that accepts IntegrationRuntimeSsisVnetIntegrationArgs and IntegrationRuntimeSsisVnetIntegrationOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisVnetIntegrationInput` via:
//
//	IntegrationRuntimeSsisVnetIntegrationArgs{...}
type IntegrationRuntimeSsisVnetIntegrationInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisVnetIntegrationOutput() IntegrationRuntimeSsisVnetIntegrationOutput
	ToIntegrationRuntimeSsisVnetIntegrationOutputWithContext(context.Context) IntegrationRuntimeSsisVnetIntegrationOutput
}

type IntegrationRuntimeSsisVnetIntegrationArgs struct {
	// Static public IP addresses for the Azure-SSIS Integration Runtime. The size must be 2.
	PublicIps pulumi.StringArrayInput `pulumi:"publicIps"`
	// id of the subnet to which the nodes of the Azure-SSIS Integration Runtime will be added.
	//
	// > **NOTE** Only one of `subnetId` and `subnetName` can be specified. If `subnetName` is specified, `vnetId` must be provided.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// Name of the subnet to which the nodes of the Azure-SSIS Integration Runtime will be added.
	SubnetName pulumi.StringPtrInput `pulumi:"subnetName"`
	// ID of the virtual network to which the nodes of the Azure-SSIS Integration Runtime will be added.
	VnetId pulumi.StringPtrInput `pulumi:"vnetId"`
}

func (IntegrationRuntimeSsisVnetIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisVnetIntegration)(nil)).Elem()
}

func (i IntegrationRuntimeSsisVnetIntegrationArgs) ToIntegrationRuntimeSsisVnetIntegrationOutput() IntegrationRuntimeSsisVnetIntegrationOutput {
	return i.ToIntegrationRuntimeSsisVnetIntegrationOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisVnetIntegrationArgs) ToIntegrationRuntimeSsisVnetIntegrationOutputWithContext(ctx context.Context) IntegrationRuntimeSsisVnetIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisVnetIntegrationOutput)
}

func (i IntegrationRuntimeSsisVnetIntegrationArgs) ToIntegrationRuntimeSsisVnetIntegrationPtrOutput() IntegrationRuntimeSsisVnetIntegrationPtrOutput {
	return i.ToIntegrationRuntimeSsisVnetIntegrationPtrOutputWithContext(context.Background())
}

func (i IntegrationRuntimeSsisVnetIntegrationArgs) ToIntegrationRuntimeSsisVnetIntegrationPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisVnetIntegrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisVnetIntegrationOutput).ToIntegrationRuntimeSsisVnetIntegrationPtrOutputWithContext(ctx)
}

// IntegrationRuntimeSsisVnetIntegrationPtrInput is an input type that accepts IntegrationRuntimeSsisVnetIntegrationArgs, IntegrationRuntimeSsisVnetIntegrationPtr and IntegrationRuntimeSsisVnetIntegrationPtrOutput values.
// You can construct a concrete instance of `IntegrationRuntimeSsisVnetIntegrationPtrInput` via:
//
//	        IntegrationRuntimeSsisVnetIntegrationArgs{...}
//
//	or:
//
//	        nil
type IntegrationRuntimeSsisVnetIntegrationPtrInput interface {
	pulumi.Input

	ToIntegrationRuntimeSsisVnetIntegrationPtrOutput() IntegrationRuntimeSsisVnetIntegrationPtrOutput
	ToIntegrationRuntimeSsisVnetIntegrationPtrOutputWithContext(context.Context) IntegrationRuntimeSsisVnetIntegrationPtrOutput
}

type integrationRuntimeSsisVnetIntegrationPtrType IntegrationRuntimeSsisVnetIntegrationArgs

func IntegrationRuntimeSsisVnetIntegrationPtr(v *IntegrationRuntimeSsisVnetIntegrationArgs) IntegrationRuntimeSsisVnetIntegrationPtrInput {
	return (*integrationRuntimeSsisVnetIntegrationPtrType)(v)
}

func (*integrationRuntimeSsisVnetIntegrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeSsisVnetIntegration)(nil)).Elem()
}

func (i *integrationRuntimeSsisVnetIntegrationPtrType) ToIntegrationRuntimeSsisVnetIntegrationPtrOutput() IntegrationRuntimeSsisVnetIntegrationPtrOutput {
	return i.ToIntegrationRuntimeSsisVnetIntegrationPtrOutputWithContext(context.Background())
}

func (i *integrationRuntimeSsisVnetIntegrationPtrType) ToIntegrationRuntimeSsisVnetIntegrationPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisVnetIntegrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeSsisVnetIntegrationPtrOutput)
}

type IntegrationRuntimeSsisVnetIntegrationOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisVnetIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeSsisVnetIntegration)(nil)).Elem()
}

func (o IntegrationRuntimeSsisVnetIntegrationOutput) ToIntegrationRuntimeSsisVnetIntegrationOutput() IntegrationRuntimeSsisVnetIntegrationOutput {
	return o
}

func (o IntegrationRuntimeSsisVnetIntegrationOutput) ToIntegrationRuntimeSsisVnetIntegrationOutputWithContext(ctx context.Context) IntegrationRuntimeSsisVnetIntegrationOutput {
	return o
}

func (o IntegrationRuntimeSsisVnetIntegrationOutput) ToIntegrationRuntimeSsisVnetIntegrationPtrOutput() IntegrationRuntimeSsisVnetIntegrationPtrOutput {
	return o.ToIntegrationRuntimeSsisVnetIntegrationPtrOutputWithContext(context.Background())
}

func (o IntegrationRuntimeSsisVnetIntegrationOutput) ToIntegrationRuntimeSsisVnetIntegrationPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisVnetIntegrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationRuntimeSsisVnetIntegration) *IntegrationRuntimeSsisVnetIntegration {
		return &v
	}).(IntegrationRuntimeSsisVnetIntegrationPtrOutput)
}

// Static public IP addresses for the Azure-SSIS Integration Runtime. The size must be 2.
func (o IntegrationRuntimeSsisVnetIntegrationOutput) PublicIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisVnetIntegration) []string { return v.PublicIps }).(pulumi.StringArrayOutput)
}

// id of the subnet to which the nodes of the Azure-SSIS Integration Runtime will be added.
//
// > **NOTE** Only one of `subnetId` and `subnetName` can be specified. If `subnetName` is specified, `vnetId` must be provided.
func (o IntegrationRuntimeSsisVnetIntegrationOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisVnetIntegration) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// Name of the subnet to which the nodes of the Azure-SSIS Integration Runtime will be added.
func (o IntegrationRuntimeSsisVnetIntegrationOutput) SubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisVnetIntegration) *string { return v.SubnetName }).(pulumi.StringPtrOutput)
}

// ID of the virtual network to which the nodes of the Azure-SSIS Integration Runtime will be added.
func (o IntegrationRuntimeSsisVnetIntegrationOutput) VnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationRuntimeSsisVnetIntegration) *string { return v.VnetId }).(pulumi.StringPtrOutput)
}

type IntegrationRuntimeSsisVnetIntegrationPtrOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeSsisVnetIntegrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeSsisVnetIntegration)(nil)).Elem()
}

func (o IntegrationRuntimeSsisVnetIntegrationPtrOutput) ToIntegrationRuntimeSsisVnetIntegrationPtrOutput() IntegrationRuntimeSsisVnetIntegrationPtrOutput {
	return o
}

func (o IntegrationRuntimeSsisVnetIntegrationPtrOutput) ToIntegrationRuntimeSsisVnetIntegrationPtrOutputWithContext(ctx context.Context) IntegrationRuntimeSsisVnetIntegrationPtrOutput {
	return o
}

func (o IntegrationRuntimeSsisVnetIntegrationPtrOutput) Elem() IntegrationRuntimeSsisVnetIntegrationOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisVnetIntegration) IntegrationRuntimeSsisVnetIntegration {
		if v != nil {
			return *v
		}
		var ret IntegrationRuntimeSsisVnetIntegration
		return ret
	}).(IntegrationRuntimeSsisVnetIntegrationOutput)
}

// Static public IP addresses for the Azure-SSIS Integration Runtime. The size must be 2.
func (o IntegrationRuntimeSsisVnetIntegrationPtrOutput) PublicIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisVnetIntegration) []string {
		if v == nil {
			return nil
		}
		return v.PublicIps
	}).(pulumi.StringArrayOutput)
}

// id of the subnet to which the nodes of the Azure-SSIS Integration Runtime will be added.
//
// > **NOTE** Only one of `subnetId` and `subnetName` can be specified. If `subnetName` is specified, `vnetId` must be provided.
func (o IntegrationRuntimeSsisVnetIntegrationPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisVnetIntegration) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// Name of the subnet to which the nodes of the Azure-SSIS Integration Runtime will be added.
func (o IntegrationRuntimeSsisVnetIntegrationPtrOutput) SubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisVnetIntegration) *string {
		if v == nil {
			return nil
		}
		return v.SubnetName
	}).(pulumi.StringPtrOutput)
}

// ID of the virtual network to which the nodes of the Azure-SSIS Integration Runtime will be added.
func (o IntegrationRuntimeSsisVnetIntegrationPtrOutput) VnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationRuntimeSsisVnetIntegration) *string {
		if v == nil {
			return nil
		}
		return v.VnetId
	}).(pulumi.StringPtrOutput)
}

type LinkedCustomServiceIntegrationRuntime struct {
	// The integration runtime reference to associate with the Data Factory Linked Service.
	Name string `pulumi:"name"`
	// A map of parameters to associate with the integration runtime.
	Parameters map[string]string `pulumi:"parameters"`
}

// LinkedCustomServiceIntegrationRuntimeInput is an input type that accepts LinkedCustomServiceIntegrationRuntimeArgs and LinkedCustomServiceIntegrationRuntimeOutput values.
// You can construct a concrete instance of `LinkedCustomServiceIntegrationRuntimeInput` via:
//
//	LinkedCustomServiceIntegrationRuntimeArgs{...}
type LinkedCustomServiceIntegrationRuntimeInput interface {
	pulumi.Input

	ToLinkedCustomServiceIntegrationRuntimeOutput() LinkedCustomServiceIntegrationRuntimeOutput
	ToLinkedCustomServiceIntegrationRuntimeOutputWithContext(context.Context) LinkedCustomServiceIntegrationRuntimeOutput
}

type LinkedCustomServiceIntegrationRuntimeArgs struct {
	// The integration runtime reference to associate with the Data Factory Linked Service.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the integration runtime.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (LinkedCustomServiceIntegrationRuntimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedCustomServiceIntegrationRuntime)(nil)).Elem()
}

func (i LinkedCustomServiceIntegrationRuntimeArgs) ToLinkedCustomServiceIntegrationRuntimeOutput() LinkedCustomServiceIntegrationRuntimeOutput {
	return i.ToLinkedCustomServiceIntegrationRuntimeOutputWithContext(context.Background())
}

func (i LinkedCustomServiceIntegrationRuntimeArgs) ToLinkedCustomServiceIntegrationRuntimeOutputWithContext(ctx context.Context) LinkedCustomServiceIntegrationRuntimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedCustomServiceIntegrationRuntimeOutput)
}

func (i LinkedCustomServiceIntegrationRuntimeArgs) ToLinkedCustomServiceIntegrationRuntimePtrOutput() LinkedCustomServiceIntegrationRuntimePtrOutput {
	return i.ToLinkedCustomServiceIntegrationRuntimePtrOutputWithContext(context.Background())
}

func (i LinkedCustomServiceIntegrationRuntimeArgs) ToLinkedCustomServiceIntegrationRuntimePtrOutputWithContext(ctx context.Context) LinkedCustomServiceIntegrationRuntimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedCustomServiceIntegrationRuntimeOutput).ToLinkedCustomServiceIntegrationRuntimePtrOutputWithContext(ctx)
}

// LinkedCustomServiceIntegrationRuntimePtrInput is an input type that accepts LinkedCustomServiceIntegrationRuntimeArgs, LinkedCustomServiceIntegrationRuntimePtr and LinkedCustomServiceIntegrationRuntimePtrOutput values.
// You can construct a concrete instance of `LinkedCustomServiceIntegrationRuntimePtrInput` via:
//
//	        LinkedCustomServiceIntegrationRuntimeArgs{...}
//
//	or:
//
//	        nil
type LinkedCustomServiceIntegrationRuntimePtrInput interface {
	pulumi.Input

	ToLinkedCustomServiceIntegrationRuntimePtrOutput() LinkedCustomServiceIntegrationRuntimePtrOutput
	ToLinkedCustomServiceIntegrationRuntimePtrOutputWithContext(context.Context) LinkedCustomServiceIntegrationRuntimePtrOutput
}

type linkedCustomServiceIntegrationRuntimePtrType LinkedCustomServiceIntegrationRuntimeArgs

func LinkedCustomServiceIntegrationRuntimePtr(v *LinkedCustomServiceIntegrationRuntimeArgs) LinkedCustomServiceIntegrationRuntimePtrInput {
	return (*linkedCustomServiceIntegrationRuntimePtrType)(v)
}

func (*linkedCustomServiceIntegrationRuntimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedCustomServiceIntegrationRuntime)(nil)).Elem()
}

func (i *linkedCustomServiceIntegrationRuntimePtrType) ToLinkedCustomServiceIntegrationRuntimePtrOutput() LinkedCustomServiceIntegrationRuntimePtrOutput {
	return i.ToLinkedCustomServiceIntegrationRuntimePtrOutputWithContext(context.Background())
}

func (i *linkedCustomServiceIntegrationRuntimePtrType) ToLinkedCustomServiceIntegrationRuntimePtrOutputWithContext(ctx context.Context) LinkedCustomServiceIntegrationRuntimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedCustomServiceIntegrationRuntimePtrOutput)
}

type LinkedCustomServiceIntegrationRuntimeOutput struct{ *pulumi.OutputState }

func (LinkedCustomServiceIntegrationRuntimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedCustomServiceIntegrationRuntime)(nil)).Elem()
}

func (o LinkedCustomServiceIntegrationRuntimeOutput) ToLinkedCustomServiceIntegrationRuntimeOutput() LinkedCustomServiceIntegrationRuntimeOutput {
	return o
}

func (o LinkedCustomServiceIntegrationRuntimeOutput) ToLinkedCustomServiceIntegrationRuntimeOutputWithContext(ctx context.Context) LinkedCustomServiceIntegrationRuntimeOutput {
	return o
}

func (o LinkedCustomServiceIntegrationRuntimeOutput) ToLinkedCustomServiceIntegrationRuntimePtrOutput() LinkedCustomServiceIntegrationRuntimePtrOutput {
	return o.ToLinkedCustomServiceIntegrationRuntimePtrOutputWithContext(context.Background())
}

func (o LinkedCustomServiceIntegrationRuntimeOutput) ToLinkedCustomServiceIntegrationRuntimePtrOutputWithContext(ctx context.Context) LinkedCustomServiceIntegrationRuntimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinkedCustomServiceIntegrationRuntime) *LinkedCustomServiceIntegrationRuntime {
		return &v
	}).(LinkedCustomServiceIntegrationRuntimePtrOutput)
}

// The integration runtime reference to associate with the Data Factory Linked Service.
func (o LinkedCustomServiceIntegrationRuntimeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedCustomServiceIntegrationRuntime) string { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the integration runtime.
func (o LinkedCustomServiceIntegrationRuntimeOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v LinkedCustomServiceIntegrationRuntime) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type LinkedCustomServiceIntegrationRuntimePtrOutput struct{ *pulumi.OutputState }

func (LinkedCustomServiceIntegrationRuntimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedCustomServiceIntegrationRuntime)(nil)).Elem()
}

func (o LinkedCustomServiceIntegrationRuntimePtrOutput) ToLinkedCustomServiceIntegrationRuntimePtrOutput() LinkedCustomServiceIntegrationRuntimePtrOutput {
	return o
}

func (o LinkedCustomServiceIntegrationRuntimePtrOutput) ToLinkedCustomServiceIntegrationRuntimePtrOutputWithContext(ctx context.Context) LinkedCustomServiceIntegrationRuntimePtrOutput {
	return o
}

func (o LinkedCustomServiceIntegrationRuntimePtrOutput) Elem() LinkedCustomServiceIntegrationRuntimeOutput {
	return o.ApplyT(func(v *LinkedCustomServiceIntegrationRuntime) LinkedCustomServiceIntegrationRuntime {
		if v != nil {
			return *v
		}
		var ret LinkedCustomServiceIntegrationRuntime
		return ret
	}).(LinkedCustomServiceIntegrationRuntimeOutput)
}

// The integration runtime reference to associate with the Data Factory Linked Service.
func (o LinkedCustomServiceIntegrationRuntimePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedCustomServiceIntegrationRuntime) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the integration runtime.
func (o LinkedCustomServiceIntegrationRuntimePtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LinkedCustomServiceIntegrationRuntime) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type LinkedServiceAzureBlobStorageKeyVaultSasToken struct {
	// Specifies the name of an existing Key Vault Data Factory Linked Service.
	LinkedServiceName string `pulumi:"linkedServiceName"`
	// Specifies the secret name in Azure Key Vault that stores the SAS token.
	SecretName string `pulumi:"secretName"`
}

// LinkedServiceAzureBlobStorageKeyVaultSasTokenInput is an input type that accepts LinkedServiceAzureBlobStorageKeyVaultSasTokenArgs and LinkedServiceAzureBlobStorageKeyVaultSasTokenOutput values.
// You can construct a concrete instance of `LinkedServiceAzureBlobStorageKeyVaultSasTokenInput` via:
//
//	LinkedServiceAzureBlobStorageKeyVaultSasTokenArgs{...}
type LinkedServiceAzureBlobStorageKeyVaultSasTokenInput interface {
	pulumi.Input

	ToLinkedServiceAzureBlobStorageKeyVaultSasTokenOutput() LinkedServiceAzureBlobStorageKeyVaultSasTokenOutput
	ToLinkedServiceAzureBlobStorageKeyVaultSasTokenOutputWithContext(context.Context) LinkedServiceAzureBlobStorageKeyVaultSasTokenOutput
}

type LinkedServiceAzureBlobStorageKeyVaultSasTokenArgs struct {
	// Specifies the name of an existing Key Vault Data Factory Linked Service.
	LinkedServiceName pulumi.StringInput `pulumi:"linkedServiceName"`
	// Specifies the secret name in Azure Key Vault that stores the SAS token.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (LinkedServiceAzureBlobStorageKeyVaultSasTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceAzureBlobStorageKeyVaultSasToken)(nil)).Elem()
}

func (i LinkedServiceAzureBlobStorageKeyVaultSasTokenArgs) ToLinkedServiceAzureBlobStorageKeyVaultSasTokenOutput() LinkedServiceAzureBlobStorageKeyVaultSasTokenOutput {
	return i.ToLinkedServiceAzureBlobStorageKeyVaultSasTokenOutputWithContext(context.Background())
}

func (i LinkedServiceAzureBlobStorageKeyVaultSasTokenArgs) ToLinkedServiceAzureBlobStorageKeyVaultSasTokenOutputWithContext(ctx context.Context) LinkedServiceAzureBlobStorageKeyVaultSasTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceAzureBlobStorageKeyVaultSasTokenOutput)
}

func (i LinkedServiceAzureBlobStorageKeyVaultSasTokenArgs) ToLinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutput() LinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutput {
	return i.ToLinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutputWithContext(context.Background())
}

func (i LinkedServiceAzureBlobStorageKeyVaultSasTokenArgs) ToLinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutputWithContext(ctx context.Context) LinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceAzureBlobStorageKeyVaultSasTokenOutput).ToLinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutputWithContext(ctx)
}

// LinkedServiceAzureBlobStorageKeyVaultSasTokenPtrInput is an input type that accepts LinkedServiceAzureBlobStorageKeyVaultSasTokenArgs, LinkedServiceAzureBlobStorageKeyVaultSasTokenPtr and LinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutput values.
// You can construct a concrete instance of `LinkedServiceAzureBlobStorageKeyVaultSasTokenPtrInput` via:
//
//	        LinkedServiceAzureBlobStorageKeyVaultSasTokenArgs{...}
//
//	or:
//
//	        nil
type LinkedServiceAzureBlobStorageKeyVaultSasTokenPtrInput interface {
	pulumi.Input

	ToLinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutput() LinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutput
	ToLinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutputWithContext(context.Context) LinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutput
}

type linkedServiceAzureBlobStorageKeyVaultSasTokenPtrType LinkedServiceAzureBlobStorageKeyVaultSasTokenArgs

func LinkedServiceAzureBlobStorageKeyVaultSasTokenPtr(v *LinkedServiceAzureBlobStorageKeyVaultSasTokenArgs) LinkedServiceAzureBlobStorageKeyVaultSasTokenPtrInput {
	return (*linkedServiceAzureBlobStorageKeyVaultSasTokenPtrType)(v)
}

func (*linkedServiceAzureBlobStorageKeyVaultSasTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceAzureBlobStorageKeyVaultSasToken)(nil)).Elem()
}

func (i *linkedServiceAzureBlobStorageKeyVaultSasTokenPtrType) ToLinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutput() LinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutput {
	return i.ToLinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutputWithContext(context.Background())
}

func (i *linkedServiceAzureBlobStorageKeyVaultSasTokenPtrType) ToLinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutputWithContext(ctx context.Context) LinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutput)
}

type LinkedServiceAzureBlobStorageKeyVaultSasTokenOutput struct{ *pulumi.OutputState }

func (LinkedServiceAzureBlobStorageKeyVaultSasTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceAzureBlobStorageKeyVaultSasToken)(nil)).Elem()
}

func (o LinkedServiceAzureBlobStorageKeyVaultSasTokenOutput) ToLinkedServiceAzureBlobStorageKeyVaultSasTokenOutput() LinkedServiceAzureBlobStorageKeyVaultSasTokenOutput {
	return o
}

func (o LinkedServiceAzureBlobStorageKeyVaultSasTokenOutput) ToLinkedServiceAzureBlobStorageKeyVaultSasTokenOutputWithContext(ctx context.Context) LinkedServiceAzureBlobStorageKeyVaultSasTokenOutput {
	return o
}

func (o LinkedServiceAzureBlobStorageKeyVaultSasTokenOutput) ToLinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutput() LinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutput {
	return o.ToLinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutputWithContext(context.Background())
}

func (o LinkedServiceAzureBlobStorageKeyVaultSasTokenOutput) ToLinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutputWithContext(ctx context.Context) LinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinkedServiceAzureBlobStorageKeyVaultSasToken) *LinkedServiceAzureBlobStorageKeyVaultSasToken {
		return &v
	}).(LinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutput)
}

// Specifies the name of an existing Key Vault Data Factory Linked Service.
func (o LinkedServiceAzureBlobStorageKeyVaultSasTokenOutput) LinkedServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceAzureBlobStorageKeyVaultSasToken) string { return v.LinkedServiceName }).(pulumi.StringOutput)
}

// Specifies the secret name in Azure Key Vault that stores the SAS token.
func (o LinkedServiceAzureBlobStorageKeyVaultSasTokenOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceAzureBlobStorageKeyVaultSasToken) string { return v.SecretName }).(pulumi.StringOutput)
}

type LinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutput struct{ *pulumi.OutputState }

func (LinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceAzureBlobStorageKeyVaultSasToken)(nil)).Elem()
}

func (o LinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutput) ToLinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutput() LinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutput {
	return o
}

func (o LinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutput) ToLinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutputWithContext(ctx context.Context) LinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutput {
	return o
}

func (o LinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutput) Elem() LinkedServiceAzureBlobStorageKeyVaultSasTokenOutput {
	return o.ApplyT(func(v *LinkedServiceAzureBlobStorageKeyVaultSasToken) LinkedServiceAzureBlobStorageKeyVaultSasToken {
		if v != nil {
			return *v
		}
		var ret LinkedServiceAzureBlobStorageKeyVaultSasToken
		return ret
	}).(LinkedServiceAzureBlobStorageKeyVaultSasTokenOutput)
}

// Specifies the name of an existing Key Vault Data Factory Linked Service.
func (o LinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutput) LinkedServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceAzureBlobStorageKeyVaultSasToken) *string {
		if v == nil {
			return nil
		}
		return &v.LinkedServiceName
	}).(pulumi.StringPtrOutput)
}

// Specifies the secret name in Azure Key Vault that stores the SAS token.
func (o LinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceAzureBlobStorageKeyVaultSasToken) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKey struct {
	// Specifies the name of an existing Key Vault Data Factory Linked Service.
	LinkedServiceName string `pulumi:"linkedServiceName"`
	// Specifies the secret name in Azure Key Vault that stores the Service Principal key.
	SecretName string `pulumi:"secretName"`
}

// LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyInput is an input type that accepts LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyArgs and LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyOutput values.
// You can construct a concrete instance of `LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyInput` via:
//
//	LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyArgs{...}
type LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyInput interface {
	pulumi.Input

	ToLinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyOutput() LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyOutput
	ToLinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyOutputWithContext(context.Context) LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyOutput
}

type LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyArgs struct {
	// Specifies the name of an existing Key Vault Data Factory Linked Service.
	LinkedServiceName pulumi.StringInput `pulumi:"linkedServiceName"`
	// Specifies the secret name in Azure Key Vault that stores the Service Principal key.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKey)(nil)).Elem()
}

func (i LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyArgs) ToLinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyOutput() LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyOutput {
	return i.ToLinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyOutputWithContext(context.Background())
}

func (i LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyArgs) ToLinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyOutputWithContext(ctx context.Context) LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyOutput)
}

func (i LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyArgs) ToLinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutput() LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutput {
	return i.ToLinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutputWithContext(context.Background())
}

func (i LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyArgs) ToLinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutputWithContext(ctx context.Context) LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyOutput).ToLinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutputWithContext(ctx)
}

// LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrInput is an input type that accepts LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyArgs, LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtr and LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutput values.
// You can construct a concrete instance of `LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrInput` via:
//
//	        LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyArgs{...}
//
//	or:
//
//	        nil
type LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrInput interface {
	pulumi.Input

	ToLinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutput() LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutput
	ToLinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutputWithContext(context.Context) LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutput
}

type linkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrType LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyArgs

func LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtr(v *LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyArgs) LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrInput {
	return (*linkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrType)(v)
}

func (*linkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKey)(nil)).Elem()
}

func (i *linkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrType) ToLinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutput() LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutput {
	return i.ToLinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutputWithContext(context.Background())
}

func (i *linkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrType) ToLinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutputWithContext(ctx context.Context) LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutput)
}

type LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyOutput struct{ *pulumi.OutputState }

func (LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKey)(nil)).Elem()
}

func (o LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyOutput) ToLinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyOutput() LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyOutput {
	return o
}

func (o LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyOutput) ToLinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyOutputWithContext(ctx context.Context) LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyOutput {
	return o
}

func (o LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyOutput) ToLinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutput() LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutput {
	return o.ToLinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutputWithContext(context.Background())
}

func (o LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyOutput) ToLinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutputWithContext(ctx context.Context) LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKey) *LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKey {
		return &v
	}).(LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutput)
}

// Specifies the name of an existing Key Vault Data Factory Linked Service.
func (o LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyOutput) LinkedServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKey) string {
		return v.LinkedServiceName
	}).(pulumi.StringOutput)
}

// Specifies the secret name in Azure Key Vault that stores the Service Principal key.
func (o LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKey) string { return v.SecretName }).(pulumi.StringOutput)
}

type LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutput struct{ *pulumi.OutputState }

func (LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKey)(nil)).Elem()
}

func (o LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutput) ToLinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutput() LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutput {
	return o
}

func (o LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutput) ToLinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutputWithContext(ctx context.Context) LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutput {
	return o
}

func (o LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutput) Elem() LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyOutput {
	return o.ApplyT(func(v *LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKey) LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKey {
		if v != nil {
			return *v
		}
		var ret LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKey
		return ret
	}).(LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyOutput)
}

// Specifies the name of an existing Key Vault Data Factory Linked Service.
func (o LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutput) LinkedServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKey) *string {
		if v == nil {
			return nil
		}
		return &v.LinkedServiceName
	}).(pulumi.StringPtrOutput)
}

// Specifies the secret name in Azure Key Vault that stores the Service Principal key.
func (o LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKey) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type LinkedServiceAzureDatabricksInstancePool struct {
	// Spark version of a the cluster.
	ClusterVersion string `pulumi:"clusterVersion"`
	// Identifier of the instance pool within the linked ADB instance.
	InstancePoolId string `pulumi:"instancePoolId"`
	// The max number of worker nodes. Set this value if you want to enable autoscaling between the `minNumberOfWorkers` and this value. Omit this value to use a fixed number of workers defined in the `minNumberOfWorkers` property.
	MaxNumberOfWorkers *int `pulumi:"maxNumberOfWorkers"`
	// The minimum number of worker nodes. Defaults to `1`.
	MinNumberOfWorkers *int `pulumi:"minNumberOfWorkers"`
}

// LinkedServiceAzureDatabricksInstancePoolInput is an input type that accepts LinkedServiceAzureDatabricksInstancePoolArgs and LinkedServiceAzureDatabricksInstancePoolOutput values.
// You can construct a concrete instance of `LinkedServiceAzureDatabricksInstancePoolInput` via:
//
//	LinkedServiceAzureDatabricksInstancePoolArgs{...}
type LinkedServiceAzureDatabricksInstancePoolInput interface {
	pulumi.Input

	ToLinkedServiceAzureDatabricksInstancePoolOutput() LinkedServiceAzureDatabricksInstancePoolOutput
	ToLinkedServiceAzureDatabricksInstancePoolOutputWithContext(context.Context) LinkedServiceAzureDatabricksInstancePoolOutput
}

type LinkedServiceAzureDatabricksInstancePoolArgs struct {
	// Spark version of a the cluster.
	ClusterVersion pulumi.StringInput `pulumi:"clusterVersion"`
	// Identifier of the instance pool within the linked ADB instance.
	InstancePoolId pulumi.StringInput `pulumi:"instancePoolId"`
	// The max number of worker nodes. Set this value if you want to enable autoscaling between the `minNumberOfWorkers` and this value. Omit this value to use a fixed number of workers defined in the `minNumberOfWorkers` property.
	MaxNumberOfWorkers pulumi.IntPtrInput `pulumi:"maxNumberOfWorkers"`
	// The minimum number of worker nodes. Defaults to `1`.
	MinNumberOfWorkers pulumi.IntPtrInput `pulumi:"minNumberOfWorkers"`
}

func (LinkedServiceAzureDatabricksInstancePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceAzureDatabricksInstancePool)(nil)).Elem()
}

func (i LinkedServiceAzureDatabricksInstancePoolArgs) ToLinkedServiceAzureDatabricksInstancePoolOutput() LinkedServiceAzureDatabricksInstancePoolOutput {
	return i.ToLinkedServiceAzureDatabricksInstancePoolOutputWithContext(context.Background())
}

func (i LinkedServiceAzureDatabricksInstancePoolArgs) ToLinkedServiceAzureDatabricksInstancePoolOutputWithContext(ctx context.Context) LinkedServiceAzureDatabricksInstancePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceAzureDatabricksInstancePoolOutput)
}

func (i LinkedServiceAzureDatabricksInstancePoolArgs) ToLinkedServiceAzureDatabricksInstancePoolPtrOutput() LinkedServiceAzureDatabricksInstancePoolPtrOutput {
	return i.ToLinkedServiceAzureDatabricksInstancePoolPtrOutputWithContext(context.Background())
}

func (i LinkedServiceAzureDatabricksInstancePoolArgs) ToLinkedServiceAzureDatabricksInstancePoolPtrOutputWithContext(ctx context.Context) LinkedServiceAzureDatabricksInstancePoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceAzureDatabricksInstancePoolOutput).ToLinkedServiceAzureDatabricksInstancePoolPtrOutputWithContext(ctx)
}

// LinkedServiceAzureDatabricksInstancePoolPtrInput is an input type that accepts LinkedServiceAzureDatabricksInstancePoolArgs, LinkedServiceAzureDatabricksInstancePoolPtr and LinkedServiceAzureDatabricksInstancePoolPtrOutput values.
// You can construct a concrete instance of `LinkedServiceAzureDatabricksInstancePoolPtrInput` via:
//
//	        LinkedServiceAzureDatabricksInstancePoolArgs{...}
//
//	or:
//
//	        nil
type LinkedServiceAzureDatabricksInstancePoolPtrInput interface {
	pulumi.Input

	ToLinkedServiceAzureDatabricksInstancePoolPtrOutput() LinkedServiceAzureDatabricksInstancePoolPtrOutput
	ToLinkedServiceAzureDatabricksInstancePoolPtrOutputWithContext(context.Context) LinkedServiceAzureDatabricksInstancePoolPtrOutput
}

type linkedServiceAzureDatabricksInstancePoolPtrType LinkedServiceAzureDatabricksInstancePoolArgs

func LinkedServiceAzureDatabricksInstancePoolPtr(v *LinkedServiceAzureDatabricksInstancePoolArgs) LinkedServiceAzureDatabricksInstancePoolPtrInput {
	return (*linkedServiceAzureDatabricksInstancePoolPtrType)(v)
}

func (*linkedServiceAzureDatabricksInstancePoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceAzureDatabricksInstancePool)(nil)).Elem()
}

func (i *linkedServiceAzureDatabricksInstancePoolPtrType) ToLinkedServiceAzureDatabricksInstancePoolPtrOutput() LinkedServiceAzureDatabricksInstancePoolPtrOutput {
	return i.ToLinkedServiceAzureDatabricksInstancePoolPtrOutputWithContext(context.Background())
}

func (i *linkedServiceAzureDatabricksInstancePoolPtrType) ToLinkedServiceAzureDatabricksInstancePoolPtrOutputWithContext(ctx context.Context) LinkedServiceAzureDatabricksInstancePoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceAzureDatabricksInstancePoolPtrOutput)
}

type LinkedServiceAzureDatabricksInstancePoolOutput struct{ *pulumi.OutputState }

func (LinkedServiceAzureDatabricksInstancePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceAzureDatabricksInstancePool)(nil)).Elem()
}

func (o LinkedServiceAzureDatabricksInstancePoolOutput) ToLinkedServiceAzureDatabricksInstancePoolOutput() LinkedServiceAzureDatabricksInstancePoolOutput {
	return o
}

func (o LinkedServiceAzureDatabricksInstancePoolOutput) ToLinkedServiceAzureDatabricksInstancePoolOutputWithContext(ctx context.Context) LinkedServiceAzureDatabricksInstancePoolOutput {
	return o
}

func (o LinkedServiceAzureDatabricksInstancePoolOutput) ToLinkedServiceAzureDatabricksInstancePoolPtrOutput() LinkedServiceAzureDatabricksInstancePoolPtrOutput {
	return o.ToLinkedServiceAzureDatabricksInstancePoolPtrOutputWithContext(context.Background())
}

func (o LinkedServiceAzureDatabricksInstancePoolOutput) ToLinkedServiceAzureDatabricksInstancePoolPtrOutputWithContext(ctx context.Context) LinkedServiceAzureDatabricksInstancePoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinkedServiceAzureDatabricksInstancePool) *LinkedServiceAzureDatabricksInstancePool {
		return &v
	}).(LinkedServiceAzureDatabricksInstancePoolPtrOutput)
}

// Spark version of a the cluster.
func (o LinkedServiceAzureDatabricksInstancePoolOutput) ClusterVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceAzureDatabricksInstancePool) string { return v.ClusterVersion }).(pulumi.StringOutput)
}

// Identifier of the instance pool within the linked ADB instance.
func (o LinkedServiceAzureDatabricksInstancePoolOutput) InstancePoolId() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceAzureDatabricksInstancePool) string { return v.InstancePoolId }).(pulumi.StringOutput)
}

// The max number of worker nodes. Set this value if you want to enable autoscaling between the `minNumberOfWorkers` and this value. Omit this value to use a fixed number of workers defined in the `minNumberOfWorkers` property.
func (o LinkedServiceAzureDatabricksInstancePoolOutput) MaxNumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LinkedServiceAzureDatabricksInstancePool) *int { return v.MaxNumberOfWorkers }).(pulumi.IntPtrOutput)
}

// The minimum number of worker nodes. Defaults to `1`.
func (o LinkedServiceAzureDatabricksInstancePoolOutput) MinNumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LinkedServiceAzureDatabricksInstancePool) *int { return v.MinNumberOfWorkers }).(pulumi.IntPtrOutput)
}

type LinkedServiceAzureDatabricksInstancePoolPtrOutput struct{ *pulumi.OutputState }

func (LinkedServiceAzureDatabricksInstancePoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceAzureDatabricksInstancePool)(nil)).Elem()
}

func (o LinkedServiceAzureDatabricksInstancePoolPtrOutput) ToLinkedServiceAzureDatabricksInstancePoolPtrOutput() LinkedServiceAzureDatabricksInstancePoolPtrOutput {
	return o
}

func (o LinkedServiceAzureDatabricksInstancePoolPtrOutput) ToLinkedServiceAzureDatabricksInstancePoolPtrOutputWithContext(ctx context.Context) LinkedServiceAzureDatabricksInstancePoolPtrOutput {
	return o
}

func (o LinkedServiceAzureDatabricksInstancePoolPtrOutput) Elem() LinkedServiceAzureDatabricksInstancePoolOutput {
	return o.ApplyT(func(v *LinkedServiceAzureDatabricksInstancePool) LinkedServiceAzureDatabricksInstancePool {
		if v != nil {
			return *v
		}
		var ret LinkedServiceAzureDatabricksInstancePool
		return ret
	}).(LinkedServiceAzureDatabricksInstancePoolOutput)
}

// Spark version of a the cluster.
func (o LinkedServiceAzureDatabricksInstancePoolPtrOutput) ClusterVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceAzureDatabricksInstancePool) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterVersion
	}).(pulumi.StringPtrOutput)
}

// Identifier of the instance pool within the linked ADB instance.
func (o LinkedServiceAzureDatabricksInstancePoolPtrOutput) InstancePoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceAzureDatabricksInstancePool) *string {
		if v == nil {
			return nil
		}
		return &v.InstancePoolId
	}).(pulumi.StringPtrOutput)
}

// The max number of worker nodes. Set this value if you want to enable autoscaling between the `minNumberOfWorkers` and this value. Omit this value to use a fixed number of workers defined in the `minNumberOfWorkers` property.
func (o LinkedServiceAzureDatabricksInstancePoolPtrOutput) MaxNumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LinkedServiceAzureDatabricksInstancePool) *int {
		if v == nil {
			return nil
		}
		return v.MaxNumberOfWorkers
	}).(pulumi.IntPtrOutput)
}

// The minimum number of worker nodes. Defaults to `1`.
func (o LinkedServiceAzureDatabricksInstancePoolPtrOutput) MinNumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LinkedServiceAzureDatabricksInstancePool) *int {
		if v == nil {
			return nil
		}
		return v.MinNumberOfWorkers
	}).(pulumi.IntPtrOutput)
}

type LinkedServiceAzureDatabricksKeyVaultPassword struct {
	// Specifies the name of an existing Key Vault Data Factory Linked Service.
	LinkedServiceName string `pulumi:"linkedServiceName"`
	// Specifies the secret name in Azure Key Vault that stores ADB access token.
	SecretName string `pulumi:"secretName"`
}

// LinkedServiceAzureDatabricksKeyVaultPasswordInput is an input type that accepts LinkedServiceAzureDatabricksKeyVaultPasswordArgs and LinkedServiceAzureDatabricksKeyVaultPasswordOutput values.
// You can construct a concrete instance of `LinkedServiceAzureDatabricksKeyVaultPasswordInput` via:
//
//	LinkedServiceAzureDatabricksKeyVaultPasswordArgs{...}
type LinkedServiceAzureDatabricksKeyVaultPasswordInput interface {
	pulumi.Input

	ToLinkedServiceAzureDatabricksKeyVaultPasswordOutput() LinkedServiceAzureDatabricksKeyVaultPasswordOutput
	ToLinkedServiceAzureDatabricksKeyVaultPasswordOutputWithContext(context.Context) LinkedServiceAzureDatabricksKeyVaultPasswordOutput
}

type LinkedServiceAzureDatabricksKeyVaultPasswordArgs struct {
	// Specifies the name of an existing Key Vault Data Factory Linked Service.
	LinkedServiceName pulumi.StringInput `pulumi:"linkedServiceName"`
	// Specifies the secret name in Azure Key Vault that stores ADB access token.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (LinkedServiceAzureDatabricksKeyVaultPasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceAzureDatabricksKeyVaultPassword)(nil)).Elem()
}

func (i LinkedServiceAzureDatabricksKeyVaultPasswordArgs) ToLinkedServiceAzureDatabricksKeyVaultPasswordOutput() LinkedServiceAzureDatabricksKeyVaultPasswordOutput {
	return i.ToLinkedServiceAzureDatabricksKeyVaultPasswordOutputWithContext(context.Background())
}

func (i LinkedServiceAzureDatabricksKeyVaultPasswordArgs) ToLinkedServiceAzureDatabricksKeyVaultPasswordOutputWithContext(ctx context.Context) LinkedServiceAzureDatabricksKeyVaultPasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceAzureDatabricksKeyVaultPasswordOutput)
}

func (i LinkedServiceAzureDatabricksKeyVaultPasswordArgs) ToLinkedServiceAzureDatabricksKeyVaultPasswordPtrOutput() LinkedServiceAzureDatabricksKeyVaultPasswordPtrOutput {
	return i.ToLinkedServiceAzureDatabricksKeyVaultPasswordPtrOutputWithContext(context.Background())
}

func (i LinkedServiceAzureDatabricksKeyVaultPasswordArgs) ToLinkedServiceAzureDatabricksKeyVaultPasswordPtrOutputWithContext(ctx context.Context) LinkedServiceAzureDatabricksKeyVaultPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceAzureDatabricksKeyVaultPasswordOutput).ToLinkedServiceAzureDatabricksKeyVaultPasswordPtrOutputWithContext(ctx)
}

// LinkedServiceAzureDatabricksKeyVaultPasswordPtrInput is an input type that accepts LinkedServiceAzureDatabricksKeyVaultPasswordArgs, LinkedServiceAzureDatabricksKeyVaultPasswordPtr and LinkedServiceAzureDatabricksKeyVaultPasswordPtrOutput values.
// You can construct a concrete instance of `LinkedServiceAzureDatabricksKeyVaultPasswordPtrInput` via:
//
//	        LinkedServiceAzureDatabricksKeyVaultPasswordArgs{...}
//
//	or:
//
//	        nil
type LinkedServiceAzureDatabricksKeyVaultPasswordPtrInput interface {
	pulumi.Input

	ToLinkedServiceAzureDatabricksKeyVaultPasswordPtrOutput() LinkedServiceAzureDatabricksKeyVaultPasswordPtrOutput
	ToLinkedServiceAzureDatabricksKeyVaultPasswordPtrOutputWithContext(context.Context) LinkedServiceAzureDatabricksKeyVaultPasswordPtrOutput
}

type linkedServiceAzureDatabricksKeyVaultPasswordPtrType LinkedServiceAzureDatabricksKeyVaultPasswordArgs

func LinkedServiceAzureDatabricksKeyVaultPasswordPtr(v *LinkedServiceAzureDatabricksKeyVaultPasswordArgs) LinkedServiceAzureDatabricksKeyVaultPasswordPtrInput {
	return (*linkedServiceAzureDatabricksKeyVaultPasswordPtrType)(v)
}

func (*linkedServiceAzureDatabricksKeyVaultPasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceAzureDatabricksKeyVaultPassword)(nil)).Elem()
}

func (i *linkedServiceAzureDatabricksKeyVaultPasswordPtrType) ToLinkedServiceAzureDatabricksKeyVaultPasswordPtrOutput() LinkedServiceAzureDatabricksKeyVaultPasswordPtrOutput {
	return i.ToLinkedServiceAzureDatabricksKeyVaultPasswordPtrOutputWithContext(context.Background())
}

func (i *linkedServiceAzureDatabricksKeyVaultPasswordPtrType) ToLinkedServiceAzureDatabricksKeyVaultPasswordPtrOutputWithContext(ctx context.Context) LinkedServiceAzureDatabricksKeyVaultPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceAzureDatabricksKeyVaultPasswordPtrOutput)
}

type LinkedServiceAzureDatabricksKeyVaultPasswordOutput struct{ *pulumi.OutputState }

func (LinkedServiceAzureDatabricksKeyVaultPasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceAzureDatabricksKeyVaultPassword)(nil)).Elem()
}

func (o LinkedServiceAzureDatabricksKeyVaultPasswordOutput) ToLinkedServiceAzureDatabricksKeyVaultPasswordOutput() LinkedServiceAzureDatabricksKeyVaultPasswordOutput {
	return o
}

func (o LinkedServiceAzureDatabricksKeyVaultPasswordOutput) ToLinkedServiceAzureDatabricksKeyVaultPasswordOutputWithContext(ctx context.Context) LinkedServiceAzureDatabricksKeyVaultPasswordOutput {
	return o
}

func (o LinkedServiceAzureDatabricksKeyVaultPasswordOutput) ToLinkedServiceAzureDatabricksKeyVaultPasswordPtrOutput() LinkedServiceAzureDatabricksKeyVaultPasswordPtrOutput {
	return o.ToLinkedServiceAzureDatabricksKeyVaultPasswordPtrOutputWithContext(context.Background())
}

func (o LinkedServiceAzureDatabricksKeyVaultPasswordOutput) ToLinkedServiceAzureDatabricksKeyVaultPasswordPtrOutputWithContext(ctx context.Context) LinkedServiceAzureDatabricksKeyVaultPasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinkedServiceAzureDatabricksKeyVaultPassword) *LinkedServiceAzureDatabricksKeyVaultPassword {
		return &v
	}).(LinkedServiceAzureDatabricksKeyVaultPasswordPtrOutput)
}

// Specifies the name of an existing Key Vault Data Factory Linked Service.
func (o LinkedServiceAzureDatabricksKeyVaultPasswordOutput) LinkedServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceAzureDatabricksKeyVaultPassword) string { return v.LinkedServiceName }).(pulumi.StringOutput)
}

// Specifies the secret name in Azure Key Vault that stores ADB access token.
func (o LinkedServiceAzureDatabricksKeyVaultPasswordOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceAzureDatabricksKeyVaultPassword) string { return v.SecretName }).(pulumi.StringOutput)
}

type LinkedServiceAzureDatabricksKeyVaultPasswordPtrOutput struct{ *pulumi.OutputState }

func (LinkedServiceAzureDatabricksKeyVaultPasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceAzureDatabricksKeyVaultPassword)(nil)).Elem()
}

func (o LinkedServiceAzureDatabricksKeyVaultPasswordPtrOutput) ToLinkedServiceAzureDatabricksKeyVaultPasswordPtrOutput() LinkedServiceAzureDatabricksKeyVaultPasswordPtrOutput {
	return o
}

func (o LinkedServiceAzureDatabricksKeyVaultPasswordPtrOutput) ToLinkedServiceAzureDatabricksKeyVaultPasswordPtrOutputWithContext(ctx context.Context) LinkedServiceAzureDatabricksKeyVaultPasswordPtrOutput {
	return o
}

func (o LinkedServiceAzureDatabricksKeyVaultPasswordPtrOutput) Elem() LinkedServiceAzureDatabricksKeyVaultPasswordOutput {
	return o.ApplyT(func(v *LinkedServiceAzureDatabricksKeyVaultPassword) LinkedServiceAzureDatabricksKeyVaultPassword {
		if v != nil {
			return *v
		}
		var ret LinkedServiceAzureDatabricksKeyVaultPassword
		return ret
	}).(LinkedServiceAzureDatabricksKeyVaultPasswordOutput)
}

// Specifies the name of an existing Key Vault Data Factory Linked Service.
func (o LinkedServiceAzureDatabricksKeyVaultPasswordPtrOutput) LinkedServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceAzureDatabricksKeyVaultPassword) *string {
		if v == nil {
			return nil
		}
		return &v.LinkedServiceName
	}).(pulumi.StringPtrOutput)
}

// Specifies the secret name in Azure Key Vault that stores ADB access token.
func (o LinkedServiceAzureDatabricksKeyVaultPasswordPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceAzureDatabricksKeyVaultPassword) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type LinkedServiceAzureDatabricksNewClusterConfig struct {
	// Spark version of a the cluster.
	ClusterVersion string `pulumi:"clusterVersion"`
	// Tags for the cluster resource.
	CustomTags map[string]string `pulumi:"customTags"`
	// Driver node type for the cluster.
	DriverNodeType *string `pulumi:"driverNodeType"`
	// User defined initialization scripts for the cluster.
	InitScripts []string `pulumi:"initScripts"`
	// Location to deliver Spark driver, worker, and event logs.
	LogDestination *string `pulumi:"logDestination"`
	// Specifies the maximum number of worker nodes. It should be between 1 and 25000.
	MaxNumberOfWorkers *int `pulumi:"maxNumberOfWorkers"`
	// Specifies the minimum number of worker nodes. It should be between 1 and 25000. It defaults to `1`.
	MinNumberOfWorkers *int `pulumi:"minNumberOfWorkers"`
	// Node type for the new cluster.
	NodeType string `pulumi:"nodeType"`
	// User-specified Spark configuration variables key-value pairs.
	SparkConfig map[string]string `pulumi:"sparkConfig"`
	// User-specified Spark environment variables key-value pairs.
	SparkEnvironmentVariables map[string]string `pulumi:"sparkEnvironmentVariables"`
}

// LinkedServiceAzureDatabricksNewClusterConfigInput is an input type that accepts LinkedServiceAzureDatabricksNewClusterConfigArgs and LinkedServiceAzureDatabricksNewClusterConfigOutput values.
// You can construct a concrete instance of `LinkedServiceAzureDatabricksNewClusterConfigInput` via:
//
//	LinkedServiceAzureDatabricksNewClusterConfigArgs{...}
type LinkedServiceAzureDatabricksNewClusterConfigInput interface {
	pulumi.Input

	ToLinkedServiceAzureDatabricksNewClusterConfigOutput() LinkedServiceAzureDatabricksNewClusterConfigOutput
	ToLinkedServiceAzureDatabricksNewClusterConfigOutputWithContext(context.Context) LinkedServiceAzureDatabricksNewClusterConfigOutput
}

type LinkedServiceAzureDatabricksNewClusterConfigArgs struct {
	// Spark version of a the cluster.
	ClusterVersion pulumi.StringInput `pulumi:"clusterVersion"`
	// Tags for the cluster resource.
	CustomTags pulumi.StringMapInput `pulumi:"customTags"`
	// Driver node type for the cluster.
	DriverNodeType pulumi.StringPtrInput `pulumi:"driverNodeType"`
	// User defined initialization scripts for the cluster.
	InitScripts pulumi.StringArrayInput `pulumi:"initScripts"`
	// Location to deliver Spark driver, worker, and event logs.
	LogDestination pulumi.StringPtrInput `pulumi:"logDestination"`
	// Specifies the maximum number of worker nodes. It should be between 1 and 25000.
	MaxNumberOfWorkers pulumi.IntPtrInput `pulumi:"maxNumberOfWorkers"`
	// Specifies the minimum number of worker nodes. It should be between 1 and 25000. It defaults to `1`.
	MinNumberOfWorkers pulumi.IntPtrInput `pulumi:"minNumberOfWorkers"`
	// Node type for the new cluster.
	NodeType pulumi.StringInput `pulumi:"nodeType"`
	// User-specified Spark configuration variables key-value pairs.
	SparkConfig pulumi.StringMapInput `pulumi:"sparkConfig"`
	// User-specified Spark environment variables key-value pairs.
	SparkEnvironmentVariables pulumi.StringMapInput `pulumi:"sparkEnvironmentVariables"`
}

func (LinkedServiceAzureDatabricksNewClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceAzureDatabricksNewClusterConfig)(nil)).Elem()
}

func (i LinkedServiceAzureDatabricksNewClusterConfigArgs) ToLinkedServiceAzureDatabricksNewClusterConfigOutput() LinkedServiceAzureDatabricksNewClusterConfigOutput {
	return i.ToLinkedServiceAzureDatabricksNewClusterConfigOutputWithContext(context.Background())
}

func (i LinkedServiceAzureDatabricksNewClusterConfigArgs) ToLinkedServiceAzureDatabricksNewClusterConfigOutputWithContext(ctx context.Context) LinkedServiceAzureDatabricksNewClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceAzureDatabricksNewClusterConfigOutput)
}

func (i LinkedServiceAzureDatabricksNewClusterConfigArgs) ToLinkedServiceAzureDatabricksNewClusterConfigPtrOutput() LinkedServiceAzureDatabricksNewClusterConfigPtrOutput {
	return i.ToLinkedServiceAzureDatabricksNewClusterConfigPtrOutputWithContext(context.Background())
}

func (i LinkedServiceAzureDatabricksNewClusterConfigArgs) ToLinkedServiceAzureDatabricksNewClusterConfigPtrOutputWithContext(ctx context.Context) LinkedServiceAzureDatabricksNewClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceAzureDatabricksNewClusterConfigOutput).ToLinkedServiceAzureDatabricksNewClusterConfigPtrOutputWithContext(ctx)
}

// LinkedServiceAzureDatabricksNewClusterConfigPtrInput is an input type that accepts LinkedServiceAzureDatabricksNewClusterConfigArgs, LinkedServiceAzureDatabricksNewClusterConfigPtr and LinkedServiceAzureDatabricksNewClusterConfigPtrOutput values.
// You can construct a concrete instance of `LinkedServiceAzureDatabricksNewClusterConfigPtrInput` via:
//
//	        LinkedServiceAzureDatabricksNewClusterConfigArgs{...}
//
//	or:
//
//	        nil
type LinkedServiceAzureDatabricksNewClusterConfigPtrInput interface {
	pulumi.Input

	ToLinkedServiceAzureDatabricksNewClusterConfigPtrOutput() LinkedServiceAzureDatabricksNewClusterConfigPtrOutput
	ToLinkedServiceAzureDatabricksNewClusterConfigPtrOutputWithContext(context.Context) LinkedServiceAzureDatabricksNewClusterConfigPtrOutput
}

type linkedServiceAzureDatabricksNewClusterConfigPtrType LinkedServiceAzureDatabricksNewClusterConfigArgs

func LinkedServiceAzureDatabricksNewClusterConfigPtr(v *LinkedServiceAzureDatabricksNewClusterConfigArgs) LinkedServiceAzureDatabricksNewClusterConfigPtrInput {
	return (*linkedServiceAzureDatabricksNewClusterConfigPtrType)(v)
}

func (*linkedServiceAzureDatabricksNewClusterConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceAzureDatabricksNewClusterConfig)(nil)).Elem()
}

func (i *linkedServiceAzureDatabricksNewClusterConfigPtrType) ToLinkedServiceAzureDatabricksNewClusterConfigPtrOutput() LinkedServiceAzureDatabricksNewClusterConfigPtrOutput {
	return i.ToLinkedServiceAzureDatabricksNewClusterConfigPtrOutputWithContext(context.Background())
}

func (i *linkedServiceAzureDatabricksNewClusterConfigPtrType) ToLinkedServiceAzureDatabricksNewClusterConfigPtrOutputWithContext(ctx context.Context) LinkedServiceAzureDatabricksNewClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceAzureDatabricksNewClusterConfigPtrOutput)
}

type LinkedServiceAzureDatabricksNewClusterConfigOutput struct{ *pulumi.OutputState }

func (LinkedServiceAzureDatabricksNewClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceAzureDatabricksNewClusterConfig)(nil)).Elem()
}

func (o LinkedServiceAzureDatabricksNewClusterConfigOutput) ToLinkedServiceAzureDatabricksNewClusterConfigOutput() LinkedServiceAzureDatabricksNewClusterConfigOutput {
	return o
}

func (o LinkedServiceAzureDatabricksNewClusterConfigOutput) ToLinkedServiceAzureDatabricksNewClusterConfigOutputWithContext(ctx context.Context) LinkedServiceAzureDatabricksNewClusterConfigOutput {
	return o
}

func (o LinkedServiceAzureDatabricksNewClusterConfigOutput) ToLinkedServiceAzureDatabricksNewClusterConfigPtrOutput() LinkedServiceAzureDatabricksNewClusterConfigPtrOutput {
	return o.ToLinkedServiceAzureDatabricksNewClusterConfigPtrOutputWithContext(context.Background())
}

func (o LinkedServiceAzureDatabricksNewClusterConfigOutput) ToLinkedServiceAzureDatabricksNewClusterConfigPtrOutputWithContext(ctx context.Context) LinkedServiceAzureDatabricksNewClusterConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinkedServiceAzureDatabricksNewClusterConfig) *LinkedServiceAzureDatabricksNewClusterConfig {
		return &v
	}).(LinkedServiceAzureDatabricksNewClusterConfigPtrOutput)
}

// Spark version of a the cluster.
func (o LinkedServiceAzureDatabricksNewClusterConfigOutput) ClusterVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceAzureDatabricksNewClusterConfig) string { return v.ClusterVersion }).(pulumi.StringOutput)
}

// Tags for the cluster resource.
func (o LinkedServiceAzureDatabricksNewClusterConfigOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LinkedServiceAzureDatabricksNewClusterConfig) map[string]string { return v.CustomTags }).(pulumi.StringMapOutput)
}

// Driver node type for the cluster.
func (o LinkedServiceAzureDatabricksNewClusterConfigOutput) DriverNodeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkedServiceAzureDatabricksNewClusterConfig) *string { return v.DriverNodeType }).(pulumi.StringPtrOutput)
}

// User defined initialization scripts for the cluster.
func (o LinkedServiceAzureDatabricksNewClusterConfigOutput) InitScripts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LinkedServiceAzureDatabricksNewClusterConfig) []string { return v.InitScripts }).(pulumi.StringArrayOutput)
}

// Location to deliver Spark driver, worker, and event logs.
func (o LinkedServiceAzureDatabricksNewClusterConfigOutput) LogDestination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinkedServiceAzureDatabricksNewClusterConfig) *string { return v.LogDestination }).(pulumi.StringPtrOutput)
}

// Specifies the maximum number of worker nodes. It should be between 1 and 25000.
func (o LinkedServiceAzureDatabricksNewClusterConfigOutput) MaxNumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LinkedServiceAzureDatabricksNewClusterConfig) *int { return v.MaxNumberOfWorkers }).(pulumi.IntPtrOutput)
}

// Specifies the minimum number of worker nodes. It should be between 1 and 25000. It defaults to `1`.
func (o LinkedServiceAzureDatabricksNewClusterConfigOutput) MinNumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LinkedServiceAzureDatabricksNewClusterConfig) *int { return v.MinNumberOfWorkers }).(pulumi.IntPtrOutput)
}

// Node type for the new cluster.
func (o LinkedServiceAzureDatabricksNewClusterConfigOutput) NodeType() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceAzureDatabricksNewClusterConfig) string { return v.NodeType }).(pulumi.StringOutput)
}

// User-specified Spark configuration variables key-value pairs.
func (o LinkedServiceAzureDatabricksNewClusterConfigOutput) SparkConfig() pulumi.StringMapOutput {
	return o.ApplyT(func(v LinkedServiceAzureDatabricksNewClusterConfig) map[string]string { return v.SparkConfig }).(pulumi.StringMapOutput)
}

// User-specified Spark environment variables key-value pairs.
func (o LinkedServiceAzureDatabricksNewClusterConfigOutput) SparkEnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v LinkedServiceAzureDatabricksNewClusterConfig) map[string]string {
		return v.SparkEnvironmentVariables
	}).(pulumi.StringMapOutput)
}

type LinkedServiceAzureDatabricksNewClusterConfigPtrOutput struct{ *pulumi.OutputState }

func (LinkedServiceAzureDatabricksNewClusterConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceAzureDatabricksNewClusterConfig)(nil)).Elem()
}

func (o LinkedServiceAzureDatabricksNewClusterConfigPtrOutput) ToLinkedServiceAzureDatabricksNewClusterConfigPtrOutput() LinkedServiceAzureDatabricksNewClusterConfigPtrOutput {
	return o
}

func (o LinkedServiceAzureDatabricksNewClusterConfigPtrOutput) ToLinkedServiceAzureDatabricksNewClusterConfigPtrOutputWithContext(ctx context.Context) LinkedServiceAzureDatabricksNewClusterConfigPtrOutput {
	return o
}

func (o LinkedServiceAzureDatabricksNewClusterConfigPtrOutput) Elem() LinkedServiceAzureDatabricksNewClusterConfigOutput {
	return o.ApplyT(func(v *LinkedServiceAzureDatabricksNewClusterConfig) LinkedServiceAzureDatabricksNewClusterConfig {
		if v != nil {
			return *v
		}
		var ret LinkedServiceAzureDatabricksNewClusterConfig
		return ret
	}).(LinkedServiceAzureDatabricksNewClusterConfigOutput)
}

// Spark version of a the cluster.
func (o LinkedServiceAzureDatabricksNewClusterConfigPtrOutput) ClusterVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceAzureDatabricksNewClusterConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterVersion
	}).(pulumi.StringPtrOutput)
}

// Tags for the cluster resource.
func (o LinkedServiceAzureDatabricksNewClusterConfigPtrOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LinkedServiceAzureDatabricksNewClusterConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomTags
	}).(pulumi.StringMapOutput)
}

// Driver node type for the cluster.
func (o LinkedServiceAzureDatabricksNewClusterConfigPtrOutput) DriverNodeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceAzureDatabricksNewClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.DriverNodeType
	}).(pulumi.StringPtrOutput)
}

// User defined initialization scripts for the cluster.
func (o LinkedServiceAzureDatabricksNewClusterConfigPtrOutput) InitScripts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LinkedServiceAzureDatabricksNewClusterConfig) []string {
		if v == nil {
			return nil
		}
		return v.InitScripts
	}).(pulumi.StringArrayOutput)
}

// Location to deliver Spark driver, worker, and event logs.
func (o LinkedServiceAzureDatabricksNewClusterConfigPtrOutput) LogDestination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceAzureDatabricksNewClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.LogDestination
	}).(pulumi.StringPtrOutput)
}

// Specifies the maximum number of worker nodes. It should be between 1 and 25000.
func (o LinkedServiceAzureDatabricksNewClusterConfigPtrOutput) MaxNumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LinkedServiceAzureDatabricksNewClusterConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxNumberOfWorkers
	}).(pulumi.IntPtrOutput)
}

// Specifies the minimum number of worker nodes. It should be between 1 and 25000. It defaults to `1`.
func (o LinkedServiceAzureDatabricksNewClusterConfigPtrOutput) MinNumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LinkedServiceAzureDatabricksNewClusterConfig) *int {
		if v == nil {
			return nil
		}
		return v.MinNumberOfWorkers
	}).(pulumi.IntPtrOutput)
}

// Node type for the new cluster.
func (o LinkedServiceAzureDatabricksNewClusterConfigPtrOutput) NodeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceAzureDatabricksNewClusterConfig) *string {
		if v == nil {
			return nil
		}
		return &v.NodeType
	}).(pulumi.StringPtrOutput)
}

// User-specified Spark configuration variables key-value pairs.
func (o LinkedServiceAzureDatabricksNewClusterConfigPtrOutput) SparkConfig() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LinkedServiceAzureDatabricksNewClusterConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.SparkConfig
	}).(pulumi.StringMapOutput)
}

// User-specified Spark environment variables key-value pairs.
func (o LinkedServiceAzureDatabricksNewClusterConfigPtrOutput) SparkEnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LinkedServiceAzureDatabricksNewClusterConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.SparkEnvironmentVariables
	}).(pulumi.StringMapOutput)
}

type LinkedServiceAzureFileStorageKeyVaultPassword struct {
	// Specifies the name of an existing Key Vault Data Factory Linked Service.
	LinkedServiceName string `pulumi:"linkedServiceName"`
	// Specifies the secret name in Azure Key Vault that stores Azure File Storage password.
	SecretName string `pulumi:"secretName"`
}

// LinkedServiceAzureFileStorageKeyVaultPasswordInput is an input type that accepts LinkedServiceAzureFileStorageKeyVaultPasswordArgs and LinkedServiceAzureFileStorageKeyVaultPasswordOutput values.
// You can construct a concrete instance of `LinkedServiceAzureFileStorageKeyVaultPasswordInput` via:
//
//	LinkedServiceAzureFileStorageKeyVaultPasswordArgs{...}
type LinkedServiceAzureFileStorageKeyVaultPasswordInput interface {
	pulumi.Input

	ToLinkedServiceAzureFileStorageKeyVaultPasswordOutput() LinkedServiceAzureFileStorageKeyVaultPasswordOutput
	ToLinkedServiceAzureFileStorageKeyVaultPasswordOutputWithContext(context.Context) LinkedServiceAzureFileStorageKeyVaultPasswordOutput
}

type LinkedServiceAzureFileStorageKeyVaultPasswordArgs struct {
	// Specifies the name of an existing Key Vault Data Factory Linked Service.
	LinkedServiceName pulumi.StringInput `pulumi:"linkedServiceName"`
	// Specifies the secret name in Azure Key Vault that stores Azure File Storage password.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (LinkedServiceAzureFileStorageKeyVaultPasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceAzureFileStorageKeyVaultPassword)(nil)).Elem()
}

func (i LinkedServiceAzureFileStorageKeyVaultPasswordArgs) ToLinkedServiceAzureFileStorageKeyVaultPasswordOutput() LinkedServiceAzureFileStorageKeyVaultPasswordOutput {
	return i.ToLinkedServiceAzureFileStorageKeyVaultPasswordOutputWithContext(context.Background())
}

func (i LinkedServiceAzureFileStorageKeyVaultPasswordArgs) ToLinkedServiceAzureFileStorageKeyVaultPasswordOutputWithContext(ctx context.Context) LinkedServiceAzureFileStorageKeyVaultPasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceAzureFileStorageKeyVaultPasswordOutput)
}

func (i LinkedServiceAzureFileStorageKeyVaultPasswordArgs) ToLinkedServiceAzureFileStorageKeyVaultPasswordPtrOutput() LinkedServiceAzureFileStorageKeyVaultPasswordPtrOutput {
	return i.ToLinkedServiceAzureFileStorageKeyVaultPasswordPtrOutputWithContext(context.Background())
}

func (i LinkedServiceAzureFileStorageKeyVaultPasswordArgs) ToLinkedServiceAzureFileStorageKeyVaultPasswordPtrOutputWithContext(ctx context.Context) LinkedServiceAzureFileStorageKeyVaultPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceAzureFileStorageKeyVaultPasswordOutput).ToLinkedServiceAzureFileStorageKeyVaultPasswordPtrOutputWithContext(ctx)
}

// LinkedServiceAzureFileStorageKeyVaultPasswordPtrInput is an input type that accepts LinkedServiceAzureFileStorageKeyVaultPasswordArgs, LinkedServiceAzureFileStorageKeyVaultPasswordPtr and LinkedServiceAzureFileStorageKeyVaultPasswordPtrOutput values.
// You can construct a concrete instance of `LinkedServiceAzureFileStorageKeyVaultPasswordPtrInput` via:
//
//	        LinkedServiceAzureFileStorageKeyVaultPasswordArgs{...}
//
//	or:
//
//	        nil
type LinkedServiceAzureFileStorageKeyVaultPasswordPtrInput interface {
	pulumi.Input

	ToLinkedServiceAzureFileStorageKeyVaultPasswordPtrOutput() LinkedServiceAzureFileStorageKeyVaultPasswordPtrOutput
	ToLinkedServiceAzureFileStorageKeyVaultPasswordPtrOutputWithContext(context.Context) LinkedServiceAzureFileStorageKeyVaultPasswordPtrOutput
}

type linkedServiceAzureFileStorageKeyVaultPasswordPtrType LinkedServiceAzureFileStorageKeyVaultPasswordArgs

func LinkedServiceAzureFileStorageKeyVaultPasswordPtr(v *LinkedServiceAzureFileStorageKeyVaultPasswordArgs) LinkedServiceAzureFileStorageKeyVaultPasswordPtrInput {
	return (*linkedServiceAzureFileStorageKeyVaultPasswordPtrType)(v)
}

func (*linkedServiceAzureFileStorageKeyVaultPasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceAzureFileStorageKeyVaultPassword)(nil)).Elem()
}

func (i *linkedServiceAzureFileStorageKeyVaultPasswordPtrType) ToLinkedServiceAzureFileStorageKeyVaultPasswordPtrOutput() LinkedServiceAzureFileStorageKeyVaultPasswordPtrOutput {
	return i.ToLinkedServiceAzureFileStorageKeyVaultPasswordPtrOutputWithContext(context.Background())
}

func (i *linkedServiceAzureFileStorageKeyVaultPasswordPtrType) ToLinkedServiceAzureFileStorageKeyVaultPasswordPtrOutputWithContext(ctx context.Context) LinkedServiceAzureFileStorageKeyVaultPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceAzureFileStorageKeyVaultPasswordPtrOutput)
}

type LinkedServiceAzureFileStorageKeyVaultPasswordOutput struct{ *pulumi.OutputState }

func (LinkedServiceAzureFileStorageKeyVaultPasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceAzureFileStorageKeyVaultPassword)(nil)).Elem()
}

func (o LinkedServiceAzureFileStorageKeyVaultPasswordOutput) ToLinkedServiceAzureFileStorageKeyVaultPasswordOutput() LinkedServiceAzureFileStorageKeyVaultPasswordOutput {
	return o
}

func (o LinkedServiceAzureFileStorageKeyVaultPasswordOutput) ToLinkedServiceAzureFileStorageKeyVaultPasswordOutputWithContext(ctx context.Context) LinkedServiceAzureFileStorageKeyVaultPasswordOutput {
	return o
}

func (o LinkedServiceAzureFileStorageKeyVaultPasswordOutput) ToLinkedServiceAzureFileStorageKeyVaultPasswordPtrOutput() LinkedServiceAzureFileStorageKeyVaultPasswordPtrOutput {
	return o.ToLinkedServiceAzureFileStorageKeyVaultPasswordPtrOutputWithContext(context.Background())
}

func (o LinkedServiceAzureFileStorageKeyVaultPasswordOutput) ToLinkedServiceAzureFileStorageKeyVaultPasswordPtrOutputWithContext(ctx context.Context) LinkedServiceAzureFileStorageKeyVaultPasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinkedServiceAzureFileStorageKeyVaultPassword) *LinkedServiceAzureFileStorageKeyVaultPassword {
		return &v
	}).(LinkedServiceAzureFileStorageKeyVaultPasswordPtrOutput)
}

// Specifies the name of an existing Key Vault Data Factory Linked Service.
func (o LinkedServiceAzureFileStorageKeyVaultPasswordOutput) LinkedServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceAzureFileStorageKeyVaultPassword) string { return v.LinkedServiceName }).(pulumi.StringOutput)
}

// Specifies the secret name in Azure Key Vault that stores Azure File Storage password.
func (o LinkedServiceAzureFileStorageKeyVaultPasswordOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceAzureFileStorageKeyVaultPassword) string { return v.SecretName }).(pulumi.StringOutput)
}

type LinkedServiceAzureFileStorageKeyVaultPasswordPtrOutput struct{ *pulumi.OutputState }

func (LinkedServiceAzureFileStorageKeyVaultPasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceAzureFileStorageKeyVaultPassword)(nil)).Elem()
}

func (o LinkedServiceAzureFileStorageKeyVaultPasswordPtrOutput) ToLinkedServiceAzureFileStorageKeyVaultPasswordPtrOutput() LinkedServiceAzureFileStorageKeyVaultPasswordPtrOutput {
	return o
}

func (o LinkedServiceAzureFileStorageKeyVaultPasswordPtrOutput) ToLinkedServiceAzureFileStorageKeyVaultPasswordPtrOutputWithContext(ctx context.Context) LinkedServiceAzureFileStorageKeyVaultPasswordPtrOutput {
	return o
}

func (o LinkedServiceAzureFileStorageKeyVaultPasswordPtrOutput) Elem() LinkedServiceAzureFileStorageKeyVaultPasswordOutput {
	return o.ApplyT(func(v *LinkedServiceAzureFileStorageKeyVaultPassword) LinkedServiceAzureFileStorageKeyVaultPassword {
		if v != nil {
			return *v
		}
		var ret LinkedServiceAzureFileStorageKeyVaultPassword
		return ret
	}).(LinkedServiceAzureFileStorageKeyVaultPasswordOutput)
}

// Specifies the name of an existing Key Vault Data Factory Linked Service.
func (o LinkedServiceAzureFileStorageKeyVaultPasswordPtrOutput) LinkedServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceAzureFileStorageKeyVaultPassword) *string {
		if v == nil {
			return nil
		}
		return &v.LinkedServiceName
	}).(pulumi.StringPtrOutput)
}

// Specifies the secret name in Azure Key Vault that stores Azure File Storage password.
func (o LinkedServiceAzureFileStorageKeyVaultPasswordPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceAzureFileStorageKeyVaultPassword) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type LinkedServiceAzureFunctionKeyVaultKey struct {
	// Specifies the name of an existing Key Vault Data Factory Linked Service.
	LinkedServiceName string `pulumi:"linkedServiceName"`
	// Specifies the secret name in Azure Key Vault that stores the system key of the Azure Function.
	SecretName string `pulumi:"secretName"`
}

// LinkedServiceAzureFunctionKeyVaultKeyInput is an input type that accepts LinkedServiceAzureFunctionKeyVaultKeyArgs and LinkedServiceAzureFunctionKeyVaultKeyOutput values.
// You can construct a concrete instance of `LinkedServiceAzureFunctionKeyVaultKeyInput` via:
//
//	LinkedServiceAzureFunctionKeyVaultKeyArgs{...}
type LinkedServiceAzureFunctionKeyVaultKeyInput interface {
	pulumi.Input

	ToLinkedServiceAzureFunctionKeyVaultKeyOutput() LinkedServiceAzureFunctionKeyVaultKeyOutput
	ToLinkedServiceAzureFunctionKeyVaultKeyOutputWithContext(context.Context) LinkedServiceAzureFunctionKeyVaultKeyOutput
}

type LinkedServiceAzureFunctionKeyVaultKeyArgs struct {
	// Specifies the name of an existing Key Vault Data Factory Linked Service.
	LinkedServiceName pulumi.StringInput `pulumi:"linkedServiceName"`
	// Specifies the secret name in Azure Key Vault that stores the system key of the Azure Function.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (LinkedServiceAzureFunctionKeyVaultKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceAzureFunctionKeyVaultKey)(nil)).Elem()
}

func (i LinkedServiceAzureFunctionKeyVaultKeyArgs) ToLinkedServiceAzureFunctionKeyVaultKeyOutput() LinkedServiceAzureFunctionKeyVaultKeyOutput {
	return i.ToLinkedServiceAzureFunctionKeyVaultKeyOutputWithContext(context.Background())
}

func (i LinkedServiceAzureFunctionKeyVaultKeyArgs) ToLinkedServiceAzureFunctionKeyVaultKeyOutputWithContext(ctx context.Context) LinkedServiceAzureFunctionKeyVaultKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceAzureFunctionKeyVaultKeyOutput)
}

func (i LinkedServiceAzureFunctionKeyVaultKeyArgs) ToLinkedServiceAzureFunctionKeyVaultKeyPtrOutput() LinkedServiceAzureFunctionKeyVaultKeyPtrOutput {
	return i.ToLinkedServiceAzureFunctionKeyVaultKeyPtrOutputWithContext(context.Background())
}

func (i LinkedServiceAzureFunctionKeyVaultKeyArgs) ToLinkedServiceAzureFunctionKeyVaultKeyPtrOutputWithContext(ctx context.Context) LinkedServiceAzureFunctionKeyVaultKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceAzureFunctionKeyVaultKeyOutput).ToLinkedServiceAzureFunctionKeyVaultKeyPtrOutputWithContext(ctx)
}

// LinkedServiceAzureFunctionKeyVaultKeyPtrInput is an input type that accepts LinkedServiceAzureFunctionKeyVaultKeyArgs, LinkedServiceAzureFunctionKeyVaultKeyPtr and LinkedServiceAzureFunctionKeyVaultKeyPtrOutput values.
// You can construct a concrete instance of `LinkedServiceAzureFunctionKeyVaultKeyPtrInput` via:
//
//	        LinkedServiceAzureFunctionKeyVaultKeyArgs{...}
//
//	or:
//
//	        nil
type LinkedServiceAzureFunctionKeyVaultKeyPtrInput interface {
	pulumi.Input

	ToLinkedServiceAzureFunctionKeyVaultKeyPtrOutput() LinkedServiceAzureFunctionKeyVaultKeyPtrOutput
	ToLinkedServiceAzureFunctionKeyVaultKeyPtrOutputWithContext(context.Context) LinkedServiceAzureFunctionKeyVaultKeyPtrOutput
}

type linkedServiceAzureFunctionKeyVaultKeyPtrType LinkedServiceAzureFunctionKeyVaultKeyArgs

func LinkedServiceAzureFunctionKeyVaultKeyPtr(v *LinkedServiceAzureFunctionKeyVaultKeyArgs) LinkedServiceAzureFunctionKeyVaultKeyPtrInput {
	return (*linkedServiceAzureFunctionKeyVaultKeyPtrType)(v)
}

func (*linkedServiceAzureFunctionKeyVaultKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceAzureFunctionKeyVaultKey)(nil)).Elem()
}

func (i *linkedServiceAzureFunctionKeyVaultKeyPtrType) ToLinkedServiceAzureFunctionKeyVaultKeyPtrOutput() LinkedServiceAzureFunctionKeyVaultKeyPtrOutput {
	return i.ToLinkedServiceAzureFunctionKeyVaultKeyPtrOutputWithContext(context.Background())
}

func (i *linkedServiceAzureFunctionKeyVaultKeyPtrType) ToLinkedServiceAzureFunctionKeyVaultKeyPtrOutputWithContext(ctx context.Context) LinkedServiceAzureFunctionKeyVaultKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceAzureFunctionKeyVaultKeyPtrOutput)
}

type LinkedServiceAzureFunctionKeyVaultKeyOutput struct{ *pulumi.OutputState }

func (LinkedServiceAzureFunctionKeyVaultKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceAzureFunctionKeyVaultKey)(nil)).Elem()
}

func (o LinkedServiceAzureFunctionKeyVaultKeyOutput) ToLinkedServiceAzureFunctionKeyVaultKeyOutput() LinkedServiceAzureFunctionKeyVaultKeyOutput {
	return o
}

func (o LinkedServiceAzureFunctionKeyVaultKeyOutput) ToLinkedServiceAzureFunctionKeyVaultKeyOutputWithContext(ctx context.Context) LinkedServiceAzureFunctionKeyVaultKeyOutput {
	return o
}

func (o LinkedServiceAzureFunctionKeyVaultKeyOutput) ToLinkedServiceAzureFunctionKeyVaultKeyPtrOutput() LinkedServiceAzureFunctionKeyVaultKeyPtrOutput {
	return o.ToLinkedServiceAzureFunctionKeyVaultKeyPtrOutputWithContext(context.Background())
}

func (o LinkedServiceAzureFunctionKeyVaultKeyOutput) ToLinkedServiceAzureFunctionKeyVaultKeyPtrOutputWithContext(ctx context.Context) LinkedServiceAzureFunctionKeyVaultKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinkedServiceAzureFunctionKeyVaultKey) *LinkedServiceAzureFunctionKeyVaultKey {
		return &v
	}).(LinkedServiceAzureFunctionKeyVaultKeyPtrOutput)
}

// Specifies the name of an existing Key Vault Data Factory Linked Service.
func (o LinkedServiceAzureFunctionKeyVaultKeyOutput) LinkedServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceAzureFunctionKeyVaultKey) string { return v.LinkedServiceName }).(pulumi.StringOutput)
}

// Specifies the secret name in Azure Key Vault that stores the system key of the Azure Function.
func (o LinkedServiceAzureFunctionKeyVaultKeyOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceAzureFunctionKeyVaultKey) string { return v.SecretName }).(pulumi.StringOutput)
}

type LinkedServiceAzureFunctionKeyVaultKeyPtrOutput struct{ *pulumi.OutputState }

func (LinkedServiceAzureFunctionKeyVaultKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceAzureFunctionKeyVaultKey)(nil)).Elem()
}

func (o LinkedServiceAzureFunctionKeyVaultKeyPtrOutput) ToLinkedServiceAzureFunctionKeyVaultKeyPtrOutput() LinkedServiceAzureFunctionKeyVaultKeyPtrOutput {
	return o
}

func (o LinkedServiceAzureFunctionKeyVaultKeyPtrOutput) ToLinkedServiceAzureFunctionKeyVaultKeyPtrOutputWithContext(ctx context.Context) LinkedServiceAzureFunctionKeyVaultKeyPtrOutput {
	return o
}

func (o LinkedServiceAzureFunctionKeyVaultKeyPtrOutput) Elem() LinkedServiceAzureFunctionKeyVaultKeyOutput {
	return o.ApplyT(func(v *LinkedServiceAzureFunctionKeyVaultKey) LinkedServiceAzureFunctionKeyVaultKey {
		if v != nil {
			return *v
		}
		var ret LinkedServiceAzureFunctionKeyVaultKey
		return ret
	}).(LinkedServiceAzureFunctionKeyVaultKeyOutput)
}

// Specifies the name of an existing Key Vault Data Factory Linked Service.
func (o LinkedServiceAzureFunctionKeyVaultKeyPtrOutput) LinkedServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceAzureFunctionKeyVaultKey) *string {
		if v == nil {
			return nil
		}
		return &v.LinkedServiceName
	}).(pulumi.StringPtrOutput)
}

// Specifies the secret name in Azure Key Vault that stores the system key of the Azure Function.
func (o LinkedServiceAzureFunctionKeyVaultKeyPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceAzureFunctionKeyVaultKey) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type LinkedServiceAzureSqlDatabaseKeyVaultConnectionString struct {
	// Specifies the name of an existing Key Vault Data Factory Linked Service.
	LinkedServiceName string `pulumi:"linkedServiceName"`
	// Specifies the secret name in Azure Key Vault that stores SQL Server connection string.
	SecretName string `pulumi:"secretName"`
}

// LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringInput is an input type that accepts LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringArgs and LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringOutput values.
// You can construct a concrete instance of `LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringInput` via:
//
//	LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringArgs{...}
type LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringInput interface {
	pulumi.Input

	ToLinkedServiceAzureSqlDatabaseKeyVaultConnectionStringOutput() LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringOutput
	ToLinkedServiceAzureSqlDatabaseKeyVaultConnectionStringOutputWithContext(context.Context) LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringOutput
}

type LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringArgs struct {
	// Specifies the name of an existing Key Vault Data Factory Linked Service.
	LinkedServiceName pulumi.StringInput `pulumi:"linkedServiceName"`
	// Specifies the secret name in Azure Key Vault that stores SQL Server connection string.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceAzureSqlDatabaseKeyVaultConnectionString)(nil)).Elem()
}

func (i LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringArgs) ToLinkedServiceAzureSqlDatabaseKeyVaultConnectionStringOutput() LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringOutput {
	return i.ToLinkedServiceAzureSqlDatabaseKeyVaultConnectionStringOutputWithContext(context.Background())
}

func (i LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringArgs) ToLinkedServiceAzureSqlDatabaseKeyVaultConnectionStringOutputWithContext(ctx context.Context) LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringOutput)
}

func (i LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringArgs) ToLinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutput() LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutput {
	return i.ToLinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutputWithContext(context.Background())
}

func (i LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringArgs) ToLinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutputWithContext(ctx context.Context) LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringOutput).ToLinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutputWithContext(ctx)
}

// LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrInput is an input type that accepts LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringArgs, LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtr and LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutput values.
// You can construct a concrete instance of `LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrInput` via:
//
//	        LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringArgs{...}
//
//	or:
//
//	        nil
type LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrInput interface {
	pulumi.Input

	ToLinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutput() LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutput
	ToLinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutputWithContext(context.Context) LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutput
}

type linkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrType LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringArgs

func LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtr(v *LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringArgs) LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrInput {
	return (*linkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrType)(v)
}

func (*linkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceAzureSqlDatabaseKeyVaultConnectionString)(nil)).Elem()
}

func (i *linkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrType) ToLinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutput() LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutput {
	return i.ToLinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutputWithContext(context.Background())
}

func (i *linkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrType) ToLinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutputWithContext(ctx context.Context) LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutput)
}

type LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringOutput struct{ *pulumi.OutputState }

func (LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceAzureSqlDatabaseKeyVaultConnectionString)(nil)).Elem()
}

func (o LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringOutput) ToLinkedServiceAzureSqlDatabaseKeyVaultConnectionStringOutput() LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringOutput {
	return o
}

func (o LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringOutput) ToLinkedServiceAzureSqlDatabaseKeyVaultConnectionStringOutputWithContext(ctx context.Context) LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringOutput {
	return o
}

func (o LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringOutput) ToLinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutput() LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutput {
	return o.ToLinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutputWithContext(context.Background())
}

func (o LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringOutput) ToLinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutputWithContext(ctx context.Context) LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinkedServiceAzureSqlDatabaseKeyVaultConnectionString) *LinkedServiceAzureSqlDatabaseKeyVaultConnectionString {
		return &v
	}).(LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutput)
}

// Specifies the name of an existing Key Vault Data Factory Linked Service.
func (o LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringOutput) LinkedServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceAzureSqlDatabaseKeyVaultConnectionString) string { return v.LinkedServiceName }).(pulumi.StringOutput)
}

// Specifies the secret name in Azure Key Vault that stores SQL Server connection string.
func (o LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceAzureSqlDatabaseKeyVaultConnectionString) string { return v.SecretName }).(pulumi.StringOutput)
}

type LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutput struct{ *pulumi.OutputState }

func (LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceAzureSqlDatabaseKeyVaultConnectionString)(nil)).Elem()
}

func (o LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutput) ToLinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutput() LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutput {
	return o
}

func (o LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutput) ToLinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutputWithContext(ctx context.Context) LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutput {
	return o
}

func (o LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutput) Elem() LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringOutput {
	return o.ApplyT(func(v *LinkedServiceAzureSqlDatabaseKeyVaultConnectionString) LinkedServiceAzureSqlDatabaseKeyVaultConnectionString {
		if v != nil {
			return *v
		}
		var ret LinkedServiceAzureSqlDatabaseKeyVaultConnectionString
		return ret
	}).(LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringOutput)
}

// Specifies the name of an existing Key Vault Data Factory Linked Service.
func (o LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutput) LinkedServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceAzureSqlDatabaseKeyVaultConnectionString) *string {
		if v == nil {
			return nil
		}
		return &v.LinkedServiceName
	}).(pulumi.StringPtrOutput)
}

// Specifies the secret name in Azure Key Vault that stores SQL Server connection string.
func (o LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceAzureSqlDatabaseKeyVaultConnectionString) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type LinkedServiceAzureSqlDatabaseKeyVaultPassword struct {
	// Specifies the name of an existing Key Vault Data Factory Linked Service.
	LinkedServiceName string `pulumi:"linkedServiceName"`
	// Specifies the secret name in Azure Key Vault that stores SQL Server password.
	SecretName string `pulumi:"secretName"`
}

// LinkedServiceAzureSqlDatabaseKeyVaultPasswordInput is an input type that accepts LinkedServiceAzureSqlDatabaseKeyVaultPasswordArgs and LinkedServiceAzureSqlDatabaseKeyVaultPasswordOutput values.
// You can construct a concrete instance of `LinkedServiceAzureSqlDatabaseKeyVaultPasswordInput` via:
//
//	LinkedServiceAzureSqlDatabaseKeyVaultPasswordArgs{...}
type LinkedServiceAzureSqlDatabaseKeyVaultPasswordInput interface {
	pulumi.Input

	ToLinkedServiceAzureSqlDatabaseKeyVaultPasswordOutput() LinkedServiceAzureSqlDatabaseKeyVaultPasswordOutput
	ToLinkedServiceAzureSqlDatabaseKeyVaultPasswordOutputWithContext(context.Context) LinkedServiceAzureSqlDatabaseKeyVaultPasswordOutput
}

type LinkedServiceAzureSqlDatabaseKeyVaultPasswordArgs struct {
	// Specifies the name of an existing Key Vault Data Factory Linked Service.
	LinkedServiceName pulumi.StringInput `pulumi:"linkedServiceName"`
	// Specifies the secret name in Azure Key Vault that stores SQL Server password.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (LinkedServiceAzureSqlDatabaseKeyVaultPasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceAzureSqlDatabaseKeyVaultPassword)(nil)).Elem()
}

func (i LinkedServiceAzureSqlDatabaseKeyVaultPasswordArgs) ToLinkedServiceAzureSqlDatabaseKeyVaultPasswordOutput() LinkedServiceAzureSqlDatabaseKeyVaultPasswordOutput {
	return i.ToLinkedServiceAzureSqlDatabaseKeyVaultPasswordOutputWithContext(context.Background())
}

func (i LinkedServiceAzureSqlDatabaseKeyVaultPasswordArgs) ToLinkedServiceAzureSqlDatabaseKeyVaultPasswordOutputWithContext(ctx context.Context) LinkedServiceAzureSqlDatabaseKeyVaultPasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceAzureSqlDatabaseKeyVaultPasswordOutput)
}

func (i LinkedServiceAzureSqlDatabaseKeyVaultPasswordArgs) ToLinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutput() LinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutput {
	return i.ToLinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutputWithContext(context.Background())
}

func (i LinkedServiceAzureSqlDatabaseKeyVaultPasswordArgs) ToLinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutputWithContext(ctx context.Context) LinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceAzureSqlDatabaseKeyVaultPasswordOutput).ToLinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutputWithContext(ctx)
}

// LinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrInput is an input type that accepts LinkedServiceAzureSqlDatabaseKeyVaultPasswordArgs, LinkedServiceAzureSqlDatabaseKeyVaultPasswordPtr and LinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutput values.
// You can construct a concrete instance of `LinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrInput` via:
//
//	        LinkedServiceAzureSqlDatabaseKeyVaultPasswordArgs{...}
//
//	or:
//
//	        nil
type LinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrInput interface {
	pulumi.Input

	ToLinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutput() LinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutput
	ToLinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutputWithContext(context.Context) LinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutput
}

type linkedServiceAzureSqlDatabaseKeyVaultPasswordPtrType LinkedServiceAzureSqlDatabaseKeyVaultPasswordArgs

func LinkedServiceAzureSqlDatabaseKeyVaultPasswordPtr(v *LinkedServiceAzureSqlDatabaseKeyVaultPasswordArgs) LinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrInput {
	return (*linkedServiceAzureSqlDatabaseKeyVaultPasswordPtrType)(v)
}

func (*linkedServiceAzureSqlDatabaseKeyVaultPasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceAzureSqlDatabaseKeyVaultPassword)(nil)).Elem()
}

func (i *linkedServiceAzureSqlDatabaseKeyVaultPasswordPtrType) ToLinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutput() LinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutput {
	return i.ToLinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutputWithContext(context.Background())
}

func (i *linkedServiceAzureSqlDatabaseKeyVaultPasswordPtrType) ToLinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutputWithContext(ctx context.Context) LinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutput)
}

type LinkedServiceAzureSqlDatabaseKeyVaultPasswordOutput struct{ *pulumi.OutputState }

func (LinkedServiceAzureSqlDatabaseKeyVaultPasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceAzureSqlDatabaseKeyVaultPassword)(nil)).Elem()
}

func (o LinkedServiceAzureSqlDatabaseKeyVaultPasswordOutput) ToLinkedServiceAzureSqlDatabaseKeyVaultPasswordOutput() LinkedServiceAzureSqlDatabaseKeyVaultPasswordOutput {
	return o
}

func (o LinkedServiceAzureSqlDatabaseKeyVaultPasswordOutput) ToLinkedServiceAzureSqlDatabaseKeyVaultPasswordOutputWithContext(ctx context.Context) LinkedServiceAzureSqlDatabaseKeyVaultPasswordOutput {
	return o
}

func (o LinkedServiceAzureSqlDatabaseKeyVaultPasswordOutput) ToLinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutput() LinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutput {
	return o.ToLinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutputWithContext(context.Background())
}

func (o LinkedServiceAzureSqlDatabaseKeyVaultPasswordOutput) ToLinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutputWithContext(ctx context.Context) LinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinkedServiceAzureSqlDatabaseKeyVaultPassword) *LinkedServiceAzureSqlDatabaseKeyVaultPassword {
		return &v
	}).(LinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutput)
}

// Specifies the name of an existing Key Vault Data Factory Linked Service.
func (o LinkedServiceAzureSqlDatabaseKeyVaultPasswordOutput) LinkedServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceAzureSqlDatabaseKeyVaultPassword) string { return v.LinkedServiceName }).(pulumi.StringOutput)
}

// Specifies the secret name in Azure Key Vault that stores SQL Server password.
func (o LinkedServiceAzureSqlDatabaseKeyVaultPasswordOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceAzureSqlDatabaseKeyVaultPassword) string { return v.SecretName }).(pulumi.StringOutput)
}

type LinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutput struct{ *pulumi.OutputState }

func (LinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceAzureSqlDatabaseKeyVaultPassword)(nil)).Elem()
}

func (o LinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutput) ToLinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutput() LinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutput {
	return o
}

func (o LinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutput) ToLinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutputWithContext(ctx context.Context) LinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutput {
	return o
}

func (o LinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutput) Elem() LinkedServiceAzureSqlDatabaseKeyVaultPasswordOutput {
	return o.ApplyT(func(v *LinkedServiceAzureSqlDatabaseKeyVaultPassword) LinkedServiceAzureSqlDatabaseKeyVaultPassword {
		if v != nil {
			return *v
		}
		var ret LinkedServiceAzureSqlDatabaseKeyVaultPassword
		return ret
	}).(LinkedServiceAzureSqlDatabaseKeyVaultPasswordOutput)
}

// Specifies the name of an existing Key Vault Data Factory Linked Service.
func (o LinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutput) LinkedServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceAzureSqlDatabaseKeyVaultPassword) *string {
		if v == nil {
			return nil
		}
		return &v.LinkedServiceName
	}).(pulumi.StringPtrOutput)
}

// Specifies the secret name in Azure Key Vault that stores SQL Server password.
func (o LinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceAzureSqlDatabaseKeyVaultPassword) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type LinkedServiceOdataBasicAuthentication struct {
	// The password associated with the username, which can be used to authenticate to the OData endpoint.
	Password string `pulumi:"password"`
	// The username which can be used to authenticate to the OData endpoint.
	Username string `pulumi:"username"`
}

// LinkedServiceOdataBasicAuthenticationInput is an input type that accepts LinkedServiceOdataBasicAuthenticationArgs and LinkedServiceOdataBasicAuthenticationOutput values.
// You can construct a concrete instance of `LinkedServiceOdataBasicAuthenticationInput` via:
//
//	LinkedServiceOdataBasicAuthenticationArgs{...}
type LinkedServiceOdataBasicAuthenticationInput interface {
	pulumi.Input

	ToLinkedServiceOdataBasicAuthenticationOutput() LinkedServiceOdataBasicAuthenticationOutput
	ToLinkedServiceOdataBasicAuthenticationOutputWithContext(context.Context) LinkedServiceOdataBasicAuthenticationOutput
}

type LinkedServiceOdataBasicAuthenticationArgs struct {
	// The password associated with the username, which can be used to authenticate to the OData endpoint.
	Password pulumi.StringInput `pulumi:"password"`
	// The username which can be used to authenticate to the OData endpoint.
	Username pulumi.StringInput `pulumi:"username"`
}

func (LinkedServiceOdataBasicAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceOdataBasicAuthentication)(nil)).Elem()
}

func (i LinkedServiceOdataBasicAuthenticationArgs) ToLinkedServiceOdataBasicAuthenticationOutput() LinkedServiceOdataBasicAuthenticationOutput {
	return i.ToLinkedServiceOdataBasicAuthenticationOutputWithContext(context.Background())
}

func (i LinkedServiceOdataBasicAuthenticationArgs) ToLinkedServiceOdataBasicAuthenticationOutputWithContext(ctx context.Context) LinkedServiceOdataBasicAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceOdataBasicAuthenticationOutput)
}

func (i LinkedServiceOdataBasicAuthenticationArgs) ToLinkedServiceOdataBasicAuthenticationPtrOutput() LinkedServiceOdataBasicAuthenticationPtrOutput {
	return i.ToLinkedServiceOdataBasicAuthenticationPtrOutputWithContext(context.Background())
}

func (i LinkedServiceOdataBasicAuthenticationArgs) ToLinkedServiceOdataBasicAuthenticationPtrOutputWithContext(ctx context.Context) LinkedServiceOdataBasicAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceOdataBasicAuthenticationOutput).ToLinkedServiceOdataBasicAuthenticationPtrOutputWithContext(ctx)
}

// LinkedServiceOdataBasicAuthenticationPtrInput is an input type that accepts LinkedServiceOdataBasicAuthenticationArgs, LinkedServiceOdataBasicAuthenticationPtr and LinkedServiceOdataBasicAuthenticationPtrOutput values.
// You can construct a concrete instance of `LinkedServiceOdataBasicAuthenticationPtrInput` via:
//
//	        LinkedServiceOdataBasicAuthenticationArgs{...}
//
//	or:
//
//	        nil
type LinkedServiceOdataBasicAuthenticationPtrInput interface {
	pulumi.Input

	ToLinkedServiceOdataBasicAuthenticationPtrOutput() LinkedServiceOdataBasicAuthenticationPtrOutput
	ToLinkedServiceOdataBasicAuthenticationPtrOutputWithContext(context.Context) LinkedServiceOdataBasicAuthenticationPtrOutput
}

type linkedServiceOdataBasicAuthenticationPtrType LinkedServiceOdataBasicAuthenticationArgs

func LinkedServiceOdataBasicAuthenticationPtr(v *LinkedServiceOdataBasicAuthenticationArgs) LinkedServiceOdataBasicAuthenticationPtrInput {
	return (*linkedServiceOdataBasicAuthenticationPtrType)(v)
}

func (*linkedServiceOdataBasicAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceOdataBasicAuthentication)(nil)).Elem()
}

func (i *linkedServiceOdataBasicAuthenticationPtrType) ToLinkedServiceOdataBasicAuthenticationPtrOutput() LinkedServiceOdataBasicAuthenticationPtrOutput {
	return i.ToLinkedServiceOdataBasicAuthenticationPtrOutputWithContext(context.Background())
}

func (i *linkedServiceOdataBasicAuthenticationPtrType) ToLinkedServiceOdataBasicAuthenticationPtrOutputWithContext(ctx context.Context) LinkedServiceOdataBasicAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceOdataBasicAuthenticationPtrOutput)
}

type LinkedServiceOdataBasicAuthenticationOutput struct{ *pulumi.OutputState }

func (LinkedServiceOdataBasicAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceOdataBasicAuthentication)(nil)).Elem()
}

func (o LinkedServiceOdataBasicAuthenticationOutput) ToLinkedServiceOdataBasicAuthenticationOutput() LinkedServiceOdataBasicAuthenticationOutput {
	return o
}

func (o LinkedServiceOdataBasicAuthenticationOutput) ToLinkedServiceOdataBasicAuthenticationOutputWithContext(ctx context.Context) LinkedServiceOdataBasicAuthenticationOutput {
	return o
}

func (o LinkedServiceOdataBasicAuthenticationOutput) ToLinkedServiceOdataBasicAuthenticationPtrOutput() LinkedServiceOdataBasicAuthenticationPtrOutput {
	return o.ToLinkedServiceOdataBasicAuthenticationPtrOutputWithContext(context.Background())
}

func (o LinkedServiceOdataBasicAuthenticationOutput) ToLinkedServiceOdataBasicAuthenticationPtrOutputWithContext(ctx context.Context) LinkedServiceOdataBasicAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinkedServiceOdataBasicAuthentication) *LinkedServiceOdataBasicAuthentication {
		return &v
	}).(LinkedServiceOdataBasicAuthenticationPtrOutput)
}

// The password associated with the username, which can be used to authenticate to the OData endpoint.
func (o LinkedServiceOdataBasicAuthenticationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceOdataBasicAuthentication) string { return v.Password }).(pulumi.StringOutput)
}

// The username which can be used to authenticate to the OData endpoint.
func (o LinkedServiceOdataBasicAuthenticationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceOdataBasicAuthentication) string { return v.Username }).(pulumi.StringOutput)
}

type LinkedServiceOdataBasicAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (LinkedServiceOdataBasicAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceOdataBasicAuthentication)(nil)).Elem()
}

func (o LinkedServiceOdataBasicAuthenticationPtrOutput) ToLinkedServiceOdataBasicAuthenticationPtrOutput() LinkedServiceOdataBasicAuthenticationPtrOutput {
	return o
}

func (o LinkedServiceOdataBasicAuthenticationPtrOutput) ToLinkedServiceOdataBasicAuthenticationPtrOutputWithContext(ctx context.Context) LinkedServiceOdataBasicAuthenticationPtrOutput {
	return o
}

func (o LinkedServiceOdataBasicAuthenticationPtrOutput) Elem() LinkedServiceOdataBasicAuthenticationOutput {
	return o.ApplyT(func(v *LinkedServiceOdataBasicAuthentication) LinkedServiceOdataBasicAuthentication {
		if v != nil {
			return *v
		}
		var ret LinkedServiceOdataBasicAuthentication
		return ret
	}).(LinkedServiceOdataBasicAuthenticationOutput)
}

// The password associated with the username, which can be used to authenticate to the OData endpoint.
func (o LinkedServiceOdataBasicAuthenticationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceOdataBasicAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The username which can be used to authenticate to the OData endpoint.
func (o LinkedServiceOdataBasicAuthenticationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceOdataBasicAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type LinkedServiceOdbcBasicAuthentication struct {
	// The password associated with the username, which can be used to authenticate to the ODBC endpoint.
	Password string `pulumi:"password"`
	// The username which can be used to authenticate to the ODBC endpoint.
	Username string `pulumi:"username"`
}

// LinkedServiceOdbcBasicAuthenticationInput is an input type that accepts LinkedServiceOdbcBasicAuthenticationArgs and LinkedServiceOdbcBasicAuthenticationOutput values.
// You can construct a concrete instance of `LinkedServiceOdbcBasicAuthenticationInput` via:
//
//	LinkedServiceOdbcBasicAuthenticationArgs{...}
type LinkedServiceOdbcBasicAuthenticationInput interface {
	pulumi.Input

	ToLinkedServiceOdbcBasicAuthenticationOutput() LinkedServiceOdbcBasicAuthenticationOutput
	ToLinkedServiceOdbcBasicAuthenticationOutputWithContext(context.Context) LinkedServiceOdbcBasicAuthenticationOutput
}

type LinkedServiceOdbcBasicAuthenticationArgs struct {
	// The password associated with the username, which can be used to authenticate to the ODBC endpoint.
	Password pulumi.StringInput `pulumi:"password"`
	// The username which can be used to authenticate to the ODBC endpoint.
	Username pulumi.StringInput `pulumi:"username"`
}

func (LinkedServiceOdbcBasicAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceOdbcBasicAuthentication)(nil)).Elem()
}

func (i LinkedServiceOdbcBasicAuthenticationArgs) ToLinkedServiceOdbcBasicAuthenticationOutput() LinkedServiceOdbcBasicAuthenticationOutput {
	return i.ToLinkedServiceOdbcBasicAuthenticationOutputWithContext(context.Background())
}

func (i LinkedServiceOdbcBasicAuthenticationArgs) ToLinkedServiceOdbcBasicAuthenticationOutputWithContext(ctx context.Context) LinkedServiceOdbcBasicAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceOdbcBasicAuthenticationOutput)
}

func (i LinkedServiceOdbcBasicAuthenticationArgs) ToLinkedServiceOdbcBasicAuthenticationPtrOutput() LinkedServiceOdbcBasicAuthenticationPtrOutput {
	return i.ToLinkedServiceOdbcBasicAuthenticationPtrOutputWithContext(context.Background())
}

func (i LinkedServiceOdbcBasicAuthenticationArgs) ToLinkedServiceOdbcBasicAuthenticationPtrOutputWithContext(ctx context.Context) LinkedServiceOdbcBasicAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceOdbcBasicAuthenticationOutput).ToLinkedServiceOdbcBasicAuthenticationPtrOutputWithContext(ctx)
}

// LinkedServiceOdbcBasicAuthenticationPtrInput is an input type that accepts LinkedServiceOdbcBasicAuthenticationArgs, LinkedServiceOdbcBasicAuthenticationPtr and LinkedServiceOdbcBasicAuthenticationPtrOutput values.
// You can construct a concrete instance of `LinkedServiceOdbcBasicAuthenticationPtrInput` via:
//
//	        LinkedServiceOdbcBasicAuthenticationArgs{...}
//
//	or:
//
//	        nil
type LinkedServiceOdbcBasicAuthenticationPtrInput interface {
	pulumi.Input

	ToLinkedServiceOdbcBasicAuthenticationPtrOutput() LinkedServiceOdbcBasicAuthenticationPtrOutput
	ToLinkedServiceOdbcBasicAuthenticationPtrOutputWithContext(context.Context) LinkedServiceOdbcBasicAuthenticationPtrOutput
}

type linkedServiceOdbcBasicAuthenticationPtrType LinkedServiceOdbcBasicAuthenticationArgs

func LinkedServiceOdbcBasicAuthenticationPtr(v *LinkedServiceOdbcBasicAuthenticationArgs) LinkedServiceOdbcBasicAuthenticationPtrInput {
	return (*linkedServiceOdbcBasicAuthenticationPtrType)(v)
}

func (*linkedServiceOdbcBasicAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceOdbcBasicAuthentication)(nil)).Elem()
}

func (i *linkedServiceOdbcBasicAuthenticationPtrType) ToLinkedServiceOdbcBasicAuthenticationPtrOutput() LinkedServiceOdbcBasicAuthenticationPtrOutput {
	return i.ToLinkedServiceOdbcBasicAuthenticationPtrOutputWithContext(context.Background())
}

func (i *linkedServiceOdbcBasicAuthenticationPtrType) ToLinkedServiceOdbcBasicAuthenticationPtrOutputWithContext(ctx context.Context) LinkedServiceOdbcBasicAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceOdbcBasicAuthenticationPtrOutput)
}

type LinkedServiceOdbcBasicAuthenticationOutput struct{ *pulumi.OutputState }

func (LinkedServiceOdbcBasicAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceOdbcBasicAuthentication)(nil)).Elem()
}

func (o LinkedServiceOdbcBasicAuthenticationOutput) ToLinkedServiceOdbcBasicAuthenticationOutput() LinkedServiceOdbcBasicAuthenticationOutput {
	return o
}

func (o LinkedServiceOdbcBasicAuthenticationOutput) ToLinkedServiceOdbcBasicAuthenticationOutputWithContext(ctx context.Context) LinkedServiceOdbcBasicAuthenticationOutput {
	return o
}

func (o LinkedServiceOdbcBasicAuthenticationOutput) ToLinkedServiceOdbcBasicAuthenticationPtrOutput() LinkedServiceOdbcBasicAuthenticationPtrOutput {
	return o.ToLinkedServiceOdbcBasicAuthenticationPtrOutputWithContext(context.Background())
}

func (o LinkedServiceOdbcBasicAuthenticationOutput) ToLinkedServiceOdbcBasicAuthenticationPtrOutputWithContext(ctx context.Context) LinkedServiceOdbcBasicAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinkedServiceOdbcBasicAuthentication) *LinkedServiceOdbcBasicAuthentication {
		return &v
	}).(LinkedServiceOdbcBasicAuthenticationPtrOutput)
}

// The password associated with the username, which can be used to authenticate to the ODBC endpoint.
func (o LinkedServiceOdbcBasicAuthenticationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceOdbcBasicAuthentication) string { return v.Password }).(pulumi.StringOutput)
}

// The username which can be used to authenticate to the ODBC endpoint.
func (o LinkedServiceOdbcBasicAuthenticationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceOdbcBasicAuthentication) string { return v.Username }).(pulumi.StringOutput)
}

type LinkedServiceOdbcBasicAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (LinkedServiceOdbcBasicAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceOdbcBasicAuthentication)(nil)).Elem()
}

func (o LinkedServiceOdbcBasicAuthenticationPtrOutput) ToLinkedServiceOdbcBasicAuthenticationPtrOutput() LinkedServiceOdbcBasicAuthenticationPtrOutput {
	return o
}

func (o LinkedServiceOdbcBasicAuthenticationPtrOutput) ToLinkedServiceOdbcBasicAuthenticationPtrOutputWithContext(ctx context.Context) LinkedServiceOdbcBasicAuthenticationPtrOutput {
	return o
}

func (o LinkedServiceOdbcBasicAuthenticationPtrOutput) Elem() LinkedServiceOdbcBasicAuthenticationOutput {
	return o.ApplyT(func(v *LinkedServiceOdbcBasicAuthentication) LinkedServiceOdbcBasicAuthentication {
		if v != nil {
			return *v
		}
		var ret LinkedServiceOdbcBasicAuthentication
		return ret
	}).(LinkedServiceOdbcBasicAuthenticationOutput)
}

// The password associated with the username, which can be used to authenticate to the ODBC endpoint.
func (o LinkedServiceOdbcBasicAuthenticationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceOdbcBasicAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The username which can be used to authenticate to the ODBC endpoint.
func (o LinkedServiceOdbcBasicAuthenticationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceOdbcBasicAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type LinkedServiceSnowflakeKeyVaultPassword struct {
	// Specifies the name of an existing Key Vault Data Factory Linked Service.
	LinkedServiceName string `pulumi:"linkedServiceName"`
	// Specifies the secret name in Azure Key Vault that stores Snowflake password.
	SecretName string `pulumi:"secretName"`
}

// LinkedServiceSnowflakeKeyVaultPasswordInput is an input type that accepts LinkedServiceSnowflakeKeyVaultPasswordArgs and LinkedServiceSnowflakeKeyVaultPasswordOutput values.
// You can construct a concrete instance of `LinkedServiceSnowflakeKeyVaultPasswordInput` via:
//
//	LinkedServiceSnowflakeKeyVaultPasswordArgs{...}
type LinkedServiceSnowflakeKeyVaultPasswordInput interface {
	pulumi.Input

	ToLinkedServiceSnowflakeKeyVaultPasswordOutput() LinkedServiceSnowflakeKeyVaultPasswordOutput
	ToLinkedServiceSnowflakeKeyVaultPasswordOutputWithContext(context.Context) LinkedServiceSnowflakeKeyVaultPasswordOutput
}

type LinkedServiceSnowflakeKeyVaultPasswordArgs struct {
	// Specifies the name of an existing Key Vault Data Factory Linked Service.
	LinkedServiceName pulumi.StringInput `pulumi:"linkedServiceName"`
	// Specifies the secret name in Azure Key Vault that stores Snowflake password.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (LinkedServiceSnowflakeKeyVaultPasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceSnowflakeKeyVaultPassword)(nil)).Elem()
}

func (i LinkedServiceSnowflakeKeyVaultPasswordArgs) ToLinkedServiceSnowflakeKeyVaultPasswordOutput() LinkedServiceSnowflakeKeyVaultPasswordOutput {
	return i.ToLinkedServiceSnowflakeKeyVaultPasswordOutputWithContext(context.Background())
}

func (i LinkedServiceSnowflakeKeyVaultPasswordArgs) ToLinkedServiceSnowflakeKeyVaultPasswordOutputWithContext(ctx context.Context) LinkedServiceSnowflakeKeyVaultPasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceSnowflakeKeyVaultPasswordOutput)
}

func (i LinkedServiceSnowflakeKeyVaultPasswordArgs) ToLinkedServiceSnowflakeKeyVaultPasswordPtrOutput() LinkedServiceSnowflakeKeyVaultPasswordPtrOutput {
	return i.ToLinkedServiceSnowflakeKeyVaultPasswordPtrOutputWithContext(context.Background())
}

func (i LinkedServiceSnowflakeKeyVaultPasswordArgs) ToLinkedServiceSnowflakeKeyVaultPasswordPtrOutputWithContext(ctx context.Context) LinkedServiceSnowflakeKeyVaultPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceSnowflakeKeyVaultPasswordOutput).ToLinkedServiceSnowflakeKeyVaultPasswordPtrOutputWithContext(ctx)
}

// LinkedServiceSnowflakeKeyVaultPasswordPtrInput is an input type that accepts LinkedServiceSnowflakeKeyVaultPasswordArgs, LinkedServiceSnowflakeKeyVaultPasswordPtr and LinkedServiceSnowflakeKeyVaultPasswordPtrOutput values.
// You can construct a concrete instance of `LinkedServiceSnowflakeKeyVaultPasswordPtrInput` via:
//
//	        LinkedServiceSnowflakeKeyVaultPasswordArgs{...}
//
//	or:
//
//	        nil
type LinkedServiceSnowflakeKeyVaultPasswordPtrInput interface {
	pulumi.Input

	ToLinkedServiceSnowflakeKeyVaultPasswordPtrOutput() LinkedServiceSnowflakeKeyVaultPasswordPtrOutput
	ToLinkedServiceSnowflakeKeyVaultPasswordPtrOutputWithContext(context.Context) LinkedServiceSnowflakeKeyVaultPasswordPtrOutput
}

type linkedServiceSnowflakeKeyVaultPasswordPtrType LinkedServiceSnowflakeKeyVaultPasswordArgs

func LinkedServiceSnowflakeKeyVaultPasswordPtr(v *LinkedServiceSnowflakeKeyVaultPasswordArgs) LinkedServiceSnowflakeKeyVaultPasswordPtrInput {
	return (*linkedServiceSnowflakeKeyVaultPasswordPtrType)(v)
}

func (*linkedServiceSnowflakeKeyVaultPasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceSnowflakeKeyVaultPassword)(nil)).Elem()
}

func (i *linkedServiceSnowflakeKeyVaultPasswordPtrType) ToLinkedServiceSnowflakeKeyVaultPasswordPtrOutput() LinkedServiceSnowflakeKeyVaultPasswordPtrOutput {
	return i.ToLinkedServiceSnowflakeKeyVaultPasswordPtrOutputWithContext(context.Background())
}

func (i *linkedServiceSnowflakeKeyVaultPasswordPtrType) ToLinkedServiceSnowflakeKeyVaultPasswordPtrOutputWithContext(ctx context.Context) LinkedServiceSnowflakeKeyVaultPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceSnowflakeKeyVaultPasswordPtrOutput)
}

type LinkedServiceSnowflakeKeyVaultPasswordOutput struct{ *pulumi.OutputState }

func (LinkedServiceSnowflakeKeyVaultPasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceSnowflakeKeyVaultPassword)(nil)).Elem()
}

func (o LinkedServiceSnowflakeKeyVaultPasswordOutput) ToLinkedServiceSnowflakeKeyVaultPasswordOutput() LinkedServiceSnowflakeKeyVaultPasswordOutput {
	return o
}

func (o LinkedServiceSnowflakeKeyVaultPasswordOutput) ToLinkedServiceSnowflakeKeyVaultPasswordOutputWithContext(ctx context.Context) LinkedServiceSnowflakeKeyVaultPasswordOutput {
	return o
}

func (o LinkedServiceSnowflakeKeyVaultPasswordOutput) ToLinkedServiceSnowflakeKeyVaultPasswordPtrOutput() LinkedServiceSnowflakeKeyVaultPasswordPtrOutput {
	return o.ToLinkedServiceSnowflakeKeyVaultPasswordPtrOutputWithContext(context.Background())
}

func (o LinkedServiceSnowflakeKeyVaultPasswordOutput) ToLinkedServiceSnowflakeKeyVaultPasswordPtrOutputWithContext(ctx context.Context) LinkedServiceSnowflakeKeyVaultPasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinkedServiceSnowflakeKeyVaultPassword) *LinkedServiceSnowflakeKeyVaultPassword {
		return &v
	}).(LinkedServiceSnowflakeKeyVaultPasswordPtrOutput)
}

// Specifies the name of an existing Key Vault Data Factory Linked Service.
func (o LinkedServiceSnowflakeKeyVaultPasswordOutput) LinkedServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceSnowflakeKeyVaultPassword) string { return v.LinkedServiceName }).(pulumi.StringOutput)
}

// Specifies the secret name in Azure Key Vault that stores Snowflake password.
func (o LinkedServiceSnowflakeKeyVaultPasswordOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceSnowflakeKeyVaultPassword) string { return v.SecretName }).(pulumi.StringOutput)
}

type LinkedServiceSnowflakeKeyVaultPasswordPtrOutput struct{ *pulumi.OutputState }

func (LinkedServiceSnowflakeKeyVaultPasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceSnowflakeKeyVaultPassword)(nil)).Elem()
}

func (o LinkedServiceSnowflakeKeyVaultPasswordPtrOutput) ToLinkedServiceSnowflakeKeyVaultPasswordPtrOutput() LinkedServiceSnowflakeKeyVaultPasswordPtrOutput {
	return o
}

func (o LinkedServiceSnowflakeKeyVaultPasswordPtrOutput) ToLinkedServiceSnowflakeKeyVaultPasswordPtrOutputWithContext(ctx context.Context) LinkedServiceSnowflakeKeyVaultPasswordPtrOutput {
	return o
}

func (o LinkedServiceSnowflakeKeyVaultPasswordPtrOutput) Elem() LinkedServiceSnowflakeKeyVaultPasswordOutput {
	return o.ApplyT(func(v *LinkedServiceSnowflakeKeyVaultPassword) LinkedServiceSnowflakeKeyVaultPassword {
		if v != nil {
			return *v
		}
		var ret LinkedServiceSnowflakeKeyVaultPassword
		return ret
	}).(LinkedServiceSnowflakeKeyVaultPasswordOutput)
}

// Specifies the name of an existing Key Vault Data Factory Linked Service.
func (o LinkedServiceSnowflakeKeyVaultPasswordPtrOutput) LinkedServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceSnowflakeKeyVaultPassword) *string {
		if v == nil {
			return nil
		}
		return &v.LinkedServiceName
	}).(pulumi.StringPtrOutput)
}

// Specifies the secret name in Azure Key Vault that stores Snowflake password.
func (o LinkedServiceSnowflakeKeyVaultPasswordPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceSnowflakeKeyVaultPassword) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type LinkedServiceSqlServerKeyVaultConnectionString struct {
	// Specifies the name of an existing Key Vault Data Factory Linked Service.
	LinkedServiceName string `pulumi:"linkedServiceName"`
	// Specifies the secret name in Azure Key Vault that stores SQL Server connection string.
	SecretName string `pulumi:"secretName"`
}

// LinkedServiceSqlServerKeyVaultConnectionStringInput is an input type that accepts LinkedServiceSqlServerKeyVaultConnectionStringArgs and LinkedServiceSqlServerKeyVaultConnectionStringOutput values.
// You can construct a concrete instance of `LinkedServiceSqlServerKeyVaultConnectionStringInput` via:
//
//	LinkedServiceSqlServerKeyVaultConnectionStringArgs{...}
type LinkedServiceSqlServerKeyVaultConnectionStringInput interface {
	pulumi.Input

	ToLinkedServiceSqlServerKeyVaultConnectionStringOutput() LinkedServiceSqlServerKeyVaultConnectionStringOutput
	ToLinkedServiceSqlServerKeyVaultConnectionStringOutputWithContext(context.Context) LinkedServiceSqlServerKeyVaultConnectionStringOutput
}

type LinkedServiceSqlServerKeyVaultConnectionStringArgs struct {
	// Specifies the name of an existing Key Vault Data Factory Linked Service.
	LinkedServiceName pulumi.StringInput `pulumi:"linkedServiceName"`
	// Specifies the secret name in Azure Key Vault that stores SQL Server connection string.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (LinkedServiceSqlServerKeyVaultConnectionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceSqlServerKeyVaultConnectionString)(nil)).Elem()
}

func (i LinkedServiceSqlServerKeyVaultConnectionStringArgs) ToLinkedServiceSqlServerKeyVaultConnectionStringOutput() LinkedServiceSqlServerKeyVaultConnectionStringOutput {
	return i.ToLinkedServiceSqlServerKeyVaultConnectionStringOutputWithContext(context.Background())
}

func (i LinkedServiceSqlServerKeyVaultConnectionStringArgs) ToLinkedServiceSqlServerKeyVaultConnectionStringOutputWithContext(ctx context.Context) LinkedServiceSqlServerKeyVaultConnectionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceSqlServerKeyVaultConnectionStringOutput)
}

func (i LinkedServiceSqlServerKeyVaultConnectionStringArgs) ToLinkedServiceSqlServerKeyVaultConnectionStringPtrOutput() LinkedServiceSqlServerKeyVaultConnectionStringPtrOutput {
	return i.ToLinkedServiceSqlServerKeyVaultConnectionStringPtrOutputWithContext(context.Background())
}

func (i LinkedServiceSqlServerKeyVaultConnectionStringArgs) ToLinkedServiceSqlServerKeyVaultConnectionStringPtrOutputWithContext(ctx context.Context) LinkedServiceSqlServerKeyVaultConnectionStringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceSqlServerKeyVaultConnectionStringOutput).ToLinkedServiceSqlServerKeyVaultConnectionStringPtrOutputWithContext(ctx)
}

// LinkedServiceSqlServerKeyVaultConnectionStringPtrInput is an input type that accepts LinkedServiceSqlServerKeyVaultConnectionStringArgs, LinkedServiceSqlServerKeyVaultConnectionStringPtr and LinkedServiceSqlServerKeyVaultConnectionStringPtrOutput values.
// You can construct a concrete instance of `LinkedServiceSqlServerKeyVaultConnectionStringPtrInput` via:
//
//	        LinkedServiceSqlServerKeyVaultConnectionStringArgs{...}
//
//	or:
//
//	        nil
type LinkedServiceSqlServerKeyVaultConnectionStringPtrInput interface {
	pulumi.Input

	ToLinkedServiceSqlServerKeyVaultConnectionStringPtrOutput() LinkedServiceSqlServerKeyVaultConnectionStringPtrOutput
	ToLinkedServiceSqlServerKeyVaultConnectionStringPtrOutputWithContext(context.Context) LinkedServiceSqlServerKeyVaultConnectionStringPtrOutput
}

type linkedServiceSqlServerKeyVaultConnectionStringPtrType LinkedServiceSqlServerKeyVaultConnectionStringArgs

func LinkedServiceSqlServerKeyVaultConnectionStringPtr(v *LinkedServiceSqlServerKeyVaultConnectionStringArgs) LinkedServiceSqlServerKeyVaultConnectionStringPtrInput {
	return (*linkedServiceSqlServerKeyVaultConnectionStringPtrType)(v)
}

func (*linkedServiceSqlServerKeyVaultConnectionStringPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceSqlServerKeyVaultConnectionString)(nil)).Elem()
}

func (i *linkedServiceSqlServerKeyVaultConnectionStringPtrType) ToLinkedServiceSqlServerKeyVaultConnectionStringPtrOutput() LinkedServiceSqlServerKeyVaultConnectionStringPtrOutput {
	return i.ToLinkedServiceSqlServerKeyVaultConnectionStringPtrOutputWithContext(context.Background())
}

func (i *linkedServiceSqlServerKeyVaultConnectionStringPtrType) ToLinkedServiceSqlServerKeyVaultConnectionStringPtrOutputWithContext(ctx context.Context) LinkedServiceSqlServerKeyVaultConnectionStringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceSqlServerKeyVaultConnectionStringPtrOutput)
}

type LinkedServiceSqlServerKeyVaultConnectionStringOutput struct{ *pulumi.OutputState }

func (LinkedServiceSqlServerKeyVaultConnectionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceSqlServerKeyVaultConnectionString)(nil)).Elem()
}

func (o LinkedServiceSqlServerKeyVaultConnectionStringOutput) ToLinkedServiceSqlServerKeyVaultConnectionStringOutput() LinkedServiceSqlServerKeyVaultConnectionStringOutput {
	return o
}

func (o LinkedServiceSqlServerKeyVaultConnectionStringOutput) ToLinkedServiceSqlServerKeyVaultConnectionStringOutputWithContext(ctx context.Context) LinkedServiceSqlServerKeyVaultConnectionStringOutput {
	return o
}

func (o LinkedServiceSqlServerKeyVaultConnectionStringOutput) ToLinkedServiceSqlServerKeyVaultConnectionStringPtrOutput() LinkedServiceSqlServerKeyVaultConnectionStringPtrOutput {
	return o.ToLinkedServiceSqlServerKeyVaultConnectionStringPtrOutputWithContext(context.Background())
}

func (o LinkedServiceSqlServerKeyVaultConnectionStringOutput) ToLinkedServiceSqlServerKeyVaultConnectionStringPtrOutputWithContext(ctx context.Context) LinkedServiceSqlServerKeyVaultConnectionStringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinkedServiceSqlServerKeyVaultConnectionString) *LinkedServiceSqlServerKeyVaultConnectionString {
		return &v
	}).(LinkedServiceSqlServerKeyVaultConnectionStringPtrOutput)
}

// Specifies the name of an existing Key Vault Data Factory Linked Service.
func (o LinkedServiceSqlServerKeyVaultConnectionStringOutput) LinkedServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceSqlServerKeyVaultConnectionString) string { return v.LinkedServiceName }).(pulumi.StringOutput)
}

// Specifies the secret name in Azure Key Vault that stores SQL Server connection string.
func (o LinkedServiceSqlServerKeyVaultConnectionStringOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceSqlServerKeyVaultConnectionString) string { return v.SecretName }).(pulumi.StringOutput)
}

type LinkedServiceSqlServerKeyVaultConnectionStringPtrOutput struct{ *pulumi.OutputState }

func (LinkedServiceSqlServerKeyVaultConnectionStringPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceSqlServerKeyVaultConnectionString)(nil)).Elem()
}

func (o LinkedServiceSqlServerKeyVaultConnectionStringPtrOutput) ToLinkedServiceSqlServerKeyVaultConnectionStringPtrOutput() LinkedServiceSqlServerKeyVaultConnectionStringPtrOutput {
	return o
}

func (o LinkedServiceSqlServerKeyVaultConnectionStringPtrOutput) ToLinkedServiceSqlServerKeyVaultConnectionStringPtrOutputWithContext(ctx context.Context) LinkedServiceSqlServerKeyVaultConnectionStringPtrOutput {
	return o
}

func (o LinkedServiceSqlServerKeyVaultConnectionStringPtrOutput) Elem() LinkedServiceSqlServerKeyVaultConnectionStringOutput {
	return o.ApplyT(func(v *LinkedServiceSqlServerKeyVaultConnectionString) LinkedServiceSqlServerKeyVaultConnectionString {
		if v != nil {
			return *v
		}
		var ret LinkedServiceSqlServerKeyVaultConnectionString
		return ret
	}).(LinkedServiceSqlServerKeyVaultConnectionStringOutput)
}

// Specifies the name of an existing Key Vault Data Factory Linked Service.
func (o LinkedServiceSqlServerKeyVaultConnectionStringPtrOutput) LinkedServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceSqlServerKeyVaultConnectionString) *string {
		if v == nil {
			return nil
		}
		return &v.LinkedServiceName
	}).(pulumi.StringPtrOutput)
}

// Specifies the secret name in Azure Key Vault that stores SQL Server connection string.
func (o LinkedServiceSqlServerKeyVaultConnectionStringPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceSqlServerKeyVaultConnectionString) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type LinkedServiceSqlServerKeyVaultPassword struct {
	// Specifies the name of an existing Key Vault Data Factory Linked Service.
	LinkedServiceName string `pulumi:"linkedServiceName"`
	// Specifies the secret name in Azure Key Vault that stores SQL Server password.
	SecretName string `pulumi:"secretName"`
}

// LinkedServiceSqlServerKeyVaultPasswordInput is an input type that accepts LinkedServiceSqlServerKeyVaultPasswordArgs and LinkedServiceSqlServerKeyVaultPasswordOutput values.
// You can construct a concrete instance of `LinkedServiceSqlServerKeyVaultPasswordInput` via:
//
//	LinkedServiceSqlServerKeyVaultPasswordArgs{...}
type LinkedServiceSqlServerKeyVaultPasswordInput interface {
	pulumi.Input

	ToLinkedServiceSqlServerKeyVaultPasswordOutput() LinkedServiceSqlServerKeyVaultPasswordOutput
	ToLinkedServiceSqlServerKeyVaultPasswordOutputWithContext(context.Context) LinkedServiceSqlServerKeyVaultPasswordOutput
}

type LinkedServiceSqlServerKeyVaultPasswordArgs struct {
	// Specifies the name of an existing Key Vault Data Factory Linked Service.
	LinkedServiceName pulumi.StringInput `pulumi:"linkedServiceName"`
	// Specifies the secret name in Azure Key Vault that stores SQL Server password.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (LinkedServiceSqlServerKeyVaultPasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceSqlServerKeyVaultPassword)(nil)).Elem()
}

func (i LinkedServiceSqlServerKeyVaultPasswordArgs) ToLinkedServiceSqlServerKeyVaultPasswordOutput() LinkedServiceSqlServerKeyVaultPasswordOutput {
	return i.ToLinkedServiceSqlServerKeyVaultPasswordOutputWithContext(context.Background())
}

func (i LinkedServiceSqlServerKeyVaultPasswordArgs) ToLinkedServiceSqlServerKeyVaultPasswordOutputWithContext(ctx context.Context) LinkedServiceSqlServerKeyVaultPasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceSqlServerKeyVaultPasswordOutput)
}

func (i LinkedServiceSqlServerKeyVaultPasswordArgs) ToLinkedServiceSqlServerKeyVaultPasswordPtrOutput() LinkedServiceSqlServerKeyVaultPasswordPtrOutput {
	return i.ToLinkedServiceSqlServerKeyVaultPasswordPtrOutputWithContext(context.Background())
}

func (i LinkedServiceSqlServerKeyVaultPasswordArgs) ToLinkedServiceSqlServerKeyVaultPasswordPtrOutputWithContext(ctx context.Context) LinkedServiceSqlServerKeyVaultPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceSqlServerKeyVaultPasswordOutput).ToLinkedServiceSqlServerKeyVaultPasswordPtrOutputWithContext(ctx)
}

// LinkedServiceSqlServerKeyVaultPasswordPtrInput is an input type that accepts LinkedServiceSqlServerKeyVaultPasswordArgs, LinkedServiceSqlServerKeyVaultPasswordPtr and LinkedServiceSqlServerKeyVaultPasswordPtrOutput values.
// You can construct a concrete instance of `LinkedServiceSqlServerKeyVaultPasswordPtrInput` via:
//
//	        LinkedServiceSqlServerKeyVaultPasswordArgs{...}
//
//	or:
//
//	        nil
type LinkedServiceSqlServerKeyVaultPasswordPtrInput interface {
	pulumi.Input

	ToLinkedServiceSqlServerKeyVaultPasswordPtrOutput() LinkedServiceSqlServerKeyVaultPasswordPtrOutput
	ToLinkedServiceSqlServerKeyVaultPasswordPtrOutputWithContext(context.Context) LinkedServiceSqlServerKeyVaultPasswordPtrOutput
}

type linkedServiceSqlServerKeyVaultPasswordPtrType LinkedServiceSqlServerKeyVaultPasswordArgs

func LinkedServiceSqlServerKeyVaultPasswordPtr(v *LinkedServiceSqlServerKeyVaultPasswordArgs) LinkedServiceSqlServerKeyVaultPasswordPtrInput {
	return (*linkedServiceSqlServerKeyVaultPasswordPtrType)(v)
}

func (*linkedServiceSqlServerKeyVaultPasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceSqlServerKeyVaultPassword)(nil)).Elem()
}

func (i *linkedServiceSqlServerKeyVaultPasswordPtrType) ToLinkedServiceSqlServerKeyVaultPasswordPtrOutput() LinkedServiceSqlServerKeyVaultPasswordPtrOutput {
	return i.ToLinkedServiceSqlServerKeyVaultPasswordPtrOutputWithContext(context.Background())
}

func (i *linkedServiceSqlServerKeyVaultPasswordPtrType) ToLinkedServiceSqlServerKeyVaultPasswordPtrOutputWithContext(ctx context.Context) LinkedServiceSqlServerKeyVaultPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceSqlServerKeyVaultPasswordPtrOutput)
}

type LinkedServiceSqlServerKeyVaultPasswordOutput struct{ *pulumi.OutputState }

func (LinkedServiceSqlServerKeyVaultPasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceSqlServerKeyVaultPassword)(nil)).Elem()
}

func (o LinkedServiceSqlServerKeyVaultPasswordOutput) ToLinkedServiceSqlServerKeyVaultPasswordOutput() LinkedServiceSqlServerKeyVaultPasswordOutput {
	return o
}

func (o LinkedServiceSqlServerKeyVaultPasswordOutput) ToLinkedServiceSqlServerKeyVaultPasswordOutputWithContext(ctx context.Context) LinkedServiceSqlServerKeyVaultPasswordOutput {
	return o
}

func (o LinkedServiceSqlServerKeyVaultPasswordOutput) ToLinkedServiceSqlServerKeyVaultPasswordPtrOutput() LinkedServiceSqlServerKeyVaultPasswordPtrOutput {
	return o.ToLinkedServiceSqlServerKeyVaultPasswordPtrOutputWithContext(context.Background())
}

func (o LinkedServiceSqlServerKeyVaultPasswordOutput) ToLinkedServiceSqlServerKeyVaultPasswordPtrOutputWithContext(ctx context.Context) LinkedServiceSqlServerKeyVaultPasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinkedServiceSqlServerKeyVaultPassword) *LinkedServiceSqlServerKeyVaultPassword {
		return &v
	}).(LinkedServiceSqlServerKeyVaultPasswordPtrOutput)
}

// Specifies the name of an existing Key Vault Data Factory Linked Service.
func (o LinkedServiceSqlServerKeyVaultPasswordOutput) LinkedServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceSqlServerKeyVaultPassword) string { return v.LinkedServiceName }).(pulumi.StringOutput)
}

// Specifies the secret name in Azure Key Vault that stores SQL Server password.
func (o LinkedServiceSqlServerKeyVaultPasswordOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceSqlServerKeyVaultPassword) string { return v.SecretName }).(pulumi.StringOutput)
}

type LinkedServiceSqlServerKeyVaultPasswordPtrOutput struct{ *pulumi.OutputState }

func (LinkedServiceSqlServerKeyVaultPasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceSqlServerKeyVaultPassword)(nil)).Elem()
}

func (o LinkedServiceSqlServerKeyVaultPasswordPtrOutput) ToLinkedServiceSqlServerKeyVaultPasswordPtrOutput() LinkedServiceSqlServerKeyVaultPasswordPtrOutput {
	return o
}

func (o LinkedServiceSqlServerKeyVaultPasswordPtrOutput) ToLinkedServiceSqlServerKeyVaultPasswordPtrOutputWithContext(ctx context.Context) LinkedServiceSqlServerKeyVaultPasswordPtrOutput {
	return o
}

func (o LinkedServiceSqlServerKeyVaultPasswordPtrOutput) Elem() LinkedServiceSqlServerKeyVaultPasswordOutput {
	return o.ApplyT(func(v *LinkedServiceSqlServerKeyVaultPassword) LinkedServiceSqlServerKeyVaultPassword {
		if v != nil {
			return *v
		}
		var ret LinkedServiceSqlServerKeyVaultPassword
		return ret
	}).(LinkedServiceSqlServerKeyVaultPasswordOutput)
}

// Specifies the name of an existing Key Vault Data Factory Linked Service.
func (o LinkedServiceSqlServerKeyVaultPasswordPtrOutput) LinkedServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceSqlServerKeyVaultPassword) *string {
		if v == nil {
			return nil
		}
		return &v.LinkedServiceName
	}).(pulumi.StringPtrOutput)
}

// Specifies the secret name in Azure Key Vault that stores SQL Server password.
func (o LinkedServiceSqlServerKeyVaultPasswordPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceSqlServerKeyVaultPassword) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type LinkedServiceSynapseKeyVaultPassword struct {
	// Specifies the name of an existing Key Vault Data Factory Linked Service.
	LinkedServiceName string `pulumi:"linkedServiceName"`
	// Specifies the secret name in Azure Key Vault that stores Synapse password.
	SecretName string `pulumi:"secretName"`
}

// LinkedServiceSynapseKeyVaultPasswordInput is an input type that accepts LinkedServiceSynapseKeyVaultPasswordArgs and LinkedServiceSynapseKeyVaultPasswordOutput values.
// You can construct a concrete instance of `LinkedServiceSynapseKeyVaultPasswordInput` via:
//
//	LinkedServiceSynapseKeyVaultPasswordArgs{...}
type LinkedServiceSynapseKeyVaultPasswordInput interface {
	pulumi.Input

	ToLinkedServiceSynapseKeyVaultPasswordOutput() LinkedServiceSynapseKeyVaultPasswordOutput
	ToLinkedServiceSynapseKeyVaultPasswordOutputWithContext(context.Context) LinkedServiceSynapseKeyVaultPasswordOutput
}

type LinkedServiceSynapseKeyVaultPasswordArgs struct {
	// Specifies the name of an existing Key Vault Data Factory Linked Service.
	LinkedServiceName pulumi.StringInput `pulumi:"linkedServiceName"`
	// Specifies the secret name in Azure Key Vault that stores Synapse password.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (LinkedServiceSynapseKeyVaultPasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceSynapseKeyVaultPassword)(nil)).Elem()
}

func (i LinkedServiceSynapseKeyVaultPasswordArgs) ToLinkedServiceSynapseKeyVaultPasswordOutput() LinkedServiceSynapseKeyVaultPasswordOutput {
	return i.ToLinkedServiceSynapseKeyVaultPasswordOutputWithContext(context.Background())
}

func (i LinkedServiceSynapseKeyVaultPasswordArgs) ToLinkedServiceSynapseKeyVaultPasswordOutputWithContext(ctx context.Context) LinkedServiceSynapseKeyVaultPasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceSynapseKeyVaultPasswordOutput)
}

func (i LinkedServiceSynapseKeyVaultPasswordArgs) ToLinkedServiceSynapseKeyVaultPasswordPtrOutput() LinkedServiceSynapseKeyVaultPasswordPtrOutput {
	return i.ToLinkedServiceSynapseKeyVaultPasswordPtrOutputWithContext(context.Background())
}

func (i LinkedServiceSynapseKeyVaultPasswordArgs) ToLinkedServiceSynapseKeyVaultPasswordPtrOutputWithContext(ctx context.Context) LinkedServiceSynapseKeyVaultPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceSynapseKeyVaultPasswordOutput).ToLinkedServiceSynapseKeyVaultPasswordPtrOutputWithContext(ctx)
}

// LinkedServiceSynapseKeyVaultPasswordPtrInput is an input type that accepts LinkedServiceSynapseKeyVaultPasswordArgs, LinkedServiceSynapseKeyVaultPasswordPtr and LinkedServiceSynapseKeyVaultPasswordPtrOutput values.
// You can construct a concrete instance of `LinkedServiceSynapseKeyVaultPasswordPtrInput` via:
//
//	        LinkedServiceSynapseKeyVaultPasswordArgs{...}
//
//	or:
//
//	        nil
type LinkedServiceSynapseKeyVaultPasswordPtrInput interface {
	pulumi.Input

	ToLinkedServiceSynapseKeyVaultPasswordPtrOutput() LinkedServiceSynapseKeyVaultPasswordPtrOutput
	ToLinkedServiceSynapseKeyVaultPasswordPtrOutputWithContext(context.Context) LinkedServiceSynapseKeyVaultPasswordPtrOutput
}

type linkedServiceSynapseKeyVaultPasswordPtrType LinkedServiceSynapseKeyVaultPasswordArgs

func LinkedServiceSynapseKeyVaultPasswordPtr(v *LinkedServiceSynapseKeyVaultPasswordArgs) LinkedServiceSynapseKeyVaultPasswordPtrInput {
	return (*linkedServiceSynapseKeyVaultPasswordPtrType)(v)
}

func (*linkedServiceSynapseKeyVaultPasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceSynapseKeyVaultPassword)(nil)).Elem()
}

func (i *linkedServiceSynapseKeyVaultPasswordPtrType) ToLinkedServiceSynapseKeyVaultPasswordPtrOutput() LinkedServiceSynapseKeyVaultPasswordPtrOutput {
	return i.ToLinkedServiceSynapseKeyVaultPasswordPtrOutputWithContext(context.Background())
}

func (i *linkedServiceSynapseKeyVaultPasswordPtrType) ToLinkedServiceSynapseKeyVaultPasswordPtrOutputWithContext(ctx context.Context) LinkedServiceSynapseKeyVaultPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceSynapseKeyVaultPasswordPtrOutput)
}

type LinkedServiceSynapseKeyVaultPasswordOutput struct{ *pulumi.OutputState }

func (LinkedServiceSynapseKeyVaultPasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceSynapseKeyVaultPassword)(nil)).Elem()
}

func (o LinkedServiceSynapseKeyVaultPasswordOutput) ToLinkedServiceSynapseKeyVaultPasswordOutput() LinkedServiceSynapseKeyVaultPasswordOutput {
	return o
}

func (o LinkedServiceSynapseKeyVaultPasswordOutput) ToLinkedServiceSynapseKeyVaultPasswordOutputWithContext(ctx context.Context) LinkedServiceSynapseKeyVaultPasswordOutput {
	return o
}

func (o LinkedServiceSynapseKeyVaultPasswordOutput) ToLinkedServiceSynapseKeyVaultPasswordPtrOutput() LinkedServiceSynapseKeyVaultPasswordPtrOutput {
	return o.ToLinkedServiceSynapseKeyVaultPasswordPtrOutputWithContext(context.Background())
}

func (o LinkedServiceSynapseKeyVaultPasswordOutput) ToLinkedServiceSynapseKeyVaultPasswordPtrOutputWithContext(ctx context.Context) LinkedServiceSynapseKeyVaultPasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinkedServiceSynapseKeyVaultPassword) *LinkedServiceSynapseKeyVaultPassword {
		return &v
	}).(LinkedServiceSynapseKeyVaultPasswordPtrOutput)
}

// Specifies the name of an existing Key Vault Data Factory Linked Service.
func (o LinkedServiceSynapseKeyVaultPasswordOutput) LinkedServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceSynapseKeyVaultPassword) string { return v.LinkedServiceName }).(pulumi.StringOutput)
}

// Specifies the secret name in Azure Key Vault that stores Synapse password.
func (o LinkedServiceSynapseKeyVaultPasswordOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceSynapseKeyVaultPassword) string { return v.SecretName }).(pulumi.StringOutput)
}

type LinkedServiceSynapseKeyVaultPasswordPtrOutput struct{ *pulumi.OutputState }

func (LinkedServiceSynapseKeyVaultPasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceSynapseKeyVaultPassword)(nil)).Elem()
}

func (o LinkedServiceSynapseKeyVaultPasswordPtrOutput) ToLinkedServiceSynapseKeyVaultPasswordPtrOutput() LinkedServiceSynapseKeyVaultPasswordPtrOutput {
	return o
}

func (o LinkedServiceSynapseKeyVaultPasswordPtrOutput) ToLinkedServiceSynapseKeyVaultPasswordPtrOutputWithContext(ctx context.Context) LinkedServiceSynapseKeyVaultPasswordPtrOutput {
	return o
}

func (o LinkedServiceSynapseKeyVaultPasswordPtrOutput) Elem() LinkedServiceSynapseKeyVaultPasswordOutput {
	return o.ApplyT(func(v *LinkedServiceSynapseKeyVaultPassword) LinkedServiceSynapseKeyVaultPassword {
		if v != nil {
			return *v
		}
		var ret LinkedServiceSynapseKeyVaultPassword
		return ret
	}).(LinkedServiceSynapseKeyVaultPasswordOutput)
}

// Specifies the name of an existing Key Vault Data Factory Linked Service.
func (o LinkedServiceSynapseKeyVaultPasswordPtrOutput) LinkedServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceSynapseKeyVaultPassword) *string {
		if v == nil {
			return nil
		}
		return &v.LinkedServiceName
	}).(pulumi.StringPtrOutput)
}

// Specifies the secret name in Azure Key Vault that stores Synapse password.
func (o LinkedServiceSynapseKeyVaultPasswordPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceSynapseKeyVaultPassword) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

type TriggerBlobEventPipeline struct {
	// The Data Factory Pipeline name that the trigger will act on.
	Name string `pulumi:"name"`
	// The Data Factory Pipeline parameters that the trigger will act on.
	Parameters map[string]string `pulumi:"parameters"`
}

// TriggerBlobEventPipelineInput is an input type that accepts TriggerBlobEventPipelineArgs and TriggerBlobEventPipelineOutput values.
// You can construct a concrete instance of `TriggerBlobEventPipelineInput` via:
//
//	TriggerBlobEventPipelineArgs{...}
type TriggerBlobEventPipelineInput interface {
	pulumi.Input

	ToTriggerBlobEventPipelineOutput() TriggerBlobEventPipelineOutput
	ToTriggerBlobEventPipelineOutputWithContext(context.Context) TriggerBlobEventPipelineOutput
}

type TriggerBlobEventPipelineArgs struct {
	// The Data Factory Pipeline name that the trigger will act on.
	Name pulumi.StringInput `pulumi:"name"`
	// The Data Factory Pipeline parameters that the trigger will act on.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (TriggerBlobEventPipelineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBlobEventPipeline)(nil)).Elem()
}

func (i TriggerBlobEventPipelineArgs) ToTriggerBlobEventPipelineOutput() TriggerBlobEventPipelineOutput {
	return i.ToTriggerBlobEventPipelineOutputWithContext(context.Background())
}

func (i TriggerBlobEventPipelineArgs) ToTriggerBlobEventPipelineOutputWithContext(ctx context.Context) TriggerBlobEventPipelineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBlobEventPipelineOutput)
}

// TriggerBlobEventPipelineArrayInput is an input type that accepts TriggerBlobEventPipelineArray and TriggerBlobEventPipelineArrayOutput values.
// You can construct a concrete instance of `TriggerBlobEventPipelineArrayInput` via:
//
//	TriggerBlobEventPipelineArray{ TriggerBlobEventPipelineArgs{...} }
type TriggerBlobEventPipelineArrayInput interface {
	pulumi.Input

	ToTriggerBlobEventPipelineArrayOutput() TriggerBlobEventPipelineArrayOutput
	ToTriggerBlobEventPipelineArrayOutputWithContext(context.Context) TriggerBlobEventPipelineArrayOutput
}

type TriggerBlobEventPipelineArray []TriggerBlobEventPipelineInput

func (TriggerBlobEventPipelineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBlobEventPipeline)(nil)).Elem()
}

func (i TriggerBlobEventPipelineArray) ToTriggerBlobEventPipelineArrayOutput() TriggerBlobEventPipelineArrayOutput {
	return i.ToTriggerBlobEventPipelineArrayOutputWithContext(context.Background())
}

func (i TriggerBlobEventPipelineArray) ToTriggerBlobEventPipelineArrayOutputWithContext(ctx context.Context) TriggerBlobEventPipelineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBlobEventPipelineArrayOutput)
}

type TriggerBlobEventPipelineOutput struct{ *pulumi.OutputState }

func (TriggerBlobEventPipelineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBlobEventPipeline)(nil)).Elem()
}

func (o TriggerBlobEventPipelineOutput) ToTriggerBlobEventPipelineOutput() TriggerBlobEventPipelineOutput {
	return o
}

func (o TriggerBlobEventPipelineOutput) ToTriggerBlobEventPipelineOutputWithContext(ctx context.Context) TriggerBlobEventPipelineOutput {
	return o
}

// The Data Factory Pipeline name that the trigger will act on.
func (o TriggerBlobEventPipelineOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerBlobEventPipeline) string { return v.Name }).(pulumi.StringOutput)
}

// The Data Factory Pipeline parameters that the trigger will act on.
func (o TriggerBlobEventPipelineOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v TriggerBlobEventPipeline) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type TriggerBlobEventPipelineArrayOutput struct{ *pulumi.OutputState }

func (TriggerBlobEventPipelineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBlobEventPipeline)(nil)).Elem()
}

func (o TriggerBlobEventPipelineArrayOutput) ToTriggerBlobEventPipelineArrayOutput() TriggerBlobEventPipelineArrayOutput {
	return o
}

func (o TriggerBlobEventPipelineArrayOutput) ToTriggerBlobEventPipelineArrayOutputWithContext(ctx context.Context) TriggerBlobEventPipelineArrayOutput {
	return o
}

func (o TriggerBlobEventPipelineArrayOutput) Index(i pulumi.IntInput) TriggerBlobEventPipelineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TriggerBlobEventPipeline {
		return vs[0].([]TriggerBlobEventPipeline)[vs[1].(int)]
	}).(TriggerBlobEventPipelineOutput)
}

type TriggerCustomEventPipeline struct {
	// The Data Factory Pipeline name that the trigger will act on.
	Name string `pulumi:"name"`
	// The Data Factory Pipeline parameters that the trigger will act on.
	Parameters map[string]string `pulumi:"parameters"`
}

// TriggerCustomEventPipelineInput is an input type that accepts TriggerCustomEventPipelineArgs and TriggerCustomEventPipelineOutput values.
// You can construct a concrete instance of `TriggerCustomEventPipelineInput` via:
//
//	TriggerCustomEventPipelineArgs{...}
type TriggerCustomEventPipelineInput interface {
	pulumi.Input

	ToTriggerCustomEventPipelineOutput() TriggerCustomEventPipelineOutput
	ToTriggerCustomEventPipelineOutputWithContext(context.Context) TriggerCustomEventPipelineOutput
}

type TriggerCustomEventPipelineArgs struct {
	// The Data Factory Pipeline name that the trigger will act on.
	Name pulumi.StringInput `pulumi:"name"`
	// The Data Factory Pipeline parameters that the trigger will act on.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (TriggerCustomEventPipelineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerCustomEventPipeline)(nil)).Elem()
}

func (i TriggerCustomEventPipelineArgs) ToTriggerCustomEventPipelineOutput() TriggerCustomEventPipelineOutput {
	return i.ToTriggerCustomEventPipelineOutputWithContext(context.Background())
}

func (i TriggerCustomEventPipelineArgs) ToTriggerCustomEventPipelineOutputWithContext(ctx context.Context) TriggerCustomEventPipelineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerCustomEventPipelineOutput)
}

// TriggerCustomEventPipelineArrayInput is an input type that accepts TriggerCustomEventPipelineArray and TriggerCustomEventPipelineArrayOutput values.
// You can construct a concrete instance of `TriggerCustomEventPipelineArrayInput` via:
//
//	TriggerCustomEventPipelineArray{ TriggerCustomEventPipelineArgs{...} }
type TriggerCustomEventPipelineArrayInput interface {
	pulumi.Input

	ToTriggerCustomEventPipelineArrayOutput() TriggerCustomEventPipelineArrayOutput
	ToTriggerCustomEventPipelineArrayOutputWithContext(context.Context) TriggerCustomEventPipelineArrayOutput
}

type TriggerCustomEventPipelineArray []TriggerCustomEventPipelineInput

func (TriggerCustomEventPipelineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerCustomEventPipeline)(nil)).Elem()
}

func (i TriggerCustomEventPipelineArray) ToTriggerCustomEventPipelineArrayOutput() TriggerCustomEventPipelineArrayOutput {
	return i.ToTriggerCustomEventPipelineArrayOutputWithContext(context.Background())
}

func (i TriggerCustomEventPipelineArray) ToTriggerCustomEventPipelineArrayOutputWithContext(ctx context.Context) TriggerCustomEventPipelineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerCustomEventPipelineArrayOutput)
}

type TriggerCustomEventPipelineOutput struct{ *pulumi.OutputState }

func (TriggerCustomEventPipelineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerCustomEventPipeline)(nil)).Elem()
}

func (o TriggerCustomEventPipelineOutput) ToTriggerCustomEventPipelineOutput() TriggerCustomEventPipelineOutput {
	return o
}

func (o TriggerCustomEventPipelineOutput) ToTriggerCustomEventPipelineOutputWithContext(ctx context.Context) TriggerCustomEventPipelineOutput {
	return o
}

// The Data Factory Pipeline name that the trigger will act on.
func (o TriggerCustomEventPipelineOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerCustomEventPipeline) string { return v.Name }).(pulumi.StringOutput)
}

// The Data Factory Pipeline parameters that the trigger will act on.
func (o TriggerCustomEventPipelineOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v TriggerCustomEventPipeline) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type TriggerCustomEventPipelineArrayOutput struct{ *pulumi.OutputState }

func (TriggerCustomEventPipelineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerCustomEventPipeline)(nil)).Elem()
}

func (o TriggerCustomEventPipelineArrayOutput) ToTriggerCustomEventPipelineArrayOutput() TriggerCustomEventPipelineArrayOutput {
	return o
}

func (o TriggerCustomEventPipelineArrayOutput) ToTriggerCustomEventPipelineArrayOutputWithContext(ctx context.Context) TriggerCustomEventPipelineArrayOutput {
	return o
}

func (o TriggerCustomEventPipelineArrayOutput) Index(i pulumi.IntInput) TriggerCustomEventPipelineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TriggerCustomEventPipeline {
		return vs[0].([]TriggerCustomEventPipeline)[vs[1].(int)]
	}).(TriggerCustomEventPipelineOutput)
}

type TriggerSchedulePipeline struct {
	// Reference pipeline name.
	Name string `pulumi:"name"`
	// The pipeline parameters that the trigger will act upon.
	Parameters map[string]string `pulumi:"parameters"`
}

// TriggerSchedulePipelineInput is an input type that accepts TriggerSchedulePipelineArgs and TriggerSchedulePipelineOutput values.
// You can construct a concrete instance of `TriggerSchedulePipelineInput` via:
//
//	TriggerSchedulePipelineArgs{...}
type TriggerSchedulePipelineInput interface {
	pulumi.Input

	ToTriggerSchedulePipelineOutput() TriggerSchedulePipelineOutput
	ToTriggerSchedulePipelineOutputWithContext(context.Context) TriggerSchedulePipelineOutput
}

type TriggerSchedulePipelineArgs struct {
	// Reference pipeline name.
	Name pulumi.StringInput `pulumi:"name"`
	// The pipeline parameters that the trigger will act upon.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (TriggerSchedulePipelineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerSchedulePipeline)(nil)).Elem()
}

func (i TriggerSchedulePipelineArgs) ToTriggerSchedulePipelineOutput() TriggerSchedulePipelineOutput {
	return i.ToTriggerSchedulePipelineOutputWithContext(context.Background())
}

func (i TriggerSchedulePipelineArgs) ToTriggerSchedulePipelineOutputWithContext(ctx context.Context) TriggerSchedulePipelineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerSchedulePipelineOutput)
}

// TriggerSchedulePipelineArrayInput is an input type that accepts TriggerSchedulePipelineArray and TriggerSchedulePipelineArrayOutput values.
// You can construct a concrete instance of `TriggerSchedulePipelineArrayInput` via:
//
//	TriggerSchedulePipelineArray{ TriggerSchedulePipelineArgs{...} }
type TriggerSchedulePipelineArrayInput interface {
	pulumi.Input

	ToTriggerSchedulePipelineArrayOutput() TriggerSchedulePipelineArrayOutput
	ToTriggerSchedulePipelineArrayOutputWithContext(context.Context) TriggerSchedulePipelineArrayOutput
}

type TriggerSchedulePipelineArray []TriggerSchedulePipelineInput

func (TriggerSchedulePipelineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerSchedulePipeline)(nil)).Elem()
}

func (i TriggerSchedulePipelineArray) ToTriggerSchedulePipelineArrayOutput() TriggerSchedulePipelineArrayOutput {
	return i.ToTriggerSchedulePipelineArrayOutputWithContext(context.Background())
}

func (i TriggerSchedulePipelineArray) ToTriggerSchedulePipelineArrayOutputWithContext(ctx context.Context) TriggerSchedulePipelineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerSchedulePipelineArrayOutput)
}

type TriggerSchedulePipelineOutput struct{ *pulumi.OutputState }

func (TriggerSchedulePipelineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerSchedulePipeline)(nil)).Elem()
}

func (o TriggerSchedulePipelineOutput) ToTriggerSchedulePipelineOutput() TriggerSchedulePipelineOutput {
	return o
}

func (o TriggerSchedulePipelineOutput) ToTriggerSchedulePipelineOutputWithContext(ctx context.Context) TriggerSchedulePipelineOutput {
	return o
}

// Reference pipeline name.
func (o TriggerSchedulePipelineOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerSchedulePipeline) string { return v.Name }).(pulumi.StringOutput)
}

// The pipeline parameters that the trigger will act upon.
func (o TriggerSchedulePipelineOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v TriggerSchedulePipeline) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type TriggerSchedulePipelineArrayOutput struct{ *pulumi.OutputState }

func (TriggerSchedulePipelineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerSchedulePipeline)(nil)).Elem()
}

func (o TriggerSchedulePipelineArrayOutput) ToTriggerSchedulePipelineArrayOutput() TriggerSchedulePipelineArrayOutput {
	return o
}

func (o TriggerSchedulePipelineArrayOutput) ToTriggerSchedulePipelineArrayOutputWithContext(ctx context.Context) TriggerSchedulePipelineArrayOutput {
	return o
}

func (o TriggerSchedulePipelineArrayOutput) Index(i pulumi.IntInput) TriggerSchedulePipelineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TriggerSchedulePipeline {
		return vs[0].([]TriggerSchedulePipeline)[vs[1].(int)]
	}).(TriggerSchedulePipelineOutput)
}

type TriggerScheduleSchedule struct {
	// Day(s) of the month on which the trigger is scheduled. This value can be specified with a monthly frequency only.
	DaysOfMonths []int `pulumi:"daysOfMonths"`
	// Days of the week on which the trigger is scheduled. This value can be specified only with a weekly frequency.
	DaysOfWeeks []string `pulumi:"daysOfWeeks"`
	// Hours of the day on which the trigger is scheduled.
	Hours []int `pulumi:"hours"`
	// Minutes of the hour on which the trigger is scheduled.
	Minutes []int `pulumi:"minutes"`
	// A `monthly` block as documented below, which specifies the days of the month on which the trigger is scheduled. The value can be specified only with a monthly frequency.
	Monthlies []TriggerScheduleScheduleMonthly `pulumi:"monthlies"`
}

// TriggerScheduleScheduleInput is an input type that accepts TriggerScheduleScheduleArgs and TriggerScheduleScheduleOutput values.
// You can construct a concrete instance of `TriggerScheduleScheduleInput` via:
//
//	TriggerScheduleScheduleArgs{...}
type TriggerScheduleScheduleInput interface {
	pulumi.Input

	ToTriggerScheduleScheduleOutput() TriggerScheduleScheduleOutput
	ToTriggerScheduleScheduleOutputWithContext(context.Context) TriggerScheduleScheduleOutput
}

type TriggerScheduleScheduleArgs struct {
	// Day(s) of the month on which the trigger is scheduled. This value can be specified with a monthly frequency only.
	DaysOfMonths pulumi.IntArrayInput `pulumi:"daysOfMonths"`
	// Days of the week on which the trigger is scheduled. This value can be specified only with a weekly frequency.
	DaysOfWeeks pulumi.StringArrayInput `pulumi:"daysOfWeeks"`
	// Hours of the day on which the trigger is scheduled.
	Hours pulumi.IntArrayInput `pulumi:"hours"`
	// Minutes of the hour on which the trigger is scheduled.
	Minutes pulumi.IntArrayInput `pulumi:"minutes"`
	// A `monthly` block as documented below, which specifies the days of the month on which the trigger is scheduled. The value can be specified only with a monthly frequency.
	Monthlies TriggerScheduleScheduleMonthlyArrayInput `pulumi:"monthlies"`
}

func (TriggerScheduleScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerScheduleSchedule)(nil)).Elem()
}

func (i TriggerScheduleScheduleArgs) ToTriggerScheduleScheduleOutput() TriggerScheduleScheduleOutput {
	return i.ToTriggerScheduleScheduleOutputWithContext(context.Background())
}

func (i TriggerScheduleScheduleArgs) ToTriggerScheduleScheduleOutputWithContext(ctx context.Context) TriggerScheduleScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerScheduleScheduleOutput)
}

func (i TriggerScheduleScheduleArgs) ToTriggerScheduleSchedulePtrOutput() TriggerScheduleSchedulePtrOutput {
	return i.ToTriggerScheduleSchedulePtrOutputWithContext(context.Background())
}

func (i TriggerScheduleScheduleArgs) ToTriggerScheduleSchedulePtrOutputWithContext(ctx context.Context) TriggerScheduleSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerScheduleScheduleOutput).ToTriggerScheduleSchedulePtrOutputWithContext(ctx)
}

// TriggerScheduleSchedulePtrInput is an input type that accepts TriggerScheduleScheduleArgs, TriggerScheduleSchedulePtr and TriggerScheduleSchedulePtrOutput values.
// You can construct a concrete instance of `TriggerScheduleSchedulePtrInput` via:
//
//	        TriggerScheduleScheduleArgs{...}
//
//	or:
//
//	        nil
type TriggerScheduleSchedulePtrInput interface {
	pulumi.Input

	ToTriggerScheduleSchedulePtrOutput() TriggerScheduleSchedulePtrOutput
	ToTriggerScheduleSchedulePtrOutputWithContext(context.Context) TriggerScheduleSchedulePtrOutput
}

type triggerScheduleSchedulePtrType TriggerScheduleScheduleArgs

func TriggerScheduleSchedulePtr(v *TriggerScheduleScheduleArgs) TriggerScheduleSchedulePtrInput {
	return (*triggerScheduleSchedulePtrType)(v)
}

func (*triggerScheduleSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerScheduleSchedule)(nil)).Elem()
}

func (i *triggerScheduleSchedulePtrType) ToTriggerScheduleSchedulePtrOutput() TriggerScheduleSchedulePtrOutput {
	return i.ToTriggerScheduleSchedulePtrOutputWithContext(context.Background())
}

func (i *triggerScheduleSchedulePtrType) ToTriggerScheduleSchedulePtrOutputWithContext(ctx context.Context) TriggerScheduleSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerScheduleSchedulePtrOutput)
}

type TriggerScheduleScheduleOutput struct{ *pulumi.OutputState }

func (TriggerScheduleScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerScheduleSchedule)(nil)).Elem()
}

func (o TriggerScheduleScheduleOutput) ToTriggerScheduleScheduleOutput() TriggerScheduleScheduleOutput {
	return o
}

func (o TriggerScheduleScheduleOutput) ToTriggerScheduleScheduleOutputWithContext(ctx context.Context) TriggerScheduleScheduleOutput {
	return o
}

func (o TriggerScheduleScheduleOutput) ToTriggerScheduleSchedulePtrOutput() TriggerScheduleSchedulePtrOutput {
	return o.ToTriggerScheduleSchedulePtrOutputWithContext(context.Background())
}

func (o TriggerScheduleScheduleOutput) ToTriggerScheduleSchedulePtrOutputWithContext(ctx context.Context) TriggerScheduleSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerScheduleSchedule) *TriggerScheduleSchedule {
		return &v
	}).(TriggerScheduleSchedulePtrOutput)
}

// Day(s) of the month on which the trigger is scheduled. This value can be specified with a monthly frequency only.
func (o TriggerScheduleScheduleOutput) DaysOfMonths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v TriggerScheduleSchedule) []int { return v.DaysOfMonths }).(pulumi.IntArrayOutput)
}

// Days of the week on which the trigger is scheduled. This value can be specified only with a weekly frequency.
func (o TriggerScheduleScheduleOutput) DaysOfWeeks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerScheduleSchedule) []string { return v.DaysOfWeeks }).(pulumi.StringArrayOutput)
}

// Hours of the day on which the trigger is scheduled.
func (o TriggerScheduleScheduleOutput) Hours() pulumi.IntArrayOutput {
	return o.ApplyT(func(v TriggerScheduleSchedule) []int { return v.Hours }).(pulumi.IntArrayOutput)
}

// Minutes of the hour on which the trigger is scheduled.
func (o TriggerScheduleScheduleOutput) Minutes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v TriggerScheduleSchedule) []int { return v.Minutes }).(pulumi.IntArrayOutput)
}

// A `monthly` block as documented below, which specifies the days of the month on which the trigger is scheduled. The value can be specified only with a monthly frequency.
func (o TriggerScheduleScheduleOutput) Monthlies() TriggerScheduleScheduleMonthlyArrayOutput {
	return o.ApplyT(func(v TriggerScheduleSchedule) []TriggerScheduleScheduleMonthly { return v.Monthlies }).(TriggerScheduleScheduleMonthlyArrayOutput)
}

type TriggerScheduleSchedulePtrOutput struct{ *pulumi.OutputState }

func (TriggerScheduleSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerScheduleSchedule)(nil)).Elem()
}

func (o TriggerScheduleSchedulePtrOutput) ToTriggerScheduleSchedulePtrOutput() TriggerScheduleSchedulePtrOutput {
	return o
}

func (o TriggerScheduleSchedulePtrOutput) ToTriggerScheduleSchedulePtrOutputWithContext(ctx context.Context) TriggerScheduleSchedulePtrOutput {
	return o
}

func (o TriggerScheduleSchedulePtrOutput) Elem() TriggerScheduleScheduleOutput {
	return o.ApplyT(func(v *TriggerScheduleSchedule) TriggerScheduleSchedule {
		if v != nil {
			return *v
		}
		var ret TriggerScheduleSchedule
		return ret
	}).(TriggerScheduleScheduleOutput)
}

// Day(s) of the month on which the trigger is scheduled. This value can be specified with a monthly frequency only.
func (o TriggerScheduleSchedulePtrOutput) DaysOfMonths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *TriggerScheduleSchedule) []int {
		if v == nil {
			return nil
		}
		return v.DaysOfMonths
	}).(pulumi.IntArrayOutput)
}

// Days of the week on which the trigger is scheduled. This value can be specified only with a weekly frequency.
func (o TriggerScheduleSchedulePtrOutput) DaysOfWeeks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TriggerScheduleSchedule) []string {
		if v == nil {
			return nil
		}
		return v.DaysOfWeeks
	}).(pulumi.StringArrayOutput)
}

// Hours of the day on which the trigger is scheduled.
func (o TriggerScheduleSchedulePtrOutput) Hours() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *TriggerScheduleSchedule) []int {
		if v == nil {
			return nil
		}
		return v.Hours
	}).(pulumi.IntArrayOutput)
}

// Minutes of the hour on which the trigger is scheduled.
func (o TriggerScheduleSchedulePtrOutput) Minutes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *TriggerScheduleSchedule) []int {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.IntArrayOutput)
}

// A `monthly` block as documented below, which specifies the days of the month on which the trigger is scheduled. The value can be specified only with a monthly frequency.
func (o TriggerScheduleSchedulePtrOutput) Monthlies() TriggerScheduleScheduleMonthlyArrayOutput {
	return o.ApplyT(func(v *TriggerScheduleSchedule) []TriggerScheduleScheduleMonthly {
		if v == nil {
			return nil
		}
		return v.Monthlies
	}).(TriggerScheduleScheduleMonthlyArrayOutput)
}

type TriggerScheduleScheduleMonthly struct {
	// The occurrence of the specified day during the month. For example, a `monthly` property with `weekday` and `week` values of `Sunday, -1` means the last Sunday of the month.
	Week *int `pulumi:"week"`
	// The day of the week on which the trigger runs. For example, a `monthly` property with a `weekday` value of `Sunday` means every Sunday of the month.
	Weekday string `pulumi:"weekday"`
}

// TriggerScheduleScheduleMonthlyInput is an input type that accepts TriggerScheduleScheduleMonthlyArgs and TriggerScheduleScheduleMonthlyOutput values.
// You can construct a concrete instance of `TriggerScheduleScheduleMonthlyInput` via:
//
//	TriggerScheduleScheduleMonthlyArgs{...}
type TriggerScheduleScheduleMonthlyInput interface {
	pulumi.Input

	ToTriggerScheduleScheduleMonthlyOutput() TriggerScheduleScheduleMonthlyOutput
	ToTriggerScheduleScheduleMonthlyOutputWithContext(context.Context) TriggerScheduleScheduleMonthlyOutput
}

type TriggerScheduleScheduleMonthlyArgs struct {
	// The occurrence of the specified day during the month. For example, a `monthly` property with `weekday` and `week` values of `Sunday, -1` means the last Sunday of the month.
	Week pulumi.IntPtrInput `pulumi:"week"`
	// The day of the week on which the trigger runs. For example, a `monthly` property with a `weekday` value of `Sunday` means every Sunday of the month.
	Weekday pulumi.StringInput `pulumi:"weekday"`
}

func (TriggerScheduleScheduleMonthlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerScheduleScheduleMonthly)(nil)).Elem()
}

func (i TriggerScheduleScheduleMonthlyArgs) ToTriggerScheduleScheduleMonthlyOutput() TriggerScheduleScheduleMonthlyOutput {
	return i.ToTriggerScheduleScheduleMonthlyOutputWithContext(context.Background())
}

func (i TriggerScheduleScheduleMonthlyArgs) ToTriggerScheduleScheduleMonthlyOutputWithContext(ctx context.Context) TriggerScheduleScheduleMonthlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerScheduleScheduleMonthlyOutput)
}

// TriggerScheduleScheduleMonthlyArrayInput is an input type that accepts TriggerScheduleScheduleMonthlyArray and TriggerScheduleScheduleMonthlyArrayOutput values.
// You can construct a concrete instance of `TriggerScheduleScheduleMonthlyArrayInput` via:
//
//	TriggerScheduleScheduleMonthlyArray{ TriggerScheduleScheduleMonthlyArgs{...} }
type TriggerScheduleScheduleMonthlyArrayInput interface {
	pulumi.Input

	ToTriggerScheduleScheduleMonthlyArrayOutput() TriggerScheduleScheduleMonthlyArrayOutput
	ToTriggerScheduleScheduleMonthlyArrayOutputWithContext(context.Context) TriggerScheduleScheduleMonthlyArrayOutput
}

type TriggerScheduleScheduleMonthlyArray []TriggerScheduleScheduleMonthlyInput

func (TriggerScheduleScheduleMonthlyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerScheduleScheduleMonthly)(nil)).Elem()
}

func (i TriggerScheduleScheduleMonthlyArray) ToTriggerScheduleScheduleMonthlyArrayOutput() TriggerScheduleScheduleMonthlyArrayOutput {
	return i.ToTriggerScheduleScheduleMonthlyArrayOutputWithContext(context.Background())
}

func (i TriggerScheduleScheduleMonthlyArray) ToTriggerScheduleScheduleMonthlyArrayOutputWithContext(ctx context.Context) TriggerScheduleScheduleMonthlyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerScheduleScheduleMonthlyArrayOutput)
}

type TriggerScheduleScheduleMonthlyOutput struct{ *pulumi.OutputState }

func (TriggerScheduleScheduleMonthlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerScheduleScheduleMonthly)(nil)).Elem()
}

func (o TriggerScheduleScheduleMonthlyOutput) ToTriggerScheduleScheduleMonthlyOutput() TriggerScheduleScheduleMonthlyOutput {
	return o
}

func (o TriggerScheduleScheduleMonthlyOutput) ToTriggerScheduleScheduleMonthlyOutputWithContext(ctx context.Context) TriggerScheduleScheduleMonthlyOutput {
	return o
}

// The occurrence of the specified day during the month. For example, a `monthly` property with `weekday` and `week` values of `Sunday, -1` means the last Sunday of the month.
func (o TriggerScheduleScheduleMonthlyOutput) Week() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TriggerScheduleScheduleMonthly) *int { return v.Week }).(pulumi.IntPtrOutput)
}

// The day of the week on which the trigger runs. For example, a `monthly` property with a `weekday` value of `Sunday` means every Sunday of the month.
func (o TriggerScheduleScheduleMonthlyOutput) Weekday() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerScheduleScheduleMonthly) string { return v.Weekday }).(pulumi.StringOutput)
}

type TriggerScheduleScheduleMonthlyArrayOutput struct{ *pulumi.OutputState }

func (TriggerScheduleScheduleMonthlyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerScheduleScheduleMonthly)(nil)).Elem()
}

func (o TriggerScheduleScheduleMonthlyArrayOutput) ToTriggerScheduleScheduleMonthlyArrayOutput() TriggerScheduleScheduleMonthlyArrayOutput {
	return o
}

func (o TriggerScheduleScheduleMonthlyArrayOutput) ToTriggerScheduleScheduleMonthlyArrayOutputWithContext(ctx context.Context) TriggerScheduleScheduleMonthlyArrayOutput {
	return o
}

func (o TriggerScheduleScheduleMonthlyArrayOutput) Index(i pulumi.IntInput) TriggerScheduleScheduleMonthlyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TriggerScheduleScheduleMonthly {
		return vs[0].([]TriggerScheduleScheduleMonthly)[vs[1].(int)]
	}).(TriggerScheduleScheduleMonthlyOutput)
}

type TriggerTumblingWindowPipeline struct {
	// The Data Factory Pipeline name that the trigger will act on.
	Name string `pulumi:"name"`
	// The Data Factory Pipeline parameters that the trigger will act on.
	Parameters map[string]string `pulumi:"parameters"`
}

// TriggerTumblingWindowPipelineInput is an input type that accepts TriggerTumblingWindowPipelineArgs and TriggerTumblingWindowPipelineOutput values.
// You can construct a concrete instance of `TriggerTumblingWindowPipelineInput` via:
//
//	TriggerTumblingWindowPipelineArgs{...}
type TriggerTumblingWindowPipelineInput interface {
	pulumi.Input

	ToTriggerTumblingWindowPipelineOutput() TriggerTumblingWindowPipelineOutput
	ToTriggerTumblingWindowPipelineOutputWithContext(context.Context) TriggerTumblingWindowPipelineOutput
}

type TriggerTumblingWindowPipelineArgs struct {
	// The Data Factory Pipeline name that the trigger will act on.
	Name pulumi.StringInput `pulumi:"name"`
	// The Data Factory Pipeline parameters that the trigger will act on.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (TriggerTumblingWindowPipelineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerTumblingWindowPipeline)(nil)).Elem()
}

func (i TriggerTumblingWindowPipelineArgs) ToTriggerTumblingWindowPipelineOutput() TriggerTumblingWindowPipelineOutput {
	return i.ToTriggerTumblingWindowPipelineOutputWithContext(context.Background())
}

func (i TriggerTumblingWindowPipelineArgs) ToTriggerTumblingWindowPipelineOutputWithContext(ctx context.Context) TriggerTumblingWindowPipelineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerTumblingWindowPipelineOutput)
}

func (i TriggerTumblingWindowPipelineArgs) ToTriggerTumblingWindowPipelinePtrOutput() TriggerTumblingWindowPipelinePtrOutput {
	return i.ToTriggerTumblingWindowPipelinePtrOutputWithContext(context.Background())
}

func (i TriggerTumblingWindowPipelineArgs) ToTriggerTumblingWindowPipelinePtrOutputWithContext(ctx context.Context) TriggerTumblingWindowPipelinePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerTumblingWindowPipelineOutput).ToTriggerTumblingWindowPipelinePtrOutputWithContext(ctx)
}

// TriggerTumblingWindowPipelinePtrInput is an input type that accepts TriggerTumblingWindowPipelineArgs, TriggerTumblingWindowPipelinePtr and TriggerTumblingWindowPipelinePtrOutput values.
// You can construct a concrete instance of `TriggerTumblingWindowPipelinePtrInput` via:
//
//	        TriggerTumblingWindowPipelineArgs{...}
//
//	or:
//
//	        nil
type TriggerTumblingWindowPipelinePtrInput interface {
	pulumi.Input

	ToTriggerTumblingWindowPipelinePtrOutput() TriggerTumblingWindowPipelinePtrOutput
	ToTriggerTumblingWindowPipelinePtrOutputWithContext(context.Context) TriggerTumblingWindowPipelinePtrOutput
}

type triggerTumblingWindowPipelinePtrType TriggerTumblingWindowPipelineArgs

func TriggerTumblingWindowPipelinePtr(v *TriggerTumblingWindowPipelineArgs) TriggerTumblingWindowPipelinePtrInput {
	return (*triggerTumblingWindowPipelinePtrType)(v)
}

func (*triggerTumblingWindowPipelinePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerTumblingWindowPipeline)(nil)).Elem()
}

func (i *triggerTumblingWindowPipelinePtrType) ToTriggerTumblingWindowPipelinePtrOutput() TriggerTumblingWindowPipelinePtrOutput {
	return i.ToTriggerTumblingWindowPipelinePtrOutputWithContext(context.Background())
}

func (i *triggerTumblingWindowPipelinePtrType) ToTriggerTumblingWindowPipelinePtrOutputWithContext(ctx context.Context) TriggerTumblingWindowPipelinePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerTumblingWindowPipelinePtrOutput)
}

type TriggerTumblingWindowPipelineOutput struct{ *pulumi.OutputState }

func (TriggerTumblingWindowPipelineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerTumblingWindowPipeline)(nil)).Elem()
}

func (o TriggerTumblingWindowPipelineOutput) ToTriggerTumblingWindowPipelineOutput() TriggerTumblingWindowPipelineOutput {
	return o
}

func (o TriggerTumblingWindowPipelineOutput) ToTriggerTumblingWindowPipelineOutputWithContext(ctx context.Context) TriggerTumblingWindowPipelineOutput {
	return o
}

func (o TriggerTumblingWindowPipelineOutput) ToTriggerTumblingWindowPipelinePtrOutput() TriggerTumblingWindowPipelinePtrOutput {
	return o.ToTriggerTumblingWindowPipelinePtrOutputWithContext(context.Background())
}

func (o TriggerTumblingWindowPipelineOutput) ToTriggerTumblingWindowPipelinePtrOutputWithContext(ctx context.Context) TriggerTumblingWindowPipelinePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerTumblingWindowPipeline) *TriggerTumblingWindowPipeline {
		return &v
	}).(TriggerTumblingWindowPipelinePtrOutput)
}

// The Data Factory Pipeline name that the trigger will act on.
func (o TriggerTumblingWindowPipelineOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerTumblingWindowPipeline) string { return v.Name }).(pulumi.StringOutput)
}

// The Data Factory Pipeline parameters that the trigger will act on.
func (o TriggerTumblingWindowPipelineOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v TriggerTumblingWindowPipeline) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type TriggerTumblingWindowPipelinePtrOutput struct{ *pulumi.OutputState }

func (TriggerTumblingWindowPipelinePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerTumblingWindowPipeline)(nil)).Elem()
}

func (o TriggerTumblingWindowPipelinePtrOutput) ToTriggerTumblingWindowPipelinePtrOutput() TriggerTumblingWindowPipelinePtrOutput {
	return o
}

func (o TriggerTumblingWindowPipelinePtrOutput) ToTriggerTumblingWindowPipelinePtrOutputWithContext(ctx context.Context) TriggerTumblingWindowPipelinePtrOutput {
	return o
}

func (o TriggerTumblingWindowPipelinePtrOutput) Elem() TriggerTumblingWindowPipelineOutput {
	return o.ApplyT(func(v *TriggerTumblingWindowPipeline) TriggerTumblingWindowPipeline {
		if v != nil {
			return *v
		}
		var ret TriggerTumblingWindowPipeline
		return ret
	}).(TriggerTumblingWindowPipelineOutput)
}

// The Data Factory Pipeline name that the trigger will act on.
func (o TriggerTumblingWindowPipelinePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerTumblingWindowPipeline) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The Data Factory Pipeline parameters that the trigger will act on.
func (o TriggerTumblingWindowPipelinePtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TriggerTumblingWindowPipeline) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type TriggerTumblingWindowRetry struct {
	// The maximum retry attempts if the pipeline run failed.
	Count int `pulumi:"count"`
	// The Interval in seconds between each retry if the pipeline run failed. Defaults to `30`.
	Interval *int `pulumi:"interval"`
}

// TriggerTumblingWindowRetryInput is an input type that accepts TriggerTumblingWindowRetryArgs and TriggerTumblingWindowRetryOutput values.
// You can construct a concrete instance of `TriggerTumblingWindowRetryInput` via:
//
//	TriggerTumblingWindowRetryArgs{...}
type TriggerTumblingWindowRetryInput interface {
	pulumi.Input

	ToTriggerTumblingWindowRetryOutput() TriggerTumblingWindowRetryOutput
	ToTriggerTumblingWindowRetryOutputWithContext(context.Context) TriggerTumblingWindowRetryOutput
}

type TriggerTumblingWindowRetryArgs struct {
	// The maximum retry attempts if the pipeline run failed.
	Count pulumi.IntInput `pulumi:"count"`
	// The Interval in seconds between each retry if the pipeline run failed. Defaults to `30`.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
}

func (TriggerTumblingWindowRetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerTumblingWindowRetry)(nil)).Elem()
}

func (i TriggerTumblingWindowRetryArgs) ToTriggerTumblingWindowRetryOutput() TriggerTumblingWindowRetryOutput {
	return i.ToTriggerTumblingWindowRetryOutputWithContext(context.Background())
}

func (i TriggerTumblingWindowRetryArgs) ToTriggerTumblingWindowRetryOutputWithContext(ctx context.Context) TriggerTumblingWindowRetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerTumblingWindowRetryOutput)
}

func (i TriggerTumblingWindowRetryArgs) ToTriggerTumblingWindowRetryPtrOutput() TriggerTumblingWindowRetryPtrOutput {
	return i.ToTriggerTumblingWindowRetryPtrOutputWithContext(context.Background())
}

func (i TriggerTumblingWindowRetryArgs) ToTriggerTumblingWindowRetryPtrOutputWithContext(ctx context.Context) TriggerTumblingWindowRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerTumblingWindowRetryOutput).ToTriggerTumblingWindowRetryPtrOutputWithContext(ctx)
}

// TriggerTumblingWindowRetryPtrInput is an input type that accepts TriggerTumblingWindowRetryArgs, TriggerTumblingWindowRetryPtr and TriggerTumblingWindowRetryPtrOutput values.
// You can construct a concrete instance of `TriggerTumblingWindowRetryPtrInput` via:
//
//	        TriggerTumblingWindowRetryArgs{...}
//
//	or:
//
//	        nil
type TriggerTumblingWindowRetryPtrInput interface {
	pulumi.Input

	ToTriggerTumblingWindowRetryPtrOutput() TriggerTumblingWindowRetryPtrOutput
	ToTriggerTumblingWindowRetryPtrOutputWithContext(context.Context) TriggerTumblingWindowRetryPtrOutput
}

type triggerTumblingWindowRetryPtrType TriggerTumblingWindowRetryArgs

func TriggerTumblingWindowRetryPtr(v *TriggerTumblingWindowRetryArgs) TriggerTumblingWindowRetryPtrInput {
	return (*triggerTumblingWindowRetryPtrType)(v)
}

func (*triggerTumblingWindowRetryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerTumblingWindowRetry)(nil)).Elem()
}

func (i *triggerTumblingWindowRetryPtrType) ToTriggerTumblingWindowRetryPtrOutput() TriggerTumblingWindowRetryPtrOutput {
	return i.ToTriggerTumblingWindowRetryPtrOutputWithContext(context.Background())
}

func (i *triggerTumblingWindowRetryPtrType) ToTriggerTumblingWindowRetryPtrOutputWithContext(ctx context.Context) TriggerTumblingWindowRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerTumblingWindowRetryPtrOutput)
}

type TriggerTumblingWindowRetryOutput struct{ *pulumi.OutputState }

func (TriggerTumblingWindowRetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerTumblingWindowRetry)(nil)).Elem()
}

func (o TriggerTumblingWindowRetryOutput) ToTriggerTumblingWindowRetryOutput() TriggerTumblingWindowRetryOutput {
	return o
}

func (o TriggerTumblingWindowRetryOutput) ToTriggerTumblingWindowRetryOutputWithContext(ctx context.Context) TriggerTumblingWindowRetryOutput {
	return o
}

func (o TriggerTumblingWindowRetryOutput) ToTriggerTumblingWindowRetryPtrOutput() TriggerTumblingWindowRetryPtrOutput {
	return o.ToTriggerTumblingWindowRetryPtrOutputWithContext(context.Background())
}

func (o TriggerTumblingWindowRetryOutput) ToTriggerTumblingWindowRetryPtrOutputWithContext(ctx context.Context) TriggerTumblingWindowRetryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerTumblingWindowRetry) *TriggerTumblingWindowRetry {
		return &v
	}).(TriggerTumblingWindowRetryPtrOutput)
}

// The maximum retry attempts if the pipeline run failed.
func (o TriggerTumblingWindowRetryOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v TriggerTumblingWindowRetry) int { return v.Count }).(pulumi.IntOutput)
}

// The Interval in seconds between each retry if the pipeline run failed. Defaults to `30`.
func (o TriggerTumblingWindowRetryOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TriggerTumblingWindowRetry) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

type TriggerTumblingWindowRetryPtrOutput struct{ *pulumi.OutputState }

func (TriggerTumblingWindowRetryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerTumblingWindowRetry)(nil)).Elem()
}

func (o TriggerTumblingWindowRetryPtrOutput) ToTriggerTumblingWindowRetryPtrOutput() TriggerTumblingWindowRetryPtrOutput {
	return o
}

func (o TriggerTumblingWindowRetryPtrOutput) ToTriggerTumblingWindowRetryPtrOutputWithContext(ctx context.Context) TriggerTumblingWindowRetryPtrOutput {
	return o
}

func (o TriggerTumblingWindowRetryPtrOutput) Elem() TriggerTumblingWindowRetryOutput {
	return o.ApplyT(func(v *TriggerTumblingWindowRetry) TriggerTumblingWindowRetry {
		if v != nil {
			return *v
		}
		var ret TriggerTumblingWindowRetry
		return ret
	}).(TriggerTumblingWindowRetryOutput)
}

// The maximum retry attempts if the pipeline run failed.
func (o TriggerTumblingWindowRetryPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TriggerTumblingWindowRetry) *int {
		if v == nil {
			return nil
		}
		return &v.Count
	}).(pulumi.IntPtrOutput)
}

// The Interval in seconds between each retry if the pipeline run failed. Defaults to `30`.
func (o TriggerTumblingWindowRetryPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TriggerTumblingWindowRetry) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

type TriggerTumblingWindowTriggerDependency struct {
	// The offset of the dependency trigger. Must be in Timespan format (±hh:mm:ss) and must be a negative offset for a self dependency.
	Offset *string `pulumi:"offset"`
	// The size of the dependency tumbling window. Must be in Timespan format (hh:mm:ss).
	Size *string `pulumi:"size"`
	// The dependency trigger name. If not specified, it will use self dependency.
	TriggerName *string `pulumi:"triggerName"`
}

// TriggerTumblingWindowTriggerDependencyInput is an input type that accepts TriggerTumblingWindowTriggerDependencyArgs and TriggerTumblingWindowTriggerDependencyOutput values.
// You can construct a concrete instance of `TriggerTumblingWindowTriggerDependencyInput` via:
//
//	TriggerTumblingWindowTriggerDependencyArgs{...}
type TriggerTumblingWindowTriggerDependencyInput interface {
	pulumi.Input

	ToTriggerTumblingWindowTriggerDependencyOutput() TriggerTumblingWindowTriggerDependencyOutput
	ToTriggerTumblingWindowTriggerDependencyOutputWithContext(context.Context) TriggerTumblingWindowTriggerDependencyOutput
}

type TriggerTumblingWindowTriggerDependencyArgs struct {
	// The offset of the dependency trigger. Must be in Timespan format (±hh:mm:ss) and must be a negative offset for a self dependency.
	Offset pulumi.StringPtrInput `pulumi:"offset"`
	// The size of the dependency tumbling window. Must be in Timespan format (hh:mm:ss).
	Size pulumi.StringPtrInput `pulumi:"size"`
	// The dependency trigger name. If not specified, it will use self dependency.
	TriggerName pulumi.StringPtrInput `pulumi:"triggerName"`
}

func (TriggerTumblingWindowTriggerDependencyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerTumblingWindowTriggerDependency)(nil)).Elem()
}

func (i TriggerTumblingWindowTriggerDependencyArgs) ToTriggerTumblingWindowTriggerDependencyOutput() TriggerTumblingWindowTriggerDependencyOutput {
	return i.ToTriggerTumblingWindowTriggerDependencyOutputWithContext(context.Background())
}

func (i TriggerTumblingWindowTriggerDependencyArgs) ToTriggerTumblingWindowTriggerDependencyOutputWithContext(ctx context.Context) TriggerTumblingWindowTriggerDependencyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerTumblingWindowTriggerDependencyOutput)
}

// TriggerTumblingWindowTriggerDependencyArrayInput is an input type that accepts TriggerTumblingWindowTriggerDependencyArray and TriggerTumblingWindowTriggerDependencyArrayOutput values.
// You can construct a concrete instance of `TriggerTumblingWindowTriggerDependencyArrayInput` via:
//
//	TriggerTumblingWindowTriggerDependencyArray{ TriggerTumblingWindowTriggerDependencyArgs{...} }
type TriggerTumblingWindowTriggerDependencyArrayInput interface {
	pulumi.Input

	ToTriggerTumblingWindowTriggerDependencyArrayOutput() TriggerTumblingWindowTriggerDependencyArrayOutput
	ToTriggerTumblingWindowTriggerDependencyArrayOutputWithContext(context.Context) TriggerTumblingWindowTriggerDependencyArrayOutput
}

type TriggerTumblingWindowTriggerDependencyArray []TriggerTumblingWindowTriggerDependencyInput

func (TriggerTumblingWindowTriggerDependencyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerTumblingWindowTriggerDependency)(nil)).Elem()
}

func (i TriggerTumblingWindowTriggerDependencyArray) ToTriggerTumblingWindowTriggerDependencyArrayOutput() TriggerTumblingWindowTriggerDependencyArrayOutput {
	return i.ToTriggerTumblingWindowTriggerDependencyArrayOutputWithContext(context.Background())
}

func (i TriggerTumblingWindowTriggerDependencyArray) ToTriggerTumblingWindowTriggerDependencyArrayOutputWithContext(ctx context.Context) TriggerTumblingWindowTriggerDependencyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerTumblingWindowTriggerDependencyArrayOutput)
}

type TriggerTumblingWindowTriggerDependencyOutput struct{ *pulumi.OutputState }

func (TriggerTumblingWindowTriggerDependencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerTumblingWindowTriggerDependency)(nil)).Elem()
}

func (o TriggerTumblingWindowTriggerDependencyOutput) ToTriggerTumblingWindowTriggerDependencyOutput() TriggerTumblingWindowTriggerDependencyOutput {
	return o
}

func (o TriggerTumblingWindowTriggerDependencyOutput) ToTriggerTumblingWindowTriggerDependencyOutputWithContext(ctx context.Context) TriggerTumblingWindowTriggerDependencyOutput {
	return o
}

// The offset of the dependency trigger. Must be in Timespan format (±hh:mm:ss) and must be a negative offset for a self dependency.
func (o TriggerTumblingWindowTriggerDependencyOutput) Offset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTumblingWindowTriggerDependency) *string { return v.Offset }).(pulumi.StringPtrOutput)
}

// The size of the dependency tumbling window. Must be in Timespan format (hh:mm:ss).
func (o TriggerTumblingWindowTriggerDependencyOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTumblingWindowTriggerDependency) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// The dependency trigger name. If not specified, it will use self dependency.
func (o TriggerTumblingWindowTriggerDependencyOutput) TriggerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTumblingWindowTriggerDependency) *string { return v.TriggerName }).(pulumi.StringPtrOutput)
}

type TriggerTumblingWindowTriggerDependencyArrayOutput struct{ *pulumi.OutputState }

func (TriggerTumblingWindowTriggerDependencyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerTumblingWindowTriggerDependency)(nil)).Elem()
}

func (o TriggerTumblingWindowTriggerDependencyArrayOutput) ToTriggerTumblingWindowTriggerDependencyArrayOutput() TriggerTumblingWindowTriggerDependencyArrayOutput {
	return o
}

func (o TriggerTumblingWindowTriggerDependencyArrayOutput) ToTriggerTumblingWindowTriggerDependencyArrayOutputWithContext(ctx context.Context) TriggerTumblingWindowTriggerDependencyArrayOutput {
	return o
}

func (o TriggerTumblingWindowTriggerDependencyArrayOutput) Index(i pulumi.IntInput) TriggerTumblingWindowTriggerDependencyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TriggerTumblingWindowTriggerDependency {
		return vs[0].([]TriggerTumblingWindowTriggerDependency)[vs[1].(int)]
	}).(TriggerTumblingWindowTriggerDependencyOutput)
}

type GetFactoryGithubConfiguration struct {
	// The VSTS account name.
	AccountName string `pulumi:"accountName"`
	// The branch of the repository to get code from.
	BranchName string `pulumi:"branchName"`
	// The GitHub Enterprise host name.
	GitUrl string `pulumi:"gitUrl"`
	// The name of the git repository.
	RepositoryName string `pulumi:"repositoryName"`
	// The root folder within the repository.
	RootFolder string `pulumi:"rootFolder"`
}

// GetFactoryGithubConfigurationInput is an input type that accepts GetFactoryGithubConfigurationArgs and GetFactoryGithubConfigurationOutput values.
// You can construct a concrete instance of `GetFactoryGithubConfigurationInput` via:
//
//	GetFactoryGithubConfigurationArgs{...}
type GetFactoryGithubConfigurationInput interface {
	pulumi.Input

	ToGetFactoryGithubConfigurationOutput() GetFactoryGithubConfigurationOutput
	ToGetFactoryGithubConfigurationOutputWithContext(context.Context) GetFactoryGithubConfigurationOutput
}

type GetFactoryGithubConfigurationArgs struct {
	// The VSTS account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The branch of the repository to get code from.
	BranchName pulumi.StringInput `pulumi:"branchName"`
	// The GitHub Enterprise host name.
	GitUrl pulumi.StringInput `pulumi:"gitUrl"`
	// The name of the git repository.
	RepositoryName pulumi.StringInput `pulumi:"repositoryName"`
	// The root folder within the repository.
	RootFolder pulumi.StringInput `pulumi:"rootFolder"`
}

func (GetFactoryGithubConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFactoryGithubConfiguration)(nil)).Elem()
}

func (i GetFactoryGithubConfigurationArgs) ToGetFactoryGithubConfigurationOutput() GetFactoryGithubConfigurationOutput {
	return i.ToGetFactoryGithubConfigurationOutputWithContext(context.Background())
}

func (i GetFactoryGithubConfigurationArgs) ToGetFactoryGithubConfigurationOutputWithContext(ctx context.Context) GetFactoryGithubConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFactoryGithubConfigurationOutput)
}

// GetFactoryGithubConfigurationArrayInput is an input type that accepts GetFactoryGithubConfigurationArray and GetFactoryGithubConfigurationArrayOutput values.
// You can construct a concrete instance of `GetFactoryGithubConfigurationArrayInput` via:
//
//	GetFactoryGithubConfigurationArray{ GetFactoryGithubConfigurationArgs{...} }
type GetFactoryGithubConfigurationArrayInput interface {
	pulumi.Input

	ToGetFactoryGithubConfigurationArrayOutput() GetFactoryGithubConfigurationArrayOutput
	ToGetFactoryGithubConfigurationArrayOutputWithContext(context.Context) GetFactoryGithubConfigurationArrayOutput
}

type GetFactoryGithubConfigurationArray []GetFactoryGithubConfigurationInput

func (GetFactoryGithubConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFactoryGithubConfiguration)(nil)).Elem()
}

func (i GetFactoryGithubConfigurationArray) ToGetFactoryGithubConfigurationArrayOutput() GetFactoryGithubConfigurationArrayOutput {
	return i.ToGetFactoryGithubConfigurationArrayOutputWithContext(context.Background())
}

func (i GetFactoryGithubConfigurationArray) ToGetFactoryGithubConfigurationArrayOutputWithContext(ctx context.Context) GetFactoryGithubConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFactoryGithubConfigurationArrayOutput)
}

type GetFactoryGithubConfigurationOutput struct{ *pulumi.OutputState }

func (GetFactoryGithubConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFactoryGithubConfiguration)(nil)).Elem()
}

func (o GetFactoryGithubConfigurationOutput) ToGetFactoryGithubConfigurationOutput() GetFactoryGithubConfigurationOutput {
	return o
}

func (o GetFactoryGithubConfigurationOutput) ToGetFactoryGithubConfigurationOutputWithContext(ctx context.Context) GetFactoryGithubConfigurationOutput {
	return o
}

// The VSTS account name.
func (o GetFactoryGithubConfigurationOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFactoryGithubConfiguration) string { return v.AccountName }).(pulumi.StringOutput)
}

// The branch of the repository to get code from.
func (o GetFactoryGithubConfigurationOutput) BranchName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFactoryGithubConfiguration) string { return v.BranchName }).(pulumi.StringOutput)
}

// The GitHub Enterprise host name.
func (o GetFactoryGithubConfigurationOutput) GitUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetFactoryGithubConfiguration) string { return v.GitUrl }).(pulumi.StringOutput)
}

// The name of the git repository.
func (o GetFactoryGithubConfigurationOutput) RepositoryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFactoryGithubConfiguration) string { return v.RepositoryName }).(pulumi.StringOutput)
}

// The root folder within the repository.
func (o GetFactoryGithubConfigurationOutput) RootFolder() pulumi.StringOutput {
	return o.ApplyT(func(v GetFactoryGithubConfiguration) string { return v.RootFolder }).(pulumi.StringOutput)
}

type GetFactoryGithubConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetFactoryGithubConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFactoryGithubConfiguration)(nil)).Elem()
}

func (o GetFactoryGithubConfigurationArrayOutput) ToGetFactoryGithubConfigurationArrayOutput() GetFactoryGithubConfigurationArrayOutput {
	return o
}

func (o GetFactoryGithubConfigurationArrayOutput) ToGetFactoryGithubConfigurationArrayOutputWithContext(ctx context.Context) GetFactoryGithubConfigurationArrayOutput {
	return o
}

func (o GetFactoryGithubConfigurationArrayOutput) Index(i pulumi.IntInput) GetFactoryGithubConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFactoryGithubConfiguration {
		return vs[0].([]GetFactoryGithubConfiguration)[vs[1].(int)]
	}).(GetFactoryGithubConfigurationOutput)
}

type GetFactoryIdentity struct {
	// The list of User Assigned Managed Identity IDs assigned to this Data Factory.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID of the System Assigned Managed Service Identity that is configured on this Data Factory.
	PrincipalId string `pulumi:"principalId"`
	// The Tenant ID associated with the VSTS account.
	TenantId string `pulumi:"tenantId"`
	// The type of Managed Service Identity that is configured on this Data Factory.
	Type string `pulumi:"type"`
}

// GetFactoryIdentityInput is an input type that accepts GetFactoryIdentityArgs and GetFactoryIdentityOutput values.
// You can construct a concrete instance of `GetFactoryIdentityInput` via:
//
//	GetFactoryIdentityArgs{...}
type GetFactoryIdentityInput interface {
	pulumi.Input

	ToGetFactoryIdentityOutput() GetFactoryIdentityOutput
	ToGetFactoryIdentityOutputWithContext(context.Context) GetFactoryIdentityOutput
}

type GetFactoryIdentityArgs struct {
	// The list of User Assigned Managed Identity IDs assigned to this Data Factory.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID of the System Assigned Managed Service Identity that is configured on this Data Factory.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The Tenant ID associated with the VSTS account.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The type of Managed Service Identity that is configured on this Data Factory.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetFactoryIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFactoryIdentity)(nil)).Elem()
}

func (i GetFactoryIdentityArgs) ToGetFactoryIdentityOutput() GetFactoryIdentityOutput {
	return i.ToGetFactoryIdentityOutputWithContext(context.Background())
}

func (i GetFactoryIdentityArgs) ToGetFactoryIdentityOutputWithContext(ctx context.Context) GetFactoryIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFactoryIdentityOutput)
}

// GetFactoryIdentityArrayInput is an input type that accepts GetFactoryIdentityArray and GetFactoryIdentityArrayOutput values.
// You can construct a concrete instance of `GetFactoryIdentityArrayInput` via:
//
//	GetFactoryIdentityArray{ GetFactoryIdentityArgs{...} }
type GetFactoryIdentityArrayInput interface {
	pulumi.Input

	ToGetFactoryIdentityArrayOutput() GetFactoryIdentityArrayOutput
	ToGetFactoryIdentityArrayOutputWithContext(context.Context) GetFactoryIdentityArrayOutput
}

type GetFactoryIdentityArray []GetFactoryIdentityInput

func (GetFactoryIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFactoryIdentity)(nil)).Elem()
}

func (i GetFactoryIdentityArray) ToGetFactoryIdentityArrayOutput() GetFactoryIdentityArrayOutput {
	return i.ToGetFactoryIdentityArrayOutputWithContext(context.Background())
}

func (i GetFactoryIdentityArray) ToGetFactoryIdentityArrayOutputWithContext(ctx context.Context) GetFactoryIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFactoryIdentityArrayOutput)
}

type GetFactoryIdentityOutput struct{ *pulumi.OutputState }

func (GetFactoryIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFactoryIdentity)(nil)).Elem()
}

func (o GetFactoryIdentityOutput) ToGetFactoryIdentityOutput() GetFactoryIdentityOutput {
	return o
}

func (o GetFactoryIdentityOutput) ToGetFactoryIdentityOutputWithContext(ctx context.Context) GetFactoryIdentityOutput {
	return o
}

// The list of User Assigned Managed Identity IDs assigned to this Data Factory.
func (o GetFactoryIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFactoryIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID of the System Assigned Managed Service Identity that is configured on this Data Factory.
func (o GetFactoryIdentityOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFactoryIdentity) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The Tenant ID associated with the VSTS account.
func (o GetFactoryIdentityOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFactoryIdentity) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of Managed Service Identity that is configured on this Data Factory.
func (o GetFactoryIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetFactoryIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type GetFactoryIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetFactoryIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFactoryIdentity)(nil)).Elem()
}

func (o GetFactoryIdentityArrayOutput) ToGetFactoryIdentityArrayOutput() GetFactoryIdentityArrayOutput {
	return o
}

func (o GetFactoryIdentityArrayOutput) ToGetFactoryIdentityArrayOutputWithContext(ctx context.Context) GetFactoryIdentityArrayOutput {
	return o
}

func (o GetFactoryIdentityArrayOutput) Index(i pulumi.IntInput) GetFactoryIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFactoryIdentity {
		return vs[0].([]GetFactoryIdentity)[vs[1].(int)]
	}).(GetFactoryIdentityOutput)
}

type GetFactoryVstsConfiguration struct {
	// The VSTS account name.
	AccountName string `pulumi:"accountName"`
	// The branch of the repository to get code from.
	BranchName string `pulumi:"branchName"`
	// The name of the VSTS project.
	ProjectName string `pulumi:"projectName"`
	// The name of the git repository.
	RepositoryName string `pulumi:"repositoryName"`
	// The root folder within the repository.
	RootFolder string `pulumi:"rootFolder"`
	// The Tenant ID associated with the VSTS account.
	TenantId string `pulumi:"tenantId"`
}

// GetFactoryVstsConfigurationInput is an input type that accepts GetFactoryVstsConfigurationArgs and GetFactoryVstsConfigurationOutput values.
// You can construct a concrete instance of `GetFactoryVstsConfigurationInput` via:
//
//	GetFactoryVstsConfigurationArgs{...}
type GetFactoryVstsConfigurationInput interface {
	pulumi.Input

	ToGetFactoryVstsConfigurationOutput() GetFactoryVstsConfigurationOutput
	ToGetFactoryVstsConfigurationOutputWithContext(context.Context) GetFactoryVstsConfigurationOutput
}

type GetFactoryVstsConfigurationArgs struct {
	// The VSTS account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The branch of the repository to get code from.
	BranchName pulumi.StringInput `pulumi:"branchName"`
	// The name of the VSTS project.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The name of the git repository.
	RepositoryName pulumi.StringInput `pulumi:"repositoryName"`
	// The root folder within the repository.
	RootFolder pulumi.StringInput `pulumi:"rootFolder"`
	// The Tenant ID associated with the VSTS account.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (GetFactoryVstsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFactoryVstsConfiguration)(nil)).Elem()
}

func (i GetFactoryVstsConfigurationArgs) ToGetFactoryVstsConfigurationOutput() GetFactoryVstsConfigurationOutput {
	return i.ToGetFactoryVstsConfigurationOutputWithContext(context.Background())
}

func (i GetFactoryVstsConfigurationArgs) ToGetFactoryVstsConfigurationOutputWithContext(ctx context.Context) GetFactoryVstsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFactoryVstsConfigurationOutput)
}

// GetFactoryVstsConfigurationArrayInput is an input type that accepts GetFactoryVstsConfigurationArray and GetFactoryVstsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetFactoryVstsConfigurationArrayInput` via:
//
//	GetFactoryVstsConfigurationArray{ GetFactoryVstsConfigurationArgs{...} }
type GetFactoryVstsConfigurationArrayInput interface {
	pulumi.Input

	ToGetFactoryVstsConfigurationArrayOutput() GetFactoryVstsConfigurationArrayOutput
	ToGetFactoryVstsConfigurationArrayOutputWithContext(context.Context) GetFactoryVstsConfigurationArrayOutput
}

type GetFactoryVstsConfigurationArray []GetFactoryVstsConfigurationInput

func (GetFactoryVstsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFactoryVstsConfiguration)(nil)).Elem()
}

func (i GetFactoryVstsConfigurationArray) ToGetFactoryVstsConfigurationArrayOutput() GetFactoryVstsConfigurationArrayOutput {
	return i.ToGetFactoryVstsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetFactoryVstsConfigurationArray) ToGetFactoryVstsConfigurationArrayOutputWithContext(ctx context.Context) GetFactoryVstsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFactoryVstsConfigurationArrayOutput)
}

type GetFactoryVstsConfigurationOutput struct{ *pulumi.OutputState }

func (GetFactoryVstsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFactoryVstsConfiguration)(nil)).Elem()
}

func (o GetFactoryVstsConfigurationOutput) ToGetFactoryVstsConfigurationOutput() GetFactoryVstsConfigurationOutput {
	return o
}

func (o GetFactoryVstsConfigurationOutput) ToGetFactoryVstsConfigurationOutputWithContext(ctx context.Context) GetFactoryVstsConfigurationOutput {
	return o
}

// The VSTS account name.
func (o GetFactoryVstsConfigurationOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFactoryVstsConfiguration) string { return v.AccountName }).(pulumi.StringOutput)
}

// The branch of the repository to get code from.
func (o GetFactoryVstsConfigurationOutput) BranchName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFactoryVstsConfiguration) string { return v.BranchName }).(pulumi.StringOutput)
}

// The name of the VSTS project.
func (o GetFactoryVstsConfigurationOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFactoryVstsConfiguration) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The name of the git repository.
func (o GetFactoryVstsConfigurationOutput) RepositoryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFactoryVstsConfiguration) string { return v.RepositoryName }).(pulumi.StringOutput)
}

// The root folder within the repository.
func (o GetFactoryVstsConfigurationOutput) RootFolder() pulumi.StringOutput {
	return o.ApplyT(func(v GetFactoryVstsConfiguration) string { return v.RootFolder }).(pulumi.StringOutput)
}

// The Tenant ID associated with the VSTS account.
func (o GetFactoryVstsConfigurationOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFactoryVstsConfiguration) string { return v.TenantId }).(pulumi.StringOutput)
}

type GetFactoryVstsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetFactoryVstsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFactoryVstsConfiguration)(nil)).Elem()
}

func (o GetFactoryVstsConfigurationArrayOutput) ToGetFactoryVstsConfigurationArrayOutput() GetFactoryVstsConfigurationArrayOutput {
	return o
}

func (o GetFactoryVstsConfigurationArrayOutput) ToGetFactoryVstsConfigurationArrayOutputWithContext(ctx context.Context) GetFactoryVstsConfigurationArrayOutput {
	return o
}

func (o GetFactoryVstsConfigurationArrayOutput) Index(i pulumi.IntInput) GetFactoryVstsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFactoryVstsConfiguration {
		return vs[0].([]GetFactoryVstsConfiguration)[vs[1].(int)]
	}).(GetFactoryVstsConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDatasetLinkedServiceInput)(nil)).Elem(), CustomDatasetLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDatasetLinkedServicePtrInput)(nil)).Elem(), CustomDatasetLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowSinkInput)(nil)).Elem(), DataFlowSinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowSinkArrayInput)(nil)).Elem(), DataFlowSinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowSinkDatasetInput)(nil)).Elem(), DataFlowSinkDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowSinkDatasetPtrInput)(nil)).Elem(), DataFlowSinkDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowSinkFlowletInput)(nil)).Elem(), DataFlowSinkFlowletArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowSinkFlowletPtrInput)(nil)).Elem(), DataFlowSinkFlowletArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowSinkLinkedServiceInput)(nil)).Elem(), DataFlowSinkLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowSinkLinkedServicePtrInput)(nil)).Elem(), DataFlowSinkLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowSinkRejectedLinkedServiceInput)(nil)).Elem(), DataFlowSinkRejectedLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowSinkRejectedLinkedServicePtrInput)(nil)).Elem(), DataFlowSinkRejectedLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowSinkSchemaLinkedServiceInput)(nil)).Elem(), DataFlowSinkSchemaLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowSinkSchemaLinkedServicePtrInput)(nil)).Elem(), DataFlowSinkSchemaLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowSourceInput)(nil)).Elem(), DataFlowSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowSourceArrayInput)(nil)).Elem(), DataFlowSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowSourceDatasetInput)(nil)).Elem(), DataFlowSourceDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowSourceDatasetPtrInput)(nil)).Elem(), DataFlowSourceDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowSourceFlowletInput)(nil)).Elem(), DataFlowSourceFlowletArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowSourceFlowletPtrInput)(nil)).Elem(), DataFlowSourceFlowletArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowSourceLinkedServiceInput)(nil)).Elem(), DataFlowSourceLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowSourceLinkedServicePtrInput)(nil)).Elem(), DataFlowSourceLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowSourceRejectedLinkedServiceInput)(nil)).Elem(), DataFlowSourceRejectedLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowSourceRejectedLinkedServicePtrInput)(nil)).Elem(), DataFlowSourceRejectedLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowSourceSchemaLinkedServiceInput)(nil)).Elem(), DataFlowSourceSchemaLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowSourceSchemaLinkedServicePtrInput)(nil)).Elem(), DataFlowSourceSchemaLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowTransformationInput)(nil)).Elem(), DataFlowTransformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowTransformationArrayInput)(nil)).Elem(), DataFlowTransformationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowTransformationDatasetInput)(nil)).Elem(), DataFlowTransformationDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowTransformationDatasetPtrInput)(nil)).Elem(), DataFlowTransformationDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowTransformationFlowletInput)(nil)).Elem(), DataFlowTransformationFlowletArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowTransformationFlowletPtrInput)(nil)).Elem(), DataFlowTransformationFlowletArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowTransformationLinkedServiceInput)(nil)).Elem(), DataFlowTransformationLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataFlowTransformationLinkedServicePtrInput)(nil)).Elem(), DataFlowTransformationLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetAzureBlobSchemaColumnInput)(nil)).Elem(), DatasetAzureBlobSchemaColumnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetAzureBlobSchemaColumnArrayInput)(nil)).Elem(), DatasetAzureBlobSchemaColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetAzureSqlTableSchemaColumnInput)(nil)).Elem(), DatasetAzureSqlTableSchemaColumnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetAzureSqlTableSchemaColumnArrayInput)(nil)).Elem(), DatasetAzureSqlTableSchemaColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetBinaryAzureBlobStorageLocationInput)(nil)).Elem(), DatasetBinaryAzureBlobStorageLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetBinaryAzureBlobStorageLocationPtrInput)(nil)).Elem(), DatasetBinaryAzureBlobStorageLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetBinaryCompressionInput)(nil)).Elem(), DatasetBinaryCompressionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetBinaryCompressionPtrInput)(nil)).Elem(), DatasetBinaryCompressionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetBinaryHttpServerLocationInput)(nil)).Elem(), DatasetBinaryHttpServerLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetBinaryHttpServerLocationPtrInput)(nil)).Elem(), DatasetBinaryHttpServerLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetBinarySftpServerLocationInput)(nil)).Elem(), DatasetBinarySftpServerLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetBinarySftpServerLocationPtrInput)(nil)).Elem(), DatasetBinarySftpServerLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetCosmosDBApiSchemaColumnInput)(nil)).Elem(), DatasetCosmosDBApiSchemaColumnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetCosmosDBApiSchemaColumnArrayInput)(nil)).Elem(), DatasetCosmosDBApiSchemaColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetDelimitedTextAzureBlobFsLocationInput)(nil)).Elem(), DatasetDelimitedTextAzureBlobFsLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetDelimitedTextAzureBlobFsLocationPtrInput)(nil)).Elem(), DatasetDelimitedTextAzureBlobFsLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetDelimitedTextAzureBlobStorageLocationInput)(nil)).Elem(), DatasetDelimitedTextAzureBlobStorageLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetDelimitedTextAzureBlobStorageLocationPtrInput)(nil)).Elem(), DatasetDelimitedTextAzureBlobStorageLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetDelimitedTextHttpServerLocationInput)(nil)).Elem(), DatasetDelimitedTextHttpServerLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetDelimitedTextHttpServerLocationPtrInput)(nil)).Elem(), DatasetDelimitedTextHttpServerLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetDelimitedTextSchemaColumnInput)(nil)).Elem(), DatasetDelimitedTextSchemaColumnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetDelimitedTextSchemaColumnArrayInput)(nil)).Elem(), DatasetDelimitedTextSchemaColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetHttpSchemaColumnInput)(nil)).Elem(), DatasetHttpSchemaColumnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetHttpSchemaColumnArrayInput)(nil)).Elem(), DatasetHttpSchemaColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetJsonAzureBlobStorageLocationInput)(nil)).Elem(), DatasetJsonAzureBlobStorageLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetJsonAzureBlobStorageLocationPtrInput)(nil)).Elem(), DatasetJsonAzureBlobStorageLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetJsonHttpServerLocationInput)(nil)).Elem(), DatasetJsonHttpServerLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetJsonHttpServerLocationPtrInput)(nil)).Elem(), DatasetJsonHttpServerLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetJsonSchemaColumnInput)(nil)).Elem(), DatasetJsonSchemaColumnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetJsonSchemaColumnArrayInput)(nil)).Elem(), DatasetJsonSchemaColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetMysqlSchemaColumnInput)(nil)).Elem(), DatasetMysqlSchemaColumnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetMysqlSchemaColumnArrayInput)(nil)).Elem(), DatasetMysqlSchemaColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetParquetAzureBlobFsLocationInput)(nil)).Elem(), DatasetParquetAzureBlobFsLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetParquetAzureBlobFsLocationPtrInput)(nil)).Elem(), DatasetParquetAzureBlobFsLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetParquetAzureBlobStorageLocationInput)(nil)).Elem(), DatasetParquetAzureBlobStorageLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetParquetAzureBlobStorageLocationPtrInput)(nil)).Elem(), DatasetParquetAzureBlobStorageLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetParquetHttpServerLocationInput)(nil)).Elem(), DatasetParquetHttpServerLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetParquetHttpServerLocationPtrInput)(nil)).Elem(), DatasetParquetHttpServerLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetParquetSchemaColumnInput)(nil)).Elem(), DatasetParquetSchemaColumnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetParquetSchemaColumnArrayInput)(nil)).Elem(), DatasetParquetSchemaColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetPostgresqlSchemaColumnInput)(nil)).Elem(), DatasetPostgresqlSchemaColumnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetPostgresqlSchemaColumnArrayInput)(nil)).Elem(), DatasetPostgresqlSchemaColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetSnowflakeSchemaColumnInput)(nil)).Elem(), DatasetSnowflakeSchemaColumnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetSnowflakeSchemaColumnArrayInput)(nil)).Elem(), DatasetSnowflakeSchemaColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetSqlServerTableSchemaColumnInput)(nil)).Elem(), DatasetSqlServerTableSchemaColumnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetSqlServerTableSchemaColumnArrayInput)(nil)).Elem(), DatasetSqlServerTableSchemaColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FactoryGithubConfigurationInput)(nil)).Elem(), FactoryGithubConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FactoryGithubConfigurationPtrInput)(nil)).Elem(), FactoryGithubConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FactoryGlobalParameterInput)(nil)).Elem(), FactoryGlobalParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FactoryGlobalParameterArrayInput)(nil)).Elem(), FactoryGlobalParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FactoryIdentityInput)(nil)).Elem(), FactoryIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FactoryIdentityPtrInput)(nil)).Elem(), FactoryIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FactoryVstsConfigurationInput)(nil)).Elem(), FactoryVstsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FactoryVstsConfigurationPtrInput)(nil)).Elem(), FactoryVstsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowSinkInput)(nil)).Elem(), FlowletDataFlowSinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowSinkArrayInput)(nil)).Elem(), FlowletDataFlowSinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowSinkDatasetInput)(nil)).Elem(), FlowletDataFlowSinkDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowSinkDatasetPtrInput)(nil)).Elem(), FlowletDataFlowSinkDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowSinkFlowletInput)(nil)).Elem(), FlowletDataFlowSinkFlowletArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowSinkFlowletPtrInput)(nil)).Elem(), FlowletDataFlowSinkFlowletArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowSinkLinkedServiceInput)(nil)).Elem(), FlowletDataFlowSinkLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowSinkLinkedServicePtrInput)(nil)).Elem(), FlowletDataFlowSinkLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowSinkRejectedLinkedServiceInput)(nil)).Elem(), FlowletDataFlowSinkRejectedLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowSinkRejectedLinkedServicePtrInput)(nil)).Elem(), FlowletDataFlowSinkRejectedLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowSinkSchemaLinkedServiceInput)(nil)).Elem(), FlowletDataFlowSinkSchemaLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowSinkSchemaLinkedServicePtrInput)(nil)).Elem(), FlowletDataFlowSinkSchemaLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowSourceInput)(nil)).Elem(), FlowletDataFlowSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowSourceArrayInput)(nil)).Elem(), FlowletDataFlowSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowSourceDatasetInput)(nil)).Elem(), FlowletDataFlowSourceDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowSourceDatasetPtrInput)(nil)).Elem(), FlowletDataFlowSourceDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowSourceFlowletInput)(nil)).Elem(), FlowletDataFlowSourceFlowletArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowSourceFlowletPtrInput)(nil)).Elem(), FlowletDataFlowSourceFlowletArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowSourceLinkedServiceInput)(nil)).Elem(), FlowletDataFlowSourceLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowSourceLinkedServicePtrInput)(nil)).Elem(), FlowletDataFlowSourceLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowSourceRejectedLinkedServiceInput)(nil)).Elem(), FlowletDataFlowSourceRejectedLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowSourceRejectedLinkedServicePtrInput)(nil)).Elem(), FlowletDataFlowSourceRejectedLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowSourceSchemaLinkedServiceInput)(nil)).Elem(), FlowletDataFlowSourceSchemaLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowSourceSchemaLinkedServicePtrInput)(nil)).Elem(), FlowletDataFlowSourceSchemaLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowTransformationInput)(nil)).Elem(), FlowletDataFlowTransformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowTransformationArrayInput)(nil)).Elem(), FlowletDataFlowTransformationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowTransformationDatasetInput)(nil)).Elem(), FlowletDataFlowTransformationDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowTransformationDatasetPtrInput)(nil)).Elem(), FlowletDataFlowTransformationDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowTransformationFlowletInput)(nil)).Elem(), FlowletDataFlowTransformationFlowletArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowTransformationFlowletPtrInput)(nil)).Elem(), FlowletDataFlowTransformationFlowletArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowTransformationLinkedServiceInput)(nil)).Elem(), FlowletDataFlowTransformationLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowletDataFlowTransformationLinkedServicePtrInput)(nil)).Elem(), FlowletDataFlowTransformationLinkedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeManagedCatalogInfoInput)(nil)).Elem(), IntegrationRuntimeManagedCatalogInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeManagedCatalogInfoPtrInput)(nil)).Elem(), IntegrationRuntimeManagedCatalogInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeManagedCustomSetupScriptInput)(nil)).Elem(), IntegrationRuntimeManagedCustomSetupScriptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeManagedCustomSetupScriptPtrInput)(nil)).Elem(), IntegrationRuntimeManagedCustomSetupScriptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeManagedVnetIntegrationInput)(nil)).Elem(), IntegrationRuntimeManagedVnetIntegrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeManagedVnetIntegrationPtrInput)(nil)).Elem(), IntegrationRuntimeManagedVnetIntegrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeSelfHostedRbacAuthorizationInput)(nil)).Elem(), IntegrationRuntimeSelfHostedRbacAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeSelfHostedRbacAuthorizationArrayInput)(nil)).Elem(), IntegrationRuntimeSelfHostedRbacAuthorizationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeSsisCatalogInfoInput)(nil)).Elem(), IntegrationRuntimeSsisCatalogInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeSsisCatalogInfoPtrInput)(nil)).Elem(), IntegrationRuntimeSsisCatalogInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeSsisCustomSetupScriptInput)(nil)).Elem(), IntegrationRuntimeSsisCustomSetupScriptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeSsisCustomSetupScriptPtrInput)(nil)).Elem(), IntegrationRuntimeSsisCustomSetupScriptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeSsisExpressCustomSetupInput)(nil)).Elem(), IntegrationRuntimeSsisExpressCustomSetupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeSsisExpressCustomSetupPtrInput)(nil)).Elem(), IntegrationRuntimeSsisExpressCustomSetupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeSsisExpressCustomSetupCommandKeyInput)(nil)).Elem(), IntegrationRuntimeSsisExpressCustomSetupCommandKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayInput)(nil)).Elem(), IntegrationRuntimeSsisExpressCustomSetupCommandKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordInput)(nil)).Elem(), IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrInput)(nil)).Elem(), IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeSsisExpressCustomSetupComponentInput)(nil)).Elem(), IntegrationRuntimeSsisExpressCustomSetupComponentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeSsisExpressCustomSetupComponentArrayInput)(nil)).Elem(), IntegrationRuntimeSsisExpressCustomSetupComponentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseInput)(nil)).Elem(), IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrInput)(nil)).Elem(), IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeSsisExpressVnetIntegrationInput)(nil)).Elem(), IntegrationRuntimeSsisExpressVnetIntegrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeSsisExpressVnetIntegrationPtrInput)(nil)).Elem(), IntegrationRuntimeSsisExpressVnetIntegrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeSsisPackageStoreInput)(nil)).Elem(), IntegrationRuntimeSsisPackageStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeSsisPackageStoreArrayInput)(nil)).Elem(), IntegrationRuntimeSsisPackageStoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeSsisProxyInput)(nil)).Elem(), IntegrationRuntimeSsisProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeSsisProxyPtrInput)(nil)).Elem(), IntegrationRuntimeSsisProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeSsisVnetIntegrationInput)(nil)).Elem(), IntegrationRuntimeSsisVnetIntegrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationRuntimeSsisVnetIntegrationPtrInput)(nil)).Elem(), IntegrationRuntimeSsisVnetIntegrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedCustomServiceIntegrationRuntimeInput)(nil)).Elem(), LinkedCustomServiceIntegrationRuntimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedCustomServiceIntegrationRuntimePtrInput)(nil)).Elem(), LinkedCustomServiceIntegrationRuntimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceAzureBlobStorageKeyVaultSasTokenInput)(nil)).Elem(), LinkedServiceAzureBlobStorageKeyVaultSasTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceAzureBlobStorageKeyVaultSasTokenPtrInput)(nil)).Elem(), LinkedServiceAzureBlobStorageKeyVaultSasTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyInput)(nil)).Elem(), LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrInput)(nil)).Elem(), LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceAzureDatabricksInstancePoolInput)(nil)).Elem(), LinkedServiceAzureDatabricksInstancePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceAzureDatabricksInstancePoolPtrInput)(nil)).Elem(), LinkedServiceAzureDatabricksInstancePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceAzureDatabricksKeyVaultPasswordInput)(nil)).Elem(), LinkedServiceAzureDatabricksKeyVaultPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceAzureDatabricksKeyVaultPasswordPtrInput)(nil)).Elem(), LinkedServiceAzureDatabricksKeyVaultPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceAzureDatabricksNewClusterConfigInput)(nil)).Elem(), LinkedServiceAzureDatabricksNewClusterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceAzureDatabricksNewClusterConfigPtrInput)(nil)).Elem(), LinkedServiceAzureDatabricksNewClusterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceAzureFileStorageKeyVaultPasswordInput)(nil)).Elem(), LinkedServiceAzureFileStorageKeyVaultPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceAzureFileStorageKeyVaultPasswordPtrInput)(nil)).Elem(), LinkedServiceAzureFileStorageKeyVaultPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceAzureFunctionKeyVaultKeyInput)(nil)).Elem(), LinkedServiceAzureFunctionKeyVaultKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceAzureFunctionKeyVaultKeyPtrInput)(nil)).Elem(), LinkedServiceAzureFunctionKeyVaultKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringInput)(nil)).Elem(), LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrInput)(nil)).Elem(), LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceAzureSqlDatabaseKeyVaultPasswordInput)(nil)).Elem(), LinkedServiceAzureSqlDatabaseKeyVaultPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrInput)(nil)).Elem(), LinkedServiceAzureSqlDatabaseKeyVaultPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceOdataBasicAuthenticationInput)(nil)).Elem(), LinkedServiceOdataBasicAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceOdataBasicAuthenticationPtrInput)(nil)).Elem(), LinkedServiceOdataBasicAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceOdbcBasicAuthenticationInput)(nil)).Elem(), LinkedServiceOdbcBasicAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceOdbcBasicAuthenticationPtrInput)(nil)).Elem(), LinkedServiceOdbcBasicAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceSnowflakeKeyVaultPasswordInput)(nil)).Elem(), LinkedServiceSnowflakeKeyVaultPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceSnowflakeKeyVaultPasswordPtrInput)(nil)).Elem(), LinkedServiceSnowflakeKeyVaultPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceSqlServerKeyVaultConnectionStringInput)(nil)).Elem(), LinkedServiceSqlServerKeyVaultConnectionStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceSqlServerKeyVaultConnectionStringPtrInput)(nil)).Elem(), LinkedServiceSqlServerKeyVaultConnectionStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceSqlServerKeyVaultPasswordInput)(nil)).Elem(), LinkedServiceSqlServerKeyVaultPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceSqlServerKeyVaultPasswordPtrInput)(nil)).Elem(), LinkedServiceSqlServerKeyVaultPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceSynapseKeyVaultPasswordInput)(nil)).Elem(), LinkedServiceSynapseKeyVaultPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceSynapseKeyVaultPasswordPtrInput)(nil)).Elem(), LinkedServiceSynapseKeyVaultPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBlobEventPipelineInput)(nil)).Elem(), TriggerBlobEventPipelineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBlobEventPipelineArrayInput)(nil)).Elem(), TriggerBlobEventPipelineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerCustomEventPipelineInput)(nil)).Elem(), TriggerCustomEventPipelineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerCustomEventPipelineArrayInput)(nil)).Elem(), TriggerCustomEventPipelineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerSchedulePipelineInput)(nil)).Elem(), TriggerSchedulePipelineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerSchedulePipelineArrayInput)(nil)).Elem(), TriggerSchedulePipelineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerScheduleScheduleInput)(nil)).Elem(), TriggerScheduleScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerScheduleSchedulePtrInput)(nil)).Elem(), TriggerScheduleScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerScheduleScheduleMonthlyInput)(nil)).Elem(), TriggerScheduleScheduleMonthlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerScheduleScheduleMonthlyArrayInput)(nil)).Elem(), TriggerScheduleScheduleMonthlyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerTumblingWindowPipelineInput)(nil)).Elem(), TriggerTumblingWindowPipelineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerTumblingWindowPipelinePtrInput)(nil)).Elem(), TriggerTumblingWindowPipelineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerTumblingWindowRetryInput)(nil)).Elem(), TriggerTumblingWindowRetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerTumblingWindowRetryPtrInput)(nil)).Elem(), TriggerTumblingWindowRetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerTumblingWindowTriggerDependencyInput)(nil)).Elem(), TriggerTumblingWindowTriggerDependencyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerTumblingWindowTriggerDependencyArrayInput)(nil)).Elem(), TriggerTumblingWindowTriggerDependencyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFactoryGithubConfigurationInput)(nil)).Elem(), GetFactoryGithubConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFactoryGithubConfigurationArrayInput)(nil)).Elem(), GetFactoryGithubConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFactoryIdentityInput)(nil)).Elem(), GetFactoryIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFactoryIdentityArrayInput)(nil)).Elem(), GetFactoryIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFactoryVstsConfigurationInput)(nil)).Elem(), GetFactoryVstsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFactoryVstsConfigurationArrayInput)(nil)).Elem(), GetFactoryVstsConfigurationArray{})
	pulumi.RegisterOutputType(CustomDatasetLinkedServiceOutput{})
	pulumi.RegisterOutputType(CustomDatasetLinkedServicePtrOutput{})
	pulumi.RegisterOutputType(DataFlowSinkOutput{})
	pulumi.RegisterOutputType(DataFlowSinkArrayOutput{})
	pulumi.RegisterOutputType(DataFlowSinkDatasetOutput{})
	pulumi.RegisterOutputType(DataFlowSinkDatasetPtrOutput{})
	pulumi.RegisterOutputType(DataFlowSinkFlowletOutput{})
	pulumi.RegisterOutputType(DataFlowSinkFlowletPtrOutput{})
	pulumi.RegisterOutputType(DataFlowSinkLinkedServiceOutput{})
	pulumi.RegisterOutputType(DataFlowSinkLinkedServicePtrOutput{})
	pulumi.RegisterOutputType(DataFlowSinkRejectedLinkedServiceOutput{})
	pulumi.RegisterOutputType(DataFlowSinkRejectedLinkedServicePtrOutput{})
	pulumi.RegisterOutputType(DataFlowSinkSchemaLinkedServiceOutput{})
	pulumi.RegisterOutputType(DataFlowSinkSchemaLinkedServicePtrOutput{})
	pulumi.RegisterOutputType(DataFlowSourceOutput{})
	pulumi.RegisterOutputType(DataFlowSourceArrayOutput{})
	pulumi.RegisterOutputType(DataFlowSourceDatasetOutput{})
	pulumi.RegisterOutputType(DataFlowSourceDatasetPtrOutput{})
	pulumi.RegisterOutputType(DataFlowSourceFlowletOutput{})
	pulumi.RegisterOutputType(DataFlowSourceFlowletPtrOutput{})
	pulumi.RegisterOutputType(DataFlowSourceLinkedServiceOutput{})
	pulumi.RegisterOutputType(DataFlowSourceLinkedServicePtrOutput{})
	pulumi.RegisterOutputType(DataFlowSourceRejectedLinkedServiceOutput{})
	pulumi.RegisterOutputType(DataFlowSourceRejectedLinkedServicePtrOutput{})
	pulumi.RegisterOutputType(DataFlowSourceSchemaLinkedServiceOutput{})
	pulumi.RegisterOutputType(DataFlowSourceSchemaLinkedServicePtrOutput{})
	pulumi.RegisterOutputType(DataFlowTransformationOutput{})
	pulumi.RegisterOutputType(DataFlowTransformationArrayOutput{})
	pulumi.RegisterOutputType(DataFlowTransformationDatasetOutput{})
	pulumi.RegisterOutputType(DataFlowTransformationDatasetPtrOutput{})
	pulumi.RegisterOutputType(DataFlowTransformationFlowletOutput{})
	pulumi.RegisterOutputType(DataFlowTransformationFlowletPtrOutput{})
	pulumi.RegisterOutputType(DataFlowTransformationLinkedServiceOutput{})
	pulumi.RegisterOutputType(DataFlowTransformationLinkedServicePtrOutput{})
	pulumi.RegisterOutputType(DatasetAzureBlobSchemaColumnOutput{})
	pulumi.RegisterOutputType(DatasetAzureBlobSchemaColumnArrayOutput{})
	pulumi.RegisterOutputType(DatasetAzureSqlTableSchemaColumnOutput{})
	pulumi.RegisterOutputType(DatasetAzureSqlTableSchemaColumnArrayOutput{})
	pulumi.RegisterOutputType(DatasetBinaryAzureBlobStorageLocationOutput{})
	pulumi.RegisterOutputType(DatasetBinaryAzureBlobStorageLocationPtrOutput{})
	pulumi.RegisterOutputType(DatasetBinaryCompressionOutput{})
	pulumi.RegisterOutputType(DatasetBinaryCompressionPtrOutput{})
	pulumi.RegisterOutputType(DatasetBinaryHttpServerLocationOutput{})
	pulumi.RegisterOutputType(DatasetBinaryHttpServerLocationPtrOutput{})
	pulumi.RegisterOutputType(DatasetBinarySftpServerLocationOutput{})
	pulumi.RegisterOutputType(DatasetBinarySftpServerLocationPtrOutput{})
	pulumi.RegisterOutputType(DatasetCosmosDBApiSchemaColumnOutput{})
	pulumi.RegisterOutputType(DatasetCosmosDBApiSchemaColumnArrayOutput{})
	pulumi.RegisterOutputType(DatasetDelimitedTextAzureBlobFsLocationOutput{})
	pulumi.RegisterOutputType(DatasetDelimitedTextAzureBlobFsLocationPtrOutput{})
	pulumi.RegisterOutputType(DatasetDelimitedTextAzureBlobStorageLocationOutput{})
	pulumi.RegisterOutputType(DatasetDelimitedTextAzureBlobStorageLocationPtrOutput{})
	pulumi.RegisterOutputType(DatasetDelimitedTextHttpServerLocationOutput{})
	pulumi.RegisterOutputType(DatasetDelimitedTextHttpServerLocationPtrOutput{})
	pulumi.RegisterOutputType(DatasetDelimitedTextSchemaColumnOutput{})
	pulumi.RegisterOutputType(DatasetDelimitedTextSchemaColumnArrayOutput{})
	pulumi.RegisterOutputType(DatasetHttpSchemaColumnOutput{})
	pulumi.RegisterOutputType(DatasetHttpSchemaColumnArrayOutput{})
	pulumi.RegisterOutputType(DatasetJsonAzureBlobStorageLocationOutput{})
	pulumi.RegisterOutputType(DatasetJsonAzureBlobStorageLocationPtrOutput{})
	pulumi.RegisterOutputType(DatasetJsonHttpServerLocationOutput{})
	pulumi.RegisterOutputType(DatasetJsonHttpServerLocationPtrOutput{})
	pulumi.RegisterOutputType(DatasetJsonSchemaColumnOutput{})
	pulumi.RegisterOutputType(DatasetJsonSchemaColumnArrayOutput{})
	pulumi.RegisterOutputType(DatasetMysqlSchemaColumnOutput{})
	pulumi.RegisterOutputType(DatasetMysqlSchemaColumnArrayOutput{})
	pulumi.RegisterOutputType(DatasetParquetAzureBlobFsLocationOutput{})
	pulumi.RegisterOutputType(DatasetParquetAzureBlobFsLocationPtrOutput{})
	pulumi.RegisterOutputType(DatasetParquetAzureBlobStorageLocationOutput{})
	pulumi.RegisterOutputType(DatasetParquetAzureBlobStorageLocationPtrOutput{})
	pulumi.RegisterOutputType(DatasetParquetHttpServerLocationOutput{})
	pulumi.RegisterOutputType(DatasetParquetHttpServerLocationPtrOutput{})
	pulumi.RegisterOutputType(DatasetParquetSchemaColumnOutput{})
	pulumi.RegisterOutputType(DatasetParquetSchemaColumnArrayOutput{})
	pulumi.RegisterOutputType(DatasetPostgresqlSchemaColumnOutput{})
	pulumi.RegisterOutputType(DatasetPostgresqlSchemaColumnArrayOutput{})
	pulumi.RegisterOutputType(DatasetSnowflakeSchemaColumnOutput{})
	pulumi.RegisterOutputType(DatasetSnowflakeSchemaColumnArrayOutput{})
	pulumi.RegisterOutputType(DatasetSqlServerTableSchemaColumnOutput{})
	pulumi.RegisterOutputType(DatasetSqlServerTableSchemaColumnArrayOutput{})
	pulumi.RegisterOutputType(FactoryGithubConfigurationOutput{})
	pulumi.RegisterOutputType(FactoryGithubConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FactoryGlobalParameterOutput{})
	pulumi.RegisterOutputType(FactoryGlobalParameterArrayOutput{})
	pulumi.RegisterOutputType(FactoryIdentityOutput{})
	pulumi.RegisterOutputType(FactoryIdentityPtrOutput{})
	pulumi.RegisterOutputType(FactoryVstsConfigurationOutput{})
	pulumi.RegisterOutputType(FactoryVstsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowSinkOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowSinkArrayOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowSinkDatasetOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowSinkDatasetPtrOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowSinkFlowletOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowSinkFlowletPtrOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowSinkLinkedServiceOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowSinkLinkedServicePtrOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowSinkRejectedLinkedServiceOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowSinkRejectedLinkedServicePtrOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowSinkSchemaLinkedServiceOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowSinkSchemaLinkedServicePtrOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowSourceOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowSourceArrayOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowSourceDatasetOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowSourceDatasetPtrOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowSourceFlowletOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowSourceFlowletPtrOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowSourceLinkedServiceOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowSourceLinkedServicePtrOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowSourceRejectedLinkedServiceOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowSourceRejectedLinkedServicePtrOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowSourceSchemaLinkedServiceOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowSourceSchemaLinkedServicePtrOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowTransformationOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowTransformationArrayOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowTransformationDatasetOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowTransformationDatasetPtrOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowTransformationFlowletOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowTransformationFlowletPtrOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowTransformationLinkedServiceOutput{})
	pulumi.RegisterOutputType(FlowletDataFlowTransformationLinkedServicePtrOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeManagedCatalogInfoOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeManagedCatalogInfoPtrOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeManagedCustomSetupScriptOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeManagedCustomSetupScriptPtrOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeManagedVnetIntegrationOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeManagedVnetIntegrationPtrOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSelfHostedRbacAuthorizationOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSelfHostedRbacAuthorizationArrayOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisCatalogInfoOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisCatalogInfoPtrOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisCustomSetupScriptOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisCustomSetupScriptPtrOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisExpressCustomSetupOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisExpressCustomSetupPtrOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisExpressCustomSetupCommandKeyOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisExpressCustomSetupCommandKeyArrayOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPasswordPtrOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisExpressCustomSetupComponentOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisExpressCustomSetupComponentArrayOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicenseOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisExpressCustomSetupComponentKeyVaultLicensePtrOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisExpressVnetIntegrationOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisExpressVnetIntegrationPtrOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisPackageStoreOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisPackageStoreArrayOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisProxyOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisProxyPtrOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisVnetIntegrationOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeSsisVnetIntegrationPtrOutput{})
	pulumi.RegisterOutputType(LinkedCustomServiceIntegrationRuntimeOutput{})
	pulumi.RegisterOutputType(LinkedCustomServiceIntegrationRuntimePtrOutput{})
	pulumi.RegisterOutputType(LinkedServiceAzureBlobStorageKeyVaultSasTokenOutput{})
	pulumi.RegisterOutputType(LinkedServiceAzureBlobStorageKeyVaultSasTokenPtrOutput{})
	pulumi.RegisterOutputType(LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyOutput{})
	pulumi.RegisterOutputType(LinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKeyPtrOutput{})
	pulumi.RegisterOutputType(LinkedServiceAzureDatabricksInstancePoolOutput{})
	pulumi.RegisterOutputType(LinkedServiceAzureDatabricksInstancePoolPtrOutput{})
	pulumi.RegisterOutputType(LinkedServiceAzureDatabricksKeyVaultPasswordOutput{})
	pulumi.RegisterOutputType(LinkedServiceAzureDatabricksKeyVaultPasswordPtrOutput{})
	pulumi.RegisterOutputType(LinkedServiceAzureDatabricksNewClusterConfigOutput{})
	pulumi.RegisterOutputType(LinkedServiceAzureDatabricksNewClusterConfigPtrOutput{})
	pulumi.RegisterOutputType(LinkedServiceAzureFileStorageKeyVaultPasswordOutput{})
	pulumi.RegisterOutputType(LinkedServiceAzureFileStorageKeyVaultPasswordPtrOutput{})
	pulumi.RegisterOutputType(LinkedServiceAzureFunctionKeyVaultKeyOutput{})
	pulumi.RegisterOutputType(LinkedServiceAzureFunctionKeyVaultKeyPtrOutput{})
	pulumi.RegisterOutputType(LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringOutput{})
	pulumi.RegisterOutputType(LinkedServiceAzureSqlDatabaseKeyVaultConnectionStringPtrOutput{})
	pulumi.RegisterOutputType(LinkedServiceAzureSqlDatabaseKeyVaultPasswordOutput{})
	pulumi.RegisterOutputType(LinkedServiceAzureSqlDatabaseKeyVaultPasswordPtrOutput{})
	pulumi.RegisterOutputType(LinkedServiceOdataBasicAuthenticationOutput{})
	pulumi.RegisterOutputType(LinkedServiceOdataBasicAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(LinkedServiceOdbcBasicAuthenticationOutput{})
	pulumi.RegisterOutputType(LinkedServiceOdbcBasicAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(LinkedServiceSnowflakeKeyVaultPasswordOutput{})
	pulumi.RegisterOutputType(LinkedServiceSnowflakeKeyVaultPasswordPtrOutput{})
	pulumi.RegisterOutputType(LinkedServiceSqlServerKeyVaultConnectionStringOutput{})
	pulumi.RegisterOutputType(LinkedServiceSqlServerKeyVaultConnectionStringPtrOutput{})
	pulumi.RegisterOutputType(LinkedServiceSqlServerKeyVaultPasswordOutput{})
	pulumi.RegisterOutputType(LinkedServiceSqlServerKeyVaultPasswordPtrOutput{})
	pulumi.RegisterOutputType(LinkedServiceSynapseKeyVaultPasswordOutput{})
	pulumi.RegisterOutputType(LinkedServiceSynapseKeyVaultPasswordPtrOutput{})
	pulumi.RegisterOutputType(TriggerBlobEventPipelineOutput{})
	pulumi.RegisterOutputType(TriggerBlobEventPipelineArrayOutput{})
	pulumi.RegisterOutputType(TriggerCustomEventPipelineOutput{})
	pulumi.RegisterOutputType(TriggerCustomEventPipelineArrayOutput{})
	pulumi.RegisterOutputType(TriggerSchedulePipelineOutput{})
	pulumi.RegisterOutputType(TriggerSchedulePipelineArrayOutput{})
	pulumi.RegisterOutputType(TriggerScheduleScheduleOutput{})
	pulumi.RegisterOutputType(TriggerScheduleSchedulePtrOutput{})
	pulumi.RegisterOutputType(TriggerScheduleScheduleMonthlyOutput{})
	pulumi.RegisterOutputType(TriggerScheduleScheduleMonthlyArrayOutput{})
	pulumi.RegisterOutputType(TriggerTumblingWindowPipelineOutput{})
	pulumi.RegisterOutputType(TriggerTumblingWindowPipelinePtrOutput{})
	pulumi.RegisterOutputType(TriggerTumblingWindowRetryOutput{})
	pulumi.RegisterOutputType(TriggerTumblingWindowRetryPtrOutput{})
	pulumi.RegisterOutputType(TriggerTumblingWindowTriggerDependencyOutput{})
	pulumi.RegisterOutputType(TriggerTumblingWindowTriggerDependencyArrayOutput{})
	pulumi.RegisterOutputType(GetFactoryGithubConfigurationOutput{})
	pulumi.RegisterOutputType(GetFactoryGithubConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetFactoryIdentityOutput{})
	pulumi.RegisterOutputType(GetFactoryIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetFactoryVstsConfigurationOutput{})
	pulumi.RegisterOutputType(GetFactoryVstsConfigurationArrayOutput{})
}
