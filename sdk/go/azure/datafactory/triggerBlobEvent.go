// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datafactory

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Blob Event Trigger inside an Azure Data Factory.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/core"
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/datafactory"
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/storage"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
// 			Location: pulumi.String("West Europe"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleFactory, err := datafactory.NewFactory(ctx, "exampleFactory", &datafactory.FactoryArgs{
// 			Location:          exampleResourceGroup.Location,
// 			ResourceGroupName: exampleResourceGroup.Name,
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		examplePipeline, err := datafactory.NewPipeline(ctx, "examplePipeline", &datafactory.PipelineArgs{
// 			ResourceGroupName: exampleResourceGroup.Name,
// 			DataFactoryName:   exampleFactory.Name,
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleAccount, err := storage.NewAccount(ctx, "exampleAccount", &storage.AccountArgs{
// 			ResourceGroupName:      exampleResourceGroup.Name,
// 			Location:               exampleResourceGroup.Location,
// 			AccountTier:            pulumi.String("Standard"),
// 			AccountReplicationType: pulumi.String("LRS"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = datafactory.NewTriggerBlobEvent(ctx, "exampleTriggerBlobEvent", &datafactory.TriggerBlobEventArgs{
// 			DataFactoryId:    exampleFactory.ID(),
// 			StorageAccountId: exampleAccount.ID(),
// 			Events: pulumi.StringArray{
// 				pulumi.String("Microsoft.Storage.BlobCreated"),
// 				pulumi.String("Microsoft.Storage.BlobDeleted"),
// 			},
// 			BlobPathEndsWith: pulumi.String(".txt"),
// 			IgnoreEmptyBlobs: pulumi.Bool(true),
// 			Annotations: pulumi.StringArray{
// 				pulumi.String("test1"),
// 				pulumi.String("test2"),
// 				pulumi.String("test3"),
// 			},
// 			Description: pulumi.String("example description"),
// 			Pipelines: datafactory.TriggerBlobEventPipelineArray{
// 				&datafactory.TriggerBlobEventPipelineArgs{
// 					Name: examplePipeline.Name,
// 					Parameters: pulumi.StringMap{
// 						"Env": pulumi.String("Prod"),
// 					},
// 				},
// 			},
// 			AdditionalProperties: pulumi.StringMap{
// 				"foo": pulumi.String("foo1"),
// 				"bar": pulumi.String("bar2"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Data Factory Blob Event Trigger can be imported using the `resource id`, e.g.
//
// ```sh
//  $ pulumi import azure:datafactory/triggerBlobEvent:TriggerBlobEvent example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.DataFactory/factories/example/triggers/example
// ```
type TriggerBlobEvent struct {
	pulumi.CustomResourceState

	// A map of additional properties to associate with the Data Factory Blob Event Trigger.
	AdditionalProperties pulumi.StringMapOutput `pulumi:"additionalProperties"`
	// List of tags that can be used for describing the Data Factory Blob Event Trigger.
	Annotations pulumi.StringArrayOutput `pulumi:"annotations"`
	// The pattern that blob path starts with for trigger to fire.
	BlobPathBeginsWith pulumi.StringPtrOutput `pulumi:"blobPathBeginsWith"`
	// The pattern that blob path ends with for trigger to fire.
	BlobPathEndsWith pulumi.StringPtrOutput `pulumi:"blobPathEndsWith"`
	// The ID of Data Factory in which to associate the Trigger with. Changing this forces a new resource.
	DataFactoryId pulumi.StringOutput `pulumi:"dataFactoryId"`
	// The description for the Data Factory Blob Event Trigger.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// List of events that will fire this trigger. Possible values are `Microsoft.Storage.BlobCreated` and `Microsoft.Storage.BlobDeleted`.
	Events pulumi.StringArrayOutput `pulumi:"events"`
	// are blobs with zero bytes ignored?
	IgnoreEmptyBlobs pulumi.BoolPtrOutput `pulumi:"ignoreEmptyBlobs"`
	// Specifies the name of the Data Factory Blob Event Trigger. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// One or more `pipeline` blocks as defined below.
	Pipelines TriggerBlobEventPipelineArrayOutput `pulumi:"pipelines"`
	// The ID of Storage Account in which blob event will be listened. Changing this forces a new resource.
	StorageAccountId pulumi.StringOutput `pulumi:"storageAccountId"`
}

// NewTriggerBlobEvent registers a new resource with the given unique name, arguments, and options.
func NewTriggerBlobEvent(ctx *pulumi.Context,
	name string, args *TriggerBlobEventArgs, opts ...pulumi.ResourceOption) (*TriggerBlobEvent, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataFactoryId == nil {
		return nil, errors.New("invalid value for required argument 'DataFactoryId'")
	}
	if args.Events == nil {
		return nil, errors.New("invalid value for required argument 'Events'")
	}
	if args.Pipelines == nil {
		return nil, errors.New("invalid value for required argument 'Pipelines'")
	}
	if args.StorageAccountId == nil {
		return nil, errors.New("invalid value for required argument 'StorageAccountId'")
	}
	var resource TriggerBlobEvent
	err := ctx.RegisterResource("azure:datafactory/triggerBlobEvent:TriggerBlobEvent", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTriggerBlobEvent gets an existing TriggerBlobEvent resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTriggerBlobEvent(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TriggerBlobEventState, opts ...pulumi.ResourceOption) (*TriggerBlobEvent, error) {
	var resource TriggerBlobEvent
	err := ctx.ReadResource("azure:datafactory/triggerBlobEvent:TriggerBlobEvent", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TriggerBlobEvent resources.
type triggerBlobEventState struct {
	// A map of additional properties to associate with the Data Factory Blob Event Trigger.
	AdditionalProperties map[string]string `pulumi:"additionalProperties"`
	// List of tags that can be used for describing the Data Factory Blob Event Trigger.
	Annotations []string `pulumi:"annotations"`
	// The pattern that blob path starts with for trigger to fire.
	BlobPathBeginsWith *string `pulumi:"blobPathBeginsWith"`
	// The pattern that blob path ends with for trigger to fire.
	BlobPathEndsWith *string `pulumi:"blobPathEndsWith"`
	// The ID of Data Factory in which to associate the Trigger with. Changing this forces a new resource.
	DataFactoryId *string `pulumi:"dataFactoryId"`
	// The description for the Data Factory Blob Event Trigger.
	Description *string `pulumi:"description"`
	// List of events that will fire this trigger. Possible values are `Microsoft.Storage.BlobCreated` and `Microsoft.Storage.BlobDeleted`.
	Events []string `pulumi:"events"`
	// are blobs with zero bytes ignored?
	IgnoreEmptyBlobs *bool `pulumi:"ignoreEmptyBlobs"`
	// Specifies the name of the Data Factory Blob Event Trigger. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// One or more `pipeline` blocks as defined below.
	Pipelines []TriggerBlobEventPipeline `pulumi:"pipelines"`
	// The ID of Storage Account in which blob event will be listened. Changing this forces a new resource.
	StorageAccountId *string `pulumi:"storageAccountId"`
}

type TriggerBlobEventState struct {
	// A map of additional properties to associate with the Data Factory Blob Event Trigger.
	AdditionalProperties pulumi.StringMapInput
	// List of tags that can be used for describing the Data Factory Blob Event Trigger.
	Annotations pulumi.StringArrayInput
	// The pattern that blob path starts with for trigger to fire.
	BlobPathBeginsWith pulumi.StringPtrInput
	// The pattern that blob path ends with for trigger to fire.
	BlobPathEndsWith pulumi.StringPtrInput
	// The ID of Data Factory in which to associate the Trigger with. Changing this forces a new resource.
	DataFactoryId pulumi.StringPtrInput
	// The description for the Data Factory Blob Event Trigger.
	Description pulumi.StringPtrInput
	// List of events that will fire this trigger. Possible values are `Microsoft.Storage.BlobCreated` and `Microsoft.Storage.BlobDeleted`.
	Events pulumi.StringArrayInput
	// are blobs with zero bytes ignored?
	IgnoreEmptyBlobs pulumi.BoolPtrInput
	// Specifies the name of the Data Factory Blob Event Trigger. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// One or more `pipeline` blocks as defined below.
	Pipelines TriggerBlobEventPipelineArrayInput
	// The ID of Storage Account in which blob event will be listened. Changing this forces a new resource.
	StorageAccountId pulumi.StringPtrInput
}

func (TriggerBlobEventState) ElementType() reflect.Type {
	return reflect.TypeOf((*triggerBlobEventState)(nil)).Elem()
}

type triggerBlobEventArgs struct {
	// A map of additional properties to associate with the Data Factory Blob Event Trigger.
	AdditionalProperties map[string]string `pulumi:"additionalProperties"`
	// List of tags that can be used for describing the Data Factory Blob Event Trigger.
	Annotations []string `pulumi:"annotations"`
	// The pattern that blob path starts with for trigger to fire.
	BlobPathBeginsWith *string `pulumi:"blobPathBeginsWith"`
	// The pattern that blob path ends with for trigger to fire.
	BlobPathEndsWith *string `pulumi:"blobPathEndsWith"`
	// The ID of Data Factory in which to associate the Trigger with. Changing this forces a new resource.
	DataFactoryId string `pulumi:"dataFactoryId"`
	// The description for the Data Factory Blob Event Trigger.
	Description *string `pulumi:"description"`
	// List of events that will fire this trigger. Possible values are `Microsoft.Storage.BlobCreated` and `Microsoft.Storage.BlobDeleted`.
	Events []string `pulumi:"events"`
	// are blobs with zero bytes ignored?
	IgnoreEmptyBlobs *bool `pulumi:"ignoreEmptyBlobs"`
	// Specifies the name of the Data Factory Blob Event Trigger. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// One or more `pipeline` blocks as defined below.
	Pipelines []TriggerBlobEventPipeline `pulumi:"pipelines"`
	// The ID of Storage Account in which blob event will be listened. Changing this forces a new resource.
	StorageAccountId string `pulumi:"storageAccountId"`
}

// The set of arguments for constructing a TriggerBlobEvent resource.
type TriggerBlobEventArgs struct {
	// A map of additional properties to associate with the Data Factory Blob Event Trigger.
	AdditionalProperties pulumi.StringMapInput
	// List of tags that can be used for describing the Data Factory Blob Event Trigger.
	Annotations pulumi.StringArrayInput
	// The pattern that blob path starts with for trigger to fire.
	BlobPathBeginsWith pulumi.StringPtrInput
	// The pattern that blob path ends with for trigger to fire.
	BlobPathEndsWith pulumi.StringPtrInput
	// The ID of Data Factory in which to associate the Trigger with. Changing this forces a new resource.
	DataFactoryId pulumi.StringInput
	// The description for the Data Factory Blob Event Trigger.
	Description pulumi.StringPtrInput
	// List of events that will fire this trigger. Possible values are `Microsoft.Storage.BlobCreated` and `Microsoft.Storage.BlobDeleted`.
	Events pulumi.StringArrayInput
	// are blobs with zero bytes ignored?
	IgnoreEmptyBlobs pulumi.BoolPtrInput
	// Specifies the name of the Data Factory Blob Event Trigger. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// One or more `pipeline` blocks as defined below.
	Pipelines TriggerBlobEventPipelineArrayInput
	// The ID of Storage Account in which blob event will be listened. Changing this forces a new resource.
	StorageAccountId pulumi.StringInput
}

func (TriggerBlobEventArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*triggerBlobEventArgs)(nil)).Elem()
}

type TriggerBlobEventInput interface {
	pulumi.Input

	ToTriggerBlobEventOutput() TriggerBlobEventOutput
	ToTriggerBlobEventOutputWithContext(ctx context.Context) TriggerBlobEventOutput
}

func (*TriggerBlobEvent) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBlobEvent)(nil))
}

func (i *TriggerBlobEvent) ToTriggerBlobEventOutput() TriggerBlobEventOutput {
	return i.ToTriggerBlobEventOutputWithContext(context.Background())
}

func (i *TriggerBlobEvent) ToTriggerBlobEventOutputWithContext(ctx context.Context) TriggerBlobEventOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBlobEventOutput)
}

func (i *TriggerBlobEvent) ToTriggerBlobEventPtrOutput() TriggerBlobEventPtrOutput {
	return i.ToTriggerBlobEventPtrOutputWithContext(context.Background())
}

func (i *TriggerBlobEvent) ToTriggerBlobEventPtrOutputWithContext(ctx context.Context) TriggerBlobEventPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBlobEventPtrOutput)
}

type TriggerBlobEventPtrInput interface {
	pulumi.Input

	ToTriggerBlobEventPtrOutput() TriggerBlobEventPtrOutput
	ToTriggerBlobEventPtrOutputWithContext(ctx context.Context) TriggerBlobEventPtrOutput
}

type triggerBlobEventPtrType TriggerBlobEventArgs

func (*triggerBlobEventPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerBlobEvent)(nil))
}

func (i *triggerBlobEventPtrType) ToTriggerBlobEventPtrOutput() TriggerBlobEventPtrOutput {
	return i.ToTriggerBlobEventPtrOutputWithContext(context.Background())
}

func (i *triggerBlobEventPtrType) ToTriggerBlobEventPtrOutputWithContext(ctx context.Context) TriggerBlobEventPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBlobEventPtrOutput)
}

// TriggerBlobEventArrayInput is an input type that accepts TriggerBlobEventArray and TriggerBlobEventArrayOutput values.
// You can construct a concrete instance of `TriggerBlobEventArrayInput` via:
//
//          TriggerBlobEventArray{ TriggerBlobEventArgs{...} }
type TriggerBlobEventArrayInput interface {
	pulumi.Input

	ToTriggerBlobEventArrayOutput() TriggerBlobEventArrayOutput
	ToTriggerBlobEventArrayOutputWithContext(context.Context) TriggerBlobEventArrayOutput
}

type TriggerBlobEventArray []TriggerBlobEventInput

func (TriggerBlobEventArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*TriggerBlobEvent)(nil))
}

func (i TriggerBlobEventArray) ToTriggerBlobEventArrayOutput() TriggerBlobEventArrayOutput {
	return i.ToTriggerBlobEventArrayOutputWithContext(context.Background())
}

func (i TriggerBlobEventArray) ToTriggerBlobEventArrayOutputWithContext(ctx context.Context) TriggerBlobEventArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBlobEventArrayOutput)
}

// TriggerBlobEventMapInput is an input type that accepts TriggerBlobEventMap and TriggerBlobEventMapOutput values.
// You can construct a concrete instance of `TriggerBlobEventMapInput` via:
//
//          TriggerBlobEventMap{ "key": TriggerBlobEventArgs{...} }
type TriggerBlobEventMapInput interface {
	pulumi.Input

	ToTriggerBlobEventMapOutput() TriggerBlobEventMapOutput
	ToTriggerBlobEventMapOutputWithContext(context.Context) TriggerBlobEventMapOutput
}

type TriggerBlobEventMap map[string]TriggerBlobEventInput

func (TriggerBlobEventMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*TriggerBlobEvent)(nil))
}

func (i TriggerBlobEventMap) ToTriggerBlobEventMapOutput() TriggerBlobEventMapOutput {
	return i.ToTriggerBlobEventMapOutputWithContext(context.Background())
}

func (i TriggerBlobEventMap) ToTriggerBlobEventMapOutputWithContext(ctx context.Context) TriggerBlobEventMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBlobEventMapOutput)
}

type TriggerBlobEventOutput struct {
	*pulumi.OutputState
}

func (TriggerBlobEventOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBlobEvent)(nil))
}

func (o TriggerBlobEventOutput) ToTriggerBlobEventOutput() TriggerBlobEventOutput {
	return o
}

func (o TriggerBlobEventOutput) ToTriggerBlobEventOutputWithContext(ctx context.Context) TriggerBlobEventOutput {
	return o
}

func (o TriggerBlobEventOutput) ToTriggerBlobEventPtrOutput() TriggerBlobEventPtrOutput {
	return o.ToTriggerBlobEventPtrOutputWithContext(context.Background())
}

func (o TriggerBlobEventOutput) ToTriggerBlobEventPtrOutputWithContext(ctx context.Context) TriggerBlobEventPtrOutput {
	return o.ApplyT(func(v TriggerBlobEvent) *TriggerBlobEvent {
		return &v
	}).(TriggerBlobEventPtrOutput)
}

type TriggerBlobEventPtrOutput struct {
	*pulumi.OutputState
}

func (TriggerBlobEventPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerBlobEvent)(nil))
}

func (o TriggerBlobEventPtrOutput) ToTriggerBlobEventPtrOutput() TriggerBlobEventPtrOutput {
	return o
}

func (o TriggerBlobEventPtrOutput) ToTriggerBlobEventPtrOutputWithContext(ctx context.Context) TriggerBlobEventPtrOutput {
	return o
}

type TriggerBlobEventArrayOutput struct{ *pulumi.OutputState }

func (TriggerBlobEventArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBlobEvent)(nil))
}

func (o TriggerBlobEventArrayOutput) ToTriggerBlobEventArrayOutput() TriggerBlobEventArrayOutput {
	return o
}

func (o TriggerBlobEventArrayOutput) ToTriggerBlobEventArrayOutputWithContext(ctx context.Context) TriggerBlobEventArrayOutput {
	return o
}

func (o TriggerBlobEventArrayOutput) Index(i pulumi.IntInput) TriggerBlobEventOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TriggerBlobEvent {
		return vs[0].([]TriggerBlobEvent)[vs[1].(int)]
	}).(TriggerBlobEventOutput)
}

type TriggerBlobEventMapOutput struct{ *pulumi.OutputState }

func (TriggerBlobEventMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]TriggerBlobEvent)(nil))
}

func (o TriggerBlobEventMapOutput) ToTriggerBlobEventMapOutput() TriggerBlobEventMapOutput {
	return o
}

func (o TriggerBlobEventMapOutput) ToTriggerBlobEventMapOutputWithContext(ctx context.Context) TriggerBlobEventMapOutput {
	return o
}

func (o TriggerBlobEventMapOutput) MapIndex(k pulumi.StringInput) TriggerBlobEventOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) TriggerBlobEvent {
		return vs[0].(map[string]TriggerBlobEvent)[vs[1].(string)]
	}).(TriggerBlobEventOutput)
}

func init() {
	pulumi.RegisterOutputType(TriggerBlobEventOutput{})
	pulumi.RegisterOutputType(TriggerBlobEventPtrOutput{})
	pulumi.RegisterOutputType(TriggerBlobEventArrayOutput{})
	pulumi.RegisterOutputType(TriggerBlobEventMapOutput{})
}
