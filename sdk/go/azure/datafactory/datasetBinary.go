// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datafactory

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Data Factory Binary Dataset inside an Azure Data Factory.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/datafactory"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleFactory, err := datafactory.NewFactory(ctx, "exampleFactory", &datafactory.FactoryArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//			})
//			if err != nil {
//				return err
//			}
//			exampleLinkedServiceSftp, err := datafactory.NewLinkedServiceSftp(ctx, "exampleLinkedServiceSftp", &datafactory.LinkedServiceSftpArgs{
//				DataFactoryId:      exampleFactory.ID(),
//				AuthenticationType: pulumi.String("Basic"),
//				Host:               pulumi.String("http://www.bing.com"),
//				Port:               pulumi.Int(22),
//				Username:           pulumi.String("foo"),
//				Password:           pulumi.String("bar"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = datafactory.NewDatasetBinary(ctx, "exampleDatasetBinary", &datafactory.DatasetBinaryArgs{
//				DataFactoryId:     exampleFactory.ID(),
//				LinkedServiceName: exampleLinkedServiceSftp.Name,
//				SftpServerLocation: &datafactory.DatasetBinarySftpServerLocationArgs{
//					Path:     pulumi.String("/test/"),
//					Filename: pulumi.String("**"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Data Factory Binary Datasets can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:datafactory/datasetBinary:DatasetBinary example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.DataFactory/factories/example/datasets/example
//
// ```
type DatasetBinary struct {
	pulumi.CustomResourceState

	// A map of additional properties to associate with the Data Factory Binary Dataset.
	AdditionalProperties pulumi.StringMapOutput `pulumi:"additionalProperties"`
	// List of tags that can be used for describing the Data Factory Binary Dataset.
	Annotations pulumi.StringArrayOutput `pulumi:"annotations"`
	// A `azureBlobStorageLocation` block as defined below.
	AzureBlobStorageLocation DatasetBinaryAzureBlobStorageLocationPtrOutput `pulumi:"azureBlobStorageLocation"`
	// A `compression` block as defined below.
	Compression DatasetBinaryCompressionPtrOutput `pulumi:"compression"`
	// The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
	DataFactoryId pulumi.StringOutput `pulumi:"dataFactoryId"`
	// The description for the Data Factory Dataset.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The folder that this Dataset is in. If not specified, the Dataset will appear at the root level.
	Folder pulumi.StringPtrOutput `pulumi:"folder"`
	// A `httpServerLocation` block as defined below.
	HttpServerLocation DatasetBinaryHttpServerLocationPtrOutput `pulumi:"httpServerLocation"`
	// The Data Factory Linked Service name in which to associate the Binary Dataset with.
	LinkedServiceName pulumi.StringOutput `pulumi:"linkedServiceName"`
	// Specifies the name of the Data Factory Binary Dataset. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/azure/data-factory/naming-rules) for all restrictions.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies a list of parameters to associate with the Data Factory Binary Dataset.
	//
	// The following supported locations for a Binary Dataset. One of these should be specified:
	Parameters pulumi.StringMapOutput `pulumi:"parameters"`
	// A `sftpServerLocation` block as defined below.
	SftpServerLocation DatasetBinarySftpServerLocationPtrOutput `pulumi:"sftpServerLocation"`
}

// NewDatasetBinary registers a new resource with the given unique name, arguments, and options.
func NewDatasetBinary(ctx *pulumi.Context,
	name string, args *DatasetBinaryArgs, opts ...pulumi.ResourceOption) (*DatasetBinary, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataFactoryId == nil {
		return nil, errors.New("invalid value for required argument 'DataFactoryId'")
	}
	if args.LinkedServiceName == nil {
		return nil, errors.New("invalid value for required argument 'LinkedServiceName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DatasetBinary
	err := ctx.RegisterResource("azure:datafactory/datasetBinary:DatasetBinary", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatasetBinary gets an existing DatasetBinary resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatasetBinary(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatasetBinaryState, opts ...pulumi.ResourceOption) (*DatasetBinary, error) {
	var resource DatasetBinary
	err := ctx.ReadResource("azure:datafactory/datasetBinary:DatasetBinary", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatasetBinary resources.
type datasetBinaryState struct {
	// A map of additional properties to associate with the Data Factory Binary Dataset.
	AdditionalProperties map[string]string `pulumi:"additionalProperties"`
	// List of tags that can be used for describing the Data Factory Binary Dataset.
	Annotations []string `pulumi:"annotations"`
	// A `azureBlobStorageLocation` block as defined below.
	AzureBlobStorageLocation *DatasetBinaryAzureBlobStorageLocation `pulumi:"azureBlobStorageLocation"`
	// A `compression` block as defined below.
	Compression *DatasetBinaryCompression `pulumi:"compression"`
	// The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
	DataFactoryId *string `pulumi:"dataFactoryId"`
	// The description for the Data Factory Dataset.
	Description *string `pulumi:"description"`
	// The folder that this Dataset is in. If not specified, the Dataset will appear at the root level.
	Folder *string `pulumi:"folder"`
	// A `httpServerLocation` block as defined below.
	HttpServerLocation *DatasetBinaryHttpServerLocation `pulumi:"httpServerLocation"`
	// The Data Factory Linked Service name in which to associate the Binary Dataset with.
	LinkedServiceName *string `pulumi:"linkedServiceName"`
	// Specifies the name of the Data Factory Binary Dataset. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/azure/data-factory/naming-rules) for all restrictions.
	Name *string `pulumi:"name"`
	// Specifies a list of parameters to associate with the Data Factory Binary Dataset.
	//
	// The following supported locations for a Binary Dataset. One of these should be specified:
	Parameters map[string]string `pulumi:"parameters"`
	// A `sftpServerLocation` block as defined below.
	SftpServerLocation *DatasetBinarySftpServerLocation `pulumi:"sftpServerLocation"`
}

type DatasetBinaryState struct {
	// A map of additional properties to associate with the Data Factory Binary Dataset.
	AdditionalProperties pulumi.StringMapInput
	// List of tags that can be used for describing the Data Factory Binary Dataset.
	Annotations pulumi.StringArrayInput
	// A `azureBlobStorageLocation` block as defined below.
	AzureBlobStorageLocation DatasetBinaryAzureBlobStorageLocationPtrInput
	// A `compression` block as defined below.
	Compression DatasetBinaryCompressionPtrInput
	// The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
	DataFactoryId pulumi.StringPtrInput
	// The description for the Data Factory Dataset.
	Description pulumi.StringPtrInput
	// The folder that this Dataset is in. If not specified, the Dataset will appear at the root level.
	Folder pulumi.StringPtrInput
	// A `httpServerLocation` block as defined below.
	HttpServerLocation DatasetBinaryHttpServerLocationPtrInput
	// The Data Factory Linked Service name in which to associate the Binary Dataset with.
	LinkedServiceName pulumi.StringPtrInput
	// Specifies the name of the Data Factory Binary Dataset. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/azure/data-factory/naming-rules) for all restrictions.
	Name pulumi.StringPtrInput
	// Specifies a list of parameters to associate with the Data Factory Binary Dataset.
	//
	// The following supported locations for a Binary Dataset. One of these should be specified:
	Parameters pulumi.StringMapInput
	// A `sftpServerLocation` block as defined below.
	SftpServerLocation DatasetBinarySftpServerLocationPtrInput
}

func (DatasetBinaryState) ElementType() reflect.Type {
	return reflect.TypeOf((*datasetBinaryState)(nil)).Elem()
}

type datasetBinaryArgs struct {
	// A map of additional properties to associate with the Data Factory Binary Dataset.
	AdditionalProperties map[string]string `pulumi:"additionalProperties"`
	// List of tags that can be used for describing the Data Factory Binary Dataset.
	Annotations []string `pulumi:"annotations"`
	// A `azureBlobStorageLocation` block as defined below.
	AzureBlobStorageLocation *DatasetBinaryAzureBlobStorageLocation `pulumi:"azureBlobStorageLocation"`
	// A `compression` block as defined below.
	Compression *DatasetBinaryCompression `pulumi:"compression"`
	// The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
	DataFactoryId string `pulumi:"dataFactoryId"`
	// The description for the Data Factory Dataset.
	Description *string `pulumi:"description"`
	// The folder that this Dataset is in. If not specified, the Dataset will appear at the root level.
	Folder *string `pulumi:"folder"`
	// A `httpServerLocation` block as defined below.
	HttpServerLocation *DatasetBinaryHttpServerLocation `pulumi:"httpServerLocation"`
	// The Data Factory Linked Service name in which to associate the Binary Dataset with.
	LinkedServiceName string `pulumi:"linkedServiceName"`
	// Specifies the name of the Data Factory Binary Dataset. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/azure/data-factory/naming-rules) for all restrictions.
	Name *string `pulumi:"name"`
	// Specifies a list of parameters to associate with the Data Factory Binary Dataset.
	//
	// The following supported locations for a Binary Dataset. One of these should be specified:
	Parameters map[string]string `pulumi:"parameters"`
	// A `sftpServerLocation` block as defined below.
	SftpServerLocation *DatasetBinarySftpServerLocation `pulumi:"sftpServerLocation"`
}

// The set of arguments for constructing a DatasetBinary resource.
type DatasetBinaryArgs struct {
	// A map of additional properties to associate with the Data Factory Binary Dataset.
	AdditionalProperties pulumi.StringMapInput
	// List of tags that can be used for describing the Data Factory Binary Dataset.
	Annotations pulumi.StringArrayInput
	// A `azureBlobStorageLocation` block as defined below.
	AzureBlobStorageLocation DatasetBinaryAzureBlobStorageLocationPtrInput
	// A `compression` block as defined below.
	Compression DatasetBinaryCompressionPtrInput
	// The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
	DataFactoryId pulumi.StringInput
	// The description for the Data Factory Dataset.
	Description pulumi.StringPtrInput
	// The folder that this Dataset is in. If not specified, the Dataset will appear at the root level.
	Folder pulumi.StringPtrInput
	// A `httpServerLocation` block as defined below.
	HttpServerLocation DatasetBinaryHttpServerLocationPtrInput
	// The Data Factory Linked Service name in which to associate the Binary Dataset with.
	LinkedServiceName pulumi.StringInput
	// Specifies the name of the Data Factory Binary Dataset. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/azure/data-factory/naming-rules) for all restrictions.
	Name pulumi.StringPtrInput
	// Specifies a list of parameters to associate with the Data Factory Binary Dataset.
	//
	// The following supported locations for a Binary Dataset. One of these should be specified:
	Parameters pulumi.StringMapInput
	// A `sftpServerLocation` block as defined below.
	SftpServerLocation DatasetBinarySftpServerLocationPtrInput
}

func (DatasetBinaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*datasetBinaryArgs)(nil)).Elem()
}

type DatasetBinaryInput interface {
	pulumi.Input

	ToDatasetBinaryOutput() DatasetBinaryOutput
	ToDatasetBinaryOutputWithContext(ctx context.Context) DatasetBinaryOutput
}

func (*DatasetBinary) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetBinary)(nil)).Elem()
}

func (i *DatasetBinary) ToDatasetBinaryOutput() DatasetBinaryOutput {
	return i.ToDatasetBinaryOutputWithContext(context.Background())
}

func (i *DatasetBinary) ToDatasetBinaryOutputWithContext(ctx context.Context) DatasetBinaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetBinaryOutput)
}

// DatasetBinaryArrayInput is an input type that accepts DatasetBinaryArray and DatasetBinaryArrayOutput values.
// You can construct a concrete instance of `DatasetBinaryArrayInput` via:
//
//	DatasetBinaryArray{ DatasetBinaryArgs{...} }
type DatasetBinaryArrayInput interface {
	pulumi.Input

	ToDatasetBinaryArrayOutput() DatasetBinaryArrayOutput
	ToDatasetBinaryArrayOutputWithContext(context.Context) DatasetBinaryArrayOutput
}

type DatasetBinaryArray []DatasetBinaryInput

func (DatasetBinaryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatasetBinary)(nil)).Elem()
}

func (i DatasetBinaryArray) ToDatasetBinaryArrayOutput() DatasetBinaryArrayOutput {
	return i.ToDatasetBinaryArrayOutputWithContext(context.Background())
}

func (i DatasetBinaryArray) ToDatasetBinaryArrayOutputWithContext(ctx context.Context) DatasetBinaryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetBinaryArrayOutput)
}

// DatasetBinaryMapInput is an input type that accepts DatasetBinaryMap and DatasetBinaryMapOutput values.
// You can construct a concrete instance of `DatasetBinaryMapInput` via:
//
//	DatasetBinaryMap{ "key": DatasetBinaryArgs{...} }
type DatasetBinaryMapInput interface {
	pulumi.Input

	ToDatasetBinaryMapOutput() DatasetBinaryMapOutput
	ToDatasetBinaryMapOutputWithContext(context.Context) DatasetBinaryMapOutput
}

type DatasetBinaryMap map[string]DatasetBinaryInput

func (DatasetBinaryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatasetBinary)(nil)).Elem()
}

func (i DatasetBinaryMap) ToDatasetBinaryMapOutput() DatasetBinaryMapOutput {
	return i.ToDatasetBinaryMapOutputWithContext(context.Background())
}

func (i DatasetBinaryMap) ToDatasetBinaryMapOutputWithContext(ctx context.Context) DatasetBinaryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetBinaryMapOutput)
}

type DatasetBinaryOutput struct{ *pulumi.OutputState }

func (DatasetBinaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetBinary)(nil)).Elem()
}

func (o DatasetBinaryOutput) ToDatasetBinaryOutput() DatasetBinaryOutput {
	return o
}

func (o DatasetBinaryOutput) ToDatasetBinaryOutputWithContext(ctx context.Context) DatasetBinaryOutput {
	return o
}

// A map of additional properties to associate with the Data Factory Binary Dataset.
func (o DatasetBinaryOutput) AdditionalProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DatasetBinary) pulumi.StringMapOutput { return v.AdditionalProperties }).(pulumi.StringMapOutput)
}

// List of tags that can be used for describing the Data Factory Binary Dataset.
func (o DatasetBinaryOutput) Annotations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DatasetBinary) pulumi.StringArrayOutput { return v.Annotations }).(pulumi.StringArrayOutput)
}

// A `azureBlobStorageLocation` block as defined below.
func (o DatasetBinaryOutput) AzureBlobStorageLocation() DatasetBinaryAzureBlobStorageLocationPtrOutput {
	return o.ApplyT(func(v *DatasetBinary) DatasetBinaryAzureBlobStorageLocationPtrOutput {
		return v.AzureBlobStorageLocation
	}).(DatasetBinaryAzureBlobStorageLocationPtrOutput)
}

// A `compression` block as defined below.
func (o DatasetBinaryOutput) Compression() DatasetBinaryCompressionPtrOutput {
	return o.ApplyT(func(v *DatasetBinary) DatasetBinaryCompressionPtrOutput { return v.Compression }).(DatasetBinaryCompressionPtrOutput)
}

// The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
func (o DatasetBinaryOutput) DataFactoryId() pulumi.StringOutput {
	return o.ApplyT(func(v *DatasetBinary) pulumi.StringOutput { return v.DataFactoryId }).(pulumi.StringOutput)
}

// The description for the Data Factory Dataset.
func (o DatasetBinaryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetBinary) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The folder that this Dataset is in. If not specified, the Dataset will appear at the root level.
func (o DatasetBinaryOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetBinary) pulumi.StringPtrOutput { return v.Folder }).(pulumi.StringPtrOutput)
}

// A `httpServerLocation` block as defined below.
func (o DatasetBinaryOutput) HttpServerLocation() DatasetBinaryHttpServerLocationPtrOutput {
	return o.ApplyT(func(v *DatasetBinary) DatasetBinaryHttpServerLocationPtrOutput { return v.HttpServerLocation }).(DatasetBinaryHttpServerLocationPtrOutput)
}

// The Data Factory Linked Service name in which to associate the Binary Dataset with.
func (o DatasetBinaryOutput) LinkedServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *DatasetBinary) pulumi.StringOutput { return v.LinkedServiceName }).(pulumi.StringOutput)
}

// Specifies the name of the Data Factory Binary Dataset. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/azure/data-factory/naming-rules) for all restrictions.
func (o DatasetBinaryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DatasetBinary) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies a list of parameters to associate with the Data Factory Binary Dataset.
//
// The following supported locations for a Binary Dataset. One of these should be specified:
func (o DatasetBinaryOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DatasetBinary) pulumi.StringMapOutput { return v.Parameters }).(pulumi.StringMapOutput)
}

// A `sftpServerLocation` block as defined below.
func (o DatasetBinaryOutput) SftpServerLocation() DatasetBinarySftpServerLocationPtrOutput {
	return o.ApplyT(func(v *DatasetBinary) DatasetBinarySftpServerLocationPtrOutput { return v.SftpServerLocation }).(DatasetBinarySftpServerLocationPtrOutput)
}

type DatasetBinaryArrayOutput struct{ *pulumi.OutputState }

func (DatasetBinaryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatasetBinary)(nil)).Elem()
}

func (o DatasetBinaryArrayOutput) ToDatasetBinaryArrayOutput() DatasetBinaryArrayOutput {
	return o
}

func (o DatasetBinaryArrayOutput) ToDatasetBinaryArrayOutputWithContext(ctx context.Context) DatasetBinaryArrayOutput {
	return o
}

func (o DatasetBinaryArrayOutput) Index(i pulumi.IntInput) DatasetBinaryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DatasetBinary {
		return vs[0].([]*DatasetBinary)[vs[1].(int)]
	}).(DatasetBinaryOutput)
}

type DatasetBinaryMapOutput struct{ *pulumi.OutputState }

func (DatasetBinaryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatasetBinary)(nil)).Elem()
}

func (o DatasetBinaryMapOutput) ToDatasetBinaryMapOutput() DatasetBinaryMapOutput {
	return o
}

func (o DatasetBinaryMapOutput) ToDatasetBinaryMapOutputWithContext(ctx context.Context) DatasetBinaryMapOutput {
	return o
}

func (o DatasetBinaryMapOutput) MapIndex(k pulumi.StringInput) DatasetBinaryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DatasetBinary {
		return vs[0].(map[string]*DatasetBinary)[vs[1].(string)]
	}).(DatasetBinaryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetBinaryInput)(nil)).Elem(), &DatasetBinary{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetBinaryArrayInput)(nil)).Elem(), DatasetBinaryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetBinaryMapInput)(nil)).Elem(), DatasetBinaryMap{})
	pulumi.RegisterOutputType(DatasetBinaryOutput{})
	pulumi.RegisterOutputType(DatasetBinaryArrayOutput{})
	pulumi.RegisterOutputType(DatasetBinaryMapOutput{})
}
