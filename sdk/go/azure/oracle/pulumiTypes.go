// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oracle

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type CloudVmClusterDataCollectionOptions struct {
	// Indicates whether diagnostic collection is enabled for the VM Cluster/Cloud VM Cluster/VMBM DBCS. Enabling diagnostic collection allows you to receive Events service notifications for guest VM issues. Diagnostic collection also allows Oracle to provide enhanced service and proactive support for your Exadata system. You can enable diagnostic collection during VM Cluster/Cloud VM Cluster provisioning. You can also disable or enable it at any time using the `UpdateVmCluster` or `updateCloudVmCluster` API.
	DiagnosticsEventsEnabled *bool `pulumi:"diagnosticsEventsEnabled"`
	// Indicates whether health monitoring is enabled for the VM Cluster / Cloud VM Cluster / VMBM DBCS. Enabling health monitoring allows Oracle to collect diagnostic data and share it with its operations and support personnel. You may also receive notifications for some events. Collecting health diagnostics enables Oracle to provide proactive support and enhanced service for your system. Optionally enable health monitoring while provisioning a system. You can also disable or enable health monitoring anytime using the `UpdateVmCluster`, `UpdateCloudVmCluster` or `updateDbsystem` API.
	HealthMonitoringEnabled *bool `pulumi:"healthMonitoringEnabled"`
	// Indicates whether incident logs and trace collection are enabled for the VM Cluster / Cloud VM Cluster / VMBM DBCS. Enabling incident logs collection allows Oracle to receive Events service notifications for guest VM issues, collect incident logs and traces, and use them to diagnose issues and resolve them. Optionally enable incident logs collection while provisioning a system. You can also disable or enable incident logs collection anytime using the `UpdateVmCluster`, `updateCloudVmCluster` or `updateDbsystem` API.
	IncidentLogsEnabled *bool `pulumi:"incidentLogsEnabled"`
}

// CloudVmClusterDataCollectionOptionsInput is an input type that accepts CloudVmClusterDataCollectionOptionsArgs and CloudVmClusterDataCollectionOptionsOutput values.
// You can construct a concrete instance of `CloudVmClusterDataCollectionOptionsInput` via:
//
//	CloudVmClusterDataCollectionOptionsArgs{...}
type CloudVmClusterDataCollectionOptionsInput interface {
	pulumi.Input

	ToCloudVmClusterDataCollectionOptionsOutput() CloudVmClusterDataCollectionOptionsOutput
	ToCloudVmClusterDataCollectionOptionsOutputWithContext(context.Context) CloudVmClusterDataCollectionOptionsOutput
}

type CloudVmClusterDataCollectionOptionsArgs struct {
	// Indicates whether diagnostic collection is enabled for the VM Cluster/Cloud VM Cluster/VMBM DBCS. Enabling diagnostic collection allows you to receive Events service notifications for guest VM issues. Diagnostic collection also allows Oracle to provide enhanced service and proactive support for your Exadata system. You can enable diagnostic collection during VM Cluster/Cloud VM Cluster provisioning. You can also disable or enable it at any time using the `UpdateVmCluster` or `updateCloudVmCluster` API.
	DiagnosticsEventsEnabled pulumi.BoolPtrInput `pulumi:"diagnosticsEventsEnabled"`
	// Indicates whether health monitoring is enabled for the VM Cluster / Cloud VM Cluster / VMBM DBCS. Enabling health monitoring allows Oracle to collect diagnostic data and share it with its operations and support personnel. You may also receive notifications for some events. Collecting health diagnostics enables Oracle to provide proactive support and enhanced service for your system. Optionally enable health monitoring while provisioning a system. You can also disable or enable health monitoring anytime using the `UpdateVmCluster`, `UpdateCloudVmCluster` or `updateDbsystem` API.
	HealthMonitoringEnabled pulumi.BoolPtrInput `pulumi:"healthMonitoringEnabled"`
	// Indicates whether incident logs and trace collection are enabled for the VM Cluster / Cloud VM Cluster / VMBM DBCS. Enabling incident logs collection allows Oracle to receive Events service notifications for guest VM issues, collect incident logs and traces, and use them to diagnose issues and resolve them. Optionally enable incident logs collection while provisioning a system. You can also disable or enable incident logs collection anytime using the `UpdateVmCluster`, `updateCloudVmCluster` or `updateDbsystem` API.
	IncidentLogsEnabled pulumi.BoolPtrInput `pulumi:"incidentLogsEnabled"`
}

func (CloudVmClusterDataCollectionOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudVmClusterDataCollectionOptions)(nil)).Elem()
}

func (i CloudVmClusterDataCollectionOptionsArgs) ToCloudVmClusterDataCollectionOptionsOutput() CloudVmClusterDataCollectionOptionsOutput {
	return i.ToCloudVmClusterDataCollectionOptionsOutputWithContext(context.Background())
}

func (i CloudVmClusterDataCollectionOptionsArgs) ToCloudVmClusterDataCollectionOptionsOutputWithContext(ctx context.Context) CloudVmClusterDataCollectionOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudVmClusterDataCollectionOptionsOutput)
}

func (i CloudVmClusterDataCollectionOptionsArgs) ToCloudVmClusterDataCollectionOptionsPtrOutput() CloudVmClusterDataCollectionOptionsPtrOutput {
	return i.ToCloudVmClusterDataCollectionOptionsPtrOutputWithContext(context.Background())
}

func (i CloudVmClusterDataCollectionOptionsArgs) ToCloudVmClusterDataCollectionOptionsPtrOutputWithContext(ctx context.Context) CloudVmClusterDataCollectionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudVmClusterDataCollectionOptionsOutput).ToCloudVmClusterDataCollectionOptionsPtrOutputWithContext(ctx)
}

// CloudVmClusterDataCollectionOptionsPtrInput is an input type that accepts CloudVmClusterDataCollectionOptionsArgs, CloudVmClusterDataCollectionOptionsPtr and CloudVmClusterDataCollectionOptionsPtrOutput values.
// You can construct a concrete instance of `CloudVmClusterDataCollectionOptionsPtrInput` via:
//
//	        CloudVmClusterDataCollectionOptionsArgs{...}
//
//	or:
//
//	        nil
type CloudVmClusterDataCollectionOptionsPtrInput interface {
	pulumi.Input

	ToCloudVmClusterDataCollectionOptionsPtrOutput() CloudVmClusterDataCollectionOptionsPtrOutput
	ToCloudVmClusterDataCollectionOptionsPtrOutputWithContext(context.Context) CloudVmClusterDataCollectionOptionsPtrOutput
}

type cloudVmClusterDataCollectionOptionsPtrType CloudVmClusterDataCollectionOptionsArgs

func CloudVmClusterDataCollectionOptionsPtr(v *CloudVmClusterDataCollectionOptionsArgs) CloudVmClusterDataCollectionOptionsPtrInput {
	return (*cloudVmClusterDataCollectionOptionsPtrType)(v)
}

func (*cloudVmClusterDataCollectionOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudVmClusterDataCollectionOptions)(nil)).Elem()
}

func (i *cloudVmClusterDataCollectionOptionsPtrType) ToCloudVmClusterDataCollectionOptionsPtrOutput() CloudVmClusterDataCollectionOptionsPtrOutput {
	return i.ToCloudVmClusterDataCollectionOptionsPtrOutputWithContext(context.Background())
}

func (i *cloudVmClusterDataCollectionOptionsPtrType) ToCloudVmClusterDataCollectionOptionsPtrOutputWithContext(ctx context.Context) CloudVmClusterDataCollectionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudVmClusterDataCollectionOptionsPtrOutput)
}

type CloudVmClusterDataCollectionOptionsOutput struct{ *pulumi.OutputState }

func (CloudVmClusterDataCollectionOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudVmClusterDataCollectionOptions)(nil)).Elem()
}

func (o CloudVmClusterDataCollectionOptionsOutput) ToCloudVmClusterDataCollectionOptionsOutput() CloudVmClusterDataCollectionOptionsOutput {
	return o
}

func (o CloudVmClusterDataCollectionOptionsOutput) ToCloudVmClusterDataCollectionOptionsOutputWithContext(ctx context.Context) CloudVmClusterDataCollectionOptionsOutput {
	return o
}

func (o CloudVmClusterDataCollectionOptionsOutput) ToCloudVmClusterDataCollectionOptionsPtrOutput() CloudVmClusterDataCollectionOptionsPtrOutput {
	return o.ToCloudVmClusterDataCollectionOptionsPtrOutputWithContext(context.Background())
}

func (o CloudVmClusterDataCollectionOptionsOutput) ToCloudVmClusterDataCollectionOptionsPtrOutputWithContext(ctx context.Context) CloudVmClusterDataCollectionOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudVmClusterDataCollectionOptions) *CloudVmClusterDataCollectionOptions {
		return &v
	}).(CloudVmClusterDataCollectionOptionsPtrOutput)
}

// Indicates whether diagnostic collection is enabled for the VM Cluster/Cloud VM Cluster/VMBM DBCS. Enabling diagnostic collection allows you to receive Events service notifications for guest VM issues. Diagnostic collection also allows Oracle to provide enhanced service and proactive support for your Exadata system. You can enable diagnostic collection during VM Cluster/Cloud VM Cluster provisioning. You can also disable or enable it at any time using the `UpdateVmCluster` or `updateCloudVmCluster` API.
func (o CloudVmClusterDataCollectionOptionsOutput) DiagnosticsEventsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudVmClusterDataCollectionOptions) *bool { return v.DiagnosticsEventsEnabled }).(pulumi.BoolPtrOutput)
}

// Indicates whether health monitoring is enabled for the VM Cluster / Cloud VM Cluster / VMBM DBCS. Enabling health monitoring allows Oracle to collect diagnostic data and share it with its operations and support personnel. You may also receive notifications for some events. Collecting health diagnostics enables Oracle to provide proactive support and enhanced service for your system. Optionally enable health monitoring while provisioning a system. You can also disable or enable health monitoring anytime using the `UpdateVmCluster`, `UpdateCloudVmCluster` or `updateDbsystem` API.
func (o CloudVmClusterDataCollectionOptionsOutput) HealthMonitoringEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudVmClusterDataCollectionOptions) *bool { return v.HealthMonitoringEnabled }).(pulumi.BoolPtrOutput)
}

// Indicates whether incident logs and trace collection are enabled for the VM Cluster / Cloud VM Cluster / VMBM DBCS. Enabling incident logs collection allows Oracle to receive Events service notifications for guest VM issues, collect incident logs and traces, and use them to diagnose issues and resolve them. Optionally enable incident logs collection while provisioning a system. You can also disable or enable incident logs collection anytime using the `UpdateVmCluster`, `updateCloudVmCluster` or `updateDbsystem` API.
func (o CloudVmClusterDataCollectionOptionsOutput) IncidentLogsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudVmClusterDataCollectionOptions) *bool { return v.IncidentLogsEnabled }).(pulumi.BoolPtrOutput)
}

type CloudVmClusterDataCollectionOptionsPtrOutput struct{ *pulumi.OutputState }

func (CloudVmClusterDataCollectionOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudVmClusterDataCollectionOptions)(nil)).Elem()
}

func (o CloudVmClusterDataCollectionOptionsPtrOutput) ToCloudVmClusterDataCollectionOptionsPtrOutput() CloudVmClusterDataCollectionOptionsPtrOutput {
	return o
}

func (o CloudVmClusterDataCollectionOptionsPtrOutput) ToCloudVmClusterDataCollectionOptionsPtrOutputWithContext(ctx context.Context) CloudVmClusterDataCollectionOptionsPtrOutput {
	return o
}

func (o CloudVmClusterDataCollectionOptionsPtrOutput) Elem() CloudVmClusterDataCollectionOptionsOutput {
	return o.ApplyT(func(v *CloudVmClusterDataCollectionOptions) CloudVmClusterDataCollectionOptions {
		if v != nil {
			return *v
		}
		var ret CloudVmClusterDataCollectionOptions
		return ret
	}).(CloudVmClusterDataCollectionOptionsOutput)
}

// Indicates whether diagnostic collection is enabled for the VM Cluster/Cloud VM Cluster/VMBM DBCS. Enabling diagnostic collection allows you to receive Events service notifications for guest VM issues. Diagnostic collection also allows Oracle to provide enhanced service and proactive support for your Exadata system. You can enable diagnostic collection during VM Cluster/Cloud VM Cluster provisioning. You can also disable or enable it at any time using the `UpdateVmCluster` or `updateCloudVmCluster` API.
func (o CloudVmClusterDataCollectionOptionsPtrOutput) DiagnosticsEventsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudVmClusterDataCollectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DiagnosticsEventsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether health monitoring is enabled for the VM Cluster / Cloud VM Cluster / VMBM DBCS. Enabling health monitoring allows Oracle to collect diagnostic data and share it with its operations and support personnel. You may also receive notifications for some events. Collecting health diagnostics enables Oracle to provide proactive support and enhanced service for your system. Optionally enable health monitoring while provisioning a system. You can also disable or enable health monitoring anytime using the `UpdateVmCluster`, `UpdateCloudVmCluster` or `updateDbsystem` API.
func (o CloudVmClusterDataCollectionOptionsPtrOutput) HealthMonitoringEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudVmClusterDataCollectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.HealthMonitoringEnabled
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether incident logs and trace collection are enabled for the VM Cluster / Cloud VM Cluster / VMBM DBCS. Enabling incident logs collection allows Oracle to receive Events service notifications for guest VM issues, collect incident logs and traces, and use them to diagnose issues and resolve them. Optionally enable incident logs collection while provisioning a system. You can also disable or enable incident logs collection anytime using the `UpdateVmCluster`, `updateCloudVmCluster` or `updateDbsystem` API.
func (o CloudVmClusterDataCollectionOptionsPtrOutput) IncidentLogsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudVmClusterDataCollectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.IncidentLogsEnabled
	}).(pulumi.BoolPtrOutput)
}

type ExadataInfrastructureMaintenanceWindow struct {
	// Days during the week when maintenance should be performed. Valid values are: `0` - represents time slot `0:00 - 3:59 UTC - 4` - represents time slot `4:00 - 7:59 UTC - 8` - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot `20:00 - 23:59 UTC`
	DaysOfWeeks []string `pulumi:"daysOfWeeks"`
	// The window of hours during the day when maintenance should be performed. The window is a 4 hour slot.
	HoursOfDays []int `pulumi:"hoursOfDays"`
	// Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between `1` to `4`.
	LeadTimeInWeeks *int `pulumi:"leadTimeInWeeks"`
	// Months during the year when maintenance should be performed.
	Months []string `pulumi:"months"`
	// Cloud Exadata Infrastructure node patching method, either `ROLLING` or `NONROLLING`. Default value is `ROLLING`. IMPORTANT: Non-rolling infrastructure patching involves system down time. See [Oracle-Managed Infrastructure Maintenance Updates](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/examaintenance.htm#Oracle) for more information.
	PatchingMode *string `pulumi:"patchingMode"`
	// The maintenance window scheduling preference.
	Preference *string `pulumi:"preference"`
	// Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
	WeeksOfMonths []int `pulumi:"weeksOfMonths"`
}

// ExadataInfrastructureMaintenanceWindowInput is an input type that accepts ExadataInfrastructureMaintenanceWindowArgs and ExadataInfrastructureMaintenanceWindowOutput values.
// You can construct a concrete instance of `ExadataInfrastructureMaintenanceWindowInput` via:
//
//	ExadataInfrastructureMaintenanceWindowArgs{...}
type ExadataInfrastructureMaintenanceWindowInput interface {
	pulumi.Input

	ToExadataInfrastructureMaintenanceWindowOutput() ExadataInfrastructureMaintenanceWindowOutput
	ToExadataInfrastructureMaintenanceWindowOutputWithContext(context.Context) ExadataInfrastructureMaintenanceWindowOutput
}

type ExadataInfrastructureMaintenanceWindowArgs struct {
	// Days during the week when maintenance should be performed. Valid values are: `0` - represents time slot `0:00 - 3:59 UTC - 4` - represents time slot `4:00 - 7:59 UTC - 8` - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot `20:00 - 23:59 UTC`
	DaysOfWeeks pulumi.StringArrayInput `pulumi:"daysOfWeeks"`
	// The window of hours during the day when maintenance should be performed. The window is a 4 hour slot.
	HoursOfDays pulumi.IntArrayInput `pulumi:"hoursOfDays"`
	// Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between `1` to `4`.
	LeadTimeInWeeks pulumi.IntPtrInput `pulumi:"leadTimeInWeeks"`
	// Months during the year when maintenance should be performed.
	Months pulumi.StringArrayInput `pulumi:"months"`
	// Cloud Exadata Infrastructure node patching method, either `ROLLING` or `NONROLLING`. Default value is `ROLLING`. IMPORTANT: Non-rolling infrastructure patching involves system down time. See [Oracle-Managed Infrastructure Maintenance Updates](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/examaintenance.htm#Oracle) for more information.
	PatchingMode pulumi.StringPtrInput `pulumi:"patchingMode"`
	// The maintenance window scheduling preference.
	Preference pulumi.StringPtrInput `pulumi:"preference"`
	// Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
	WeeksOfMonths pulumi.IntArrayInput `pulumi:"weeksOfMonths"`
}

func (ExadataInfrastructureMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExadataInfrastructureMaintenanceWindow)(nil)).Elem()
}

func (i ExadataInfrastructureMaintenanceWindowArgs) ToExadataInfrastructureMaintenanceWindowOutput() ExadataInfrastructureMaintenanceWindowOutput {
	return i.ToExadataInfrastructureMaintenanceWindowOutputWithContext(context.Background())
}

func (i ExadataInfrastructureMaintenanceWindowArgs) ToExadataInfrastructureMaintenanceWindowOutputWithContext(ctx context.Context) ExadataInfrastructureMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExadataInfrastructureMaintenanceWindowOutput)
}

// ExadataInfrastructureMaintenanceWindowArrayInput is an input type that accepts ExadataInfrastructureMaintenanceWindowArray and ExadataInfrastructureMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `ExadataInfrastructureMaintenanceWindowArrayInput` via:
//
//	ExadataInfrastructureMaintenanceWindowArray{ ExadataInfrastructureMaintenanceWindowArgs{...} }
type ExadataInfrastructureMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToExadataInfrastructureMaintenanceWindowArrayOutput() ExadataInfrastructureMaintenanceWindowArrayOutput
	ToExadataInfrastructureMaintenanceWindowArrayOutputWithContext(context.Context) ExadataInfrastructureMaintenanceWindowArrayOutput
}

type ExadataInfrastructureMaintenanceWindowArray []ExadataInfrastructureMaintenanceWindowInput

func (ExadataInfrastructureMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExadataInfrastructureMaintenanceWindow)(nil)).Elem()
}

func (i ExadataInfrastructureMaintenanceWindowArray) ToExadataInfrastructureMaintenanceWindowArrayOutput() ExadataInfrastructureMaintenanceWindowArrayOutput {
	return i.ToExadataInfrastructureMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i ExadataInfrastructureMaintenanceWindowArray) ToExadataInfrastructureMaintenanceWindowArrayOutputWithContext(ctx context.Context) ExadataInfrastructureMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExadataInfrastructureMaintenanceWindowArrayOutput)
}

type ExadataInfrastructureMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (ExadataInfrastructureMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExadataInfrastructureMaintenanceWindow)(nil)).Elem()
}

func (o ExadataInfrastructureMaintenanceWindowOutput) ToExadataInfrastructureMaintenanceWindowOutput() ExadataInfrastructureMaintenanceWindowOutput {
	return o
}

func (o ExadataInfrastructureMaintenanceWindowOutput) ToExadataInfrastructureMaintenanceWindowOutputWithContext(ctx context.Context) ExadataInfrastructureMaintenanceWindowOutput {
	return o
}

// Days during the week when maintenance should be performed. Valid values are: `0` - represents time slot `0:00 - 3:59 UTC - 4` - represents time slot `4:00 - 7:59 UTC - 8` - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot `20:00 - 23:59 UTC`
func (o ExadataInfrastructureMaintenanceWindowOutput) DaysOfWeeks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExadataInfrastructureMaintenanceWindow) []string { return v.DaysOfWeeks }).(pulumi.StringArrayOutput)
}

// The window of hours during the day when maintenance should be performed. The window is a 4 hour slot.
func (o ExadataInfrastructureMaintenanceWindowOutput) HoursOfDays() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ExadataInfrastructureMaintenanceWindow) []int { return v.HoursOfDays }).(pulumi.IntArrayOutput)
}

// Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between `1` to `4`.
func (o ExadataInfrastructureMaintenanceWindowOutput) LeadTimeInWeeks() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExadataInfrastructureMaintenanceWindow) *int { return v.LeadTimeInWeeks }).(pulumi.IntPtrOutput)
}

// Months during the year when maintenance should be performed.
func (o ExadataInfrastructureMaintenanceWindowOutput) Months() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExadataInfrastructureMaintenanceWindow) []string { return v.Months }).(pulumi.StringArrayOutput)
}

// Cloud Exadata Infrastructure node patching method, either `ROLLING` or `NONROLLING`. Default value is `ROLLING`. IMPORTANT: Non-rolling infrastructure patching involves system down time. See [Oracle-Managed Infrastructure Maintenance Updates](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/examaintenance.htm#Oracle) for more information.
func (o ExadataInfrastructureMaintenanceWindowOutput) PatchingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExadataInfrastructureMaintenanceWindow) *string { return v.PatchingMode }).(pulumi.StringPtrOutput)
}

// The maintenance window scheduling preference.
func (o ExadataInfrastructureMaintenanceWindowOutput) Preference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExadataInfrastructureMaintenanceWindow) *string { return v.Preference }).(pulumi.StringPtrOutput)
}

// Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed.
func (o ExadataInfrastructureMaintenanceWindowOutput) WeeksOfMonths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ExadataInfrastructureMaintenanceWindow) []int { return v.WeeksOfMonths }).(pulumi.IntArrayOutput)
}

type ExadataInfrastructureMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (ExadataInfrastructureMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExadataInfrastructureMaintenanceWindow)(nil)).Elem()
}

func (o ExadataInfrastructureMaintenanceWindowArrayOutput) ToExadataInfrastructureMaintenanceWindowArrayOutput() ExadataInfrastructureMaintenanceWindowArrayOutput {
	return o
}

func (o ExadataInfrastructureMaintenanceWindowArrayOutput) ToExadataInfrastructureMaintenanceWindowArrayOutputWithContext(ctx context.Context) ExadataInfrastructureMaintenanceWindowArrayOutput {
	return o
}

func (o ExadataInfrastructureMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) ExadataInfrastructureMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExadataInfrastructureMaintenanceWindow {
		return vs[0].([]ExadataInfrastructureMaintenanceWindow)[vs[1].(int)]
	}).(ExadataInfrastructureMaintenanceWindowOutput)
}

type GetAdbsCharacterSetsCharacterSet struct {
	// A valid Oracle character set.
	CharacterSet string `pulumi:"characterSet"`
}

// GetAdbsCharacterSetsCharacterSetInput is an input type that accepts GetAdbsCharacterSetsCharacterSetArgs and GetAdbsCharacterSetsCharacterSetOutput values.
// You can construct a concrete instance of `GetAdbsCharacterSetsCharacterSetInput` via:
//
//	GetAdbsCharacterSetsCharacterSetArgs{...}
type GetAdbsCharacterSetsCharacterSetInput interface {
	pulumi.Input

	ToGetAdbsCharacterSetsCharacterSetOutput() GetAdbsCharacterSetsCharacterSetOutput
	ToGetAdbsCharacterSetsCharacterSetOutputWithContext(context.Context) GetAdbsCharacterSetsCharacterSetOutput
}

type GetAdbsCharacterSetsCharacterSetArgs struct {
	// A valid Oracle character set.
	CharacterSet pulumi.StringInput `pulumi:"characterSet"`
}

func (GetAdbsCharacterSetsCharacterSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdbsCharacterSetsCharacterSet)(nil)).Elem()
}

func (i GetAdbsCharacterSetsCharacterSetArgs) ToGetAdbsCharacterSetsCharacterSetOutput() GetAdbsCharacterSetsCharacterSetOutput {
	return i.ToGetAdbsCharacterSetsCharacterSetOutputWithContext(context.Background())
}

func (i GetAdbsCharacterSetsCharacterSetArgs) ToGetAdbsCharacterSetsCharacterSetOutputWithContext(ctx context.Context) GetAdbsCharacterSetsCharacterSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdbsCharacterSetsCharacterSetOutput)
}

// GetAdbsCharacterSetsCharacterSetArrayInput is an input type that accepts GetAdbsCharacterSetsCharacterSetArray and GetAdbsCharacterSetsCharacterSetArrayOutput values.
// You can construct a concrete instance of `GetAdbsCharacterSetsCharacterSetArrayInput` via:
//
//	GetAdbsCharacterSetsCharacterSetArray{ GetAdbsCharacterSetsCharacterSetArgs{...} }
type GetAdbsCharacterSetsCharacterSetArrayInput interface {
	pulumi.Input

	ToGetAdbsCharacterSetsCharacterSetArrayOutput() GetAdbsCharacterSetsCharacterSetArrayOutput
	ToGetAdbsCharacterSetsCharacterSetArrayOutputWithContext(context.Context) GetAdbsCharacterSetsCharacterSetArrayOutput
}

type GetAdbsCharacterSetsCharacterSetArray []GetAdbsCharacterSetsCharacterSetInput

func (GetAdbsCharacterSetsCharacterSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdbsCharacterSetsCharacterSet)(nil)).Elem()
}

func (i GetAdbsCharacterSetsCharacterSetArray) ToGetAdbsCharacterSetsCharacterSetArrayOutput() GetAdbsCharacterSetsCharacterSetArrayOutput {
	return i.ToGetAdbsCharacterSetsCharacterSetArrayOutputWithContext(context.Background())
}

func (i GetAdbsCharacterSetsCharacterSetArray) ToGetAdbsCharacterSetsCharacterSetArrayOutputWithContext(ctx context.Context) GetAdbsCharacterSetsCharacterSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdbsCharacterSetsCharacterSetArrayOutput)
}

type GetAdbsCharacterSetsCharacterSetOutput struct{ *pulumi.OutputState }

func (GetAdbsCharacterSetsCharacterSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdbsCharacterSetsCharacterSet)(nil)).Elem()
}

func (o GetAdbsCharacterSetsCharacterSetOutput) ToGetAdbsCharacterSetsCharacterSetOutput() GetAdbsCharacterSetsCharacterSetOutput {
	return o
}

func (o GetAdbsCharacterSetsCharacterSetOutput) ToGetAdbsCharacterSetsCharacterSetOutputWithContext(ctx context.Context) GetAdbsCharacterSetsCharacterSetOutput {
	return o
}

// A valid Oracle character set.
func (o GetAdbsCharacterSetsCharacterSetOutput) CharacterSet() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdbsCharacterSetsCharacterSet) string { return v.CharacterSet }).(pulumi.StringOutput)
}

type GetAdbsCharacterSetsCharacterSetArrayOutput struct{ *pulumi.OutputState }

func (GetAdbsCharacterSetsCharacterSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdbsCharacterSetsCharacterSet)(nil)).Elem()
}

func (o GetAdbsCharacterSetsCharacterSetArrayOutput) ToGetAdbsCharacterSetsCharacterSetArrayOutput() GetAdbsCharacterSetsCharacterSetArrayOutput {
	return o
}

func (o GetAdbsCharacterSetsCharacterSetArrayOutput) ToGetAdbsCharacterSetsCharacterSetArrayOutputWithContext(ctx context.Context) GetAdbsCharacterSetsCharacterSetArrayOutput {
	return o
}

func (o GetAdbsCharacterSetsCharacterSetArrayOutput) Index(i pulumi.IntInput) GetAdbsCharacterSetsCharacterSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdbsCharacterSetsCharacterSet {
		return vs[0].([]GetAdbsCharacterSetsCharacterSet)[vs[1].(int)]
	}).(GetAdbsCharacterSetsCharacterSetOutput)
}

type GetAdbsNationalCharacterSetsCharacterSet struct {
	// A valid Oracle national character set.
	CharacterSet string `pulumi:"characterSet"`
}

// GetAdbsNationalCharacterSetsCharacterSetInput is an input type that accepts GetAdbsNationalCharacterSetsCharacterSetArgs and GetAdbsNationalCharacterSetsCharacterSetOutput values.
// You can construct a concrete instance of `GetAdbsNationalCharacterSetsCharacterSetInput` via:
//
//	GetAdbsNationalCharacterSetsCharacterSetArgs{...}
type GetAdbsNationalCharacterSetsCharacterSetInput interface {
	pulumi.Input

	ToGetAdbsNationalCharacterSetsCharacterSetOutput() GetAdbsNationalCharacterSetsCharacterSetOutput
	ToGetAdbsNationalCharacterSetsCharacterSetOutputWithContext(context.Context) GetAdbsNationalCharacterSetsCharacterSetOutput
}

type GetAdbsNationalCharacterSetsCharacterSetArgs struct {
	// A valid Oracle national character set.
	CharacterSet pulumi.StringInput `pulumi:"characterSet"`
}

func (GetAdbsNationalCharacterSetsCharacterSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdbsNationalCharacterSetsCharacterSet)(nil)).Elem()
}

func (i GetAdbsNationalCharacterSetsCharacterSetArgs) ToGetAdbsNationalCharacterSetsCharacterSetOutput() GetAdbsNationalCharacterSetsCharacterSetOutput {
	return i.ToGetAdbsNationalCharacterSetsCharacterSetOutputWithContext(context.Background())
}

func (i GetAdbsNationalCharacterSetsCharacterSetArgs) ToGetAdbsNationalCharacterSetsCharacterSetOutputWithContext(ctx context.Context) GetAdbsNationalCharacterSetsCharacterSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdbsNationalCharacterSetsCharacterSetOutput)
}

// GetAdbsNationalCharacterSetsCharacterSetArrayInput is an input type that accepts GetAdbsNationalCharacterSetsCharacterSetArray and GetAdbsNationalCharacterSetsCharacterSetArrayOutput values.
// You can construct a concrete instance of `GetAdbsNationalCharacterSetsCharacterSetArrayInput` via:
//
//	GetAdbsNationalCharacterSetsCharacterSetArray{ GetAdbsNationalCharacterSetsCharacterSetArgs{...} }
type GetAdbsNationalCharacterSetsCharacterSetArrayInput interface {
	pulumi.Input

	ToGetAdbsNationalCharacterSetsCharacterSetArrayOutput() GetAdbsNationalCharacterSetsCharacterSetArrayOutput
	ToGetAdbsNationalCharacterSetsCharacterSetArrayOutputWithContext(context.Context) GetAdbsNationalCharacterSetsCharacterSetArrayOutput
}

type GetAdbsNationalCharacterSetsCharacterSetArray []GetAdbsNationalCharacterSetsCharacterSetInput

func (GetAdbsNationalCharacterSetsCharacterSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdbsNationalCharacterSetsCharacterSet)(nil)).Elem()
}

func (i GetAdbsNationalCharacterSetsCharacterSetArray) ToGetAdbsNationalCharacterSetsCharacterSetArrayOutput() GetAdbsNationalCharacterSetsCharacterSetArrayOutput {
	return i.ToGetAdbsNationalCharacterSetsCharacterSetArrayOutputWithContext(context.Background())
}

func (i GetAdbsNationalCharacterSetsCharacterSetArray) ToGetAdbsNationalCharacterSetsCharacterSetArrayOutputWithContext(ctx context.Context) GetAdbsNationalCharacterSetsCharacterSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAdbsNationalCharacterSetsCharacterSetArrayOutput)
}

type GetAdbsNationalCharacterSetsCharacterSetOutput struct{ *pulumi.OutputState }

func (GetAdbsNationalCharacterSetsCharacterSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAdbsNationalCharacterSetsCharacterSet)(nil)).Elem()
}

func (o GetAdbsNationalCharacterSetsCharacterSetOutput) ToGetAdbsNationalCharacterSetsCharacterSetOutput() GetAdbsNationalCharacterSetsCharacterSetOutput {
	return o
}

func (o GetAdbsNationalCharacterSetsCharacterSetOutput) ToGetAdbsNationalCharacterSetsCharacterSetOutputWithContext(ctx context.Context) GetAdbsNationalCharacterSetsCharacterSetOutput {
	return o
}

// A valid Oracle national character set.
func (o GetAdbsNationalCharacterSetsCharacterSetOutput) CharacterSet() pulumi.StringOutput {
	return o.ApplyT(func(v GetAdbsNationalCharacterSetsCharacterSet) string { return v.CharacterSet }).(pulumi.StringOutput)
}

type GetAdbsNationalCharacterSetsCharacterSetArrayOutput struct{ *pulumi.OutputState }

func (GetAdbsNationalCharacterSetsCharacterSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAdbsNationalCharacterSetsCharacterSet)(nil)).Elem()
}

func (o GetAdbsNationalCharacterSetsCharacterSetArrayOutput) ToGetAdbsNationalCharacterSetsCharacterSetArrayOutput() GetAdbsNationalCharacterSetsCharacterSetArrayOutput {
	return o
}

func (o GetAdbsNationalCharacterSetsCharacterSetArrayOutput) ToGetAdbsNationalCharacterSetsCharacterSetArrayOutputWithContext(ctx context.Context) GetAdbsNationalCharacterSetsCharacterSetArrayOutput {
	return o
}

func (o GetAdbsNationalCharacterSetsCharacterSetArrayOutput) Index(i pulumi.IntInput) GetAdbsNationalCharacterSetsCharacterSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAdbsNationalCharacterSetsCharacterSet {
		return vs[0].([]GetAdbsNationalCharacterSetsCharacterSet)[vs[1].(int)]
	}).(GetAdbsNationalCharacterSetsCharacterSetOutput)
}

type GetCloudVmClusterDataCollectionOption struct {
	// Indicates whether diagnostic collection is enabled for the VM Cluster/Cloud VM Cluster/VMBM DBCS. Enabling diagnostic collection allows you to receive Events service notifications for guest VM issues. Diagnostic collection also allows Oracle to provide enhanced service and proactive support for your Exadata system. You can enable diagnostic collection during VM Cluster/Cloud VM Cluster provisioning. You can also disable or enable it at any time using the `UpdateVmCluster` or `updateCloudVmCluster` API.
	DiagnosticsEventsEnabled bool `pulumi:"diagnosticsEventsEnabled"`
	// Indicates whether health monitoring is enabled for the VM Cluster / Cloud VM Cluster / VMBM DBCS. Enabling health monitoring allows Oracle to collect diagnostic data and share it with its operations and support personnel. You may also receive notifications for some events. Collecting health diagnostics enables Oracle to provide proactive support and enhanced service for your system. Optionally enable health monitoring while provisioning a system. You can also disable or enable health monitoring anytime using the `UpdateVmCluster`, `UpdateCloudVmCluster` or `updateDbsystem` API.
	HealthMonitoringEnabled bool `pulumi:"healthMonitoringEnabled"`
	// Indicates whether incident logs and trace collection are enabled for the VM Cluster / Cloud VM Cluster / VMBM DBCS. Enabling incident logs collection allows Oracle to receive Events service notifications for guest VM issues, collect incident logs and traces, and use them to diagnose issues and resolve them. Optionally enable incident logs collection while provisioning a system. You can also disable or enable incident logs collection anytime using the `UpdateVmCluster`, `updateCloudVmCluster` or `updateDbsystem` API.
	IncidentLogsEnabled bool `pulumi:"incidentLogsEnabled"`
}

// GetCloudVmClusterDataCollectionOptionInput is an input type that accepts GetCloudVmClusterDataCollectionOptionArgs and GetCloudVmClusterDataCollectionOptionOutput values.
// You can construct a concrete instance of `GetCloudVmClusterDataCollectionOptionInput` via:
//
//	GetCloudVmClusterDataCollectionOptionArgs{...}
type GetCloudVmClusterDataCollectionOptionInput interface {
	pulumi.Input

	ToGetCloudVmClusterDataCollectionOptionOutput() GetCloudVmClusterDataCollectionOptionOutput
	ToGetCloudVmClusterDataCollectionOptionOutputWithContext(context.Context) GetCloudVmClusterDataCollectionOptionOutput
}

type GetCloudVmClusterDataCollectionOptionArgs struct {
	// Indicates whether diagnostic collection is enabled for the VM Cluster/Cloud VM Cluster/VMBM DBCS. Enabling diagnostic collection allows you to receive Events service notifications for guest VM issues. Diagnostic collection also allows Oracle to provide enhanced service and proactive support for your Exadata system. You can enable diagnostic collection during VM Cluster/Cloud VM Cluster provisioning. You can also disable or enable it at any time using the `UpdateVmCluster` or `updateCloudVmCluster` API.
	DiagnosticsEventsEnabled pulumi.BoolInput `pulumi:"diagnosticsEventsEnabled"`
	// Indicates whether health monitoring is enabled for the VM Cluster / Cloud VM Cluster / VMBM DBCS. Enabling health monitoring allows Oracle to collect diagnostic data and share it with its operations and support personnel. You may also receive notifications for some events. Collecting health diagnostics enables Oracle to provide proactive support and enhanced service for your system. Optionally enable health monitoring while provisioning a system. You can also disable or enable health monitoring anytime using the `UpdateVmCluster`, `UpdateCloudVmCluster` or `updateDbsystem` API.
	HealthMonitoringEnabled pulumi.BoolInput `pulumi:"healthMonitoringEnabled"`
	// Indicates whether incident logs and trace collection are enabled for the VM Cluster / Cloud VM Cluster / VMBM DBCS. Enabling incident logs collection allows Oracle to receive Events service notifications for guest VM issues, collect incident logs and traces, and use them to diagnose issues and resolve them. Optionally enable incident logs collection while provisioning a system. You can also disable or enable incident logs collection anytime using the `UpdateVmCluster`, `updateCloudVmCluster` or `updateDbsystem` API.
	IncidentLogsEnabled pulumi.BoolInput `pulumi:"incidentLogsEnabled"`
}

func (GetCloudVmClusterDataCollectionOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudVmClusterDataCollectionOption)(nil)).Elem()
}

func (i GetCloudVmClusterDataCollectionOptionArgs) ToGetCloudVmClusterDataCollectionOptionOutput() GetCloudVmClusterDataCollectionOptionOutput {
	return i.ToGetCloudVmClusterDataCollectionOptionOutputWithContext(context.Background())
}

func (i GetCloudVmClusterDataCollectionOptionArgs) ToGetCloudVmClusterDataCollectionOptionOutputWithContext(ctx context.Context) GetCloudVmClusterDataCollectionOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudVmClusterDataCollectionOptionOutput)
}

// GetCloudVmClusterDataCollectionOptionArrayInput is an input type that accepts GetCloudVmClusterDataCollectionOptionArray and GetCloudVmClusterDataCollectionOptionArrayOutput values.
// You can construct a concrete instance of `GetCloudVmClusterDataCollectionOptionArrayInput` via:
//
//	GetCloudVmClusterDataCollectionOptionArray{ GetCloudVmClusterDataCollectionOptionArgs{...} }
type GetCloudVmClusterDataCollectionOptionArrayInput interface {
	pulumi.Input

	ToGetCloudVmClusterDataCollectionOptionArrayOutput() GetCloudVmClusterDataCollectionOptionArrayOutput
	ToGetCloudVmClusterDataCollectionOptionArrayOutputWithContext(context.Context) GetCloudVmClusterDataCollectionOptionArrayOutput
}

type GetCloudVmClusterDataCollectionOptionArray []GetCloudVmClusterDataCollectionOptionInput

func (GetCloudVmClusterDataCollectionOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudVmClusterDataCollectionOption)(nil)).Elem()
}

func (i GetCloudVmClusterDataCollectionOptionArray) ToGetCloudVmClusterDataCollectionOptionArrayOutput() GetCloudVmClusterDataCollectionOptionArrayOutput {
	return i.ToGetCloudVmClusterDataCollectionOptionArrayOutputWithContext(context.Background())
}

func (i GetCloudVmClusterDataCollectionOptionArray) ToGetCloudVmClusterDataCollectionOptionArrayOutputWithContext(ctx context.Context) GetCloudVmClusterDataCollectionOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudVmClusterDataCollectionOptionArrayOutput)
}

type GetCloudVmClusterDataCollectionOptionOutput struct{ *pulumi.OutputState }

func (GetCloudVmClusterDataCollectionOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudVmClusterDataCollectionOption)(nil)).Elem()
}

func (o GetCloudVmClusterDataCollectionOptionOutput) ToGetCloudVmClusterDataCollectionOptionOutput() GetCloudVmClusterDataCollectionOptionOutput {
	return o
}

func (o GetCloudVmClusterDataCollectionOptionOutput) ToGetCloudVmClusterDataCollectionOptionOutputWithContext(ctx context.Context) GetCloudVmClusterDataCollectionOptionOutput {
	return o
}

// Indicates whether diagnostic collection is enabled for the VM Cluster/Cloud VM Cluster/VMBM DBCS. Enabling diagnostic collection allows you to receive Events service notifications for guest VM issues. Diagnostic collection also allows Oracle to provide enhanced service and proactive support for your Exadata system. You can enable diagnostic collection during VM Cluster/Cloud VM Cluster provisioning. You can also disable or enable it at any time using the `UpdateVmCluster` or `updateCloudVmCluster` API.
func (o GetCloudVmClusterDataCollectionOptionOutput) DiagnosticsEventsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCloudVmClusterDataCollectionOption) bool { return v.DiagnosticsEventsEnabled }).(pulumi.BoolOutput)
}

// Indicates whether health monitoring is enabled for the VM Cluster / Cloud VM Cluster / VMBM DBCS. Enabling health monitoring allows Oracle to collect diagnostic data and share it with its operations and support personnel. You may also receive notifications for some events. Collecting health diagnostics enables Oracle to provide proactive support and enhanced service for your system. Optionally enable health monitoring while provisioning a system. You can also disable or enable health monitoring anytime using the `UpdateVmCluster`, `UpdateCloudVmCluster` or `updateDbsystem` API.
func (o GetCloudVmClusterDataCollectionOptionOutput) HealthMonitoringEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCloudVmClusterDataCollectionOption) bool { return v.HealthMonitoringEnabled }).(pulumi.BoolOutput)
}

// Indicates whether incident logs and trace collection are enabled for the VM Cluster / Cloud VM Cluster / VMBM DBCS. Enabling incident logs collection allows Oracle to receive Events service notifications for guest VM issues, collect incident logs and traces, and use them to diagnose issues and resolve them. Optionally enable incident logs collection while provisioning a system. You can also disable or enable incident logs collection anytime using the `UpdateVmCluster`, `updateCloudVmCluster` or `updateDbsystem` API.
func (o GetCloudVmClusterDataCollectionOptionOutput) IncidentLogsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCloudVmClusterDataCollectionOption) bool { return v.IncidentLogsEnabled }).(pulumi.BoolOutput)
}

type GetCloudVmClusterDataCollectionOptionArrayOutput struct{ *pulumi.OutputState }

func (GetCloudVmClusterDataCollectionOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudVmClusterDataCollectionOption)(nil)).Elem()
}

func (o GetCloudVmClusterDataCollectionOptionArrayOutput) ToGetCloudVmClusterDataCollectionOptionArrayOutput() GetCloudVmClusterDataCollectionOptionArrayOutput {
	return o
}

func (o GetCloudVmClusterDataCollectionOptionArrayOutput) ToGetCloudVmClusterDataCollectionOptionArrayOutputWithContext(ctx context.Context) GetCloudVmClusterDataCollectionOptionArrayOutput {
	return o
}

func (o GetCloudVmClusterDataCollectionOptionArrayOutput) Index(i pulumi.IntInput) GetCloudVmClusterDataCollectionOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudVmClusterDataCollectionOption {
		return vs[0].([]GetCloudVmClusterDataCollectionOption)[vs[1].(int)]
	}).(GetCloudVmClusterDataCollectionOptionOutput)
}

type GetCloudVmClusterIormConfigCach struct {
	// A `dbPlans` block as defined above.
	DbPlans []GetCloudVmClusterIormConfigCachDbPlan `pulumi:"dbPlans"`
	// Additional information about the current `lifecycleState`.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The current state of IORM configuration for the Exadata DB system.
	LifecycleState string `pulumi:"lifecycleState"`
	// The current value for the IORM objective. The default is `AUTO`.
	Objective string `pulumi:"objective"`
}

// GetCloudVmClusterIormConfigCachInput is an input type that accepts GetCloudVmClusterIormConfigCachArgs and GetCloudVmClusterIormConfigCachOutput values.
// You can construct a concrete instance of `GetCloudVmClusterIormConfigCachInput` via:
//
//	GetCloudVmClusterIormConfigCachArgs{...}
type GetCloudVmClusterIormConfigCachInput interface {
	pulumi.Input

	ToGetCloudVmClusterIormConfigCachOutput() GetCloudVmClusterIormConfigCachOutput
	ToGetCloudVmClusterIormConfigCachOutputWithContext(context.Context) GetCloudVmClusterIormConfigCachOutput
}

type GetCloudVmClusterIormConfigCachArgs struct {
	// A `dbPlans` block as defined above.
	DbPlans GetCloudVmClusterIormConfigCachDbPlanArrayInput `pulumi:"dbPlans"`
	// Additional information about the current `lifecycleState`.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// The current state of IORM configuration for the Exadata DB system.
	LifecycleState pulumi.StringInput `pulumi:"lifecycleState"`
	// The current value for the IORM objective. The default is `AUTO`.
	Objective pulumi.StringInput `pulumi:"objective"`
}

func (GetCloudVmClusterIormConfigCachArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudVmClusterIormConfigCach)(nil)).Elem()
}

func (i GetCloudVmClusterIormConfigCachArgs) ToGetCloudVmClusterIormConfigCachOutput() GetCloudVmClusterIormConfigCachOutput {
	return i.ToGetCloudVmClusterIormConfigCachOutputWithContext(context.Background())
}

func (i GetCloudVmClusterIormConfigCachArgs) ToGetCloudVmClusterIormConfigCachOutputWithContext(ctx context.Context) GetCloudVmClusterIormConfigCachOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudVmClusterIormConfigCachOutput)
}

// GetCloudVmClusterIormConfigCachArrayInput is an input type that accepts GetCloudVmClusterIormConfigCachArray and GetCloudVmClusterIormConfigCachArrayOutput values.
// You can construct a concrete instance of `GetCloudVmClusterIormConfigCachArrayInput` via:
//
//	GetCloudVmClusterIormConfigCachArray{ GetCloudVmClusterIormConfigCachArgs{...} }
type GetCloudVmClusterIormConfigCachArrayInput interface {
	pulumi.Input

	ToGetCloudVmClusterIormConfigCachArrayOutput() GetCloudVmClusterIormConfigCachArrayOutput
	ToGetCloudVmClusterIormConfigCachArrayOutputWithContext(context.Context) GetCloudVmClusterIormConfigCachArrayOutput
}

type GetCloudVmClusterIormConfigCachArray []GetCloudVmClusterIormConfigCachInput

func (GetCloudVmClusterIormConfigCachArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudVmClusterIormConfigCach)(nil)).Elem()
}

func (i GetCloudVmClusterIormConfigCachArray) ToGetCloudVmClusterIormConfigCachArrayOutput() GetCloudVmClusterIormConfigCachArrayOutput {
	return i.ToGetCloudVmClusterIormConfigCachArrayOutputWithContext(context.Background())
}

func (i GetCloudVmClusterIormConfigCachArray) ToGetCloudVmClusterIormConfigCachArrayOutputWithContext(ctx context.Context) GetCloudVmClusterIormConfigCachArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudVmClusterIormConfigCachArrayOutput)
}

type GetCloudVmClusterIormConfigCachOutput struct{ *pulumi.OutputState }

func (GetCloudVmClusterIormConfigCachOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudVmClusterIormConfigCach)(nil)).Elem()
}

func (o GetCloudVmClusterIormConfigCachOutput) ToGetCloudVmClusterIormConfigCachOutput() GetCloudVmClusterIormConfigCachOutput {
	return o
}

func (o GetCloudVmClusterIormConfigCachOutput) ToGetCloudVmClusterIormConfigCachOutputWithContext(ctx context.Context) GetCloudVmClusterIormConfigCachOutput {
	return o
}

// A `dbPlans` block as defined above.
func (o GetCloudVmClusterIormConfigCachOutput) DbPlans() GetCloudVmClusterIormConfigCachDbPlanArrayOutput {
	return o.ApplyT(func(v GetCloudVmClusterIormConfigCach) []GetCloudVmClusterIormConfigCachDbPlan { return v.DbPlans }).(GetCloudVmClusterIormConfigCachDbPlanArrayOutput)
}

// Additional information about the current `lifecycleState`.
func (o GetCloudVmClusterIormConfigCachOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudVmClusterIormConfigCach) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The current state of IORM configuration for the Exadata DB system.
func (o GetCloudVmClusterIormConfigCachOutput) LifecycleState() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudVmClusterIormConfigCach) string { return v.LifecycleState }).(pulumi.StringOutput)
}

// The current value for the IORM objective. The default is `AUTO`.
func (o GetCloudVmClusterIormConfigCachOutput) Objective() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudVmClusterIormConfigCach) string { return v.Objective }).(pulumi.StringOutput)
}

type GetCloudVmClusterIormConfigCachArrayOutput struct{ *pulumi.OutputState }

func (GetCloudVmClusterIormConfigCachArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudVmClusterIormConfigCach)(nil)).Elem()
}

func (o GetCloudVmClusterIormConfigCachArrayOutput) ToGetCloudVmClusterIormConfigCachArrayOutput() GetCloudVmClusterIormConfigCachArrayOutput {
	return o
}

func (o GetCloudVmClusterIormConfigCachArrayOutput) ToGetCloudVmClusterIormConfigCachArrayOutputWithContext(ctx context.Context) GetCloudVmClusterIormConfigCachArrayOutput {
	return o
}

func (o GetCloudVmClusterIormConfigCachArrayOutput) Index(i pulumi.IntInput) GetCloudVmClusterIormConfigCachOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudVmClusterIormConfigCach {
		return vs[0].([]GetCloudVmClusterIormConfigCach)[vs[1].(int)]
	}).(GetCloudVmClusterIormConfigCachOutput)
}

type GetCloudVmClusterIormConfigCachDbPlan struct {
	// The database name. For the default `DbPlan`, the `dbName` is `default`.
	DbName string `pulumi:"dbName"`
	// The flash cache limit for this database. This value is internally configured based on the share value assigned to the database.
	FlashCacheLimit string `pulumi:"flashCacheLimit"`
	// The relative priority of this database.
	Share int `pulumi:"share"`
}

// GetCloudVmClusterIormConfigCachDbPlanInput is an input type that accepts GetCloudVmClusterIormConfigCachDbPlanArgs and GetCloudVmClusterIormConfigCachDbPlanOutput values.
// You can construct a concrete instance of `GetCloudVmClusterIormConfigCachDbPlanInput` via:
//
//	GetCloudVmClusterIormConfigCachDbPlanArgs{...}
type GetCloudVmClusterIormConfigCachDbPlanInput interface {
	pulumi.Input

	ToGetCloudVmClusterIormConfigCachDbPlanOutput() GetCloudVmClusterIormConfigCachDbPlanOutput
	ToGetCloudVmClusterIormConfigCachDbPlanOutputWithContext(context.Context) GetCloudVmClusterIormConfigCachDbPlanOutput
}

type GetCloudVmClusterIormConfigCachDbPlanArgs struct {
	// The database name. For the default `DbPlan`, the `dbName` is `default`.
	DbName pulumi.StringInput `pulumi:"dbName"`
	// The flash cache limit for this database. This value is internally configured based on the share value assigned to the database.
	FlashCacheLimit pulumi.StringInput `pulumi:"flashCacheLimit"`
	// The relative priority of this database.
	Share pulumi.IntInput `pulumi:"share"`
}

func (GetCloudVmClusterIormConfigCachDbPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudVmClusterIormConfigCachDbPlan)(nil)).Elem()
}

func (i GetCloudVmClusterIormConfigCachDbPlanArgs) ToGetCloudVmClusterIormConfigCachDbPlanOutput() GetCloudVmClusterIormConfigCachDbPlanOutput {
	return i.ToGetCloudVmClusterIormConfigCachDbPlanOutputWithContext(context.Background())
}

func (i GetCloudVmClusterIormConfigCachDbPlanArgs) ToGetCloudVmClusterIormConfigCachDbPlanOutputWithContext(ctx context.Context) GetCloudVmClusterIormConfigCachDbPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudVmClusterIormConfigCachDbPlanOutput)
}

// GetCloudVmClusterIormConfigCachDbPlanArrayInput is an input type that accepts GetCloudVmClusterIormConfigCachDbPlanArray and GetCloudVmClusterIormConfigCachDbPlanArrayOutput values.
// You can construct a concrete instance of `GetCloudVmClusterIormConfigCachDbPlanArrayInput` via:
//
//	GetCloudVmClusterIormConfigCachDbPlanArray{ GetCloudVmClusterIormConfigCachDbPlanArgs{...} }
type GetCloudVmClusterIormConfigCachDbPlanArrayInput interface {
	pulumi.Input

	ToGetCloudVmClusterIormConfigCachDbPlanArrayOutput() GetCloudVmClusterIormConfigCachDbPlanArrayOutput
	ToGetCloudVmClusterIormConfigCachDbPlanArrayOutputWithContext(context.Context) GetCloudVmClusterIormConfigCachDbPlanArrayOutput
}

type GetCloudVmClusterIormConfigCachDbPlanArray []GetCloudVmClusterIormConfigCachDbPlanInput

func (GetCloudVmClusterIormConfigCachDbPlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudVmClusterIormConfigCachDbPlan)(nil)).Elem()
}

func (i GetCloudVmClusterIormConfigCachDbPlanArray) ToGetCloudVmClusterIormConfigCachDbPlanArrayOutput() GetCloudVmClusterIormConfigCachDbPlanArrayOutput {
	return i.ToGetCloudVmClusterIormConfigCachDbPlanArrayOutputWithContext(context.Background())
}

func (i GetCloudVmClusterIormConfigCachDbPlanArray) ToGetCloudVmClusterIormConfigCachDbPlanArrayOutputWithContext(ctx context.Context) GetCloudVmClusterIormConfigCachDbPlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudVmClusterIormConfigCachDbPlanArrayOutput)
}

type GetCloudVmClusterIormConfigCachDbPlanOutput struct{ *pulumi.OutputState }

func (GetCloudVmClusterIormConfigCachDbPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudVmClusterIormConfigCachDbPlan)(nil)).Elem()
}

func (o GetCloudVmClusterIormConfigCachDbPlanOutput) ToGetCloudVmClusterIormConfigCachDbPlanOutput() GetCloudVmClusterIormConfigCachDbPlanOutput {
	return o
}

func (o GetCloudVmClusterIormConfigCachDbPlanOutput) ToGetCloudVmClusterIormConfigCachDbPlanOutputWithContext(ctx context.Context) GetCloudVmClusterIormConfigCachDbPlanOutput {
	return o
}

// The database name. For the default `DbPlan`, the `dbName` is `default`.
func (o GetCloudVmClusterIormConfigCachDbPlanOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudVmClusterIormConfigCachDbPlan) string { return v.DbName }).(pulumi.StringOutput)
}

// The flash cache limit for this database. This value is internally configured based on the share value assigned to the database.
func (o GetCloudVmClusterIormConfigCachDbPlanOutput) FlashCacheLimit() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudVmClusterIormConfigCachDbPlan) string { return v.FlashCacheLimit }).(pulumi.StringOutput)
}

// The relative priority of this database.
func (o GetCloudVmClusterIormConfigCachDbPlanOutput) Share() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudVmClusterIormConfigCachDbPlan) int { return v.Share }).(pulumi.IntOutput)
}

type GetCloudVmClusterIormConfigCachDbPlanArrayOutput struct{ *pulumi.OutputState }

func (GetCloudVmClusterIormConfigCachDbPlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudVmClusterIormConfigCachDbPlan)(nil)).Elem()
}

func (o GetCloudVmClusterIormConfigCachDbPlanArrayOutput) ToGetCloudVmClusterIormConfigCachDbPlanArrayOutput() GetCloudVmClusterIormConfigCachDbPlanArrayOutput {
	return o
}

func (o GetCloudVmClusterIormConfigCachDbPlanArrayOutput) ToGetCloudVmClusterIormConfigCachDbPlanArrayOutputWithContext(ctx context.Context) GetCloudVmClusterIormConfigCachDbPlanArrayOutput {
	return o
}

func (o GetCloudVmClusterIormConfigCachDbPlanArrayOutput) Index(i pulumi.IntInput) GetCloudVmClusterIormConfigCachDbPlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudVmClusterIormConfigCachDbPlan {
		return vs[0].([]GetCloudVmClusterIormConfigCachDbPlan)[vs[1].(int)]
	}).(GetCloudVmClusterIormConfigCachDbPlanOutput)
}

type GetDbNodesDbNode struct {
	// Additional information about the planned maintenance.
	AdditionalDetails string `pulumi:"additionalDetails"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup IP address associated with the database node. Use this OCID with either the [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PrivateIp/GetPrivateIp) or the [GetPublicIpByPrivateIpId](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PublicIp/GetPublicIpByPrivateIpId) API to get the IP address needed to make a database connection.
	BackupIpId    string `pulumi:"backupIpId"`
	BackupVnic2Id string `pulumi:"backupVnic2Id"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup VNIC.
	BackupVnicId string `pulumi:"backupVnicId"`
	// The number of CPU cores enabled on the DB node.
	CpuCoreCount int `pulumi:"cpuCoreCount"`
	// The allocated local node storage in GBs on the DB node.
	DbNodeStorageSizeInGbs int `pulumi:"dbNodeStorageSizeInGbs"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ExaCC DB server associated with the database node.
	DbServerId string `pulumi:"dbServerId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
	DbSystemId string `pulumi:"dbSystemId"`
	// The name of the Fault Domain the instance is contained in.
	FaultDomain string `pulumi:"faultDomain"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the host IP address associated with the database node. Use this OCID with either the [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PrivateIp/GetPrivateIp) or the [GetPublicIpByPrivateIpId](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PublicIp/GetPublicIpByPrivateIpId) API to get the IP address needed to make a database connection.
	HostIpId string `pulumi:"hostIpId"`
	Hostname string `pulumi:"hostname"`
	// Information about the current lifecycle details.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Information about the current lifecycle state.
	LifecycleState string `pulumi:"lifecycleState"`
	// The type of database node maintenance.
	MaintenanceType string `pulumi:"maintenanceType"`
	// The allocated memory in GBs on the DB Node.
	MemorySizeInGbs int `pulumi:"memorySizeInGbs"`
	// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the DB node.
	Ocid string `pulumi:"ocid"`
	// The size (in GB) of the block storage volume allocation for the DB system. This attribute applies only for virtual machine DB systems.
	SoftwareStorageSizeInGb int `pulumi:"softwareStorageSizeInGb"`
	// The date and time that the DB node was created.
	TimeCreated string `pulumi:"timeCreated"`
	// End date and time of maintenance window.
	TimeMaintenanceWindowEnd string `pulumi:"timeMaintenanceWindowEnd"`
	// Start date and time of maintenance window.
	TimeMaintenanceWindowStart string `pulumi:"timeMaintenanceWindowStart"`
	Vnic2Id                    string `pulumi:"vnic2Id"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC.
	VnicId string `pulumi:"vnicId"`
}

// GetDbNodesDbNodeInput is an input type that accepts GetDbNodesDbNodeArgs and GetDbNodesDbNodeOutput values.
// You can construct a concrete instance of `GetDbNodesDbNodeInput` via:
//
//	GetDbNodesDbNodeArgs{...}
type GetDbNodesDbNodeInput interface {
	pulumi.Input

	ToGetDbNodesDbNodeOutput() GetDbNodesDbNodeOutput
	ToGetDbNodesDbNodeOutputWithContext(context.Context) GetDbNodesDbNodeOutput
}

type GetDbNodesDbNodeArgs struct {
	// Additional information about the planned maintenance.
	AdditionalDetails pulumi.StringInput `pulumi:"additionalDetails"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup IP address associated with the database node. Use this OCID with either the [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PrivateIp/GetPrivateIp) or the [GetPublicIpByPrivateIpId](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PublicIp/GetPublicIpByPrivateIpId) API to get the IP address needed to make a database connection.
	BackupIpId    pulumi.StringInput `pulumi:"backupIpId"`
	BackupVnic2Id pulumi.StringInput `pulumi:"backupVnic2Id"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup VNIC.
	BackupVnicId pulumi.StringInput `pulumi:"backupVnicId"`
	// The number of CPU cores enabled on the DB node.
	CpuCoreCount pulumi.IntInput `pulumi:"cpuCoreCount"`
	// The allocated local node storage in GBs on the DB node.
	DbNodeStorageSizeInGbs pulumi.IntInput `pulumi:"dbNodeStorageSizeInGbs"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ExaCC DB server associated with the database node.
	DbServerId pulumi.StringInput `pulumi:"dbServerId"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
	DbSystemId pulumi.StringInput `pulumi:"dbSystemId"`
	// The name of the Fault Domain the instance is contained in.
	FaultDomain pulumi.StringInput `pulumi:"faultDomain"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the host IP address associated with the database node. Use this OCID with either the [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PrivateIp/GetPrivateIp) or the [GetPublicIpByPrivateIpId](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PublicIp/GetPublicIpByPrivateIpId) API to get the IP address needed to make a database connection.
	HostIpId pulumi.StringInput `pulumi:"hostIpId"`
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// Information about the current lifecycle details.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// Information about the current lifecycle state.
	LifecycleState pulumi.StringInput `pulumi:"lifecycleState"`
	// The type of database node maintenance.
	MaintenanceType pulumi.StringInput `pulumi:"maintenanceType"`
	// The allocated memory in GBs on the DB Node.
	MemorySizeInGbs pulumi.IntInput `pulumi:"memorySizeInGbs"`
	// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the DB node.
	Ocid pulumi.StringInput `pulumi:"ocid"`
	// The size (in GB) of the block storage volume allocation for the DB system. This attribute applies only for virtual machine DB systems.
	SoftwareStorageSizeInGb pulumi.IntInput `pulumi:"softwareStorageSizeInGb"`
	// The date and time that the DB node was created.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// End date and time of maintenance window.
	TimeMaintenanceWindowEnd pulumi.StringInput `pulumi:"timeMaintenanceWindowEnd"`
	// Start date and time of maintenance window.
	TimeMaintenanceWindowStart pulumi.StringInput `pulumi:"timeMaintenanceWindowStart"`
	Vnic2Id                    pulumi.StringInput `pulumi:"vnic2Id"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC.
	VnicId pulumi.StringInput `pulumi:"vnicId"`
}

func (GetDbNodesDbNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbNodesDbNode)(nil)).Elem()
}

func (i GetDbNodesDbNodeArgs) ToGetDbNodesDbNodeOutput() GetDbNodesDbNodeOutput {
	return i.ToGetDbNodesDbNodeOutputWithContext(context.Background())
}

func (i GetDbNodesDbNodeArgs) ToGetDbNodesDbNodeOutputWithContext(ctx context.Context) GetDbNodesDbNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbNodesDbNodeOutput)
}

// GetDbNodesDbNodeArrayInput is an input type that accepts GetDbNodesDbNodeArray and GetDbNodesDbNodeArrayOutput values.
// You can construct a concrete instance of `GetDbNodesDbNodeArrayInput` via:
//
//	GetDbNodesDbNodeArray{ GetDbNodesDbNodeArgs{...} }
type GetDbNodesDbNodeArrayInput interface {
	pulumi.Input

	ToGetDbNodesDbNodeArrayOutput() GetDbNodesDbNodeArrayOutput
	ToGetDbNodesDbNodeArrayOutputWithContext(context.Context) GetDbNodesDbNodeArrayOutput
}

type GetDbNodesDbNodeArray []GetDbNodesDbNodeInput

func (GetDbNodesDbNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbNodesDbNode)(nil)).Elem()
}

func (i GetDbNodesDbNodeArray) ToGetDbNodesDbNodeArrayOutput() GetDbNodesDbNodeArrayOutput {
	return i.ToGetDbNodesDbNodeArrayOutputWithContext(context.Background())
}

func (i GetDbNodesDbNodeArray) ToGetDbNodesDbNodeArrayOutputWithContext(ctx context.Context) GetDbNodesDbNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbNodesDbNodeArrayOutput)
}

type GetDbNodesDbNodeOutput struct{ *pulumi.OutputState }

func (GetDbNodesDbNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbNodesDbNode)(nil)).Elem()
}

func (o GetDbNodesDbNodeOutput) ToGetDbNodesDbNodeOutput() GetDbNodesDbNodeOutput {
	return o
}

func (o GetDbNodesDbNodeOutput) ToGetDbNodesDbNodeOutputWithContext(ctx context.Context) GetDbNodesDbNodeOutput {
	return o
}

// Additional information about the planned maintenance.
func (o GetDbNodesDbNodeOutput) AdditionalDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbNodesDbNode) string { return v.AdditionalDetails }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup IP address associated with the database node. Use this OCID with either the [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PrivateIp/GetPrivateIp) or the [GetPublicIpByPrivateIpId](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PublicIp/GetPublicIpByPrivateIpId) API to get the IP address needed to make a database connection.
func (o GetDbNodesDbNodeOutput) BackupIpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbNodesDbNode) string { return v.BackupIpId }).(pulumi.StringOutput)
}

func (o GetDbNodesDbNodeOutput) BackupVnic2Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbNodesDbNode) string { return v.BackupVnic2Id }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup VNIC.
func (o GetDbNodesDbNodeOutput) BackupVnicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbNodesDbNode) string { return v.BackupVnicId }).(pulumi.StringOutput)
}

// The number of CPU cores enabled on the DB node.
func (o GetDbNodesDbNodeOutput) CpuCoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbNodesDbNode) int { return v.CpuCoreCount }).(pulumi.IntOutput)
}

// The allocated local node storage in GBs on the DB node.
func (o GetDbNodesDbNodeOutput) DbNodeStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbNodesDbNode) int { return v.DbNodeStorageSizeInGbs }).(pulumi.IntOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ExaCC DB server associated with the database node.
func (o GetDbNodesDbNodeOutput) DbServerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbNodesDbNode) string { return v.DbServerId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
func (o GetDbNodesDbNodeOutput) DbSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbNodesDbNode) string { return v.DbSystemId }).(pulumi.StringOutput)
}

// The name of the Fault Domain the instance is contained in.
func (o GetDbNodesDbNodeOutput) FaultDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbNodesDbNode) string { return v.FaultDomain }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the host IP address associated with the database node. Use this OCID with either the [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PrivateIp/GetPrivateIp) or the [GetPublicIpByPrivateIpId](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PublicIp/GetPublicIpByPrivateIpId) API to get the IP address needed to make a database connection.
func (o GetDbNodesDbNodeOutput) HostIpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbNodesDbNode) string { return v.HostIpId }).(pulumi.StringOutput)
}

func (o GetDbNodesDbNodeOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbNodesDbNode) string { return v.Hostname }).(pulumi.StringOutput)
}

// Information about the current lifecycle details.
func (o GetDbNodesDbNodeOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbNodesDbNode) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Information about the current lifecycle state.
func (o GetDbNodesDbNodeOutput) LifecycleState() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbNodesDbNode) string { return v.LifecycleState }).(pulumi.StringOutput)
}

// The type of database node maintenance.
func (o GetDbNodesDbNodeOutput) MaintenanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbNodesDbNode) string { return v.MaintenanceType }).(pulumi.StringOutput)
}

// The allocated memory in GBs on the DB Node.
func (o GetDbNodesDbNodeOutput) MemorySizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbNodesDbNode) int { return v.MemorySizeInGbs }).(pulumi.IntOutput)
}

// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the DB node.
func (o GetDbNodesDbNodeOutput) Ocid() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbNodesDbNode) string { return v.Ocid }).(pulumi.StringOutput)
}

// The size (in GB) of the block storage volume allocation for the DB system. This attribute applies only for virtual machine DB systems.
func (o GetDbNodesDbNodeOutput) SoftwareStorageSizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbNodesDbNode) int { return v.SoftwareStorageSizeInGb }).(pulumi.IntOutput)
}

// The date and time that the DB node was created.
func (o GetDbNodesDbNodeOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbNodesDbNode) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// End date and time of maintenance window.
func (o GetDbNodesDbNodeOutput) TimeMaintenanceWindowEnd() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbNodesDbNode) string { return v.TimeMaintenanceWindowEnd }).(pulumi.StringOutput)
}

// Start date and time of maintenance window.
func (o GetDbNodesDbNodeOutput) TimeMaintenanceWindowStart() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbNodesDbNode) string { return v.TimeMaintenanceWindowStart }).(pulumi.StringOutput)
}

func (o GetDbNodesDbNodeOutput) Vnic2Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbNodesDbNode) string { return v.Vnic2Id }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC.
func (o GetDbNodesDbNodeOutput) VnicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbNodesDbNode) string { return v.VnicId }).(pulumi.StringOutput)
}

type GetDbNodesDbNodeArrayOutput struct{ *pulumi.OutputState }

func (GetDbNodesDbNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbNodesDbNode)(nil)).Elem()
}

func (o GetDbNodesDbNodeArrayOutput) ToGetDbNodesDbNodeArrayOutput() GetDbNodesDbNodeArrayOutput {
	return o
}

func (o GetDbNodesDbNodeArrayOutput) ToGetDbNodesDbNodeArrayOutputWithContext(ctx context.Context) GetDbNodesDbNodeArrayOutput {
	return o
}

func (o GetDbNodesDbNodeArrayOutput) Index(i pulumi.IntInput) GetDbNodesDbNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDbNodesDbNode {
		return vs[0].([]GetDbNodesDbNode)[vs[1].(int)]
	}).(GetDbNodesDbNodeOutput)
}

type GetDbServersDbServer struct {
	// The list of [OCIDs](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Virtual Machines associated with the DB Server.
	AutonomousVirtualMachineDs []string `pulumi:"autonomousVirtualMachineDs"`
	// The list of [OCIDs](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous VM Clusters associated with the DB Server.
	AutonomousVmClusterIds []string `pulumi:"autonomousVmClusterIds"`
	// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// The number of CPU cores enabled on the DB Server.
	CpuCoreCount int `pulumi:"cpuCoreCount"`
	// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the Db nodes associated with the DB Server.
	DbNodeIds []string `pulumi:"dbNodeIds"`
	// The allocated local node storage in GBs on the DB Server.
	DbNodeStorageSizeInGbs int `pulumi:"dbNodeStorageSizeInGbs"`
	// The user-friendly name for the DB Server. The name does not need to be unique.
	DisplayName string `pulumi:"displayName"`
	// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
	ExadataInfrastructureId string `pulumi:"exadataInfrastructureId"`
	// Additional information about the current lifecycle state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The current state of the DB Server.
	LifecycleState string `pulumi:"lifecycleState"`
	// The total number of CPU cores available.
	MaxCpuCount int `pulumi:"maxCpuCount"`
	// The total local node storage available in GBs.
	MaxDbNodeStorageInGbs int `pulumi:"maxDbNodeStorageInGbs"`
	// The total memory available in GBs.
	MaxMemoryInGbs int `pulumi:"maxMemoryInGbs"`
	// The allocated memory in GBs on the DB Server.
	MemorySizeInGbs int `pulumi:"memorySizeInGbs"`
	// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the DB Server.
	Ocid string `pulumi:"ocid"`
	// The shape of the DB Server. The shape determines the amount of CPU, storage, and memory resources available.
	Shape string `pulumi:"shape"`
	// The date and time that the DB Server was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the VM Clusters associated with the DB Server.
	VmClusterIds []string `pulumi:"vmClusterIds"`
}

// GetDbServersDbServerInput is an input type that accepts GetDbServersDbServerArgs and GetDbServersDbServerOutput values.
// You can construct a concrete instance of `GetDbServersDbServerInput` via:
//
//	GetDbServersDbServerArgs{...}
type GetDbServersDbServerInput interface {
	pulumi.Input

	ToGetDbServersDbServerOutput() GetDbServersDbServerOutput
	ToGetDbServersDbServerOutputWithContext(context.Context) GetDbServersDbServerOutput
}

type GetDbServersDbServerArgs struct {
	// The list of [OCIDs](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Virtual Machines associated with the DB Server.
	AutonomousVirtualMachineDs pulumi.StringArrayInput `pulumi:"autonomousVirtualMachineDs"`
	// The list of [OCIDs](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous VM Clusters associated with the DB Server.
	AutonomousVmClusterIds pulumi.StringArrayInput `pulumi:"autonomousVmClusterIds"`
	// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
	CompartmentId pulumi.StringInput `pulumi:"compartmentId"`
	// The number of CPU cores enabled on the DB Server.
	CpuCoreCount pulumi.IntInput `pulumi:"cpuCoreCount"`
	// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the Db nodes associated with the DB Server.
	DbNodeIds pulumi.StringArrayInput `pulumi:"dbNodeIds"`
	// The allocated local node storage in GBs on the DB Server.
	DbNodeStorageSizeInGbs pulumi.IntInput `pulumi:"dbNodeStorageSizeInGbs"`
	// The user-friendly name for the DB Server. The name does not need to be unique.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
	ExadataInfrastructureId pulumi.StringInput `pulumi:"exadataInfrastructureId"`
	// Additional information about the current lifecycle state.
	LifecycleDetails pulumi.StringInput `pulumi:"lifecycleDetails"`
	// The current state of the DB Server.
	LifecycleState pulumi.StringInput `pulumi:"lifecycleState"`
	// The total number of CPU cores available.
	MaxCpuCount pulumi.IntInput `pulumi:"maxCpuCount"`
	// The total local node storage available in GBs.
	MaxDbNodeStorageInGbs pulumi.IntInput `pulumi:"maxDbNodeStorageInGbs"`
	// The total memory available in GBs.
	MaxMemoryInGbs pulumi.IntInput `pulumi:"maxMemoryInGbs"`
	// The allocated memory in GBs on the DB Server.
	MemorySizeInGbs pulumi.IntInput `pulumi:"memorySizeInGbs"`
	// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the DB Server.
	Ocid pulumi.StringInput `pulumi:"ocid"`
	// The shape of the DB Server. The shape determines the amount of CPU, storage, and memory resources available.
	Shape pulumi.StringInput `pulumi:"shape"`
	// The date and time that the DB Server was created.
	TimeCreated pulumi.StringInput `pulumi:"timeCreated"`
	// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the VM Clusters associated with the DB Server.
	VmClusterIds pulumi.StringArrayInput `pulumi:"vmClusterIds"`
}

func (GetDbServersDbServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbServersDbServer)(nil)).Elem()
}

func (i GetDbServersDbServerArgs) ToGetDbServersDbServerOutput() GetDbServersDbServerOutput {
	return i.ToGetDbServersDbServerOutputWithContext(context.Background())
}

func (i GetDbServersDbServerArgs) ToGetDbServersDbServerOutputWithContext(ctx context.Context) GetDbServersDbServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbServersDbServerOutput)
}

// GetDbServersDbServerArrayInput is an input type that accepts GetDbServersDbServerArray and GetDbServersDbServerArrayOutput values.
// You can construct a concrete instance of `GetDbServersDbServerArrayInput` via:
//
//	GetDbServersDbServerArray{ GetDbServersDbServerArgs{...} }
type GetDbServersDbServerArrayInput interface {
	pulumi.Input

	ToGetDbServersDbServerArrayOutput() GetDbServersDbServerArrayOutput
	ToGetDbServersDbServerArrayOutputWithContext(context.Context) GetDbServersDbServerArrayOutput
}

type GetDbServersDbServerArray []GetDbServersDbServerInput

func (GetDbServersDbServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbServersDbServer)(nil)).Elem()
}

func (i GetDbServersDbServerArray) ToGetDbServersDbServerArrayOutput() GetDbServersDbServerArrayOutput {
	return i.ToGetDbServersDbServerArrayOutputWithContext(context.Background())
}

func (i GetDbServersDbServerArray) ToGetDbServersDbServerArrayOutputWithContext(ctx context.Context) GetDbServersDbServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbServersDbServerArrayOutput)
}

type GetDbServersDbServerOutput struct{ *pulumi.OutputState }

func (GetDbServersDbServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbServersDbServer)(nil)).Elem()
}

func (o GetDbServersDbServerOutput) ToGetDbServersDbServerOutput() GetDbServersDbServerOutput {
	return o
}

func (o GetDbServersDbServerOutput) ToGetDbServersDbServerOutputWithContext(ctx context.Context) GetDbServersDbServerOutput {
	return o
}

// The list of [OCIDs](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Virtual Machines associated with the DB Server.
func (o GetDbServersDbServerOutput) AutonomousVirtualMachineDs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDbServersDbServer) []string { return v.AutonomousVirtualMachineDs }).(pulumi.StringArrayOutput)
}

// The list of [OCIDs](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous VM Clusters associated with the DB Server.
func (o GetDbServersDbServerOutput) AutonomousVmClusterIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDbServersDbServer) []string { return v.AutonomousVmClusterIds }).(pulumi.StringArrayOutput)
}

// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
func (o GetDbServersDbServerOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbServersDbServer) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// The number of CPU cores enabled on the DB Server.
func (o GetDbServersDbServerOutput) CpuCoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbServersDbServer) int { return v.CpuCoreCount }).(pulumi.IntOutput)
}

// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the Db nodes associated with the DB Server.
func (o GetDbServersDbServerOutput) DbNodeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDbServersDbServer) []string { return v.DbNodeIds }).(pulumi.StringArrayOutput)
}

// The allocated local node storage in GBs on the DB Server.
func (o GetDbServersDbServerOutput) DbNodeStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbServersDbServer) int { return v.DbNodeStorageSizeInGbs }).(pulumi.IntOutput)
}

// The user-friendly name for the DB Server. The name does not need to be unique.
func (o GetDbServersDbServerOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbServersDbServer) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
func (o GetDbServersDbServerOutput) ExadataInfrastructureId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbServersDbServer) string { return v.ExadataInfrastructureId }).(pulumi.StringOutput)
}

// Additional information about the current lifecycle state.
func (o GetDbServersDbServerOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbServersDbServer) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The current state of the DB Server.
func (o GetDbServersDbServerOutput) LifecycleState() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbServersDbServer) string { return v.LifecycleState }).(pulumi.StringOutput)
}

// The total number of CPU cores available.
func (o GetDbServersDbServerOutput) MaxCpuCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbServersDbServer) int { return v.MaxCpuCount }).(pulumi.IntOutput)
}

// The total local node storage available in GBs.
func (o GetDbServersDbServerOutput) MaxDbNodeStorageInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbServersDbServer) int { return v.MaxDbNodeStorageInGbs }).(pulumi.IntOutput)
}

// The total memory available in GBs.
func (o GetDbServersDbServerOutput) MaxMemoryInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbServersDbServer) int { return v.MaxMemoryInGbs }).(pulumi.IntOutput)
}

// The allocated memory in GBs on the DB Server.
func (o GetDbServersDbServerOutput) MemorySizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbServersDbServer) int { return v.MemorySizeInGbs }).(pulumi.IntOutput)
}

// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the DB Server.
func (o GetDbServersDbServerOutput) Ocid() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbServersDbServer) string { return v.Ocid }).(pulumi.StringOutput)
}

// The shape of the DB Server. The shape determines the amount of CPU, storage, and memory resources available.
func (o GetDbServersDbServerOutput) Shape() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbServersDbServer) string { return v.Shape }).(pulumi.StringOutput)
}

// The date and time that the DB Server was created.
func (o GetDbServersDbServerOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbServersDbServer) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the VM Clusters associated with the DB Server.
func (o GetDbServersDbServerOutput) VmClusterIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDbServersDbServer) []string { return v.VmClusterIds }).(pulumi.StringArrayOutput)
}

type GetDbServersDbServerArrayOutput struct{ *pulumi.OutputState }

func (GetDbServersDbServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbServersDbServer)(nil)).Elem()
}

func (o GetDbServersDbServerArrayOutput) ToGetDbServersDbServerArrayOutput() GetDbServersDbServerArrayOutput {
	return o
}

func (o GetDbServersDbServerArrayOutput) ToGetDbServersDbServerArrayOutputWithContext(ctx context.Context) GetDbServersDbServerArrayOutput {
	return o
}

func (o GetDbServersDbServerArrayOutput) Index(i pulumi.IntInput) GetDbServersDbServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDbServersDbServer {
		return vs[0].([]GetDbServersDbServer)[vs[1].(int)]
	}).(GetDbServersDbServerOutput)
}

type GetDbSystemShapesDbSystemShape struct {
	// The maximum number of CPU cores that can be enabled on the DB system for this shape.
	AvailableCoreCount int `pulumi:"availableCoreCount"`
	// The maximum number of CPU cores per database node that can be enabled for this shape. Only applicable to the flex Exadata shape, ExaCC Elastic shapes and VM Flex shapes.
	AvailableCoreCountPerNode int `pulumi:"availableCoreCountPerNode"`
	// The maximum data storage that can be enabled for this shape.
	AvailableDataStorageInTbs int `pulumi:"availableDataStorageInTbs"`
	// The maximum data storage available per storage server for this shape. Only applicable to ExaCC Elastic shapes.
	AvailableDataStoragePerServerInTbs int `pulumi:"availableDataStoragePerServerInTbs"`
	// The maximum DB Node storage available per database node for this shape. Only applicable to ExaCC Elastic shapes.
	AvailableDbNodePerNodeInGbs int `pulumi:"availableDbNodePerNodeInGbs"`
	// The maximum DB Node storage that can be enabled for this shape.
	AvailableDbNodeStorageInGbs int `pulumi:"availableDbNodeStorageInGbs"`
	// The maximum memory that can be enabled for this shape.
	AvailableMemoryInGbs int `pulumi:"availableMemoryInGbs"`
	// The maximum memory available per database node for this shape. Only applicable to ExaCC Elastic shapes.
	AvailableMemoryPerNodeInGbs int `pulumi:"availableMemoryPerNodeInGbs"`
	// The discrete number by which the CPU core count for this shape can be increased or decreased.
	CoreCountIncrement int `pulumi:"coreCountIncrement"`
	// The maximum number of compute servers available for this shape.
	MaximumNodeCount int `pulumi:"maximumNodeCount"`
	// The maximum number of Exadata storage servers available for the Exadata infrastructure.
	MaximumStorageCount int `pulumi:"maximumStorageCount"`
	// The minimum number of CPU cores that can be enabled on the DB system for this shape.
	MinimumCoreCount int `pulumi:"minimumCoreCount"`
	// The minimum number of CPU cores that can be enabled per node for this shape.
	MinimumCoreCountPerNode int `pulumi:"minimumCoreCountPerNode"`
	// The minimum data storage that need be allocated for this shape.
	MinimumDataStorageInTbs int `pulumi:"minimumDataStorageInTbs"`
	// The minimum DB Node storage that need be allocated per node for this shape.
	MinimumDbNodeStoragePerNodeInGbs int `pulumi:"minimumDbNodeStoragePerNodeInGbs"`
	// The minimum memory that need be allocated per node for this shape.
	MinimumMemoryPerNodeInGbs int `pulumi:"minimumMemoryPerNodeInGbs"`
	// The minimum number of compute servers available for this shape.
	MinimumNodeCount int `pulumi:"minimumNodeCount"`
	// The minimum number of Exadata storage servers available for the Exadata infrastructure.
	MinimumStorageCount int `pulumi:"minimumStorageCount"`
	// The runtime minimum number of compute servers available for this shape.
	RuntimeMinimumCoreCount int `pulumi:"runtimeMinimumCoreCount"`
	// The family of the shape used for the DB system.
	ShapeFamily string `pulumi:"shapeFamily"`
}

// GetDbSystemShapesDbSystemShapeInput is an input type that accepts GetDbSystemShapesDbSystemShapeArgs and GetDbSystemShapesDbSystemShapeOutput values.
// You can construct a concrete instance of `GetDbSystemShapesDbSystemShapeInput` via:
//
//	GetDbSystemShapesDbSystemShapeArgs{...}
type GetDbSystemShapesDbSystemShapeInput interface {
	pulumi.Input

	ToGetDbSystemShapesDbSystemShapeOutput() GetDbSystemShapesDbSystemShapeOutput
	ToGetDbSystemShapesDbSystemShapeOutputWithContext(context.Context) GetDbSystemShapesDbSystemShapeOutput
}

type GetDbSystemShapesDbSystemShapeArgs struct {
	// The maximum number of CPU cores that can be enabled on the DB system for this shape.
	AvailableCoreCount pulumi.IntInput `pulumi:"availableCoreCount"`
	// The maximum number of CPU cores per database node that can be enabled for this shape. Only applicable to the flex Exadata shape, ExaCC Elastic shapes and VM Flex shapes.
	AvailableCoreCountPerNode pulumi.IntInput `pulumi:"availableCoreCountPerNode"`
	// The maximum data storage that can be enabled for this shape.
	AvailableDataStorageInTbs pulumi.IntInput `pulumi:"availableDataStorageInTbs"`
	// The maximum data storage available per storage server for this shape. Only applicable to ExaCC Elastic shapes.
	AvailableDataStoragePerServerInTbs pulumi.IntInput `pulumi:"availableDataStoragePerServerInTbs"`
	// The maximum DB Node storage available per database node for this shape. Only applicable to ExaCC Elastic shapes.
	AvailableDbNodePerNodeInGbs pulumi.IntInput `pulumi:"availableDbNodePerNodeInGbs"`
	// The maximum DB Node storage that can be enabled for this shape.
	AvailableDbNodeStorageInGbs pulumi.IntInput `pulumi:"availableDbNodeStorageInGbs"`
	// The maximum memory that can be enabled for this shape.
	AvailableMemoryInGbs pulumi.IntInput `pulumi:"availableMemoryInGbs"`
	// The maximum memory available per database node for this shape. Only applicable to ExaCC Elastic shapes.
	AvailableMemoryPerNodeInGbs pulumi.IntInput `pulumi:"availableMemoryPerNodeInGbs"`
	// The discrete number by which the CPU core count for this shape can be increased or decreased.
	CoreCountIncrement pulumi.IntInput `pulumi:"coreCountIncrement"`
	// The maximum number of compute servers available for this shape.
	MaximumNodeCount pulumi.IntInput `pulumi:"maximumNodeCount"`
	// The maximum number of Exadata storage servers available for the Exadata infrastructure.
	MaximumStorageCount pulumi.IntInput `pulumi:"maximumStorageCount"`
	// The minimum number of CPU cores that can be enabled on the DB system for this shape.
	MinimumCoreCount pulumi.IntInput `pulumi:"minimumCoreCount"`
	// The minimum number of CPU cores that can be enabled per node for this shape.
	MinimumCoreCountPerNode pulumi.IntInput `pulumi:"minimumCoreCountPerNode"`
	// The minimum data storage that need be allocated for this shape.
	MinimumDataStorageInTbs pulumi.IntInput `pulumi:"minimumDataStorageInTbs"`
	// The minimum DB Node storage that need be allocated per node for this shape.
	MinimumDbNodeStoragePerNodeInGbs pulumi.IntInput `pulumi:"minimumDbNodeStoragePerNodeInGbs"`
	// The minimum memory that need be allocated per node for this shape.
	MinimumMemoryPerNodeInGbs pulumi.IntInput `pulumi:"minimumMemoryPerNodeInGbs"`
	// The minimum number of compute servers available for this shape.
	MinimumNodeCount pulumi.IntInput `pulumi:"minimumNodeCount"`
	// The minimum number of Exadata storage servers available for the Exadata infrastructure.
	MinimumStorageCount pulumi.IntInput `pulumi:"minimumStorageCount"`
	// The runtime minimum number of compute servers available for this shape.
	RuntimeMinimumCoreCount pulumi.IntInput `pulumi:"runtimeMinimumCoreCount"`
	// The family of the shape used for the DB system.
	ShapeFamily pulumi.StringInput `pulumi:"shapeFamily"`
}

func (GetDbSystemShapesDbSystemShapeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbSystemShapesDbSystemShape)(nil)).Elem()
}

func (i GetDbSystemShapesDbSystemShapeArgs) ToGetDbSystemShapesDbSystemShapeOutput() GetDbSystemShapesDbSystemShapeOutput {
	return i.ToGetDbSystemShapesDbSystemShapeOutputWithContext(context.Background())
}

func (i GetDbSystemShapesDbSystemShapeArgs) ToGetDbSystemShapesDbSystemShapeOutputWithContext(ctx context.Context) GetDbSystemShapesDbSystemShapeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbSystemShapesDbSystemShapeOutput)
}

// GetDbSystemShapesDbSystemShapeArrayInput is an input type that accepts GetDbSystemShapesDbSystemShapeArray and GetDbSystemShapesDbSystemShapeArrayOutput values.
// You can construct a concrete instance of `GetDbSystemShapesDbSystemShapeArrayInput` via:
//
//	GetDbSystemShapesDbSystemShapeArray{ GetDbSystemShapesDbSystemShapeArgs{...} }
type GetDbSystemShapesDbSystemShapeArrayInput interface {
	pulumi.Input

	ToGetDbSystemShapesDbSystemShapeArrayOutput() GetDbSystemShapesDbSystemShapeArrayOutput
	ToGetDbSystemShapesDbSystemShapeArrayOutputWithContext(context.Context) GetDbSystemShapesDbSystemShapeArrayOutput
}

type GetDbSystemShapesDbSystemShapeArray []GetDbSystemShapesDbSystemShapeInput

func (GetDbSystemShapesDbSystemShapeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbSystemShapesDbSystemShape)(nil)).Elem()
}

func (i GetDbSystemShapesDbSystemShapeArray) ToGetDbSystemShapesDbSystemShapeArrayOutput() GetDbSystemShapesDbSystemShapeArrayOutput {
	return i.ToGetDbSystemShapesDbSystemShapeArrayOutputWithContext(context.Background())
}

func (i GetDbSystemShapesDbSystemShapeArray) ToGetDbSystemShapesDbSystemShapeArrayOutputWithContext(ctx context.Context) GetDbSystemShapesDbSystemShapeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDbSystemShapesDbSystemShapeArrayOutput)
}

type GetDbSystemShapesDbSystemShapeOutput struct{ *pulumi.OutputState }

func (GetDbSystemShapesDbSystemShapeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbSystemShapesDbSystemShape)(nil)).Elem()
}

func (o GetDbSystemShapesDbSystemShapeOutput) ToGetDbSystemShapesDbSystemShapeOutput() GetDbSystemShapesDbSystemShapeOutput {
	return o
}

func (o GetDbSystemShapesDbSystemShapeOutput) ToGetDbSystemShapesDbSystemShapeOutputWithContext(ctx context.Context) GetDbSystemShapesDbSystemShapeOutput {
	return o
}

// The maximum number of CPU cores that can be enabled on the DB system for this shape.
func (o GetDbSystemShapesDbSystemShapeOutput) AvailableCoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbSystemShapesDbSystemShape) int { return v.AvailableCoreCount }).(pulumi.IntOutput)
}

// The maximum number of CPU cores per database node that can be enabled for this shape. Only applicable to the flex Exadata shape, ExaCC Elastic shapes and VM Flex shapes.
func (o GetDbSystemShapesDbSystemShapeOutput) AvailableCoreCountPerNode() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbSystemShapesDbSystemShape) int { return v.AvailableCoreCountPerNode }).(pulumi.IntOutput)
}

// The maximum data storage that can be enabled for this shape.
func (o GetDbSystemShapesDbSystemShapeOutput) AvailableDataStorageInTbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbSystemShapesDbSystemShape) int { return v.AvailableDataStorageInTbs }).(pulumi.IntOutput)
}

// The maximum data storage available per storage server for this shape. Only applicable to ExaCC Elastic shapes.
func (o GetDbSystemShapesDbSystemShapeOutput) AvailableDataStoragePerServerInTbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbSystemShapesDbSystemShape) int { return v.AvailableDataStoragePerServerInTbs }).(pulumi.IntOutput)
}

// The maximum DB Node storage available per database node for this shape. Only applicable to ExaCC Elastic shapes.
func (o GetDbSystemShapesDbSystemShapeOutput) AvailableDbNodePerNodeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbSystemShapesDbSystemShape) int { return v.AvailableDbNodePerNodeInGbs }).(pulumi.IntOutput)
}

// The maximum DB Node storage that can be enabled for this shape.
func (o GetDbSystemShapesDbSystemShapeOutput) AvailableDbNodeStorageInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbSystemShapesDbSystemShape) int { return v.AvailableDbNodeStorageInGbs }).(pulumi.IntOutput)
}

// The maximum memory that can be enabled for this shape.
func (o GetDbSystemShapesDbSystemShapeOutput) AvailableMemoryInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbSystemShapesDbSystemShape) int { return v.AvailableMemoryInGbs }).(pulumi.IntOutput)
}

// The maximum memory available per database node for this shape. Only applicable to ExaCC Elastic shapes.
func (o GetDbSystemShapesDbSystemShapeOutput) AvailableMemoryPerNodeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbSystemShapesDbSystemShape) int { return v.AvailableMemoryPerNodeInGbs }).(pulumi.IntOutput)
}

// The discrete number by which the CPU core count for this shape can be increased or decreased.
func (o GetDbSystemShapesDbSystemShapeOutput) CoreCountIncrement() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbSystemShapesDbSystemShape) int { return v.CoreCountIncrement }).(pulumi.IntOutput)
}

// The maximum number of compute servers available for this shape.
func (o GetDbSystemShapesDbSystemShapeOutput) MaximumNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbSystemShapesDbSystemShape) int { return v.MaximumNodeCount }).(pulumi.IntOutput)
}

// The maximum number of Exadata storage servers available for the Exadata infrastructure.
func (o GetDbSystemShapesDbSystemShapeOutput) MaximumStorageCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbSystemShapesDbSystemShape) int { return v.MaximumStorageCount }).(pulumi.IntOutput)
}

// The minimum number of CPU cores that can be enabled on the DB system for this shape.
func (o GetDbSystemShapesDbSystemShapeOutput) MinimumCoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbSystemShapesDbSystemShape) int { return v.MinimumCoreCount }).(pulumi.IntOutput)
}

// The minimum number of CPU cores that can be enabled per node for this shape.
func (o GetDbSystemShapesDbSystemShapeOutput) MinimumCoreCountPerNode() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbSystemShapesDbSystemShape) int { return v.MinimumCoreCountPerNode }).(pulumi.IntOutput)
}

// The minimum data storage that need be allocated for this shape.
func (o GetDbSystemShapesDbSystemShapeOutput) MinimumDataStorageInTbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbSystemShapesDbSystemShape) int { return v.MinimumDataStorageInTbs }).(pulumi.IntOutput)
}

// The minimum DB Node storage that need be allocated per node for this shape.
func (o GetDbSystemShapesDbSystemShapeOutput) MinimumDbNodeStoragePerNodeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbSystemShapesDbSystemShape) int { return v.MinimumDbNodeStoragePerNodeInGbs }).(pulumi.IntOutput)
}

// The minimum memory that need be allocated per node for this shape.
func (o GetDbSystemShapesDbSystemShapeOutput) MinimumMemoryPerNodeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbSystemShapesDbSystemShape) int { return v.MinimumMemoryPerNodeInGbs }).(pulumi.IntOutput)
}

// The minimum number of compute servers available for this shape.
func (o GetDbSystemShapesDbSystemShapeOutput) MinimumNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbSystemShapesDbSystemShape) int { return v.MinimumNodeCount }).(pulumi.IntOutput)
}

// The minimum number of Exadata storage servers available for the Exadata infrastructure.
func (o GetDbSystemShapesDbSystemShapeOutput) MinimumStorageCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbSystemShapesDbSystemShape) int { return v.MinimumStorageCount }).(pulumi.IntOutput)
}

// The runtime minimum number of compute servers available for this shape.
func (o GetDbSystemShapesDbSystemShapeOutput) RuntimeMinimumCoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDbSystemShapesDbSystemShape) int { return v.RuntimeMinimumCoreCount }).(pulumi.IntOutput)
}

// The family of the shape used for the DB system.
func (o GetDbSystemShapesDbSystemShapeOutput) ShapeFamily() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbSystemShapesDbSystemShape) string { return v.ShapeFamily }).(pulumi.StringOutput)
}

type GetDbSystemShapesDbSystemShapeArrayOutput struct{ *pulumi.OutputState }

func (GetDbSystemShapesDbSystemShapeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDbSystemShapesDbSystemShape)(nil)).Elem()
}

func (o GetDbSystemShapesDbSystemShapeArrayOutput) ToGetDbSystemShapesDbSystemShapeArrayOutput() GetDbSystemShapesDbSystemShapeArrayOutput {
	return o
}

func (o GetDbSystemShapesDbSystemShapeArrayOutput) ToGetDbSystemShapesDbSystemShapeArrayOutputWithContext(ctx context.Context) GetDbSystemShapesDbSystemShapeArrayOutput {
	return o
}

func (o GetDbSystemShapesDbSystemShapeArrayOutput) Index(i pulumi.IntInput) GetDbSystemShapesDbSystemShapeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDbSystemShapesDbSystemShape {
		return vs[0].([]GetDbSystemShapesDbSystemShape)[vs[1].(int)]
	}).(GetDbSystemShapesDbSystemShapeOutput)
}

type GetExadataInfrastructureEstimatedPatchingTime struct {
	// The estimated time required in minutes for database server patching.
	EstimatedDbServerPatchingTime int `pulumi:"estimatedDbServerPatchingTime"`
	// The estimated time required in minutes for network switch patching.
	EstimatedNetworkSwitchesPatchingTime int `pulumi:"estimatedNetworkSwitchesPatchingTime"`
	// The estimated time required in minutes for storage server patching.
	EstimatedStorageServerPatchingTime int `pulumi:"estimatedStorageServerPatchingTime"`
	// The estimated total time required in minutes for all patching operations.
	TotalEstimatedPatchingTime int `pulumi:"totalEstimatedPatchingTime"`
}

// GetExadataInfrastructureEstimatedPatchingTimeInput is an input type that accepts GetExadataInfrastructureEstimatedPatchingTimeArgs and GetExadataInfrastructureEstimatedPatchingTimeOutput values.
// You can construct a concrete instance of `GetExadataInfrastructureEstimatedPatchingTimeInput` via:
//
//	GetExadataInfrastructureEstimatedPatchingTimeArgs{...}
type GetExadataInfrastructureEstimatedPatchingTimeInput interface {
	pulumi.Input

	ToGetExadataInfrastructureEstimatedPatchingTimeOutput() GetExadataInfrastructureEstimatedPatchingTimeOutput
	ToGetExadataInfrastructureEstimatedPatchingTimeOutputWithContext(context.Context) GetExadataInfrastructureEstimatedPatchingTimeOutput
}

type GetExadataInfrastructureEstimatedPatchingTimeArgs struct {
	// The estimated time required in minutes for database server patching.
	EstimatedDbServerPatchingTime pulumi.IntInput `pulumi:"estimatedDbServerPatchingTime"`
	// The estimated time required in minutes for network switch patching.
	EstimatedNetworkSwitchesPatchingTime pulumi.IntInput `pulumi:"estimatedNetworkSwitchesPatchingTime"`
	// The estimated time required in minutes for storage server patching.
	EstimatedStorageServerPatchingTime pulumi.IntInput `pulumi:"estimatedStorageServerPatchingTime"`
	// The estimated total time required in minutes for all patching operations.
	TotalEstimatedPatchingTime pulumi.IntInput `pulumi:"totalEstimatedPatchingTime"`
}

func (GetExadataInfrastructureEstimatedPatchingTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExadataInfrastructureEstimatedPatchingTime)(nil)).Elem()
}

func (i GetExadataInfrastructureEstimatedPatchingTimeArgs) ToGetExadataInfrastructureEstimatedPatchingTimeOutput() GetExadataInfrastructureEstimatedPatchingTimeOutput {
	return i.ToGetExadataInfrastructureEstimatedPatchingTimeOutputWithContext(context.Background())
}

func (i GetExadataInfrastructureEstimatedPatchingTimeArgs) ToGetExadataInfrastructureEstimatedPatchingTimeOutputWithContext(ctx context.Context) GetExadataInfrastructureEstimatedPatchingTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExadataInfrastructureEstimatedPatchingTimeOutput)
}

// GetExadataInfrastructureEstimatedPatchingTimeArrayInput is an input type that accepts GetExadataInfrastructureEstimatedPatchingTimeArray and GetExadataInfrastructureEstimatedPatchingTimeArrayOutput values.
// You can construct a concrete instance of `GetExadataInfrastructureEstimatedPatchingTimeArrayInput` via:
//
//	GetExadataInfrastructureEstimatedPatchingTimeArray{ GetExadataInfrastructureEstimatedPatchingTimeArgs{...} }
type GetExadataInfrastructureEstimatedPatchingTimeArrayInput interface {
	pulumi.Input

	ToGetExadataInfrastructureEstimatedPatchingTimeArrayOutput() GetExadataInfrastructureEstimatedPatchingTimeArrayOutput
	ToGetExadataInfrastructureEstimatedPatchingTimeArrayOutputWithContext(context.Context) GetExadataInfrastructureEstimatedPatchingTimeArrayOutput
}

type GetExadataInfrastructureEstimatedPatchingTimeArray []GetExadataInfrastructureEstimatedPatchingTimeInput

func (GetExadataInfrastructureEstimatedPatchingTimeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExadataInfrastructureEstimatedPatchingTime)(nil)).Elem()
}

func (i GetExadataInfrastructureEstimatedPatchingTimeArray) ToGetExadataInfrastructureEstimatedPatchingTimeArrayOutput() GetExadataInfrastructureEstimatedPatchingTimeArrayOutput {
	return i.ToGetExadataInfrastructureEstimatedPatchingTimeArrayOutputWithContext(context.Background())
}

func (i GetExadataInfrastructureEstimatedPatchingTimeArray) ToGetExadataInfrastructureEstimatedPatchingTimeArrayOutputWithContext(ctx context.Context) GetExadataInfrastructureEstimatedPatchingTimeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExadataInfrastructureEstimatedPatchingTimeArrayOutput)
}

type GetExadataInfrastructureEstimatedPatchingTimeOutput struct{ *pulumi.OutputState }

func (GetExadataInfrastructureEstimatedPatchingTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExadataInfrastructureEstimatedPatchingTime)(nil)).Elem()
}

func (o GetExadataInfrastructureEstimatedPatchingTimeOutput) ToGetExadataInfrastructureEstimatedPatchingTimeOutput() GetExadataInfrastructureEstimatedPatchingTimeOutput {
	return o
}

func (o GetExadataInfrastructureEstimatedPatchingTimeOutput) ToGetExadataInfrastructureEstimatedPatchingTimeOutputWithContext(ctx context.Context) GetExadataInfrastructureEstimatedPatchingTimeOutput {
	return o
}

// The estimated time required in minutes for database server patching.
func (o GetExadataInfrastructureEstimatedPatchingTimeOutput) EstimatedDbServerPatchingTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetExadataInfrastructureEstimatedPatchingTime) int { return v.EstimatedDbServerPatchingTime }).(pulumi.IntOutput)
}

// The estimated time required in minutes for network switch patching.
func (o GetExadataInfrastructureEstimatedPatchingTimeOutput) EstimatedNetworkSwitchesPatchingTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetExadataInfrastructureEstimatedPatchingTime) int {
		return v.EstimatedNetworkSwitchesPatchingTime
	}).(pulumi.IntOutput)
}

// The estimated time required in minutes for storage server patching.
func (o GetExadataInfrastructureEstimatedPatchingTimeOutput) EstimatedStorageServerPatchingTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetExadataInfrastructureEstimatedPatchingTime) int { return v.EstimatedStorageServerPatchingTime }).(pulumi.IntOutput)
}

// The estimated total time required in minutes for all patching operations.
func (o GetExadataInfrastructureEstimatedPatchingTimeOutput) TotalEstimatedPatchingTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetExadataInfrastructureEstimatedPatchingTime) int { return v.TotalEstimatedPatchingTime }).(pulumi.IntOutput)
}

type GetExadataInfrastructureEstimatedPatchingTimeArrayOutput struct{ *pulumi.OutputState }

func (GetExadataInfrastructureEstimatedPatchingTimeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExadataInfrastructureEstimatedPatchingTime)(nil)).Elem()
}

func (o GetExadataInfrastructureEstimatedPatchingTimeArrayOutput) ToGetExadataInfrastructureEstimatedPatchingTimeArrayOutput() GetExadataInfrastructureEstimatedPatchingTimeArrayOutput {
	return o
}

func (o GetExadataInfrastructureEstimatedPatchingTimeArrayOutput) ToGetExadataInfrastructureEstimatedPatchingTimeArrayOutputWithContext(ctx context.Context) GetExadataInfrastructureEstimatedPatchingTimeArrayOutput {
	return o
}

func (o GetExadataInfrastructureEstimatedPatchingTimeArrayOutput) Index(i pulumi.IntInput) GetExadataInfrastructureEstimatedPatchingTimeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetExadataInfrastructureEstimatedPatchingTime {
		return vs[0].([]GetExadataInfrastructureEstimatedPatchingTime)[vs[1].(int)]
	}).(GetExadataInfrastructureEstimatedPatchingTimeOutput)
}

type GetExadataInfrastructureMaintenanceWindow struct {
	// If true, enables the configuration of a custom action timeout (waiting period) between database servers patching operations.
	CustomActionTimeoutEnabled bool `pulumi:"customActionTimeoutEnabled"`
	CustomActionTimeoutInMins  int  `pulumi:"customActionTimeoutInMins"`
	// Days during the week when maintenance should be performed.
	DaysOfWeeks []string `pulumi:"daysOfWeeks"`
	// The window of hours during the day when maintenance should be performed.
	HoursOfDays []int `pulumi:"hoursOfDays"`
	// Lead time window allows user to set a lead time to prepare for a down time.
	LeadTimeInWeeks int `pulumi:"leadTimeInWeeks"`
	// If true, enables the monthly patching option.
	MonthlyPatchingEnabled bool `pulumi:"monthlyPatchingEnabled"`
	// A `months` block as defined below.
	Months []string `pulumi:"months"`
	// Cloud Exadata Infrastructure node patching method.
	PatchingMode string `pulumi:"patchingMode"`
	// The maintenance window scheduling preference.
	Preference string `pulumi:"preference"`
	// Weeks during the month when maintenance should be performed.
	WeeksOfMonths []int `pulumi:"weeksOfMonths"`
}

// GetExadataInfrastructureMaintenanceWindowInput is an input type that accepts GetExadataInfrastructureMaintenanceWindowArgs and GetExadataInfrastructureMaintenanceWindowOutput values.
// You can construct a concrete instance of `GetExadataInfrastructureMaintenanceWindowInput` via:
//
//	GetExadataInfrastructureMaintenanceWindowArgs{...}
type GetExadataInfrastructureMaintenanceWindowInput interface {
	pulumi.Input

	ToGetExadataInfrastructureMaintenanceWindowOutput() GetExadataInfrastructureMaintenanceWindowOutput
	ToGetExadataInfrastructureMaintenanceWindowOutputWithContext(context.Context) GetExadataInfrastructureMaintenanceWindowOutput
}

type GetExadataInfrastructureMaintenanceWindowArgs struct {
	// If true, enables the configuration of a custom action timeout (waiting period) between database servers patching operations.
	CustomActionTimeoutEnabled pulumi.BoolInput `pulumi:"customActionTimeoutEnabled"`
	CustomActionTimeoutInMins  pulumi.IntInput  `pulumi:"customActionTimeoutInMins"`
	// Days during the week when maintenance should be performed.
	DaysOfWeeks pulumi.StringArrayInput `pulumi:"daysOfWeeks"`
	// The window of hours during the day when maintenance should be performed.
	HoursOfDays pulumi.IntArrayInput `pulumi:"hoursOfDays"`
	// Lead time window allows user to set a lead time to prepare for a down time.
	LeadTimeInWeeks pulumi.IntInput `pulumi:"leadTimeInWeeks"`
	// If true, enables the monthly patching option.
	MonthlyPatchingEnabled pulumi.BoolInput `pulumi:"monthlyPatchingEnabled"`
	// A `months` block as defined below.
	Months pulumi.StringArrayInput `pulumi:"months"`
	// Cloud Exadata Infrastructure node patching method.
	PatchingMode pulumi.StringInput `pulumi:"patchingMode"`
	// The maintenance window scheduling preference.
	Preference pulumi.StringInput `pulumi:"preference"`
	// Weeks during the month when maintenance should be performed.
	WeeksOfMonths pulumi.IntArrayInput `pulumi:"weeksOfMonths"`
}

func (GetExadataInfrastructureMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExadataInfrastructureMaintenanceWindow)(nil)).Elem()
}

func (i GetExadataInfrastructureMaintenanceWindowArgs) ToGetExadataInfrastructureMaintenanceWindowOutput() GetExadataInfrastructureMaintenanceWindowOutput {
	return i.ToGetExadataInfrastructureMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetExadataInfrastructureMaintenanceWindowArgs) ToGetExadataInfrastructureMaintenanceWindowOutputWithContext(ctx context.Context) GetExadataInfrastructureMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExadataInfrastructureMaintenanceWindowOutput)
}

// GetExadataInfrastructureMaintenanceWindowArrayInput is an input type that accepts GetExadataInfrastructureMaintenanceWindowArray and GetExadataInfrastructureMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `GetExadataInfrastructureMaintenanceWindowArrayInput` via:
//
//	GetExadataInfrastructureMaintenanceWindowArray{ GetExadataInfrastructureMaintenanceWindowArgs{...} }
type GetExadataInfrastructureMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetExadataInfrastructureMaintenanceWindowArrayOutput() GetExadataInfrastructureMaintenanceWindowArrayOutput
	ToGetExadataInfrastructureMaintenanceWindowArrayOutputWithContext(context.Context) GetExadataInfrastructureMaintenanceWindowArrayOutput
}

type GetExadataInfrastructureMaintenanceWindowArray []GetExadataInfrastructureMaintenanceWindowInput

func (GetExadataInfrastructureMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExadataInfrastructureMaintenanceWindow)(nil)).Elem()
}

func (i GetExadataInfrastructureMaintenanceWindowArray) ToGetExadataInfrastructureMaintenanceWindowArrayOutput() GetExadataInfrastructureMaintenanceWindowArrayOutput {
	return i.ToGetExadataInfrastructureMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetExadataInfrastructureMaintenanceWindowArray) ToGetExadataInfrastructureMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetExadataInfrastructureMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExadataInfrastructureMaintenanceWindowArrayOutput)
}

type GetExadataInfrastructureMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetExadataInfrastructureMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExadataInfrastructureMaintenanceWindow)(nil)).Elem()
}

func (o GetExadataInfrastructureMaintenanceWindowOutput) ToGetExadataInfrastructureMaintenanceWindowOutput() GetExadataInfrastructureMaintenanceWindowOutput {
	return o
}

func (o GetExadataInfrastructureMaintenanceWindowOutput) ToGetExadataInfrastructureMaintenanceWindowOutputWithContext(ctx context.Context) GetExadataInfrastructureMaintenanceWindowOutput {
	return o
}

// If true, enables the configuration of a custom action timeout (waiting period) between database servers patching operations.
func (o GetExadataInfrastructureMaintenanceWindowOutput) CustomActionTimeoutEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetExadataInfrastructureMaintenanceWindow) bool { return v.CustomActionTimeoutEnabled }).(pulumi.BoolOutput)
}

func (o GetExadataInfrastructureMaintenanceWindowOutput) CustomActionTimeoutInMins() pulumi.IntOutput {
	return o.ApplyT(func(v GetExadataInfrastructureMaintenanceWindow) int { return v.CustomActionTimeoutInMins }).(pulumi.IntOutput)
}

// Days during the week when maintenance should be performed.
func (o GetExadataInfrastructureMaintenanceWindowOutput) DaysOfWeeks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetExadataInfrastructureMaintenanceWindow) []string { return v.DaysOfWeeks }).(pulumi.StringArrayOutput)
}

// The window of hours during the day when maintenance should be performed.
func (o GetExadataInfrastructureMaintenanceWindowOutput) HoursOfDays() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetExadataInfrastructureMaintenanceWindow) []int { return v.HoursOfDays }).(pulumi.IntArrayOutput)
}

// Lead time window allows user to set a lead time to prepare for a down time.
func (o GetExadataInfrastructureMaintenanceWindowOutput) LeadTimeInWeeks() pulumi.IntOutput {
	return o.ApplyT(func(v GetExadataInfrastructureMaintenanceWindow) int { return v.LeadTimeInWeeks }).(pulumi.IntOutput)
}

// If true, enables the monthly patching option.
func (o GetExadataInfrastructureMaintenanceWindowOutput) MonthlyPatchingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetExadataInfrastructureMaintenanceWindow) bool { return v.MonthlyPatchingEnabled }).(pulumi.BoolOutput)
}

// A `months` block as defined below.
func (o GetExadataInfrastructureMaintenanceWindowOutput) Months() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetExadataInfrastructureMaintenanceWindow) []string { return v.Months }).(pulumi.StringArrayOutput)
}

// Cloud Exadata Infrastructure node patching method.
func (o GetExadataInfrastructureMaintenanceWindowOutput) PatchingMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetExadataInfrastructureMaintenanceWindow) string { return v.PatchingMode }).(pulumi.StringOutput)
}

// The maintenance window scheduling preference.
func (o GetExadataInfrastructureMaintenanceWindowOutput) Preference() pulumi.StringOutput {
	return o.ApplyT(func(v GetExadataInfrastructureMaintenanceWindow) string { return v.Preference }).(pulumi.StringOutput)
}

// Weeks during the month when maintenance should be performed.
func (o GetExadataInfrastructureMaintenanceWindowOutput) WeeksOfMonths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetExadataInfrastructureMaintenanceWindow) []int { return v.WeeksOfMonths }).(pulumi.IntArrayOutput)
}

type GetExadataInfrastructureMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetExadataInfrastructureMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExadataInfrastructureMaintenanceWindow)(nil)).Elem()
}

func (o GetExadataInfrastructureMaintenanceWindowArrayOutput) ToGetExadataInfrastructureMaintenanceWindowArrayOutput() GetExadataInfrastructureMaintenanceWindowArrayOutput {
	return o
}

func (o GetExadataInfrastructureMaintenanceWindowArrayOutput) ToGetExadataInfrastructureMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetExadataInfrastructureMaintenanceWindowArrayOutput {
	return o
}

func (o GetExadataInfrastructureMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetExadataInfrastructureMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetExadataInfrastructureMaintenanceWindow {
		return vs[0].([]GetExadataInfrastructureMaintenanceWindow)[vs[1].(int)]
	}).(GetExadataInfrastructureMaintenanceWindowOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudVmClusterDataCollectionOptionsInput)(nil)).Elem(), CloudVmClusterDataCollectionOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudVmClusterDataCollectionOptionsPtrInput)(nil)).Elem(), CloudVmClusterDataCollectionOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExadataInfrastructureMaintenanceWindowInput)(nil)).Elem(), ExadataInfrastructureMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExadataInfrastructureMaintenanceWindowArrayInput)(nil)).Elem(), ExadataInfrastructureMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdbsCharacterSetsCharacterSetInput)(nil)).Elem(), GetAdbsCharacterSetsCharacterSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdbsCharacterSetsCharacterSetArrayInput)(nil)).Elem(), GetAdbsCharacterSetsCharacterSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdbsNationalCharacterSetsCharacterSetInput)(nil)).Elem(), GetAdbsNationalCharacterSetsCharacterSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAdbsNationalCharacterSetsCharacterSetArrayInput)(nil)).Elem(), GetAdbsNationalCharacterSetsCharacterSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudVmClusterDataCollectionOptionInput)(nil)).Elem(), GetCloudVmClusterDataCollectionOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudVmClusterDataCollectionOptionArrayInput)(nil)).Elem(), GetCloudVmClusterDataCollectionOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudVmClusterIormConfigCachInput)(nil)).Elem(), GetCloudVmClusterIormConfigCachArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudVmClusterIormConfigCachArrayInput)(nil)).Elem(), GetCloudVmClusterIormConfigCachArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudVmClusterIormConfigCachDbPlanInput)(nil)).Elem(), GetCloudVmClusterIormConfigCachDbPlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudVmClusterIormConfigCachDbPlanArrayInput)(nil)).Elem(), GetCloudVmClusterIormConfigCachDbPlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbNodesDbNodeInput)(nil)).Elem(), GetDbNodesDbNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbNodesDbNodeArrayInput)(nil)).Elem(), GetDbNodesDbNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbServersDbServerInput)(nil)).Elem(), GetDbServersDbServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbServersDbServerArrayInput)(nil)).Elem(), GetDbServersDbServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbSystemShapesDbSystemShapeInput)(nil)).Elem(), GetDbSystemShapesDbSystemShapeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDbSystemShapesDbSystemShapeArrayInput)(nil)).Elem(), GetDbSystemShapesDbSystemShapeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExadataInfrastructureEstimatedPatchingTimeInput)(nil)).Elem(), GetExadataInfrastructureEstimatedPatchingTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExadataInfrastructureEstimatedPatchingTimeArrayInput)(nil)).Elem(), GetExadataInfrastructureEstimatedPatchingTimeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExadataInfrastructureMaintenanceWindowInput)(nil)).Elem(), GetExadataInfrastructureMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExadataInfrastructureMaintenanceWindowArrayInput)(nil)).Elem(), GetExadataInfrastructureMaintenanceWindowArray{})
	pulumi.RegisterOutputType(CloudVmClusterDataCollectionOptionsOutput{})
	pulumi.RegisterOutputType(CloudVmClusterDataCollectionOptionsPtrOutput{})
	pulumi.RegisterOutputType(ExadataInfrastructureMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(ExadataInfrastructureMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetAdbsCharacterSetsCharacterSetOutput{})
	pulumi.RegisterOutputType(GetAdbsCharacterSetsCharacterSetArrayOutput{})
	pulumi.RegisterOutputType(GetAdbsNationalCharacterSetsCharacterSetOutput{})
	pulumi.RegisterOutputType(GetAdbsNationalCharacterSetsCharacterSetArrayOutput{})
	pulumi.RegisterOutputType(GetCloudVmClusterDataCollectionOptionOutput{})
	pulumi.RegisterOutputType(GetCloudVmClusterDataCollectionOptionArrayOutput{})
	pulumi.RegisterOutputType(GetCloudVmClusterIormConfigCachOutput{})
	pulumi.RegisterOutputType(GetCloudVmClusterIormConfigCachArrayOutput{})
	pulumi.RegisterOutputType(GetCloudVmClusterIormConfigCachDbPlanOutput{})
	pulumi.RegisterOutputType(GetCloudVmClusterIormConfigCachDbPlanArrayOutput{})
	pulumi.RegisterOutputType(GetDbNodesDbNodeOutput{})
	pulumi.RegisterOutputType(GetDbNodesDbNodeArrayOutput{})
	pulumi.RegisterOutputType(GetDbServersDbServerOutput{})
	pulumi.RegisterOutputType(GetDbServersDbServerArrayOutput{})
	pulumi.RegisterOutputType(GetDbSystemShapesDbSystemShapeOutput{})
	pulumi.RegisterOutputType(GetDbSystemShapesDbSystemShapeArrayOutput{})
	pulumi.RegisterOutputType(GetExadataInfrastructureEstimatedPatchingTimeOutput{})
	pulumi.RegisterOutputType(GetExadataInfrastructureEstimatedPatchingTimeArrayOutput{})
	pulumi.RegisterOutputType(GetExadataInfrastructureMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetExadataInfrastructureMaintenanceWindowArrayOutput{})
}
