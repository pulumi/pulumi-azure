// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oracle

import (
	"context"
	"errors"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Cloud VM Cluster.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/oracle"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := oracle.LookupCloudVmCluster(ctx, &oracle.LookupCloudVmClusterArgs{
//				Name:              "existing",
//				ResourceGroupName: "existing",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", example.Id)
//			return nil
//		})
//	}
//
// ```
func LookupCloudVmCluster(ctx *pulumi.Context, args *LookupCloudVmClusterArgs, opts ...pulumi.InvokeOption) (*LookupCloudVmClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	invokeOpts, optsErr := pulumi.NewInvokeOptions(opts...)
	if optsErr != nil {
		return &LookupCloudVmClusterResult{}, optsErr
	}
	if len(invokeOpts.DependsOn) > 0 {
		return &LookupCloudVmClusterResult{}, errors.New("DependsOn is not supported for direct form invoke LookupCloudVmCluster, use LookupCloudVmClusterOutput instead")
	}
	if len(invokeOpts.DependsOnInputs) > 0 {
		return &LookupCloudVmClusterResult{}, errors.New("DependsOnInputs is not supported for direct form invoke LookupCloudVmCluster, use LookupCloudVmClusterOutput instead")
	}
	var rv LookupCloudVmClusterResult
	err := ctx.Invoke("azure:oracle/getCloudVmCluster:getCloudVmCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudVmCluster.
type LookupCloudVmClusterArgs struct {
	// The name of this Cloud VM Cluster.
	Name string `pulumi:"name"`
	// The name of the Resource Group where the Cloud VM Cluster exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getCloudVmCluster.
type LookupCloudVmClusterResult struct {
	// Client OCI backup subnet CIDR, default is `192.168.252.0/22`.
	BackupSubnetCidr string `pulumi:"backupSubnetCidr"`
	// The Cloud Exadata Infrastructure ID.
	CloudExadataInfrastructureId string `pulumi:"cloudExadataInfrastructureId"`
	// The cluster name for Cloud VM Cluster.
	ClusterName string `pulumi:"clusterName"`
	// The OCID of the compartment.
	CompartmentId string `pulumi:"compartmentId"`
	// A `computeNodes` block as defined below.
	ComputeNodes []string `pulumi:"computeNodes"`
	// The number of CPU cores enabled on the Cloud VM Cluster.
	CpuCoreCount int `pulumi:"cpuCoreCount"`
	// A `dataCollectionOptions` block as defined below.
	DataCollectionOptions []GetCloudVmClusterDataCollectionOption `pulumi:"dataCollectionOptions"`
	// The percentage assigned to DATA storage (user data and database files). The remaining percentage is assigned to RECO storage (database redo logs, archive logs, and recovery manager backups). Accepted values are `35`, `40`, `60`, and 80. The default is `80` percent assigned to DATA storage. See [Storage Configuration](https://docs.oracle.com/en-us/iaas/exadatacloud/index.html#Exadata) in the Exadata documentation for details on the impact of the configuration settings on storage.
	DataStoragePercentage int `pulumi:"dataStoragePercentage"`
	// The data disk group size to be allocated in TBs.
	DataStorageSizeInTbs float64 `pulumi:"dataStorageSizeInTbs"`
	// The local node storage to be allocated in GBs.
	DbNodeStorageSizeInGbs int `pulumi:"dbNodeStorageSizeInGbs"`
	// A `dbServers` block as defined below.
	DbServers []string `pulumi:"dbServers"`
	// The type of redundancy configured for the Cloud Vm Cluster. `NORMAL` is 2-way redundancy. `HIGH` is 3-way redundancy.
	DiskRedundancy string `pulumi:"diskRedundancy"`
	// The user-friendly name for the Cloud VM Cluster. The name does not need to be unique.
	DisplayName string `pulumi:"displayName"`
	// The domain name for the Cloud VM Cluster.
	Domain string `pulumi:"domain"`
	// A valid Oracle Grid Infrastructure (GI) software version.
	GiVersion string `pulumi:"giVersion"`
	// The hostname for the Cloud VM Cluster without suffix.
	Hostname string `pulumi:"hostname"`
	// The hostname for the Cloud VM Cluster with suffix.
	HostnameActual string `pulumi:"hostnameActual"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A `iormConfigCache` block as defined below.
	IormConfigCaches []GetCloudVmClusterIormConfigCach `pulumi:"iormConfigCaches"`
	// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance update history entry. This value is updated when a maintenance update starts.
	LastUpdateHistoryEntryId string `pulumi:"lastUpdateHistoryEntryId"`
	// The Oracle license model that applies to the Cloud VM Cluster.
	LicenseModel string `pulumi:"licenseModel"`
	// Additional information about the current `lifecycleState`.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// The current state of IORM configuration for the Exadata DB system.
	LifecycleState string `pulumi:"lifecycleState"`
	// The port number configured for the listener on the Cloud VM Cluster.
	ListenerPort int `pulumi:"listenerPort"`
	// If true, database backup on local Exadata storage is configured for the Cloud VM Cluster. If false, database backup on local Exadata storage is not available in the Cloud VM Cluster.
	LocalBackupEnabled bool `pulumi:"localBackupEnabled"`
	// The Azure Region where the Cloud VM Cluster exists.
	Location string `pulumi:"location"`
	// The memory to be allocated in GBs.
	MemorySizeInGbs int    `pulumi:"memorySizeInGbs"`
	Name            string `pulumi:"name"`
	// The number of nodes in the Cloud VM Cluster.
	NodeCount int `pulumi:"nodeCount"`
	// The list of [OCIDs](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) for the network security groups (NSGs) to which this resource belongs. Setting this to an empty list removes all resources from all NSGs. For more information about NSGs, see [Security Rules](https://docs.oracle.com/en-us/iaas/Content/Network/Concepts/securityrules.htm). NsgIds restrictions:
	// * A network security group (NSG) is optional for Autonomous Databases with private access. The nsgIds list can be empty.
	NsgUrl string `pulumi:"nsgUrl"`
	// The URL of the resource in the OCI console.
	OciUrl string `pulumi:"ociUrl"`
	// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the Cloud VM Cluster.
	Ocid string `pulumi:"ocid"`
	// The number of OCPU cores to enable on the Cloud VM Cluster. Only 1 decimal place is allowed for the fractional part.
	OcpuCount         float64 `pulumi:"ocpuCount"`
	ResourceGroupName string  `pulumi:"resourceGroupName"`
	// The FQDN of the DNS record for the SCAN IP addresses that are associated with the Cloud VM Cluster.
	ScanDnsName string `pulumi:"scanDnsName"`
	// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the DNS record for the SCAN IP addresses that are associated with the Cloud VM Cluster.
	ScanDnsRecordId string `pulumi:"scanDnsRecordId"`
	// A `scanIpIds` block as defined below.
	ScanIpIds []string `pulumi:"scanIpIds"`
	// The TCP Single Client Access Name (SCAN) port. The default port is 1521.
	ScanListenerPortTcp int `pulumi:"scanListenerPortTcp"`
	// The TCPS Single Client Access Name (SCAN) port. The default port is 2484.
	ScanListenerPortTcpSsl int `pulumi:"scanListenerPortTcpSsl"`
	// The model name of the Exadata hardware running the Cloud VM Cluster.
	Shape string `pulumi:"shape"`
	// If true, sparse disk group is configured for the Cloud VM Cluster. If false, sparse disk group is not created.
	SparseDiskgroupEnabled bool `pulumi:"sparseDiskgroupEnabled"`
	// The public key portion of one or more key pairs used for SSH access to the Cloud VM Cluster.
	SshPublicKeys []string `pulumi:"sshPublicKeys"`
	// The storage allocation for the disk group, in gigabytes (GB).
	StorageSizeInGbs int `pulumi:"storageSizeInGbs"`
	// The ID of the Azure Resource Manager subnet resource.
	SubnetId string `pulumi:"subnetId"`
	// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the subnet associated with the Cloud VM Cluster.
	SubnetOcid string `pulumi:"subnetOcid"`
	// Operating system version of the image.
	SystemVersion string `pulumi:"systemVersion"`
	// A mapping of tags assigned to the Cloud VM Cluster.
	Tags map[string]string `pulumi:"tags"`
	// The date and time that the Cloud VM Cluster was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The time zone of the Cloud VM Cluster. For details, see [Exadata Infrastructure Time Zones](https://docs.oracle.com/en-us/iaas/base-database/doc/manage-time-zone.html).
	TimeZone string `pulumi:"timeZone"`
	// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the virtual IP (VIP) addresses associated with the Cloud VM Cluster. The Cluster Ready Services (CRS) creates and maintains one VIP address for each node in the Exadata Cloud Service instance to enable failover. If one node fails, the VIP is reassigned to another active node in the Cluster.
	VipOds []string `pulumi:"vipOds"`
	// The ID to an Azure Resource Manager Virtual Network resource.
	VirtualNetworkId string `pulumi:"virtualNetworkId"`
	// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the zone the Cloud VM Cluster is associated with.
	ZoneId string `pulumi:"zoneId"`
}

func LookupCloudVmClusterOutput(ctx *pulumi.Context, args LookupCloudVmClusterOutputArgs, opts ...pulumi.InvokeOption) LookupCloudVmClusterResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCloudVmClusterResultOutput, error) {
			args := v.(LookupCloudVmClusterArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupCloudVmClusterResult
			secret, deps, err := ctx.InvokePackageRawWithDeps("azure:oracle/getCloudVmCluster:getCloudVmCluster", args, &rv, "", opts...)
			if err != nil {
				return LookupCloudVmClusterResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupCloudVmClusterResultOutput)
			output = pulumi.OutputWithDependencies(ctx.Context(), output, deps...).(LookupCloudVmClusterResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupCloudVmClusterResultOutput), nil
			}
			return output, nil
		}).(LookupCloudVmClusterResultOutput)
}

// A collection of arguments for invoking getCloudVmCluster.
type LookupCloudVmClusterOutputArgs struct {
	// The name of this Cloud VM Cluster.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Resource Group where the Cloud VM Cluster exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupCloudVmClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudVmClusterArgs)(nil)).Elem()
}

// A collection of values returned by getCloudVmCluster.
type LookupCloudVmClusterResultOutput struct{ *pulumi.OutputState }

func (LookupCloudVmClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudVmClusterResult)(nil)).Elem()
}

func (o LookupCloudVmClusterResultOutput) ToLookupCloudVmClusterResultOutput() LookupCloudVmClusterResultOutput {
	return o
}

func (o LookupCloudVmClusterResultOutput) ToLookupCloudVmClusterResultOutputWithContext(ctx context.Context) LookupCloudVmClusterResultOutput {
	return o
}

// Client OCI backup subnet CIDR, default is `192.168.252.0/22`.
func (o LookupCloudVmClusterResultOutput) BackupSubnetCidr() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.BackupSubnetCidr }).(pulumi.StringOutput)
}

// The Cloud Exadata Infrastructure ID.
func (o LookupCloudVmClusterResultOutput) CloudExadataInfrastructureId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.CloudExadataInfrastructureId }).(pulumi.StringOutput)
}

// The cluster name for Cloud VM Cluster.
func (o LookupCloudVmClusterResultOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.ClusterName }).(pulumi.StringOutput)
}

// The OCID of the compartment.
func (o LookupCloudVmClusterResultOutput) CompartmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.CompartmentId }).(pulumi.StringOutput)
}

// A `computeNodes` block as defined below.
func (o LookupCloudVmClusterResultOutput) ComputeNodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) []string { return v.ComputeNodes }).(pulumi.StringArrayOutput)
}

// The number of CPU cores enabled on the Cloud VM Cluster.
func (o LookupCloudVmClusterResultOutput) CpuCoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) int { return v.CpuCoreCount }).(pulumi.IntOutput)
}

// A `dataCollectionOptions` block as defined below.
func (o LookupCloudVmClusterResultOutput) DataCollectionOptions() GetCloudVmClusterDataCollectionOptionArrayOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) []GetCloudVmClusterDataCollectionOption {
		return v.DataCollectionOptions
	}).(GetCloudVmClusterDataCollectionOptionArrayOutput)
}

// The percentage assigned to DATA storage (user data and database files). The remaining percentage is assigned to RECO storage (database redo logs, archive logs, and recovery manager backups). Accepted values are `35`, `40`, `60`, and 80. The default is `80` percent assigned to DATA storage. See [Storage Configuration](https://docs.oracle.com/en-us/iaas/exadatacloud/index.html#Exadata) in the Exadata documentation for details on the impact of the configuration settings on storage.
func (o LookupCloudVmClusterResultOutput) DataStoragePercentage() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) int { return v.DataStoragePercentage }).(pulumi.IntOutput)
}

// The data disk group size to be allocated in TBs.
func (o LookupCloudVmClusterResultOutput) DataStorageSizeInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v LookupCloudVmClusterResult) float64 { return v.DataStorageSizeInTbs }).(pulumi.Float64Output)
}

// The local node storage to be allocated in GBs.
func (o LookupCloudVmClusterResultOutput) DbNodeStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) int { return v.DbNodeStorageSizeInGbs }).(pulumi.IntOutput)
}

// A `dbServers` block as defined below.
func (o LookupCloudVmClusterResultOutput) DbServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) []string { return v.DbServers }).(pulumi.StringArrayOutput)
}

// The type of redundancy configured for the Cloud Vm Cluster. `NORMAL` is 2-way redundancy. `HIGH` is 3-way redundancy.
func (o LookupCloudVmClusterResultOutput) DiskRedundancy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.DiskRedundancy }).(pulumi.StringOutput)
}

// The user-friendly name for the Cloud VM Cluster. The name does not need to be unique.
func (o LookupCloudVmClusterResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The domain name for the Cloud VM Cluster.
func (o LookupCloudVmClusterResultOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.Domain }).(pulumi.StringOutput)
}

// A valid Oracle Grid Infrastructure (GI) software version.
func (o LookupCloudVmClusterResultOutput) GiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.GiVersion }).(pulumi.StringOutput)
}

// The hostname for the Cloud VM Cluster without suffix.
func (o LookupCloudVmClusterResultOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.Hostname }).(pulumi.StringOutput)
}

// The hostname for the Cloud VM Cluster with suffix.
func (o LookupCloudVmClusterResultOutput) HostnameActual() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.HostnameActual }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCloudVmClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

// A `iormConfigCache` block as defined below.
func (o LookupCloudVmClusterResultOutput) IormConfigCaches() GetCloudVmClusterIormConfigCachArrayOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) []GetCloudVmClusterIormConfigCach { return v.IormConfigCaches }).(GetCloudVmClusterIormConfigCachArrayOutput)
}

// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance update history entry. This value is updated when a maintenance update starts.
func (o LookupCloudVmClusterResultOutput) LastUpdateHistoryEntryId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.LastUpdateHistoryEntryId }).(pulumi.StringOutput)
}

// The Oracle license model that applies to the Cloud VM Cluster.
func (o LookupCloudVmClusterResultOutput) LicenseModel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.LicenseModel }).(pulumi.StringOutput)
}

// Additional information about the current `lifecycleState`.
func (o LookupCloudVmClusterResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// The current state of IORM configuration for the Exadata DB system.
func (o LookupCloudVmClusterResultOutput) LifecycleState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.LifecycleState }).(pulumi.StringOutput)
}

// The port number configured for the listener on the Cloud VM Cluster.
func (o LookupCloudVmClusterResultOutput) ListenerPort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) int { return v.ListenerPort }).(pulumi.IntOutput)
}

// If true, database backup on local Exadata storage is configured for the Cloud VM Cluster. If false, database backup on local Exadata storage is not available in the Cloud VM Cluster.
func (o LookupCloudVmClusterResultOutput) LocalBackupEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) bool { return v.LocalBackupEnabled }).(pulumi.BoolOutput)
}

// The Azure Region where the Cloud VM Cluster exists.
func (o LookupCloudVmClusterResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.Location }).(pulumi.StringOutput)
}

// The memory to be allocated in GBs.
func (o LookupCloudVmClusterResultOutput) MemorySizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) int { return v.MemorySizeInGbs }).(pulumi.IntOutput)
}

func (o LookupCloudVmClusterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.Name }).(pulumi.StringOutput)
}

// The number of nodes in the Cloud VM Cluster.
func (o LookupCloudVmClusterResultOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) int { return v.NodeCount }).(pulumi.IntOutput)
}

// The list of [OCIDs](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) for the network security groups (NSGs) to which this resource belongs. Setting this to an empty list removes all resources from all NSGs. For more information about NSGs, see [Security Rules](https://docs.oracle.com/en-us/iaas/Content/Network/Concepts/securityrules.htm). NsgIds restrictions:
// * A network security group (NSG) is optional for Autonomous Databases with private access. The nsgIds list can be empty.
func (o LookupCloudVmClusterResultOutput) NsgUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.NsgUrl }).(pulumi.StringOutput)
}

// The URL of the resource in the OCI console.
func (o LookupCloudVmClusterResultOutput) OciUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.OciUrl }).(pulumi.StringOutput)
}

// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the Cloud VM Cluster.
func (o LookupCloudVmClusterResultOutput) Ocid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.Ocid }).(pulumi.StringOutput)
}

// The number of OCPU cores to enable on the Cloud VM Cluster. Only 1 decimal place is allowed for the fractional part.
func (o LookupCloudVmClusterResultOutput) OcpuCount() pulumi.Float64Output {
	return o.ApplyT(func(v LookupCloudVmClusterResult) float64 { return v.OcpuCount }).(pulumi.Float64Output)
}

func (o LookupCloudVmClusterResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The FQDN of the DNS record for the SCAN IP addresses that are associated with the Cloud VM Cluster.
func (o LookupCloudVmClusterResultOutput) ScanDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.ScanDnsName }).(pulumi.StringOutput)
}

// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the DNS record for the SCAN IP addresses that are associated with the Cloud VM Cluster.
func (o LookupCloudVmClusterResultOutput) ScanDnsRecordId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.ScanDnsRecordId }).(pulumi.StringOutput)
}

// A `scanIpIds` block as defined below.
func (o LookupCloudVmClusterResultOutput) ScanIpIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) []string { return v.ScanIpIds }).(pulumi.StringArrayOutput)
}

// The TCP Single Client Access Name (SCAN) port. The default port is 1521.
func (o LookupCloudVmClusterResultOutput) ScanListenerPortTcp() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) int { return v.ScanListenerPortTcp }).(pulumi.IntOutput)
}

// The TCPS Single Client Access Name (SCAN) port. The default port is 2484.
func (o LookupCloudVmClusterResultOutput) ScanListenerPortTcpSsl() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) int { return v.ScanListenerPortTcpSsl }).(pulumi.IntOutput)
}

// The model name of the Exadata hardware running the Cloud VM Cluster.
func (o LookupCloudVmClusterResultOutput) Shape() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.Shape }).(pulumi.StringOutput)
}

// If true, sparse disk group is configured for the Cloud VM Cluster. If false, sparse disk group is not created.
func (o LookupCloudVmClusterResultOutput) SparseDiskgroupEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) bool { return v.SparseDiskgroupEnabled }).(pulumi.BoolOutput)
}

// The public key portion of one or more key pairs used for SSH access to the Cloud VM Cluster.
func (o LookupCloudVmClusterResultOutput) SshPublicKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) []string { return v.SshPublicKeys }).(pulumi.StringArrayOutput)
}

// The storage allocation for the disk group, in gigabytes (GB).
func (o LookupCloudVmClusterResultOutput) StorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) int { return v.StorageSizeInGbs }).(pulumi.IntOutput)
}

// The ID of the Azure Resource Manager subnet resource.
func (o LookupCloudVmClusterResultOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the subnet associated with the Cloud VM Cluster.
func (o LookupCloudVmClusterResultOutput) SubnetOcid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.SubnetOcid }).(pulumi.StringOutput)
}

// Operating system version of the image.
func (o LookupCloudVmClusterResultOutput) SystemVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.SystemVersion }).(pulumi.StringOutput)
}

// A mapping of tags assigned to the Cloud VM Cluster.
func (o LookupCloudVmClusterResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The date and time that the Cloud VM Cluster was created.
func (o LookupCloudVmClusterResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The time zone of the Cloud VM Cluster. For details, see [Exadata Infrastructure Time Zones](https://docs.oracle.com/en-us/iaas/base-database/doc/manage-time-zone.html).
func (o LookupCloudVmClusterResultOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.TimeZone }).(pulumi.StringOutput)
}

// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the virtual IP (VIP) addresses associated with the Cloud VM Cluster. The Cluster Ready Services (CRS) creates and maintains one VIP address for each node in the Exadata Cloud Service instance to enable failover. If one node fails, the VIP is reassigned to another active node in the Cluster.
func (o LookupCloudVmClusterResultOutput) VipOds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) []string { return v.VipOds }).(pulumi.StringArrayOutput)
}

// The ID to an Azure Resource Manager Virtual Network resource.
func (o LookupCloudVmClusterResultOutput) VirtualNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.VirtualNetworkId }).(pulumi.StringOutput)
}

// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the zone the Cloud VM Cluster is associated with.
func (o LookupCloudVmClusterResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudVmClusterResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCloudVmClusterResultOutput{})
}
