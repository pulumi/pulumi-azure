// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oracle

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Cloud Exadata Infrastructure.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/oracle"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := oracle.LookupExadataInfrastructure(ctx, &oracle.LookupExadataInfrastructureArgs{
//				Name:              "existing",
//				ResourceGroupName: "existing",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", example.Id)
//			return nil
//		})
//	}
//
// ```
func LookupExadataInfrastructure(ctx *pulumi.Context, args *LookupExadataInfrastructureArgs, opts ...pulumi.InvokeOption) (*LookupExadataInfrastructureResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupExadataInfrastructureResult
	err := ctx.Invoke("azure:oracle/getExadataInfrastructure:getExadataInfrastructure", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getExadataInfrastructure.
type LookupExadataInfrastructureArgs struct {
	// The name of this Cloud Exadata Infrastructure.
	Name string `pulumi:"name"`
	// The name of the Resource Group where the Cloud Exadata Infrastructure exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getExadataInfrastructure.
type LookupExadataInfrastructureResult struct {
	// The requested number of additional storage servers activated for the Cloud Exadata Infrastructure.
	ActivatedStorageCount int `pulumi:"activatedStorageCount"`
	// The requested number of additional storage servers for the Cloud Exadata Infrastructure.
	AdditionalStorageCount int `pulumi:"additionalStorageCount"`
	// The available storage can be allocated to the Cloud Exadata Infrastructure resource, in gigabytes (GB).
	AvailableStorageSizeInGbs int `pulumi:"availableStorageSizeInGbs"`
	// The number of compute servers for the Cloud Exadata Infrastructure.
	ComputeCount int `pulumi:"computeCount"`
	// The total number of CPU cores allocated.
	CpuCount int `pulumi:"cpuCount"`
	// A `customerContacts` block as defined below.
	CustomerContacts []string `pulumi:"customerContacts"`
	// The data storage size in terabytes of the DATA disk group.
	DataStorageSizeInTbs float64 `pulumi:"dataStorageSizeInTbs"`
	// The local node storage allocated in GBs.
	DbNodeStorageSizeInGbs int `pulumi:"dbNodeStorageSizeInGbs"`
	// The software version of the database servers (dom0) in the Cloud Exadata Infrastructure.
	DbServerVersion string `pulumi:"dbServerVersion"`
	// The user-friendly name for the Cloud Exadata Infrastructure resource. The name does not need to be unique.
	DisplayName string `pulumi:"displayName"`
	// A `estimatedPatchingTime` block as defined below.
	EstimatedPatchingTimes []GetExadataInfrastructureEstimatedPatchingTime `pulumi:"estimatedPatchingTimes"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
	LastMaintenanceRunId string `pulumi:"lastMaintenanceRunId"`
	// Additional information about the current lifecycle state.
	LifecycleDetails string `pulumi:"lifecycleDetails"`
	// Cloud Exadata Infrastructure lifecycle state.
	LifecycleState string `pulumi:"lifecycleState"`
	// The Azure Region where the Cloud Exadata Infrastructure exists.
	Location string `pulumi:"location"`
	// A `maintenanceWindow` block as defined below.
	MaintenanceWindows []GetExadataInfrastructureMaintenanceWindow `pulumi:"maintenanceWindows"`
	// The total number of CPU cores available.
	MaxCpuCount int `pulumi:"maxCpuCount"`
	// The total available DATA disk group size.
	MaxDataStorageInTbs float64 `pulumi:"maxDataStorageInTbs"`
	// The total local node storage available in GBs.
	MaxDbNodeStorageSizeInGbs int `pulumi:"maxDbNodeStorageSizeInGbs"`
	// The total memory available in GBs.
	MaxMemoryInGbs int `pulumi:"maxMemoryInGbs"`
	// The memory allocated in GBs.
	MemorySizeInGbs int `pulumi:"memorySizeInGbs"`
	// The monthly software version of the database servers (dom0) in the Cloud Exadata Infrastructure.
	MonthlyDbServerVersion string `pulumi:"monthlyDbServerVersion"`
	// The monthly software version of the storage servers (cells) in the Cloud Exadata Infrastructure.
	MonthlyStorageServerVersion string `pulumi:"monthlyStorageServerVersion"`
	Name                        string `pulumi:"name"`
	// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
	NextMaintenanceRunId string `pulumi:"nextMaintenanceRunId"`
	// The URL of the resource in the OCI console.
	OciUrl string `pulumi:"ociUrl"`
	// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the Cloud Exadata Infrastructure.
	Ocid              string `pulumi:"ocid"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The model name of the Cloud Exadata Infrastructure resource.
	Shape string `pulumi:"shape"`
	// The number of storage servers for the Cloud Exadata Infrastructure.
	StorageCount int `pulumi:"storageCount"`
	// The software version of the storage servers (cells) in the Cloud Exadata Infrastructure.
	StorageServerVersion string `pulumi:"storageServerVersion"`
	// A mapping of tags assigned to the Cloud Exadata Infrastructure.
	Tags map[string]string `pulumi:"tags"`
	// The date and time the Cloud Exadata Infrastructure resource was created.
	TimeCreated string `pulumi:"timeCreated"`
	// The total storage allocated to the Cloud Exadata Infrastructure resource, in gigabytes (GB).
	TotalStorageSizeInGbs int `pulumi:"totalStorageSizeInGbs"`
	// The Cloud Exadata Infrastructure Azure zones.
	Zones []string `pulumi:"zones"`
}

func LookupExadataInfrastructureOutput(ctx *pulumi.Context, args LookupExadataInfrastructureOutputArgs, opts ...pulumi.InvokeOption) LookupExadataInfrastructureResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupExadataInfrastructureResultOutput, error) {
			args := v.(LookupExadataInfrastructureArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupExadataInfrastructureResult
			secret, err := ctx.InvokePackageRaw("azure:oracle/getExadataInfrastructure:getExadataInfrastructure", args, &rv, "", opts...)
			if err != nil {
				return LookupExadataInfrastructureResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupExadataInfrastructureResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupExadataInfrastructureResultOutput), nil
			}
			return output, nil
		}).(LookupExadataInfrastructureResultOutput)
}

// A collection of arguments for invoking getExadataInfrastructure.
type LookupExadataInfrastructureOutputArgs struct {
	// The name of this Cloud Exadata Infrastructure.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Resource Group where the Cloud Exadata Infrastructure exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupExadataInfrastructureOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExadataInfrastructureArgs)(nil)).Elem()
}

// A collection of values returned by getExadataInfrastructure.
type LookupExadataInfrastructureResultOutput struct{ *pulumi.OutputState }

func (LookupExadataInfrastructureResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExadataInfrastructureResult)(nil)).Elem()
}

func (o LookupExadataInfrastructureResultOutput) ToLookupExadataInfrastructureResultOutput() LookupExadataInfrastructureResultOutput {
	return o
}

func (o LookupExadataInfrastructureResultOutput) ToLookupExadataInfrastructureResultOutputWithContext(ctx context.Context) LookupExadataInfrastructureResultOutput {
	return o
}

// The requested number of additional storage servers activated for the Cloud Exadata Infrastructure.
func (o LookupExadataInfrastructureResultOutput) ActivatedStorageCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) int { return v.ActivatedStorageCount }).(pulumi.IntOutput)
}

// The requested number of additional storage servers for the Cloud Exadata Infrastructure.
func (o LookupExadataInfrastructureResultOutput) AdditionalStorageCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) int { return v.AdditionalStorageCount }).(pulumi.IntOutput)
}

// The available storage can be allocated to the Cloud Exadata Infrastructure resource, in gigabytes (GB).
func (o LookupExadataInfrastructureResultOutput) AvailableStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) int { return v.AvailableStorageSizeInGbs }).(pulumi.IntOutput)
}

// The number of compute servers for the Cloud Exadata Infrastructure.
func (o LookupExadataInfrastructureResultOutput) ComputeCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) int { return v.ComputeCount }).(pulumi.IntOutput)
}

// The total number of CPU cores allocated.
func (o LookupExadataInfrastructureResultOutput) CpuCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) int { return v.CpuCount }).(pulumi.IntOutput)
}

// A `customerContacts` block as defined below.
func (o LookupExadataInfrastructureResultOutput) CustomerContacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) []string { return v.CustomerContacts }).(pulumi.StringArrayOutput)
}

// The data storage size in terabytes of the DATA disk group.
func (o LookupExadataInfrastructureResultOutput) DataStorageSizeInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) float64 { return v.DataStorageSizeInTbs }).(pulumi.Float64Output)
}

// The local node storage allocated in GBs.
func (o LookupExadataInfrastructureResultOutput) DbNodeStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) int { return v.DbNodeStorageSizeInGbs }).(pulumi.IntOutput)
}

// The software version of the database servers (dom0) in the Cloud Exadata Infrastructure.
func (o LookupExadataInfrastructureResultOutput) DbServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) string { return v.DbServerVersion }).(pulumi.StringOutput)
}

// The user-friendly name for the Cloud Exadata Infrastructure resource. The name does not need to be unique.
func (o LookupExadataInfrastructureResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// A `estimatedPatchingTime` block as defined below.
func (o LookupExadataInfrastructureResultOutput) EstimatedPatchingTimes() GetExadataInfrastructureEstimatedPatchingTimeArrayOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) []GetExadataInfrastructureEstimatedPatchingTime {
		return v.EstimatedPatchingTimes
	}).(GetExadataInfrastructureEstimatedPatchingTimeArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupExadataInfrastructureResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) string { return v.Id }).(pulumi.StringOutput)
}

// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
func (o LookupExadataInfrastructureResultOutput) LastMaintenanceRunId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) string { return v.LastMaintenanceRunId }).(pulumi.StringOutput)
}

// Additional information about the current lifecycle state.
func (o LookupExadataInfrastructureResultOutput) LifecycleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) string { return v.LifecycleDetails }).(pulumi.StringOutput)
}

// Cloud Exadata Infrastructure lifecycle state.
func (o LookupExadataInfrastructureResultOutput) LifecycleState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) string { return v.LifecycleState }).(pulumi.StringOutput)
}

// The Azure Region where the Cloud Exadata Infrastructure exists.
func (o LookupExadataInfrastructureResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) string { return v.Location }).(pulumi.StringOutput)
}

// A `maintenanceWindow` block as defined below.
func (o LookupExadataInfrastructureResultOutput) MaintenanceWindows() GetExadataInfrastructureMaintenanceWindowArrayOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) []GetExadataInfrastructureMaintenanceWindow {
		return v.MaintenanceWindows
	}).(GetExadataInfrastructureMaintenanceWindowArrayOutput)
}

// The total number of CPU cores available.
func (o LookupExadataInfrastructureResultOutput) MaxCpuCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) int { return v.MaxCpuCount }).(pulumi.IntOutput)
}

// The total available DATA disk group size.
func (o LookupExadataInfrastructureResultOutput) MaxDataStorageInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) float64 { return v.MaxDataStorageInTbs }).(pulumi.Float64Output)
}

// The total local node storage available in GBs.
func (o LookupExadataInfrastructureResultOutput) MaxDbNodeStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) int { return v.MaxDbNodeStorageSizeInGbs }).(pulumi.IntOutput)
}

// The total memory available in GBs.
func (o LookupExadataInfrastructureResultOutput) MaxMemoryInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) int { return v.MaxMemoryInGbs }).(pulumi.IntOutput)
}

// The memory allocated in GBs.
func (o LookupExadataInfrastructureResultOutput) MemorySizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) int { return v.MemorySizeInGbs }).(pulumi.IntOutput)
}

// The monthly software version of the database servers (dom0) in the Cloud Exadata Infrastructure.
func (o LookupExadataInfrastructureResultOutput) MonthlyDbServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) string { return v.MonthlyDbServerVersion }).(pulumi.StringOutput)
}

// The monthly software version of the storage servers (cells) in the Cloud Exadata Infrastructure.
func (o LookupExadataInfrastructureResultOutput) MonthlyStorageServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) string { return v.MonthlyStorageServerVersion }).(pulumi.StringOutput)
}

func (o LookupExadataInfrastructureResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) string { return v.Name }).(pulumi.StringOutput)
}

// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
func (o LookupExadataInfrastructureResultOutput) NextMaintenanceRunId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) string { return v.NextMaintenanceRunId }).(pulumi.StringOutput)
}

// The URL of the resource in the OCI console.
func (o LookupExadataInfrastructureResultOutput) OciUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) string { return v.OciUrl }).(pulumi.StringOutput)
}

// The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the Cloud Exadata Infrastructure.
func (o LookupExadataInfrastructureResultOutput) Ocid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) string { return v.Ocid }).(pulumi.StringOutput)
}

func (o LookupExadataInfrastructureResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The model name of the Cloud Exadata Infrastructure resource.
func (o LookupExadataInfrastructureResultOutput) Shape() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) string { return v.Shape }).(pulumi.StringOutput)
}

// The number of storage servers for the Cloud Exadata Infrastructure.
func (o LookupExadataInfrastructureResultOutput) StorageCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) int { return v.StorageCount }).(pulumi.IntOutput)
}

// The software version of the storage servers (cells) in the Cloud Exadata Infrastructure.
func (o LookupExadataInfrastructureResultOutput) StorageServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) string { return v.StorageServerVersion }).(pulumi.StringOutput)
}

// A mapping of tags assigned to the Cloud Exadata Infrastructure.
func (o LookupExadataInfrastructureResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The date and time the Cloud Exadata Infrastructure resource was created.
func (o LookupExadataInfrastructureResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The total storage allocated to the Cloud Exadata Infrastructure resource, in gigabytes (GB).
func (o LookupExadataInfrastructureResultOutput) TotalStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) int { return v.TotalStorageSizeInGbs }).(pulumi.IntOutput)
}

// The Cloud Exadata Infrastructure Azure zones.
func (o LookupExadataInfrastructureResultOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupExadataInfrastructureResult) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupExadataInfrastructureResultOutput{})
}
