// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oracle

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an Autonomous Database.
//
// ## Import
//
// Autonomous Databases can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:oracle/autonomousDatabase:AutonomousDatabase example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup/providers/Oracle.Database/autonomousDatabases/autonomousDatabases1
// ```
type AutonomousDatabase struct {
	pulumi.CustomResourceState

	// The password must be between `12` and ` 30  `characters long, and must contain at least 1 uppercase, 1 lowercase, and 1 numeric character. It cannot contain the double quote symbol (") or the username "admin", regardless of casing. Changing this forces a new Autonomous Database to be created.
	AdminPassword pulumi.StringOutput `pulumi:"adminPassword"`
	// (Optional) Defines the network access type for the Autonomous Database. If the property is explicitly set to an empty list, it allows secure public access to the database from any IP address. If specific ACL (Access Control List) values are provided, access will be restricted to only the specified IP addresses.
	AllowedIps pulumi.StringArrayOutput `pulumi:"allowedIps"`
	// Indicates if auto scaling is enabled for the Autonomous Database CPU core count. The default value is `true`.
	AutoScalingEnabled pulumi.BoolOutput `pulumi:"autoScalingEnabled"`
	// Indicates if auto scaling is enabled for the Autonomous Database storage. The default value is `false`.
	AutoScalingForStorageEnabled pulumi.BoolOutput `pulumi:"autoScalingForStorageEnabled"`
	// Retention period, in days, for backups.
	BackupRetentionPeriodInDays pulumi.IntOutput `pulumi:"backupRetentionPeriodInDays"`
	// The character set for the autonomous database.  The default is `AL32UTF8`. Allowed values are:  `AL32UTF8`, `AR8ADOS710`, `AR8ADOS720`, `AR8APTEC715`, `AR8ARABICMACS`, `AR8ASMO8X`, `AR8ISO8859P6`, `AR8MSWIN1256`, `AR8MUSSAD768`, `AR8NAFITHA711`, `AR8NAFITHA721`, `AR8SAKHR706`, `AR8SAKHR707`, `AZ8ISO8859P9E`, `BG8MSWIN`, `BG8PC437S`, `BLT8CP921`, `BLT8ISO8859P13`, `BLT8MSWIN1257`, `BLT8PC775`, `BN8BSCII`, `CDN8PC863`, `CEL8ISO8859P14`, `CL8ISO8859P5`, `CL8ISOIR111`, `CL8KOI8R`, `CL8KOI8U`, `CL8MACCYRILLICS`, `CL8MSWIN1251`, `EE8ISO8859P2`, `EE8MACCES`, `EE8MACCROATIANS`, `EE8MSWIN1250`, `EE8PC852`, `EL8DEC`, `EL8ISO8859P7`, `EL8MACGREEKS`, `EL8MSWIN1253`, `EL8PC437S`, `EL8PC851`, `EL8PC869`, `ET8MSWIN923`, `HU8ABMOD`, `HU8CWI2`, `IN8ISCII`, `IS8PC861`, `IW8ISO8859P8`, `IW8MACHEBREWS`, `IW8MSWIN1255`, `IW8PC1507`, `JA16EUC`, `JA16EUCTILDE`, `JA16SJIS`, `JA16SJISTILDE`, `JA16VMS`, `KO16KSC5601`, `KO16KSCCS`, `KO16MSWIN949`, `LA8ISO6937`, `LA8PASSPORT`, `LT8MSWIN921`, `LT8PC772`, `LT8PC774`, `LV8PC1117`, `LV8PC8LR`, `LV8RST104090`, `N8PC865`, `NE8ISO8859P10`, `NEE8ISO8859P4`, `RU8BESTA`, `RU8PC855`, `RU8PC866`, `SE8ISO8859P3`, `TH8MACTHAIS`, `TH8TISASCII`, `TR8DEC`, `TR8MACTURKISHS`, `TR8MSWIN1254`, `TR8PC857`, `US7ASCII`, `US8PC437`, `UTF8`, `VN8MSWIN1258`, `VN8VN3`, `WE8DEC`, `WE8DG`, `WE8ISO8859P1`, `WE8ISO8859P15`, `WE8ISO8859P9`, `WE8MACROMAN8S`, `WE8MSWIN1252`, `WE8NCR4970`, `WE8NEXTSTEP`, `WE8PC850`, `WE8PC858`, `WE8PC860`, `WE8ROMAN8`, `ZHS16CGB231280`, `ZHS16GBK`, `ZHT16BIG5`, `ZHT16CCDC`, `ZHT16DBT`, `ZHT16HKSCS`, `ZHT16MSWIN950`, `ZHT32EUC`, `ZHT32SOPS`, `ZHT32TRIS`. Changing this forces a new Autonomous Database to be created
	CharacterSet pulumi.StringOutput `pulumi:"characterSet"`
	// The compute amount (CPUs) available to the database. Minimum and maximum values depend on the compute model and whether the database is an Autonomous Database Serverless instance or an Autonomous Database on Dedicated Exadata Infrastructure.  For an Autonomous Database Serverless instance, the `ECPU` compute model requires a minimum value of one, for databases in the elastic resource pool and minimum value of two, otherwise. Required when using the `computeModel` parameter. When using `cpuCoreCount` parameter, it is an error to specify computeCount to a non-null value. Providing `computeModel` and `computeCount` is the preferred method for both OCPU and ECPU.
	ComputeCount pulumi.Float64Output `pulumi:"computeCount"`
	// The compute model of the Autonomous Database. This is required if using the `computeCount` parameter. If using `cpuCoreCount` then it is an error to specify `computeModel` to a non-null value. ECPU compute model is the recommended model and OCPU compute model is legacy. Changing this forces a new Autonomous Database to be created.
	ComputeModel     pulumi.StringOutput      `pulumi:"computeModel"`
	CustomerContacts pulumi.StringArrayOutput `pulumi:"customerContacts"`
	// The maximum storage that can be allocated for the database, in terabytes.
	DataStorageSizeInTbs pulumi.IntOutput `pulumi:"dataStorageSizeInTbs"`
	// A valid Oracle Database version for Autonomous Database. Changing this forces a new Autonomous Database to be created.
	DbVersion pulumi.StringOutput `pulumi:"dbVersion"`
	// The Autonomous Database workload type. Changing this forces a new Autonomous Database to be created. The following values are valid:
	// * OLTP - indicates an Autonomous Transaction Processing database
	// * DW - indicates an Autonomous Data Warehouse database
	// * AJD - indicates an Autonomous JSON Database
	// * APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
	DbWorkload pulumi.StringOutput `pulumi:"dbWorkload"`
	// The user-friendly name for the Autonomous Database. The name does not have to be unique. Changing this forces a new Autonomous Database to be created.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The Oracle license model that applies to the Oracle Autonomous Database. Changing this forces a new Autonomous Database to be created. Bring your own license (BYOL) allows you to apply your current on-premises Oracle software licenses to equivalent, highly automated Oracle services in the cloud. License Included allows you to subscribe to new Oracle Database software licenses and the Oracle Database service. Note that when provisioning an [Autonomous Database on dedicated Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html), this attribute must be null. It is already set at the Autonomous Exadata Infrastructure level. When provisioning an [Autonomous Database Serverless] (https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) database, if a value is not specified, the system defaults the value to `BRING_YOUR_OWN_LICENSE`. Bring your own license (BYOL) also allows you to select the DB edition using the optional parameter.
	LicenseModel pulumi.StringOutput `pulumi:"licenseModel"`
	// The Azure Region where the Autonomous Database should exist. Changing this forces a new Autonomous Database to be created.
	Location               pulumi.StringOutput                               `pulumi:"location"`
	LongTermBackupSchedule AutonomousDatabaseLongTermBackupSchedulePtrOutput `pulumi:"longTermBackupSchedule"`
	// Specifies if the Autonomous Database requires mTLS connections. Changing this forces a new Autonomous Database to be created. Default value `false`.
	//
	// > **Note:** `mtlsConnectionRequired`  must be set to `true` for all workload types except 'APEX' when creating a database with public access.
	MtlsConnectionRequired pulumi.BoolOutput `pulumi:"mtlsConnectionRequired"`
	// The name which should be used for this Autonomous Database. Changing this forces a new Autonomous Database to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The national character set for the autonomous database. Changing this forces a new Autonomous Database to be created. The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
	NationalCharacterSet pulumi.StringOutput `pulumi:"nationalCharacterSet"`
	// The name of the Resource Group where the Autonomous Database should exist. Changing this forces a new Autonomous Database to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the resource is associated with. Changing this forces a new Autonomous Database to be created.
	SubnetId pulumi.StringPtrOutput `pulumi:"subnetId"`
	Tags     pulumi.StringMapOutput `pulumi:"tags"`
	// The ID of the vnet associated with the cloud VM cluster. Changing this forces a new Autonomous Database to be created.
	VirtualNetworkId pulumi.StringPtrOutput `pulumi:"virtualNetworkId"`
}

// NewAutonomousDatabase registers a new resource with the given unique name, arguments, and options.
func NewAutonomousDatabase(ctx *pulumi.Context,
	name string, args *AutonomousDatabaseArgs, opts ...pulumi.ResourceOption) (*AutonomousDatabase, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AdminPassword == nil {
		return nil, errors.New("invalid value for required argument 'AdminPassword'")
	}
	if args.AutoScalingEnabled == nil {
		return nil, errors.New("invalid value for required argument 'AutoScalingEnabled'")
	}
	if args.AutoScalingForStorageEnabled == nil {
		return nil, errors.New("invalid value for required argument 'AutoScalingForStorageEnabled'")
	}
	if args.BackupRetentionPeriodInDays == nil {
		return nil, errors.New("invalid value for required argument 'BackupRetentionPeriodInDays'")
	}
	if args.CharacterSet == nil {
		return nil, errors.New("invalid value for required argument 'CharacterSet'")
	}
	if args.ComputeCount == nil {
		return nil, errors.New("invalid value for required argument 'ComputeCount'")
	}
	if args.ComputeModel == nil {
		return nil, errors.New("invalid value for required argument 'ComputeModel'")
	}
	if args.DataStorageSizeInTbs == nil {
		return nil, errors.New("invalid value for required argument 'DataStorageSizeInTbs'")
	}
	if args.DbVersion == nil {
		return nil, errors.New("invalid value for required argument 'DbVersion'")
	}
	if args.DbWorkload == nil {
		return nil, errors.New("invalid value for required argument 'DbWorkload'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.LicenseModel == nil {
		return nil, errors.New("invalid value for required argument 'LicenseModel'")
	}
	if args.MtlsConnectionRequired == nil {
		return nil, errors.New("invalid value for required argument 'MtlsConnectionRequired'")
	}
	if args.NationalCharacterSet == nil {
		return nil, errors.New("invalid value for required argument 'NationalCharacterSet'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.AdminPassword != nil {
		args.AdminPassword = pulumi.ToSecret(args.AdminPassword).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"adminPassword",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AutonomousDatabase
	err := ctx.RegisterResource("azure:oracle/autonomousDatabase:AutonomousDatabase", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAutonomousDatabase gets an existing AutonomousDatabase resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAutonomousDatabase(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AutonomousDatabaseState, opts ...pulumi.ResourceOption) (*AutonomousDatabase, error) {
	var resource AutonomousDatabase
	err := ctx.ReadResource("azure:oracle/autonomousDatabase:AutonomousDatabase", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AutonomousDatabase resources.
type autonomousDatabaseState struct {
	// The password must be between `12` and ` 30  `characters long, and must contain at least 1 uppercase, 1 lowercase, and 1 numeric character. It cannot contain the double quote symbol (") or the username "admin", regardless of casing. Changing this forces a new Autonomous Database to be created.
	AdminPassword *string `pulumi:"adminPassword"`
	// (Optional) Defines the network access type for the Autonomous Database. If the property is explicitly set to an empty list, it allows secure public access to the database from any IP address. If specific ACL (Access Control List) values are provided, access will be restricted to only the specified IP addresses.
	AllowedIps []string `pulumi:"allowedIps"`
	// Indicates if auto scaling is enabled for the Autonomous Database CPU core count. The default value is `true`.
	AutoScalingEnabled *bool `pulumi:"autoScalingEnabled"`
	// Indicates if auto scaling is enabled for the Autonomous Database storage. The default value is `false`.
	AutoScalingForStorageEnabled *bool `pulumi:"autoScalingForStorageEnabled"`
	// Retention period, in days, for backups.
	BackupRetentionPeriodInDays *int `pulumi:"backupRetentionPeriodInDays"`
	// The character set for the autonomous database.  The default is `AL32UTF8`. Allowed values are:  `AL32UTF8`, `AR8ADOS710`, `AR8ADOS720`, `AR8APTEC715`, `AR8ARABICMACS`, `AR8ASMO8X`, `AR8ISO8859P6`, `AR8MSWIN1256`, `AR8MUSSAD768`, `AR8NAFITHA711`, `AR8NAFITHA721`, `AR8SAKHR706`, `AR8SAKHR707`, `AZ8ISO8859P9E`, `BG8MSWIN`, `BG8PC437S`, `BLT8CP921`, `BLT8ISO8859P13`, `BLT8MSWIN1257`, `BLT8PC775`, `BN8BSCII`, `CDN8PC863`, `CEL8ISO8859P14`, `CL8ISO8859P5`, `CL8ISOIR111`, `CL8KOI8R`, `CL8KOI8U`, `CL8MACCYRILLICS`, `CL8MSWIN1251`, `EE8ISO8859P2`, `EE8MACCES`, `EE8MACCROATIANS`, `EE8MSWIN1250`, `EE8PC852`, `EL8DEC`, `EL8ISO8859P7`, `EL8MACGREEKS`, `EL8MSWIN1253`, `EL8PC437S`, `EL8PC851`, `EL8PC869`, `ET8MSWIN923`, `HU8ABMOD`, `HU8CWI2`, `IN8ISCII`, `IS8PC861`, `IW8ISO8859P8`, `IW8MACHEBREWS`, `IW8MSWIN1255`, `IW8PC1507`, `JA16EUC`, `JA16EUCTILDE`, `JA16SJIS`, `JA16SJISTILDE`, `JA16VMS`, `KO16KSC5601`, `KO16KSCCS`, `KO16MSWIN949`, `LA8ISO6937`, `LA8PASSPORT`, `LT8MSWIN921`, `LT8PC772`, `LT8PC774`, `LV8PC1117`, `LV8PC8LR`, `LV8RST104090`, `N8PC865`, `NE8ISO8859P10`, `NEE8ISO8859P4`, `RU8BESTA`, `RU8PC855`, `RU8PC866`, `SE8ISO8859P3`, `TH8MACTHAIS`, `TH8TISASCII`, `TR8DEC`, `TR8MACTURKISHS`, `TR8MSWIN1254`, `TR8PC857`, `US7ASCII`, `US8PC437`, `UTF8`, `VN8MSWIN1258`, `VN8VN3`, `WE8DEC`, `WE8DG`, `WE8ISO8859P1`, `WE8ISO8859P15`, `WE8ISO8859P9`, `WE8MACROMAN8S`, `WE8MSWIN1252`, `WE8NCR4970`, `WE8NEXTSTEP`, `WE8PC850`, `WE8PC858`, `WE8PC860`, `WE8ROMAN8`, `ZHS16CGB231280`, `ZHS16GBK`, `ZHT16BIG5`, `ZHT16CCDC`, `ZHT16DBT`, `ZHT16HKSCS`, `ZHT16MSWIN950`, `ZHT32EUC`, `ZHT32SOPS`, `ZHT32TRIS`. Changing this forces a new Autonomous Database to be created
	CharacterSet *string `pulumi:"characterSet"`
	// The compute amount (CPUs) available to the database. Minimum and maximum values depend on the compute model and whether the database is an Autonomous Database Serverless instance or an Autonomous Database on Dedicated Exadata Infrastructure.  For an Autonomous Database Serverless instance, the `ECPU` compute model requires a minimum value of one, for databases in the elastic resource pool and minimum value of two, otherwise. Required when using the `computeModel` parameter. When using `cpuCoreCount` parameter, it is an error to specify computeCount to a non-null value. Providing `computeModel` and `computeCount` is the preferred method for both OCPU and ECPU.
	ComputeCount *float64 `pulumi:"computeCount"`
	// The compute model of the Autonomous Database. This is required if using the `computeCount` parameter. If using `cpuCoreCount` then it is an error to specify `computeModel` to a non-null value. ECPU compute model is the recommended model and OCPU compute model is legacy. Changing this forces a new Autonomous Database to be created.
	ComputeModel     *string  `pulumi:"computeModel"`
	CustomerContacts []string `pulumi:"customerContacts"`
	// The maximum storage that can be allocated for the database, in terabytes.
	DataStorageSizeInTbs *int `pulumi:"dataStorageSizeInTbs"`
	// A valid Oracle Database version for Autonomous Database. Changing this forces a new Autonomous Database to be created.
	DbVersion *string `pulumi:"dbVersion"`
	// The Autonomous Database workload type. Changing this forces a new Autonomous Database to be created. The following values are valid:
	// * OLTP - indicates an Autonomous Transaction Processing database
	// * DW - indicates an Autonomous Data Warehouse database
	// * AJD - indicates an Autonomous JSON Database
	// * APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
	DbWorkload *string `pulumi:"dbWorkload"`
	// The user-friendly name for the Autonomous Database. The name does not have to be unique. Changing this forces a new Autonomous Database to be created.
	DisplayName *string `pulumi:"displayName"`
	// The Oracle license model that applies to the Oracle Autonomous Database. Changing this forces a new Autonomous Database to be created. Bring your own license (BYOL) allows you to apply your current on-premises Oracle software licenses to equivalent, highly automated Oracle services in the cloud. License Included allows you to subscribe to new Oracle Database software licenses and the Oracle Database service. Note that when provisioning an [Autonomous Database on dedicated Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html), this attribute must be null. It is already set at the Autonomous Exadata Infrastructure level. When provisioning an [Autonomous Database Serverless] (https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) database, if a value is not specified, the system defaults the value to `BRING_YOUR_OWN_LICENSE`. Bring your own license (BYOL) also allows you to select the DB edition using the optional parameter.
	LicenseModel *string `pulumi:"licenseModel"`
	// The Azure Region where the Autonomous Database should exist. Changing this forces a new Autonomous Database to be created.
	Location               *string                                   `pulumi:"location"`
	LongTermBackupSchedule *AutonomousDatabaseLongTermBackupSchedule `pulumi:"longTermBackupSchedule"`
	// Specifies if the Autonomous Database requires mTLS connections. Changing this forces a new Autonomous Database to be created. Default value `false`.
	//
	// > **Note:** `mtlsConnectionRequired`  must be set to `true` for all workload types except 'APEX' when creating a database with public access.
	MtlsConnectionRequired *bool `pulumi:"mtlsConnectionRequired"`
	// The name which should be used for this Autonomous Database. Changing this forces a new Autonomous Database to be created.
	Name *string `pulumi:"name"`
	// The national character set for the autonomous database. Changing this forces a new Autonomous Database to be created. The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
	NationalCharacterSet *string `pulumi:"nationalCharacterSet"`
	// The name of the Resource Group where the Autonomous Database should exist. Changing this forces a new Autonomous Database to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the resource is associated with. Changing this forces a new Autonomous Database to be created.
	SubnetId *string           `pulumi:"subnetId"`
	Tags     map[string]string `pulumi:"tags"`
	// The ID of the vnet associated with the cloud VM cluster. Changing this forces a new Autonomous Database to be created.
	VirtualNetworkId *string `pulumi:"virtualNetworkId"`
}

type AutonomousDatabaseState struct {
	// The password must be between `12` and ` 30  `characters long, and must contain at least 1 uppercase, 1 lowercase, and 1 numeric character. It cannot contain the double quote symbol (") or the username "admin", regardless of casing. Changing this forces a new Autonomous Database to be created.
	AdminPassword pulumi.StringPtrInput
	// (Optional) Defines the network access type for the Autonomous Database. If the property is explicitly set to an empty list, it allows secure public access to the database from any IP address. If specific ACL (Access Control List) values are provided, access will be restricted to only the specified IP addresses.
	AllowedIps pulumi.StringArrayInput
	// Indicates if auto scaling is enabled for the Autonomous Database CPU core count. The default value is `true`.
	AutoScalingEnabled pulumi.BoolPtrInput
	// Indicates if auto scaling is enabled for the Autonomous Database storage. The default value is `false`.
	AutoScalingForStorageEnabled pulumi.BoolPtrInput
	// Retention period, in days, for backups.
	BackupRetentionPeriodInDays pulumi.IntPtrInput
	// The character set for the autonomous database.  The default is `AL32UTF8`. Allowed values are:  `AL32UTF8`, `AR8ADOS710`, `AR8ADOS720`, `AR8APTEC715`, `AR8ARABICMACS`, `AR8ASMO8X`, `AR8ISO8859P6`, `AR8MSWIN1256`, `AR8MUSSAD768`, `AR8NAFITHA711`, `AR8NAFITHA721`, `AR8SAKHR706`, `AR8SAKHR707`, `AZ8ISO8859P9E`, `BG8MSWIN`, `BG8PC437S`, `BLT8CP921`, `BLT8ISO8859P13`, `BLT8MSWIN1257`, `BLT8PC775`, `BN8BSCII`, `CDN8PC863`, `CEL8ISO8859P14`, `CL8ISO8859P5`, `CL8ISOIR111`, `CL8KOI8R`, `CL8KOI8U`, `CL8MACCYRILLICS`, `CL8MSWIN1251`, `EE8ISO8859P2`, `EE8MACCES`, `EE8MACCROATIANS`, `EE8MSWIN1250`, `EE8PC852`, `EL8DEC`, `EL8ISO8859P7`, `EL8MACGREEKS`, `EL8MSWIN1253`, `EL8PC437S`, `EL8PC851`, `EL8PC869`, `ET8MSWIN923`, `HU8ABMOD`, `HU8CWI2`, `IN8ISCII`, `IS8PC861`, `IW8ISO8859P8`, `IW8MACHEBREWS`, `IW8MSWIN1255`, `IW8PC1507`, `JA16EUC`, `JA16EUCTILDE`, `JA16SJIS`, `JA16SJISTILDE`, `JA16VMS`, `KO16KSC5601`, `KO16KSCCS`, `KO16MSWIN949`, `LA8ISO6937`, `LA8PASSPORT`, `LT8MSWIN921`, `LT8PC772`, `LT8PC774`, `LV8PC1117`, `LV8PC8LR`, `LV8RST104090`, `N8PC865`, `NE8ISO8859P10`, `NEE8ISO8859P4`, `RU8BESTA`, `RU8PC855`, `RU8PC866`, `SE8ISO8859P3`, `TH8MACTHAIS`, `TH8TISASCII`, `TR8DEC`, `TR8MACTURKISHS`, `TR8MSWIN1254`, `TR8PC857`, `US7ASCII`, `US8PC437`, `UTF8`, `VN8MSWIN1258`, `VN8VN3`, `WE8DEC`, `WE8DG`, `WE8ISO8859P1`, `WE8ISO8859P15`, `WE8ISO8859P9`, `WE8MACROMAN8S`, `WE8MSWIN1252`, `WE8NCR4970`, `WE8NEXTSTEP`, `WE8PC850`, `WE8PC858`, `WE8PC860`, `WE8ROMAN8`, `ZHS16CGB231280`, `ZHS16GBK`, `ZHT16BIG5`, `ZHT16CCDC`, `ZHT16DBT`, `ZHT16HKSCS`, `ZHT16MSWIN950`, `ZHT32EUC`, `ZHT32SOPS`, `ZHT32TRIS`. Changing this forces a new Autonomous Database to be created
	CharacterSet pulumi.StringPtrInput
	// The compute amount (CPUs) available to the database. Minimum and maximum values depend on the compute model and whether the database is an Autonomous Database Serverless instance or an Autonomous Database on Dedicated Exadata Infrastructure.  For an Autonomous Database Serverless instance, the `ECPU` compute model requires a minimum value of one, for databases in the elastic resource pool and minimum value of two, otherwise. Required when using the `computeModel` parameter. When using `cpuCoreCount` parameter, it is an error to specify computeCount to a non-null value. Providing `computeModel` and `computeCount` is the preferred method for both OCPU and ECPU.
	ComputeCount pulumi.Float64PtrInput
	// The compute model of the Autonomous Database. This is required if using the `computeCount` parameter. If using `cpuCoreCount` then it is an error to specify `computeModel` to a non-null value. ECPU compute model is the recommended model and OCPU compute model is legacy. Changing this forces a new Autonomous Database to be created.
	ComputeModel     pulumi.StringPtrInput
	CustomerContacts pulumi.StringArrayInput
	// The maximum storage that can be allocated for the database, in terabytes.
	DataStorageSizeInTbs pulumi.IntPtrInput
	// A valid Oracle Database version for Autonomous Database. Changing this forces a new Autonomous Database to be created.
	DbVersion pulumi.StringPtrInput
	// The Autonomous Database workload type. Changing this forces a new Autonomous Database to be created. The following values are valid:
	// * OLTP - indicates an Autonomous Transaction Processing database
	// * DW - indicates an Autonomous Data Warehouse database
	// * AJD - indicates an Autonomous JSON Database
	// * APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
	DbWorkload pulumi.StringPtrInput
	// The user-friendly name for the Autonomous Database. The name does not have to be unique. Changing this forces a new Autonomous Database to be created.
	DisplayName pulumi.StringPtrInput
	// The Oracle license model that applies to the Oracle Autonomous Database. Changing this forces a new Autonomous Database to be created. Bring your own license (BYOL) allows you to apply your current on-premises Oracle software licenses to equivalent, highly automated Oracle services in the cloud. License Included allows you to subscribe to new Oracle Database software licenses and the Oracle Database service. Note that when provisioning an [Autonomous Database on dedicated Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html), this attribute must be null. It is already set at the Autonomous Exadata Infrastructure level. When provisioning an [Autonomous Database Serverless] (https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) database, if a value is not specified, the system defaults the value to `BRING_YOUR_OWN_LICENSE`. Bring your own license (BYOL) also allows you to select the DB edition using the optional parameter.
	LicenseModel pulumi.StringPtrInput
	// The Azure Region where the Autonomous Database should exist. Changing this forces a new Autonomous Database to be created.
	Location               pulumi.StringPtrInput
	LongTermBackupSchedule AutonomousDatabaseLongTermBackupSchedulePtrInput
	// Specifies if the Autonomous Database requires mTLS connections. Changing this forces a new Autonomous Database to be created. Default value `false`.
	//
	// > **Note:** `mtlsConnectionRequired`  must be set to `true` for all workload types except 'APEX' when creating a database with public access.
	MtlsConnectionRequired pulumi.BoolPtrInput
	// The name which should be used for this Autonomous Database. Changing this forces a new Autonomous Database to be created.
	Name pulumi.StringPtrInput
	// The national character set for the autonomous database. Changing this forces a new Autonomous Database to be created. The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
	NationalCharacterSet pulumi.StringPtrInput
	// The name of the Resource Group where the Autonomous Database should exist. Changing this forces a new Autonomous Database to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the resource is associated with. Changing this forces a new Autonomous Database to be created.
	SubnetId pulumi.StringPtrInput
	Tags     pulumi.StringMapInput
	// The ID of the vnet associated with the cloud VM cluster. Changing this forces a new Autonomous Database to be created.
	VirtualNetworkId pulumi.StringPtrInput
}

func (AutonomousDatabaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*autonomousDatabaseState)(nil)).Elem()
}

type autonomousDatabaseArgs struct {
	// The password must be between `12` and ` 30  `characters long, and must contain at least 1 uppercase, 1 lowercase, and 1 numeric character. It cannot contain the double quote symbol (") or the username "admin", regardless of casing. Changing this forces a new Autonomous Database to be created.
	AdminPassword string `pulumi:"adminPassword"`
	// (Optional) Defines the network access type for the Autonomous Database. If the property is explicitly set to an empty list, it allows secure public access to the database from any IP address. If specific ACL (Access Control List) values are provided, access will be restricted to only the specified IP addresses.
	AllowedIps []string `pulumi:"allowedIps"`
	// Indicates if auto scaling is enabled for the Autonomous Database CPU core count. The default value is `true`.
	AutoScalingEnabled bool `pulumi:"autoScalingEnabled"`
	// Indicates if auto scaling is enabled for the Autonomous Database storage. The default value is `false`.
	AutoScalingForStorageEnabled bool `pulumi:"autoScalingForStorageEnabled"`
	// Retention period, in days, for backups.
	BackupRetentionPeriodInDays int `pulumi:"backupRetentionPeriodInDays"`
	// The character set for the autonomous database.  The default is `AL32UTF8`. Allowed values are:  `AL32UTF8`, `AR8ADOS710`, `AR8ADOS720`, `AR8APTEC715`, `AR8ARABICMACS`, `AR8ASMO8X`, `AR8ISO8859P6`, `AR8MSWIN1256`, `AR8MUSSAD768`, `AR8NAFITHA711`, `AR8NAFITHA721`, `AR8SAKHR706`, `AR8SAKHR707`, `AZ8ISO8859P9E`, `BG8MSWIN`, `BG8PC437S`, `BLT8CP921`, `BLT8ISO8859P13`, `BLT8MSWIN1257`, `BLT8PC775`, `BN8BSCII`, `CDN8PC863`, `CEL8ISO8859P14`, `CL8ISO8859P5`, `CL8ISOIR111`, `CL8KOI8R`, `CL8KOI8U`, `CL8MACCYRILLICS`, `CL8MSWIN1251`, `EE8ISO8859P2`, `EE8MACCES`, `EE8MACCROATIANS`, `EE8MSWIN1250`, `EE8PC852`, `EL8DEC`, `EL8ISO8859P7`, `EL8MACGREEKS`, `EL8MSWIN1253`, `EL8PC437S`, `EL8PC851`, `EL8PC869`, `ET8MSWIN923`, `HU8ABMOD`, `HU8CWI2`, `IN8ISCII`, `IS8PC861`, `IW8ISO8859P8`, `IW8MACHEBREWS`, `IW8MSWIN1255`, `IW8PC1507`, `JA16EUC`, `JA16EUCTILDE`, `JA16SJIS`, `JA16SJISTILDE`, `JA16VMS`, `KO16KSC5601`, `KO16KSCCS`, `KO16MSWIN949`, `LA8ISO6937`, `LA8PASSPORT`, `LT8MSWIN921`, `LT8PC772`, `LT8PC774`, `LV8PC1117`, `LV8PC8LR`, `LV8RST104090`, `N8PC865`, `NE8ISO8859P10`, `NEE8ISO8859P4`, `RU8BESTA`, `RU8PC855`, `RU8PC866`, `SE8ISO8859P3`, `TH8MACTHAIS`, `TH8TISASCII`, `TR8DEC`, `TR8MACTURKISHS`, `TR8MSWIN1254`, `TR8PC857`, `US7ASCII`, `US8PC437`, `UTF8`, `VN8MSWIN1258`, `VN8VN3`, `WE8DEC`, `WE8DG`, `WE8ISO8859P1`, `WE8ISO8859P15`, `WE8ISO8859P9`, `WE8MACROMAN8S`, `WE8MSWIN1252`, `WE8NCR4970`, `WE8NEXTSTEP`, `WE8PC850`, `WE8PC858`, `WE8PC860`, `WE8ROMAN8`, `ZHS16CGB231280`, `ZHS16GBK`, `ZHT16BIG5`, `ZHT16CCDC`, `ZHT16DBT`, `ZHT16HKSCS`, `ZHT16MSWIN950`, `ZHT32EUC`, `ZHT32SOPS`, `ZHT32TRIS`. Changing this forces a new Autonomous Database to be created
	CharacterSet string `pulumi:"characterSet"`
	// The compute amount (CPUs) available to the database. Minimum and maximum values depend on the compute model and whether the database is an Autonomous Database Serverless instance or an Autonomous Database on Dedicated Exadata Infrastructure.  For an Autonomous Database Serverless instance, the `ECPU` compute model requires a minimum value of one, for databases in the elastic resource pool and minimum value of two, otherwise. Required when using the `computeModel` parameter. When using `cpuCoreCount` parameter, it is an error to specify computeCount to a non-null value. Providing `computeModel` and `computeCount` is the preferred method for both OCPU and ECPU.
	ComputeCount float64 `pulumi:"computeCount"`
	// The compute model of the Autonomous Database. This is required if using the `computeCount` parameter. If using `cpuCoreCount` then it is an error to specify `computeModel` to a non-null value. ECPU compute model is the recommended model and OCPU compute model is legacy. Changing this forces a new Autonomous Database to be created.
	ComputeModel     string   `pulumi:"computeModel"`
	CustomerContacts []string `pulumi:"customerContacts"`
	// The maximum storage that can be allocated for the database, in terabytes.
	DataStorageSizeInTbs int `pulumi:"dataStorageSizeInTbs"`
	// A valid Oracle Database version for Autonomous Database. Changing this forces a new Autonomous Database to be created.
	DbVersion string `pulumi:"dbVersion"`
	// The Autonomous Database workload type. Changing this forces a new Autonomous Database to be created. The following values are valid:
	// * OLTP - indicates an Autonomous Transaction Processing database
	// * DW - indicates an Autonomous Data Warehouse database
	// * AJD - indicates an Autonomous JSON Database
	// * APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
	DbWorkload string `pulumi:"dbWorkload"`
	// The user-friendly name for the Autonomous Database. The name does not have to be unique. Changing this forces a new Autonomous Database to be created.
	DisplayName string `pulumi:"displayName"`
	// The Oracle license model that applies to the Oracle Autonomous Database. Changing this forces a new Autonomous Database to be created. Bring your own license (BYOL) allows you to apply your current on-premises Oracle software licenses to equivalent, highly automated Oracle services in the cloud. License Included allows you to subscribe to new Oracle Database software licenses and the Oracle Database service. Note that when provisioning an [Autonomous Database on dedicated Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html), this attribute must be null. It is already set at the Autonomous Exadata Infrastructure level. When provisioning an [Autonomous Database Serverless] (https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) database, if a value is not specified, the system defaults the value to `BRING_YOUR_OWN_LICENSE`. Bring your own license (BYOL) also allows you to select the DB edition using the optional parameter.
	LicenseModel string `pulumi:"licenseModel"`
	// The Azure Region where the Autonomous Database should exist. Changing this forces a new Autonomous Database to be created.
	Location               *string                                   `pulumi:"location"`
	LongTermBackupSchedule *AutonomousDatabaseLongTermBackupSchedule `pulumi:"longTermBackupSchedule"`
	// Specifies if the Autonomous Database requires mTLS connections. Changing this forces a new Autonomous Database to be created. Default value `false`.
	//
	// > **Note:** `mtlsConnectionRequired`  must be set to `true` for all workload types except 'APEX' when creating a database with public access.
	MtlsConnectionRequired bool `pulumi:"mtlsConnectionRequired"`
	// The name which should be used for this Autonomous Database. Changing this forces a new Autonomous Database to be created.
	Name *string `pulumi:"name"`
	// The national character set for the autonomous database. Changing this forces a new Autonomous Database to be created. The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
	NationalCharacterSet string `pulumi:"nationalCharacterSet"`
	// The name of the Resource Group where the Autonomous Database should exist. Changing this forces a new Autonomous Database to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the resource is associated with. Changing this forces a new Autonomous Database to be created.
	SubnetId *string           `pulumi:"subnetId"`
	Tags     map[string]string `pulumi:"tags"`
	// The ID of the vnet associated with the cloud VM cluster. Changing this forces a new Autonomous Database to be created.
	VirtualNetworkId *string `pulumi:"virtualNetworkId"`
}

// The set of arguments for constructing a AutonomousDatabase resource.
type AutonomousDatabaseArgs struct {
	// The password must be between `12` and ` 30  `characters long, and must contain at least 1 uppercase, 1 lowercase, and 1 numeric character. It cannot contain the double quote symbol (") or the username "admin", regardless of casing. Changing this forces a new Autonomous Database to be created.
	AdminPassword pulumi.StringInput
	// (Optional) Defines the network access type for the Autonomous Database. If the property is explicitly set to an empty list, it allows secure public access to the database from any IP address. If specific ACL (Access Control List) values are provided, access will be restricted to only the specified IP addresses.
	AllowedIps pulumi.StringArrayInput
	// Indicates if auto scaling is enabled for the Autonomous Database CPU core count. The default value is `true`.
	AutoScalingEnabled pulumi.BoolInput
	// Indicates if auto scaling is enabled for the Autonomous Database storage. The default value is `false`.
	AutoScalingForStorageEnabled pulumi.BoolInput
	// Retention period, in days, for backups.
	BackupRetentionPeriodInDays pulumi.IntInput
	// The character set for the autonomous database.  The default is `AL32UTF8`. Allowed values are:  `AL32UTF8`, `AR8ADOS710`, `AR8ADOS720`, `AR8APTEC715`, `AR8ARABICMACS`, `AR8ASMO8X`, `AR8ISO8859P6`, `AR8MSWIN1256`, `AR8MUSSAD768`, `AR8NAFITHA711`, `AR8NAFITHA721`, `AR8SAKHR706`, `AR8SAKHR707`, `AZ8ISO8859P9E`, `BG8MSWIN`, `BG8PC437S`, `BLT8CP921`, `BLT8ISO8859P13`, `BLT8MSWIN1257`, `BLT8PC775`, `BN8BSCII`, `CDN8PC863`, `CEL8ISO8859P14`, `CL8ISO8859P5`, `CL8ISOIR111`, `CL8KOI8R`, `CL8KOI8U`, `CL8MACCYRILLICS`, `CL8MSWIN1251`, `EE8ISO8859P2`, `EE8MACCES`, `EE8MACCROATIANS`, `EE8MSWIN1250`, `EE8PC852`, `EL8DEC`, `EL8ISO8859P7`, `EL8MACGREEKS`, `EL8MSWIN1253`, `EL8PC437S`, `EL8PC851`, `EL8PC869`, `ET8MSWIN923`, `HU8ABMOD`, `HU8CWI2`, `IN8ISCII`, `IS8PC861`, `IW8ISO8859P8`, `IW8MACHEBREWS`, `IW8MSWIN1255`, `IW8PC1507`, `JA16EUC`, `JA16EUCTILDE`, `JA16SJIS`, `JA16SJISTILDE`, `JA16VMS`, `KO16KSC5601`, `KO16KSCCS`, `KO16MSWIN949`, `LA8ISO6937`, `LA8PASSPORT`, `LT8MSWIN921`, `LT8PC772`, `LT8PC774`, `LV8PC1117`, `LV8PC8LR`, `LV8RST104090`, `N8PC865`, `NE8ISO8859P10`, `NEE8ISO8859P4`, `RU8BESTA`, `RU8PC855`, `RU8PC866`, `SE8ISO8859P3`, `TH8MACTHAIS`, `TH8TISASCII`, `TR8DEC`, `TR8MACTURKISHS`, `TR8MSWIN1254`, `TR8PC857`, `US7ASCII`, `US8PC437`, `UTF8`, `VN8MSWIN1258`, `VN8VN3`, `WE8DEC`, `WE8DG`, `WE8ISO8859P1`, `WE8ISO8859P15`, `WE8ISO8859P9`, `WE8MACROMAN8S`, `WE8MSWIN1252`, `WE8NCR4970`, `WE8NEXTSTEP`, `WE8PC850`, `WE8PC858`, `WE8PC860`, `WE8ROMAN8`, `ZHS16CGB231280`, `ZHS16GBK`, `ZHT16BIG5`, `ZHT16CCDC`, `ZHT16DBT`, `ZHT16HKSCS`, `ZHT16MSWIN950`, `ZHT32EUC`, `ZHT32SOPS`, `ZHT32TRIS`. Changing this forces a new Autonomous Database to be created
	CharacterSet pulumi.StringInput
	// The compute amount (CPUs) available to the database. Minimum and maximum values depend on the compute model and whether the database is an Autonomous Database Serverless instance or an Autonomous Database on Dedicated Exadata Infrastructure.  For an Autonomous Database Serverless instance, the `ECPU` compute model requires a minimum value of one, for databases in the elastic resource pool and minimum value of two, otherwise. Required when using the `computeModel` parameter. When using `cpuCoreCount` parameter, it is an error to specify computeCount to a non-null value. Providing `computeModel` and `computeCount` is the preferred method for both OCPU and ECPU.
	ComputeCount pulumi.Float64Input
	// The compute model of the Autonomous Database. This is required if using the `computeCount` parameter. If using `cpuCoreCount` then it is an error to specify `computeModel` to a non-null value. ECPU compute model is the recommended model and OCPU compute model is legacy. Changing this forces a new Autonomous Database to be created.
	ComputeModel     pulumi.StringInput
	CustomerContacts pulumi.StringArrayInput
	// The maximum storage that can be allocated for the database, in terabytes.
	DataStorageSizeInTbs pulumi.IntInput
	// A valid Oracle Database version for Autonomous Database. Changing this forces a new Autonomous Database to be created.
	DbVersion pulumi.StringInput
	// The Autonomous Database workload type. Changing this forces a new Autonomous Database to be created. The following values are valid:
	// * OLTP - indicates an Autonomous Transaction Processing database
	// * DW - indicates an Autonomous Data Warehouse database
	// * AJD - indicates an Autonomous JSON Database
	// * APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
	DbWorkload pulumi.StringInput
	// The user-friendly name for the Autonomous Database. The name does not have to be unique. Changing this forces a new Autonomous Database to be created.
	DisplayName pulumi.StringInput
	// The Oracle license model that applies to the Oracle Autonomous Database. Changing this forces a new Autonomous Database to be created. Bring your own license (BYOL) allows you to apply your current on-premises Oracle software licenses to equivalent, highly automated Oracle services in the cloud. License Included allows you to subscribe to new Oracle Database software licenses and the Oracle Database service. Note that when provisioning an [Autonomous Database on dedicated Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html), this attribute must be null. It is already set at the Autonomous Exadata Infrastructure level. When provisioning an [Autonomous Database Serverless] (https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) database, if a value is not specified, the system defaults the value to `BRING_YOUR_OWN_LICENSE`. Bring your own license (BYOL) also allows you to select the DB edition using the optional parameter.
	LicenseModel pulumi.StringInput
	// The Azure Region where the Autonomous Database should exist. Changing this forces a new Autonomous Database to be created.
	Location               pulumi.StringPtrInput
	LongTermBackupSchedule AutonomousDatabaseLongTermBackupSchedulePtrInput
	// Specifies if the Autonomous Database requires mTLS connections. Changing this forces a new Autonomous Database to be created. Default value `false`.
	//
	// > **Note:** `mtlsConnectionRequired`  must be set to `true` for all workload types except 'APEX' when creating a database with public access.
	MtlsConnectionRequired pulumi.BoolInput
	// The name which should be used for this Autonomous Database. Changing this forces a new Autonomous Database to be created.
	Name pulumi.StringPtrInput
	// The national character set for the autonomous database. Changing this forces a new Autonomous Database to be created. The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
	NationalCharacterSet pulumi.StringInput
	// The name of the Resource Group where the Autonomous Database should exist. Changing this forces a new Autonomous Database to be created.
	ResourceGroupName pulumi.StringInput
	// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the resource is associated with. Changing this forces a new Autonomous Database to be created.
	SubnetId pulumi.StringPtrInput
	Tags     pulumi.StringMapInput
	// The ID of the vnet associated with the cloud VM cluster. Changing this forces a new Autonomous Database to be created.
	VirtualNetworkId pulumi.StringPtrInput
}

func (AutonomousDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*autonomousDatabaseArgs)(nil)).Elem()
}

type AutonomousDatabaseInput interface {
	pulumi.Input

	ToAutonomousDatabaseOutput() AutonomousDatabaseOutput
	ToAutonomousDatabaseOutputWithContext(ctx context.Context) AutonomousDatabaseOutput
}

func (*AutonomousDatabase) ElementType() reflect.Type {
	return reflect.TypeOf((**AutonomousDatabase)(nil)).Elem()
}

func (i *AutonomousDatabase) ToAutonomousDatabaseOutput() AutonomousDatabaseOutput {
	return i.ToAutonomousDatabaseOutputWithContext(context.Background())
}

func (i *AutonomousDatabase) ToAutonomousDatabaseOutputWithContext(ctx context.Context) AutonomousDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutonomousDatabaseOutput)
}

// AutonomousDatabaseArrayInput is an input type that accepts AutonomousDatabaseArray and AutonomousDatabaseArrayOutput values.
// You can construct a concrete instance of `AutonomousDatabaseArrayInput` via:
//
//	AutonomousDatabaseArray{ AutonomousDatabaseArgs{...} }
type AutonomousDatabaseArrayInput interface {
	pulumi.Input

	ToAutonomousDatabaseArrayOutput() AutonomousDatabaseArrayOutput
	ToAutonomousDatabaseArrayOutputWithContext(context.Context) AutonomousDatabaseArrayOutput
}

type AutonomousDatabaseArray []AutonomousDatabaseInput

func (AutonomousDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutonomousDatabase)(nil)).Elem()
}

func (i AutonomousDatabaseArray) ToAutonomousDatabaseArrayOutput() AutonomousDatabaseArrayOutput {
	return i.ToAutonomousDatabaseArrayOutputWithContext(context.Background())
}

func (i AutonomousDatabaseArray) ToAutonomousDatabaseArrayOutputWithContext(ctx context.Context) AutonomousDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutonomousDatabaseArrayOutput)
}

// AutonomousDatabaseMapInput is an input type that accepts AutonomousDatabaseMap and AutonomousDatabaseMapOutput values.
// You can construct a concrete instance of `AutonomousDatabaseMapInput` via:
//
//	AutonomousDatabaseMap{ "key": AutonomousDatabaseArgs{...} }
type AutonomousDatabaseMapInput interface {
	pulumi.Input

	ToAutonomousDatabaseMapOutput() AutonomousDatabaseMapOutput
	ToAutonomousDatabaseMapOutputWithContext(context.Context) AutonomousDatabaseMapOutput
}

type AutonomousDatabaseMap map[string]AutonomousDatabaseInput

func (AutonomousDatabaseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutonomousDatabase)(nil)).Elem()
}

func (i AutonomousDatabaseMap) ToAutonomousDatabaseMapOutput() AutonomousDatabaseMapOutput {
	return i.ToAutonomousDatabaseMapOutputWithContext(context.Background())
}

func (i AutonomousDatabaseMap) ToAutonomousDatabaseMapOutputWithContext(ctx context.Context) AutonomousDatabaseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutonomousDatabaseMapOutput)
}

type AutonomousDatabaseOutput struct{ *pulumi.OutputState }

func (AutonomousDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutonomousDatabase)(nil)).Elem()
}

func (o AutonomousDatabaseOutput) ToAutonomousDatabaseOutput() AutonomousDatabaseOutput {
	return o
}

func (o AutonomousDatabaseOutput) ToAutonomousDatabaseOutputWithContext(ctx context.Context) AutonomousDatabaseOutput {
	return o
}

// The password must be between `12` and ` 30  `characters long, and must contain at least 1 uppercase, 1 lowercase, and 1 numeric character. It cannot contain the double quote symbol (") or the username "admin", regardless of casing. Changing this forces a new Autonomous Database to be created.
func (o AutonomousDatabaseOutput) AdminPassword() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabase) pulumi.StringOutput { return v.AdminPassword }).(pulumi.StringOutput)
}

// (Optional) Defines the network access type for the Autonomous Database. If the property is explicitly set to an empty list, it allows secure public access to the database from any IP address. If specific ACL (Access Control List) values are provided, access will be restricted to only the specified IP addresses.
func (o AutonomousDatabaseOutput) AllowedIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AutonomousDatabase) pulumi.StringArrayOutput { return v.AllowedIps }).(pulumi.StringArrayOutput)
}

// Indicates if auto scaling is enabled for the Autonomous Database CPU core count. The default value is `true`.
func (o AutonomousDatabaseOutput) AutoScalingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *AutonomousDatabase) pulumi.BoolOutput { return v.AutoScalingEnabled }).(pulumi.BoolOutput)
}

// Indicates if auto scaling is enabled for the Autonomous Database storage. The default value is `false`.
func (o AutonomousDatabaseOutput) AutoScalingForStorageEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *AutonomousDatabase) pulumi.BoolOutput { return v.AutoScalingForStorageEnabled }).(pulumi.BoolOutput)
}

// Retention period, in days, for backups.
func (o AutonomousDatabaseOutput) BackupRetentionPeriodInDays() pulumi.IntOutput {
	return o.ApplyT(func(v *AutonomousDatabase) pulumi.IntOutput { return v.BackupRetentionPeriodInDays }).(pulumi.IntOutput)
}

// The character set for the autonomous database.  The default is `AL32UTF8`. Allowed values are:  `AL32UTF8`, `AR8ADOS710`, `AR8ADOS720`, `AR8APTEC715`, `AR8ARABICMACS`, `AR8ASMO8X`, `AR8ISO8859P6`, `AR8MSWIN1256`, `AR8MUSSAD768`, `AR8NAFITHA711`, `AR8NAFITHA721`, `AR8SAKHR706`, `AR8SAKHR707`, `AZ8ISO8859P9E`, `BG8MSWIN`, `BG8PC437S`, `BLT8CP921`, `BLT8ISO8859P13`, `BLT8MSWIN1257`, `BLT8PC775`, `BN8BSCII`, `CDN8PC863`, `CEL8ISO8859P14`, `CL8ISO8859P5`, `CL8ISOIR111`, `CL8KOI8R`, `CL8KOI8U`, `CL8MACCYRILLICS`, `CL8MSWIN1251`, `EE8ISO8859P2`, `EE8MACCES`, `EE8MACCROATIANS`, `EE8MSWIN1250`, `EE8PC852`, `EL8DEC`, `EL8ISO8859P7`, `EL8MACGREEKS`, `EL8MSWIN1253`, `EL8PC437S`, `EL8PC851`, `EL8PC869`, `ET8MSWIN923`, `HU8ABMOD`, `HU8CWI2`, `IN8ISCII`, `IS8PC861`, `IW8ISO8859P8`, `IW8MACHEBREWS`, `IW8MSWIN1255`, `IW8PC1507`, `JA16EUC`, `JA16EUCTILDE`, `JA16SJIS`, `JA16SJISTILDE`, `JA16VMS`, `KO16KSC5601`, `KO16KSCCS`, `KO16MSWIN949`, `LA8ISO6937`, `LA8PASSPORT`, `LT8MSWIN921`, `LT8PC772`, `LT8PC774`, `LV8PC1117`, `LV8PC8LR`, `LV8RST104090`, `N8PC865`, `NE8ISO8859P10`, `NEE8ISO8859P4`, `RU8BESTA`, `RU8PC855`, `RU8PC866`, `SE8ISO8859P3`, `TH8MACTHAIS`, `TH8TISASCII`, `TR8DEC`, `TR8MACTURKISHS`, `TR8MSWIN1254`, `TR8PC857`, `US7ASCII`, `US8PC437`, `UTF8`, `VN8MSWIN1258`, `VN8VN3`, `WE8DEC`, `WE8DG`, `WE8ISO8859P1`, `WE8ISO8859P15`, `WE8ISO8859P9`, `WE8MACROMAN8S`, `WE8MSWIN1252`, `WE8NCR4970`, `WE8NEXTSTEP`, `WE8PC850`, `WE8PC858`, `WE8PC860`, `WE8ROMAN8`, `ZHS16CGB231280`, `ZHS16GBK`, `ZHT16BIG5`, `ZHT16CCDC`, `ZHT16DBT`, `ZHT16HKSCS`, `ZHT16MSWIN950`, `ZHT32EUC`, `ZHT32SOPS`, `ZHT32TRIS`. Changing this forces a new Autonomous Database to be created
func (o AutonomousDatabaseOutput) CharacterSet() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabase) pulumi.StringOutput { return v.CharacterSet }).(pulumi.StringOutput)
}

// The compute amount (CPUs) available to the database. Minimum and maximum values depend on the compute model and whether the database is an Autonomous Database Serverless instance or an Autonomous Database on Dedicated Exadata Infrastructure.  For an Autonomous Database Serverless instance, the `ECPU` compute model requires a minimum value of one, for databases in the elastic resource pool and minimum value of two, otherwise. Required when using the `computeModel` parameter. When using `cpuCoreCount` parameter, it is an error to specify computeCount to a non-null value. Providing `computeModel` and `computeCount` is the preferred method for both OCPU and ECPU.
func (o AutonomousDatabaseOutput) ComputeCount() pulumi.Float64Output {
	return o.ApplyT(func(v *AutonomousDatabase) pulumi.Float64Output { return v.ComputeCount }).(pulumi.Float64Output)
}

// The compute model of the Autonomous Database. This is required if using the `computeCount` parameter. If using `cpuCoreCount` then it is an error to specify `computeModel` to a non-null value. ECPU compute model is the recommended model and OCPU compute model is legacy. Changing this forces a new Autonomous Database to be created.
func (o AutonomousDatabaseOutput) ComputeModel() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabase) pulumi.StringOutput { return v.ComputeModel }).(pulumi.StringOutput)
}

func (o AutonomousDatabaseOutput) CustomerContacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AutonomousDatabase) pulumi.StringArrayOutput { return v.CustomerContacts }).(pulumi.StringArrayOutput)
}

// The maximum storage that can be allocated for the database, in terabytes.
func (o AutonomousDatabaseOutput) DataStorageSizeInTbs() pulumi.IntOutput {
	return o.ApplyT(func(v *AutonomousDatabase) pulumi.IntOutput { return v.DataStorageSizeInTbs }).(pulumi.IntOutput)
}

// A valid Oracle Database version for Autonomous Database. Changing this forces a new Autonomous Database to be created.
func (o AutonomousDatabaseOutput) DbVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabase) pulumi.StringOutput { return v.DbVersion }).(pulumi.StringOutput)
}

// The Autonomous Database workload type. Changing this forces a new Autonomous Database to be created. The following values are valid:
// * OLTP - indicates an Autonomous Transaction Processing database
// * DW - indicates an Autonomous Data Warehouse database
// * AJD - indicates an Autonomous JSON Database
// * APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
func (o AutonomousDatabaseOutput) DbWorkload() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabase) pulumi.StringOutput { return v.DbWorkload }).(pulumi.StringOutput)
}

// The user-friendly name for the Autonomous Database. The name does not have to be unique. Changing this forces a new Autonomous Database to be created.
func (o AutonomousDatabaseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabase) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The Oracle license model that applies to the Oracle Autonomous Database. Changing this forces a new Autonomous Database to be created. Bring your own license (BYOL) allows you to apply your current on-premises Oracle software licenses to equivalent, highly automated Oracle services in the cloud. License Included allows you to subscribe to new Oracle Database software licenses and the Oracle Database service. Note that when provisioning an [Autonomous Database on dedicated Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html), this attribute must be null. It is already set at the Autonomous Exadata Infrastructure level. When provisioning an [Autonomous Database Serverless] (https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) database, if a value is not specified, the system defaults the value to `BRING_YOUR_OWN_LICENSE`. Bring your own license (BYOL) also allows you to select the DB edition using the optional parameter.
func (o AutonomousDatabaseOutput) LicenseModel() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabase) pulumi.StringOutput { return v.LicenseModel }).(pulumi.StringOutput)
}

// The Azure Region where the Autonomous Database should exist. Changing this forces a new Autonomous Database to be created.
func (o AutonomousDatabaseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabase) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o AutonomousDatabaseOutput) LongTermBackupSchedule() AutonomousDatabaseLongTermBackupSchedulePtrOutput {
	return o.ApplyT(func(v *AutonomousDatabase) AutonomousDatabaseLongTermBackupSchedulePtrOutput {
		return v.LongTermBackupSchedule
	}).(AutonomousDatabaseLongTermBackupSchedulePtrOutput)
}

// Specifies if the Autonomous Database requires mTLS connections. Changing this forces a new Autonomous Database to be created. Default value `false`.
//
// > **Note:** `mtlsConnectionRequired`  must be set to `true` for all workload types except 'APEX' when creating a database with public access.
func (o AutonomousDatabaseOutput) MtlsConnectionRequired() pulumi.BoolOutput {
	return o.ApplyT(func(v *AutonomousDatabase) pulumi.BoolOutput { return v.MtlsConnectionRequired }).(pulumi.BoolOutput)
}

// The name which should be used for this Autonomous Database. Changing this forces a new Autonomous Database to be created.
func (o AutonomousDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabase) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The national character set for the autonomous database. Changing this forces a new Autonomous Database to be created. The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
func (o AutonomousDatabaseOutput) NationalCharacterSet() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabase) pulumi.StringOutput { return v.NationalCharacterSet }).(pulumi.StringOutput)
}

// The name of the Resource Group where the Autonomous Database should exist. Changing this forces a new Autonomous Database to be created.
func (o AutonomousDatabaseOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabase) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the resource is associated with. Changing this forces a new Autonomous Database to be created.
func (o AutonomousDatabaseOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutonomousDatabase) pulumi.StringPtrOutput { return v.SubnetId }).(pulumi.StringPtrOutput)
}

func (o AutonomousDatabaseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AutonomousDatabase) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The ID of the vnet associated with the cloud VM cluster. Changing this forces a new Autonomous Database to be created.
func (o AutonomousDatabaseOutput) VirtualNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutonomousDatabase) pulumi.StringPtrOutput { return v.VirtualNetworkId }).(pulumi.StringPtrOutput)
}

type AutonomousDatabaseArrayOutput struct{ *pulumi.OutputState }

func (AutonomousDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutonomousDatabase)(nil)).Elem()
}

func (o AutonomousDatabaseArrayOutput) ToAutonomousDatabaseArrayOutput() AutonomousDatabaseArrayOutput {
	return o
}

func (o AutonomousDatabaseArrayOutput) ToAutonomousDatabaseArrayOutputWithContext(ctx context.Context) AutonomousDatabaseArrayOutput {
	return o
}

func (o AutonomousDatabaseArrayOutput) Index(i pulumi.IntInput) AutonomousDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AutonomousDatabase {
		return vs[0].([]*AutonomousDatabase)[vs[1].(int)]
	}).(AutonomousDatabaseOutput)
}

type AutonomousDatabaseMapOutput struct{ *pulumi.OutputState }

func (AutonomousDatabaseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutonomousDatabase)(nil)).Elem()
}

func (o AutonomousDatabaseMapOutput) ToAutonomousDatabaseMapOutput() AutonomousDatabaseMapOutput {
	return o
}

func (o AutonomousDatabaseMapOutput) ToAutonomousDatabaseMapOutputWithContext(ctx context.Context) AutonomousDatabaseMapOutput {
	return o
}

func (o AutonomousDatabaseMapOutput) MapIndex(k pulumi.StringInput) AutonomousDatabaseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AutonomousDatabase {
		return vs[0].(map[string]*AutonomousDatabase)[vs[1].(string)]
	}).(AutonomousDatabaseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AutonomousDatabaseInput)(nil)).Elem(), &AutonomousDatabase{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutonomousDatabaseArrayInput)(nil)).Elem(), AutonomousDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutonomousDatabaseMapInput)(nil)).Elem(), AutonomousDatabaseMap{})
	pulumi.RegisterOutputType(AutonomousDatabaseOutput{})
	pulumi.RegisterOutputType(AutonomousDatabaseArrayOutput{})
	pulumi.RegisterOutputType(AutonomousDatabaseMapOutput{})
}
