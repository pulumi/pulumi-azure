// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oracle

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an Oracle Autonomous Database Backup in Azure.
//
// ## Example Usage
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This resource uses the following Azure API Providers:
//
// * `Oracle.Database` - 2025-03-01
//
// ## Import
//
// Autonomous Database Backups can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import azure:oracle/autonomousDatabaseBackup:AutonomousDatabaseBackup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup/providers/Oracle.Database/autonomousDatabases/autonomousDatabase1/autonomousDatabaseBackups/autonomousDatabaseBackup1
// ```
type AutonomousDatabaseBackup struct {
	pulumi.CustomResourceState

	// The azureId of the Autonomous Database that this backup is for. Changing this forces a new resource to be created.
	AutonomousDatabaseId pulumi.StringOutput `pulumi:"autonomousDatabaseId"`
	// The display name of the Autonomous Database Backup. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// (Updatable) The number of days to retain the backup. Must be between 90 and 3650 days.
	RetentionPeriodInDays pulumi.IntOutput `pulumi:"retentionPeriodInDays"`
	// The type of backup to create.Currently, only `LongTerm` backup operations are supported through the Oracle database At azure service.
	Type pulumi.StringPtrOutput `pulumi:"type"`
}

// NewAutonomousDatabaseBackup registers a new resource with the given unique name, arguments, and options.
func NewAutonomousDatabaseBackup(ctx *pulumi.Context,
	name string, args *AutonomousDatabaseBackupArgs, opts ...pulumi.ResourceOption) (*AutonomousDatabaseBackup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutonomousDatabaseId == nil {
		return nil, errors.New("invalid value for required argument 'AutonomousDatabaseId'")
	}
	if args.RetentionPeriodInDays == nil {
		return nil, errors.New("invalid value for required argument 'RetentionPeriodInDays'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AutonomousDatabaseBackup
	err := ctx.RegisterResource("azure:oracle/autonomousDatabaseBackup:AutonomousDatabaseBackup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAutonomousDatabaseBackup gets an existing AutonomousDatabaseBackup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAutonomousDatabaseBackup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AutonomousDatabaseBackupState, opts ...pulumi.ResourceOption) (*AutonomousDatabaseBackup, error) {
	var resource AutonomousDatabaseBackup
	err := ctx.ReadResource("azure:oracle/autonomousDatabaseBackup:AutonomousDatabaseBackup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AutonomousDatabaseBackup resources.
type autonomousDatabaseBackupState struct {
	// The azureId of the Autonomous Database that this backup is for. Changing this forces a new resource to be created.
	AutonomousDatabaseId *string `pulumi:"autonomousDatabaseId"`
	// The display name of the Autonomous Database Backup. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// (Updatable) The number of days to retain the backup. Must be between 90 and 3650 days.
	RetentionPeriodInDays *int `pulumi:"retentionPeriodInDays"`
	// The type of backup to create.Currently, only `LongTerm` backup operations are supported through the Oracle database At azure service.
	Type *string `pulumi:"type"`
}

type AutonomousDatabaseBackupState struct {
	// The azureId of the Autonomous Database that this backup is for. Changing this forces a new resource to be created.
	AutonomousDatabaseId pulumi.StringPtrInput
	// The display name of the Autonomous Database Backup. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// (Updatable) The number of days to retain the backup. Must be between 90 and 3650 days.
	RetentionPeriodInDays pulumi.IntPtrInput
	// The type of backup to create.Currently, only `LongTerm` backup operations are supported through the Oracle database At azure service.
	Type pulumi.StringPtrInput
}

func (AutonomousDatabaseBackupState) ElementType() reflect.Type {
	return reflect.TypeOf((*autonomousDatabaseBackupState)(nil)).Elem()
}

type autonomousDatabaseBackupArgs struct {
	// The azureId of the Autonomous Database that this backup is for. Changing this forces a new resource to be created.
	AutonomousDatabaseId string `pulumi:"autonomousDatabaseId"`
	// The display name of the Autonomous Database Backup. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// (Updatable) The number of days to retain the backup. Must be between 90 and 3650 days.
	RetentionPeriodInDays int `pulumi:"retentionPeriodInDays"`
	// The type of backup to create.Currently, only `LongTerm` backup operations are supported through the Oracle database At azure service.
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a AutonomousDatabaseBackup resource.
type AutonomousDatabaseBackupArgs struct {
	// The azureId of the Autonomous Database that this backup is for. Changing this forces a new resource to be created.
	AutonomousDatabaseId pulumi.StringInput
	// The display name of the Autonomous Database Backup. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// (Updatable) The number of days to retain the backup. Must be between 90 and 3650 days.
	RetentionPeriodInDays pulumi.IntInput
	// The type of backup to create.Currently, only `LongTerm` backup operations are supported through the Oracle database At azure service.
	Type pulumi.StringPtrInput
}

func (AutonomousDatabaseBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*autonomousDatabaseBackupArgs)(nil)).Elem()
}

type AutonomousDatabaseBackupInput interface {
	pulumi.Input

	ToAutonomousDatabaseBackupOutput() AutonomousDatabaseBackupOutput
	ToAutonomousDatabaseBackupOutputWithContext(ctx context.Context) AutonomousDatabaseBackupOutput
}

func (*AutonomousDatabaseBackup) ElementType() reflect.Type {
	return reflect.TypeOf((**AutonomousDatabaseBackup)(nil)).Elem()
}

func (i *AutonomousDatabaseBackup) ToAutonomousDatabaseBackupOutput() AutonomousDatabaseBackupOutput {
	return i.ToAutonomousDatabaseBackupOutputWithContext(context.Background())
}

func (i *AutonomousDatabaseBackup) ToAutonomousDatabaseBackupOutputWithContext(ctx context.Context) AutonomousDatabaseBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutonomousDatabaseBackupOutput)
}

// AutonomousDatabaseBackupArrayInput is an input type that accepts AutonomousDatabaseBackupArray and AutonomousDatabaseBackupArrayOutput values.
// You can construct a concrete instance of `AutonomousDatabaseBackupArrayInput` via:
//
//	AutonomousDatabaseBackupArray{ AutonomousDatabaseBackupArgs{...} }
type AutonomousDatabaseBackupArrayInput interface {
	pulumi.Input

	ToAutonomousDatabaseBackupArrayOutput() AutonomousDatabaseBackupArrayOutput
	ToAutonomousDatabaseBackupArrayOutputWithContext(context.Context) AutonomousDatabaseBackupArrayOutput
}

type AutonomousDatabaseBackupArray []AutonomousDatabaseBackupInput

func (AutonomousDatabaseBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutonomousDatabaseBackup)(nil)).Elem()
}

func (i AutonomousDatabaseBackupArray) ToAutonomousDatabaseBackupArrayOutput() AutonomousDatabaseBackupArrayOutput {
	return i.ToAutonomousDatabaseBackupArrayOutputWithContext(context.Background())
}

func (i AutonomousDatabaseBackupArray) ToAutonomousDatabaseBackupArrayOutputWithContext(ctx context.Context) AutonomousDatabaseBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutonomousDatabaseBackupArrayOutput)
}

// AutonomousDatabaseBackupMapInput is an input type that accepts AutonomousDatabaseBackupMap and AutonomousDatabaseBackupMapOutput values.
// You can construct a concrete instance of `AutonomousDatabaseBackupMapInput` via:
//
//	AutonomousDatabaseBackupMap{ "key": AutonomousDatabaseBackupArgs{...} }
type AutonomousDatabaseBackupMapInput interface {
	pulumi.Input

	ToAutonomousDatabaseBackupMapOutput() AutonomousDatabaseBackupMapOutput
	ToAutonomousDatabaseBackupMapOutputWithContext(context.Context) AutonomousDatabaseBackupMapOutput
}

type AutonomousDatabaseBackupMap map[string]AutonomousDatabaseBackupInput

func (AutonomousDatabaseBackupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutonomousDatabaseBackup)(nil)).Elem()
}

func (i AutonomousDatabaseBackupMap) ToAutonomousDatabaseBackupMapOutput() AutonomousDatabaseBackupMapOutput {
	return i.ToAutonomousDatabaseBackupMapOutputWithContext(context.Background())
}

func (i AutonomousDatabaseBackupMap) ToAutonomousDatabaseBackupMapOutputWithContext(ctx context.Context) AutonomousDatabaseBackupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutonomousDatabaseBackupMapOutput)
}

type AutonomousDatabaseBackupOutput struct{ *pulumi.OutputState }

func (AutonomousDatabaseBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutonomousDatabaseBackup)(nil)).Elem()
}

func (o AutonomousDatabaseBackupOutput) ToAutonomousDatabaseBackupOutput() AutonomousDatabaseBackupOutput {
	return o
}

func (o AutonomousDatabaseBackupOutput) ToAutonomousDatabaseBackupOutputWithContext(ctx context.Context) AutonomousDatabaseBackupOutput {
	return o
}

// The azureId of the Autonomous Database that this backup is for. Changing this forces a new resource to be created.
func (o AutonomousDatabaseBackupOutput) AutonomousDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabaseBackup) pulumi.StringOutput { return v.AutonomousDatabaseId }).(pulumi.StringOutput)
}

// The display name of the Autonomous Database Backup. Changing this forces a new resource to be created.
func (o AutonomousDatabaseBackupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AutonomousDatabaseBackup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// (Updatable) The number of days to retain the backup. Must be between 90 and 3650 days.
func (o AutonomousDatabaseBackupOutput) RetentionPeriodInDays() pulumi.IntOutput {
	return o.ApplyT(func(v *AutonomousDatabaseBackup) pulumi.IntOutput { return v.RetentionPeriodInDays }).(pulumi.IntOutput)
}

// The type of backup to create.Currently, only `LongTerm` backup operations are supported through the Oracle database At azure service.
func (o AutonomousDatabaseBackupOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutonomousDatabaseBackup) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

type AutonomousDatabaseBackupArrayOutput struct{ *pulumi.OutputState }

func (AutonomousDatabaseBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutonomousDatabaseBackup)(nil)).Elem()
}

func (o AutonomousDatabaseBackupArrayOutput) ToAutonomousDatabaseBackupArrayOutput() AutonomousDatabaseBackupArrayOutput {
	return o
}

func (o AutonomousDatabaseBackupArrayOutput) ToAutonomousDatabaseBackupArrayOutputWithContext(ctx context.Context) AutonomousDatabaseBackupArrayOutput {
	return o
}

func (o AutonomousDatabaseBackupArrayOutput) Index(i pulumi.IntInput) AutonomousDatabaseBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AutonomousDatabaseBackup {
		return vs[0].([]*AutonomousDatabaseBackup)[vs[1].(int)]
	}).(AutonomousDatabaseBackupOutput)
}

type AutonomousDatabaseBackupMapOutput struct{ *pulumi.OutputState }

func (AutonomousDatabaseBackupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutonomousDatabaseBackup)(nil)).Elem()
}

func (o AutonomousDatabaseBackupMapOutput) ToAutonomousDatabaseBackupMapOutput() AutonomousDatabaseBackupMapOutput {
	return o
}

func (o AutonomousDatabaseBackupMapOutput) ToAutonomousDatabaseBackupMapOutputWithContext(ctx context.Context) AutonomousDatabaseBackupMapOutput {
	return o
}

func (o AutonomousDatabaseBackupMapOutput) MapIndex(k pulumi.StringInput) AutonomousDatabaseBackupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AutonomousDatabaseBackup {
		return vs[0].(map[string]*AutonomousDatabaseBackup)[vs[1].(string)]
	}).(AutonomousDatabaseBackupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AutonomousDatabaseBackupInput)(nil)).Elem(), &AutonomousDatabaseBackup{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutonomousDatabaseBackupArrayInput)(nil)).Elem(), AutonomousDatabaseBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutonomousDatabaseBackupMapInput)(nil)).Elem(), AutonomousDatabaseBackupMap{})
	pulumi.RegisterOutputType(AutonomousDatabaseBackupOutput{})
	pulumi.RegisterOutputType(AutonomousDatabaseBackupArrayOutput{})
	pulumi.RegisterOutputType(AutonomousDatabaseBackupMapOutput{})
}
