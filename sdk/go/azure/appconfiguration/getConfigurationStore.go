// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package appconfiguration

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing App Configuration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/appconfiguration"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		example, err := appconfiguration.LookupConfigurationStore(ctx, &appconfiguration.LookupConfigurationStoreArgs{
// 			Name:              "existing",
// 			ResourceGroupName: "existing",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("id", example.Id)
// 		return nil
// 	})
// }
// ```
func LookupConfigurationStore(ctx *pulumi.Context, args *LookupConfigurationStoreArgs, opts ...pulumi.InvokeOption) (*LookupConfigurationStoreResult, error) {
	var rv LookupConfigurationStoreResult
	err := ctx.Invoke("azure:appconfiguration/getConfigurationStore:getConfigurationStore", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConfigurationStore.
type LookupConfigurationStoreArgs struct {
	// The Name of this App Configuration.
	Name string `pulumi:"name"`
	// The name of the Resource Group where the App Configuration exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getConfigurationStore.
type LookupConfigurationStoreResult struct {
	// The Endpoint used to access this App Configuration.
	Endpoint string `pulumi:"endpoint"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Azure Region where the App Configuration exists.
	Location string `pulumi:"location"`
	Name     string `pulumi:"name"`
	// A `primaryReadKey` block as defined below containing the primary read access key.
	PrimaryReadKeys []GetConfigurationStorePrimaryReadKey `pulumi:"primaryReadKeys"`
	// A `primaryWriteKey` block as defined below containing the primary write access key.
	PrimaryWriteKeys  []GetConfigurationStorePrimaryWriteKey `pulumi:"primaryWriteKeys"`
	ResourceGroupName string                                 `pulumi:"resourceGroupName"`
	// A `secondaryReadKey` block as defined below containing the secondary read access key.
	SecondaryReadKeys []GetConfigurationStoreSecondaryReadKey `pulumi:"secondaryReadKeys"`
	// A `secondaryWriteKey` block as defined below containing the secondary write access key.
	SecondaryWriteKeys []GetConfigurationStoreSecondaryWriteKey `pulumi:"secondaryWriteKeys"`
	// The name of the SKU used for this App Configuration.
	Sku string `pulumi:"sku"`
	// A mapping of tags assigned to the App Configuration.
	Tags map[string]string `pulumi:"tags"`
}

func LookupConfigurationStoreOutput(ctx *pulumi.Context, args LookupConfigurationStoreOutputArgs, opts ...pulumi.InvokeOption) LookupConfigurationStoreResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupConfigurationStoreResult, error) {
			args := v.(LookupConfigurationStoreArgs)
			r, err := LookupConfigurationStore(ctx, &args, opts...)
			return *r, err
		}).(LookupConfigurationStoreResultOutput)
}

// A collection of arguments for invoking getConfigurationStore.
type LookupConfigurationStoreOutputArgs struct {
	// The Name of this App Configuration.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Resource Group where the App Configuration exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupConfigurationStoreOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigurationStoreArgs)(nil)).Elem()
}

// A collection of values returned by getConfigurationStore.
type LookupConfigurationStoreResultOutput struct{ *pulumi.OutputState }

func (LookupConfigurationStoreResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigurationStoreResult)(nil)).Elem()
}

func (o LookupConfigurationStoreResultOutput) ToLookupConfigurationStoreResultOutput() LookupConfigurationStoreResultOutput {
	return o
}

func (o LookupConfigurationStoreResultOutput) ToLookupConfigurationStoreResultOutputWithContext(ctx context.Context) LookupConfigurationStoreResultOutput {
	return o
}

// The Endpoint used to access this App Configuration.
func (o LookupConfigurationStoreResultOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationStoreResult) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupConfigurationStoreResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationStoreResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Azure Region where the App Configuration exists.
func (o LookupConfigurationStoreResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationStoreResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupConfigurationStoreResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationStoreResult) string { return v.Name }).(pulumi.StringOutput)
}

// A `primaryReadKey` block as defined below containing the primary read access key.
func (o LookupConfigurationStoreResultOutput) PrimaryReadKeys() GetConfigurationStorePrimaryReadKeyArrayOutput {
	return o.ApplyT(func(v LookupConfigurationStoreResult) []GetConfigurationStorePrimaryReadKey { return v.PrimaryReadKeys }).(GetConfigurationStorePrimaryReadKeyArrayOutput)
}

// A `primaryWriteKey` block as defined below containing the primary write access key.
func (o LookupConfigurationStoreResultOutput) PrimaryWriteKeys() GetConfigurationStorePrimaryWriteKeyArrayOutput {
	return o.ApplyT(func(v LookupConfigurationStoreResult) []GetConfigurationStorePrimaryWriteKey {
		return v.PrimaryWriteKeys
	}).(GetConfigurationStorePrimaryWriteKeyArrayOutput)
}

func (o LookupConfigurationStoreResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationStoreResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A `secondaryReadKey` block as defined below containing the secondary read access key.
func (o LookupConfigurationStoreResultOutput) SecondaryReadKeys() GetConfigurationStoreSecondaryReadKeyArrayOutput {
	return o.ApplyT(func(v LookupConfigurationStoreResult) []GetConfigurationStoreSecondaryReadKey {
		return v.SecondaryReadKeys
	}).(GetConfigurationStoreSecondaryReadKeyArrayOutput)
}

// A `secondaryWriteKey` block as defined below containing the secondary write access key.
func (o LookupConfigurationStoreResultOutput) SecondaryWriteKeys() GetConfigurationStoreSecondaryWriteKeyArrayOutput {
	return o.ApplyT(func(v LookupConfigurationStoreResult) []GetConfigurationStoreSecondaryWriteKey {
		return v.SecondaryWriteKeys
	}).(GetConfigurationStoreSecondaryWriteKeyArrayOutput)
}

// The name of the SKU used for this App Configuration.
func (o LookupConfigurationStoreResultOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationStoreResult) string { return v.Sku }).(pulumi.StringOutput)
}

// A mapping of tags assigned to the App Configuration.
func (o LookupConfigurationStoreResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupConfigurationStoreResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConfigurationStoreResultOutput{})
}
