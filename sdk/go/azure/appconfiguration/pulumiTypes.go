// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appconfiguration

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type ConfigurationFeatureTargetingFilter struct {
	// A number representing the percentage of the entire user base.
	DefaultRolloutPercentage int `pulumi:"defaultRolloutPercentage"`
	// One or more `groups` blocks as defined below.
	Groups []ConfigurationFeatureTargetingFilterGroup `pulumi:"groups"`
	// A list of users to target for this feature.
	Users []string `pulumi:"users"`
}

// ConfigurationFeatureTargetingFilterInput is an input type that accepts ConfigurationFeatureTargetingFilterArgs and ConfigurationFeatureTargetingFilterOutput values.
// You can construct a concrete instance of `ConfigurationFeatureTargetingFilterInput` via:
//
//	ConfigurationFeatureTargetingFilterArgs{...}
type ConfigurationFeatureTargetingFilterInput interface {
	pulumi.Input

	ToConfigurationFeatureTargetingFilterOutput() ConfigurationFeatureTargetingFilterOutput
	ToConfigurationFeatureTargetingFilterOutputWithContext(context.Context) ConfigurationFeatureTargetingFilterOutput
}

type ConfigurationFeatureTargetingFilterArgs struct {
	// A number representing the percentage of the entire user base.
	DefaultRolloutPercentage pulumi.IntInput `pulumi:"defaultRolloutPercentage"`
	// One or more `groups` blocks as defined below.
	Groups ConfigurationFeatureTargetingFilterGroupArrayInput `pulumi:"groups"`
	// A list of users to target for this feature.
	Users pulumi.StringArrayInput `pulumi:"users"`
}

func (ConfigurationFeatureTargetingFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationFeatureTargetingFilter)(nil)).Elem()
}

func (i ConfigurationFeatureTargetingFilterArgs) ToConfigurationFeatureTargetingFilterOutput() ConfigurationFeatureTargetingFilterOutput {
	return i.ToConfigurationFeatureTargetingFilterOutputWithContext(context.Background())
}

func (i ConfigurationFeatureTargetingFilterArgs) ToConfigurationFeatureTargetingFilterOutputWithContext(ctx context.Context) ConfigurationFeatureTargetingFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationFeatureTargetingFilterOutput)
}

func (i ConfigurationFeatureTargetingFilterArgs) ToOutput(ctx context.Context) pulumix.Output[ConfigurationFeatureTargetingFilter] {
	return pulumix.Output[ConfigurationFeatureTargetingFilter]{
		OutputState: i.ToConfigurationFeatureTargetingFilterOutputWithContext(ctx).OutputState,
	}
}

// ConfigurationFeatureTargetingFilterArrayInput is an input type that accepts ConfigurationFeatureTargetingFilterArray and ConfigurationFeatureTargetingFilterArrayOutput values.
// You can construct a concrete instance of `ConfigurationFeatureTargetingFilterArrayInput` via:
//
//	ConfigurationFeatureTargetingFilterArray{ ConfigurationFeatureTargetingFilterArgs{...} }
type ConfigurationFeatureTargetingFilterArrayInput interface {
	pulumi.Input

	ToConfigurationFeatureTargetingFilterArrayOutput() ConfigurationFeatureTargetingFilterArrayOutput
	ToConfigurationFeatureTargetingFilterArrayOutputWithContext(context.Context) ConfigurationFeatureTargetingFilterArrayOutput
}

type ConfigurationFeatureTargetingFilterArray []ConfigurationFeatureTargetingFilterInput

func (ConfigurationFeatureTargetingFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationFeatureTargetingFilter)(nil)).Elem()
}

func (i ConfigurationFeatureTargetingFilterArray) ToConfigurationFeatureTargetingFilterArrayOutput() ConfigurationFeatureTargetingFilterArrayOutput {
	return i.ToConfigurationFeatureTargetingFilterArrayOutputWithContext(context.Background())
}

func (i ConfigurationFeatureTargetingFilterArray) ToConfigurationFeatureTargetingFilterArrayOutputWithContext(ctx context.Context) ConfigurationFeatureTargetingFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationFeatureTargetingFilterArrayOutput)
}

func (i ConfigurationFeatureTargetingFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]ConfigurationFeatureTargetingFilter] {
	return pulumix.Output[[]ConfigurationFeatureTargetingFilter]{
		OutputState: i.ToConfigurationFeatureTargetingFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type ConfigurationFeatureTargetingFilterOutput struct{ *pulumi.OutputState }

func (ConfigurationFeatureTargetingFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationFeatureTargetingFilter)(nil)).Elem()
}

func (o ConfigurationFeatureTargetingFilterOutput) ToConfigurationFeatureTargetingFilterOutput() ConfigurationFeatureTargetingFilterOutput {
	return o
}

func (o ConfigurationFeatureTargetingFilterOutput) ToConfigurationFeatureTargetingFilterOutputWithContext(ctx context.Context) ConfigurationFeatureTargetingFilterOutput {
	return o
}

func (o ConfigurationFeatureTargetingFilterOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationFeatureTargetingFilter] {
	return pulumix.Output[ConfigurationFeatureTargetingFilter]{
		OutputState: o.OutputState,
	}
}

// A number representing the percentage of the entire user base.
func (o ConfigurationFeatureTargetingFilterOutput) DefaultRolloutPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v ConfigurationFeatureTargetingFilter) int { return v.DefaultRolloutPercentage }).(pulumi.IntOutput)
}

// One or more `groups` blocks as defined below.
func (o ConfigurationFeatureTargetingFilterOutput) Groups() ConfigurationFeatureTargetingFilterGroupArrayOutput {
	return o.ApplyT(func(v ConfigurationFeatureTargetingFilter) []ConfigurationFeatureTargetingFilterGroup {
		return v.Groups
	}).(ConfigurationFeatureTargetingFilterGroupArrayOutput)
}

// A list of users to target for this feature.
func (o ConfigurationFeatureTargetingFilterOutput) Users() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigurationFeatureTargetingFilter) []string { return v.Users }).(pulumi.StringArrayOutput)
}

type ConfigurationFeatureTargetingFilterArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationFeatureTargetingFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationFeatureTargetingFilter)(nil)).Elem()
}

func (o ConfigurationFeatureTargetingFilterArrayOutput) ToConfigurationFeatureTargetingFilterArrayOutput() ConfigurationFeatureTargetingFilterArrayOutput {
	return o
}

func (o ConfigurationFeatureTargetingFilterArrayOutput) ToConfigurationFeatureTargetingFilterArrayOutputWithContext(ctx context.Context) ConfigurationFeatureTargetingFilterArrayOutput {
	return o
}

func (o ConfigurationFeatureTargetingFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ConfigurationFeatureTargetingFilter] {
	return pulumix.Output[[]ConfigurationFeatureTargetingFilter]{
		OutputState: o.OutputState,
	}
}

func (o ConfigurationFeatureTargetingFilterArrayOutput) Index(i pulumi.IntInput) ConfigurationFeatureTargetingFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationFeatureTargetingFilter {
		return vs[0].([]ConfigurationFeatureTargetingFilter)[vs[1].(int)]
	}).(ConfigurationFeatureTargetingFilterOutput)
}

type ConfigurationFeatureTargetingFilterGroup struct {
	// The name of the group.
	Name string `pulumi:"name"`
	// Rollout percentage of the group.
	RolloutPercentage int `pulumi:"rolloutPercentage"`
}

// ConfigurationFeatureTargetingFilterGroupInput is an input type that accepts ConfigurationFeatureTargetingFilterGroupArgs and ConfigurationFeatureTargetingFilterGroupOutput values.
// You can construct a concrete instance of `ConfigurationFeatureTargetingFilterGroupInput` via:
//
//	ConfigurationFeatureTargetingFilterGroupArgs{...}
type ConfigurationFeatureTargetingFilterGroupInput interface {
	pulumi.Input

	ToConfigurationFeatureTargetingFilterGroupOutput() ConfigurationFeatureTargetingFilterGroupOutput
	ToConfigurationFeatureTargetingFilterGroupOutputWithContext(context.Context) ConfigurationFeatureTargetingFilterGroupOutput
}

type ConfigurationFeatureTargetingFilterGroupArgs struct {
	// The name of the group.
	Name pulumi.StringInput `pulumi:"name"`
	// Rollout percentage of the group.
	RolloutPercentage pulumi.IntInput `pulumi:"rolloutPercentage"`
}

func (ConfigurationFeatureTargetingFilterGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationFeatureTargetingFilterGroup)(nil)).Elem()
}

func (i ConfigurationFeatureTargetingFilterGroupArgs) ToConfigurationFeatureTargetingFilterGroupOutput() ConfigurationFeatureTargetingFilterGroupOutput {
	return i.ToConfigurationFeatureTargetingFilterGroupOutputWithContext(context.Background())
}

func (i ConfigurationFeatureTargetingFilterGroupArgs) ToConfigurationFeatureTargetingFilterGroupOutputWithContext(ctx context.Context) ConfigurationFeatureTargetingFilterGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationFeatureTargetingFilterGroupOutput)
}

func (i ConfigurationFeatureTargetingFilterGroupArgs) ToOutput(ctx context.Context) pulumix.Output[ConfigurationFeatureTargetingFilterGroup] {
	return pulumix.Output[ConfigurationFeatureTargetingFilterGroup]{
		OutputState: i.ToConfigurationFeatureTargetingFilterGroupOutputWithContext(ctx).OutputState,
	}
}

// ConfigurationFeatureTargetingFilterGroupArrayInput is an input type that accepts ConfigurationFeatureTargetingFilterGroupArray and ConfigurationFeatureTargetingFilterGroupArrayOutput values.
// You can construct a concrete instance of `ConfigurationFeatureTargetingFilterGroupArrayInput` via:
//
//	ConfigurationFeatureTargetingFilterGroupArray{ ConfigurationFeatureTargetingFilterGroupArgs{...} }
type ConfigurationFeatureTargetingFilterGroupArrayInput interface {
	pulumi.Input

	ToConfigurationFeatureTargetingFilterGroupArrayOutput() ConfigurationFeatureTargetingFilterGroupArrayOutput
	ToConfigurationFeatureTargetingFilterGroupArrayOutputWithContext(context.Context) ConfigurationFeatureTargetingFilterGroupArrayOutput
}

type ConfigurationFeatureTargetingFilterGroupArray []ConfigurationFeatureTargetingFilterGroupInput

func (ConfigurationFeatureTargetingFilterGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationFeatureTargetingFilterGroup)(nil)).Elem()
}

func (i ConfigurationFeatureTargetingFilterGroupArray) ToConfigurationFeatureTargetingFilterGroupArrayOutput() ConfigurationFeatureTargetingFilterGroupArrayOutput {
	return i.ToConfigurationFeatureTargetingFilterGroupArrayOutputWithContext(context.Background())
}

func (i ConfigurationFeatureTargetingFilterGroupArray) ToConfigurationFeatureTargetingFilterGroupArrayOutputWithContext(ctx context.Context) ConfigurationFeatureTargetingFilterGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationFeatureTargetingFilterGroupArrayOutput)
}

func (i ConfigurationFeatureTargetingFilterGroupArray) ToOutput(ctx context.Context) pulumix.Output[[]ConfigurationFeatureTargetingFilterGroup] {
	return pulumix.Output[[]ConfigurationFeatureTargetingFilterGroup]{
		OutputState: i.ToConfigurationFeatureTargetingFilterGroupArrayOutputWithContext(ctx).OutputState,
	}
}

type ConfigurationFeatureTargetingFilterGroupOutput struct{ *pulumi.OutputState }

func (ConfigurationFeatureTargetingFilterGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationFeatureTargetingFilterGroup)(nil)).Elem()
}

func (o ConfigurationFeatureTargetingFilterGroupOutput) ToConfigurationFeatureTargetingFilterGroupOutput() ConfigurationFeatureTargetingFilterGroupOutput {
	return o
}

func (o ConfigurationFeatureTargetingFilterGroupOutput) ToConfigurationFeatureTargetingFilterGroupOutputWithContext(ctx context.Context) ConfigurationFeatureTargetingFilterGroupOutput {
	return o
}

func (o ConfigurationFeatureTargetingFilterGroupOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationFeatureTargetingFilterGroup] {
	return pulumix.Output[ConfigurationFeatureTargetingFilterGroup]{
		OutputState: o.OutputState,
	}
}

// The name of the group.
func (o ConfigurationFeatureTargetingFilterGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationFeatureTargetingFilterGroup) string { return v.Name }).(pulumi.StringOutput)
}

// Rollout percentage of the group.
func (o ConfigurationFeatureTargetingFilterGroupOutput) RolloutPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v ConfigurationFeatureTargetingFilterGroup) int { return v.RolloutPercentage }).(pulumi.IntOutput)
}

type ConfigurationFeatureTargetingFilterGroupArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationFeatureTargetingFilterGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationFeatureTargetingFilterGroup)(nil)).Elem()
}

func (o ConfigurationFeatureTargetingFilterGroupArrayOutput) ToConfigurationFeatureTargetingFilterGroupArrayOutput() ConfigurationFeatureTargetingFilterGroupArrayOutput {
	return o
}

func (o ConfigurationFeatureTargetingFilterGroupArrayOutput) ToConfigurationFeatureTargetingFilterGroupArrayOutputWithContext(ctx context.Context) ConfigurationFeatureTargetingFilterGroupArrayOutput {
	return o
}

func (o ConfigurationFeatureTargetingFilterGroupArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ConfigurationFeatureTargetingFilterGroup] {
	return pulumix.Output[[]ConfigurationFeatureTargetingFilterGroup]{
		OutputState: o.OutputState,
	}
}

func (o ConfigurationFeatureTargetingFilterGroupArrayOutput) Index(i pulumi.IntInput) ConfigurationFeatureTargetingFilterGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationFeatureTargetingFilterGroup {
		return vs[0].([]ConfigurationFeatureTargetingFilterGroup)[vs[1].(int)]
	}).(ConfigurationFeatureTargetingFilterGroupOutput)
}

type ConfigurationFeatureTimewindowFilter struct {
	// The latest timestamp the feature is enabled. The timestamp must be in RFC3339 format.
	End *string `pulumi:"end"`
	// The earliest timestamp the feature is enabled. The timestamp must be in RFC3339 format.
	Start *string `pulumi:"start"`
}

// ConfigurationFeatureTimewindowFilterInput is an input type that accepts ConfigurationFeatureTimewindowFilterArgs and ConfigurationFeatureTimewindowFilterOutput values.
// You can construct a concrete instance of `ConfigurationFeatureTimewindowFilterInput` via:
//
//	ConfigurationFeatureTimewindowFilterArgs{...}
type ConfigurationFeatureTimewindowFilterInput interface {
	pulumi.Input

	ToConfigurationFeatureTimewindowFilterOutput() ConfigurationFeatureTimewindowFilterOutput
	ToConfigurationFeatureTimewindowFilterOutputWithContext(context.Context) ConfigurationFeatureTimewindowFilterOutput
}

type ConfigurationFeatureTimewindowFilterArgs struct {
	// The latest timestamp the feature is enabled. The timestamp must be in RFC3339 format.
	End pulumi.StringPtrInput `pulumi:"end"`
	// The earliest timestamp the feature is enabled. The timestamp must be in RFC3339 format.
	Start pulumi.StringPtrInput `pulumi:"start"`
}

func (ConfigurationFeatureTimewindowFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationFeatureTimewindowFilter)(nil)).Elem()
}

func (i ConfigurationFeatureTimewindowFilterArgs) ToConfigurationFeatureTimewindowFilterOutput() ConfigurationFeatureTimewindowFilterOutput {
	return i.ToConfigurationFeatureTimewindowFilterOutputWithContext(context.Background())
}

func (i ConfigurationFeatureTimewindowFilterArgs) ToConfigurationFeatureTimewindowFilterOutputWithContext(ctx context.Context) ConfigurationFeatureTimewindowFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationFeatureTimewindowFilterOutput)
}

func (i ConfigurationFeatureTimewindowFilterArgs) ToOutput(ctx context.Context) pulumix.Output[ConfigurationFeatureTimewindowFilter] {
	return pulumix.Output[ConfigurationFeatureTimewindowFilter]{
		OutputState: i.ToConfigurationFeatureTimewindowFilterOutputWithContext(ctx).OutputState,
	}
}

// ConfigurationFeatureTimewindowFilterArrayInput is an input type that accepts ConfigurationFeatureTimewindowFilterArray and ConfigurationFeatureTimewindowFilterArrayOutput values.
// You can construct a concrete instance of `ConfigurationFeatureTimewindowFilterArrayInput` via:
//
//	ConfigurationFeatureTimewindowFilterArray{ ConfigurationFeatureTimewindowFilterArgs{...} }
type ConfigurationFeatureTimewindowFilterArrayInput interface {
	pulumi.Input

	ToConfigurationFeatureTimewindowFilterArrayOutput() ConfigurationFeatureTimewindowFilterArrayOutput
	ToConfigurationFeatureTimewindowFilterArrayOutputWithContext(context.Context) ConfigurationFeatureTimewindowFilterArrayOutput
}

type ConfigurationFeatureTimewindowFilterArray []ConfigurationFeatureTimewindowFilterInput

func (ConfigurationFeatureTimewindowFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationFeatureTimewindowFilter)(nil)).Elem()
}

func (i ConfigurationFeatureTimewindowFilterArray) ToConfigurationFeatureTimewindowFilterArrayOutput() ConfigurationFeatureTimewindowFilterArrayOutput {
	return i.ToConfigurationFeatureTimewindowFilterArrayOutputWithContext(context.Background())
}

func (i ConfigurationFeatureTimewindowFilterArray) ToConfigurationFeatureTimewindowFilterArrayOutputWithContext(ctx context.Context) ConfigurationFeatureTimewindowFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationFeatureTimewindowFilterArrayOutput)
}

func (i ConfigurationFeatureTimewindowFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]ConfigurationFeatureTimewindowFilter] {
	return pulumix.Output[[]ConfigurationFeatureTimewindowFilter]{
		OutputState: i.ToConfigurationFeatureTimewindowFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type ConfigurationFeatureTimewindowFilterOutput struct{ *pulumi.OutputState }

func (ConfigurationFeatureTimewindowFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationFeatureTimewindowFilter)(nil)).Elem()
}

func (o ConfigurationFeatureTimewindowFilterOutput) ToConfigurationFeatureTimewindowFilterOutput() ConfigurationFeatureTimewindowFilterOutput {
	return o
}

func (o ConfigurationFeatureTimewindowFilterOutput) ToConfigurationFeatureTimewindowFilterOutputWithContext(ctx context.Context) ConfigurationFeatureTimewindowFilterOutput {
	return o
}

func (o ConfigurationFeatureTimewindowFilterOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationFeatureTimewindowFilter] {
	return pulumix.Output[ConfigurationFeatureTimewindowFilter]{
		OutputState: o.OutputState,
	}
}

// The latest timestamp the feature is enabled. The timestamp must be in RFC3339 format.
func (o ConfigurationFeatureTimewindowFilterOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationFeatureTimewindowFilter) *string { return v.End }).(pulumi.StringPtrOutput)
}

// The earliest timestamp the feature is enabled. The timestamp must be in RFC3339 format.
func (o ConfigurationFeatureTimewindowFilterOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationFeatureTimewindowFilter) *string { return v.Start }).(pulumi.StringPtrOutput)
}

type ConfigurationFeatureTimewindowFilterArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationFeatureTimewindowFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationFeatureTimewindowFilter)(nil)).Elem()
}

func (o ConfigurationFeatureTimewindowFilterArrayOutput) ToConfigurationFeatureTimewindowFilterArrayOutput() ConfigurationFeatureTimewindowFilterArrayOutput {
	return o
}

func (o ConfigurationFeatureTimewindowFilterArrayOutput) ToConfigurationFeatureTimewindowFilterArrayOutputWithContext(ctx context.Context) ConfigurationFeatureTimewindowFilterArrayOutput {
	return o
}

func (o ConfigurationFeatureTimewindowFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ConfigurationFeatureTimewindowFilter] {
	return pulumix.Output[[]ConfigurationFeatureTimewindowFilter]{
		OutputState: o.OutputState,
	}
}

func (o ConfigurationFeatureTimewindowFilterArrayOutput) Index(i pulumi.IntInput) ConfigurationFeatureTimewindowFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationFeatureTimewindowFilter {
		return vs[0].([]ConfigurationFeatureTimewindowFilter)[vs[1].(int)]
	}).(ConfigurationFeatureTimewindowFilterOutput)
}

type ConfigurationStoreEncryption struct {
	// Specifies the client id of the identity which will be used to access key vault.
	IdentityClientId *string `pulumi:"identityClientId"`
	// Specifies the URI of the key vault key used to encrypt data.
	KeyVaultKeyIdentifier *string `pulumi:"keyVaultKeyIdentifier"`
}

// ConfigurationStoreEncryptionInput is an input type that accepts ConfigurationStoreEncryptionArgs and ConfigurationStoreEncryptionOutput values.
// You can construct a concrete instance of `ConfigurationStoreEncryptionInput` via:
//
//	ConfigurationStoreEncryptionArgs{...}
type ConfigurationStoreEncryptionInput interface {
	pulumi.Input

	ToConfigurationStoreEncryptionOutput() ConfigurationStoreEncryptionOutput
	ToConfigurationStoreEncryptionOutputWithContext(context.Context) ConfigurationStoreEncryptionOutput
}

type ConfigurationStoreEncryptionArgs struct {
	// Specifies the client id of the identity which will be used to access key vault.
	IdentityClientId pulumi.StringPtrInput `pulumi:"identityClientId"`
	// Specifies the URI of the key vault key used to encrypt data.
	KeyVaultKeyIdentifier pulumi.StringPtrInput `pulumi:"keyVaultKeyIdentifier"`
}

func (ConfigurationStoreEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStoreEncryption)(nil)).Elem()
}

func (i ConfigurationStoreEncryptionArgs) ToConfigurationStoreEncryptionOutput() ConfigurationStoreEncryptionOutput {
	return i.ToConfigurationStoreEncryptionOutputWithContext(context.Background())
}

func (i ConfigurationStoreEncryptionArgs) ToConfigurationStoreEncryptionOutputWithContext(ctx context.Context) ConfigurationStoreEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStoreEncryptionOutput)
}

func (i ConfigurationStoreEncryptionArgs) ToOutput(ctx context.Context) pulumix.Output[ConfigurationStoreEncryption] {
	return pulumix.Output[ConfigurationStoreEncryption]{
		OutputState: i.ToConfigurationStoreEncryptionOutputWithContext(ctx).OutputState,
	}
}

func (i ConfigurationStoreEncryptionArgs) ToConfigurationStoreEncryptionPtrOutput() ConfigurationStoreEncryptionPtrOutput {
	return i.ToConfigurationStoreEncryptionPtrOutputWithContext(context.Background())
}

func (i ConfigurationStoreEncryptionArgs) ToConfigurationStoreEncryptionPtrOutputWithContext(ctx context.Context) ConfigurationStoreEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStoreEncryptionOutput).ToConfigurationStoreEncryptionPtrOutputWithContext(ctx)
}

// ConfigurationStoreEncryptionPtrInput is an input type that accepts ConfigurationStoreEncryptionArgs, ConfigurationStoreEncryptionPtr and ConfigurationStoreEncryptionPtrOutput values.
// You can construct a concrete instance of `ConfigurationStoreEncryptionPtrInput` via:
//
//	        ConfigurationStoreEncryptionArgs{...}
//
//	or:
//
//	        nil
type ConfigurationStoreEncryptionPtrInput interface {
	pulumi.Input

	ToConfigurationStoreEncryptionPtrOutput() ConfigurationStoreEncryptionPtrOutput
	ToConfigurationStoreEncryptionPtrOutputWithContext(context.Context) ConfigurationStoreEncryptionPtrOutput
}

type configurationStoreEncryptionPtrType ConfigurationStoreEncryptionArgs

func ConfigurationStoreEncryptionPtr(v *ConfigurationStoreEncryptionArgs) ConfigurationStoreEncryptionPtrInput {
	return (*configurationStoreEncryptionPtrType)(v)
}

func (*configurationStoreEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationStoreEncryption)(nil)).Elem()
}

func (i *configurationStoreEncryptionPtrType) ToConfigurationStoreEncryptionPtrOutput() ConfigurationStoreEncryptionPtrOutput {
	return i.ToConfigurationStoreEncryptionPtrOutputWithContext(context.Background())
}

func (i *configurationStoreEncryptionPtrType) ToConfigurationStoreEncryptionPtrOutputWithContext(ctx context.Context) ConfigurationStoreEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStoreEncryptionPtrOutput)
}

func (i *configurationStoreEncryptionPtrType) ToOutput(ctx context.Context) pulumix.Output[*ConfigurationStoreEncryption] {
	return pulumix.Output[*ConfigurationStoreEncryption]{
		OutputState: i.ToConfigurationStoreEncryptionPtrOutputWithContext(ctx).OutputState,
	}
}

type ConfigurationStoreEncryptionOutput struct{ *pulumi.OutputState }

func (ConfigurationStoreEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStoreEncryption)(nil)).Elem()
}

func (o ConfigurationStoreEncryptionOutput) ToConfigurationStoreEncryptionOutput() ConfigurationStoreEncryptionOutput {
	return o
}

func (o ConfigurationStoreEncryptionOutput) ToConfigurationStoreEncryptionOutputWithContext(ctx context.Context) ConfigurationStoreEncryptionOutput {
	return o
}

func (o ConfigurationStoreEncryptionOutput) ToConfigurationStoreEncryptionPtrOutput() ConfigurationStoreEncryptionPtrOutput {
	return o.ToConfigurationStoreEncryptionPtrOutputWithContext(context.Background())
}

func (o ConfigurationStoreEncryptionOutput) ToConfigurationStoreEncryptionPtrOutputWithContext(ctx context.Context) ConfigurationStoreEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigurationStoreEncryption) *ConfigurationStoreEncryption {
		return &v
	}).(ConfigurationStoreEncryptionPtrOutput)
}

func (o ConfigurationStoreEncryptionOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationStoreEncryption] {
	return pulumix.Output[ConfigurationStoreEncryption]{
		OutputState: o.OutputState,
	}
}

// Specifies the client id of the identity which will be used to access key vault.
func (o ConfigurationStoreEncryptionOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStoreEncryption) *string { return v.IdentityClientId }).(pulumi.StringPtrOutput)
}

// Specifies the URI of the key vault key used to encrypt data.
func (o ConfigurationStoreEncryptionOutput) KeyVaultKeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStoreEncryption) *string { return v.KeyVaultKeyIdentifier }).(pulumi.StringPtrOutput)
}

type ConfigurationStoreEncryptionPtrOutput struct{ *pulumi.OutputState }

func (ConfigurationStoreEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationStoreEncryption)(nil)).Elem()
}

func (o ConfigurationStoreEncryptionPtrOutput) ToConfigurationStoreEncryptionPtrOutput() ConfigurationStoreEncryptionPtrOutput {
	return o
}

func (o ConfigurationStoreEncryptionPtrOutput) ToConfigurationStoreEncryptionPtrOutputWithContext(ctx context.Context) ConfigurationStoreEncryptionPtrOutput {
	return o
}

func (o ConfigurationStoreEncryptionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ConfigurationStoreEncryption] {
	return pulumix.Output[*ConfigurationStoreEncryption]{
		OutputState: o.OutputState,
	}
}

func (o ConfigurationStoreEncryptionPtrOutput) Elem() ConfigurationStoreEncryptionOutput {
	return o.ApplyT(func(v *ConfigurationStoreEncryption) ConfigurationStoreEncryption {
		if v != nil {
			return *v
		}
		var ret ConfigurationStoreEncryption
		return ret
	}).(ConfigurationStoreEncryptionOutput)
}

// Specifies the client id of the identity which will be used to access key vault.
func (o ConfigurationStoreEncryptionPtrOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationStoreEncryption) *string {
		if v == nil {
			return nil
		}
		return v.IdentityClientId
	}).(pulumi.StringPtrOutput)
}

// Specifies the URI of the key vault key used to encrypt data.
func (o ConfigurationStoreEncryptionPtrOutput) KeyVaultKeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationStoreEncryption) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultKeyIdentifier
	}).(pulumi.StringPtrOutput)
}

type ConfigurationStoreIdentity struct {
	// A list of User Assigned Managed Identity IDs to be assigned to this App Configuration.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId *string `pulumi:"principalId"`
	// The Tenant ID associated with this Managed Service Identity.
	TenantId *string `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this App Configuration. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
	Type string `pulumi:"type"`
}

// ConfigurationStoreIdentityInput is an input type that accepts ConfigurationStoreIdentityArgs and ConfigurationStoreIdentityOutput values.
// You can construct a concrete instance of `ConfigurationStoreIdentityInput` via:
//
//	ConfigurationStoreIdentityArgs{...}
type ConfigurationStoreIdentityInput interface {
	pulumi.Input

	ToConfigurationStoreIdentityOutput() ConfigurationStoreIdentityOutput
	ToConfigurationStoreIdentityOutputWithContext(context.Context) ConfigurationStoreIdentityOutput
}

type ConfigurationStoreIdentityArgs struct {
	// A list of User Assigned Managed Identity IDs to be assigned to this App Configuration.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The Tenant ID associated with this Managed Service Identity.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this App Configuration. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
	Type pulumi.StringInput `pulumi:"type"`
}

func (ConfigurationStoreIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStoreIdentity)(nil)).Elem()
}

func (i ConfigurationStoreIdentityArgs) ToConfigurationStoreIdentityOutput() ConfigurationStoreIdentityOutput {
	return i.ToConfigurationStoreIdentityOutputWithContext(context.Background())
}

func (i ConfigurationStoreIdentityArgs) ToConfigurationStoreIdentityOutputWithContext(ctx context.Context) ConfigurationStoreIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStoreIdentityOutput)
}

func (i ConfigurationStoreIdentityArgs) ToOutput(ctx context.Context) pulumix.Output[ConfigurationStoreIdentity] {
	return pulumix.Output[ConfigurationStoreIdentity]{
		OutputState: i.ToConfigurationStoreIdentityOutputWithContext(ctx).OutputState,
	}
}

func (i ConfigurationStoreIdentityArgs) ToConfigurationStoreIdentityPtrOutput() ConfigurationStoreIdentityPtrOutput {
	return i.ToConfigurationStoreIdentityPtrOutputWithContext(context.Background())
}

func (i ConfigurationStoreIdentityArgs) ToConfigurationStoreIdentityPtrOutputWithContext(ctx context.Context) ConfigurationStoreIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStoreIdentityOutput).ToConfigurationStoreIdentityPtrOutputWithContext(ctx)
}

// ConfigurationStoreIdentityPtrInput is an input type that accepts ConfigurationStoreIdentityArgs, ConfigurationStoreIdentityPtr and ConfigurationStoreIdentityPtrOutput values.
// You can construct a concrete instance of `ConfigurationStoreIdentityPtrInput` via:
//
//	        ConfigurationStoreIdentityArgs{...}
//
//	or:
//
//	        nil
type ConfigurationStoreIdentityPtrInput interface {
	pulumi.Input

	ToConfigurationStoreIdentityPtrOutput() ConfigurationStoreIdentityPtrOutput
	ToConfigurationStoreIdentityPtrOutputWithContext(context.Context) ConfigurationStoreIdentityPtrOutput
}

type configurationStoreIdentityPtrType ConfigurationStoreIdentityArgs

func ConfigurationStoreIdentityPtr(v *ConfigurationStoreIdentityArgs) ConfigurationStoreIdentityPtrInput {
	return (*configurationStoreIdentityPtrType)(v)
}

func (*configurationStoreIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationStoreIdentity)(nil)).Elem()
}

func (i *configurationStoreIdentityPtrType) ToConfigurationStoreIdentityPtrOutput() ConfigurationStoreIdentityPtrOutput {
	return i.ToConfigurationStoreIdentityPtrOutputWithContext(context.Background())
}

func (i *configurationStoreIdentityPtrType) ToConfigurationStoreIdentityPtrOutputWithContext(ctx context.Context) ConfigurationStoreIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStoreIdentityPtrOutput)
}

func (i *configurationStoreIdentityPtrType) ToOutput(ctx context.Context) pulumix.Output[*ConfigurationStoreIdentity] {
	return pulumix.Output[*ConfigurationStoreIdentity]{
		OutputState: i.ToConfigurationStoreIdentityPtrOutputWithContext(ctx).OutputState,
	}
}

type ConfigurationStoreIdentityOutput struct{ *pulumi.OutputState }

func (ConfigurationStoreIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStoreIdentity)(nil)).Elem()
}

func (o ConfigurationStoreIdentityOutput) ToConfigurationStoreIdentityOutput() ConfigurationStoreIdentityOutput {
	return o
}

func (o ConfigurationStoreIdentityOutput) ToConfigurationStoreIdentityOutputWithContext(ctx context.Context) ConfigurationStoreIdentityOutput {
	return o
}

func (o ConfigurationStoreIdentityOutput) ToConfigurationStoreIdentityPtrOutput() ConfigurationStoreIdentityPtrOutput {
	return o.ToConfigurationStoreIdentityPtrOutputWithContext(context.Background())
}

func (o ConfigurationStoreIdentityOutput) ToConfigurationStoreIdentityPtrOutputWithContext(ctx context.Context) ConfigurationStoreIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigurationStoreIdentity) *ConfigurationStoreIdentity {
		return &v
	}).(ConfigurationStoreIdentityPtrOutput)
}

func (o ConfigurationStoreIdentityOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationStoreIdentity] {
	return pulumix.Output[ConfigurationStoreIdentity]{
		OutputState: o.OutputState,
	}
}

// A list of User Assigned Managed Identity IDs to be assigned to this App Configuration.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
func (o ConfigurationStoreIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigurationStoreIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this Managed Service Identity.
func (o ConfigurationStoreIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStoreIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The Tenant ID associated with this Managed Service Identity.
func (o ConfigurationStoreIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStoreIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this App Configuration. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
func (o ConfigurationStoreIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationStoreIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type ConfigurationStoreIdentityPtrOutput struct{ *pulumi.OutputState }

func (ConfigurationStoreIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationStoreIdentity)(nil)).Elem()
}

func (o ConfigurationStoreIdentityPtrOutput) ToConfigurationStoreIdentityPtrOutput() ConfigurationStoreIdentityPtrOutput {
	return o
}

func (o ConfigurationStoreIdentityPtrOutput) ToConfigurationStoreIdentityPtrOutputWithContext(ctx context.Context) ConfigurationStoreIdentityPtrOutput {
	return o
}

func (o ConfigurationStoreIdentityPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ConfigurationStoreIdentity] {
	return pulumix.Output[*ConfigurationStoreIdentity]{
		OutputState: o.OutputState,
	}
}

func (o ConfigurationStoreIdentityPtrOutput) Elem() ConfigurationStoreIdentityOutput {
	return o.ApplyT(func(v *ConfigurationStoreIdentity) ConfigurationStoreIdentity {
		if v != nil {
			return *v
		}
		var ret ConfigurationStoreIdentity
		return ret
	}).(ConfigurationStoreIdentityOutput)
}

// A list of User Assigned Managed Identity IDs to be assigned to this App Configuration.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
func (o ConfigurationStoreIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigurationStoreIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this Managed Service Identity.
func (o ConfigurationStoreIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationStoreIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID associated with this Managed Service Identity.
func (o ConfigurationStoreIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationStoreIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this App Configuration. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
func (o ConfigurationStoreIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationStoreIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ConfigurationStorePrimaryReadKey struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString *string `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id *string `pulumi:"id"`
	// The Secret of the Access Key.
	Secret *string `pulumi:"secret"`
}

// ConfigurationStorePrimaryReadKeyInput is an input type that accepts ConfigurationStorePrimaryReadKeyArgs and ConfigurationStorePrimaryReadKeyOutput values.
// You can construct a concrete instance of `ConfigurationStorePrimaryReadKeyInput` via:
//
//	ConfigurationStorePrimaryReadKeyArgs{...}
type ConfigurationStorePrimaryReadKeyInput interface {
	pulumi.Input

	ToConfigurationStorePrimaryReadKeyOutput() ConfigurationStorePrimaryReadKeyOutput
	ToConfigurationStorePrimaryReadKeyOutputWithContext(context.Context) ConfigurationStorePrimaryReadKeyOutput
}

type ConfigurationStorePrimaryReadKeyArgs struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Secret of the Access Key.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
}

func (ConfigurationStorePrimaryReadKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStorePrimaryReadKey)(nil)).Elem()
}

func (i ConfigurationStorePrimaryReadKeyArgs) ToConfigurationStorePrimaryReadKeyOutput() ConfigurationStorePrimaryReadKeyOutput {
	return i.ToConfigurationStorePrimaryReadKeyOutputWithContext(context.Background())
}

func (i ConfigurationStorePrimaryReadKeyArgs) ToConfigurationStorePrimaryReadKeyOutputWithContext(ctx context.Context) ConfigurationStorePrimaryReadKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStorePrimaryReadKeyOutput)
}

func (i ConfigurationStorePrimaryReadKeyArgs) ToOutput(ctx context.Context) pulumix.Output[ConfigurationStorePrimaryReadKey] {
	return pulumix.Output[ConfigurationStorePrimaryReadKey]{
		OutputState: i.ToConfigurationStorePrimaryReadKeyOutputWithContext(ctx).OutputState,
	}
}

// ConfigurationStorePrimaryReadKeyArrayInput is an input type that accepts ConfigurationStorePrimaryReadKeyArray and ConfigurationStorePrimaryReadKeyArrayOutput values.
// You can construct a concrete instance of `ConfigurationStorePrimaryReadKeyArrayInput` via:
//
//	ConfigurationStorePrimaryReadKeyArray{ ConfigurationStorePrimaryReadKeyArgs{...} }
type ConfigurationStorePrimaryReadKeyArrayInput interface {
	pulumi.Input

	ToConfigurationStorePrimaryReadKeyArrayOutput() ConfigurationStorePrimaryReadKeyArrayOutput
	ToConfigurationStorePrimaryReadKeyArrayOutputWithContext(context.Context) ConfigurationStorePrimaryReadKeyArrayOutput
}

type ConfigurationStorePrimaryReadKeyArray []ConfigurationStorePrimaryReadKeyInput

func (ConfigurationStorePrimaryReadKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationStorePrimaryReadKey)(nil)).Elem()
}

func (i ConfigurationStorePrimaryReadKeyArray) ToConfigurationStorePrimaryReadKeyArrayOutput() ConfigurationStorePrimaryReadKeyArrayOutput {
	return i.ToConfigurationStorePrimaryReadKeyArrayOutputWithContext(context.Background())
}

func (i ConfigurationStorePrimaryReadKeyArray) ToConfigurationStorePrimaryReadKeyArrayOutputWithContext(ctx context.Context) ConfigurationStorePrimaryReadKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStorePrimaryReadKeyArrayOutput)
}

func (i ConfigurationStorePrimaryReadKeyArray) ToOutput(ctx context.Context) pulumix.Output[[]ConfigurationStorePrimaryReadKey] {
	return pulumix.Output[[]ConfigurationStorePrimaryReadKey]{
		OutputState: i.ToConfigurationStorePrimaryReadKeyArrayOutputWithContext(ctx).OutputState,
	}
}

type ConfigurationStorePrimaryReadKeyOutput struct{ *pulumi.OutputState }

func (ConfigurationStorePrimaryReadKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStorePrimaryReadKey)(nil)).Elem()
}

func (o ConfigurationStorePrimaryReadKeyOutput) ToConfigurationStorePrimaryReadKeyOutput() ConfigurationStorePrimaryReadKeyOutput {
	return o
}

func (o ConfigurationStorePrimaryReadKeyOutput) ToConfigurationStorePrimaryReadKeyOutputWithContext(ctx context.Context) ConfigurationStorePrimaryReadKeyOutput {
	return o
}

func (o ConfigurationStorePrimaryReadKeyOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationStorePrimaryReadKey] {
	return pulumix.Output[ConfigurationStorePrimaryReadKey]{
		OutputState: o.OutputState,
	}
}

// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
func (o ConfigurationStorePrimaryReadKeyOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStorePrimaryReadKey) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// The ID of the Access Key.
func (o ConfigurationStorePrimaryReadKeyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStorePrimaryReadKey) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Secret of the Access Key.
func (o ConfigurationStorePrimaryReadKeyOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStorePrimaryReadKey) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

type ConfigurationStorePrimaryReadKeyArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationStorePrimaryReadKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationStorePrimaryReadKey)(nil)).Elem()
}

func (o ConfigurationStorePrimaryReadKeyArrayOutput) ToConfigurationStorePrimaryReadKeyArrayOutput() ConfigurationStorePrimaryReadKeyArrayOutput {
	return o
}

func (o ConfigurationStorePrimaryReadKeyArrayOutput) ToConfigurationStorePrimaryReadKeyArrayOutputWithContext(ctx context.Context) ConfigurationStorePrimaryReadKeyArrayOutput {
	return o
}

func (o ConfigurationStorePrimaryReadKeyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ConfigurationStorePrimaryReadKey] {
	return pulumix.Output[[]ConfigurationStorePrimaryReadKey]{
		OutputState: o.OutputState,
	}
}

func (o ConfigurationStorePrimaryReadKeyArrayOutput) Index(i pulumi.IntInput) ConfigurationStorePrimaryReadKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationStorePrimaryReadKey {
		return vs[0].([]ConfigurationStorePrimaryReadKey)[vs[1].(int)]
	}).(ConfigurationStorePrimaryReadKeyOutput)
}

type ConfigurationStorePrimaryWriteKey struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString *string `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id *string `pulumi:"id"`
	// The Secret of the Access Key.
	Secret *string `pulumi:"secret"`
}

// ConfigurationStorePrimaryWriteKeyInput is an input type that accepts ConfigurationStorePrimaryWriteKeyArgs and ConfigurationStorePrimaryWriteKeyOutput values.
// You can construct a concrete instance of `ConfigurationStorePrimaryWriteKeyInput` via:
//
//	ConfigurationStorePrimaryWriteKeyArgs{...}
type ConfigurationStorePrimaryWriteKeyInput interface {
	pulumi.Input

	ToConfigurationStorePrimaryWriteKeyOutput() ConfigurationStorePrimaryWriteKeyOutput
	ToConfigurationStorePrimaryWriteKeyOutputWithContext(context.Context) ConfigurationStorePrimaryWriteKeyOutput
}

type ConfigurationStorePrimaryWriteKeyArgs struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Secret of the Access Key.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
}

func (ConfigurationStorePrimaryWriteKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStorePrimaryWriteKey)(nil)).Elem()
}

func (i ConfigurationStorePrimaryWriteKeyArgs) ToConfigurationStorePrimaryWriteKeyOutput() ConfigurationStorePrimaryWriteKeyOutput {
	return i.ToConfigurationStorePrimaryWriteKeyOutputWithContext(context.Background())
}

func (i ConfigurationStorePrimaryWriteKeyArgs) ToConfigurationStorePrimaryWriteKeyOutputWithContext(ctx context.Context) ConfigurationStorePrimaryWriteKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStorePrimaryWriteKeyOutput)
}

func (i ConfigurationStorePrimaryWriteKeyArgs) ToOutput(ctx context.Context) pulumix.Output[ConfigurationStorePrimaryWriteKey] {
	return pulumix.Output[ConfigurationStorePrimaryWriteKey]{
		OutputState: i.ToConfigurationStorePrimaryWriteKeyOutputWithContext(ctx).OutputState,
	}
}

// ConfigurationStorePrimaryWriteKeyArrayInput is an input type that accepts ConfigurationStorePrimaryWriteKeyArray and ConfigurationStorePrimaryWriteKeyArrayOutput values.
// You can construct a concrete instance of `ConfigurationStorePrimaryWriteKeyArrayInput` via:
//
//	ConfigurationStorePrimaryWriteKeyArray{ ConfigurationStorePrimaryWriteKeyArgs{...} }
type ConfigurationStorePrimaryWriteKeyArrayInput interface {
	pulumi.Input

	ToConfigurationStorePrimaryWriteKeyArrayOutput() ConfigurationStorePrimaryWriteKeyArrayOutput
	ToConfigurationStorePrimaryWriteKeyArrayOutputWithContext(context.Context) ConfigurationStorePrimaryWriteKeyArrayOutput
}

type ConfigurationStorePrimaryWriteKeyArray []ConfigurationStorePrimaryWriteKeyInput

func (ConfigurationStorePrimaryWriteKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationStorePrimaryWriteKey)(nil)).Elem()
}

func (i ConfigurationStorePrimaryWriteKeyArray) ToConfigurationStorePrimaryWriteKeyArrayOutput() ConfigurationStorePrimaryWriteKeyArrayOutput {
	return i.ToConfigurationStorePrimaryWriteKeyArrayOutputWithContext(context.Background())
}

func (i ConfigurationStorePrimaryWriteKeyArray) ToConfigurationStorePrimaryWriteKeyArrayOutputWithContext(ctx context.Context) ConfigurationStorePrimaryWriteKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStorePrimaryWriteKeyArrayOutput)
}

func (i ConfigurationStorePrimaryWriteKeyArray) ToOutput(ctx context.Context) pulumix.Output[[]ConfigurationStorePrimaryWriteKey] {
	return pulumix.Output[[]ConfigurationStorePrimaryWriteKey]{
		OutputState: i.ToConfigurationStorePrimaryWriteKeyArrayOutputWithContext(ctx).OutputState,
	}
}

type ConfigurationStorePrimaryWriteKeyOutput struct{ *pulumi.OutputState }

func (ConfigurationStorePrimaryWriteKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStorePrimaryWriteKey)(nil)).Elem()
}

func (o ConfigurationStorePrimaryWriteKeyOutput) ToConfigurationStorePrimaryWriteKeyOutput() ConfigurationStorePrimaryWriteKeyOutput {
	return o
}

func (o ConfigurationStorePrimaryWriteKeyOutput) ToConfigurationStorePrimaryWriteKeyOutputWithContext(ctx context.Context) ConfigurationStorePrimaryWriteKeyOutput {
	return o
}

func (o ConfigurationStorePrimaryWriteKeyOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationStorePrimaryWriteKey] {
	return pulumix.Output[ConfigurationStorePrimaryWriteKey]{
		OutputState: o.OutputState,
	}
}

// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
func (o ConfigurationStorePrimaryWriteKeyOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStorePrimaryWriteKey) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// The ID of the Access Key.
func (o ConfigurationStorePrimaryWriteKeyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStorePrimaryWriteKey) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Secret of the Access Key.
func (o ConfigurationStorePrimaryWriteKeyOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStorePrimaryWriteKey) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

type ConfigurationStorePrimaryWriteKeyArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationStorePrimaryWriteKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationStorePrimaryWriteKey)(nil)).Elem()
}

func (o ConfigurationStorePrimaryWriteKeyArrayOutput) ToConfigurationStorePrimaryWriteKeyArrayOutput() ConfigurationStorePrimaryWriteKeyArrayOutput {
	return o
}

func (o ConfigurationStorePrimaryWriteKeyArrayOutput) ToConfigurationStorePrimaryWriteKeyArrayOutputWithContext(ctx context.Context) ConfigurationStorePrimaryWriteKeyArrayOutput {
	return o
}

func (o ConfigurationStorePrimaryWriteKeyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ConfigurationStorePrimaryWriteKey] {
	return pulumix.Output[[]ConfigurationStorePrimaryWriteKey]{
		OutputState: o.OutputState,
	}
}

func (o ConfigurationStorePrimaryWriteKeyArrayOutput) Index(i pulumi.IntInput) ConfigurationStorePrimaryWriteKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationStorePrimaryWriteKey {
		return vs[0].([]ConfigurationStorePrimaryWriteKey)[vs[1].(int)]
	}).(ConfigurationStorePrimaryWriteKeyOutput)
}

type ConfigurationStoreReplica struct {
	// The URL of the App Configuration Replica.
	Endpoint *string `pulumi:"endpoint"`
	// The ID of the Access Key.
	Id *string `pulumi:"id"`
	// Specifies the supported Azure location where the replica exists.
	Location string `pulumi:"location"`
	// Specifies the name of the replica.
	Name string `pulumi:"name"`
}

// ConfigurationStoreReplicaInput is an input type that accepts ConfigurationStoreReplicaArgs and ConfigurationStoreReplicaOutput values.
// You can construct a concrete instance of `ConfigurationStoreReplicaInput` via:
//
//	ConfigurationStoreReplicaArgs{...}
type ConfigurationStoreReplicaInput interface {
	pulumi.Input

	ToConfigurationStoreReplicaOutput() ConfigurationStoreReplicaOutput
	ToConfigurationStoreReplicaOutputWithContext(context.Context) ConfigurationStoreReplicaOutput
}

type ConfigurationStoreReplicaArgs struct {
	// The URL of the App Configuration Replica.
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	// The ID of the Access Key.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies the supported Azure location where the replica exists.
	Location pulumi.StringInput `pulumi:"location"`
	// Specifies the name of the replica.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ConfigurationStoreReplicaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStoreReplica)(nil)).Elem()
}

func (i ConfigurationStoreReplicaArgs) ToConfigurationStoreReplicaOutput() ConfigurationStoreReplicaOutput {
	return i.ToConfigurationStoreReplicaOutputWithContext(context.Background())
}

func (i ConfigurationStoreReplicaArgs) ToConfigurationStoreReplicaOutputWithContext(ctx context.Context) ConfigurationStoreReplicaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStoreReplicaOutput)
}

func (i ConfigurationStoreReplicaArgs) ToOutput(ctx context.Context) pulumix.Output[ConfigurationStoreReplica] {
	return pulumix.Output[ConfigurationStoreReplica]{
		OutputState: i.ToConfigurationStoreReplicaOutputWithContext(ctx).OutputState,
	}
}

// ConfigurationStoreReplicaArrayInput is an input type that accepts ConfigurationStoreReplicaArray and ConfigurationStoreReplicaArrayOutput values.
// You can construct a concrete instance of `ConfigurationStoreReplicaArrayInput` via:
//
//	ConfigurationStoreReplicaArray{ ConfigurationStoreReplicaArgs{...} }
type ConfigurationStoreReplicaArrayInput interface {
	pulumi.Input

	ToConfigurationStoreReplicaArrayOutput() ConfigurationStoreReplicaArrayOutput
	ToConfigurationStoreReplicaArrayOutputWithContext(context.Context) ConfigurationStoreReplicaArrayOutput
}

type ConfigurationStoreReplicaArray []ConfigurationStoreReplicaInput

func (ConfigurationStoreReplicaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationStoreReplica)(nil)).Elem()
}

func (i ConfigurationStoreReplicaArray) ToConfigurationStoreReplicaArrayOutput() ConfigurationStoreReplicaArrayOutput {
	return i.ToConfigurationStoreReplicaArrayOutputWithContext(context.Background())
}

func (i ConfigurationStoreReplicaArray) ToConfigurationStoreReplicaArrayOutputWithContext(ctx context.Context) ConfigurationStoreReplicaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStoreReplicaArrayOutput)
}

func (i ConfigurationStoreReplicaArray) ToOutput(ctx context.Context) pulumix.Output[[]ConfigurationStoreReplica] {
	return pulumix.Output[[]ConfigurationStoreReplica]{
		OutputState: i.ToConfigurationStoreReplicaArrayOutputWithContext(ctx).OutputState,
	}
}

type ConfigurationStoreReplicaOutput struct{ *pulumi.OutputState }

func (ConfigurationStoreReplicaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStoreReplica)(nil)).Elem()
}

func (o ConfigurationStoreReplicaOutput) ToConfigurationStoreReplicaOutput() ConfigurationStoreReplicaOutput {
	return o
}

func (o ConfigurationStoreReplicaOutput) ToConfigurationStoreReplicaOutputWithContext(ctx context.Context) ConfigurationStoreReplicaOutput {
	return o
}

func (o ConfigurationStoreReplicaOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationStoreReplica] {
	return pulumix.Output[ConfigurationStoreReplica]{
		OutputState: o.OutputState,
	}
}

// The URL of the App Configuration Replica.
func (o ConfigurationStoreReplicaOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStoreReplica) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// The ID of the Access Key.
func (o ConfigurationStoreReplicaOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStoreReplica) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies the supported Azure location where the replica exists.
func (o ConfigurationStoreReplicaOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationStoreReplica) string { return v.Location }).(pulumi.StringOutput)
}

// Specifies the name of the replica.
func (o ConfigurationStoreReplicaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationStoreReplica) string { return v.Name }).(pulumi.StringOutput)
}

type ConfigurationStoreReplicaArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationStoreReplicaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationStoreReplica)(nil)).Elem()
}

func (o ConfigurationStoreReplicaArrayOutput) ToConfigurationStoreReplicaArrayOutput() ConfigurationStoreReplicaArrayOutput {
	return o
}

func (o ConfigurationStoreReplicaArrayOutput) ToConfigurationStoreReplicaArrayOutputWithContext(ctx context.Context) ConfigurationStoreReplicaArrayOutput {
	return o
}

func (o ConfigurationStoreReplicaArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ConfigurationStoreReplica] {
	return pulumix.Output[[]ConfigurationStoreReplica]{
		OutputState: o.OutputState,
	}
}

func (o ConfigurationStoreReplicaArrayOutput) Index(i pulumi.IntInput) ConfigurationStoreReplicaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationStoreReplica {
		return vs[0].([]ConfigurationStoreReplica)[vs[1].(int)]
	}).(ConfigurationStoreReplicaOutput)
}

type ConfigurationStoreSecondaryReadKey struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString *string `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id *string `pulumi:"id"`
	// The Secret of the Access Key.
	Secret *string `pulumi:"secret"`
}

// ConfigurationStoreSecondaryReadKeyInput is an input type that accepts ConfigurationStoreSecondaryReadKeyArgs and ConfigurationStoreSecondaryReadKeyOutput values.
// You can construct a concrete instance of `ConfigurationStoreSecondaryReadKeyInput` via:
//
//	ConfigurationStoreSecondaryReadKeyArgs{...}
type ConfigurationStoreSecondaryReadKeyInput interface {
	pulumi.Input

	ToConfigurationStoreSecondaryReadKeyOutput() ConfigurationStoreSecondaryReadKeyOutput
	ToConfigurationStoreSecondaryReadKeyOutputWithContext(context.Context) ConfigurationStoreSecondaryReadKeyOutput
}

type ConfigurationStoreSecondaryReadKeyArgs struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Secret of the Access Key.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
}

func (ConfigurationStoreSecondaryReadKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStoreSecondaryReadKey)(nil)).Elem()
}

func (i ConfigurationStoreSecondaryReadKeyArgs) ToConfigurationStoreSecondaryReadKeyOutput() ConfigurationStoreSecondaryReadKeyOutput {
	return i.ToConfigurationStoreSecondaryReadKeyOutputWithContext(context.Background())
}

func (i ConfigurationStoreSecondaryReadKeyArgs) ToConfigurationStoreSecondaryReadKeyOutputWithContext(ctx context.Context) ConfigurationStoreSecondaryReadKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStoreSecondaryReadKeyOutput)
}

func (i ConfigurationStoreSecondaryReadKeyArgs) ToOutput(ctx context.Context) pulumix.Output[ConfigurationStoreSecondaryReadKey] {
	return pulumix.Output[ConfigurationStoreSecondaryReadKey]{
		OutputState: i.ToConfigurationStoreSecondaryReadKeyOutputWithContext(ctx).OutputState,
	}
}

// ConfigurationStoreSecondaryReadKeyArrayInput is an input type that accepts ConfigurationStoreSecondaryReadKeyArray and ConfigurationStoreSecondaryReadKeyArrayOutput values.
// You can construct a concrete instance of `ConfigurationStoreSecondaryReadKeyArrayInput` via:
//
//	ConfigurationStoreSecondaryReadKeyArray{ ConfigurationStoreSecondaryReadKeyArgs{...} }
type ConfigurationStoreSecondaryReadKeyArrayInput interface {
	pulumi.Input

	ToConfigurationStoreSecondaryReadKeyArrayOutput() ConfigurationStoreSecondaryReadKeyArrayOutput
	ToConfigurationStoreSecondaryReadKeyArrayOutputWithContext(context.Context) ConfigurationStoreSecondaryReadKeyArrayOutput
}

type ConfigurationStoreSecondaryReadKeyArray []ConfigurationStoreSecondaryReadKeyInput

func (ConfigurationStoreSecondaryReadKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationStoreSecondaryReadKey)(nil)).Elem()
}

func (i ConfigurationStoreSecondaryReadKeyArray) ToConfigurationStoreSecondaryReadKeyArrayOutput() ConfigurationStoreSecondaryReadKeyArrayOutput {
	return i.ToConfigurationStoreSecondaryReadKeyArrayOutputWithContext(context.Background())
}

func (i ConfigurationStoreSecondaryReadKeyArray) ToConfigurationStoreSecondaryReadKeyArrayOutputWithContext(ctx context.Context) ConfigurationStoreSecondaryReadKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStoreSecondaryReadKeyArrayOutput)
}

func (i ConfigurationStoreSecondaryReadKeyArray) ToOutput(ctx context.Context) pulumix.Output[[]ConfigurationStoreSecondaryReadKey] {
	return pulumix.Output[[]ConfigurationStoreSecondaryReadKey]{
		OutputState: i.ToConfigurationStoreSecondaryReadKeyArrayOutputWithContext(ctx).OutputState,
	}
}

type ConfigurationStoreSecondaryReadKeyOutput struct{ *pulumi.OutputState }

func (ConfigurationStoreSecondaryReadKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStoreSecondaryReadKey)(nil)).Elem()
}

func (o ConfigurationStoreSecondaryReadKeyOutput) ToConfigurationStoreSecondaryReadKeyOutput() ConfigurationStoreSecondaryReadKeyOutput {
	return o
}

func (o ConfigurationStoreSecondaryReadKeyOutput) ToConfigurationStoreSecondaryReadKeyOutputWithContext(ctx context.Context) ConfigurationStoreSecondaryReadKeyOutput {
	return o
}

func (o ConfigurationStoreSecondaryReadKeyOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationStoreSecondaryReadKey] {
	return pulumix.Output[ConfigurationStoreSecondaryReadKey]{
		OutputState: o.OutputState,
	}
}

// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
func (o ConfigurationStoreSecondaryReadKeyOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStoreSecondaryReadKey) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// The ID of the Access Key.
func (o ConfigurationStoreSecondaryReadKeyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStoreSecondaryReadKey) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Secret of the Access Key.
func (o ConfigurationStoreSecondaryReadKeyOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStoreSecondaryReadKey) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

type ConfigurationStoreSecondaryReadKeyArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationStoreSecondaryReadKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationStoreSecondaryReadKey)(nil)).Elem()
}

func (o ConfigurationStoreSecondaryReadKeyArrayOutput) ToConfigurationStoreSecondaryReadKeyArrayOutput() ConfigurationStoreSecondaryReadKeyArrayOutput {
	return o
}

func (o ConfigurationStoreSecondaryReadKeyArrayOutput) ToConfigurationStoreSecondaryReadKeyArrayOutputWithContext(ctx context.Context) ConfigurationStoreSecondaryReadKeyArrayOutput {
	return o
}

func (o ConfigurationStoreSecondaryReadKeyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ConfigurationStoreSecondaryReadKey] {
	return pulumix.Output[[]ConfigurationStoreSecondaryReadKey]{
		OutputState: o.OutputState,
	}
}

func (o ConfigurationStoreSecondaryReadKeyArrayOutput) Index(i pulumi.IntInput) ConfigurationStoreSecondaryReadKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationStoreSecondaryReadKey {
		return vs[0].([]ConfigurationStoreSecondaryReadKey)[vs[1].(int)]
	}).(ConfigurationStoreSecondaryReadKeyOutput)
}

type ConfigurationStoreSecondaryWriteKey struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString *string `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id *string `pulumi:"id"`
	// The Secret of the Access Key.
	Secret *string `pulumi:"secret"`
}

// ConfigurationStoreSecondaryWriteKeyInput is an input type that accepts ConfigurationStoreSecondaryWriteKeyArgs and ConfigurationStoreSecondaryWriteKeyOutput values.
// You can construct a concrete instance of `ConfigurationStoreSecondaryWriteKeyInput` via:
//
//	ConfigurationStoreSecondaryWriteKeyArgs{...}
type ConfigurationStoreSecondaryWriteKeyInput interface {
	pulumi.Input

	ToConfigurationStoreSecondaryWriteKeyOutput() ConfigurationStoreSecondaryWriteKeyOutput
	ToConfigurationStoreSecondaryWriteKeyOutputWithContext(context.Context) ConfigurationStoreSecondaryWriteKeyOutput
}

type ConfigurationStoreSecondaryWriteKeyArgs struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Secret of the Access Key.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
}

func (ConfigurationStoreSecondaryWriteKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStoreSecondaryWriteKey)(nil)).Elem()
}

func (i ConfigurationStoreSecondaryWriteKeyArgs) ToConfigurationStoreSecondaryWriteKeyOutput() ConfigurationStoreSecondaryWriteKeyOutput {
	return i.ToConfigurationStoreSecondaryWriteKeyOutputWithContext(context.Background())
}

func (i ConfigurationStoreSecondaryWriteKeyArgs) ToConfigurationStoreSecondaryWriteKeyOutputWithContext(ctx context.Context) ConfigurationStoreSecondaryWriteKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStoreSecondaryWriteKeyOutput)
}

func (i ConfigurationStoreSecondaryWriteKeyArgs) ToOutput(ctx context.Context) pulumix.Output[ConfigurationStoreSecondaryWriteKey] {
	return pulumix.Output[ConfigurationStoreSecondaryWriteKey]{
		OutputState: i.ToConfigurationStoreSecondaryWriteKeyOutputWithContext(ctx).OutputState,
	}
}

// ConfigurationStoreSecondaryWriteKeyArrayInput is an input type that accepts ConfigurationStoreSecondaryWriteKeyArray and ConfigurationStoreSecondaryWriteKeyArrayOutput values.
// You can construct a concrete instance of `ConfigurationStoreSecondaryWriteKeyArrayInput` via:
//
//	ConfigurationStoreSecondaryWriteKeyArray{ ConfigurationStoreSecondaryWriteKeyArgs{...} }
type ConfigurationStoreSecondaryWriteKeyArrayInput interface {
	pulumi.Input

	ToConfigurationStoreSecondaryWriteKeyArrayOutput() ConfigurationStoreSecondaryWriteKeyArrayOutput
	ToConfigurationStoreSecondaryWriteKeyArrayOutputWithContext(context.Context) ConfigurationStoreSecondaryWriteKeyArrayOutput
}

type ConfigurationStoreSecondaryWriteKeyArray []ConfigurationStoreSecondaryWriteKeyInput

func (ConfigurationStoreSecondaryWriteKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationStoreSecondaryWriteKey)(nil)).Elem()
}

func (i ConfigurationStoreSecondaryWriteKeyArray) ToConfigurationStoreSecondaryWriteKeyArrayOutput() ConfigurationStoreSecondaryWriteKeyArrayOutput {
	return i.ToConfigurationStoreSecondaryWriteKeyArrayOutputWithContext(context.Background())
}

func (i ConfigurationStoreSecondaryWriteKeyArray) ToConfigurationStoreSecondaryWriteKeyArrayOutputWithContext(ctx context.Context) ConfigurationStoreSecondaryWriteKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStoreSecondaryWriteKeyArrayOutput)
}

func (i ConfigurationStoreSecondaryWriteKeyArray) ToOutput(ctx context.Context) pulumix.Output[[]ConfigurationStoreSecondaryWriteKey] {
	return pulumix.Output[[]ConfigurationStoreSecondaryWriteKey]{
		OutputState: i.ToConfigurationStoreSecondaryWriteKeyArrayOutputWithContext(ctx).OutputState,
	}
}

type ConfigurationStoreSecondaryWriteKeyOutput struct{ *pulumi.OutputState }

func (ConfigurationStoreSecondaryWriteKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStoreSecondaryWriteKey)(nil)).Elem()
}

func (o ConfigurationStoreSecondaryWriteKeyOutput) ToConfigurationStoreSecondaryWriteKeyOutput() ConfigurationStoreSecondaryWriteKeyOutput {
	return o
}

func (o ConfigurationStoreSecondaryWriteKeyOutput) ToConfigurationStoreSecondaryWriteKeyOutputWithContext(ctx context.Context) ConfigurationStoreSecondaryWriteKeyOutput {
	return o
}

func (o ConfigurationStoreSecondaryWriteKeyOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationStoreSecondaryWriteKey] {
	return pulumix.Output[ConfigurationStoreSecondaryWriteKey]{
		OutputState: o.OutputState,
	}
}

// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
func (o ConfigurationStoreSecondaryWriteKeyOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStoreSecondaryWriteKey) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// The ID of the Access Key.
func (o ConfigurationStoreSecondaryWriteKeyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStoreSecondaryWriteKey) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Secret of the Access Key.
func (o ConfigurationStoreSecondaryWriteKeyOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStoreSecondaryWriteKey) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

type ConfigurationStoreSecondaryWriteKeyArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationStoreSecondaryWriteKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationStoreSecondaryWriteKey)(nil)).Elem()
}

func (o ConfigurationStoreSecondaryWriteKeyArrayOutput) ToConfigurationStoreSecondaryWriteKeyArrayOutput() ConfigurationStoreSecondaryWriteKeyArrayOutput {
	return o
}

func (o ConfigurationStoreSecondaryWriteKeyArrayOutput) ToConfigurationStoreSecondaryWriteKeyArrayOutputWithContext(ctx context.Context) ConfigurationStoreSecondaryWriteKeyArrayOutput {
	return o
}

func (o ConfigurationStoreSecondaryWriteKeyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ConfigurationStoreSecondaryWriteKey] {
	return pulumix.Output[[]ConfigurationStoreSecondaryWriteKey]{
		OutputState: o.OutputState,
	}
}

func (o ConfigurationStoreSecondaryWriteKeyArrayOutput) Index(i pulumi.IntInput) ConfigurationStoreSecondaryWriteKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationStoreSecondaryWriteKey {
		return vs[0].([]ConfigurationStoreSecondaryWriteKey)[vs[1].(int)]
	}).(ConfigurationStoreSecondaryWriteKeyOutput)
}

type GetConfigurationKeysItem struct {
	// The content type of the App Configuration Key.
	ContentType string `pulumi:"contentType"`
	// The ETag of the key.
	Etag string `pulumi:"etag"`
	// The name of the App Configuration Keys to look up.
	Key string `pulumi:"key"`
	// The label of the App Configuration Keys tp look up.
	Label string `pulumi:"label"`
	// Is this App Configuration Key be Locked to prevent changes.
	Locked bool `pulumi:"locked"`
	// A mapping of tags assigned to the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of the App Configuration Key. It can either be `kv` (simple [key/value](https://docs.microsoft.com/azure/azure-app-configuration/concept-key-value)) or `vault` (where the value is a reference to a [Key Vault Secret](https://azure.microsoft.com/en-gb/services/key-vault/).
	Type string `pulumi:"type"`
	// The value of the App Configuration Key.
	Value string `pulumi:"value"`
	// The ID of the vault secret this App Configuration Key refers to, when `type` is `vault`.
	VaultKeyReference string `pulumi:"vaultKeyReference"`
}

// GetConfigurationKeysItemInput is an input type that accepts GetConfigurationKeysItemArgs and GetConfigurationKeysItemOutput values.
// You can construct a concrete instance of `GetConfigurationKeysItemInput` via:
//
//	GetConfigurationKeysItemArgs{...}
type GetConfigurationKeysItemInput interface {
	pulumi.Input

	ToGetConfigurationKeysItemOutput() GetConfigurationKeysItemOutput
	ToGetConfigurationKeysItemOutputWithContext(context.Context) GetConfigurationKeysItemOutput
}

type GetConfigurationKeysItemArgs struct {
	// The content type of the App Configuration Key.
	ContentType pulumi.StringInput `pulumi:"contentType"`
	// The ETag of the key.
	Etag pulumi.StringInput `pulumi:"etag"`
	// The name of the App Configuration Keys to look up.
	Key pulumi.StringInput `pulumi:"key"`
	// The label of the App Configuration Keys tp look up.
	Label pulumi.StringInput `pulumi:"label"`
	// Is this App Configuration Key be Locked to prevent changes.
	Locked pulumi.BoolInput `pulumi:"locked"`
	// A mapping of tags assigned to the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The type of the App Configuration Key. It can either be `kv` (simple [key/value](https://docs.microsoft.com/azure/azure-app-configuration/concept-key-value)) or `vault` (where the value is a reference to a [Key Vault Secret](https://azure.microsoft.com/en-gb/services/key-vault/).
	Type pulumi.StringInput `pulumi:"type"`
	// The value of the App Configuration Key.
	Value pulumi.StringInput `pulumi:"value"`
	// The ID of the vault secret this App Configuration Key refers to, when `type` is `vault`.
	VaultKeyReference pulumi.StringInput `pulumi:"vaultKeyReference"`
}

func (GetConfigurationKeysItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationKeysItem)(nil)).Elem()
}

func (i GetConfigurationKeysItemArgs) ToGetConfigurationKeysItemOutput() GetConfigurationKeysItemOutput {
	return i.ToGetConfigurationKeysItemOutputWithContext(context.Background())
}

func (i GetConfigurationKeysItemArgs) ToGetConfigurationKeysItemOutputWithContext(ctx context.Context) GetConfigurationKeysItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationKeysItemOutput)
}

func (i GetConfigurationKeysItemArgs) ToOutput(ctx context.Context) pulumix.Output[GetConfigurationKeysItem] {
	return pulumix.Output[GetConfigurationKeysItem]{
		OutputState: i.ToGetConfigurationKeysItemOutputWithContext(ctx).OutputState,
	}
}

// GetConfigurationKeysItemArrayInput is an input type that accepts GetConfigurationKeysItemArray and GetConfigurationKeysItemArrayOutput values.
// You can construct a concrete instance of `GetConfigurationKeysItemArrayInput` via:
//
//	GetConfigurationKeysItemArray{ GetConfigurationKeysItemArgs{...} }
type GetConfigurationKeysItemArrayInput interface {
	pulumi.Input

	ToGetConfigurationKeysItemArrayOutput() GetConfigurationKeysItemArrayOutput
	ToGetConfigurationKeysItemArrayOutputWithContext(context.Context) GetConfigurationKeysItemArrayOutput
}

type GetConfigurationKeysItemArray []GetConfigurationKeysItemInput

func (GetConfigurationKeysItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationKeysItem)(nil)).Elem()
}

func (i GetConfigurationKeysItemArray) ToGetConfigurationKeysItemArrayOutput() GetConfigurationKeysItemArrayOutput {
	return i.ToGetConfigurationKeysItemArrayOutputWithContext(context.Background())
}

func (i GetConfigurationKeysItemArray) ToGetConfigurationKeysItemArrayOutputWithContext(ctx context.Context) GetConfigurationKeysItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationKeysItemArrayOutput)
}

func (i GetConfigurationKeysItemArray) ToOutput(ctx context.Context) pulumix.Output[[]GetConfigurationKeysItem] {
	return pulumix.Output[[]GetConfigurationKeysItem]{
		OutputState: i.ToGetConfigurationKeysItemArrayOutputWithContext(ctx).OutputState,
	}
}

type GetConfigurationKeysItemOutput struct{ *pulumi.OutputState }

func (GetConfigurationKeysItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationKeysItem)(nil)).Elem()
}

func (o GetConfigurationKeysItemOutput) ToGetConfigurationKeysItemOutput() GetConfigurationKeysItemOutput {
	return o
}

func (o GetConfigurationKeysItemOutput) ToGetConfigurationKeysItemOutputWithContext(ctx context.Context) GetConfigurationKeysItemOutput {
	return o
}

func (o GetConfigurationKeysItemOutput) ToOutput(ctx context.Context) pulumix.Output[GetConfigurationKeysItem] {
	return pulumix.Output[GetConfigurationKeysItem]{
		OutputState: o.OutputState,
	}
}

// The content type of the App Configuration Key.
func (o GetConfigurationKeysItemOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationKeysItem) string { return v.ContentType }).(pulumi.StringOutput)
}

// The ETag of the key.
func (o GetConfigurationKeysItemOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationKeysItem) string { return v.Etag }).(pulumi.StringOutput)
}

// The name of the App Configuration Keys to look up.
func (o GetConfigurationKeysItemOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationKeysItem) string { return v.Key }).(pulumi.StringOutput)
}

// The label of the App Configuration Keys tp look up.
func (o GetConfigurationKeysItemOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationKeysItem) string { return v.Label }).(pulumi.StringOutput)
}

// Is this App Configuration Key be Locked to prevent changes.
func (o GetConfigurationKeysItemOutput) Locked() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConfigurationKeysItem) bool { return v.Locked }).(pulumi.BoolOutput)
}

// A mapping of tags assigned to the resource.
func (o GetConfigurationKeysItemOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetConfigurationKeysItem) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the App Configuration Key. It can either be `kv` (simple [key/value](https://docs.microsoft.com/azure/azure-app-configuration/concept-key-value)) or `vault` (where the value is a reference to a [Key Vault Secret](https://azure.microsoft.com/en-gb/services/key-vault/).
func (o GetConfigurationKeysItemOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationKeysItem) string { return v.Type }).(pulumi.StringOutput)
}

// The value of the App Configuration Key.
func (o GetConfigurationKeysItemOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationKeysItem) string { return v.Value }).(pulumi.StringOutput)
}

// The ID of the vault secret this App Configuration Key refers to, when `type` is `vault`.
func (o GetConfigurationKeysItemOutput) VaultKeyReference() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationKeysItem) string { return v.VaultKeyReference }).(pulumi.StringOutput)
}

type GetConfigurationKeysItemArrayOutput struct{ *pulumi.OutputState }

func (GetConfigurationKeysItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationKeysItem)(nil)).Elem()
}

func (o GetConfigurationKeysItemArrayOutput) ToGetConfigurationKeysItemArrayOutput() GetConfigurationKeysItemArrayOutput {
	return o
}

func (o GetConfigurationKeysItemArrayOutput) ToGetConfigurationKeysItemArrayOutputWithContext(ctx context.Context) GetConfigurationKeysItemArrayOutput {
	return o
}

func (o GetConfigurationKeysItemArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetConfigurationKeysItem] {
	return pulumix.Output[[]GetConfigurationKeysItem]{
		OutputState: o.OutputState,
	}
}

func (o GetConfigurationKeysItemArrayOutput) Index(i pulumi.IntInput) GetConfigurationKeysItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigurationKeysItem {
		return vs[0].([]GetConfigurationKeysItem)[vs[1].(int)]
	}).(GetConfigurationKeysItemOutput)
}

type GetConfigurationStoreEncryption struct {
	IdentityClientId      string `pulumi:"identityClientId"`
	KeyVaultKeyIdentifier string `pulumi:"keyVaultKeyIdentifier"`
}

// GetConfigurationStoreEncryptionInput is an input type that accepts GetConfigurationStoreEncryptionArgs and GetConfigurationStoreEncryptionOutput values.
// You can construct a concrete instance of `GetConfigurationStoreEncryptionInput` via:
//
//	GetConfigurationStoreEncryptionArgs{...}
type GetConfigurationStoreEncryptionInput interface {
	pulumi.Input

	ToGetConfigurationStoreEncryptionOutput() GetConfigurationStoreEncryptionOutput
	ToGetConfigurationStoreEncryptionOutputWithContext(context.Context) GetConfigurationStoreEncryptionOutput
}

type GetConfigurationStoreEncryptionArgs struct {
	IdentityClientId      pulumi.StringInput `pulumi:"identityClientId"`
	KeyVaultKeyIdentifier pulumi.StringInput `pulumi:"keyVaultKeyIdentifier"`
}

func (GetConfigurationStoreEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationStoreEncryption)(nil)).Elem()
}

func (i GetConfigurationStoreEncryptionArgs) ToGetConfigurationStoreEncryptionOutput() GetConfigurationStoreEncryptionOutput {
	return i.ToGetConfigurationStoreEncryptionOutputWithContext(context.Background())
}

func (i GetConfigurationStoreEncryptionArgs) ToGetConfigurationStoreEncryptionOutputWithContext(ctx context.Context) GetConfigurationStoreEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationStoreEncryptionOutput)
}

func (i GetConfigurationStoreEncryptionArgs) ToOutput(ctx context.Context) pulumix.Output[GetConfigurationStoreEncryption] {
	return pulumix.Output[GetConfigurationStoreEncryption]{
		OutputState: i.ToGetConfigurationStoreEncryptionOutputWithContext(ctx).OutputState,
	}
}

// GetConfigurationStoreEncryptionArrayInput is an input type that accepts GetConfigurationStoreEncryptionArray and GetConfigurationStoreEncryptionArrayOutput values.
// You can construct a concrete instance of `GetConfigurationStoreEncryptionArrayInput` via:
//
//	GetConfigurationStoreEncryptionArray{ GetConfigurationStoreEncryptionArgs{...} }
type GetConfigurationStoreEncryptionArrayInput interface {
	pulumi.Input

	ToGetConfigurationStoreEncryptionArrayOutput() GetConfigurationStoreEncryptionArrayOutput
	ToGetConfigurationStoreEncryptionArrayOutputWithContext(context.Context) GetConfigurationStoreEncryptionArrayOutput
}

type GetConfigurationStoreEncryptionArray []GetConfigurationStoreEncryptionInput

func (GetConfigurationStoreEncryptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationStoreEncryption)(nil)).Elem()
}

func (i GetConfigurationStoreEncryptionArray) ToGetConfigurationStoreEncryptionArrayOutput() GetConfigurationStoreEncryptionArrayOutput {
	return i.ToGetConfigurationStoreEncryptionArrayOutputWithContext(context.Background())
}

func (i GetConfigurationStoreEncryptionArray) ToGetConfigurationStoreEncryptionArrayOutputWithContext(ctx context.Context) GetConfigurationStoreEncryptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationStoreEncryptionArrayOutput)
}

func (i GetConfigurationStoreEncryptionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetConfigurationStoreEncryption] {
	return pulumix.Output[[]GetConfigurationStoreEncryption]{
		OutputState: i.ToGetConfigurationStoreEncryptionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetConfigurationStoreEncryptionOutput struct{ *pulumi.OutputState }

func (GetConfigurationStoreEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationStoreEncryption)(nil)).Elem()
}

func (o GetConfigurationStoreEncryptionOutput) ToGetConfigurationStoreEncryptionOutput() GetConfigurationStoreEncryptionOutput {
	return o
}

func (o GetConfigurationStoreEncryptionOutput) ToGetConfigurationStoreEncryptionOutputWithContext(ctx context.Context) GetConfigurationStoreEncryptionOutput {
	return o
}

func (o GetConfigurationStoreEncryptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetConfigurationStoreEncryption] {
	return pulumix.Output[GetConfigurationStoreEncryption]{
		OutputState: o.OutputState,
	}
}

func (o GetConfigurationStoreEncryptionOutput) IdentityClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStoreEncryption) string { return v.IdentityClientId }).(pulumi.StringOutput)
}

func (o GetConfigurationStoreEncryptionOutput) KeyVaultKeyIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStoreEncryption) string { return v.KeyVaultKeyIdentifier }).(pulumi.StringOutput)
}

type GetConfigurationStoreEncryptionArrayOutput struct{ *pulumi.OutputState }

func (GetConfigurationStoreEncryptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationStoreEncryption)(nil)).Elem()
}

func (o GetConfigurationStoreEncryptionArrayOutput) ToGetConfigurationStoreEncryptionArrayOutput() GetConfigurationStoreEncryptionArrayOutput {
	return o
}

func (o GetConfigurationStoreEncryptionArrayOutput) ToGetConfigurationStoreEncryptionArrayOutputWithContext(ctx context.Context) GetConfigurationStoreEncryptionArrayOutput {
	return o
}

func (o GetConfigurationStoreEncryptionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetConfigurationStoreEncryption] {
	return pulumix.Output[[]GetConfigurationStoreEncryption]{
		OutputState: o.OutputState,
	}
}

func (o GetConfigurationStoreEncryptionArrayOutput) Index(i pulumi.IntInput) GetConfigurationStoreEncryptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigurationStoreEncryption {
		return vs[0].([]GetConfigurationStoreEncryption)[vs[1].(int)]
	}).(GetConfigurationStoreEncryptionOutput)
}

type GetConfigurationStoreIdentity struct {
	IdentityIds []string `pulumi:"identityIds"`
	PrincipalId string   `pulumi:"principalId"`
	TenantId    string   `pulumi:"tenantId"`
	Type        string   `pulumi:"type"`
}

// GetConfigurationStoreIdentityInput is an input type that accepts GetConfigurationStoreIdentityArgs and GetConfigurationStoreIdentityOutput values.
// You can construct a concrete instance of `GetConfigurationStoreIdentityInput` via:
//
//	GetConfigurationStoreIdentityArgs{...}
type GetConfigurationStoreIdentityInput interface {
	pulumi.Input

	ToGetConfigurationStoreIdentityOutput() GetConfigurationStoreIdentityOutput
	ToGetConfigurationStoreIdentityOutputWithContext(context.Context) GetConfigurationStoreIdentityOutput
}

type GetConfigurationStoreIdentityArgs struct {
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	PrincipalId pulumi.StringInput      `pulumi:"principalId"`
	TenantId    pulumi.StringInput      `pulumi:"tenantId"`
	Type        pulumi.StringInput      `pulumi:"type"`
}

func (GetConfigurationStoreIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationStoreIdentity)(nil)).Elem()
}

func (i GetConfigurationStoreIdentityArgs) ToGetConfigurationStoreIdentityOutput() GetConfigurationStoreIdentityOutput {
	return i.ToGetConfigurationStoreIdentityOutputWithContext(context.Background())
}

func (i GetConfigurationStoreIdentityArgs) ToGetConfigurationStoreIdentityOutputWithContext(ctx context.Context) GetConfigurationStoreIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationStoreIdentityOutput)
}

func (i GetConfigurationStoreIdentityArgs) ToOutput(ctx context.Context) pulumix.Output[GetConfigurationStoreIdentity] {
	return pulumix.Output[GetConfigurationStoreIdentity]{
		OutputState: i.ToGetConfigurationStoreIdentityOutputWithContext(ctx).OutputState,
	}
}

// GetConfigurationStoreIdentityArrayInput is an input type that accepts GetConfigurationStoreIdentityArray and GetConfigurationStoreIdentityArrayOutput values.
// You can construct a concrete instance of `GetConfigurationStoreIdentityArrayInput` via:
//
//	GetConfigurationStoreIdentityArray{ GetConfigurationStoreIdentityArgs{...} }
type GetConfigurationStoreIdentityArrayInput interface {
	pulumi.Input

	ToGetConfigurationStoreIdentityArrayOutput() GetConfigurationStoreIdentityArrayOutput
	ToGetConfigurationStoreIdentityArrayOutputWithContext(context.Context) GetConfigurationStoreIdentityArrayOutput
}

type GetConfigurationStoreIdentityArray []GetConfigurationStoreIdentityInput

func (GetConfigurationStoreIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationStoreIdentity)(nil)).Elem()
}

func (i GetConfigurationStoreIdentityArray) ToGetConfigurationStoreIdentityArrayOutput() GetConfigurationStoreIdentityArrayOutput {
	return i.ToGetConfigurationStoreIdentityArrayOutputWithContext(context.Background())
}

func (i GetConfigurationStoreIdentityArray) ToGetConfigurationStoreIdentityArrayOutputWithContext(ctx context.Context) GetConfigurationStoreIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationStoreIdentityArrayOutput)
}

func (i GetConfigurationStoreIdentityArray) ToOutput(ctx context.Context) pulumix.Output[[]GetConfigurationStoreIdentity] {
	return pulumix.Output[[]GetConfigurationStoreIdentity]{
		OutputState: i.ToGetConfigurationStoreIdentityArrayOutputWithContext(ctx).OutputState,
	}
}

type GetConfigurationStoreIdentityOutput struct{ *pulumi.OutputState }

func (GetConfigurationStoreIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationStoreIdentity)(nil)).Elem()
}

func (o GetConfigurationStoreIdentityOutput) ToGetConfigurationStoreIdentityOutput() GetConfigurationStoreIdentityOutput {
	return o
}

func (o GetConfigurationStoreIdentityOutput) ToGetConfigurationStoreIdentityOutputWithContext(ctx context.Context) GetConfigurationStoreIdentityOutput {
	return o
}

func (o GetConfigurationStoreIdentityOutput) ToOutput(ctx context.Context) pulumix.Output[GetConfigurationStoreIdentity] {
	return pulumix.Output[GetConfigurationStoreIdentity]{
		OutputState: o.OutputState,
	}
}

func (o GetConfigurationStoreIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConfigurationStoreIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

func (o GetConfigurationStoreIdentityOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStoreIdentity) string { return v.PrincipalId }).(pulumi.StringOutput)
}

func (o GetConfigurationStoreIdentityOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStoreIdentity) string { return v.TenantId }).(pulumi.StringOutput)
}

func (o GetConfigurationStoreIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStoreIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type GetConfigurationStoreIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetConfigurationStoreIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationStoreIdentity)(nil)).Elem()
}

func (o GetConfigurationStoreIdentityArrayOutput) ToGetConfigurationStoreIdentityArrayOutput() GetConfigurationStoreIdentityArrayOutput {
	return o
}

func (o GetConfigurationStoreIdentityArrayOutput) ToGetConfigurationStoreIdentityArrayOutputWithContext(ctx context.Context) GetConfigurationStoreIdentityArrayOutput {
	return o
}

func (o GetConfigurationStoreIdentityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetConfigurationStoreIdentity] {
	return pulumix.Output[[]GetConfigurationStoreIdentity]{
		OutputState: o.OutputState,
	}
}

func (o GetConfigurationStoreIdentityArrayOutput) Index(i pulumi.IntInput) GetConfigurationStoreIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigurationStoreIdentity {
		return vs[0].([]GetConfigurationStoreIdentity)[vs[1].(int)]
	}).(GetConfigurationStoreIdentityOutput)
}

type GetConfigurationStorePrimaryReadKey struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString string `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id string `pulumi:"id"`
	// The Secret of the Access Key.
	Secret string `pulumi:"secret"`
}

// GetConfigurationStorePrimaryReadKeyInput is an input type that accepts GetConfigurationStorePrimaryReadKeyArgs and GetConfigurationStorePrimaryReadKeyOutput values.
// You can construct a concrete instance of `GetConfigurationStorePrimaryReadKeyInput` via:
//
//	GetConfigurationStorePrimaryReadKeyArgs{...}
type GetConfigurationStorePrimaryReadKeyInput interface {
	pulumi.Input

	ToGetConfigurationStorePrimaryReadKeyOutput() GetConfigurationStorePrimaryReadKeyOutput
	ToGetConfigurationStorePrimaryReadKeyOutputWithContext(context.Context) GetConfigurationStorePrimaryReadKeyOutput
}

type GetConfigurationStorePrimaryReadKeyArgs struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id pulumi.StringInput `pulumi:"id"`
	// The Secret of the Access Key.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetConfigurationStorePrimaryReadKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationStorePrimaryReadKey)(nil)).Elem()
}

func (i GetConfigurationStorePrimaryReadKeyArgs) ToGetConfigurationStorePrimaryReadKeyOutput() GetConfigurationStorePrimaryReadKeyOutput {
	return i.ToGetConfigurationStorePrimaryReadKeyOutputWithContext(context.Background())
}

func (i GetConfigurationStorePrimaryReadKeyArgs) ToGetConfigurationStorePrimaryReadKeyOutputWithContext(ctx context.Context) GetConfigurationStorePrimaryReadKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationStorePrimaryReadKeyOutput)
}

func (i GetConfigurationStorePrimaryReadKeyArgs) ToOutput(ctx context.Context) pulumix.Output[GetConfigurationStorePrimaryReadKey] {
	return pulumix.Output[GetConfigurationStorePrimaryReadKey]{
		OutputState: i.ToGetConfigurationStorePrimaryReadKeyOutputWithContext(ctx).OutputState,
	}
}

// GetConfigurationStorePrimaryReadKeyArrayInput is an input type that accepts GetConfigurationStorePrimaryReadKeyArray and GetConfigurationStorePrimaryReadKeyArrayOutput values.
// You can construct a concrete instance of `GetConfigurationStorePrimaryReadKeyArrayInput` via:
//
//	GetConfigurationStorePrimaryReadKeyArray{ GetConfigurationStorePrimaryReadKeyArgs{...} }
type GetConfigurationStorePrimaryReadKeyArrayInput interface {
	pulumi.Input

	ToGetConfigurationStorePrimaryReadKeyArrayOutput() GetConfigurationStorePrimaryReadKeyArrayOutput
	ToGetConfigurationStorePrimaryReadKeyArrayOutputWithContext(context.Context) GetConfigurationStorePrimaryReadKeyArrayOutput
}

type GetConfigurationStorePrimaryReadKeyArray []GetConfigurationStorePrimaryReadKeyInput

func (GetConfigurationStorePrimaryReadKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationStorePrimaryReadKey)(nil)).Elem()
}

func (i GetConfigurationStorePrimaryReadKeyArray) ToGetConfigurationStorePrimaryReadKeyArrayOutput() GetConfigurationStorePrimaryReadKeyArrayOutput {
	return i.ToGetConfigurationStorePrimaryReadKeyArrayOutputWithContext(context.Background())
}

func (i GetConfigurationStorePrimaryReadKeyArray) ToGetConfigurationStorePrimaryReadKeyArrayOutputWithContext(ctx context.Context) GetConfigurationStorePrimaryReadKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationStorePrimaryReadKeyArrayOutput)
}

func (i GetConfigurationStorePrimaryReadKeyArray) ToOutput(ctx context.Context) pulumix.Output[[]GetConfigurationStorePrimaryReadKey] {
	return pulumix.Output[[]GetConfigurationStorePrimaryReadKey]{
		OutputState: i.ToGetConfigurationStorePrimaryReadKeyArrayOutputWithContext(ctx).OutputState,
	}
}

type GetConfigurationStorePrimaryReadKeyOutput struct{ *pulumi.OutputState }

func (GetConfigurationStorePrimaryReadKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationStorePrimaryReadKey)(nil)).Elem()
}

func (o GetConfigurationStorePrimaryReadKeyOutput) ToGetConfigurationStorePrimaryReadKeyOutput() GetConfigurationStorePrimaryReadKeyOutput {
	return o
}

func (o GetConfigurationStorePrimaryReadKeyOutput) ToGetConfigurationStorePrimaryReadKeyOutputWithContext(ctx context.Context) GetConfigurationStorePrimaryReadKeyOutput {
	return o
}

func (o GetConfigurationStorePrimaryReadKeyOutput) ToOutput(ctx context.Context) pulumix.Output[GetConfigurationStorePrimaryReadKey] {
	return pulumix.Output[GetConfigurationStorePrimaryReadKey]{
		OutputState: o.OutputState,
	}
}

// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
func (o GetConfigurationStorePrimaryReadKeyOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStorePrimaryReadKey) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The ID of the Access Key.
func (o GetConfigurationStorePrimaryReadKeyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStorePrimaryReadKey) string { return v.Id }).(pulumi.StringOutput)
}

// The Secret of the Access Key.
func (o GetConfigurationStorePrimaryReadKeyOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStorePrimaryReadKey) string { return v.Secret }).(pulumi.StringOutput)
}

type GetConfigurationStorePrimaryReadKeyArrayOutput struct{ *pulumi.OutputState }

func (GetConfigurationStorePrimaryReadKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationStorePrimaryReadKey)(nil)).Elem()
}

func (o GetConfigurationStorePrimaryReadKeyArrayOutput) ToGetConfigurationStorePrimaryReadKeyArrayOutput() GetConfigurationStorePrimaryReadKeyArrayOutput {
	return o
}

func (o GetConfigurationStorePrimaryReadKeyArrayOutput) ToGetConfigurationStorePrimaryReadKeyArrayOutputWithContext(ctx context.Context) GetConfigurationStorePrimaryReadKeyArrayOutput {
	return o
}

func (o GetConfigurationStorePrimaryReadKeyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetConfigurationStorePrimaryReadKey] {
	return pulumix.Output[[]GetConfigurationStorePrimaryReadKey]{
		OutputState: o.OutputState,
	}
}

func (o GetConfigurationStorePrimaryReadKeyArrayOutput) Index(i pulumi.IntInput) GetConfigurationStorePrimaryReadKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigurationStorePrimaryReadKey {
		return vs[0].([]GetConfigurationStorePrimaryReadKey)[vs[1].(int)]
	}).(GetConfigurationStorePrimaryReadKeyOutput)
}

type GetConfigurationStorePrimaryWriteKey struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString string `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id string `pulumi:"id"`
	// The Secret of the Access Key.
	Secret string `pulumi:"secret"`
}

// GetConfigurationStorePrimaryWriteKeyInput is an input type that accepts GetConfigurationStorePrimaryWriteKeyArgs and GetConfigurationStorePrimaryWriteKeyOutput values.
// You can construct a concrete instance of `GetConfigurationStorePrimaryWriteKeyInput` via:
//
//	GetConfigurationStorePrimaryWriteKeyArgs{...}
type GetConfigurationStorePrimaryWriteKeyInput interface {
	pulumi.Input

	ToGetConfigurationStorePrimaryWriteKeyOutput() GetConfigurationStorePrimaryWriteKeyOutput
	ToGetConfigurationStorePrimaryWriteKeyOutputWithContext(context.Context) GetConfigurationStorePrimaryWriteKeyOutput
}

type GetConfigurationStorePrimaryWriteKeyArgs struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id pulumi.StringInput `pulumi:"id"`
	// The Secret of the Access Key.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetConfigurationStorePrimaryWriteKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationStorePrimaryWriteKey)(nil)).Elem()
}

func (i GetConfigurationStorePrimaryWriteKeyArgs) ToGetConfigurationStorePrimaryWriteKeyOutput() GetConfigurationStorePrimaryWriteKeyOutput {
	return i.ToGetConfigurationStorePrimaryWriteKeyOutputWithContext(context.Background())
}

func (i GetConfigurationStorePrimaryWriteKeyArgs) ToGetConfigurationStorePrimaryWriteKeyOutputWithContext(ctx context.Context) GetConfigurationStorePrimaryWriteKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationStorePrimaryWriteKeyOutput)
}

func (i GetConfigurationStorePrimaryWriteKeyArgs) ToOutput(ctx context.Context) pulumix.Output[GetConfigurationStorePrimaryWriteKey] {
	return pulumix.Output[GetConfigurationStorePrimaryWriteKey]{
		OutputState: i.ToGetConfigurationStorePrimaryWriteKeyOutputWithContext(ctx).OutputState,
	}
}

// GetConfigurationStorePrimaryWriteKeyArrayInput is an input type that accepts GetConfigurationStorePrimaryWriteKeyArray and GetConfigurationStorePrimaryWriteKeyArrayOutput values.
// You can construct a concrete instance of `GetConfigurationStorePrimaryWriteKeyArrayInput` via:
//
//	GetConfigurationStorePrimaryWriteKeyArray{ GetConfigurationStorePrimaryWriteKeyArgs{...} }
type GetConfigurationStorePrimaryWriteKeyArrayInput interface {
	pulumi.Input

	ToGetConfigurationStorePrimaryWriteKeyArrayOutput() GetConfigurationStorePrimaryWriteKeyArrayOutput
	ToGetConfigurationStorePrimaryWriteKeyArrayOutputWithContext(context.Context) GetConfigurationStorePrimaryWriteKeyArrayOutput
}

type GetConfigurationStorePrimaryWriteKeyArray []GetConfigurationStorePrimaryWriteKeyInput

func (GetConfigurationStorePrimaryWriteKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationStorePrimaryWriteKey)(nil)).Elem()
}

func (i GetConfigurationStorePrimaryWriteKeyArray) ToGetConfigurationStorePrimaryWriteKeyArrayOutput() GetConfigurationStorePrimaryWriteKeyArrayOutput {
	return i.ToGetConfigurationStorePrimaryWriteKeyArrayOutputWithContext(context.Background())
}

func (i GetConfigurationStorePrimaryWriteKeyArray) ToGetConfigurationStorePrimaryWriteKeyArrayOutputWithContext(ctx context.Context) GetConfigurationStorePrimaryWriteKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationStorePrimaryWriteKeyArrayOutput)
}

func (i GetConfigurationStorePrimaryWriteKeyArray) ToOutput(ctx context.Context) pulumix.Output[[]GetConfigurationStorePrimaryWriteKey] {
	return pulumix.Output[[]GetConfigurationStorePrimaryWriteKey]{
		OutputState: i.ToGetConfigurationStorePrimaryWriteKeyArrayOutputWithContext(ctx).OutputState,
	}
}

type GetConfigurationStorePrimaryWriteKeyOutput struct{ *pulumi.OutputState }

func (GetConfigurationStorePrimaryWriteKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationStorePrimaryWriteKey)(nil)).Elem()
}

func (o GetConfigurationStorePrimaryWriteKeyOutput) ToGetConfigurationStorePrimaryWriteKeyOutput() GetConfigurationStorePrimaryWriteKeyOutput {
	return o
}

func (o GetConfigurationStorePrimaryWriteKeyOutput) ToGetConfigurationStorePrimaryWriteKeyOutputWithContext(ctx context.Context) GetConfigurationStorePrimaryWriteKeyOutput {
	return o
}

func (o GetConfigurationStorePrimaryWriteKeyOutput) ToOutput(ctx context.Context) pulumix.Output[GetConfigurationStorePrimaryWriteKey] {
	return pulumix.Output[GetConfigurationStorePrimaryWriteKey]{
		OutputState: o.OutputState,
	}
}

// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
func (o GetConfigurationStorePrimaryWriteKeyOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStorePrimaryWriteKey) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The ID of the Access Key.
func (o GetConfigurationStorePrimaryWriteKeyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStorePrimaryWriteKey) string { return v.Id }).(pulumi.StringOutput)
}

// The Secret of the Access Key.
func (o GetConfigurationStorePrimaryWriteKeyOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStorePrimaryWriteKey) string { return v.Secret }).(pulumi.StringOutput)
}

type GetConfigurationStorePrimaryWriteKeyArrayOutput struct{ *pulumi.OutputState }

func (GetConfigurationStorePrimaryWriteKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationStorePrimaryWriteKey)(nil)).Elem()
}

func (o GetConfigurationStorePrimaryWriteKeyArrayOutput) ToGetConfigurationStorePrimaryWriteKeyArrayOutput() GetConfigurationStorePrimaryWriteKeyArrayOutput {
	return o
}

func (o GetConfigurationStorePrimaryWriteKeyArrayOutput) ToGetConfigurationStorePrimaryWriteKeyArrayOutputWithContext(ctx context.Context) GetConfigurationStorePrimaryWriteKeyArrayOutput {
	return o
}

func (o GetConfigurationStorePrimaryWriteKeyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetConfigurationStorePrimaryWriteKey] {
	return pulumix.Output[[]GetConfigurationStorePrimaryWriteKey]{
		OutputState: o.OutputState,
	}
}

func (o GetConfigurationStorePrimaryWriteKeyArrayOutput) Index(i pulumi.IntInput) GetConfigurationStorePrimaryWriteKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigurationStorePrimaryWriteKey {
		return vs[0].([]GetConfigurationStorePrimaryWriteKey)[vs[1].(int)]
	}).(GetConfigurationStorePrimaryWriteKeyOutput)
}

type GetConfigurationStoreReplica struct {
	// The URL of the App Configuration Replica.
	Endpoint string `pulumi:"endpoint"`
	// The ID of the Access Key.
	Id string `pulumi:"id"`
	// The supported Azure location where the App Configuration Replica exists.
	Location string `pulumi:"location"`
	// The Name of this App Configuration.
	Name string `pulumi:"name"`
}

// GetConfigurationStoreReplicaInput is an input type that accepts GetConfigurationStoreReplicaArgs and GetConfigurationStoreReplicaOutput values.
// You can construct a concrete instance of `GetConfigurationStoreReplicaInput` via:
//
//	GetConfigurationStoreReplicaArgs{...}
type GetConfigurationStoreReplicaInput interface {
	pulumi.Input

	ToGetConfigurationStoreReplicaOutput() GetConfigurationStoreReplicaOutput
	ToGetConfigurationStoreReplicaOutputWithContext(context.Context) GetConfigurationStoreReplicaOutput
}

type GetConfigurationStoreReplicaArgs struct {
	// The URL of the App Configuration Replica.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// The ID of the Access Key.
	Id pulumi.StringInput `pulumi:"id"`
	// The supported Azure location where the App Configuration Replica exists.
	Location pulumi.StringInput `pulumi:"location"`
	// The Name of this App Configuration.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetConfigurationStoreReplicaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationStoreReplica)(nil)).Elem()
}

func (i GetConfigurationStoreReplicaArgs) ToGetConfigurationStoreReplicaOutput() GetConfigurationStoreReplicaOutput {
	return i.ToGetConfigurationStoreReplicaOutputWithContext(context.Background())
}

func (i GetConfigurationStoreReplicaArgs) ToGetConfigurationStoreReplicaOutputWithContext(ctx context.Context) GetConfigurationStoreReplicaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationStoreReplicaOutput)
}

func (i GetConfigurationStoreReplicaArgs) ToOutput(ctx context.Context) pulumix.Output[GetConfigurationStoreReplica] {
	return pulumix.Output[GetConfigurationStoreReplica]{
		OutputState: i.ToGetConfigurationStoreReplicaOutputWithContext(ctx).OutputState,
	}
}

// GetConfigurationStoreReplicaArrayInput is an input type that accepts GetConfigurationStoreReplicaArray and GetConfigurationStoreReplicaArrayOutput values.
// You can construct a concrete instance of `GetConfigurationStoreReplicaArrayInput` via:
//
//	GetConfigurationStoreReplicaArray{ GetConfigurationStoreReplicaArgs{...} }
type GetConfigurationStoreReplicaArrayInput interface {
	pulumi.Input

	ToGetConfigurationStoreReplicaArrayOutput() GetConfigurationStoreReplicaArrayOutput
	ToGetConfigurationStoreReplicaArrayOutputWithContext(context.Context) GetConfigurationStoreReplicaArrayOutput
}

type GetConfigurationStoreReplicaArray []GetConfigurationStoreReplicaInput

func (GetConfigurationStoreReplicaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationStoreReplica)(nil)).Elem()
}

func (i GetConfigurationStoreReplicaArray) ToGetConfigurationStoreReplicaArrayOutput() GetConfigurationStoreReplicaArrayOutput {
	return i.ToGetConfigurationStoreReplicaArrayOutputWithContext(context.Background())
}

func (i GetConfigurationStoreReplicaArray) ToGetConfigurationStoreReplicaArrayOutputWithContext(ctx context.Context) GetConfigurationStoreReplicaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationStoreReplicaArrayOutput)
}

func (i GetConfigurationStoreReplicaArray) ToOutput(ctx context.Context) pulumix.Output[[]GetConfigurationStoreReplica] {
	return pulumix.Output[[]GetConfigurationStoreReplica]{
		OutputState: i.ToGetConfigurationStoreReplicaArrayOutputWithContext(ctx).OutputState,
	}
}

type GetConfigurationStoreReplicaOutput struct{ *pulumi.OutputState }

func (GetConfigurationStoreReplicaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationStoreReplica)(nil)).Elem()
}

func (o GetConfigurationStoreReplicaOutput) ToGetConfigurationStoreReplicaOutput() GetConfigurationStoreReplicaOutput {
	return o
}

func (o GetConfigurationStoreReplicaOutput) ToGetConfigurationStoreReplicaOutputWithContext(ctx context.Context) GetConfigurationStoreReplicaOutput {
	return o
}

func (o GetConfigurationStoreReplicaOutput) ToOutput(ctx context.Context) pulumix.Output[GetConfigurationStoreReplica] {
	return pulumix.Output[GetConfigurationStoreReplica]{
		OutputState: o.OutputState,
	}
}

// The URL of the App Configuration Replica.
func (o GetConfigurationStoreReplicaOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStoreReplica) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The ID of the Access Key.
func (o GetConfigurationStoreReplicaOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStoreReplica) string { return v.Id }).(pulumi.StringOutput)
}

// The supported Azure location where the App Configuration Replica exists.
func (o GetConfigurationStoreReplicaOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStoreReplica) string { return v.Location }).(pulumi.StringOutput)
}

// The Name of this App Configuration.
func (o GetConfigurationStoreReplicaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStoreReplica) string { return v.Name }).(pulumi.StringOutput)
}

type GetConfigurationStoreReplicaArrayOutput struct{ *pulumi.OutputState }

func (GetConfigurationStoreReplicaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationStoreReplica)(nil)).Elem()
}

func (o GetConfigurationStoreReplicaArrayOutput) ToGetConfigurationStoreReplicaArrayOutput() GetConfigurationStoreReplicaArrayOutput {
	return o
}

func (o GetConfigurationStoreReplicaArrayOutput) ToGetConfigurationStoreReplicaArrayOutputWithContext(ctx context.Context) GetConfigurationStoreReplicaArrayOutput {
	return o
}

func (o GetConfigurationStoreReplicaArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetConfigurationStoreReplica] {
	return pulumix.Output[[]GetConfigurationStoreReplica]{
		OutputState: o.OutputState,
	}
}

func (o GetConfigurationStoreReplicaArrayOutput) Index(i pulumi.IntInput) GetConfigurationStoreReplicaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigurationStoreReplica {
		return vs[0].([]GetConfigurationStoreReplica)[vs[1].(int)]
	}).(GetConfigurationStoreReplicaOutput)
}

type GetConfigurationStoreSecondaryReadKey struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString string `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id string `pulumi:"id"`
	// The Secret of the Access Key.
	Secret string `pulumi:"secret"`
}

// GetConfigurationStoreSecondaryReadKeyInput is an input type that accepts GetConfigurationStoreSecondaryReadKeyArgs and GetConfigurationStoreSecondaryReadKeyOutput values.
// You can construct a concrete instance of `GetConfigurationStoreSecondaryReadKeyInput` via:
//
//	GetConfigurationStoreSecondaryReadKeyArgs{...}
type GetConfigurationStoreSecondaryReadKeyInput interface {
	pulumi.Input

	ToGetConfigurationStoreSecondaryReadKeyOutput() GetConfigurationStoreSecondaryReadKeyOutput
	ToGetConfigurationStoreSecondaryReadKeyOutputWithContext(context.Context) GetConfigurationStoreSecondaryReadKeyOutput
}

type GetConfigurationStoreSecondaryReadKeyArgs struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id pulumi.StringInput `pulumi:"id"`
	// The Secret of the Access Key.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetConfigurationStoreSecondaryReadKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationStoreSecondaryReadKey)(nil)).Elem()
}

func (i GetConfigurationStoreSecondaryReadKeyArgs) ToGetConfigurationStoreSecondaryReadKeyOutput() GetConfigurationStoreSecondaryReadKeyOutput {
	return i.ToGetConfigurationStoreSecondaryReadKeyOutputWithContext(context.Background())
}

func (i GetConfigurationStoreSecondaryReadKeyArgs) ToGetConfigurationStoreSecondaryReadKeyOutputWithContext(ctx context.Context) GetConfigurationStoreSecondaryReadKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationStoreSecondaryReadKeyOutput)
}

func (i GetConfigurationStoreSecondaryReadKeyArgs) ToOutput(ctx context.Context) pulumix.Output[GetConfigurationStoreSecondaryReadKey] {
	return pulumix.Output[GetConfigurationStoreSecondaryReadKey]{
		OutputState: i.ToGetConfigurationStoreSecondaryReadKeyOutputWithContext(ctx).OutputState,
	}
}

// GetConfigurationStoreSecondaryReadKeyArrayInput is an input type that accepts GetConfigurationStoreSecondaryReadKeyArray and GetConfigurationStoreSecondaryReadKeyArrayOutput values.
// You can construct a concrete instance of `GetConfigurationStoreSecondaryReadKeyArrayInput` via:
//
//	GetConfigurationStoreSecondaryReadKeyArray{ GetConfigurationStoreSecondaryReadKeyArgs{...} }
type GetConfigurationStoreSecondaryReadKeyArrayInput interface {
	pulumi.Input

	ToGetConfigurationStoreSecondaryReadKeyArrayOutput() GetConfigurationStoreSecondaryReadKeyArrayOutput
	ToGetConfigurationStoreSecondaryReadKeyArrayOutputWithContext(context.Context) GetConfigurationStoreSecondaryReadKeyArrayOutput
}

type GetConfigurationStoreSecondaryReadKeyArray []GetConfigurationStoreSecondaryReadKeyInput

func (GetConfigurationStoreSecondaryReadKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationStoreSecondaryReadKey)(nil)).Elem()
}

func (i GetConfigurationStoreSecondaryReadKeyArray) ToGetConfigurationStoreSecondaryReadKeyArrayOutput() GetConfigurationStoreSecondaryReadKeyArrayOutput {
	return i.ToGetConfigurationStoreSecondaryReadKeyArrayOutputWithContext(context.Background())
}

func (i GetConfigurationStoreSecondaryReadKeyArray) ToGetConfigurationStoreSecondaryReadKeyArrayOutputWithContext(ctx context.Context) GetConfigurationStoreSecondaryReadKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationStoreSecondaryReadKeyArrayOutput)
}

func (i GetConfigurationStoreSecondaryReadKeyArray) ToOutput(ctx context.Context) pulumix.Output[[]GetConfigurationStoreSecondaryReadKey] {
	return pulumix.Output[[]GetConfigurationStoreSecondaryReadKey]{
		OutputState: i.ToGetConfigurationStoreSecondaryReadKeyArrayOutputWithContext(ctx).OutputState,
	}
}

type GetConfigurationStoreSecondaryReadKeyOutput struct{ *pulumi.OutputState }

func (GetConfigurationStoreSecondaryReadKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationStoreSecondaryReadKey)(nil)).Elem()
}

func (o GetConfigurationStoreSecondaryReadKeyOutput) ToGetConfigurationStoreSecondaryReadKeyOutput() GetConfigurationStoreSecondaryReadKeyOutput {
	return o
}

func (o GetConfigurationStoreSecondaryReadKeyOutput) ToGetConfigurationStoreSecondaryReadKeyOutputWithContext(ctx context.Context) GetConfigurationStoreSecondaryReadKeyOutput {
	return o
}

func (o GetConfigurationStoreSecondaryReadKeyOutput) ToOutput(ctx context.Context) pulumix.Output[GetConfigurationStoreSecondaryReadKey] {
	return pulumix.Output[GetConfigurationStoreSecondaryReadKey]{
		OutputState: o.OutputState,
	}
}

// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
func (o GetConfigurationStoreSecondaryReadKeyOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStoreSecondaryReadKey) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The ID of the Access Key.
func (o GetConfigurationStoreSecondaryReadKeyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStoreSecondaryReadKey) string { return v.Id }).(pulumi.StringOutput)
}

// The Secret of the Access Key.
func (o GetConfigurationStoreSecondaryReadKeyOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStoreSecondaryReadKey) string { return v.Secret }).(pulumi.StringOutput)
}

type GetConfigurationStoreSecondaryReadKeyArrayOutput struct{ *pulumi.OutputState }

func (GetConfigurationStoreSecondaryReadKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationStoreSecondaryReadKey)(nil)).Elem()
}

func (o GetConfigurationStoreSecondaryReadKeyArrayOutput) ToGetConfigurationStoreSecondaryReadKeyArrayOutput() GetConfigurationStoreSecondaryReadKeyArrayOutput {
	return o
}

func (o GetConfigurationStoreSecondaryReadKeyArrayOutput) ToGetConfigurationStoreSecondaryReadKeyArrayOutputWithContext(ctx context.Context) GetConfigurationStoreSecondaryReadKeyArrayOutput {
	return o
}

func (o GetConfigurationStoreSecondaryReadKeyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetConfigurationStoreSecondaryReadKey] {
	return pulumix.Output[[]GetConfigurationStoreSecondaryReadKey]{
		OutputState: o.OutputState,
	}
}

func (o GetConfigurationStoreSecondaryReadKeyArrayOutput) Index(i pulumi.IntInput) GetConfigurationStoreSecondaryReadKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigurationStoreSecondaryReadKey {
		return vs[0].([]GetConfigurationStoreSecondaryReadKey)[vs[1].(int)]
	}).(GetConfigurationStoreSecondaryReadKeyOutput)
}

type GetConfigurationStoreSecondaryWriteKey struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString string `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id string `pulumi:"id"`
	// The Secret of the Access Key.
	Secret string `pulumi:"secret"`
}

// GetConfigurationStoreSecondaryWriteKeyInput is an input type that accepts GetConfigurationStoreSecondaryWriteKeyArgs and GetConfigurationStoreSecondaryWriteKeyOutput values.
// You can construct a concrete instance of `GetConfigurationStoreSecondaryWriteKeyInput` via:
//
//	GetConfigurationStoreSecondaryWriteKeyArgs{...}
type GetConfigurationStoreSecondaryWriteKeyInput interface {
	pulumi.Input

	ToGetConfigurationStoreSecondaryWriteKeyOutput() GetConfigurationStoreSecondaryWriteKeyOutput
	ToGetConfigurationStoreSecondaryWriteKeyOutputWithContext(context.Context) GetConfigurationStoreSecondaryWriteKeyOutput
}

type GetConfigurationStoreSecondaryWriteKeyArgs struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id pulumi.StringInput `pulumi:"id"`
	// The Secret of the Access Key.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetConfigurationStoreSecondaryWriteKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationStoreSecondaryWriteKey)(nil)).Elem()
}

func (i GetConfigurationStoreSecondaryWriteKeyArgs) ToGetConfigurationStoreSecondaryWriteKeyOutput() GetConfigurationStoreSecondaryWriteKeyOutput {
	return i.ToGetConfigurationStoreSecondaryWriteKeyOutputWithContext(context.Background())
}

func (i GetConfigurationStoreSecondaryWriteKeyArgs) ToGetConfigurationStoreSecondaryWriteKeyOutputWithContext(ctx context.Context) GetConfigurationStoreSecondaryWriteKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationStoreSecondaryWriteKeyOutput)
}

func (i GetConfigurationStoreSecondaryWriteKeyArgs) ToOutput(ctx context.Context) pulumix.Output[GetConfigurationStoreSecondaryWriteKey] {
	return pulumix.Output[GetConfigurationStoreSecondaryWriteKey]{
		OutputState: i.ToGetConfigurationStoreSecondaryWriteKeyOutputWithContext(ctx).OutputState,
	}
}

// GetConfigurationStoreSecondaryWriteKeyArrayInput is an input type that accepts GetConfigurationStoreSecondaryWriteKeyArray and GetConfigurationStoreSecondaryWriteKeyArrayOutput values.
// You can construct a concrete instance of `GetConfigurationStoreSecondaryWriteKeyArrayInput` via:
//
//	GetConfigurationStoreSecondaryWriteKeyArray{ GetConfigurationStoreSecondaryWriteKeyArgs{...} }
type GetConfigurationStoreSecondaryWriteKeyArrayInput interface {
	pulumi.Input

	ToGetConfigurationStoreSecondaryWriteKeyArrayOutput() GetConfigurationStoreSecondaryWriteKeyArrayOutput
	ToGetConfigurationStoreSecondaryWriteKeyArrayOutputWithContext(context.Context) GetConfigurationStoreSecondaryWriteKeyArrayOutput
}

type GetConfigurationStoreSecondaryWriteKeyArray []GetConfigurationStoreSecondaryWriteKeyInput

func (GetConfigurationStoreSecondaryWriteKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationStoreSecondaryWriteKey)(nil)).Elem()
}

func (i GetConfigurationStoreSecondaryWriteKeyArray) ToGetConfigurationStoreSecondaryWriteKeyArrayOutput() GetConfigurationStoreSecondaryWriteKeyArrayOutput {
	return i.ToGetConfigurationStoreSecondaryWriteKeyArrayOutputWithContext(context.Background())
}

func (i GetConfigurationStoreSecondaryWriteKeyArray) ToGetConfigurationStoreSecondaryWriteKeyArrayOutputWithContext(ctx context.Context) GetConfigurationStoreSecondaryWriteKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationStoreSecondaryWriteKeyArrayOutput)
}

func (i GetConfigurationStoreSecondaryWriteKeyArray) ToOutput(ctx context.Context) pulumix.Output[[]GetConfigurationStoreSecondaryWriteKey] {
	return pulumix.Output[[]GetConfigurationStoreSecondaryWriteKey]{
		OutputState: i.ToGetConfigurationStoreSecondaryWriteKeyArrayOutputWithContext(ctx).OutputState,
	}
}

type GetConfigurationStoreSecondaryWriteKeyOutput struct{ *pulumi.OutputState }

func (GetConfigurationStoreSecondaryWriteKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationStoreSecondaryWriteKey)(nil)).Elem()
}

func (o GetConfigurationStoreSecondaryWriteKeyOutput) ToGetConfigurationStoreSecondaryWriteKeyOutput() GetConfigurationStoreSecondaryWriteKeyOutput {
	return o
}

func (o GetConfigurationStoreSecondaryWriteKeyOutput) ToGetConfigurationStoreSecondaryWriteKeyOutputWithContext(ctx context.Context) GetConfigurationStoreSecondaryWriteKeyOutput {
	return o
}

func (o GetConfigurationStoreSecondaryWriteKeyOutput) ToOutput(ctx context.Context) pulumix.Output[GetConfigurationStoreSecondaryWriteKey] {
	return pulumix.Output[GetConfigurationStoreSecondaryWriteKey]{
		OutputState: o.OutputState,
	}
}

// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
func (o GetConfigurationStoreSecondaryWriteKeyOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStoreSecondaryWriteKey) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The ID of the Access Key.
func (o GetConfigurationStoreSecondaryWriteKeyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStoreSecondaryWriteKey) string { return v.Id }).(pulumi.StringOutput)
}

// The Secret of the Access Key.
func (o GetConfigurationStoreSecondaryWriteKeyOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStoreSecondaryWriteKey) string { return v.Secret }).(pulumi.StringOutput)
}

type GetConfigurationStoreSecondaryWriteKeyArrayOutput struct{ *pulumi.OutputState }

func (GetConfigurationStoreSecondaryWriteKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationStoreSecondaryWriteKey)(nil)).Elem()
}

func (o GetConfigurationStoreSecondaryWriteKeyArrayOutput) ToGetConfigurationStoreSecondaryWriteKeyArrayOutput() GetConfigurationStoreSecondaryWriteKeyArrayOutput {
	return o
}

func (o GetConfigurationStoreSecondaryWriteKeyArrayOutput) ToGetConfigurationStoreSecondaryWriteKeyArrayOutputWithContext(ctx context.Context) GetConfigurationStoreSecondaryWriteKeyArrayOutput {
	return o
}

func (o GetConfigurationStoreSecondaryWriteKeyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetConfigurationStoreSecondaryWriteKey] {
	return pulumix.Output[[]GetConfigurationStoreSecondaryWriteKey]{
		OutputState: o.OutputState,
	}
}

func (o GetConfigurationStoreSecondaryWriteKeyArrayOutput) Index(i pulumi.IntInput) GetConfigurationStoreSecondaryWriteKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigurationStoreSecondaryWriteKey {
		return vs[0].([]GetConfigurationStoreSecondaryWriteKey)[vs[1].(int)]
	}).(GetConfigurationStoreSecondaryWriteKeyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationFeatureTargetingFilterInput)(nil)).Elem(), ConfigurationFeatureTargetingFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationFeatureTargetingFilterArrayInput)(nil)).Elem(), ConfigurationFeatureTargetingFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationFeatureTargetingFilterGroupInput)(nil)).Elem(), ConfigurationFeatureTargetingFilterGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationFeatureTargetingFilterGroupArrayInput)(nil)).Elem(), ConfigurationFeatureTargetingFilterGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationFeatureTimewindowFilterInput)(nil)).Elem(), ConfigurationFeatureTimewindowFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationFeatureTimewindowFilterArrayInput)(nil)).Elem(), ConfigurationFeatureTimewindowFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationStoreEncryptionInput)(nil)).Elem(), ConfigurationStoreEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationStoreEncryptionPtrInput)(nil)).Elem(), ConfigurationStoreEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationStoreIdentityInput)(nil)).Elem(), ConfigurationStoreIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationStoreIdentityPtrInput)(nil)).Elem(), ConfigurationStoreIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationStorePrimaryReadKeyInput)(nil)).Elem(), ConfigurationStorePrimaryReadKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationStorePrimaryReadKeyArrayInput)(nil)).Elem(), ConfigurationStorePrimaryReadKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationStorePrimaryWriteKeyInput)(nil)).Elem(), ConfigurationStorePrimaryWriteKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationStorePrimaryWriteKeyArrayInput)(nil)).Elem(), ConfigurationStorePrimaryWriteKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationStoreReplicaInput)(nil)).Elem(), ConfigurationStoreReplicaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationStoreReplicaArrayInput)(nil)).Elem(), ConfigurationStoreReplicaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationStoreSecondaryReadKeyInput)(nil)).Elem(), ConfigurationStoreSecondaryReadKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationStoreSecondaryReadKeyArrayInput)(nil)).Elem(), ConfigurationStoreSecondaryReadKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationStoreSecondaryWriteKeyInput)(nil)).Elem(), ConfigurationStoreSecondaryWriteKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationStoreSecondaryWriteKeyArrayInput)(nil)).Elem(), ConfigurationStoreSecondaryWriteKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationKeysItemInput)(nil)).Elem(), GetConfigurationKeysItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationKeysItemArrayInput)(nil)).Elem(), GetConfigurationKeysItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationStoreEncryptionInput)(nil)).Elem(), GetConfigurationStoreEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationStoreEncryptionArrayInput)(nil)).Elem(), GetConfigurationStoreEncryptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationStoreIdentityInput)(nil)).Elem(), GetConfigurationStoreIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationStoreIdentityArrayInput)(nil)).Elem(), GetConfigurationStoreIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationStorePrimaryReadKeyInput)(nil)).Elem(), GetConfigurationStorePrimaryReadKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationStorePrimaryReadKeyArrayInput)(nil)).Elem(), GetConfigurationStorePrimaryReadKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationStorePrimaryWriteKeyInput)(nil)).Elem(), GetConfigurationStorePrimaryWriteKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationStorePrimaryWriteKeyArrayInput)(nil)).Elem(), GetConfigurationStorePrimaryWriteKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationStoreReplicaInput)(nil)).Elem(), GetConfigurationStoreReplicaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationStoreReplicaArrayInput)(nil)).Elem(), GetConfigurationStoreReplicaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationStoreSecondaryReadKeyInput)(nil)).Elem(), GetConfigurationStoreSecondaryReadKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationStoreSecondaryReadKeyArrayInput)(nil)).Elem(), GetConfigurationStoreSecondaryReadKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationStoreSecondaryWriteKeyInput)(nil)).Elem(), GetConfigurationStoreSecondaryWriteKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationStoreSecondaryWriteKeyArrayInput)(nil)).Elem(), GetConfigurationStoreSecondaryWriteKeyArray{})
	pulumi.RegisterOutputType(ConfigurationFeatureTargetingFilterOutput{})
	pulumi.RegisterOutputType(ConfigurationFeatureTargetingFilterArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationFeatureTargetingFilterGroupOutput{})
	pulumi.RegisterOutputType(ConfigurationFeatureTargetingFilterGroupArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationFeatureTimewindowFilterOutput{})
	pulumi.RegisterOutputType(ConfigurationFeatureTimewindowFilterArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationStoreEncryptionOutput{})
	pulumi.RegisterOutputType(ConfigurationStoreEncryptionPtrOutput{})
	pulumi.RegisterOutputType(ConfigurationStoreIdentityOutput{})
	pulumi.RegisterOutputType(ConfigurationStoreIdentityPtrOutput{})
	pulumi.RegisterOutputType(ConfigurationStorePrimaryReadKeyOutput{})
	pulumi.RegisterOutputType(ConfigurationStorePrimaryReadKeyArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationStorePrimaryWriteKeyOutput{})
	pulumi.RegisterOutputType(ConfigurationStorePrimaryWriteKeyArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationStoreReplicaOutput{})
	pulumi.RegisterOutputType(ConfigurationStoreReplicaArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationStoreSecondaryReadKeyOutput{})
	pulumi.RegisterOutputType(ConfigurationStoreSecondaryReadKeyArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationStoreSecondaryWriteKeyOutput{})
	pulumi.RegisterOutputType(ConfigurationStoreSecondaryWriteKeyArrayOutput{})
	pulumi.RegisterOutputType(GetConfigurationKeysItemOutput{})
	pulumi.RegisterOutputType(GetConfigurationKeysItemArrayOutput{})
	pulumi.RegisterOutputType(GetConfigurationStoreEncryptionOutput{})
	pulumi.RegisterOutputType(GetConfigurationStoreEncryptionArrayOutput{})
	pulumi.RegisterOutputType(GetConfigurationStoreIdentityOutput{})
	pulumi.RegisterOutputType(GetConfigurationStoreIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetConfigurationStorePrimaryReadKeyOutput{})
	pulumi.RegisterOutputType(GetConfigurationStorePrimaryReadKeyArrayOutput{})
	pulumi.RegisterOutputType(GetConfigurationStorePrimaryWriteKeyOutput{})
	pulumi.RegisterOutputType(GetConfigurationStorePrimaryWriteKeyArrayOutput{})
	pulumi.RegisterOutputType(GetConfigurationStoreReplicaOutput{})
	pulumi.RegisterOutputType(GetConfigurationStoreReplicaArrayOutput{})
	pulumi.RegisterOutputType(GetConfigurationStoreSecondaryReadKeyOutput{})
	pulumi.RegisterOutputType(GetConfigurationStoreSecondaryReadKeyArrayOutput{})
	pulumi.RegisterOutputType(GetConfigurationStoreSecondaryWriteKeyOutput{})
	pulumi.RegisterOutputType(GetConfigurationStoreSecondaryWriteKeyArrayOutput{})
}
