// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package appconfiguration

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ConfigurationStoreIdentity struct {
	// The ID of the Principal (Client) in Azure Active Directory.
	PrincipalId *string `pulumi:"principalId"`
	// The ID of the Azure Active Directory Tenant.
	TenantId *string `pulumi:"tenantId"`
	// Specifies the identity type of the App Configuration. At this time the only allowed value is `SystemAssigned`.
	Type string `pulumi:"type"`
}

// ConfigurationStoreIdentityInput is an input type that accepts ConfigurationStoreIdentityArgs and ConfigurationStoreIdentityOutput values.
// You can construct a concrete instance of `ConfigurationStoreIdentityInput` via:
//
//          ConfigurationStoreIdentityArgs{...}
type ConfigurationStoreIdentityInput interface {
	pulumi.Input

	ToConfigurationStoreIdentityOutput() ConfigurationStoreIdentityOutput
	ToConfigurationStoreIdentityOutputWithContext(context.Context) ConfigurationStoreIdentityOutput
}

type ConfigurationStoreIdentityArgs struct {
	// The ID of the Principal (Client) in Azure Active Directory.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The ID of the Azure Active Directory Tenant.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Specifies the identity type of the App Configuration. At this time the only allowed value is `SystemAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ConfigurationStoreIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStoreIdentity)(nil)).Elem()
}

func (i ConfigurationStoreIdentityArgs) ToConfigurationStoreIdentityOutput() ConfigurationStoreIdentityOutput {
	return i.ToConfigurationStoreIdentityOutputWithContext(context.Background())
}

func (i ConfigurationStoreIdentityArgs) ToConfigurationStoreIdentityOutputWithContext(ctx context.Context) ConfigurationStoreIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStoreIdentityOutput)
}

func (i ConfigurationStoreIdentityArgs) ToConfigurationStoreIdentityPtrOutput() ConfigurationStoreIdentityPtrOutput {
	return i.ToConfigurationStoreIdentityPtrOutputWithContext(context.Background())
}

func (i ConfigurationStoreIdentityArgs) ToConfigurationStoreIdentityPtrOutputWithContext(ctx context.Context) ConfigurationStoreIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStoreIdentityOutput).ToConfigurationStoreIdentityPtrOutputWithContext(ctx)
}

// ConfigurationStoreIdentityPtrInput is an input type that accepts ConfigurationStoreIdentityArgs, ConfigurationStoreIdentityPtr and ConfigurationStoreIdentityPtrOutput values.
// You can construct a concrete instance of `ConfigurationStoreIdentityPtrInput` via:
//
//          ConfigurationStoreIdentityArgs{...}
//
//  or:
//
//          nil
type ConfigurationStoreIdentityPtrInput interface {
	pulumi.Input

	ToConfigurationStoreIdentityPtrOutput() ConfigurationStoreIdentityPtrOutput
	ToConfigurationStoreIdentityPtrOutputWithContext(context.Context) ConfigurationStoreIdentityPtrOutput
}

type configurationStoreIdentityPtrType ConfigurationStoreIdentityArgs

func ConfigurationStoreIdentityPtr(v *ConfigurationStoreIdentityArgs) ConfigurationStoreIdentityPtrInput {
	return (*configurationStoreIdentityPtrType)(v)
}

func (*configurationStoreIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationStoreIdentity)(nil)).Elem()
}

func (i *configurationStoreIdentityPtrType) ToConfigurationStoreIdentityPtrOutput() ConfigurationStoreIdentityPtrOutput {
	return i.ToConfigurationStoreIdentityPtrOutputWithContext(context.Background())
}

func (i *configurationStoreIdentityPtrType) ToConfigurationStoreIdentityPtrOutputWithContext(ctx context.Context) ConfigurationStoreIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStoreIdentityPtrOutput)
}

type ConfigurationStoreIdentityOutput struct{ *pulumi.OutputState }

func (ConfigurationStoreIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStoreIdentity)(nil)).Elem()
}

func (o ConfigurationStoreIdentityOutput) ToConfigurationStoreIdentityOutput() ConfigurationStoreIdentityOutput {
	return o
}

func (o ConfigurationStoreIdentityOutput) ToConfigurationStoreIdentityOutputWithContext(ctx context.Context) ConfigurationStoreIdentityOutput {
	return o
}

func (o ConfigurationStoreIdentityOutput) ToConfigurationStoreIdentityPtrOutput() ConfigurationStoreIdentityPtrOutput {
	return o.ToConfigurationStoreIdentityPtrOutputWithContext(context.Background())
}

func (o ConfigurationStoreIdentityOutput) ToConfigurationStoreIdentityPtrOutputWithContext(ctx context.Context) ConfigurationStoreIdentityPtrOutput {
	return o.ApplyT(func(v ConfigurationStoreIdentity) *ConfigurationStoreIdentity {
		return &v
	}).(ConfigurationStoreIdentityPtrOutput)
}

// The ID of the Principal (Client) in Azure Active Directory.
func (o ConfigurationStoreIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStoreIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The ID of the Azure Active Directory Tenant.
func (o ConfigurationStoreIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStoreIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the identity type of the App Configuration. At this time the only allowed value is `SystemAssigned`.
func (o ConfigurationStoreIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationStoreIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type ConfigurationStoreIdentityPtrOutput struct{ *pulumi.OutputState }

func (ConfigurationStoreIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationStoreIdentity)(nil)).Elem()
}

func (o ConfigurationStoreIdentityPtrOutput) ToConfigurationStoreIdentityPtrOutput() ConfigurationStoreIdentityPtrOutput {
	return o
}

func (o ConfigurationStoreIdentityPtrOutput) ToConfigurationStoreIdentityPtrOutputWithContext(ctx context.Context) ConfigurationStoreIdentityPtrOutput {
	return o
}

func (o ConfigurationStoreIdentityPtrOutput) Elem() ConfigurationStoreIdentityOutput {
	return o.ApplyT(func(v *ConfigurationStoreIdentity) ConfigurationStoreIdentity { return *v }).(ConfigurationStoreIdentityOutput)
}

// The ID of the Principal (Client) in Azure Active Directory.
func (o ConfigurationStoreIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationStoreIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The ID of the Azure Active Directory Tenant.
func (o ConfigurationStoreIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationStoreIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the identity type of the App Configuration. At this time the only allowed value is `SystemAssigned`.
func (o ConfigurationStoreIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationStoreIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ConfigurationStorePrimaryReadKey struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString *string `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id *string `pulumi:"id"`
	// The Secret of the Access Key.
	Secret *string `pulumi:"secret"`
}

// ConfigurationStorePrimaryReadKeyInput is an input type that accepts ConfigurationStorePrimaryReadKeyArgs and ConfigurationStorePrimaryReadKeyOutput values.
// You can construct a concrete instance of `ConfigurationStorePrimaryReadKeyInput` via:
//
//          ConfigurationStorePrimaryReadKeyArgs{...}
type ConfigurationStorePrimaryReadKeyInput interface {
	pulumi.Input

	ToConfigurationStorePrimaryReadKeyOutput() ConfigurationStorePrimaryReadKeyOutput
	ToConfigurationStorePrimaryReadKeyOutputWithContext(context.Context) ConfigurationStorePrimaryReadKeyOutput
}

type ConfigurationStorePrimaryReadKeyArgs struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Secret of the Access Key.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
}

func (ConfigurationStorePrimaryReadKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStorePrimaryReadKey)(nil)).Elem()
}

func (i ConfigurationStorePrimaryReadKeyArgs) ToConfigurationStorePrimaryReadKeyOutput() ConfigurationStorePrimaryReadKeyOutput {
	return i.ToConfigurationStorePrimaryReadKeyOutputWithContext(context.Background())
}

func (i ConfigurationStorePrimaryReadKeyArgs) ToConfigurationStorePrimaryReadKeyOutputWithContext(ctx context.Context) ConfigurationStorePrimaryReadKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStorePrimaryReadKeyOutput)
}

// ConfigurationStorePrimaryReadKeyArrayInput is an input type that accepts ConfigurationStorePrimaryReadKeyArray and ConfigurationStorePrimaryReadKeyArrayOutput values.
// You can construct a concrete instance of `ConfigurationStorePrimaryReadKeyArrayInput` via:
//
//          ConfigurationStorePrimaryReadKeyArray{ ConfigurationStorePrimaryReadKeyArgs{...} }
type ConfigurationStorePrimaryReadKeyArrayInput interface {
	pulumi.Input

	ToConfigurationStorePrimaryReadKeyArrayOutput() ConfigurationStorePrimaryReadKeyArrayOutput
	ToConfigurationStorePrimaryReadKeyArrayOutputWithContext(context.Context) ConfigurationStorePrimaryReadKeyArrayOutput
}

type ConfigurationStorePrimaryReadKeyArray []ConfigurationStorePrimaryReadKeyInput

func (ConfigurationStorePrimaryReadKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationStorePrimaryReadKey)(nil)).Elem()
}

func (i ConfigurationStorePrimaryReadKeyArray) ToConfigurationStorePrimaryReadKeyArrayOutput() ConfigurationStorePrimaryReadKeyArrayOutput {
	return i.ToConfigurationStorePrimaryReadKeyArrayOutputWithContext(context.Background())
}

func (i ConfigurationStorePrimaryReadKeyArray) ToConfigurationStorePrimaryReadKeyArrayOutputWithContext(ctx context.Context) ConfigurationStorePrimaryReadKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStorePrimaryReadKeyArrayOutput)
}

type ConfigurationStorePrimaryReadKeyOutput struct{ *pulumi.OutputState }

func (ConfigurationStorePrimaryReadKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStorePrimaryReadKey)(nil)).Elem()
}

func (o ConfigurationStorePrimaryReadKeyOutput) ToConfigurationStorePrimaryReadKeyOutput() ConfigurationStorePrimaryReadKeyOutput {
	return o
}

func (o ConfigurationStorePrimaryReadKeyOutput) ToConfigurationStorePrimaryReadKeyOutputWithContext(ctx context.Context) ConfigurationStorePrimaryReadKeyOutput {
	return o
}

// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
func (o ConfigurationStorePrimaryReadKeyOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStorePrimaryReadKey) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// The ID of the Access Key.
func (o ConfigurationStorePrimaryReadKeyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStorePrimaryReadKey) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Secret of the Access Key.
func (o ConfigurationStorePrimaryReadKeyOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStorePrimaryReadKey) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

type ConfigurationStorePrimaryReadKeyArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationStorePrimaryReadKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationStorePrimaryReadKey)(nil)).Elem()
}

func (o ConfigurationStorePrimaryReadKeyArrayOutput) ToConfigurationStorePrimaryReadKeyArrayOutput() ConfigurationStorePrimaryReadKeyArrayOutput {
	return o
}

func (o ConfigurationStorePrimaryReadKeyArrayOutput) ToConfigurationStorePrimaryReadKeyArrayOutputWithContext(ctx context.Context) ConfigurationStorePrimaryReadKeyArrayOutput {
	return o
}

func (o ConfigurationStorePrimaryReadKeyArrayOutput) Index(i pulumi.IntInput) ConfigurationStorePrimaryReadKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationStorePrimaryReadKey {
		return vs[0].([]ConfigurationStorePrimaryReadKey)[vs[1].(int)]
	}).(ConfigurationStorePrimaryReadKeyOutput)
}

type ConfigurationStorePrimaryWriteKey struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString *string `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id *string `pulumi:"id"`
	// The Secret of the Access Key.
	Secret *string `pulumi:"secret"`
}

// ConfigurationStorePrimaryWriteKeyInput is an input type that accepts ConfigurationStorePrimaryWriteKeyArgs and ConfigurationStorePrimaryWriteKeyOutput values.
// You can construct a concrete instance of `ConfigurationStorePrimaryWriteKeyInput` via:
//
//          ConfigurationStorePrimaryWriteKeyArgs{...}
type ConfigurationStorePrimaryWriteKeyInput interface {
	pulumi.Input

	ToConfigurationStorePrimaryWriteKeyOutput() ConfigurationStorePrimaryWriteKeyOutput
	ToConfigurationStorePrimaryWriteKeyOutputWithContext(context.Context) ConfigurationStorePrimaryWriteKeyOutput
}

type ConfigurationStorePrimaryWriteKeyArgs struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Secret of the Access Key.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
}

func (ConfigurationStorePrimaryWriteKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStorePrimaryWriteKey)(nil)).Elem()
}

func (i ConfigurationStorePrimaryWriteKeyArgs) ToConfigurationStorePrimaryWriteKeyOutput() ConfigurationStorePrimaryWriteKeyOutput {
	return i.ToConfigurationStorePrimaryWriteKeyOutputWithContext(context.Background())
}

func (i ConfigurationStorePrimaryWriteKeyArgs) ToConfigurationStorePrimaryWriteKeyOutputWithContext(ctx context.Context) ConfigurationStorePrimaryWriteKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStorePrimaryWriteKeyOutput)
}

// ConfigurationStorePrimaryWriteKeyArrayInput is an input type that accepts ConfigurationStorePrimaryWriteKeyArray and ConfigurationStorePrimaryWriteKeyArrayOutput values.
// You can construct a concrete instance of `ConfigurationStorePrimaryWriteKeyArrayInput` via:
//
//          ConfigurationStorePrimaryWriteKeyArray{ ConfigurationStorePrimaryWriteKeyArgs{...} }
type ConfigurationStorePrimaryWriteKeyArrayInput interface {
	pulumi.Input

	ToConfigurationStorePrimaryWriteKeyArrayOutput() ConfigurationStorePrimaryWriteKeyArrayOutput
	ToConfigurationStorePrimaryWriteKeyArrayOutputWithContext(context.Context) ConfigurationStorePrimaryWriteKeyArrayOutput
}

type ConfigurationStorePrimaryWriteKeyArray []ConfigurationStorePrimaryWriteKeyInput

func (ConfigurationStorePrimaryWriteKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationStorePrimaryWriteKey)(nil)).Elem()
}

func (i ConfigurationStorePrimaryWriteKeyArray) ToConfigurationStorePrimaryWriteKeyArrayOutput() ConfigurationStorePrimaryWriteKeyArrayOutput {
	return i.ToConfigurationStorePrimaryWriteKeyArrayOutputWithContext(context.Background())
}

func (i ConfigurationStorePrimaryWriteKeyArray) ToConfigurationStorePrimaryWriteKeyArrayOutputWithContext(ctx context.Context) ConfigurationStorePrimaryWriteKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStorePrimaryWriteKeyArrayOutput)
}

type ConfigurationStorePrimaryWriteKeyOutput struct{ *pulumi.OutputState }

func (ConfigurationStorePrimaryWriteKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStorePrimaryWriteKey)(nil)).Elem()
}

func (o ConfigurationStorePrimaryWriteKeyOutput) ToConfigurationStorePrimaryWriteKeyOutput() ConfigurationStorePrimaryWriteKeyOutput {
	return o
}

func (o ConfigurationStorePrimaryWriteKeyOutput) ToConfigurationStorePrimaryWriteKeyOutputWithContext(ctx context.Context) ConfigurationStorePrimaryWriteKeyOutput {
	return o
}

// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
func (o ConfigurationStorePrimaryWriteKeyOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStorePrimaryWriteKey) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// The ID of the Access Key.
func (o ConfigurationStorePrimaryWriteKeyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStorePrimaryWriteKey) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Secret of the Access Key.
func (o ConfigurationStorePrimaryWriteKeyOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStorePrimaryWriteKey) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

type ConfigurationStorePrimaryWriteKeyArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationStorePrimaryWriteKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationStorePrimaryWriteKey)(nil)).Elem()
}

func (o ConfigurationStorePrimaryWriteKeyArrayOutput) ToConfigurationStorePrimaryWriteKeyArrayOutput() ConfigurationStorePrimaryWriteKeyArrayOutput {
	return o
}

func (o ConfigurationStorePrimaryWriteKeyArrayOutput) ToConfigurationStorePrimaryWriteKeyArrayOutputWithContext(ctx context.Context) ConfigurationStorePrimaryWriteKeyArrayOutput {
	return o
}

func (o ConfigurationStorePrimaryWriteKeyArrayOutput) Index(i pulumi.IntInput) ConfigurationStorePrimaryWriteKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationStorePrimaryWriteKey {
		return vs[0].([]ConfigurationStorePrimaryWriteKey)[vs[1].(int)]
	}).(ConfigurationStorePrimaryWriteKeyOutput)
}

type ConfigurationStoreSecondaryReadKey struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString *string `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id *string `pulumi:"id"`
	// The Secret of the Access Key.
	Secret *string `pulumi:"secret"`
}

// ConfigurationStoreSecondaryReadKeyInput is an input type that accepts ConfigurationStoreSecondaryReadKeyArgs and ConfigurationStoreSecondaryReadKeyOutput values.
// You can construct a concrete instance of `ConfigurationStoreSecondaryReadKeyInput` via:
//
//          ConfigurationStoreSecondaryReadKeyArgs{...}
type ConfigurationStoreSecondaryReadKeyInput interface {
	pulumi.Input

	ToConfigurationStoreSecondaryReadKeyOutput() ConfigurationStoreSecondaryReadKeyOutput
	ToConfigurationStoreSecondaryReadKeyOutputWithContext(context.Context) ConfigurationStoreSecondaryReadKeyOutput
}

type ConfigurationStoreSecondaryReadKeyArgs struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Secret of the Access Key.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
}

func (ConfigurationStoreSecondaryReadKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStoreSecondaryReadKey)(nil)).Elem()
}

func (i ConfigurationStoreSecondaryReadKeyArgs) ToConfigurationStoreSecondaryReadKeyOutput() ConfigurationStoreSecondaryReadKeyOutput {
	return i.ToConfigurationStoreSecondaryReadKeyOutputWithContext(context.Background())
}

func (i ConfigurationStoreSecondaryReadKeyArgs) ToConfigurationStoreSecondaryReadKeyOutputWithContext(ctx context.Context) ConfigurationStoreSecondaryReadKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStoreSecondaryReadKeyOutput)
}

// ConfigurationStoreSecondaryReadKeyArrayInput is an input type that accepts ConfigurationStoreSecondaryReadKeyArray and ConfigurationStoreSecondaryReadKeyArrayOutput values.
// You can construct a concrete instance of `ConfigurationStoreSecondaryReadKeyArrayInput` via:
//
//          ConfigurationStoreSecondaryReadKeyArray{ ConfigurationStoreSecondaryReadKeyArgs{...} }
type ConfigurationStoreSecondaryReadKeyArrayInput interface {
	pulumi.Input

	ToConfigurationStoreSecondaryReadKeyArrayOutput() ConfigurationStoreSecondaryReadKeyArrayOutput
	ToConfigurationStoreSecondaryReadKeyArrayOutputWithContext(context.Context) ConfigurationStoreSecondaryReadKeyArrayOutput
}

type ConfigurationStoreSecondaryReadKeyArray []ConfigurationStoreSecondaryReadKeyInput

func (ConfigurationStoreSecondaryReadKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationStoreSecondaryReadKey)(nil)).Elem()
}

func (i ConfigurationStoreSecondaryReadKeyArray) ToConfigurationStoreSecondaryReadKeyArrayOutput() ConfigurationStoreSecondaryReadKeyArrayOutput {
	return i.ToConfigurationStoreSecondaryReadKeyArrayOutputWithContext(context.Background())
}

func (i ConfigurationStoreSecondaryReadKeyArray) ToConfigurationStoreSecondaryReadKeyArrayOutputWithContext(ctx context.Context) ConfigurationStoreSecondaryReadKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStoreSecondaryReadKeyArrayOutput)
}

type ConfigurationStoreSecondaryReadKeyOutput struct{ *pulumi.OutputState }

func (ConfigurationStoreSecondaryReadKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStoreSecondaryReadKey)(nil)).Elem()
}

func (o ConfigurationStoreSecondaryReadKeyOutput) ToConfigurationStoreSecondaryReadKeyOutput() ConfigurationStoreSecondaryReadKeyOutput {
	return o
}

func (o ConfigurationStoreSecondaryReadKeyOutput) ToConfigurationStoreSecondaryReadKeyOutputWithContext(ctx context.Context) ConfigurationStoreSecondaryReadKeyOutput {
	return o
}

// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
func (o ConfigurationStoreSecondaryReadKeyOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStoreSecondaryReadKey) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// The ID of the Access Key.
func (o ConfigurationStoreSecondaryReadKeyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStoreSecondaryReadKey) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Secret of the Access Key.
func (o ConfigurationStoreSecondaryReadKeyOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStoreSecondaryReadKey) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

type ConfigurationStoreSecondaryReadKeyArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationStoreSecondaryReadKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationStoreSecondaryReadKey)(nil)).Elem()
}

func (o ConfigurationStoreSecondaryReadKeyArrayOutput) ToConfigurationStoreSecondaryReadKeyArrayOutput() ConfigurationStoreSecondaryReadKeyArrayOutput {
	return o
}

func (o ConfigurationStoreSecondaryReadKeyArrayOutput) ToConfigurationStoreSecondaryReadKeyArrayOutputWithContext(ctx context.Context) ConfigurationStoreSecondaryReadKeyArrayOutput {
	return o
}

func (o ConfigurationStoreSecondaryReadKeyArrayOutput) Index(i pulumi.IntInput) ConfigurationStoreSecondaryReadKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationStoreSecondaryReadKey {
		return vs[0].([]ConfigurationStoreSecondaryReadKey)[vs[1].(int)]
	}).(ConfigurationStoreSecondaryReadKeyOutput)
}

type ConfigurationStoreSecondaryWriteKey struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString *string `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id *string `pulumi:"id"`
	// The Secret of the Access Key.
	Secret *string `pulumi:"secret"`
}

// ConfigurationStoreSecondaryWriteKeyInput is an input type that accepts ConfigurationStoreSecondaryWriteKeyArgs and ConfigurationStoreSecondaryWriteKeyOutput values.
// You can construct a concrete instance of `ConfigurationStoreSecondaryWriteKeyInput` via:
//
//          ConfigurationStoreSecondaryWriteKeyArgs{...}
type ConfigurationStoreSecondaryWriteKeyInput interface {
	pulumi.Input

	ToConfigurationStoreSecondaryWriteKeyOutput() ConfigurationStoreSecondaryWriteKeyOutput
	ToConfigurationStoreSecondaryWriteKeyOutputWithContext(context.Context) ConfigurationStoreSecondaryWriteKeyOutput
}

type ConfigurationStoreSecondaryWriteKeyArgs struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Secret of the Access Key.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
}

func (ConfigurationStoreSecondaryWriteKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStoreSecondaryWriteKey)(nil)).Elem()
}

func (i ConfigurationStoreSecondaryWriteKeyArgs) ToConfigurationStoreSecondaryWriteKeyOutput() ConfigurationStoreSecondaryWriteKeyOutput {
	return i.ToConfigurationStoreSecondaryWriteKeyOutputWithContext(context.Background())
}

func (i ConfigurationStoreSecondaryWriteKeyArgs) ToConfigurationStoreSecondaryWriteKeyOutputWithContext(ctx context.Context) ConfigurationStoreSecondaryWriteKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStoreSecondaryWriteKeyOutput)
}

// ConfigurationStoreSecondaryWriteKeyArrayInput is an input type that accepts ConfigurationStoreSecondaryWriteKeyArray and ConfigurationStoreSecondaryWriteKeyArrayOutput values.
// You can construct a concrete instance of `ConfigurationStoreSecondaryWriteKeyArrayInput` via:
//
//          ConfigurationStoreSecondaryWriteKeyArray{ ConfigurationStoreSecondaryWriteKeyArgs{...} }
type ConfigurationStoreSecondaryWriteKeyArrayInput interface {
	pulumi.Input

	ToConfigurationStoreSecondaryWriteKeyArrayOutput() ConfigurationStoreSecondaryWriteKeyArrayOutput
	ToConfigurationStoreSecondaryWriteKeyArrayOutputWithContext(context.Context) ConfigurationStoreSecondaryWriteKeyArrayOutput
}

type ConfigurationStoreSecondaryWriteKeyArray []ConfigurationStoreSecondaryWriteKeyInput

func (ConfigurationStoreSecondaryWriteKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationStoreSecondaryWriteKey)(nil)).Elem()
}

func (i ConfigurationStoreSecondaryWriteKeyArray) ToConfigurationStoreSecondaryWriteKeyArrayOutput() ConfigurationStoreSecondaryWriteKeyArrayOutput {
	return i.ToConfigurationStoreSecondaryWriteKeyArrayOutputWithContext(context.Background())
}

func (i ConfigurationStoreSecondaryWriteKeyArray) ToConfigurationStoreSecondaryWriteKeyArrayOutputWithContext(ctx context.Context) ConfigurationStoreSecondaryWriteKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationStoreSecondaryWriteKeyArrayOutput)
}

type ConfigurationStoreSecondaryWriteKeyOutput struct{ *pulumi.OutputState }

func (ConfigurationStoreSecondaryWriteKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationStoreSecondaryWriteKey)(nil)).Elem()
}

func (o ConfigurationStoreSecondaryWriteKeyOutput) ToConfigurationStoreSecondaryWriteKeyOutput() ConfigurationStoreSecondaryWriteKeyOutput {
	return o
}

func (o ConfigurationStoreSecondaryWriteKeyOutput) ToConfigurationStoreSecondaryWriteKeyOutputWithContext(ctx context.Context) ConfigurationStoreSecondaryWriteKeyOutput {
	return o
}

// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
func (o ConfigurationStoreSecondaryWriteKeyOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStoreSecondaryWriteKey) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// The ID of the Access Key.
func (o ConfigurationStoreSecondaryWriteKeyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStoreSecondaryWriteKey) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Secret of the Access Key.
func (o ConfigurationStoreSecondaryWriteKeyOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationStoreSecondaryWriteKey) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

type ConfigurationStoreSecondaryWriteKeyArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationStoreSecondaryWriteKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationStoreSecondaryWriteKey)(nil)).Elem()
}

func (o ConfigurationStoreSecondaryWriteKeyArrayOutput) ToConfigurationStoreSecondaryWriteKeyArrayOutput() ConfigurationStoreSecondaryWriteKeyArrayOutput {
	return o
}

func (o ConfigurationStoreSecondaryWriteKeyArrayOutput) ToConfigurationStoreSecondaryWriteKeyArrayOutputWithContext(ctx context.Context) ConfigurationStoreSecondaryWriteKeyArrayOutput {
	return o
}

func (o ConfigurationStoreSecondaryWriteKeyArrayOutput) Index(i pulumi.IntInput) ConfigurationStoreSecondaryWriteKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationStoreSecondaryWriteKey {
		return vs[0].([]ConfigurationStoreSecondaryWriteKey)[vs[1].(int)]
	}).(ConfigurationStoreSecondaryWriteKeyOutput)
}

type GetConfigurationStorePrimaryReadKey struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString string `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id string `pulumi:"id"`
	// The Secret of the Access Key.
	Secret string `pulumi:"secret"`
}

// GetConfigurationStorePrimaryReadKeyInput is an input type that accepts GetConfigurationStorePrimaryReadKeyArgs and GetConfigurationStorePrimaryReadKeyOutput values.
// You can construct a concrete instance of `GetConfigurationStorePrimaryReadKeyInput` via:
//
//          GetConfigurationStorePrimaryReadKeyArgs{...}
type GetConfigurationStorePrimaryReadKeyInput interface {
	pulumi.Input

	ToGetConfigurationStorePrimaryReadKeyOutput() GetConfigurationStorePrimaryReadKeyOutput
	ToGetConfigurationStorePrimaryReadKeyOutputWithContext(context.Context) GetConfigurationStorePrimaryReadKeyOutput
}

type GetConfigurationStorePrimaryReadKeyArgs struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id pulumi.StringInput `pulumi:"id"`
	// The Secret of the Access Key.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetConfigurationStorePrimaryReadKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationStorePrimaryReadKey)(nil)).Elem()
}

func (i GetConfigurationStorePrimaryReadKeyArgs) ToGetConfigurationStorePrimaryReadKeyOutput() GetConfigurationStorePrimaryReadKeyOutput {
	return i.ToGetConfigurationStorePrimaryReadKeyOutputWithContext(context.Background())
}

func (i GetConfigurationStorePrimaryReadKeyArgs) ToGetConfigurationStorePrimaryReadKeyOutputWithContext(ctx context.Context) GetConfigurationStorePrimaryReadKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationStorePrimaryReadKeyOutput)
}

// GetConfigurationStorePrimaryReadKeyArrayInput is an input type that accepts GetConfigurationStorePrimaryReadKeyArray and GetConfigurationStorePrimaryReadKeyArrayOutput values.
// You can construct a concrete instance of `GetConfigurationStorePrimaryReadKeyArrayInput` via:
//
//          GetConfigurationStorePrimaryReadKeyArray{ GetConfigurationStorePrimaryReadKeyArgs{...} }
type GetConfigurationStorePrimaryReadKeyArrayInput interface {
	pulumi.Input

	ToGetConfigurationStorePrimaryReadKeyArrayOutput() GetConfigurationStorePrimaryReadKeyArrayOutput
	ToGetConfigurationStorePrimaryReadKeyArrayOutputWithContext(context.Context) GetConfigurationStorePrimaryReadKeyArrayOutput
}

type GetConfigurationStorePrimaryReadKeyArray []GetConfigurationStorePrimaryReadKeyInput

func (GetConfigurationStorePrimaryReadKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationStorePrimaryReadKey)(nil)).Elem()
}

func (i GetConfigurationStorePrimaryReadKeyArray) ToGetConfigurationStorePrimaryReadKeyArrayOutput() GetConfigurationStorePrimaryReadKeyArrayOutput {
	return i.ToGetConfigurationStorePrimaryReadKeyArrayOutputWithContext(context.Background())
}

func (i GetConfigurationStorePrimaryReadKeyArray) ToGetConfigurationStorePrimaryReadKeyArrayOutputWithContext(ctx context.Context) GetConfigurationStorePrimaryReadKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationStorePrimaryReadKeyArrayOutput)
}

type GetConfigurationStorePrimaryReadKeyOutput struct{ *pulumi.OutputState }

func (GetConfigurationStorePrimaryReadKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationStorePrimaryReadKey)(nil)).Elem()
}

func (o GetConfigurationStorePrimaryReadKeyOutput) ToGetConfigurationStorePrimaryReadKeyOutput() GetConfigurationStorePrimaryReadKeyOutput {
	return o
}

func (o GetConfigurationStorePrimaryReadKeyOutput) ToGetConfigurationStorePrimaryReadKeyOutputWithContext(ctx context.Context) GetConfigurationStorePrimaryReadKeyOutput {
	return o
}

// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
func (o GetConfigurationStorePrimaryReadKeyOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStorePrimaryReadKey) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The ID of the Access Key.
func (o GetConfigurationStorePrimaryReadKeyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStorePrimaryReadKey) string { return v.Id }).(pulumi.StringOutput)
}

// The Secret of the Access Key.
func (o GetConfigurationStorePrimaryReadKeyOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStorePrimaryReadKey) string { return v.Secret }).(pulumi.StringOutput)
}

type GetConfigurationStorePrimaryReadKeyArrayOutput struct{ *pulumi.OutputState }

func (GetConfigurationStorePrimaryReadKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationStorePrimaryReadKey)(nil)).Elem()
}

func (o GetConfigurationStorePrimaryReadKeyArrayOutput) ToGetConfigurationStorePrimaryReadKeyArrayOutput() GetConfigurationStorePrimaryReadKeyArrayOutput {
	return o
}

func (o GetConfigurationStorePrimaryReadKeyArrayOutput) ToGetConfigurationStorePrimaryReadKeyArrayOutputWithContext(ctx context.Context) GetConfigurationStorePrimaryReadKeyArrayOutput {
	return o
}

func (o GetConfigurationStorePrimaryReadKeyArrayOutput) Index(i pulumi.IntInput) GetConfigurationStorePrimaryReadKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigurationStorePrimaryReadKey {
		return vs[0].([]GetConfigurationStorePrimaryReadKey)[vs[1].(int)]
	}).(GetConfigurationStorePrimaryReadKeyOutput)
}

type GetConfigurationStorePrimaryWriteKey struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString string `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id string `pulumi:"id"`
	// The Secret of the Access Key.
	Secret string `pulumi:"secret"`
}

// GetConfigurationStorePrimaryWriteKeyInput is an input type that accepts GetConfigurationStorePrimaryWriteKeyArgs and GetConfigurationStorePrimaryWriteKeyOutput values.
// You can construct a concrete instance of `GetConfigurationStorePrimaryWriteKeyInput` via:
//
//          GetConfigurationStorePrimaryWriteKeyArgs{...}
type GetConfigurationStorePrimaryWriteKeyInput interface {
	pulumi.Input

	ToGetConfigurationStorePrimaryWriteKeyOutput() GetConfigurationStorePrimaryWriteKeyOutput
	ToGetConfigurationStorePrimaryWriteKeyOutputWithContext(context.Context) GetConfigurationStorePrimaryWriteKeyOutput
}

type GetConfigurationStorePrimaryWriteKeyArgs struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id pulumi.StringInput `pulumi:"id"`
	// The Secret of the Access Key.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetConfigurationStorePrimaryWriteKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationStorePrimaryWriteKey)(nil)).Elem()
}

func (i GetConfigurationStorePrimaryWriteKeyArgs) ToGetConfigurationStorePrimaryWriteKeyOutput() GetConfigurationStorePrimaryWriteKeyOutput {
	return i.ToGetConfigurationStorePrimaryWriteKeyOutputWithContext(context.Background())
}

func (i GetConfigurationStorePrimaryWriteKeyArgs) ToGetConfigurationStorePrimaryWriteKeyOutputWithContext(ctx context.Context) GetConfigurationStorePrimaryWriteKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationStorePrimaryWriteKeyOutput)
}

// GetConfigurationStorePrimaryWriteKeyArrayInput is an input type that accepts GetConfigurationStorePrimaryWriteKeyArray and GetConfigurationStorePrimaryWriteKeyArrayOutput values.
// You can construct a concrete instance of `GetConfigurationStorePrimaryWriteKeyArrayInput` via:
//
//          GetConfigurationStorePrimaryWriteKeyArray{ GetConfigurationStorePrimaryWriteKeyArgs{...} }
type GetConfigurationStorePrimaryWriteKeyArrayInput interface {
	pulumi.Input

	ToGetConfigurationStorePrimaryWriteKeyArrayOutput() GetConfigurationStorePrimaryWriteKeyArrayOutput
	ToGetConfigurationStorePrimaryWriteKeyArrayOutputWithContext(context.Context) GetConfigurationStorePrimaryWriteKeyArrayOutput
}

type GetConfigurationStorePrimaryWriteKeyArray []GetConfigurationStorePrimaryWriteKeyInput

func (GetConfigurationStorePrimaryWriteKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationStorePrimaryWriteKey)(nil)).Elem()
}

func (i GetConfigurationStorePrimaryWriteKeyArray) ToGetConfigurationStorePrimaryWriteKeyArrayOutput() GetConfigurationStorePrimaryWriteKeyArrayOutput {
	return i.ToGetConfigurationStorePrimaryWriteKeyArrayOutputWithContext(context.Background())
}

func (i GetConfigurationStorePrimaryWriteKeyArray) ToGetConfigurationStorePrimaryWriteKeyArrayOutputWithContext(ctx context.Context) GetConfigurationStorePrimaryWriteKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationStorePrimaryWriteKeyArrayOutput)
}

type GetConfigurationStorePrimaryWriteKeyOutput struct{ *pulumi.OutputState }

func (GetConfigurationStorePrimaryWriteKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationStorePrimaryWriteKey)(nil)).Elem()
}

func (o GetConfigurationStorePrimaryWriteKeyOutput) ToGetConfigurationStorePrimaryWriteKeyOutput() GetConfigurationStorePrimaryWriteKeyOutput {
	return o
}

func (o GetConfigurationStorePrimaryWriteKeyOutput) ToGetConfigurationStorePrimaryWriteKeyOutputWithContext(ctx context.Context) GetConfigurationStorePrimaryWriteKeyOutput {
	return o
}

// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
func (o GetConfigurationStorePrimaryWriteKeyOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStorePrimaryWriteKey) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The ID of the Access Key.
func (o GetConfigurationStorePrimaryWriteKeyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStorePrimaryWriteKey) string { return v.Id }).(pulumi.StringOutput)
}

// The Secret of the Access Key.
func (o GetConfigurationStorePrimaryWriteKeyOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStorePrimaryWriteKey) string { return v.Secret }).(pulumi.StringOutput)
}

type GetConfigurationStorePrimaryWriteKeyArrayOutput struct{ *pulumi.OutputState }

func (GetConfigurationStorePrimaryWriteKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationStorePrimaryWriteKey)(nil)).Elem()
}

func (o GetConfigurationStorePrimaryWriteKeyArrayOutput) ToGetConfigurationStorePrimaryWriteKeyArrayOutput() GetConfigurationStorePrimaryWriteKeyArrayOutput {
	return o
}

func (o GetConfigurationStorePrimaryWriteKeyArrayOutput) ToGetConfigurationStorePrimaryWriteKeyArrayOutputWithContext(ctx context.Context) GetConfigurationStorePrimaryWriteKeyArrayOutput {
	return o
}

func (o GetConfigurationStorePrimaryWriteKeyArrayOutput) Index(i pulumi.IntInput) GetConfigurationStorePrimaryWriteKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigurationStorePrimaryWriteKey {
		return vs[0].([]GetConfigurationStorePrimaryWriteKey)[vs[1].(int)]
	}).(GetConfigurationStorePrimaryWriteKeyOutput)
}

type GetConfigurationStoreSecondaryReadKey struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString string `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id string `pulumi:"id"`
	// The Secret of the Access Key.
	Secret string `pulumi:"secret"`
}

// GetConfigurationStoreSecondaryReadKeyInput is an input type that accepts GetConfigurationStoreSecondaryReadKeyArgs and GetConfigurationStoreSecondaryReadKeyOutput values.
// You can construct a concrete instance of `GetConfigurationStoreSecondaryReadKeyInput` via:
//
//          GetConfigurationStoreSecondaryReadKeyArgs{...}
type GetConfigurationStoreSecondaryReadKeyInput interface {
	pulumi.Input

	ToGetConfigurationStoreSecondaryReadKeyOutput() GetConfigurationStoreSecondaryReadKeyOutput
	ToGetConfigurationStoreSecondaryReadKeyOutputWithContext(context.Context) GetConfigurationStoreSecondaryReadKeyOutput
}

type GetConfigurationStoreSecondaryReadKeyArgs struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id pulumi.StringInput `pulumi:"id"`
	// The Secret of the Access Key.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetConfigurationStoreSecondaryReadKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationStoreSecondaryReadKey)(nil)).Elem()
}

func (i GetConfigurationStoreSecondaryReadKeyArgs) ToGetConfigurationStoreSecondaryReadKeyOutput() GetConfigurationStoreSecondaryReadKeyOutput {
	return i.ToGetConfigurationStoreSecondaryReadKeyOutputWithContext(context.Background())
}

func (i GetConfigurationStoreSecondaryReadKeyArgs) ToGetConfigurationStoreSecondaryReadKeyOutputWithContext(ctx context.Context) GetConfigurationStoreSecondaryReadKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationStoreSecondaryReadKeyOutput)
}

// GetConfigurationStoreSecondaryReadKeyArrayInput is an input type that accepts GetConfigurationStoreSecondaryReadKeyArray and GetConfigurationStoreSecondaryReadKeyArrayOutput values.
// You can construct a concrete instance of `GetConfigurationStoreSecondaryReadKeyArrayInput` via:
//
//          GetConfigurationStoreSecondaryReadKeyArray{ GetConfigurationStoreSecondaryReadKeyArgs{...} }
type GetConfigurationStoreSecondaryReadKeyArrayInput interface {
	pulumi.Input

	ToGetConfigurationStoreSecondaryReadKeyArrayOutput() GetConfigurationStoreSecondaryReadKeyArrayOutput
	ToGetConfigurationStoreSecondaryReadKeyArrayOutputWithContext(context.Context) GetConfigurationStoreSecondaryReadKeyArrayOutput
}

type GetConfigurationStoreSecondaryReadKeyArray []GetConfigurationStoreSecondaryReadKeyInput

func (GetConfigurationStoreSecondaryReadKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationStoreSecondaryReadKey)(nil)).Elem()
}

func (i GetConfigurationStoreSecondaryReadKeyArray) ToGetConfigurationStoreSecondaryReadKeyArrayOutput() GetConfigurationStoreSecondaryReadKeyArrayOutput {
	return i.ToGetConfigurationStoreSecondaryReadKeyArrayOutputWithContext(context.Background())
}

func (i GetConfigurationStoreSecondaryReadKeyArray) ToGetConfigurationStoreSecondaryReadKeyArrayOutputWithContext(ctx context.Context) GetConfigurationStoreSecondaryReadKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationStoreSecondaryReadKeyArrayOutput)
}

type GetConfigurationStoreSecondaryReadKeyOutput struct{ *pulumi.OutputState }

func (GetConfigurationStoreSecondaryReadKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationStoreSecondaryReadKey)(nil)).Elem()
}

func (o GetConfigurationStoreSecondaryReadKeyOutput) ToGetConfigurationStoreSecondaryReadKeyOutput() GetConfigurationStoreSecondaryReadKeyOutput {
	return o
}

func (o GetConfigurationStoreSecondaryReadKeyOutput) ToGetConfigurationStoreSecondaryReadKeyOutputWithContext(ctx context.Context) GetConfigurationStoreSecondaryReadKeyOutput {
	return o
}

// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
func (o GetConfigurationStoreSecondaryReadKeyOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStoreSecondaryReadKey) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The ID of the Access Key.
func (o GetConfigurationStoreSecondaryReadKeyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStoreSecondaryReadKey) string { return v.Id }).(pulumi.StringOutput)
}

// The Secret of the Access Key.
func (o GetConfigurationStoreSecondaryReadKeyOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStoreSecondaryReadKey) string { return v.Secret }).(pulumi.StringOutput)
}

type GetConfigurationStoreSecondaryReadKeyArrayOutput struct{ *pulumi.OutputState }

func (GetConfigurationStoreSecondaryReadKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationStoreSecondaryReadKey)(nil)).Elem()
}

func (o GetConfigurationStoreSecondaryReadKeyArrayOutput) ToGetConfigurationStoreSecondaryReadKeyArrayOutput() GetConfigurationStoreSecondaryReadKeyArrayOutput {
	return o
}

func (o GetConfigurationStoreSecondaryReadKeyArrayOutput) ToGetConfigurationStoreSecondaryReadKeyArrayOutputWithContext(ctx context.Context) GetConfigurationStoreSecondaryReadKeyArrayOutput {
	return o
}

func (o GetConfigurationStoreSecondaryReadKeyArrayOutput) Index(i pulumi.IntInput) GetConfigurationStoreSecondaryReadKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigurationStoreSecondaryReadKey {
		return vs[0].([]GetConfigurationStoreSecondaryReadKey)[vs[1].(int)]
	}).(GetConfigurationStoreSecondaryReadKeyOutput)
}

type GetConfigurationStoreSecondaryWriteKey struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString string `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id string `pulumi:"id"`
	// The Secret of the Access Key.
	Secret string `pulumi:"secret"`
}

// GetConfigurationStoreSecondaryWriteKeyInput is an input type that accepts GetConfigurationStoreSecondaryWriteKeyArgs and GetConfigurationStoreSecondaryWriteKeyOutput values.
// You can construct a concrete instance of `GetConfigurationStoreSecondaryWriteKeyInput` via:
//
//          GetConfigurationStoreSecondaryWriteKeyArgs{...}
type GetConfigurationStoreSecondaryWriteKeyInput interface {
	pulumi.Input

	ToGetConfigurationStoreSecondaryWriteKeyOutput() GetConfigurationStoreSecondaryWriteKeyOutput
	ToGetConfigurationStoreSecondaryWriteKeyOutputWithContext(context.Context) GetConfigurationStoreSecondaryWriteKeyOutput
}

type GetConfigurationStoreSecondaryWriteKeyArgs struct {
	// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The ID of the Access Key.
	Id pulumi.StringInput `pulumi:"id"`
	// The Secret of the Access Key.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetConfigurationStoreSecondaryWriteKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationStoreSecondaryWriteKey)(nil)).Elem()
}

func (i GetConfigurationStoreSecondaryWriteKeyArgs) ToGetConfigurationStoreSecondaryWriteKeyOutput() GetConfigurationStoreSecondaryWriteKeyOutput {
	return i.ToGetConfigurationStoreSecondaryWriteKeyOutputWithContext(context.Background())
}

func (i GetConfigurationStoreSecondaryWriteKeyArgs) ToGetConfigurationStoreSecondaryWriteKeyOutputWithContext(ctx context.Context) GetConfigurationStoreSecondaryWriteKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationStoreSecondaryWriteKeyOutput)
}

// GetConfigurationStoreSecondaryWriteKeyArrayInput is an input type that accepts GetConfigurationStoreSecondaryWriteKeyArray and GetConfigurationStoreSecondaryWriteKeyArrayOutput values.
// You can construct a concrete instance of `GetConfigurationStoreSecondaryWriteKeyArrayInput` via:
//
//          GetConfigurationStoreSecondaryWriteKeyArray{ GetConfigurationStoreSecondaryWriteKeyArgs{...} }
type GetConfigurationStoreSecondaryWriteKeyArrayInput interface {
	pulumi.Input

	ToGetConfigurationStoreSecondaryWriteKeyArrayOutput() GetConfigurationStoreSecondaryWriteKeyArrayOutput
	ToGetConfigurationStoreSecondaryWriteKeyArrayOutputWithContext(context.Context) GetConfigurationStoreSecondaryWriteKeyArrayOutput
}

type GetConfigurationStoreSecondaryWriteKeyArray []GetConfigurationStoreSecondaryWriteKeyInput

func (GetConfigurationStoreSecondaryWriteKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationStoreSecondaryWriteKey)(nil)).Elem()
}

func (i GetConfigurationStoreSecondaryWriteKeyArray) ToGetConfigurationStoreSecondaryWriteKeyArrayOutput() GetConfigurationStoreSecondaryWriteKeyArrayOutput {
	return i.ToGetConfigurationStoreSecondaryWriteKeyArrayOutputWithContext(context.Background())
}

func (i GetConfigurationStoreSecondaryWriteKeyArray) ToGetConfigurationStoreSecondaryWriteKeyArrayOutputWithContext(ctx context.Context) GetConfigurationStoreSecondaryWriteKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationStoreSecondaryWriteKeyArrayOutput)
}

type GetConfigurationStoreSecondaryWriteKeyOutput struct{ *pulumi.OutputState }

func (GetConfigurationStoreSecondaryWriteKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationStoreSecondaryWriteKey)(nil)).Elem()
}

func (o GetConfigurationStoreSecondaryWriteKeyOutput) ToGetConfigurationStoreSecondaryWriteKeyOutput() GetConfigurationStoreSecondaryWriteKeyOutput {
	return o
}

func (o GetConfigurationStoreSecondaryWriteKeyOutput) ToGetConfigurationStoreSecondaryWriteKeyOutputWithContext(ctx context.Context) GetConfigurationStoreSecondaryWriteKeyOutput {
	return o
}

// The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
func (o GetConfigurationStoreSecondaryWriteKeyOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStoreSecondaryWriteKey) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The ID of the Access Key.
func (o GetConfigurationStoreSecondaryWriteKeyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStoreSecondaryWriteKey) string { return v.Id }).(pulumi.StringOutput)
}

// The Secret of the Access Key.
func (o GetConfigurationStoreSecondaryWriteKeyOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationStoreSecondaryWriteKey) string { return v.Secret }).(pulumi.StringOutput)
}

type GetConfigurationStoreSecondaryWriteKeyArrayOutput struct{ *pulumi.OutputState }

func (GetConfigurationStoreSecondaryWriteKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationStoreSecondaryWriteKey)(nil)).Elem()
}

func (o GetConfigurationStoreSecondaryWriteKeyArrayOutput) ToGetConfigurationStoreSecondaryWriteKeyArrayOutput() GetConfigurationStoreSecondaryWriteKeyArrayOutput {
	return o
}

func (o GetConfigurationStoreSecondaryWriteKeyArrayOutput) ToGetConfigurationStoreSecondaryWriteKeyArrayOutputWithContext(ctx context.Context) GetConfigurationStoreSecondaryWriteKeyArrayOutput {
	return o
}

func (o GetConfigurationStoreSecondaryWriteKeyArrayOutput) Index(i pulumi.IntInput) GetConfigurationStoreSecondaryWriteKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigurationStoreSecondaryWriteKey {
		return vs[0].([]GetConfigurationStoreSecondaryWriteKey)[vs[1].(int)]
	}).(GetConfigurationStoreSecondaryWriteKeyOutput)
}

func init() {
	pulumi.RegisterOutputType(ConfigurationStoreIdentityOutput{})
	pulumi.RegisterOutputType(ConfigurationStoreIdentityPtrOutput{})
	pulumi.RegisterOutputType(ConfigurationStorePrimaryReadKeyOutput{})
	pulumi.RegisterOutputType(ConfigurationStorePrimaryReadKeyArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationStorePrimaryWriteKeyOutput{})
	pulumi.RegisterOutputType(ConfigurationStorePrimaryWriteKeyArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationStoreSecondaryReadKeyOutput{})
	pulumi.RegisterOutputType(ConfigurationStoreSecondaryReadKeyArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationStoreSecondaryWriteKeyOutput{})
	pulumi.RegisterOutputType(ConfigurationStoreSecondaryWriteKeyArrayOutput{})
	pulumi.RegisterOutputType(GetConfigurationStorePrimaryReadKeyOutput{})
	pulumi.RegisterOutputType(GetConfigurationStorePrimaryReadKeyArrayOutput{})
	pulumi.RegisterOutputType(GetConfigurationStorePrimaryWriteKeyOutput{})
	pulumi.RegisterOutputType(GetConfigurationStorePrimaryWriteKeyArrayOutput{})
	pulumi.RegisterOutputType(GetConfigurationStoreSecondaryReadKeyOutput{})
	pulumi.RegisterOutputType(GetConfigurationStoreSecondaryReadKeyArrayOutput{})
	pulumi.RegisterOutputType(GetConfigurationStoreSecondaryWriteKeyOutput{})
	pulumi.RegisterOutputType(GetConfigurationStoreSecondaryWriteKeyArrayOutput{})
}
