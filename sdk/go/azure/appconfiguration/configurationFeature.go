// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appconfiguration

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an Azure App Configuration Feature.
//
// > **Note:** App Configuration Features are provisioned using a Data Plane API which requires the role `App Configuration Data Owner` on either the App Configuration or a parent scope (such as the Resource Group/Subscription). [More information can be found in the Azure Documentation for App Configuration](https://docs.microsoft.com/azure/azure-app-configuration/concept-enable-rbac#azure-built-in-roles-for-azure-app-configuration). This is similar to providing App Configuration Keys.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appconfiguration"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/authorization"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			appconf, err := appconfiguration.NewConfigurationStore(ctx, "appconf", &appconfiguration.ConfigurationStoreArgs{
//				ResourceGroupName: example.Name,
//				Location:          example.Location,
//			})
//			if err != nil {
//				return err
//			}
//			current, err := core.GetClientConfig(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			_, err = authorization.NewAssignment(ctx, "appconfDataowner", &authorization.AssignmentArgs{
//				Scope:              appconf.ID(),
//				RoleDefinitionName: pulumi.String("App Configuration Data Owner"),
//				PrincipalId:        *pulumi.String(current.ObjectId),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = appconfiguration.NewConfigurationFeature(ctx, "test", &appconfiguration.ConfigurationFeatureArgs{
//				ConfigurationStoreId: appconf.ID(),
//				Description:          pulumi.String("test description"),
//				Label:                pulumi.String("test-ackeylabel"),
//				Enabled:              pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// App Configuration Features can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:appconfiguration/configurationFeature:ConfigurationFeature test https://appconfname1.azconfig.io/kv/.appconfig.featureflag%2FkeyName?label=labelName
//
// ```
//
//	If you wish to import with an empty label then simply leave the label's name blank
//
// ```sh
//
//	$ pulumi import azure:appconfiguration/configurationFeature:ConfigurationFeature test https://appconfname1.azconfig.io/kv/.appconfig.featureflag%2FkeyName?label=
//
// ```
type ConfigurationFeature struct {
	pulumi.CustomResourceState

	// Specifies the id of the App Configuration. Changing this forces a new resource to be created.
	ConfigurationStoreId pulumi.StringOutput `pulumi:"configurationStoreId"`
	// The description of the App Configuration Feature.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The status of the App Configuration Feature. By default, this is set to false.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	Etag    pulumi.StringOutput  `pulumi:"etag"`
	// The key of the App Configuration Feature. The value for `name` will be used if this is unspecified. Changing this forces a new resource to be created.
	Key pulumi.StringOutput `pulumi:"key"`
	// The label of the App Configuration Feature. Changing this forces a new resource to be created.
	Label pulumi.StringPtrOutput `pulumi:"label"`
	// Should this App Configuration Feature be Locked to prevent changes?
	Locked pulumi.BoolPtrOutput `pulumi:"locked"`
	// The name of the App Configuration Feature. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// A number representing the value of the percentage required to enable this feature.
	PercentageFilterValue pulumi.Float64PtrOutput `pulumi:"percentageFilterValue"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A `targetingFilter` block as defined below.
	TargetingFilters ConfigurationFeatureTargetingFilterArrayOutput `pulumi:"targetingFilters"`
	// A `timewindowFilter` block as defined below.
	TimewindowFilters ConfigurationFeatureTimewindowFilterArrayOutput `pulumi:"timewindowFilters"`
}

// NewConfigurationFeature registers a new resource with the given unique name, arguments, and options.
func NewConfigurationFeature(ctx *pulumi.Context,
	name string, args *ConfigurationFeatureArgs, opts ...pulumi.ResourceOption) (*ConfigurationFeature, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigurationStoreId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigurationStoreId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ConfigurationFeature
	err := ctx.RegisterResource("azure:appconfiguration/configurationFeature:ConfigurationFeature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfigurationFeature gets an existing ConfigurationFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfigurationFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfigurationFeatureState, opts ...pulumi.ResourceOption) (*ConfigurationFeature, error) {
	var resource ConfigurationFeature
	err := ctx.ReadResource("azure:appconfiguration/configurationFeature:ConfigurationFeature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConfigurationFeature resources.
type configurationFeatureState struct {
	// Specifies the id of the App Configuration. Changing this forces a new resource to be created.
	ConfigurationStoreId *string `pulumi:"configurationStoreId"`
	// The description of the App Configuration Feature.
	Description *string `pulumi:"description"`
	// The status of the App Configuration Feature. By default, this is set to false.
	Enabled *bool   `pulumi:"enabled"`
	Etag    *string `pulumi:"etag"`
	// The key of the App Configuration Feature. The value for `name` will be used if this is unspecified. Changing this forces a new resource to be created.
	Key *string `pulumi:"key"`
	// The label of the App Configuration Feature. Changing this forces a new resource to be created.
	Label *string `pulumi:"label"`
	// Should this App Configuration Feature be Locked to prevent changes?
	Locked *bool `pulumi:"locked"`
	// The name of the App Configuration Feature. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A number representing the value of the percentage required to enable this feature.
	PercentageFilterValue *float64 `pulumi:"percentageFilterValue"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// A `targetingFilter` block as defined below.
	TargetingFilters []ConfigurationFeatureTargetingFilter `pulumi:"targetingFilters"`
	// A `timewindowFilter` block as defined below.
	TimewindowFilters []ConfigurationFeatureTimewindowFilter `pulumi:"timewindowFilters"`
}

type ConfigurationFeatureState struct {
	// Specifies the id of the App Configuration. Changing this forces a new resource to be created.
	ConfigurationStoreId pulumi.StringPtrInput
	// The description of the App Configuration Feature.
	Description pulumi.StringPtrInput
	// The status of the App Configuration Feature. By default, this is set to false.
	Enabled pulumi.BoolPtrInput
	Etag    pulumi.StringPtrInput
	// The key of the App Configuration Feature. The value for `name` will be used if this is unspecified. Changing this forces a new resource to be created.
	Key pulumi.StringPtrInput
	// The label of the App Configuration Feature. Changing this forces a new resource to be created.
	Label pulumi.StringPtrInput
	// Should this App Configuration Feature be Locked to prevent changes?
	Locked pulumi.BoolPtrInput
	// The name of the App Configuration Feature. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A number representing the value of the percentage required to enable this feature.
	PercentageFilterValue pulumi.Float64PtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// A `targetingFilter` block as defined below.
	TargetingFilters ConfigurationFeatureTargetingFilterArrayInput
	// A `timewindowFilter` block as defined below.
	TimewindowFilters ConfigurationFeatureTimewindowFilterArrayInput
}

func (ConfigurationFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationFeatureState)(nil)).Elem()
}

type configurationFeatureArgs struct {
	// Specifies the id of the App Configuration. Changing this forces a new resource to be created.
	ConfigurationStoreId string `pulumi:"configurationStoreId"`
	// The description of the App Configuration Feature.
	Description *string `pulumi:"description"`
	// The status of the App Configuration Feature. By default, this is set to false.
	Enabled *bool   `pulumi:"enabled"`
	Etag    *string `pulumi:"etag"`
	// The key of the App Configuration Feature. The value for `name` will be used if this is unspecified. Changing this forces a new resource to be created.
	Key *string `pulumi:"key"`
	// The label of the App Configuration Feature. Changing this forces a new resource to be created.
	Label *string `pulumi:"label"`
	// Should this App Configuration Feature be Locked to prevent changes?
	Locked *bool `pulumi:"locked"`
	// The name of the App Configuration Feature. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A number representing the value of the percentage required to enable this feature.
	PercentageFilterValue *float64 `pulumi:"percentageFilterValue"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// A `targetingFilter` block as defined below.
	TargetingFilters []ConfigurationFeatureTargetingFilter `pulumi:"targetingFilters"`
	// A `timewindowFilter` block as defined below.
	TimewindowFilters []ConfigurationFeatureTimewindowFilter `pulumi:"timewindowFilters"`
}

// The set of arguments for constructing a ConfigurationFeature resource.
type ConfigurationFeatureArgs struct {
	// Specifies the id of the App Configuration. Changing this forces a new resource to be created.
	ConfigurationStoreId pulumi.StringInput
	// The description of the App Configuration Feature.
	Description pulumi.StringPtrInput
	// The status of the App Configuration Feature. By default, this is set to false.
	Enabled pulumi.BoolPtrInput
	Etag    pulumi.StringPtrInput
	// The key of the App Configuration Feature. The value for `name` will be used if this is unspecified. Changing this forces a new resource to be created.
	Key pulumi.StringPtrInput
	// The label of the App Configuration Feature. Changing this forces a new resource to be created.
	Label pulumi.StringPtrInput
	// Should this App Configuration Feature be Locked to prevent changes?
	Locked pulumi.BoolPtrInput
	// The name of the App Configuration Feature. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A number representing the value of the percentage required to enable this feature.
	PercentageFilterValue pulumi.Float64PtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// A `targetingFilter` block as defined below.
	TargetingFilters ConfigurationFeatureTargetingFilterArrayInput
	// A `timewindowFilter` block as defined below.
	TimewindowFilters ConfigurationFeatureTimewindowFilterArrayInput
}

func (ConfigurationFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationFeatureArgs)(nil)).Elem()
}

type ConfigurationFeatureInput interface {
	pulumi.Input

	ToConfigurationFeatureOutput() ConfigurationFeatureOutput
	ToConfigurationFeatureOutputWithContext(ctx context.Context) ConfigurationFeatureOutput
}

func (*ConfigurationFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationFeature)(nil)).Elem()
}

func (i *ConfigurationFeature) ToConfigurationFeatureOutput() ConfigurationFeatureOutput {
	return i.ToConfigurationFeatureOutputWithContext(context.Background())
}

func (i *ConfigurationFeature) ToConfigurationFeatureOutputWithContext(ctx context.Context) ConfigurationFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationFeatureOutput)
}

// ConfigurationFeatureArrayInput is an input type that accepts ConfigurationFeatureArray and ConfigurationFeatureArrayOutput values.
// You can construct a concrete instance of `ConfigurationFeatureArrayInput` via:
//
//	ConfigurationFeatureArray{ ConfigurationFeatureArgs{...} }
type ConfigurationFeatureArrayInput interface {
	pulumi.Input

	ToConfigurationFeatureArrayOutput() ConfigurationFeatureArrayOutput
	ToConfigurationFeatureArrayOutputWithContext(context.Context) ConfigurationFeatureArrayOutput
}

type ConfigurationFeatureArray []ConfigurationFeatureInput

func (ConfigurationFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConfigurationFeature)(nil)).Elem()
}

func (i ConfigurationFeatureArray) ToConfigurationFeatureArrayOutput() ConfigurationFeatureArrayOutput {
	return i.ToConfigurationFeatureArrayOutputWithContext(context.Background())
}

func (i ConfigurationFeatureArray) ToConfigurationFeatureArrayOutputWithContext(ctx context.Context) ConfigurationFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationFeatureArrayOutput)
}

// ConfigurationFeatureMapInput is an input type that accepts ConfigurationFeatureMap and ConfigurationFeatureMapOutput values.
// You can construct a concrete instance of `ConfigurationFeatureMapInput` via:
//
//	ConfigurationFeatureMap{ "key": ConfigurationFeatureArgs{...} }
type ConfigurationFeatureMapInput interface {
	pulumi.Input

	ToConfigurationFeatureMapOutput() ConfigurationFeatureMapOutput
	ToConfigurationFeatureMapOutputWithContext(context.Context) ConfigurationFeatureMapOutput
}

type ConfigurationFeatureMap map[string]ConfigurationFeatureInput

func (ConfigurationFeatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConfigurationFeature)(nil)).Elem()
}

func (i ConfigurationFeatureMap) ToConfigurationFeatureMapOutput() ConfigurationFeatureMapOutput {
	return i.ToConfigurationFeatureMapOutputWithContext(context.Background())
}

func (i ConfigurationFeatureMap) ToConfigurationFeatureMapOutputWithContext(ctx context.Context) ConfigurationFeatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationFeatureMapOutput)
}

type ConfigurationFeatureOutput struct{ *pulumi.OutputState }

func (ConfigurationFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationFeature)(nil)).Elem()
}

func (o ConfigurationFeatureOutput) ToConfigurationFeatureOutput() ConfigurationFeatureOutput {
	return o
}

func (o ConfigurationFeatureOutput) ToConfigurationFeatureOutputWithContext(ctx context.Context) ConfigurationFeatureOutput {
	return o
}

// Specifies the id of the App Configuration. Changing this forces a new resource to be created.
func (o ConfigurationFeatureOutput) ConfigurationStoreId() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigurationFeature) pulumi.StringOutput { return v.ConfigurationStoreId }).(pulumi.StringOutput)
}

// The description of the App Configuration Feature.
func (o ConfigurationFeatureOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationFeature) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The status of the App Configuration Feature. By default, this is set to false.
func (o ConfigurationFeatureOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigurationFeature) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o ConfigurationFeatureOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigurationFeature) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The key of the App Configuration Feature. The value for `name` will be used if this is unspecified. Changing this forces a new resource to be created.
func (o ConfigurationFeatureOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigurationFeature) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

// The label of the App Configuration Feature. Changing this forces a new resource to be created.
func (o ConfigurationFeatureOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationFeature) pulumi.StringPtrOutput { return v.Label }).(pulumi.StringPtrOutput)
}

// Should this App Configuration Feature be Locked to prevent changes?
func (o ConfigurationFeatureOutput) Locked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigurationFeature) pulumi.BoolPtrOutput { return v.Locked }).(pulumi.BoolPtrOutput)
}

// The name of the App Configuration Feature. Changing this forces a new resource to be created.
func (o ConfigurationFeatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigurationFeature) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A number representing the value of the percentage required to enable this feature.
func (o ConfigurationFeatureOutput) PercentageFilterValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ConfigurationFeature) pulumi.Float64PtrOutput { return v.PercentageFilterValue }).(pulumi.Float64PtrOutput)
}

// A mapping of tags to assign to the resource.
func (o ConfigurationFeatureOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConfigurationFeature) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A `targetingFilter` block as defined below.
func (o ConfigurationFeatureOutput) TargetingFilters() ConfigurationFeatureTargetingFilterArrayOutput {
	return o.ApplyT(func(v *ConfigurationFeature) ConfigurationFeatureTargetingFilterArrayOutput {
		return v.TargetingFilters
	}).(ConfigurationFeatureTargetingFilterArrayOutput)
}

// A `timewindowFilter` block as defined below.
func (o ConfigurationFeatureOutput) TimewindowFilters() ConfigurationFeatureTimewindowFilterArrayOutput {
	return o.ApplyT(func(v *ConfigurationFeature) ConfigurationFeatureTimewindowFilterArrayOutput {
		return v.TimewindowFilters
	}).(ConfigurationFeatureTimewindowFilterArrayOutput)
}

type ConfigurationFeatureArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConfigurationFeature)(nil)).Elem()
}

func (o ConfigurationFeatureArrayOutput) ToConfigurationFeatureArrayOutput() ConfigurationFeatureArrayOutput {
	return o
}

func (o ConfigurationFeatureArrayOutput) ToConfigurationFeatureArrayOutputWithContext(ctx context.Context) ConfigurationFeatureArrayOutput {
	return o
}

func (o ConfigurationFeatureArrayOutput) Index(i pulumi.IntInput) ConfigurationFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ConfigurationFeature {
		return vs[0].([]*ConfigurationFeature)[vs[1].(int)]
	}).(ConfigurationFeatureOutput)
}

type ConfigurationFeatureMapOutput struct{ *pulumi.OutputState }

func (ConfigurationFeatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConfigurationFeature)(nil)).Elem()
}

func (o ConfigurationFeatureMapOutput) ToConfigurationFeatureMapOutput() ConfigurationFeatureMapOutput {
	return o
}

func (o ConfigurationFeatureMapOutput) ToConfigurationFeatureMapOutputWithContext(ctx context.Context) ConfigurationFeatureMapOutput {
	return o
}

func (o ConfigurationFeatureMapOutput) MapIndex(k pulumi.StringInput) ConfigurationFeatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ConfigurationFeature {
		return vs[0].(map[string]*ConfigurationFeature)[vs[1].(string)]
	}).(ConfigurationFeatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationFeatureInput)(nil)).Elem(), &ConfigurationFeature{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationFeatureArrayInput)(nil)).Elem(), ConfigurationFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationFeatureMapInput)(nil)).Elem(), ConfigurationFeatureMap{})
	pulumi.RegisterOutputType(ConfigurationFeatureOutput{})
	pulumi.RegisterOutputType(ConfigurationFeatureArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationFeatureMapOutput{})
}
