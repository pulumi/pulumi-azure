// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appconfiguration

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an association between an Application Gateway for Containers and a Subnet.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appconfiguration"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("westeurope"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleLicationLoadBalancer, err := appconfiguration.NewLicationLoadBalancer(ctx, "exampleLicationLoadBalancer", &appconfiguration.LicationLoadBalancerArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//			})
//			if err != nil {
//				return err
//			}
//			exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "exampleVirtualNetwork", &network.VirtualNetworkArgs{
//				AddressSpaces: pulumi.StringArray{
//					pulumi.String("10.0.0.0/16"),
//				},
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//			})
//			if err != nil {
//				return err
//			}
//			exampleSubnet, err := network.NewSubnet(ctx, "exampleSubnet", &network.SubnetArgs{
//				ResourceGroupName:  exampleResourceGroup.Name,
//				VirtualNetworkName: exampleVirtualNetwork.Name,
//				AddressPrefixes: pulumi.StringArray{
//					pulumi.String("10.0.1.0/24"),
//				},
//				Delegations: network.SubnetDelegationArray{
//					&network.SubnetDelegationArgs{
//						Name: pulumi.String("delegation"),
//						ServiceDelegation: &network.SubnetDelegationServiceDelegationArgs{
//							Name: pulumi.String("Microsoft.ServiceNetworking/trafficControllers"),
//							Actions: pulumi.StringArray{
//								pulumi.String("Microsoft.Network/virtualNetworks/subnets/join/action"),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = appconfiguration.NewLicationLoadBalancerSubnetAssociation(ctx, "exampleLicationLoadBalancerSubnetAssociation", &appconfiguration.LicationLoadBalancerSubnetAssociationArgs{
//				ApplicationLoadBalancerId: exampleLicationLoadBalancer.ID(),
//				SubnetId:                  exampleSubnet.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Application Gateway for Containers Associations can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:appconfiguration/licationLoadBalancerSubnetAssociation:LicationLoadBalancerSubnetAssociation example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.ServiceNetworking/trafficControllers/alb1/associations/association1
//
// ```
type LicationLoadBalancerSubnetAssociation struct {
	pulumi.CustomResourceState

	// The ID of the Application Gateway for Containers. Changing this forces a new resource to be created.
	ApplicationLoadBalancerId pulumi.StringOutput `pulumi:"applicationLoadBalancerId"`
	// The name which should be used for this Application Gateway for Containers Association. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the subnet which the Application Gateway for Containers associated to. Changing this forces a new resource to be created.
	//
	// **Note:** The subnet to be used must have a delegation for  `Microsoft.ServiceNetworking/trafficControllers` as shown in the example above.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// A mapping of tags which should be assigned to the Application Gateway for Containers Association.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewLicationLoadBalancerSubnetAssociation registers a new resource with the given unique name, arguments, and options.
func NewLicationLoadBalancerSubnetAssociation(ctx *pulumi.Context,
	name string, args *LicationLoadBalancerSubnetAssociationArgs, opts ...pulumi.ResourceOption) (*LicationLoadBalancerSubnetAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationLoadBalancerId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationLoadBalancerId'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LicationLoadBalancerSubnetAssociation
	err := ctx.RegisterResource("azure:appconfiguration/licationLoadBalancerSubnetAssociation:LicationLoadBalancerSubnetAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLicationLoadBalancerSubnetAssociation gets an existing LicationLoadBalancerSubnetAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLicationLoadBalancerSubnetAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LicationLoadBalancerSubnetAssociationState, opts ...pulumi.ResourceOption) (*LicationLoadBalancerSubnetAssociation, error) {
	var resource LicationLoadBalancerSubnetAssociation
	err := ctx.ReadResource("azure:appconfiguration/licationLoadBalancerSubnetAssociation:LicationLoadBalancerSubnetAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LicationLoadBalancerSubnetAssociation resources.
type licationLoadBalancerSubnetAssociationState struct {
	// The ID of the Application Gateway for Containers. Changing this forces a new resource to be created.
	ApplicationLoadBalancerId *string `pulumi:"applicationLoadBalancerId"`
	// The name which should be used for this Application Gateway for Containers Association. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The ID of the subnet which the Application Gateway for Containers associated to. Changing this forces a new resource to be created.
	//
	// **Note:** The subnet to be used must have a delegation for  `Microsoft.ServiceNetworking/trafficControllers` as shown in the example above.
	SubnetId *string `pulumi:"subnetId"`
	// A mapping of tags which should be assigned to the Application Gateway for Containers Association.
	Tags map[string]string `pulumi:"tags"`
}

type LicationLoadBalancerSubnetAssociationState struct {
	// The ID of the Application Gateway for Containers. Changing this forces a new resource to be created.
	ApplicationLoadBalancerId pulumi.StringPtrInput
	// The name which should be used for this Application Gateway for Containers Association. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The ID of the subnet which the Application Gateway for Containers associated to. Changing this forces a new resource to be created.
	//
	// **Note:** The subnet to be used must have a delegation for  `Microsoft.ServiceNetworking/trafficControllers` as shown in the example above.
	SubnetId pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Application Gateway for Containers Association.
	Tags pulumi.StringMapInput
}

func (LicationLoadBalancerSubnetAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*licationLoadBalancerSubnetAssociationState)(nil)).Elem()
}

type licationLoadBalancerSubnetAssociationArgs struct {
	// The ID of the Application Gateway for Containers. Changing this forces a new resource to be created.
	ApplicationLoadBalancerId string `pulumi:"applicationLoadBalancerId"`
	// The name which should be used for this Application Gateway for Containers Association. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The ID of the subnet which the Application Gateway for Containers associated to. Changing this forces a new resource to be created.
	//
	// **Note:** The subnet to be used must have a delegation for  `Microsoft.ServiceNetworking/trafficControllers` as shown in the example above.
	SubnetId string `pulumi:"subnetId"`
	// A mapping of tags which should be assigned to the Application Gateway for Containers Association.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a LicationLoadBalancerSubnetAssociation resource.
type LicationLoadBalancerSubnetAssociationArgs struct {
	// The ID of the Application Gateway for Containers. Changing this forces a new resource to be created.
	ApplicationLoadBalancerId pulumi.StringInput
	// The name which should be used for this Application Gateway for Containers Association. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The ID of the subnet which the Application Gateway for Containers associated to. Changing this forces a new resource to be created.
	//
	// **Note:** The subnet to be used must have a delegation for  `Microsoft.ServiceNetworking/trafficControllers` as shown in the example above.
	SubnetId pulumi.StringInput
	// A mapping of tags which should be assigned to the Application Gateway for Containers Association.
	Tags pulumi.StringMapInput
}

func (LicationLoadBalancerSubnetAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*licationLoadBalancerSubnetAssociationArgs)(nil)).Elem()
}

type LicationLoadBalancerSubnetAssociationInput interface {
	pulumi.Input

	ToLicationLoadBalancerSubnetAssociationOutput() LicationLoadBalancerSubnetAssociationOutput
	ToLicationLoadBalancerSubnetAssociationOutputWithContext(ctx context.Context) LicationLoadBalancerSubnetAssociationOutput
}

func (*LicationLoadBalancerSubnetAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**LicationLoadBalancerSubnetAssociation)(nil)).Elem()
}

func (i *LicationLoadBalancerSubnetAssociation) ToLicationLoadBalancerSubnetAssociationOutput() LicationLoadBalancerSubnetAssociationOutput {
	return i.ToLicationLoadBalancerSubnetAssociationOutputWithContext(context.Background())
}

func (i *LicationLoadBalancerSubnetAssociation) ToLicationLoadBalancerSubnetAssociationOutputWithContext(ctx context.Context) LicationLoadBalancerSubnetAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicationLoadBalancerSubnetAssociationOutput)
}

// LicationLoadBalancerSubnetAssociationArrayInput is an input type that accepts LicationLoadBalancerSubnetAssociationArray and LicationLoadBalancerSubnetAssociationArrayOutput values.
// You can construct a concrete instance of `LicationLoadBalancerSubnetAssociationArrayInput` via:
//
//	LicationLoadBalancerSubnetAssociationArray{ LicationLoadBalancerSubnetAssociationArgs{...} }
type LicationLoadBalancerSubnetAssociationArrayInput interface {
	pulumi.Input

	ToLicationLoadBalancerSubnetAssociationArrayOutput() LicationLoadBalancerSubnetAssociationArrayOutput
	ToLicationLoadBalancerSubnetAssociationArrayOutputWithContext(context.Context) LicationLoadBalancerSubnetAssociationArrayOutput
}

type LicationLoadBalancerSubnetAssociationArray []LicationLoadBalancerSubnetAssociationInput

func (LicationLoadBalancerSubnetAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LicationLoadBalancerSubnetAssociation)(nil)).Elem()
}

func (i LicationLoadBalancerSubnetAssociationArray) ToLicationLoadBalancerSubnetAssociationArrayOutput() LicationLoadBalancerSubnetAssociationArrayOutput {
	return i.ToLicationLoadBalancerSubnetAssociationArrayOutputWithContext(context.Background())
}

func (i LicationLoadBalancerSubnetAssociationArray) ToLicationLoadBalancerSubnetAssociationArrayOutputWithContext(ctx context.Context) LicationLoadBalancerSubnetAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicationLoadBalancerSubnetAssociationArrayOutput)
}

// LicationLoadBalancerSubnetAssociationMapInput is an input type that accepts LicationLoadBalancerSubnetAssociationMap and LicationLoadBalancerSubnetAssociationMapOutput values.
// You can construct a concrete instance of `LicationLoadBalancerSubnetAssociationMapInput` via:
//
//	LicationLoadBalancerSubnetAssociationMap{ "key": LicationLoadBalancerSubnetAssociationArgs{...} }
type LicationLoadBalancerSubnetAssociationMapInput interface {
	pulumi.Input

	ToLicationLoadBalancerSubnetAssociationMapOutput() LicationLoadBalancerSubnetAssociationMapOutput
	ToLicationLoadBalancerSubnetAssociationMapOutputWithContext(context.Context) LicationLoadBalancerSubnetAssociationMapOutput
}

type LicationLoadBalancerSubnetAssociationMap map[string]LicationLoadBalancerSubnetAssociationInput

func (LicationLoadBalancerSubnetAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LicationLoadBalancerSubnetAssociation)(nil)).Elem()
}

func (i LicationLoadBalancerSubnetAssociationMap) ToLicationLoadBalancerSubnetAssociationMapOutput() LicationLoadBalancerSubnetAssociationMapOutput {
	return i.ToLicationLoadBalancerSubnetAssociationMapOutputWithContext(context.Background())
}

func (i LicationLoadBalancerSubnetAssociationMap) ToLicationLoadBalancerSubnetAssociationMapOutputWithContext(ctx context.Context) LicationLoadBalancerSubnetAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicationLoadBalancerSubnetAssociationMapOutput)
}

type LicationLoadBalancerSubnetAssociationOutput struct{ *pulumi.OutputState }

func (LicationLoadBalancerSubnetAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicationLoadBalancerSubnetAssociation)(nil)).Elem()
}

func (o LicationLoadBalancerSubnetAssociationOutput) ToLicationLoadBalancerSubnetAssociationOutput() LicationLoadBalancerSubnetAssociationOutput {
	return o
}

func (o LicationLoadBalancerSubnetAssociationOutput) ToLicationLoadBalancerSubnetAssociationOutputWithContext(ctx context.Context) LicationLoadBalancerSubnetAssociationOutput {
	return o
}

// The ID of the Application Gateway for Containers. Changing this forces a new resource to be created.
func (o LicationLoadBalancerSubnetAssociationOutput) ApplicationLoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v *LicationLoadBalancerSubnetAssociation) pulumi.StringOutput { return v.ApplicationLoadBalancerId }).(pulumi.StringOutput)
}

// The name which should be used for this Application Gateway for Containers Association. Changing this forces a new resource to be created.
func (o LicationLoadBalancerSubnetAssociationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LicationLoadBalancerSubnetAssociation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the subnet which the Application Gateway for Containers associated to. Changing this forces a new resource to be created.
//
// **Note:** The subnet to be used must have a delegation for  `Microsoft.ServiceNetworking/trafficControllers` as shown in the example above.
func (o LicationLoadBalancerSubnetAssociationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *LicationLoadBalancerSubnetAssociation) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// A mapping of tags which should be assigned to the Application Gateway for Containers Association.
func (o LicationLoadBalancerSubnetAssociationOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LicationLoadBalancerSubnetAssociation) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type LicationLoadBalancerSubnetAssociationArrayOutput struct{ *pulumi.OutputState }

func (LicationLoadBalancerSubnetAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LicationLoadBalancerSubnetAssociation)(nil)).Elem()
}

func (o LicationLoadBalancerSubnetAssociationArrayOutput) ToLicationLoadBalancerSubnetAssociationArrayOutput() LicationLoadBalancerSubnetAssociationArrayOutput {
	return o
}

func (o LicationLoadBalancerSubnetAssociationArrayOutput) ToLicationLoadBalancerSubnetAssociationArrayOutputWithContext(ctx context.Context) LicationLoadBalancerSubnetAssociationArrayOutput {
	return o
}

func (o LicationLoadBalancerSubnetAssociationArrayOutput) Index(i pulumi.IntInput) LicationLoadBalancerSubnetAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LicationLoadBalancerSubnetAssociation {
		return vs[0].([]*LicationLoadBalancerSubnetAssociation)[vs[1].(int)]
	}).(LicationLoadBalancerSubnetAssociationOutput)
}

type LicationLoadBalancerSubnetAssociationMapOutput struct{ *pulumi.OutputState }

func (LicationLoadBalancerSubnetAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LicationLoadBalancerSubnetAssociation)(nil)).Elem()
}

func (o LicationLoadBalancerSubnetAssociationMapOutput) ToLicationLoadBalancerSubnetAssociationMapOutput() LicationLoadBalancerSubnetAssociationMapOutput {
	return o
}

func (o LicationLoadBalancerSubnetAssociationMapOutput) ToLicationLoadBalancerSubnetAssociationMapOutputWithContext(ctx context.Context) LicationLoadBalancerSubnetAssociationMapOutput {
	return o
}

func (o LicationLoadBalancerSubnetAssociationMapOutput) MapIndex(k pulumi.StringInput) LicationLoadBalancerSubnetAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LicationLoadBalancerSubnetAssociation {
		return vs[0].(map[string]*LicationLoadBalancerSubnetAssociation)[vs[1].(string)]
	}).(LicationLoadBalancerSubnetAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LicationLoadBalancerSubnetAssociationInput)(nil)).Elem(), &LicationLoadBalancerSubnetAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicationLoadBalancerSubnetAssociationArrayInput)(nil)).Elem(), LicationLoadBalancerSubnetAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicationLoadBalancerSubnetAssociationMapInput)(nil)).Elem(), LicationLoadBalancerSubnetAssociationMap{})
	pulumi.RegisterOutputType(LicationLoadBalancerSubnetAssociationOutput{})
	pulumi.RegisterOutputType(LicationLoadBalancerSubnetAssociationArrayOutput{})
	pulumi.RegisterOutputType(LicationLoadBalancerSubnetAssociationMapOutput{})
}
