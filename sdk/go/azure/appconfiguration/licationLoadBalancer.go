// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appconfiguration

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an Application Gateway for Containers (ALB).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appconfiguration"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = appconfiguration.NewLicationLoadBalancer(ctx, "exampleLicationLoadBalancer", &appconfiguration.LicationLoadBalancerArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Application Gateway for Containers (ALB) can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:appconfiguration/licationLoadBalancer:LicationLoadBalancer example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.ServiceNetworking/trafficControllers/alb1
//
// ```
type LicationLoadBalancer struct {
	pulumi.CustomResourceState

	// The Azure Region where the Application Gateway for Containers (ALB) should exist. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name which should be used for this Application Gateway for Containers (ALB). Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The primary configuration endpoints of the Application Gateway for Containers (ALB).
	PrimaryConfigurationEndpoint pulumi.StringOutput `pulumi:"primaryConfigurationEndpoint"`
	// The name of Resource Group where the Application Gateway for Containers (ALB) should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A mapping of tags which should be assigned to the Application Gateway for Containers (ALB).
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewLicationLoadBalancer registers a new resource with the given unique name, arguments, and options.
func NewLicationLoadBalancer(ctx *pulumi.Context,
	name string, args *LicationLoadBalancerArgs, opts ...pulumi.ResourceOption) (*LicationLoadBalancer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LicationLoadBalancer
	err := ctx.RegisterResource("azure:appconfiguration/licationLoadBalancer:LicationLoadBalancer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLicationLoadBalancer gets an existing LicationLoadBalancer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLicationLoadBalancer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LicationLoadBalancerState, opts ...pulumi.ResourceOption) (*LicationLoadBalancer, error) {
	var resource LicationLoadBalancer
	err := ctx.ReadResource("azure:appconfiguration/licationLoadBalancer:LicationLoadBalancer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LicationLoadBalancer resources.
type licationLoadBalancerState struct {
	// The Azure Region where the Application Gateway for Containers (ALB) should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this Application Gateway for Containers (ALB). Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The primary configuration endpoints of the Application Gateway for Containers (ALB).
	PrimaryConfigurationEndpoint *string `pulumi:"primaryConfigurationEndpoint"`
	// The name of Resource Group where the Application Gateway for Containers (ALB) should exist. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A mapping of tags which should be assigned to the Application Gateway for Containers (ALB).
	Tags map[string]string `pulumi:"tags"`
}

type LicationLoadBalancerState struct {
	// The Azure Region where the Application Gateway for Containers (ALB) should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this Application Gateway for Containers (ALB). Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The primary configuration endpoints of the Application Gateway for Containers (ALB).
	PrimaryConfigurationEndpoint pulumi.StringPtrInput
	// The name of Resource Group where the Application Gateway for Containers (ALB) should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Application Gateway for Containers (ALB).
	Tags pulumi.StringMapInput
}

func (LicationLoadBalancerState) ElementType() reflect.Type {
	return reflect.TypeOf((*licationLoadBalancerState)(nil)).Elem()
}

type licationLoadBalancerArgs struct {
	// The Azure Region where the Application Gateway for Containers (ALB) should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this Application Gateway for Containers (ALB). Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of Resource Group where the Application Gateway for Containers (ALB) should exist. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A mapping of tags which should be assigned to the Application Gateway for Containers (ALB).
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a LicationLoadBalancer resource.
type LicationLoadBalancerArgs struct {
	// The Azure Region where the Application Gateway for Containers (ALB) should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this Application Gateway for Containers (ALB). Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of Resource Group where the Application Gateway for Containers (ALB) should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// A mapping of tags which should be assigned to the Application Gateway for Containers (ALB).
	Tags pulumi.StringMapInput
}

func (LicationLoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*licationLoadBalancerArgs)(nil)).Elem()
}

type LicationLoadBalancerInput interface {
	pulumi.Input

	ToLicationLoadBalancerOutput() LicationLoadBalancerOutput
	ToLicationLoadBalancerOutputWithContext(ctx context.Context) LicationLoadBalancerOutput
}

func (*LicationLoadBalancer) ElementType() reflect.Type {
	return reflect.TypeOf((**LicationLoadBalancer)(nil)).Elem()
}

func (i *LicationLoadBalancer) ToLicationLoadBalancerOutput() LicationLoadBalancerOutput {
	return i.ToLicationLoadBalancerOutputWithContext(context.Background())
}

func (i *LicationLoadBalancer) ToLicationLoadBalancerOutputWithContext(ctx context.Context) LicationLoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicationLoadBalancerOutput)
}

// LicationLoadBalancerArrayInput is an input type that accepts LicationLoadBalancerArray and LicationLoadBalancerArrayOutput values.
// You can construct a concrete instance of `LicationLoadBalancerArrayInput` via:
//
//	LicationLoadBalancerArray{ LicationLoadBalancerArgs{...} }
type LicationLoadBalancerArrayInput interface {
	pulumi.Input

	ToLicationLoadBalancerArrayOutput() LicationLoadBalancerArrayOutput
	ToLicationLoadBalancerArrayOutputWithContext(context.Context) LicationLoadBalancerArrayOutput
}

type LicationLoadBalancerArray []LicationLoadBalancerInput

func (LicationLoadBalancerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LicationLoadBalancer)(nil)).Elem()
}

func (i LicationLoadBalancerArray) ToLicationLoadBalancerArrayOutput() LicationLoadBalancerArrayOutput {
	return i.ToLicationLoadBalancerArrayOutputWithContext(context.Background())
}

func (i LicationLoadBalancerArray) ToLicationLoadBalancerArrayOutputWithContext(ctx context.Context) LicationLoadBalancerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicationLoadBalancerArrayOutput)
}

// LicationLoadBalancerMapInput is an input type that accepts LicationLoadBalancerMap and LicationLoadBalancerMapOutput values.
// You can construct a concrete instance of `LicationLoadBalancerMapInput` via:
//
//	LicationLoadBalancerMap{ "key": LicationLoadBalancerArgs{...} }
type LicationLoadBalancerMapInput interface {
	pulumi.Input

	ToLicationLoadBalancerMapOutput() LicationLoadBalancerMapOutput
	ToLicationLoadBalancerMapOutputWithContext(context.Context) LicationLoadBalancerMapOutput
}

type LicationLoadBalancerMap map[string]LicationLoadBalancerInput

func (LicationLoadBalancerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LicationLoadBalancer)(nil)).Elem()
}

func (i LicationLoadBalancerMap) ToLicationLoadBalancerMapOutput() LicationLoadBalancerMapOutput {
	return i.ToLicationLoadBalancerMapOutputWithContext(context.Background())
}

func (i LicationLoadBalancerMap) ToLicationLoadBalancerMapOutputWithContext(ctx context.Context) LicationLoadBalancerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicationLoadBalancerMapOutput)
}

type LicationLoadBalancerOutput struct{ *pulumi.OutputState }

func (LicationLoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicationLoadBalancer)(nil)).Elem()
}

func (o LicationLoadBalancerOutput) ToLicationLoadBalancerOutput() LicationLoadBalancerOutput {
	return o
}

func (o LicationLoadBalancerOutput) ToLicationLoadBalancerOutputWithContext(ctx context.Context) LicationLoadBalancerOutput {
	return o
}

// The Azure Region where the Application Gateway for Containers (ALB) should exist. Changing this forces a new resource to be created.
func (o LicationLoadBalancerOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *LicationLoadBalancer) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name which should be used for this Application Gateway for Containers (ALB). Changing this forces a new resource to be created.
func (o LicationLoadBalancerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LicationLoadBalancer) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The primary configuration endpoints of the Application Gateway for Containers (ALB).
func (o LicationLoadBalancerOutput) PrimaryConfigurationEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *LicationLoadBalancer) pulumi.StringOutput { return v.PrimaryConfigurationEndpoint }).(pulumi.StringOutput)
}

// The name of Resource Group where the Application Gateway for Containers (ALB) should exist. Changing this forces a new resource to be created.
func (o LicationLoadBalancerOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *LicationLoadBalancer) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A mapping of tags which should be assigned to the Application Gateway for Containers (ALB).
func (o LicationLoadBalancerOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LicationLoadBalancer) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type LicationLoadBalancerArrayOutput struct{ *pulumi.OutputState }

func (LicationLoadBalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LicationLoadBalancer)(nil)).Elem()
}

func (o LicationLoadBalancerArrayOutput) ToLicationLoadBalancerArrayOutput() LicationLoadBalancerArrayOutput {
	return o
}

func (o LicationLoadBalancerArrayOutput) ToLicationLoadBalancerArrayOutputWithContext(ctx context.Context) LicationLoadBalancerArrayOutput {
	return o
}

func (o LicationLoadBalancerArrayOutput) Index(i pulumi.IntInput) LicationLoadBalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LicationLoadBalancer {
		return vs[0].([]*LicationLoadBalancer)[vs[1].(int)]
	}).(LicationLoadBalancerOutput)
}

type LicationLoadBalancerMapOutput struct{ *pulumi.OutputState }

func (LicationLoadBalancerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LicationLoadBalancer)(nil)).Elem()
}

func (o LicationLoadBalancerMapOutput) ToLicationLoadBalancerMapOutput() LicationLoadBalancerMapOutput {
	return o
}

func (o LicationLoadBalancerMapOutput) ToLicationLoadBalancerMapOutputWithContext(ctx context.Context) LicationLoadBalancerMapOutput {
	return o
}

func (o LicationLoadBalancerMapOutput) MapIndex(k pulumi.StringInput) LicationLoadBalancerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LicationLoadBalancer {
		return vs[0].(map[string]*LicationLoadBalancer)[vs[1].(string)]
	}).(LicationLoadBalancerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LicationLoadBalancerInput)(nil)).Elem(), &LicationLoadBalancer{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicationLoadBalancerArrayInput)(nil)).Elem(), LicationLoadBalancerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicationLoadBalancerMapInput)(nil)).Elem(), LicationLoadBalancerMap{})
	pulumi.RegisterOutputType(LicationLoadBalancerOutput{})
	pulumi.RegisterOutputType(LicationLoadBalancerArrayOutput{})
	pulumi.RegisterOutputType(LicationLoadBalancerMapOutput{})
}
