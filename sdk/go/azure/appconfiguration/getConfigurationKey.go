// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appconfiguration

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Azure App Configuration Key.
//
// > **Note:** App Configuration Keys are provisioned using a Data Plane API which requires the role `App Configuration Data Owner` on either the App Configuration or a parent scope (such as the Resource Group/Subscription). [More information can be found in the Azure Documentation for App Configuration](https://docs.microsoft.com/azure/azure-app-configuration/concept-enable-rbac#azure-built-in-roles-for-azure-app-configuration).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appconfiguration"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			test, err := appconfiguration.LookupConfigurationKey(ctx, &appconfiguration.LookupConfigurationKeyArgs{
//				ConfigurationStoreId: azurerm_app_configuration.Appconf.Id,
//				Key:                  "appConfKey1",
//				Label:                pulumi.StringRef("somelabel"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("value", test.Value)
//			return nil
//		})
//	}
//
// ```
func LookupConfigurationKey(ctx *pulumi.Context, args *LookupConfigurationKeyArgs, opts ...pulumi.InvokeOption) (*LookupConfigurationKeyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupConfigurationKeyResult
	err := ctx.Invoke("azure:appconfiguration/getConfigurationKey:getConfigurationKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConfigurationKey.
type LookupConfigurationKeyArgs struct {
	// Specifies the id of the App Configuration.
	ConfigurationStoreId string `pulumi:"configurationStoreId"`
	// The name of the App Configuration Key.
	Key string `pulumi:"key"`
	// The label of the App Configuration Key.
	Label *string `pulumi:"label"`
}

// A collection of values returned by getConfigurationKey.
type LookupConfigurationKeyResult struct {
	ConfigurationStoreId string `pulumi:"configurationStoreId"`
	// The content type of the App Configuration Key.
	ContentType string `pulumi:"contentType"`
	// The ETag of the key.
	Etag string `pulumi:"etag"`
	// The provider-assigned unique ID for this managed resource.
	Id    string  `pulumi:"id"`
	Key   string  `pulumi:"key"`
	Label *string `pulumi:"label"`
	// Is this App Configuration Key be Locked to prevent changes.
	Locked bool `pulumi:"locked"`
	// A mapping of tags assigned to the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of the App Configuration Key. It can either be `kv` (simple [key/value](https://docs.microsoft.com/azure/azure-app-configuration/concept-key-value)) or `vault` (where the value is a reference to a [Key Vault Secret](https://azure.microsoft.com/en-gb/services/key-vault/).
	Type string `pulumi:"type"`
	// The value of the App Configuration Key.
	Value string `pulumi:"value"`
	// The ID of the vault secret this App Configuration Key refers to, when `type` is `vault`.
	VaultKeyReference string `pulumi:"vaultKeyReference"`
}

func LookupConfigurationKeyOutput(ctx *pulumi.Context, args LookupConfigurationKeyOutputArgs, opts ...pulumi.InvokeOption) LookupConfigurationKeyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupConfigurationKeyResult, error) {
			args := v.(LookupConfigurationKeyArgs)
			r, err := LookupConfigurationKey(ctx, &args, opts...)
			var s LookupConfigurationKeyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupConfigurationKeyResultOutput)
}

// A collection of arguments for invoking getConfigurationKey.
type LookupConfigurationKeyOutputArgs struct {
	// Specifies the id of the App Configuration.
	ConfigurationStoreId pulumi.StringInput `pulumi:"configurationStoreId"`
	// The name of the App Configuration Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The label of the App Configuration Key.
	Label pulumi.StringPtrInput `pulumi:"label"`
}

func (LookupConfigurationKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigurationKeyArgs)(nil)).Elem()
}

// A collection of values returned by getConfigurationKey.
type LookupConfigurationKeyResultOutput struct{ *pulumi.OutputState }

func (LookupConfigurationKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigurationKeyResult)(nil)).Elem()
}

func (o LookupConfigurationKeyResultOutput) ToLookupConfigurationKeyResultOutput() LookupConfigurationKeyResultOutput {
	return o
}

func (o LookupConfigurationKeyResultOutput) ToLookupConfigurationKeyResultOutputWithContext(ctx context.Context) LookupConfigurationKeyResultOutput {
	return o
}

func (o LookupConfigurationKeyResultOutput) ConfigurationStoreId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationKeyResult) string { return v.ConfigurationStoreId }).(pulumi.StringOutput)
}

// The content type of the App Configuration Key.
func (o LookupConfigurationKeyResultOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationKeyResult) string { return v.ContentType }).(pulumi.StringOutput)
}

// The ETag of the key.
func (o LookupConfigurationKeyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationKeyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupConfigurationKeyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationKeyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupConfigurationKeyResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationKeyResult) string { return v.Key }).(pulumi.StringOutput)
}

func (o LookupConfigurationKeyResultOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConfigurationKeyResult) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// Is this App Configuration Key be Locked to prevent changes.
func (o LookupConfigurationKeyResultOutput) Locked() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupConfigurationKeyResult) bool { return v.Locked }).(pulumi.BoolOutput)
}

// A mapping of tags assigned to the resource.
func (o LookupConfigurationKeyResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupConfigurationKeyResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the App Configuration Key. It can either be `kv` (simple [key/value](https://docs.microsoft.com/azure/azure-app-configuration/concept-key-value)) or `vault` (where the value is a reference to a [Key Vault Secret](https://azure.microsoft.com/en-gb/services/key-vault/).
func (o LookupConfigurationKeyResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationKeyResult) string { return v.Type }).(pulumi.StringOutput)
}

// The value of the App Configuration Key.
func (o LookupConfigurationKeyResultOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationKeyResult) string { return v.Value }).(pulumi.StringOutput)
}

// The ID of the vault secret this App Configuration Key refers to, when `type` is `vault`.
func (o LookupConfigurationKeyResultOutput) VaultKeyReference() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationKeyResult) string { return v.VaultKeyReference }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConfigurationKeyResultOutput{})
}
