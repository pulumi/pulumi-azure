// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appconfiguration

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an Application Gateway for Containers Frontend.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appconfiguration"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleLicationLoadBalancer, err := appconfiguration.NewLicationLoadBalancer(ctx, "exampleLicationLoadBalancer", &appconfiguration.LicationLoadBalancerArgs{
//				ResourceGroupName: pulumi.String("example"),
//				Location:          pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = appconfiguration.NewLicationLoadBalancerFrontend(ctx, "exampleLicationLoadBalancerFrontend", &appconfiguration.LicationLoadBalancerFrontendArgs{
//				ApplicationLoadBalancerId: exampleLicationLoadBalancer.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Application Gateway for Containers Frontend can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:appconfiguration/licationLoadBalancerFrontend:LicationLoadBalancerFrontend example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.ServiceNetworking/trafficControllers/alb1/frontends/frontend1
//
// ```
type LicationLoadBalancerFrontend struct {
	pulumi.CustomResourceState

	// The ID of the Application Gateway for Containers. Changing this forces a new resource to be created.
	ApplicationLoadBalancerId pulumi.StringOutput `pulumi:"applicationLoadBalancerId"`
	// The Fully Qualified Domain Name of the DNS record associated to an Application Gateway for Containers Frontend.
	FullyQualifiedDomainName pulumi.StringOutput `pulumi:"fullyQualifiedDomainName"`
	// The name which should be used for this Application Gateway for Containers Frontend. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// A mapping of tags which should be assigned to the Application Gateway for Containers Frontend.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewLicationLoadBalancerFrontend registers a new resource with the given unique name, arguments, and options.
func NewLicationLoadBalancerFrontend(ctx *pulumi.Context,
	name string, args *LicationLoadBalancerFrontendArgs, opts ...pulumi.ResourceOption) (*LicationLoadBalancerFrontend, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationLoadBalancerId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationLoadBalancerId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LicationLoadBalancerFrontend
	err := ctx.RegisterResource("azure:appconfiguration/licationLoadBalancerFrontend:LicationLoadBalancerFrontend", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLicationLoadBalancerFrontend gets an existing LicationLoadBalancerFrontend resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLicationLoadBalancerFrontend(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LicationLoadBalancerFrontendState, opts ...pulumi.ResourceOption) (*LicationLoadBalancerFrontend, error) {
	var resource LicationLoadBalancerFrontend
	err := ctx.ReadResource("azure:appconfiguration/licationLoadBalancerFrontend:LicationLoadBalancerFrontend", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LicationLoadBalancerFrontend resources.
type licationLoadBalancerFrontendState struct {
	// The ID of the Application Gateway for Containers. Changing this forces a new resource to be created.
	ApplicationLoadBalancerId *string `pulumi:"applicationLoadBalancerId"`
	// The Fully Qualified Domain Name of the DNS record associated to an Application Gateway for Containers Frontend.
	FullyQualifiedDomainName *string `pulumi:"fullyQualifiedDomainName"`
	// The name which should be used for this Application Gateway for Containers Frontend. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A mapping of tags which should be assigned to the Application Gateway for Containers Frontend.
	Tags map[string]string `pulumi:"tags"`
}

type LicationLoadBalancerFrontendState struct {
	// The ID of the Application Gateway for Containers. Changing this forces a new resource to be created.
	ApplicationLoadBalancerId pulumi.StringPtrInput
	// The Fully Qualified Domain Name of the DNS record associated to an Application Gateway for Containers Frontend.
	FullyQualifiedDomainName pulumi.StringPtrInput
	// The name which should be used for this Application Gateway for Containers Frontend. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Application Gateway for Containers Frontend.
	Tags pulumi.StringMapInput
}

func (LicationLoadBalancerFrontendState) ElementType() reflect.Type {
	return reflect.TypeOf((*licationLoadBalancerFrontendState)(nil)).Elem()
}

type licationLoadBalancerFrontendArgs struct {
	// The ID of the Application Gateway for Containers. Changing this forces a new resource to be created.
	ApplicationLoadBalancerId string `pulumi:"applicationLoadBalancerId"`
	// The name which should be used for this Application Gateway for Containers Frontend. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A mapping of tags which should be assigned to the Application Gateway for Containers Frontend.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a LicationLoadBalancerFrontend resource.
type LicationLoadBalancerFrontendArgs struct {
	// The ID of the Application Gateway for Containers. Changing this forces a new resource to be created.
	ApplicationLoadBalancerId pulumi.StringInput
	// The name which should be used for this Application Gateway for Containers Frontend. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Application Gateway for Containers Frontend.
	Tags pulumi.StringMapInput
}

func (LicationLoadBalancerFrontendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*licationLoadBalancerFrontendArgs)(nil)).Elem()
}

type LicationLoadBalancerFrontendInput interface {
	pulumi.Input

	ToLicationLoadBalancerFrontendOutput() LicationLoadBalancerFrontendOutput
	ToLicationLoadBalancerFrontendOutputWithContext(ctx context.Context) LicationLoadBalancerFrontendOutput
}

func (*LicationLoadBalancerFrontend) ElementType() reflect.Type {
	return reflect.TypeOf((**LicationLoadBalancerFrontend)(nil)).Elem()
}

func (i *LicationLoadBalancerFrontend) ToLicationLoadBalancerFrontendOutput() LicationLoadBalancerFrontendOutput {
	return i.ToLicationLoadBalancerFrontendOutputWithContext(context.Background())
}

func (i *LicationLoadBalancerFrontend) ToLicationLoadBalancerFrontendOutputWithContext(ctx context.Context) LicationLoadBalancerFrontendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicationLoadBalancerFrontendOutput)
}

// LicationLoadBalancerFrontendArrayInput is an input type that accepts LicationLoadBalancerFrontendArray and LicationLoadBalancerFrontendArrayOutput values.
// You can construct a concrete instance of `LicationLoadBalancerFrontendArrayInput` via:
//
//	LicationLoadBalancerFrontendArray{ LicationLoadBalancerFrontendArgs{...} }
type LicationLoadBalancerFrontendArrayInput interface {
	pulumi.Input

	ToLicationLoadBalancerFrontendArrayOutput() LicationLoadBalancerFrontendArrayOutput
	ToLicationLoadBalancerFrontendArrayOutputWithContext(context.Context) LicationLoadBalancerFrontendArrayOutput
}

type LicationLoadBalancerFrontendArray []LicationLoadBalancerFrontendInput

func (LicationLoadBalancerFrontendArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LicationLoadBalancerFrontend)(nil)).Elem()
}

func (i LicationLoadBalancerFrontendArray) ToLicationLoadBalancerFrontendArrayOutput() LicationLoadBalancerFrontendArrayOutput {
	return i.ToLicationLoadBalancerFrontendArrayOutputWithContext(context.Background())
}

func (i LicationLoadBalancerFrontendArray) ToLicationLoadBalancerFrontendArrayOutputWithContext(ctx context.Context) LicationLoadBalancerFrontendArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicationLoadBalancerFrontendArrayOutput)
}

// LicationLoadBalancerFrontendMapInput is an input type that accepts LicationLoadBalancerFrontendMap and LicationLoadBalancerFrontendMapOutput values.
// You can construct a concrete instance of `LicationLoadBalancerFrontendMapInput` via:
//
//	LicationLoadBalancerFrontendMap{ "key": LicationLoadBalancerFrontendArgs{...} }
type LicationLoadBalancerFrontendMapInput interface {
	pulumi.Input

	ToLicationLoadBalancerFrontendMapOutput() LicationLoadBalancerFrontendMapOutput
	ToLicationLoadBalancerFrontendMapOutputWithContext(context.Context) LicationLoadBalancerFrontendMapOutput
}

type LicationLoadBalancerFrontendMap map[string]LicationLoadBalancerFrontendInput

func (LicationLoadBalancerFrontendMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LicationLoadBalancerFrontend)(nil)).Elem()
}

func (i LicationLoadBalancerFrontendMap) ToLicationLoadBalancerFrontendMapOutput() LicationLoadBalancerFrontendMapOutput {
	return i.ToLicationLoadBalancerFrontendMapOutputWithContext(context.Background())
}

func (i LicationLoadBalancerFrontendMap) ToLicationLoadBalancerFrontendMapOutputWithContext(ctx context.Context) LicationLoadBalancerFrontendMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LicationLoadBalancerFrontendMapOutput)
}

type LicationLoadBalancerFrontendOutput struct{ *pulumi.OutputState }

func (LicationLoadBalancerFrontendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LicationLoadBalancerFrontend)(nil)).Elem()
}

func (o LicationLoadBalancerFrontendOutput) ToLicationLoadBalancerFrontendOutput() LicationLoadBalancerFrontendOutput {
	return o
}

func (o LicationLoadBalancerFrontendOutput) ToLicationLoadBalancerFrontendOutputWithContext(ctx context.Context) LicationLoadBalancerFrontendOutput {
	return o
}

// The ID of the Application Gateway for Containers. Changing this forces a new resource to be created.
func (o LicationLoadBalancerFrontendOutput) ApplicationLoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v *LicationLoadBalancerFrontend) pulumi.StringOutput { return v.ApplicationLoadBalancerId }).(pulumi.StringOutput)
}

// The Fully Qualified Domain Name of the DNS record associated to an Application Gateway for Containers Frontend.
func (o LicationLoadBalancerFrontendOutput) FullyQualifiedDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *LicationLoadBalancerFrontend) pulumi.StringOutput { return v.FullyQualifiedDomainName }).(pulumi.StringOutput)
}

// The name which should be used for this Application Gateway for Containers Frontend. Changing this forces a new resource to be created.
func (o LicationLoadBalancerFrontendOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LicationLoadBalancerFrontend) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A mapping of tags which should be assigned to the Application Gateway for Containers Frontend.
func (o LicationLoadBalancerFrontendOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LicationLoadBalancerFrontend) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type LicationLoadBalancerFrontendArrayOutput struct{ *pulumi.OutputState }

func (LicationLoadBalancerFrontendArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LicationLoadBalancerFrontend)(nil)).Elem()
}

func (o LicationLoadBalancerFrontendArrayOutput) ToLicationLoadBalancerFrontendArrayOutput() LicationLoadBalancerFrontendArrayOutput {
	return o
}

func (o LicationLoadBalancerFrontendArrayOutput) ToLicationLoadBalancerFrontendArrayOutputWithContext(ctx context.Context) LicationLoadBalancerFrontendArrayOutput {
	return o
}

func (o LicationLoadBalancerFrontendArrayOutput) Index(i pulumi.IntInput) LicationLoadBalancerFrontendOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LicationLoadBalancerFrontend {
		return vs[0].([]*LicationLoadBalancerFrontend)[vs[1].(int)]
	}).(LicationLoadBalancerFrontendOutput)
}

type LicationLoadBalancerFrontendMapOutput struct{ *pulumi.OutputState }

func (LicationLoadBalancerFrontendMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LicationLoadBalancerFrontend)(nil)).Elem()
}

func (o LicationLoadBalancerFrontendMapOutput) ToLicationLoadBalancerFrontendMapOutput() LicationLoadBalancerFrontendMapOutput {
	return o
}

func (o LicationLoadBalancerFrontendMapOutput) ToLicationLoadBalancerFrontendMapOutputWithContext(ctx context.Context) LicationLoadBalancerFrontendMapOutput {
	return o
}

func (o LicationLoadBalancerFrontendMapOutput) MapIndex(k pulumi.StringInput) LicationLoadBalancerFrontendOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LicationLoadBalancerFrontend {
		return vs[0].(map[string]*LicationLoadBalancerFrontend)[vs[1].(string)]
	}).(LicationLoadBalancerFrontendOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LicationLoadBalancerFrontendInput)(nil)).Elem(), &LicationLoadBalancerFrontend{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicationLoadBalancerFrontendArrayInput)(nil)).Elem(), LicationLoadBalancerFrontendArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LicationLoadBalancerFrontendMapInput)(nil)).Elem(), LicationLoadBalancerFrontendMap{})
	pulumi.RegisterOutputType(LicationLoadBalancerFrontendOutput{})
	pulumi.RegisterOutputType(LicationLoadBalancerFrontendArrayOutput{})
	pulumi.RegisterOutputType(LicationLoadBalancerFrontendMapOutput{})
}
