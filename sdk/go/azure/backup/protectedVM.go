// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package backup

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages Azure Backup for an Azure VM
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/backup"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/compute"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/recoveryservices"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleVault, err := recoveryservices.NewVault(ctx, "exampleVault", &recoveryservices.VaultArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				Sku:               pulumi.String("Standard"),
//			})
//			if err != nil {
//				return err
//			}
//			examplePolicyVM, err := backup.NewPolicyVM(ctx, "examplePolicyVM", &backup.PolicyVMArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				RecoveryVaultName: exampleVault.Name,
//				Backup: &backup.PolicyVMBackupArgs{
//					Frequency: pulumi.String("Daily"),
//					Time:      pulumi.String("23:00"),
//				},
//				RetentionDaily: &backup.PolicyVMRetentionDailyArgs{
//					Count: pulumi.Int(10),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleVirtualMachine := compute.LookupVirtualMachineOutput(ctx, compute.GetVirtualMachineOutputArgs{
//				Name:              pulumi.String("example-vm"),
//				ResourceGroupName: exampleResourceGroup.Name,
//			}, nil)
//			_, err = backup.NewProtectedVM(ctx, "vm1", &backup.ProtectedVMArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				RecoveryVaultName: exampleVault.Name,
//				SourceVmId: exampleVirtualMachine.ApplyT(func(exampleVirtualMachine compute.GetVirtualMachineResult) (*string, error) {
//					return &exampleVirtualMachine.Id, nil
//				}).(pulumi.StringPtrOutput),
//				BackupPolicyId: examplePolicyVM.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Recovery Services Protected VMs can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:backup/protectedVM:ProtectedVM item1 "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.RecoveryServices/vaults/example-recovery-vault/backupFabrics/Azure/protectionContainers/iaasvmcontainer;iaasvmcontainerv2;group1;vm1/protectedItems/vm;iaasvmcontainerv2;group1;vm1"
//
// ```
//
//	Note the ID requires quoting as there are semicolons
type ProtectedVM struct {
	pulumi.CustomResourceState

	// Specifies the id of the backup policy to use. Required in creation or when `protectionStopped` is not specified.
	BackupPolicyId pulumi.StringPtrOutput `pulumi:"backupPolicyId"`
	// A list of Disks' Logical Unit Numbers(LUN) to be excluded for VM Protection.
	ExcludeDiskLuns pulumi.IntArrayOutput `pulumi:"excludeDiskLuns"`
	// A list of Disks' Logical Unit Numbers(LUN) to be included for VM Protection.
	IncludeDiskLuns pulumi.IntArrayOutput `pulumi:"includeDiskLuns"`
	// Specifies Protection state of the backup. Possible values are `Invalid`, `IRPending`, `Protected`, `ProtectionStopped`, `ProtectionError` and `ProtectionPaused`.
	ProtectionState pulumi.StringOutput `pulumi:"protectionState"`
	// Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
	RecoveryVaultName pulumi.StringOutput `pulumi:"recoveryVaultName"`
	// The name of the resource group in which to create the Recovery Services Vault. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// Specifies the ID of the VM to backup. Changing this forces a new resource to be created.
	//
	// > **NOTE:** After creation, the `sourceVmId` property can be removed without forcing a new resource to be created; however, setting it to a different ID will create a new resource.
	// This allows the source vm to be deleted without having to remove the backup.
	SourceVmId pulumi.StringOutput `pulumi:"sourceVmId"`
}

// NewProtectedVM registers a new resource with the given unique name, arguments, and options.
func NewProtectedVM(ctx *pulumi.Context,
	name string, args *ProtectedVMArgs, opts ...pulumi.ResourceOption) (*ProtectedVM, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RecoveryVaultName == nil {
		return nil, errors.New("invalid value for required argument 'RecoveryVaultName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ProtectedVM
	err := ctx.RegisterResource("azure:backup/protectedVM:ProtectedVM", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProtectedVM gets an existing ProtectedVM resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProtectedVM(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProtectedVMState, opts ...pulumi.ResourceOption) (*ProtectedVM, error) {
	var resource ProtectedVM
	err := ctx.ReadResource("azure:backup/protectedVM:ProtectedVM", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProtectedVM resources.
type protectedVMState struct {
	// Specifies the id of the backup policy to use. Required in creation or when `protectionStopped` is not specified.
	BackupPolicyId *string `pulumi:"backupPolicyId"`
	// A list of Disks' Logical Unit Numbers(LUN) to be excluded for VM Protection.
	ExcludeDiskLuns []int `pulumi:"excludeDiskLuns"`
	// A list of Disks' Logical Unit Numbers(LUN) to be included for VM Protection.
	IncludeDiskLuns []int `pulumi:"includeDiskLuns"`
	// Specifies Protection state of the backup. Possible values are `Invalid`, `IRPending`, `Protected`, `ProtectionStopped`, `ProtectionError` and `ProtectionPaused`.
	ProtectionState *string `pulumi:"protectionState"`
	// Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
	RecoveryVaultName *string `pulumi:"recoveryVaultName"`
	// The name of the resource group in which to create the Recovery Services Vault. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// Specifies the ID of the VM to backup. Changing this forces a new resource to be created.
	//
	// > **NOTE:** After creation, the `sourceVmId` property can be removed without forcing a new resource to be created; however, setting it to a different ID will create a new resource.
	// This allows the source vm to be deleted without having to remove the backup.
	SourceVmId *string `pulumi:"sourceVmId"`
}

type ProtectedVMState struct {
	// Specifies the id of the backup policy to use. Required in creation or when `protectionStopped` is not specified.
	BackupPolicyId pulumi.StringPtrInput
	// A list of Disks' Logical Unit Numbers(LUN) to be excluded for VM Protection.
	ExcludeDiskLuns pulumi.IntArrayInput
	// A list of Disks' Logical Unit Numbers(LUN) to be included for VM Protection.
	IncludeDiskLuns pulumi.IntArrayInput
	// Specifies Protection state of the backup. Possible values are `Invalid`, `IRPending`, `Protected`, `ProtectionStopped`, `ProtectionError` and `ProtectionPaused`.
	ProtectionState pulumi.StringPtrInput
	// Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
	RecoveryVaultName pulumi.StringPtrInput
	// The name of the resource group in which to create the Recovery Services Vault. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// Specifies the ID of the VM to backup. Changing this forces a new resource to be created.
	//
	// > **NOTE:** After creation, the `sourceVmId` property can be removed without forcing a new resource to be created; however, setting it to a different ID will create a new resource.
	// This allows the source vm to be deleted without having to remove the backup.
	SourceVmId pulumi.StringPtrInput
}

func (ProtectedVMState) ElementType() reflect.Type {
	return reflect.TypeOf((*protectedVMState)(nil)).Elem()
}

type protectedVMArgs struct {
	// Specifies the id of the backup policy to use. Required in creation or when `protectionStopped` is not specified.
	BackupPolicyId *string `pulumi:"backupPolicyId"`
	// A list of Disks' Logical Unit Numbers(LUN) to be excluded for VM Protection.
	ExcludeDiskLuns []int `pulumi:"excludeDiskLuns"`
	// A list of Disks' Logical Unit Numbers(LUN) to be included for VM Protection.
	IncludeDiskLuns []int `pulumi:"includeDiskLuns"`
	// Specifies Protection state of the backup. Possible values are `Invalid`, `IRPending`, `Protected`, `ProtectionStopped`, `ProtectionError` and `ProtectionPaused`.
	ProtectionState *string `pulumi:"protectionState"`
	// Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
	RecoveryVaultName string `pulumi:"recoveryVaultName"`
	// The name of the resource group in which to create the Recovery Services Vault. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Specifies the ID of the VM to backup. Changing this forces a new resource to be created.
	//
	// > **NOTE:** After creation, the `sourceVmId` property can be removed without forcing a new resource to be created; however, setting it to a different ID will create a new resource.
	// This allows the source vm to be deleted without having to remove the backup.
	SourceVmId *string `pulumi:"sourceVmId"`
}

// The set of arguments for constructing a ProtectedVM resource.
type ProtectedVMArgs struct {
	// Specifies the id of the backup policy to use. Required in creation or when `protectionStopped` is not specified.
	BackupPolicyId pulumi.StringPtrInput
	// A list of Disks' Logical Unit Numbers(LUN) to be excluded for VM Protection.
	ExcludeDiskLuns pulumi.IntArrayInput
	// A list of Disks' Logical Unit Numbers(LUN) to be included for VM Protection.
	IncludeDiskLuns pulumi.IntArrayInput
	// Specifies Protection state of the backup. Possible values are `Invalid`, `IRPending`, `Protected`, `ProtectionStopped`, `ProtectionError` and `ProtectionPaused`.
	ProtectionState pulumi.StringPtrInput
	// Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
	RecoveryVaultName pulumi.StringInput
	// The name of the resource group in which to create the Recovery Services Vault. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// Specifies the ID of the VM to backup. Changing this forces a new resource to be created.
	//
	// > **NOTE:** After creation, the `sourceVmId` property can be removed without forcing a new resource to be created; however, setting it to a different ID will create a new resource.
	// This allows the source vm to be deleted without having to remove the backup.
	SourceVmId pulumi.StringPtrInput
}

func (ProtectedVMArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*protectedVMArgs)(nil)).Elem()
}

type ProtectedVMInput interface {
	pulumi.Input

	ToProtectedVMOutput() ProtectedVMOutput
	ToProtectedVMOutputWithContext(ctx context.Context) ProtectedVMOutput
}

func (*ProtectedVM) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectedVM)(nil)).Elem()
}

func (i *ProtectedVM) ToProtectedVMOutput() ProtectedVMOutput {
	return i.ToProtectedVMOutputWithContext(context.Background())
}

func (i *ProtectedVM) ToProtectedVMOutputWithContext(ctx context.Context) ProtectedVMOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectedVMOutput)
}

// ProtectedVMArrayInput is an input type that accepts ProtectedVMArray and ProtectedVMArrayOutput values.
// You can construct a concrete instance of `ProtectedVMArrayInput` via:
//
//	ProtectedVMArray{ ProtectedVMArgs{...} }
type ProtectedVMArrayInput interface {
	pulumi.Input

	ToProtectedVMArrayOutput() ProtectedVMArrayOutput
	ToProtectedVMArrayOutputWithContext(context.Context) ProtectedVMArrayOutput
}

type ProtectedVMArray []ProtectedVMInput

func (ProtectedVMArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProtectedVM)(nil)).Elem()
}

func (i ProtectedVMArray) ToProtectedVMArrayOutput() ProtectedVMArrayOutput {
	return i.ToProtectedVMArrayOutputWithContext(context.Background())
}

func (i ProtectedVMArray) ToProtectedVMArrayOutputWithContext(ctx context.Context) ProtectedVMArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectedVMArrayOutput)
}

// ProtectedVMMapInput is an input type that accepts ProtectedVMMap and ProtectedVMMapOutput values.
// You can construct a concrete instance of `ProtectedVMMapInput` via:
//
//	ProtectedVMMap{ "key": ProtectedVMArgs{...} }
type ProtectedVMMapInput interface {
	pulumi.Input

	ToProtectedVMMapOutput() ProtectedVMMapOutput
	ToProtectedVMMapOutputWithContext(context.Context) ProtectedVMMapOutput
}

type ProtectedVMMap map[string]ProtectedVMInput

func (ProtectedVMMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProtectedVM)(nil)).Elem()
}

func (i ProtectedVMMap) ToProtectedVMMapOutput() ProtectedVMMapOutput {
	return i.ToProtectedVMMapOutputWithContext(context.Background())
}

func (i ProtectedVMMap) ToProtectedVMMapOutputWithContext(ctx context.Context) ProtectedVMMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectedVMMapOutput)
}

type ProtectedVMOutput struct{ *pulumi.OutputState }

func (ProtectedVMOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectedVM)(nil)).Elem()
}

func (o ProtectedVMOutput) ToProtectedVMOutput() ProtectedVMOutput {
	return o
}

func (o ProtectedVMOutput) ToProtectedVMOutputWithContext(ctx context.Context) ProtectedVMOutput {
	return o
}

// Specifies the id of the backup policy to use. Required in creation or when `protectionStopped` is not specified.
func (o ProtectedVMOutput) BackupPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectedVM) pulumi.StringPtrOutput { return v.BackupPolicyId }).(pulumi.StringPtrOutput)
}

// A list of Disks' Logical Unit Numbers(LUN) to be excluded for VM Protection.
func (o ProtectedVMOutput) ExcludeDiskLuns() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ProtectedVM) pulumi.IntArrayOutput { return v.ExcludeDiskLuns }).(pulumi.IntArrayOutput)
}

// A list of Disks' Logical Unit Numbers(LUN) to be included for VM Protection.
func (o ProtectedVMOutput) IncludeDiskLuns() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *ProtectedVM) pulumi.IntArrayOutput { return v.IncludeDiskLuns }).(pulumi.IntArrayOutput)
}

// Specifies Protection state of the backup. Possible values are `Invalid`, `IRPending`, `Protected`, `ProtectionStopped`, `ProtectionError` and `ProtectionPaused`.
func (o ProtectedVMOutput) ProtectionState() pulumi.StringOutput {
	return o.ApplyT(func(v *ProtectedVM) pulumi.StringOutput { return v.ProtectionState }).(pulumi.StringOutput)
}

// Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
func (o ProtectedVMOutput) RecoveryVaultName() pulumi.StringOutput {
	return o.ApplyT(func(v *ProtectedVM) pulumi.StringOutput { return v.RecoveryVaultName }).(pulumi.StringOutput)
}

// The name of the resource group in which to create the Recovery Services Vault. Changing this forces a new resource to be created.
func (o ProtectedVMOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *ProtectedVM) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// Specifies the ID of the VM to backup. Changing this forces a new resource to be created.
//
// > **NOTE:** After creation, the `sourceVmId` property can be removed without forcing a new resource to be created; however, setting it to a different ID will create a new resource.
// This allows the source vm to be deleted without having to remove the backup.
func (o ProtectedVMOutput) SourceVmId() pulumi.StringOutput {
	return o.ApplyT(func(v *ProtectedVM) pulumi.StringOutput { return v.SourceVmId }).(pulumi.StringOutput)
}

type ProtectedVMArrayOutput struct{ *pulumi.OutputState }

func (ProtectedVMArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProtectedVM)(nil)).Elem()
}

func (o ProtectedVMArrayOutput) ToProtectedVMArrayOutput() ProtectedVMArrayOutput {
	return o
}

func (o ProtectedVMArrayOutput) ToProtectedVMArrayOutputWithContext(ctx context.Context) ProtectedVMArrayOutput {
	return o
}

func (o ProtectedVMArrayOutput) Index(i pulumi.IntInput) ProtectedVMOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ProtectedVM {
		return vs[0].([]*ProtectedVM)[vs[1].(int)]
	}).(ProtectedVMOutput)
}

type ProtectedVMMapOutput struct{ *pulumi.OutputState }

func (ProtectedVMMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProtectedVM)(nil)).Elem()
}

func (o ProtectedVMMapOutput) ToProtectedVMMapOutput() ProtectedVMMapOutput {
	return o
}

func (o ProtectedVMMapOutput) ToProtectedVMMapOutputWithContext(ctx context.Context) ProtectedVMMapOutput {
	return o
}

func (o ProtectedVMMapOutput) MapIndex(k pulumi.StringInput) ProtectedVMOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ProtectedVM {
		return vs[0].(map[string]*ProtectedVM)[vs[1].(string)]
	}).(ProtectedVMOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectedVMInput)(nil)).Elem(), &ProtectedVM{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectedVMArrayInput)(nil)).Elem(), ProtectedVMArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectedVMMapInput)(nil)).Elem(), ProtectedVMMap{})
	pulumi.RegisterOutputType(ProtectedVMOutput{})
	pulumi.RegisterOutputType(ProtectedVMArrayOutput{})
	pulumi.RegisterOutputType(ProtectedVMMapOutput{})
}
