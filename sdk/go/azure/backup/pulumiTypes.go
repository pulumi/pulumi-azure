// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package backup

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PolicyFileShareBackup struct {
	// Sets the backup frequency. Currently, only `Daily` is supported
	Frequency string `pulumi:"frequency"`
	Time      string `pulumi:"time"`
}

// PolicyFileShareBackupInput is an input type that accepts PolicyFileShareBackupArgs and PolicyFileShareBackupOutput values.
// You can construct a concrete instance of `PolicyFileShareBackupInput` via:
//
//          PolicyFileShareBackupArgs{...}
type PolicyFileShareBackupInput interface {
	pulumi.Input

	ToPolicyFileShareBackupOutput() PolicyFileShareBackupOutput
	ToPolicyFileShareBackupOutputWithContext(context.Context) PolicyFileShareBackupOutput
}

type PolicyFileShareBackupArgs struct {
	// Sets the backup frequency. Currently, only `Daily` is supported
	Frequency pulumi.StringInput `pulumi:"frequency"`
	Time      pulumi.StringInput `pulumi:"time"`
}

func (PolicyFileShareBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyFileShareBackup)(nil)).Elem()
}

func (i PolicyFileShareBackupArgs) ToPolicyFileShareBackupOutput() PolicyFileShareBackupOutput {
	return i.ToPolicyFileShareBackupOutputWithContext(context.Background())
}

func (i PolicyFileShareBackupArgs) ToPolicyFileShareBackupOutputWithContext(ctx context.Context) PolicyFileShareBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyFileShareBackupOutput)
}

func (i PolicyFileShareBackupArgs) ToPolicyFileShareBackupPtrOutput() PolicyFileShareBackupPtrOutput {
	return i.ToPolicyFileShareBackupPtrOutputWithContext(context.Background())
}

func (i PolicyFileShareBackupArgs) ToPolicyFileShareBackupPtrOutputWithContext(ctx context.Context) PolicyFileShareBackupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyFileShareBackupOutput).ToPolicyFileShareBackupPtrOutputWithContext(ctx)
}

// PolicyFileShareBackupPtrInput is an input type that accepts PolicyFileShareBackupArgs, PolicyFileShareBackupPtr and PolicyFileShareBackupPtrOutput values.
// You can construct a concrete instance of `PolicyFileShareBackupPtrInput` via:
//
//          PolicyFileShareBackupArgs{...}
//
//  or:
//
//          nil
type PolicyFileShareBackupPtrInput interface {
	pulumi.Input

	ToPolicyFileShareBackupPtrOutput() PolicyFileShareBackupPtrOutput
	ToPolicyFileShareBackupPtrOutputWithContext(context.Context) PolicyFileShareBackupPtrOutput
}

type policyFileShareBackupPtrType PolicyFileShareBackupArgs

func PolicyFileShareBackupPtr(v *PolicyFileShareBackupArgs) PolicyFileShareBackupPtrInput {
	return (*policyFileShareBackupPtrType)(v)
}

func (*policyFileShareBackupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyFileShareBackup)(nil)).Elem()
}

func (i *policyFileShareBackupPtrType) ToPolicyFileShareBackupPtrOutput() PolicyFileShareBackupPtrOutput {
	return i.ToPolicyFileShareBackupPtrOutputWithContext(context.Background())
}

func (i *policyFileShareBackupPtrType) ToPolicyFileShareBackupPtrOutputWithContext(ctx context.Context) PolicyFileShareBackupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyFileShareBackupPtrOutput)
}

type PolicyFileShareBackupOutput struct{ *pulumi.OutputState }

func (PolicyFileShareBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyFileShareBackup)(nil)).Elem()
}

func (o PolicyFileShareBackupOutput) ToPolicyFileShareBackupOutput() PolicyFileShareBackupOutput {
	return o
}

func (o PolicyFileShareBackupOutput) ToPolicyFileShareBackupOutputWithContext(ctx context.Context) PolicyFileShareBackupOutput {
	return o
}

func (o PolicyFileShareBackupOutput) ToPolicyFileShareBackupPtrOutput() PolicyFileShareBackupPtrOutput {
	return o.ToPolicyFileShareBackupPtrOutputWithContext(context.Background())
}

func (o PolicyFileShareBackupOutput) ToPolicyFileShareBackupPtrOutputWithContext(ctx context.Context) PolicyFileShareBackupPtrOutput {
	return o.ApplyT(func(v PolicyFileShareBackup) *PolicyFileShareBackup {
		return &v
	}).(PolicyFileShareBackupPtrOutput)
}

// Sets the backup frequency. Currently, only `Daily` is supported
func (o PolicyFileShareBackupOutput) Frequency() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyFileShareBackup) string { return v.Frequency }).(pulumi.StringOutput)
}

func (o PolicyFileShareBackupOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyFileShareBackup) string { return v.Time }).(pulumi.StringOutput)
}

type PolicyFileShareBackupPtrOutput struct{ *pulumi.OutputState }

func (PolicyFileShareBackupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyFileShareBackup)(nil)).Elem()
}

func (o PolicyFileShareBackupPtrOutput) ToPolicyFileShareBackupPtrOutput() PolicyFileShareBackupPtrOutput {
	return o
}

func (o PolicyFileShareBackupPtrOutput) ToPolicyFileShareBackupPtrOutputWithContext(ctx context.Context) PolicyFileShareBackupPtrOutput {
	return o
}

func (o PolicyFileShareBackupPtrOutput) Elem() PolicyFileShareBackupOutput {
	return o.ApplyT(func(v *PolicyFileShareBackup) PolicyFileShareBackup { return *v }).(PolicyFileShareBackupOutput)
}

// Sets the backup frequency. Currently, only `Daily` is supported
func (o PolicyFileShareBackupPtrOutput) Frequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyFileShareBackup) *string {
		if v == nil {
			return nil
		}
		return &v.Frequency
	}).(pulumi.StringPtrOutput)
}

func (o PolicyFileShareBackupPtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyFileShareBackup) *string {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(pulumi.StringPtrOutput)
}

type PolicyFileShareRetentionDaily struct {
	// The number of daily backups to keep. Must be between `1` and `180` (inclusive)
	Count int `pulumi:"count"`
}

// PolicyFileShareRetentionDailyInput is an input type that accepts PolicyFileShareRetentionDailyArgs and PolicyFileShareRetentionDailyOutput values.
// You can construct a concrete instance of `PolicyFileShareRetentionDailyInput` via:
//
//          PolicyFileShareRetentionDailyArgs{...}
type PolicyFileShareRetentionDailyInput interface {
	pulumi.Input

	ToPolicyFileShareRetentionDailyOutput() PolicyFileShareRetentionDailyOutput
	ToPolicyFileShareRetentionDailyOutputWithContext(context.Context) PolicyFileShareRetentionDailyOutput
}

type PolicyFileShareRetentionDailyArgs struct {
	// The number of daily backups to keep. Must be between `1` and `180` (inclusive)
	Count pulumi.IntInput `pulumi:"count"`
}

func (PolicyFileShareRetentionDailyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyFileShareRetentionDaily)(nil)).Elem()
}

func (i PolicyFileShareRetentionDailyArgs) ToPolicyFileShareRetentionDailyOutput() PolicyFileShareRetentionDailyOutput {
	return i.ToPolicyFileShareRetentionDailyOutputWithContext(context.Background())
}

func (i PolicyFileShareRetentionDailyArgs) ToPolicyFileShareRetentionDailyOutputWithContext(ctx context.Context) PolicyFileShareRetentionDailyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyFileShareRetentionDailyOutput)
}

func (i PolicyFileShareRetentionDailyArgs) ToPolicyFileShareRetentionDailyPtrOutput() PolicyFileShareRetentionDailyPtrOutput {
	return i.ToPolicyFileShareRetentionDailyPtrOutputWithContext(context.Background())
}

func (i PolicyFileShareRetentionDailyArgs) ToPolicyFileShareRetentionDailyPtrOutputWithContext(ctx context.Context) PolicyFileShareRetentionDailyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyFileShareRetentionDailyOutput).ToPolicyFileShareRetentionDailyPtrOutputWithContext(ctx)
}

// PolicyFileShareRetentionDailyPtrInput is an input type that accepts PolicyFileShareRetentionDailyArgs, PolicyFileShareRetentionDailyPtr and PolicyFileShareRetentionDailyPtrOutput values.
// You can construct a concrete instance of `PolicyFileShareRetentionDailyPtrInput` via:
//
//          PolicyFileShareRetentionDailyArgs{...}
//
//  or:
//
//          nil
type PolicyFileShareRetentionDailyPtrInput interface {
	pulumi.Input

	ToPolicyFileShareRetentionDailyPtrOutput() PolicyFileShareRetentionDailyPtrOutput
	ToPolicyFileShareRetentionDailyPtrOutputWithContext(context.Context) PolicyFileShareRetentionDailyPtrOutput
}

type policyFileShareRetentionDailyPtrType PolicyFileShareRetentionDailyArgs

func PolicyFileShareRetentionDailyPtr(v *PolicyFileShareRetentionDailyArgs) PolicyFileShareRetentionDailyPtrInput {
	return (*policyFileShareRetentionDailyPtrType)(v)
}

func (*policyFileShareRetentionDailyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyFileShareRetentionDaily)(nil)).Elem()
}

func (i *policyFileShareRetentionDailyPtrType) ToPolicyFileShareRetentionDailyPtrOutput() PolicyFileShareRetentionDailyPtrOutput {
	return i.ToPolicyFileShareRetentionDailyPtrOutputWithContext(context.Background())
}

func (i *policyFileShareRetentionDailyPtrType) ToPolicyFileShareRetentionDailyPtrOutputWithContext(ctx context.Context) PolicyFileShareRetentionDailyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyFileShareRetentionDailyPtrOutput)
}

type PolicyFileShareRetentionDailyOutput struct{ *pulumi.OutputState }

func (PolicyFileShareRetentionDailyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyFileShareRetentionDaily)(nil)).Elem()
}

func (o PolicyFileShareRetentionDailyOutput) ToPolicyFileShareRetentionDailyOutput() PolicyFileShareRetentionDailyOutput {
	return o
}

func (o PolicyFileShareRetentionDailyOutput) ToPolicyFileShareRetentionDailyOutputWithContext(ctx context.Context) PolicyFileShareRetentionDailyOutput {
	return o
}

func (o PolicyFileShareRetentionDailyOutput) ToPolicyFileShareRetentionDailyPtrOutput() PolicyFileShareRetentionDailyPtrOutput {
	return o.ToPolicyFileShareRetentionDailyPtrOutputWithContext(context.Background())
}

func (o PolicyFileShareRetentionDailyOutput) ToPolicyFileShareRetentionDailyPtrOutputWithContext(ctx context.Context) PolicyFileShareRetentionDailyPtrOutput {
	return o.ApplyT(func(v PolicyFileShareRetentionDaily) *PolicyFileShareRetentionDaily {
		return &v
	}).(PolicyFileShareRetentionDailyPtrOutput)
}

// The number of daily backups to keep. Must be between `1` and `180` (inclusive)
func (o PolicyFileShareRetentionDailyOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyFileShareRetentionDaily) int { return v.Count }).(pulumi.IntOutput)
}

type PolicyFileShareRetentionDailyPtrOutput struct{ *pulumi.OutputState }

func (PolicyFileShareRetentionDailyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyFileShareRetentionDaily)(nil)).Elem()
}

func (o PolicyFileShareRetentionDailyPtrOutput) ToPolicyFileShareRetentionDailyPtrOutput() PolicyFileShareRetentionDailyPtrOutput {
	return o
}

func (o PolicyFileShareRetentionDailyPtrOutput) ToPolicyFileShareRetentionDailyPtrOutputWithContext(ctx context.Context) PolicyFileShareRetentionDailyPtrOutput {
	return o
}

func (o PolicyFileShareRetentionDailyPtrOutput) Elem() PolicyFileShareRetentionDailyOutput {
	return o.ApplyT(func(v *PolicyFileShareRetentionDaily) PolicyFileShareRetentionDaily { return *v }).(PolicyFileShareRetentionDailyOutput)
}

// The number of daily backups to keep. Must be between `1` and `180` (inclusive)
func (o PolicyFileShareRetentionDailyPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyFileShareRetentionDaily) *int {
		if v == nil {
			return nil
		}
		return &v.Count
	}).(pulumi.IntPtrOutput)
}

type PolicyVMBackup struct {
	// Sets the backup frequency. Must be either `Daily` or`Weekly`.
	Frequency string `pulumi:"frequency"`
	// The time of day to perform the backup in 24hour format.
	Time string `pulumi:"time"`
	// The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
	Weekdays []string `pulumi:"weekdays"`
}

// PolicyVMBackupInput is an input type that accepts PolicyVMBackupArgs and PolicyVMBackupOutput values.
// You can construct a concrete instance of `PolicyVMBackupInput` via:
//
//          PolicyVMBackupArgs{...}
type PolicyVMBackupInput interface {
	pulumi.Input

	ToPolicyVMBackupOutput() PolicyVMBackupOutput
	ToPolicyVMBackupOutputWithContext(context.Context) PolicyVMBackupOutput
}

type PolicyVMBackupArgs struct {
	// Sets the backup frequency. Must be either `Daily` or`Weekly`.
	Frequency pulumi.StringInput `pulumi:"frequency"`
	// The time of day to perform the backup in 24hour format.
	Time pulumi.StringInput `pulumi:"time"`
	// The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
	Weekdays pulumi.StringArrayInput `pulumi:"weekdays"`
}

func (PolicyVMBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVMBackup)(nil)).Elem()
}

func (i PolicyVMBackupArgs) ToPolicyVMBackupOutput() PolicyVMBackupOutput {
	return i.ToPolicyVMBackupOutputWithContext(context.Background())
}

func (i PolicyVMBackupArgs) ToPolicyVMBackupOutputWithContext(ctx context.Context) PolicyVMBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVMBackupOutput)
}

func (i PolicyVMBackupArgs) ToPolicyVMBackupPtrOutput() PolicyVMBackupPtrOutput {
	return i.ToPolicyVMBackupPtrOutputWithContext(context.Background())
}

func (i PolicyVMBackupArgs) ToPolicyVMBackupPtrOutputWithContext(ctx context.Context) PolicyVMBackupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVMBackupOutput).ToPolicyVMBackupPtrOutputWithContext(ctx)
}

// PolicyVMBackupPtrInput is an input type that accepts PolicyVMBackupArgs, PolicyVMBackupPtr and PolicyVMBackupPtrOutput values.
// You can construct a concrete instance of `PolicyVMBackupPtrInput` via:
//
//          PolicyVMBackupArgs{...}
//
//  or:
//
//          nil
type PolicyVMBackupPtrInput interface {
	pulumi.Input

	ToPolicyVMBackupPtrOutput() PolicyVMBackupPtrOutput
	ToPolicyVMBackupPtrOutputWithContext(context.Context) PolicyVMBackupPtrOutput
}

type policyVMBackupPtrType PolicyVMBackupArgs

func PolicyVMBackupPtr(v *PolicyVMBackupArgs) PolicyVMBackupPtrInput {
	return (*policyVMBackupPtrType)(v)
}

func (*policyVMBackupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyVMBackup)(nil)).Elem()
}

func (i *policyVMBackupPtrType) ToPolicyVMBackupPtrOutput() PolicyVMBackupPtrOutput {
	return i.ToPolicyVMBackupPtrOutputWithContext(context.Background())
}

func (i *policyVMBackupPtrType) ToPolicyVMBackupPtrOutputWithContext(ctx context.Context) PolicyVMBackupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVMBackupPtrOutput)
}

type PolicyVMBackupOutput struct{ *pulumi.OutputState }

func (PolicyVMBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVMBackup)(nil)).Elem()
}

func (o PolicyVMBackupOutput) ToPolicyVMBackupOutput() PolicyVMBackupOutput {
	return o
}

func (o PolicyVMBackupOutput) ToPolicyVMBackupOutputWithContext(ctx context.Context) PolicyVMBackupOutput {
	return o
}

func (o PolicyVMBackupOutput) ToPolicyVMBackupPtrOutput() PolicyVMBackupPtrOutput {
	return o.ToPolicyVMBackupPtrOutputWithContext(context.Background())
}

func (o PolicyVMBackupOutput) ToPolicyVMBackupPtrOutputWithContext(ctx context.Context) PolicyVMBackupPtrOutput {
	return o.ApplyT(func(v PolicyVMBackup) *PolicyVMBackup {
		return &v
	}).(PolicyVMBackupPtrOutput)
}

// Sets the backup frequency. Must be either `Daily` or`Weekly`.
func (o PolicyVMBackupOutput) Frequency() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyVMBackup) string { return v.Frequency }).(pulumi.StringOutput)
}

// The time of day to perform the backup in 24hour format.
func (o PolicyVMBackupOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyVMBackup) string { return v.Time }).(pulumi.StringOutput)
}

// The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
func (o PolicyVMBackupOutput) Weekdays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyVMBackup) []string { return v.Weekdays }).(pulumi.StringArrayOutput)
}

type PolicyVMBackupPtrOutput struct{ *pulumi.OutputState }

func (PolicyVMBackupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyVMBackup)(nil)).Elem()
}

func (o PolicyVMBackupPtrOutput) ToPolicyVMBackupPtrOutput() PolicyVMBackupPtrOutput {
	return o
}

func (o PolicyVMBackupPtrOutput) ToPolicyVMBackupPtrOutputWithContext(ctx context.Context) PolicyVMBackupPtrOutput {
	return o
}

func (o PolicyVMBackupPtrOutput) Elem() PolicyVMBackupOutput {
	return o.ApplyT(func(v *PolicyVMBackup) PolicyVMBackup { return *v }).(PolicyVMBackupOutput)
}

// Sets the backup frequency. Must be either `Daily` or`Weekly`.
func (o PolicyVMBackupPtrOutput) Frequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyVMBackup) *string {
		if v == nil {
			return nil
		}
		return &v.Frequency
	}).(pulumi.StringPtrOutput)
}

// The time of day to perform the backup in 24hour format.
func (o PolicyVMBackupPtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyVMBackup) *string {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(pulumi.StringPtrOutput)
}

// The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
func (o PolicyVMBackupPtrOutput) Weekdays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyVMBackup) []string {
		if v == nil {
			return nil
		}
		return v.Weekdays
	}).(pulumi.StringArrayOutput)
}

type PolicyVMRetentionDaily struct {
	// The number of yearly backups to keep. Must be between `1` and `9999`
	Count int `pulumi:"count"`
}

// PolicyVMRetentionDailyInput is an input type that accepts PolicyVMRetentionDailyArgs and PolicyVMRetentionDailyOutput values.
// You can construct a concrete instance of `PolicyVMRetentionDailyInput` via:
//
//          PolicyVMRetentionDailyArgs{...}
type PolicyVMRetentionDailyInput interface {
	pulumi.Input

	ToPolicyVMRetentionDailyOutput() PolicyVMRetentionDailyOutput
	ToPolicyVMRetentionDailyOutputWithContext(context.Context) PolicyVMRetentionDailyOutput
}

type PolicyVMRetentionDailyArgs struct {
	// The number of yearly backups to keep. Must be between `1` and `9999`
	Count pulumi.IntInput `pulumi:"count"`
}

func (PolicyVMRetentionDailyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVMRetentionDaily)(nil)).Elem()
}

func (i PolicyVMRetentionDailyArgs) ToPolicyVMRetentionDailyOutput() PolicyVMRetentionDailyOutput {
	return i.ToPolicyVMRetentionDailyOutputWithContext(context.Background())
}

func (i PolicyVMRetentionDailyArgs) ToPolicyVMRetentionDailyOutputWithContext(ctx context.Context) PolicyVMRetentionDailyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVMRetentionDailyOutput)
}

func (i PolicyVMRetentionDailyArgs) ToPolicyVMRetentionDailyPtrOutput() PolicyVMRetentionDailyPtrOutput {
	return i.ToPolicyVMRetentionDailyPtrOutputWithContext(context.Background())
}

func (i PolicyVMRetentionDailyArgs) ToPolicyVMRetentionDailyPtrOutputWithContext(ctx context.Context) PolicyVMRetentionDailyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVMRetentionDailyOutput).ToPolicyVMRetentionDailyPtrOutputWithContext(ctx)
}

// PolicyVMRetentionDailyPtrInput is an input type that accepts PolicyVMRetentionDailyArgs, PolicyVMRetentionDailyPtr and PolicyVMRetentionDailyPtrOutput values.
// You can construct a concrete instance of `PolicyVMRetentionDailyPtrInput` via:
//
//          PolicyVMRetentionDailyArgs{...}
//
//  or:
//
//          nil
type PolicyVMRetentionDailyPtrInput interface {
	pulumi.Input

	ToPolicyVMRetentionDailyPtrOutput() PolicyVMRetentionDailyPtrOutput
	ToPolicyVMRetentionDailyPtrOutputWithContext(context.Context) PolicyVMRetentionDailyPtrOutput
}

type policyVMRetentionDailyPtrType PolicyVMRetentionDailyArgs

func PolicyVMRetentionDailyPtr(v *PolicyVMRetentionDailyArgs) PolicyVMRetentionDailyPtrInput {
	return (*policyVMRetentionDailyPtrType)(v)
}

func (*policyVMRetentionDailyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyVMRetentionDaily)(nil)).Elem()
}

func (i *policyVMRetentionDailyPtrType) ToPolicyVMRetentionDailyPtrOutput() PolicyVMRetentionDailyPtrOutput {
	return i.ToPolicyVMRetentionDailyPtrOutputWithContext(context.Background())
}

func (i *policyVMRetentionDailyPtrType) ToPolicyVMRetentionDailyPtrOutputWithContext(ctx context.Context) PolicyVMRetentionDailyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVMRetentionDailyPtrOutput)
}

type PolicyVMRetentionDailyOutput struct{ *pulumi.OutputState }

func (PolicyVMRetentionDailyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVMRetentionDaily)(nil)).Elem()
}

func (o PolicyVMRetentionDailyOutput) ToPolicyVMRetentionDailyOutput() PolicyVMRetentionDailyOutput {
	return o
}

func (o PolicyVMRetentionDailyOutput) ToPolicyVMRetentionDailyOutputWithContext(ctx context.Context) PolicyVMRetentionDailyOutput {
	return o
}

func (o PolicyVMRetentionDailyOutput) ToPolicyVMRetentionDailyPtrOutput() PolicyVMRetentionDailyPtrOutput {
	return o.ToPolicyVMRetentionDailyPtrOutputWithContext(context.Background())
}

func (o PolicyVMRetentionDailyOutput) ToPolicyVMRetentionDailyPtrOutputWithContext(ctx context.Context) PolicyVMRetentionDailyPtrOutput {
	return o.ApplyT(func(v PolicyVMRetentionDaily) *PolicyVMRetentionDaily {
		return &v
	}).(PolicyVMRetentionDailyPtrOutput)
}

// The number of yearly backups to keep. Must be between `1` and `9999`
func (o PolicyVMRetentionDailyOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyVMRetentionDaily) int { return v.Count }).(pulumi.IntOutput)
}

type PolicyVMRetentionDailyPtrOutput struct{ *pulumi.OutputState }

func (PolicyVMRetentionDailyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyVMRetentionDaily)(nil)).Elem()
}

func (o PolicyVMRetentionDailyPtrOutput) ToPolicyVMRetentionDailyPtrOutput() PolicyVMRetentionDailyPtrOutput {
	return o
}

func (o PolicyVMRetentionDailyPtrOutput) ToPolicyVMRetentionDailyPtrOutputWithContext(ctx context.Context) PolicyVMRetentionDailyPtrOutput {
	return o
}

func (o PolicyVMRetentionDailyPtrOutput) Elem() PolicyVMRetentionDailyOutput {
	return o.ApplyT(func(v *PolicyVMRetentionDaily) PolicyVMRetentionDaily { return *v }).(PolicyVMRetentionDailyOutput)
}

// The number of yearly backups to keep. Must be between `1` and `9999`
func (o PolicyVMRetentionDailyPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyVMRetentionDaily) *int {
		if v == nil {
			return nil
		}
		return &v.Count
	}).(pulumi.IntPtrOutput)
}

type PolicyVMRetentionMonthly struct {
	// The number of yearly backups to keep. Must be between `1` and `9999`
	Count int `pulumi:"count"`
	// The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
	Weekdays []string `pulumi:"weekdays"`
	// The weeks of the month to retain backups of. Must be one of `First`, `Second`, `Third`, `Fourth`, `Last`.
	Weeks []string `pulumi:"weeks"`
}

// PolicyVMRetentionMonthlyInput is an input type that accepts PolicyVMRetentionMonthlyArgs and PolicyVMRetentionMonthlyOutput values.
// You can construct a concrete instance of `PolicyVMRetentionMonthlyInput` via:
//
//          PolicyVMRetentionMonthlyArgs{...}
type PolicyVMRetentionMonthlyInput interface {
	pulumi.Input

	ToPolicyVMRetentionMonthlyOutput() PolicyVMRetentionMonthlyOutput
	ToPolicyVMRetentionMonthlyOutputWithContext(context.Context) PolicyVMRetentionMonthlyOutput
}

type PolicyVMRetentionMonthlyArgs struct {
	// The number of yearly backups to keep. Must be between `1` and `9999`
	Count pulumi.IntInput `pulumi:"count"`
	// The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
	Weekdays pulumi.StringArrayInput `pulumi:"weekdays"`
	// The weeks of the month to retain backups of. Must be one of `First`, `Second`, `Third`, `Fourth`, `Last`.
	Weeks pulumi.StringArrayInput `pulumi:"weeks"`
}

func (PolicyVMRetentionMonthlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVMRetentionMonthly)(nil)).Elem()
}

func (i PolicyVMRetentionMonthlyArgs) ToPolicyVMRetentionMonthlyOutput() PolicyVMRetentionMonthlyOutput {
	return i.ToPolicyVMRetentionMonthlyOutputWithContext(context.Background())
}

func (i PolicyVMRetentionMonthlyArgs) ToPolicyVMRetentionMonthlyOutputWithContext(ctx context.Context) PolicyVMRetentionMonthlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVMRetentionMonthlyOutput)
}

func (i PolicyVMRetentionMonthlyArgs) ToPolicyVMRetentionMonthlyPtrOutput() PolicyVMRetentionMonthlyPtrOutput {
	return i.ToPolicyVMRetentionMonthlyPtrOutputWithContext(context.Background())
}

func (i PolicyVMRetentionMonthlyArgs) ToPolicyVMRetentionMonthlyPtrOutputWithContext(ctx context.Context) PolicyVMRetentionMonthlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVMRetentionMonthlyOutput).ToPolicyVMRetentionMonthlyPtrOutputWithContext(ctx)
}

// PolicyVMRetentionMonthlyPtrInput is an input type that accepts PolicyVMRetentionMonthlyArgs, PolicyVMRetentionMonthlyPtr and PolicyVMRetentionMonthlyPtrOutput values.
// You can construct a concrete instance of `PolicyVMRetentionMonthlyPtrInput` via:
//
//          PolicyVMRetentionMonthlyArgs{...}
//
//  or:
//
//          nil
type PolicyVMRetentionMonthlyPtrInput interface {
	pulumi.Input

	ToPolicyVMRetentionMonthlyPtrOutput() PolicyVMRetentionMonthlyPtrOutput
	ToPolicyVMRetentionMonthlyPtrOutputWithContext(context.Context) PolicyVMRetentionMonthlyPtrOutput
}

type policyVMRetentionMonthlyPtrType PolicyVMRetentionMonthlyArgs

func PolicyVMRetentionMonthlyPtr(v *PolicyVMRetentionMonthlyArgs) PolicyVMRetentionMonthlyPtrInput {
	return (*policyVMRetentionMonthlyPtrType)(v)
}

func (*policyVMRetentionMonthlyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyVMRetentionMonthly)(nil)).Elem()
}

func (i *policyVMRetentionMonthlyPtrType) ToPolicyVMRetentionMonthlyPtrOutput() PolicyVMRetentionMonthlyPtrOutput {
	return i.ToPolicyVMRetentionMonthlyPtrOutputWithContext(context.Background())
}

func (i *policyVMRetentionMonthlyPtrType) ToPolicyVMRetentionMonthlyPtrOutputWithContext(ctx context.Context) PolicyVMRetentionMonthlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVMRetentionMonthlyPtrOutput)
}

type PolicyVMRetentionMonthlyOutput struct{ *pulumi.OutputState }

func (PolicyVMRetentionMonthlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVMRetentionMonthly)(nil)).Elem()
}

func (o PolicyVMRetentionMonthlyOutput) ToPolicyVMRetentionMonthlyOutput() PolicyVMRetentionMonthlyOutput {
	return o
}

func (o PolicyVMRetentionMonthlyOutput) ToPolicyVMRetentionMonthlyOutputWithContext(ctx context.Context) PolicyVMRetentionMonthlyOutput {
	return o
}

func (o PolicyVMRetentionMonthlyOutput) ToPolicyVMRetentionMonthlyPtrOutput() PolicyVMRetentionMonthlyPtrOutput {
	return o.ToPolicyVMRetentionMonthlyPtrOutputWithContext(context.Background())
}

func (o PolicyVMRetentionMonthlyOutput) ToPolicyVMRetentionMonthlyPtrOutputWithContext(ctx context.Context) PolicyVMRetentionMonthlyPtrOutput {
	return o.ApplyT(func(v PolicyVMRetentionMonthly) *PolicyVMRetentionMonthly {
		return &v
	}).(PolicyVMRetentionMonthlyPtrOutput)
}

// The number of yearly backups to keep. Must be between `1` and `9999`
func (o PolicyVMRetentionMonthlyOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyVMRetentionMonthly) int { return v.Count }).(pulumi.IntOutput)
}

// The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
func (o PolicyVMRetentionMonthlyOutput) Weekdays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyVMRetentionMonthly) []string { return v.Weekdays }).(pulumi.StringArrayOutput)
}

// The weeks of the month to retain backups of. Must be one of `First`, `Second`, `Third`, `Fourth`, `Last`.
func (o PolicyVMRetentionMonthlyOutput) Weeks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyVMRetentionMonthly) []string { return v.Weeks }).(pulumi.StringArrayOutput)
}

type PolicyVMRetentionMonthlyPtrOutput struct{ *pulumi.OutputState }

func (PolicyVMRetentionMonthlyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyVMRetentionMonthly)(nil)).Elem()
}

func (o PolicyVMRetentionMonthlyPtrOutput) ToPolicyVMRetentionMonthlyPtrOutput() PolicyVMRetentionMonthlyPtrOutput {
	return o
}

func (o PolicyVMRetentionMonthlyPtrOutput) ToPolicyVMRetentionMonthlyPtrOutputWithContext(ctx context.Context) PolicyVMRetentionMonthlyPtrOutput {
	return o
}

func (o PolicyVMRetentionMonthlyPtrOutput) Elem() PolicyVMRetentionMonthlyOutput {
	return o.ApplyT(func(v *PolicyVMRetentionMonthly) PolicyVMRetentionMonthly { return *v }).(PolicyVMRetentionMonthlyOutput)
}

// The number of yearly backups to keep. Must be between `1` and `9999`
func (o PolicyVMRetentionMonthlyPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyVMRetentionMonthly) *int {
		if v == nil {
			return nil
		}
		return &v.Count
	}).(pulumi.IntPtrOutput)
}

// The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
func (o PolicyVMRetentionMonthlyPtrOutput) Weekdays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyVMRetentionMonthly) []string {
		if v == nil {
			return nil
		}
		return v.Weekdays
	}).(pulumi.StringArrayOutput)
}

// The weeks of the month to retain backups of. Must be one of `First`, `Second`, `Third`, `Fourth`, `Last`.
func (o PolicyVMRetentionMonthlyPtrOutput) Weeks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyVMRetentionMonthly) []string {
		if v == nil {
			return nil
		}
		return v.Weeks
	}).(pulumi.StringArrayOutput)
}

type PolicyVMRetentionWeekly struct {
	// The number of yearly backups to keep. Must be between `1` and `9999`
	Count int `pulumi:"count"`
	// The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
	Weekdays []string `pulumi:"weekdays"`
}

// PolicyVMRetentionWeeklyInput is an input type that accepts PolicyVMRetentionWeeklyArgs and PolicyVMRetentionWeeklyOutput values.
// You can construct a concrete instance of `PolicyVMRetentionWeeklyInput` via:
//
//          PolicyVMRetentionWeeklyArgs{...}
type PolicyVMRetentionWeeklyInput interface {
	pulumi.Input

	ToPolicyVMRetentionWeeklyOutput() PolicyVMRetentionWeeklyOutput
	ToPolicyVMRetentionWeeklyOutputWithContext(context.Context) PolicyVMRetentionWeeklyOutput
}

type PolicyVMRetentionWeeklyArgs struct {
	// The number of yearly backups to keep. Must be between `1` and `9999`
	Count pulumi.IntInput `pulumi:"count"`
	// The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
	Weekdays pulumi.StringArrayInput `pulumi:"weekdays"`
}

func (PolicyVMRetentionWeeklyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVMRetentionWeekly)(nil)).Elem()
}

func (i PolicyVMRetentionWeeklyArgs) ToPolicyVMRetentionWeeklyOutput() PolicyVMRetentionWeeklyOutput {
	return i.ToPolicyVMRetentionWeeklyOutputWithContext(context.Background())
}

func (i PolicyVMRetentionWeeklyArgs) ToPolicyVMRetentionWeeklyOutputWithContext(ctx context.Context) PolicyVMRetentionWeeklyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVMRetentionWeeklyOutput)
}

func (i PolicyVMRetentionWeeklyArgs) ToPolicyVMRetentionWeeklyPtrOutput() PolicyVMRetentionWeeklyPtrOutput {
	return i.ToPolicyVMRetentionWeeklyPtrOutputWithContext(context.Background())
}

func (i PolicyVMRetentionWeeklyArgs) ToPolicyVMRetentionWeeklyPtrOutputWithContext(ctx context.Context) PolicyVMRetentionWeeklyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVMRetentionWeeklyOutput).ToPolicyVMRetentionWeeklyPtrOutputWithContext(ctx)
}

// PolicyVMRetentionWeeklyPtrInput is an input type that accepts PolicyVMRetentionWeeklyArgs, PolicyVMRetentionWeeklyPtr and PolicyVMRetentionWeeklyPtrOutput values.
// You can construct a concrete instance of `PolicyVMRetentionWeeklyPtrInput` via:
//
//          PolicyVMRetentionWeeklyArgs{...}
//
//  or:
//
//          nil
type PolicyVMRetentionWeeklyPtrInput interface {
	pulumi.Input

	ToPolicyVMRetentionWeeklyPtrOutput() PolicyVMRetentionWeeklyPtrOutput
	ToPolicyVMRetentionWeeklyPtrOutputWithContext(context.Context) PolicyVMRetentionWeeklyPtrOutput
}

type policyVMRetentionWeeklyPtrType PolicyVMRetentionWeeklyArgs

func PolicyVMRetentionWeeklyPtr(v *PolicyVMRetentionWeeklyArgs) PolicyVMRetentionWeeklyPtrInput {
	return (*policyVMRetentionWeeklyPtrType)(v)
}

func (*policyVMRetentionWeeklyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyVMRetentionWeekly)(nil)).Elem()
}

func (i *policyVMRetentionWeeklyPtrType) ToPolicyVMRetentionWeeklyPtrOutput() PolicyVMRetentionWeeklyPtrOutput {
	return i.ToPolicyVMRetentionWeeklyPtrOutputWithContext(context.Background())
}

func (i *policyVMRetentionWeeklyPtrType) ToPolicyVMRetentionWeeklyPtrOutputWithContext(ctx context.Context) PolicyVMRetentionWeeklyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVMRetentionWeeklyPtrOutput)
}

type PolicyVMRetentionWeeklyOutput struct{ *pulumi.OutputState }

func (PolicyVMRetentionWeeklyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVMRetentionWeekly)(nil)).Elem()
}

func (o PolicyVMRetentionWeeklyOutput) ToPolicyVMRetentionWeeklyOutput() PolicyVMRetentionWeeklyOutput {
	return o
}

func (o PolicyVMRetentionWeeklyOutput) ToPolicyVMRetentionWeeklyOutputWithContext(ctx context.Context) PolicyVMRetentionWeeklyOutput {
	return o
}

func (o PolicyVMRetentionWeeklyOutput) ToPolicyVMRetentionWeeklyPtrOutput() PolicyVMRetentionWeeklyPtrOutput {
	return o.ToPolicyVMRetentionWeeklyPtrOutputWithContext(context.Background())
}

func (o PolicyVMRetentionWeeklyOutput) ToPolicyVMRetentionWeeklyPtrOutputWithContext(ctx context.Context) PolicyVMRetentionWeeklyPtrOutput {
	return o.ApplyT(func(v PolicyVMRetentionWeekly) *PolicyVMRetentionWeekly {
		return &v
	}).(PolicyVMRetentionWeeklyPtrOutput)
}

// The number of yearly backups to keep. Must be between `1` and `9999`
func (o PolicyVMRetentionWeeklyOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyVMRetentionWeekly) int { return v.Count }).(pulumi.IntOutput)
}

// The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
func (o PolicyVMRetentionWeeklyOutput) Weekdays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyVMRetentionWeekly) []string { return v.Weekdays }).(pulumi.StringArrayOutput)
}

type PolicyVMRetentionWeeklyPtrOutput struct{ *pulumi.OutputState }

func (PolicyVMRetentionWeeklyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyVMRetentionWeekly)(nil)).Elem()
}

func (o PolicyVMRetentionWeeklyPtrOutput) ToPolicyVMRetentionWeeklyPtrOutput() PolicyVMRetentionWeeklyPtrOutput {
	return o
}

func (o PolicyVMRetentionWeeklyPtrOutput) ToPolicyVMRetentionWeeklyPtrOutputWithContext(ctx context.Context) PolicyVMRetentionWeeklyPtrOutput {
	return o
}

func (o PolicyVMRetentionWeeklyPtrOutput) Elem() PolicyVMRetentionWeeklyOutput {
	return o.ApplyT(func(v *PolicyVMRetentionWeekly) PolicyVMRetentionWeekly { return *v }).(PolicyVMRetentionWeeklyOutput)
}

// The number of yearly backups to keep. Must be between `1` and `9999`
func (o PolicyVMRetentionWeeklyPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyVMRetentionWeekly) *int {
		if v == nil {
			return nil
		}
		return &v.Count
	}).(pulumi.IntPtrOutput)
}

// The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
func (o PolicyVMRetentionWeeklyPtrOutput) Weekdays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyVMRetentionWeekly) []string {
		if v == nil {
			return nil
		}
		return v.Weekdays
	}).(pulumi.StringArrayOutput)
}

type PolicyVMRetentionYearly struct {
	// The number of yearly backups to keep. Must be between `1` and `9999`
	Count int `pulumi:"count"`
	// The months of the year to retain backups of. Must be one of `January`, `February`, `March`, `April`, `May`, `June`, `July`, `Augest`, `September`, `October`, `November` and `December`.
	Months []string `pulumi:"months"`
	// The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
	Weekdays []string `pulumi:"weekdays"`
	// The weeks of the month to retain backups of. Must be one of `First`, `Second`, `Third`, `Fourth`, `Last`.
	Weeks []string `pulumi:"weeks"`
}

// PolicyVMRetentionYearlyInput is an input type that accepts PolicyVMRetentionYearlyArgs and PolicyVMRetentionYearlyOutput values.
// You can construct a concrete instance of `PolicyVMRetentionYearlyInput` via:
//
//          PolicyVMRetentionYearlyArgs{...}
type PolicyVMRetentionYearlyInput interface {
	pulumi.Input

	ToPolicyVMRetentionYearlyOutput() PolicyVMRetentionYearlyOutput
	ToPolicyVMRetentionYearlyOutputWithContext(context.Context) PolicyVMRetentionYearlyOutput
}

type PolicyVMRetentionYearlyArgs struct {
	// The number of yearly backups to keep. Must be between `1` and `9999`
	Count pulumi.IntInput `pulumi:"count"`
	// The months of the year to retain backups of. Must be one of `January`, `February`, `March`, `April`, `May`, `June`, `July`, `Augest`, `September`, `October`, `November` and `December`.
	Months pulumi.StringArrayInput `pulumi:"months"`
	// The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
	Weekdays pulumi.StringArrayInput `pulumi:"weekdays"`
	// The weeks of the month to retain backups of. Must be one of `First`, `Second`, `Third`, `Fourth`, `Last`.
	Weeks pulumi.StringArrayInput `pulumi:"weeks"`
}

func (PolicyVMRetentionYearlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVMRetentionYearly)(nil)).Elem()
}

func (i PolicyVMRetentionYearlyArgs) ToPolicyVMRetentionYearlyOutput() PolicyVMRetentionYearlyOutput {
	return i.ToPolicyVMRetentionYearlyOutputWithContext(context.Background())
}

func (i PolicyVMRetentionYearlyArgs) ToPolicyVMRetentionYearlyOutputWithContext(ctx context.Context) PolicyVMRetentionYearlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVMRetentionYearlyOutput)
}

func (i PolicyVMRetentionYearlyArgs) ToPolicyVMRetentionYearlyPtrOutput() PolicyVMRetentionYearlyPtrOutput {
	return i.ToPolicyVMRetentionYearlyPtrOutputWithContext(context.Background())
}

func (i PolicyVMRetentionYearlyArgs) ToPolicyVMRetentionYearlyPtrOutputWithContext(ctx context.Context) PolicyVMRetentionYearlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVMRetentionYearlyOutput).ToPolicyVMRetentionYearlyPtrOutputWithContext(ctx)
}

// PolicyVMRetentionYearlyPtrInput is an input type that accepts PolicyVMRetentionYearlyArgs, PolicyVMRetentionYearlyPtr and PolicyVMRetentionYearlyPtrOutput values.
// You can construct a concrete instance of `PolicyVMRetentionYearlyPtrInput` via:
//
//          PolicyVMRetentionYearlyArgs{...}
//
//  or:
//
//          nil
type PolicyVMRetentionYearlyPtrInput interface {
	pulumi.Input

	ToPolicyVMRetentionYearlyPtrOutput() PolicyVMRetentionYearlyPtrOutput
	ToPolicyVMRetentionYearlyPtrOutputWithContext(context.Context) PolicyVMRetentionYearlyPtrOutput
}

type policyVMRetentionYearlyPtrType PolicyVMRetentionYearlyArgs

func PolicyVMRetentionYearlyPtr(v *PolicyVMRetentionYearlyArgs) PolicyVMRetentionYearlyPtrInput {
	return (*policyVMRetentionYearlyPtrType)(v)
}

func (*policyVMRetentionYearlyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyVMRetentionYearly)(nil)).Elem()
}

func (i *policyVMRetentionYearlyPtrType) ToPolicyVMRetentionYearlyPtrOutput() PolicyVMRetentionYearlyPtrOutput {
	return i.ToPolicyVMRetentionYearlyPtrOutputWithContext(context.Background())
}

func (i *policyVMRetentionYearlyPtrType) ToPolicyVMRetentionYearlyPtrOutputWithContext(ctx context.Context) PolicyVMRetentionYearlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVMRetentionYearlyPtrOutput)
}

type PolicyVMRetentionYearlyOutput struct{ *pulumi.OutputState }

func (PolicyVMRetentionYearlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyVMRetentionYearly)(nil)).Elem()
}

func (o PolicyVMRetentionYearlyOutput) ToPolicyVMRetentionYearlyOutput() PolicyVMRetentionYearlyOutput {
	return o
}

func (o PolicyVMRetentionYearlyOutput) ToPolicyVMRetentionYearlyOutputWithContext(ctx context.Context) PolicyVMRetentionYearlyOutput {
	return o
}

func (o PolicyVMRetentionYearlyOutput) ToPolicyVMRetentionYearlyPtrOutput() PolicyVMRetentionYearlyPtrOutput {
	return o.ToPolicyVMRetentionYearlyPtrOutputWithContext(context.Background())
}

func (o PolicyVMRetentionYearlyOutput) ToPolicyVMRetentionYearlyPtrOutputWithContext(ctx context.Context) PolicyVMRetentionYearlyPtrOutput {
	return o.ApplyT(func(v PolicyVMRetentionYearly) *PolicyVMRetentionYearly {
		return &v
	}).(PolicyVMRetentionYearlyPtrOutput)
}

// The number of yearly backups to keep. Must be between `1` and `9999`
func (o PolicyVMRetentionYearlyOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyVMRetentionYearly) int { return v.Count }).(pulumi.IntOutput)
}

// The months of the year to retain backups of. Must be one of `January`, `February`, `March`, `April`, `May`, `June`, `July`, `Augest`, `September`, `October`, `November` and `December`.
func (o PolicyVMRetentionYearlyOutput) Months() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyVMRetentionYearly) []string { return v.Months }).(pulumi.StringArrayOutput)
}

// The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
func (o PolicyVMRetentionYearlyOutput) Weekdays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyVMRetentionYearly) []string { return v.Weekdays }).(pulumi.StringArrayOutput)
}

// The weeks of the month to retain backups of. Must be one of `First`, `Second`, `Third`, `Fourth`, `Last`.
func (o PolicyVMRetentionYearlyOutput) Weeks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyVMRetentionYearly) []string { return v.Weeks }).(pulumi.StringArrayOutput)
}

type PolicyVMRetentionYearlyPtrOutput struct{ *pulumi.OutputState }

func (PolicyVMRetentionYearlyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyVMRetentionYearly)(nil)).Elem()
}

func (o PolicyVMRetentionYearlyPtrOutput) ToPolicyVMRetentionYearlyPtrOutput() PolicyVMRetentionYearlyPtrOutput {
	return o
}

func (o PolicyVMRetentionYearlyPtrOutput) ToPolicyVMRetentionYearlyPtrOutputWithContext(ctx context.Context) PolicyVMRetentionYearlyPtrOutput {
	return o
}

func (o PolicyVMRetentionYearlyPtrOutput) Elem() PolicyVMRetentionYearlyOutput {
	return o.ApplyT(func(v *PolicyVMRetentionYearly) PolicyVMRetentionYearly { return *v }).(PolicyVMRetentionYearlyOutput)
}

// The number of yearly backups to keep. Must be between `1` and `9999`
func (o PolicyVMRetentionYearlyPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyVMRetentionYearly) *int {
		if v == nil {
			return nil
		}
		return &v.Count
	}).(pulumi.IntPtrOutput)
}

// The months of the year to retain backups of. Must be one of `January`, `February`, `March`, `April`, `May`, `June`, `July`, `Augest`, `September`, `October`, `November` and `December`.
func (o PolicyVMRetentionYearlyPtrOutput) Months() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyVMRetentionYearly) []string {
		if v == nil {
			return nil
		}
		return v.Months
	}).(pulumi.StringArrayOutput)
}

// The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
func (o PolicyVMRetentionYearlyPtrOutput) Weekdays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyVMRetentionYearly) []string {
		if v == nil {
			return nil
		}
		return v.Weekdays
	}).(pulumi.StringArrayOutput)
}

// The weeks of the month to retain backups of. Must be one of `First`, `Second`, `Third`, `Fourth`, `Last`.
func (o PolicyVMRetentionYearlyPtrOutput) Weeks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyVMRetentionYearly) []string {
		if v == nil {
			return nil
		}
		return v.Weeks
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(PolicyFileShareBackupOutput{})
	pulumi.RegisterOutputType(PolicyFileShareBackupPtrOutput{})
	pulumi.RegisterOutputType(PolicyFileShareRetentionDailyOutput{})
	pulumi.RegisterOutputType(PolicyFileShareRetentionDailyPtrOutput{})
	pulumi.RegisterOutputType(PolicyVMBackupOutput{})
	pulumi.RegisterOutputType(PolicyVMBackupPtrOutput{})
	pulumi.RegisterOutputType(PolicyVMRetentionDailyOutput{})
	pulumi.RegisterOutputType(PolicyVMRetentionDailyPtrOutput{})
	pulumi.RegisterOutputType(PolicyVMRetentionMonthlyOutput{})
	pulumi.RegisterOutputType(PolicyVMRetentionMonthlyPtrOutput{})
	pulumi.RegisterOutputType(PolicyVMRetentionWeeklyOutput{})
	pulumi.RegisterOutputType(PolicyVMRetentionWeeklyPtrOutput{})
	pulumi.RegisterOutputType(PolicyVMRetentionYearlyOutput{})
	pulumi.RegisterOutputType(PolicyVMRetentionYearlyPtrOutput{})
}
