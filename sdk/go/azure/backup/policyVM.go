// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package backup

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an Azure Backup VM Backup Policy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/backup"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/recoveryservices"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleVault, err := recoveryservices.NewVault(ctx, "exampleVault", &recoveryservices.VaultArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				Sku:               pulumi.String("Standard"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = backup.NewPolicyVM(ctx, "examplePolicyVM", &backup.PolicyVMArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				RecoveryVaultName: exampleVault.Name,
//				Timezone:          pulumi.String("UTC"),
//				Backup: &backup.PolicyVMBackupArgs{
//					Frequency: pulumi.String("Daily"),
//					Time:      pulumi.String("23:00"),
//				},
//				RetentionDaily: &backup.PolicyVMRetentionDailyArgs{
//					Count: pulumi.Int(10),
//				},
//				RetentionWeekly: &backup.PolicyVMRetentionWeeklyArgs{
//					Count: pulumi.Int(42),
//					Weekdays: pulumi.StringArray{
//						pulumi.String("Sunday"),
//						pulumi.String("Wednesday"),
//						pulumi.String("Friday"),
//						pulumi.String("Saturday"),
//					},
//				},
//				RetentionMonthly: &backup.PolicyVMRetentionMonthlyArgs{
//					Count: pulumi.Int(7),
//					Weekdays: pulumi.StringArray{
//						pulumi.String("Sunday"),
//						pulumi.String("Wednesday"),
//					},
//					Weeks: pulumi.StringArray{
//						pulumi.String("First"),
//						pulumi.String("Last"),
//					},
//				},
//				RetentionYearly: &backup.PolicyVMRetentionYearlyArgs{
//					Count: pulumi.Int(77),
//					Weekdays: pulumi.StringArray{
//						pulumi.String("Sunday"),
//					},
//					Weeks: pulumi.StringArray{
//						pulumi.String("Last"),
//					},
//					Months: pulumi.StringArray{
//						pulumi.String("January"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// VM Backup Policies can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:backup/policyVM:PolicyVM policy1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.RecoveryServices/vaults/example-recovery-vault/backupPolicies/policy1
//
// ```
type PolicyVM struct {
	pulumi.CustomResourceState

	// Configures the Policy backup frequency, times & days as documented in the `backup` block below.
	Backup PolicyVMBackupOutput `pulumi:"backup"`
	// Specifies the instant restore resource group name as documented in the `instantRestoreResourceGroup` block below.
	InstantRestoreResourceGroup PolicyVMInstantRestoreResourceGroupPtrOutput `pulumi:"instantRestoreResourceGroup"`
	// Specifies the instant restore retention range in days. Possible values are between `1` and `5` when `policyType` is `V1`, and `1` to `30` when `policyType` is `V2`.
	InstantRestoreRetentionDays pulumi.IntOutput `pulumi:"instantRestoreRetentionDays"`
	// Specifies the name of the Backup Policy. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Type of the Backup Policy. Possible values are `V1` and `V2` where `V2` stands for the Enhanced Policy. Defaults to `V1`. Changing this forces a new resource to be created.
	PolicyType pulumi.StringPtrOutput `pulumi:"policyType"`
	// Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
	RecoveryVaultName pulumi.StringOutput `pulumi:"recoveryVaultName"`
	// The name of the resource group in which to create the policy. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// Configures the policy daily retention as documented in the `retentionDaily` block below. Required when backup frequency is `Daily`.
	RetentionDaily PolicyVMRetentionDailyPtrOutput `pulumi:"retentionDaily"`
	// Configures the policy monthly retention as documented in the `retentionMonthly` block below.
	RetentionMonthly PolicyVMRetentionMonthlyPtrOutput `pulumi:"retentionMonthly"`
	// Configures the policy weekly retention as documented in the `retentionWeekly` block below. Required when backup frequency is `Weekly`.
	RetentionWeekly PolicyVMRetentionWeeklyPtrOutput `pulumi:"retentionWeekly"`
	// Configures the policy yearly retention as documented in the `retentionYearly` block below.
	RetentionYearly PolicyVMRetentionYearlyPtrOutput `pulumi:"retentionYearly"`
	// Specifies the timezone. [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/). Defaults to `UTC`
	Timezone pulumi.StringPtrOutput `pulumi:"timezone"`
}

// NewPolicyVM registers a new resource with the given unique name, arguments, and options.
func NewPolicyVM(ctx *pulumi.Context,
	name string, args *PolicyVMArgs, opts ...pulumi.ResourceOption) (*PolicyVM, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Backup == nil {
		return nil, errors.New("invalid value for required argument 'Backup'")
	}
	if args.RecoveryVaultName == nil {
		return nil, errors.New("invalid value for required argument 'RecoveryVaultName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PolicyVM
	err := ctx.RegisterResource("azure:backup/policyVM:PolicyVM", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyVM gets an existing PolicyVM resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyVM(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyVMState, opts ...pulumi.ResourceOption) (*PolicyVM, error) {
	var resource PolicyVM
	err := ctx.ReadResource("azure:backup/policyVM:PolicyVM", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyVM resources.
type policyVMState struct {
	// Configures the Policy backup frequency, times & days as documented in the `backup` block below.
	Backup *PolicyVMBackup `pulumi:"backup"`
	// Specifies the instant restore resource group name as documented in the `instantRestoreResourceGroup` block below.
	InstantRestoreResourceGroup *PolicyVMInstantRestoreResourceGroup `pulumi:"instantRestoreResourceGroup"`
	// Specifies the instant restore retention range in days. Possible values are between `1` and `5` when `policyType` is `V1`, and `1` to `30` when `policyType` is `V2`.
	InstantRestoreRetentionDays *int `pulumi:"instantRestoreRetentionDays"`
	// Specifies the name of the Backup Policy. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Type of the Backup Policy. Possible values are `V1` and `V2` where `V2` stands for the Enhanced Policy. Defaults to `V1`. Changing this forces a new resource to be created.
	PolicyType *string `pulumi:"policyType"`
	// Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
	RecoveryVaultName *string `pulumi:"recoveryVaultName"`
	// The name of the resource group in which to create the policy. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// Configures the policy daily retention as documented in the `retentionDaily` block below. Required when backup frequency is `Daily`.
	RetentionDaily *PolicyVMRetentionDaily `pulumi:"retentionDaily"`
	// Configures the policy monthly retention as documented in the `retentionMonthly` block below.
	RetentionMonthly *PolicyVMRetentionMonthly `pulumi:"retentionMonthly"`
	// Configures the policy weekly retention as documented in the `retentionWeekly` block below. Required when backup frequency is `Weekly`.
	RetentionWeekly *PolicyVMRetentionWeekly `pulumi:"retentionWeekly"`
	// Configures the policy yearly retention as documented in the `retentionYearly` block below.
	RetentionYearly *PolicyVMRetentionYearly `pulumi:"retentionYearly"`
	// Specifies the timezone. [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/). Defaults to `UTC`
	Timezone *string `pulumi:"timezone"`
}

type PolicyVMState struct {
	// Configures the Policy backup frequency, times & days as documented in the `backup` block below.
	Backup PolicyVMBackupPtrInput
	// Specifies the instant restore resource group name as documented in the `instantRestoreResourceGroup` block below.
	InstantRestoreResourceGroup PolicyVMInstantRestoreResourceGroupPtrInput
	// Specifies the instant restore retention range in days. Possible values are between `1` and `5` when `policyType` is `V1`, and `1` to `30` when `policyType` is `V2`.
	InstantRestoreRetentionDays pulumi.IntPtrInput
	// Specifies the name of the Backup Policy. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Type of the Backup Policy. Possible values are `V1` and `V2` where `V2` stands for the Enhanced Policy. Defaults to `V1`. Changing this forces a new resource to be created.
	PolicyType pulumi.StringPtrInput
	// Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
	RecoveryVaultName pulumi.StringPtrInput
	// The name of the resource group in which to create the policy. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// Configures the policy daily retention as documented in the `retentionDaily` block below. Required when backup frequency is `Daily`.
	RetentionDaily PolicyVMRetentionDailyPtrInput
	// Configures the policy monthly retention as documented in the `retentionMonthly` block below.
	RetentionMonthly PolicyVMRetentionMonthlyPtrInput
	// Configures the policy weekly retention as documented in the `retentionWeekly` block below. Required when backup frequency is `Weekly`.
	RetentionWeekly PolicyVMRetentionWeeklyPtrInput
	// Configures the policy yearly retention as documented in the `retentionYearly` block below.
	RetentionYearly PolicyVMRetentionYearlyPtrInput
	// Specifies the timezone. [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/). Defaults to `UTC`
	Timezone pulumi.StringPtrInput
}

func (PolicyVMState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyVMState)(nil)).Elem()
}

type policyVMArgs struct {
	// Configures the Policy backup frequency, times & days as documented in the `backup` block below.
	Backup PolicyVMBackup `pulumi:"backup"`
	// Specifies the instant restore resource group name as documented in the `instantRestoreResourceGroup` block below.
	InstantRestoreResourceGroup *PolicyVMInstantRestoreResourceGroup `pulumi:"instantRestoreResourceGroup"`
	// Specifies the instant restore retention range in days. Possible values are between `1` and `5` when `policyType` is `V1`, and `1` to `30` when `policyType` is `V2`.
	InstantRestoreRetentionDays *int `pulumi:"instantRestoreRetentionDays"`
	// Specifies the name of the Backup Policy. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Type of the Backup Policy. Possible values are `V1` and `V2` where `V2` stands for the Enhanced Policy. Defaults to `V1`. Changing this forces a new resource to be created.
	PolicyType *string `pulumi:"policyType"`
	// Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
	RecoveryVaultName string `pulumi:"recoveryVaultName"`
	// The name of the resource group in which to create the policy. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Configures the policy daily retention as documented in the `retentionDaily` block below. Required when backup frequency is `Daily`.
	RetentionDaily *PolicyVMRetentionDaily `pulumi:"retentionDaily"`
	// Configures the policy monthly retention as documented in the `retentionMonthly` block below.
	RetentionMonthly *PolicyVMRetentionMonthly `pulumi:"retentionMonthly"`
	// Configures the policy weekly retention as documented in the `retentionWeekly` block below. Required when backup frequency is `Weekly`.
	RetentionWeekly *PolicyVMRetentionWeekly `pulumi:"retentionWeekly"`
	// Configures the policy yearly retention as documented in the `retentionYearly` block below.
	RetentionYearly *PolicyVMRetentionYearly `pulumi:"retentionYearly"`
	// Specifies the timezone. [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/). Defaults to `UTC`
	Timezone *string `pulumi:"timezone"`
}

// The set of arguments for constructing a PolicyVM resource.
type PolicyVMArgs struct {
	// Configures the Policy backup frequency, times & days as documented in the `backup` block below.
	Backup PolicyVMBackupInput
	// Specifies the instant restore resource group name as documented in the `instantRestoreResourceGroup` block below.
	InstantRestoreResourceGroup PolicyVMInstantRestoreResourceGroupPtrInput
	// Specifies the instant restore retention range in days. Possible values are between `1` and `5` when `policyType` is `V1`, and `1` to `30` when `policyType` is `V2`.
	InstantRestoreRetentionDays pulumi.IntPtrInput
	// Specifies the name of the Backup Policy. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Type of the Backup Policy. Possible values are `V1` and `V2` where `V2` stands for the Enhanced Policy. Defaults to `V1`. Changing this forces a new resource to be created.
	PolicyType pulumi.StringPtrInput
	// Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
	RecoveryVaultName pulumi.StringInput
	// The name of the resource group in which to create the policy. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// Configures the policy daily retention as documented in the `retentionDaily` block below. Required when backup frequency is `Daily`.
	RetentionDaily PolicyVMRetentionDailyPtrInput
	// Configures the policy monthly retention as documented in the `retentionMonthly` block below.
	RetentionMonthly PolicyVMRetentionMonthlyPtrInput
	// Configures the policy weekly retention as documented in the `retentionWeekly` block below. Required when backup frequency is `Weekly`.
	RetentionWeekly PolicyVMRetentionWeeklyPtrInput
	// Configures the policy yearly retention as documented in the `retentionYearly` block below.
	RetentionYearly PolicyVMRetentionYearlyPtrInput
	// Specifies the timezone. [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/). Defaults to `UTC`
	Timezone pulumi.StringPtrInput
}

func (PolicyVMArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyVMArgs)(nil)).Elem()
}

type PolicyVMInput interface {
	pulumi.Input

	ToPolicyVMOutput() PolicyVMOutput
	ToPolicyVMOutputWithContext(ctx context.Context) PolicyVMOutput
}

func (*PolicyVM) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyVM)(nil)).Elem()
}

func (i *PolicyVM) ToPolicyVMOutput() PolicyVMOutput {
	return i.ToPolicyVMOutputWithContext(context.Background())
}

func (i *PolicyVM) ToPolicyVMOutputWithContext(ctx context.Context) PolicyVMOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVMOutput)
}

// PolicyVMArrayInput is an input type that accepts PolicyVMArray and PolicyVMArrayOutput values.
// You can construct a concrete instance of `PolicyVMArrayInput` via:
//
//	PolicyVMArray{ PolicyVMArgs{...} }
type PolicyVMArrayInput interface {
	pulumi.Input

	ToPolicyVMArrayOutput() PolicyVMArrayOutput
	ToPolicyVMArrayOutputWithContext(context.Context) PolicyVMArrayOutput
}

type PolicyVMArray []PolicyVMInput

func (PolicyVMArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyVM)(nil)).Elem()
}

func (i PolicyVMArray) ToPolicyVMArrayOutput() PolicyVMArrayOutput {
	return i.ToPolicyVMArrayOutputWithContext(context.Background())
}

func (i PolicyVMArray) ToPolicyVMArrayOutputWithContext(ctx context.Context) PolicyVMArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVMArrayOutput)
}

// PolicyVMMapInput is an input type that accepts PolicyVMMap and PolicyVMMapOutput values.
// You can construct a concrete instance of `PolicyVMMapInput` via:
//
//	PolicyVMMap{ "key": PolicyVMArgs{...} }
type PolicyVMMapInput interface {
	pulumi.Input

	ToPolicyVMMapOutput() PolicyVMMapOutput
	ToPolicyVMMapOutputWithContext(context.Context) PolicyVMMapOutput
}

type PolicyVMMap map[string]PolicyVMInput

func (PolicyVMMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyVM)(nil)).Elem()
}

func (i PolicyVMMap) ToPolicyVMMapOutput() PolicyVMMapOutput {
	return i.ToPolicyVMMapOutputWithContext(context.Background())
}

func (i PolicyVMMap) ToPolicyVMMapOutputWithContext(ctx context.Context) PolicyVMMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyVMMapOutput)
}

type PolicyVMOutput struct{ *pulumi.OutputState }

func (PolicyVMOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyVM)(nil)).Elem()
}

func (o PolicyVMOutput) ToPolicyVMOutput() PolicyVMOutput {
	return o
}

func (o PolicyVMOutput) ToPolicyVMOutputWithContext(ctx context.Context) PolicyVMOutput {
	return o
}

// Configures the Policy backup frequency, times & days as documented in the `backup` block below.
func (o PolicyVMOutput) Backup() PolicyVMBackupOutput {
	return o.ApplyT(func(v *PolicyVM) PolicyVMBackupOutput { return v.Backup }).(PolicyVMBackupOutput)
}

// Specifies the instant restore resource group name as documented in the `instantRestoreResourceGroup` block below.
func (o PolicyVMOutput) InstantRestoreResourceGroup() PolicyVMInstantRestoreResourceGroupPtrOutput {
	return o.ApplyT(func(v *PolicyVM) PolicyVMInstantRestoreResourceGroupPtrOutput { return v.InstantRestoreResourceGroup }).(PolicyVMInstantRestoreResourceGroupPtrOutput)
}

// Specifies the instant restore retention range in days. Possible values are between `1` and `5` when `policyType` is `V1`, and `1` to `30` when `policyType` is `V2`.
func (o PolicyVMOutput) InstantRestoreRetentionDays() pulumi.IntOutput {
	return o.ApplyT(func(v *PolicyVM) pulumi.IntOutput { return v.InstantRestoreRetentionDays }).(pulumi.IntOutput)
}

// Specifies the name of the Backup Policy. Changing this forces a new resource to be created.
func (o PolicyVMOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyVM) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Type of the Backup Policy. Possible values are `V1` and `V2` where `V2` stands for the Enhanced Policy. Defaults to `V1`. Changing this forces a new resource to be created.
func (o PolicyVMOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyVM) pulumi.StringPtrOutput { return v.PolicyType }).(pulumi.StringPtrOutput)
}

// Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
func (o PolicyVMOutput) RecoveryVaultName() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyVM) pulumi.StringOutput { return v.RecoveryVaultName }).(pulumi.StringOutput)
}

// The name of the resource group in which to create the policy. Changing this forces a new resource to be created.
func (o PolicyVMOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *PolicyVM) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// Configures the policy daily retention as documented in the `retentionDaily` block below. Required when backup frequency is `Daily`.
func (o PolicyVMOutput) RetentionDaily() PolicyVMRetentionDailyPtrOutput {
	return o.ApplyT(func(v *PolicyVM) PolicyVMRetentionDailyPtrOutput { return v.RetentionDaily }).(PolicyVMRetentionDailyPtrOutput)
}

// Configures the policy monthly retention as documented in the `retentionMonthly` block below.
func (o PolicyVMOutput) RetentionMonthly() PolicyVMRetentionMonthlyPtrOutput {
	return o.ApplyT(func(v *PolicyVM) PolicyVMRetentionMonthlyPtrOutput { return v.RetentionMonthly }).(PolicyVMRetentionMonthlyPtrOutput)
}

// Configures the policy weekly retention as documented in the `retentionWeekly` block below. Required when backup frequency is `Weekly`.
func (o PolicyVMOutput) RetentionWeekly() PolicyVMRetentionWeeklyPtrOutput {
	return o.ApplyT(func(v *PolicyVM) PolicyVMRetentionWeeklyPtrOutput { return v.RetentionWeekly }).(PolicyVMRetentionWeeklyPtrOutput)
}

// Configures the policy yearly retention as documented in the `retentionYearly` block below.
func (o PolicyVMOutput) RetentionYearly() PolicyVMRetentionYearlyPtrOutput {
	return o.ApplyT(func(v *PolicyVM) PolicyVMRetentionYearlyPtrOutput { return v.RetentionYearly }).(PolicyVMRetentionYearlyPtrOutput)
}

// Specifies the timezone. [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/). Defaults to `UTC`
func (o PolicyVMOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyVM) pulumi.StringPtrOutput { return v.Timezone }).(pulumi.StringPtrOutput)
}

type PolicyVMArrayOutput struct{ *pulumi.OutputState }

func (PolicyVMArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PolicyVM)(nil)).Elem()
}

func (o PolicyVMArrayOutput) ToPolicyVMArrayOutput() PolicyVMArrayOutput {
	return o
}

func (o PolicyVMArrayOutput) ToPolicyVMArrayOutputWithContext(ctx context.Context) PolicyVMArrayOutput {
	return o
}

func (o PolicyVMArrayOutput) Index(i pulumi.IntInput) PolicyVMOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PolicyVM {
		return vs[0].([]*PolicyVM)[vs[1].(int)]
	}).(PolicyVMOutput)
}

type PolicyVMMapOutput struct{ *pulumi.OutputState }

func (PolicyVMMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PolicyVM)(nil)).Elem()
}

func (o PolicyVMMapOutput) ToPolicyVMMapOutput() PolicyVMMapOutput {
	return o
}

func (o PolicyVMMapOutput) ToPolicyVMMapOutputWithContext(ctx context.Context) PolicyVMMapOutput {
	return o
}

func (o PolicyVMMapOutput) MapIndex(k pulumi.StringInput) PolicyVMOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PolicyVM {
		return vs[0].(map[string]*PolicyVM)[vs[1].(string)]
	}).(PolicyVMOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyVMInput)(nil)).Elem(), &PolicyVM{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyVMArrayInput)(nil)).Elem(), PolicyVMArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyVMMapInput)(nil)).Elem(), PolicyVMMap{})
	pulumi.RegisterOutputType(PolicyVMOutput{})
	pulumi.RegisterOutputType(PolicyVMArrayOutput{})
	pulumi.RegisterOutputType(PolicyVMMapOutput{})
}
