// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package synapse

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type LinkedServiceIntegrationRuntime struct {
	// The integration runtime reference to associate with the Synapse Linked Service.
	Name string `pulumi:"name"`
	// A map of parameters to associate with the integration runtime.
	Parameters map[string]string `pulumi:"parameters"`
}

// LinkedServiceIntegrationRuntimeInput is an input type that accepts LinkedServiceIntegrationRuntimeArgs and LinkedServiceIntegrationRuntimeOutput values.
// You can construct a concrete instance of `LinkedServiceIntegrationRuntimeInput` via:
//
//	LinkedServiceIntegrationRuntimeArgs{...}
type LinkedServiceIntegrationRuntimeInput interface {
	pulumi.Input

	ToLinkedServiceIntegrationRuntimeOutput() LinkedServiceIntegrationRuntimeOutput
	ToLinkedServiceIntegrationRuntimeOutputWithContext(context.Context) LinkedServiceIntegrationRuntimeOutput
}

type LinkedServiceIntegrationRuntimeArgs struct {
	// The integration runtime reference to associate with the Synapse Linked Service.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the integration runtime.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (LinkedServiceIntegrationRuntimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceIntegrationRuntime)(nil)).Elem()
}

func (i LinkedServiceIntegrationRuntimeArgs) ToLinkedServiceIntegrationRuntimeOutput() LinkedServiceIntegrationRuntimeOutput {
	return i.ToLinkedServiceIntegrationRuntimeOutputWithContext(context.Background())
}

func (i LinkedServiceIntegrationRuntimeArgs) ToLinkedServiceIntegrationRuntimeOutputWithContext(ctx context.Context) LinkedServiceIntegrationRuntimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceIntegrationRuntimeOutput)
}

func (i LinkedServiceIntegrationRuntimeArgs) ToLinkedServiceIntegrationRuntimePtrOutput() LinkedServiceIntegrationRuntimePtrOutput {
	return i.ToLinkedServiceIntegrationRuntimePtrOutputWithContext(context.Background())
}

func (i LinkedServiceIntegrationRuntimeArgs) ToLinkedServiceIntegrationRuntimePtrOutputWithContext(ctx context.Context) LinkedServiceIntegrationRuntimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceIntegrationRuntimeOutput).ToLinkedServiceIntegrationRuntimePtrOutputWithContext(ctx)
}

// LinkedServiceIntegrationRuntimePtrInput is an input type that accepts LinkedServiceIntegrationRuntimeArgs, LinkedServiceIntegrationRuntimePtr and LinkedServiceIntegrationRuntimePtrOutput values.
// You can construct a concrete instance of `LinkedServiceIntegrationRuntimePtrInput` via:
//
//	        LinkedServiceIntegrationRuntimeArgs{...}
//
//	or:
//
//	        nil
type LinkedServiceIntegrationRuntimePtrInput interface {
	pulumi.Input

	ToLinkedServiceIntegrationRuntimePtrOutput() LinkedServiceIntegrationRuntimePtrOutput
	ToLinkedServiceIntegrationRuntimePtrOutputWithContext(context.Context) LinkedServiceIntegrationRuntimePtrOutput
}

type linkedServiceIntegrationRuntimePtrType LinkedServiceIntegrationRuntimeArgs

func LinkedServiceIntegrationRuntimePtr(v *LinkedServiceIntegrationRuntimeArgs) LinkedServiceIntegrationRuntimePtrInput {
	return (*linkedServiceIntegrationRuntimePtrType)(v)
}

func (*linkedServiceIntegrationRuntimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceIntegrationRuntime)(nil)).Elem()
}

func (i *linkedServiceIntegrationRuntimePtrType) ToLinkedServiceIntegrationRuntimePtrOutput() LinkedServiceIntegrationRuntimePtrOutput {
	return i.ToLinkedServiceIntegrationRuntimePtrOutputWithContext(context.Background())
}

func (i *linkedServiceIntegrationRuntimePtrType) ToLinkedServiceIntegrationRuntimePtrOutputWithContext(ctx context.Context) LinkedServiceIntegrationRuntimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkedServiceIntegrationRuntimePtrOutput)
}

type LinkedServiceIntegrationRuntimeOutput struct{ *pulumi.OutputState }

func (LinkedServiceIntegrationRuntimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkedServiceIntegrationRuntime)(nil)).Elem()
}

func (o LinkedServiceIntegrationRuntimeOutput) ToLinkedServiceIntegrationRuntimeOutput() LinkedServiceIntegrationRuntimeOutput {
	return o
}

func (o LinkedServiceIntegrationRuntimeOutput) ToLinkedServiceIntegrationRuntimeOutputWithContext(ctx context.Context) LinkedServiceIntegrationRuntimeOutput {
	return o
}

func (o LinkedServiceIntegrationRuntimeOutput) ToLinkedServiceIntegrationRuntimePtrOutput() LinkedServiceIntegrationRuntimePtrOutput {
	return o.ToLinkedServiceIntegrationRuntimePtrOutputWithContext(context.Background())
}

func (o LinkedServiceIntegrationRuntimeOutput) ToLinkedServiceIntegrationRuntimePtrOutputWithContext(ctx context.Context) LinkedServiceIntegrationRuntimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinkedServiceIntegrationRuntime) *LinkedServiceIntegrationRuntime {
		return &v
	}).(LinkedServiceIntegrationRuntimePtrOutput)
}

// The integration runtime reference to associate with the Synapse Linked Service.
func (o LinkedServiceIntegrationRuntimeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LinkedServiceIntegrationRuntime) string { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the integration runtime.
func (o LinkedServiceIntegrationRuntimeOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v LinkedServiceIntegrationRuntime) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type LinkedServiceIntegrationRuntimePtrOutput struct{ *pulumi.OutputState }

func (LinkedServiceIntegrationRuntimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkedServiceIntegrationRuntime)(nil)).Elem()
}

func (o LinkedServiceIntegrationRuntimePtrOutput) ToLinkedServiceIntegrationRuntimePtrOutput() LinkedServiceIntegrationRuntimePtrOutput {
	return o
}

func (o LinkedServiceIntegrationRuntimePtrOutput) ToLinkedServiceIntegrationRuntimePtrOutputWithContext(ctx context.Context) LinkedServiceIntegrationRuntimePtrOutput {
	return o
}

func (o LinkedServiceIntegrationRuntimePtrOutput) Elem() LinkedServiceIntegrationRuntimeOutput {
	return o.ApplyT(func(v *LinkedServiceIntegrationRuntime) LinkedServiceIntegrationRuntime {
		if v != nil {
			return *v
		}
		var ret LinkedServiceIntegrationRuntime
		return ret
	}).(LinkedServiceIntegrationRuntimeOutput)
}

// The integration runtime reference to associate with the Synapse Linked Service.
func (o LinkedServiceIntegrationRuntimePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinkedServiceIntegrationRuntime) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A map of parameters to associate with the integration runtime.
func (o LinkedServiceIntegrationRuntimePtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LinkedServiceIntegrationRuntime) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

type SparkPoolAutoPause struct {
	// Number of minutes of idle time before the Spark Pool is automatically paused. Must be between `5` and `10080`.
	DelayInMinutes int `pulumi:"delayInMinutes"`
}

// SparkPoolAutoPauseInput is an input type that accepts SparkPoolAutoPauseArgs and SparkPoolAutoPauseOutput values.
// You can construct a concrete instance of `SparkPoolAutoPauseInput` via:
//
//	SparkPoolAutoPauseArgs{...}
type SparkPoolAutoPauseInput interface {
	pulumi.Input

	ToSparkPoolAutoPauseOutput() SparkPoolAutoPauseOutput
	ToSparkPoolAutoPauseOutputWithContext(context.Context) SparkPoolAutoPauseOutput
}

type SparkPoolAutoPauseArgs struct {
	// Number of minutes of idle time before the Spark Pool is automatically paused. Must be between `5` and `10080`.
	DelayInMinutes pulumi.IntInput `pulumi:"delayInMinutes"`
}

func (SparkPoolAutoPauseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkPoolAutoPause)(nil)).Elem()
}

func (i SparkPoolAutoPauseArgs) ToSparkPoolAutoPauseOutput() SparkPoolAutoPauseOutput {
	return i.ToSparkPoolAutoPauseOutputWithContext(context.Background())
}

func (i SparkPoolAutoPauseArgs) ToSparkPoolAutoPauseOutputWithContext(ctx context.Context) SparkPoolAutoPauseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkPoolAutoPauseOutput)
}

func (i SparkPoolAutoPauseArgs) ToSparkPoolAutoPausePtrOutput() SparkPoolAutoPausePtrOutput {
	return i.ToSparkPoolAutoPausePtrOutputWithContext(context.Background())
}

func (i SparkPoolAutoPauseArgs) ToSparkPoolAutoPausePtrOutputWithContext(ctx context.Context) SparkPoolAutoPausePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkPoolAutoPauseOutput).ToSparkPoolAutoPausePtrOutputWithContext(ctx)
}

// SparkPoolAutoPausePtrInput is an input type that accepts SparkPoolAutoPauseArgs, SparkPoolAutoPausePtr and SparkPoolAutoPausePtrOutput values.
// You can construct a concrete instance of `SparkPoolAutoPausePtrInput` via:
//
//	        SparkPoolAutoPauseArgs{...}
//
//	or:
//
//	        nil
type SparkPoolAutoPausePtrInput interface {
	pulumi.Input

	ToSparkPoolAutoPausePtrOutput() SparkPoolAutoPausePtrOutput
	ToSparkPoolAutoPausePtrOutputWithContext(context.Context) SparkPoolAutoPausePtrOutput
}

type sparkPoolAutoPausePtrType SparkPoolAutoPauseArgs

func SparkPoolAutoPausePtr(v *SparkPoolAutoPauseArgs) SparkPoolAutoPausePtrInput {
	return (*sparkPoolAutoPausePtrType)(v)
}

func (*sparkPoolAutoPausePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SparkPoolAutoPause)(nil)).Elem()
}

func (i *sparkPoolAutoPausePtrType) ToSparkPoolAutoPausePtrOutput() SparkPoolAutoPausePtrOutput {
	return i.ToSparkPoolAutoPausePtrOutputWithContext(context.Background())
}

func (i *sparkPoolAutoPausePtrType) ToSparkPoolAutoPausePtrOutputWithContext(ctx context.Context) SparkPoolAutoPausePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkPoolAutoPausePtrOutput)
}

type SparkPoolAutoPauseOutput struct{ *pulumi.OutputState }

func (SparkPoolAutoPauseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkPoolAutoPause)(nil)).Elem()
}

func (o SparkPoolAutoPauseOutput) ToSparkPoolAutoPauseOutput() SparkPoolAutoPauseOutput {
	return o
}

func (o SparkPoolAutoPauseOutput) ToSparkPoolAutoPauseOutputWithContext(ctx context.Context) SparkPoolAutoPauseOutput {
	return o
}

func (o SparkPoolAutoPauseOutput) ToSparkPoolAutoPausePtrOutput() SparkPoolAutoPausePtrOutput {
	return o.ToSparkPoolAutoPausePtrOutputWithContext(context.Background())
}

func (o SparkPoolAutoPauseOutput) ToSparkPoolAutoPausePtrOutputWithContext(ctx context.Context) SparkPoolAutoPausePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SparkPoolAutoPause) *SparkPoolAutoPause {
		return &v
	}).(SparkPoolAutoPausePtrOutput)
}

// Number of minutes of idle time before the Spark Pool is automatically paused. Must be between `5` and `10080`.
func (o SparkPoolAutoPauseOutput) DelayInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v SparkPoolAutoPause) int { return v.DelayInMinutes }).(pulumi.IntOutput)
}

type SparkPoolAutoPausePtrOutput struct{ *pulumi.OutputState }

func (SparkPoolAutoPausePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SparkPoolAutoPause)(nil)).Elem()
}

func (o SparkPoolAutoPausePtrOutput) ToSparkPoolAutoPausePtrOutput() SparkPoolAutoPausePtrOutput {
	return o
}

func (o SparkPoolAutoPausePtrOutput) ToSparkPoolAutoPausePtrOutputWithContext(ctx context.Context) SparkPoolAutoPausePtrOutput {
	return o
}

func (o SparkPoolAutoPausePtrOutput) Elem() SparkPoolAutoPauseOutput {
	return o.ApplyT(func(v *SparkPoolAutoPause) SparkPoolAutoPause {
		if v != nil {
			return *v
		}
		var ret SparkPoolAutoPause
		return ret
	}).(SparkPoolAutoPauseOutput)
}

// Number of minutes of idle time before the Spark Pool is automatically paused. Must be between `5` and `10080`.
func (o SparkPoolAutoPausePtrOutput) DelayInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SparkPoolAutoPause) *int {
		if v == nil {
			return nil
		}
		return &v.DelayInMinutes
	}).(pulumi.IntPtrOutput)
}

type SparkPoolAutoScale struct {
	// The maximum number of nodes the Spark Pool can support. Must be between `3` and `200`.
	MaxNodeCount int `pulumi:"maxNodeCount"`
	// The minimum number of nodes the Spark Pool can support. Must be between `3` and `200`.
	MinNodeCount int `pulumi:"minNodeCount"`
}

// SparkPoolAutoScaleInput is an input type that accepts SparkPoolAutoScaleArgs and SparkPoolAutoScaleOutput values.
// You can construct a concrete instance of `SparkPoolAutoScaleInput` via:
//
//	SparkPoolAutoScaleArgs{...}
type SparkPoolAutoScaleInput interface {
	pulumi.Input

	ToSparkPoolAutoScaleOutput() SparkPoolAutoScaleOutput
	ToSparkPoolAutoScaleOutputWithContext(context.Context) SparkPoolAutoScaleOutput
}

type SparkPoolAutoScaleArgs struct {
	// The maximum number of nodes the Spark Pool can support. Must be between `3` and `200`.
	MaxNodeCount pulumi.IntInput `pulumi:"maxNodeCount"`
	// The minimum number of nodes the Spark Pool can support. Must be between `3` and `200`.
	MinNodeCount pulumi.IntInput `pulumi:"minNodeCount"`
}

func (SparkPoolAutoScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkPoolAutoScale)(nil)).Elem()
}

func (i SparkPoolAutoScaleArgs) ToSparkPoolAutoScaleOutput() SparkPoolAutoScaleOutput {
	return i.ToSparkPoolAutoScaleOutputWithContext(context.Background())
}

func (i SparkPoolAutoScaleArgs) ToSparkPoolAutoScaleOutputWithContext(ctx context.Context) SparkPoolAutoScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkPoolAutoScaleOutput)
}

func (i SparkPoolAutoScaleArgs) ToSparkPoolAutoScalePtrOutput() SparkPoolAutoScalePtrOutput {
	return i.ToSparkPoolAutoScalePtrOutputWithContext(context.Background())
}

func (i SparkPoolAutoScaleArgs) ToSparkPoolAutoScalePtrOutputWithContext(ctx context.Context) SparkPoolAutoScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkPoolAutoScaleOutput).ToSparkPoolAutoScalePtrOutputWithContext(ctx)
}

// SparkPoolAutoScalePtrInput is an input type that accepts SparkPoolAutoScaleArgs, SparkPoolAutoScalePtr and SparkPoolAutoScalePtrOutput values.
// You can construct a concrete instance of `SparkPoolAutoScalePtrInput` via:
//
//	        SparkPoolAutoScaleArgs{...}
//
//	or:
//
//	        nil
type SparkPoolAutoScalePtrInput interface {
	pulumi.Input

	ToSparkPoolAutoScalePtrOutput() SparkPoolAutoScalePtrOutput
	ToSparkPoolAutoScalePtrOutputWithContext(context.Context) SparkPoolAutoScalePtrOutput
}

type sparkPoolAutoScalePtrType SparkPoolAutoScaleArgs

func SparkPoolAutoScalePtr(v *SparkPoolAutoScaleArgs) SparkPoolAutoScalePtrInput {
	return (*sparkPoolAutoScalePtrType)(v)
}

func (*sparkPoolAutoScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SparkPoolAutoScale)(nil)).Elem()
}

func (i *sparkPoolAutoScalePtrType) ToSparkPoolAutoScalePtrOutput() SparkPoolAutoScalePtrOutput {
	return i.ToSparkPoolAutoScalePtrOutputWithContext(context.Background())
}

func (i *sparkPoolAutoScalePtrType) ToSparkPoolAutoScalePtrOutputWithContext(ctx context.Context) SparkPoolAutoScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkPoolAutoScalePtrOutput)
}

type SparkPoolAutoScaleOutput struct{ *pulumi.OutputState }

func (SparkPoolAutoScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkPoolAutoScale)(nil)).Elem()
}

func (o SparkPoolAutoScaleOutput) ToSparkPoolAutoScaleOutput() SparkPoolAutoScaleOutput {
	return o
}

func (o SparkPoolAutoScaleOutput) ToSparkPoolAutoScaleOutputWithContext(ctx context.Context) SparkPoolAutoScaleOutput {
	return o
}

func (o SparkPoolAutoScaleOutput) ToSparkPoolAutoScalePtrOutput() SparkPoolAutoScalePtrOutput {
	return o.ToSparkPoolAutoScalePtrOutputWithContext(context.Background())
}

func (o SparkPoolAutoScaleOutput) ToSparkPoolAutoScalePtrOutputWithContext(ctx context.Context) SparkPoolAutoScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SparkPoolAutoScale) *SparkPoolAutoScale {
		return &v
	}).(SparkPoolAutoScalePtrOutput)
}

// The maximum number of nodes the Spark Pool can support. Must be between `3` and `200`.
func (o SparkPoolAutoScaleOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v SparkPoolAutoScale) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

// The minimum number of nodes the Spark Pool can support. Must be between `3` and `200`.
func (o SparkPoolAutoScaleOutput) MinNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v SparkPoolAutoScale) int { return v.MinNodeCount }).(pulumi.IntOutput)
}

type SparkPoolAutoScalePtrOutput struct{ *pulumi.OutputState }

func (SparkPoolAutoScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SparkPoolAutoScale)(nil)).Elem()
}

func (o SparkPoolAutoScalePtrOutput) ToSparkPoolAutoScalePtrOutput() SparkPoolAutoScalePtrOutput {
	return o
}

func (o SparkPoolAutoScalePtrOutput) ToSparkPoolAutoScalePtrOutputWithContext(ctx context.Context) SparkPoolAutoScalePtrOutput {
	return o
}

func (o SparkPoolAutoScalePtrOutput) Elem() SparkPoolAutoScaleOutput {
	return o.ApplyT(func(v *SparkPoolAutoScale) SparkPoolAutoScale {
		if v != nil {
			return *v
		}
		var ret SparkPoolAutoScale
		return ret
	}).(SparkPoolAutoScaleOutput)
}

// The maximum number of nodes the Spark Pool can support. Must be between `3` and `200`.
func (o SparkPoolAutoScalePtrOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SparkPoolAutoScale) *int {
		if v == nil {
			return nil
		}
		return &v.MaxNodeCount
	}).(pulumi.IntPtrOutput)
}

// The minimum number of nodes the Spark Pool can support. Must be between `3` and `200`.
func (o SparkPoolAutoScalePtrOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SparkPoolAutoScale) *int {
		if v == nil {
			return nil
		}
		return &v.MinNodeCount
	}).(pulumi.IntPtrOutput)
}

type SparkPoolLibraryRequirement struct {
	// The content of library requirements.
	Content string `pulumi:"content"`
	// The name of the library requirements file.
	Filename string `pulumi:"filename"`
}

// SparkPoolLibraryRequirementInput is an input type that accepts SparkPoolLibraryRequirementArgs and SparkPoolLibraryRequirementOutput values.
// You can construct a concrete instance of `SparkPoolLibraryRequirementInput` via:
//
//	SparkPoolLibraryRequirementArgs{...}
type SparkPoolLibraryRequirementInput interface {
	pulumi.Input

	ToSparkPoolLibraryRequirementOutput() SparkPoolLibraryRequirementOutput
	ToSparkPoolLibraryRequirementOutputWithContext(context.Context) SparkPoolLibraryRequirementOutput
}

type SparkPoolLibraryRequirementArgs struct {
	// The content of library requirements.
	Content pulumi.StringInput `pulumi:"content"`
	// The name of the library requirements file.
	Filename pulumi.StringInput `pulumi:"filename"`
}

func (SparkPoolLibraryRequirementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkPoolLibraryRequirement)(nil)).Elem()
}

func (i SparkPoolLibraryRequirementArgs) ToSparkPoolLibraryRequirementOutput() SparkPoolLibraryRequirementOutput {
	return i.ToSparkPoolLibraryRequirementOutputWithContext(context.Background())
}

func (i SparkPoolLibraryRequirementArgs) ToSparkPoolLibraryRequirementOutputWithContext(ctx context.Context) SparkPoolLibraryRequirementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkPoolLibraryRequirementOutput)
}

func (i SparkPoolLibraryRequirementArgs) ToSparkPoolLibraryRequirementPtrOutput() SparkPoolLibraryRequirementPtrOutput {
	return i.ToSparkPoolLibraryRequirementPtrOutputWithContext(context.Background())
}

func (i SparkPoolLibraryRequirementArgs) ToSparkPoolLibraryRequirementPtrOutputWithContext(ctx context.Context) SparkPoolLibraryRequirementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkPoolLibraryRequirementOutput).ToSparkPoolLibraryRequirementPtrOutputWithContext(ctx)
}

// SparkPoolLibraryRequirementPtrInput is an input type that accepts SparkPoolLibraryRequirementArgs, SparkPoolLibraryRequirementPtr and SparkPoolLibraryRequirementPtrOutput values.
// You can construct a concrete instance of `SparkPoolLibraryRequirementPtrInput` via:
//
//	        SparkPoolLibraryRequirementArgs{...}
//
//	or:
//
//	        nil
type SparkPoolLibraryRequirementPtrInput interface {
	pulumi.Input

	ToSparkPoolLibraryRequirementPtrOutput() SparkPoolLibraryRequirementPtrOutput
	ToSparkPoolLibraryRequirementPtrOutputWithContext(context.Context) SparkPoolLibraryRequirementPtrOutput
}

type sparkPoolLibraryRequirementPtrType SparkPoolLibraryRequirementArgs

func SparkPoolLibraryRequirementPtr(v *SparkPoolLibraryRequirementArgs) SparkPoolLibraryRequirementPtrInput {
	return (*sparkPoolLibraryRequirementPtrType)(v)
}

func (*sparkPoolLibraryRequirementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SparkPoolLibraryRequirement)(nil)).Elem()
}

func (i *sparkPoolLibraryRequirementPtrType) ToSparkPoolLibraryRequirementPtrOutput() SparkPoolLibraryRequirementPtrOutput {
	return i.ToSparkPoolLibraryRequirementPtrOutputWithContext(context.Background())
}

func (i *sparkPoolLibraryRequirementPtrType) ToSparkPoolLibraryRequirementPtrOutputWithContext(ctx context.Context) SparkPoolLibraryRequirementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkPoolLibraryRequirementPtrOutput)
}

type SparkPoolLibraryRequirementOutput struct{ *pulumi.OutputState }

func (SparkPoolLibraryRequirementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkPoolLibraryRequirement)(nil)).Elem()
}

func (o SparkPoolLibraryRequirementOutput) ToSparkPoolLibraryRequirementOutput() SparkPoolLibraryRequirementOutput {
	return o
}

func (o SparkPoolLibraryRequirementOutput) ToSparkPoolLibraryRequirementOutputWithContext(ctx context.Context) SparkPoolLibraryRequirementOutput {
	return o
}

func (o SparkPoolLibraryRequirementOutput) ToSparkPoolLibraryRequirementPtrOutput() SparkPoolLibraryRequirementPtrOutput {
	return o.ToSparkPoolLibraryRequirementPtrOutputWithContext(context.Background())
}

func (o SparkPoolLibraryRequirementOutput) ToSparkPoolLibraryRequirementPtrOutputWithContext(ctx context.Context) SparkPoolLibraryRequirementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SparkPoolLibraryRequirement) *SparkPoolLibraryRequirement {
		return &v
	}).(SparkPoolLibraryRequirementPtrOutput)
}

// The content of library requirements.
func (o SparkPoolLibraryRequirementOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v SparkPoolLibraryRequirement) string { return v.Content }).(pulumi.StringOutput)
}

// The name of the library requirements file.
func (o SparkPoolLibraryRequirementOutput) Filename() pulumi.StringOutput {
	return o.ApplyT(func(v SparkPoolLibraryRequirement) string { return v.Filename }).(pulumi.StringOutput)
}

type SparkPoolLibraryRequirementPtrOutput struct{ *pulumi.OutputState }

func (SparkPoolLibraryRequirementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SparkPoolLibraryRequirement)(nil)).Elem()
}

func (o SparkPoolLibraryRequirementPtrOutput) ToSparkPoolLibraryRequirementPtrOutput() SparkPoolLibraryRequirementPtrOutput {
	return o
}

func (o SparkPoolLibraryRequirementPtrOutput) ToSparkPoolLibraryRequirementPtrOutputWithContext(ctx context.Context) SparkPoolLibraryRequirementPtrOutput {
	return o
}

func (o SparkPoolLibraryRequirementPtrOutput) Elem() SparkPoolLibraryRequirementOutput {
	return o.ApplyT(func(v *SparkPoolLibraryRequirement) SparkPoolLibraryRequirement {
		if v != nil {
			return *v
		}
		var ret SparkPoolLibraryRequirement
		return ret
	}).(SparkPoolLibraryRequirementOutput)
}

// The content of library requirements.
func (o SparkPoolLibraryRequirementPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SparkPoolLibraryRequirement) *string {
		if v == nil {
			return nil
		}
		return &v.Content
	}).(pulumi.StringPtrOutput)
}

// The name of the library requirements file.
func (o SparkPoolLibraryRequirementPtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SparkPoolLibraryRequirement) *string {
		if v == nil {
			return nil
		}
		return &v.Filename
	}).(pulumi.StringPtrOutput)
}

type SparkPoolSparkConfig struct {
	// The contents of a spark configuration.
	Content string `pulumi:"content"`
	// The name of the file where the spark configuration `content` will be stored.
	Filename string `pulumi:"filename"`
}

// SparkPoolSparkConfigInput is an input type that accepts SparkPoolSparkConfigArgs and SparkPoolSparkConfigOutput values.
// You can construct a concrete instance of `SparkPoolSparkConfigInput` via:
//
//	SparkPoolSparkConfigArgs{...}
type SparkPoolSparkConfigInput interface {
	pulumi.Input

	ToSparkPoolSparkConfigOutput() SparkPoolSparkConfigOutput
	ToSparkPoolSparkConfigOutputWithContext(context.Context) SparkPoolSparkConfigOutput
}

type SparkPoolSparkConfigArgs struct {
	// The contents of a spark configuration.
	Content pulumi.StringInput `pulumi:"content"`
	// The name of the file where the spark configuration `content` will be stored.
	Filename pulumi.StringInput `pulumi:"filename"`
}

func (SparkPoolSparkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkPoolSparkConfig)(nil)).Elem()
}

func (i SparkPoolSparkConfigArgs) ToSparkPoolSparkConfigOutput() SparkPoolSparkConfigOutput {
	return i.ToSparkPoolSparkConfigOutputWithContext(context.Background())
}

func (i SparkPoolSparkConfigArgs) ToSparkPoolSparkConfigOutputWithContext(ctx context.Context) SparkPoolSparkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkPoolSparkConfigOutput)
}

func (i SparkPoolSparkConfigArgs) ToSparkPoolSparkConfigPtrOutput() SparkPoolSparkConfigPtrOutput {
	return i.ToSparkPoolSparkConfigPtrOutputWithContext(context.Background())
}

func (i SparkPoolSparkConfigArgs) ToSparkPoolSparkConfigPtrOutputWithContext(ctx context.Context) SparkPoolSparkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkPoolSparkConfigOutput).ToSparkPoolSparkConfigPtrOutputWithContext(ctx)
}

// SparkPoolSparkConfigPtrInput is an input type that accepts SparkPoolSparkConfigArgs, SparkPoolSparkConfigPtr and SparkPoolSparkConfigPtrOutput values.
// You can construct a concrete instance of `SparkPoolSparkConfigPtrInput` via:
//
//	        SparkPoolSparkConfigArgs{...}
//
//	or:
//
//	        nil
type SparkPoolSparkConfigPtrInput interface {
	pulumi.Input

	ToSparkPoolSparkConfigPtrOutput() SparkPoolSparkConfigPtrOutput
	ToSparkPoolSparkConfigPtrOutputWithContext(context.Context) SparkPoolSparkConfigPtrOutput
}

type sparkPoolSparkConfigPtrType SparkPoolSparkConfigArgs

func SparkPoolSparkConfigPtr(v *SparkPoolSparkConfigArgs) SparkPoolSparkConfigPtrInput {
	return (*sparkPoolSparkConfigPtrType)(v)
}

func (*sparkPoolSparkConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SparkPoolSparkConfig)(nil)).Elem()
}

func (i *sparkPoolSparkConfigPtrType) ToSparkPoolSparkConfigPtrOutput() SparkPoolSparkConfigPtrOutput {
	return i.ToSparkPoolSparkConfigPtrOutputWithContext(context.Background())
}

func (i *sparkPoolSparkConfigPtrType) ToSparkPoolSparkConfigPtrOutputWithContext(ctx context.Context) SparkPoolSparkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SparkPoolSparkConfigPtrOutput)
}

type SparkPoolSparkConfigOutput struct{ *pulumi.OutputState }

func (SparkPoolSparkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SparkPoolSparkConfig)(nil)).Elem()
}

func (o SparkPoolSparkConfigOutput) ToSparkPoolSparkConfigOutput() SparkPoolSparkConfigOutput {
	return o
}

func (o SparkPoolSparkConfigOutput) ToSparkPoolSparkConfigOutputWithContext(ctx context.Context) SparkPoolSparkConfigOutput {
	return o
}

func (o SparkPoolSparkConfigOutput) ToSparkPoolSparkConfigPtrOutput() SparkPoolSparkConfigPtrOutput {
	return o.ToSparkPoolSparkConfigPtrOutputWithContext(context.Background())
}

func (o SparkPoolSparkConfigOutput) ToSparkPoolSparkConfigPtrOutputWithContext(ctx context.Context) SparkPoolSparkConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SparkPoolSparkConfig) *SparkPoolSparkConfig {
		return &v
	}).(SparkPoolSparkConfigPtrOutput)
}

// The contents of a spark configuration.
func (o SparkPoolSparkConfigOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v SparkPoolSparkConfig) string { return v.Content }).(pulumi.StringOutput)
}

// The name of the file where the spark configuration `content` will be stored.
func (o SparkPoolSparkConfigOutput) Filename() pulumi.StringOutput {
	return o.ApplyT(func(v SparkPoolSparkConfig) string { return v.Filename }).(pulumi.StringOutput)
}

type SparkPoolSparkConfigPtrOutput struct{ *pulumi.OutputState }

func (SparkPoolSparkConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SparkPoolSparkConfig)(nil)).Elem()
}

func (o SparkPoolSparkConfigPtrOutput) ToSparkPoolSparkConfigPtrOutput() SparkPoolSparkConfigPtrOutput {
	return o
}

func (o SparkPoolSparkConfigPtrOutput) ToSparkPoolSparkConfigPtrOutputWithContext(ctx context.Context) SparkPoolSparkConfigPtrOutput {
	return o
}

func (o SparkPoolSparkConfigPtrOutput) Elem() SparkPoolSparkConfigOutput {
	return o.ApplyT(func(v *SparkPoolSparkConfig) SparkPoolSparkConfig {
		if v != nil {
			return *v
		}
		var ret SparkPoolSparkConfig
		return ret
	}).(SparkPoolSparkConfigOutput)
}

// The contents of a spark configuration.
func (o SparkPoolSparkConfigPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SparkPoolSparkConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Content
	}).(pulumi.StringPtrOutput)
}

// The name of the file where the spark configuration `content` will be stored.
func (o SparkPoolSparkConfigPtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SparkPoolSparkConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Filename
	}).(pulumi.StringPtrOutput)
}

type SqlPoolRestore struct {
	// Specifies the Snapshot time to restore formatted as an RFC3339 date string. Changing this forces a new Synapse SQL Pool to be created.
	PointInTime string `pulumi:"pointInTime"`
	// The ID of the Synapse SQL Pool or SQL Database which is to restore. Changing this forces a new Synapse SQL Pool to be created.
	SourceDatabaseId string `pulumi:"sourceDatabaseId"`
}

// SqlPoolRestoreInput is an input type that accepts SqlPoolRestoreArgs and SqlPoolRestoreOutput values.
// You can construct a concrete instance of `SqlPoolRestoreInput` via:
//
//	SqlPoolRestoreArgs{...}
type SqlPoolRestoreInput interface {
	pulumi.Input

	ToSqlPoolRestoreOutput() SqlPoolRestoreOutput
	ToSqlPoolRestoreOutputWithContext(context.Context) SqlPoolRestoreOutput
}

type SqlPoolRestoreArgs struct {
	// Specifies the Snapshot time to restore formatted as an RFC3339 date string. Changing this forces a new Synapse SQL Pool to be created.
	PointInTime pulumi.StringInput `pulumi:"pointInTime"`
	// The ID of the Synapse SQL Pool or SQL Database which is to restore. Changing this forces a new Synapse SQL Pool to be created.
	SourceDatabaseId pulumi.StringInput `pulumi:"sourceDatabaseId"`
}

func (SqlPoolRestoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlPoolRestore)(nil)).Elem()
}

func (i SqlPoolRestoreArgs) ToSqlPoolRestoreOutput() SqlPoolRestoreOutput {
	return i.ToSqlPoolRestoreOutputWithContext(context.Background())
}

func (i SqlPoolRestoreArgs) ToSqlPoolRestoreOutputWithContext(ctx context.Context) SqlPoolRestoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlPoolRestoreOutput)
}

func (i SqlPoolRestoreArgs) ToSqlPoolRestorePtrOutput() SqlPoolRestorePtrOutput {
	return i.ToSqlPoolRestorePtrOutputWithContext(context.Background())
}

func (i SqlPoolRestoreArgs) ToSqlPoolRestorePtrOutputWithContext(ctx context.Context) SqlPoolRestorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlPoolRestoreOutput).ToSqlPoolRestorePtrOutputWithContext(ctx)
}

// SqlPoolRestorePtrInput is an input type that accepts SqlPoolRestoreArgs, SqlPoolRestorePtr and SqlPoolRestorePtrOutput values.
// You can construct a concrete instance of `SqlPoolRestorePtrInput` via:
//
//	        SqlPoolRestoreArgs{...}
//
//	or:
//
//	        nil
type SqlPoolRestorePtrInput interface {
	pulumi.Input

	ToSqlPoolRestorePtrOutput() SqlPoolRestorePtrOutput
	ToSqlPoolRestorePtrOutputWithContext(context.Context) SqlPoolRestorePtrOutput
}

type sqlPoolRestorePtrType SqlPoolRestoreArgs

func SqlPoolRestorePtr(v *SqlPoolRestoreArgs) SqlPoolRestorePtrInput {
	return (*sqlPoolRestorePtrType)(v)
}

func (*sqlPoolRestorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlPoolRestore)(nil)).Elem()
}

func (i *sqlPoolRestorePtrType) ToSqlPoolRestorePtrOutput() SqlPoolRestorePtrOutput {
	return i.ToSqlPoolRestorePtrOutputWithContext(context.Background())
}

func (i *sqlPoolRestorePtrType) ToSqlPoolRestorePtrOutputWithContext(ctx context.Context) SqlPoolRestorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlPoolRestorePtrOutput)
}

type SqlPoolRestoreOutput struct{ *pulumi.OutputState }

func (SqlPoolRestoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlPoolRestore)(nil)).Elem()
}

func (o SqlPoolRestoreOutput) ToSqlPoolRestoreOutput() SqlPoolRestoreOutput {
	return o
}

func (o SqlPoolRestoreOutput) ToSqlPoolRestoreOutputWithContext(ctx context.Context) SqlPoolRestoreOutput {
	return o
}

func (o SqlPoolRestoreOutput) ToSqlPoolRestorePtrOutput() SqlPoolRestorePtrOutput {
	return o.ToSqlPoolRestorePtrOutputWithContext(context.Background())
}

func (o SqlPoolRestoreOutput) ToSqlPoolRestorePtrOutputWithContext(ctx context.Context) SqlPoolRestorePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SqlPoolRestore) *SqlPoolRestore {
		return &v
	}).(SqlPoolRestorePtrOutput)
}

// Specifies the Snapshot time to restore formatted as an RFC3339 date string. Changing this forces a new Synapse SQL Pool to be created.
func (o SqlPoolRestoreOutput) PointInTime() pulumi.StringOutput {
	return o.ApplyT(func(v SqlPoolRestore) string { return v.PointInTime }).(pulumi.StringOutput)
}

// The ID of the Synapse SQL Pool or SQL Database which is to restore. Changing this forces a new Synapse SQL Pool to be created.
func (o SqlPoolRestoreOutput) SourceDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v SqlPoolRestore) string { return v.SourceDatabaseId }).(pulumi.StringOutput)
}

type SqlPoolRestorePtrOutput struct{ *pulumi.OutputState }

func (SqlPoolRestorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlPoolRestore)(nil)).Elem()
}

func (o SqlPoolRestorePtrOutput) ToSqlPoolRestorePtrOutput() SqlPoolRestorePtrOutput {
	return o
}

func (o SqlPoolRestorePtrOutput) ToSqlPoolRestorePtrOutputWithContext(ctx context.Context) SqlPoolRestorePtrOutput {
	return o
}

func (o SqlPoolRestorePtrOutput) Elem() SqlPoolRestoreOutput {
	return o.ApplyT(func(v *SqlPoolRestore) SqlPoolRestore {
		if v != nil {
			return *v
		}
		var ret SqlPoolRestore
		return ret
	}).(SqlPoolRestoreOutput)
}

// Specifies the Snapshot time to restore formatted as an RFC3339 date string. Changing this forces a new Synapse SQL Pool to be created.
func (o SqlPoolRestorePtrOutput) PointInTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlPoolRestore) *string {
		if v == nil {
			return nil
		}
		return &v.PointInTime
	}).(pulumi.StringPtrOutput)
}

// The ID of the Synapse SQL Pool or SQL Database which is to restore. Changing this forces a new Synapse SQL Pool to be created.
func (o SqlPoolRestorePtrOutput) SourceDatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlPoolRestore) *string {
		if v == nil {
			return nil
		}
		return &v.SourceDatabaseId
	}).(pulumi.StringPtrOutput)
}

type SqlPoolVulnerabilityAssessmentBaselineBaseline struct {
	// Specifies a list of rule baseline result.
	Results []string `pulumi:"results"`
}

// SqlPoolVulnerabilityAssessmentBaselineBaselineInput is an input type that accepts SqlPoolVulnerabilityAssessmentBaselineBaselineArgs and SqlPoolVulnerabilityAssessmentBaselineBaselineOutput values.
// You can construct a concrete instance of `SqlPoolVulnerabilityAssessmentBaselineBaselineInput` via:
//
//	SqlPoolVulnerabilityAssessmentBaselineBaselineArgs{...}
type SqlPoolVulnerabilityAssessmentBaselineBaselineInput interface {
	pulumi.Input

	ToSqlPoolVulnerabilityAssessmentBaselineBaselineOutput() SqlPoolVulnerabilityAssessmentBaselineBaselineOutput
	ToSqlPoolVulnerabilityAssessmentBaselineBaselineOutputWithContext(context.Context) SqlPoolVulnerabilityAssessmentBaselineBaselineOutput
}

type SqlPoolVulnerabilityAssessmentBaselineBaselineArgs struct {
	// Specifies a list of rule baseline result.
	Results pulumi.StringArrayInput `pulumi:"results"`
}

func (SqlPoolVulnerabilityAssessmentBaselineBaselineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlPoolVulnerabilityAssessmentBaselineBaseline)(nil)).Elem()
}

func (i SqlPoolVulnerabilityAssessmentBaselineBaselineArgs) ToSqlPoolVulnerabilityAssessmentBaselineBaselineOutput() SqlPoolVulnerabilityAssessmentBaselineBaselineOutput {
	return i.ToSqlPoolVulnerabilityAssessmentBaselineBaselineOutputWithContext(context.Background())
}

func (i SqlPoolVulnerabilityAssessmentBaselineBaselineArgs) ToSqlPoolVulnerabilityAssessmentBaselineBaselineOutputWithContext(ctx context.Context) SqlPoolVulnerabilityAssessmentBaselineBaselineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlPoolVulnerabilityAssessmentBaselineBaselineOutput)
}

// SqlPoolVulnerabilityAssessmentBaselineBaselineArrayInput is an input type that accepts SqlPoolVulnerabilityAssessmentBaselineBaselineArray and SqlPoolVulnerabilityAssessmentBaselineBaselineArrayOutput values.
// You can construct a concrete instance of `SqlPoolVulnerabilityAssessmentBaselineBaselineArrayInput` via:
//
//	SqlPoolVulnerabilityAssessmentBaselineBaselineArray{ SqlPoolVulnerabilityAssessmentBaselineBaselineArgs{...} }
type SqlPoolVulnerabilityAssessmentBaselineBaselineArrayInput interface {
	pulumi.Input

	ToSqlPoolVulnerabilityAssessmentBaselineBaselineArrayOutput() SqlPoolVulnerabilityAssessmentBaselineBaselineArrayOutput
	ToSqlPoolVulnerabilityAssessmentBaselineBaselineArrayOutputWithContext(context.Context) SqlPoolVulnerabilityAssessmentBaselineBaselineArrayOutput
}

type SqlPoolVulnerabilityAssessmentBaselineBaselineArray []SqlPoolVulnerabilityAssessmentBaselineBaselineInput

func (SqlPoolVulnerabilityAssessmentBaselineBaselineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlPoolVulnerabilityAssessmentBaselineBaseline)(nil)).Elem()
}

func (i SqlPoolVulnerabilityAssessmentBaselineBaselineArray) ToSqlPoolVulnerabilityAssessmentBaselineBaselineArrayOutput() SqlPoolVulnerabilityAssessmentBaselineBaselineArrayOutput {
	return i.ToSqlPoolVulnerabilityAssessmentBaselineBaselineArrayOutputWithContext(context.Background())
}

func (i SqlPoolVulnerabilityAssessmentBaselineBaselineArray) ToSqlPoolVulnerabilityAssessmentBaselineBaselineArrayOutputWithContext(ctx context.Context) SqlPoolVulnerabilityAssessmentBaselineBaselineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlPoolVulnerabilityAssessmentBaselineBaselineArrayOutput)
}

type SqlPoolVulnerabilityAssessmentBaselineBaselineOutput struct{ *pulumi.OutputState }

func (SqlPoolVulnerabilityAssessmentBaselineBaselineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlPoolVulnerabilityAssessmentBaselineBaseline)(nil)).Elem()
}

func (o SqlPoolVulnerabilityAssessmentBaselineBaselineOutput) ToSqlPoolVulnerabilityAssessmentBaselineBaselineOutput() SqlPoolVulnerabilityAssessmentBaselineBaselineOutput {
	return o
}

func (o SqlPoolVulnerabilityAssessmentBaselineBaselineOutput) ToSqlPoolVulnerabilityAssessmentBaselineBaselineOutputWithContext(ctx context.Context) SqlPoolVulnerabilityAssessmentBaselineBaselineOutput {
	return o
}

// Specifies a list of rule baseline result.
func (o SqlPoolVulnerabilityAssessmentBaselineBaselineOutput) Results() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SqlPoolVulnerabilityAssessmentBaselineBaseline) []string { return v.Results }).(pulumi.StringArrayOutput)
}

type SqlPoolVulnerabilityAssessmentBaselineBaselineArrayOutput struct{ *pulumi.OutputState }

func (SqlPoolVulnerabilityAssessmentBaselineBaselineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlPoolVulnerabilityAssessmentBaselineBaseline)(nil)).Elem()
}

func (o SqlPoolVulnerabilityAssessmentBaselineBaselineArrayOutput) ToSqlPoolVulnerabilityAssessmentBaselineBaselineArrayOutput() SqlPoolVulnerabilityAssessmentBaselineBaselineArrayOutput {
	return o
}

func (o SqlPoolVulnerabilityAssessmentBaselineBaselineArrayOutput) ToSqlPoolVulnerabilityAssessmentBaselineBaselineArrayOutputWithContext(ctx context.Context) SqlPoolVulnerabilityAssessmentBaselineBaselineArrayOutput {
	return o
}

func (o SqlPoolVulnerabilityAssessmentBaselineBaselineArrayOutput) Index(i pulumi.IntInput) SqlPoolVulnerabilityAssessmentBaselineBaselineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SqlPoolVulnerabilityAssessmentBaselineBaseline {
		return vs[0].([]SqlPoolVulnerabilityAssessmentBaselineBaseline)[vs[1].(int)]
	}).(SqlPoolVulnerabilityAssessmentBaselineBaselineOutput)
}

type SqlPoolVulnerabilityAssessmentRecurringScans struct {
	// Boolean flag which specifies if the schedule scan notification will be sent to the subscription administrators. Defaults to `false`.
	EmailSubscriptionAdminsEnabled *bool `pulumi:"emailSubscriptionAdminsEnabled"`
	// Specifies an array of email addresses to which the scan notification is sent.
	Emails []string `pulumi:"emails"`
	// Boolean flag which specifies if recurring scans is enabled or disabled. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
}

// SqlPoolVulnerabilityAssessmentRecurringScansInput is an input type that accepts SqlPoolVulnerabilityAssessmentRecurringScansArgs and SqlPoolVulnerabilityAssessmentRecurringScansOutput values.
// You can construct a concrete instance of `SqlPoolVulnerabilityAssessmentRecurringScansInput` via:
//
//	SqlPoolVulnerabilityAssessmentRecurringScansArgs{...}
type SqlPoolVulnerabilityAssessmentRecurringScansInput interface {
	pulumi.Input

	ToSqlPoolVulnerabilityAssessmentRecurringScansOutput() SqlPoolVulnerabilityAssessmentRecurringScansOutput
	ToSqlPoolVulnerabilityAssessmentRecurringScansOutputWithContext(context.Context) SqlPoolVulnerabilityAssessmentRecurringScansOutput
}

type SqlPoolVulnerabilityAssessmentRecurringScansArgs struct {
	// Boolean flag which specifies if the schedule scan notification will be sent to the subscription administrators. Defaults to `false`.
	EmailSubscriptionAdminsEnabled pulumi.BoolPtrInput `pulumi:"emailSubscriptionAdminsEnabled"`
	// Specifies an array of email addresses to which the scan notification is sent.
	Emails pulumi.StringArrayInput `pulumi:"emails"`
	// Boolean flag which specifies if recurring scans is enabled or disabled. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (SqlPoolVulnerabilityAssessmentRecurringScansArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlPoolVulnerabilityAssessmentRecurringScans)(nil)).Elem()
}

func (i SqlPoolVulnerabilityAssessmentRecurringScansArgs) ToSqlPoolVulnerabilityAssessmentRecurringScansOutput() SqlPoolVulnerabilityAssessmentRecurringScansOutput {
	return i.ToSqlPoolVulnerabilityAssessmentRecurringScansOutputWithContext(context.Background())
}

func (i SqlPoolVulnerabilityAssessmentRecurringScansArgs) ToSqlPoolVulnerabilityAssessmentRecurringScansOutputWithContext(ctx context.Context) SqlPoolVulnerabilityAssessmentRecurringScansOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlPoolVulnerabilityAssessmentRecurringScansOutput)
}

func (i SqlPoolVulnerabilityAssessmentRecurringScansArgs) ToSqlPoolVulnerabilityAssessmentRecurringScansPtrOutput() SqlPoolVulnerabilityAssessmentRecurringScansPtrOutput {
	return i.ToSqlPoolVulnerabilityAssessmentRecurringScansPtrOutputWithContext(context.Background())
}

func (i SqlPoolVulnerabilityAssessmentRecurringScansArgs) ToSqlPoolVulnerabilityAssessmentRecurringScansPtrOutputWithContext(ctx context.Context) SqlPoolVulnerabilityAssessmentRecurringScansPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlPoolVulnerabilityAssessmentRecurringScansOutput).ToSqlPoolVulnerabilityAssessmentRecurringScansPtrOutputWithContext(ctx)
}

// SqlPoolVulnerabilityAssessmentRecurringScansPtrInput is an input type that accepts SqlPoolVulnerabilityAssessmentRecurringScansArgs, SqlPoolVulnerabilityAssessmentRecurringScansPtr and SqlPoolVulnerabilityAssessmentRecurringScansPtrOutput values.
// You can construct a concrete instance of `SqlPoolVulnerabilityAssessmentRecurringScansPtrInput` via:
//
//	        SqlPoolVulnerabilityAssessmentRecurringScansArgs{...}
//
//	or:
//
//	        nil
type SqlPoolVulnerabilityAssessmentRecurringScansPtrInput interface {
	pulumi.Input

	ToSqlPoolVulnerabilityAssessmentRecurringScansPtrOutput() SqlPoolVulnerabilityAssessmentRecurringScansPtrOutput
	ToSqlPoolVulnerabilityAssessmentRecurringScansPtrOutputWithContext(context.Context) SqlPoolVulnerabilityAssessmentRecurringScansPtrOutput
}

type sqlPoolVulnerabilityAssessmentRecurringScansPtrType SqlPoolVulnerabilityAssessmentRecurringScansArgs

func SqlPoolVulnerabilityAssessmentRecurringScansPtr(v *SqlPoolVulnerabilityAssessmentRecurringScansArgs) SqlPoolVulnerabilityAssessmentRecurringScansPtrInput {
	return (*sqlPoolVulnerabilityAssessmentRecurringScansPtrType)(v)
}

func (*sqlPoolVulnerabilityAssessmentRecurringScansPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlPoolVulnerabilityAssessmentRecurringScans)(nil)).Elem()
}

func (i *sqlPoolVulnerabilityAssessmentRecurringScansPtrType) ToSqlPoolVulnerabilityAssessmentRecurringScansPtrOutput() SqlPoolVulnerabilityAssessmentRecurringScansPtrOutput {
	return i.ToSqlPoolVulnerabilityAssessmentRecurringScansPtrOutputWithContext(context.Background())
}

func (i *sqlPoolVulnerabilityAssessmentRecurringScansPtrType) ToSqlPoolVulnerabilityAssessmentRecurringScansPtrOutputWithContext(ctx context.Context) SqlPoolVulnerabilityAssessmentRecurringScansPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlPoolVulnerabilityAssessmentRecurringScansPtrOutput)
}

type SqlPoolVulnerabilityAssessmentRecurringScansOutput struct{ *pulumi.OutputState }

func (SqlPoolVulnerabilityAssessmentRecurringScansOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlPoolVulnerabilityAssessmentRecurringScans)(nil)).Elem()
}

func (o SqlPoolVulnerabilityAssessmentRecurringScansOutput) ToSqlPoolVulnerabilityAssessmentRecurringScansOutput() SqlPoolVulnerabilityAssessmentRecurringScansOutput {
	return o
}

func (o SqlPoolVulnerabilityAssessmentRecurringScansOutput) ToSqlPoolVulnerabilityAssessmentRecurringScansOutputWithContext(ctx context.Context) SqlPoolVulnerabilityAssessmentRecurringScansOutput {
	return o
}

func (o SqlPoolVulnerabilityAssessmentRecurringScansOutput) ToSqlPoolVulnerabilityAssessmentRecurringScansPtrOutput() SqlPoolVulnerabilityAssessmentRecurringScansPtrOutput {
	return o.ToSqlPoolVulnerabilityAssessmentRecurringScansPtrOutputWithContext(context.Background())
}

func (o SqlPoolVulnerabilityAssessmentRecurringScansOutput) ToSqlPoolVulnerabilityAssessmentRecurringScansPtrOutputWithContext(ctx context.Context) SqlPoolVulnerabilityAssessmentRecurringScansPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SqlPoolVulnerabilityAssessmentRecurringScans) *SqlPoolVulnerabilityAssessmentRecurringScans {
		return &v
	}).(SqlPoolVulnerabilityAssessmentRecurringScansPtrOutput)
}

// Boolean flag which specifies if the schedule scan notification will be sent to the subscription administrators. Defaults to `false`.
func (o SqlPoolVulnerabilityAssessmentRecurringScansOutput) EmailSubscriptionAdminsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlPoolVulnerabilityAssessmentRecurringScans) *bool { return v.EmailSubscriptionAdminsEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies an array of email addresses to which the scan notification is sent.
func (o SqlPoolVulnerabilityAssessmentRecurringScansOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SqlPoolVulnerabilityAssessmentRecurringScans) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

// Boolean flag which specifies if recurring scans is enabled or disabled. Defaults to `false`.
func (o SqlPoolVulnerabilityAssessmentRecurringScansOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlPoolVulnerabilityAssessmentRecurringScans) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type SqlPoolVulnerabilityAssessmentRecurringScansPtrOutput struct{ *pulumi.OutputState }

func (SqlPoolVulnerabilityAssessmentRecurringScansPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlPoolVulnerabilityAssessmentRecurringScans)(nil)).Elem()
}

func (o SqlPoolVulnerabilityAssessmentRecurringScansPtrOutput) ToSqlPoolVulnerabilityAssessmentRecurringScansPtrOutput() SqlPoolVulnerabilityAssessmentRecurringScansPtrOutput {
	return o
}

func (o SqlPoolVulnerabilityAssessmentRecurringScansPtrOutput) ToSqlPoolVulnerabilityAssessmentRecurringScansPtrOutputWithContext(ctx context.Context) SqlPoolVulnerabilityAssessmentRecurringScansPtrOutput {
	return o
}

func (o SqlPoolVulnerabilityAssessmentRecurringScansPtrOutput) Elem() SqlPoolVulnerabilityAssessmentRecurringScansOutput {
	return o.ApplyT(func(v *SqlPoolVulnerabilityAssessmentRecurringScans) SqlPoolVulnerabilityAssessmentRecurringScans {
		if v != nil {
			return *v
		}
		var ret SqlPoolVulnerabilityAssessmentRecurringScans
		return ret
	}).(SqlPoolVulnerabilityAssessmentRecurringScansOutput)
}

// Boolean flag which specifies if the schedule scan notification will be sent to the subscription administrators. Defaults to `false`.
func (o SqlPoolVulnerabilityAssessmentRecurringScansPtrOutput) EmailSubscriptionAdminsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlPoolVulnerabilityAssessmentRecurringScans) *bool {
		if v == nil {
			return nil
		}
		return v.EmailSubscriptionAdminsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies an array of email addresses to which the scan notification is sent.
func (o SqlPoolVulnerabilityAssessmentRecurringScansPtrOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SqlPoolVulnerabilityAssessmentRecurringScans) []string {
		if v == nil {
			return nil
		}
		return v.Emails
	}).(pulumi.StringArrayOutput)
}

// Boolean flag which specifies if recurring scans is enabled or disabled. Defaults to `false`.
func (o SqlPoolVulnerabilityAssessmentRecurringScansPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlPoolVulnerabilityAssessmentRecurringScans) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type WorkspaceAadAdminType struct {
	// The login name of the Azure AD Administrator of this Synapse Workspace.
	Login string `pulumi:"login"`
	// The object id of the Azure AD Administrator of this Synapse Workspace.
	ObjectId string `pulumi:"objectId"`
	// The tenant id of the Azure AD Administrator of this Synapse Workspace.
	TenantId string `pulumi:"tenantId"`
}

// WorkspaceAadAdminTypeInput is an input type that accepts WorkspaceAadAdminTypeArgs and WorkspaceAadAdminTypeOutput values.
// You can construct a concrete instance of `WorkspaceAadAdminTypeInput` via:
//
//	WorkspaceAadAdminTypeArgs{...}
type WorkspaceAadAdminTypeInput interface {
	pulumi.Input

	ToWorkspaceAadAdminTypeOutput() WorkspaceAadAdminTypeOutput
	ToWorkspaceAadAdminTypeOutputWithContext(context.Context) WorkspaceAadAdminTypeOutput
}

type WorkspaceAadAdminTypeArgs struct {
	// The login name of the Azure AD Administrator of this Synapse Workspace.
	Login pulumi.StringInput `pulumi:"login"`
	// The object id of the Azure AD Administrator of this Synapse Workspace.
	ObjectId pulumi.StringInput `pulumi:"objectId"`
	// The tenant id of the Azure AD Administrator of this Synapse Workspace.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (WorkspaceAadAdminTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAadAdminType)(nil)).Elem()
}

func (i WorkspaceAadAdminTypeArgs) ToWorkspaceAadAdminTypeOutput() WorkspaceAadAdminTypeOutput {
	return i.ToWorkspaceAadAdminTypeOutputWithContext(context.Background())
}

func (i WorkspaceAadAdminTypeArgs) ToWorkspaceAadAdminTypeOutputWithContext(ctx context.Context) WorkspaceAadAdminTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAadAdminTypeOutput)
}

func (i WorkspaceAadAdminTypeArgs) ToWorkspaceAadAdminTypePtrOutput() WorkspaceAadAdminTypePtrOutput {
	return i.ToWorkspaceAadAdminTypePtrOutputWithContext(context.Background())
}

func (i WorkspaceAadAdminTypeArgs) ToWorkspaceAadAdminTypePtrOutputWithContext(ctx context.Context) WorkspaceAadAdminTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAadAdminTypeOutput).ToWorkspaceAadAdminTypePtrOutputWithContext(ctx)
}

// WorkspaceAadAdminTypePtrInput is an input type that accepts WorkspaceAadAdminTypeArgs, WorkspaceAadAdminTypePtr and WorkspaceAadAdminTypePtrOutput values.
// You can construct a concrete instance of `WorkspaceAadAdminTypePtrInput` via:
//
//	        WorkspaceAadAdminTypeArgs{...}
//
//	or:
//
//	        nil
type WorkspaceAadAdminTypePtrInput interface {
	pulumi.Input

	ToWorkspaceAadAdminTypePtrOutput() WorkspaceAadAdminTypePtrOutput
	ToWorkspaceAadAdminTypePtrOutputWithContext(context.Context) WorkspaceAadAdminTypePtrOutput
}

type workspaceAadAdminTypePtrType WorkspaceAadAdminTypeArgs

func WorkspaceAadAdminTypePtr(v *WorkspaceAadAdminTypeArgs) WorkspaceAadAdminTypePtrInput {
	return (*workspaceAadAdminTypePtrType)(v)
}

func (*workspaceAadAdminTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceAadAdminType)(nil)).Elem()
}

func (i *workspaceAadAdminTypePtrType) ToWorkspaceAadAdminTypePtrOutput() WorkspaceAadAdminTypePtrOutput {
	return i.ToWorkspaceAadAdminTypePtrOutputWithContext(context.Background())
}

func (i *workspaceAadAdminTypePtrType) ToWorkspaceAadAdminTypePtrOutputWithContext(ctx context.Context) WorkspaceAadAdminTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAadAdminTypePtrOutput)
}

type WorkspaceAadAdminTypeOutput struct{ *pulumi.OutputState }

func (WorkspaceAadAdminTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAadAdminType)(nil)).Elem()
}

func (o WorkspaceAadAdminTypeOutput) ToWorkspaceAadAdminTypeOutput() WorkspaceAadAdminTypeOutput {
	return o
}

func (o WorkspaceAadAdminTypeOutput) ToWorkspaceAadAdminTypeOutputWithContext(ctx context.Context) WorkspaceAadAdminTypeOutput {
	return o
}

func (o WorkspaceAadAdminTypeOutput) ToWorkspaceAadAdminTypePtrOutput() WorkspaceAadAdminTypePtrOutput {
	return o.ToWorkspaceAadAdminTypePtrOutputWithContext(context.Background())
}

func (o WorkspaceAadAdminTypeOutput) ToWorkspaceAadAdminTypePtrOutputWithContext(ctx context.Context) WorkspaceAadAdminTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceAadAdminType) *WorkspaceAadAdminType {
		return &v
	}).(WorkspaceAadAdminTypePtrOutput)
}

// The login name of the Azure AD Administrator of this Synapse Workspace.
func (o WorkspaceAadAdminTypeOutput) Login() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAadAdminType) string { return v.Login }).(pulumi.StringOutput)
}

// The object id of the Azure AD Administrator of this Synapse Workspace.
func (o WorkspaceAadAdminTypeOutput) ObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAadAdminType) string { return v.ObjectId }).(pulumi.StringOutput)
}

// The tenant id of the Azure AD Administrator of this Synapse Workspace.
func (o WorkspaceAadAdminTypeOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAadAdminType) string { return v.TenantId }).(pulumi.StringOutput)
}

type WorkspaceAadAdminTypePtrOutput struct{ *pulumi.OutputState }

func (WorkspaceAadAdminTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceAadAdminType)(nil)).Elem()
}

func (o WorkspaceAadAdminTypePtrOutput) ToWorkspaceAadAdminTypePtrOutput() WorkspaceAadAdminTypePtrOutput {
	return o
}

func (o WorkspaceAadAdminTypePtrOutput) ToWorkspaceAadAdminTypePtrOutputWithContext(ctx context.Context) WorkspaceAadAdminTypePtrOutput {
	return o
}

func (o WorkspaceAadAdminTypePtrOutput) Elem() WorkspaceAadAdminTypeOutput {
	return o.ApplyT(func(v *WorkspaceAadAdminType) WorkspaceAadAdminType {
		if v != nil {
			return *v
		}
		var ret WorkspaceAadAdminType
		return ret
	}).(WorkspaceAadAdminTypeOutput)
}

// The login name of the Azure AD Administrator of this Synapse Workspace.
func (o WorkspaceAadAdminTypePtrOutput) Login() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceAadAdminType) *string {
		if v == nil {
			return nil
		}
		return &v.Login
	}).(pulumi.StringPtrOutput)
}

// The object id of the Azure AD Administrator of this Synapse Workspace.
func (o WorkspaceAadAdminTypePtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceAadAdminType) *string {
		if v == nil {
			return nil
		}
		return &v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// The tenant id of the Azure AD Administrator of this Synapse Workspace.
func (o WorkspaceAadAdminTypePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceAadAdminType) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

type WorkspaceAzureDevopsRepo struct {
	// Specifies the Azure DevOps account name.
	AccountName string `pulumi:"accountName"`
	// Specifies the collaboration branch of the repository to get code from.
	BranchName string `pulumi:"branchName"`
	// The last commit ID.
	LastCommitId *string `pulumi:"lastCommitId"`
	// Specifies the name of the Azure DevOps project.
	ProjectName string `pulumi:"projectName"`
	// Specifies the name of the git repository.
	RepositoryName string `pulumi:"repositoryName"`
	// Specifies the root folder within the repository. Set to `/` for the top level.
	RootFolder string `pulumi:"rootFolder"`
	// the ID of the tenant for the Azure DevOps account.
	TenantId *string `pulumi:"tenantId"`
}

// WorkspaceAzureDevopsRepoInput is an input type that accepts WorkspaceAzureDevopsRepoArgs and WorkspaceAzureDevopsRepoOutput values.
// You can construct a concrete instance of `WorkspaceAzureDevopsRepoInput` via:
//
//	WorkspaceAzureDevopsRepoArgs{...}
type WorkspaceAzureDevopsRepoInput interface {
	pulumi.Input

	ToWorkspaceAzureDevopsRepoOutput() WorkspaceAzureDevopsRepoOutput
	ToWorkspaceAzureDevopsRepoOutputWithContext(context.Context) WorkspaceAzureDevopsRepoOutput
}

type WorkspaceAzureDevopsRepoArgs struct {
	// Specifies the Azure DevOps account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// Specifies the collaboration branch of the repository to get code from.
	BranchName pulumi.StringInput `pulumi:"branchName"`
	// The last commit ID.
	LastCommitId pulumi.StringPtrInput `pulumi:"lastCommitId"`
	// Specifies the name of the Azure DevOps project.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// Specifies the name of the git repository.
	RepositoryName pulumi.StringInput `pulumi:"repositoryName"`
	// Specifies the root folder within the repository. Set to `/` for the top level.
	RootFolder pulumi.StringInput `pulumi:"rootFolder"`
	// the ID of the tenant for the Azure DevOps account.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (WorkspaceAzureDevopsRepoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAzureDevopsRepo)(nil)).Elem()
}

func (i WorkspaceAzureDevopsRepoArgs) ToWorkspaceAzureDevopsRepoOutput() WorkspaceAzureDevopsRepoOutput {
	return i.ToWorkspaceAzureDevopsRepoOutputWithContext(context.Background())
}

func (i WorkspaceAzureDevopsRepoArgs) ToWorkspaceAzureDevopsRepoOutputWithContext(ctx context.Context) WorkspaceAzureDevopsRepoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAzureDevopsRepoOutput)
}

func (i WorkspaceAzureDevopsRepoArgs) ToWorkspaceAzureDevopsRepoPtrOutput() WorkspaceAzureDevopsRepoPtrOutput {
	return i.ToWorkspaceAzureDevopsRepoPtrOutputWithContext(context.Background())
}

func (i WorkspaceAzureDevopsRepoArgs) ToWorkspaceAzureDevopsRepoPtrOutputWithContext(ctx context.Context) WorkspaceAzureDevopsRepoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAzureDevopsRepoOutput).ToWorkspaceAzureDevopsRepoPtrOutputWithContext(ctx)
}

// WorkspaceAzureDevopsRepoPtrInput is an input type that accepts WorkspaceAzureDevopsRepoArgs, WorkspaceAzureDevopsRepoPtr and WorkspaceAzureDevopsRepoPtrOutput values.
// You can construct a concrete instance of `WorkspaceAzureDevopsRepoPtrInput` via:
//
//	        WorkspaceAzureDevopsRepoArgs{...}
//
//	or:
//
//	        nil
type WorkspaceAzureDevopsRepoPtrInput interface {
	pulumi.Input

	ToWorkspaceAzureDevopsRepoPtrOutput() WorkspaceAzureDevopsRepoPtrOutput
	ToWorkspaceAzureDevopsRepoPtrOutputWithContext(context.Context) WorkspaceAzureDevopsRepoPtrOutput
}

type workspaceAzureDevopsRepoPtrType WorkspaceAzureDevopsRepoArgs

func WorkspaceAzureDevopsRepoPtr(v *WorkspaceAzureDevopsRepoArgs) WorkspaceAzureDevopsRepoPtrInput {
	return (*workspaceAzureDevopsRepoPtrType)(v)
}

func (*workspaceAzureDevopsRepoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceAzureDevopsRepo)(nil)).Elem()
}

func (i *workspaceAzureDevopsRepoPtrType) ToWorkspaceAzureDevopsRepoPtrOutput() WorkspaceAzureDevopsRepoPtrOutput {
	return i.ToWorkspaceAzureDevopsRepoPtrOutputWithContext(context.Background())
}

func (i *workspaceAzureDevopsRepoPtrType) ToWorkspaceAzureDevopsRepoPtrOutputWithContext(ctx context.Context) WorkspaceAzureDevopsRepoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceAzureDevopsRepoPtrOutput)
}

type WorkspaceAzureDevopsRepoOutput struct{ *pulumi.OutputState }

func (WorkspaceAzureDevopsRepoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceAzureDevopsRepo)(nil)).Elem()
}

func (o WorkspaceAzureDevopsRepoOutput) ToWorkspaceAzureDevopsRepoOutput() WorkspaceAzureDevopsRepoOutput {
	return o
}

func (o WorkspaceAzureDevopsRepoOutput) ToWorkspaceAzureDevopsRepoOutputWithContext(ctx context.Context) WorkspaceAzureDevopsRepoOutput {
	return o
}

func (o WorkspaceAzureDevopsRepoOutput) ToWorkspaceAzureDevopsRepoPtrOutput() WorkspaceAzureDevopsRepoPtrOutput {
	return o.ToWorkspaceAzureDevopsRepoPtrOutputWithContext(context.Background())
}

func (o WorkspaceAzureDevopsRepoOutput) ToWorkspaceAzureDevopsRepoPtrOutputWithContext(ctx context.Context) WorkspaceAzureDevopsRepoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceAzureDevopsRepo) *WorkspaceAzureDevopsRepo {
		return &v
	}).(WorkspaceAzureDevopsRepoPtrOutput)
}

// Specifies the Azure DevOps account name.
func (o WorkspaceAzureDevopsRepoOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAzureDevopsRepo) string { return v.AccountName }).(pulumi.StringOutput)
}

// Specifies the collaboration branch of the repository to get code from.
func (o WorkspaceAzureDevopsRepoOutput) BranchName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAzureDevopsRepo) string { return v.BranchName }).(pulumi.StringOutput)
}

// The last commit ID.
func (o WorkspaceAzureDevopsRepoOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceAzureDevopsRepo) *string { return v.LastCommitId }).(pulumi.StringPtrOutput)
}

// Specifies the name of the Azure DevOps project.
func (o WorkspaceAzureDevopsRepoOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAzureDevopsRepo) string { return v.ProjectName }).(pulumi.StringOutput)
}

// Specifies the name of the git repository.
func (o WorkspaceAzureDevopsRepoOutput) RepositoryName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAzureDevopsRepo) string { return v.RepositoryName }).(pulumi.StringOutput)
}

// Specifies the root folder within the repository. Set to `/` for the top level.
func (o WorkspaceAzureDevopsRepoOutput) RootFolder() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceAzureDevopsRepo) string { return v.RootFolder }).(pulumi.StringOutput)
}

// the ID of the tenant for the Azure DevOps account.
func (o WorkspaceAzureDevopsRepoOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceAzureDevopsRepo) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type WorkspaceAzureDevopsRepoPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceAzureDevopsRepoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceAzureDevopsRepo)(nil)).Elem()
}

func (o WorkspaceAzureDevopsRepoPtrOutput) ToWorkspaceAzureDevopsRepoPtrOutput() WorkspaceAzureDevopsRepoPtrOutput {
	return o
}

func (o WorkspaceAzureDevopsRepoPtrOutput) ToWorkspaceAzureDevopsRepoPtrOutputWithContext(ctx context.Context) WorkspaceAzureDevopsRepoPtrOutput {
	return o
}

func (o WorkspaceAzureDevopsRepoPtrOutput) Elem() WorkspaceAzureDevopsRepoOutput {
	return o.ApplyT(func(v *WorkspaceAzureDevopsRepo) WorkspaceAzureDevopsRepo {
		if v != nil {
			return *v
		}
		var ret WorkspaceAzureDevopsRepo
		return ret
	}).(WorkspaceAzureDevopsRepoOutput)
}

// Specifies the Azure DevOps account name.
func (o WorkspaceAzureDevopsRepoPtrOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceAzureDevopsRepo) *string {
		if v == nil {
			return nil
		}
		return &v.AccountName
	}).(pulumi.StringPtrOutput)
}

// Specifies the collaboration branch of the repository to get code from.
func (o WorkspaceAzureDevopsRepoPtrOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceAzureDevopsRepo) *string {
		if v == nil {
			return nil
		}
		return &v.BranchName
	}).(pulumi.StringPtrOutput)
}

// The last commit ID.
func (o WorkspaceAzureDevopsRepoPtrOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceAzureDevopsRepo) *string {
		if v == nil {
			return nil
		}
		return v.LastCommitId
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of the Azure DevOps project.
func (o WorkspaceAzureDevopsRepoPtrOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceAzureDevopsRepo) *string {
		if v == nil {
			return nil
		}
		return &v.ProjectName
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of the git repository.
func (o WorkspaceAzureDevopsRepoPtrOutput) RepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceAzureDevopsRepo) *string {
		if v == nil {
			return nil
		}
		return &v.RepositoryName
	}).(pulumi.StringPtrOutput)
}

// Specifies the root folder within the repository. Set to `/` for the top level.
func (o WorkspaceAzureDevopsRepoPtrOutput) RootFolder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceAzureDevopsRepo) *string {
		if v == nil {
			return nil
		}
		return &v.RootFolder
	}).(pulumi.StringPtrOutput)
}

// the ID of the tenant for the Azure DevOps account.
func (o WorkspaceAzureDevopsRepoPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceAzureDevopsRepo) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

type WorkspaceCustomerManagedKey struct {
	// An identifier for the key. Name needs to match the name of the key used with the `synapse.WorkspaceKey` resource. Defaults to "cmk" if not specified.
	KeyName *string `pulumi:"keyName"`
	// The Azure Key Vault Key Versionless ID to be used as the Customer Managed Key (CMK) for double encryption (e.g. `https://example-keyvault.vault.azure.net/type/cmk/`).
	KeyVersionlessId string `pulumi:"keyVersionlessId"`
}

// WorkspaceCustomerManagedKeyInput is an input type that accepts WorkspaceCustomerManagedKeyArgs and WorkspaceCustomerManagedKeyOutput values.
// You can construct a concrete instance of `WorkspaceCustomerManagedKeyInput` via:
//
//	WorkspaceCustomerManagedKeyArgs{...}
type WorkspaceCustomerManagedKeyInput interface {
	pulumi.Input

	ToWorkspaceCustomerManagedKeyOutput() WorkspaceCustomerManagedKeyOutput
	ToWorkspaceCustomerManagedKeyOutputWithContext(context.Context) WorkspaceCustomerManagedKeyOutput
}

type WorkspaceCustomerManagedKeyArgs struct {
	// An identifier for the key. Name needs to match the name of the key used with the `synapse.WorkspaceKey` resource. Defaults to "cmk" if not specified.
	KeyName pulumi.StringPtrInput `pulumi:"keyName"`
	// The Azure Key Vault Key Versionless ID to be used as the Customer Managed Key (CMK) for double encryption (e.g. `https://example-keyvault.vault.azure.net/type/cmk/`).
	KeyVersionlessId pulumi.StringInput `pulumi:"keyVersionlessId"`
}

func (WorkspaceCustomerManagedKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceCustomerManagedKey)(nil)).Elem()
}

func (i WorkspaceCustomerManagedKeyArgs) ToWorkspaceCustomerManagedKeyOutput() WorkspaceCustomerManagedKeyOutput {
	return i.ToWorkspaceCustomerManagedKeyOutputWithContext(context.Background())
}

func (i WorkspaceCustomerManagedKeyArgs) ToWorkspaceCustomerManagedKeyOutputWithContext(ctx context.Context) WorkspaceCustomerManagedKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceCustomerManagedKeyOutput)
}

func (i WorkspaceCustomerManagedKeyArgs) ToWorkspaceCustomerManagedKeyPtrOutput() WorkspaceCustomerManagedKeyPtrOutput {
	return i.ToWorkspaceCustomerManagedKeyPtrOutputWithContext(context.Background())
}

func (i WorkspaceCustomerManagedKeyArgs) ToWorkspaceCustomerManagedKeyPtrOutputWithContext(ctx context.Context) WorkspaceCustomerManagedKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceCustomerManagedKeyOutput).ToWorkspaceCustomerManagedKeyPtrOutputWithContext(ctx)
}

// WorkspaceCustomerManagedKeyPtrInput is an input type that accepts WorkspaceCustomerManagedKeyArgs, WorkspaceCustomerManagedKeyPtr and WorkspaceCustomerManagedKeyPtrOutput values.
// You can construct a concrete instance of `WorkspaceCustomerManagedKeyPtrInput` via:
//
//	        WorkspaceCustomerManagedKeyArgs{...}
//
//	or:
//
//	        nil
type WorkspaceCustomerManagedKeyPtrInput interface {
	pulumi.Input

	ToWorkspaceCustomerManagedKeyPtrOutput() WorkspaceCustomerManagedKeyPtrOutput
	ToWorkspaceCustomerManagedKeyPtrOutputWithContext(context.Context) WorkspaceCustomerManagedKeyPtrOutput
}

type workspaceCustomerManagedKeyPtrType WorkspaceCustomerManagedKeyArgs

func WorkspaceCustomerManagedKeyPtr(v *WorkspaceCustomerManagedKeyArgs) WorkspaceCustomerManagedKeyPtrInput {
	return (*workspaceCustomerManagedKeyPtrType)(v)
}

func (*workspaceCustomerManagedKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceCustomerManagedKey)(nil)).Elem()
}

func (i *workspaceCustomerManagedKeyPtrType) ToWorkspaceCustomerManagedKeyPtrOutput() WorkspaceCustomerManagedKeyPtrOutput {
	return i.ToWorkspaceCustomerManagedKeyPtrOutputWithContext(context.Background())
}

func (i *workspaceCustomerManagedKeyPtrType) ToWorkspaceCustomerManagedKeyPtrOutputWithContext(ctx context.Context) WorkspaceCustomerManagedKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceCustomerManagedKeyPtrOutput)
}

type WorkspaceCustomerManagedKeyOutput struct{ *pulumi.OutputState }

func (WorkspaceCustomerManagedKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceCustomerManagedKey)(nil)).Elem()
}

func (o WorkspaceCustomerManagedKeyOutput) ToWorkspaceCustomerManagedKeyOutput() WorkspaceCustomerManagedKeyOutput {
	return o
}

func (o WorkspaceCustomerManagedKeyOutput) ToWorkspaceCustomerManagedKeyOutputWithContext(ctx context.Context) WorkspaceCustomerManagedKeyOutput {
	return o
}

func (o WorkspaceCustomerManagedKeyOutput) ToWorkspaceCustomerManagedKeyPtrOutput() WorkspaceCustomerManagedKeyPtrOutput {
	return o.ToWorkspaceCustomerManagedKeyPtrOutputWithContext(context.Background())
}

func (o WorkspaceCustomerManagedKeyOutput) ToWorkspaceCustomerManagedKeyPtrOutputWithContext(ctx context.Context) WorkspaceCustomerManagedKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceCustomerManagedKey) *WorkspaceCustomerManagedKey {
		return &v
	}).(WorkspaceCustomerManagedKeyPtrOutput)
}

// An identifier for the key. Name needs to match the name of the key used with the `synapse.WorkspaceKey` resource. Defaults to "cmk" if not specified.
func (o WorkspaceCustomerManagedKeyOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceCustomerManagedKey) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

// The Azure Key Vault Key Versionless ID to be used as the Customer Managed Key (CMK) for double encryption (e.g. `https://example-keyvault.vault.azure.net/type/cmk/`).
func (o WorkspaceCustomerManagedKeyOutput) KeyVersionlessId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceCustomerManagedKey) string { return v.KeyVersionlessId }).(pulumi.StringOutput)
}

type WorkspaceCustomerManagedKeyPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceCustomerManagedKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceCustomerManagedKey)(nil)).Elem()
}

func (o WorkspaceCustomerManagedKeyPtrOutput) ToWorkspaceCustomerManagedKeyPtrOutput() WorkspaceCustomerManagedKeyPtrOutput {
	return o
}

func (o WorkspaceCustomerManagedKeyPtrOutput) ToWorkspaceCustomerManagedKeyPtrOutputWithContext(ctx context.Context) WorkspaceCustomerManagedKeyPtrOutput {
	return o
}

func (o WorkspaceCustomerManagedKeyPtrOutput) Elem() WorkspaceCustomerManagedKeyOutput {
	return o.ApplyT(func(v *WorkspaceCustomerManagedKey) WorkspaceCustomerManagedKey {
		if v != nil {
			return *v
		}
		var ret WorkspaceCustomerManagedKey
		return ret
	}).(WorkspaceCustomerManagedKeyOutput)
}

// An identifier for the key. Name needs to match the name of the key used with the `synapse.WorkspaceKey` resource. Defaults to "cmk" if not specified.
func (o WorkspaceCustomerManagedKeyPtrOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceCustomerManagedKey) *string {
		if v == nil {
			return nil
		}
		return v.KeyName
	}).(pulumi.StringPtrOutput)
}

// The Azure Key Vault Key Versionless ID to be used as the Customer Managed Key (CMK) for double encryption (e.g. `https://example-keyvault.vault.azure.net/type/cmk/`).
func (o WorkspaceCustomerManagedKeyPtrOutput) KeyVersionlessId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceCustomerManagedKey) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVersionlessId
	}).(pulumi.StringPtrOutput)
}

type WorkspaceGithubRepo struct {
	// Specifies the GitHub account name.
	AccountName string `pulumi:"accountName"`
	// Specifies the collaboration branch of the repository to get code from.
	BranchName string `pulumi:"branchName"`
	// Specifies the GitHub Enterprise host name. For example: <https://github.mydomain.com>.
	//
	// > **Note:** You must log in to the Synapse UI to complete the authentication to the GitHub repository.
	GitUrl *string `pulumi:"gitUrl"`
	// The last commit ID.
	LastCommitId *string `pulumi:"lastCommitId"`
	// Specifies the name of the git repository.
	RepositoryName string `pulumi:"repositoryName"`
	// Specifies the root folder within the repository. Set to `/` for the top level.
	RootFolder string `pulumi:"rootFolder"`
}

// WorkspaceGithubRepoInput is an input type that accepts WorkspaceGithubRepoArgs and WorkspaceGithubRepoOutput values.
// You can construct a concrete instance of `WorkspaceGithubRepoInput` via:
//
//	WorkspaceGithubRepoArgs{...}
type WorkspaceGithubRepoInput interface {
	pulumi.Input

	ToWorkspaceGithubRepoOutput() WorkspaceGithubRepoOutput
	ToWorkspaceGithubRepoOutputWithContext(context.Context) WorkspaceGithubRepoOutput
}

type WorkspaceGithubRepoArgs struct {
	// Specifies the GitHub account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// Specifies the collaboration branch of the repository to get code from.
	BranchName pulumi.StringInput `pulumi:"branchName"`
	// Specifies the GitHub Enterprise host name. For example: <https://github.mydomain.com>.
	//
	// > **Note:** You must log in to the Synapse UI to complete the authentication to the GitHub repository.
	GitUrl pulumi.StringPtrInput `pulumi:"gitUrl"`
	// The last commit ID.
	LastCommitId pulumi.StringPtrInput `pulumi:"lastCommitId"`
	// Specifies the name of the git repository.
	RepositoryName pulumi.StringInput `pulumi:"repositoryName"`
	// Specifies the root folder within the repository. Set to `/` for the top level.
	RootFolder pulumi.StringInput `pulumi:"rootFolder"`
}

func (WorkspaceGithubRepoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceGithubRepo)(nil)).Elem()
}

func (i WorkspaceGithubRepoArgs) ToWorkspaceGithubRepoOutput() WorkspaceGithubRepoOutput {
	return i.ToWorkspaceGithubRepoOutputWithContext(context.Background())
}

func (i WorkspaceGithubRepoArgs) ToWorkspaceGithubRepoOutputWithContext(ctx context.Context) WorkspaceGithubRepoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceGithubRepoOutput)
}

func (i WorkspaceGithubRepoArgs) ToWorkspaceGithubRepoPtrOutput() WorkspaceGithubRepoPtrOutput {
	return i.ToWorkspaceGithubRepoPtrOutputWithContext(context.Background())
}

func (i WorkspaceGithubRepoArgs) ToWorkspaceGithubRepoPtrOutputWithContext(ctx context.Context) WorkspaceGithubRepoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceGithubRepoOutput).ToWorkspaceGithubRepoPtrOutputWithContext(ctx)
}

// WorkspaceGithubRepoPtrInput is an input type that accepts WorkspaceGithubRepoArgs, WorkspaceGithubRepoPtr and WorkspaceGithubRepoPtrOutput values.
// You can construct a concrete instance of `WorkspaceGithubRepoPtrInput` via:
//
//	        WorkspaceGithubRepoArgs{...}
//
//	or:
//
//	        nil
type WorkspaceGithubRepoPtrInput interface {
	pulumi.Input

	ToWorkspaceGithubRepoPtrOutput() WorkspaceGithubRepoPtrOutput
	ToWorkspaceGithubRepoPtrOutputWithContext(context.Context) WorkspaceGithubRepoPtrOutput
}

type workspaceGithubRepoPtrType WorkspaceGithubRepoArgs

func WorkspaceGithubRepoPtr(v *WorkspaceGithubRepoArgs) WorkspaceGithubRepoPtrInput {
	return (*workspaceGithubRepoPtrType)(v)
}

func (*workspaceGithubRepoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceGithubRepo)(nil)).Elem()
}

func (i *workspaceGithubRepoPtrType) ToWorkspaceGithubRepoPtrOutput() WorkspaceGithubRepoPtrOutput {
	return i.ToWorkspaceGithubRepoPtrOutputWithContext(context.Background())
}

func (i *workspaceGithubRepoPtrType) ToWorkspaceGithubRepoPtrOutputWithContext(ctx context.Context) WorkspaceGithubRepoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceGithubRepoPtrOutput)
}

type WorkspaceGithubRepoOutput struct{ *pulumi.OutputState }

func (WorkspaceGithubRepoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceGithubRepo)(nil)).Elem()
}

func (o WorkspaceGithubRepoOutput) ToWorkspaceGithubRepoOutput() WorkspaceGithubRepoOutput {
	return o
}

func (o WorkspaceGithubRepoOutput) ToWorkspaceGithubRepoOutputWithContext(ctx context.Context) WorkspaceGithubRepoOutput {
	return o
}

func (o WorkspaceGithubRepoOutput) ToWorkspaceGithubRepoPtrOutput() WorkspaceGithubRepoPtrOutput {
	return o.ToWorkspaceGithubRepoPtrOutputWithContext(context.Background())
}

func (o WorkspaceGithubRepoOutput) ToWorkspaceGithubRepoPtrOutputWithContext(ctx context.Context) WorkspaceGithubRepoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceGithubRepo) *WorkspaceGithubRepo {
		return &v
	}).(WorkspaceGithubRepoPtrOutput)
}

// Specifies the GitHub account name.
func (o WorkspaceGithubRepoOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceGithubRepo) string { return v.AccountName }).(pulumi.StringOutput)
}

// Specifies the collaboration branch of the repository to get code from.
func (o WorkspaceGithubRepoOutput) BranchName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceGithubRepo) string { return v.BranchName }).(pulumi.StringOutput)
}

// Specifies the GitHub Enterprise host name. For example: <https://github.mydomain.com>.
//
// > **Note:** You must log in to the Synapse UI to complete the authentication to the GitHub repository.
func (o WorkspaceGithubRepoOutput) GitUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceGithubRepo) *string { return v.GitUrl }).(pulumi.StringPtrOutput)
}

// The last commit ID.
func (o WorkspaceGithubRepoOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceGithubRepo) *string { return v.LastCommitId }).(pulumi.StringPtrOutput)
}

// Specifies the name of the git repository.
func (o WorkspaceGithubRepoOutput) RepositoryName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceGithubRepo) string { return v.RepositoryName }).(pulumi.StringOutput)
}

// Specifies the root folder within the repository. Set to `/` for the top level.
func (o WorkspaceGithubRepoOutput) RootFolder() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceGithubRepo) string { return v.RootFolder }).(pulumi.StringOutput)
}

type WorkspaceGithubRepoPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceGithubRepoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceGithubRepo)(nil)).Elem()
}

func (o WorkspaceGithubRepoPtrOutput) ToWorkspaceGithubRepoPtrOutput() WorkspaceGithubRepoPtrOutput {
	return o
}

func (o WorkspaceGithubRepoPtrOutput) ToWorkspaceGithubRepoPtrOutputWithContext(ctx context.Context) WorkspaceGithubRepoPtrOutput {
	return o
}

func (o WorkspaceGithubRepoPtrOutput) Elem() WorkspaceGithubRepoOutput {
	return o.ApplyT(func(v *WorkspaceGithubRepo) WorkspaceGithubRepo {
		if v != nil {
			return *v
		}
		var ret WorkspaceGithubRepo
		return ret
	}).(WorkspaceGithubRepoOutput)
}

// Specifies the GitHub account name.
func (o WorkspaceGithubRepoPtrOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceGithubRepo) *string {
		if v == nil {
			return nil
		}
		return &v.AccountName
	}).(pulumi.StringPtrOutput)
}

// Specifies the collaboration branch of the repository to get code from.
func (o WorkspaceGithubRepoPtrOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceGithubRepo) *string {
		if v == nil {
			return nil
		}
		return &v.BranchName
	}).(pulumi.StringPtrOutput)
}

// Specifies the GitHub Enterprise host name. For example: <https://github.mydomain.com>.
//
// > **Note:** You must log in to the Synapse UI to complete the authentication to the GitHub repository.
func (o WorkspaceGithubRepoPtrOutput) GitUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceGithubRepo) *string {
		if v == nil {
			return nil
		}
		return v.GitUrl
	}).(pulumi.StringPtrOutput)
}

// The last commit ID.
func (o WorkspaceGithubRepoPtrOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceGithubRepo) *string {
		if v == nil {
			return nil
		}
		return v.LastCommitId
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of the git repository.
func (o WorkspaceGithubRepoPtrOutput) RepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceGithubRepo) *string {
		if v == nil {
			return nil
		}
		return &v.RepositoryName
	}).(pulumi.StringPtrOutput)
}

// Specifies the root folder within the repository. Set to `/` for the top level.
func (o WorkspaceGithubRepoPtrOutput) RootFolder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceGithubRepo) *string {
		if v == nil {
			return nil
		}
		return &v.RootFolder
	}).(pulumi.StringPtrOutput)
}

type WorkspaceIdentity struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Synapse Workspace.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID for the Service Principal associated with the Managed Service Identity of this Synapse Workspace.
	PrincipalId *string `pulumi:"principalId"`
	// The tenant id of the Azure AD Administrator of this Synapse Workspace.
	TenantId *string `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be associated with this Synapse Workspace. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned` (to enable both).
	Type string `pulumi:"type"`
}

// WorkspaceIdentityInput is an input type that accepts WorkspaceIdentityArgs and WorkspaceIdentityOutput values.
// You can construct a concrete instance of `WorkspaceIdentityInput` via:
//
//	WorkspaceIdentityArgs{...}
type WorkspaceIdentityInput interface {
	pulumi.Input

	ToWorkspaceIdentityOutput() WorkspaceIdentityOutput
	ToWorkspaceIdentityOutputWithContext(context.Context) WorkspaceIdentityOutput
}

type WorkspaceIdentityArgs struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Synapse Workspace.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID for the Service Principal associated with the Managed Service Identity of this Synapse Workspace.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The tenant id of the Azure AD Administrator of this Synapse Workspace.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be associated with this Synapse Workspace. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned` (to enable both).
	Type pulumi.StringInput `pulumi:"type"`
}

func (WorkspaceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceIdentity)(nil)).Elem()
}

func (i WorkspaceIdentityArgs) ToWorkspaceIdentityOutput() WorkspaceIdentityOutput {
	return i.ToWorkspaceIdentityOutputWithContext(context.Background())
}

func (i WorkspaceIdentityArgs) ToWorkspaceIdentityOutputWithContext(ctx context.Context) WorkspaceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceIdentityOutput)
}

func (i WorkspaceIdentityArgs) ToWorkspaceIdentityPtrOutput() WorkspaceIdentityPtrOutput {
	return i.ToWorkspaceIdentityPtrOutputWithContext(context.Background())
}

func (i WorkspaceIdentityArgs) ToWorkspaceIdentityPtrOutputWithContext(ctx context.Context) WorkspaceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceIdentityOutput).ToWorkspaceIdentityPtrOutputWithContext(ctx)
}

// WorkspaceIdentityPtrInput is an input type that accepts WorkspaceIdentityArgs, WorkspaceIdentityPtr and WorkspaceIdentityPtrOutput values.
// You can construct a concrete instance of `WorkspaceIdentityPtrInput` via:
//
//	        WorkspaceIdentityArgs{...}
//
//	or:
//
//	        nil
type WorkspaceIdentityPtrInput interface {
	pulumi.Input

	ToWorkspaceIdentityPtrOutput() WorkspaceIdentityPtrOutput
	ToWorkspaceIdentityPtrOutputWithContext(context.Context) WorkspaceIdentityPtrOutput
}

type workspaceIdentityPtrType WorkspaceIdentityArgs

func WorkspaceIdentityPtr(v *WorkspaceIdentityArgs) WorkspaceIdentityPtrInput {
	return (*workspaceIdentityPtrType)(v)
}

func (*workspaceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceIdentity)(nil)).Elem()
}

func (i *workspaceIdentityPtrType) ToWorkspaceIdentityPtrOutput() WorkspaceIdentityPtrOutput {
	return i.ToWorkspaceIdentityPtrOutputWithContext(context.Background())
}

func (i *workspaceIdentityPtrType) ToWorkspaceIdentityPtrOutputWithContext(ctx context.Context) WorkspaceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceIdentityPtrOutput)
}

type WorkspaceIdentityOutput struct{ *pulumi.OutputState }

func (WorkspaceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceIdentity)(nil)).Elem()
}

func (o WorkspaceIdentityOutput) ToWorkspaceIdentityOutput() WorkspaceIdentityOutput {
	return o
}

func (o WorkspaceIdentityOutput) ToWorkspaceIdentityOutputWithContext(ctx context.Context) WorkspaceIdentityOutput {
	return o
}

func (o WorkspaceIdentityOutput) ToWorkspaceIdentityPtrOutput() WorkspaceIdentityPtrOutput {
	return o.ToWorkspaceIdentityPtrOutputWithContext(context.Background())
}

func (o WorkspaceIdentityOutput) ToWorkspaceIdentityPtrOutputWithContext(ctx context.Context) WorkspaceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceIdentity) *WorkspaceIdentity {
		return &v
	}).(WorkspaceIdentityPtrOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Synapse Workspace.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
func (o WorkspaceIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkspaceIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID for the Service Principal associated with the Managed Service Identity of this Synapse Workspace.
func (o WorkspaceIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The tenant id of the Azure AD Administrator of this Synapse Workspace.
func (o WorkspaceIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be associated with this Synapse Workspace. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned` (to enable both).
func (o WorkspaceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type WorkspaceIdentityPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceIdentity)(nil)).Elem()
}

func (o WorkspaceIdentityPtrOutput) ToWorkspaceIdentityPtrOutput() WorkspaceIdentityPtrOutput {
	return o
}

func (o WorkspaceIdentityPtrOutput) ToWorkspaceIdentityPtrOutputWithContext(ctx context.Context) WorkspaceIdentityPtrOutput {
	return o
}

func (o WorkspaceIdentityPtrOutput) Elem() WorkspaceIdentityOutput {
	return o.ApplyT(func(v *WorkspaceIdentity) WorkspaceIdentity {
		if v != nil {
			return *v
		}
		var ret WorkspaceIdentity
		return ret
	}).(WorkspaceIdentityOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Synapse Workspace.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
func (o WorkspaceIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkspaceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The Principal ID for the Service Principal associated with the Managed Service Identity of this Synapse Workspace.
func (o WorkspaceIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant id of the Azure AD Administrator of this Synapse Workspace.
func (o WorkspaceIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be associated with this Synapse Workspace. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned` (to enable both).
func (o WorkspaceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type WorkspaceSqlAadAdminType struct {
	// The login name of the Azure AD Administrator of this Synapse Workspace SQL.
	Login string `pulumi:"login"`
	// The object id of the Azure AD Administrator of this Synapse Workspace SQL.
	ObjectId string `pulumi:"objectId"`
	// The tenant id of the Azure AD Administrator of this Synapse Workspace SQL.
	TenantId string `pulumi:"tenantId"`
}

// WorkspaceSqlAadAdminTypeInput is an input type that accepts WorkspaceSqlAadAdminTypeArgs and WorkspaceSqlAadAdminTypeOutput values.
// You can construct a concrete instance of `WorkspaceSqlAadAdminTypeInput` via:
//
//	WorkspaceSqlAadAdminTypeArgs{...}
type WorkspaceSqlAadAdminTypeInput interface {
	pulumi.Input

	ToWorkspaceSqlAadAdminTypeOutput() WorkspaceSqlAadAdminTypeOutput
	ToWorkspaceSqlAadAdminTypeOutputWithContext(context.Context) WorkspaceSqlAadAdminTypeOutput
}

type WorkspaceSqlAadAdminTypeArgs struct {
	// The login name of the Azure AD Administrator of this Synapse Workspace SQL.
	Login pulumi.StringInput `pulumi:"login"`
	// The object id of the Azure AD Administrator of this Synapse Workspace SQL.
	ObjectId pulumi.StringInput `pulumi:"objectId"`
	// The tenant id of the Azure AD Administrator of this Synapse Workspace SQL.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (WorkspaceSqlAadAdminTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceSqlAadAdminType)(nil)).Elem()
}

func (i WorkspaceSqlAadAdminTypeArgs) ToWorkspaceSqlAadAdminTypeOutput() WorkspaceSqlAadAdminTypeOutput {
	return i.ToWorkspaceSqlAadAdminTypeOutputWithContext(context.Background())
}

func (i WorkspaceSqlAadAdminTypeArgs) ToWorkspaceSqlAadAdminTypeOutputWithContext(ctx context.Context) WorkspaceSqlAadAdminTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceSqlAadAdminTypeOutput)
}

func (i WorkspaceSqlAadAdminTypeArgs) ToWorkspaceSqlAadAdminTypePtrOutput() WorkspaceSqlAadAdminTypePtrOutput {
	return i.ToWorkspaceSqlAadAdminTypePtrOutputWithContext(context.Background())
}

func (i WorkspaceSqlAadAdminTypeArgs) ToWorkspaceSqlAadAdminTypePtrOutputWithContext(ctx context.Context) WorkspaceSqlAadAdminTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceSqlAadAdminTypeOutput).ToWorkspaceSqlAadAdminTypePtrOutputWithContext(ctx)
}

// WorkspaceSqlAadAdminTypePtrInput is an input type that accepts WorkspaceSqlAadAdminTypeArgs, WorkspaceSqlAadAdminTypePtr and WorkspaceSqlAadAdminTypePtrOutput values.
// You can construct a concrete instance of `WorkspaceSqlAadAdminTypePtrInput` via:
//
//	        WorkspaceSqlAadAdminTypeArgs{...}
//
//	or:
//
//	        nil
type WorkspaceSqlAadAdminTypePtrInput interface {
	pulumi.Input

	ToWorkspaceSqlAadAdminTypePtrOutput() WorkspaceSqlAadAdminTypePtrOutput
	ToWorkspaceSqlAadAdminTypePtrOutputWithContext(context.Context) WorkspaceSqlAadAdminTypePtrOutput
}

type workspaceSqlAadAdminTypePtrType WorkspaceSqlAadAdminTypeArgs

func WorkspaceSqlAadAdminTypePtr(v *WorkspaceSqlAadAdminTypeArgs) WorkspaceSqlAadAdminTypePtrInput {
	return (*workspaceSqlAadAdminTypePtrType)(v)
}

func (*workspaceSqlAadAdminTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceSqlAadAdminType)(nil)).Elem()
}

func (i *workspaceSqlAadAdminTypePtrType) ToWorkspaceSqlAadAdminTypePtrOutput() WorkspaceSqlAadAdminTypePtrOutput {
	return i.ToWorkspaceSqlAadAdminTypePtrOutputWithContext(context.Background())
}

func (i *workspaceSqlAadAdminTypePtrType) ToWorkspaceSqlAadAdminTypePtrOutputWithContext(ctx context.Context) WorkspaceSqlAadAdminTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceSqlAadAdminTypePtrOutput)
}

type WorkspaceSqlAadAdminTypeOutput struct{ *pulumi.OutputState }

func (WorkspaceSqlAadAdminTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceSqlAadAdminType)(nil)).Elem()
}

func (o WorkspaceSqlAadAdminTypeOutput) ToWorkspaceSqlAadAdminTypeOutput() WorkspaceSqlAadAdminTypeOutput {
	return o
}

func (o WorkspaceSqlAadAdminTypeOutput) ToWorkspaceSqlAadAdminTypeOutputWithContext(ctx context.Context) WorkspaceSqlAadAdminTypeOutput {
	return o
}

func (o WorkspaceSqlAadAdminTypeOutput) ToWorkspaceSqlAadAdminTypePtrOutput() WorkspaceSqlAadAdminTypePtrOutput {
	return o.ToWorkspaceSqlAadAdminTypePtrOutputWithContext(context.Background())
}

func (o WorkspaceSqlAadAdminTypeOutput) ToWorkspaceSqlAadAdminTypePtrOutputWithContext(ctx context.Context) WorkspaceSqlAadAdminTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceSqlAadAdminType) *WorkspaceSqlAadAdminType {
		return &v
	}).(WorkspaceSqlAadAdminTypePtrOutput)
}

// The login name of the Azure AD Administrator of this Synapse Workspace SQL.
func (o WorkspaceSqlAadAdminTypeOutput) Login() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceSqlAadAdminType) string { return v.Login }).(pulumi.StringOutput)
}

// The object id of the Azure AD Administrator of this Synapse Workspace SQL.
func (o WorkspaceSqlAadAdminTypeOutput) ObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceSqlAadAdminType) string { return v.ObjectId }).(pulumi.StringOutput)
}

// The tenant id of the Azure AD Administrator of this Synapse Workspace SQL.
func (o WorkspaceSqlAadAdminTypeOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceSqlAadAdminType) string { return v.TenantId }).(pulumi.StringOutput)
}

type WorkspaceSqlAadAdminTypePtrOutput struct{ *pulumi.OutputState }

func (WorkspaceSqlAadAdminTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceSqlAadAdminType)(nil)).Elem()
}

func (o WorkspaceSqlAadAdminTypePtrOutput) ToWorkspaceSqlAadAdminTypePtrOutput() WorkspaceSqlAadAdminTypePtrOutput {
	return o
}

func (o WorkspaceSqlAadAdminTypePtrOutput) ToWorkspaceSqlAadAdminTypePtrOutputWithContext(ctx context.Context) WorkspaceSqlAadAdminTypePtrOutput {
	return o
}

func (o WorkspaceSqlAadAdminTypePtrOutput) Elem() WorkspaceSqlAadAdminTypeOutput {
	return o.ApplyT(func(v *WorkspaceSqlAadAdminType) WorkspaceSqlAadAdminType {
		if v != nil {
			return *v
		}
		var ret WorkspaceSqlAadAdminType
		return ret
	}).(WorkspaceSqlAadAdminTypeOutput)
}

// The login name of the Azure AD Administrator of this Synapse Workspace SQL.
func (o WorkspaceSqlAadAdminTypePtrOutput) Login() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceSqlAadAdminType) *string {
		if v == nil {
			return nil
		}
		return &v.Login
	}).(pulumi.StringPtrOutput)
}

// The object id of the Azure AD Administrator of this Synapse Workspace SQL.
func (o WorkspaceSqlAadAdminTypePtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceSqlAadAdminType) *string {
		if v == nil {
			return nil
		}
		return &v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// The tenant id of the Azure AD Administrator of this Synapse Workspace SQL.
func (o WorkspaceSqlAadAdminTypePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceSqlAadAdminType) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

type WorkspaceVulnerabilityAssessmentRecurringScans struct {
	// Boolean flag which specifies if the schedule scan notification will be sent to the subscription administrators. Defaults to `false`.
	EmailSubscriptionAdminsEnabled *bool `pulumi:"emailSubscriptionAdminsEnabled"`
	// Specifies an array of email addresses to which the scan notification is sent.
	Emails []string `pulumi:"emails"`
	// Boolean flag which specifies if recurring scans is enabled or disabled. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
}

// WorkspaceVulnerabilityAssessmentRecurringScansInput is an input type that accepts WorkspaceVulnerabilityAssessmentRecurringScansArgs and WorkspaceVulnerabilityAssessmentRecurringScansOutput values.
// You can construct a concrete instance of `WorkspaceVulnerabilityAssessmentRecurringScansInput` via:
//
//	WorkspaceVulnerabilityAssessmentRecurringScansArgs{...}
type WorkspaceVulnerabilityAssessmentRecurringScansInput interface {
	pulumi.Input

	ToWorkspaceVulnerabilityAssessmentRecurringScansOutput() WorkspaceVulnerabilityAssessmentRecurringScansOutput
	ToWorkspaceVulnerabilityAssessmentRecurringScansOutputWithContext(context.Context) WorkspaceVulnerabilityAssessmentRecurringScansOutput
}

type WorkspaceVulnerabilityAssessmentRecurringScansArgs struct {
	// Boolean flag which specifies if the schedule scan notification will be sent to the subscription administrators. Defaults to `false`.
	EmailSubscriptionAdminsEnabled pulumi.BoolPtrInput `pulumi:"emailSubscriptionAdminsEnabled"`
	// Specifies an array of email addresses to which the scan notification is sent.
	Emails pulumi.StringArrayInput `pulumi:"emails"`
	// Boolean flag which specifies if recurring scans is enabled or disabled. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (WorkspaceVulnerabilityAssessmentRecurringScansArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceVulnerabilityAssessmentRecurringScans)(nil)).Elem()
}

func (i WorkspaceVulnerabilityAssessmentRecurringScansArgs) ToWorkspaceVulnerabilityAssessmentRecurringScansOutput() WorkspaceVulnerabilityAssessmentRecurringScansOutput {
	return i.ToWorkspaceVulnerabilityAssessmentRecurringScansOutputWithContext(context.Background())
}

func (i WorkspaceVulnerabilityAssessmentRecurringScansArgs) ToWorkspaceVulnerabilityAssessmentRecurringScansOutputWithContext(ctx context.Context) WorkspaceVulnerabilityAssessmentRecurringScansOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceVulnerabilityAssessmentRecurringScansOutput)
}

func (i WorkspaceVulnerabilityAssessmentRecurringScansArgs) ToWorkspaceVulnerabilityAssessmentRecurringScansPtrOutput() WorkspaceVulnerabilityAssessmentRecurringScansPtrOutput {
	return i.ToWorkspaceVulnerabilityAssessmentRecurringScansPtrOutputWithContext(context.Background())
}

func (i WorkspaceVulnerabilityAssessmentRecurringScansArgs) ToWorkspaceVulnerabilityAssessmentRecurringScansPtrOutputWithContext(ctx context.Context) WorkspaceVulnerabilityAssessmentRecurringScansPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceVulnerabilityAssessmentRecurringScansOutput).ToWorkspaceVulnerabilityAssessmentRecurringScansPtrOutputWithContext(ctx)
}

// WorkspaceVulnerabilityAssessmentRecurringScansPtrInput is an input type that accepts WorkspaceVulnerabilityAssessmentRecurringScansArgs, WorkspaceVulnerabilityAssessmentRecurringScansPtr and WorkspaceVulnerabilityAssessmentRecurringScansPtrOutput values.
// You can construct a concrete instance of `WorkspaceVulnerabilityAssessmentRecurringScansPtrInput` via:
//
//	        WorkspaceVulnerabilityAssessmentRecurringScansArgs{...}
//
//	or:
//
//	        nil
type WorkspaceVulnerabilityAssessmentRecurringScansPtrInput interface {
	pulumi.Input

	ToWorkspaceVulnerabilityAssessmentRecurringScansPtrOutput() WorkspaceVulnerabilityAssessmentRecurringScansPtrOutput
	ToWorkspaceVulnerabilityAssessmentRecurringScansPtrOutputWithContext(context.Context) WorkspaceVulnerabilityAssessmentRecurringScansPtrOutput
}

type workspaceVulnerabilityAssessmentRecurringScansPtrType WorkspaceVulnerabilityAssessmentRecurringScansArgs

func WorkspaceVulnerabilityAssessmentRecurringScansPtr(v *WorkspaceVulnerabilityAssessmentRecurringScansArgs) WorkspaceVulnerabilityAssessmentRecurringScansPtrInput {
	return (*workspaceVulnerabilityAssessmentRecurringScansPtrType)(v)
}

func (*workspaceVulnerabilityAssessmentRecurringScansPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceVulnerabilityAssessmentRecurringScans)(nil)).Elem()
}

func (i *workspaceVulnerabilityAssessmentRecurringScansPtrType) ToWorkspaceVulnerabilityAssessmentRecurringScansPtrOutput() WorkspaceVulnerabilityAssessmentRecurringScansPtrOutput {
	return i.ToWorkspaceVulnerabilityAssessmentRecurringScansPtrOutputWithContext(context.Background())
}

func (i *workspaceVulnerabilityAssessmentRecurringScansPtrType) ToWorkspaceVulnerabilityAssessmentRecurringScansPtrOutputWithContext(ctx context.Context) WorkspaceVulnerabilityAssessmentRecurringScansPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceVulnerabilityAssessmentRecurringScansPtrOutput)
}

type WorkspaceVulnerabilityAssessmentRecurringScansOutput struct{ *pulumi.OutputState }

func (WorkspaceVulnerabilityAssessmentRecurringScansOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceVulnerabilityAssessmentRecurringScans)(nil)).Elem()
}

func (o WorkspaceVulnerabilityAssessmentRecurringScansOutput) ToWorkspaceVulnerabilityAssessmentRecurringScansOutput() WorkspaceVulnerabilityAssessmentRecurringScansOutput {
	return o
}

func (o WorkspaceVulnerabilityAssessmentRecurringScansOutput) ToWorkspaceVulnerabilityAssessmentRecurringScansOutputWithContext(ctx context.Context) WorkspaceVulnerabilityAssessmentRecurringScansOutput {
	return o
}

func (o WorkspaceVulnerabilityAssessmentRecurringScansOutput) ToWorkspaceVulnerabilityAssessmentRecurringScansPtrOutput() WorkspaceVulnerabilityAssessmentRecurringScansPtrOutput {
	return o.ToWorkspaceVulnerabilityAssessmentRecurringScansPtrOutputWithContext(context.Background())
}

func (o WorkspaceVulnerabilityAssessmentRecurringScansOutput) ToWorkspaceVulnerabilityAssessmentRecurringScansPtrOutputWithContext(ctx context.Context) WorkspaceVulnerabilityAssessmentRecurringScansPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceVulnerabilityAssessmentRecurringScans) *WorkspaceVulnerabilityAssessmentRecurringScans {
		return &v
	}).(WorkspaceVulnerabilityAssessmentRecurringScansPtrOutput)
}

// Boolean flag which specifies if the schedule scan notification will be sent to the subscription administrators. Defaults to `false`.
func (o WorkspaceVulnerabilityAssessmentRecurringScansOutput) EmailSubscriptionAdminsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkspaceVulnerabilityAssessmentRecurringScans) *bool { return v.EmailSubscriptionAdminsEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies an array of email addresses to which the scan notification is sent.
func (o WorkspaceVulnerabilityAssessmentRecurringScansOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkspaceVulnerabilityAssessmentRecurringScans) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

// Boolean flag which specifies if recurring scans is enabled or disabled. Defaults to `false`.
func (o WorkspaceVulnerabilityAssessmentRecurringScansOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkspaceVulnerabilityAssessmentRecurringScans) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type WorkspaceVulnerabilityAssessmentRecurringScansPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceVulnerabilityAssessmentRecurringScansPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceVulnerabilityAssessmentRecurringScans)(nil)).Elem()
}

func (o WorkspaceVulnerabilityAssessmentRecurringScansPtrOutput) ToWorkspaceVulnerabilityAssessmentRecurringScansPtrOutput() WorkspaceVulnerabilityAssessmentRecurringScansPtrOutput {
	return o
}

func (o WorkspaceVulnerabilityAssessmentRecurringScansPtrOutput) ToWorkspaceVulnerabilityAssessmentRecurringScansPtrOutputWithContext(ctx context.Context) WorkspaceVulnerabilityAssessmentRecurringScansPtrOutput {
	return o
}

func (o WorkspaceVulnerabilityAssessmentRecurringScansPtrOutput) Elem() WorkspaceVulnerabilityAssessmentRecurringScansOutput {
	return o.ApplyT(func(v *WorkspaceVulnerabilityAssessmentRecurringScans) WorkspaceVulnerabilityAssessmentRecurringScans {
		if v != nil {
			return *v
		}
		var ret WorkspaceVulnerabilityAssessmentRecurringScans
		return ret
	}).(WorkspaceVulnerabilityAssessmentRecurringScansOutput)
}

// Boolean flag which specifies if the schedule scan notification will be sent to the subscription administrators. Defaults to `false`.
func (o WorkspaceVulnerabilityAssessmentRecurringScansPtrOutput) EmailSubscriptionAdminsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceVulnerabilityAssessmentRecurringScans) *bool {
		if v == nil {
			return nil
		}
		return v.EmailSubscriptionAdminsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies an array of email addresses to which the scan notification is sent.
func (o WorkspaceVulnerabilityAssessmentRecurringScansPtrOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkspaceVulnerabilityAssessmentRecurringScans) []string {
		if v == nil {
			return nil
		}
		return v.Emails
	}).(pulumi.StringArrayOutput)
}

// Boolean flag which specifies if recurring scans is enabled or disabled. Defaults to `false`.
func (o WorkspaceVulnerabilityAssessmentRecurringScansPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkspaceVulnerabilityAssessmentRecurringScans) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type GetWorkspaceIdentity struct {
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID for the Service Principal associated with the Managed Service Identity of this Synapse Workspace.
	PrincipalId string `pulumi:"principalId"`
	// The Tenant ID for the Service Principal associated with the Managed Service Identity of this Synapse Workspace.
	TenantId string `pulumi:"tenantId"`
	// The Identity Type for the Service Principal associated with the Managed Service Identity of this Synapse Workspace.
	Type string `pulumi:"type"`
}

// GetWorkspaceIdentityInput is an input type that accepts GetWorkspaceIdentityArgs and GetWorkspaceIdentityOutput values.
// You can construct a concrete instance of `GetWorkspaceIdentityInput` via:
//
//	GetWorkspaceIdentityArgs{...}
type GetWorkspaceIdentityInput interface {
	pulumi.Input

	ToGetWorkspaceIdentityOutput() GetWorkspaceIdentityOutput
	ToGetWorkspaceIdentityOutputWithContext(context.Context) GetWorkspaceIdentityOutput
}

type GetWorkspaceIdentityArgs struct {
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID for the Service Principal associated with the Managed Service Identity of this Synapse Workspace.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The Tenant ID for the Service Principal associated with the Managed Service Identity of this Synapse Workspace.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The Identity Type for the Service Principal associated with the Managed Service Identity of this Synapse Workspace.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetWorkspaceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkspaceIdentity)(nil)).Elem()
}

func (i GetWorkspaceIdentityArgs) ToGetWorkspaceIdentityOutput() GetWorkspaceIdentityOutput {
	return i.ToGetWorkspaceIdentityOutputWithContext(context.Background())
}

func (i GetWorkspaceIdentityArgs) ToGetWorkspaceIdentityOutputWithContext(ctx context.Context) GetWorkspaceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkspaceIdentityOutput)
}

// GetWorkspaceIdentityArrayInput is an input type that accepts GetWorkspaceIdentityArray and GetWorkspaceIdentityArrayOutput values.
// You can construct a concrete instance of `GetWorkspaceIdentityArrayInput` via:
//
//	GetWorkspaceIdentityArray{ GetWorkspaceIdentityArgs{...} }
type GetWorkspaceIdentityArrayInput interface {
	pulumi.Input

	ToGetWorkspaceIdentityArrayOutput() GetWorkspaceIdentityArrayOutput
	ToGetWorkspaceIdentityArrayOutputWithContext(context.Context) GetWorkspaceIdentityArrayOutput
}

type GetWorkspaceIdentityArray []GetWorkspaceIdentityInput

func (GetWorkspaceIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkspaceIdentity)(nil)).Elem()
}

func (i GetWorkspaceIdentityArray) ToGetWorkspaceIdentityArrayOutput() GetWorkspaceIdentityArrayOutput {
	return i.ToGetWorkspaceIdentityArrayOutputWithContext(context.Background())
}

func (i GetWorkspaceIdentityArray) ToGetWorkspaceIdentityArrayOutputWithContext(ctx context.Context) GetWorkspaceIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkspaceIdentityArrayOutput)
}

type GetWorkspaceIdentityOutput struct{ *pulumi.OutputState }

func (GetWorkspaceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkspaceIdentity)(nil)).Elem()
}

func (o GetWorkspaceIdentityOutput) ToGetWorkspaceIdentityOutput() GetWorkspaceIdentityOutput {
	return o
}

func (o GetWorkspaceIdentityOutput) ToGetWorkspaceIdentityOutputWithContext(ctx context.Context) GetWorkspaceIdentityOutput {
	return o
}

func (o GetWorkspaceIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWorkspaceIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID for the Service Principal associated with the Managed Service Identity of this Synapse Workspace.
func (o GetWorkspaceIdentityOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspaceIdentity) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The Tenant ID for the Service Principal associated with the Managed Service Identity of this Synapse Workspace.
func (o GetWorkspaceIdentityOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspaceIdentity) string { return v.TenantId }).(pulumi.StringOutput)
}

// The Identity Type for the Service Principal associated with the Managed Service Identity of this Synapse Workspace.
func (o GetWorkspaceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspaceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type GetWorkspaceIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetWorkspaceIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkspaceIdentity)(nil)).Elem()
}

func (o GetWorkspaceIdentityArrayOutput) ToGetWorkspaceIdentityArrayOutput() GetWorkspaceIdentityArrayOutput {
	return o
}

func (o GetWorkspaceIdentityArrayOutput) ToGetWorkspaceIdentityArrayOutputWithContext(ctx context.Context) GetWorkspaceIdentityArrayOutput {
	return o
}

func (o GetWorkspaceIdentityArrayOutput) Index(i pulumi.IntInput) GetWorkspaceIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWorkspaceIdentity {
		return vs[0].([]GetWorkspaceIdentity)[vs[1].(int)]
	}).(GetWorkspaceIdentityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceIntegrationRuntimeInput)(nil)).Elem(), LinkedServiceIntegrationRuntimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkedServiceIntegrationRuntimePtrInput)(nil)).Elem(), LinkedServiceIntegrationRuntimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SparkPoolAutoPauseInput)(nil)).Elem(), SparkPoolAutoPauseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SparkPoolAutoPausePtrInput)(nil)).Elem(), SparkPoolAutoPauseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SparkPoolAutoScaleInput)(nil)).Elem(), SparkPoolAutoScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SparkPoolAutoScalePtrInput)(nil)).Elem(), SparkPoolAutoScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SparkPoolLibraryRequirementInput)(nil)).Elem(), SparkPoolLibraryRequirementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SparkPoolLibraryRequirementPtrInput)(nil)).Elem(), SparkPoolLibraryRequirementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SparkPoolSparkConfigInput)(nil)).Elem(), SparkPoolSparkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SparkPoolSparkConfigPtrInput)(nil)).Elem(), SparkPoolSparkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlPoolRestoreInput)(nil)).Elem(), SqlPoolRestoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlPoolRestorePtrInput)(nil)).Elem(), SqlPoolRestoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlPoolVulnerabilityAssessmentBaselineBaselineInput)(nil)).Elem(), SqlPoolVulnerabilityAssessmentBaselineBaselineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlPoolVulnerabilityAssessmentBaselineBaselineArrayInput)(nil)).Elem(), SqlPoolVulnerabilityAssessmentBaselineBaselineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlPoolVulnerabilityAssessmentRecurringScansInput)(nil)).Elem(), SqlPoolVulnerabilityAssessmentRecurringScansArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlPoolVulnerabilityAssessmentRecurringScansPtrInput)(nil)).Elem(), SqlPoolVulnerabilityAssessmentRecurringScansArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAadAdminTypeInput)(nil)).Elem(), WorkspaceAadAdminTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAadAdminTypePtrInput)(nil)).Elem(), WorkspaceAadAdminTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAzureDevopsRepoInput)(nil)).Elem(), WorkspaceAzureDevopsRepoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceAzureDevopsRepoPtrInput)(nil)).Elem(), WorkspaceAzureDevopsRepoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceCustomerManagedKeyInput)(nil)).Elem(), WorkspaceCustomerManagedKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceCustomerManagedKeyPtrInput)(nil)).Elem(), WorkspaceCustomerManagedKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceGithubRepoInput)(nil)).Elem(), WorkspaceGithubRepoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceGithubRepoPtrInput)(nil)).Elem(), WorkspaceGithubRepoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceIdentityInput)(nil)).Elem(), WorkspaceIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceIdentityPtrInput)(nil)).Elem(), WorkspaceIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceSqlAadAdminTypeInput)(nil)).Elem(), WorkspaceSqlAadAdminTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceSqlAadAdminTypePtrInput)(nil)).Elem(), WorkspaceSqlAadAdminTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceVulnerabilityAssessmentRecurringScansInput)(nil)).Elem(), WorkspaceVulnerabilityAssessmentRecurringScansArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceVulnerabilityAssessmentRecurringScansPtrInput)(nil)).Elem(), WorkspaceVulnerabilityAssessmentRecurringScansArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkspaceIdentityInput)(nil)).Elem(), GetWorkspaceIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkspaceIdentityArrayInput)(nil)).Elem(), GetWorkspaceIdentityArray{})
	pulumi.RegisterOutputType(LinkedServiceIntegrationRuntimeOutput{})
	pulumi.RegisterOutputType(LinkedServiceIntegrationRuntimePtrOutput{})
	pulumi.RegisterOutputType(SparkPoolAutoPauseOutput{})
	pulumi.RegisterOutputType(SparkPoolAutoPausePtrOutput{})
	pulumi.RegisterOutputType(SparkPoolAutoScaleOutput{})
	pulumi.RegisterOutputType(SparkPoolAutoScalePtrOutput{})
	pulumi.RegisterOutputType(SparkPoolLibraryRequirementOutput{})
	pulumi.RegisterOutputType(SparkPoolLibraryRequirementPtrOutput{})
	pulumi.RegisterOutputType(SparkPoolSparkConfigOutput{})
	pulumi.RegisterOutputType(SparkPoolSparkConfigPtrOutput{})
	pulumi.RegisterOutputType(SqlPoolRestoreOutput{})
	pulumi.RegisterOutputType(SqlPoolRestorePtrOutput{})
	pulumi.RegisterOutputType(SqlPoolVulnerabilityAssessmentBaselineBaselineOutput{})
	pulumi.RegisterOutputType(SqlPoolVulnerabilityAssessmentBaselineBaselineArrayOutput{})
	pulumi.RegisterOutputType(SqlPoolVulnerabilityAssessmentRecurringScansOutput{})
	pulumi.RegisterOutputType(SqlPoolVulnerabilityAssessmentRecurringScansPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceAadAdminTypeOutput{})
	pulumi.RegisterOutputType(WorkspaceAadAdminTypePtrOutput{})
	pulumi.RegisterOutputType(WorkspaceAzureDevopsRepoOutput{})
	pulumi.RegisterOutputType(WorkspaceAzureDevopsRepoPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceCustomerManagedKeyOutput{})
	pulumi.RegisterOutputType(WorkspaceCustomerManagedKeyPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceGithubRepoOutput{})
	pulumi.RegisterOutputType(WorkspaceGithubRepoPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceIdentityOutput{})
	pulumi.RegisterOutputType(WorkspaceIdentityPtrOutput{})
	pulumi.RegisterOutputType(WorkspaceSqlAadAdminTypeOutput{})
	pulumi.RegisterOutputType(WorkspaceSqlAadAdminTypePtrOutput{})
	pulumi.RegisterOutputType(WorkspaceVulnerabilityAssessmentRecurringScansOutput{})
	pulumi.RegisterOutputType(WorkspaceVulnerabilityAssessmentRecurringScansPtrOutput{})
	pulumi.RegisterOutputType(GetWorkspaceIdentityOutput{})
	pulumi.RegisterOutputType(GetWorkspaceIdentityArrayOutput{})
}
