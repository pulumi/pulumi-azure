// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package synapse

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Synapse Private Link Hub.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/synapse"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := synapse.NewPrivateLinkHub(ctx, "example", &synapse.PrivateLinkHubArgs{
//				Location:          pulumi.String("West Europe"),
//				ResourceGroupName: pulumi.String("example-rg"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Synapse Private Link Hub can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:synapse/privateLinkHub:PrivateLinkHub example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Synapse/privateLinkHubs/privateLinkHub1
//
// ```
type PrivateLinkHub struct {
	pulumi.CustomResourceState

	// Specifies the Azure location where the Synapse Private Link Hub exists. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name which should be used for this Synapse Private Link Hub. Changing this forces a new Synapse Private Link Hub to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the resource group in which to create the Synapse Private Link Hub. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A mapping of tags which should be assigned to the Synapse Private Link Hub.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewPrivateLinkHub registers a new resource with the given unique name, arguments, and options.
func NewPrivateLinkHub(ctx *pulumi.Context,
	name string, args *PrivateLinkHubArgs, opts ...pulumi.ResourceOption) (*PrivateLinkHub, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PrivateLinkHub
	err := ctx.RegisterResource("azure:synapse/privateLinkHub:PrivateLinkHub", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPrivateLinkHub gets an existing PrivateLinkHub resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPrivateLinkHub(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PrivateLinkHubState, opts ...pulumi.ResourceOption) (*PrivateLinkHub, error) {
	var resource PrivateLinkHub
	err := ctx.ReadResource("azure:synapse/privateLinkHub:PrivateLinkHub", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PrivateLinkHub resources.
type privateLinkHubState struct {
	// Specifies the Azure location where the Synapse Private Link Hub exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this Synapse Private Link Hub. Changing this forces a new Synapse Private Link Hub to be created.
	Name *string `pulumi:"name"`
	// The name of the resource group in which to create the Synapse Private Link Hub. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A mapping of tags which should be assigned to the Synapse Private Link Hub.
	Tags map[string]string `pulumi:"tags"`
}

type PrivateLinkHubState struct {
	// Specifies the Azure location where the Synapse Private Link Hub exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this Synapse Private Link Hub. Changing this forces a new Synapse Private Link Hub to be created.
	Name pulumi.StringPtrInput
	// The name of the resource group in which to create the Synapse Private Link Hub. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Synapse Private Link Hub.
	Tags pulumi.StringMapInput
}

func (PrivateLinkHubState) ElementType() reflect.Type {
	return reflect.TypeOf((*privateLinkHubState)(nil)).Elem()
}

type privateLinkHubArgs struct {
	// Specifies the Azure location where the Synapse Private Link Hub exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this Synapse Private Link Hub. Changing this forces a new Synapse Private Link Hub to be created.
	Name *string `pulumi:"name"`
	// The name of the resource group in which to create the Synapse Private Link Hub. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A mapping of tags which should be assigned to the Synapse Private Link Hub.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a PrivateLinkHub resource.
type PrivateLinkHubArgs struct {
	// Specifies the Azure location where the Synapse Private Link Hub exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this Synapse Private Link Hub. Changing this forces a new Synapse Private Link Hub to be created.
	Name pulumi.StringPtrInput
	// The name of the resource group in which to create the Synapse Private Link Hub. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// A mapping of tags which should be assigned to the Synapse Private Link Hub.
	Tags pulumi.StringMapInput
}

func (PrivateLinkHubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*privateLinkHubArgs)(nil)).Elem()
}

type PrivateLinkHubInput interface {
	pulumi.Input

	ToPrivateLinkHubOutput() PrivateLinkHubOutput
	ToPrivateLinkHubOutputWithContext(ctx context.Context) PrivateLinkHubOutput
}

func (*PrivateLinkHub) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkHub)(nil)).Elem()
}

func (i *PrivateLinkHub) ToPrivateLinkHubOutput() PrivateLinkHubOutput {
	return i.ToPrivateLinkHubOutputWithContext(context.Background())
}

func (i *PrivateLinkHub) ToPrivateLinkHubOutputWithContext(ctx context.Context) PrivateLinkHubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkHubOutput)
}

// PrivateLinkHubArrayInput is an input type that accepts PrivateLinkHubArray and PrivateLinkHubArrayOutput values.
// You can construct a concrete instance of `PrivateLinkHubArrayInput` via:
//
//	PrivateLinkHubArray{ PrivateLinkHubArgs{...} }
type PrivateLinkHubArrayInput interface {
	pulumi.Input

	ToPrivateLinkHubArrayOutput() PrivateLinkHubArrayOutput
	ToPrivateLinkHubArrayOutputWithContext(context.Context) PrivateLinkHubArrayOutput
}

type PrivateLinkHubArray []PrivateLinkHubInput

func (PrivateLinkHubArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PrivateLinkHub)(nil)).Elem()
}

func (i PrivateLinkHubArray) ToPrivateLinkHubArrayOutput() PrivateLinkHubArrayOutput {
	return i.ToPrivateLinkHubArrayOutputWithContext(context.Background())
}

func (i PrivateLinkHubArray) ToPrivateLinkHubArrayOutputWithContext(ctx context.Context) PrivateLinkHubArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkHubArrayOutput)
}

// PrivateLinkHubMapInput is an input type that accepts PrivateLinkHubMap and PrivateLinkHubMapOutput values.
// You can construct a concrete instance of `PrivateLinkHubMapInput` via:
//
//	PrivateLinkHubMap{ "key": PrivateLinkHubArgs{...} }
type PrivateLinkHubMapInput interface {
	pulumi.Input

	ToPrivateLinkHubMapOutput() PrivateLinkHubMapOutput
	ToPrivateLinkHubMapOutputWithContext(context.Context) PrivateLinkHubMapOutput
}

type PrivateLinkHubMap map[string]PrivateLinkHubInput

func (PrivateLinkHubMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PrivateLinkHub)(nil)).Elem()
}

func (i PrivateLinkHubMap) ToPrivateLinkHubMapOutput() PrivateLinkHubMapOutput {
	return i.ToPrivateLinkHubMapOutputWithContext(context.Background())
}

func (i PrivateLinkHubMap) ToPrivateLinkHubMapOutputWithContext(ctx context.Context) PrivateLinkHubMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkHubMapOutput)
}

type PrivateLinkHubOutput struct{ *pulumi.OutputState }

func (PrivateLinkHubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkHub)(nil)).Elem()
}

func (o PrivateLinkHubOutput) ToPrivateLinkHubOutput() PrivateLinkHubOutput {
	return o
}

func (o PrivateLinkHubOutput) ToPrivateLinkHubOutputWithContext(ctx context.Context) PrivateLinkHubOutput {
	return o
}

// Specifies the Azure location where the Synapse Private Link Hub exists. Changing this forces a new resource to be created.
func (o PrivateLinkHubOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateLinkHub) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name which should be used for this Synapse Private Link Hub. Changing this forces a new Synapse Private Link Hub to be created.
func (o PrivateLinkHubOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateLinkHub) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the resource group in which to create the Synapse Private Link Hub. Changing this forces a new resource to be created.
func (o PrivateLinkHubOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateLinkHub) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A mapping of tags which should be assigned to the Synapse Private Link Hub.
func (o PrivateLinkHubOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PrivateLinkHub) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type PrivateLinkHubArrayOutput struct{ *pulumi.OutputState }

func (PrivateLinkHubArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PrivateLinkHub)(nil)).Elem()
}

func (o PrivateLinkHubArrayOutput) ToPrivateLinkHubArrayOutput() PrivateLinkHubArrayOutput {
	return o
}

func (o PrivateLinkHubArrayOutput) ToPrivateLinkHubArrayOutputWithContext(ctx context.Context) PrivateLinkHubArrayOutput {
	return o
}

func (o PrivateLinkHubArrayOutput) Index(i pulumi.IntInput) PrivateLinkHubOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PrivateLinkHub {
		return vs[0].([]*PrivateLinkHub)[vs[1].(int)]
	}).(PrivateLinkHubOutput)
}

type PrivateLinkHubMapOutput struct{ *pulumi.OutputState }

func (PrivateLinkHubMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PrivateLinkHub)(nil)).Elem()
}

func (o PrivateLinkHubMapOutput) ToPrivateLinkHubMapOutput() PrivateLinkHubMapOutput {
	return o
}

func (o PrivateLinkHubMapOutput) ToPrivateLinkHubMapOutputWithContext(ctx context.Context) PrivateLinkHubMapOutput {
	return o
}

func (o PrivateLinkHubMapOutput) MapIndex(k pulumi.StringInput) PrivateLinkHubOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PrivateLinkHub {
		return vs[0].(map[string]*PrivateLinkHub)[vs[1].(string)]
	}).(PrivateLinkHubOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkHubInput)(nil)).Elem(), &PrivateLinkHub{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkHubArrayInput)(nil)).Elem(), PrivateLinkHubArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkHubMapInput)(nil)).Elem(), PrivateLinkHubMap{})
	pulumi.RegisterOutputType(PrivateLinkHubOutput{})
	pulumi.RegisterOutputType(PrivateLinkHubArrayOutput{})
	pulumi.RegisterOutputType(PrivateLinkHubMapOutput{})
}
