// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package synapse

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Synapse Azure Integration Runtime.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/core"
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/storage"
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/synapse"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
// 			Location: pulumi.String("West Europe"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleAccount, err := storage.NewAccount(ctx, "exampleAccount", &storage.AccountArgs{
// 			Location:               exampleResourceGroup.Location,
// 			ResourceGroupName:      exampleResourceGroup.Name,
// 			AccountTier:            pulumi.String("Standard"),
// 			AccountReplicationType: pulumi.String("LRS"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = storage.NewContainer(ctx, "exampleContainer", &storage.ContainerArgs{
// 			StorageAccountName:  exampleAccount.Name,
// 			ContainerAccessType: pulumi.String("private"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleDataLakeGen2Filesystem, err := storage.NewDataLakeGen2Filesystem(ctx, "exampleDataLakeGen2Filesystem", &storage.DataLakeGen2FilesystemArgs{
// 			StorageAccountId: exampleAccount.ID(),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleWorkspace, err := synapse.NewWorkspace(ctx, "exampleWorkspace", &synapse.WorkspaceArgs{
// 			Location:                        exampleResourceGroup.Location,
// 			ResourceGroupName:               exampleResourceGroup.Name,
// 			StorageDataLakeGen2FilesystemId: exampleDataLakeGen2Filesystem.ID(),
// 			SqlAdministratorLogin:           pulumi.String("sqladminuser"),
// 			SqlAdministratorLoginPassword:   pulumi.String("H@Sh1CoR3!"),
// 			ManagedVirtualNetworkEnabled:    pulumi.Bool(true),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = synapse.NewFirewallRule(ctx, "exampleFirewallRule", &synapse.FirewallRuleArgs{
// 			SynapseWorkspaceId: exampleWorkspace.ID(),
// 			StartIpAddress:     pulumi.String("0.0.0.0"),
// 			EndIpAddress:       pulumi.String("255.255.255.255"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = synapse.NewIntegrationRuntimeAzure(ctx, "exampleIntegrationRuntimeAzure", &synapse.IntegrationRuntimeAzureArgs{
// 			SynapseWorkspaceId: exampleWorkspace.ID(),
// 			Location:           exampleResourceGroup.Location,
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Synapse Azure Integration Runtimes can be imported using the `resource id`, e.g.
//
// ```sh
//  $ pulumi import azure:synapse/integrationRuntimeAzure:IntegrationRuntimeAzure example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.Synapse/workspaces/workspace1/integrationruntimes/IntegrationRuntime1
// ```
type IntegrationRuntimeAzure struct {
	pulumi.CustomResourceState

	// Compute type of the cluster which will execute data flow job. Valid values are `General`, `ComputeOptimized` and `MemoryOptimized`. Defaults to `General`.
	ComputeType pulumi.StringPtrOutput `pulumi:"computeType"`
	// Core count of the cluster which will execute data flow job. Valid values are `8`, `16`, `32`, `48`, `80`, `144` and `272`. Defaults to `8`.
	CoreCount pulumi.IntPtrOutput `pulumi:"coreCount"`
	// Integration runtime description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The Azure Region where the Synapse Azure Integration Runtime should exist. Changing this forces a new Synapse Azure Integration Runtime to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name which should be used for this Synapse Azure Integration Runtime. Changing this forces a new Synapse Azure Integration Runtime to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Synapse Workspace ID in which to associate the Integration Runtime with. Changing this forces a new Synapse Azure Integration Runtime to be created.
	SynapseWorkspaceId pulumi.StringOutput `pulumi:"synapseWorkspaceId"`
	// Time to live (in minutes) setting of the cluster which will execute data flow job. Defaults to `0`.
	TimeToLiveMin pulumi.IntPtrOutput `pulumi:"timeToLiveMin"`
}

// NewIntegrationRuntimeAzure registers a new resource with the given unique name, arguments, and options.
func NewIntegrationRuntimeAzure(ctx *pulumi.Context,
	name string, args *IntegrationRuntimeAzureArgs, opts ...pulumi.ResourceOption) (*IntegrationRuntimeAzure, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SynapseWorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'SynapseWorkspaceId'")
	}
	var resource IntegrationRuntimeAzure
	err := ctx.RegisterResource("azure:synapse/integrationRuntimeAzure:IntegrationRuntimeAzure", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIntegrationRuntimeAzure gets an existing IntegrationRuntimeAzure resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIntegrationRuntimeAzure(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IntegrationRuntimeAzureState, opts ...pulumi.ResourceOption) (*IntegrationRuntimeAzure, error) {
	var resource IntegrationRuntimeAzure
	err := ctx.ReadResource("azure:synapse/integrationRuntimeAzure:IntegrationRuntimeAzure", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IntegrationRuntimeAzure resources.
type integrationRuntimeAzureState struct {
	// Compute type of the cluster which will execute data flow job. Valid values are `General`, `ComputeOptimized` and `MemoryOptimized`. Defaults to `General`.
	ComputeType *string `pulumi:"computeType"`
	// Core count of the cluster which will execute data flow job. Valid values are `8`, `16`, `32`, `48`, `80`, `144` and `272`. Defaults to `8`.
	CoreCount *int `pulumi:"coreCount"`
	// Integration runtime description.
	Description *string `pulumi:"description"`
	// The Azure Region where the Synapse Azure Integration Runtime should exist. Changing this forces a new Synapse Azure Integration Runtime to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this Synapse Azure Integration Runtime. Changing this forces a new Synapse Azure Integration Runtime to be created.
	Name *string `pulumi:"name"`
	// The Synapse Workspace ID in which to associate the Integration Runtime with. Changing this forces a new Synapse Azure Integration Runtime to be created.
	SynapseWorkspaceId *string `pulumi:"synapseWorkspaceId"`
	// Time to live (in minutes) setting of the cluster which will execute data flow job. Defaults to `0`.
	TimeToLiveMin *int `pulumi:"timeToLiveMin"`
}

type IntegrationRuntimeAzureState struct {
	// Compute type of the cluster which will execute data flow job. Valid values are `General`, `ComputeOptimized` and `MemoryOptimized`. Defaults to `General`.
	ComputeType pulumi.StringPtrInput
	// Core count of the cluster which will execute data flow job. Valid values are `8`, `16`, `32`, `48`, `80`, `144` and `272`. Defaults to `8`.
	CoreCount pulumi.IntPtrInput
	// Integration runtime description.
	Description pulumi.StringPtrInput
	// The Azure Region where the Synapse Azure Integration Runtime should exist. Changing this forces a new Synapse Azure Integration Runtime to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this Synapse Azure Integration Runtime. Changing this forces a new Synapse Azure Integration Runtime to be created.
	Name pulumi.StringPtrInput
	// The Synapse Workspace ID in which to associate the Integration Runtime with. Changing this forces a new Synapse Azure Integration Runtime to be created.
	SynapseWorkspaceId pulumi.StringPtrInput
	// Time to live (in minutes) setting of the cluster which will execute data flow job. Defaults to `0`.
	TimeToLiveMin pulumi.IntPtrInput
}

func (IntegrationRuntimeAzureState) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationRuntimeAzureState)(nil)).Elem()
}

type integrationRuntimeAzureArgs struct {
	// Compute type of the cluster which will execute data flow job. Valid values are `General`, `ComputeOptimized` and `MemoryOptimized`. Defaults to `General`.
	ComputeType *string `pulumi:"computeType"`
	// Core count of the cluster which will execute data flow job. Valid values are `8`, `16`, `32`, `48`, `80`, `144` and `272`. Defaults to `8`.
	CoreCount *int `pulumi:"coreCount"`
	// Integration runtime description.
	Description *string `pulumi:"description"`
	// The Azure Region where the Synapse Azure Integration Runtime should exist. Changing this forces a new Synapse Azure Integration Runtime to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this Synapse Azure Integration Runtime. Changing this forces a new Synapse Azure Integration Runtime to be created.
	Name *string `pulumi:"name"`
	// The Synapse Workspace ID in which to associate the Integration Runtime with. Changing this forces a new Synapse Azure Integration Runtime to be created.
	SynapseWorkspaceId string `pulumi:"synapseWorkspaceId"`
	// Time to live (in minutes) setting of the cluster which will execute data flow job. Defaults to `0`.
	TimeToLiveMin *int `pulumi:"timeToLiveMin"`
}

// The set of arguments for constructing a IntegrationRuntimeAzure resource.
type IntegrationRuntimeAzureArgs struct {
	// Compute type of the cluster which will execute data flow job. Valid values are `General`, `ComputeOptimized` and `MemoryOptimized`. Defaults to `General`.
	ComputeType pulumi.StringPtrInput
	// Core count of the cluster which will execute data flow job. Valid values are `8`, `16`, `32`, `48`, `80`, `144` and `272`. Defaults to `8`.
	CoreCount pulumi.IntPtrInput
	// Integration runtime description.
	Description pulumi.StringPtrInput
	// The Azure Region where the Synapse Azure Integration Runtime should exist. Changing this forces a new Synapse Azure Integration Runtime to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this Synapse Azure Integration Runtime. Changing this forces a new Synapse Azure Integration Runtime to be created.
	Name pulumi.StringPtrInput
	// The Synapse Workspace ID in which to associate the Integration Runtime with. Changing this forces a new Synapse Azure Integration Runtime to be created.
	SynapseWorkspaceId pulumi.StringInput
	// Time to live (in minutes) setting of the cluster which will execute data flow job. Defaults to `0`.
	TimeToLiveMin pulumi.IntPtrInput
}

func (IntegrationRuntimeAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationRuntimeAzureArgs)(nil)).Elem()
}

type IntegrationRuntimeAzureInput interface {
	pulumi.Input

	ToIntegrationRuntimeAzureOutput() IntegrationRuntimeAzureOutput
	ToIntegrationRuntimeAzureOutputWithContext(ctx context.Context) IntegrationRuntimeAzureOutput
}

func (*IntegrationRuntimeAzure) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeAzure)(nil))
}

func (i *IntegrationRuntimeAzure) ToIntegrationRuntimeAzureOutput() IntegrationRuntimeAzureOutput {
	return i.ToIntegrationRuntimeAzureOutputWithContext(context.Background())
}

func (i *IntegrationRuntimeAzure) ToIntegrationRuntimeAzureOutputWithContext(ctx context.Context) IntegrationRuntimeAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeAzureOutput)
}

func (i *IntegrationRuntimeAzure) ToIntegrationRuntimeAzurePtrOutput() IntegrationRuntimeAzurePtrOutput {
	return i.ToIntegrationRuntimeAzurePtrOutputWithContext(context.Background())
}

func (i *IntegrationRuntimeAzure) ToIntegrationRuntimeAzurePtrOutputWithContext(ctx context.Context) IntegrationRuntimeAzurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeAzurePtrOutput)
}

type IntegrationRuntimeAzurePtrInput interface {
	pulumi.Input

	ToIntegrationRuntimeAzurePtrOutput() IntegrationRuntimeAzurePtrOutput
	ToIntegrationRuntimeAzurePtrOutputWithContext(ctx context.Context) IntegrationRuntimeAzurePtrOutput
}

type integrationRuntimeAzurePtrType IntegrationRuntimeAzureArgs

func (*integrationRuntimeAzurePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeAzure)(nil))
}

func (i *integrationRuntimeAzurePtrType) ToIntegrationRuntimeAzurePtrOutput() IntegrationRuntimeAzurePtrOutput {
	return i.ToIntegrationRuntimeAzurePtrOutputWithContext(context.Background())
}

func (i *integrationRuntimeAzurePtrType) ToIntegrationRuntimeAzurePtrOutputWithContext(ctx context.Context) IntegrationRuntimeAzurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeAzurePtrOutput)
}

// IntegrationRuntimeAzureArrayInput is an input type that accepts IntegrationRuntimeAzureArray and IntegrationRuntimeAzureArrayOutput values.
// You can construct a concrete instance of `IntegrationRuntimeAzureArrayInput` via:
//
//          IntegrationRuntimeAzureArray{ IntegrationRuntimeAzureArgs{...} }
type IntegrationRuntimeAzureArrayInput interface {
	pulumi.Input

	ToIntegrationRuntimeAzureArrayOutput() IntegrationRuntimeAzureArrayOutput
	ToIntegrationRuntimeAzureArrayOutputWithContext(context.Context) IntegrationRuntimeAzureArrayOutput
}

type IntegrationRuntimeAzureArray []IntegrationRuntimeAzureInput

func (IntegrationRuntimeAzureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IntegrationRuntimeAzure)(nil)).Elem()
}

func (i IntegrationRuntimeAzureArray) ToIntegrationRuntimeAzureArrayOutput() IntegrationRuntimeAzureArrayOutput {
	return i.ToIntegrationRuntimeAzureArrayOutputWithContext(context.Background())
}

func (i IntegrationRuntimeAzureArray) ToIntegrationRuntimeAzureArrayOutputWithContext(ctx context.Context) IntegrationRuntimeAzureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeAzureArrayOutput)
}

// IntegrationRuntimeAzureMapInput is an input type that accepts IntegrationRuntimeAzureMap and IntegrationRuntimeAzureMapOutput values.
// You can construct a concrete instance of `IntegrationRuntimeAzureMapInput` via:
//
//          IntegrationRuntimeAzureMap{ "key": IntegrationRuntimeAzureArgs{...} }
type IntegrationRuntimeAzureMapInput interface {
	pulumi.Input

	ToIntegrationRuntimeAzureMapOutput() IntegrationRuntimeAzureMapOutput
	ToIntegrationRuntimeAzureMapOutputWithContext(context.Context) IntegrationRuntimeAzureMapOutput
}

type IntegrationRuntimeAzureMap map[string]IntegrationRuntimeAzureInput

func (IntegrationRuntimeAzureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IntegrationRuntimeAzure)(nil)).Elem()
}

func (i IntegrationRuntimeAzureMap) ToIntegrationRuntimeAzureMapOutput() IntegrationRuntimeAzureMapOutput {
	return i.ToIntegrationRuntimeAzureMapOutputWithContext(context.Background())
}

func (i IntegrationRuntimeAzureMap) ToIntegrationRuntimeAzureMapOutputWithContext(ctx context.Context) IntegrationRuntimeAzureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationRuntimeAzureMapOutput)
}

type IntegrationRuntimeAzureOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationRuntimeAzure)(nil))
}

func (o IntegrationRuntimeAzureOutput) ToIntegrationRuntimeAzureOutput() IntegrationRuntimeAzureOutput {
	return o
}

func (o IntegrationRuntimeAzureOutput) ToIntegrationRuntimeAzureOutputWithContext(ctx context.Context) IntegrationRuntimeAzureOutput {
	return o
}

func (o IntegrationRuntimeAzureOutput) ToIntegrationRuntimeAzurePtrOutput() IntegrationRuntimeAzurePtrOutput {
	return o.ToIntegrationRuntimeAzurePtrOutputWithContext(context.Background())
}

func (o IntegrationRuntimeAzureOutput) ToIntegrationRuntimeAzurePtrOutputWithContext(ctx context.Context) IntegrationRuntimeAzurePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationRuntimeAzure) *IntegrationRuntimeAzure {
		return &v
	}).(IntegrationRuntimeAzurePtrOutput)
}

type IntegrationRuntimeAzurePtrOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeAzurePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationRuntimeAzure)(nil))
}

func (o IntegrationRuntimeAzurePtrOutput) ToIntegrationRuntimeAzurePtrOutput() IntegrationRuntimeAzurePtrOutput {
	return o
}

func (o IntegrationRuntimeAzurePtrOutput) ToIntegrationRuntimeAzurePtrOutputWithContext(ctx context.Context) IntegrationRuntimeAzurePtrOutput {
	return o
}

func (o IntegrationRuntimeAzurePtrOutput) Elem() IntegrationRuntimeAzureOutput {
	return o.ApplyT(func(v *IntegrationRuntimeAzure) IntegrationRuntimeAzure {
		if v != nil {
			return *v
		}
		var ret IntegrationRuntimeAzure
		return ret
	}).(IntegrationRuntimeAzureOutput)
}

type IntegrationRuntimeAzureArrayOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeAzureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationRuntimeAzure)(nil))
}

func (o IntegrationRuntimeAzureArrayOutput) ToIntegrationRuntimeAzureArrayOutput() IntegrationRuntimeAzureArrayOutput {
	return o
}

func (o IntegrationRuntimeAzureArrayOutput) ToIntegrationRuntimeAzureArrayOutputWithContext(ctx context.Context) IntegrationRuntimeAzureArrayOutput {
	return o
}

func (o IntegrationRuntimeAzureArrayOutput) Index(i pulumi.IntInput) IntegrationRuntimeAzureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationRuntimeAzure {
		return vs[0].([]IntegrationRuntimeAzure)[vs[1].(int)]
	}).(IntegrationRuntimeAzureOutput)
}

type IntegrationRuntimeAzureMapOutput struct{ *pulumi.OutputState }

func (IntegrationRuntimeAzureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]IntegrationRuntimeAzure)(nil))
}

func (o IntegrationRuntimeAzureMapOutput) ToIntegrationRuntimeAzureMapOutput() IntegrationRuntimeAzureMapOutput {
	return o
}

func (o IntegrationRuntimeAzureMapOutput) ToIntegrationRuntimeAzureMapOutputWithContext(ctx context.Context) IntegrationRuntimeAzureMapOutput {
	return o
}

func (o IntegrationRuntimeAzureMapOutput) MapIndex(k pulumi.StringInput) IntegrationRuntimeAzureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) IntegrationRuntimeAzure {
		return vs[0].(map[string]IntegrationRuntimeAzure)[vs[1].(string)]
	}).(IntegrationRuntimeAzureOutput)
}

func init() {
	pulumi.RegisterOutputType(IntegrationRuntimeAzureOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeAzurePtrOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeAzureArrayOutput{})
	pulumi.RegisterOutputType(IntegrationRuntimeAzureMapOutput{})
}
