// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package streamanalytics

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Stream Analytics Job Storage Account. Use this resource for managing the Job Storage Account using `Msi` authentication with a `SystemAssigned` identity.
//
// > **Note:** The Job Storage Account for a Stream Analytics Job can be managed on the `streamanalytics.Job` resource with the `jobStorageAccount` block, or with this resource. We do not recommend managing the Job Storage Account through both means as this can lead to conflicts.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/storage"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/streamanalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resources"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleJob, err := streamanalytics.NewJob(ctx, "example", &streamanalytics.JobArgs{
//				Name:                               pulumi.String("example-job"),
//				ResourceGroupName:                  example.Name,
//				Location:                           example.Location,
//				CompatibilityLevel:                 pulumi.String("1.2"),
//				DataLocale:                         pulumi.String("en-GB"),
//				EventsLateArrivalMaxDelayInSeconds: pulumi.Int(60),
//				EventsOutOfOrderMaxDelayInSeconds:  pulumi.Int(50),
//				EventsOutOfOrderPolicy:             pulumi.String("Adjust"),
//				OutputErrorPolicy:                  pulumi.String("Drop"),
//				StreamingUnits:                     pulumi.Int(3),
//				SkuName:                            pulumi.String("StandardV2"),
//				Identity: &streamanalytics.JobIdentityArgs{
//					Type: pulumi.String("SystemAssigned"),
//				},
//				Tags: pulumi.StringMap{
//					"environment": pulumi.String("Example"),
//				},
//				TransformationQuery: pulumi.String("    SELECT *\n    INTO [YourOutputAlias]\n    FROM [YourInputAlias]\n"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleAccount, err := storage.NewAccount(ctx, "example", &storage.AccountArgs{
//				Name:                   pulumi.String("exampleaccount"),
//				ResourceGroupName:      example.Name,
//				Location:               example.Location,
//				AccountTier:            pulumi.String("Standard"),
//				AccountReplicationType: pulumi.String("LRS"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = streamanalytics.NewJobStorageAccount(ctx, "example", &streamanalytics.JobStorageAccountArgs{
//				StreamAnalyticsJobId: exampleJob.ID(),
//				StorageAccountName:   exampleAccount.Name,
//				AuthenticationMode:   pulumi.String("Msi"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Stream Analytics Job Storage Accounts can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:streamanalytics/jobStorageAccount:JobStorageAccount example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.StreamAnalytics/streamingJobs/job1
// ```
type JobStorageAccount struct {
	pulumi.CustomResourceState

	// The authentication mode for the Stream Analytics Job's Storage Account. Possible values are `ConnectionString`, and `Msi`.
	AuthenticationMode pulumi.StringOutput    `pulumi:"authenticationMode"`
	StorageAccountKey  pulumi.StringPtrOutput `pulumi:"storageAccountKey"`
	StorageAccountName pulumi.StringOutput    `pulumi:"storageAccountName"`
	// The ID of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobId pulumi.StringOutput `pulumi:"streamAnalyticsJobId"`
}

// NewJobStorageAccount registers a new resource with the given unique name, arguments, and options.
func NewJobStorageAccount(ctx *pulumi.Context,
	name string, args *JobStorageAccountArgs, opts ...pulumi.ResourceOption) (*JobStorageAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AuthenticationMode == nil {
		return nil, errors.New("invalid value for required argument 'AuthenticationMode'")
	}
	if args.StorageAccountName == nil {
		return nil, errors.New("invalid value for required argument 'StorageAccountName'")
	}
	if args.StreamAnalyticsJobId == nil {
		return nil, errors.New("invalid value for required argument 'StreamAnalyticsJobId'")
	}
	if args.StorageAccountKey != nil {
		args.StorageAccountKey = pulumi.ToSecret(args.StorageAccountKey).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"storageAccountKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource JobStorageAccount
	err := ctx.RegisterResource("azure:streamanalytics/jobStorageAccount:JobStorageAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJobStorageAccount gets an existing JobStorageAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJobStorageAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *JobStorageAccountState, opts ...pulumi.ResourceOption) (*JobStorageAccount, error) {
	var resource JobStorageAccount
	err := ctx.ReadResource("azure:streamanalytics/jobStorageAccount:JobStorageAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering JobStorageAccount resources.
type jobStorageAccountState struct {
	// The authentication mode for the Stream Analytics Job's Storage Account. Possible values are `ConnectionString`, and `Msi`.
	AuthenticationMode *string `pulumi:"authenticationMode"`
	StorageAccountKey  *string `pulumi:"storageAccountKey"`
	StorageAccountName *string `pulumi:"storageAccountName"`
	// The ID of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobId *string `pulumi:"streamAnalyticsJobId"`
}

type JobStorageAccountState struct {
	// The authentication mode for the Stream Analytics Job's Storage Account. Possible values are `ConnectionString`, and `Msi`.
	AuthenticationMode pulumi.StringPtrInput
	StorageAccountKey  pulumi.StringPtrInput
	StorageAccountName pulumi.StringPtrInput
	// The ID of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobId pulumi.StringPtrInput
}

func (JobStorageAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*jobStorageAccountState)(nil)).Elem()
}

type jobStorageAccountArgs struct {
	// The authentication mode for the Stream Analytics Job's Storage Account. Possible values are `ConnectionString`, and `Msi`.
	AuthenticationMode string  `pulumi:"authenticationMode"`
	StorageAccountKey  *string `pulumi:"storageAccountKey"`
	StorageAccountName string  `pulumi:"storageAccountName"`
	// The ID of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobId string `pulumi:"streamAnalyticsJobId"`
}

// The set of arguments for constructing a JobStorageAccount resource.
type JobStorageAccountArgs struct {
	// The authentication mode for the Stream Analytics Job's Storage Account. Possible values are `ConnectionString`, and `Msi`.
	AuthenticationMode pulumi.StringInput
	StorageAccountKey  pulumi.StringPtrInput
	StorageAccountName pulumi.StringInput
	// The ID of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobId pulumi.StringInput
}

func (JobStorageAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*jobStorageAccountArgs)(nil)).Elem()
}

type JobStorageAccountInput interface {
	pulumi.Input

	ToJobStorageAccountOutput() JobStorageAccountOutput
	ToJobStorageAccountOutputWithContext(ctx context.Context) JobStorageAccountOutput
}

func (*JobStorageAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStorageAccount)(nil)).Elem()
}

func (i *JobStorageAccount) ToJobStorageAccountOutput() JobStorageAccountOutput {
	return i.ToJobStorageAccountOutputWithContext(context.Background())
}

func (i *JobStorageAccount) ToJobStorageAccountOutputWithContext(ctx context.Context) JobStorageAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStorageAccountOutput)
}

// JobStorageAccountArrayInput is an input type that accepts JobStorageAccountArray and JobStorageAccountArrayOutput values.
// You can construct a concrete instance of `JobStorageAccountArrayInput` via:
//
//	JobStorageAccountArray{ JobStorageAccountArgs{...} }
type JobStorageAccountArrayInput interface {
	pulumi.Input

	ToJobStorageAccountArrayOutput() JobStorageAccountArrayOutput
	ToJobStorageAccountArrayOutputWithContext(context.Context) JobStorageAccountArrayOutput
}

type JobStorageAccountArray []JobStorageAccountInput

func (JobStorageAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*JobStorageAccount)(nil)).Elem()
}

func (i JobStorageAccountArray) ToJobStorageAccountArrayOutput() JobStorageAccountArrayOutput {
	return i.ToJobStorageAccountArrayOutputWithContext(context.Background())
}

func (i JobStorageAccountArray) ToJobStorageAccountArrayOutputWithContext(ctx context.Context) JobStorageAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStorageAccountArrayOutput)
}

// JobStorageAccountMapInput is an input type that accepts JobStorageAccountMap and JobStorageAccountMapOutput values.
// You can construct a concrete instance of `JobStorageAccountMapInput` via:
//
//	JobStorageAccountMap{ "key": JobStorageAccountArgs{...} }
type JobStorageAccountMapInput interface {
	pulumi.Input

	ToJobStorageAccountMapOutput() JobStorageAccountMapOutput
	ToJobStorageAccountMapOutputWithContext(context.Context) JobStorageAccountMapOutput
}

type JobStorageAccountMap map[string]JobStorageAccountInput

func (JobStorageAccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*JobStorageAccount)(nil)).Elem()
}

func (i JobStorageAccountMap) ToJobStorageAccountMapOutput() JobStorageAccountMapOutput {
	return i.ToJobStorageAccountMapOutputWithContext(context.Background())
}

func (i JobStorageAccountMap) ToJobStorageAccountMapOutputWithContext(ctx context.Context) JobStorageAccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStorageAccountMapOutput)
}

type JobStorageAccountOutput struct{ *pulumi.OutputState }

func (JobStorageAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStorageAccount)(nil)).Elem()
}

func (o JobStorageAccountOutput) ToJobStorageAccountOutput() JobStorageAccountOutput {
	return o
}

func (o JobStorageAccountOutput) ToJobStorageAccountOutputWithContext(ctx context.Context) JobStorageAccountOutput {
	return o
}

// The authentication mode for the Stream Analytics Job's Storage Account. Possible values are `ConnectionString`, and `Msi`.
func (o JobStorageAccountOutput) AuthenticationMode() pulumi.StringOutput {
	return o.ApplyT(func(v *JobStorageAccount) pulumi.StringOutput { return v.AuthenticationMode }).(pulumi.StringOutput)
}

func (o JobStorageAccountOutput) StorageAccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStorageAccount) pulumi.StringPtrOutput { return v.StorageAccountKey }).(pulumi.StringPtrOutput)
}

func (o JobStorageAccountOutput) StorageAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v *JobStorageAccount) pulumi.StringOutput { return v.StorageAccountName }).(pulumi.StringOutput)
}

// The ID of the Stream Analytics Job. Changing this forces a new resource to be created.
func (o JobStorageAccountOutput) StreamAnalyticsJobId() pulumi.StringOutput {
	return o.ApplyT(func(v *JobStorageAccount) pulumi.StringOutput { return v.StreamAnalyticsJobId }).(pulumi.StringOutput)
}

type JobStorageAccountArrayOutput struct{ *pulumi.OutputState }

func (JobStorageAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*JobStorageAccount)(nil)).Elem()
}

func (o JobStorageAccountArrayOutput) ToJobStorageAccountArrayOutput() JobStorageAccountArrayOutput {
	return o
}

func (o JobStorageAccountArrayOutput) ToJobStorageAccountArrayOutputWithContext(ctx context.Context) JobStorageAccountArrayOutput {
	return o
}

func (o JobStorageAccountArrayOutput) Index(i pulumi.IntInput) JobStorageAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *JobStorageAccount {
		return vs[0].([]*JobStorageAccount)[vs[1].(int)]
	}).(JobStorageAccountOutput)
}

type JobStorageAccountMapOutput struct{ *pulumi.OutputState }

func (JobStorageAccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*JobStorageAccount)(nil)).Elem()
}

func (o JobStorageAccountMapOutput) ToJobStorageAccountMapOutput() JobStorageAccountMapOutput {
	return o
}

func (o JobStorageAccountMapOutput) ToJobStorageAccountMapOutputWithContext(ctx context.Context) JobStorageAccountMapOutput {
	return o
}

func (o JobStorageAccountMapOutput) MapIndex(k pulumi.StringInput) JobStorageAccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *JobStorageAccount {
		return vs[0].(map[string]*JobStorageAccount)[vs[1].(string)]
	}).(JobStorageAccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*JobStorageAccountInput)(nil)).Elem(), &JobStorageAccount{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobStorageAccountArrayInput)(nil)).Elem(), JobStorageAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobStorageAccountMapInput)(nil)).Elem(), JobStorageAccountMap{})
	pulumi.RegisterOutputType(JobStorageAccountOutput{})
	pulumi.RegisterOutputType(JobStorageAccountArrayOutput{})
	pulumi.RegisterOutputType(JobStorageAccountMapOutput{})
}
