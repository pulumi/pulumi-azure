// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package streamanalytics

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Stream Analytics Output to a ServiceBus Topic.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/servicebus"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/streamanalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleJob := streamanalytics.LookupJobOutput(ctx, streamanalytics.GetJobOutputArgs{
//				Name:              pulumi.String("example-job"),
//				ResourceGroupName: exampleResourceGroup.Name,
//			}, nil)
//			exampleNamespace, err := servicebus.NewNamespace(ctx, "exampleNamespace", &servicebus.NamespaceArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				Sku:               pulumi.String("Standard"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleTopic, err := servicebus.NewTopic(ctx, "exampleTopic", &servicebus.TopicArgs{
//				NamespaceId:        exampleNamespace.ID(),
//				EnablePartitioning: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = streamanalytics.NewOutputServicebusTopic(ctx, "exampleOutputServicebusTopic", &streamanalytics.OutputServicebusTopicArgs{
//				StreamAnalyticsJobName: exampleJob.ApplyT(func(exampleJob streamanalytics.GetJobResult) (*string, error) {
//					return &exampleJob.Name, nil
//				}).(pulumi.StringPtrOutput),
//				ResourceGroupName: exampleJob.ApplyT(func(exampleJob streamanalytics.GetJobResult) (*string, error) {
//					return &exampleJob.ResourceGroupName, nil
//				}).(pulumi.StringPtrOutput),
//				TopicName:              exampleTopic.Name,
//				ServicebusNamespace:    exampleNamespace.Name,
//				SharedAccessPolicyKey:  exampleNamespace.DefaultPrimaryKey,
//				SharedAccessPolicyName: pulumi.String("RootManageSharedAccessKey"),
//				PropertyColumns: pulumi.StringArray{
//					pulumi.String("col1"),
//					pulumi.String("col2"),
//				},
//				Serialization: &streamanalytics.OutputServicebusTopicSerializationArgs{
//					Type:   pulumi.String("Csv"),
//					Format: pulumi.String("Array"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Stream Analytics Output ServiceBus Topic's can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:streamanalytics/outputServicebusTopic:OutputServicebusTopic example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.StreamAnalytics/streamingJobs/job1/outputs/output1
//
// ```
type OutputServicebusTopic struct {
	pulumi.CustomResourceState

	// The authentication mode for the Stream Output. Possible values are `Msi` and `ConnectionString`. Defaults to `ConnectionString`.
	AuthenticationMode pulumi.StringPtrOutput `pulumi:"authenticationMode"`
	// The name of the Stream Output. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// A list of property columns to add to the Service Bus Topic output.
	PropertyColumns pulumi.StringArrayOutput `pulumi:"propertyColumns"`
	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A `serialization` block as defined below.
	Serialization OutputServicebusTopicSerializationOutput `pulumi:"serialization"`
	// The namespace that is associated with the desired Event Hub, Service Bus Topic, Service Bus Topic, etc.
	ServicebusNamespace pulumi.StringOutput `pulumi:"servicebusNamespace"`
	// The shared access policy key for the specified shared access policy. Required if `authenticationMode` is `ConnectionString`.
	SharedAccessPolicyKey pulumi.StringPtrOutput `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required if `authenticationMode` is `ConnectionString`.
	SharedAccessPolicyName pulumi.StringPtrOutput `pulumi:"sharedAccessPolicyName"`
	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobName pulumi.StringOutput `pulumi:"streamAnalyticsJobName"`
	// A key-value pair of system property columns that will be attached to the outgoing messages for the Service Bus Topic Output.
	//
	// > **NOTE:** The acceptable keys are `ContentType`, `CorrelationId`, `Label`, `MessageId`, `PartitionKey`, `ReplyTo`, `ReplyToSessionId`, `ScheduledEnqueueTimeUtc`, `SessionId`, `TimeToLive` and `To`.
	SystemPropertyColumns pulumi.StringMapOutput `pulumi:"systemPropertyColumns"`
	// The name of the Service Bus Topic.
	TopicName pulumi.StringOutput `pulumi:"topicName"`
}

// NewOutputServicebusTopic registers a new resource with the given unique name, arguments, and options.
func NewOutputServicebusTopic(ctx *pulumi.Context,
	name string, args *OutputServicebusTopicArgs, opts ...pulumi.ResourceOption) (*OutputServicebusTopic, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Serialization == nil {
		return nil, errors.New("invalid value for required argument 'Serialization'")
	}
	if args.ServicebusNamespace == nil {
		return nil, errors.New("invalid value for required argument 'ServicebusNamespace'")
	}
	if args.StreamAnalyticsJobName == nil {
		return nil, errors.New("invalid value for required argument 'StreamAnalyticsJobName'")
	}
	if args.TopicName == nil {
		return nil, errors.New("invalid value for required argument 'TopicName'")
	}
	if args.SharedAccessPolicyKey != nil {
		args.SharedAccessPolicyKey = pulumi.ToSecret(args.SharedAccessPolicyKey).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"sharedAccessPolicyKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OutputServicebusTopic
	err := ctx.RegisterResource("azure:streamanalytics/outputServicebusTopic:OutputServicebusTopic", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOutputServicebusTopic gets an existing OutputServicebusTopic resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOutputServicebusTopic(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OutputServicebusTopicState, opts ...pulumi.ResourceOption) (*OutputServicebusTopic, error) {
	var resource OutputServicebusTopic
	err := ctx.ReadResource("azure:streamanalytics/outputServicebusTopic:OutputServicebusTopic", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OutputServicebusTopic resources.
type outputServicebusTopicState struct {
	// The authentication mode for the Stream Output. Possible values are `Msi` and `ConnectionString`. Defaults to `ConnectionString`.
	AuthenticationMode *string `pulumi:"authenticationMode"`
	// The name of the Stream Output. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A list of property columns to add to the Service Bus Topic output.
	PropertyColumns []string `pulumi:"propertyColumns"`
	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A `serialization` block as defined below.
	Serialization *OutputServicebusTopicSerialization `pulumi:"serialization"`
	// The namespace that is associated with the desired Event Hub, Service Bus Topic, Service Bus Topic, etc.
	ServicebusNamespace *string `pulumi:"servicebusNamespace"`
	// The shared access policy key for the specified shared access policy. Required if `authenticationMode` is `ConnectionString`.
	SharedAccessPolicyKey *string `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required if `authenticationMode` is `ConnectionString`.
	SharedAccessPolicyName *string `pulumi:"sharedAccessPolicyName"`
	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobName *string `pulumi:"streamAnalyticsJobName"`
	// A key-value pair of system property columns that will be attached to the outgoing messages for the Service Bus Topic Output.
	//
	// > **NOTE:** The acceptable keys are `ContentType`, `CorrelationId`, `Label`, `MessageId`, `PartitionKey`, `ReplyTo`, `ReplyToSessionId`, `ScheduledEnqueueTimeUtc`, `SessionId`, `TimeToLive` and `To`.
	SystemPropertyColumns map[string]string `pulumi:"systemPropertyColumns"`
	// The name of the Service Bus Topic.
	TopicName *string `pulumi:"topicName"`
}

type OutputServicebusTopicState struct {
	// The authentication mode for the Stream Output. Possible values are `Msi` and `ConnectionString`. Defaults to `ConnectionString`.
	AuthenticationMode pulumi.StringPtrInput
	// The name of the Stream Output. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A list of property columns to add to the Service Bus Topic output.
	PropertyColumns pulumi.StringArrayInput
	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// A `serialization` block as defined below.
	Serialization OutputServicebusTopicSerializationPtrInput
	// The namespace that is associated with the desired Event Hub, Service Bus Topic, Service Bus Topic, etc.
	ServicebusNamespace pulumi.StringPtrInput
	// The shared access policy key for the specified shared access policy. Required if `authenticationMode` is `ConnectionString`.
	SharedAccessPolicyKey pulumi.StringPtrInput
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required if `authenticationMode` is `ConnectionString`.
	SharedAccessPolicyName pulumi.StringPtrInput
	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobName pulumi.StringPtrInput
	// A key-value pair of system property columns that will be attached to the outgoing messages for the Service Bus Topic Output.
	//
	// > **NOTE:** The acceptable keys are `ContentType`, `CorrelationId`, `Label`, `MessageId`, `PartitionKey`, `ReplyTo`, `ReplyToSessionId`, `ScheduledEnqueueTimeUtc`, `SessionId`, `TimeToLive` and `To`.
	SystemPropertyColumns pulumi.StringMapInput
	// The name of the Service Bus Topic.
	TopicName pulumi.StringPtrInput
}

func (OutputServicebusTopicState) ElementType() reflect.Type {
	return reflect.TypeOf((*outputServicebusTopicState)(nil)).Elem()
}

type outputServicebusTopicArgs struct {
	// The authentication mode for the Stream Output. Possible values are `Msi` and `ConnectionString`. Defaults to `ConnectionString`.
	AuthenticationMode *string `pulumi:"authenticationMode"`
	// The name of the Stream Output. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A list of property columns to add to the Service Bus Topic output.
	PropertyColumns []string `pulumi:"propertyColumns"`
	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A `serialization` block as defined below.
	Serialization OutputServicebusTopicSerialization `pulumi:"serialization"`
	// The namespace that is associated with the desired Event Hub, Service Bus Topic, Service Bus Topic, etc.
	ServicebusNamespace string `pulumi:"servicebusNamespace"`
	// The shared access policy key for the specified shared access policy. Required if `authenticationMode` is `ConnectionString`.
	SharedAccessPolicyKey *string `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required if `authenticationMode` is `ConnectionString`.
	SharedAccessPolicyName *string `pulumi:"sharedAccessPolicyName"`
	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobName string `pulumi:"streamAnalyticsJobName"`
	// A key-value pair of system property columns that will be attached to the outgoing messages for the Service Bus Topic Output.
	//
	// > **NOTE:** The acceptable keys are `ContentType`, `CorrelationId`, `Label`, `MessageId`, `PartitionKey`, `ReplyTo`, `ReplyToSessionId`, `ScheduledEnqueueTimeUtc`, `SessionId`, `TimeToLive` and `To`.
	SystemPropertyColumns map[string]string `pulumi:"systemPropertyColumns"`
	// The name of the Service Bus Topic.
	TopicName string `pulumi:"topicName"`
}

// The set of arguments for constructing a OutputServicebusTopic resource.
type OutputServicebusTopicArgs struct {
	// The authentication mode for the Stream Output. Possible values are `Msi` and `ConnectionString`. Defaults to `ConnectionString`.
	AuthenticationMode pulumi.StringPtrInput
	// The name of the Stream Output. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A list of property columns to add to the Service Bus Topic output.
	PropertyColumns pulumi.StringArrayInput
	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// A `serialization` block as defined below.
	Serialization OutputServicebusTopicSerializationInput
	// The namespace that is associated with the desired Event Hub, Service Bus Topic, Service Bus Topic, etc.
	ServicebusNamespace pulumi.StringInput
	// The shared access policy key for the specified shared access policy. Required if `authenticationMode` is `ConnectionString`.
	SharedAccessPolicyKey pulumi.StringPtrInput
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required if `authenticationMode` is `ConnectionString`.
	SharedAccessPolicyName pulumi.StringPtrInput
	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobName pulumi.StringInput
	// A key-value pair of system property columns that will be attached to the outgoing messages for the Service Bus Topic Output.
	//
	// > **NOTE:** The acceptable keys are `ContentType`, `CorrelationId`, `Label`, `MessageId`, `PartitionKey`, `ReplyTo`, `ReplyToSessionId`, `ScheduledEnqueueTimeUtc`, `SessionId`, `TimeToLive` and `To`.
	SystemPropertyColumns pulumi.StringMapInput
	// The name of the Service Bus Topic.
	TopicName pulumi.StringInput
}

func (OutputServicebusTopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*outputServicebusTopicArgs)(nil)).Elem()
}

type OutputServicebusTopicInput interface {
	pulumi.Input

	ToOutputServicebusTopicOutput() OutputServicebusTopicOutput
	ToOutputServicebusTopicOutputWithContext(ctx context.Context) OutputServicebusTopicOutput
}

func (*OutputServicebusTopic) ElementType() reflect.Type {
	return reflect.TypeOf((**OutputServicebusTopic)(nil)).Elem()
}

func (i *OutputServicebusTopic) ToOutputServicebusTopicOutput() OutputServicebusTopicOutput {
	return i.ToOutputServicebusTopicOutputWithContext(context.Background())
}

func (i *OutputServicebusTopic) ToOutputServicebusTopicOutputWithContext(ctx context.Context) OutputServicebusTopicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputServicebusTopicOutput)
}

// OutputServicebusTopicArrayInput is an input type that accepts OutputServicebusTopicArray and OutputServicebusTopicArrayOutput values.
// You can construct a concrete instance of `OutputServicebusTopicArrayInput` via:
//
//	OutputServicebusTopicArray{ OutputServicebusTopicArgs{...} }
type OutputServicebusTopicArrayInput interface {
	pulumi.Input

	ToOutputServicebusTopicArrayOutput() OutputServicebusTopicArrayOutput
	ToOutputServicebusTopicArrayOutputWithContext(context.Context) OutputServicebusTopicArrayOutput
}

type OutputServicebusTopicArray []OutputServicebusTopicInput

func (OutputServicebusTopicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OutputServicebusTopic)(nil)).Elem()
}

func (i OutputServicebusTopicArray) ToOutputServicebusTopicArrayOutput() OutputServicebusTopicArrayOutput {
	return i.ToOutputServicebusTopicArrayOutputWithContext(context.Background())
}

func (i OutputServicebusTopicArray) ToOutputServicebusTopicArrayOutputWithContext(ctx context.Context) OutputServicebusTopicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputServicebusTopicArrayOutput)
}

// OutputServicebusTopicMapInput is an input type that accepts OutputServicebusTopicMap and OutputServicebusTopicMapOutput values.
// You can construct a concrete instance of `OutputServicebusTopicMapInput` via:
//
//	OutputServicebusTopicMap{ "key": OutputServicebusTopicArgs{...} }
type OutputServicebusTopicMapInput interface {
	pulumi.Input

	ToOutputServicebusTopicMapOutput() OutputServicebusTopicMapOutput
	ToOutputServicebusTopicMapOutputWithContext(context.Context) OutputServicebusTopicMapOutput
}

type OutputServicebusTopicMap map[string]OutputServicebusTopicInput

func (OutputServicebusTopicMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OutputServicebusTopic)(nil)).Elem()
}

func (i OutputServicebusTopicMap) ToOutputServicebusTopicMapOutput() OutputServicebusTopicMapOutput {
	return i.ToOutputServicebusTopicMapOutputWithContext(context.Background())
}

func (i OutputServicebusTopicMap) ToOutputServicebusTopicMapOutputWithContext(ctx context.Context) OutputServicebusTopicMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputServicebusTopicMapOutput)
}

type OutputServicebusTopicOutput struct{ *pulumi.OutputState }

func (OutputServicebusTopicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OutputServicebusTopic)(nil)).Elem()
}

func (o OutputServicebusTopicOutput) ToOutputServicebusTopicOutput() OutputServicebusTopicOutput {
	return o
}

func (o OutputServicebusTopicOutput) ToOutputServicebusTopicOutputWithContext(ctx context.Context) OutputServicebusTopicOutput {
	return o
}

// The authentication mode for the Stream Output. Possible values are `Msi` and `ConnectionString`. Defaults to `ConnectionString`.
func (o OutputServicebusTopicOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OutputServicebusTopic) pulumi.StringPtrOutput { return v.AuthenticationMode }).(pulumi.StringPtrOutput)
}

// The name of the Stream Output. Changing this forces a new resource to be created.
func (o OutputServicebusTopicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OutputServicebusTopic) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A list of property columns to add to the Service Bus Topic output.
func (o OutputServicebusTopicOutput) PropertyColumns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OutputServicebusTopic) pulumi.StringArrayOutput { return v.PropertyColumns }).(pulumi.StringArrayOutput)
}

// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
func (o OutputServicebusTopicOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *OutputServicebusTopic) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A `serialization` block as defined below.
func (o OutputServicebusTopicOutput) Serialization() OutputServicebusTopicSerializationOutput {
	return o.ApplyT(func(v *OutputServicebusTopic) OutputServicebusTopicSerializationOutput { return v.Serialization }).(OutputServicebusTopicSerializationOutput)
}

// The namespace that is associated with the desired Event Hub, Service Bus Topic, Service Bus Topic, etc.
func (o OutputServicebusTopicOutput) ServicebusNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v *OutputServicebusTopic) pulumi.StringOutput { return v.ServicebusNamespace }).(pulumi.StringOutput)
}

// The shared access policy key for the specified shared access policy. Required if `authenticationMode` is `ConnectionString`.
func (o OutputServicebusTopicOutput) SharedAccessPolicyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OutputServicebusTopic) pulumi.StringPtrOutput { return v.SharedAccessPolicyKey }).(pulumi.StringPtrOutput)
}

// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required if `authenticationMode` is `ConnectionString`.
func (o OutputServicebusTopicOutput) SharedAccessPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OutputServicebusTopic) pulumi.StringPtrOutput { return v.SharedAccessPolicyName }).(pulumi.StringPtrOutput)
}

// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
func (o OutputServicebusTopicOutput) StreamAnalyticsJobName() pulumi.StringOutput {
	return o.ApplyT(func(v *OutputServicebusTopic) pulumi.StringOutput { return v.StreamAnalyticsJobName }).(pulumi.StringOutput)
}

// A key-value pair of system property columns that will be attached to the outgoing messages for the Service Bus Topic Output.
//
// > **NOTE:** The acceptable keys are `ContentType`, `CorrelationId`, `Label`, `MessageId`, `PartitionKey`, `ReplyTo`, `ReplyToSessionId`, `ScheduledEnqueueTimeUtc`, `SessionId`, `TimeToLive` and `To`.
func (o OutputServicebusTopicOutput) SystemPropertyColumns() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OutputServicebusTopic) pulumi.StringMapOutput { return v.SystemPropertyColumns }).(pulumi.StringMapOutput)
}

// The name of the Service Bus Topic.
func (o OutputServicebusTopicOutput) TopicName() pulumi.StringOutput {
	return o.ApplyT(func(v *OutputServicebusTopic) pulumi.StringOutput { return v.TopicName }).(pulumi.StringOutput)
}

type OutputServicebusTopicArrayOutput struct{ *pulumi.OutputState }

func (OutputServicebusTopicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OutputServicebusTopic)(nil)).Elem()
}

func (o OutputServicebusTopicArrayOutput) ToOutputServicebusTopicArrayOutput() OutputServicebusTopicArrayOutput {
	return o
}

func (o OutputServicebusTopicArrayOutput) ToOutputServicebusTopicArrayOutputWithContext(ctx context.Context) OutputServicebusTopicArrayOutput {
	return o
}

func (o OutputServicebusTopicArrayOutput) Index(i pulumi.IntInput) OutputServicebusTopicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OutputServicebusTopic {
		return vs[0].([]*OutputServicebusTopic)[vs[1].(int)]
	}).(OutputServicebusTopicOutput)
}

type OutputServicebusTopicMapOutput struct{ *pulumi.OutputState }

func (OutputServicebusTopicMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OutputServicebusTopic)(nil)).Elem()
}

func (o OutputServicebusTopicMapOutput) ToOutputServicebusTopicMapOutput() OutputServicebusTopicMapOutput {
	return o
}

func (o OutputServicebusTopicMapOutput) ToOutputServicebusTopicMapOutputWithContext(ctx context.Context) OutputServicebusTopicMapOutput {
	return o
}

func (o OutputServicebusTopicMapOutput) MapIndex(k pulumi.StringInput) OutputServicebusTopicOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OutputServicebusTopic {
		return vs[0].(map[string]*OutputServicebusTopic)[vs[1].(string)]
	}).(OutputServicebusTopicOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OutputServicebusTopicInput)(nil)).Elem(), &OutputServicebusTopic{})
	pulumi.RegisterInputType(reflect.TypeOf((*OutputServicebusTopicArrayInput)(nil)).Elem(), OutputServicebusTopicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OutputServicebusTopicMapInput)(nil)).Elem(), OutputServicebusTopicMap{})
	pulumi.RegisterOutputType(OutputServicebusTopicOutput{})
	pulumi.RegisterOutputType(OutputServicebusTopicArrayOutput{})
	pulumi.RegisterOutputType(OutputServicebusTopicMapOutput{})
}
