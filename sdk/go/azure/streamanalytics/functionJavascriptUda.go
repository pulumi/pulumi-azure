// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package streamanalytics

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a JavaScript UDA Function within a Stream Analytics Streaming Job.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/streamanalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.LookupResourceGroup(ctx, &core.LookupResourceGroupArgs{
//				Name: "example-resources",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			exampleJob, err := streamanalytics.LookupJob(ctx, &streamanalytics.LookupJobArgs{
//				Name:              "example-job",
//				ResourceGroupName: exampleResourceGroup.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = streamanalytics.NewFunctionJavascriptUda(ctx, "exampleFunctionJavascriptUda", &streamanalytics.FunctionJavascriptUdaArgs{
//				StreamAnalyticsJobId: *pulumi.String(exampleJob.Id),
//				Script: pulumi.String(`function main() {
//	    this.init = function () {
//	        this.state = 0;
//	    }
//
//	    this.accumulate = function (value, timestamp) {
//	        this.state += value;
//	    }
//
//	    this.computeResult = function () {
//	        return this.state;
//	    }
//	}
//
// `),
//
//				Inputs: streamanalytics.FunctionJavascriptUdaInputTypeArray{
//					&streamanalytics.FunctionJavascriptUdaInputTypeArgs{
//						Type: pulumi.String("bigint"),
//					},
//				},
//				Output: &streamanalytics.FunctionJavascriptUdaOutputTypeArgs{
//					Type: pulumi.String("bigint"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Stream Analytics JavaScript UDA Functions can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:streamanalytics/functionJavascriptUda:FunctionJavascriptUda example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.StreamAnalytics/streamingJobs/job1/functions/func1
//
// ```
type FunctionJavascriptUda struct {
	pulumi.CustomResourceState

	// One or more `input` blocks as defined below.
	Inputs FunctionJavascriptUdaInputTypeArrayOutput `pulumi:"inputs"`
	// The name of the JavaScript UDA Function. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// An `output` block as defined below.
	Output FunctionJavascriptUdaOutputTypeOutput `pulumi:"output"`
	// The JavaScript of this UDA Function.
	Script pulumi.StringOutput `pulumi:"script"`
	// The resource ID of the Stream Analytics Job where this Function should be created. Changing this forces a new resource to be created.
	StreamAnalyticsJobId pulumi.StringOutput `pulumi:"streamAnalyticsJobId"`
}

// NewFunctionJavascriptUda registers a new resource with the given unique name, arguments, and options.
func NewFunctionJavascriptUda(ctx *pulumi.Context,
	name string, args *FunctionJavascriptUdaArgs, opts ...pulumi.ResourceOption) (*FunctionJavascriptUda, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Inputs == nil {
		return nil, errors.New("invalid value for required argument 'Inputs'")
	}
	if args.Output == nil {
		return nil, errors.New("invalid value for required argument 'Output'")
	}
	if args.Script == nil {
		return nil, errors.New("invalid value for required argument 'Script'")
	}
	if args.StreamAnalyticsJobId == nil {
		return nil, errors.New("invalid value for required argument 'StreamAnalyticsJobId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FunctionJavascriptUda
	err := ctx.RegisterResource("azure:streamanalytics/functionJavascriptUda:FunctionJavascriptUda", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFunctionJavascriptUda gets an existing FunctionJavascriptUda resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFunctionJavascriptUda(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FunctionJavascriptUdaState, opts ...pulumi.ResourceOption) (*FunctionJavascriptUda, error) {
	var resource FunctionJavascriptUda
	err := ctx.ReadResource("azure:streamanalytics/functionJavascriptUda:FunctionJavascriptUda", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FunctionJavascriptUda resources.
type functionJavascriptUdaState struct {
	// One or more `input` blocks as defined below.
	Inputs []FunctionJavascriptUdaInputType `pulumi:"inputs"`
	// The name of the JavaScript UDA Function. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// An `output` block as defined below.
	Output *FunctionJavascriptUdaOutputType `pulumi:"output"`
	// The JavaScript of this UDA Function.
	Script *string `pulumi:"script"`
	// The resource ID of the Stream Analytics Job where this Function should be created. Changing this forces a new resource to be created.
	StreamAnalyticsJobId *string `pulumi:"streamAnalyticsJobId"`
}

type FunctionJavascriptUdaState struct {
	// One or more `input` blocks as defined below.
	Inputs FunctionJavascriptUdaInputTypeArrayInput
	// The name of the JavaScript UDA Function. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// An `output` block as defined below.
	Output FunctionJavascriptUdaOutputTypePtrInput
	// The JavaScript of this UDA Function.
	Script pulumi.StringPtrInput
	// The resource ID of the Stream Analytics Job where this Function should be created. Changing this forces a new resource to be created.
	StreamAnalyticsJobId pulumi.StringPtrInput
}

func (FunctionJavascriptUdaState) ElementType() reflect.Type {
	return reflect.TypeOf((*functionJavascriptUdaState)(nil)).Elem()
}

type functionJavascriptUdaArgs struct {
	// One or more `input` blocks as defined below.
	Inputs []FunctionJavascriptUdaInputType `pulumi:"inputs"`
	// The name of the JavaScript UDA Function. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// An `output` block as defined below.
	Output FunctionJavascriptUdaOutputType `pulumi:"output"`
	// The JavaScript of this UDA Function.
	Script string `pulumi:"script"`
	// The resource ID of the Stream Analytics Job where this Function should be created. Changing this forces a new resource to be created.
	StreamAnalyticsJobId string `pulumi:"streamAnalyticsJobId"`
}

// The set of arguments for constructing a FunctionJavascriptUda resource.
type FunctionJavascriptUdaArgs struct {
	// One or more `input` blocks as defined below.
	Inputs FunctionJavascriptUdaInputTypeArrayInput
	// The name of the JavaScript UDA Function. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// An `output` block as defined below.
	Output FunctionJavascriptUdaOutputTypeInput
	// The JavaScript of this UDA Function.
	Script pulumi.StringInput
	// The resource ID of the Stream Analytics Job where this Function should be created. Changing this forces a new resource to be created.
	StreamAnalyticsJobId pulumi.StringInput
}

func (FunctionJavascriptUdaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*functionJavascriptUdaArgs)(nil)).Elem()
}

type FunctionJavascriptUdaInput interface {
	pulumi.Input

	ToFunctionJavascriptUdaOutput() FunctionJavascriptUdaOutput
	ToFunctionJavascriptUdaOutputWithContext(ctx context.Context) FunctionJavascriptUdaOutput
}

func (*FunctionJavascriptUda) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionJavascriptUda)(nil)).Elem()
}

func (i *FunctionJavascriptUda) ToFunctionJavascriptUdaOutput() FunctionJavascriptUdaOutput {
	return i.ToFunctionJavascriptUdaOutputWithContext(context.Background())
}

func (i *FunctionJavascriptUda) ToFunctionJavascriptUdaOutputWithContext(ctx context.Context) FunctionJavascriptUdaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionJavascriptUdaOutput)
}

// FunctionJavascriptUdaArrayInput is an input type that accepts FunctionJavascriptUdaArray and FunctionJavascriptUdaArrayOutput values.
// You can construct a concrete instance of `FunctionJavascriptUdaArrayInput` via:
//
//	FunctionJavascriptUdaArray{ FunctionJavascriptUdaArgs{...} }
type FunctionJavascriptUdaArrayInput interface {
	pulumi.Input

	ToFunctionJavascriptUdaArrayOutput() FunctionJavascriptUdaArrayOutput
	ToFunctionJavascriptUdaArrayOutputWithContext(context.Context) FunctionJavascriptUdaArrayOutput
}

type FunctionJavascriptUdaArray []FunctionJavascriptUdaInput

func (FunctionJavascriptUdaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FunctionJavascriptUda)(nil)).Elem()
}

func (i FunctionJavascriptUdaArray) ToFunctionJavascriptUdaArrayOutput() FunctionJavascriptUdaArrayOutput {
	return i.ToFunctionJavascriptUdaArrayOutputWithContext(context.Background())
}

func (i FunctionJavascriptUdaArray) ToFunctionJavascriptUdaArrayOutputWithContext(ctx context.Context) FunctionJavascriptUdaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionJavascriptUdaArrayOutput)
}

// FunctionJavascriptUdaMapInput is an input type that accepts FunctionJavascriptUdaMap and FunctionJavascriptUdaMapOutput values.
// You can construct a concrete instance of `FunctionJavascriptUdaMapInput` via:
//
//	FunctionJavascriptUdaMap{ "key": FunctionJavascriptUdaArgs{...} }
type FunctionJavascriptUdaMapInput interface {
	pulumi.Input

	ToFunctionJavascriptUdaMapOutput() FunctionJavascriptUdaMapOutput
	ToFunctionJavascriptUdaMapOutputWithContext(context.Context) FunctionJavascriptUdaMapOutput
}

type FunctionJavascriptUdaMap map[string]FunctionJavascriptUdaInput

func (FunctionJavascriptUdaMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FunctionJavascriptUda)(nil)).Elem()
}

func (i FunctionJavascriptUdaMap) ToFunctionJavascriptUdaMapOutput() FunctionJavascriptUdaMapOutput {
	return i.ToFunctionJavascriptUdaMapOutputWithContext(context.Background())
}

func (i FunctionJavascriptUdaMap) ToFunctionJavascriptUdaMapOutputWithContext(ctx context.Context) FunctionJavascriptUdaMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionJavascriptUdaMapOutput)
}

type FunctionJavascriptUdaOutput struct{ *pulumi.OutputState }

func (FunctionJavascriptUdaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionJavascriptUda)(nil)).Elem()
}

func (o FunctionJavascriptUdaOutput) ToFunctionJavascriptUdaOutput() FunctionJavascriptUdaOutput {
	return o
}

func (o FunctionJavascriptUdaOutput) ToFunctionJavascriptUdaOutputWithContext(ctx context.Context) FunctionJavascriptUdaOutput {
	return o
}

// One or more `input` blocks as defined below.
func (o FunctionJavascriptUdaOutput) Inputs() FunctionJavascriptUdaInputTypeArrayOutput {
	return o.ApplyT(func(v *FunctionJavascriptUda) FunctionJavascriptUdaInputTypeArrayOutput { return v.Inputs }).(FunctionJavascriptUdaInputTypeArrayOutput)
}

// The name of the JavaScript UDA Function. Changing this forces a new resource to be created.
func (o FunctionJavascriptUdaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FunctionJavascriptUda) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// An `output` block as defined below.
func (o FunctionJavascriptUdaOutput) Output() FunctionJavascriptUdaOutputTypeOutput {
	return o.ApplyT(func(v *FunctionJavascriptUda) FunctionJavascriptUdaOutputTypeOutput { return v.Output }).(FunctionJavascriptUdaOutputTypeOutput)
}

// The JavaScript of this UDA Function.
func (o FunctionJavascriptUdaOutput) Script() pulumi.StringOutput {
	return o.ApplyT(func(v *FunctionJavascriptUda) pulumi.StringOutput { return v.Script }).(pulumi.StringOutput)
}

// The resource ID of the Stream Analytics Job where this Function should be created. Changing this forces a new resource to be created.
func (o FunctionJavascriptUdaOutput) StreamAnalyticsJobId() pulumi.StringOutput {
	return o.ApplyT(func(v *FunctionJavascriptUda) pulumi.StringOutput { return v.StreamAnalyticsJobId }).(pulumi.StringOutput)
}

type FunctionJavascriptUdaArrayOutput struct{ *pulumi.OutputState }

func (FunctionJavascriptUdaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FunctionJavascriptUda)(nil)).Elem()
}

func (o FunctionJavascriptUdaArrayOutput) ToFunctionJavascriptUdaArrayOutput() FunctionJavascriptUdaArrayOutput {
	return o
}

func (o FunctionJavascriptUdaArrayOutput) ToFunctionJavascriptUdaArrayOutputWithContext(ctx context.Context) FunctionJavascriptUdaArrayOutput {
	return o
}

func (o FunctionJavascriptUdaArrayOutput) Index(i pulumi.IntInput) FunctionJavascriptUdaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FunctionJavascriptUda {
		return vs[0].([]*FunctionJavascriptUda)[vs[1].(int)]
	}).(FunctionJavascriptUdaOutput)
}

type FunctionJavascriptUdaMapOutput struct{ *pulumi.OutputState }

func (FunctionJavascriptUdaMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FunctionJavascriptUda)(nil)).Elem()
}

func (o FunctionJavascriptUdaMapOutput) ToFunctionJavascriptUdaMapOutput() FunctionJavascriptUdaMapOutput {
	return o
}

func (o FunctionJavascriptUdaMapOutput) ToFunctionJavascriptUdaMapOutputWithContext(ctx context.Context) FunctionJavascriptUdaMapOutput {
	return o
}

func (o FunctionJavascriptUdaMapOutput) MapIndex(k pulumi.StringInput) FunctionJavascriptUdaOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FunctionJavascriptUda {
		return vs[0].(map[string]*FunctionJavascriptUda)[vs[1].(string)]
	}).(FunctionJavascriptUdaOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionJavascriptUdaInput)(nil)).Elem(), &FunctionJavascriptUda{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionJavascriptUdaArrayInput)(nil)).Elem(), FunctionJavascriptUdaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionJavascriptUdaMapInput)(nil)).Elem(), FunctionJavascriptUdaMap{})
	pulumi.RegisterOutputType(FunctionJavascriptUdaOutput{})
	pulumi.RegisterOutputType(FunctionJavascriptUdaArrayOutput{})
	pulumi.RegisterOutputType(FunctionJavascriptUdaMapOutput{})
}
