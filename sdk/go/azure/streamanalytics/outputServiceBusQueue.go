// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package streamanalytics

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a Stream Analytics Output to a ServiceBus Queue.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/stream_analytics_output_servicebus_queue.html.markdown.
type OutputServiceBusQueue struct {
	s *pulumi.ResourceState
}

// NewOutputServiceBusQueue registers a new resource with the given unique name, arguments, and options.
func NewOutputServiceBusQueue(ctx *pulumi.Context,
	name string, args *OutputServiceBusQueueArgs, opts ...pulumi.ResourceOpt) (*OutputServiceBusQueue, error) {
	if args == nil || args.QueueName == nil {
		return nil, errors.New("missing required argument 'QueueName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.Serialization == nil {
		return nil, errors.New("missing required argument 'Serialization'")
	}
	if args == nil || args.ServicebusNamespace == nil {
		return nil, errors.New("missing required argument 'ServicebusNamespace'")
	}
	if args == nil || args.SharedAccessPolicyKey == nil {
		return nil, errors.New("missing required argument 'SharedAccessPolicyKey'")
	}
	if args == nil || args.SharedAccessPolicyName == nil {
		return nil, errors.New("missing required argument 'SharedAccessPolicyName'")
	}
	if args == nil || args.StreamAnalyticsJobName == nil {
		return nil, errors.New("missing required argument 'StreamAnalyticsJobName'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["name"] = nil
		inputs["queueName"] = nil
		inputs["resourceGroupName"] = nil
		inputs["serialization"] = nil
		inputs["servicebusNamespace"] = nil
		inputs["sharedAccessPolicyKey"] = nil
		inputs["sharedAccessPolicyName"] = nil
		inputs["streamAnalyticsJobName"] = nil
	} else {
		inputs["name"] = args.Name
		inputs["queueName"] = args.QueueName
		inputs["resourceGroupName"] = args.ResourceGroupName
		inputs["serialization"] = args.Serialization
		inputs["servicebusNamespace"] = args.ServicebusNamespace
		inputs["sharedAccessPolicyKey"] = args.SharedAccessPolicyKey
		inputs["sharedAccessPolicyName"] = args.SharedAccessPolicyName
		inputs["streamAnalyticsJobName"] = args.StreamAnalyticsJobName
	}
	s, err := ctx.RegisterResource("azure:streamanalytics/outputServiceBusQueue:OutputServiceBusQueue", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &OutputServiceBusQueue{s: s}, nil
}

// GetOutputServiceBusQueue gets an existing OutputServiceBusQueue resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOutputServiceBusQueue(ctx *pulumi.Context,
	name string, id pulumi.ID, state *OutputServiceBusQueueState, opts ...pulumi.ResourceOpt) (*OutputServiceBusQueue, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["name"] = state.Name
		inputs["queueName"] = state.QueueName
		inputs["resourceGroupName"] = state.ResourceGroupName
		inputs["serialization"] = state.Serialization
		inputs["servicebusNamespace"] = state.ServicebusNamespace
		inputs["sharedAccessPolicyKey"] = state.SharedAccessPolicyKey
		inputs["sharedAccessPolicyName"] = state.SharedAccessPolicyName
		inputs["streamAnalyticsJobName"] = state.StreamAnalyticsJobName
	}
	s, err := ctx.ReadResource("azure:streamanalytics/outputServiceBusQueue:OutputServiceBusQueue", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &OutputServiceBusQueue{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *OutputServiceBusQueue) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *OutputServiceBusQueue) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The name of the Stream Output. Changing this forces a new resource to be created.
func (r *OutputServiceBusQueue) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// The name of the Service Bus Queue.
func (r *OutputServiceBusQueue) QueueName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["queueName"])
}

// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
func (r *OutputServiceBusQueue) ResourceGroupName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["resourceGroupName"])
}

// A `serialization` block as defined below.
func (r *OutputServiceBusQueue) Serialization() *pulumi.Output {
	return r.s.State["serialization"]
}

// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc.
func (r *OutputServiceBusQueue) ServicebusNamespace() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["servicebusNamespace"])
}

// The shared access policy key for the specified shared access policy.
func (r *OutputServiceBusQueue) SharedAccessPolicyKey() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["sharedAccessPolicyKey"])
}

// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc.
func (r *OutputServiceBusQueue) SharedAccessPolicyName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["sharedAccessPolicyName"])
}

// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
func (r *OutputServiceBusQueue) StreamAnalyticsJobName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["streamAnalyticsJobName"])
}

// Input properties used for looking up and filtering OutputServiceBusQueue resources.
type OutputServiceBusQueueState struct {
	// The name of the Stream Output. Changing this forces a new resource to be created.
	Name interface{}
	// The name of the Service Bus Queue.
	QueueName interface{}
	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// A `serialization` block as defined below.
	Serialization interface{}
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc.
	ServicebusNamespace interface{}
	// The shared access policy key for the specified shared access policy.
	SharedAccessPolicyKey interface{}
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc.
	SharedAccessPolicyName interface{}
	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobName interface{}
}

// The set of arguments for constructing a OutputServiceBusQueue resource.
type OutputServiceBusQueueArgs struct {
	// The name of the Stream Output. Changing this forces a new resource to be created.
	Name interface{}
	// The name of the Service Bus Queue.
	QueueName interface{}
	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// A `serialization` block as defined below.
	Serialization interface{}
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc.
	ServicebusNamespace interface{}
	// The shared access policy key for the specified shared access policy.
	SharedAccessPolicyKey interface{}
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc.
	SharedAccessPolicyName interface{}
	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobName interface{}
}
