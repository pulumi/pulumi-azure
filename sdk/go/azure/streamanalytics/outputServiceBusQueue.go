// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package streamanalytics

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Stream Analytics Output to a ServiceBus Queue.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/servicebus"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/streamanalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleJob := streamanalytics.LookupJobOutput(ctx, streamanalytics.GetJobOutputArgs{
//				Name:              pulumi.String("example-job"),
//				ResourceGroupName: exampleResourceGroup.Name,
//			}, nil)
//			exampleNamespace, err := servicebus.NewNamespace(ctx, "exampleNamespace", &servicebus.NamespaceArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				Sku:               pulumi.String("Standard"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleQueue, err := servicebus.NewQueue(ctx, "exampleQueue", &servicebus.QueueArgs{
//				NamespaceId:        exampleNamespace.ID(),
//				EnablePartitioning: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = streamanalytics.NewOutputServiceBusQueue(ctx, "exampleOutputServiceBusQueue", &streamanalytics.OutputServiceBusQueueArgs{
//				StreamAnalyticsJobName: exampleJob.ApplyT(func(exampleJob streamanalytics.GetJobResult) (*string, error) {
//					return &exampleJob.Name, nil
//				}).(pulumi.StringPtrOutput),
//				ResourceGroupName: exampleJob.ApplyT(func(exampleJob streamanalytics.GetJobResult) (*string, error) {
//					return &exampleJob.ResourceGroupName, nil
//				}).(pulumi.StringPtrOutput),
//				QueueName:              exampleQueue.Name,
//				ServicebusNamespace:    exampleNamespace.Name,
//				SharedAccessPolicyKey:  exampleNamespace.DefaultPrimaryKey,
//				SharedAccessPolicyName: pulumi.String("RootManageSharedAccessKey"),
//				Serialization: &streamanalytics.OutputServiceBusQueueSerializationArgs{
//					Type:   pulumi.String("Csv"),
//					Format: pulumi.String("Array"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Stream Analytics Output ServiceBus Queue's can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:streamanalytics/outputServiceBusQueue:OutputServiceBusQueue example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.StreamAnalytics/streamingJobs/job1/outputs/output1
//
// ```
type OutputServiceBusQueue struct {
	pulumi.CustomResourceState

	// The authentication mode for the Stream Output. Possible values are `Msi` and `ConnectionString`. Defaults to `ConnectionString`.
	AuthenticationMode pulumi.StringPtrOutput `pulumi:"authenticationMode"`
	// The name of the Stream Output. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// A list of property columns to add to the Service Bus Queue output.
	PropertyColumns pulumi.StringArrayOutput `pulumi:"propertyColumns"`
	// The name of the Service Bus Queue.
	QueueName pulumi.StringOutput `pulumi:"queueName"`
	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A `serialization` block as defined below.
	Serialization OutputServiceBusQueueSerializationOutput `pulumi:"serialization"`
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc.
	ServicebusNamespace pulumi.StringOutput `pulumi:"servicebusNamespace"`
	// The shared access policy key for the specified shared access policy. Required if `authenticationMode` is `ConnectionString`.
	SharedAccessPolicyKey pulumi.StringPtrOutput `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required if `authenticationMode` is `ConnectionString`.
	SharedAccessPolicyName pulumi.StringPtrOutput `pulumi:"sharedAccessPolicyName"`
	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobName pulumi.StringOutput `pulumi:"streamAnalyticsJobName"`
	// A key-value pair of system property columns that will be attached to the outgoing messages for the Service Bus Queue Output.
	//
	// > **NOTE:** The acceptable keys are `ContentType`, `CorrelationId`, `Label`, `MessageId`, `PartitionKey`, `ReplyTo`, `ReplyToSessionId`, `ScheduledEnqueueTimeUtc`, `SessionId`, `TimeToLive` and `To`.
	SystemPropertyColumns pulumi.StringMapOutput `pulumi:"systemPropertyColumns"`
}

// NewOutputServiceBusQueue registers a new resource with the given unique name, arguments, and options.
func NewOutputServiceBusQueue(ctx *pulumi.Context,
	name string, args *OutputServiceBusQueueArgs, opts ...pulumi.ResourceOption) (*OutputServiceBusQueue, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.QueueName == nil {
		return nil, errors.New("invalid value for required argument 'QueueName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Serialization == nil {
		return nil, errors.New("invalid value for required argument 'Serialization'")
	}
	if args.ServicebusNamespace == nil {
		return nil, errors.New("invalid value for required argument 'ServicebusNamespace'")
	}
	if args.StreamAnalyticsJobName == nil {
		return nil, errors.New("invalid value for required argument 'StreamAnalyticsJobName'")
	}
	if args.SharedAccessPolicyKey != nil {
		args.SharedAccessPolicyKey = pulumi.ToSecret(args.SharedAccessPolicyKey).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"sharedAccessPolicyKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OutputServiceBusQueue
	err := ctx.RegisterResource("azure:streamanalytics/outputServiceBusQueue:OutputServiceBusQueue", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOutputServiceBusQueue gets an existing OutputServiceBusQueue resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOutputServiceBusQueue(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OutputServiceBusQueueState, opts ...pulumi.ResourceOption) (*OutputServiceBusQueue, error) {
	var resource OutputServiceBusQueue
	err := ctx.ReadResource("azure:streamanalytics/outputServiceBusQueue:OutputServiceBusQueue", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OutputServiceBusQueue resources.
type outputServiceBusQueueState struct {
	// The authentication mode for the Stream Output. Possible values are `Msi` and `ConnectionString`. Defaults to `ConnectionString`.
	AuthenticationMode *string `pulumi:"authenticationMode"`
	// The name of the Stream Output. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A list of property columns to add to the Service Bus Queue output.
	PropertyColumns []string `pulumi:"propertyColumns"`
	// The name of the Service Bus Queue.
	QueueName *string `pulumi:"queueName"`
	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A `serialization` block as defined below.
	Serialization *OutputServiceBusQueueSerialization `pulumi:"serialization"`
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc.
	ServicebusNamespace *string `pulumi:"servicebusNamespace"`
	// The shared access policy key for the specified shared access policy. Required if `authenticationMode` is `ConnectionString`.
	SharedAccessPolicyKey *string `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required if `authenticationMode` is `ConnectionString`.
	SharedAccessPolicyName *string `pulumi:"sharedAccessPolicyName"`
	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobName *string `pulumi:"streamAnalyticsJobName"`
	// A key-value pair of system property columns that will be attached to the outgoing messages for the Service Bus Queue Output.
	//
	// > **NOTE:** The acceptable keys are `ContentType`, `CorrelationId`, `Label`, `MessageId`, `PartitionKey`, `ReplyTo`, `ReplyToSessionId`, `ScheduledEnqueueTimeUtc`, `SessionId`, `TimeToLive` and `To`.
	SystemPropertyColumns map[string]string `pulumi:"systemPropertyColumns"`
}

type OutputServiceBusQueueState struct {
	// The authentication mode for the Stream Output. Possible values are `Msi` and `ConnectionString`. Defaults to `ConnectionString`.
	AuthenticationMode pulumi.StringPtrInput
	// The name of the Stream Output. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A list of property columns to add to the Service Bus Queue output.
	PropertyColumns pulumi.StringArrayInput
	// The name of the Service Bus Queue.
	QueueName pulumi.StringPtrInput
	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// A `serialization` block as defined below.
	Serialization OutputServiceBusQueueSerializationPtrInput
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc.
	ServicebusNamespace pulumi.StringPtrInput
	// The shared access policy key for the specified shared access policy. Required if `authenticationMode` is `ConnectionString`.
	SharedAccessPolicyKey pulumi.StringPtrInput
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required if `authenticationMode` is `ConnectionString`.
	SharedAccessPolicyName pulumi.StringPtrInput
	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobName pulumi.StringPtrInput
	// A key-value pair of system property columns that will be attached to the outgoing messages for the Service Bus Queue Output.
	//
	// > **NOTE:** The acceptable keys are `ContentType`, `CorrelationId`, `Label`, `MessageId`, `PartitionKey`, `ReplyTo`, `ReplyToSessionId`, `ScheduledEnqueueTimeUtc`, `SessionId`, `TimeToLive` and `To`.
	SystemPropertyColumns pulumi.StringMapInput
}

func (OutputServiceBusQueueState) ElementType() reflect.Type {
	return reflect.TypeOf((*outputServiceBusQueueState)(nil)).Elem()
}

type outputServiceBusQueueArgs struct {
	// The authentication mode for the Stream Output. Possible values are `Msi` and `ConnectionString`. Defaults to `ConnectionString`.
	AuthenticationMode *string `pulumi:"authenticationMode"`
	// The name of the Stream Output. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A list of property columns to add to the Service Bus Queue output.
	PropertyColumns []string `pulumi:"propertyColumns"`
	// The name of the Service Bus Queue.
	QueueName string `pulumi:"queueName"`
	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A `serialization` block as defined below.
	Serialization OutputServiceBusQueueSerialization `pulumi:"serialization"`
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc.
	ServicebusNamespace string `pulumi:"servicebusNamespace"`
	// The shared access policy key for the specified shared access policy. Required if `authenticationMode` is `ConnectionString`.
	SharedAccessPolicyKey *string `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required if `authenticationMode` is `ConnectionString`.
	SharedAccessPolicyName *string `pulumi:"sharedAccessPolicyName"`
	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobName string `pulumi:"streamAnalyticsJobName"`
	// A key-value pair of system property columns that will be attached to the outgoing messages for the Service Bus Queue Output.
	//
	// > **NOTE:** The acceptable keys are `ContentType`, `CorrelationId`, `Label`, `MessageId`, `PartitionKey`, `ReplyTo`, `ReplyToSessionId`, `ScheduledEnqueueTimeUtc`, `SessionId`, `TimeToLive` and `To`.
	SystemPropertyColumns map[string]string `pulumi:"systemPropertyColumns"`
}

// The set of arguments for constructing a OutputServiceBusQueue resource.
type OutputServiceBusQueueArgs struct {
	// The authentication mode for the Stream Output. Possible values are `Msi` and `ConnectionString`. Defaults to `ConnectionString`.
	AuthenticationMode pulumi.StringPtrInput
	// The name of the Stream Output. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A list of property columns to add to the Service Bus Queue output.
	PropertyColumns pulumi.StringArrayInput
	// The name of the Service Bus Queue.
	QueueName pulumi.StringInput
	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// A `serialization` block as defined below.
	Serialization OutputServiceBusQueueSerializationInput
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc.
	ServicebusNamespace pulumi.StringInput
	// The shared access policy key for the specified shared access policy. Required if `authenticationMode` is `ConnectionString`.
	SharedAccessPolicyKey pulumi.StringPtrInput
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required if `authenticationMode` is `ConnectionString`.
	SharedAccessPolicyName pulumi.StringPtrInput
	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobName pulumi.StringInput
	// A key-value pair of system property columns that will be attached to the outgoing messages for the Service Bus Queue Output.
	//
	// > **NOTE:** The acceptable keys are `ContentType`, `CorrelationId`, `Label`, `MessageId`, `PartitionKey`, `ReplyTo`, `ReplyToSessionId`, `ScheduledEnqueueTimeUtc`, `SessionId`, `TimeToLive` and `To`.
	SystemPropertyColumns pulumi.StringMapInput
}

func (OutputServiceBusQueueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*outputServiceBusQueueArgs)(nil)).Elem()
}

type OutputServiceBusQueueInput interface {
	pulumi.Input

	ToOutputServiceBusQueueOutput() OutputServiceBusQueueOutput
	ToOutputServiceBusQueueOutputWithContext(ctx context.Context) OutputServiceBusQueueOutput
}

func (*OutputServiceBusQueue) ElementType() reflect.Type {
	return reflect.TypeOf((**OutputServiceBusQueue)(nil)).Elem()
}

func (i *OutputServiceBusQueue) ToOutputServiceBusQueueOutput() OutputServiceBusQueueOutput {
	return i.ToOutputServiceBusQueueOutputWithContext(context.Background())
}

func (i *OutputServiceBusQueue) ToOutputServiceBusQueueOutputWithContext(ctx context.Context) OutputServiceBusQueueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputServiceBusQueueOutput)
}

// OutputServiceBusQueueArrayInput is an input type that accepts OutputServiceBusQueueArray and OutputServiceBusQueueArrayOutput values.
// You can construct a concrete instance of `OutputServiceBusQueueArrayInput` via:
//
//	OutputServiceBusQueueArray{ OutputServiceBusQueueArgs{...} }
type OutputServiceBusQueueArrayInput interface {
	pulumi.Input

	ToOutputServiceBusQueueArrayOutput() OutputServiceBusQueueArrayOutput
	ToOutputServiceBusQueueArrayOutputWithContext(context.Context) OutputServiceBusQueueArrayOutput
}

type OutputServiceBusQueueArray []OutputServiceBusQueueInput

func (OutputServiceBusQueueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OutputServiceBusQueue)(nil)).Elem()
}

func (i OutputServiceBusQueueArray) ToOutputServiceBusQueueArrayOutput() OutputServiceBusQueueArrayOutput {
	return i.ToOutputServiceBusQueueArrayOutputWithContext(context.Background())
}

func (i OutputServiceBusQueueArray) ToOutputServiceBusQueueArrayOutputWithContext(ctx context.Context) OutputServiceBusQueueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputServiceBusQueueArrayOutput)
}

// OutputServiceBusQueueMapInput is an input type that accepts OutputServiceBusQueueMap and OutputServiceBusQueueMapOutput values.
// You can construct a concrete instance of `OutputServiceBusQueueMapInput` via:
//
//	OutputServiceBusQueueMap{ "key": OutputServiceBusQueueArgs{...} }
type OutputServiceBusQueueMapInput interface {
	pulumi.Input

	ToOutputServiceBusQueueMapOutput() OutputServiceBusQueueMapOutput
	ToOutputServiceBusQueueMapOutputWithContext(context.Context) OutputServiceBusQueueMapOutput
}

type OutputServiceBusQueueMap map[string]OutputServiceBusQueueInput

func (OutputServiceBusQueueMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OutputServiceBusQueue)(nil)).Elem()
}

func (i OutputServiceBusQueueMap) ToOutputServiceBusQueueMapOutput() OutputServiceBusQueueMapOutput {
	return i.ToOutputServiceBusQueueMapOutputWithContext(context.Background())
}

func (i OutputServiceBusQueueMap) ToOutputServiceBusQueueMapOutputWithContext(ctx context.Context) OutputServiceBusQueueMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputServiceBusQueueMapOutput)
}

type OutputServiceBusQueueOutput struct{ *pulumi.OutputState }

func (OutputServiceBusQueueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OutputServiceBusQueue)(nil)).Elem()
}

func (o OutputServiceBusQueueOutput) ToOutputServiceBusQueueOutput() OutputServiceBusQueueOutput {
	return o
}

func (o OutputServiceBusQueueOutput) ToOutputServiceBusQueueOutputWithContext(ctx context.Context) OutputServiceBusQueueOutput {
	return o
}

// The authentication mode for the Stream Output. Possible values are `Msi` and `ConnectionString`. Defaults to `ConnectionString`.
func (o OutputServiceBusQueueOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OutputServiceBusQueue) pulumi.StringPtrOutput { return v.AuthenticationMode }).(pulumi.StringPtrOutput)
}

// The name of the Stream Output. Changing this forces a new resource to be created.
func (o OutputServiceBusQueueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OutputServiceBusQueue) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A list of property columns to add to the Service Bus Queue output.
func (o OutputServiceBusQueueOutput) PropertyColumns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OutputServiceBusQueue) pulumi.StringArrayOutput { return v.PropertyColumns }).(pulumi.StringArrayOutput)
}

// The name of the Service Bus Queue.
func (o OutputServiceBusQueueOutput) QueueName() pulumi.StringOutput {
	return o.ApplyT(func(v *OutputServiceBusQueue) pulumi.StringOutput { return v.QueueName }).(pulumi.StringOutput)
}

// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
func (o OutputServiceBusQueueOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *OutputServiceBusQueue) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A `serialization` block as defined below.
func (o OutputServiceBusQueueOutput) Serialization() OutputServiceBusQueueSerializationOutput {
	return o.ApplyT(func(v *OutputServiceBusQueue) OutputServiceBusQueueSerializationOutput { return v.Serialization }).(OutputServiceBusQueueSerializationOutput)
}

// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc.
func (o OutputServiceBusQueueOutput) ServicebusNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v *OutputServiceBusQueue) pulumi.StringOutput { return v.ServicebusNamespace }).(pulumi.StringOutput)
}

// The shared access policy key for the specified shared access policy. Required if `authenticationMode` is `ConnectionString`.
func (o OutputServiceBusQueueOutput) SharedAccessPolicyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OutputServiceBusQueue) pulumi.StringPtrOutput { return v.SharedAccessPolicyKey }).(pulumi.StringPtrOutput)
}

// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required if `authenticationMode` is `ConnectionString`.
func (o OutputServiceBusQueueOutput) SharedAccessPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OutputServiceBusQueue) pulumi.StringPtrOutput { return v.SharedAccessPolicyName }).(pulumi.StringPtrOutput)
}

// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
func (o OutputServiceBusQueueOutput) StreamAnalyticsJobName() pulumi.StringOutput {
	return o.ApplyT(func(v *OutputServiceBusQueue) pulumi.StringOutput { return v.StreamAnalyticsJobName }).(pulumi.StringOutput)
}

// A key-value pair of system property columns that will be attached to the outgoing messages for the Service Bus Queue Output.
//
// > **NOTE:** The acceptable keys are `ContentType`, `CorrelationId`, `Label`, `MessageId`, `PartitionKey`, `ReplyTo`, `ReplyToSessionId`, `ScheduledEnqueueTimeUtc`, `SessionId`, `TimeToLive` and `To`.
func (o OutputServiceBusQueueOutput) SystemPropertyColumns() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OutputServiceBusQueue) pulumi.StringMapOutput { return v.SystemPropertyColumns }).(pulumi.StringMapOutput)
}

type OutputServiceBusQueueArrayOutput struct{ *pulumi.OutputState }

func (OutputServiceBusQueueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OutputServiceBusQueue)(nil)).Elem()
}

func (o OutputServiceBusQueueArrayOutput) ToOutputServiceBusQueueArrayOutput() OutputServiceBusQueueArrayOutput {
	return o
}

func (o OutputServiceBusQueueArrayOutput) ToOutputServiceBusQueueArrayOutputWithContext(ctx context.Context) OutputServiceBusQueueArrayOutput {
	return o
}

func (o OutputServiceBusQueueArrayOutput) Index(i pulumi.IntInput) OutputServiceBusQueueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OutputServiceBusQueue {
		return vs[0].([]*OutputServiceBusQueue)[vs[1].(int)]
	}).(OutputServiceBusQueueOutput)
}

type OutputServiceBusQueueMapOutput struct{ *pulumi.OutputState }

func (OutputServiceBusQueueMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OutputServiceBusQueue)(nil)).Elem()
}

func (o OutputServiceBusQueueMapOutput) ToOutputServiceBusQueueMapOutput() OutputServiceBusQueueMapOutput {
	return o
}

func (o OutputServiceBusQueueMapOutput) ToOutputServiceBusQueueMapOutputWithContext(ctx context.Context) OutputServiceBusQueueMapOutput {
	return o
}

func (o OutputServiceBusQueueMapOutput) MapIndex(k pulumi.StringInput) OutputServiceBusQueueOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OutputServiceBusQueue {
		return vs[0].(map[string]*OutputServiceBusQueue)[vs[1].(string)]
	}).(OutputServiceBusQueueOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OutputServiceBusQueueInput)(nil)).Elem(), &OutputServiceBusQueue{})
	pulumi.RegisterInputType(reflect.TypeOf((*OutputServiceBusQueueArrayInput)(nil)).Elem(), OutputServiceBusQueueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OutputServiceBusQueueMapInput)(nil)).Elem(), OutputServiceBusQueueMap{})
	pulumi.RegisterOutputType(OutputServiceBusQueueOutput{})
	pulumi.RegisterOutputType(OutputServiceBusQueueArrayOutput{})
	pulumi.RegisterOutputType(OutputServiceBusQueueMapOutput{})
}
