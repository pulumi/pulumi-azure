// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package streamanalytics

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Stream Analytics Output Table.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/storage"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/streamanalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleJob := streamanalytics.LookupJobOutput(ctx, streamanalytics.GetJobOutputArgs{
//				Name:              pulumi.String("example-job"),
//				ResourceGroupName: exampleResourceGroup.Name,
//			}, nil)
//			exampleAccount, err := storage.NewAccount(ctx, "exampleAccount", &storage.AccountArgs{
//				ResourceGroupName:      exampleResourceGroup.Name,
//				Location:               exampleResourceGroup.Location,
//				AccountTier:            pulumi.String("Standard"),
//				AccountReplicationType: pulumi.String("LRS"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleTable, err := storage.NewTable(ctx, "exampleTable", &storage.TableArgs{
//				StorageAccountName: exampleAccount.Name,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = streamanalytics.NewOutputTable(ctx, "exampleOutputTable", &streamanalytics.OutputTableArgs{
//				StreamAnalyticsJobName: exampleJob.ApplyT(func(exampleJob streamanalytics.GetJobResult) (*string, error) {
//					return &exampleJob.Name, nil
//				}).(pulumi.StringPtrOutput),
//				ResourceGroupName: exampleJob.ApplyT(func(exampleJob streamanalytics.GetJobResult) (*string, error) {
//					return &exampleJob.ResourceGroupName, nil
//				}).(pulumi.StringPtrOutput),
//				StorageAccountName: exampleAccount.Name,
//				StorageAccountKey:  exampleAccount.PrimaryAccessKey,
//				Table:              exampleTable.Name,
//				PartitionKey:       pulumi.String("foo"),
//				RowKey:             pulumi.String("bar"),
//				BatchSize:          pulumi.Int(100),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Stream Analytics Output to Table can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:streamanalytics/outputTable:OutputTable example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.StreamAnalytics/streamingJobs/job1/outputs/output1
//
// ```
type OutputTable struct {
	pulumi.CustomResourceState

	// The number of records for a batch operation. Must be between `1` and `100`.
	BatchSize pulumi.IntOutput `pulumi:"batchSize"`
	// A list of the column names to be removed from output event entities.
	ColumnsToRemoves pulumi.StringArrayOutput `pulumi:"columnsToRemoves"`
	// The name of the Stream Output. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the output column that contains the partition key.
	PartitionKey pulumi.StringOutput `pulumi:"partitionKey"`
	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The name of the output column that contains the row key.
	RowKey pulumi.StringOutput `pulumi:"rowKey"`
	// The Access Key which should be used to connect to this Storage Account.
	StorageAccountKey pulumi.StringOutput `pulumi:"storageAccountKey"`
	// The name of the Storage Account.
	StorageAccountName pulumi.StringOutput `pulumi:"storageAccountName"`
	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobName pulumi.StringOutput `pulumi:"streamAnalyticsJobName"`
	// The name of the table where the stream should be output to.
	Table pulumi.StringOutput `pulumi:"table"`
}

// NewOutputTable registers a new resource with the given unique name, arguments, and options.
func NewOutputTable(ctx *pulumi.Context,
	name string, args *OutputTableArgs, opts ...pulumi.ResourceOption) (*OutputTable, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BatchSize == nil {
		return nil, errors.New("invalid value for required argument 'BatchSize'")
	}
	if args.PartitionKey == nil {
		return nil, errors.New("invalid value for required argument 'PartitionKey'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.RowKey == nil {
		return nil, errors.New("invalid value for required argument 'RowKey'")
	}
	if args.StorageAccountKey == nil {
		return nil, errors.New("invalid value for required argument 'StorageAccountKey'")
	}
	if args.StorageAccountName == nil {
		return nil, errors.New("invalid value for required argument 'StorageAccountName'")
	}
	if args.StreamAnalyticsJobName == nil {
		return nil, errors.New("invalid value for required argument 'StreamAnalyticsJobName'")
	}
	if args.Table == nil {
		return nil, errors.New("invalid value for required argument 'Table'")
	}
	if args.StorageAccountKey != nil {
		args.StorageAccountKey = pulumi.ToSecret(args.StorageAccountKey).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"storageAccountKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OutputTable
	err := ctx.RegisterResource("azure:streamanalytics/outputTable:OutputTable", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOutputTable gets an existing OutputTable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOutputTable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OutputTableState, opts ...pulumi.ResourceOption) (*OutputTable, error) {
	var resource OutputTable
	err := ctx.ReadResource("azure:streamanalytics/outputTable:OutputTable", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OutputTable resources.
type outputTableState struct {
	// The number of records for a batch operation. Must be between `1` and `100`.
	BatchSize *int `pulumi:"batchSize"`
	// A list of the column names to be removed from output event entities.
	ColumnsToRemoves []string `pulumi:"columnsToRemoves"`
	// The name of the Stream Output. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the output column that contains the partition key.
	PartitionKey *string `pulumi:"partitionKey"`
	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The name of the output column that contains the row key.
	RowKey *string `pulumi:"rowKey"`
	// The Access Key which should be used to connect to this Storage Account.
	StorageAccountKey *string `pulumi:"storageAccountKey"`
	// The name of the Storage Account.
	StorageAccountName *string `pulumi:"storageAccountName"`
	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobName *string `pulumi:"streamAnalyticsJobName"`
	// The name of the table where the stream should be output to.
	Table *string `pulumi:"table"`
}

type OutputTableState struct {
	// The number of records for a batch operation. Must be between `1` and `100`.
	BatchSize pulumi.IntPtrInput
	// A list of the column names to be removed from output event entities.
	ColumnsToRemoves pulumi.StringArrayInput
	// The name of the Stream Output. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the output column that contains the partition key.
	PartitionKey pulumi.StringPtrInput
	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The name of the output column that contains the row key.
	RowKey pulumi.StringPtrInput
	// The Access Key which should be used to connect to this Storage Account.
	StorageAccountKey pulumi.StringPtrInput
	// The name of the Storage Account.
	StorageAccountName pulumi.StringPtrInput
	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobName pulumi.StringPtrInput
	// The name of the table where the stream should be output to.
	Table pulumi.StringPtrInput
}

func (OutputTableState) ElementType() reflect.Type {
	return reflect.TypeOf((*outputTableState)(nil)).Elem()
}

type outputTableArgs struct {
	// The number of records for a batch operation. Must be between `1` and `100`.
	BatchSize int `pulumi:"batchSize"`
	// A list of the column names to be removed from output event entities.
	ColumnsToRemoves []string `pulumi:"columnsToRemoves"`
	// The name of the Stream Output. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the output column that contains the partition key.
	PartitionKey string `pulumi:"partitionKey"`
	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the output column that contains the row key.
	RowKey string `pulumi:"rowKey"`
	// The Access Key which should be used to connect to this Storage Account.
	StorageAccountKey string `pulumi:"storageAccountKey"`
	// The name of the Storage Account.
	StorageAccountName string `pulumi:"storageAccountName"`
	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobName string `pulumi:"streamAnalyticsJobName"`
	// The name of the table where the stream should be output to.
	Table string `pulumi:"table"`
}

// The set of arguments for constructing a OutputTable resource.
type OutputTableArgs struct {
	// The number of records for a batch operation. Must be between `1` and `100`.
	BatchSize pulumi.IntInput
	// A list of the column names to be removed from output event entities.
	ColumnsToRemoves pulumi.StringArrayInput
	// The name of the Stream Output. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the output column that contains the partition key.
	PartitionKey pulumi.StringInput
	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// The name of the output column that contains the row key.
	RowKey pulumi.StringInput
	// The Access Key which should be used to connect to this Storage Account.
	StorageAccountKey pulumi.StringInput
	// The name of the Storage Account.
	StorageAccountName pulumi.StringInput
	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobName pulumi.StringInput
	// The name of the table where the stream should be output to.
	Table pulumi.StringInput
}

func (OutputTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*outputTableArgs)(nil)).Elem()
}

type OutputTableInput interface {
	pulumi.Input

	ToOutputTableOutput() OutputTableOutput
	ToOutputTableOutputWithContext(ctx context.Context) OutputTableOutput
}

func (*OutputTable) ElementType() reflect.Type {
	return reflect.TypeOf((**OutputTable)(nil)).Elem()
}

func (i *OutputTable) ToOutputTableOutput() OutputTableOutput {
	return i.ToOutputTableOutputWithContext(context.Background())
}

func (i *OutputTable) ToOutputTableOutputWithContext(ctx context.Context) OutputTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputTableOutput)
}

// OutputTableArrayInput is an input type that accepts OutputTableArray and OutputTableArrayOutput values.
// You can construct a concrete instance of `OutputTableArrayInput` via:
//
//	OutputTableArray{ OutputTableArgs{...} }
type OutputTableArrayInput interface {
	pulumi.Input

	ToOutputTableArrayOutput() OutputTableArrayOutput
	ToOutputTableArrayOutputWithContext(context.Context) OutputTableArrayOutput
}

type OutputTableArray []OutputTableInput

func (OutputTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OutputTable)(nil)).Elem()
}

func (i OutputTableArray) ToOutputTableArrayOutput() OutputTableArrayOutput {
	return i.ToOutputTableArrayOutputWithContext(context.Background())
}

func (i OutputTableArray) ToOutputTableArrayOutputWithContext(ctx context.Context) OutputTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputTableArrayOutput)
}

// OutputTableMapInput is an input type that accepts OutputTableMap and OutputTableMapOutput values.
// You can construct a concrete instance of `OutputTableMapInput` via:
//
//	OutputTableMap{ "key": OutputTableArgs{...} }
type OutputTableMapInput interface {
	pulumi.Input

	ToOutputTableMapOutput() OutputTableMapOutput
	ToOutputTableMapOutputWithContext(context.Context) OutputTableMapOutput
}

type OutputTableMap map[string]OutputTableInput

func (OutputTableMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OutputTable)(nil)).Elem()
}

func (i OutputTableMap) ToOutputTableMapOutput() OutputTableMapOutput {
	return i.ToOutputTableMapOutputWithContext(context.Background())
}

func (i OutputTableMap) ToOutputTableMapOutputWithContext(ctx context.Context) OutputTableMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputTableMapOutput)
}

type OutputTableOutput struct{ *pulumi.OutputState }

func (OutputTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OutputTable)(nil)).Elem()
}

func (o OutputTableOutput) ToOutputTableOutput() OutputTableOutput {
	return o
}

func (o OutputTableOutput) ToOutputTableOutputWithContext(ctx context.Context) OutputTableOutput {
	return o
}

// The number of records for a batch operation. Must be between `1` and `100`.
func (o OutputTableOutput) BatchSize() pulumi.IntOutput {
	return o.ApplyT(func(v *OutputTable) pulumi.IntOutput { return v.BatchSize }).(pulumi.IntOutput)
}

// A list of the column names to be removed from output event entities.
func (o OutputTableOutput) ColumnsToRemoves() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OutputTable) pulumi.StringArrayOutput { return v.ColumnsToRemoves }).(pulumi.StringArrayOutput)
}

// The name of the Stream Output. Changing this forces a new resource to be created.
func (o OutputTableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OutputTable) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the output column that contains the partition key.
func (o OutputTableOutput) PartitionKey() pulumi.StringOutput {
	return o.ApplyT(func(v *OutputTable) pulumi.StringOutput { return v.PartitionKey }).(pulumi.StringOutput)
}

// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
func (o OutputTableOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *OutputTable) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The name of the output column that contains the row key.
func (o OutputTableOutput) RowKey() pulumi.StringOutput {
	return o.ApplyT(func(v *OutputTable) pulumi.StringOutput { return v.RowKey }).(pulumi.StringOutput)
}

// The Access Key which should be used to connect to this Storage Account.
func (o OutputTableOutput) StorageAccountKey() pulumi.StringOutput {
	return o.ApplyT(func(v *OutputTable) pulumi.StringOutput { return v.StorageAccountKey }).(pulumi.StringOutput)
}

// The name of the Storage Account.
func (o OutputTableOutput) StorageAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v *OutputTable) pulumi.StringOutput { return v.StorageAccountName }).(pulumi.StringOutput)
}

// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
func (o OutputTableOutput) StreamAnalyticsJobName() pulumi.StringOutput {
	return o.ApplyT(func(v *OutputTable) pulumi.StringOutput { return v.StreamAnalyticsJobName }).(pulumi.StringOutput)
}

// The name of the table where the stream should be output to.
func (o OutputTableOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v *OutputTable) pulumi.StringOutput { return v.Table }).(pulumi.StringOutput)
}

type OutputTableArrayOutput struct{ *pulumi.OutputState }

func (OutputTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OutputTable)(nil)).Elem()
}

func (o OutputTableArrayOutput) ToOutputTableArrayOutput() OutputTableArrayOutput {
	return o
}

func (o OutputTableArrayOutput) ToOutputTableArrayOutputWithContext(ctx context.Context) OutputTableArrayOutput {
	return o
}

func (o OutputTableArrayOutput) Index(i pulumi.IntInput) OutputTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OutputTable {
		return vs[0].([]*OutputTable)[vs[1].(int)]
	}).(OutputTableOutput)
}

type OutputTableMapOutput struct{ *pulumi.OutputState }

func (OutputTableMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OutputTable)(nil)).Elem()
}

func (o OutputTableMapOutput) ToOutputTableMapOutput() OutputTableMapOutput {
	return o
}

func (o OutputTableMapOutput) ToOutputTableMapOutputWithContext(ctx context.Context) OutputTableMapOutput {
	return o
}

func (o OutputTableMapOutput) MapIndex(k pulumi.StringInput) OutputTableOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OutputTable {
		return vs[0].(map[string]*OutputTable)[vs[1].(string)]
	}).(OutputTableOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OutputTableInput)(nil)).Elem(), &OutputTable{})
	pulumi.RegisterInputType(reflect.TypeOf((*OutputTableArrayInput)(nil)).Elem(), OutputTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OutputTableMapInput)(nil)).Elem(), OutputTableMap{})
	pulumi.RegisterOutputType(OutputTableOutput{})
	pulumi.RegisterOutputType(OutputTableArrayOutput{})
	pulumi.RegisterOutputType(OutputTableMapOutput{})
}
