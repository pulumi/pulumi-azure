// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package streamanalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Stream Analytics Job.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/streamanalytics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := streamanalytics.LookupJob(ctx, &streamanalytics.LookupJobArgs{
//				Name:              "example-job",
//				ResourceGroupName: "example-resources",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("jobId", example.JobId)
//			return nil
//		})
//	}
//
// ```
func LookupJob(ctx *pulumi.Context, args *LookupJobArgs, opts ...pulumi.InvokeOption) (*LookupJobResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupJobResult
	err := ctx.Invoke("azure:streamanalytics/getJob:getJob", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getJob.
type LookupJobArgs struct {
	// Specifies the name of the Stream Analytics Job.
	Name string `pulumi:"name"`
	// Specifies the name of the resource group the Stream Analytics Job is located in.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getJob.
type LookupJobResult struct {
	// The compatibility level for this job.
	CompatibilityLevel string `pulumi:"compatibilityLevel"`
	// The Data Locale of the Job.
	DataLocale string `pulumi:"dataLocale"`
	// The maximum tolerable delay in seconds where events arriving late could be included.
	EventsLateArrivalMaxDelayInSeconds int `pulumi:"eventsLateArrivalMaxDelayInSeconds"`
	// The maximum tolerable delay in seconds where out-of-order events can be adjusted to be back in order.
	EventsOutOfOrderMaxDelayInSeconds int `pulumi:"eventsOutOfOrderMaxDelayInSeconds"`
	// The policy which should be applied to events which arrive out of order in the input event stream.
	EventsOutOfOrderPolicy string `pulumi:"eventsOutOfOrderPolicy"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// An `identity` block as defined below.
	Identities []GetJobIdentity `pulumi:"identities"`
	// The Job ID assigned by the Stream Analytics Job.
	JobId string `pulumi:"jobId"`
	// The time at which the Stream Analytics job last produced an output.
	LastOutputTime string `pulumi:"lastOutputTime"`
	// The Azure location where the Stream Analytics Job exists.
	Location string `pulumi:"location"`
	Name     string `pulumi:"name"`
	// The policy which should be applied to events which arrive at the output and cannot be written to the external storage due to being malformed (such as missing column values, column values of wrong type or size).
	OutputErrorPolicy string `pulumi:"outputErrorPolicy"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The starting mode set for this Stream Analytics Job.
	StartMode string `pulumi:"startMode"`
	// The time at which this Stream Analytics Job was scheduled to start.
	StartTime string `pulumi:"startTime"`
	// The number of streaming units that this Stream Analytics Job uses.
	StreamingUnits int `pulumi:"streamingUnits"`
	// The query that will be run in this Stream Analytics Job, [written in Stream Analytics Query Language (SAQL)](https://msdn.microsoft.com/library/azure/dn834998).
	TransformationQuery string `pulumi:"transformationQuery"`
}

func LookupJobOutput(ctx *pulumi.Context, args LookupJobOutputArgs, opts ...pulumi.InvokeOption) LookupJobResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupJobResult, error) {
			args := v.(LookupJobArgs)
			r, err := LookupJob(ctx, &args, opts...)
			var s LookupJobResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupJobResultOutput)
}

// A collection of arguments for invoking getJob.
type LookupJobOutputArgs struct {
	// Specifies the name of the Stream Analytics Job.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the name of the resource group the Stream Analytics Job is located in.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupJobOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupJobArgs)(nil)).Elem()
}

// A collection of values returned by getJob.
type LookupJobResultOutput struct{ *pulumi.OutputState }

func (LookupJobResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupJobResult)(nil)).Elem()
}

func (o LookupJobResultOutput) ToLookupJobResultOutput() LookupJobResultOutput {
	return o
}

func (o LookupJobResultOutput) ToLookupJobResultOutputWithContext(ctx context.Context) LookupJobResultOutput {
	return o
}

// The compatibility level for this job.
func (o LookupJobResultOutput) CompatibilityLevel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobResult) string { return v.CompatibilityLevel }).(pulumi.StringOutput)
}

// The Data Locale of the Job.
func (o LookupJobResultOutput) DataLocale() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobResult) string { return v.DataLocale }).(pulumi.StringOutput)
}

// The maximum tolerable delay in seconds where events arriving late could be included.
func (o LookupJobResultOutput) EventsLateArrivalMaxDelayInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v LookupJobResult) int { return v.EventsLateArrivalMaxDelayInSeconds }).(pulumi.IntOutput)
}

// The maximum tolerable delay in seconds where out-of-order events can be adjusted to be back in order.
func (o LookupJobResultOutput) EventsOutOfOrderMaxDelayInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v LookupJobResult) int { return v.EventsOutOfOrderMaxDelayInSeconds }).(pulumi.IntOutput)
}

// The policy which should be applied to events which arrive out of order in the input event stream.
func (o LookupJobResultOutput) EventsOutOfOrderPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobResult) string { return v.EventsOutOfOrderPolicy }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupJobResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobResult) string { return v.Id }).(pulumi.StringOutput)
}

// An `identity` block as defined below.
func (o LookupJobResultOutput) Identities() GetJobIdentityArrayOutput {
	return o.ApplyT(func(v LookupJobResult) []GetJobIdentity { return v.Identities }).(GetJobIdentityArrayOutput)
}

// The Job ID assigned by the Stream Analytics Job.
func (o LookupJobResultOutput) JobId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobResult) string { return v.JobId }).(pulumi.StringOutput)
}

// The time at which the Stream Analytics job last produced an output.
func (o LookupJobResultOutput) LastOutputTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobResult) string { return v.LastOutputTime }).(pulumi.StringOutput)
}

// The Azure location where the Stream Analytics Job exists.
func (o LookupJobResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupJobResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobResult) string { return v.Name }).(pulumi.StringOutput)
}

// The policy which should be applied to events which arrive at the output and cannot be written to the external storage due to being malformed (such as missing column values, column values of wrong type or size).
func (o LookupJobResultOutput) OutputErrorPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobResult) string { return v.OutputErrorPolicy }).(pulumi.StringOutput)
}

func (o LookupJobResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The starting mode set for this Stream Analytics Job.
func (o LookupJobResultOutput) StartMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobResult) string { return v.StartMode }).(pulumi.StringOutput)
}

// The time at which this Stream Analytics Job was scheduled to start.
func (o LookupJobResultOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobResult) string { return v.StartTime }).(pulumi.StringOutput)
}

// The number of streaming units that this Stream Analytics Job uses.
func (o LookupJobResultOutput) StreamingUnits() pulumi.IntOutput {
	return o.ApplyT(func(v LookupJobResult) int { return v.StreamingUnits }).(pulumi.IntOutput)
}

// The query that will be run in this Stream Analytics Job, [written in Stream Analytics Query Language (SAQL)](https://msdn.microsoft.com/library/azure/dn834998).
func (o LookupJobResultOutput) TransformationQuery() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobResult) string { return v.TransformationQuery }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupJobResultOutput{})
}
