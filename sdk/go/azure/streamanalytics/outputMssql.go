// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package streamanalytics

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages a Stream Analytics Output to Microsoft SQL Server Database.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v3/go/azure/core"
// 	"github.com/pulumi/pulumi-azure/sdk/v3/go/azure/sql"
// 	"github.com/pulumi/pulumi-azure/sdk/v3/go/azure/streamanalytics"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := core.LookupResourceGroup(ctx, &core.LookupResourceGroupArgs{
// 			Name: "example-resources",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = streamanalytics.LookupJob(ctx, &streamanalytics.LookupJobArgs{
// 			Name:              "example-job",
// 			ResourceGroupName: azurerm_resource_group.Example.Name,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		exampleSqlServer, err := sql.NewSqlServer(ctx, "exampleSqlServer", &sql.SqlServerArgs{
// 			ResourceGroupName:          pulumi.Any(azurerm_resource_group.Example.Name),
// 			Location:                   pulumi.Any(azurerm_resource_group.Example.Location),
// 			Version:                    pulumi.String("12.0"),
// 			AdministratorLogin:         pulumi.String("dbadmin"),
// 			AdministratorLoginPassword: pulumi.String("example-password"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleDatabase, err := sql.NewDatabase(ctx, "exampleDatabase", &sql.DatabaseArgs{
// 			ResourceGroupName:             pulumi.Any(azurerm_resource_group.Example.Name),
// 			Location:                      pulumi.Any(azurerm_resource_group.Example.Location),
// 			ServerName:                    exampleSqlServer.Name,
// 			RequestedServiceObjectiveName: pulumi.String("S0"),
// 			Collation:                     pulumi.String("SQL_LATIN1_GENERAL_CP1_CI_AS"),
// 			MaxSizeBytes:                  pulumi.String("268435456000"),
// 			CreateMode:                    pulumi.String("Default"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = streamanalytics.NewOutputMssql(ctx, "exampleOutputMssql", &streamanalytics.OutputMssqlArgs{
// 			StreamAnalyticsJobName: pulumi.Any(azurerm_stream_analytics_job.Example.Name),
// 			ResourceGroupName:      pulumi.Any(azurerm_stream_analytics_job.Example.Resource_group_name),
// 			Server:                 exampleSqlServer.FullyQualifiedDomainName,
// 			User:                   exampleSqlServer.AdministratorLogin,
// 			Password:               exampleSqlServer.AdministratorLoginPassword,
// 			Database:               exampleDatabase.Name,
// 			Table:                  pulumi.String("ExampleTable"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Stream Analytics Outputs to Microsoft SQL Server Database can be imported using the `resource id`, e.g.
//
// ```sh
//  $ pulumi import azure:streamanalytics/outputMssql:OutputMssql example /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/group1/providers/Microsoft.StreamAnalytics/streamingjobs/job1/outputs/output1
// ```
type OutputMssql struct {
	pulumi.CustomResourceState

	Database pulumi.StringOutput `pulumi:"database"`
	// The name of the Stream Output. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Password used together with username, to login to the Microsoft SQL Server. Changing this forces a new resource to be created.
	Password pulumi.StringOutput `pulumi:"password"`
	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The SQL server url. Changing this forces a new resource to be created.
	Server pulumi.StringOutput `pulumi:"server"`
	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobName pulumi.StringOutput `pulumi:"streamAnalyticsJobName"`
	// Table in the database that the output points to. Changing this forces a new resource to be created.
	Table pulumi.StringOutput `pulumi:"table"`
	// Username used to login to the Microsoft SQL Server. Changing this forces a new resource to be created.
	User pulumi.StringOutput `pulumi:"user"`
}

// NewOutputMssql registers a new resource with the given unique name, arguments, and options.
func NewOutputMssql(ctx *pulumi.Context,
	name string, args *OutputMssqlArgs, opts ...pulumi.ResourceOption) (*OutputMssql, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Database == nil {
		return nil, errors.New("invalid value for required argument 'Database'")
	}
	if args.Password == nil {
		return nil, errors.New("invalid value for required argument 'Password'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Server == nil {
		return nil, errors.New("invalid value for required argument 'Server'")
	}
	if args.StreamAnalyticsJobName == nil {
		return nil, errors.New("invalid value for required argument 'StreamAnalyticsJobName'")
	}
	if args.Table == nil {
		return nil, errors.New("invalid value for required argument 'Table'")
	}
	if args.User == nil {
		return nil, errors.New("invalid value for required argument 'User'")
	}
	var resource OutputMssql
	err := ctx.RegisterResource("azure:streamanalytics/outputMssql:OutputMssql", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOutputMssql gets an existing OutputMssql resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOutputMssql(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OutputMssqlState, opts ...pulumi.ResourceOption) (*OutputMssql, error) {
	var resource OutputMssql
	err := ctx.ReadResource("azure:streamanalytics/outputMssql:OutputMssql", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OutputMssql resources.
type outputMssqlState struct {
	Database *string `pulumi:"database"`
	// The name of the Stream Output. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Password used together with username, to login to the Microsoft SQL Server. Changing this forces a new resource to be created.
	Password *string `pulumi:"password"`
	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The SQL server url. Changing this forces a new resource to be created.
	Server *string `pulumi:"server"`
	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobName *string `pulumi:"streamAnalyticsJobName"`
	// Table in the database that the output points to. Changing this forces a new resource to be created.
	Table *string `pulumi:"table"`
	// Username used to login to the Microsoft SQL Server. Changing this forces a new resource to be created.
	User *string `pulumi:"user"`
}

type OutputMssqlState struct {
	Database pulumi.StringPtrInput
	// The name of the Stream Output. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Password used together with username, to login to the Microsoft SQL Server. Changing this forces a new resource to be created.
	Password pulumi.StringPtrInput
	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The SQL server url. Changing this forces a new resource to be created.
	Server pulumi.StringPtrInput
	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobName pulumi.StringPtrInput
	// Table in the database that the output points to. Changing this forces a new resource to be created.
	Table pulumi.StringPtrInput
	// Username used to login to the Microsoft SQL Server. Changing this forces a new resource to be created.
	User pulumi.StringPtrInput
}

func (OutputMssqlState) ElementType() reflect.Type {
	return reflect.TypeOf((*outputMssqlState)(nil)).Elem()
}

type outputMssqlArgs struct {
	Database string `pulumi:"database"`
	// The name of the Stream Output. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Password used together with username, to login to the Microsoft SQL Server. Changing this forces a new resource to be created.
	Password string `pulumi:"password"`
	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The SQL server url. Changing this forces a new resource to be created.
	Server string `pulumi:"server"`
	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobName string `pulumi:"streamAnalyticsJobName"`
	// Table in the database that the output points to. Changing this forces a new resource to be created.
	Table string `pulumi:"table"`
	// Username used to login to the Microsoft SQL Server. Changing this forces a new resource to be created.
	User string `pulumi:"user"`
}

// The set of arguments for constructing a OutputMssql resource.
type OutputMssqlArgs struct {
	Database pulumi.StringInput
	// The name of the Stream Output. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Password used together with username, to login to the Microsoft SQL Server. Changing this forces a new resource to be created.
	Password pulumi.StringInput
	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// The SQL server url. Changing this forces a new resource to be created.
	Server pulumi.StringInput
	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobName pulumi.StringInput
	// Table in the database that the output points to. Changing this forces a new resource to be created.
	Table pulumi.StringInput
	// Username used to login to the Microsoft SQL Server. Changing this forces a new resource to be created.
	User pulumi.StringInput
}

func (OutputMssqlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*outputMssqlArgs)(nil)).Elem()
}

type OutputMssqlInput interface {
	pulumi.Input

	ToOutputMssqlOutput() OutputMssqlOutput
	ToOutputMssqlOutputWithContext(ctx context.Context) OutputMssqlOutput
}

func (OutputMssql) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputMssql)(nil)).Elem()
}

func (i OutputMssql) ToOutputMssqlOutput() OutputMssqlOutput {
	return i.ToOutputMssqlOutputWithContext(context.Background())
}

func (i OutputMssql) ToOutputMssqlOutputWithContext(ctx context.Context) OutputMssqlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputMssqlOutput)
}

type OutputMssqlOutput struct {
	*pulumi.OutputState
}

func (OutputMssqlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputMssqlOutput)(nil)).Elem()
}

func (o OutputMssqlOutput) ToOutputMssqlOutput() OutputMssqlOutput {
	return o
}

func (o OutputMssqlOutput) ToOutputMssqlOutputWithContext(ctx context.Context) OutputMssqlOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(OutputMssqlOutput{})
}
