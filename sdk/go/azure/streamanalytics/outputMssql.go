// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package streamanalytics

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a Stream Analytics Output to Microsoft SQL Server Database.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/stream_analytics_output_mssql.html.markdown.
type OutputMssql struct {
	s *pulumi.ResourceState
}

// NewOutputMssql registers a new resource with the given unique name, arguments, and options.
func NewOutputMssql(ctx *pulumi.Context,
	name string, args *OutputMssqlArgs, opts ...pulumi.ResourceOpt) (*OutputMssql, error) {
	if args == nil || args.Database == nil {
		return nil, errors.New("missing required argument 'Database'")
	}
	if args == nil || args.Password == nil {
		return nil, errors.New("missing required argument 'Password'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.Server == nil {
		return nil, errors.New("missing required argument 'Server'")
	}
	if args == nil || args.StreamAnalyticsJobName == nil {
		return nil, errors.New("missing required argument 'StreamAnalyticsJobName'")
	}
	if args == nil || args.Table == nil {
		return nil, errors.New("missing required argument 'Table'")
	}
	if args == nil || args.User == nil {
		return nil, errors.New("missing required argument 'User'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["database"] = nil
		inputs["name"] = nil
		inputs["password"] = nil
		inputs["resourceGroupName"] = nil
		inputs["server"] = nil
		inputs["streamAnalyticsJobName"] = nil
		inputs["table"] = nil
		inputs["user"] = nil
	} else {
		inputs["database"] = args.Database
		inputs["name"] = args.Name
		inputs["password"] = args.Password
		inputs["resourceGroupName"] = args.ResourceGroupName
		inputs["server"] = args.Server
		inputs["streamAnalyticsJobName"] = args.StreamAnalyticsJobName
		inputs["table"] = args.Table
		inputs["user"] = args.User
	}
	s, err := ctx.RegisterResource("azure:streamanalytics/outputMssql:OutputMssql", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &OutputMssql{s: s}, nil
}

// GetOutputMssql gets an existing OutputMssql resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOutputMssql(ctx *pulumi.Context,
	name string, id pulumi.ID, state *OutputMssqlState, opts ...pulumi.ResourceOpt) (*OutputMssql, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["database"] = state.Database
		inputs["name"] = state.Name
		inputs["password"] = state.Password
		inputs["resourceGroupName"] = state.ResourceGroupName
		inputs["server"] = state.Server
		inputs["streamAnalyticsJobName"] = state.StreamAnalyticsJobName
		inputs["table"] = state.Table
		inputs["user"] = state.User
	}
	s, err := ctx.ReadResource("azure:streamanalytics/outputMssql:OutputMssql", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &OutputMssql{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *OutputMssql) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *OutputMssql) ID() *pulumi.IDOutput {
	return r.s.ID()
}

func (r *OutputMssql) Database() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["database"])
}

// The name of the Stream Output. Changing this forces a new resource to be created.
func (r *OutputMssql) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// Password used together with username, to login to the Microsoft SQL Server. Changing this forces a new resource to be created.
func (r *OutputMssql) Password() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["password"])
}

// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
func (r *OutputMssql) ResourceGroupName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["resourceGroupName"])
}

// The SQL server url. Changing this forces a new resource to be created.
func (r *OutputMssql) Server() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["server"])
}

// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
func (r *OutputMssql) StreamAnalyticsJobName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["streamAnalyticsJobName"])
}

// Table in the database that the output points to. Changing this forces a new resource to be created.
func (r *OutputMssql) Table() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["table"])
}

// Username used to login to the Microsoft SQL Server. Changing this forces a new resource to be created.
func (r *OutputMssql) User() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["user"])
}

// Input properties used for looking up and filtering OutputMssql resources.
type OutputMssqlState struct {
	Database interface{}
	// The name of the Stream Output. Changing this forces a new resource to be created.
	Name interface{}
	// Password used together with username, to login to the Microsoft SQL Server. Changing this forces a new resource to be created.
	Password interface{}
	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// The SQL server url. Changing this forces a new resource to be created.
	Server interface{}
	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobName interface{}
	// Table in the database that the output points to. Changing this forces a new resource to be created.
	Table interface{}
	// Username used to login to the Microsoft SQL Server. Changing this forces a new resource to be created.
	User interface{}
}

// The set of arguments for constructing a OutputMssql resource.
type OutputMssqlArgs struct {
	Database interface{}
	// The name of the Stream Output. Changing this forces a new resource to be created.
	Name interface{}
	// Password used together with username, to login to the Microsoft SQL Server. Changing this forces a new resource to be created.
	Password interface{}
	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// The SQL server url. Changing this forces a new resource to be created.
	Server interface{}
	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobName interface{}
	// Table in the database that the output points to. Changing this forces a new resource to be created.
	Table interface{}
	// Username used to login to the Microsoft SQL Server. Changing this forces a new resource to be created.
	User interface{}
}
