// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devcenter

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Dev Center Network Connection.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/devcenter"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resources"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "example", &network.VirtualNetworkArgs{
//				Name: pulumi.String("example-vnet"),
//				AddressSpaces: pulumi.StringArray{
//					pulumi.String("10.0.0.0/16"),
//				},
//				Location:          example.Location,
//				ResourceGroupName: example.Name,
//			})
//			if err != nil {
//				return err
//			}
//			exampleSubnet, err := network.NewSubnet(ctx, "example", &network.SubnetArgs{
//				Name:               pulumi.String("internal"),
//				ResourceGroupName:  example.Name,
//				VirtualNetworkName: exampleVirtualNetwork.Name,
//				AddressPrefixes: pulumi.StringArray{
//					pulumi.String("10.0.2.0/24"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = devcenter.NewNetworkConnection(ctx, "example", &devcenter.NetworkConnectionArgs{
//				Name:              pulumi.String("example-dcnc"),
//				ResourceGroupName: example.Name,
//				Location:          example.Location,
//				DomainJoinType:    pulumi.String("AzureADJoin"),
//				SubnetId:          exampleSubnet.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// An existing Dev Center Network Connection can be imported into Terraform using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:devcenter/networkConnection:NetworkConnection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DevCenter/networkConnections/networkConnection1
// ```
type NetworkConnection struct {
	pulumi.CustomResourceState

	// The Azure Active Directory Join type. Possible values are `AzureADJoin` and `HybridAzureADJoin`. Changing this forces a new resource to be created.
	DomainJoinType pulumi.StringOutput `pulumi:"domainJoinType"`
	// The name of the Azure Active Directory domain.
	DomainName pulumi.StringPtrOutput `pulumi:"domainName"`
	// The password for the account used to join domain.
	DomainPassword pulumi.StringPtrOutput `pulumi:"domainPassword"`
	// The username of the Azure Active Directory account (user or service account) that has permissions to create computer objects in Active Directory.
	DomainUsername pulumi.StringPtrOutput `pulumi:"domainUsername"`
	// The Azure Region where the Dev Center Network Connection should exist. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// Specifies the name of this Dev Center Network Connection. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Azure Active Directory domain Organization Unit (OU).
	OrganizationUnit pulumi.StringPtrOutput `pulumi:"organizationUnit"`
	// Specifies the name of the Resource Group within which this Dev Center Network Connection should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The ID of the Subnet that is used to attach Virtual Machines.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// A mapping of tags which should be assigned to the Dev Center Network Connection.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewNetworkConnection registers a new resource with the given unique name, arguments, and options.
func NewNetworkConnection(ctx *pulumi.Context,
	name string, args *NetworkConnectionArgs, opts ...pulumi.ResourceOption) (*NetworkConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DomainJoinType == nil {
		return nil, errors.New("invalid value for required argument 'DomainJoinType'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.DomainPassword != nil {
		args.DomainPassword = pulumi.ToSecret(args.DomainPassword).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"domainPassword",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkConnection
	err := ctx.RegisterResource("azure:devcenter/networkConnection:NetworkConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkConnection gets an existing NetworkConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkConnectionState, opts ...pulumi.ResourceOption) (*NetworkConnection, error) {
	var resource NetworkConnection
	err := ctx.ReadResource("azure:devcenter/networkConnection:NetworkConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkConnection resources.
type networkConnectionState struct {
	// The Azure Active Directory Join type. Possible values are `AzureADJoin` and `HybridAzureADJoin`. Changing this forces a new resource to be created.
	DomainJoinType *string `pulumi:"domainJoinType"`
	// The name of the Azure Active Directory domain.
	DomainName *string `pulumi:"domainName"`
	// The password for the account used to join domain.
	DomainPassword *string `pulumi:"domainPassword"`
	// The username of the Azure Active Directory account (user or service account) that has permissions to create computer objects in Active Directory.
	DomainUsername *string `pulumi:"domainUsername"`
	// The Azure Region where the Dev Center Network Connection should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of this Dev Center Network Connection. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The Azure Active Directory domain Organization Unit (OU).
	OrganizationUnit *string `pulumi:"organizationUnit"`
	// Specifies the name of the Resource Group within which this Dev Center Network Connection should exist. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The ID of the Subnet that is used to attach Virtual Machines.
	SubnetId *string `pulumi:"subnetId"`
	// A mapping of tags which should be assigned to the Dev Center Network Connection.
	Tags map[string]string `pulumi:"tags"`
}

type NetworkConnectionState struct {
	// The Azure Active Directory Join type. Possible values are `AzureADJoin` and `HybridAzureADJoin`. Changing this forces a new resource to be created.
	DomainJoinType pulumi.StringPtrInput
	// The name of the Azure Active Directory domain.
	DomainName pulumi.StringPtrInput
	// The password for the account used to join domain.
	DomainPassword pulumi.StringPtrInput
	// The username of the Azure Active Directory account (user or service account) that has permissions to create computer objects in Active Directory.
	DomainUsername pulumi.StringPtrInput
	// The Azure Region where the Dev Center Network Connection should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of this Dev Center Network Connection. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The Azure Active Directory domain Organization Unit (OU).
	OrganizationUnit pulumi.StringPtrInput
	// Specifies the name of the Resource Group within which this Dev Center Network Connection should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The ID of the Subnet that is used to attach Virtual Machines.
	SubnetId pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Dev Center Network Connection.
	Tags pulumi.StringMapInput
}

func (NetworkConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkConnectionState)(nil)).Elem()
}

type networkConnectionArgs struct {
	// The Azure Active Directory Join type. Possible values are `AzureADJoin` and `HybridAzureADJoin`. Changing this forces a new resource to be created.
	DomainJoinType string `pulumi:"domainJoinType"`
	// The name of the Azure Active Directory domain.
	DomainName *string `pulumi:"domainName"`
	// The password for the account used to join domain.
	DomainPassword *string `pulumi:"domainPassword"`
	// The username of the Azure Active Directory account (user or service account) that has permissions to create computer objects in Active Directory.
	DomainUsername *string `pulumi:"domainUsername"`
	// The Azure Region where the Dev Center Network Connection should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of this Dev Center Network Connection. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The Azure Active Directory domain Organization Unit (OU).
	OrganizationUnit *string `pulumi:"organizationUnit"`
	// Specifies the name of the Resource Group within which this Dev Center Network Connection should exist. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The ID of the Subnet that is used to attach Virtual Machines.
	SubnetId string `pulumi:"subnetId"`
	// A mapping of tags which should be assigned to the Dev Center Network Connection.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a NetworkConnection resource.
type NetworkConnectionArgs struct {
	// The Azure Active Directory Join type. Possible values are `AzureADJoin` and `HybridAzureADJoin`. Changing this forces a new resource to be created.
	DomainJoinType pulumi.StringInput
	// The name of the Azure Active Directory domain.
	DomainName pulumi.StringPtrInput
	// The password for the account used to join domain.
	DomainPassword pulumi.StringPtrInput
	// The username of the Azure Active Directory account (user or service account) that has permissions to create computer objects in Active Directory.
	DomainUsername pulumi.StringPtrInput
	// The Azure Region where the Dev Center Network Connection should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of this Dev Center Network Connection. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The Azure Active Directory domain Organization Unit (OU).
	OrganizationUnit pulumi.StringPtrInput
	// Specifies the name of the Resource Group within which this Dev Center Network Connection should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// The ID of the Subnet that is used to attach Virtual Machines.
	SubnetId pulumi.StringInput
	// A mapping of tags which should be assigned to the Dev Center Network Connection.
	Tags pulumi.StringMapInput
}

func (NetworkConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkConnectionArgs)(nil)).Elem()
}

type NetworkConnectionInput interface {
	pulumi.Input

	ToNetworkConnectionOutput() NetworkConnectionOutput
	ToNetworkConnectionOutputWithContext(ctx context.Context) NetworkConnectionOutput
}

func (*NetworkConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkConnection)(nil)).Elem()
}

func (i *NetworkConnection) ToNetworkConnectionOutput() NetworkConnectionOutput {
	return i.ToNetworkConnectionOutputWithContext(context.Background())
}

func (i *NetworkConnection) ToNetworkConnectionOutputWithContext(ctx context.Context) NetworkConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectionOutput)
}

// NetworkConnectionArrayInput is an input type that accepts NetworkConnectionArray and NetworkConnectionArrayOutput values.
// You can construct a concrete instance of `NetworkConnectionArrayInput` via:
//
//	NetworkConnectionArray{ NetworkConnectionArgs{...} }
type NetworkConnectionArrayInput interface {
	pulumi.Input

	ToNetworkConnectionArrayOutput() NetworkConnectionArrayOutput
	ToNetworkConnectionArrayOutputWithContext(context.Context) NetworkConnectionArrayOutput
}

type NetworkConnectionArray []NetworkConnectionInput

func (NetworkConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkConnection)(nil)).Elem()
}

func (i NetworkConnectionArray) ToNetworkConnectionArrayOutput() NetworkConnectionArrayOutput {
	return i.ToNetworkConnectionArrayOutputWithContext(context.Background())
}

func (i NetworkConnectionArray) ToNetworkConnectionArrayOutputWithContext(ctx context.Context) NetworkConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectionArrayOutput)
}

// NetworkConnectionMapInput is an input type that accepts NetworkConnectionMap and NetworkConnectionMapOutput values.
// You can construct a concrete instance of `NetworkConnectionMapInput` via:
//
//	NetworkConnectionMap{ "key": NetworkConnectionArgs{...} }
type NetworkConnectionMapInput interface {
	pulumi.Input

	ToNetworkConnectionMapOutput() NetworkConnectionMapOutput
	ToNetworkConnectionMapOutputWithContext(context.Context) NetworkConnectionMapOutput
}

type NetworkConnectionMap map[string]NetworkConnectionInput

func (NetworkConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkConnection)(nil)).Elem()
}

func (i NetworkConnectionMap) ToNetworkConnectionMapOutput() NetworkConnectionMapOutput {
	return i.ToNetworkConnectionMapOutputWithContext(context.Background())
}

func (i NetworkConnectionMap) ToNetworkConnectionMapOutputWithContext(ctx context.Context) NetworkConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectionMapOutput)
}

type NetworkConnectionOutput struct{ *pulumi.OutputState }

func (NetworkConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkConnection)(nil)).Elem()
}

func (o NetworkConnectionOutput) ToNetworkConnectionOutput() NetworkConnectionOutput {
	return o
}

func (o NetworkConnectionOutput) ToNetworkConnectionOutputWithContext(ctx context.Context) NetworkConnectionOutput {
	return o
}

// The Azure Active Directory Join type. Possible values are `AzureADJoin` and `HybridAzureADJoin`. Changing this forces a new resource to be created.
func (o NetworkConnectionOutput) DomainJoinType() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnection) pulumi.StringOutput { return v.DomainJoinType }).(pulumi.StringOutput)
}

// The name of the Azure Active Directory domain.
func (o NetworkConnectionOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkConnection) pulumi.StringPtrOutput { return v.DomainName }).(pulumi.StringPtrOutput)
}

// The password for the account used to join domain.
func (o NetworkConnectionOutput) DomainPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkConnection) pulumi.StringPtrOutput { return v.DomainPassword }).(pulumi.StringPtrOutput)
}

// The username of the Azure Active Directory account (user or service account) that has permissions to create computer objects in Active Directory.
func (o NetworkConnectionOutput) DomainUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkConnection) pulumi.StringPtrOutput { return v.DomainUsername }).(pulumi.StringPtrOutput)
}

// The Azure Region where the Dev Center Network Connection should exist. Changing this forces a new resource to be created.
func (o NetworkConnectionOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnection) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Specifies the name of this Dev Center Network Connection. Changing this forces a new resource to be created.
func (o NetworkConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Azure Active Directory domain Organization Unit (OU).
func (o NetworkConnectionOutput) OrganizationUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkConnection) pulumi.StringPtrOutput { return v.OrganizationUnit }).(pulumi.StringPtrOutput)
}

// Specifies the name of the Resource Group within which this Dev Center Network Connection should exist. Changing this forces a new resource to be created.
func (o NetworkConnectionOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnection) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The ID of the Subnet that is used to attach Virtual Machines.
func (o NetworkConnectionOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnection) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// A mapping of tags which should be assigned to the Dev Center Network Connection.
func (o NetworkConnectionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkConnection) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type NetworkConnectionArrayOutput struct{ *pulumi.OutputState }

func (NetworkConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkConnection)(nil)).Elem()
}

func (o NetworkConnectionArrayOutput) ToNetworkConnectionArrayOutput() NetworkConnectionArrayOutput {
	return o
}

func (o NetworkConnectionArrayOutput) ToNetworkConnectionArrayOutputWithContext(ctx context.Context) NetworkConnectionArrayOutput {
	return o
}

func (o NetworkConnectionArrayOutput) Index(i pulumi.IntInput) NetworkConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkConnection {
		return vs[0].([]*NetworkConnection)[vs[1].(int)]
	}).(NetworkConnectionOutput)
}

type NetworkConnectionMapOutput struct{ *pulumi.OutputState }

func (NetworkConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkConnection)(nil)).Elem()
}

func (o NetworkConnectionMapOutput) ToNetworkConnectionMapOutput() NetworkConnectionMapOutput {
	return o
}

func (o NetworkConnectionMapOutput) ToNetworkConnectionMapOutputWithContext(ctx context.Context) NetworkConnectionMapOutput {
	return o
}

func (o NetworkConnectionMapOutput) MapIndex(k pulumi.StringInput) NetworkConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkConnection {
		return vs[0].(map[string]*NetworkConnection)[vs[1].(string)]
	}).(NetworkConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConnectionInput)(nil)).Elem(), &NetworkConnection{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConnectionArrayInput)(nil)).Elem(), NetworkConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConnectionMapInput)(nil)).Elem(), NetworkConnectionMap{})
	pulumi.RegisterOutputType(NetworkConnectionOutput{})
	pulumi.RegisterOutputType(NetworkConnectionArrayOutput{})
	pulumi.RegisterOutputType(NetworkConnectionMapOutput{})
}
