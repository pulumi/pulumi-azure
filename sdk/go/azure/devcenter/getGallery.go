// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devcenter

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Dev Center Gallery.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/devcenter"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := devcenter.LookupGallery(ctx, &devcenter.LookupGalleryArgs{
//				Name:        exampleAzurermDevCenterGallery.Name,
//				DevCenterId: exampleAzurermDevCenterGallery.DevCenterId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", example.Id)
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This data source uses the following Azure API Providers:
//
// * `Microsoft.DevCenter` - 2025-02-01
func LookupGallery(ctx *pulumi.Context, args *LookupGalleryArgs, opts ...pulumi.InvokeOption) (*LookupGalleryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGalleryResult
	err := ctx.Invoke("azure:devcenter/getGallery:getGallery", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGallery.
type LookupGalleryArgs struct {
	// The ID of the Dev Center which contains the Dev Center Gallery.
	DevCenterId string `pulumi:"devCenterId"`
	// The name of this Dev Center Gallery.
	Name string `pulumi:"name"`
}

// A collection of values returned by getGallery.
type LookupGalleryResult struct {
	DevCenterId string `pulumi:"devCenterId"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
	// The ID of the Shared Gallery connected to the Dev Center Gallery.
	SharedGalleryId string `pulumi:"sharedGalleryId"`
}

func LookupGalleryOutput(ctx *pulumi.Context, args LookupGalleryOutputArgs, opts ...pulumi.InvokeOption) LookupGalleryResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupGalleryResultOutput, error) {
			args := v.(LookupGalleryArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure:devcenter/getGallery:getGallery", args, LookupGalleryResultOutput{}, options).(LookupGalleryResultOutput), nil
		}).(LookupGalleryResultOutput)
}

// A collection of arguments for invoking getGallery.
type LookupGalleryOutputArgs struct {
	// The ID of the Dev Center which contains the Dev Center Gallery.
	DevCenterId pulumi.StringInput `pulumi:"devCenterId"`
	// The name of this Dev Center Gallery.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupGalleryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGalleryArgs)(nil)).Elem()
}

// A collection of values returned by getGallery.
type LookupGalleryResultOutput struct{ *pulumi.OutputState }

func (LookupGalleryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGalleryResult)(nil)).Elem()
}

func (o LookupGalleryResultOutput) ToLookupGalleryResultOutput() LookupGalleryResultOutput {
	return o
}

func (o LookupGalleryResultOutput) ToLookupGalleryResultOutputWithContext(ctx context.Context) LookupGalleryResultOutput {
	return o
}

func (o LookupGalleryResultOutput) DevCenterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGalleryResult) string { return v.DevCenterId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupGalleryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGalleryResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupGalleryResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGalleryResult) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the Shared Gallery connected to the Dev Center Gallery.
func (o LookupGalleryResultOutput) SharedGalleryId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGalleryResult) string { return v.SharedGalleryId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGalleryResultOutput{})
}
