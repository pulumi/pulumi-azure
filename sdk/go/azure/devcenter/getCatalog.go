// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devcenter

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Dev Center Catalog.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/devcenter"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := devcenter.LookupCatalog(ctx, &devcenter.LookupCatalogArgs{
//				Name:        exampleAzurermDevCenterCatalog.Name,
//				DevCenterId: exampleAzurermDevCenterCatalog.DevCenterId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", example.Id)
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This data source uses the following Azure API Providers:
//
// * `Microsoft.DevCenter`: 2025-02-01
func LookupCatalog(ctx *pulumi.Context, args *LookupCatalogArgs, opts ...pulumi.InvokeOption) (*LookupCatalogResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCatalogResult
	err := ctx.Invoke("azure:devcenter/getCatalog:getCatalog", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCatalog.
type LookupCatalogArgs struct {
	// Specifies the Dev Center Id within which this Dev Center Catalog should exist.
	DevCenterId string `pulumi:"devCenterId"`
	// The name of this Dev Center Catalog.
	Name string `pulumi:"name"`
}

// A collection of values returned by getCatalog.
type LookupCatalogResult struct {
	// A `catalogAdogit` block as defined below.
	CatalogAdogits []GetCatalogCatalogAdogit `pulumi:"catalogAdogits"`
	// A `catalogGithub` block as defined below.
	CatalogGithubs []GetCatalogCatalogGithub `pulumi:"catalogGithubs"`
	DevCenterId    string                    `pulumi:"devCenterId"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

func LookupCatalogOutput(ctx *pulumi.Context, args LookupCatalogOutputArgs, opts ...pulumi.InvokeOption) LookupCatalogResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCatalogResultOutput, error) {
			args := v.(LookupCatalogArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure:devcenter/getCatalog:getCatalog", args, LookupCatalogResultOutput{}, options).(LookupCatalogResultOutput), nil
		}).(LookupCatalogResultOutput)
}

// A collection of arguments for invoking getCatalog.
type LookupCatalogOutputArgs struct {
	// Specifies the Dev Center Id within which this Dev Center Catalog should exist.
	DevCenterId pulumi.StringInput `pulumi:"devCenterId"`
	// The name of this Dev Center Catalog.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupCatalogOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCatalogArgs)(nil)).Elem()
}

// A collection of values returned by getCatalog.
type LookupCatalogResultOutput struct{ *pulumi.OutputState }

func (LookupCatalogResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCatalogResult)(nil)).Elem()
}

func (o LookupCatalogResultOutput) ToLookupCatalogResultOutput() LookupCatalogResultOutput {
	return o
}

func (o LookupCatalogResultOutput) ToLookupCatalogResultOutputWithContext(ctx context.Context) LookupCatalogResultOutput {
	return o
}

// A `catalogAdogit` block as defined below.
func (o LookupCatalogResultOutput) CatalogAdogits() GetCatalogCatalogAdogitArrayOutput {
	return o.ApplyT(func(v LookupCatalogResult) []GetCatalogCatalogAdogit { return v.CatalogAdogits }).(GetCatalogCatalogAdogitArrayOutput)
}

// A `catalogGithub` block as defined below.
func (o LookupCatalogResultOutput) CatalogGithubs() GetCatalogCatalogGithubArrayOutput {
	return o.ApplyT(func(v LookupCatalogResult) []GetCatalogCatalogGithub { return v.CatalogGithubs }).(GetCatalogCatalogGithubArrayOutput)
}

func (o LookupCatalogResultOutput) DevCenterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogResult) string { return v.DevCenterId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCatalogResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCatalogResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCatalogResultOutput{})
}
