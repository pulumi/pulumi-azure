// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devcenter

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type DevCenterIdentity struct {
	IdentityIds []string `pulumi:"identityIds"`
	PrincipalId *string  `pulumi:"principalId"`
	TenantId    *string  `pulumi:"tenantId"`
	Type        string   `pulumi:"type"`
}

// DevCenterIdentityInput is an input type that accepts DevCenterIdentityArgs and DevCenterIdentityOutput values.
// You can construct a concrete instance of `DevCenterIdentityInput` via:
//
//	DevCenterIdentityArgs{...}
type DevCenterIdentityInput interface {
	pulumi.Input

	ToDevCenterIdentityOutput() DevCenterIdentityOutput
	ToDevCenterIdentityOutputWithContext(context.Context) DevCenterIdentityOutput
}

type DevCenterIdentityArgs struct {
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	PrincipalId pulumi.StringPtrInput   `pulumi:"principalId"`
	TenantId    pulumi.StringPtrInput   `pulumi:"tenantId"`
	Type        pulumi.StringInput      `pulumi:"type"`
}

func (DevCenterIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DevCenterIdentity)(nil)).Elem()
}

func (i DevCenterIdentityArgs) ToDevCenterIdentityOutput() DevCenterIdentityOutput {
	return i.ToDevCenterIdentityOutputWithContext(context.Background())
}

func (i DevCenterIdentityArgs) ToDevCenterIdentityOutputWithContext(ctx context.Context) DevCenterIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevCenterIdentityOutput)
}

func (i DevCenterIdentityArgs) ToDevCenterIdentityPtrOutput() DevCenterIdentityPtrOutput {
	return i.ToDevCenterIdentityPtrOutputWithContext(context.Background())
}

func (i DevCenterIdentityArgs) ToDevCenterIdentityPtrOutputWithContext(ctx context.Context) DevCenterIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevCenterIdentityOutput).ToDevCenterIdentityPtrOutputWithContext(ctx)
}

// DevCenterIdentityPtrInput is an input type that accepts DevCenterIdentityArgs, DevCenterIdentityPtr and DevCenterIdentityPtrOutput values.
// You can construct a concrete instance of `DevCenterIdentityPtrInput` via:
//
//	        DevCenterIdentityArgs{...}
//
//	or:
//
//	        nil
type DevCenterIdentityPtrInput interface {
	pulumi.Input

	ToDevCenterIdentityPtrOutput() DevCenterIdentityPtrOutput
	ToDevCenterIdentityPtrOutputWithContext(context.Context) DevCenterIdentityPtrOutput
}

type devCenterIdentityPtrType DevCenterIdentityArgs

func DevCenterIdentityPtr(v *DevCenterIdentityArgs) DevCenterIdentityPtrInput {
	return (*devCenterIdentityPtrType)(v)
}

func (*devCenterIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DevCenterIdentity)(nil)).Elem()
}

func (i *devCenterIdentityPtrType) ToDevCenterIdentityPtrOutput() DevCenterIdentityPtrOutput {
	return i.ToDevCenterIdentityPtrOutputWithContext(context.Background())
}

func (i *devCenterIdentityPtrType) ToDevCenterIdentityPtrOutputWithContext(ctx context.Context) DevCenterIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevCenterIdentityPtrOutput)
}

type DevCenterIdentityOutput struct{ *pulumi.OutputState }

func (DevCenterIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevCenterIdentity)(nil)).Elem()
}

func (o DevCenterIdentityOutput) ToDevCenterIdentityOutput() DevCenterIdentityOutput {
	return o
}

func (o DevCenterIdentityOutput) ToDevCenterIdentityOutputWithContext(ctx context.Context) DevCenterIdentityOutput {
	return o
}

func (o DevCenterIdentityOutput) ToDevCenterIdentityPtrOutput() DevCenterIdentityPtrOutput {
	return o.ToDevCenterIdentityPtrOutputWithContext(context.Background())
}

func (o DevCenterIdentityOutput) ToDevCenterIdentityPtrOutputWithContext(ctx context.Context) DevCenterIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DevCenterIdentity) *DevCenterIdentity {
		return &v
	}).(DevCenterIdentityPtrOutput)
}

func (o DevCenterIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DevCenterIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

func (o DevCenterIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevCenterIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

func (o DevCenterIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevCenterIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

func (o DevCenterIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DevCenterIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type DevCenterIdentityPtrOutput struct{ *pulumi.OutputState }

func (DevCenterIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevCenterIdentity)(nil)).Elem()
}

func (o DevCenterIdentityPtrOutput) ToDevCenterIdentityPtrOutput() DevCenterIdentityPtrOutput {
	return o
}

func (o DevCenterIdentityPtrOutput) ToDevCenterIdentityPtrOutputWithContext(ctx context.Context) DevCenterIdentityPtrOutput {
	return o
}

func (o DevCenterIdentityPtrOutput) Elem() DevCenterIdentityOutput {
	return o.ApplyT(func(v *DevCenterIdentity) DevCenterIdentity {
		if v != nil {
			return *v
		}
		var ret DevCenterIdentity
		return ret
	}).(DevCenterIdentityOutput)
}

func (o DevCenterIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DevCenterIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

func (o DevCenterIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevCenterIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

func (o DevCenterIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevCenterIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

func (o DevCenterIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevCenterIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DevCenterIdentityInput)(nil)).Elem(), DevCenterIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DevCenterIdentityPtrInput)(nil)).Elem(), DevCenterIdentityArgs{})
	pulumi.RegisterOutputType(DevCenterIdentityOutput{})
	pulumi.RegisterOutputType(DevCenterIdentityPtrOutput{})
}
