// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package workloadssap

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an SAP Three Tier Virtual Instance with a new SAP System.
//
// > **Note:** Before using this resource, it's required to submit the request of registering the Resource Provider with Azure CLI `az provider register --namespace "Microsoft.Workloads"`. The Resource Provider can take a while to register, you can check the status by running `az provider show --namespace "Microsoft.Workloads" --query "registrationState"`. Once this outputs "Registered" the Resource Provider is available for use.
//
// ## Import
//
// SAP Three Tier Virtual Instances with new SAP Systems can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:workloadssap/threeTierVirtualInstance:ThreeTierVirtualInstance example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Workloads/sapVirtualInstances/vis1
// ```
type ThreeTierVirtualInstance struct {
	pulumi.CustomResourceState

	// The Geo-Location where the SAP system is to be created. Changing this forces a new resource to be created.
	AppLocation pulumi.StringOutput `pulumi:"appLocation"`
	// The environment type for the SAP Three Tier Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
	Environment pulumi.StringOutput `pulumi:"environment"`
	// An `identity` block as defined below.
	Identity ThreeTierVirtualInstanceIdentityPtrOutput `pulumi:"identity"`
	// The Azure Region where the SAP Three Tier Virtual Instance should exist. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the managed Resource Group for the SAP Three Tier Virtual Instance. Changing this forces a new resource to be created.
	ManagedResourceGroupName pulumi.StringPtrOutput `pulumi:"managedResourceGroupName"`
	// The network access type for managed resources. Possible values are `Private` and `Public`. Defaults to `Public`.
	ManagedResourcesNetworkAccessType pulumi.StringPtrOutput `pulumi:"managedResourcesNetworkAccessType"`
	// Specifies the name of this SAP Three Tier Virtual Instance. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the Resource Group where the SAP Three Tier Virtual Instance should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The FQDN of the SAP system. Changing this forces a new resource to be created.
	SapFqdn pulumi.StringOutput `pulumi:"sapFqdn"`
	// The SAP Product type for the SAP Three Tier Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
	SapProduct pulumi.StringOutput `pulumi:"sapProduct"`
	// A mapping of tags which should be assigned to the SAP Three Tier Virtual Instance.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A `threeTierConfiguration` block as defined below. Changing this forces a new resource to be created.
	ThreeTierConfiguration ThreeTierVirtualInstanceThreeTierConfigurationOutput `pulumi:"threeTierConfiguration"`
}

// NewThreeTierVirtualInstance registers a new resource with the given unique name, arguments, and options.
func NewThreeTierVirtualInstance(ctx *pulumi.Context,
	name string, args *ThreeTierVirtualInstanceArgs, opts ...pulumi.ResourceOption) (*ThreeTierVirtualInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AppLocation == nil {
		return nil, errors.New("invalid value for required argument 'AppLocation'")
	}
	if args.Environment == nil {
		return nil, errors.New("invalid value for required argument 'Environment'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SapFqdn == nil {
		return nil, errors.New("invalid value for required argument 'SapFqdn'")
	}
	if args.SapProduct == nil {
		return nil, errors.New("invalid value for required argument 'SapProduct'")
	}
	if args.ThreeTierConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'ThreeTierConfiguration'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ThreeTierVirtualInstance
	err := ctx.RegisterResource("azure:workloadssap/threeTierVirtualInstance:ThreeTierVirtualInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetThreeTierVirtualInstance gets an existing ThreeTierVirtualInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetThreeTierVirtualInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ThreeTierVirtualInstanceState, opts ...pulumi.ResourceOption) (*ThreeTierVirtualInstance, error) {
	var resource ThreeTierVirtualInstance
	err := ctx.ReadResource("azure:workloadssap/threeTierVirtualInstance:ThreeTierVirtualInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ThreeTierVirtualInstance resources.
type threeTierVirtualInstanceState struct {
	// The Geo-Location where the SAP system is to be created. Changing this forces a new resource to be created.
	AppLocation *string `pulumi:"appLocation"`
	// The environment type for the SAP Three Tier Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
	Environment *string `pulumi:"environment"`
	// An `identity` block as defined below.
	Identity *ThreeTierVirtualInstanceIdentity `pulumi:"identity"`
	// The Azure Region where the SAP Three Tier Virtual Instance should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The name of the managed Resource Group for the SAP Three Tier Virtual Instance. Changing this forces a new resource to be created.
	ManagedResourceGroupName *string `pulumi:"managedResourceGroupName"`
	// The network access type for managed resources. Possible values are `Private` and `Public`. Defaults to `Public`.
	ManagedResourcesNetworkAccessType *string `pulumi:"managedResourcesNetworkAccessType"`
	// Specifies the name of this SAP Three Tier Virtual Instance. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group where the SAP Three Tier Virtual Instance should exist. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The FQDN of the SAP system. Changing this forces a new resource to be created.
	SapFqdn *string `pulumi:"sapFqdn"`
	// The SAP Product type for the SAP Three Tier Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
	SapProduct *string `pulumi:"sapProduct"`
	// A mapping of tags which should be assigned to the SAP Three Tier Virtual Instance.
	Tags map[string]string `pulumi:"tags"`
	// A `threeTierConfiguration` block as defined below. Changing this forces a new resource to be created.
	ThreeTierConfiguration *ThreeTierVirtualInstanceThreeTierConfiguration `pulumi:"threeTierConfiguration"`
}

type ThreeTierVirtualInstanceState struct {
	// The Geo-Location where the SAP system is to be created. Changing this forces a new resource to be created.
	AppLocation pulumi.StringPtrInput
	// The environment type for the SAP Three Tier Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
	Environment pulumi.StringPtrInput
	// An `identity` block as defined below.
	Identity ThreeTierVirtualInstanceIdentityPtrInput
	// The Azure Region where the SAP Three Tier Virtual Instance should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The name of the managed Resource Group for the SAP Three Tier Virtual Instance. Changing this forces a new resource to be created.
	ManagedResourceGroupName pulumi.StringPtrInput
	// The network access type for managed resources. Possible values are `Private` and `Public`. Defaults to `Public`.
	ManagedResourcesNetworkAccessType pulumi.StringPtrInput
	// Specifies the name of this SAP Three Tier Virtual Instance. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group where the SAP Three Tier Virtual Instance should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The FQDN of the SAP system. Changing this forces a new resource to be created.
	SapFqdn pulumi.StringPtrInput
	// The SAP Product type for the SAP Three Tier Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
	SapProduct pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the SAP Three Tier Virtual Instance.
	Tags pulumi.StringMapInput
	// A `threeTierConfiguration` block as defined below. Changing this forces a new resource to be created.
	ThreeTierConfiguration ThreeTierVirtualInstanceThreeTierConfigurationPtrInput
}

func (ThreeTierVirtualInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*threeTierVirtualInstanceState)(nil)).Elem()
}

type threeTierVirtualInstanceArgs struct {
	// The Geo-Location where the SAP system is to be created. Changing this forces a new resource to be created.
	AppLocation string `pulumi:"appLocation"`
	// The environment type for the SAP Three Tier Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
	Environment string `pulumi:"environment"`
	// An `identity` block as defined below.
	Identity *ThreeTierVirtualInstanceIdentity `pulumi:"identity"`
	// The Azure Region where the SAP Three Tier Virtual Instance should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The name of the managed Resource Group for the SAP Three Tier Virtual Instance. Changing this forces a new resource to be created.
	ManagedResourceGroupName *string `pulumi:"managedResourceGroupName"`
	// The network access type for managed resources. Possible values are `Private` and `Public`. Defaults to `Public`.
	ManagedResourcesNetworkAccessType *string `pulumi:"managedResourcesNetworkAccessType"`
	// Specifies the name of this SAP Three Tier Virtual Instance. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group where the SAP Three Tier Virtual Instance should exist. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The FQDN of the SAP system. Changing this forces a new resource to be created.
	SapFqdn string `pulumi:"sapFqdn"`
	// The SAP Product type for the SAP Three Tier Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
	SapProduct string `pulumi:"sapProduct"`
	// A mapping of tags which should be assigned to the SAP Three Tier Virtual Instance.
	Tags map[string]string `pulumi:"tags"`
	// A `threeTierConfiguration` block as defined below. Changing this forces a new resource to be created.
	ThreeTierConfiguration ThreeTierVirtualInstanceThreeTierConfiguration `pulumi:"threeTierConfiguration"`
}

// The set of arguments for constructing a ThreeTierVirtualInstance resource.
type ThreeTierVirtualInstanceArgs struct {
	// The Geo-Location where the SAP system is to be created. Changing this forces a new resource to be created.
	AppLocation pulumi.StringInput
	// The environment type for the SAP Three Tier Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
	Environment pulumi.StringInput
	// An `identity` block as defined below.
	Identity ThreeTierVirtualInstanceIdentityPtrInput
	// The Azure Region where the SAP Three Tier Virtual Instance should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The name of the managed Resource Group for the SAP Three Tier Virtual Instance. Changing this forces a new resource to be created.
	ManagedResourceGroupName pulumi.StringPtrInput
	// The network access type for managed resources. Possible values are `Private` and `Public`. Defaults to `Public`.
	ManagedResourcesNetworkAccessType pulumi.StringPtrInput
	// Specifies the name of this SAP Three Tier Virtual Instance. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group where the SAP Three Tier Virtual Instance should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// The FQDN of the SAP system. Changing this forces a new resource to be created.
	SapFqdn pulumi.StringInput
	// The SAP Product type for the SAP Three Tier Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
	SapProduct pulumi.StringInput
	// A mapping of tags which should be assigned to the SAP Three Tier Virtual Instance.
	Tags pulumi.StringMapInput
	// A `threeTierConfiguration` block as defined below. Changing this forces a new resource to be created.
	ThreeTierConfiguration ThreeTierVirtualInstanceThreeTierConfigurationInput
}

func (ThreeTierVirtualInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*threeTierVirtualInstanceArgs)(nil)).Elem()
}

type ThreeTierVirtualInstanceInput interface {
	pulumi.Input

	ToThreeTierVirtualInstanceOutput() ThreeTierVirtualInstanceOutput
	ToThreeTierVirtualInstanceOutputWithContext(ctx context.Context) ThreeTierVirtualInstanceOutput
}

func (*ThreeTierVirtualInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**ThreeTierVirtualInstance)(nil)).Elem()
}

func (i *ThreeTierVirtualInstance) ToThreeTierVirtualInstanceOutput() ThreeTierVirtualInstanceOutput {
	return i.ToThreeTierVirtualInstanceOutputWithContext(context.Background())
}

func (i *ThreeTierVirtualInstance) ToThreeTierVirtualInstanceOutputWithContext(ctx context.Context) ThreeTierVirtualInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreeTierVirtualInstanceOutput)
}

// ThreeTierVirtualInstanceArrayInput is an input type that accepts ThreeTierVirtualInstanceArray and ThreeTierVirtualInstanceArrayOutput values.
// You can construct a concrete instance of `ThreeTierVirtualInstanceArrayInput` via:
//
//	ThreeTierVirtualInstanceArray{ ThreeTierVirtualInstanceArgs{...} }
type ThreeTierVirtualInstanceArrayInput interface {
	pulumi.Input

	ToThreeTierVirtualInstanceArrayOutput() ThreeTierVirtualInstanceArrayOutput
	ToThreeTierVirtualInstanceArrayOutputWithContext(context.Context) ThreeTierVirtualInstanceArrayOutput
}

type ThreeTierVirtualInstanceArray []ThreeTierVirtualInstanceInput

func (ThreeTierVirtualInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ThreeTierVirtualInstance)(nil)).Elem()
}

func (i ThreeTierVirtualInstanceArray) ToThreeTierVirtualInstanceArrayOutput() ThreeTierVirtualInstanceArrayOutput {
	return i.ToThreeTierVirtualInstanceArrayOutputWithContext(context.Background())
}

func (i ThreeTierVirtualInstanceArray) ToThreeTierVirtualInstanceArrayOutputWithContext(ctx context.Context) ThreeTierVirtualInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreeTierVirtualInstanceArrayOutput)
}

// ThreeTierVirtualInstanceMapInput is an input type that accepts ThreeTierVirtualInstanceMap and ThreeTierVirtualInstanceMapOutput values.
// You can construct a concrete instance of `ThreeTierVirtualInstanceMapInput` via:
//
//	ThreeTierVirtualInstanceMap{ "key": ThreeTierVirtualInstanceArgs{...} }
type ThreeTierVirtualInstanceMapInput interface {
	pulumi.Input

	ToThreeTierVirtualInstanceMapOutput() ThreeTierVirtualInstanceMapOutput
	ToThreeTierVirtualInstanceMapOutputWithContext(context.Context) ThreeTierVirtualInstanceMapOutput
}

type ThreeTierVirtualInstanceMap map[string]ThreeTierVirtualInstanceInput

func (ThreeTierVirtualInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ThreeTierVirtualInstance)(nil)).Elem()
}

func (i ThreeTierVirtualInstanceMap) ToThreeTierVirtualInstanceMapOutput() ThreeTierVirtualInstanceMapOutput {
	return i.ToThreeTierVirtualInstanceMapOutputWithContext(context.Background())
}

func (i ThreeTierVirtualInstanceMap) ToThreeTierVirtualInstanceMapOutputWithContext(ctx context.Context) ThreeTierVirtualInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreeTierVirtualInstanceMapOutput)
}

type ThreeTierVirtualInstanceOutput struct{ *pulumi.OutputState }

func (ThreeTierVirtualInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThreeTierVirtualInstance)(nil)).Elem()
}

func (o ThreeTierVirtualInstanceOutput) ToThreeTierVirtualInstanceOutput() ThreeTierVirtualInstanceOutput {
	return o
}

func (o ThreeTierVirtualInstanceOutput) ToThreeTierVirtualInstanceOutputWithContext(ctx context.Context) ThreeTierVirtualInstanceOutput {
	return o
}

// The Geo-Location where the SAP system is to be created. Changing this forces a new resource to be created.
func (o ThreeTierVirtualInstanceOutput) AppLocation() pulumi.StringOutput {
	return o.ApplyT(func(v *ThreeTierVirtualInstance) pulumi.StringOutput { return v.AppLocation }).(pulumi.StringOutput)
}

// The environment type for the SAP Three Tier Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
func (o ThreeTierVirtualInstanceOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v *ThreeTierVirtualInstance) pulumi.StringOutput { return v.Environment }).(pulumi.StringOutput)
}

// An `identity` block as defined below.
func (o ThreeTierVirtualInstanceOutput) Identity() ThreeTierVirtualInstanceIdentityPtrOutput {
	return o.ApplyT(func(v *ThreeTierVirtualInstance) ThreeTierVirtualInstanceIdentityPtrOutput { return v.Identity }).(ThreeTierVirtualInstanceIdentityPtrOutput)
}

// The Azure Region where the SAP Three Tier Virtual Instance should exist. Changing this forces a new resource to be created.
func (o ThreeTierVirtualInstanceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ThreeTierVirtualInstance) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the managed Resource Group for the SAP Three Tier Virtual Instance. Changing this forces a new resource to be created.
func (o ThreeTierVirtualInstanceOutput) ManagedResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThreeTierVirtualInstance) pulumi.StringPtrOutput { return v.ManagedResourceGroupName }).(pulumi.StringPtrOutput)
}

// The network access type for managed resources. Possible values are `Private` and `Public`. Defaults to `Public`.
func (o ThreeTierVirtualInstanceOutput) ManagedResourcesNetworkAccessType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThreeTierVirtualInstance) pulumi.StringPtrOutput { return v.ManagedResourcesNetworkAccessType }).(pulumi.StringPtrOutput)
}

// Specifies the name of this SAP Three Tier Virtual Instance. Changing this forces a new resource to be created.
func (o ThreeTierVirtualInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ThreeTierVirtualInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the Resource Group where the SAP Three Tier Virtual Instance should exist. Changing this forces a new resource to be created.
func (o ThreeTierVirtualInstanceOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *ThreeTierVirtualInstance) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The FQDN of the SAP system. Changing this forces a new resource to be created.
func (o ThreeTierVirtualInstanceOutput) SapFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v *ThreeTierVirtualInstance) pulumi.StringOutput { return v.SapFqdn }).(pulumi.StringOutput)
}

// The SAP Product type for the SAP Three Tier Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
func (o ThreeTierVirtualInstanceOutput) SapProduct() pulumi.StringOutput {
	return o.ApplyT(func(v *ThreeTierVirtualInstance) pulumi.StringOutput { return v.SapProduct }).(pulumi.StringOutput)
}

// A mapping of tags which should be assigned to the SAP Three Tier Virtual Instance.
func (o ThreeTierVirtualInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ThreeTierVirtualInstance) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A `threeTierConfiguration` block as defined below. Changing this forces a new resource to be created.
func (o ThreeTierVirtualInstanceOutput) ThreeTierConfiguration() ThreeTierVirtualInstanceThreeTierConfigurationOutput {
	return o.ApplyT(func(v *ThreeTierVirtualInstance) ThreeTierVirtualInstanceThreeTierConfigurationOutput {
		return v.ThreeTierConfiguration
	}).(ThreeTierVirtualInstanceThreeTierConfigurationOutput)
}

type ThreeTierVirtualInstanceArrayOutput struct{ *pulumi.OutputState }

func (ThreeTierVirtualInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ThreeTierVirtualInstance)(nil)).Elem()
}

func (o ThreeTierVirtualInstanceArrayOutput) ToThreeTierVirtualInstanceArrayOutput() ThreeTierVirtualInstanceArrayOutput {
	return o
}

func (o ThreeTierVirtualInstanceArrayOutput) ToThreeTierVirtualInstanceArrayOutputWithContext(ctx context.Context) ThreeTierVirtualInstanceArrayOutput {
	return o
}

func (o ThreeTierVirtualInstanceArrayOutput) Index(i pulumi.IntInput) ThreeTierVirtualInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ThreeTierVirtualInstance {
		return vs[0].([]*ThreeTierVirtualInstance)[vs[1].(int)]
	}).(ThreeTierVirtualInstanceOutput)
}

type ThreeTierVirtualInstanceMapOutput struct{ *pulumi.OutputState }

func (ThreeTierVirtualInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ThreeTierVirtualInstance)(nil)).Elem()
}

func (o ThreeTierVirtualInstanceMapOutput) ToThreeTierVirtualInstanceMapOutput() ThreeTierVirtualInstanceMapOutput {
	return o
}

func (o ThreeTierVirtualInstanceMapOutput) ToThreeTierVirtualInstanceMapOutputWithContext(ctx context.Context) ThreeTierVirtualInstanceMapOutput {
	return o
}

func (o ThreeTierVirtualInstanceMapOutput) MapIndex(k pulumi.StringInput) ThreeTierVirtualInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ThreeTierVirtualInstance {
		return vs[0].(map[string]*ThreeTierVirtualInstance)[vs[1].(string)]
	}).(ThreeTierVirtualInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ThreeTierVirtualInstanceInput)(nil)).Elem(), &ThreeTierVirtualInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThreeTierVirtualInstanceArrayInput)(nil)).Elem(), ThreeTierVirtualInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThreeTierVirtualInstanceMapInput)(nil)).Elem(), ThreeTierVirtualInstanceMap{})
	pulumi.RegisterOutputType(ThreeTierVirtualInstanceOutput{})
	pulumi.RegisterOutputType(ThreeTierVirtualInstanceArrayOutput{})
	pulumi.RegisterOutputType(ThreeTierVirtualInstanceMapOutput{})
}
