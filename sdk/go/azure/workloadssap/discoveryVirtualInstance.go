// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package workloadssap

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an SAP Discovery Virtual Instance.
//
// > **Note:** Before using this resource, it's required to submit the request of registering the Resource Provider with Azure CLI `az provider register --namespace "Microsoft.Workloads"`. The Resource Provider can take a while to register, you can check the status by running `az provider show --namespace "Microsoft.Workloads" --query "registrationState"`. Once this outputs "Registered" the Resource Provider is available for use.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/workloadssap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-sapvis"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = workloadssap.NewDiscoveryVirtualInstance(ctx, "example", &workloadssap.DiscoveryVirtualInstanceArgs{
//				Name:                          pulumi.String("X01"),
//				ResourceGroupName:             example.Name,
//				Location:                      example.Location,
//				Environment:                   pulumi.String("NonProd"),
//				SapProduct:                    pulumi.String("S4HANA"),
//				CentralServerVirtualMachineId: pulumi.String("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/exampleRG/providers/Microsoft.Compute/virtualMachines/csvm1"),
//				ManagedStorageAccountName:     pulumi.String("managedsa"),
//				Identity: &workloadssap.DiscoveryVirtualInstanceIdentityArgs{
//					Type: pulumi.String("UserAssigned"),
//					IdentityIds: pulumi.StringArray{
//						pulumi.String("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/exampleRG/providers/Microsoft.ManagedIdentity/userAssignedIdentities/uai1"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// SAP Discovery Virtual Instances can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:workloadssap/discoveryVirtualInstance:DiscoveryVirtualInstance example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Workloads/sapVirtualInstances/vis1
// ```
type DiscoveryVirtualInstance struct {
	pulumi.CustomResourceState

	// The ID of the Virtual Machine of the Central Server. Changing this forces a new resource to be created.
	CentralServerVirtualMachineId pulumi.StringOutput `pulumi:"centralServerVirtualMachineId"`
	// The environment type for the SAP Discovery Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
	Environment pulumi.StringOutput `pulumi:"environment"`
	// An `identity` block as defined below.
	Identity DiscoveryVirtualInstanceIdentityPtrOutput `pulumi:"identity"`
	// The Azure Region where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the managed Resource Group for the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
	ManagedResourceGroupName pulumi.StringPtrOutput `pulumi:"managedResourceGroupName"`
	// The name of the custom Storage Account created by the service in the managed Resource Group. Changing this forces a new resource to be created.
	ManagedStorageAccountName pulumi.StringPtrOutput `pulumi:"managedStorageAccountName"`
	// Specifies the name of the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the Resource Group where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The SAP Product type for the SAP Discovery Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
	SapProduct pulumi.StringOutput `pulumi:"sapProduct"`
	// A mapping of tags which should be assigned to the SAP Discovery Virtual Instance.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewDiscoveryVirtualInstance registers a new resource with the given unique name, arguments, and options.
func NewDiscoveryVirtualInstance(ctx *pulumi.Context,
	name string, args *DiscoveryVirtualInstanceArgs, opts ...pulumi.ResourceOption) (*DiscoveryVirtualInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CentralServerVirtualMachineId == nil {
		return nil, errors.New("invalid value for required argument 'CentralServerVirtualMachineId'")
	}
	if args.Environment == nil {
		return nil, errors.New("invalid value for required argument 'Environment'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SapProduct == nil {
		return nil, errors.New("invalid value for required argument 'SapProduct'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DiscoveryVirtualInstance
	err := ctx.RegisterResource("azure:workloadssap/discoveryVirtualInstance:DiscoveryVirtualInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDiscoveryVirtualInstance gets an existing DiscoveryVirtualInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDiscoveryVirtualInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DiscoveryVirtualInstanceState, opts ...pulumi.ResourceOption) (*DiscoveryVirtualInstance, error) {
	var resource DiscoveryVirtualInstance
	err := ctx.ReadResource("azure:workloadssap/discoveryVirtualInstance:DiscoveryVirtualInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DiscoveryVirtualInstance resources.
type discoveryVirtualInstanceState struct {
	// The ID of the Virtual Machine of the Central Server. Changing this forces a new resource to be created.
	CentralServerVirtualMachineId *string `pulumi:"centralServerVirtualMachineId"`
	// The environment type for the SAP Discovery Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
	Environment *string `pulumi:"environment"`
	// An `identity` block as defined below.
	Identity *DiscoveryVirtualInstanceIdentity `pulumi:"identity"`
	// The Azure Region where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The name of the managed Resource Group for the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
	ManagedResourceGroupName *string `pulumi:"managedResourceGroupName"`
	// The name of the custom Storage Account created by the service in the managed Resource Group. Changing this forces a new resource to be created.
	ManagedStorageAccountName *string `pulumi:"managedStorageAccountName"`
	// Specifies the name of the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The SAP Product type for the SAP Discovery Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
	SapProduct *string `pulumi:"sapProduct"`
	// A mapping of tags which should be assigned to the SAP Discovery Virtual Instance.
	Tags map[string]string `pulumi:"tags"`
}

type DiscoveryVirtualInstanceState struct {
	// The ID of the Virtual Machine of the Central Server. Changing this forces a new resource to be created.
	CentralServerVirtualMachineId pulumi.StringPtrInput
	// The environment type for the SAP Discovery Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
	Environment pulumi.StringPtrInput
	// An `identity` block as defined below.
	Identity DiscoveryVirtualInstanceIdentityPtrInput
	// The Azure Region where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The name of the managed Resource Group for the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
	ManagedResourceGroupName pulumi.StringPtrInput
	// The name of the custom Storage Account created by the service in the managed Resource Group. Changing this forces a new resource to be created.
	ManagedStorageAccountName pulumi.StringPtrInput
	// Specifies the name of the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The SAP Product type for the SAP Discovery Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
	SapProduct pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the SAP Discovery Virtual Instance.
	Tags pulumi.StringMapInput
}

func (DiscoveryVirtualInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*discoveryVirtualInstanceState)(nil)).Elem()
}

type discoveryVirtualInstanceArgs struct {
	// The ID of the Virtual Machine of the Central Server. Changing this forces a new resource to be created.
	CentralServerVirtualMachineId string `pulumi:"centralServerVirtualMachineId"`
	// The environment type for the SAP Discovery Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
	Environment string `pulumi:"environment"`
	// An `identity` block as defined below.
	Identity *DiscoveryVirtualInstanceIdentity `pulumi:"identity"`
	// The Azure Region where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The name of the managed Resource Group for the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
	ManagedResourceGroupName *string `pulumi:"managedResourceGroupName"`
	// The name of the custom Storage Account created by the service in the managed Resource Group. Changing this forces a new resource to be created.
	ManagedStorageAccountName *string `pulumi:"managedStorageAccountName"`
	// Specifies the name of the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The SAP Product type for the SAP Discovery Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
	SapProduct string `pulumi:"sapProduct"`
	// A mapping of tags which should be assigned to the SAP Discovery Virtual Instance.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a DiscoveryVirtualInstance resource.
type DiscoveryVirtualInstanceArgs struct {
	// The ID of the Virtual Machine of the Central Server. Changing this forces a new resource to be created.
	CentralServerVirtualMachineId pulumi.StringInput
	// The environment type for the SAP Discovery Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
	Environment pulumi.StringInput
	// An `identity` block as defined below.
	Identity DiscoveryVirtualInstanceIdentityPtrInput
	// The Azure Region where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The name of the managed Resource Group for the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
	ManagedResourceGroupName pulumi.StringPtrInput
	// The name of the custom Storage Account created by the service in the managed Resource Group. Changing this forces a new resource to be created.
	ManagedStorageAccountName pulumi.StringPtrInput
	// Specifies the name of the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// The SAP Product type for the SAP Discovery Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
	SapProduct pulumi.StringInput
	// A mapping of tags which should be assigned to the SAP Discovery Virtual Instance.
	Tags pulumi.StringMapInput
}

func (DiscoveryVirtualInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*discoveryVirtualInstanceArgs)(nil)).Elem()
}

type DiscoveryVirtualInstanceInput interface {
	pulumi.Input

	ToDiscoveryVirtualInstanceOutput() DiscoveryVirtualInstanceOutput
	ToDiscoveryVirtualInstanceOutputWithContext(ctx context.Context) DiscoveryVirtualInstanceOutput
}

func (*DiscoveryVirtualInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**DiscoveryVirtualInstance)(nil)).Elem()
}

func (i *DiscoveryVirtualInstance) ToDiscoveryVirtualInstanceOutput() DiscoveryVirtualInstanceOutput {
	return i.ToDiscoveryVirtualInstanceOutputWithContext(context.Background())
}

func (i *DiscoveryVirtualInstance) ToDiscoveryVirtualInstanceOutputWithContext(ctx context.Context) DiscoveryVirtualInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiscoveryVirtualInstanceOutput)
}

// DiscoveryVirtualInstanceArrayInput is an input type that accepts DiscoveryVirtualInstanceArray and DiscoveryVirtualInstanceArrayOutput values.
// You can construct a concrete instance of `DiscoveryVirtualInstanceArrayInput` via:
//
//	DiscoveryVirtualInstanceArray{ DiscoveryVirtualInstanceArgs{...} }
type DiscoveryVirtualInstanceArrayInput interface {
	pulumi.Input

	ToDiscoveryVirtualInstanceArrayOutput() DiscoveryVirtualInstanceArrayOutput
	ToDiscoveryVirtualInstanceArrayOutputWithContext(context.Context) DiscoveryVirtualInstanceArrayOutput
}

type DiscoveryVirtualInstanceArray []DiscoveryVirtualInstanceInput

func (DiscoveryVirtualInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DiscoveryVirtualInstance)(nil)).Elem()
}

func (i DiscoveryVirtualInstanceArray) ToDiscoveryVirtualInstanceArrayOutput() DiscoveryVirtualInstanceArrayOutput {
	return i.ToDiscoveryVirtualInstanceArrayOutputWithContext(context.Background())
}

func (i DiscoveryVirtualInstanceArray) ToDiscoveryVirtualInstanceArrayOutputWithContext(ctx context.Context) DiscoveryVirtualInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiscoveryVirtualInstanceArrayOutput)
}

// DiscoveryVirtualInstanceMapInput is an input type that accepts DiscoveryVirtualInstanceMap and DiscoveryVirtualInstanceMapOutput values.
// You can construct a concrete instance of `DiscoveryVirtualInstanceMapInput` via:
//
//	DiscoveryVirtualInstanceMap{ "key": DiscoveryVirtualInstanceArgs{...} }
type DiscoveryVirtualInstanceMapInput interface {
	pulumi.Input

	ToDiscoveryVirtualInstanceMapOutput() DiscoveryVirtualInstanceMapOutput
	ToDiscoveryVirtualInstanceMapOutputWithContext(context.Context) DiscoveryVirtualInstanceMapOutput
}

type DiscoveryVirtualInstanceMap map[string]DiscoveryVirtualInstanceInput

func (DiscoveryVirtualInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DiscoveryVirtualInstance)(nil)).Elem()
}

func (i DiscoveryVirtualInstanceMap) ToDiscoveryVirtualInstanceMapOutput() DiscoveryVirtualInstanceMapOutput {
	return i.ToDiscoveryVirtualInstanceMapOutputWithContext(context.Background())
}

func (i DiscoveryVirtualInstanceMap) ToDiscoveryVirtualInstanceMapOutputWithContext(ctx context.Context) DiscoveryVirtualInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiscoveryVirtualInstanceMapOutput)
}

type DiscoveryVirtualInstanceOutput struct{ *pulumi.OutputState }

func (DiscoveryVirtualInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiscoveryVirtualInstance)(nil)).Elem()
}

func (o DiscoveryVirtualInstanceOutput) ToDiscoveryVirtualInstanceOutput() DiscoveryVirtualInstanceOutput {
	return o
}

func (o DiscoveryVirtualInstanceOutput) ToDiscoveryVirtualInstanceOutputWithContext(ctx context.Context) DiscoveryVirtualInstanceOutput {
	return o
}

// The ID of the Virtual Machine of the Central Server. Changing this forces a new resource to be created.
func (o DiscoveryVirtualInstanceOutput) CentralServerVirtualMachineId() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveryVirtualInstance) pulumi.StringOutput { return v.CentralServerVirtualMachineId }).(pulumi.StringOutput)
}

// The environment type for the SAP Discovery Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
func (o DiscoveryVirtualInstanceOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveryVirtualInstance) pulumi.StringOutput { return v.Environment }).(pulumi.StringOutput)
}

// An `identity` block as defined below.
func (o DiscoveryVirtualInstanceOutput) Identity() DiscoveryVirtualInstanceIdentityPtrOutput {
	return o.ApplyT(func(v *DiscoveryVirtualInstance) DiscoveryVirtualInstanceIdentityPtrOutput { return v.Identity }).(DiscoveryVirtualInstanceIdentityPtrOutput)
}

// The Azure Region where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
func (o DiscoveryVirtualInstanceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveryVirtualInstance) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the managed Resource Group for the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
func (o DiscoveryVirtualInstanceOutput) ManagedResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiscoveryVirtualInstance) pulumi.StringPtrOutput { return v.ManagedResourceGroupName }).(pulumi.StringPtrOutput)
}

// The name of the custom Storage Account created by the service in the managed Resource Group. Changing this forces a new resource to be created.
func (o DiscoveryVirtualInstanceOutput) ManagedStorageAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiscoveryVirtualInstance) pulumi.StringPtrOutput { return v.ManagedStorageAccountName }).(pulumi.StringPtrOutput)
}

// Specifies the name of the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
func (o DiscoveryVirtualInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveryVirtualInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the Resource Group where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
func (o DiscoveryVirtualInstanceOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveryVirtualInstance) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The SAP Product type for the SAP Discovery Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
func (o DiscoveryVirtualInstanceOutput) SapProduct() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveryVirtualInstance) pulumi.StringOutput { return v.SapProduct }).(pulumi.StringOutput)
}

// A mapping of tags which should be assigned to the SAP Discovery Virtual Instance.
func (o DiscoveryVirtualInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DiscoveryVirtualInstance) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type DiscoveryVirtualInstanceArrayOutput struct{ *pulumi.OutputState }

func (DiscoveryVirtualInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DiscoveryVirtualInstance)(nil)).Elem()
}

func (o DiscoveryVirtualInstanceArrayOutput) ToDiscoveryVirtualInstanceArrayOutput() DiscoveryVirtualInstanceArrayOutput {
	return o
}

func (o DiscoveryVirtualInstanceArrayOutput) ToDiscoveryVirtualInstanceArrayOutputWithContext(ctx context.Context) DiscoveryVirtualInstanceArrayOutput {
	return o
}

func (o DiscoveryVirtualInstanceArrayOutput) Index(i pulumi.IntInput) DiscoveryVirtualInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DiscoveryVirtualInstance {
		return vs[0].([]*DiscoveryVirtualInstance)[vs[1].(int)]
	}).(DiscoveryVirtualInstanceOutput)
}

type DiscoveryVirtualInstanceMapOutput struct{ *pulumi.OutputState }

func (DiscoveryVirtualInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DiscoveryVirtualInstance)(nil)).Elem()
}

func (o DiscoveryVirtualInstanceMapOutput) ToDiscoveryVirtualInstanceMapOutput() DiscoveryVirtualInstanceMapOutput {
	return o
}

func (o DiscoveryVirtualInstanceMapOutput) ToDiscoveryVirtualInstanceMapOutputWithContext(ctx context.Context) DiscoveryVirtualInstanceMapOutput {
	return o
}

func (o DiscoveryVirtualInstanceMapOutput) MapIndex(k pulumi.StringInput) DiscoveryVirtualInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DiscoveryVirtualInstance {
		return vs[0].(map[string]*DiscoveryVirtualInstance)[vs[1].(string)]
	}).(DiscoveryVirtualInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DiscoveryVirtualInstanceInput)(nil)).Elem(), &DiscoveryVirtualInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiscoveryVirtualInstanceArrayInput)(nil)).Elem(), DiscoveryVirtualInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiscoveryVirtualInstanceMapInput)(nil)).Elem(), DiscoveryVirtualInstanceMap{})
	pulumi.RegisterOutputType(DiscoveryVirtualInstanceOutput{})
	pulumi.RegisterOutputType(DiscoveryVirtualInstanceArrayOutput{})
	pulumi.RegisterOutputType(DiscoveryVirtualInstanceMapOutput{})
}
