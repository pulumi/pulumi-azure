// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appservice"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := appservice.LookupSourceControlToken(ctx, &appservice.LookupSourceControlTokenArgs{
//				Type: "GitHub",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", data.Azurerm_app_service_github_token.Example.Id)
//			return nil
//		})
//	}
//
// ```
func LookupSourceControlToken(ctx *pulumi.Context, args *LookupSourceControlTokenArgs, opts ...pulumi.InvokeOption) (*LookupSourceControlTokenResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSourceControlTokenResult
	err := ctx.Invoke("azure:appservice/getSourceControlToken:getSourceControlToken", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSourceControlToken.
type LookupSourceControlTokenArgs struct {
	// The Token type. Possible values include `Bitbucket`, `Dropbox`, `Github`, and `OneDrive`.
	Type string `pulumi:"type"`
}

// A collection of values returned by getSourceControlToken.
type LookupSourceControlTokenResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The GitHub Token value.
	Token       string `pulumi:"token"`
	TokenSecret string `pulumi:"tokenSecret"`
	Type        string `pulumi:"type"`
}

func LookupSourceControlTokenOutput(ctx *pulumi.Context, args LookupSourceControlTokenOutputArgs, opts ...pulumi.InvokeOption) LookupSourceControlTokenResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSourceControlTokenResult, error) {
			args := v.(LookupSourceControlTokenArgs)
			r, err := LookupSourceControlToken(ctx, &args, opts...)
			var s LookupSourceControlTokenResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSourceControlTokenResultOutput)
}

// A collection of arguments for invoking getSourceControlToken.
type LookupSourceControlTokenOutputArgs struct {
	// The Token type. Possible values include `Bitbucket`, `Dropbox`, `Github`, and `OneDrive`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (LookupSourceControlTokenOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourceControlTokenArgs)(nil)).Elem()
}

// A collection of values returned by getSourceControlToken.
type LookupSourceControlTokenResultOutput struct{ *pulumi.OutputState }

func (LookupSourceControlTokenResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourceControlTokenResult)(nil)).Elem()
}

func (o LookupSourceControlTokenResultOutput) ToLookupSourceControlTokenResultOutput() LookupSourceControlTokenResultOutput {
	return o
}

func (o LookupSourceControlTokenResultOutput) ToLookupSourceControlTokenResultOutputWithContext(ctx context.Context) LookupSourceControlTokenResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSourceControlTokenResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceControlTokenResult) string { return v.Id }).(pulumi.StringOutput)
}

// The GitHub Token value.
func (o LookupSourceControlTokenResultOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceControlTokenResult) string { return v.Token }).(pulumi.StringOutput)
}

func (o LookupSourceControlTokenResultOutput) TokenSecret() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceControlTokenResult) string { return v.TokenSecret }).(pulumi.StringOutput)
}

func (o LookupSourceControlTokenResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceControlTokenResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSourceControlTokenResultOutput{})
}
