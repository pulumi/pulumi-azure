// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package appservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AppServiceAuthSettings struct {
	// A `activeDirectory` block as defined below.
	ActiveDirectory *AppServiceAuthSettingsActiveDirectory `pulumi:"activeDirectory"`
	// Login parameters to send to the OpenID Connect authorization endpoint when a user logs in. Each parameter must be in the form "key=value".
	AdditionalLoginParams map[string]string `pulumi:"additionalLoginParams"`
	// External URLs that can be redirected to as part of logging in or logging out of the app.
	AllowedExternalRedirectUrls []string `pulumi:"allowedExternalRedirectUrls"`
	// The default provider to use when multiple providers have been set up. Possible values are `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount` and `Twitter`.
	DefaultProvider *string `pulumi:"defaultProvider"`
	// Is Authentication enabled?
	Enabled bool `pulumi:"enabled"`
	// A `facebook` block as defined below.
	Facebook *AppServiceAuthSettingsFacebook `pulumi:"facebook"`
	// A `google` block as defined below.
	Google *AppServiceAuthSettingsGoogle `pulumi:"google"`
	// Issuer URI. When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
	Issuer *string `pulumi:"issuer"`
	// A `microsoft` block as defined below.
	Microsoft *AppServiceAuthSettingsMicrosoft `pulumi:"microsoft"`
	// The runtime version of the Authentication/Authorization module.
	RuntimeVersion *string `pulumi:"runtimeVersion"`
	// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72.
	TokenRefreshExtensionHours *float64 `pulumi:"tokenRefreshExtensionHours"`
	// If enabled the module will durably store platform-specific security tokens that are obtained during login flows. Defaults to false.
	TokenStoreEnabled *bool `pulumi:"tokenStoreEnabled"`
	// A `twitter` block as defined below.
	Twitter *AppServiceAuthSettingsTwitter `pulumi:"twitter"`
	// The action to take when an unauthenticated client attempts to access the app. Possible values are `AllowAnonymous` and `RedirectToLoginPage`.
	UnauthenticatedClientAction *string `pulumi:"unauthenticatedClientAction"`
}

// AppServiceAuthSettingsInput is an input type that accepts AppServiceAuthSettingsArgs and AppServiceAuthSettingsOutput values.
// You can construct a concrete instance of `AppServiceAuthSettingsInput` via:
//
//          AppServiceAuthSettingsArgs{...}
type AppServiceAuthSettingsInput interface {
	pulumi.Input

	ToAppServiceAuthSettingsOutput() AppServiceAuthSettingsOutput
	ToAppServiceAuthSettingsOutputWithContext(context.Context) AppServiceAuthSettingsOutput
}

type AppServiceAuthSettingsArgs struct {
	// A `activeDirectory` block as defined below.
	ActiveDirectory AppServiceAuthSettingsActiveDirectoryPtrInput `pulumi:"activeDirectory"`
	// Login parameters to send to the OpenID Connect authorization endpoint when a user logs in. Each parameter must be in the form "key=value".
	AdditionalLoginParams pulumi.StringMapInput `pulumi:"additionalLoginParams"`
	// External URLs that can be redirected to as part of logging in or logging out of the app.
	AllowedExternalRedirectUrls pulumi.StringArrayInput `pulumi:"allowedExternalRedirectUrls"`
	// The default provider to use when multiple providers have been set up. Possible values are `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount` and `Twitter`.
	DefaultProvider pulumi.StringPtrInput `pulumi:"defaultProvider"`
	// Is Authentication enabled?
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// A `facebook` block as defined below.
	Facebook AppServiceAuthSettingsFacebookPtrInput `pulumi:"facebook"`
	// A `google` block as defined below.
	Google AppServiceAuthSettingsGooglePtrInput `pulumi:"google"`
	// Issuer URI. When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
	Issuer pulumi.StringPtrInput `pulumi:"issuer"`
	// A `microsoft` block as defined below.
	Microsoft AppServiceAuthSettingsMicrosoftPtrInput `pulumi:"microsoft"`
	// The runtime version of the Authentication/Authorization module.
	RuntimeVersion pulumi.StringPtrInput `pulumi:"runtimeVersion"`
	// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72.
	TokenRefreshExtensionHours pulumi.Float64PtrInput `pulumi:"tokenRefreshExtensionHours"`
	// If enabled the module will durably store platform-specific security tokens that are obtained during login flows. Defaults to false.
	TokenStoreEnabled pulumi.BoolPtrInput `pulumi:"tokenStoreEnabled"`
	// A `twitter` block as defined below.
	Twitter AppServiceAuthSettingsTwitterPtrInput `pulumi:"twitter"`
	// The action to take when an unauthenticated client attempts to access the app. Possible values are `AllowAnonymous` and `RedirectToLoginPage`.
	UnauthenticatedClientAction pulumi.StringPtrInput `pulumi:"unauthenticatedClientAction"`
}

func (AppServiceAuthSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceAuthSettings)(nil)).Elem()
}

func (i AppServiceAuthSettingsArgs) ToAppServiceAuthSettingsOutput() AppServiceAuthSettingsOutput {
	return i.ToAppServiceAuthSettingsOutputWithContext(context.Background())
}

func (i AppServiceAuthSettingsArgs) ToAppServiceAuthSettingsOutputWithContext(ctx context.Context) AppServiceAuthSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceAuthSettingsOutput)
}

func (i AppServiceAuthSettingsArgs) ToAppServiceAuthSettingsPtrOutput() AppServiceAuthSettingsPtrOutput {
	return i.ToAppServiceAuthSettingsPtrOutputWithContext(context.Background())
}

func (i AppServiceAuthSettingsArgs) ToAppServiceAuthSettingsPtrOutputWithContext(ctx context.Context) AppServiceAuthSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceAuthSettingsOutput).ToAppServiceAuthSettingsPtrOutputWithContext(ctx)
}

// AppServiceAuthSettingsPtrInput is an input type that accepts AppServiceAuthSettingsArgs, AppServiceAuthSettingsPtr and AppServiceAuthSettingsPtrOutput values.
// You can construct a concrete instance of `AppServiceAuthSettingsPtrInput` via:
//
//          AppServiceAuthSettingsArgs{...}
//
//  or:
//
//          nil
type AppServiceAuthSettingsPtrInput interface {
	pulumi.Input

	ToAppServiceAuthSettingsPtrOutput() AppServiceAuthSettingsPtrOutput
	ToAppServiceAuthSettingsPtrOutputWithContext(context.Context) AppServiceAuthSettingsPtrOutput
}

type appServiceAuthSettingsPtrType AppServiceAuthSettingsArgs

func AppServiceAuthSettingsPtr(v *AppServiceAuthSettingsArgs) AppServiceAuthSettingsPtrInput {
	return (*appServiceAuthSettingsPtrType)(v)
}

func (*appServiceAuthSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceAuthSettings)(nil)).Elem()
}

func (i *appServiceAuthSettingsPtrType) ToAppServiceAuthSettingsPtrOutput() AppServiceAuthSettingsPtrOutput {
	return i.ToAppServiceAuthSettingsPtrOutputWithContext(context.Background())
}

func (i *appServiceAuthSettingsPtrType) ToAppServiceAuthSettingsPtrOutputWithContext(ctx context.Context) AppServiceAuthSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceAuthSettingsPtrOutput)
}

type AppServiceAuthSettingsOutput struct{ *pulumi.OutputState }

func (AppServiceAuthSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceAuthSettings)(nil)).Elem()
}

func (o AppServiceAuthSettingsOutput) ToAppServiceAuthSettingsOutput() AppServiceAuthSettingsOutput {
	return o
}

func (o AppServiceAuthSettingsOutput) ToAppServiceAuthSettingsOutputWithContext(ctx context.Context) AppServiceAuthSettingsOutput {
	return o
}

func (o AppServiceAuthSettingsOutput) ToAppServiceAuthSettingsPtrOutput() AppServiceAuthSettingsPtrOutput {
	return o.ToAppServiceAuthSettingsPtrOutputWithContext(context.Background())
}

func (o AppServiceAuthSettingsOutput) ToAppServiceAuthSettingsPtrOutputWithContext(ctx context.Context) AppServiceAuthSettingsPtrOutput {
	return o.ApplyT(func(v AppServiceAuthSettings) *AppServiceAuthSettings {
		return &v
	}).(AppServiceAuthSettingsPtrOutput)
}

// A `activeDirectory` block as defined below.
func (o AppServiceAuthSettingsOutput) ActiveDirectory() AppServiceAuthSettingsActiveDirectoryPtrOutput {
	return o.ApplyT(func(v AppServiceAuthSettings) *AppServiceAuthSettingsActiveDirectory { return v.ActiveDirectory }).(AppServiceAuthSettingsActiveDirectoryPtrOutput)
}

// Login parameters to send to the OpenID Connect authorization endpoint when a user logs in. Each parameter must be in the form "key=value".
func (o AppServiceAuthSettingsOutput) AdditionalLoginParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v AppServiceAuthSettings) map[string]string { return v.AdditionalLoginParams }).(pulumi.StringMapOutput)
}

// External URLs that can be redirected to as part of logging in or logging out of the app.
func (o AppServiceAuthSettingsOutput) AllowedExternalRedirectUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppServiceAuthSettings) []string { return v.AllowedExternalRedirectUrls }).(pulumi.StringArrayOutput)
}

// The default provider to use when multiple providers have been set up. Possible values are `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount` and `Twitter`.
func (o AppServiceAuthSettingsOutput) DefaultProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceAuthSettings) *string { return v.DefaultProvider }).(pulumi.StringPtrOutput)
}

// Is Authentication enabled?
func (o AppServiceAuthSettingsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v AppServiceAuthSettings) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// A `facebook` block as defined below.
func (o AppServiceAuthSettingsOutput) Facebook() AppServiceAuthSettingsFacebookPtrOutput {
	return o.ApplyT(func(v AppServiceAuthSettings) *AppServiceAuthSettingsFacebook { return v.Facebook }).(AppServiceAuthSettingsFacebookPtrOutput)
}

// A `google` block as defined below.
func (o AppServiceAuthSettingsOutput) Google() AppServiceAuthSettingsGooglePtrOutput {
	return o.ApplyT(func(v AppServiceAuthSettings) *AppServiceAuthSettingsGoogle { return v.Google }).(AppServiceAuthSettingsGooglePtrOutput)
}

// Issuer URI. When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
func (o AppServiceAuthSettingsOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceAuthSettings) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

// A `microsoft` block as defined below.
func (o AppServiceAuthSettingsOutput) Microsoft() AppServiceAuthSettingsMicrosoftPtrOutput {
	return o.ApplyT(func(v AppServiceAuthSettings) *AppServiceAuthSettingsMicrosoft { return v.Microsoft }).(AppServiceAuthSettingsMicrosoftPtrOutput)
}

// The runtime version of the Authentication/Authorization module.
func (o AppServiceAuthSettingsOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceAuthSettings) *string { return v.RuntimeVersion }).(pulumi.StringPtrOutput)
}

// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72.
func (o AppServiceAuthSettingsOutput) TokenRefreshExtensionHours() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AppServiceAuthSettings) *float64 { return v.TokenRefreshExtensionHours }).(pulumi.Float64PtrOutput)
}

// If enabled the module will durably store platform-specific security tokens that are obtained during login flows. Defaults to false.
func (o AppServiceAuthSettingsOutput) TokenStoreEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServiceAuthSettings) *bool { return v.TokenStoreEnabled }).(pulumi.BoolPtrOutput)
}

// A `twitter` block as defined below.
func (o AppServiceAuthSettingsOutput) Twitter() AppServiceAuthSettingsTwitterPtrOutput {
	return o.ApplyT(func(v AppServiceAuthSettings) *AppServiceAuthSettingsTwitter { return v.Twitter }).(AppServiceAuthSettingsTwitterPtrOutput)
}

// The action to take when an unauthenticated client attempts to access the app. Possible values are `AllowAnonymous` and `RedirectToLoginPage`.
func (o AppServiceAuthSettingsOutput) UnauthenticatedClientAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceAuthSettings) *string { return v.UnauthenticatedClientAction }).(pulumi.StringPtrOutput)
}

type AppServiceAuthSettingsPtrOutput struct{ *pulumi.OutputState }

func (AppServiceAuthSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceAuthSettings)(nil)).Elem()
}

func (o AppServiceAuthSettingsPtrOutput) ToAppServiceAuthSettingsPtrOutput() AppServiceAuthSettingsPtrOutput {
	return o
}

func (o AppServiceAuthSettingsPtrOutput) ToAppServiceAuthSettingsPtrOutputWithContext(ctx context.Context) AppServiceAuthSettingsPtrOutput {
	return o
}

func (o AppServiceAuthSettingsPtrOutput) Elem() AppServiceAuthSettingsOutput {
	return o.ApplyT(func(v *AppServiceAuthSettings) AppServiceAuthSettings { return *v }).(AppServiceAuthSettingsOutput)
}

// A `activeDirectory` block as defined below.
func (o AppServiceAuthSettingsPtrOutput) ActiveDirectory() AppServiceAuthSettingsActiveDirectoryPtrOutput {
	return o.ApplyT(func(v *AppServiceAuthSettings) *AppServiceAuthSettingsActiveDirectory {
		if v == nil {
			return nil
		}
		return v.ActiveDirectory
	}).(AppServiceAuthSettingsActiveDirectoryPtrOutput)
}

// Login parameters to send to the OpenID Connect authorization endpoint when a user logs in. Each parameter must be in the form "key=value".
func (o AppServiceAuthSettingsPtrOutput) AdditionalLoginParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AppServiceAuthSettings) map[string]string {
		if v == nil {
			return nil
		}
		return v.AdditionalLoginParams
	}).(pulumi.StringMapOutput)
}

// External URLs that can be redirected to as part of logging in or logging out of the app.
func (o AppServiceAuthSettingsPtrOutput) AllowedExternalRedirectUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppServiceAuthSettings) []string {
		if v == nil {
			return nil
		}
		return v.AllowedExternalRedirectUrls
	}).(pulumi.StringArrayOutput)
}

// The default provider to use when multiple providers have been set up. Possible values are `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount` and `Twitter`.
func (o AppServiceAuthSettingsPtrOutput) DefaultProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceAuthSettings) *string {
		if v == nil {
			return nil
		}
		return v.DefaultProvider
	}).(pulumi.StringPtrOutput)
}

// Is Authentication enabled?
func (o AppServiceAuthSettingsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceAuthSettings) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// A `facebook` block as defined below.
func (o AppServiceAuthSettingsPtrOutput) Facebook() AppServiceAuthSettingsFacebookPtrOutput {
	return o.ApplyT(func(v *AppServiceAuthSettings) *AppServiceAuthSettingsFacebook {
		if v == nil {
			return nil
		}
		return v.Facebook
	}).(AppServiceAuthSettingsFacebookPtrOutput)
}

// A `google` block as defined below.
func (o AppServiceAuthSettingsPtrOutput) Google() AppServiceAuthSettingsGooglePtrOutput {
	return o.ApplyT(func(v *AppServiceAuthSettings) *AppServiceAuthSettingsGoogle {
		if v == nil {
			return nil
		}
		return v.Google
	}).(AppServiceAuthSettingsGooglePtrOutput)
}

// Issuer URI. When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
func (o AppServiceAuthSettingsPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceAuthSettings) *string {
		if v == nil {
			return nil
		}
		return v.Issuer
	}).(pulumi.StringPtrOutput)
}

// A `microsoft` block as defined below.
func (o AppServiceAuthSettingsPtrOutput) Microsoft() AppServiceAuthSettingsMicrosoftPtrOutput {
	return o.ApplyT(func(v *AppServiceAuthSettings) *AppServiceAuthSettingsMicrosoft {
		if v == nil {
			return nil
		}
		return v.Microsoft
	}).(AppServiceAuthSettingsMicrosoftPtrOutput)
}

// The runtime version of the Authentication/Authorization module.
func (o AppServiceAuthSettingsPtrOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceAuthSettings) *string {
		if v == nil {
			return nil
		}
		return v.RuntimeVersion
	}).(pulumi.StringPtrOutput)
}

// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72.
func (o AppServiceAuthSettingsPtrOutput) TokenRefreshExtensionHours() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AppServiceAuthSettings) *float64 {
		if v == nil {
			return nil
		}
		return v.TokenRefreshExtensionHours
	}).(pulumi.Float64PtrOutput)
}

// If enabled the module will durably store platform-specific security tokens that are obtained during login flows. Defaults to false.
func (o AppServiceAuthSettingsPtrOutput) TokenStoreEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceAuthSettings) *bool {
		if v == nil {
			return nil
		}
		return v.TokenStoreEnabled
	}).(pulumi.BoolPtrOutput)
}

// A `twitter` block as defined below.
func (o AppServiceAuthSettingsPtrOutput) Twitter() AppServiceAuthSettingsTwitterPtrOutput {
	return o.ApplyT(func(v *AppServiceAuthSettings) *AppServiceAuthSettingsTwitter {
		if v == nil {
			return nil
		}
		return v.Twitter
	}).(AppServiceAuthSettingsTwitterPtrOutput)
}

// The action to take when an unauthenticated client attempts to access the app. Possible values are `AllowAnonymous` and `RedirectToLoginPage`.
func (o AppServiceAuthSettingsPtrOutput) UnauthenticatedClientAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceAuthSettings) *string {
		if v == nil {
			return nil
		}
		return v.UnauthenticatedClientAction
	}).(pulumi.StringPtrOutput)
}

type AppServiceAuthSettingsActiveDirectory struct {
	// Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
	AllowedAudiences []string `pulumi:"allowedAudiences"`
	// The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
	ClientId string `pulumi:"clientId"`
	// The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.
	ClientSecret *string `pulumi:"clientSecret"`
}

// AppServiceAuthSettingsActiveDirectoryInput is an input type that accepts AppServiceAuthSettingsActiveDirectoryArgs and AppServiceAuthSettingsActiveDirectoryOutput values.
// You can construct a concrete instance of `AppServiceAuthSettingsActiveDirectoryInput` via:
//
//          AppServiceAuthSettingsActiveDirectoryArgs{...}
type AppServiceAuthSettingsActiveDirectoryInput interface {
	pulumi.Input

	ToAppServiceAuthSettingsActiveDirectoryOutput() AppServiceAuthSettingsActiveDirectoryOutput
	ToAppServiceAuthSettingsActiveDirectoryOutputWithContext(context.Context) AppServiceAuthSettingsActiveDirectoryOutput
}

type AppServiceAuthSettingsActiveDirectoryArgs struct {
	// Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
	AllowedAudiences pulumi.StringArrayInput `pulumi:"allowedAudiences"`
	// The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
}

func (AppServiceAuthSettingsActiveDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceAuthSettingsActiveDirectory)(nil)).Elem()
}

func (i AppServiceAuthSettingsActiveDirectoryArgs) ToAppServiceAuthSettingsActiveDirectoryOutput() AppServiceAuthSettingsActiveDirectoryOutput {
	return i.ToAppServiceAuthSettingsActiveDirectoryOutputWithContext(context.Background())
}

func (i AppServiceAuthSettingsActiveDirectoryArgs) ToAppServiceAuthSettingsActiveDirectoryOutputWithContext(ctx context.Context) AppServiceAuthSettingsActiveDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceAuthSettingsActiveDirectoryOutput)
}

func (i AppServiceAuthSettingsActiveDirectoryArgs) ToAppServiceAuthSettingsActiveDirectoryPtrOutput() AppServiceAuthSettingsActiveDirectoryPtrOutput {
	return i.ToAppServiceAuthSettingsActiveDirectoryPtrOutputWithContext(context.Background())
}

func (i AppServiceAuthSettingsActiveDirectoryArgs) ToAppServiceAuthSettingsActiveDirectoryPtrOutputWithContext(ctx context.Context) AppServiceAuthSettingsActiveDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceAuthSettingsActiveDirectoryOutput).ToAppServiceAuthSettingsActiveDirectoryPtrOutputWithContext(ctx)
}

// AppServiceAuthSettingsActiveDirectoryPtrInput is an input type that accepts AppServiceAuthSettingsActiveDirectoryArgs, AppServiceAuthSettingsActiveDirectoryPtr and AppServiceAuthSettingsActiveDirectoryPtrOutput values.
// You can construct a concrete instance of `AppServiceAuthSettingsActiveDirectoryPtrInput` via:
//
//          AppServiceAuthSettingsActiveDirectoryArgs{...}
//
//  or:
//
//          nil
type AppServiceAuthSettingsActiveDirectoryPtrInput interface {
	pulumi.Input

	ToAppServiceAuthSettingsActiveDirectoryPtrOutput() AppServiceAuthSettingsActiveDirectoryPtrOutput
	ToAppServiceAuthSettingsActiveDirectoryPtrOutputWithContext(context.Context) AppServiceAuthSettingsActiveDirectoryPtrOutput
}

type appServiceAuthSettingsActiveDirectoryPtrType AppServiceAuthSettingsActiveDirectoryArgs

func AppServiceAuthSettingsActiveDirectoryPtr(v *AppServiceAuthSettingsActiveDirectoryArgs) AppServiceAuthSettingsActiveDirectoryPtrInput {
	return (*appServiceAuthSettingsActiveDirectoryPtrType)(v)
}

func (*appServiceAuthSettingsActiveDirectoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceAuthSettingsActiveDirectory)(nil)).Elem()
}

func (i *appServiceAuthSettingsActiveDirectoryPtrType) ToAppServiceAuthSettingsActiveDirectoryPtrOutput() AppServiceAuthSettingsActiveDirectoryPtrOutput {
	return i.ToAppServiceAuthSettingsActiveDirectoryPtrOutputWithContext(context.Background())
}

func (i *appServiceAuthSettingsActiveDirectoryPtrType) ToAppServiceAuthSettingsActiveDirectoryPtrOutputWithContext(ctx context.Context) AppServiceAuthSettingsActiveDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceAuthSettingsActiveDirectoryPtrOutput)
}

type AppServiceAuthSettingsActiveDirectoryOutput struct{ *pulumi.OutputState }

func (AppServiceAuthSettingsActiveDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceAuthSettingsActiveDirectory)(nil)).Elem()
}

func (o AppServiceAuthSettingsActiveDirectoryOutput) ToAppServiceAuthSettingsActiveDirectoryOutput() AppServiceAuthSettingsActiveDirectoryOutput {
	return o
}

func (o AppServiceAuthSettingsActiveDirectoryOutput) ToAppServiceAuthSettingsActiveDirectoryOutputWithContext(ctx context.Context) AppServiceAuthSettingsActiveDirectoryOutput {
	return o
}

func (o AppServiceAuthSettingsActiveDirectoryOutput) ToAppServiceAuthSettingsActiveDirectoryPtrOutput() AppServiceAuthSettingsActiveDirectoryPtrOutput {
	return o.ToAppServiceAuthSettingsActiveDirectoryPtrOutputWithContext(context.Background())
}

func (o AppServiceAuthSettingsActiveDirectoryOutput) ToAppServiceAuthSettingsActiveDirectoryPtrOutputWithContext(ctx context.Context) AppServiceAuthSettingsActiveDirectoryPtrOutput {
	return o.ApplyT(func(v AppServiceAuthSettingsActiveDirectory) *AppServiceAuthSettingsActiveDirectory {
		return &v
	}).(AppServiceAuthSettingsActiveDirectoryPtrOutput)
}

// Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
func (o AppServiceAuthSettingsActiveDirectoryOutput) AllowedAudiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppServiceAuthSettingsActiveDirectory) []string { return v.AllowedAudiences }).(pulumi.StringArrayOutput)
}

// The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
func (o AppServiceAuthSettingsActiveDirectoryOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceAuthSettingsActiveDirectory) string { return v.ClientId }).(pulumi.StringOutput)
}

// The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.
func (o AppServiceAuthSettingsActiveDirectoryOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceAuthSettingsActiveDirectory) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

type AppServiceAuthSettingsActiveDirectoryPtrOutput struct{ *pulumi.OutputState }

func (AppServiceAuthSettingsActiveDirectoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceAuthSettingsActiveDirectory)(nil)).Elem()
}

func (o AppServiceAuthSettingsActiveDirectoryPtrOutput) ToAppServiceAuthSettingsActiveDirectoryPtrOutput() AppServiceAuthSettingsActiveDirectoryPtrOutput {
	return o
}

func (o AppServiceAuthSettingsActiveDirectoryPtrOutput) ToAppServiceAuthSettingsActiveDirectoryPtrOutputWithContext(ctx context.Context) AppServiceAuthSettingsActiveDirectoryPtrOutput {
	return o
}

func (o AppServiceAuthSettingsActiveDirectoryPtrOutput) Elem() AppServiceAuthSettingsActiveDirectoryOutput {
	return o.ApplyT(func(v *AppServiceAuthSettingsActiveDirectory) AppServiceAuthSettingsActiveDirectory { return *v }).(AppServiceAuthSettingsActiveDirectoryOutput)
}

// Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
func (o AppServiceAuthSettingsActiveDirectoryPtrOutput) AllowedAudiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppServiceAuthSettingsActiveDirectory) []string {
		if v == nil {
			return nil
		}
		return v.AllowedAudiences
	}).(pulumi.StringArrayOutput)
}

// The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
func (o AppServiceAuthSettingsActiveDirectoryPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceAuthSettingsActiveDirectory) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.
func (o AppServiceAuthSettingsActiveDirectoryPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceAuthSettingsActiveDirectory) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

type AppServiceAuthSettingsFacebook struct {
	// The App ID of the Facebook app used for login
	AppId string `pulumi:"appId"`
	// The App Secret of the Facebook app used for Facebook Login.
	AppSecret string `pulumi:"appSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication. https://developers.facebook.com/docs/facebook-login
	OauthScopes []string `pulumi:"oauthScopes"`
}

// AppServiceAuthSettingsFacebookInput is an input type that accepts AppServiceAuthSettingsFacebookArgs and AppServiceAuthSettingsFacebookOutput values.
// You can construct a concrete instance of `AppServiceAuthSettingsFacebookInput` via:
//
//          AppServiceAuthSettingsFacebookArgs{...}
type AppServiceAuthSettingsFacebookInput interface {
	pulumi.Input

	ToAppServiceAuthSettingsFacebookOutput() AppServiceAuthSettingsFacebookOutput
	ToAppServiceAuthSettingsFacebookOutputWithContext(context.Context) AppServiceAuthSettingsFacebookOutput
}

type AppServiceAuthSettingsFacebookArgs struct {
	// The App ID of the Facebook app used for login
	AppId pulumi.StringInput `pulumi:"appId"`
	// The App Secret of the Facebook app used for Facebook Login.
	AppSecret pulumi.StringInput `pulumi:"appSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication. https://developers.facebook.com/docs/facebook-login
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
}

func (AppServiceAuthSettingsFacebookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceAuthSettingsFacebook)(nil)).Elem()
}

func (i AppServiceAuthSettingsFacebookArgs) ToAppServiceAuthSettingsFacebookOutput() AppServiceAuthSettingsFacebookOutput {
	return i.ToAppServiceAuthSettingsFacebookOutputWithContext(context.Background())
}

func (i AppServiceAuthSettingsFacebookArgs) ToAppServiceAuthSettingsFacebookOutputWithContext(ctx context.Context) AppServiceAuthSettingsFacebookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceAuthSettingsFacebookOutput)
}

func (i AppServiceAuthSettingsFacebookArgs) ToAppServiceAuthSettingsFacebookPtrOutput() AppServiceAuthSettingsFacebookPtrOutput {
	return i.ToAppServiceAuthSettingsFacebookPtrOutputWithContext(context.Background())
}

func (i AppServiceAuthSettingsFacebookArgs) ToAppServiceAuthSettingsFacebookPtrOutputWithContext(ctx context.Context) AppServiceAuthSettingsFacebookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceAuthSettingsFacebookOutput).ToAppServiceAuthSettingsFacebookPtrOutputWithContext(ctx)
}

// AppServiceAuthSettingsFacebookPtrInput is an input type that accepts AppServiceAuthSettingsFacebookArgs, AppServiceAuthSettingsFacebookPtr and AppServiceAuthSettingsFacebookPtrOutput values.
// You can construct a concrete instance of `AppServiceAuthSettingsFacebookPtrInput` via:
//
//          AppServiceAuthSettingsFacebookArgs{...}
//
//  or:
//
//          nil
type AppServiceAuthSettingsFacebookPtrInput interface {
	pulumi.Input

	ToAppServiceAuthSettingsFacebookPtrOutput() AppServiceAuthSettingsFacebookPtrOutput
	ToAppServiceAuthSettingsFacebookPtrOutputWithContext(context.Context) AppServiceAuthSettingsFacebookPtrOutput
}

type appServiceAuthSettingsFacebookPtrType AppServiceAuthSettingsFacebookArgs

func AppServiceAuthSettingsFacebookPtr(v *AppServiceAuthSettingsFacebookArgs) AppServiceAuthSettingsFacebookPtrInput {
	return (*appServiceAuthSettingsFacebookPtrType)(v)
}

func (*appServiceAuthSettingsFacebookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceAuthSettingsFacebook)(nil)).Elem()
}

func (i *appServiceAuthSettingsFacebookPtrType) ToAppServiceAuthSettingsFacebookPtrOutput() AppServiceAuthSettingsFacebookPtrOutput {
	return i.ToAppServiceAuthSettingsFacebookPtrOutputWithContext(context.Background())
}

func (i *appServiceAuthSettingsFacebookPtrType) ToAppServiceAuthSettingsFacebookPtrOutputWithContext(ctx context.Context) AppServiceAuthSettingsFacebookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceAuthSettingsFacebookPtrOutput)
}

type AppServiceAuthSettingsFacebookOutput struct{ *pulumi.OutputState }

func (AppServiceAuthSettingsFacebookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceAuthSettingsFacebook)(nil)).Elem()
}

func (o AppServiceAuthSettingsFacebookOutput) ToAppServiceAuthSettingsFacebookOutput() AppServiceAuthSettingsFacebookOutput {
	return o
}

func (o AppServiceAuthSettingsFacebookOutput) ToAppServiceAuthSettingsFacebookOutputWithContext(ctx context.Context) AppServiceAuthSettingsFacebookOutput {
	return o
}

func (o AppServiceAuthSettingsFacebookOutput) ToAppServiceAuthSettingsFacebookPtrOutput() AppServiceAuthSettingsFacebookPtrOutput {
	return o.ToAppServiceAuthSettingsFacebookPtrOutputWithContext(context.Background())
}

func (o AppServiceAuthSettingsFacebookOutput) ToAppServiceAuthSettingsFacebookPtrOutputWithContext(ctx context.Context) AppServiceAuthSettingsFacebookPtrOutput {
	return o.ApplyT(func(v AppServiceAuthSettingsFacebook) *AppServiceAuthSettingsFacebook {
		return &v
	}).(AppServiceAuthSettingsFacebookPtrOutput)
}

// The App ID of the Facebook app used for login
func (o AppServiceAuthSettingsFacebookOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceAuthSettingsFacebook) string { return v.AppId }).(pulumi.StringOutput)
}

// The App Secret of the Facebook app used for Facebook Login.
func (o AppServiceAuthSettingsFacebookOutput) AppSecret() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceAuthSettingsFacebook) string { return v.AppSecret }).(pulumi.StringOutput)
}

// The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication. https://developers.facebook.com/docs/facebook-login
func (o AppServiceAuthSettingsFacebookOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppServiceAuthSettingsFacebook) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

type AppServiceAuthSettingsFacebookPtrOutput struct{ *pulumi.OutputState }

func (AppServiceAuthSettingsFacebookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceAuthSettingsFacebook)(nil)).Elem()
}

func (o AppServiceAuthSettingsFacebookPtrOutput) ToAppServiceAuthSettingsFacebookPtrOutput() AppServiceAuthSettingsFacebookPtrOutput {
	return o
}

func (o AppServiceAuthSettingsFacebookPtrOutput) ToAppServiceAuthSettingsFacebookPtrOutputWithContext(ctx context.Context) AppServiceAuthSettingsFacebookPtrOutput {
	return o
}

func (o AppServiceAuthSettingsFacebookPtrOutput) Elem() AppServiceAuthSettingsFacebookOutput {
	return o.ApplyT(func(v *AppServiceAuthSettingsFacebook) AppServiceAuthSettingsFacebook { return *v }).(AppServiceAuthSettingsFacebookOutput)
}

// The App ID of the Facebook app used for login
func (o AppServiceAuthSettingsFacebookPtrOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceAuthSettingsFacebook) *string {
		if v == nil {
			return nil
		}
		return &v.AppId
	}).(pulumi.StringPtrOutput)
}

// The App Secret of the Facebook app used for Facebook Login.
func (o AppServiceAuthSettingsFacebookPtrOutput) AppSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceAuthSettingsFacebook) *string {
		if v == nil {
			return nil
		}
		return &v.AppSecret
	}).(pulumi.StringPtrOutput)
}

// The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication. https://developers.facebook.com/docs/facebook-login
func (o AppServiceAuthSettingsFacebookPtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppServiceAuthSettingsFacebook) []string {
		if v == nil {
			return nil
		}
		return v.OauthScopes
	}).(pulumi.StringArrayOutput)
}

type AppServiceAuthSettingsGoogle struct {
	// The OpenID Connect Client ID for the Google web application.
	ClientId string `pulumi:"clientId"`
	// The client secret associated with the Google web application.
	ClientSecret string `pulumi:"clientSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. https://developers.google.com/identity/sign-in/web/
	OauthScopes []string `pulumi:"oauthScopes"`
}

// AppServiceAuthSettingsGoogleInput is an input type that accepts AppServiceAuthSettingsGoogleArgs and AppServiceAuthSettingsGoogleOutput values.
// You can construct a concrete instance of `AppServiceAuthSettingsGoogleInput` via:
//
//          AppServiceAuthSettingsGoogleArgs{...}
type AppServiceAuthSettingsGoogleInput interface {
	pulumi.Input

	ToAppServiceAuthSettingsGoogleOutput() AppServiceAuthSettingsGoogleOutput
	ToAppServiceAuthSettingsGoogleOutputWithContext(context.Context) AppServiceAuthSettingsGoogleOutput
}

type AppServiceAuthSettingsGoogleArgs struct {
	// The OpenID Connect Client ID for the Google web application.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The client secret associated with the Google web application.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. https://developers.google.com/identity/sign-in/web/
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
}

func (AppServiceAuthSettingsGoogleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceAuthSettingsGoogle)(nil)).Elem()
}

func (i AppServiceAuthSettingsGoogleArgs) ToAppServiceAuthSettingsGoogleOutput() AppServiceAuthSettingsGoogleOutput {
	return i.ToAppServiceAuthSettingsGoogleOutputWithContext(context.Background())
}

func (i AppServiceAuthSettingsGoogleArgs) ToAppServiceAuthSettingsGoogleOutputWithContext(ctx context.Context) AppServiceAuthSettingsGoogleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceAuthSettingsGoogleOutput)
}

func (i AppServiceAuthSettingsGoogleArgs) ToAppServiceAuthSettingsGooglePtrOutput() AppServiceAuthSettingsGooglePtrOutput {
	return i.ToAppServiceAuthSettingsGooglePtrOutputWithContext(context.Background())
}

func (i AppServiceAuthSettingsGoogleArgs) ToAppServiceAuthSettingsGooglePtrOutputWithContext(ctx context.Context) AppServiceAuthSettingsGooglePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceAuthSettingsGoogleOutput).ToAppServiceAuthSettingsGooglePtrOutputWithContext(ctx)
}

// AppServiceAuthSettingsGooglePtrInput is an input type that accepts AppServiceAuthSettingsGoogleArgs, AppServiceAuthSettingsGooglePtr and AppServiceAuthSettingsGooglePtrOutput values.
// You can construct a concrete instance of `AppServiceAuthSettingsGooglePtrInput` via:
//
//          AppServiceAuthSettingsGoogleArgs{...}
//
//  or:
//
//          nil
type AppServiceAuthSettingsGooglePtrInput interface {
	pulumi.Input

	ToAppServiceAuthSettingsGooglePtrOutput() AppServiceAuthSettingsGooglePtrOutput
	ToAppServiceAuthSettingsGooglePtrOutputWithContext(context.Context) AppServiceAuthSettingsGooglePtrOutput
}

type appServiceAuthSettingsGooglePtrType AppServiceAuthSettingsGoogleArgs

func AppServiceAuthSettingsGooglePtr(v *AppServiceAuthSettingsGoogleArgs) AppServiceAuthSettingsGooglePtrInput {
	return (*appServiceAuthSettingsGooglePtrType)(v)
}

func (*appServiceAuthSettingsGooglePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceAuthSettingsGoogle)(nil)).Elem()
}

func (i *appServiceAuthSettingsGooglePtrType) ToAppServiceAuthSettingsGooglePtrOutput() AppServiceAuthSettingsGooglePtrOutput {
	return i.ToAppServiceAuthSettingsGooglePtrOutputWithContext(context.Background())
}

func (i *appServiceAuthSettingsGooglePtrType) ToAppServiceAuthSettingsGooglePtrOutputWithContext(ctx context.Context) AppServiceAuthSettingsGooglePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceAuthSettingsGooglePtrOutput)
}

type AppServiceAuthSettingsGoogleOutput struct{ *pulumi.OutputState }

func (AppServiceAuthSettingsGoogleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceAuthSettingsGoogle)(nil)).Elem()
}

func (o AppServiceAuthSettingsGoogleOutput) ToAppServiceAuthSettingsGoogleOutput() AppServiceAuthSettingsGoogleOutput {
	return o
}

func (o AppServiceAuthSettingsGoogleOutput) ToAppServiceAuthSettingsGoogleOutputWithContext(ctx context.Context) AppServiceAuthSettingsGoogleOutput {
	return o
}

func (o AppServiceAuthSettingsGoogleOutput) ToAppServiceAuthSettingsGooglePtrOutput() AppServiceAuthSettingsGooglePtrOutput {
	return o.ToAppServiceAuthSettingsGooglePtrOutputWithContext(context.Background())
}

func (o AppServiceAuthSettingsGoogleOutput) ToAppServiceAuthSettingsGooglePtrOutputWithContext(ctx context.Context) AppServiceAuthSettingsGooglePtrOutput {
	return o.ApplyT(func(v AppServiceAuthSettingsGoogle) *AppServiceAuthSettingsGoogle {
		return &v
	}).(AppServiceAuthSettingsGooglePtrOutput)
}

// The OpenID Connect Client ID for the Google web application.
func (o AppServiceAuthSettingsGoogleOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceAuthSettingsGoogle) string { return v.ClientId }).(pulumi.StringOutput)
}

// The client secret associated with the Google web application.
func (o AppServiceAuthSettingsGoogleOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceAuthSettingsGoogle) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. https://developers.google.com/identity/sign-in/web/
func (o AppServiceAuthSettingsGoogleOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppServiceAuthSettingsGoogle) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

type AppServiceAuthSettingsGooglePtrOutput struct{ *pulumi.OutputState }

func (AppServiceAuthSettingsGooglePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceAuthSettingsGoogle)(nil)).Elem()
}

func (o AppServiceAuthSettingsGooglePtrOutput) ToAppServiceAuthSettingsGooglePtrOutput() AppServiceAuthSettingsGooglePtrOutput {
	return o
}

func (o AppServiceAuthSettingsGooglePtrOutput) ToAppServiceAuthSettingsGooglePtrOutputWithContext(ctx context.Context) AppServiceAuthSettingsGooglePtrOutput {
	return o
}

func (o AppServiceAuthSettingsGooglePtrOutput) Elem() AppServiceAuthSettingsGoogleOutput {
	return o.ApplyT(func(v *AppServiceAuthSettingsGoogle) AppServiceAuthSettingsGoogle { return *v }).(AppServiceAuthSettingsGoogleOutput)
}

// The OpenID Connect Client ID for the Google web application.
func (o AppServiceAuthSettingsGooglePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceAuthSettingsGoogle) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The client secret associated with the Google web application.
func (o AppServiceAuthSettingsGooglePtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceAuthSettingsGoogle) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. https://developers.google.com/identity/sign-in/web/
func (o AppServiceAuthSettingsGooglePtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppServiceAuthSettingsGoogle) []string {
		if v == nil {
			return nil
		}
		return v.OauthScopes
	}).(pulumi.StringArrayOutput)
}

type AppServiceAuthSettingsMicrosoft struct {
	// The OAuth 2.0 client ID that was created for the app used for authentication.
	ClientId string `pulumi:"clientId"`
	// The OAuth 2.0 client secret that was created for the app used for authentication.
	ClientSecret string `pulumi:"clientSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. https://msdn.microsoft.com/en-us/library/dn631845.aspx
	OauthScopes []string `pulumi:"oauthScopes"`
}

// AppServiceAuthSettingsMicrosoftInput is an input type that accepts AppServiceAuthSettingsMicrosoftArgs and AppServiceAuthSettingsMicrosoftOutput values.
// You can construct a concrete instance of `AppServiceAuthSettingsMicrosoftInput` via:
//
//          AppServiceAuthSettingsMicrosoftArgs{...}
type AppServiceAuthSettingsMicrosoftInput interface {
	pulumi.Input

	ToAppServiceAuthSettingsMicrosoftOutput() AppServiceAuthSettingsMicrosoftOutput
	ToAppServiceAuthSettingsMicrosoftOutputWithContext(context.Context) AppServiceAuthSettingsMicrosoftOutput
}

type AppServiceAuthSettingsMicrosoftArgs struct {
	// The OAuth 2.0 client ID that was created for the app used for authentication.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The OAuth 2.0 client secret that was created for the app used for authentication.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. https://msdn.microsoft.com/en-us/library/dn631845.aspx
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
}

func (AppServiceAuthSettingsMicrosoftArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceAuthSettingsMicrosoft)(nil)).Elem()
}

func (i AppServiceAuthSettingsMicrosoftArgs) ToAppServiceAuthSettingsMicrosoftOutput() AppServiceAuthSettingsMicrosoftOutput {
	return i.ToAppServiceAuthSettingsMicrosoftOutputWithContext(context.Background())
}

func (i AppServiceAuthSettingsMicrosoftArgs) ToAppServiceAuthSettingsMicrosoftOutputWithContext(ctx context.Context) AppServiceAuthSettingsMicrosoftOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceAuthSettingsMicrosoftOutput)
}

func (i AppServiceAuthSettingsMicrosoftArgs) ToAppServiceAuthSettingsMicrosoftPtrOutput() AppServiceAuthSettingsMicrosoftPtrOutput {
	return i.ToAppServiceAuthSettingsMicrosoftPtrOutputWithContext(context.Background())
}

func (i AppServiceAuthSettingsMicrosoftArgs) ToAppServiceAuthSettingsMicrosoftPtrOutputWithContext(ctx context.Context) AppServiceAuthSettingsMicrosoftPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceAuthSettingsMicrosoftOutput).ToAppServiceAuthSettingsMicrosoftPtrOutputWithContext(ctx)
}

// AppServiceAuthSettingsMicrosoftPtrInput is an input type that accepts AppServiceAuthSettingsMicrosoftArgs, AppServiceAuthSettingsMicrosoftPtr and AppServiceAuthSettingsMicrosoftPtrOutput values.
// You can construct a concrete instance of `AppServiceAuthSettingsMicrosoftPtrInput` via:
//
//          AppServiceAuthSettingsMicrosoftArgs{...}
//
//  or:
//
//          nil
type AppServiceAuthSettingsMicrosoftPtrInput interface {
	pulumi.Input

	ToAppServiceAuthSettingsMicrosoftPtrOutput() AppServiceAuthSettingsMicrosoftPtrOutput
	ToAppServiceAuthSettingsMicrosoftPtrOutputWithContext(context.Context) AppServiceAuthSettingsMicrosoftPtrOutput
}

type appServiceAuthSettingsMicrosoftPtrType AppServiceAuthSettingsMicrosoftArgs

func AppServiceAuthSettingsMicrosoftPtr(v *AppServiceAuthSettingsMicrosoftArgs) AppServiceAuthSettingsMicrosoftPtrInput {
	return (*appServiceAuthSettingsMicrosoftPtrType)(v)
}

func (*appServiceAuthSettingsMicrosoftPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceAuthSettingsMicrosoft)(nil)).Elem()
}

func (i *appServiceAuthSettingsMicrosoftPtrType) ToAppServiceAuthSettingsMicrosoftPtrOutput() AppServiceAuthSettingsMicrosoftPtrOutput {
	return i.ToAppServiceAuthSettingsMicrosoftPtrOutputWithContext(context.Background())
}

func (i *appServiceAuthSettingsMicrosoftPtrType) ToAppServiceAuthSettingsMicrosoftPtrOutputWithContext(ctx context.Context) AppServiceAuthSettingsMicrosoftPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceAuthSettingsMicrosoftPtrOutput)
}

type AppServiceAuthSettingsMicrosoftOutput struct{ *pulumi.OutputState }

func (AppServiceAuthSettingsMicrosoftOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceAuthSettingsMicrosoft)(nil)).Elem()
}

func (o AppServiceAuthSettingsMicrosoftOutput) ToAppServiceAuthSettingsMicrosoftOutput() AppServiceAuthSettingsMicrosoftOutput {
	return o
}

func (o AppServiceAuthSettingsMicrosoftOutput) ToAppServiceAuthSettingsMicrosoftOutputWithContext(ctx context.Context) AppServiceAuthSettingsMicrosoftOutput {
	return o
}

func (o AppServiceAuthSettingsMicrosoftOutput) ToAppServiceAuthSettingsMicrosoftPtrOutput() AppServiceAuthSettingsMicrosoftPtrOutput {
	return o.ToAppServiceAuthSettingsMicrosoftPtrOutputWithContext(context.Background())
}

func (o AppServiceAuthSettingsMicrosoftOutput) ToAppServiceAuthSettingsMicrosoftPtrOutputWithContext(ctx context.Context) AppServiceAuthSettingsMicrosoftPtrOutput {
	return o.ApplyT(func(v AppServiceAuthSettingsMicrosoft) *AppServiceAuthSettingsMicrosoft {
		return &v
	}).(AppServiceAuthSettingsMicrosoftPtrOutput)
}

// The OAuth 2.0 client ID that was created for the app used for authentication.
func (o AppServiceAuthSettingsMicrosoftOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceAuthSettingsMicrosoft) string { return v.ClientId }).(pulumi.StringOutput)
}

// The OAuth 2.0 client secret that was created for the app used for authentication.
func (o AppServiceAuthSettingsMicrosoftOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceAuthSettingsMicrosoft) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. https://msdn.microsoft.com/en-us/library/dn631845.aspx
func (o AppServiceAuthSettingsMicrosoftOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppServiceAuthSettingsMicrosoft) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

type AppServiceAuthSettingsMicrosoftPtrOutput struct{ *pulumi.OutputState }

func (AppServiceAuthSettingsMicrosoftPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceAuthSettingsMicrosoft)(nil)).Elem()
}

func (o AppServiceAuthSettingsMicrosoftPtrOutput) ToAppServiceAuthSettingsMicrosoftPtrOutput() AppServiceAuthSettingsMicrosoftPtrOutput {
	return o
}

func (o AppServiceAuthSettingsMicrosoftPtrOutput) ToAppServiceAuthSettingsMicrosoftPtrOutputWithContext(ctx context.Context) AppServiceAuthSettingsMicrosoftPtrOutput {
	return o
}

func (o AppServiceAuthSettingsMicrosoftPtrOutput) Elem() AppServiceAuthSettingsMicrosoftOutput {
	return o.ApplyT(func(v *AppServiceAuthSettingsMicrosoft) AppServiceAuthSettingsMicrosoft { return *v }).(AppServiceAuthSettingsMicrosoftOutput)
}

// The OAuth 2.0 client ID that was created for the app used for authentication.
func (o AppServiceAuthSettingsMicrosoftPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceAuthSettingsMicrosoft) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The OAuth 2.0 client secret that was created for the app used for authentication.
func (o AppServiceAuthSettingsMicrosoftPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceAuthSettingsMicrosoft) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. https://msdn.microsoft.com/en-us/library/dn631845.aspx
func (o AppServiceAuthSettingsMicrosoftPtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppServiceAuthSettingsMicrosoft) []string {
		if v == nil {
			return nil
		}
		return v.OauthScopes
	}).(pulumi.StringArrayOutput)
}

type AppServiceAuthSettingsTwitter struct {
	ConsumerKey    string `pulumi:"consumerKey"`
	ConsumerSecret string `pulumi:"consumerSecret"`
}

// AppServiceAuthSettingsTwitterInput is an input type that accepts AppServiceAuthSettingsTwitterArgs and AppServiceAuthSettingsTwitterOutput values.
// You can construct a concrete instance of `AppServiceAuthSettingsTwitterInput` via:
//
//          AppServiceAuthSettingsTwitterArgs{...}
type AppServiceAuthSettingsTwitterInput interface {
	pulumi.Input

	ToAppServiceAuthSettingsTwitterOutput() AppServiceAuthSettingsTwitterOutput
	ToAppServiceAuthSettingsTwitterOutputWithContext(context.Context) AppServiceAuthSettingsTwitterOutput
}

type AppServiceAuthSettingsTwitterArgs struct {
	ConsumerKey    pulumi.StringInput `pulumi:"consumerKey"`
	ConsumerSecret pulumi.StringInput `pulumi:"consumerSecret"`
}

func (AppServiceAuthSettingsTwitterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceAuthSettingsTwitter)(nil)).Elem()
}

func (i AppServiceAuthSettingsTwitterArgs) ToAppServiceAuthSettingsTwitterOutput() AppServiceAuthSettingsTwitterOutput {
	return i.ToAppServiceAuthSettingsTwitterOutputWithContext(context.Background())
}

func (i AppServiceAuthSettingsTwitterArgs) ToAppServiceAuthSettingsTwitterOutputWithContext(ctx context.Context) AppServiceAuthSettingsTwitterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceAuthSettingsTwitterOutput)
}

func (i AppServiceAuthSettingsTwitterArgs) ToAppServiceAuthSettingsTwitterPtrOutput() AppServiceAuthSettingsTwitterPtrOutput {
	return i.ToAppServiceAuthSettingsTwitterPtrOutputWithContext(context.Background())
}

func (i AppServiceAuthSettingsTwitterArgs) ToAppServiceAuthSettingsTwitterPtrOutputWithContext(ctx context.Context) AppServiceAuthSettingsTwitterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceAuthSettingsTwitterOutput).ToAppServiceAuthSettingsTwitterPtrOutputWithContext(ctx)
}

// AppServiceAuthSettingsTwitterPtrInput is an input type that accepts AppServiceAuthSettingsTwitterArgs, AppServiceAuthSettingsTwitterPtr and AppServiceAuthSettingsTwitterPtrOutput values.
// You can construct a concrete instance of `AppServiceAuthSettingsTwitterPtrInput` via:
//
//          AppServiceAuthSettingsTwitterArgs{...}
//
//  or:
//
//          nil
type AppServiceAuthSettingsTwitterPtrInput interface {
	pulumi.Input

	ToAppServiceAuthSettingsTwitterPtrOutput() AppServiceAuthSettingsTwitterPtrOutput
	ToAppServiceAuthSettingsTwitterPtrOutputWithContext(context.Context) AppServiceAuthSettingsTwitterPtrOutput
}

type appServiceAuthSettingsTwitterPtrType AppServiceAuthSettingsTwitterArgs

func AppServiceAuthSettingsTwitterPtr(v *AppServiceAuthSettingsTwitterArgs) AppServiceAuthSettingsTwitterPtrInput {
	return (*appServiceAuthSettingsTwitterPtrType)(v)
}

func (*appServiceAuthSettingsTwitterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceAuthSettingsTwitter)(nil)).Elem()
}

func (i *appServiceAuthSettingsTwitterPtrType) ToAppServiceAuthSettingsTwitterPtrOutput() AppServiceAuthSettingsTwitterPtrOutput {
	return i.ToAppServiceAuthSettingsTwitterPtrOutputWithContext(context.Background())
}

func (i *appServiceAuthSettingsTwitterPtrType) ToAppServiceAuthSettingsTwitterPtrOutputWithContext(ctx context.Context) AppServiceAuthSettingsTwitterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceAuthSettingsTwitterPtrOutput)
}

type AppServiceAuthSettingsTwitterOutput struct{ *pulumi.OutputState }

func (AppServiceAuthSettingsTwitterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceAuthSettingsTwitter)(nil)).Elem()
}

func (o AppServiceAuthSettingsTwitterOutput) ToAppServiceAuthSettingsTwitterOutput() AppServiceAuthSettingsTwitterOutput {
	return o
}

func (o AppServiceAuthSettingsTwitterOutput) ToAppServiceAuthSettingsTwitterOutputWithContext(ctx context.Context) AppServiceAuthSettingsTwitterOutput {
	return o
}

func (o AppServiceAuthSettingsTwitterOutput) ToAppServiceAuthSettingsTwitterPtrOutput() AppServiceAuthSettingsTwitterPtrOutput {
	return o.ToAppServiceAuthSettingsTwitterPtrOutputWithContext(context.Background())
}

func (o AppServiceAuthSettingsTwitterOutput) ToAppServiceAuthSettingsTwitterPtrOutputWithContext(ctx context.Context) AppServiceAuthSettingsTwitterPtrOutput {
	return o.ApplyT(func(v AppServiceAuthSettingsTwitter) *AppServiceAuthSettingsTwitter {
		return &v
	}).(AppServiceAuthSettingsTwitterPtrOutput)
}
func (o AppServiceAuthSettingsTwitterOutput) ConsumerKey() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceAuthSettingsTwitter) string { return v.ConsumerKey }).(pulumi.StringOutput)
}

func (o AppServiceAuthSettingsTwitterOutput) ConsumerSecret() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceAuthSettingsTwitter) string { return v.ConsumerSecret }).(pulumi.StringOutput)
}

type AppServiceAuthSettingsTwitterPtrOutput struct{ *pulumi.OutputState }

func (AppServiceAuthSettingsTwitterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceAuthSettingsTwitter)(nil)).Elem()
}

func (o AppServiceAuthSettingsTwitterPtrOutput) ToAppServiceAuthSettingsTwitterPtrOutput() AppServiceAuthSettingsTwitterPtrOutput {
	return o
}

func (o AppServiceAuthSettingsTwitterPtrOutput) ToAppServiceAuthSettingsTwitterPtrOutputWithContext(ctx context.Context) AppServiceAuthSettingsTwitterPtrOutput {
	return o
}

func (o AppServiceAuthSettingsTwitterPtrOutput) Elem() AppServiceAuthSettingsTwitterOutput {
	return o.ApplyT(func(v *AppServiceAuthSettingsTwitter) AppServiceAuthSettingsTwitter { return *v }).(AppServiceAuthSettingsTwitterOutput)
}

func (o AppServiceAuthSettingsTwitterPtrOutput) ConsumerKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceAuthSettingsTwitter) *string {
		if v == nil {
			return nil
		}
		return &v.ConsumerKey
	}).(pulumi.StringPtrOutput)
}

func (o AppServiceAuthSettingsTwitterPtrOutput) ConsumerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceAuthSettingsTwitter) *string {
		if v == nil {
			return nil
		}
		return &v.ConsumerSecret
	}).(pulumi.StringPtrOutput)
}

type AppServiceBackup struct {
	// Is this Backup enabled?
	Enabled *bool `pulumi:"enabled"`
	// Specifies the name for this Backup.
	Name string `pulumi:"name"`
	// A `schedule` block as defined below.
	Schedule AppServiceBackupSchedule `pulumi:"schedule"`
	// The SAS URL to a Storage Container where Backups should be saved.
	StorageAccountUrl string `pulumi:"storageAccountUrl"`
}

// AppServiceBackupInput is an input type that accepts AppServiceBackupArgs and AppServiceBackupOutput values.
// You can construct a concrete instance of `AppServiceBackupInput` via:
//
//          AppServiceBackupArgs{...}
type AppServiceBackupInput interface {
	pulumi.Input

	ToAppServiceBackupOutput() AppServiceBackupOutput
	ToAppServiceBackupOutputWithContext(context.Context) AppServiceBackupOutput
}

type AppServiceBackupArgs struct {
	// Is this Backup enabled?
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Specifies the name for this Backup.
	Name pulumi.StringInput `pulumi:"name"`
	// A `schedule` block as defined below.
	Schedule AppServiceBackupScheduleInput `pulumi:"schedule"`
	// The SAS URL to a Storage Container where Backups should be saved.
	StorageAccountUrl pulumi.StringInput `pulumi:"storageAccountUrl"`
}

func (AppServiceBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceBackup)(nil)).Elem()
}

func (i AppServiceBackupArgs) ToAppServiceBackupOutput() AppServiceBackupOutput {
	return i.ToAppServiceBackupOutputWithContext(context.Background())
}

func (i AppServiceBackupArgs) ToAppServiceBackupOutputWithContext(ctx context.Context) AppServiceBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceBackupOutput)
}

func (i AppServiceBackupArgs) ToAppServiceBackupPtrOutput() AppServiceBackupPtrOutput {
	return i.ToAppServiceBackupPtrOutputWithContext(context.Background())
}

func (i AppServiceBackupArgs) ToAppServiceBackupPtrOutputWithContext(ctx context.Context) AppServiceBackupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceBackupOutput).ToAppServiceBackupPtrOutputWithContext(ctx)
}

// AppServiceBackupPtrInput is an input type that accepts AppServiceBackupArgs, AppServiceBackupPtr and AppServiceBackupPtrOutput values.
// You can construct a concrete instance of `AppServiceBackupPtrInput` via:
//
//          AppServiceBackupArgs{...}
//
//  or:
//
//          nil
type AppServiceBackupPtrInput interface {
	pulumi.Input

	ToAppServiceBackupPtrOutput() AppServiceBackupPtrOutput
	ToAppServiceBackupPtrOutputWithContext(context.Context) AppServiceBackupPtrOutput
}

type appServiceBackupPtrType AppServiceBackupArgs

func AppServiceBackupPtr(v *AppServiceBackupArgs) AppServiceBackupPtrInput {
	return (*appServiceBackupPtrType)(v)
}

func (*appServiceBackupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceBackup)(nil)).Elem()
}

func (i *appServiceBackupPtrType) ToAppServiceBackupPtrOutput() AppServiceBackupPtrOutput {
	return i.ToAppServiceBackupPtrOutputWithContext(context.Background())
}

func (i *appServiceBackupPtrType) ToAppServiceBackupPtrOutputWithContext(ctx context.Context) AppServiceBackupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceBackupPtrOutput)
}

type AppServiceBackupOutput struct{ *pulumi.OutputState }

func (AppServiceBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceBackup)(nil)).Elem()
}

func (o AppServiceBackupOutput) ToAppServiceBackupOutput() AppServiceBackupOutput {
	return o
}

func (o AppServiceBackupOutput) ToAppServiceBackupOutputWithContext(ctx context.Context) AppServiceBackupOutput {
	return o
}

func (o AppServiceBackupOutput) ToAppServiceBackupPtrOutput() AppServiceBackupPtrOutput {
	return o.ToAppServiceBackupPtrOutputWithContext(context.Background())
}

func (o AppServiceBackupOutput) ToAppServiceBackupPtrOutputWithContext(ctx context.Context) AppServiceBackupPtrOutput {
	return o.ApplyT(func(v AppServiceBackup) *AppServiceBackup {
		return &v
	}).(AppServiceBackupPtrOutput)
}

// Is this Backup enabled?
func (o AppServiceBackupOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServiceBackup) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Specifies the name for this Backup.
func (o AppServiceBackupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceBackup) string { return v.Name }).(pulumi.StringOutput)
}

// A `schedule` block as defined below.
func (o AppServiceBackupOutput) Schedule() AppServiceBackupScheduleOutput {
	return o.ApplyT(func(v AppServiceBackup) AppServiceBackupSchedule { return v.Schedule }).(AppServiceBackupScheduleOutput)
}

// The SAS URL to a Storage Container where Backups should be saved.
func (o AppServiceBackupOutput) StorageAccountUrl() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceBackup) string { return v.StorageAccountUrl }).(pulumi.StringOutput)
}

type AppServiceBackupPtrOutput struct{ *pulumi.OutputState }

func (AppServiceBackupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceBackup)(nil)).Elem()
}

func (o AppServiceBackupPtrOutput) ToAppServiceBackupPtrOutput() AppServiceBackupPtrOutput {
	return o
}

func (o AppServiceBackupPtrOutput) ToAppServiceBackupPtrOutputWithContext(ctx context.Context) AppServiceBackupPtrOutput {
	return o
}

func (o AppServiceBackupPtrOutput) Elem() AppServiceBackupOutput {
	return o.ApplyT(func(v *AppServiceBackup) AppServiceBackup { return *v }).(AppServiceBackupOutput)
}

// Is this Backup enabled?
func (o AppServiceBackupPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceBackup) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies the name for this Backup.
func (o AppServiceBackupPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceBackup) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A `schedule` block as defined below.
func (o AppServiceBackupPtrOutput) Schedule() AppServiceBackupSchedulePtrOutput {
	return o.ApplyT(func(v *AppServiceBackup) *AppServiceBackupSchedule {
		if v == nil {
			return nil
		}
		return &v.Schedule
	}).(AppServiceBackupSchedulePtrOutput)
}

// The SAS URL to a Storage Container where Backups should be saved.
func (o AppServiceBackupPtrOutput) StorageAccountUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceBackup) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountUrl
	}).(pulumi.StringPtrOutput)
}

type AppServiceBackupSchedule struct {
	// Sets how often the backup should be executed.
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Sets the unit of time for how often the backup should be executed. Possible values are `Day` or `Hour`.
	FrequencyUnit string `pulumi:"frequencyUnit"`
	// Should at least one backup always be kept in the Storage Account by the Retention Policy, regardless of how old it is?
	KeepAtLeastOneBackup *bool `pulumi:"keepAtLeastOneBackup"`
	// Specifies the number of days after which Backups should be deleted.
	RetentionPeriodInDays *int `pulumi:"retentionPeriodInDays"`
	// Sets when the schedule should start working.
	StartTime *string `pulumi:"startTime"`
}

// AppServiceBackupScheduleInput is an input type that accepts AppServiceBackupScheduleArgs and AppServiceBackupScheduleOutput values.
// You can construct a concrete instance of `AppServiceBackupScheduleInput` via:
//
//          AppServiceBackupScheduleArgs{...}
type AppServiceBackupScheduleInput interface {
	pulumi.Input

	ToAppServiceBackupScheduleOutput() AppServiceBackupScheduleOutput
	ToAppServiceBackupScheduleOutputWithContext(context.Context) AppServiceBackupScheduleOutput
}

type AppServiceBackupScheduleArgs struct {
	// Sets how often the backup should be executed.
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Sets the unit of time for how often the backup should be executed. Possible values are `Day` or `Hour`.
	FrequencyUnit pulumi.StringInput `pulumi:"frequencyUnit"`
	// Should at least one backup always be kept in the Storage Account by the Retention Policy, regardless of how old it is?
	KeepAtLeastOneBackup pulumi.BoolPtrInput `pulumi:"keepAtLeastOneBackup"`
	// Specifies the number of days after which Backups should be deleted.
	RetentionPeriodInDays pulumi.IntPtrInput `pulumi:"retentionPeriodInDays"`
	// Sets when the schedule should start working.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (AppServiceBackupScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceBackupSchedule)(nil)).Elem()
}

func (i AppServiceBackupScheduleArgs) ToAppServiceBackupScheduleOutput() AppServiceBackupScheduleOutput {
	return i.ToAppServiceBackupScheduleOutputWithContext(context.Background())
}

func (i AppServiceBackupScheduleArgs) ToAppServiceBackupScheduleOutputWithContext(ctx context.Context) AppServiceBackupScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceBackupScheduleOutput)
}

func (i AppServiceBackupScheduleArgs) ToAppServiceBackupSchedulePtrOutput() AppServiceBackupSchedulePtrOutput {
	return i.ToAppServiceBackupSchedulePtrOutputWithContext(context.Background())
}

func (i AppServiceBackupScheduleArgs) ToAppServiceBackupSchedulePtrOutputWithContext(ctx context.Context) AppServiceBackupSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceBackupScheduleOutput).ToAppServiceBackupSchedulePtrOutputWithContext(ctx)
}

// AppServiceBackupSchedulePtrInput is an input type that accepts AppServiceBackupScheduleArgs, AppServiceBackupSchedulePtr and AppServiceBackupSchedulePtrOutput values.
// You can construct a concrete instance of `AppServiceBackupSchedulePtrInput` via:
//
//          AppServiceBackupScheduleArgs{...}
//
//  or:
//
//          nil
type AppServiceBackupSchedulePtrInput interface {
	pulumi.Input

	ToAppServiceBackupSchedulePtrOutput() AppServiceBackupSchedulePtrOutput
	ToAppServiceBackupSchedulePtrOutputWithContext(context.Context) AppServiceBackupSchedulePtrOutput
}

type appServiceBackupSchedulePtrType AppServiceBackupScheduleArgs

func AppServiceBackupSchedulePtr(v *AppServiceBackupScheduleArgs) AppServiceBackupSchedulePtrInput {
	return (*appServiceBackupSchedulePtrType)(v)
}

func (*appServiceBackupSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceBackupSchedule)(nil)).Elem()
}

func (i *appServiceBackupSchedulePtrType) ToAppServiceBackupSchedulePtrOutput() AppServiceBackupSchedulePtrOutput {
	return i.ToAppServiceBackupSchedulePtrOutputWithContext(context.Background())
}

func (i *appServiceBackupSchedulePtrType) ToAppServiceBackupSchedulePtrOutputWithContext(ctx context.Context) AppServiceBackupSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceBackupSchedulePtrOutput)
}

type AppServiceBackupScheduleOutput struct{ *pulumi.OutputState }

func (AppServiceBackupScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceBackupSchedule)(nil)).Elem()
}

func (o AppServiceBackupScheduleOutput) ToAppServiceBackupScheduleOutput() AppServiceBackupScheduleOutput {
	return o
}

func (o AppServiceBackupScheduleOutput) ToAppServiceBackupScheduleOutputWithContext(ctx context.Context) AppServiceBackupScheduleOutput {
	return o
}

func (o AppServiceBackupScheduleOutput) ToAppServiceBackupSchedulePtrOutput() AppServiceBackupSchedulePtrOutput {
	return o.ToAppServiceBackupSchedulePtrOutputWithContext(context.Background())
}

func (o AppServiceBackupScheduleOutput) ToAppServiceBackupSchedulePtrOutputWithContext(ctx context.Context) AppServiceBackupSchedulePtrOutput {
	return o.ApplyT(func(v AppServiceBackupSchedule) *AppServiceBackupSchedule {
		return &v
	}).(AppServiceBackupSchedulePtrOutput)
}

// Sets how often the backup should be executed.
func (o AppServiceBackupScheduleOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v AppServiceBackupSchedule) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Sets the unit of time for how often the backup should be executed. Possible values are `Day` or `Hour`.
func (o AppServiceBackupScheduleOutput) FrequencyUnit() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceBackupSchedule) string { return v.FrequencyUnit }).(pulumi.StringOutput)
}

// Should at least one backup always be kept in the Storage Account by the Retention Policy, regardless of how old it is?
func (o AppServiceBackupScheduleOutput) KeepAtLeastOneBackup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServiceBackupSchedule) *bool { return v.KeepAtLeastOneBackup }).(pulumi.BoolPtrOutput)
}

// Specifies the number of days after which Backups should be deleted.
func (o AppServiceBackupScheduleOutput) RetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppServiceBackupSchedule) *int { return v.RetentionPeriodInDays }).(pulumi.IntPtrOutput)
}

// Sets when the schedule should start working.
func (o AppServiceBackupScheduleOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceBackupSchedule) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type AppServiceBackupSchedulePtrOutput struct{ *pulumi.OutputState }

func (AppServiceBackupSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceBackupSchedule)(nil)).Elem()
}

func (o AppServiceBackupSchedulePtrOutput) ToAppServiceBackupSchedulePtrOutput() AppServiceBackupSchedulePtrOutput {
	return o
}

func (o AppServiceBackupSchedulePtrOutput) ToAppServiceBackupSchedulePtrOutputWithContext(ctx context.Context) AppServiceBackupSchedulePtrOutput {
	return o
}

func (o AppServiceBackupSchedulePtrOutput) Elem() AppServiceBackupScheduleOutput {
	return o.ApplyT(func(v *AppServiceBackupSchedule) AppServiceBackupSchedule { return *v }).(AppServiceBackupScheduleOutput)
}

// Sets how often the backup should be executed.
func (o AppServiceBackupSchedulePtrOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceBackupSchedule) *int {
		if v == nil {
			return nil
		}
		return &v.FrequencyInterval
	}).(pulumi.IntPtrOutput)
}

// Sets the unit of time for how often the backup should be executed. Possible values are `Day` or `Hour`.
func (o AppServiceBackupSchedulePtrOutput) FrequencyUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceBackupSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.FrequencyUnit
	}).(pulumi.StringPtrOutput)
}

// Should at least one backup always be kept in the Storage Account by the Retention Policy, regardless of how old it is?
func (o AppServiceBackupSchedulePtrOutput) KeepAtLeastOneBackup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceBackupSchedule) *bool {
		if v == nil {
			return nil
		}
		return v.KeepAtLeastOneBackup
	}).(pulumi.BoolPtrOutput)
}

// Specifies the number of days after which Backups should be deleted.
func (o AppServiceBackupSchedulePtrOutput) RetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceBackupSchedule) *int {
		if v == nil {
			return nil
		}
		return v.RetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// Sets when the schedule should start working.
func (o AppServiceBackupSchedulePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceBackupSchedule) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

type AppServiceConnectionString struct {
	// The name of the Connection String.
	Name string `pulumi:"name"`
	// The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure` and  `SQLServer`.
	Type string `pulumi:"type"`
	// The value for the Connection String.
	Value string `pulumi:"value"`
}

// AppServiceConnectionStringInput is an input type that accepts AppServiceConnectionStringArgs and AppServiceConnectionStringOutput values.
// You can construct a concrete instance of `AppServiceConnectionStringInput` via:
//
//          AppServiceConnectionStringArgs{...}
type AppServiceConnectionStringInput interface {
	pulumi.Input

	ToAppServiceConnectionStringOutput() AppServiceConnectionStringOutput
	ToAppServiceConnectionStringOutputWithContext(context.Context) AppServiceConnectionStringOutput
}

type AppServiceConnectionStringArgs struct {
	// The name of the Connection String.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure` and  `SQLServer`.
	Type pulumi.StringInput `pulumi:"type"`
	// The value for the Connection String.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AppServiceConnectionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceConnectionString)(nil)).Elem()
}

func (i AppServiceConnectionStringArgs) ToAppServiceConnectionStringOutput() AppServiceConnectionStringOutput {
	return i.ToAppServiceConnectionStringOutputWithContext(context.Background())
}

func (i AppServiceConnectionStringArgs) ToAppServiceConnectionStringOutputWithContext(ctx context.Context) AppServiceConnectionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceConnectionStringOutput)
}

// AppServiceConnectionStringArrayInput is an input type that accepts AppServiceConnectionStringArray and AppServiceConnectionStringArrayOutput values.
// You can construct a concrete instance of `AppServiceConnectionStringArrayInput` via:
//
//          AppServiceConnectionStringArray{ AppServiceConnectionStringArgs{...} }
type AppServiceConnectionStringArrayInput interface {
	pulumi.Input

	ToAppServiceConnectionStringArrayOutput() AppServiceConnectionStringArrayOutput
	ToAppServiceConnectionStringArrayOutputWithContext(context.Context) AppServiceConnectionStringArrayOutput
}

type AppServiceConnectionStringArray []AppServiceConnectionStringInput

func (AppServiceConnectionStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppServiceConnectionString)(nil)).Elem()
}

func (i AppServiceConnectionStringArray) ToAppServiceConnectionStringArrayOutput() AppServiceConnectionStringArrayOutput {
	return i.ToAppServiceConnectionStringArrayOutputWithContext(context.Background())
}

func (i AppServiceConnectionStringArray) ToAppServiceConnectionStringArrayOutputWithContext(ctx context.Context) AppServiceConnectionStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceConnectionStringArrayOutput)
}

type AppServiceConnectionStringOutput struct{ *pulumi.OutputState }

func (AppServiceConnectionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceConnectionString)(nil)).Elem()
}

func (o AppServiceConnectionStringOutput) ToAppServiceConnectionStringOutput() AppServiceConnectionStringOutput {
	return o
}

func (o AppServiceConnectionStringOutput) ToAppServiceConnectionStringOutputWithContext(ctx context.Context) AppServiceConnectionStringOutput {
	return o
}

// The name of the Connection String.
func (o AppServiceConnectionStringOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceConnectionString) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure` and  `SQLServer`.
func (o AppServiceConnectionStringOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceConnectionString) string { return v.Type }).(pulumi.StringOutput)
}

// The value for the Connection String.
func (o AppServiceConnectionStringOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceConnectionString) string { return v.Value }).(pulumi.StringOutput)
}

type AppServiceConnectionStringArrayOutput struct{ *pulumi.OutputState }

func (AppServiceConnectionStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppServiceConnectionString)(nil)).Elem()
}

func (o AppServiceConnectionStringArrayOutput) ToAppServiceConnectionStringArrayOutput() AppServiceConnectionStringArrayOutput {
	return o
}

func (o AppServiceConnectionStringArrayOutput) ToAppServiceConnectionStringArrayOutputWithContext(ctx context.Context) AppServiceConnectionStringArrayOutput {
	return o
}

func (o AppServiceConnectionStringArrayOutput) Index(i pulumi.IntInput) AppServiceConnectionStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppServiceConnectionString {
		return vs[0].([]AppServiceConnectionString)[vs[1].(int)]
	}).(AppServiceConnectionStringOutput)
}

type AppServiceIdentity struct {
	// Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID for the Service Principal associated with the Managed Service Identity of this App Service.
	PrincipalId *string `pulumi:"principalId"`
	// The Tenant ID for the Service Principal associated with the Managed Service Identity of this App Service.
	TenantId *string `pulumi:"tenantId"`
	// Specifies the identity type of the App Service. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identityIds` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
	Type string `pulumi:"type"`
}

// AppServiceIdentityInput is an input type that accepts AppServiceIdentityArgs and AppServiceIdentityOutput values.
// You can construct a concrete instance of `AppServiceIdentityInput` via:
//
//          AppServiceIdentityArgs{...}
type AppServiceIdentityInput interface {
	pulumi.Input

	ToAppServiceIdentityOutput() AppServiceIdentityOutput
	ToAppServiceIdentityOutputWithContext(context.Context) AppServiceIdentityOutput
}

type AppServiceIdentityArgs struct {
	// Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID for the Service Principal associated with the Managed Service Identity of this App Service.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The Tenant ID for the Service Principal associated with the Managed Service Identity of this App Service.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Specifies the identity type of the App Service. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identityIds` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AppServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceIdentity)(nil)).Elem()
}

func (i AppServiceIdentityArgs) ToAppServiceIdentityOutput() AppServiceIdentityOutput {
	return i.ToAppServiceIdentityOutputWithContext(context.Background())
}

func (i AppServiceIdentityArgs) ToAppServiceIdentityOutputWithContext(ctx context.Context) AppServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceIdentityOutput)
}

func (i AppServiceIdentityArgs) ToAppServiceIdentityPtrOutput() AppServiceIdentityPtrOutput {
	return i.ToAppServiceIdentityPtrOutputWithContext(context.Background())
}

func (i AppServiceIdentityArgs) ToAppServiceIdentityPtrOutputWithContext(ctx context.Context) AppServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceIdentityOutput).ToAppServiceIdentityPtrOutputWithContext(ctx)
}

// AppServiceIdentityPtrInput is an input type that accepts AppServiceIdentityArgs, AppServiceIdentityPtr and AppServiceIdentityPtrOutput values.
// You can construct a concrete instance of `AppServiceIdentityPtrInput` via:
//
//          AppServiceIdentityArgs{...}
//
//  or:
//
//          nil
type AppServiceIdentityPtrInput interface {
	pulumi.Input

	ToAppServiceIdentityPtrOutput() AppServiceIdentityPtrOutput
	ToAppServiceIdentityPtrOutputWithContext(context.Context) AppServiceIdentityPtrOutput
}

type appServiceIdentityPtrType AppServiceIdentityArgs

func AppServiceIdentityPtr(v *AppServiceIdentityArgs) AppServiceIdentityPtrInput {
	return (*appServiceIdentityPtrType)(v)
}

func (*appServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceIdentity)(nil)).Elem()
}

func (i *appServiceIdentityPtrType) ToAppServiceIdentityPtrOutput() AppServiceIdentityPtrOutput {
	return i.ToAppServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *appServiceIdentityPtrType) ToAppServiceIdentityPtrOutputWithContext(ctx context.Context) AppServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceIdentityPtrOutput)
}

type AppServiceIdentityOutput struct{ *pulumi.OutputState }

func (AppServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceIdentity)(nil)).Elem()
}

func (o AppServiceIdentityOutput) ToAppServiceIdentityOutput() AppServiceIdentityOutput {
	return o
}

func (o AppServiceIdentityOutput) ToAppServiceIdentityOutputWithContext(ctx context.Context) AppServiceIdentityOutput {
	return o
}

func (o AppServiceIdentityOutput) ToAppServiceIdentityPtrOutput() AppServiceIdentityPtrOutput {
	return o.ToAppServiceIdentityPtrOutputWithContext(context.Background())
}

func (o AppServiceIdentityOutput) ToAppServiceIdentityPtrOutputWithContext(ctx context.Context) AppServiceIdentityPtrOutput {
	return o.ApplyT(func(v AppServiceIdentity) *AppServiceIdentity {
		return &v
	}).(AppServiceIdentityPtrOutput)
}

// Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
func (o AppServiceIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppServiceIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID for the Service Principal associated with the Managed Service Identity of this App Service.
func (o AppServiceIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The Tenant ID for the Service Principal associated with the Managed Service Identity of this App Service.
func (o AppServiceIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the identity type of the App Service. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identityIds` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
func (o AppServiceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type AppServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (AppServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceIdentity)(nil)).Elem()
}

func (o AppServiceIdentityPtrOutput) ToAppServiceIdentityPtrOutput() AppServiceIdentityPtrOutput {
	return o
}

func (o AppServiceIdentityPtrOutput) ToAppServiceIdentityPtrOutputWithContext(ctx context.Context) AppServiceIdentityPtrOutput {
	return o
}

func (o AppServiceIdentityPtrOutput) Elem() AppServiceIdentityOutput {
	return o.ApplyT(func(v *AppServiceIdentity) AppServiceIdentity { return *v }).(AppServiceIdentityOutput)
}

// Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
func (o AppServiceIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppServiceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The Principal ID for the Service Principal associated with the Managed Service Identity of this App Service.
func (o AppServiceIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID for the Service Principal associated with the Managed Service Identity of this App Service.
func (o AppServiceIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the identity type of the App Service. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identityIds` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
func (o AppServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type AppServiceLogs struct {
	// An `applicationLogs` block as defined below.
	ApplicationLogs *AppServiceLogsApplicationLogs `pulumi:"applicationLogs"`
	// Should `Detailed error messages` be enabled on this App Service? Defaults to `false`.
	DetailedErrorMessagesEnabled *bool `pulumi:"detailedErrorMessagesEnabled"`
	// Should `Failed request tracing` be enabled on this App Service? Defaults to `false`.
	FailedRequestTracingEnabled *bool `pulumi:"failedRequestTracingEnabled"`
	// An `httpLogs` block as defined below.
	HttpLogs *AppServiceLogsHttpLogs `pulumi:"httpLogs"`
}

// AppServiceLogsInput is an input type that accepts AppServiceLogsArgs and AppServiceLogsOutput values.
// You can construct a concrete instance of `AppServiceLogsInput` via:
//
//          AppServiceLogsArgs{...}
type AppServiceLogsInput interface {
	pulumi.Input

	ToAppServiceLogsOutput() AppServiceLogsOutput
	ToAppServiceLogsOutputWithContext(context.Context) AppServiceLogsOutput
}

type AppServiceLogsArgs struct {
	// An `applicationLogs` block as defined below.
	ApplicationLogs AppServiceLogsApplicationLogsPtrInput `pulumi:"applicationLogs"`
	// Should `Detailed error messages` be enabled on this App Service? Defaults to `false`.
	DetailedErrorMessagesEnabled pulumi.BoolPtrInput `pulumi:"detailedErrorMessagesEnabled"`
	// Should `Failed request tracing` be enabled on this App Service? Defaults to `false`.
	FailedRequestTracingEnabled pulumi.BoolPtrInput `pulumi:"failedRequestTracingEnabled"`
	// An `httpLogs` block as defined below.
	HttpLogs AppServiceLogsHttpLogsPtrInput `pulumi:"httpLogs"`
}

func (AppServiceLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceLogs)(nil)).Elem()
}

func (i AppServiceLogsArgs) ToAppServiceLogsOutput() AppServiceLogsOutput {
	return i.ToAppServiceLogsOutputWithContext(context.Background())
}

func (i AppServiceLogsArgs) ToAppServiceLogsOutputWithContext(ctx context.Context) AppServiceLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceLogsOutput)
}

func (i AppServiceLogsArgs) ToAppServiceLogsPtrOutput() AppServiceLogsPtrOutput {
	return i.ToAppServiceLogsPtrOutputWithContext(context.Background())
}

func (i AppServiceLogsArgs) ToAppServiceLogsPtrOutputWithContext(ctx context.Context) AppServiceLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceLogsOutput).ToAppServiceLogsPtrOutputWithContext(ctx)
}

// AppServiceLogsPtrInput is an input type that accepts AppServiceLogsArgs, AppServiceLogsPtr and AppServiceLogsPtrOutput values.
// You can construct a concrete instance of `AppServiceLogsPtrInput` via:
//
//          AppServiceLogsArgs{...}
//
//  or:
//
//          nil
type AppServiceLogsPtrInput interface {
	pulumi.Input

	ToAppServiceLogsPtrOutput() AppServiceLogsPtrOutput
	ToAppServiceLogsPtrOutputWithContext(context.Context) AppServiceLogsPtrOutput
}

type appServiceLogsPtrType AppServiceLogsArgs

func AppServiceLogsPtr(v *AppServiceLogsArgs) AppServiceLogsPtrInput {
	return (*appServiceLogsPtrType)(v)
}

func (*appServiceLogsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceLogs)(nil)).Elem()
}

func (i *appServiceLogsPtrType) ToAppServiceLogsPtrOutput() AppServiceLogsPtrOutput {
	return i.ToAppServiceLogsPtrOutputWithContext(context.Background())
}

func (i *appServiceLogsPtrType) ToAppServiceLogsPtrOutputWithContext(ctx context.Context) AppServiceLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceLogsPtrOutput)
}

type AppServiceLogsOutput struct{ *pulumi.OutputState }

func (AppServiceLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceLogs)(nil)).Elem()
}

func (o AppServiceLogsOutput) ToAppServiceLogsOutput() AppServiceLogsOutput {
	return o
}

func (o AppServiceLogsOutput) ToAppServiceLogsOutputWithContext(ctx context.Context) AppServiceLogsOutput {
	return o
}

func (o AppServiceLogsOutput) ToAppServiceLogsPtrOutput() AppServiceLogsPtrOutput {
	return o.ToAppServiceLogsPtrOutputWithContext(context.Background())
}

func (o AppServiceLogsOutput) ToAppServiceLogsPtrOutputWithContext(ctx context.Context) AppServiceLogsPtrOutput {
	return o.ApplyT(func(v AppServiceLogs) *AppServiceLogs {
		return &v
	}).(AppServiceLogsPtrOutput)
}

// An `applicationLogs` block as defined below.
func (o AppServiceLogsOutput) ApplicationLogs() AppServiceLogsApplicationLogsPtrOutput {
	return o.ApplyT(func(v AppServiceLogs) *AppServiceLogsApplicationLogs { return v.ApplicationLogs }).(AppServiceLogsApplicationLogsPtrOutput)
}

// Should `Detailed error messages` be enabled on this App Service? Defaults to `false`.
func (o AppServiceLogsOutput) DetailedErrorMessagesEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServiceLogs) *bool { return v.DetailedErrorMessagesEnabled }).(pulumi.BoolPtrOutput)
}

// Should `Failed request tracing` be enabled on this App Service? Defaults to `false`.
func (o AppServiceLogsOutput) FailedRequestTracingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServiceLogs) *bool { return v.FailedRequestTracingEnabled }).(pulumi.BoolPtrOutput)
}

// An `httpLogs` block as defined below.
func (o AppServiceLogsOutput) HttpLogs() AppServiceLogsHttpLogsPtrOutput {
	return o.ApplyT(func(v AppServiceLogs) *AppServiceLogsHttpLogs { return v.HttpLogs }).(AppServiceLogsHttpLogsPtrOutput)
}

type AppServiceLogsPtrOutput struct{ *pulumi.OutputState }

func (AppServiceLogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceLogs)(nil)).Elem()
}

func (o AppServiceLogsPtrOutput) ToAppServiceLogsPtrOutput() AppServiceLogsPtrOutput {
	return o
}

func (o AppServiceLogsPtrOutput) ToAppServiceLogsPtrOutputWithContext(ctx context.Context) AppServiceLogsPtrOutput {
	return o
}

func (o AppServiceLogsPtrOutput) Elem() AppServiceLogsOutput {
	return o.ApplyT(func(v *AppServiceLogs) AppServiceLogs { return *v }).(AppServiceLogsOutput)
}

// An `applicationLogs` block as defined below.
func (o AppServiceLogsPtrOutput) ApplicationLogs() AppServiceLogsApplicationLogsPtrOutput {
	return o.ApplyT(func(v *AppServiceLogs) *AppServiceLogsApplicationLogs {
		if v == nil {
			return nil
		}
		return v.ApplicationLogs
	}).(AppServiceLogsApplicationLogsPtrOutput)
}

// Should `Detailed error messages` be enabled on this App Service? Defaults to `false`.
func (o AppServiceLogsPtrOutput) DetailedErrorMessagesEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceLogs) *bool {
		if v == nil {
			return nil
		}
		return v.DetailedErrorMessagesEnabled
	}).(pulumi.BoolPtrOutput)
}

// Should `Failed request tracing` be enabled on this App Service? Defaults to `false`.
func (o AppServiceLogsPtrOutput) FailedRequestTracingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceLogs) *bool {
		if v == nil {
			return nil
		}
		return v.FailedRequestTracingEnabled
	}).(pulumi.BoolPtrOutput)
}

// An `httpLogs` block as defined below.
func (o AppServiceLogsPtrOutput) HttpLogs() AppServiceLogsHttpLogsPtrOutput {
	return o.ApplyT(func(v *AppServiceLogs) *AppServiceLogsHttpLogs {
		if v == nil {
			return nil
		}
		return v.HttpLogs
	}).(AppServiceLogsHttpLogsPtrOutput)
}

type AppServiceLogsApplicationLogs struct {
	// An `azureBlobStorage` block as defined below.
	AzureBlobStorage *AppServiceLogsApplicationLogsAzureBlobStorage `pulumi:"azureBlobStorage"`
	FileSystemLevel  *string                                        `pulumi:"fileSystemLevel"`
}

// AppServiceLogsApplicationLogsInput is an input type that accepts AppServiceLogsApplicationLogsArgs and AppServiceLogsApplicationLogsOutput values.
// You can construct a concrete instance of `AppServiceLogsApplicationLogsInput` via:
//
//          AppServiceLogsApplicationLogsArgs{...}
type AppServiceLogsApplicationLogsInput interface {
	pulumi.Input

	ToAppServiceLogsApplicationLogsOutput() AppServiceLogsApplicationLogsOutput
	ToAppServiceLogsApplicationLogsOutputWithContext(context.Context) AppServiceLogsApplicationLogsOutput
}

type AppServiceLogsApplicationLogsArgs struct {
	// An `azureBlobStorage` block as defined below.
	AzureBlobStorage AppServiceLogsApplicationLogsAzureBlobStoragePtrInput `pulumi:"azureBlobStorage"`
	FileSystemLevel  pulumi.StringPtrInput                                 `pulumi:"fileSystemLevel"`
}

func (AppServiceLogsApplicationLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceLogsApplicationLogs)(nil)).Elem()
}

func (i AppServiceLogsApplicationLogsArgs) ToAppServiceLogsApplicationLogsOutput() AppServiceLogsApplicationLogsOutput {
	return i.ToAppServiceLogsApplicationLogsOutputWithContext(context.Background())
}

func (i AppServiceLogsApplicationLogsArgs) ToAppServiceLogsApplicationLogsOutputWithContext(ctx context.Context) AppServiceLogsApplicationLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceLogsApplicationLogsOutput)
}

func (i AppServiceLogsApplicationLogsArgs) ToAppServiceLogsApplicationLogsPtrOutput() AppServiceLogsApplicationLogsPtrOutput {
	return i.ToAppServiceLogsApplicationLogsPtrOutputWithContext(context.Background())
}

func (i AppServiceLogsApplicationLogsArgs) ToAppServiceLogsApplicationLogsPtrOutputWithContext(ctx context.Context) AppServiceLogsApplicationLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceLogsApplicationLogsOutput).ToAppServiceLogsApplicationLogsPtrOutputWithContext(ctx)
}

// AppServiceLogsApplicationLogsPtrInput is an input type that accepts AppServiceLogsApplicationLogsArgs, AppServiceLogsApplicationLogsPtr and AppServiceLogsApplicationLogsPtrOutput values.
// You can construct a concrete instance of `AppServiceLogsApplicationLogsPtrInput` via:
//
//          AppServiceLogsApplicationLogsArgs{...}
//
//  or:
//
//          nil
type AppServiceLogsApplicationLogsPtrInput interface {
	pulumi.Input

	ToAppServiceLogsApplicationLogsPtrOutput() AppServiceLogsApplicationLogsPtrOutput
	ToAppServiceLogsApplicationLogsPtrOutputWithContext(context.Context) AppServiceLogsApplicationLogsPtrOutput
}

type appServiceLogsApplicationLogsPtrType AppServiceLogsApplicationLogsArgs

func AppServiceLogsApplicationLogsPtr(v *AppServiceLogsApplicationLogsArgs) AppServiceLogsApplicationLogsPtrInput {
	return (*appServiceLogsApplicationLogsPtrType)(v)
}

func (*appServiceLogsApplicationLogsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceLogsApplicationLogs)(nil)).Elem()
}

func (i *appServiceLogsApplicationLogsPtrType) ToAppServiceLogsApplicationLogsPtrOutput() AppServiceLogsApplicationLogsPtrOutput {
	return i.ToAppServiceLogsApplicationLogsPtrOutputWithContext(context.Background())
}

func (i *appServiceLogsApplicationLogsPtrType) ToAppServiceLogsApplicationLogsPtrOutputWithContext(ctx context.Context) AppServiceLogsApplicationLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceLogsApplicationLogsPtrOutput)
}

type AppServiceLogsApplicationLogsOutput struct{ *pulumi.OutputState }

func (AppServiceLogsApplicationLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceLogsApplicationLogs)(nil)).Elem()
}

func (o AppServiceLogsApplicationLogsOutput) ToAppServiceLogsApplicationLogsOutput() AppServiceLogsApplicationLogsOutput {
	return o
}

func (o AppServiceLogsApplicationLogsOutput) ToAppServiceLogsApplicationLogsOutputWithContext(ctx context.Context) AppServiceLogsApplicationLogsOutput {
	return o
}

func (o AppServiceLogsApplicationLogsOutput) ToAppServiceLogsApplicationLogsPtrOutput() AppServiceLogsApplicationLogsPtrOutput {
	return o.ToAppServiceLogsApplicationLogsPtrOutputWithContext(context.Background())
}

func (o AppServiceLogsApplicationLogsOutput) ToAppServiceLogsApplicationLogsPtrOutputWithContext(ctx context.Context) AppServiceLogsApplicationLogsPtrOutput {
	return o.ApplyT(func(v AppServiceLogsApplicationLogs) *AppServiceLogsApplicationLogs {
		return &v
	}).(AppServiceLogsApplicationLogsPtrOutput)
}

// An `azureBlobStorage` block as defined below.
func (o AppServiceLogsApplicationLogsOutput) AzureBlobStorage() AppServiceLogsApplicationLogsAzureBlobStoragePtrOutput {
	return o.ApplyT(func(v AppServiceLogsApplicationLogs) *AppServiceLogsApplicationLogsAzureBlobStorage {
		return v.AzureBlobStorage
	}).(AppServiceLogsApplicationLogsAzureBlobStoragePtrOutput)
}

func (o AppServiceLogsApplicationLogsOutput) FileSystemLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceLogsApplicationLogs) *string { return v.FileSystemLevel }).(pulumi.StringPtrOutput)
}

type AppServiceLogsApplicationLogsPtrOutput struct{ *pulumi.OutputState }

func (AppServiceLogsApplicationLogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceLogsApplicationLogs)(nil)).Elem()
}

func (o AppServiceLogsApplicationLogsPtrOutput) ToAppServiceLogsApplicationLogsPtrOutput() AppServiceLogsApplicationLogsPtrOutput {
	return o
}

func (o AppServiceLogsApplicationLogsPtrOutput) ToAppServiceLogsApplicationLogsPtrOutputWithContext(ctx context.Context) AppServiceLogsApplicationLogsPtrOutput {
	return o
}

func (o AppServiceLogsApplicationLogsPtrOutput) Elem() AppServiceLogsApplicationLogsOutput {
	return o.ApplyT(func(v *AppServiceLogsApplicationLogs) AppServiceLogsApplicationLogs { return *v }).(AppServiceLogsApplicationLogsOutput)
}

// An `azureBlobStorage` block as defined below.
func (o AppServiceLogsApplicationLogsPtrOutput) AzureBlobStorage() AppServiceLogsApplicationLogsAzureBlobStoragePtrOutput {
	return o.ApplyT(func(v *AppServiceLogsApplicationLogs) *AppServiceLogsApplicationLogsAzureBlobStorage {
		if v == nil {
			return nil
		}
		return v.AzureBlobStorage
	}).(AppServiceLogsApplicationLogsAzureBlobStoragePtrOutput)
}

func (o AppServiceLogsApplicationLogsPtrOutput) FileSystemLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceLogsApplicationLogs) *string {
		if v == nil {
			return nil
		}
		return v.FileSystemLevel
	}).(pulumi.StringPtrOutput)
}

type AppServiceLogsApplicationLogsAzureBlobStorage struct {
	// The level at which to log. Possible values include `Error`, `Warning`, `Information`, `Verbose` and `Off`. **NOTE:** this field is not available for `httpLogs`
	Level string `pulumi:"level"`
	// The number of days to retain logs for.
	RetentionInDays int `pulumi:"retentionInDays"`
	// The URL to the storage container with a shared access signature token appended.
	SasUrl string `pulumi:"sasUrl"`
}

// AppServiceLogsApplicationLogsAzureBlobStorageInput is an input type that accepts AppServiceLogsApplicationLogsAzureBlobStorageArgs and AppServiceLogsApplicationLogsAzureBlobStorageOutput values.
// You can construct a concrete instance of `AppServiceLogsApplicationLogsAzureBlobStorageInput` via:
//
//          AppServiceLogsApplicationLogsAzureBlobStorageArgs{...}
type AppServiceLogsApplicationLogsAzureBlobStorageInput interface {
	pulumi.Input

	ToAppServiceLogsApplicationLogsAzureBlobStorageOutput() AppServiceLogsApplicationLogsAzureBlobStorageOutput
	ToAppServiceLogsApplicationLogsAzureBlobStorageOutputWithContext(context.Context) AppServiceLogsApplicationLogsAzureBlobStorageOutput
}

type AppServiceLogsApplicationLogsAzureBlobStorageArgs struct {
	// The level at which to log. Possible values include `Error`, `Warning`, `Information`, `Verbose` and `Off`. **NOTE:** this field is not available for `httpLogs`
	Level pulumi.StringInput `pulumi:"level"`
	// The number of days to retain logs for.
	RetentionInDays pulumi.IntInput `pulumi:"retentionInDays"`
	// The URL to the storage container with a shared access signature token appended.
	SasUrl pulumi.StringInput `pulumi:"sasUrl"`
}

func (AppServiceLogsApplicationLogsAzureBlobStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceLogsApplicationLogsAzureBlobStorage)(nil)).Elem()
}

func (i AppServiceLogsApplicationLogsAzureBlobStorageArgs) ToAppServiceLogsApplicationLogsAzureBlobStorageOutput() AppServiceLogsApplicationLogsAzureBlobStorageOutput {
	return i.ToAppServiceLogsApplicationLogsAzureBlobStorageOutputWithContext(context.Background())
}

func (i AppServiceLogsApplicationLogsAzureBlobStorageArgs) ToAppServiceLogsApplicationLogsAzureBlobStorageOutputWithContext(ctx context.Context) AppServiceLogsApplicationLogsAzureBlobStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceLogsApplicationLogsAzureBlobStorageOutput)
}

func (i AppServiceLogsApplicationLogsAzureBlobStorageArgs) ToAppServiceLogsApplicationLogsAzureBlobStoragePtrOutput() AppServiceLogsApplicationLogsAzureBlobStoragePtrOutput {
	return i.ToAppServiceLogsApplicationLogsAzureBlobStoragePtrOutputWithContext(context.Background())
}

func (i AppServiceLogsApplicationLogsAzureBlobStorageArgs) ToAppServiceLogsApplicationLogsAzureBlobStoragePtrOutputWithContext(ctx context.Context) AppServiceLogsApplicationLogsAzureBlobStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceLogsApplicationLogsAzureBlobStorageOutput).ToAppServiceLogsApplicationLogsAzureBlobStoragePtrOutputWithContext(ctx)
}

// AppServiceLogsApplicationLogsAzureBlobStoragePtrInput is an input type that accepts AppServiceLogsApplicationLogsAzureBlobStorageArgs, AppServiceLogsApplicationLogsAzureBlobStoragePtr and AppServiceLogsApplicationLogsAzureBlobStoragePtrOutput values.
// You can construct a concrete instance of `AppServiceLogsApplicationLogsAzureBlobStoragePtrInput` via:
//
//          AppServiceLogsApplicationLogsAzureBlobStorageArgs{...}
//
//  or:
//
//          nil
type AppServiceLogsApplicationLogsAzureBlobStoragePtrInput interface {
	pulumi.Input

	ToAppServiceLogsApplicationLogsAzureBlobStoragePtrOutput() AppServiceLogsApplicationLogsAzureBlobStoragePtrOutput
	ToAppServiceLogsApplicationLogsAzureBlobStoragePtrOutputWithContext(context.Context) AppServiceLogsApplicationLogsAzureBlobStoragePtrOutput
}

type appServiceLogsApplicationLogsAzureBlobStoragePtrType AppServiceLogsApplicationLogsAzureBlobStorageArgs

func AppServiceLogsApplicationLogsAzureBlobStoragePtr(v *AppServiceLogsApplicationLogsAzureBlobStorageArgs) AppServiceLogsApplicationLogsAzureBlobStoragePtrInput {
	return (*appServiceLogsApplicationLogsAzureBlobStoragePtrType)(v)
}

func (*appServiceLogsApplicationLogsAzureBlobStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceLogsApplicationLogsAzureBlobStorage)(nil)).Elem()
}

func (i *appServiceLogsApplicationLogsAzureBlobStoragePtrType) ToAppServiceLogsApplicationLogsAzureBlobStoragePtrOutput() AppServiceLogsApplicationLogsAzureBlobStoragePtrOutput {
	return i.ToAppServiceLogsApplicationLogsAzureBlobStoragePtrOutputWithContext(context.Background())
}

func (i *appServiceLogsApplicationLogsAzureBlobStoragePtrType) ToAppServiceLogsApplicationLogsAzureBlobStoragePtrOutputWithContext(ctx context.Context) AppServiceLogsApplicationLogsAzureBlobStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceLogsApplicationLogsAzureBlobStoragePtrOutput)
}

type AppServiceLogsApplicationLogsAzureBlobStorageOutput struct{ *pulumi.OutputState }

func (AppServiceLogsApplicationLogsAzureBlobStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceLogsApplicationLogsAzureBlobStorage)(nil)).Elem()
}

func (o AppServiceLogsApplicationLogsAzureBlobStorageOutput) ToAppServiceLogsApplicationLogsAzureBlobStorageOutput() AppServiceLogsApplicationLogsAzureBlobStorageOutput {
	return o
}

func (o AppServiceLogsApplicationLogsAzureBlobStorageOutput) ToAppServiceLogsApplicationLogsAzureBlobStorageOutputWithContext(ctx context.Context) AppServiceLogsApplicationLogsAzureBlobStorageOutput {
	return o
}

func (o AppServiceLogsApplicationLogsAzureBlobStorageOutput) ToAppServiceLogsApplicationLogsAzureBlobStoragePtrOutput() AppServiceLogsApplicationLogsAzureBlobStoragePtrOutput {
	return o.ToAppServiceLogsApplicationLogsAzureBlobStoragePtrOutputWithContext(context.Background())
}

func (o AppServiceLogsApplicationLogsAzureBlobStorageOutput) ToAppServiceLogsApplicationLogsAzureBlobStoragePtrOutputWithContext(ctx context.Context) AppServiceLogsApplicationLogsAzureBlobStoragePtrOutput {
	return o.ApplyT(func(v AppServiceLogsApplicationLogsAzureBlobStorage) *AppServiceLogsApplicationLogsAzureBlobStorage {
		return &v
	}).(AppServiceLogsApplicationLogsAzureBlobStoragePtrOutput)
}

// The level at which to log. Possible values include `Error`, `Warning`, `Information`, `Verbose` and `Off`. **NOTE:** this field is not available for `httpLogs`
func (o AppServiceLogsApplicationLogsAzureBlobStorageOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceLogsApplicationLogsAzureBlobStorage) string { return v.Level }).(pulumi.StringOutput)
}

// The number of days to retain logs for.
func (o AppServiceLogsApplicationLogsAzureBlobStorageOutput) RetentionInDays() pulumi.IntOutput {
	return o.ApplyT(func(v AppServiceLogsApplicationLogsAzureBlobStorage) int { return v.RetentionInDays }).(pulumi.IntOutput)
}

// The URL to the storage container with a shared access signature token appended.
func (o AppServiceLogsApplicationLogsAzureBlobStorageOutput) SasUrl() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceLogsApplicationLogsAzureBlobStorage) string { return v.SasUrl }).(pulumi.StringOutput)
}

type AppServiceLogsApplicationLogsAzureBlobStoragePtrOutput struct{ *pulumi.OutputState }

func (AppServiceLogsApplicationLogsAzureBlobStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceLogsApplicationLogsAzureBlobStorage)(nil)).Elem()
}

func (o AppServiceLogsApplicationLogsAzureBlobStoragePtrOutput) ToAppServiceLogsApplicationLogsAzureBlobStoragePtrOutput() AppServiceLogsApplicationLogsAzureBlobStoragePtrOutput {
	return o
}

func (o AppServiceLogsApplicationLogsAzureBlobStoragePtrOutput) ToAppServiceLogsApplicationLogsAzureBlobStoragePtrOutputWithContext(ctx context.Context) AppServiceLogsApplicationLogsAzureBlobStoragePtrOutput {
	return o
}

func (o AppServiceLogsApplicationLogsAzureBlobStoragePtrOutput) Elem() AppServiceLogsApplicationLogsAzureBlobStorageOutput {
	return o.ApplyT(func(v *AppServiceLogsApplicationLogsAzureBlobStorage) AppServiceLogsApplicationLogsAzureBlobStorage {
		return *v
	}).(AppServiceLogsApplicationLogsAzureBlobStorageOutput)
}

// The level at which to log. Possible values include `Error`, `Warning`, `Information`, `Verbose` and `Off`. **NOTE:** this field is not available for `httpLogs`
func (o AppServiceLogsApplicationLogsAzureBlobStoragePtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceLogsApplicationLogsAzureBlobStorage) *string {
		if v == nil {
			return nil
		}
		return &v.Level
	}).(pulumi.StringPtrOutput)
}

// The number of days to retain logs for.
func (o AppServiceLogsApplicationLogsAzureBlobStoragePtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceLogsApplicationLogsAzureBlobStorage) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

// The URL to the storage container with a shared access signature token appended.
func (o AppServiceLogsApplicationLogsAzureBlobStoragePtrOutput) SasUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceLogsApplicationLogsAzureBlobStorage) *string {
		if v == nil {
			return nil
		}
		return &v.SasUrl
	}).(pulumi.StringPtrOutput)
}

type AppServiceLogsHttpLogs struct {
	// An `azureBlobStorage` block as defined below.
	AzureBlobStorage *AppServiceLogsHttpLogsAzureBlobStorage `pulumi:"azureBlobStorage"`
	// A `fileSystem` block as defined below.
	FileSystem *AppServiceLogsHttpLogsFileSystem `pulumi:"fileSystem"`
}

// AppServiceLogsHttpLogsInput is an input type that accepts AppServiceLogsHttpLogsArgs and AppServiceLogsHttpLogsOutput values.
// You can construct a concrete instance of `AppServiceLogsHttpLogsInput` via:
//
//          AppServiceLogsHttpLogsArgs{...}
type AppServiceLogsHttpLogsInput interface {
	pulumi.Input

	ToAppServiceLogsHttpLogsOutput() AppServiceLogsHttpLogsOutput
	ToAppServiceLogsHttpLogsOutputWithContext(context.Context) AppServiceLogsHttpLogsOutput
}

type AppServiceLogsHttpLogsArgs struct {
	// An `azureBlobStorage` block as defined below.
	AzureBlobStorage AppServiceLogsHttpLogsAzureBlobStoragePtrInput `pulumi:"azureBlobStorage"`
	// A `fileSystem` block as defined below.
	FileSystem AppServiceLogsHttpLogsFileSystemPtrInput `pulumi:"fileSystem"`
}

func (AppServiceLogsHttpLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceLogsHttpLogs)(nil)).Elem()
}

func (i AppServiceLogsHttpLogsArgs) ToAppServiceLogsHttpLogsOutput() AppServiceLogsHttpLogsOutput {
	return i.ToAppServiceLogsHttpLogsOutputWithContext(context.Background())
}

func (i AppServiceLogsHttpLogsArgs) ToAppServiceLogsHttpLogsOutputWithContext(ctx context.Context) AppServiceLogsHttpLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceLogsHttpLogsOutput)
}

func (i AppServiceLogsHttpLogsArgs) ToAppServiceLogsHttpLogsPtrOutput() AppServiceLogsHttpLogsPtrOutput {
	return i.ToAppServiceLogsHttpLogsPtrOutputWithContext(context.Background())
}

func (i AppServiceLogsHttpLogsArgs) ToAppServiceLogsHttpLogsPtrOutputWithContext(ctx context.Context) AppServiceLogsHttpLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceLogsHttpLogsOutput).ToAppServiceLogsHttpLogsPtrOutputWithContext(ctx)
}

// AppServiceLogsHttpLogsPtrInput is an input type that accepts AppServiceLogsHttpLogsArgs, AppServiceLogsHttpLogsPtr and AppServiceLogsHttpLogsPtrOutput values.
// You can construct a concrete instance of `AppServiceLogsHttpLogsPtrInput` via:
//
//          AppServiceLogsHttpLogsArgs{...}
//
//  or:
//
//          nil
type AppServiceLogsHttpLogsPtrInput interface {
	pulumi.Input

	ToAppServiceLogsHttpLogsPtrOutput() AppServiceLogsHttpLogsPtrOutput
	ToAppServiceLogsHttpLogsPtrOutputWithContext(context.Context) AppServiceLogsHttpLogsPtrOutput
}

type appServiceLogsHttpLogsPtrType AppServiceLogsHttpLogsArgs

func AppServiceLogsHttpLogsPtr(v *AppServiceLogsHttpLogsArgs) AppServiceLogsHttpLogsPtrInput {
	return (*appServiceLogsHttpLogsPtrType)(v)
}

func (*appServiceLogsHttpLogsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceLogsHttpLogs)(nil)).Elem()
}

func (i *appServiceLogsHttpLogsPtrType) ToAppServiceLogsHttpLogsPtrOutput() AppServiceLogsHttpLogsPtrOutput {
	return i.ToAppServiceLogsHttpLogsPtrOutputWithContext(context.Background())
}

func (i *appServiceLogsHttpLogsPtrType) ToAppServiceLogsHttpLogsPtrOutputWithContext(ctx context.Context) AppServiceLogsHttpLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceLogsHttpLogsPtrOutput)
}

type AppServiceLogsHttpLogsOutput struct{ *pulumi.OutputState }

func (AppServiceLogsHttpLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceLogsHttpLogs)(nil)).Elem()
}

func (o AppServiceLogsHttpLogsOutput) ToAppServiceLogsHttpLogsOutput() AppServiceLogsHttpLogsOutput {
	return o
}

func (o AppServiceLogsHttpLogsOutput) ToAppServiceLogsHttpLogsOutputWithContext(ctx context.Context) AppServiceLogsHttpLogsOutput {
	return o
}

func (o AppServiceLogsHttpLogsOutput) ToAppServiceLogsHttpLogsPtrOutput() AppServiceLogsHttpLogsPtrOutput {
	return o.ToAppServiceLogsHttpLogsPtrOutputWithContext(context.Background())
}

func (o AppServiceLogsHttpLogsOutput) ToAppServiceLogsHttpLogsPtrOutputWithContext(ctx context.Context) AppServiceLogsHttpLogsPtrOutput {
	return o.ApplyT(func(v AppServiceLogsHttpLogs) *AppServiceLogsHttpLogs {
		return &v
	}).(AppServiceLogsHttpLogsPtrOutput)
}

// An `azureBlobStorage` block as defined below.
func (o AppServiceLogsHttpLogsOutput) AzureBlobStorage() AppServiceLogsHttpLogsAzureBlobStoragePtrOutput {
	return o.ApplyT(func(v AppServiceLogsHttpLogs) *AppServiceLogsHttpLogsAzureBlobStorage { return v.AzureBlobStorage }).(AppServiceLogsHttpLogsAzureBlobStoragePtrOutput)
}

// A `fileSystem` block as defined below.
func (o AppServiceLogsHttpLogsOutput) FileSystem() AppServiceLogsHttpLogsFileSystemPtrOutput {
	return o.ApplyT(func(v AppServiceLogsHttpLogs) *AppServiceLogsHttpLogsFileSystem { return v.FileSystem }).(AppServiceLogsHttpLogsFileSystemPtrOutput)
}

type AppServiceLogsHttpLogsPtrOutput struct{ *pulumi.OutputState }

func (AppServiceLogsHttpLogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceLogsHttpLogs)(nil)).Elem()
}

func (o AppServiceLogsHttpLogsPtrOutput) ToAppServiceLogsHttpLogsPtrOutput() AppServiceLogsHttpLogsPtrOutput {
	return o
}

func (o AppServiceLogsHttpLogsPtrOutput) ToAppServiceLogsHttpLogsPtrOutputWithContext(ctx context.Context) AppServiceLogsHttpLogsPtrOutput {
	return o
}

func (o AppServiceLogsHttpLogsPtrOutput) Elem() AppServiceLogsHttpLogsOutput {
	return o.ApplyT(func(v *AppServiceLogsHttpLogs) AppServiceLogsHttpLogs { return *v }).(AppServiceLogsHttpLogsOutput)
}

// An `azureBlobStorage` block as defined below.
func (o AppServiceLogsHttpLogsPtrOutput) AzureBlobStorage() AppServiceLogsHttpLogsAzureBlobStoragePtrOutput {
	return o.ApplyT(func(v *AppServiceLogsHttpLogs) *AppServiceLogsHttpLogsAzureBlobStorage {
		if v == nil {
			return nil
		}
		return v.AzureBlobStorage
	}).(AppServiceLogsHttpLogsAzureBlobStoragePtrOutput)
}

// A `fileSystem` block as defined below.
func (o AppServiceLogsHttpLogsPtrOutput) FileSystem() AppServiceLogsHttpLogsFileSystemPtrOutput {
	return o.ApplyT(func(v *AppServiceLogsHttpLogs) *AppServiceLogsHttpLogsFileSystem {
		if v == nil {
			return nil
		}
		return v.FileSystem
	}).(AppServiceLogsHttpLogsFileSystemPtrOutput)
}

type AppServiceLogsHttpLogsAzureBlobStorage struct {
	// The number of days to retain logs for.
	RetentionInDays int `pulumi:"retentionInDays"`
	// The URL to the storage container with a shared access signature token appended.
	SasUrl string `pulumi:"sasUrl"`
}

// AppServiceLogsHttpLogsAzureBlobStorageInput is an input type that accepts AppServiceLogsHttpLogsAzureBlobStorageArgs and AppServiceLogsHttpLogsAzureBlobStorageOutput values.
// You can construct a concrete instance of `AppServiceLogsHttpLogsAzureBlobStorageInput` via:
//
//          AppServiceLogsHttpLogsAzureBlobStorageArgs{...}
type AppServiceLogsHttpLogsAzureBlobStorageInput interface {
	pulumi.Input

	ToAppServiceLogsHttpLogsAzureBlobStorageOutput() AppServiceLogsHttpLogsAzureBlobStorageOutput
	ToAppServiceLogsHttpLogsAzureBlobStorageOutputWithContext(context.Context) AppServiceLogsHttpLogsAzureBlobStorageOutput
}

type AppServiceLogsHttpLogsAzureBlobStorageArgs struct {
	// The number of days to retain logs for.
	RetentionInDays pulumi.IntInput `pulumi:"retentionInDays"`
	// The URL to the storage container with a shared access signature token appended.
	SasUrl pulumi.StringInput `pulumi:"sasUrl"`
}

func (AppServiceLogsHttpLogsAzureBlobStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceLogsHttpLogsAzureBlobStorage)(nil)).Elem()
}

func (i AppServiceLogsHttpLogsAzureBlobStorageArgs) ToAppServiceLogsHttpLogsAzureBlobStorageOutput() AppServiceLogsHttpLogsAzureBlobStorageOutput {
	return i.ToAppServiceLogsHttpLogsAzureBlobStorageOutputWithContext(context.Background())
}

func (i AppServiceLogsHttpLogsAzureBlobStorageArgs) ToAppServiceLogsHttpLogsAzureBlobStorageOutputWithContext(ctx context.Context) AppServiceLogsHttpLogsAzureBlobStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceLogsHttpLogsAzureBlobStorageOutput)
}

func (i AppServiceLogsHttpLogsAzureBlobStorageArgs) ToAppServiceLogsHttpLogsAzureBlobStoragePtrOutput() AppServiceLogsHttpLogsAzureBlobStoragePtrOutput {
	return i.ToAppServiceLogsHttpLogsAzureBlobStoragePtrOutputWithContext(context.Background())
}

func (i AppServiceLogsHttpLogsAzureBlobStorageArgs) ToAppServiceLogsHttpLogsAzureBlobStoragePtrOutputWithContext(ctx context.Context) AppServiceLogsHttpLogsAzureBlobStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceLogsHttpLogsAzureBlobStorageOutput).ToAppServiceLogsHttpLogsAzureBlobStoragePtrOutputWithContext(ctx)
}

// AppServiceLogsHttpLogsAzureBlobStoragePtrInput is an input type that accepts AppServiceLogsHttpLogsAzureBlobStorageArgs, AppServiceLogsHttpLogsAzureBlobStoragePtr and AppServiceLogsHttpLogsAzureBlobStoragePtrOutput values.
// You can construct a concrete instance of `AppServiceLogsHttpLogsAzureBlobStoragePtrInput` via:
//
//          AppServiceLogsHttpLogsAzureBlobStorageArgs{...}
//
//  or:
//
//          nil
type AppServiceLogsHttpLogsAzureBlobStoragePtrInput interface {
	pulumi.Input

	ToAppServiceLogsHttpLogsAzureBlobStoragePtrOutput() AppServiceLogsHttpLogsAzureBlobStoragePtrOutput
	ToAppServiceLogsHttpLogsAzureBlobStoragePtrOutputWithContext(context.Context) AppServiceLogsHttpLogsAzureBlobStoragePtrOutput
}

type appServiceLogsHttpLogsAzureBlobStoragePtrType AppServiceLogsHttpLogsAzureBlobStorageArgs

func AppServiceLogsHttpLogsAzureBlobStoragePtr(v *AppServiceLogsHttpLogsAzureBlobStorageArgs) AppServiceLogsHttpLogsAzureBlobStoragePtrInput {
	return (*appServiceLogsHttpLogsAzureBlobStoragePtrType)(v)
}

func (*appServiceLogsHttpLogsAzureBlobStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceLogsHttpLogsAzureBlobStorage)(nil)).Elem()
}

func (i *appServiceLogsHttpLogsAzureBlobStoragePtrType) ToAppServiceLogsHttpLogsAzureBlobStoragePtrOutput() AppServiceLogsHttpLogsAzureBlobStoragePtrOutput {
	return i.ToAppServiceLogsHttpLogsAzureBlobStoragePtrOutputWithContext(context.Background())
}

func (i *appServiceLogsHttpLogsAzureBlobStoragePtrType) ToAppServiceLogsHttpLogsAzureBlobStoragePtrOutputWithContext(ctx context.Context) AppServiceLogsHttpLogsAzureBlobStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceLogsHttpLogsAzureBlobStoragePtrOutput)
}

type AppServiceLogsHttpLogsAzureBlobStorageOutput struct{ *pulumi.OutputState }

func (AppServiceLogsHttpLogsAzureBlobStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceLogsHttpLogsAzureBlobStorage)(nil)).Elem()
}

func (o AppServiceLogsHttpLogsAzureBlobStorageOutput) ToAppServiceLogsHttpLogsAzureBlobStorageOutput() AppServiceLogsHttpLogsAzureBlobStorageOutput {
	return o
}

func (o AppServiceLogsHttpLogsAzureBlobStorageOutput) ToAppServiceLogsHttpLogsAzureBlobStorageOutputWithContext(ctx context.Context) AppServiceLogsHttpLogsAzureBlobStorageOutput {
	return o
}

func (o AppServiceLogsHttpLogsAzureBlobStorageOutput) ToAppServiceLogsHttpLogsAzureBlobStoragePtrOutput() AppServiceLogsHttpLogsAzureBlobStoragePtrOutput {
	return o.ToAppServiceLogsHttpLogsAzureBlobStoragePtrOutputWithContext(context.Background())
}

func (o AppServiceLogsHttpLogsAzureBlobStorageOutput) ToAppServiceLogsHttpLogsAzureBlobStoragePtrOutputWithContext(ctx context.Context) AppServiceLogsHttpLogsAzureBlobStoragePtrOutput {
	return o.ApplyT(func(v AppServiceLogsHttpLogsAzureBlobStorage) *AppServiceLogsHttpLogsAzureBlobStorage {
		return &v
	}).(AppServiceLogsHttpLogsAzureBlobStoragePtrOutput)
}

// The number of days to retain logs for.
func (o AppServiceLogsHttpLogsAzureBlobStorageOutput) RetentionInDays() pulumi.IntOutput {
	return o.ApplyT(func(v AppServiceLogsHttpLogsAzureBlobStorage) int { return v.RetentionInDays }).(pulumi.IntOutput)
}

// The URL to the storage container with a shared access signature token appended.
func (o AppServiceLogsHttpLogsAzureBlobStorageOutput) SasUrl() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceLogsHttpLogsAzureBlobStorage) string { return v.SasUrl }).(pulumi.StringOutput)
}

type AppServiceLogsHttpLogsAzureBlobStoragePtrOutput struct{ *pulumi.OutputState }

func (AppServiceLogsHttpLogsAzureBlobStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceLogsHttpLogsAzureBlobStorage)(nil)).Elem()
}

func (o AppServiceLogsHttpLogsAzureBlobStoragePtrOutput) ToAppServiceLogsHttpLogsAzureBlobStoragePtrOutput() AppServiceLogsHttpLogsAzureBlobStoragePtrOutput {
	return o
}

func (o AppServiceLogsHttpLogsAzureBlobStoragePtrOutput) ToAppServiceLogsHttpLogsAzureBlobStoragePtrOutputWithContext(ctx context.Context) AppServiceLogsHttpLogsAzureBlobStoragePtrOutput {
	return o
}

func (o AppServiceLogsHttpLogsAzureBlobStoragePtrOutput) Elem() AppServiceLogsHttpLogsAzureBlobStorageOutput {
	return o.ApplyT(func(v *AppServiceLogsHttpLogsAzureBlobStorage) AppServiceLogsHttpLogsAzureBlobStorage { return *v }).(AppServiceLogsHttpLogsAzureBlobStorageOutput)
}

// The number of days to retain logs for.
func (o AppServiceLogsHttpLogsAzureBlobStoragePtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceLogsHttpLogsAzureBlobStorage) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

// The URL to the storage container with a shared access signature token appended.
func (o AppServiceLogsHttpLogsAzureBlobStoragePtrOutput) SasUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceLogsHttpLogsAzureBlobStorage) *string {
		if v == nil {
			return nil
		}
		return &v.SasUrl
	}).(pulumi.StringPtrOutput)
}

type AppServiceLogsHttpLogsFileSystem struct {
	// The number of days to retain logs for.
	RetentionInDays int `pulumi:"retentionInDays"`
	// The maximum size in megabytes that http log files can use before being removed.
	RetentionInMb int `pulumi:"retentionInMb"`
}

// AppServiceLogsHttpLogsFileSystemInput is an input type that accepts AppServiceLogsHttpLogsFileSystemArgs and AppServiceLogsHttpLogsFileSystemOutput values.
// You can construct a concrete instance of `AppServiceLogsHttpLogsFileSystemInput` via:
//
//          AppServiceLogsHttpLogsFileSystemArgs{...}
type AppServiceLogsHttpLogsFileSystemInput interface {
	pulumi.Input

	ToAppServiceLogsHttpLogsFileSystemOutput() AppServiceLogsHttpLogsFileSystemOutput
	ToAppServiceLogsHttpLogsFileSystemOutputWithContext(context.Context) AppServiceLogsHttpLogsFileSystemOutput
}

type AppServiceLogsHttpLogsFileSystemArgs struct {
	// The number of days to retain logs for.
	RetentionInDays pulumi.IntInput `pulumi:"retentionInDays"`
	// The maximum size in megabytes that http log files can use before being removed.
	RetentionInMb pulumi.IntInput `pulumi:"retentionInMb"`
}

func (AppServiceLogsHttpLogsFileSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceLogsHttpLogsFileSystem)(nil)).Elem()
}

func (i AppServiceLogsHttpLogsFileSystemArgs) ToAppServiceLogsHttpLogsFileSystemOutput() AppServiceLogsHttpLogsFileSystemOutput {
	return i.ToAppServiceLogsHttpLogsFileSystemOutputWithContext(context.Background())
}

func (i AppServiceLogsHttpLogsFileSystemArgs) ToAppServiceLogsHttpLogsFileSystemOutputWithContext(ctx context.Context) AppServiceLogsHttpLogsFileSystemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceLogsHttpLogsFileSystemOutput)
}

func (i AppServiceLogsHttpLogsFileSystemArgs) ToAppServiceLogsHttpLogsFileSystemPtrOutput() AppServiceLogsHttpLogsFileSystemPtrOutput {
	return i.ToAppServiceLogsHttpLogsFileSystemPtrOutputWithContext(context.Background())
}

func (i AppServiceLogsHttpLogsFileSystemArgs) ToAppServiceLogsHttpLogsFileSystemPtrOutputWithContext(ctx context.Context) AppServiceLogsHttpLogsFileSystemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceLogsHttpLogsFileSystemOutput).ToAppServiceLogsHttpLogsFileSystemPtrOutputWithContext(ctx)
}

// AppServiceLogsHttpLogsFileSystemPtrInput is an input type that accepts AppServiceLogsHttpLogsFileSystemArgs, AppServiceLogsHttpLogsFileSystemPtr and AppServiceLogsHttpLogsFileSystemPtrOutput values.
// You can construct a concrete instance of `AppServiceLogsHttpLogsFileSystemPtrInput` via:
//
//          AppServiceLogsHttpLogsFileSystemArgs{...}
//
//  or:
//
//          nil
type AppServiceLogsHttpLogsFileSystemPtrInput interface {
	pulumi.Input

	ToAppServiceLogsHttpLogsFileSystemPtrOutput() AppServiceLogsHttpLogsFileSystemPtrOutput
	ToAppServiceLogsHttpLogsFileSystemPtrOutputWithContext(context.Context) AppServiceLogsHttpLogsFileSystemPtrOutput
}

type appServiceLogsHttpLogsFileSystemPtrType AppServiceLogsHttpLogsFileSystemArgs

func AppServiceLogsHttpLogsFileSystemPtr(v *AppServiceLogsHttpLogsFileSystemArgs) AppServiceLogsHttpLogsFileSystemPtrInput {
	return (*appServiceLogsHttpLogsFileSystemPtrType)(v)
}

func (*appServiceLogsHttpLogsFileSystemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceLogsHttpLogsFileSystem)(nil)).Elem()
}

func (i *appServiceLogsHttpLogsFileSystemPtrType) ToAppServiceLogsHttpLogsFileSystemPtrOutput() AppServiceLogsHttpLogsFileSystemPtrOutput {
	return i.ToAppServiceLogsHttpLogsFileSystemPtrOutputWithContext(context.Background())
}

func (i *appServiceLogsHttpLogsFileSystemPtrType) ToAppServiceLogsHttpLogsFileSystemPtrOutputWithContext(ctx context.Context) AppServiceLogsHttpLogsFileSystemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceLogsHttpLogsFileSystemPtrOutput)
}

type AppServiceLogsHttpLogsFileSystemOutput struct{ *pulumi.OutputState }

func (AppServiceLogsHttpLogsFileSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceLogsHttpLogsFileSystem)(nil)).Elem()
}

func (o AppServiceLogsHttpLogsFileSystemOutput) ToAppServiceLogsHttpLogsFileSystemOutput() AppServiceLogsHttpLogsFileSystemOutput {
	return o
}

func (o AppServiceLogsHttpLogsFileSystemOutput) ToAppServiceLogsHttpLogsFileSystemOutputWithContext(ctx context.Context) AppServiceLogsHttpLogsFileSystemOutput {
	return o
}

func (o AppServiceLogsHttpLogsFileSystemOutput) ToAppServiceLogsHttpLogsFileSystemPtrOutput() AppServiceLogsHttpLogsFileSystemPtrOutput {
	return o.ToAppServiceLogsHttpLogsFileSystemPtrOutputWithContext(context.Background())
}

func (o AppServiceLogsHttpLogsFileSystemOutput) ToAppServiceLogsHttpLogsFileSystemPtrOutputWithContext(ctx context.Context) AppServiceLogsHttpLogsFileSystemPtrOutput {
	return o.ApplyT(func(v AppServiceLogsHttpLogsFileSystem) *AppServiceLogsHttpLogsFileSystem {
		return &v
	}).(AppServiceLogsHttpLogsFileSystemPtrOutput)
}

// The number of days to retain logs for.
func (o AppServiceLogsHttpLogsFileSystemOutput) RetentionInDays() pulumi.IntOutput {
	return o.ApplyT(func(v AppServiceLogsHttpLogsFileSystem) int { return v.RetentionInDays }).(pulumi.IntOutput)
}

// The maximum size in megabytes that http log files can use before being removed.
func (o AppServiceLogsHttpLogsFileSystemOutput) RetentionInMb() pulumi.IntOutput {
	return o.ApplyT(func(v AppServiceLogsHttpLogsFileSystem) int { return v.RetentionInMb }).(pulumi.IntOutput)
}

type AppServiceLogsHttpLogsFileSystemPtrOutput struct{ *pulumi.OutputState }

func (AppServiceLogsHttpLogsFileSystemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceLogsHttpLogsFileSystem)(nil)).Elem()
}

func (o AppServiceLogsHttpLogsFileSystemPtrOutput) ToAppServiceLogsHttpLogsFileSystemPtrOutput() AppServiceLogsHttpLogsFileSystemPtrOutput {
	return o
}

func (o AppServiceLogsHttpLogsFileSystemPtrOutput) ToAppServiceLogsHttpLogsFileSystemPtrOutputWithContext(ctx context.Context) AppServiceLogsHttpLogsFileSystemPtrOutput {
	return o
}

func (o AppServiceLogsHttpLogsFileSystemPtrOutput) Elem() AppServiceLogsHttpLogsFileSystemOutput {
	return o.ApplyT(func(v *AppServiceLogsHttpLogsFileSystem) AppServiceLogsHttpLogsFileSystem { return *v }).(AppServiceLogsHttpLogsFileSystemOutput)
}

// The number of days to retain logs for.
func (o AppServiceLogsHttpLogsFileSystemPtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceLogsHttpLogsFileSystem) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

// The maximum size in megabytes that http log files can use before being removed.
func (o AppServiceLogsHttpLogsFileSystemPtrOutput) RetentionInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceLogsHttpLogsFileSystem) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionInMb
	}).(pulumi.IntPtrOutput)
}

type AppServiceSiteConfig struct {
	// Should the app be loaded at all times? Defaults to `false`.
	AlwaysOn *bool `pulumi:"alwaysOn"`
	// App command line to launch, e.g. `/sbin/myserver -b 0.0.0.0`.
	AppCommandLine   *string `pulumi:"appCommandLine"`
	AutoSwapSlotName *string `pulumi:"autoSwapSlotName"`
	// A `cors` block as defined below.
	Cors *AppServiceSiteConfigCors `pulumi:"cors"`
	// The ordering of default documents to load, if an address isn't specified.
	DefaultDocuments []string `pulumi:"defaultDocuments"`
	// The version of the .net framework's CLR used in this App Service. Possible values are `v2.0` (which will use the latest version of the .net framework for the .net CLR v2 - currently `.net 3.5`), `v4.0` (which corresponds to the latest version of the .net CLR v4 - which at the time of writing is `.net 4.7.1`) and `v5.0`. [For more information on which .net CLR version to use based on the .net framework you're targeting - please see this table](https://en.wikipedia.org/wiki/.NET_Framework_version_history#Overview). Defaults to `v4.0`.
	DotnetFrameworkVersion *string `pulumi:"dotnetFrameworkVersion"`
	// State of FTP / FTPS service for this App Service. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`.
	FtpsState *string `pulumi:"ftpsState"`
	// The health check path to be pinged by App Service. [For more information - please see App Service health check announcement](https://azure.github.io/AppService/2020/08/24/healthcheck-on-app-service.html).
	HealthCheckPath *string `pulumi:"healthCheckPath"`
	// Is HTTP2 Enabled on this App Service? Defaults to `false`.
	Http2Enabled *bool `pulumi:"http2Enabled"`
	// A list of objects representing ip restrictions as defined below.
	IpRestrictions []AppServiceSiteConfigIpRestriction `pulumi:"ipRestrictions"`
	// The Java Container to use. If specified `javaVersion` and `javaContainerVersion` must also be specified. Possible values are `JAVA`, `JETTY`, and `TOMCAT`.
	JavaContainer *string `pulumi:"javaContainer"`
	// The version of the Java Container to use. If specified `javaVersion` and `javaContainer` must also be specified.
	JavaContainerVersion *string `pulumi:"javaContainerVersion"`
	// The version of Java to use. If specified `javaContainer` and `javaContainerVersion` must also be specified. Possible values are `1.7`, `1.8` and `11` and their specific versions - except for Java 11 (e.g. `1.7.0_80`, `1.8.0_181`, `11`)
	JavaVersion *string `pulumi:"javaVersion"`
	// Linux App Framework and version for the App Service. Possible options are a Docker container (`DOCKER|<user/image:tag>`), a base-64 encoded Docker Compose file (`COMPOSE|${filebase64("compose.yml")}`) or a base-64 encoded Kubernetes Manifest (`KUBE|${filebase64("kubernetes.yml")}`).
	LinuxFxVersion *string `pulumi:"linuxFxVersion"`
	// Is "MySQL In App" Enabled? This runs a local MySQL instance with your app and shares resources from the App Service plan.
	LocalMysqlEnabled *bool `pulumi:"localMysqlEnabled"`
	// The Managed Pipeline Mode. Possible values are `Integrated` and `Classic`. Defaults to `Integrated`.
	ManagedPipelineMode *string `pulumi:"managedPipelineMode"`
	// The minimum supported TLS version for the app service. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new app services.
	MinTlsVersion *string `pulumi:"minTlsVersion"`
	// The scaled number of workers (for per site scaling) of this App Service. Requires that `perSiteScaling` is enabled on the `appservice.Plan`. [For more information - please see Microsoft documentation on high-density hosting](https://docs.microsoft.com/en-us/azure/app-service/manage-scale-per-app).
	NumberOfWorkers *int `pulumi:"numberOfWorkers"`
	// The version of PHP to use in this App Service. Possible values are `5.5`, `5.6`, `7.0`, `7.1`, `7.2`, `7.3` and `7.4`.
	PhpVersion *string `pulumi:"phpVersion"`
	// The version of Python to use in this App Service. Possible values are `2.7` and `3.4`.
	PythonVersion *string `pulumi:"pythonVersion"`
	// Is Remote Debugging Enabled? Defaults to `false`.
	RemoteDebuggingEnabled *bool `pulumi:"remoteDebuggingEnabled"`
	// Which version of Visual Studio should the Remote Debugger be compatible with? Possible values are `VS2012`, `VS2013`, `VS2015` and `VS2017`.
	RemoteDebuggingVersion *string `pulumi:"remoteDebuggingVersion"`
	// A [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing ip restrictions as defined below.
	ScmIpRestrictions []AppServiceSiteConfigScmIpRestriction `pulumi:"scmIpRestrictions"`
	// The type of Source Control enabled for this App Service. Defaults to `None`. Possible values are: `BitbucketGit`, `BitbucketHg`, `CodePlexGit`, `CodePlexHg`, `Dropbox`, `ExternalGit`, `ExternalHg`, `GitHub`, `LocalGit`, `None`, `OneDrive`, `Tfs`, `VSO`, and `VSTSRM`
	ScmType *string `pulumi:"scmType"`
	// IP security restrictions for scm to use main. Defaults to false.
	ScmUseMainIpRestriction *bool `pulumi:"scmUseMainIpRestriction"`
	// Should the App Service run in 32 bit mode, rather than 64 bit mode?
	Use32BitWorkerProcess *bool `pulumi:"use32BitWorkerProcess"`
	// Should WebSockets be enabled?
	WebsocketsEnabled *bool `pulumi:"websocketsEnabled"`
	// The Windows Docker container image (`DOCKER|<user/image:tag>`)
	WindowsFxVersion *string `pulumi:"windowsFxVersion"`
}

// AppServiceSiteConfigInput is an input type that accepts AppServiceSiteConfigArgs and AppServiceSiteConfigOutput values.
// You can construct a concrete instance of `AppServiceSiteConfigInput` via:
//
//          AppServiceSiteConfigArgs{...}
type AppServiceSiteConfigInput interface {
	pulumi.Input

	ToAppServiceSiteConfigOutput() AppServiceSiteConfigOutput
	ToAppServiceSiteConfigOutputWithContext(context.Context) AppServiceSiteConfigOutput
}

type AppServiceSiteConfigArgs struct {
	// Should the app be loaded at all times? Defaults to `false`.
	AlwaysOn pulumi.BoolPtrInput `pulumi:"alwaysOn"`
	// App command line to launch, e.g. `/sbin/myserver -b 0.0.0.0`.
	AppCommandLine   pulumi.StringPtrInput `pulumi:"appCommandLine"`
	AutoSwapSlotName pulumi.StringPtrInput `pulumi:"autoSwapSlotName"`
	// A `cors` block as defined below.
	Cors AppServiceSiteConfigCorsPtrInput `pulumi:"cors"`
	// The ordering of default documents to load, if an address isn't specified.
	DefaultDocuments pulumi.StringArrayInput `pulumi:"defaultDocuments"`
	// The version of the .net framework's CLR used in this App Service. Possible values are `v2.0` (which will use the latest version of the .net framework for the .net CLR v2 - currently `.net 3.5`), `v4.0` (which corresponds to the latest version of the .net CLR v4 - which at the time of writing is `.net 4.7.1`) and `v5.0`. [For more information on which .net CLR version to use based on the .net framework you're targeting - please see this table](https://en.wikipedia.org/wiki/.NET_Framework_version_history#Overview). Defaults to `v4.0`.
	DotnetFrameworkVersion pulumi.StringPtrInput `pulumi:"dotnetFrameworkVersion"`
	// State of FTP / FTPS service for this App Service. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`.
	FtpsState pulumi.StringPtrInput `pulumi:"ftpsState"`
	// The health check path to be pinged by App Service. [For more information - please see App Service health check announcement](https://azure.github.io/AppService/2020/08/24/healthcheck-on-app-service.html).
	HealthCheckPath pulumi.StringPtrInput `pulumi:"healthCheckPath"`
	// Is HTTP2 Enabled on this App Service? Defaults to `false`.
	Http2Enabled pulumi.BoolPtrInput `pulumi:"http2Enabled"`
	// A list of objects representing ip restrictions as defined below.
	IpRestrictions AppServiceSiteConfigIpRestrictionArrayInput `pulumi:"ipRestrictions"`
	// The Java Container to use. If specified `javaVersion` and `javaContainerVersion` must also be specified. Possible values are `JAVA`, `JETTY`, and `TOMCAT`.
	JavaContainer pulumi.StringPtrInput `pulumi:"javaContainer"`
	// The version of the Java Container to use. If specified `javaVersion` and `javaContainer` must also be specified.
	JavaContainerVersion pulumi.StringPtrInput `pulumi:"javaContainerVersion"`
	// The version of Java to use. If specified `javaContainer` and `javaContainerVersion` must also be specified. Possible values are `1.7`, `1.8` and `11` and their specific versions - except for Java 11 (e.g. `1.7.0_80`, `1.8.0_181`, `11`)
	JavaVersion pulumi.StringPtrInput `pulumi:"javaVersion"`
	// Linux App Framework and version for the App Service. Possible options are a Docker container (`DOCKER|<user/image:tag>`), a base-64 encoded Docker Compose file (`COMPOSE|${filebase64("compose.yml")}`) or a base-64 encoded Kubernetes Manifest (`KUBE|${filebase64("kubernetes.yml")}`).
	LinuxFxVersion pulumi.StringPtrInput `pulumi:"linuxFxVersion"`
	// Is "MySQL In App" Enabled? This runs a local MySQL instance with your app and shares resources from the App Service plan.
	LocalMysqlEnabled pulumi.BoolPtrInput `pulumi:"localMysqlEnabled"`
	// The Managed Pipeline Mode. Possible values are `Integrated` and `Classic`. Defaults to `Integrated`.
	ManagedPipelineMode pulumi.StringPtrInput `pulumi:"managedPipelineMode"`
	// The minimum supported TLS version for the app service. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new app services.
	MinTlsVersion pulumi.StringPtrInput `pulumi:"minTlsVersion"`
	// The scaled number of workers (for per site scaling) of this App Service. Requires that `perSiteScaling` is enabled on the `appservice.Plan`. [For more information - please see Microsoft documentation on high-density hosting](https://docs.microsoft.com/en-us/azure/app-service/manage-scale-per-app).
	NumberOfWorkers pulumi.IntPtrInput `pulumi:"numberOfWorkers"`
	// The version of PHP to use in this App Service. Possible values are `5.5`, `5.6`, `7.0`, `7.1`, `7.2`, `7.3` and `7.4`.
	PhpVersion pulumi.StringPtrInput `pulumi:"phpVersion"`
	// The version of Python to use in this App Service. Possible values are `2.7` and `3.4`.
	PythonVersion pulumi.StringPtrInput `pulumi:"pythonVersion"`
	// Is Remote Debugging Enabled? Defaults to `false`.
	RemoteDebuggingEnabled pulumi.BoolPtrInput `pulumi:"remoteDebuggingEnabled"`
	// Which version of Visual Studio should the Remote Debugger be compatible with? Possible values are `VS2012`, `VS2013`, `VS2015` and `VS2017`.
	RemoteDebuggingVersion pulumi.StringPtrInput `pulumi:"remoteDebuggingVersion"`
	// A [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing ip restrictions as defined below.
	ScmIpRestrictions AppServiceSiteConfigScmIpRestrictionArrayInput `pulumi:"scmIpRestrictions"`
	// The type of Source Control enabled for this App Service. Defaults to `None`. Possible values are: `BitbucketGit`, `BitbucketHg`, `CodePlexGit`, `CodePlexHg`, `Dropbox`, `ExternalGit`, `ExternalHg`, `GitHub`, `LocalGit`, `None`, `OneDrive`, `Tfs`, `VSO`, and `VSTSRM`
	ScmType pulumi.StringPtrInput `pulumi:"scmType"`
	// IP security restrictions for scm to use main. Defaults to false.
	ScmUseMainIpRestriction pulumi.BoolPtrInput `pulumi:"scmUseMainIpRestriction"`
	// Should the App Service run in 32 bit mode, rather than 64 bit mode?
	Use32BitWorkerProcess pulumi.BoolPtrInput `pulumi:"use32BitWorkerProcess"`
	// Should WebSockets be enabled?
	WebsocketsEnabled pulumi.BoolPtrInput `pulumi:"websocketsEnabled"`
	// The Windows Docker container image (`DOCKER|<user/image:tag>`)
	WindowsFxVersion pulumi.StringPtrInput `pulumi:"windowsFxVersion"`
}

func (AppServiceSiteConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceSiteConfig)(nil)).Elem()
}

func (i AppServiceSiteConfigArgs) ToAppServiceSiteConfigOutput() AppServiceSiteConfigOutput {
	return i.ToAppServiceSiteConfigOutputWithContext(context.Background())
}

func (i AppServiceSiteConfigArgs) ToAppServiceSiteConfigOutputWithContext(ctx context.Context) AppServiceSiteConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceSiteConfigOutput)
}

func (i AppServiceSiteConfigArgs) ToAppServiceSiteConfigPtrOutput() AppServiceSiteConfigPtrOutput {
	return i.ToAppServiceSiteConfigPtrOutputWithContext(context.Background())
}

func (i AppServiceSiteConfigArgs) ToAppServiceSiteConfigPtrOutputWithContext(ctx context.Context) AppServiceSiteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceSiteConfigOutput).ToAppServiceSiteConfigPtrOutputWithContext(ctx)
}

// AppServiceSiteConfigPtrInput is an input type that accepts AppServiceSiteConfigArgs, AppServiceSiteConfigPtr and AppServiceSiteConfigPtrOutput values.
// You can construct a concrete instance of `AppServiceSiteConfigPtrInput` via:
//
//          AppServiceSiteConfigArgs{...}
//
//  or:
//
//          nil
type AppServiceSiteConfigPtrInput interface {
	pulumi.Input

	ToAppServiceSiteConfigPtrOutput() AppServiceSiteConfigPtrOutput
	ToAppServiceSiteConfigPtrOutputWithContext(context.Context) AppServiceSiteConfigPtrOutput
}

type appServiceSiteConfigPtrType AppServiceSiteConfigArgs

func AppServiceSiteConfigPtr(v *AppServiceSiteConfigArgs) AppServiceSiteConfigPtrInput {
	return (*appServiceSiteConfigPtrType)(v)
}

func (*appServiceSiteConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceSiteConfig)(nil)).Elem()
}

func (i *appServiceSiteConfigPtrType) ToAppServiceSiteConfigPtrOutput() AppServiceSiteConfigPtrOutput {
	return i.ToAppServiceSiteConfigPtrOutputWithContext(context.Background())
}

func (i *appServiceSiteConfigPtrType) ToAppServiceSiteConfigPtrOutputWithContext(ctx context.Context) AppServiceSiteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceSiteConfigPtrOutput)
}

type AppServiceSiteConfigOutput struct{ *pulumi.OutputState }

func (AppServiceSiteConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceSiteConfig)(nil)).Elem()
}

func (o AppServiceSiteConfigOutput) ToAppServiceSiteConfigOutput() AppServiceSiteConfigOutput {
	return o
}

func (o AppServiceSiteConfigOutput) ToAppServiceSiteConfigOutputWithContext(ctx context.Context) AppServiceSiteConfigOutput {
	return o
}

func (o AppServiceSiteConfigOutput) ToAppServiceSiteConfigPtrOutput() AppServiceSiteConfigPtrOutput {
	return o.ToAppServiceSiteConfigPtrOutputWithContext(context.Background())
}

func (o AppServiceSiteConfigOutput) ToAppServiceSiteConfigPtrOutputWithContext(ctx context.Context) AppServiceSiteConfigPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfig) *AppServiceSiteConfig {
		return &v
	}).(AppServiceSiteConfigPtrOutput)
}

// Should the app be loaded at all times? Defaults to `false`.
func (o AppServiceSiteConfigOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfig) *bool { return v.AlwaysOn }).(pulumi.BoolPtrOutput)
}

// App command line to launch, e.g. `/sbin/myserver -b 0.0.0.0`.
func (o AppServiceSiteConfigOutput) AppCommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfig) *string { return v.AppCommandLine }).(pulumi.StringPtrOutput)
}

func (o AppServiceSiteConfigOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfig) *string { return v.AutoSwapSlotName }).(pulumi.StringPtrOutput)
}

// A `cors` block as defined below.
func (o AppServiceSiteConfigOutput) Cors() AppServiceSiteConfigCorsPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfig) *AppServiceSiteConfigCors { return v.Cors }).(AppServiceSiteConfigCorsPtrOutput)
}

// The ordering of default documents to load, if an address isn't specified.
func (o AppServiceSiteConfigOutput) DefaultDocuments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppServiceSiteConfig) []string { return v.DefaultDocuments }).(pulumi.StringArrayOutput)
}

// The version of the .net framework's CLR used in this App Service. Possible values are `v2.0` (which will use the latest version of the .net framework for the .net CLR v2 - currently `.net 3.5`), `v4.0` (which corresponds to the latest version of the .net CLR v4 - which at the time of writing is `.net 4.7.1`) and `v5.0`. [For more information on which .net CLR version to use based on the .net framework you're targeting - please see this table](https://en.wikipedia.org/wiki/.NET_Framework_version_history#Overview). Defaults to `v4.0`.
func (o AppServiceSiteConfigOutput) DotnetFrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfig) *string { return v.DotnetFrameworkVersion }).(pulumi.StringPtrOutput)
}

// State of FTP / FTPS service for this App Service. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`.
func (o AppServiceSiteConfigOutput) FtpsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfig) *string { return v.FtpsState }).(pulumi.StringPtrOutput)
}

// The health check path to be pinged by App Service. [For more information - please see App Service health check announcement](https://azure.github.io/AppService/2020/08/24/healthcheck-on-app-service.html).
func (o AppServiceSiteConfigOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfig) *string { return v.HealthCheckPath }).(pulumi.StringPtrOutput)
}

// Is HTTP2 Enabled on this App Service? Defaults to `false`.
func (o AppServiceSiteConfigOutput) Http2Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfig) *bool { return v.Http2Enabled }).(pulumi.BoolPtrOutput)
}

// A list of objects representing ip restrictions as defined below.
func (o AppServiceSiteConfigOutput) IpRestrictions() AppServiceSiteConfigIpRestrictionArrayOutput {
	return o.ApplyT(func(v AppServiceSiteConfig) []AppServiceSiteConfigIpRestriction { return v.IpRestrictions }).(AppServiceSiteConfigIpRestrictionArrayOutput)
}

// The Java Container to use. If specified `javaVersion` and `javaContainerVersion` must also be specified. Possible values are `JAVA`, `JETTY`, and `TOMCAT`.
func (o AppServiceSiteConfigOutput) JavaContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfig) *string { return v.JavaContainer }).(pulumi.StringPtrOutput)
}

// The version of the Java Container to use. If specified `javaVersion` and `javaContainer` must also be specified.
func (o AppServiceSiteConfigOutput) JavaContainerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfig) *string { return v.JavaContainerVersion }).(pulumi.StringPtrOutput)
}

// The version of Java to use. If specified `javaContainer` and `javaContainerVersion` must also be specified. Possible values are `1.7`, `1.8` and `11` and their specific versions - except for Java 11 (e.g. `1.7.0_80`, `1.8.0_181`, `11`)
func (o AppServiceSiteConfigOutput) JavaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfig) *string { return v.JavaVersion }).(pulumi.StringPtrOutput)
}

// Linux App Framework and version for the App Service. Possible options are a Docker container (`DOCKER|<user/image:tag>`), a base-64 encoded Docker Compose file (`COMPOSE|${filebase64("compose.yml")}`) or a base-64 encoded Kubernetes Manifest (`KUBE|${filebase64("kubernetes.yml")}`).
func (o AppServiceSiteConfigOutput) LinuxFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfig) *string { return v.LinuxFxVersion }).(pulumi.StringPtrOutput)
}

// Is "MySQL In App" Enabled? This runs a local MySQL instance with your app and shares resources from the App Service plan.
func (o AppServiceSiteConfigOutput) LocalMysqlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfig) *bool { return v.LocalMysqlEnabled }).(pulumi.BoolPtrOutput)
}

// The Managed Pipeline Mode. Possible values are `Integrated` and `Classic`. Defaults to `Integrated`.
func (o AppServiceSiteConfigOutput) ManagedPipelineMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfig) *string { return v.ManagedPipelineMode }).(pulumi.StringPtrOutput)
}

// The minimum supported TLS version for the app service. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new app services.
func (o AppServiceSiteConfigOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfig) *string { return v.MinTlsVersion }).(pulumi.StringPtrOutput)
}

// The scaled number of workers (for per site scaling) of this App Service. Requires that `perSiteScaling` is enabled on the `appservice.Plan`. [For more information - please see Microsoft documentation on high-density hosting](https://docs.microsoft.com/en-us/azure/app-service/manage-scale-per-app).
func (o AppServiceSiteConfigOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfig) *int { return v.NumberOfWorkers }).(pulumi.IntPtrOutput)
}

// The version of PHP to use in this App Service. Possible values are `5.5`, `5.6`, `7.0`, `7.1`, `7.2`, `7.3` and `7.4`.
func (o AppServiceSiteConfigOutput) PhpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfig) *string { return v.PhpVersion }).(pulumi.StringPtrOutput)
}

// The version of Python to use in this App Service. Possible values are `2.7` and `3.4`.
func (o AppServiceSiteConfigOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfig) *string { return v.PythonVersion }).(pulumi.StringPtrOutput)
}

// Is Remote Debugging Enabled? Defaults to `false`.
func (o AppServiceSiteConfigOutput) RemoteDebuggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfig) *bool { return v.RemoteDebuggingEnabled }).(pulumi.BoolPtrOutput)
}

// Which version of Visual Studio should the Remote Debugger be compatible with? Possible values are `VS2012`, `VS2013`, `VS2015` and `VS2017`.
func (o AppServiceSiteConfigOutput) RemoteDebuggingVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfig) *string { return v.RemoteDebuggingVersion }).(pulumi.StringPtrOutput)
}

// A [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing ip restrictions as defined below.
func (o AppServiceSiteConfigOutput) ScmIpRestrictions() AppServiceSiteConfigScmIpRestrictionArrayOutput {
	return o.ApplyT(func(v AppServiceSiteConfig) []AppServiceSiteConfigScmIpRestriction { return v.ScmIpRestrictions }).(AppServiceSiteConfigScmIpRestrictionArrayOutput)
}

// The type of Source Control enabled for this App Service. Defaults to `None`. Possible values are: `BitbucketGit`, `BitbucketHg`, `CodePlexGit`, `CodePlexHg`, `Dropbox`, `ExternalGit`, `ExternalHg`, `GitHub`, `LocalGit`, `None`, `OneDrive`, `Tfs`, `VSO`, and `VSTSRM`
func (o AppServiceSiteConfigOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfig) *string { return v.ScmType }).(pulumi.StringPtrOutput)
}

// IP security restrictions for scm to use main. Defaults to false.
func (o AppServiceSiteConfigOutput) ScmUseMainIpRestriction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfig) *bool { return v.ScmUseMainIpRestriction }).(pulumi.BoolPtrOutput)
}

// Should the App Service run in 32 bit mode, rather than 64 bit mode?
func (o AppServiceSiteConfigOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfig) *bool { return v.Use32BitWorkerProcess }).(pulumi.BoolPtrOutput)
}

// Should WebSockets be enabled?
func (o AppServiceSiteConfigOutput) WebsocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfig) *bool { return v.WebsocketsEnabled }).(pulumi.BoolPtrOutput)
}

// The Windows Docker container image (`DOCKER|<user/image:tag>`)
func (o AppServiceSiteConfigOutput) WindowsFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfig) *string { return v.WindowsFxVersion }).(pulumi.StringPtrOutput)
}

type AppServiceSiteConfigPtrOutput struct{ *pulumi.OutputState }

func (AppServiceSiteConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceSiteConfig)(nil)).Elem()
}

func (o AppServiceSiteConfigPtrOutput) ToAppServiceSiteConfigPtrOutput() AppServiceSiteConfigPtrOutput {
	return o
}

func (o AppServiceSiteConfigPtrOutput) ToAppServiceSiteConfigPtrOutputWithContext(ctx context.Context) AppServiceSiteConfigPtrOutput {
	return o
}

func (o AppServiceSiteConfigPtrOutput) Elem() AppServiceSiteConfigOutput {
	return o.ApplyT(func(v *AppServiceSiteConfig) AppServiceSiteConfig { return *v }).(AppServiceSiteConfigOutput)
}

// Should the app be loaded at all times? Defaults to `false`.
func (o AppServiceSiteConfigPtrOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AlwaysOn
	}).(pulumi.BoolPtrOutput)
}

// App command line to launch, e.g. `/sbin/myserver -b 0.0.0.0`.
func (o AppServiceSiteConfigPtrOutput) AppCommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.AppCommandLine
	}).(pulumi.StringPtrOutput)
}

func (o AppServiceSiteConfigPtrOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.AutoSwapSlotName
	}).(pulumi.StringPtrOutput)
}

// A `cors` block as defined below.
func (o AppServiceSiteConfigPtrOutput) Cors() AppServiceSiteConfigCorsPtrOutput {
	return o.ApplyT(func(v *AppServiceSiteConfig) *AppServiceSiteConfigCors {
		if v == nil {
			return nil
		}
		return v.Cors
	}).(AppServiceSiteConfigCorsPtrOutput)
}

// The ordering of default documents to load, if an address isn't specified.
func (o AppServiceSiteConfigPtrOutput) DefaultDocuments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppServiceSiteConfig) []string {
		if v == nil {
			return nil
		}
		return v.DefaultDocuments
	}).(pulumi.StringArrayOutput)
}

// The version of the .net framework's CLR used in this App Service. Possible values are `v2.0` (which will use the latest version of the .net framework for the .net CLR v2 - currently `.net 3.5`), `v4.0` (which corresponds to the latest version of the .net CLR v4 - which at the time of writing is `.net 4.7.1`) and `v5.0`. [For more information on which .net CLR version to use based on the .net framework you're targeting - please see this table](https://en.wikipedia.org/wiki/.NET_Framework_version_history#Overview). Defaults to `v4.0`.
func (o AppServiceSiteConfigPtrOutput) DotnetFrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.DotnetFrameworkVersion
	}).(pulumi.StringPtrOutput)
}

// State of FTP / FTPS service for this App Service. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`.
func (o AppServiceSiteConfigPtrOutput) FtpsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.FtpsState
	}).(pulumi.StringPtrOutput)
}

// The health check path to be pinged by App Service. [For more information - please see App Service health check announcement](https://azure.github.io/AppService/2020/08/24/healthcheck-on-app-service.html).
func (o AppServiceSiteConfigPtrOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.HealthCheckPath
	}).(pulumi.StringPtrOutput)
}

// Is HTTP2 Enabled on this App Service? Defaults to `false`.
func (o AppServiceSiteConfigPtrOutput) Http2Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Http2Enabled
	}).(pulumi.BoolPtrOutput)
}

// A list of objects representing ip restrictions as defined below.
func (o AppServiceSiteConfigPtrOutput) IpRestrictions() AppServiceSiteConfigIpRestrictionArrayOutput {
	return o.ApplyT(func(v *AppServiceSiteConfig) []AppServiceSiteConfigIpRestriction {
		if v == nil {
			return nil
		}
		return v.IpRestrictions
	}).(AppServiceSiteConfigIpRestrictionArrayOutput)
}

// The Java Container to use. If specified `javaVersion` and `javaContainerVersion` must also be specified. Possible values are `JAVA`, `JETTY`, and `TOMCAT`.
func (o AppServiceSiteConfigPtrOutput) JavaContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.JavaContainer
	}).(pulumi.StringPtrOutput)
}

// The version of the Java Container to use. If specified `javaVersion` and `javaContainer` must also be specified.
func (o AppServiceSiteConfigPtrOutput) JavaContainerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.JavaContainerVersion
	}).(pulumi.StringPtrOutput)
}

// The version of Java to use. If specified `javaContainer` and `javaContainerVersion` must also be specified. Possible values are `1.7`, `1.8` and `11` and their specific versions - except for Java 11 (e.g. `1.7.0_80`, `1.8.0_181`, `11`)
func (o AppServiceSiteConfigPtrOutput) JavaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.JavaVersion
	}).(pulumi.StringPtrOutput)
}

// Linux App Framework and version for the App Service. Possible options are a Docker container (`DOCKER|<user/image:tag>`), a base-64 encoded Docker Compose file (`COMPOSE|${filebase64("compose.yml")}`) or a base-64 encoded Kubernetes Manifest (`KUBE|${filebase64("kubernetes.yml")}`).
func (o AppServiceSiteConfigPtrOutput) LinuxFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.LinuxFxVersion
	}).(pulumi.StringPtrOutput)
}

// Is "MySQL In App" Enabled? This runs a local MySQL instance with your app and shares resources from the App Service plan.
func (o AppServiceSiteConfigPtrOutput) LocalMysqlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.LocalMysqlEnabled
	}).(pulumi.BoolPtrOutput)
}

// The Managed Pipeline Mode. Possible values are `Integrated` and `Classic`. Defaults to `Integrated`.
func (o AppServiceSiteConfigPtrOutput) ManagedPipelineMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.ManagedPipelineMode
	}).(pulumi.StringPtrOutput)
}

// The minimum supported TLS version for the app service. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new app services.
func (o AppServiceSiteConfigPtrOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.MinTlsVersion
	}).(pulumi.StringPtrOutput)
}

// The scaled number of workers (for per site scaling) of this App Service. Requires that `perSiteScaling` is enabled on the `appservice.Plan`. [For more information - please see Microsoft documentation on high-density hosting](https://docs.microsoft.com/en-us/azure/app-service/manage-scale-per-app).
func (o AppServiceSiteConfigPtrOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceSiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfWorkers
	}).(pulumi.IntPtrOutput)
}

// The version of PHP to use in this App Service. Possible values are `5.5`, `5.6`, `7.0`, `7.1`, `7.2`, `7.3` and `7.4`.
func (o AppServiceSiteConfigPtrOutput) PhpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.PhpVersion
	}).(pulumi.StringPtrOutput)
}

// The version of Python to use in this App Service. Possible values are `2.7` and `3.4`.
func (o AppServiceSiteConfigPtrOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.PythonVersion
	}).(pulumi.StringPtrOutput)
}

// Is Remote Debugging Enabled? Defaults to `false`.
func (o AppServiceSiteConfigPtrOutput) RemoteDebuggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.RemoteDebuggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Which version of Visual Studio should the Remote Debugger be compatible with? Possible values are `VS2012`, `VS2013`, `VS2015` and `VS2017`.
func (o AppServiceSiteConfigPtrOutput) RemoteDebuggingVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.RemoteDebuggingVersion
	}).(pulumi.StringPtrOutput)
}

// A [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing ip restrictions as defined below.
func (o AppServiceSiteConfigPtrOutput) ScmIpRestrictions() AppServiceSiteConfigScmIpRestrictionArrayOutput {
	return o.ApplyT(func(v *AppServiceSiteConfig) []AppServiceSiteConfigScmIpRestriction {
		if v == nil {
			return nil
		}
		return v.ScmIpRestrictions
	}).(AppServiceSiteConfigScmIpRestrictionArrayOutput)
}

// The type of Source Control enabled for this App Service. Defaults to `None`. Possible values are: `BitbucketGit`, `BitbucketHg`, `CodePlexGit`, `CodePlexHg`, `Dropbox`, `ExternalGit`, `ExternalHg`, `GitHub`, `LocalGit`, `None`, `OneDrive`, `Tfs`, `VSO`, and `VSTSRM`
func (o AppServiceSiteConfigPtrOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.ScmType
	}).(pulumi.StringPtrOutput)
}

// IP security restrictions for scm to use main. Defaults to false.
func (o AppServiceSiteConfigPtrOutput) ScmUseMainIpRestriction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.ScmUseMainIpRestriction
	}).(pulumi.BoolPtrOutput)
}

// Should the App Service run in 32 bit mode, rather than 64 bit mode?
func (o AppServiceSiteConfigPtrOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Use32BitWorkerProcess
	}).(pulumi.BoolPtrOutput)
}

// Should WebSockets be enabled?
func (o AppServiceSiteConfigPtrOutput) WebsocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.WebsocketsEnabled
	}).(pulumi.BoolPtrOutput)
}

// The Windows Docker container image (`DOCKER|<user/image:tag>`)
func (o AppServiceSiteConfigPtrOutput) WindowsFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.WindowsFxVersion
	}).(pulumi.StringPtrOutput)
}

type AppServiceSiteConfigCors struct {
	// A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// Are credentials supported?
	SupportCredentials *bool `pulumi:"supportCredentials"`
}

// AppServiceSiteConfigCorsInput is an input type that accepts AppServiceSiteConfigCorsArgs and AppServiceSiteConfigCorsOutput values.
// You can construct a concrete instance of `AppServiceSiteConfigCorsInput` via:
//
//          AppServiceSiteConfigCorsArgs{...}
type AppServiceSiteConfigCorsInput interface {
	pulumi.Input

	ToAppServiceSiteConfigCorsOutput() AppServiceSiteConfigCorsOutput
	ToAppServiceSiteConfigCorsOutputWithContext(context.Context) AppServiceSiteConfigCorsOutput
}

type AppServiceSiteConfigCorsArgs struct {
	// A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// Are credentials supported?
	SupportCredentials pulumi.BoolPtrInput `pulumi:"supportCredentials"`
}

func (AppServiceSiteConfigCorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceSiteConfigCors)(nil)).Elem()
}

func (i AppServiceSiteConfigCorsArgs) ToAppServiceSiteConfigCorsOutput() AppServiceSiteConfigCorsOutput {
	return i.ToAppServiceSiteConfigCorsOutputWithContext(context.Background())
}

func (i AppServiceSiteConfigCorsArgs) ToAppServiceSiteConfigCorsOutputWithContext(ctx context.Context) AppServiceSiteConfigCorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceSiteConfigCorsOutput)
}

func (i AppServiceSiteConfigCorsArgs) ToAppServiceSiteConfigCorsPtrOutput() AppServiceSiteConfigCorsPtrOutput {
	return i.ToAppServiceSiteConfigCorsPtrOutputWithContext(context.Background())
}

func (i AppServiceSiteConfigCorsArgs) ToAppServiceSiteConfigCorsPtrOutputWithContext(ctx context.Context) AppServiceSiteConfigCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceSiteConfigCorsOutput).ToAppServiceSiteConfigCorsPtrOutputWithContext(ctx)
}

// AppServiceSiteConfigCorsPtrInput is an input type that accepts AppServiceSiteConfigCorsArgs, AppServiceSiteConfigCorsPtr and AppServiceSiteConfigCorsPtrOutput values.
// You can construct a concrete instance of `AppServiceSiteConfigCorsPtrInput` via:
//
//          AppServiceSiteConfigCorsArgs{...}
//
//  or:
//
//          nil
type AppServiceSiteConfigCorsPtrInput interface {
	pulumi.Input

	ToAppServiceSiteConfigCorsPtrOutput() AppServiceSiteConfigCorsPtrOutput
	ToAppServiceSiteConfigCorsPtrOutputWithContext(context.Context) AppServiceSiteConfigCorsPtrOutput
}

type appServiceSiteConfigCorsPtrType AppServiceSiteConfigCorsArgs

func AppServiceSiteConfigCorsPtr(v *AppServiceSiteConfigCorsArgs) AppServiceSiteConfigCorsPtrInput {
	return (*appServiceSiteConfigCorsPtrType)(v)
}

func (*appServiceSiteConfigCorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceSiteConfigCors)(nil)).Elem()
}

func (i *appServiceSiteConfigCorsPtrType) ToAppServiceSiteConfigCorsPtrOutput() AppServiceSiteConfigCorsPtrOutput {
	return i.ToAppServiceSiteConfigCorsPtrOutputWithContext(context.Background())
}

func (i *appServiceSiteConfigCorsPtrType) ToAppServiceSiteConfigCorsPtrOutputWithContext(ctx context.Context) AppServiceSiteConfigCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceSiteConfigCorsPtrOutput)
}

type AppServiceSiteConfigCorsOutput struct{ *pulumi.OutputState }

func (AppServiceSiteConfigCorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceSiteConfigCors)(nil)).Elem()
}

func (o AppServiceSiteConfigCorsOutput) ToAppServiceSiteConfigCorsOutput() AppServiceSiteConfigCorsOutput {
	return o
}

func (o AppServiceSiteConfigCorsOutput) ToAppServiceSiteConfigCorsOutputWithContext(ctx context.Context) AppServiceSiteConfigCorsOutput {
	return o
}

func (o AppServiceSiteConfigCorsOutput) ToAppServiceSiteConfigCorsPtrOutput() AppServiceSiteConfigCorsPtrOutput {
	return o.ToAppServiceSiteConfigCorsPtrOutputWithContext(context.Background())
}

func (o AppServiceSiteConfigCorsOutput) ToAppServiceSiteConfigCorsPtrOutputWithContext(ctx context.Context) AppServiceSiteConfigCorsPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfigCors) *AppServiceSiteConfigCors {
		return &v
	}).(AppServiceSiteConfigCorsPtrOutput)
}

// A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
func (o AppServiceSiteConfigCorsOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppServiceSiteConfigCors) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// Are credentials supported?
func (o AppServiceSiteConfigCorsOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfigCors) *bool { return v.SupportCredentials }).(pulumi.BoolPtrOutput)
}

type AppServiceSiteConfigCorsPtrOutput struct{ *pulumi.OutputState }

func (AppServiceSiteConfigCorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceSiteConfigCors)(nil)).Elem()
}

func (o AppServiceSiteConfigCorsPtrOutput) ToAppServiceSiteConfigCorsPtrOutput() AppServiceSiteConfigCorsPtrOutput {
	return o
}

func (o AppServiceSiteConfigCorsPtrOutput) ToAppServiceSiteConfigCorsPtrOutputWithContext(ctx context.Context) AppServiceSiteConfigCorsPtrOutput {
	return o
}

func (o AppServiceSiteConfigCorsPtrOutput) Elem() AppServiceSiteConfigCorsOutput {
	return o.ApplyT(func(v *AppServiceSiteConfigCors) AppServiceSiteConfigCors { return *v }).(AppServiceSiteConfigCorsOutput)
}

// A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
func (o AppServiceSiteConfigCorsPtrOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppServiceSiteConfigCors) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrigins
	}).(pulumi.StringArrayOutput)
}

// Are credentials supported?
func (o AppServiceSiteConfigCorsPtrOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceSiteConfigCors) *bool {
		if v == nil {
			return nil
		}
		return v.SupportCredentials
	}).(pulumi.BoolPtrOutput)
}

type AppServiceSiteConfigIpRestriction struct {
	// Does this restriction `Allow` or `Deny` access for this IP range. Defaults to `Allow`.
	Action *string `pulumi:"action"`
	// The IP Address used for this IP Restriction in CIDR notation.
	IpAddress *string `pulumi:"ipAddress"`
	// The name for this IP Restriction.
	Name *string `pulumi:"name"`
	// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, priority is set to 65000 if not specified.
	Priority *int `pulumi:"priority"`
	// The Service Tag used for this IP Restriction.
	ServiceTag *string `pulumi:"serviceTag"`
	// Deprecated: This field has been deprecated in favour of `virtual_network_subnet_id` and will be removed in a future version of the provider
	SubnetId *string `pulumi:"subnetId"`
	// The Virtual Network Subnet ID used for this IP Restriction.
	VirtualNetworkSubnetId *string `pulumi:"virtualNetworkSubnetId"`
}

// AppServiceSiteConfigIpRestrictionInput is an input type that accepts AppServiceSiteConfigIpRestrictionArgs and AppServiceSiteConfigIpRestrictionOutput values.
// You can construct a concrete instance of `AppServiceSiteConfigIpRestrictionInput` via:
//
//          AppServiceSiteConfigIpRestrictionArgs{...}
type AppServiceSiteConfigIpRestrictionInput interface {
	pulumi.Input

	ToAppServiceSiteConfigIpRestrictionOutput() AppServiceSiteConfigIpRestrictionOutput
	ToAppServiceSiteConfigIpRestrictionOutputWithContext(context.Context) AppServiceSiteConfigIpRestrictionOutput
}

type AppServiceSiteConfigIpRestrictionArgs struct {
	// Does this restriction `Allow` or `Deny` access for this IP range. Defaults to `Allow`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// The IP Address used for this IP Restriction in CIDR notation.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The name for this IP Restriction.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, priority is set to 65000 if not specified.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The Service Tag used for this IP Restriction.
	ServiceTag pulumi.StringPtrInput `pulumi:"serviceTag"`
	// Deprecated: This field has been deprecated in favour of `virtual_network_subnet_id` and will be removed in a future version of the provider
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The Virtual Network Subnet ID used for this IP Restriction.
	VirtualNetworkSubnetId pulumi.StringPtrInput `pulumi:"virtualNetworkSubnetId"`
}

func (AppServiceSiteConfigIpRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceSiteConfigIpRestriction)(nil)).Elem()
}

func (i AppServiceSiteConfigIpRestrictionArgs) ToAppServiceSiteConfigIpRestrictionOutput() AppServiceSiteConfigIpRestrictionOutput {
	return i.ToAppServiceSiteConfigIpRestrictionOutputWithContext(context.Background())
}

func (i AppServiceSiteConfigIpRestrictionArgs) ToAppServiceSiteConfigIpRestrictionOutputWithContext(ctx context.Context) AppServiceSiteConfigIpRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceSiteConfigIpRestrictionOutput)
}

// AppServiceSiteConfigIpRestrictionArrayInput is an input type that accepts AppServiceSiteConfigIpRestrictionArray and AppServiceSiteConfigIpRestrictionArrayOutput values.
// You can construct a concrete instance of `AppServiceSiteConfigIpRestrictionArrayInput` via:
//
//          AppServiceSiteConfigIpRestrictionArray{ AppServiceSiteConfigIpRestrictionArgs{...} }
type AppServiceSiteConfigIpRestrictionArrayInput interface {
	pulumi.Input

	ToAppServiceSiteConfigIpRestrictionArrayOutput() AppServiceSiteConfigIpRestrictionArrayOutput
	ToAppServiceSiteConfigIpRestrictionArrayOutputWithContext(context.Context) AppServiceSiteConfigIpRestrictionArrayOutput
}

type AppServiceSiteConfigIpRestrictionArray []AppServiceSiteConfigIpRestrictionInput

func (AppServiceSiteConfigIpRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppServiceSiteConfigIpRestriction)(nil)).Elem()
}

func (i AppServiceSiteConfigIpRestrictionArray) ToAppServiceSiteConfigIpRestrictionArrayOutput() AppServiceSiteConfigIpRestrictionArrayOutput {
	return i.ToAppServiceSiteConfigIpRestrictionArrayOutputWithContext(context.Background())
}

func (i AppServiceSiteConfigIpRestrictionArray) ToAppServiceSiteConfigIpRestrictionArrayOutputWithContext(ctx context.Context) AppServiceSiteConfigIpRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceSiteConfigIpRestrictionArrayOutput)
}

type AppServiceSiteConfigIpRestrictionOutput struct{ *pulumi.OutputState }

func (AppServiceSiteConfigIpRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceSiteConfigIpRestriction)(nil)).Elem()
}

func (o AppServiceSiteConfigIpRestrictionOutput) ToAppServiceSiteConfigIpRestrictionOutput() AppServiceSiteConfigIpRestrictionOutput {
	return o
}

func (o AppServiceSiteConfigIpRestrictionOutput) ToAppServiceSiteConfigIpRestrictionOutputWithContext(ctx context.Context) AppServiceSiteConfigIpRestrictionOutput {
	return o
}

// Does this restriction `Allow` or `Deny` access for this IP range. Defaults to `Allow`.
func (o AppServiceSiteConfigIpRestrictionOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfigIpRestriction) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// The IP Address used for this IP Restriction in CIDR notation.
func (o AppServiceSiteConfigIpRestrictionOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfigIpRestriction) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The name for this IP Restriction.
func (o AppServiceSiteConfigIpRestrictionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfigIpRestriction) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, priority is set to 65000 if not specified.
func (o AppServiceSiteConfigIpRestrictionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfigIpRestriction) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The Service Tag used for this IP Restriction.
func (o AppServiceSiteConfigIpRestrictionOutput) ServiceTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfigIpRestriction) *string { return v.ServiceTag }).(pulumi.StringPtrOutput)
}

// Deprecated: This field has been deprecated in favour of `virtual_network_subnet_id` and will be removed in a future version of the provider
func (o AppServiceSiteConfigIpRestrictionOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfigIpRestriction) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The Virtual Network Subnet ID used for this IP Restriction.
func (o AppServiceSiteConfigIpRestrictionOutput) VirtualNetworkSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfigIpRestriction) *string { return v.VirtualNetworkSubnetId }).(pulumi.StringPtrOutput)
}

type AppServiceSiteConfigIpRestrictionArrayOutput struct{ *pulumi.OutputState }

func (AppServiceSiteConfigIpRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppServiceSiteConfigIpRestriction)(nil)).Elem()
}

func (o AppServiceSiteConfigIpRestrictionArrayOutput) ToAppServiceSiteConfigIpRestrictionArrayOutput() AppServiceSiteConfigIpRestrictionArrayOutput {
	return o
}

func (o AppServiceSiteConfigIpRestrictionArrayOutput) ToAppServiceSiteConfigIpRestrictionArrayOutputWithContext(ctx context.Context) AppServiceSiteConfigIpRestrictionArrayOutput {
	return o
}

func (o AppServiceSiteConfigIpRestrictionArrayOutput) Index(i pulumi.IntInput) AppServiceSiteConfigIpRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppServiceSiteConfigIpRestriction {
		return vs[0].([]AppServiceSiteConfigIpRestriction)[vs[1].(int)]
	}).(AppServiceSiteConfigIpRestrictionOutput)
}

type AppServiceSiteConfigScmIpRestriction struct {
	// Allow or Deny access for this IP range. Defaults to Allow.
	Action *string `pulumi:"action"`
	// The IP Address used for this IP Restriction in CIDR notation.
	IpAddress *string `pulumi:"ipAddress"`
	// The name for this IP Restriction.
	Name *string `pulumi:"name"`
	// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, priority is set to 65000 if not specified.
	Priority *int `pulumi:"priority"`
	// The Service Tag used for this IP Restriction.
	ServiceTag *string `pulumi:"serviceTag"`
	// Deprecated: This field has been deprecated in favour of `virtual_network_subnet_id` and will be removed in a future version of the provider
	SubnetId *string `pulumi:"subnetId"`
	// The Virtual Network Subnet ID used for this IP Restriction.
	VirtualNetworkSubnetId *string `pulumi:"virtualNetworkSubnetId"`
}

// AppServiceSiteConfigScmIpRestrictionInput is an input type that accepts AppServiceSiteConfigScmIpRestrictionArgs and AppServiceSiteConfigScmIpRestrictionOutput values.
// You can construct a concrete instance of `AppServiceSiteConfigScmIpRestrictionInput` via:
//
//          AppServiceSiteConfigScmIpRestrictionArgs{...}
type AppServiceSiteConfigScmIpRestrictionInput interface {
	pulumi.Input

	ToAppServiceSiteConfigScmIpRestrictionOutput() AppServiceSiteConfigScmIpRestrictionOutput
	ToAppServiceSiteConfigScmIpRestrictionOutputWithContext(context.Context) AppServiceSiteConfigScmIpRestrictionOutput
}

type AppServiceSiteConfigScmIpRestrictionArgs struct {
	// Allow or Deny access for this IP range. Defaults to Allow.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// The IP Address used for this IP Restriction in CIDR notation.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The name for this IP Restriction.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, priority is set to 65000 if not specified.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The Service Tag used for this IP Restriction.
	ServiceTag pulumi.StringPtrInput `pulumi:"serviceTag"`
	// Deprecated: This field has been deprecated in favour of `virtual_network_subnet_id` and will be removed in a future version of the provider
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The Virtual Network Subnet ID used for this IP Restriction.
	VirtualNetworkSubnetId pulumi.StringPtrInput `pulumi:"virtualNetworkSubnetId"`
}

func (AppServiceSiteConfigScmIpRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceSiteConfigScmIpRestriction)(nil)).Elem()
}

func (i AppServiceSiteConfigScmIpRestrictionArgs) ToAppServiceSiteConfigScmIpRestrictionOutput() AppServiceSiteConfigScmIpRestrictionOutput {
	return i.ToAppServiceSiteConfigScmIpRestrictionOutputWithContext(context.Background())
}

func (i AppServiceSiteConfigScmIpRestrictionArgs) ToAppServiceSiteConfigScmIpRestrictionOutputWithContext(ctx context.Context) AppServiceSiteConfigScmIpRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceSiteConfigScmIpRestrictionOutput)
}

// AppServiceSiteConfigScmIpRestrictionArrayInput is an input type that accepts AppServiceSiteConfigScmIpRestrictionArray and AppServiceSiteConfigScmIpRestrictionArrayOutput values.
// You can construct a concrete instance of `AppServiceSiteConfigScmIpRestrictionArrayInput` via:
//
//          AppServiceSiteConfigScmIpRestrictionArray{ AppServiceSiteConfigScmIpRestrictionArgs{...} }
type AppServiceSiteConfigScmIpRestrictionArrayInput interface {
	pulumi.Input

	ToAppServiceSiteConfigScmIpRestrictionArrayOutput() AppServiceSiteConfigScmIpRestrictionArrayOutput
	ToAppServiceSiteConfigScmIpRestrictionArrayOutputWithContext(context.Context) AppServiceSiteConfigScmIpRestrictionArrayOutput
}

type AppServiceSiteConfigScmIpRestrictionArray []AppServiceSiteConfigScmIpRestrictionInput

func (AppServiceSiteConfigScmIpRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppServiceSiteConfigScmIpRestriction)(nil)).Elem()
}

func (i AppServiceSiteConfigScmIpRestrictionArray) ToAppServiceSiteConfigScmIpRestrictionArrayOutput() AppServiceSiteConfigScmIpRestrictionArrayOutput {
	return i.ToAppServiceSiteConfigScmIpRestrictionArrayOutputWithContext(context.Background())
}

func (i AppServiceSiteConfigScmIpRestrictionArray) ToAppServiceSiteConfigScmIpRestrictionArrayOutputWithContext(ctx context.Context) AppServiceSiteConfigScmIpRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceSiteConfigScmIpRestrictionArrayOutput)
}

type AppServiceSiteConfigScmIpRestrictionOutput struct{ *pulumi.OutputState }

func (AppServiceSiteConfigScmIpRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceSiteConfigScmIpRestriction)(nil)).Elem()
}

func (o AppServiceSiteConfigScmIpRestrictionOutput) ToAppServiceSiteConfigScmIpRestrictionOutput() AppServiceSiteConfigScmIpRestrictionOutput {
	return o
}

func (o AppServiceSiteConfigScmIpRestrictionOutput) ToAppServiceSiteConfigScmIpRestrictionOutputWithContext(ctx context.Context) AppServiceSiteConfigScmIpRestrictionOutput {
	return o
}

// Allow or Deny access for this IP range. Defaults to Allow.
func (o AppServiceSiteConfigScmIpRestrictionOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfigScmIpRestriction) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// The IP Address used for this IP Restriction in CIDR notation.
func (o AppServiceSiteConfigScmIpRestrictionOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfigScmIpRestriction) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The name for this IP Restriction.
func (o AppServiceSiteConfigScmIpRestrictionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfigScmIpRestriction) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, priority is set to 65000 if not specified.
func (o AppServiceSiteConfigScmIpRestrictionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfigScmIpRestriction) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The Service Tag used for this IP Restriction.
func (o AppServiceSiteConfigScmIpRestrictionOutput) ServiceTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfigScmIpRestriction) *string { return v.ServiceTag }).(pulumi.StringPtrOutput)
}

// Deprecated: This field has been deprecated in favour of `virtual_network_subnet_id` and will be removed in a future version of the provider
func (o AppServiceSiteConfigScmIpRestrictionOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfigScmIpRestriction) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The Virtual Network Subnet ID used for this IP Restriction.
func (o AppServiceSiteConfigScmIpRestrictionOutput) VirtualNetworkSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteConfigScmIpRestriction) *string { return v.VirtualNetworkSubnetId }).(pulumi.StringPtrOutput)
}

type AppServiceSiteConfigScmIpRestrictionArrayOutput struct{ *pulumi.OutputState }

func (AppServiceSiteConfigScmIpRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppServiceSiteConfigScmIpRestriction)(nil)).Elem()
}

func (o AppServiceSiteConfigScmIpRestrictionArrayOutput) ToAppServiceSiteConfigScmIpRestrictionArrayOutput() AppServiceSiteConfigScmIpRestrictionArrayOutput {
	return o
}

func (o AppServiceSiteConfigScmIpRestrictionArrayOutput) ToAppServiceSiteConfigScmIpRestrictionArrayOutputWithContext(ctx context.Context) AppServiceSiteConfigScmIpRestrictionArrayOutput {
	return o
}

func (o AppServiceSiteConfigScmIpRestrictionArrayOutput) Index(i pulumi.IntInput) AppServiceSiteConfigScmIpRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppServiceSiteConfigScmIpRestriction {
		return vs[0].([]AppServiceSiteConfigScmIpRestriction)[vs[1].(int)]
	}).(AppServiceSiteConfigScmIpRestrictionOutput)
}

type AppServiceSiteCredential struct {
	// The password associated with the username, which can be used to publish to this App Service.
	Password *string `pulumi:"password"`
	// The username which can be used to publish to this App Service
	Username *string `pulumi:"username"`
}

// AppServiceSiteCredentialInput is an input type that accepts AppServiceSiteCredentialArgs and AppServiceSiteCredentialOutput values.
// You can construct a concrete instance of `AppServiceSiteCredentialInput` via:
//
//          AppServiceSiteCredentialArgs{...}
type AppServiceSiteCredentialInput interface {
	pulumi.Input

	ToAppServiceSiteCredentialOutput() AppServiceSiteCredentialOutput
	ToAppServiceSiteCredentialOutputWithContext(context.Context) AppServiceSiteCredentialOutput
}

type AppServiceSiteCredentialArgs struct {
	// The password associated with the username, which can be used to publish to this App Service.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The username which can be used to publish to this App Service
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (AppServiceSiteCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceSiteCredential)(nil)).Elem()
}

func (i AppServiceSiteCredentialArgs) ToAppServiceSiteCredentialOutput() AppServiceSiteCredentialOutput {
	return i.ToAppServiceSiteCredentialOutputWithContext(context.Background())
}

func (i AppServiceSiteCredentialArgs) ToAppServiceSiteCredentialOutputWithContext(ctx context.Context) AppServiceSiteCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceSiteCredentialOutput)
}

// AppServiceSiteCredentialArrayInput is an input type that accepts AppServiceSiteCredentialArray and AppServiceSiteCredentialArrayOutput values.
// You can construct a concrete instance of `AppServiceSiteCredentialArrayInput` via:
//
//          AppServiceSiteCredentialArray{ AppServiceSiteCredentialArgs{...} }
type AppServiceSiteCredentialArrayInput interface {
	pulumi.Input

	ToAppServiceSiteCredentialArrayOutput() AppServiceSiteCredentialArrayOutput
	ToAppServiceSiteCredentialArrayOutputWithContext(context.Context) AppServiceSiteCredentialArrayOutput
}

type AppServiceSiteCredentialArray []AppServiceSiteCredentialInput

func (AppServiceSiteCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppServiceSiteCredential)(nil)).Elem()
}

func (i AppServiceSiteCredentialArray) ToAppServiceSiteCredentialArrayOutput() AppServiceSiteCredentialArrayOutput {
	return i.ToAppServiceSiteCredentialArrayOutputWithContext(context.Background())
}

func (i AppServiceSiteCredentialArray) ToAppServiceSiteCredentialArrayOutputWithContext(ctx context.Context) AppServiceSiteCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceSiteCredentialArrayOutput)
}

type AppServiceSiteCredentialOutput struct{ *pulumi.OutputState }

func (AppServiceSiteCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceSiteCredential)(nil)).Elem()
}

func (o AppServiceSiteCredentialOutput) ToAppServiceSiteCredentialOutput() AppServiceSiteCredentialOutput {
	return o
}

func (o AppServiceSiteCredentialOutput) ToAppServiceSiteCredentialOutputWithContext(ctx context.Context) AppServiceSiteCredentialOutput {
	return o
}

// The password associated with the username, which can be used to publish to this App Service.
func (o AppServiceSiteCredentialOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteCredential) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The username which can be used to publish to this App Service
func (o AppServiceSiteCredentialOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSiteCredential) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type AppServiceSiteCredentialArrayOutput struct{ *pulumi.OutputState }

func (AppServiceSiteCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppServiceSiteCredential)(nil)).Elem()
}

func (o AppServiceSiteCredentialArrayOutput) ToAppServiceSiteCredentialArrayOutput() AppServiceSiteCredentialArrayOutput {
	return o
}

func (o AppServiceSiteCredentialArrayOutput) ToAppServiceSiteCredentialArrayOutputWithContext(ctx context.Context) AppServiceSiteCredentialArrayOutput {
	return o
}

func (o AppServiceSiteCredentialArrayOutput) Index(i pulumi.IntInput) AppServiceSiteCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppServiceSiteCredential {
		return vs[0].([]AppServiceSiteCredential)[vs[1].(int)]
	}).(AppServiceSiteCredentialOutput)
}

type AppServiceSourceControl struct {
	// The branch of the remote repository to use. Defaults to 'master'.
	Branch *string `pulumi:"branch"`
	// Limits to manual integration. Defaults to `false` if not specified.
	ManualIntegration *bool `pulumi:"manualIntegration"`
	// The URL of the source code repository.
	RepoUrl *string `pulumi:"repoUrl"`
	// Enable roll-back for the repository. Defaults to `false` if not specified.
	RollbackEnabled *bool `pulumi:"rollbackEnabled"`
	// Use Mercurial if `true`, otherwise uses Git.
	UseMercurial *bool `pulumi:"useMercurial"`
}

// AppServiceSourceControlInput is an input type that accepts AppServiceSourceControlArgs and AppServiceSourceControlOutput values.
// You can construct a concrete instance of `AppServiceSourceControlInput` via:
//
//          AppServiceSourceControlArgs{...}
type AppServiceSourceControlInput interface {
	pulumi.Input

	ToAppServiceSourceControlOutput() AppServiceSourceControlOutput
	ToAppServiceSourceControlOutputWithContext(context.Context) AppServiceSourceControlOutput
}

type AppServiceSourceControlArgs struct {
	// The branch of the remote repository to use. Defaults to 'master'.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Limits to manual integration. Defaults to `false` if not specified.
	ManualIntegration pulumi.BoolPtrInput `pulumi:"manualIntegration"`
	// The URL of the source code repository.
	RepoUrl pulumi.StringPtrInput `pulumi:"repoUrl"`
	// Enable roll-back for the repository. Defaults to `false` if not specified.
	RollbackEnabled pulumi.BoolPtrInput `pulumi:"rollbackEnabled"`
	// Use Mercurial if `true`, otherwise uses Git.
	UseMercurial pulumi.BoolPtrInput `pulumi:"useMercurial"`
}

func (AppServiceSourceControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceSourceControl)(nil)).Elem()
}

func (i AppServiceSourceControlArgs) ToAppServiceSourceControlOutput() AppServiceSourceControlOutput {
	return i.ToAppServiceSourceControlOutputWithContext(context.Background())
}

func (i AppServiceSourceControlArgs) ToAppServiceSourceControlOutputWithContext(ctx context.Context) AppServiceSourceControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceSourceControlOutput)
}

func (i AppServiceSourceControlArgs) ToAppServiceSourceControlPtrOutput() AppServiceSourceControlPtrOutput {
	return i.ToAppServiceSourceControlPtrOutputWithContext(context.Background())
}

func (i AppServiceSourceControlArgs) ToAppServiceSourceControlPtrOutputWithContext(ctx context.Context) AppServiceSourceControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceSourceControlOutput).ToAppServiceSourceControlPtrOutputWithContext(ctx)
}

// AppServiceSourceControlPtrInput is an input type that accepts AppServiceSourceControlArgs, AppServiceSourceControlPtr and AppServiceSourceControlPtrOutput values.
// You can construct a concrete instance of `AppServiceSourceControlPtrInput` via:
//
//          AppServiceSourceControlArgs{...}
//
//  or:
//
//          nil
type AppServiceSourceControlPtrInput interface {
	pulumi.Input

	ToAppServiceSourceControlPtrOutput() AppServiceSourceControlPtrOutput
	ToAppServiceSourceControlPtrOutputWithContext(context.Context) AppServiceSourceControlPtrOutput
}

type appServiceSourceControlPtrType AppServiceSourceControlArgs

func AppServiceSourceControlPtr(v *AppServiceSourceControlArgs) AppServiceSourceControlPtrInput {
	return (*appServiceSourceControlPtrType)(v)
}

func (*appServiceSourceControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceSourceControl)(nil)).Elem()
}

func (i *appServiceSourceControlPtrType) ToAppServiceSourceControlPtrOutput() AppServiceSourceControlPtrOutput {
	return i.ToAppServiceSourceControlPtrOutputWithContext(context.Background())
}

func (i *appServiceSourceControlPtrType) ToAppServiceSourceControlPtrOutputWithContext(ctx context.Context) AppServiceSourceControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceSourceControlPtrOutput)
}

type AppServiceSourceControlOutput struct{ *pulumi.OutputState }

func (AppServiceSourceControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceSourceControl)(nil)).Elem()
}

func (o AppServiceSourceControlOutput) ToAppServiceSourceControlOutput() AppServiceSourceControlOutput {
	return o
}

func (o AppServiceSourceControlOutput) ToAppServiceSourceControlOutputWithContext(ctx context.Context) AppServiceSourceControlOutput {
	return o
}

func (o AppServiceSourceControlOutput) ToAppServiceSourceControlPtrOutput() AppServiceSourceControlPtrOutput {
	return o.ToAppServiceSourceControlPtrOutputWithContext(context.Background())
}

func (o AppServiceSourceControlOutput) ToAppServiceSourceControlPtrOutputWithContext(ctx context.Context) AppServiceSourceControlPtrOutput {
	return o.ApplyT(func(v AppServiceSourceControl) *AppServiceSourceControl {
		return &v
	}).(AppServiceSourceControlPtrOutput)
}

// The branch of the remote repository to use. Defaults to 'master'.
func (o AppServiceSourceControlOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSourceControl) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Limits to manual integration. Defaults to `false` if not specified.
func (o AppServiceSourceControlOutput) ManualIntegration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServiceSourceControl) *bool { return v.ManualIntegration }).(pulumi.BoolPtrOutput)
}

// The URL of the source code repository.
func (o AppServiceSourceControlOutput) RepoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSourceControl) *string { return v.RepoUrl }).(pulumi.StringPtrOutput)
}

// Enable roll-back for the repository. Defaults to `false` if not specified.
func (o AppServiceSourceControlOutput) RollbackEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServiceSourceControl) *bool { return v.RollbackEnabled }).(pulumi.BoolPtrOutput)
}

// Use Mercurial if `true`, otherwise uses Git.
func (o AppServiceSourceControlOutput) UseMercurial() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppServiceSourceControl) *bool { return v.UseMercurial }).(pulumi.BoolPtrOutput)
}

type AppServiceSourceControlPtrOutput struct{ *pulumi.OutputState }

func (AppServiceSourceControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceSourceControl)(nil)).Elem()
}

func (o AppServiceSourceControlPtrOutput) ToAppServiceSourceControlPtrOutput() AppServiceSourceControlPtrOutput {
	return o
}

func (o AppServiceSourceControlPtrOutput) ToAppServiceSourceControlPtrOutputWithContext(ctx context.Context) AppServiceSourceControlPtrOutput {
	return o
}

func (o AppServiceSourceControlPtrOutput) Elem() AppServiceSourceControlOutput {
	return o.ApplyT(func(v *AppServiceSourceControl) AppServiceSourceControl { return *v }).(AppServiceSourceControlOutput)
}

// The branch of the remote repository to use. Defaults to 'master'.
func (o AppServiceSourceControlPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceSourceControl) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// Limits to manual integration. Defaults to `false` if not specified.
func (o AppServiceSourceControlPtrOutput) ManualIntegration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceSourceControl) *bool {
		if v == nil {
			return nil
		}
		return v.ManualIntegration
	}).(pulumi.BoolPtrOutput)
}

// The URL of the source code repository.
func (o AppServiceSourceControlPtrOutput) RepoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceSourceControl) *string {
		if v == nil {
			return nil
		}
		return v.RepoUrl
	}).(pulumi.StringPtrOutput)
}

// Enable roll-back for the repository. Defaults to `false` if not specified.
func (o AppServiceSourceControlPtrOutput) RollbackEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceSourceControl) *bool {
		if v == nil {
			return nil
		}
		return v.RollbackEnabled
	}).(pulumi.BoolPtrOutput)
}

// Use Mercurial if `true`, otherwise uses Git.
func (o AppServiceSourceControlPtrOutput) UseMercurial() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceSourceControl) *bool {
		if v == nil {
			return nil
		}
		return v.UseMercurial
	}).(pulumi.BoolPtrOutput)
}

type AppServiceStorageAccount struct {
	// The access key for the storage account.
	AccessKey string `pulumi:"accessKey"`
	// The name of the storage account.
	AccountName string `pulumi:"accountName"`
	// The path to mount the storage within the site's runtime environment.
	MountPath *string `pulumi:"mountPath"`
	// The name of the storage account identifier.
	Name string `pulumi:"name"`
	// The name of the file share (container name, for Blob storage).
	ShareName string `pulumi:"shareName"`
	// The type of storage. Possible values are `AzureBlob` and `AzureFiles`.
	Type string `pulumi:"type"`
}

// AppServiceStorageAccountInput is an input type that accepts AppServiceStorageAccountArgs and AppServiceStorageAccountOutput values.
// You can construct a concrete instance of `AppServiceStorageAccountInput` via:
//
//          AppServiceStorageAccountArgs{...}
type AppServiceStorageAccountInput interface {
	pulumi.Input

	ToAppServiceStorageAccountOutput() AppServiceStorageAccountOutput
	ToAppServiceStorageAccountOutputWithContext(context.Context) AppServiceStorageAccountOutput
}

type AppServiceStorageAccountArgs struct {
	// The access key for the storage account.
	AccessKey pulumi.StringInput `pulumi:"accessKey"`
	// The name of the storage account.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The path to mount the storage within the site's runtime environment.
	MountPath pulumi.StringPtrInput `pulumi:"mountPath"`
	// The name of the storage account identifier.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the file share (container name, for Blob storage).
	ShareName pulumi.StringInput `pulumi:"shareName"`
	// The type of storage. Possible values are `AzureBlob` and `AzureFiles`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AppServiceStorageAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceStorageAccount)(nil)).Elem()
}

func (i AppServiceStorageAccountArgs) ToAppServiceStorageAccountOutput() AppServiceStorageAccountOutput {
	return i.ToAppServiceStorageAccountOutputWithContext(context.Background())
}

func (i AppServiceStorageAccountArgs) ToAppServiceStorageAccountOutputWithContext(ctx context.Context) AppServiceStorageAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceStorageAccountOutput)
}

// AppServiceStorageAccountArrayInput is an input type that accepts AppServiceStorageAccountArray and AppServiceStorageAccountArrayOutput values.
// You can construct a concrete instance of `AppServiceStorageAccountArrayInput` via:
//
//          AppServiceStorageAccountArray{ AppServiceStorageAccountArgs{...} }
type AppServiceStorageAccountArrayInput interface {
	pulumi.Input

	ToAppServiceStorageAccountArrayOutput() AppServiceStorageAccountArrayOutput
	ToAppServiceStorageAccountArrayOutputWithContext(context.Context) AppServiceStorageAccountArrayOutput
}

type AppServiceStorageAccountArray []AppServiceStorageAccountInput

func (AppServiceStorageAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppServiceStorageAccount)(nil)).Elem()
}

func (i AppServiceStorageAccountArray) ToAppServiceStorageAccountArrayOutput() AppServiceStorageAccountArrayOutput {
	return i.ToAppServiceStorageAccountArrayOutputWithContext(context.Background())
}

func (i AppServiceStorageAccountArray) ToAppServiceStorageAccountArrayOutputWithContext(ctx context.Context) AppServiceStorageAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceStorageAccountArrayOutput)
}

type AppServiceStorageAccountOutput struct{ *pulumi.OutputState }

func (AppServiceStorageAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceStorageAccount)(nil)).Elem()
}

func (o AppServiceStorageAccountOutput) ToAppServiceStorageAccountOutput() AppServiceStorageAccountOutput {
	return o
}

func (o AppServiceStorageAccountOutput) ToAppServiceStorageAccountOutputWithContext(ctx context.Context) AppServiceStorageAccountOutput {
	return o
}

// The access key for the storage account.
func (o AppServiceStorageAccountOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceStorageAccount) string { return v.AccessKey }).(pulumi.StringOutput)
}

// The name of the storage account.
func (o AppServiceStorageAccountOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceStorageAccount) string { return v.AccountName }).(pulumi.StringOutput)
}

// The path to mount the storage within the site's runtime environment.
func (o AppServiceStorageAccountOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceStorageAccount) *string { return v.MountPath }).(pulumi.StringPtrOutput)
}

// The name of the storage account identifier.
func (o AppServiceStorageAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceStorageAccount) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the file share (container name, for Blob storage).
func (o AppServiceStorageAccountOutput) ShareName() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceStorageAccount) string { return v.ShareName }).(pulumi.StringOutput)
}

// The type of storage. Possible values are `AzureBlob` and `AzureFiles`.
func (o AppServiceStorageAccountOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AppServiceStorageAccount) string { return v.Type }).(pulumi.StringOutput)
}

type AppServiceStorageAccountArrayOutput struct{ *pulumi.OutputState }

func (AppServiceStorageAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppServiceStorageAccount)(nil)).Elem()
}

func (o AppServiceStorageAccountArrayOutput) ToAppServiceStorageAccountArrayOutput() AppServiceStorageAccountArrayOutput {
	return o
}

func (o AppServiceStorageAccountArrayOutput) ToAppServiceStorageAccountArrayOutputWithContext(ctx context.Context) AppServiceStorageAccountArrayOutput {
	return o
}

func (o AppServiceStorageAccountArrayOutput) Index(i pulumi.IntInput) AppServiceStorageAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppServiceStorageAccount {
		return vs[0].([]AppServiceStorageAccount)[vs[1].(int)]
	}).(AppServiceStorageAccountOutput)
}

type CertificateOrderCertificate struct {
	// The name of the App Service Certificate.
	CertificateName *string `pulumi:"certificateName"`
	// Key Vault resource Id.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Key Vault secret name.
	KeyVaultSecretName *string `pulumi:"keyVaultSecretName"`
	// Status of the Key Vault secret.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// CertificateOrderCertificateInput is an input type that accepts CertificateOrderCertificateArgs and CertificateOrderCertificateOutput values.
// You can construct a concrete instance of `CertificateOrderCertificateInput` via:
//
//          CertificateOrderCertificateArgs{...}
type CertificateOrderCertificateInput interface {
	pulumi.Input

	ToCertificateOrderCertificateOutput() CertificateOrderCertificateOutput
	ToCertificateOrderCertificateOutputWithContext(context.Context) CertificateOrderCertificateOutput
}

type CertificateOrderCertificateArgs struct {
	// The name of the App Service Certificate.
	CertificateName pulumi.StringPtrInput `pulumi:"certificateName"`
	// Key Vault resource Id.
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// Key Vault secret name.
	KeyVaultSecretName pulumi.StringPtrInput `pulumi:"keyVaultSecretName"`
	// Status of the Key Vault secret.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (CertificateOrderCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateOrderCertificate)(nil)).Elem()
}

func (i CertificateOrderCertificateArgs) ToCertificateOrderCertificateOutput() CertificateOrderCertificateOutput {
	return i.ToCertificateOrderCertificateOutputWithContext(context.Background())
}

func (i CertificateOrderCertificateArgs) ToCertificateOrderCertificateOutputWithContext(ctx context.Context) CertificateOrderCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateOrderCertificateOutput)
}

// CertificateOrderCertificateArrayInput is an input type that accepts CertificateOrderCertificateArray and CertificateOrderCertificateArrayOutput values.
// You can construct a concrete instance of `CertificateOrderCertificateArrayInput` via:
//
//          CertificateOrderCertificateArray{ CertificateOrderCertificateArgs{...} }
type CertificateOrderCertificateArrayInput interface {
	pulumi.Input

	ToCertificateOrderCertificateArrayOutput() CertificateOrderCertificateArrayOutput
	ToCertificateOrderCertificateArrayOutputWithContext(context.Context) CertificateOrderCertificateArrayOutput
}

type CertificateOrderCertificateArray []CertificateOrderCertificateInput

func (CertificateOrderCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateOrderCertificate)(nil)).Elem()
}

func (i CertificateOrderCertificateArray) ToCertificateOrderCertificateArrayOutput() CertificateOrderCertificateArrayOutput {
	return i.ToCertificateOrderCertificateArrayOutputWithContext(context.Background())
}

func (i CertificateOrderCertificateArray) ToCertificateOrderCertificateArrayOutputWithContext(ctx context.Context) CertificateOrderCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateOrderCertificateArrayOutput)
}

type CertificateOrderCertificateOutput struct{ *pulumi.OutputState }

func (CertificateOrderCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateOrderCertificate)(nil)).Elem()
}

func (o CertificateOrderCertificateOutput) ToCertificateOrderCertificateOutput() CertificateOrderCertificateOutput {
	return o
}

func (o CertificateOrderCertificateOutput) ToCertificateOrderCertificateOutputWithContext(ctx context.Context) CertificateOrderCertificateOutput {
	return o
}

// The name of the App Service Certificate.
func (o CertificateOrderCertificateOutput) CertificateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderCertificate) *string { return v.CertificateName }).(pulumi.StringPtrOutput)
}

// Key Vault resource Id.
func (o CertificateOrderCertificateOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderCertificate) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Key Vault secret name.
func (o CertificateOrderCertificateOutput) KeyVaultSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderCertificate) *string { return v.KeyVaultSecretName }).(pulumi.StringPtrOutput)
}

// Status of the Key Vault secret.
func (o CertificateOrderCertificateOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOrderCertificate) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type CertificateOrderCertificateArrayOutput struct{ *pulumi.OutputState }

func (CertificateOrderCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateOrderCertificate)(nil)).Elem()
}

func (o CertificateOrderCertificateArrayOutput) ToCertificateOrderCertificateArrayOutput() CertificateOrderCertificateArrayOutput {
	return o
}

func (o CertificateOrderCertificateArrayOutput) ToCertificateOrderCertificateArrayOutputWithContext(ctx context.Context) CertificateOrderCertificateArrayOutput {
	return o
}

func (o CertificateOrderCertificateArrayOutput) Index(i pulumi.IntInput) CertificateOrderCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateOrderCertificate {
		return vs[0].([]CertificateOrderCertificate)[vs[1].(int)]
	}).(CertificateOrderCertificateOutput)
}

type EnvironmentClusterSetting struct {
	// The name of the Cluster Setting.
	Name string `pulumi:"name"`
	// The value for the Cluster Setting.
	Value string `pulumi:"value"`
}

// EnvironmentClusterSettingInput is an input type that accepts EnvironmentClusterSettingArgs and EnvironmentClusterSettingOutput values.
// You can construct a concrete instance of `EnvironmentClusterSettingInput` via:
//
//          EnvironmentClusterSettingArgs{...}
type EnvironmentClusterSettingInput interface {
	pulumi.Input

	ToEnvironmentClusterSettingOutput() EnvironmentClusterSettingOutput
	ToEnvironmentClusterSettingOutputWithContext(context.Context) EnvironmentClusterSettingOutput
}

type EnvironmentClusterSettingArgs struct {
	// The name of the Cluster Setting.
	Name pulumi.StringInput `pulumi:"name"`
	// The value for the Cluster Setting.
	Value pulumi.StringInput `pulumi:"value"`
}

func (EnvironmentClusterSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentClusterSetting)(nil)).Elem()
}

func (i EnvironmentClusterSettingArgs) ToEnvironmentClusterSettingOutput() EnvironmentClusterSettingOutput {
	return i.ToEnvironmentClusterSettingOutputWithContext(context.Background())
}

func (i EnvironmentClusterSettingArgs) ToEnvironmentClusterSettingOutputWithContext(ctx context.Context) EnvironmentClusterSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentClusterSettingOutput)
}

// EnvironmentClusterSettingArrayInput is an input type that accepts EnvironmentClusterSettingArray and EnvironmentClusterSettingArrayOutput values.
// You can construct a concrete instance of `EnvironmentClusterSettingArrayInput` via:
//
//          EnvironmentClusterSettingArray{ EnvironmentClusterSettingArgs{...} }
type EnvironmentClusterSettingArrayInput interface {
	pulumi.Input

	ToEnvironmentClusterSettingArrayOutput() EnvironmentClusterSettingArrayOutput
	ToEnvironmentClusterSettingArrayOutputWithContext(context.Context) EnvironmentClusterSettingArrayOutput
}

type EnvironmentClusterSettingArray []EnvironmentClusterSettingInput

func (EnvironmentClusterSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentClusterSetting)(nil)).Elem()
}

func (i EnvironmentClusterSettingArray) ToEnvironmentClusterSettingArrayOutput() EnvironmentClusterSettingArrayOutput {
	return i.ToEnvironmentClusterSettingArrayOutputWithContext(context.Background())
}

func (i EnvironmentClusterSettingArray) ToEnvironmentClusterSettingArrayOutputWithContext(ctx context.Context) EnvironmentClusterSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentClusterSettingArrayOutput)
}

type EnvironmentClusterSettingOutput struct{ *pulumi.OutputState }

func (EnvironmentClusterSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentClusterSetting)(nil)).Elem()
}

func (o EnvironmentClusterSettingOutput) ToEnvironmentClusterSettingOutput() EnvironmentClusterSettingOutput {
	return o
}

func (o EnvironmentClusterSettingOutput) ToEnvironmentClusterSettingOutputWithContext(ctx context.Context) EnvironmentClusterSettingOutput {
	return o
}

// The name of the Cluster Setting.
func (o EnvironmentClusterSettingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentClusterSetting) string { return v.Name }).(pulumi.StringOutput)
}

// The value for the Cluster Setting.
func (o EnvironmentClusterSettingOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentClusterSetting) string { return v.Value }).(pulumi.StringOutput)
}

type EnvironmentClusterSettingArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentClusterSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentClusterSetting)(nil)).Elem()
}

func (o EnvironmentClusterSettingArrayOutput) ToEnvironmentClusterSettingArrayOutput() EnvironmentClusterSettingArrayOutput {
	return o
}

func (o EnvironmentClusterSettingArrayOutput) ToEnvironmentClusterSettingArrayOutputWithContext(ctx context.Context) EnvironmentClusterSettingArrayOutput {
	return o
}

func (o EnvironmentClusterSettingArrayOutput) Index(i pulumi.IntInput) EnvironmentClusterSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentClusterSetting {
		return vs[0].([]EnvironmentClusterSetting)[vs[1].(int)]
	}).(EnvironmentClusterSettingOutput)
}

type FunctionAppAuthSettings struct {
	// A `activeDirectory` block as defined below.
	ActiveDirectory *FunctionAppAuthSettingsActiveDirectory `pulumi:"activeDirectory"`
	// Login parameters to send to the OpenID Connect authorization endpoint when a user logs in. Each parameter must be in the form "key=value".
	AdditionalLoginParams map[string]string `pulumi:"additionalLoginParams"`
	// External URLs that can be redirected to as part of logging in or logging out of the app.
	AllowedExternalRedirectUrls []string `pulumi:"allowedExternalRedirectUrls"`
	// The default provider to use when multiple providers have been set up. Possible values are `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount` and `Twitter`.
	DefaultProvider *string `pulumi:"defaultProvider"`
	// Is Authentication enabled?
	Enabled bool `pulumi:"enabled"`
	// A `facebook` block as defined below.
	Facebook *FunctionAppAuthSettingsFacebook `pulumi:"facebook"`
	// A `google` block as defined below.
	Google *FunctionAppAuthSettingsGoogle `pulumi:"google"`
	// Issuer URI. When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
	Issuer *string `pulumi:"issuer"`
	// A `microsoft` block as defined below.
	Microsoft *FunctionAppAuthSettingsMicrosoft `pulumi:"microsoft"`
	// The runtime version of the Authentication/Authorization module.
	RuntimeVersion *string `pulumi:"runtimeVersion"`
	// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72.
	TokenRefreshExtensionHours *float64 `pulumi:"tokenRefreshExtensionHours"`
	// If enabled the module will durably store platform-specific security tokens that are obtained during login flows. Defaults to false.
	TokenStoreEnabled *bool `pulumi:"tokenStoreEnabled"`
	// A `twitter` block as defined below.
	Twitter *FunctionAppAuthSettingsTwitter `pulumi:"twitter"`
	// The action to take when an unauthenticated client attempts to access the app. Possible values are `AllowAnonymous` and `RedirectToLoginPage`.
	UnauthenticatedClientAction *string `pulumi:"unauthenticatedClientAction"`
}

// FunctionAppAuthSettingsInput is an input type that accepts FunctionAppAuthSettingsArgs and FunctionAppAuthSettingsOutput values.
// You can construct a concrete instance of `FunctionAppAuthSettingsInput` via:
//
//          FunctionAppAuthSettingsArgs{...}
type FunctionAppAuthSettingsInput interface {
	pulumi.Input

	ToFunctionAppAuthSettingsOutput() FunctionAppAuthSettingsOutput
	ToFunctionAppAuthSettingsOutputWithContext(context.Context) FunctionAppAuthSettingsOutput
}

type FunctionAppAuthSettingsArgs struct {
	// A `activeDirectory` block as defined below.
	ActiveDirectory FunctionAppAuthSettingsActiveDirectoryPtrInput `pulumi:"activeDirectory"`
	// Login parameters to send to the OpenID Connect authorization endpoint when a user logs in. Each parameter must be in the form "key=value".
	AdditionalLoginParams pulumi.StringMapInput `pulumi:"additionalLoginParams"`
	// External URLs that can be redirected to as part of logging in or logging out of the app.
	AllowedExternalRedirectUrls pulumi.StringArrayInput `pulumi:"allowedExternalRedirectUrls"`
	// The default provider to use when multiple providers have been set up. Possible values are `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount` and `Twitter`.
	DefaultProvider pulumi.StringPtrInput `pulumi:"defaultProvider"`
	// Is Authentication enabled?
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// A `facebook` block as defined below.
	Facebook FunctionAppAuthSettingsFacebookPtrInput `pulumi:"facebook"`
	// A `google` block as defined below.
	Google FunctionAppAuthSettingsGooglePtrInput `pulumi:"google"`
	// Issuer URI. When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
	Issuer pulumi.StringPtrInput `pulumi:"issuer"`
	// A `microsoft` block as defined below.
	Microsoft FunctionAppAuthSettingsMicrosoftPtrInput `pulumi:"microsoft"`
	// The runtime version of the Authentication/Authorization module.
	RuntimeVersion pulumi.StringPtrInput `pulumi:"runtimeVersion"`
	// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72.
	TokenRefreshExtensionHours pulumi.Float64PtrInput `pulumi:"tokenRefreshExtensionHours"`
	// If enabled the module will durably store platform-specific security tokens that are obtained during login flows. Defaults to false.
	TokenStoreEnabled pulumi.BoolPtrInput `pulumi:"tokenStoreEnabled"`
	// A `twitter` block as defined below.
	Twitter FunctionAppAuthSettingsTwitterPtrInput `pulumi:"twitter"`
	// The action to take when an unauthenticated client attempts to access the app. Possible values are `AllowAnonymous` and `RedirectToLoginPage`.
	UnauthenticatedClientAction pulumi.StringPtrInput `pulumi:"unauthenticatedClientAction"`
}

func (FunctionAppAuthSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppAuthSettings)(nil)).Elem()
}

func (i FunctionAppAuthSettingsArgs) ToFunctionAppAuthSettingsOutput() FunctionAppAuthSettingsOutput {
	return i.ToFunctionAppAuthSettingsOutputWithContext(context.Background())
}

func (i FunctionAppAuthSettingsArgs) ToFunctionAppAuthSettingsOutputWithContext(ctx context.Context) FunctionAppAuthSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppAuthSettingsOutput)
}

func (i FunctionAppAuthSettingsArgs) ToFunctionAppAuthSettingsPtrOutput() FunctionAppAuthSettingsPtrOutput {
	return i.ToFunctionAppAuthSettingsPtrOutputWithContext(context.Background())
}

func (i FunctionAppAuthSettingsArgs) ToFunctionAppAuthSettingsPtrOutputWithContext(ctx context.Context) FunctionAppAuthSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppAuthSettingsOutput).ToFunctionAppAuthSettingsPtrOutputWithContext(ctx)
}

// FunctionAppAuthSettingsPtrInput is an input type that accepts FunctionAppAuthSettingsArgs, FunctionAppAuthSettingsPtr and FunctionAppAuthSettingsPtrOutput values.
// You can construct a concrete instance of `FunctionAppAuthSettingsPtrInput` via:
//
//          FunctionAppAuthSettingsArgs{...}
//
//  or:
//
//          nil
type FunctionAppAuthSettingsPtrInput interface {
	pulumi.Input

	ToFunctionAppAuthSettingsPtrOutput() FunctionAppAuthSettingsPtrOutput
	ToFunctionAppAuthSettingsPtrOutputWithContext(context.Context) FunctionAppAuthSettingsPtrOutput
}

type functionAppAuthSettingsPtrType FunctionAppAuthSettingsArgs

func FunctionAppAuthSettingsPtr(v *FunctionAppAuthSettingsArgs) FunctionAppAuthSettingsPtrInput {
	return (*functionAppAuthSettingsPtrType)(v)
}

func (*functionAppAuthSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppAuthSettings)(nil)).Elem()
}

func (i *functionAppAuthSettingsPtrType) ToFunctionAppAuthSettingsPtrOutput() FunctionAppAuthSettingsPtrOutput {
	return i.ToFunctionAppAuthSettingsPtrOutputWithContext(context.Background())
}

func (i *functionAppAuthSettingsPtrType) ToFunctionAppAuthSettingsPtrOutputWithContext(ctx context.Context) FunctionAppAuthSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppAuthSettingsPtrOutput)
}

type FunctionAppAuthSettingsOutput struct{ *pulumi.OutputState }

func (FunctionAppAuthSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppAuthSettings)(nil)).Elem()
}

func (o FunctionAppAuthSettingsOutput) ToFunctionAppAuthSettingsOutput() FunctionAppAuthSettingsOutput {
	return o
}

func (o FunctionAppAuthSettingsOutput) ToFunctionAppAuthSettingsOutputWithContext(ctx context.Context) FunctionAppAuthSettingsOutput {
	return o
}

func (o FunctionAppAuthSettingsOutput) ToFunctionAppAuthSettingsPtrOutput() FunctionAppAuthSettingsPtrOutput {
	return o.ToFunctionAppAuthSettingsPtrOutputWithContext(context.Background())
}

func (o FunctionAppAuthSettingsOutput) ToFunctionAppAuthSettingsPtrOutputWithContext(ctx context.Context) FunctionAppAuthSettingsPtrOutput {
	return o.ApplyT(func(v FunctionAppAuthSettings) *FunctionAppAuthSettings {
		return &v
	}).(FunctionAppAuthSettingsPtrOutput)
}

// A `activeDirectory` block as defined below.
func (o FunctionAppAuthSettingsOutput) ActiveDirectory() FunctionAppAuthSettingsActiveDirectoryPtrOutput {
	return o.ApplyT(func(v FunctionAppAuthSettings) *FunctionAppAuthSettingsActiveDirectory { return v.ActiveDirectory }).(FunctionAppAuthSettingsActiveDirectoryPtrOutput)
}

// Login parameters to send to the OpenID Connect authorization endpoint when a user logs in. Each parameter must be in the form "key=value".
func (o FunctionAppAuthSettingsOutput) AdditionalLoginParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v FunctionAppAuthSettings) map[string]string { return v.AdditionalLoginParams }).(pulumi.StringMapOutput)
}

// External URLs that can be redirected to as part of logging in or logging out of the app.
func (o FunctionAppAuthSettingsOutput) AllowedExternalRedirectUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionAppAuthSettings) []string { return v.AllowedExternalRedirectUrls }).(pulumi.StringArrayOutput)
}

// The default provider to use when multiple providers have been set up. Possible values are `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount` and `Twitter`.
func (o FunctionAppAuthSettingsOutput) DefaultProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppAuthSettings) *string { return v.DefaultProvider }).(pulumi.StringPtrOutput)
}

// Is Authentication enabled?
func (o FunctionAppAuthSettingsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v FunctionAppAuthSettings) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// A `facebook` block as defined below.
func (o FunctionAppAuthSettingsOutput) Facebook() FunctionAppAuthSettingsFacebookPtrOutput {
	return o.ApplyT(func(v FunctionAppAuthSettings) *FunctionAppAuthSettingsFacebook { return v.Facebook }).(FunctionAppAuthSettingsFacebookPtrOutput)
}

// A `google` block as defined below.
func (o FunctionAppAuthSettingsOutput) Google() FunctionAppAuthSettingsGooglePtrOutput {
	return o.ApplyT(func(v FunctionAppAuthSettings) *FunctionAppAuthSettingsGoogle { return v.Google }).(FunctionAppAuthSettingsGooglePtrOutput)
}

// Issuer URI. When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
func (o FunctionAppAuthSettingsOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppAuthSettings) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

// A `microsoft` block as defined below.
func (o FunctionAppAuthSettingsOutput) Microsoft() FunctionAppAuthSettingsMicrosoftPtrOutput {
	return o.ApplyT(func(v FunctionAppAuthSettings) *FunctionAppAuthSettingsMicrosoft { return v.Microsoft }).(FunctionAppAuthSettingsMicrosoftPtrOutput)
}

// The runtime version of the Authentication/Authorization module.
func (o FunctionAppAuthSettingsOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppAuthSettings) *string { return v.RuntimeVersion }).(pulumi.StringPtrOutput)
}

// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72.
func (o FunctionAppAuthSettingsOutput) TokenRefreshExtensionHours() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FunctionAppAuthSettings) *float64 { return v.TokenRefreshExtensionHours }).(pulumi.Float64PtrOutput)
}

// If enabled the module will durably store platform-specific security tokens that are obtained during login flows. Defaults to false.
func (o FunctionAppAuthSettingsOutput) TokenStoreEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionAppAuthSettings) *bool { return v.TokenStoreEnabled }).(pulumi.BoolPtrOutput)
}

// A `twitter` block as defined below.
func (o FunctionAppAuthSettingsOutput) Twitter() FunctionAppAuthSettingsTwitterPtrOutput {
	return o.ApplyT(func(v FunctionAppAuthSettings) *FunctionAppAuthSettingsTwitter { return v.Twitter }).(FunctionAppAuthSettingsTwitterPtrOutput)
}

// The action to take when an unauthenticated client attempts to access the app. Possible values are `AllowAnonymous` and `RedirectToLoginPage`.
func (o FunctionAppAuthSettingsOutput) UnauthenticatedClientAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppAuthSettings) *string { return v.UnauthenticatedClientAction }).(pulumi.StringPtrOutput)
}

type FunctionAppAuthSettingsPtrOutput struct{ *pulumi.OutputState }

func (FunctionAppAuthSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppAuthSettings)(nil)).Elem()
}

func (o FunctionAppAuthSettingsPtrOutput) ToFunctionAppAuthSettingsPtrOutput() FunctionAppAuthSettingsPtrOutput {
	return o
}

func (o FunctionAppAuthSettingsPtrOutput) ToFunctionAppAuthSettingsPtrOutputWithContext(ctx context.Context) FunctionAppAuthSettingsPtrOutput {
	return o
}

func (o FunctionAppAuthSettingsPtrOutput) Elem() FunctionAppAuthSettingsOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettings) FunctionAppAuthSettings { return *v }).(FunctionAppAuthSettingsOutput)
}

// A `activeDirectory` block as defined below.
func (o FunctionAppAuthSettingsPtrOutput) ActiveDirectory() FunctionAppAuthSettingsActiveDirectoryPtrOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettings) *FunctionAppAuthSettingsActiveDirectory {
		if v == nil {
			return nil
		}
		return v.ActiveDirectory
	}).(FunctionAppAuthSettingsActiveDirectoryPtrOutput)
}

// Login parameters to send to the OpenID Connect authorization endpoint when a user logs in. Each parameter must be in the form "key=value".
func (o FunctionAppAuthSettingsPtrOutput) AdditionalLoginParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettings) map[string]string {
		if v == nil {
			return nil
		}
		return v.AdditionalLoginParams
	}).(pulumi.StringMapOutput)
}

// External URLs that can be redirected to as part of logging in or logging out of the app.
func (o FunctionAppAuthSettingsPtrOutput) AllowedExternalRedirectUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettings) []string {
		if v == nil {
			return nil
		}
		return v.AllowedExternalRedirectUrls
	}).(pulumi.StringArrayOutput)
}

// The default provider to use when multiple providers have been set up. Possible values are `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount` and `Twitter`.
func (o FunctionAppAuthSettingsPtrOutput) DefaultProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettings) *string {
		if v == nil {
			return nil
		}
		return v.DefaultProvider
	}).(pulumi.StringPtrOutput)
}

// Is Authentication enabled?
func (o FunctionAppAuthSettingsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettings) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// A `facebook` block as defined below.
func (o FunctionAppAuthSettingsPtrOutput) Facebook() FunctionAppAuthSettingsFacebookPtrOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettings) *FunctionAppAuthSettingsFacebook {
		if v == nil {
			return nil
		}
		return v.Facebook
	}).(FunctionAppAuthSettingsFacebookPtrOutput)
}

// A `google` block as defined below.
func (o FunctionAppAuthSettingsPtrOutput) Google() FunctionAppAuthSettingsGooglePtrOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettings) *FunctionAppAuthSettingsGoogle {
		if v == nil {
			return nil
		}
		return v.Google
	}).(FunctionAppAuthSettingsGooglePtrOutput)
}

// Issuer URI. When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
func (o FunctionAppAuthSettingsPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettings) *string {
		if v == nil {
			return nil
		}
		return v.Issuer
	}).(pulumi.StringPtrOutput)
}

// A `microsoft` block as defined below.
func (o FunctionAppAuthSettingsPtrOutput) Microsoft() FunctionAppAuthSettingsMicrosoftPtrOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettings) *FunctionAppAuthSettingsMicrosoft {
		if v == nil {
			return nil
		}
		return v.Microsoft
	}).(FunctionAppAuthSettingsMicrosoftPtrOutput)
}

// The runtime version of the Authentication/Authorization module.
func (o FunctionAppAuthSettingsPtrOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettings) *string {
		if v == nil {
			return nil
		}
		return v.RuntimeVersion
	}).(pulumi.StringPtrOutput)
}

// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72.
func (o FunctionAppAuthSettingsPtrOutput) TokenRefreshExtensionHours() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettings) *float64 {
		if v == nil {
			return nil
		}
		return v.TokenRefreshExtensionHours
	}).(pulumi.Float64PtrOutput)
}

// If enabled the module will durably store platform-specific security tokens that are obtained during login flows. Defaults to false.
func (o FunctionAppAuthSettingsPtrOutput) TokenStoreEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettings) *bool {
		if v == nil {
			return nil
		}
		return v.TokenStoreEnabled
	}).(pulumi.BoolPtrOutput)
}

// A `twitter` block as defined below.
func (o FunctionAppAuthSettingsPtrOutput) Twitter() FunctionAppAuthSettingsTwitterPtrOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettings) *FunctionAppAuthSettingsTwitter {
		if v == nil {
			return nil
		}
		return v.Twitter
	}).(FunctionAppAuthSettingsTwitterPtrOutput)
}

// The action to take when an unauthenticated client attempts to access the app. Possible values are `AllowAnonymous` and `RedirectToLoginPage`.
func (o FunctionAppAuthSettingsPtrOutput) UnauthenticatedClientAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettings) *string {
		if v == nil {
			return nil
		}
		return v.UnauthenticatedClientAction
	}).(pulumi.StringPtrOutput)
}

type FunctionAppAuthSettingsActiveDirectory struct {
	// Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
	AllowedAudiences []string `pulumi:"allowedAudiences"`
	// The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
	ClientId string `pulumi:"clientId"`
	// The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.
	ClientSecret *string `pulumi:"clientSecret"`
}

// FunctionAppAuthSettingsActiveDirectoryInput is an input type that accepts FunctionAppAuthSettingsActiveDirectoryArgs and FunctionAppAuthSettingsActiveDirectoryOutput values.
// You can construct a concrete instance of `FunctionAppAuthSettingsActiveDirectoryInput` via:
//
//          FunctionAppAuthSettingsActiveDirectoryArgs{...}
type FunctionAppAuthSettingsActiveDirectoryInput interface {
	pulumi.Input

	ToFunctionAppAuthSettingsActiveDirectoryOutput() FunctionAppAuthSettingsActiveDirectoryOutput
	ToFunctionAppAuthSettingsActiveDirectoryOutputWithContext(context.Context) FunctionAppAuthSettingsActiveDirectoryOutput
}

type FunctionAppAuthSettingsActiveDirectoryArgs struct {
	// Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
	AllowedAudiences pulumi.StringArrayInput `pulumi:"allowedAudiences"`
	// The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
}

func (FunctionAppAuthSettingsActiveDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppAuthSettingsActiveDirectory)(nil)).Elem()
}

func (i FunctionAppAuthSettingsActiveDirectoryArgs) ToFunctionAppAuthSettingsActiveDirectoryOutput() FunctionAppAuthSettingsActiveDirectoryOutput {
	return i.ToFunctionAppAuthSettingsActiveDirectoryOutputWithContext(context.Background())
}

func (i FunctionAppAuthSettingsActiveDirectoryArgs) ToFunctionAppAuthSettingsActiveDirectoryOutputWithContext(ctx context.Context) FunctionAppAuthSettingsActiveDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppAuthSettingsActiveDirectoryOutput)
}

func (i FunctionAppAuthSettingsActiveDirectoryArgs) ToFunctionAppAuthSettingsActiveDirectoryPtrOutput() FunctionAppAuthSettingsActiveDirectoryPtrOutput {
	return i.ToFunctionAppAuthSettingsActiveDirectoryPtrOutputWithContext(context.Background())
}

func (i FunctionAppAuthSettingsActiveDirectoryArgs) ToFunctionAppAuthSettingsActiveDirectoryPtrOutputWithContext(ctx context.Context) FunctionAppAuthSettingsActiveDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppAuthSettingsActiveDirectoryOutput).ToFunctionAppAuthSettingsActiveDirectoryPtrOutputWithContext(ctx)
}

// FunctionAppAuthSettingsActiveDirectoryPtrInput is an input type that accepts FunctionAppAuthSettingsActiveDirectoryArgs, FunctionAppAuthSettingsActiveDirectoryPtr and FunctionAppAuthSettingsActiveDirectoryPtrOutput values.
// You can construct a concrete instance of `FunctionAppAuthSettingsActiveDirectoryPtrInput` via:
//
//          FunctionAppAuthSettingsActiveDirectoryArgs{...}
//
//  or:
//
//          nil
type FunctionAppAuthSettingsActiveDirectoryPtrInput interface {
	pulumi.Input

	ToFunctionAppAuthSettingsActiveDirectoryPtrOutput() FunctionAppAuthSettingsActiveDirectoryPtrOutput
	ToFunctionAppAuthSettingsActiveDirectoryPtrOutputWithContext(context.Context) FunctionAppAuthSettingsActiveDirectoryPtrOutput
}

type functionAppAuthSettingsActiveDirectoryPtrType FunctionAppAuthSettingsActiveDirectoryArgs

func FunctionAppAuthSettingsActiveDirectoryPtr(v *FunctionAppAuthSettingsActiveDirectoryArgs) FunctionAppAuthSettingsActiveDirectoryPtrInput {
	return (*functionAppAuthSettingsActiveDirectoryPtrType)(v)
}

func (*functionAppAuthSettingsActiveDirectoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppAuthSettingsActiveDirectory)(nil)).Elem()
}

func (i *functionAppAuthSettingsActiveDirectoryPtrType) ToFunctionAppAuthSettingsActiveDirectoryPtrOutput() FunctionAppAuthSettingsActiveDirectoryPtrOutput {
	return i.ToFunctionAppAuthSettingsActiveDirectoryPtrOutputWithContext(context.Background())
}

func (i *functionAppAuthSettingsActiveDirectoryPtrType) ToFunctionAppAuthSettingsActiveDirectoryPtrOutputWithContext(ctx context.Context) FunctionAppAuthSettingsActiveDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppAuthSettingsActiveDirectoryPtrOutput)
}

type FunctionAppAuthSettingsActiveDirectoryOutput struct{ *pulumi.OutputState }

func (FunctionAppAuthSettingsActiveDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppAuthSettingsActiveDirectory)(nil)).Elem()
}

func (o FunctionAppAuthSettingsActiveDirectoryOutput) ToFunctionAppAuthSettingsActiveDirectoryOutput() FunctionAppAuthSettingsActiveDirectoryOutput {
	return o
}

func (o FunctionAppAuthSettingsActiveDirectoryOutput) ToFunctionAppAuthSettingsActiveDirectoryOutputWithContext(ctx context.Context) FunctionAppAuthSettingsActiveDirectoryOutput {
	return o
}

func (o FunctionAppAuthSettingsActiveDirectoryOutput) ToFunctionAppAuthSettingsActiveDirectoryPtrOutput() FunctionAppAuthSettingsActiveDirectoryPtrOutput {
	return o.ToFunctionAppAuthSettingsActiveDirectoryPtrOutputWithContext(context.Background())
}

func (o FunctionAppAuthSettingsActiveDirectoryOutput) ToFunctionAppAuthSettingsActiveDirectoryPtrOutputWithContext(ctx context.Context) FunctionAppAuthSettingsActiveDirectoryPtrOutput {
	return o.ApplyT(func(v FunctionAppAuthSettingsActiveDirectory) *FunctionAppAuthSettingsActiveDirectory {
		return &v
	}).(FunctionAppAuthSettingsActiveDirectoryPtrOutput)
}

// Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
func (o FunctionAppAuthSettingsActiveDirectoryOutput) AllowedAudiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionAppAuthSettingsActiveDirectory) []string { return v.AllowedAudiences }).(pulumi.StringArrayOutput)
}

// The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
func (o FunctionAppAuthSettingsActiveDirectoryOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionAppAuthSettingsActiveDirectory) string { return v.ClientId }).(pulumi.StringOutput)
}

// The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.
func (o FunctionAppAuthSettingsActiveDirectoryOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppAuthSettingsActiveDirectory) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

type FunctionAppAuthSettingsActiveDirectoryPtrOutput struct{ *pulumi.OutputState }

func (FunctionAppAuthSettingsActiveDirectoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppAuthSettingsActiveDirectory)(nil)).Elem()
}

func (o FunctionAppAuthSettingsActiveDirectoryPtrOutput) ToFunctionAppAuthSettingsActiveDirectoryPtrOutput() FunctionAppAuthSettingsActiveDirectoryPtrOutput {
	return o
}

func (o FunctionAppAuthSettingsActiveDirectoryPtrOutput) ToFunctionAppAuthSettingsActiveDirectoryPtrOutputWithContext(ctx context.Context) FunctionAppAuthSettingsActiveDirectoryPtrOutput {
	return o
}

func (o FunctionAppAuthSettingsActiveDirectoryPtrOutput) Elem() FunctionAppAuthSettingsActiveDirectoryOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettingsActiveDirectory) FunctionAppAuthSettingsActiveDirectory { return *v }).(FunctionAppAuthSettingsActiveDirectoryOutput)
}

// Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
func (o FunctionAppAuthSettingsActiveDirectoryPtrOutput) AllowedAudiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettingsActiveDirectory) []string {
		if v == nil {
			return nil
		}
		return v.AllowedAudiences
	}).(pulumi.StringArrayOutput)
}

// The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
func (o FunctionAppAuthSettingsActiveDirectoryPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettingsActiveDirectory) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.
func (o FunctionAppAuthSettingsActiveDirectoryPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettingsActiveDirectory) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

type FunctionAppAuthSettingsFacebook struct {
	// The App ID of the Facebook app used for login
	AppId string `pulumi:"appId"`
	// The App Secret of the Facebook app used for Facebook Login.
	AppSecret string `pulumi:"appSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication. https://developers.facebook.com/docs/facebook-login
	OauthScopes []string `pulumi:"oauthScopes"`
}

// FunctionAppAuthSettingsFacebookInput is an input type that accepts FunctionAppAuthSettingsFacebookArgs and FunctionAppAuthSettingsFacebookOutput values.
// You can construct a concrete instance of `FunctionAppAuthSettingsFacebookInput` via:
//
//          FunctionAppAuthSettingsFacebookArgs{...}
type FunctionAppAuthSettingsFacebookInput interface {
	pulumi.Input

	ToFunctionAppAuthSettingsFacebookOutput() FunctionAppAuthSettingsFacebookOutput
	ToFunctionAppAuthSettingsFacebookOutputWithContext(context.Context) FunctionAppAuthSettingsFacebookOutput
}

type FunctionAppAuthSettingsFacebookArgs struct {
	// The App ID of the Facebook app used for login
	AppId pulumi.StringInput `pulumi:"appId"`
	// The App Secret of the Facebook app used for Facebook Login.
	AppSecret pulumi.StringInput `pulumi:"appSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication. https://developers.facebook.com/docs/facebook-login
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
}

func (FunctionAppAuthSettingsFacebookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppAuthSettingsFacebook)(nil)).Elem()
}

func (i FunctionAppAuthSettingsFacebookArgs) ToFunctionAppAuthSettingsFacebookOutput() FunctionAppAuthSettingsFacebookOutput {
	return i.ToFunctionAppAuthSettingsFacebookOutputWithContext(context.Background())
}

func (i FunctionAppAuthSettingsFacebookArgs) ToFunctionAppAuthSettingsFacebookOutputWithContext(ctx context.Context) FunctionAppAuthSettingsFacebookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppAuthSettingsFacebookOutput)
}

func (i FunctionAppAuthSettingsFacebookArgs) ToFunctionAppAuthSettingsFacebookPtrOutput() FunctionAppAuthSettingsFacebookPtrOutput {
	return i.ToFunctionAppAuthSettingsFacebookPtrOutputWithContext(context.Background())
}

func (i FunctionAppAuthSettingsFacebookArgs) ToFunctionAppAuthSettingsFacebookPtrOutputWithContext(ctx context.Context) FunctionAppAuthSettingsFacebookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppAuthSettingsFacebookOutput).ToFunctionAppAuthSettingsFacebookPtrOutputWithContext(ctx)
}

// FunctionAppAuthSettingsFacebookPtrInput is an input type that accepts FunctionAppAuthSettingsFacebookArgs, FunctionAppAuthSettingsFacebookPtr and FunctionAppAuthSettingsFacebookPtrOutput values.
// You can construct a concrete instance of `FunctionAppAuthSettingsFacebookPtrInput` via:
//
//          FunctionAppAuthSettingsFacebookArgs{...}
//
//  or:
//
//          nil
type FunctionAppAuthSettingsFacebookPtrInput interface {
	pulumi.Input

	ToFunctionAppAuthSettingsFacebookPtrOutput() FunctionAppAuthSettingsFacebookPtrOutput
	ToFunctionAppAuthSettingsFacebookPtrOutputWithContext(context.Context) FunctionAppAuthSettingsFacebookPtrOutput
}

type functionAppAuthSettingsFacebookPtrType FunctionAppAuthSettingsFacebookArgs

func FunctionAppAuthSettingsFacebookPtr(v *FunctionAppAuthSettingsFacebookArgs) FunctionAppAuthSettingsFacebookPtrInput {
	return (*functionAppAuthSettingsFacebookPtrType)(v)
}

func (*functionAppAuthSettingsFacebookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppAuthSettingsFacebook)(nil)).Elem()
}

func (i *functionAppAuthSettingsFacebookPtrType) ToFunctionAppAuthSettingsFacebookPtrOutput() FunctionAppAuthSettingsFacebookPtrOutput {
	return i.ToFunctionAppAuthSettingsFacebookPtrOutputWithContext(context.Background())
}

func (i *functionAppAuthSettingsFacebookPtrType) ToFunctionAppAuthSettingsFacebookPtrOutputWithContext(ctx context.Context) FunctionAppAuthSettingsFacebookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppAuthSettingsFacebookPtrOutput)
}

type FunctionAppAuthSettingsFacebookOutput struct{ *pulumi.OutputState }

func (FunctionAppAuthSettingsFacebookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppAuthSettingsFacebook)(nil)).Elem()
}

func (o FunctionAppAuthSettingsFacebookOutput) ToFunctionAppAuthSettingsFacebookOutput() FunctionAppAuthSettingsFacebookOutput {
	return o
}

func (o FunctionAppAuthSettingsFacebookOutput) ToFunctionAppAuthSettingsFacebookOutputWithContext(ctx context.Context) FunctionAppAuthSettingsFacebookOutput {
	return o
}

func (o FunctionAppAuthSettingsFacebookOutput) ToFunctionAppAuthSettingsFacebookPtrOutput() FunctionAppAuthSettingsFacebookPtrOutput {
	return o.ToFunctionAppAuthSettingsFacebookPtrOutputWithContext(context.Background())
}

func (o FunctionAppAuthSettingsFacebookOutput) ToFunctionAppAuthSettingsFacebookPtrOutputWithContext(ctx context.Context) FunctionAppAuthSettingsFacebookPtrOutput {
	return o.ApplyT(func(v FunctionAppAuthSettingsFacebook) *FunctionAppAuthSettingsFacebook {
		return &v
	}).(FunctionAppAuthSettingsFacebookPtrOutput)
}

// The App ID of the Facebook app used for login
func (o FunctionAppAuthSettingsFacebookOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionAppAuthSettingsFacebook) string { return v.AppId }).(pulumi.StringOutput)
}

// The App Secret of the Facebook app used for Facebook Login.
func (o FunctionAppAuthSettingsFacebookOutput) AppSecret() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionAppAuthSettingsFacebook) string { return v.AppSecret }).(pulumi.StringOutput)
}

// The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication. https://developers.facebook.com/docs/facebook-login
func (o FunctionAppAuthSettingsFacebookOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionAppAuthSettingsFacebook) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

type FunctionAppAuthSettingsFacebookPtrOutput struct{ *pulumi.OutputState }

func (FunctionAppAuthSettingsFacebookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppAuthSettingsFacebook)(nil)).Elem()
}

func (o FunctionAppAuthSettingsFacebookPtrOutput) ToFunctionAppAuthSettingsFacebookPtrOutput() FunctionAppAuthSettingsFacebookPtrOutput {
	return o
}

func (o FunctionAppAuthSettingsFacebookPtrOutput) ToFunctionAppAuthSettingsFacebookPtrOutputWithContext(ctx context.Context) FunctionAppAuthSettingsFacebookPtrOutput {
	return o
}

func (o FunctionAppAuthSettingsFacebookPtrOutput) Elem() FunctionAppAuthSettingsFacebookOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettingsFacebook) FunctionAppAuthSettingsFacebook { return *v }).(FunctionAppAuthSettingsFacebookOutput)
}

// The App ID of the Facebook app used for login
func (o FunctionAppAuthSettingsFacebookPtrOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettingsFacebook) *string {
		if v == nil {
			return nil
		}
		return &v.AppId
	}).(pulumi.StringPtrOutput)
}

// The App Secret of the Facebook app used for Facebook Login.
func (o FunctionAppAuthSettingsFacebookPtrOutput) AppSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettingsFacebook) *string {
		if v == nil {
			return nil
		}
		return &v.AppSecret
	}).(pulumi.StringPtrOutput)
}

// The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication. https://developers.facebook.com/docs/facebook-login
func (o FunctionAppAuthSettingsFacebookPtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettingsFacebook) []string {
		if v == nil {
			return nil
		}
		return v.OauthScopes
	}).(pulumi.StringArrayOutput)
}

type FunctionAppAuthSettingsGoogle struct {
	// The OpenID Connect Client ID for the Google web application.
	ClientId string `pulumi:"clientId"`
	// The client secret associated with the Google web application.
	ClientSecret string `pulumi:"clientSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. https://developers.google.com/identity/sign-in/web/
	OauthScopes []string `pulumi:"oauthScopes"`
}

// FunctionAppAuthSettingsGoogleInput is an input type that accepts FunctionAppAuthSettingsGoogleArgs and FunctionAppAuthSettingsGoogleOutput values.
// You can construct a concrete instance of `FunctionAppAuthSettingsGoogleInput` via:
//
//          FunctionAppAuthSettingsGoogleArgs{...}
type FunctionAppAuthSettingsGoogleInput interface {
	pulumi.Input

	ToFunctionAppAuthSettingsGoogleOutput() FunctionAppAuthSettingsGoogleOutput
	ToFunctionAppAuthSettingsGoogleOutputWithContext(context.Context) FunctionAppAuthSettingsGoogleOutput
}

type FunctionAppAuthSettingsGoogleArgs struct {
	// The OpenID Connect Client ID for the Google web application.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The client secret associated with the Google web application.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. https://developers.google.com/identity/sign-in/web/
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
}

func (FunctionAppAuthSettingsGoogleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppAuthSettingsGoogle)(nil)).Elem()
}

func (i FunctionAppAuthSettingsGoogleArgs) ToFunctionAppAuthSettingsGoogleOutput() FunctionAppAuthSettingsGoogleOutput {
	return i.ToFunctionAppAuthSettingsGoogleOutputWithContext(context.Background())
}

func (i FunctionAppAuthSettingsGoogleArgs) ToFunctionAppAuthSettingsGoogleOutputWithContext(ctx context.Context) FunctionAppAuthSettingsGoogleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppAuthSettingsGoogleOutput)
}

func (i FunctionAppAuthSettingsGoogleArgs) ToFunctionAppAuthSettingsGooglePtrOutput() FunctionAppAuthSettingsGooglePtrOutput {
	return i.ToFunctionAppAuthSettingsGooglePtrOutputWithContext(context.Background())
}

func (i FunctionAppAuthSettingsGoogleArgs) ToFunctionAppAuthSettingsGooglePtrOutputWithContext(ctx context.Context) FunctionAppAuthSettingsGooglePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppAuthSettingsGoogleOutput).ToFunctionAppAuthSettingsGooglePtrOutputWithContext(ctx)
}

// FunctionAppAuthSettingsGooglePtrInput is an input type that accepts FunctionAppAuthSettingsGoogleArgs, FunctionAppAuthSettingsGooglePtr and FunctionAppAuthSettingsGooglePtrOutput values.
// You can construct a concrete instance of `FunctionAppAuthSettingsGooglePtrInput` via:
//
//          FunctionAppAuthSettingsGoogleArgs{...}
//
//  or:
//
//          nil
type FunctionAppAuthSettingsGooglePtrInput interface {
	pulumi.Input

	ToFunctionAppAuthSettingsGooglePtrOutput() FunctionAppAuthSettingsGooglePtrOutput
	ToFunctionAppAuthSettingsGooglePtrOutputWithContext(context.Context) FunctionAppAuthSettingsGooglePtrOutput
}

type functionAppAuthSettingsGooglePtrType FunctionAppAuthSettingsGoogleArgs

func FunctionAppAuthSettingsGooglePtr(v *FunctionAppAuthSettingsGoogleArgs) FunctionAppAuthSettingsGooglePtrInput {
	return (*functionAppAuthSettingsGooglePtrType)(v)
}

func (*functionAppAuthSettingsGooglePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppAuthSettingsGoogle)(nil)).Elem()
}

func (i *functionAppAuthSettingsGooglePtrType) ToFunctionAppAuthSettingsGooglePtrOutput() FunctionAppAuthSettingsGooglePtrOutput {
	return i.ToFunctionAppAuthSettingsGooglePtrOutputWithContext(context.Background())
}

func (i *functionAppAuthSettingsGooglePtrType) ToFunctionAppAuthSettingsGooglePtrOutputWithContext(ctx context.Context) FunctionAppAuthSettingsGooglePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppAuthSettingsGooglePtrOutput)
}

type FunctionAppAuthSettingsGoogleOutput struct{ *pulumi.OutputState }

func (FunctionAppAuthSettingsGoogleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppAuthSettingsGoogle)(nil)).Elem()
}

func (o FunctionAppAuthSettingsGoogleOutput) ToFunctionAppAuthSettingsGoogleOutput() FunctionAppAuthSettingsGoogleOutput {
	return o
}

func (o FunctionAppAuthSettingsGoogleOutput) ToFunctionAppAuthSettingsGoogleOutputWithContext(ctx context.Context) FunctionAppAuthSettingsGoogleOutput {
	return o
}

func (o FunctionAppAuthSettingsGoogleOutput) ToFunctionAppAuthSettingsGooglePtrOutput() FunctionAppAuthSettingsGooglePtrOutput {
	return o.ToFunctionAppAuthSettingsGooglePtrOutputWithContext(context.Background())
}

func (o FunctionAppAuthSettingsGoogleOutput) ToFunctionAppAuthSettingsGooglePtrOutputWithContext(ctx context.Context) FunctionAppAuthSettingsGooglePtrOutput {
	return o.ApplyT(func(v FunctionAppAuthSettingsGoogle) *FunctionAppAuthSettingsGoogle {
		return &v
	}).(FunctionAppAuthSettingsGooglePtrOutput)
}

// The OpenID Connect Client ID for the Google web application.
func (o FunctionAppAuthSettingsGoogleOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionAppAuthSettingsGoogle) string { return v.ClientId }).(pulumi.StringOutput)
}

// The client secret associated with the Google web application.
func (o FunctionAppAuthSettingsGoogleOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionAppAuthSettingsGoogle) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. https://developers.google.com/identity/sign-in/web/
func (o FunctionAppAuthSettingsGoogleOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionAppAuthSettingsGoogle) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

type FunctionAppAuthSettingsGooglePtrOutput struct{ *pulumi.OutputState }

func (FunctionAppAuthSettingsGooglePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppAuthSettingsGoogle)(nil)).Elem()
}

func (o FunctionAppAuthSettingsGooglePtrOutput) ToFunctionAppAuthSettingsGooglePtrOutput() FunctionAppAuthSettingsGooglePtrOutput {
	return o
}

func (o FunctionAppAuthSettingsGooglePtrOutput) ToFunctionAppAuthSettingsGooglePtrOutputWithContext(ctx context.Context) FunctionAppAuthSettingsGooglePtrOutput {
	return o
}

func (o FunctionAppAuthSettingsGooglePtrOutput) Elem() FunctionAppAuthSettingsGoogleOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettingsGoogle) FunctionAppAuthSettingsGoogle { return *v }).(FunctionAppAuthSettingsGoogleOutput)
}

// The OpenID Connect Client ID for the Google web application.
func (o FunctionAppAuthSettingsGooglePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettingsGoogle) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The client secret associated with the Google web application.
func (o FunctionAppAuthSettingsGooglePtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettingsGoogle) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. https://developers.google.com/identity/sign-in/web/
func (o FunctionAppAuthSettingsGooglePtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettingsGoogle) []string {
		if v == nil {
			return nil
		}
		return v.OauthScopes
	}).(pulumi.StringArrayOutput)
}

type FunctionAppAuthSettingsMicrosoft struct {
	// The OAuth 2.0 client ID that was created for the app used for authentication.
	ClientId string `pulumi:"clientId"`
	// The OAuth 2.0 client secret that was created for the app used for authentication.
	ClientSecret string `pulumi:"clientSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. https://msdn.microsoft.com/en-us/library/dn631845.aspx
	OauthScopes []string `pulumi:"oauthScopes"`
}

// FunctionAppAuthSettingsMicrosoftInput is an input type that accepts FunctionAppAuthSettingsMicrosoftArgs and FunctionAppAuthSettingsMicrosoftOutput values.
// You can construct a concrete instance of `FunctionAppAuthSettingsMicrosoftInput` via:
//
//          FunctionAppAuthSettingsMicrosoftArgs{...}
type FunctionAppAuthSettingsMicrosoftInput interface {
	pulumi.Input

	ToFunctionAppAuthSettingsMicrosoftOutput() FunctionAppAuthSettingsMicrosoftOutput
	ToFunctionAppAuthSettingsMicrosoftOutputWithContext(context.Context) FunctionAppAuthSettingsMicrosoftOutput
}

type FunctionAppAuthSettingsMicrosoftArgs struct {
	// The OAuth 2.0 client ID that was created for the app used for authentication.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The OAuth 2.0 client secret that was created for the app used for authentication.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. https://msdn.microsoft.com/en-us/library/dn631845.aspx
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
}

func (FunctionAppAuthSettingsMicrosoftArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppAuthSettingsMicrosoft)(nil)).Elem()
}

func (i FunctionAppAuthSettingsMicrosoftArgs) ToFunctionAppAuthSettingsMicrosoftOutput() FunctionAppAuthSettingsMicrosoftOutput {
	return i.ToFunctionAppAuthSettingsMicrosoftOutputWithContext(context.Background())
}

func (i FunctionAppAuthSettingsMicrosoftArgs) ToFunctionAppAuthSettingsMicrosoftOutputWithContext(ctx context.Context) FunctionAppAuthSettingsMicrosoftOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppAuthSettingsMicrosoftOutput)
}

func (i FunctionAppAuthSettingsMicrosoftArgs) ToFunctionAppAuthSettingsMicrosoftPtrOutput() FunctionAppAuthSettingsMicrosoftPtrOutput {
	return i.ToFunctionAppAuthSettingsMicrosoftPtrOutputWithContext(context.Background())
}

func (i FunctionAppAuthSettingsMicrosoftArgs) ToFunctionAppAuthSettingsMicrosoftPtrOutputWithContext(ctx context.Context) FunctionAppAuthSettingsMicrosoftPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppAuthSettingsMicrosoftOutput).ToFunctionAppAuthSettingsMicrosoftPtrOutputWithContext(ctx)
}

// FunctionAppAuthSettingsMicrosoftPtrInput is an input type that accepts FunctionAppAuthSettingsMicrosoftArgs, FunctionAppAuthSettingsMicrosoftPtr and FunctionAppAuthSettingsMicrosoftPtrOutput values.
// You can construct a concrete instance of `FunctionAppAuthSettingsMicrosoftPtrInput` via:
//
//          FunctionAppAuthSettingsMicrosoftArgs{...}
//
//  or:
//
//          nil
type FunctionAppAuthSettingsMicrosoftPtrInput interface {
	pulumi.Input

	ToFunctionAppAuthSettingsMicrosoftPtrOutput() FunctionAppAuthSettingsMicrosoftPtrOutput
	ToFunctionAppAuthSettingsMicrosoftPtrOutputWithContext(context.Context) FunctionAppAuthSettingsMicrosoftPtrOutput
}

type functionAppAuthSettingsMicrosoftPtrType FunctionAppAuthSettingsMicrosoftArgs

func FunctionAppAuthSettingsMicrosoftPtr(v *FunctionAppAuthSettingsMicrosoftArgs) FunctionAppAuthSettingsMicrosoftPtrInput {
	return (*functionAppAuthSettingsMicrosoftPtrType)(v)
}

func (*functionAppAuthSettingsMicrosoftPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppAuthSettingsMicrosoft)(nil)).Elem()
}

func (i *functionAppAuthSettingsMicrosoftPtrType) ToFunctionAppAuthSettingsMicrosoftPtrOutput() FunctionAppAuthSettingsMicrosoftPtrOutput {
	return i.ToFunctionAppAuthSettingsMicrosoftPtrOutputWithContext(context.Background())
}

func (i *functionAppAuthSettingsMicrosoftPtrType) ToFunctionAppAuthSettingsMicrosoftPtrOutputWithContext(ctx context.Context) FunctionAppAuthSettingsMicrosoftPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppAuthSettingsMicrosoftPtrOutput)
}

type FunctionAppAuthSettingsMicrosoftOutput struct{ *pulumi.OutputState }

func (FunctionAppAuthSettingsMicrosoftOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppAuthSettingsMicrosoft)(nil)).Elem()
}

func (o FunctionAppAuthSettingsMicrosoftOutput) ToFunctionAppAuthSettingsMicrosoftOutput() FunctionAppAuthSettingsMicrosoftOutput {
	return o
}

func (o FunctionAppAuthSettingsMicrosoftOutput) ToFunctionAppAuthSettingsMicrosoftOutputWithContext(ctx context.Context) FunctionAppAuthSettingsMicrosoftOutput {
	return o
}

func (o FunctionAppAuthSettingsMicrosoftOutput) ToFunctionAppAuthSettingsMicrosoftPtrOutput() FunctionAppAuthSettingsMicrosoftPtrOutput {
	return o.ToFunctionAppAuthSettingsMicrosoftPtrOutputWithContext(context.Background())
}

func (o FunctionAppAuthSettingsMicrosoftOutput) ToFunctionAppAuthSettingsMicrosoftPtrOutputWithContext(ctx context.Context) FunctionAppAuthSettingsMicrosoftPtrOutput {
	return o.ApplyT(func(v FunctionAppAuthSettingsMicrosoft) *FunctionAppAuthSettingsMicrosoft {
		return &v
	}).(FunctionAppAuthSettingsMicrosoftPtrOutput)
}

// The OAuth 2.0 client ID that was created for the app used for authentication.
func (o FunctionAppAuthSettingsMicrosoftOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionAppAuthSettingsMicrosoft) string { return v.ClientId }).(pulumi.StringOutput)
}

// The OAuth 2.0 client secret that was created for the app used for authentication.
func (o FunctionAppAuthSettingsMicrosoftOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionAppAuthSettingsMicrosoft) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. https://msdn.microsoft.com/en-us/library/dn631845.aspx
func (o FunctionAppAuthSettingsMicrosoftOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionAppAuthSettingsMicrosoft) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

type FunctionAppAuthSettingsMicrosoftPtrOutput struct{ *pulumi.OutputState }

func (FunctionAppAuthSettingsMicrosoftPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppAuthSettingsMicrosoft)(nil)).Elem()
}

func (o FunctionAppAuthSettingsMicrosoftPtrOutput) ToFunctionAppAuthSettingsMicrosoftPtrOutput() FunctionAppAuthSettingsMicrosoftPtrOutput {
	return o
}

func (o FunctionAppAuthSettingsMicrosoftPtrOutput) ToFunctionAppAuthSettingsMicrosoftPtrOutputWithContext(ctx context.Context) FunctionAppAuthSettingsMicrosoftPtrOutput {
	return o
}

func (o FunctionAppAuthSettingsMicrosoftPtrOutput) Elem() FunctionAppAuthSettingsMicrosoftOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettingsMicrosoft) FunctionAppAuthSettingsMicrosoft { return *v }).(FunctionAppAuthSettingsMicrosoftOutput)
}

// The OAuth 2.0 client ID that was created for the app used for authentication.
func (o FunctionAppAuthSettingsMicrosoftPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettingsMicrosoft) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The OAuth 2.0 client secret that was created for the app used for authentication.
func (o FunctionAppAuthSettingsMicrosoftPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettingsMicrosoft) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. https://msdn.microsoft.com/en-us/library/dn631845.aspx
func (o FunctionAppAuthSettingsMicrosoftPtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettingsMicrosoft) []string {
		if v == nil {
			return nil
		}
		return v.OauthScopes
	}).(pulumi.StringArrayOutput)
}

type FunctionAppAuthSettingsTwitter struct {
	ConsumerKey    string `pulumi:"consumerKey"`
	ConsumerSecret string `pulumi:"consumerSecret"`
}

// FunctionAppAuthSettingsTwitterInput is an input type that accepts FunctionAppAuthSettingsTwitterArgs and FunctionAppAuthSettingsTwitterOutput values.
// You can construct a concrete instance of `FunctionAppAuthSettingsTwitterInput` via:
//
//          FunctionAppAuthSettingsTwitterArgs{...}
type FunctionAppAuthSettingsTwitterInput interface {
	pulumi.Input

	ToFunctionAppAuthSettingsTwitterOutput() FunctionAppAuthSettingsTwitterOutput
	ToFunctionAppAuthSettingsTwitterOutputWithContext(context.Context) FunctionAppAuthSettingsTwitterOutput
}

type FunctionAppAuthSettingsTwitterArgs struct {
	ConsumerKey    pulumi.StringInput `pulumi:"consumerKey"`
	ConsumerSecret pulumi.StringInput `pulumi:"consumerSecret"`
}

func (FunctionAppAuthSettingsTwitterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppAuthSettingsTwitter)(nil)).Elem()
}

func (i FunctionAppAuthSettingsTwitterArgs) ToFunctionAppAuthSettingsTwitterOutput() FunctionAppAuthSettingsTwitterOutput {
	return i.ToFunctionAppAuthSettingsTwitterOutputWithContext(context.Background())
}

func (i FunctionAppAuthSettingsTwitterArgs) ToFunctionAppAuthSettingsTwitterOutputWithContext(ctx context.Context) FunctionAppAuthSettingsTwitterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppAuthSettingsTwitterOutput)
}

func (i FunctionAppAuthSettingsTwitterArgs) ToFunctionAppAuthSettingsTwitterPtrOutput() FunctionAppAuthSettingsTwitterPtrOutput {
	return i.ToFunctionAppAuthSettingsTwitterPtrOutputWithContext(context.Background())
}

func (i FunctionAppAuthSettingsTwitterArgs) ToFunctionAppAuthSettingsTwitterPtrOutputWithContext(ctx context.Context) FunctionAppAuthSettingsTwitterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppAuthSettingsTwitterOutput).ToFunctionAppAuthSettingsTwitterPtrOutputWithContext(ctx)
}

// FunctionAppAuthSettingsTwitterPtrInput is an input type that accepts FunctionAppAuthSettingsTwitterArgs, FunctionAppAuthSettingsTwitterPtr and FunctionAppAuthSettingsTwitterPtrOutput values.
// You can construct a concrete instance of `FunctionAppAuthSettingsTwitterPtrInput` via:
//
//          FunctionAppAuthSettingsTwitterArgs{...}
//
//  or:
//
//          nil
type FunctionAppAuthSettingsTwitterPtrInput interface {
	pulumi.Input

	ToFunctionAppAuthSettingsTwitterPtrOutput() FunctionAppAuthSettingsTwitterPtrOutput
	ToFunctionAppAuthSettingsTwitterPtrOutputWithContext(context.Context) FunctionAppAuthSettingsTwitterPtrOutput
}

type functionAppAuthSettingsTwitterPtrType FunctionAppAuthSettingsTwitterArgs

func FunctionAppAuthSettingsTwitterPtr(v *FunctionAppAuthSettingsTwitterArgs) FunctionAppAuthSettingsTwitterPtrInput {
	return (*functionAppAuthSettingsTwitterPtrType)(v)
}

func (*functionAppAuthSettingsTwitterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppAuthSettingsTwitter)(nil)).Elem()
}

func (i *functionAppAuthSettingsTwitterPtrType) ToFunctionAppAuthSettingsTwitterPtrOutput() FunctionAppAuthSettingsTwitterPtrOutput {
	return i.ToFunctionAppAuthSettingsTwitterPtrOutputWithContext(context.Background())
}

func (i *functionAppAuthSettingsTwitterPtrType) ToFunctionAppAuthSettingsTwitterPtrOutputWithContext(ctx context.Context) FunctionAppAuthSettingsTwitterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppAuthSettingsTwitterPtrOutput)
}

type FunctionAppAuthSettingsTwitterOutput struct{ *pulumi.OutputState }

func (FunctionAppAuthSettingsTwitterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppAuthSettingsTwitter)(nil)).Elem()
}

func (o FunctionAppAuthSettingsTwitterOutput) ToFunctionAppAuthSettingsTwitterOutput() FunctionAppAuthSettingsTwitterOutput {
	return o
}

func (o FunctionAppAuthSettingsTwitterOutput) ToFunctionAppAuthSettingsTwitterOutputWithContext(ctx context.Context) FunctionAppAuthSettingsTwitterOutput {
	return o
}

func (o FunctionAppAuthSettingsTwitterOutput) ToFunctionAppAuthSettingsTwitterPtrOutput() FunctionAppAuthSettingsTwitterPtrOutput {
	return o.ToFunctionAppAuthSettingsTwitterPtrOutputWithContext(context.Background())
}

func (o FunctionAppAuthSettingsTwitterOutput) ToFunctionAppAuthSettingsTwitterPtrOutputWithContext(ctx context.Context) FunctionAppAuthSettingsTwitterPtrOutput {
	return o.ApplyT(func(v FunctionAppAuthSettingsTwitter) *FunctionAppAuthSettingsTwitter {
		return &v
	}).(FunctionAppAuthSettingsTwitterPtrOutput)
}
func (o FunctionAppAuthSettingsTwitterOutput) ConsumerKey() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionAppAuthSettingsTwitter) string { return v.ConsumerKey }).(pulumi.StringOutput)
}

func (o FunctionAppAuthSettingsTwitterOutput) ConsumerSecret() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionAppAuthSettingsTwitter) string { return v.ConsumerSecret }).(pulumi.StringOutput)
}

type FunctionAppAuthSettingsTwitterPtrOutput struct{ *pulumi.OutputState }

func (FunctionAppAuthSettingsTwitterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppAuthSettingsTwitter)(nil)).Elem()
}

func (o FunctionAppAuthSettingsTwitterPtrOutput) ToFunctionAppAuthSettingsTwitterPtrOutput() FunctionAppAuthSettingsTwitterPtrOutput {
	return o
}

func (o FunctionAppAuthSettingsTwitterPtrOutput) ToFunctionAppAuthSettingsTwitterPtrOutputWithContext(ctx context.Context) FunctionAppAuthSettingsTwitterPtrOutput {
	return o
}

func (o FunctionAppAuthSettingsTwitterPtrOutput) Elem() FunctionAppAuthSettingsTwitterOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettingsTwitter) FunctionAppAuthSettingsTwitter { return *v }).(FunctionAppAuthSettingsTwitterOutput)
}

func (o FunctionAppAuthSettingsTwitterPtrOutput) ConsumerKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettingsTwitter) *string {
		if v == nil {
			return nil
		}
		return &v.ConsumerKey
	}).(pulumi.StringPtrOutput)
}

func (o FunctionAppAuthSettingsTwitterPtrOutput) ConsumerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppAuthSettingsTwitter) *string {
		if v == nil {
			return nil
		}
		return &v.ConsumerSecret
	}).(pulumi.StringPtrOutput)
}

type FunctionAppConnectionString struct {
	// The name of the Connection String.
	Name string `pulumi:"name"`
	// The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure` and  `SQLServer`.
	Type string `pulumi:"type"`
	// The value for the Connection String.
	Value string `pulumi:"value"`
}

// FunctionAppConnectionStringInput is an input type that accepts FunctionAppConnectionStringArgs and FunctionAppConnectionStringOutput values.
// You can construct a concrete instance of `FunctionAppConnectionStringInput` via:
//
//          FunctionAppConnectionStringArgs{...}
type FunctionAppConnectionStringInput interface {
	pulumi.Input

	ToFunctionAppConnectionStringOutput() FunctionAppConnectionStringOutput
	ToFunctionAppConnectionStringOutputWithContext(context.Context) FunctionAppConnectionStringOutput
}

type FunctionAppConnectionStringArgs struct {
	// The name of the Connection String.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure` and  `SQLServer`.
	Type pulumi.StringInput `pulumi:"type"`
	// The value for the Connection String.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FunctionAppConnectionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppConnectionString)(nil)).Elem()
}

func (i FunctionAppConnectionStringArgs) ToFunctionAppConnectionStringOutput() FunctionAppConnectionStringOutput {
	return i.ToFunctionAppConnectionStringOutputWithContext(context.Background())
}

func (i FunctionAppConnectionStringArgs) ToFunctionAppConnectionStringOutputWithContext(ctx context.Context) FunctionAppConnectionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppConnectionStringOutput)
}

// FunctionAppConnectionStringArrayInput is an input type that accepts FunctionAppConnectionStringArray and FunctionAppConnectionStringArrayOutput values.
// You can construct a concrete instance of `FunctionAppConnectionStringArrayInput` via:
//
//          FunctionAppConnectionStringArray{ FunctionAppConnectionStringArgs{...} }
type FunctionAppConnectionStringArrayInput interface {
	pulumi.Input

	ToFunctionAppConnectionStringArrayOutput() FunctionAppConnectionStringArrayOutput
	ToFunctionAppConnectionStringArrayOutputWithContext(context.Context) FunctionAppConnectionStringArrayOutput
}

type FunctionAppConnectionStringArray []FunctionAppConnectionStringInput

func (FunctionAppConnectionStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionAppConnectionString)(nil)).Elem()
}

func (i FunctionAppConnectionStringArray) ToFunctionAppConnectionStringArrayOutput() FunctionAppConnectionStringArrayOutput {
	return i.ToFunctionAppConnectionStringArrayOutputWithContext(context.Background())
}

func (i FunctionAppConnectionStringArray) ToFunctionAppConnectionStringArrayOutputWithContext(ctx context.Context) FunctionAppConnectionStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppConnectionStringArrayOutput)
}

type FunctionAppConnectionStringOutput struct{ *pulumi.OutputState }

func (FunctionAppConnectionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppConnectionString)(nil)).Elem()
}

func (o FunctionAppConnectionStringOutput) ToFunctionAppConnectionStringOutput() FunctionAppConnectionStringOutput {
	return o
}

func (o FunctionAppConnectionStringOutput) ToFunctionAppConnectionStringOutputWithContext(ctx context.Context) FunctionAppConnectionStringOutput {
	return o
}

// The name of the Connection String.
func (o FunctionAppConnectionStringOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionAppConnectionString) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure` and  `SQLServer`.
func (o FunctionAppConnectionStringOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionAppConnectionString) string { return v.Type }).(pulumi.StringOutput)
}

// The value for the Connection String.
func (o FunctionAppConnectionStringOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionAppConnectionString) string { return v.Value }).(pulumi.StringOutput)
}

type FunctionAppConnectionStringArrayOutput struct{ *pulumi.OutputState }

func (FunctionAppConnectionStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionAppConnectionString)(nil)).Elem()
}

func (o FunctionAppConnectionStringArrayOutput) ToFunctionAppConnectionStringArrayOutput() FunctionAppConnectionStringArrayOutput {
	return o
}

func (o FunctionAppConnectionStringArrayOutput) ToFunctionAppConnectionStringArrayOutputWithContext(ctx context.Context) FunctionAppConnectionStringArrayOutput {
	return o
}

func (o FunctionAppConnectionStringArrayOutput) Index(i pulumi.IntInput) FunctionAppConnectionStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionAppConnectionString {
		return vs[0].([]FunctionAppConnectionString)[vs[1].(int)]
	}).(FunctionAppConnectionStringOutput)
}

type FunctionAppIdentity struct {
	// Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID for the Service Principal associated with the Managed Service Identity of this App Service.
	PrincipalId *string `pulumi:"principalId"`
	// The Tenant ID for the Service Principal associated with the Managed Service Identity of this App Service.
	TenantId *string `pulumi:"tenantId"`
	// Specifies the identity type of the Function App. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identityIds` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
	Type string `pulumi:"type"`
}

// FunctionAppIdentityInput is an input type that accepts FunctionAppIdentityArgs and FunctionAppIdentityOutput values.
// You can construct a concrete instance of `FunctionAppIdentityInput` via:
//
//          FunctionAppIdentityArgs{...}
type FunctionAppIdentityInput interface {
	pulumi.Input

	ToFunctionAppIdentityOutput() FunctionAppIdentityOutput
	ToFunctionAppIdentityOutputWithContext(context.Context) FunctionAppIdentityOutput
}

type FunctionAppIdentityArgs struct {
	// Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID for the Service Principal associated with the Managed Service Identity of this App Service.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The Tenant ID for the Service Principal associated with the Managed Service Identity of this App Service.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Specifies the identity type of the Function App. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identityIds` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FunctionAppIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppIdentity)(nil)).Elem()
}

func (i FunctionAppIdentityArgs) ToFunctionAppIdentityOutput() FunctionAppIdentityOutput {
	return i.ToFunctionAppIdentityOutputWithContext(context.Background())
}

func (i FunctionAppIdentityArgs) ToFunctionAppIdentityOutputWithContext(ctx context.Context) FunctionAppIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppIdentityOutput)
}

func (i FunctionAppIdentityArgs) ToFunctionAppIdentityPtrOutput() FunctionAppIdentityPtrOutput {
	return i.ToFunctionAppIdentityPtrOutputWithContext(context.Background())
}

func (i FunctionAppIdentityArgs) ToFunctionAppIdentityPtrOutputWithContext(ctx context.Context) FunctionAppIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppIdentityOutput).ToFunctionAppIdentityPtrOutputWithContext(ctx)
}

// FunctionAppIdentityPtrInput is an input type that accepts FunctionAppIdentityArgs, FunctionAppIdentityPtr and FunctionAppIdentityPtrOutput values.
// You can construct a concrete instance of `FunctionAppIdentityPtrInput` via:
//
//          FunctionAppIdentityArgs{...}
//
//  or:
//
//          nil
type FunctionAppIdentityPtrInput interface {
	pulumi.Input

	ToFunctionAppIdentityPtrOutput() FunctionAppIdentityPtrOutput
	ToFunctionAppIdentityPtrOutputWithContext(context.Context) FunctionAppIdentityPtrOutput
}

type functionAppIdentityPtrType FunctionAppIdentityArgs

func FunctionAppIdentityPtr(v *FunctionAppIdentityArgs) FunctionAppIdentityPtrInput {
	return (*functionAppIdentityPtrType)(v)
}

func (*functionAppIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppIdentity)(nil)).Elem()
}

func (i *functionAppIdentityPtrType) ToFunctionAppIdentityPtrOutput() FunctionAppIdentityPtrOutput {
	return i.ToFunctionAppIdentityPtrOutputWithContext(context.Background())
}

func (i *functionAppIdentityPtrType) ToFunctionAppIdentityPtrOutputWithContext(ctx context.Context) FunctionAppIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppIdentityPtrOutput)
}

type FunctionAppIdentityOutput struct{ *pulumi.OutputState }

func (FunctionAppIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppIdentity)(nil)).Elem()
}

func (o FunctionAppIdentityOutput) ToFunctionAppIdentityOutput() FunctionAppIdentityOutput {
	return o
}

func (o FunctionAppIdentityOutput) ToFunctionAppIdentityOutputWithContext(ctx context.Context) FunctionAppIdentityOutput {
	return o
}

func (o FunctionAppIdentityOutput) ToFunctionAppIdentityPtrOutput() FunctionAppIdentityPtrOutput {
	return o.ToFunctionAppIdentityPtrOutputWithContext(context.Background())
}

func (o FunctionAppIdentityOutput) ToFunctionAppIdentityPtrOutputWithContext(ctx context.Context) FunctionAppIdentityPtrOutput {
	return o.ApplyT(func(v FunctionAppIdentity) *FunctionAppIdentity {
		return &v
	}).(FunctionAppIdentityPtrOutput)
}

// Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
func (o FunctionAppIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionAppIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID for the Service Principal associated with the Managed Service Identity of this App Service.
func (o FunctionAppIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The Tenant ID for the Service Principal associated with the Managed Service Identity of this App Service.
func (o FunctionAppIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the identity type of the Function App. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identityIds` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
func (o FunctionAppIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionAppIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type FunctionAppIdentityPtrOutput struct{ *pulumi.OutputState }

func (FunctionAppIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppIdentity)(nil)).Elem()
}

func (o FunctionAppIdentityPtrOutput) ToFunctionAppIdentityPtrOutput() FunctionAppIdentityPtrOutput {
	return o
}

func (o FunctionAppIdentityPtrOutput) ToFunctionAppIdentityPtrOutputWithContext(ctx context.Context) FunctionAppIdentityPtrOutput {
	return o
}

func (o FunctionAppIdentityPtrOutput) Elem() FunctionAppIdentityOutput {
	return o.ApplyT(func(v *FunctionAppIdentity) FunctionAppIdentity { return *v }).(FunctionAppIdentityOutput)
}

// Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
func (o FunctionAppIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionAppIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The Principal ID for the Service Principal associated with the Managed Service Identity of this App Service.
func (o FunctionAppIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID for the Service Principal associated with the Managed Service Identity of this App Service.
func (o FunctionAppIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the identity type of the Function App. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identityIds` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
func (o FunctionAppIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type FunctionAppSiteConfig struct {
	// Should the Function App be loaded at all times? Defaults to `false`.
	AlwaysOn         *bool   `pulumi:"alwaysOn"`
	AutoSwapSlotName *string `pulumi:"autoSwapSlotName"`
	// A `cors` block as defined below.
	Cors *FunctionAppSiteConfigCors `pulumi:"cors"`
	// State of FTP / FTPS service for this function app. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`. Defaults to `AllAllowed`.
	FtpsState *string `pulumi:"ftpsState"`
	// Path which will be checked for this function app health.
	HealthCheckPath *string `pulumi:"healthCheckPath"`
	// Specifies whether or not the http2 protocol should be enabled. Defaults to `false`.
	Http2Enabled *bool `pulumi:"http2Enabled"`
	// A [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing ip restrictions as defined below.
	IpRestrictions []FunctionAppSiteConfigIpRestriction `pulumi:"ipRestrictions"`
	// Linux App Framework and version for the AppService, e.g. `DOCKER|(golang:latest)`.
	LinuxFxVersion *string `pulumi:"linuxFxVersion"`
	// The minimum supported TLS version for the function app. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new function apps.
	MinTlsVersion *string `pulumi:"minTlsVersion"`
	// The number of pre-warmed instances for this function app. Only affects apps on the Premium plan.
	PreWarmedInstanceCount *int `pulumi:"preWarmedInstanceCount"`
	// A [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing ip restrictions as defined below.
	ScmIpRestrictions []FunctionAppSiteConfigScmIpRestriction `pulumi:"scmIpRestrictions"`
	// The type of Source Control used by the Function App. Valid values include: `BitBucketGit`, `BitBucketHg`, `CodePlexGit`, `CodePlexHg`, `Dropbox`, `ExternalGit`, `ExternalHg`, `GitHub`, `LocalGit`, `None` (default), `OneDrive`, `Tfs`, `VSO`, and `VSTSRM`
	ScmType *string `pulumi:"scmType"`
	// IP security restrictions for scm to use main. Defaults to false.
	ScmUseMainIpRestriction *bool `pulumi:"scmUseMainIpRestriction"`
	// Should the Function App run in 32 bit mode, rather than 64 bit mode? Defaults to `true`.
	Use32BitWorkerProcess *bool `pulumi:"use32BitWorkerProcess"`
	// Should WebSockets be enabled?
	WebsocketsEnabled *bool `pulumi:"websocketsEnabled"`
}

// FunctionAppSiteConfigInput is an input type that accepts FunctionAppSiteConfigArgs and FunctionAppSiteConfigOutput values.
// You can construct a concrete instance of `FunctionAppSiteConfigInput` via:
//
//          FunctionAppSiteConfigArgs{...}
type FunctionAppSiteConfigInput interface {
	pulumi.Input

	ToFunctionAppSiteConfigOutput() FunctionAppSiteConfigOutput
	ToFunctionAppSiteConfigOutputWithContext(context.Context) FunctionAppSiteConfigOutput
}

type FunctionAppSiteConfigArgs struct {
	// Should the Function App be loaded at all times? Defaults to `false`.
	AlwaysOn         pulumi.BoolPtrInput   `pulumi:"alwaysOn"`
	AutoSwapSlotName pulumi.StringPtrInput `pulumi:"autoSwapSlotName"`
	// A `cors` block as defined below.
	Cors FunctionAppSiteConfigCorsPtrInput `pulumi:"cors"`
	// State of FTP / FTPS service for this function app. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`. Defaults to `AllAllowed`.
	FtpsState pulumi.StringPtrInput `pulumi:"ftpsState"`
	// Path which will be checked for this function app health.
	HealthCheckPath pulumi.StringPtrInput `pulumi:"healthCheckPath"`
	// Specifies whether or not the http2 protocol should be enabled. Defaults to `false`.
	Http2Enabled pulumi.BoolPtrInput `pulumi:"http2Enabled"`
	// A [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing ip restrictions as defined below.
	IpRestrictions FunctionAppSiteConfigIpRestrictionArrayInput `pulumi:"ipRestrictions"`
	// Linux App Framework and version for the AppService, e.g. `DOCKER|(golang:latest)`.
	LinuxFxVersion pulumi.StringPtrInput `pulumi:"linuxFxVersion"`
	// The minimum supported TLS version for the function app. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new function apps.
	MinTlsVersion pulumi.StringPtrInput `pulumi:"minTlsVersion"`
	// The number of pre-warmed instances for this function app. Only affects apps on the Premium plan.
	PreWarmedInstanceCount pulumi.IntPtrInput `pulumi:"preWarmedInstanceCount"`
	// A [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing ip restrictions as defined below.
	ScmIpRestrictions FunctionAppSiteConfigScmIpRestrictionArrayInput `pulumi:"scmIpRestrictions"`
	// The type of Source Control used by the Function App. Valid values include: `BitBucketGit`, `BitBucketHg`, `CodePlexGit`, `CodePlexHg`, `Dropbox`, `ExternalGit`, `ExternalHg`, `GitHub`, `LocalGit`, `None` (default), `OneDrive`, `Tfs`, `VSO`, and `VSTSRM`
	ScmType pulumi.StringPtrInput `pulumi:"scmType"`
	// IP security restrictions for scm to use main. Defaults to false.
	ScmUseMainIpRestriction pulumi.BoolPtrInput `pulumi:"scmUseMainIpRestriction"`
	// Should the Function App run in 32 bit mode, rather than 64 bit mode? Defaults to `true`.
	Use32BitWorkerProcess pulumi.BoolPtrInput `pulumi:"use32BitWorkerProcess"`
	// Should WebSockets be enabled?
	WebsocketsEnabled pulumi.BoolPtrInput `pulumi:"websocketsEnabled"`
}

func (FunctionAppSiteConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSiteConfig)(nil)).Elem()
}

func (i FunctionAppSiteConfigArgs) ToFunctionAppSiteConfigOutput() FunctionAppSiteConfigOutput {
	return i.ToFunctionAppSiteConfigOutputWithContext(context.Background())
}

func (i FunctionAppSiteConfigArgs) ToFunctionAppSiteConfigOutputWithContext(ctx context.Context) FunctionAppSiteConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSiteConfigOutput)
}

func (i FunctionAppSiteConfigArgs) ToFunctionAppSiteConfigPtrOutput() FunctionAppSiteConfigPtrOutput {
	return i.ToFunctionAppSiteConfigPtrOutputWithContext(context.Background())
}

func (i FunctionAppSiteConfigArgs) ToFunctionAppSiteConfigPtrOutputWithContext(ctx context.Context) FunctionAppSiteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSiteConfigOutput).ToFunctionAppSiteConfigPtrOutputWithContext(ctx)
}

// FunctionAppSiteConfigPtrInput is an input type that accepts FunctionAppSiteConfigArgs, FunctionAppSiteConfigPtr and FunctionAppSiteConfigPtrOutput values.
// You can construct a concrete instance of `FunctionAppSiteConfigPtrInput` via:
//
//          FunctionAppSiteConfigArgs{...}
//
//  or:
//
//          nil
type FunctionAppSiteConfigPtrInput interface {
	pulumi.Input

	ToFunctionAppSiteConfigPtrOutput() FunctionAppSiteConfigPtrOutput
	ToFunctionAppSiteConfigPtrOutputWithContext(context.Context) FunctionAppSiteConfigPtrOutput
}

type functionAppSiteConfigPtrType FunctionAppSiteConfigArgs

func FunctionAppSiteConfigPtr(v *FunctionAppSiteConfigArgs) FunctionAppSiteConfigPtrInput {
	return (*functionAppSiteConfigPtrType)(v)
}

func (*functionAppSiteConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppSiteConfig)(nil)).Elem()
}

func (i *functionAppSiteConfigPtrType) ToFunctionAppSiteConfigPtrOutput() FunctionAppSiteConfigPtrOutput {
	return i.ToFunctionAppSiteConfigPtrOutputWithContext(context.Background())
}

func (i *functionAppSiteConfigPtrType) ToFunctionAppSiteConfigPtrOutputWithContext(ctx context.Context) FunctionAppSiteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSiteConfigPtrOutput)
}

type FunctionAppSiteConfigOutput struct{ *pulumi.OutputState }

func (FunctionAppSiteConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSiteConfig)(nil)).Elem()
}

func (o FunctionAppSiteConfigOutput) ToFunctionAppSiteConfigOutput() FunctionAppSiteConfigOutput {
	return o
}

func (o FunctionAppSiteConfigOutput) ToFunctionAppSiteConfigOutputWithContext(ctx context.Context) FunctionAppSiteConfigOutput {
	return o
}

func (o FunctionAppSiteConfigOutput) ToFunctionAppSiteConfigPtrOutput() FunctionAppSiteConfigPtrOutput {
	return o.ToFunctionAppSiteConfigPtrOutputWithContext(context.Background())
}

func (o FunctionAppSiteConfigOutput) ToFunctionAppSiteConfigPtrOutputWithContext(ctx context.Context) FunctionAppSiteConfigPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfig) *FunctionAppSiteConfig {
		return &v
	}).(FunctionAppSiteConfigPtrOutput)
}

// Should the Function App be loaded at all times? Defaults to `false`.
func (o FunctionAppSiteConfigOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfig) *bool { return v.AlwaysOn }).(pulumi.BoolPtrOutput)
}

func (o FunctionAppSiteConfigOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfig) *string { return v.AutoSwapSlotName }).(pulumi.StringPtrOutput)
}

// A `cors` block as defined below.
func (o FunctionAppSiteConfigOutput) Cors() FunctionAppSiteConfigCorsPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfig) *FunctionAppSiteConfigCors { return v.Cors }).(FunctionAppSiteConfigCorsPtrOutput)
}

// State of FTP / FTPS service for this function app. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`. Defaults to `AllAllowed`.
func (o FunctionAppSiteConfigOutput) FtpsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfig) *string { return v.FtpsState }).(pulumi.StringPtrOutput)
}

// Path which will be checked for this function app health.
func (o FunctionAppSiteConfigOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfig) *string { return v.HealthCheckPath }).(pulumi.StringPtrOutput)
}

// Specifies whether or not the http2 protocol should be enabled. Defaults to `false`.
func (o FunctionAppSiteConfigOutput) Http2Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfig) *bool { return v.Http2Enabled }).(pulumi.BoolPtrOutput)
}

// A [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing ip restrictions as defined below.
func (o FunctionAppSiteConfigOutput) IpRestrictions() FunctionAppSiteConfigIpRestrictionArrayOutput {
	return o.ApplyT(func(v FunctionAppSiteConfig) []FunctionAppSiteConfigIpRestriction { return v.IpRestrictions }).(FunctionAppSiteConfigIpRestrictionArrayOutput)
}

// Linux App Framework and version for the AppService, e.g. `DOCKER|(golang:latest)`.
func (o FunctionAppSiteConfigOutput) LinuxFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfig) *string { return v.LinuxFxVersion }).(pulumi.StringPtrOutput)
}

// The minimum supported TLS version for the function app. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new function apps.
func (o FunctionAppSiteConfigOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfig) *string { return v.MinTlsVersion }).(pulumi.StringPtrOutput)
}

// The number of pre-warmed instances for this function app. Only affects apps on the Premium plan.
func (o FunctionAppSiteConfigOutput) PreWarmedInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfig) *int { return v.PreWarmedInstanceCount }).(pulumi.IntPtrOutput)
}

// A [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing ip restrictions as defined below.
func (o FunctionAppSiteConfigOutput) ScmIpRestrictions() FunctionAppSiteConfigScmIpRestrictionArrayOutput {
	return o.ApplyT(func(v FunctionAppSiteConfig) []FunctionAppSiteConfigScmIpRestriction { return v.ScmIpRestrictions }).(FunctionAppSiteConfigScmIpRestrictionArrayOutput)
}

// The type of Source Control used by the Function App. Valid values include: `BitBucketGit`, `BitBucketHg`, `CodePlexGit`, `CodePlexHg`, `Dropbox`, `ExternalGit`, `ExternalHg`, `GitHub`, `LocalGit`, `None` (default), `OneDrive`, `Tfs`, `VSO`, and `VSTSRM`
func (o FunctionAppSiteConfigOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfig) *string { return v.ScmType }).(pulumi.StringPtrOutput)
}

// IP security restrictions for scm to use main. Defaults to false.
func (o FunctionAppSiteConfigOutput) ScmUseMainIpRestriction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfig) *bool { return v.ScmUseMainIpRestriction }).(pulumi.BoolPtrOutput)
}

// Should the Function App run in 32 bit mode, rather than 64 bit mode? Defaults to `true`.
func (o FunctionAppSiteConfigOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfig) *bool { return v.Use32BitWorkerProcess }).(pulumi.BoolPtrOutput)
}

// Should WebSockets be enabled?
func (o FunctionAppSiteConfigOutput) WebsocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfig) *bool { return v.WebsocketsEnabled }).(pulumi.BoolPtrOutput)
}

type FunctionAppSiteConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionAppSiteConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppSiteConfig)(nil)).Elem()
}

func (o FunctionAppSiteConfigPtrOutput) ToFunctionAppSiteConfigPtrOutput() FunctionAppSiteConfigPtrOutput {
	return o
}

func (o FunctionAppSiteConfigPtrOutput) ToFunctionAppSiteConfigPtrOutputWithContext(ctx context.Context) FunctionAppSiteConfigPtrOutput {
	return o
}

func (o FunctionAppSiteConfigPtrOutput) Elem() FunctionAppSiteConfigOutput {
	return o.ApplyT(func(v *FunctionAppSiteConfig) FunctionAppSiteConfig { return *v }).(FunctionAppSiteConfigOutput)
}

// Should the Function App be loaded at all times? Defaults to `false`.
func (o FunctionAppSiteConfigPtrOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionAppSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AlwaysOn
	}).(pulumi.BoolPtrOutput)
}

func (o FunctionAppSiteConfigPtrOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.AutoSwapSlotName
	}).(pulumi.StringPtrOutput)
}

// A `cors` block as defined below.
func (o FunctionAppSiteConfigPtrOutput) Cors() FunctionAppSiteConfigCorsPtrOutput {
	return o.ApplyT(func(v *FunctionAppSiteConfig) *FunctionAppSiteConfigCors {
		if v == nil {
			return nil
		}
		return v.Cors
	}).(FunctionAppSiteConfigCorsPtrOutput)
}

// State of FTP / FTPS service for this function app. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`. Defaults to `AllAllowed`.
func (o FunctionAppSiteConfigPtrOutput) FtpsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.FtpsState
	}).(pulumi.StringPtrOutput)
}

// Path which will be checked for this function app health.
func (o FunctionAppSiteConfigPtrOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.HealthCheckPath
	}).(pulumi.StringPtrOutput)
}

// Specifies whether or not the http2 protocol should be enabled. Defaults to `false`.
func (o FunctionAppSiteConfigPtrOutput) Http2Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionAppSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Http2Enabled
	}).(pulumi.BoolPtrOutput)
}

// A [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing ip restrictions as defined below.
func (o FunctionAppSiteConfigPtrOutput) IpRestrictions() FunctionAppSiteConfigIpRestrictionArrayOutput {
	return o.ApplyT(func(v *FunctionAppSiteConfig) []FunctionAppSiteConfigIpRestriction {
		if v == nil {
			return nil
		}
		return v.IpRestrictions
	}).(FunctionAppSiteConfigIpRestrictionArrayOutput)
}

// Linux App Framework and version for the AppService, e.g. `DOCKER|(golang:latest)`.
func (o FunctionAppSiteConfigPtrOutput) LinuxFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.LinuxFxVersion
	}).(pulumi.StringPtrOutput)
}

// The minimum supported TLS version for the function app. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new function apps.
func (o FunctionAppSiteConfigPtrOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.MinTlsVersion
	}).(pulumi.StringPtrOutput)
}

// The number of pre-warmed instances for this function app. Only affects apps on the Premium plan.
func (o FunctionAppSiteConfigPtrOutput) PreWarmedInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FunctionAppSiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.PreWarmedInstanceCount
	}).(pulumi.IntPtrOutput)
}

// A [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing ip restrictions as defined below.
func (o FunctionAppSiteConfigPtrOutput) ScmIpRestrictions() FunctionAppSiteConfigScmIpRestrictionArrayOutput {
	return o.ApplyT(func(v *FunctionAppSiteConfig) []FunctionAppSiteConfigScmIpRestriction {
		if v == nil {
			return nil
		}
		return v.ScmIpRestrictions
	}).(FunctionAppSiteConfigScmIpRestrictionArrayOutput)
}

// The type of Source Control used by the Function App. Valid values include: `BitBucketGit`, `BitBucketHg`, `CodePlexGit`, `CodePlexHg`, `Dropbox`, `ExternalGit`, `ExternalHg`, `GitHub`, `LocalGit`, `None` (default), `OneDrive`, `Tfs`, `VSO`, and `VSTSRM`
func (o FunctionAppSiteConfigPtrOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.ScmType
	}).(pulumi.StringPtrOutput)
}

// IP security restrictions for scm to use main. Defaults to false.
func (o FunctionAppSiteConfigPtrOutput) ScmUseMainIpRestriction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionAppSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.ScmUseMainIpRestriction
	}).(pulumi.BoolPtrOutput)
}

// Should the Function App run in 32 bit mode, rather than 64 bit mode? Defaults to `true`.
func (o FunctionAppSiteConfigPtrOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionAppSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Use32BitWorkerProcess
	}).(pulumi.BoolPtrOutput)
}

// Should WebSockets be enabled?
func (o FunctionAppSiteConfigPtrOutput) WebsocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionAppSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.WebsocketsEnabled
	}).(pulumi.BoolPtrOutput)
}

type FunctionAppSiteConfigCors struct {
	// A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// Are credentials supported?
	SupportCredentials *bool `pulumi:"supportCredentials"`
}

// FunctionAppSiteConfigCorsInput is an input type that accepts FunctionAppSiteConfigCorsArgs and FunctionAppSiteConfigCorsOutput values.
// You can construct a concrete instance of `FunctionAppSiteConfigCorsInput` via:
//
//          FunctionAppSiteConfigCorsArgs{...}
type FunctionAppSiteConfigCorsInput interface {
	pulumi.Input

	ToFunctionAppSiteConfigCorsOutput() FunctionAppSiteConfigCorsOutput
	ToFunctionAppSiteConfigCorsOutputWithContext(context.Context) FunctionAppSiteConfigCorsOutput
}

type FunctionAppSiteConfigCorsArgs struct {
	// A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// Are credentials supported?
	SupportCredentials pulumi.BoolPtrInput `pulumi:"supportCredentials"`
}

func (FunctionAppSiteConfigCorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSiteConfigCors)(nil)).Elem()
}

func (i FunctionAppSiteConfigCorsArgs) ToFunctionAppSiteConfigCorsOutput() FunctionAppSiteConfigCorsOutput {
	return i.ToFunctionAppSiteConfigCorsOutputWithContext(context.Background())
}

func (i FunctionAppSiteConfigCorsArgs) ToFunctionAppSiteConfigCorsOutputWithContext(ctx context.Context) FunctionAppSiteConfigCorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSiteConfigCorsOutput)
}

func (i FunctionAppSiteConfigCorsArgs) ToFunctionAppSiteConfigCorsPtrOutput() FunctionAppSiteConfigCorsPtrOutput {
	return i.ToFunctionAppSiteConfigCorsPtrOutputWithContext(context.Background())
}

func (i FunctionAppSiteConfigCorsArgs) ToFunctionAppSiteConfigCorsPtrOutputWithContext(ctx context.Context) FunctionAppSiteConfigCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSiteConfigCorsOutput).ToFunctionAppSiteConfigCorsPtrOutputWithContext(ctx)
}

// FunctionAppSiteConfigCorsPtrInput is an input type that accepts FunctionAppSiteConfigCorsArgs, FunctionAppSiteConfigCorsPtr and FunctionAppSiteConfigCorsPtrOutput values.
// You can construct a concrete instance of `FunctionAppSiteConfigCorsPtrInput` via:
//
//          FunctionAppSiteConfigCorsArgs{...}
//
//  or:
//
//          nil
type FunctionAppSiteConfigCorsPtrInput interface {
	pulumi.Input

	ToFunctionAppSiteConfigCorsPtrOutput() FunctionAppSiteConfigCorsPtrOutput
	ToFunctionAppSiteConfigCorsPtrOutputWithContext(context.Context) FunctionAppSiteConfigCorsPtrOutput
}

type functionAppSiteConfigCorsPtrType FunctionAppSiteConfigCorsArgs

func FunctionAppSiteConfigCorsPtr(v *FunctionAppSiteConfigCorsArgs) FunctionAppSiteConfigCorsPtrInput {
	return (*functionAppSiteConfigCorsPtrType)(v)
}

func (*functionAppSiteConfigCorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppSiteConfigCors)(nil)).Elem()
}

func (i *functionAppSiteConfigCorsPtrType) ToFunctionAppSiteConfigCorsPtrOutput() FunctionAppSiteConfigCorsPtrOutput {
	return i.ToFunctionAppSiteConfigCorsPtrOutputWithContext(context.Background())
}

func (i *functionAppSiteConfigCorsPtrType) ToFunctionAppSiteConfigCorsPtrOutputWithContext(ctx context.Context) FunctionAppSiteConfigCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSiteConfigCorsPtrOutput)
}

type FunctionAppSiteConfigCorsOutput struct{ *pulumi.OutputState }

func (FunctionAppSiteConfigCorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSiteConfigCors)(nil)).Elem()
}

func (o FunctionAppSiteConfigCorsOutput) ToFunctionAppSiteConfigCorsOutput() FunctionAppSiteConfigCorsOutput {
	return o
}

func (o FunctionAppSiteConfigCorsOutput) ToFunctionAppSiteConfigCorsOutputWithContext(ctx context.Context) FunctionAppSiteConfigCorsOutput {
	return o
}

func (o FunctionAppSiteConfigCorsOutput) ToFunctionAppSiteConfigCorsPtrOutput() FunctionAppSiteConfigCorsPtrOutput {
	return o.ToFunctionAppSiteConfigCorsPtrOutputWithContext(context.Background())
}

func (o FunctionAppSiteConfigCorsOutput) ToFunctionAppSiteConfigCorsPtrOutputWithContext(ctx context.Context) FunctionAppSiteConfigCorsPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfigCors) *FunctionAppSiteConfigCors {
		return &v
	}).(FunctionAppSiteConfigCorsPtrOutput)
}

// A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
func (o FunctionAppSiteConfigCorsOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionAppSiteConfigCors) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// Are credentials supported?
func (o FunctionAppSiteConfigCorsOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfigCors) *bool { return v.SupportCredentials }).(pulumi.BoolPtrOutput)
}

type FunctionAppSiteConfigCorsPtrOutput struct{ *pulumi.OutputState }

func (FunctionAppSiteConfigCorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppSiteConfigCors)(nil)).Elem()
}

func (o FunctionAppSiteConfigCorsPtrOutput) ToFunctionAppSiteConfigCorsPtrOutput() FunctionAppSiteConfigCorsPtrOutput {
	return o
}

func (o FunctionAppSiteConfigCorsPtrOutput) ToFunctionAppSiteConfigCorsPtrOutputWithContext(ctx context.Context) FunctionAppSiteConfigCorsPtrOutput {
	return o
}

func (o FunctionAppSiteConfigCorsPtrOutput) Elem() FunctionAppSiteConfigCorsOutput {
	return o.ApplyT(func(v *FunctionAppSiteConfigCors) FunctionAppSiteConfigCors { return *v }).(FunctionAppSiteConfigCorsOutput)
}

// A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
func (o FunctionAppSiteConfigCorsPtrOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionAppSiteConfigCors) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrigins
	}).(pulumi.StringArrayOutput)
}

// Are credentials supported?
func (o FunctionAppSiteConfigCorsPtrOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionAppSiteConfigCors) *bool {
		if v == nil {
			return nil
		}
		return v.SupportCredentials
	}).(pulumi.BoolPtrOutput)
}

type FunctionAppSiteConfigIpRestriction struct {
	// Does this restriction `Allow` or `Deny` access for this IP range. Defaults to `Allow`.
	Action *string `pulumi:"action"`
	// The IP Address used for this IP Restriction in CIDR notation.
	IpAddress *string `pulumi:"ipAddress"`
	// The name for this IP Restriction.
	Name *string `pulumi:"name"`
	// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, the priority is set to 65000 if not specified.
	Priority *int `pulumi:"priority"`
	// The Service Tag used for this IP Restriction.
	ServiceTag *string `pulumi:"serviceTag"`
	// Deprecated: This field has been deprecated in favour of `virtual_network_subnet_id` and will be removed in a future version of the provider
	SubnetId *string `pulumi:"subnetId"`
	// The Virtual Network Subnet ID used for this IP Restriction.
	VirtualNetworkSubnetId *string `pulumi:"virtualNetworkSubnetId"`
}

// FunctionAppSiteConfigIpRestrictionInput is an input type that accepts FunctionAppSiteConfigIpRestrictionArgs and FunctionAppSiteConfigIpRestrictionOutput values.
// You can construct a concrete instance of `FunctionAppSiteConfigIpRestrictionInput` via:
//
//          FunctionAppSiteConfigIpRestrictionArgs{...}
type FunctionAppSiteConfigIpRestrictionInput interface {
	pulumi.Input

	ToFunctionAppSiteConfigIpRestrictionOutput() FunctionAppSiteConfigIpRestrictionOutput
	ToFunctionAppSiteConfigIpRestrictionOutputWithContext(context.Context) FunctionAppSiteConfigIpRestrictionOutput
}

type FunctionAppSiteConfigIpRestrictionArgs struct {
	// Does this restriction `Allow` or `Deny` access for this IP range. Defaults to `Allow`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// The IP Address used for this IP Restriction in CIDR notation.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The name for this IP Restriction.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, the priority is set to 65000 if not specified.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The Service Tag used for this IP Restriction.
	ServiceTag pulumi.StringPtrInput `pulumi:"serviceTag"`
	// Deprecated: This field has been deprecated in favour of `virtual_network_subnet_id` and will be removed in a future version of the provider
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The Virtual Network Subnet ID used for this IP Restriction.
	VirtualNetworkSubnetId pulumi.StringPtrInput `pulumi:"virtualNetworkSubnetId"`
}

func (FunctionAppSiteConfigIpRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSiteConfigIpRestriction)(nil)).Elem()
}

func (i FunctionAppSiteConfigIpRestrictionArgs) ToFunctionAppSiteConfigIpRestrictionOutput() FunctionAppSiteConfigIpRestrictionOutput {
	return i.ToFunctionAppSiteConfigIpRestrictionOutputWithContext(context.Background())
}

func (i FunctionAppSiteConfigIpRestrictionArgs) ToFunctionAppSiteConfigIpRestrictionOutputWithContext(ctx context.Context) FunctionAppSiteConfigIpRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSiteConfigIpRestrictionOutput)
}

// FunctionAppSiteConfigIpRestrictionArrayInput is an input type that accepts FunctionAppSiteConfigIpRestrictionArray and FunctionAppSiteConfigIpRestrictionArrayOutput values.
// You can construct a concrete instance of `FunctionAppSiteConfigIpRestrictionArrayInput` via:
//
//          FunctionAppSiteConfigIpRestrictionArray{ FunctionAppSiteConfigIpRestrictionArgs{...} }
type FunctionAppSiteConfigIpRestrictionArrayInput interface {
	pulumi.Input

	ToFunctionAppSiteConfigIpRestrictionArrayOutput() FunctionAppSiteConfigIpRestrictionArrayOutput
	ToFunctionAppSiteConfigIpRestrictionArrayOutputWithContext(context.Context) FunctionAppSiteConfigIpRestrictionArrayOutput
}

type FunctionAppSiteConfigIpRestrictionArray []FunctionAppSiteConfigIpRestrictionInput

func (FunctionAppSiteConfigIpRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionAppSiteConfigIpRestriction)(nil)).Elem()
}

func (i FunctionAppSiteConfigIpRestrictionArray) ToFunctionAppSiteConfigIpRestrictionArrayOutput() FunctionAppSiteConfigIpRestrictionArrayOutput {
	return i.ToFunctionAppSiteConfigIpRestrictionArrayOutputWithContext(context.Background())
}

func (i FunctionAppSiteConfigIpRestrictionArray) ToFunctionAppSiteConfigIpRestrictionArrayOutputWithContext(ctx context.Context) FunctionAppSiteConfigIpRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSiteConfigIpRestrictionArrayOutput)
}

type FunctionAppSiteConfigIpRestrictionOutput struct{ *pulumi.OutputState }

func (FunctionAppSiteConfigIpRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSiteConfigIpRestriction)(nil)).Elem()
}

func (o FunctionAppSiteConfigIpRestrictionOutput) ToFunctionAppSiteConfigIpRestrictionOutput() FunctionAppSiteConfigIpRestrictionOutput {
	return o
}

func (o FunctionAppSiteConfigIpRestrictionOutput) ToFunctionAppSiteConfigIpRestrictionOutputWithContext(ctx context.Context) FunctionAppSiteConfigIpRestrictionOutput {
	return o
}

// Does this restriction `Allow` or `Deny` access for this IP range. Defaults to `Allow`.
func (o FunctionAppSiteConfigIpRestrictionOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfigIpRestriction) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// The IP Address used for this IP Restriction in CIDR notation.
func (o FunctionAppSiteConfigIpRestrictionOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfigIpRestriction) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The name for this IP Restriction.
func (o FunctionAppSiteConfigIpRestrictionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfigIpRestriction) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, the priority is set to 65000 if not specified.
func (o FunctionAppSiteConfigIpRestrictionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfigIpRestriction) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The Service Tag used for this IP Restriction.
func (o FunctionAppSiteConfigIpRestrictionOutput) ServiceTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfigIpRestriction) *string { return v.ServiceTag }).(pulumi.StringPtrOutput)
}

// Deprecated: This field has been deprecated in favour of `virtual_network_subnet_id` and will be removed in a future version of the provider
func (o FunctionAppSiteConfigIpRestrictionOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfigIpRestriction) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The Virtual Network Subnet ID used for this IP Restriction.
func (o FunctionAppSiteConfigIpRestrictionOutput) VirtualNetworkSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfigIpRestriction) *string { return v.VirtualNetworkSubnetId }).(pulumi.StringPtrOutput)
}

type FunctionAppSiteConfigIpRestrictionArrayOutput struct{ *pulumi.OutputState }

func (FunctionAppSiteConfigIpRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionAppSiteConfigIpRestriction)(nil)).Elem()
}

func (o FunctionAppSiteConfigIpRestrictionArrayOutput) ToFunctionAppSiteConfigIpRestrictionArrayOutput() FunctionAppSiteConfigIpRestrictionArrayOutput {
	return o
}

func (o FunctionAppSiteConfigIpRestrictionArrayOutput) ToFunctionAppSiteConfigIpRestrictionArrayOutputWithContext(ctx context.Context) FunctionAppSiteConfigIpRestrictionArrayOutput {
	return o
}

func (o FunctionAppSiteConfigIpRestrictionArrayOutput) Index(i pulumi.IntInput) FunctionAppSiteConfigIpRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionAppSiteConfigIpRestriction {
		return vs[0].([]FunctionAppSiteConfigIpRestriction)[vs[1].(int)]
	}).(FunctionAppSiteConfigIpRestrictionOutput)
}

type FunctionAppSiteConfigScmIpRestriction struct {
	// Allow or Deny access for this IP range. Defaults to Allow.
	Action *string `pulumi:"action"`
	// The IP Address used for this IP Restriction in CIDR notation.
	IpAddress *string `pulumi:"ipAddress"`
	// The name for this IP Restriction.
	Name *string `pulumi:"name"`
	// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, priority is set to 65000 if not specified.
	Priority *int `pulumi:"priority"`
	// The Service Tag used for this IP Restriction.
	ServiceTag *string `pulumi:"serviceTag"`
	// Deprecated: This field has been deprecated in favour of `virtual_network_subnet_id` and will be removed in a future version of the provider
	SubnetId *string `pulumi:"subnetId"`
	// The Virtual Network Subnet ID used for this IP Restriction.
	VirtualNetworkSubnetId *string `pulumi:"virtualNetworkSubnetId"`
}

// FunctionAppSiteConfigScmIpRestrictionInput is an input type that accepts FunctionAppSiteConfigScmIpRestrictionArgs and FunctionAppSiteConfigScmIpRestrictionOutput values.
// You can construct a concrete instance of `FunctionAppSiteConfigScmIpRestrictionInput` via:
//
//          FunctionAppSiteConfigScmIpRestrictionArgs{...}
type FunctionAppSiteConfigScmIpRestrictionInput interface {
	pulumi.Input

	ToFunctionAppSiteConfigScmIpRestrictionOutput() FunctionAppSiteConfigScmIpRestrictionOutput
	ToFunctionAppSiteConfigScmIpRestrictionOutputWithContext(context.Context) FunctionAppSiteConfigScmIpRestrictionOutput
}

type FunctionAppSiteConfigScmIpRestrictionArgs struct {
	// Allow or Deny access for this IP range. Defaults to Allow.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// The IP Address used for this IP Restriction in CIDR notation.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The name for this IP Restriction.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, priority is set to 65000 if not specified.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The Service Tag used for this IP Restriction.
	ServiceTag pulumi.StringPtrInput `pulumi:"serviceTag"`
	// Deprecated: This field has been deprecated in favour of `virtual_network_subnet_id` and will be removed in a future version of the provider
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The Virtual Network Subnet ID used for this IP Restriction.
	VirtualNetworkSubnetId pulumi.StringPtrInput `pulumi:"virtualNetworkSubnetId"`
}

func (FunctionAppSiteConfigScmIpRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSiteConfigScmIpRestriction)(nil)).Elem()
}

func (i FunctionAppSiteConfigScmIpRestrictionArgs) ToFunctionAppSiteConfigScmIpRestrictionOutput() FunctionAppSiteConfigScmIpRestrictionOutput {
	return i.ToFunctionAppSiteConfigScmIpRestrictionOutputWithContext(context.Background())
}

func (i FunctionAppSiteConfigScmIpRestrictionArgs) ToFunctionAppSiteConfigScmIpRestrictionOutputWithContext(ctx context.Context) FunctionAppSiteConfigScmIpRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSiteConfigScmIpRestrictionOutput)
}

// FunctionAppSiteConfigScmIpRestrictionArrayInput is an input type that accepts FunctionAppSiteConfigScmIpRestrictionArray and FunctionAppSiteConfigScmIpRestrictionArrayOutput values.
// You can construct a concrete instance of `FunctionAppSiteConfigScmIpRestrictionArrayInput` via:
//
//          FunctionAppSiteConfigScmIpRestrictionArray{ FunctionAppSiteConfigScmIpRestrictionArgs{...} }
type FunctionAppSiteConfigScmIpRestrictionArrayInput interface {
	pulumi.Input

	ToFunctionAppSiteConfigScmIpRestrictionArrayOutput() FunctionAppSiteConfigScmIpRestrictionArrayOutput
	ToFunctionAppSiteConfigScmIpRestrictionArrayOutputWithContext(context.Context) FunctionAppSiteConfigScmIpRestrictionArrayOutput
}

type FunctionAppSiteConfigScmIpRestrictionArray []FunctionAppSiteConfigScmIpRestrictionInput

func (FunctionAppSiteConfigScmIpRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionAppSiteConfigScmIpRestriction)(nil)).Elem()
}

func (i FunctionAppSiteConfigScmIpRestrictionArray) ToFunctionAppSiteConfigScmIpRestrictionArrayOutput() FunctionAppSiteConfigScmIpRestrictionArrayOutput {
	return i.ToFunctionAppSiteConfigScmIpRestrictionArrayOutputWithContext(context.Background())
}

func (i FunctionAppSiteConfigScmIpRestrictionArray) ToFunctionAppSiteConfigScmIpRestrictionArrayOutputWithContext(ctx context.Context) FunctionAppSiteConfigScmIpRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSiteConfigScmIpRestrictionArrayOutput)
}

type FunctionAppSiteConfigScmIpRestrictionOutput struct{ *pulumi.OutputState }

func (FunctionAppSiteConfigScmIpRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSiteConfigScmIpRestriction)(nil)).Elem()
}

func (o FunctionAppSiteConfigScmIpRestrictionOutput) ToFunctionAppSiteConfigScmIpRestrictionOutput() FunctionAppSiteConfigScmIpRestrictionOutput {
	return o
}

func (o FunctionAppSiteConfigScmIpRestrictionOutput) ToFunctionAppSiteConfigScmIpRestrictionOutputWithContext(ctx context.Context) FunctionAppSiteConfigScmIpRestrictionOutput {
	return o
}

// Allow or Deny access for this IP range. Defaults to Allow.
func (o FunctionAppSiteConfigScmIpRestrictionOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfigScmIpRestriction) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// The IP Address used for this IP Restriction in CIDR notation.
func (o FunctionAppSiteConfigScmIpRestrictionOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfigScmIpRestriction) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The name for this IP Restriction.
func (o FunctionAppSiteConfigScmIpRestrictionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfigScmIpRestriction) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, priority is set to 65000 if not specified.
func (o FunctionAppSiteConfigScmIpRestrictionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfigScmIpRestriction) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The Service Tag used for this IP Restriction.
func (o FunctionAppSiteConfigScmIpRestrictionOutput) ServiceTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfigScmIpRestriction) *string { return v.ServiceTag }).(pulumi.StringPtrOutput)
}

// Deprecated: This field has been deprecated in favour of `virtual_network_subnet_id` and will be removed in a future version of the provider
func (o FunctionAppSiteConfigScmIpRestrictionOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfigScmIpRestriction) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The Virtual Network Subnet ID used for this IP Restriction.
func (o FunctionAppSiteConfigScmIpRestrictionOutput) VirtualNetworkSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteConfigScmIpRestriction) *string { return v.VirtualNetworkSubnetId }).(pulumi.StringPtrOutput)
}

type FunctionAppSiteConfigScmIpRestrictionArrayOutput struct{ *pulumi.OutputState }

func (FunctionAppSiteConfigScmIpRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionAppSiteConfigScmIpRestriction)(nil)).Elem()
}

func (o FunctionAppSiteConfigScmIpRestrictionArrayOutput) ToFunctionAppSiteConfigScmIpRestrictionArrayOutput() FunctionAppSiteConfigScmIpRestrictionArrayOutput {
	return o
}

func (o FunctionAppSiteConfigScmIpRestrictionArrayOutput) ToFunctionAppSiteConfigScmIpRestrictionArrayOutputWithContext(ctx context.Context) FunctionAppSiteConfigScmIpRestrictionArrayOutput {
	return o
}

func (o FunctionAppSiteConfigScmIpRestrictionArrayOutput) Index(i pulumi.IntInput) FunctionAppSiteConfigScmIpRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionAppSiteConfigScmIpRestriction {
		return vs[0].([]FunctionAppSiteConfigScmIpRestriction)[vs[1].(int)]
	}).(FunctionAppSiteConfigScmIpRestrictionOutput)
}

type FunctionAppSiteCredential struct {
	// The password associated with the username, which can be used to publish to this App Service.
	Password *string `pulumi:"password"`
	// The username which can be used to publish to this App Service
	Username *string `pulumi:"username"`
}

// FunctionAppSiteCredentialInput is an input type that accepts FunctionAppSiteCredentialArgs and FunctionAppSiteCredentialOutput values.
// You can construct a concrete instance of `FunctionAppSiteCredentialInput` via:
//
//          FunctionAppSiteCredentialArgs{...}
type FunctionAppSiteCredentialInput interface {
	pulumi.Input

	ToFunctionAppSiteCredentialOutput() FunctionAppSiteCredentialOutput
	ToFunctionAppSiteCredentialOutputWithContext(context.Context) FunctionAppSiteCredentialOutput
}

type FunctionAppSiteCredentialArgs struct {
	// The password associated with the username, which can be used to publish to this App Service.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The username which can be used to publish to this App Service
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (FunctionAppSiteCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSiteCredential)(nil)).Elem()
}

func (i FunctionAppSiteCredentialArgs) ToFunctionAppSiteCredentialOutput() FunctionAppSiteCredentialOutput {
	return i.ToFunctionAppSiteCredentialOutputWithContext(context.Background())
}

func (i FunctionAppSiteCredentialArgs) ToFunctionAppSiteCredentialOutputWithContext(ctx context.Context) FunctionAppSiteCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSiteCredentialOutput)
}

// FunctionAppSiteCredentialArrayInput is an input type that accepts FunctionAppSiteCredentialArray and FunctionAppSiteCredentialArrayOutput values.
// You can construct a concrete instance of `FunctionAppSiteCredentialArrayInput` via:
//
//          FunctionAppSiteCredentialArray{ FunctionAppSiteCredentialArgs{...} }
type FunctionAppSiteCredentialArrayInput interface {
	pulumi.Input

	ToFunctionAppSiteCredentialArrayOutput() FunctionAppSiteCredentialArrayOutput
	ToFunctionAppSiteCredentialArrayOutputWithContext(context.Context) FunctionAppSiteCredentialArrayOutput
}

type FunctionAppSiteCredentialArray []FunctionAppSiteCredentialInput

func (FunctionAppSiteCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionAppSiteCredential)(nil)).Elem()
}

func (i FunctionAppSiteCredentialArray) ToFunctionAppSiteCredentialArrayOutput() FunctionAppSiteCredentialArrayOutput {
	return i.ToFunctionAppSiteCredentialArrayOutputWithContext(context.Background())
}

func (i FunctionAppSiteCredentialArray) ToFunctionAppSiteCredentialArrayOutputWithContext(ctx context.Context) FunctionAppSiteCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSiteCredentialArrayOutput)
}

type FunctionAppSiteCredentialOutput struct{ *pulumi.OutputState }

func (FunctionAppSiteCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSiteCredential)(nil)).Elem()
}

func (o FunctionAppSiteCredentialOutput) ToFunctionAppSiteCredentialOutput() FunctionAppSiteCredentialOutput {
	return o
}

func (o FunctionAppSiteCredentialOutput) ToFunctionAppSiteCredentialOutputWithContext(ctx context.Context) FunctionAppSiteCredentialOutput {
	return o
}

// The password associated with the username, which can be used to publish to this App Service.
func (o FunctionAppSiteCredentialOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteCredential) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The username which can be used to publish to this App Service
func (o FunctionAppSiteCredentialOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSiteCredential) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type FunctionAppSiteCredentialArrayOutput struct{ *pulumi.OutputState }

func (FunctionAppSiteCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionAppSiteCredential)(nil)).Elem()
}

func (o FunctionAppSiteCredentialArrayOutput) ToFunctionAppSiteCredentialArrayOutput() FunctionAppSiteCredentialArrayOutput {
	return o
}

func (o FunctionAppSiteCredentialArrayOutput) ToFunctionAppSiteCredentialArrayOutputWithContext(ctx context.Context) FunctionAppSiteCredentialArrayOutput {
	return o
}

func (o FunctionAppSiteCredentialArrayOutput) Index(i pulumi.IntInput) FunctionAppSiteCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionAppSiteCredential {
		return vs[0].([]FunctionAppSiteCredential)[vs[1].(int)]
	}).(FunctionAppSiteCredentialOutput)
}

type FunctionAppSlotAuthSettings struct {
	// An `activeDirectory` block as defined below.
	ActiveDirectory *FunctionAppSlotAuthSettingsActiveDirectory `pulumi:"activeDirectory"`
	// Login parameters to send to the OpenID Connect authorization endpoint when a user logs in. Each parameter must be in the form "key=value".
	AdditionalLoginParams map[string]string `pulumi:"additionalLoginParams"`
	// External URLs that can be redirected to as part of logging in or logging out of the app.
	AllowedExternalRedirectUrls []string `pulumi:"allowedExternalRedirectUrls"`
	// The default provider to use when multiple providers have been set up. Possible values are `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount` and `Twitter`.
	DefaultProvider *string `pulumi:"defaultProvider"`
	// Is Authentication enabled?
	Enabled bool `pulumi:"enabled"`
	// A `facebook` block as defined below.
	Facebook *FunctionAppSlotAuthSettingsFacebook `pulumi:"facebook"`
	// A `google` block as defined below.
	Google *FunctionAppSlotAuthSettingsGoogle `pulumi:"google"`
	// Issuer URI. When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
	Issuer *string `pulumi:"issuer"`
	// A `microsoft` block as defined below.
	Microsoft *FunctionAppSlotAuthSettingsMicrosoft `pulumi:"microsoft"`
	// The runtime version of the Authentication/Authorization module.
	RuntimeVersion *string `pulumi:"runtimeVersion"`
	// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72.
	TokenRefreshExtensionHours *float64 `pulumi:"tokenRefreshExtensionHours"`
	// If enabled the module will durably store platform-specific security tokens that are obtained during login flows. Defaults to false.
	TokenStoreEnabled *bool `pulumi:"tokenStoreEnabled"`
	// A `twitter` block as defined below.
	Twitter *FunctionAppSlotAuthSettingsTwitter `pulumi:"twitter"`
	// The action to take when an unauthenticated client attempts to access the app. Possible values are `AllowAnonymous` and `RedirectToLoginPage`.
	UnauthenticatedClientAction *string `pulumi:"unauthenticatedClientAction"`
}

// FunctionAppSlotAuthSettingsInput is an input type that accepts FunctionAppSlotAuthSettingsArgs and FunctionAppSlotAuthSettingsOutput values.
// You can construct a concrete instance of `FunctionAppSlotAuthSettingsInput` via:
//
//          FunctionAppSlotAuthSettingsArgs{...}
type FunctionAppSlotAuthSettingsInput interface {
	pulumi.Input

	ToFunctionAppSlotAuthSettingsOutput() FunctionAppSlotAuthSettingsOutput
	ToFunctionAppSlotAuthSettingsOutputWithContext(context.Context) FunctionAppSlotAuthSettingsOutput
}

type FunctionAppSlotAuthSettingsArgs struct {
	// An `activeDirectory` block as defined below.
	ActiveDirectory FunctionAppSlotAuthSettingsActiveDirectoryPtrInput `pulumi:"activeDirectory"`
	// Login parameters to send to the OpenID Connect authorization endpoint when a user logs in. Each parameter must be in the form "key=value".
	AdditionalLoginParams pulumi.StringMapInput `pulumi:"additionalLoginParams"`
	// External URLs that can be redirected to as part of logging in or logging out of the app.
	AllowedExternalRedirectUrls pulumi.StringArrayInput `pulumi:"allowedExternalRedirectUrls"`
	// The default provider to use when multiple providers have been set up. Possible values are `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount` and `Twitter`.
	DefaultProvider pulumi.StringPtrInput `pulumi:"defaultProvider"`
	// Is Authentication enabled?
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// A `facebook` block as defined below.
	Facebook FunctionAppSlotAuthSettingsFacebookPtrInput `pulumi:"facebook"`
	// A `google` block as defined below.
	Google FunctionAppSlotAuthSettingsGooglePtrInput `pulumi:"google"`
	// Issuer URI. When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
	Issuer pulumi.StringPtrInput `pulumi:"issuer"`
	// A `microsoft` block as defined below.
	Microsoft FunctionAppSlotAuthSettingsMicrosoftPtrInput `pulumi:"microsoft"`
	// The runtime version of the Authentication/Authorization module.
	RuntimeVersion pulumi.StringPtrInput `pulumi:"runtimeVersion"`
	// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72.
	TokenRefreshExtensionHours pulumi.Float64PtrInput `pulumi:"tokenRefreshExtensionHours"`
	// If enabled the module will durably store platform-specific security tokens that are obtained during login flows. Defaults to false.
	TokenStoreEnabled pulumi.BoolPtrInput `pulumi:"tokenStoreEnabled"`
	// A `twitter` block as defined below.
	Twitter FunctionAppSlotAuthSettingsTwitterPtrInput `pulumi:"twitter"`
	// The action to take when an unauthenticated client attempts to access the app. Possible values are `AllowAnonymous` and `RedirectToLoginPage`.
	UnauthenticatedClientAction pulumi.StringPtrInput `pulumi:"unauthenticatedClientAction"`
}

func (FunctionAppSlotAuthSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSlotAuthSettings)(nil)).Elem()
}

func (i FunctionAppSlotAuthSettingsArgs) ToFunctionAppSlotAuthSettingsOutput() FunctionAppSlotAuthSettingsOutput {
	return i.ToFunctionAppSlotAuthSettingsOutputWithContext(context.Background())
}

func (i FunctionAppSlotAuthSettingsArgs) ToFunctionAppSlotAuthSettingsOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotAuthSettingsOutput)
}

func (i FunctionAppSlotAuthSettingsArgs) ToFunctionAppSlotAuthSettingsPtrOutput() FunctionAppSlotAuthSettingsPtrOutput {
	return i.ToFunctionAppSlotAuthSettingsPtrOutputWithContext(context.Background())
}

func (i FunctionAppSlotAuthSettingsArgs) ToFunctionAppSlotAuthSettingsPtrOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotAuthSettingsOutput).ToFunctionAppSlotAuthSettingsPtrOutputWithContext(ctx)
}

// FunctionAppSlotAuthSettingsPtrInput is an input type that accepts FunctionAppSlotAuthSettingsArgs, FunctionAppSlotAuthSettingsPtr and FunctionAppSlotAuthSettingsPtrOutput values.
// You can construct a concrete instance of `FunctionAppSlotAuthSettingsPtrInput` via:
//
//          FunctionAppSlotAuthSettingsArgs{...}
//
//  or:
//
//          nil
type FunctionAppSlotAuthSettingsPtrInput interface {
	pulumi.Input

	ToFunctionAppSlotAuthSettingsPtrOutput() FunctionAppSlotAuthSettingsPtrOutput
	ToFunctionAppSlotAuthSettingsPtrOutputWithContext(context.Context) FunctionAppSlotAuthSettingsPtrOutput
}

type functionAppSlotAuthSettingsPtrType FunctionAppSlotAuthSettingsArgs

func FunctionAppSlotAuthSettingsPtr(v *FunctionAppSlotAuthSettingsArgs) FunctionAppSlotAuthSettingsPtrInput {
	return (*functionAppSlotAuthSettingsPtrType)(v)
}

func (*functionAppSlotAuthSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppSlotAuthSettings)(nil)).Elem()
}

func (i *functionAppSlotAuthSettingsPtrType) ToFunctionAppSlotAuthSettingsPtrOutput() FunctionAppSlotAuthSettingsPtrOutput {
	return i.ToFunctionAppSlotAuthSettingsPtrOutputWithContext(context.Background())
}

func (i *functionAppSlotAuthSettingsPtrType) ToFunctionAppSlotAuthSettingsPtrOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotAuthSettingsPtrOutput)
}

type FunctionAppSlotAuthSettingsOutput struct{ *pulumi.OutputState }

func (FunctionAppSlotAuthSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSlotAuthSettings)(nil)).Elem()
}

func (o FunctionAppSlotAuthSettingsOutput) ToFunctionAppSlotAuthSettingsOutput() FunctionAppSlotAuthSettingsOutput {
	return o
}

func (o FunctionAppSlotAuthSettingsOutput) ToFunctionAppSlotAuthSettingsOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsOutput {
	return o
}

func (o FunctionAppSlotAuthSettingsOutput) ToFunctionAppSlotAuthSettingsPtrOutput() FunctionAppSlotAuthSettingsPtrOutput {
	return o.ToFunctionAppSlotAuthSettingsPtrOutputWithContext(context.Background())
}

func (o FunctionAppSlotAuthSettingsOutput) ToFunctionAppSlotAuthSettingsPtrOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettings) *FunctionAppSlotAuthSettings {
		return &v
	}).(FunctionAppSlotAuthSettingsPtrOutput)
}

// An `activeDirectory` block as defined below.
func (o FunctionAppSlotAuthSettingsOutput) ActiveDirectory() FunctionAppSlotAuthSettingsActiveDirectoryPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettings) *FunctionAppSlotAuthSettingsActiveDirectory {
		return v.ActiveDirectory
	}).(FunctionAppSlotAuthSettingsActiveDirectoryPtrOutput)
}

// Login parameters to send to the OpenID Connect authorization endpoint when a user logs in. Each parameter must be in the form "key=value".
func (o FunctionAppSlotAuthSettingsOutput) AdditionalLoginParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettings) map[string]string { return v.AdditionalLoginParams }).(pulumi.StringMapOutput)
}

// External URLs that can be redirected to as part of logging in or logging out of the app.
func (o FunctionAppSlotAuthSettingsOutput) AllowedExternalRedirectUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettings) []string { return v.AllowedExternalRedirectUrls }).(pulumi.StringArrayOutput)
}

// The default provider to use when multiple providers have been set up. Possible values are `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount` and `Twitter`.
func (o FunctionAppSlotAuthSettingsOutput) DefaultProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettings) *string { return v.DefaultProvider }).(pulumi.StringPtrOutput)
}

// Is Authentication enabled?
func (o FunctionAppSlotAuthSettingsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettings) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// A `facebook` block as defined below.
func (o FunctionAppSlotAuthSettingsOutput) Facebook() FunctionAppSlotAuthSettingsFacebookPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettings) *FunctionAppSlotAuthSettingsFacebook { return v.Facebook }).(FunctionAppSlotAuthSettingsFacebookPtrOutput)
}

// A `google` block as defined below.
func (o FunctionAppSlotAuthSettingsOutput) Google() FunctionAppSlotAuthSettingsGooglePtrOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettings) *FunctionAppSlotAuthSettingsGoogle { return v.Google }).(FunctionAppSlotAuthSettingsGooglePtrOutput)
}

// Issuer URI. When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
func (o FunctionAppSlotAuthSettingsOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettings) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

// A `microsoft` block as defined below.
func (o FunctionAppSlotAuthSettingsOutput) Microsoft() FunctionAppSlotAuthSettingsMicrosoftPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettings) *FunctionAppSlotAuthSettingsMicrosoft { return v.Microsoft }).(FunctionAppSlotAuthSettingsMicrosoftPtrOutput)
}

// The runtime version of the Authentication/Authorization module.
func (o FunctionAppSlotAuthSettingsOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettings) *string { return v.RuntimeVersion }).(pulumi.StringPtrOutput)
}

// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72.
func (o FunctionAppSlotAuthSettingsOutput) TokenRefreshExtensionHours() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettings) *float64 { return v.TokenRefreshExtensionHours }).(pulumi.Float64PtrOutput)
}

// If enabled the module will durably store platform-specific security tokens that are obtained during login flows. Defaults to false.
func (o FunctionAppSlotAuthSettingsOutput) TokenStoreEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettings) *bool { return v.TokenStoreEnabled }).(pulumi.BoolPtrOutput)
}

// A `twitter` block as defined below.
func (o FunctionAppSlotAuthSettingsOutput) Twitter() FunctionAppSlotAuthSettingsTwitterPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettings) *FunctionAppSlotAuthSettingsTwitter { return v.Twitter }).(FunctionAppSlotAuthSettingsTwitterPtrOutput)
}

// The action to take when an unauthenticated client attempts to access the app. Possible values are `AllowAnonymous` and `RedirectToLoginPage`.
func (o FunctionAppSlotAuthSettingsOutput) UnauthenticatedClientAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettings) *string { return v.UnauthenticatedClientAction }).(pulumi.StringPtrOutput)
}

type FunctionAppSlotAuthSettingsPtrOutput struct{ *pulumi.OutputState }

func (FunctionAppSlotAuthSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppSlotAuthSettings)(nil)).Elem()
}

func (o FunctionAppSlotAuthSettingsPtrOutput) ToFunctionAppSlotAuthSettingsPtrOutput() FunctionAppSlotAuthSettingsPtrOutput {
	return o
}

func (o FunctionAppSlotAuthSettingsPtrOutput) ToFunctionAppSlotAuthSettingsPtrOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsPtrOutput {
	return o
}

func (o FunctionAppSlotAuthSettingsPtrOutput) Elem() FunctionAppSlotAuthSettingsOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettings) FunctionAppSlotAuthSettings { return *v }).(FunctionAppSlotAuthSettingsOutput)
}

// An `activeDirectory` block as defined below.
func (o FunctionAppSlotAuthSettingsPtrOutput) ActiveDirectory() FunctionAppSlotAuthSettingsActiveDirectoryPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettings) *FunctionAppSlotAuthSettingsActiveDirectory {
		if v == nil {
			return nil
		}
		return v.ActiveDirectory
	}).(FunctionAppSlotAuthSettingsActiveDirectoryPtrOutput)
}

// Login parameters to send to the OpenID Connect authorization endpoint when a user logs in. Each parameter must be in the form "key=value".
func (o FunctionAppSlotAuthSettingsPtrOutput) AdditionalLoginParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettings) map[string]string {
		if v == nil {
			return nil
		}
		return v.AdditionalLoginParams
	}).(pulumi.StringMapOutput)
}

// External URLs that can be redirected to as part of logging in or logging out of the app.
func (o FunctionAppSlotAuthSettingsPtrOutput) AllowedExternalRedirectUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettings) []string {
		if v == nil {
			return nil
		}
		return v.AllowedExternalRedirectUrls
	}).(pulumi.StringArrayOutput)
}

// The default provider to use when multiple providers have been set up. Possible values are `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount` and `Twitter`.
func (o FunctionAppSlotAuthSettingsPtrOutput) DefaultProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettings) *string {
		if v == nil {
			return nil
		}
		return v.DefaultProvider
	}).(pulumi.StringPtrOutput)
}

// Is Authentication enabled?
func (o FunctionAppSlotAuthSettingsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettings) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// A `facebook` block as defined below.
func (o FunctionAppSlotAuthSettingsPtrOutput) Facebook() FunctionAppSlotAuthSettingsFacebookPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettings) *FunctionAppSlotAuthSettingsFacebook {
		if v == nil {
			return nil
		}
		return v.Facebook
	}).(FunctionAppSlotAuthSettingsFacebookPtrOutput)
}

// A `google` block as defined below.
func (o FunctionAppSlotAuthSettingsPtrOutput) Google() FunctionAppSlotAuthSettingsGooglePtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettings) *FunctionAppSlotAuthSettingsGoogle {
		if v == nil {
			return nil
		}
		return v.Google
	}).(FunctionAppSlotAuthSettingsGooglePtrOutput)
}

// Issuer URI. When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
func (o FunctionAppSlotAuthSettingsPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettings) *string {
		if v == nil {
			return nil
		}
		return v.Issuer
	}).(pulumi.StringPtrOutput)
}

// A `microsoft` block as defined below.
func (o FunctionAppSlotAuthSettingsPtrOutput) Microsoft() FunctionAppSlotAuthSettingsMicrosoftPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettings) *FunctionAppSlotAuthSettingsMicrosoft {
		if v == nil {
			return nil
		}
		return v.Microsoft
	}).(FunctionAppSlotAuthSettingsMicrosoftPtrOutput)
}

// The runtime version of the Authentication/Authorization module.
func (o FunctionAppSlotAuthSettingsPtrOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettings) *string {
		if v == nil {
			return nil
		}
		return v.RuntimeVersion
	}).(pulumi.StringPtrOutput)
}

// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72.
func (o FunctionAppSlotAuthSettingsPtrOutput) TokenRefreshExtensionHours() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettings) *float64 {
		if v == nil {
			return nil
		}
		return v.TokenRefreshExtensionHours
	}).(pulumi.Float64PtrOutput)
}

// If enabled the module will durably store platform-specific security tokens that are obtained during login flows. Defaults to false.
func (o FunctionAppSlotAuthSettingsPtrOutput) TokenStoreEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettings) *bool {
		if v == nil {
			return nil
		}
		return v.TokenStoreEnabled
	}).(pulumi.BoolPtrOutput)
}

// A `twitter` block as defined below.
func (o FunctionAppSlotAuthSettingsPtrOutput) Twitter() FunctionAppSlotAuthSettingsTwitterPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettings) *FunctionAppSlotAuthSettingsTwitter {
		if v == nil {
			return nil
		}
		return v.Twitter
	}).(FunctionAppSlotAuthSettingsTwitterPtrOutput)
}

// The action to take when an unauthenticated client attempts to access the app. Possible values are `AllowAnonymous` and `RedirectToLoginPage`.
func (o FunctionAppSlotAuthSettingsPtrOutput) UnauthenticatedClientAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettings) *string {
		if v == nil {
			return nil
		}
		return v.UnauthenticatedClientAction
	}).(pulumi.StringPtrOutput)
}

type FunctionAppSlotAuthSettingsActiveDirectory struct {
	// Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
	AllowedAudiences []string `pulumi:"allowedAudiences"`
	// The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
	ClientId string `pulumi:"clientId"`
	// The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.
	ClientSecret *string `pulumi:"clientSecret"`
}

// FunctionAppSlotAuthSettingsActiveDirectoryInput is an input type that accepts FunctionAppSlotAuthSettingsActiveDirectoryArgs and FunctionAppSlotAuthSettingsActiveDirectoryOutput values.
// You can construct a concrete instance of `FunctionAppSlotAuthSettingsActiveDirectoryInput` via:
//
//          FunctionAppSlotAuthSettingsActiveDirectoryArgs{...}
type FunctionAppSlotAuthSettingsActiveDirectoryInput interface {
	pulumi.Input

	ToFunctionAppSlotAuthSettingsActiveDirectoryOutput() FunctionAppSlotAuthSettingsActiveDirectoryOutput
	ToFunctionAppSlotAuthSettingsActiveDirectoryOutputWithContext(context.Context) FunctionAppSlotAuthSettingsActiveDirectoryOutput
}

type FunctionAppSlotAuthSettingsActiveDirectoryArgs struct {
	// Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
	AllowedAudiences pulumi.StringArrayInput `pulumi:"allowedAudiences"`
	// The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
}

func (FunctionAppSlotAuthSettingsActiveDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSlotAuthSettingsActiveDirectory)(nil)).Elem()
}

func (i FunctionAppSlotAuthSettingsActiveDirectoryArgs) ToFunctionAppSlotAuthSettingsActiveDirectoryOutput() FunctionAppSlotAuthSettingsActiveDirectoryOutput {
	return i.ToFunctionAppSlotAuthSettingsActiveDirectoryOutputWithContext(context.Background())
}

func (i FunctionAppSlotAuthSettingsActiveDirectoryArgs) ToFunctionAppSlotAuthSettingsActiveDirectoryOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsActiveDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotAuthSettingsActiveDirectoryOutput)
}

func (i FunctionAppSlotAuthSettingsActiveDirectoryArgs) ToFunctionAppSlotAuthSettingsActiveDirectoryPtrOutput() FunctionAppSlotAuthSettingsActiveDirectoryPtrOutput {
	return i.ToFunctionAppSlotAuthSettingsActiveDirectoryPtrOutputWithContext(context.Background())
}

func (i FunctionAppSlotAuthSettingsActiveDirectoryArgs) ToFunctionAppSlotAuthSettingsActiveDirectoryPtrOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsActiveDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotAuthSettingsActiveDirectoryOutput).ToFunctionAppSlotAuthSettingsActiveDirectoryPtrOutputWithContext(ctx)
}

// FunctionAppSlotAuthSettingsActiveDirectoryPtrInput is an input type that accepts FunctionAppSlotAuthSettingsActiveDirectoryArgs, FunctionAppSlotAuthSettingsActiveDirectoryPtr and FunctionAppSlotAuthSettingsActiveDirectoryPtrOutput values.
// You can construct a concrete instance of `FunctionAppSlotAuthSettingsActiveDirectoryPtrInput` via:
//
//          FunctionAppSlotAuthSettingsActiveDirectoryArgs{...}
//
//  or:
//
//          nil
type FunctionAppSlotAuthSettingsActiveDirectoryPtrInput interface {
	pulumi.Input

	ToFunctionAppSlotAuthSettingsActiveDirectoryPtrOutput() FunctionAppSlotAuthSettingsActiveDirectoryPtrOutput
	ToFunctionAppSlotAuthSettingsActiveDirectoryPtrOutputWithContext(context.Context) FunctionAppSlotAuthSettingsActiveDirectoryPtrOutput
}

type functionAppSlotAuthSettingsActiveDirectoryPtrType FunctionAppSlotAuthSettingsActiveDirectoryArgs

func FunctionAppSlotAuthSettingsActiveDirectoryPtr(v *FunctionAppSlotAuthSettingsActiveDirectoryArgs) FunctionAppSlotAuthSettingsActiveDirectoryPtrInput {
	return (*functionAppSlotAuthSettingsActiveDirectoryPtrType)(v)
}

func (*functionAppSlotAuthSettingsActiveDirectoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppSlotAuthSettingsActiveDirectory)(nil)).Elem()
}

func (i *functionAppSlotAuthSettingsActiveDirectoryPtrType) ToFunctionAppSlotAuthSettingsActiveDirectoryPtrOutput() FunctionAppSlotAuthSettingsActiveDirectoryPtrOutput {
	return i.ToFunctionAppSlotAuthSettingsActiveDirectoryPtrOutputWithContext(context.Background())
}

func (i *functionAppSlotAuthSettingsActiveDirectoryPtrType) ToFunctionAppSlotAuthSettingsActiveDirectoryPtrOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsActiveDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotAuthSettingsActiveDirectoryPtrOutput)
}

type FunctionAppSlotAuthSettingsActiveDirectoryOutput struct{ *pulumi.OutputState }

func (FunctionAppSlotAuthSettingsActiveDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSlotAuthSettingsActiveDirectory)(nil)).Elem()
}

func (o FunctionAppSlotAuthSettingsActiveDirectoryOutput) ToFunctionAppSlotAuthSettingsActiveDirectoryOutput() FunctionAppSlotAuthSettingsActiveDirectoryOutput {
	return o
}

func (o FunctionAppSlotAuthSettingsActiveDirectoryOutput) ToFunctionAppSlotAuthSettingsActiveDirectoryOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsActiveDirectoryOutput {
	return o
}

func (o FunctionAppSlotAuthSettingsActiveDirectoryOutput) ToFunctionAppSlotAuthSettingsActiveDirectoryPtrOutput() FunctionAppSlotAuthSettingsActiveDirectoryPtrOutput {
	return o.ToFunctionAppSlotAuthSettingsActiveDirectoryPtrOutputWithContext(context.Background())
}

func (o FunctionAppSlotAuthSettingsActiveDirectoryOutput) ToFunctionAppSlotAuthSettingsActiveDirectoryPtrOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsActiveDirectoryPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettingsActiveDirectory) *FunctionAppSlotAuthSettingsActiveDirectory {
		return &v
	}).(FunctionAppSlotAuthSettingsActiveDirectoryPtrOutput)
}

// Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
func (o FunctionAppSlotAuthSettingsActiveDirectoryOutput) AllowedAudiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettingsActiveDirectory) []string { return v.AllowedAudiences }).(pulumi.StringArrayOutput)
}

// The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
func (o FunctionAppSlotAuthSettingsActiveDirectoryOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettingsActiveDirectory) string { return v.ClientId }).(pulumi.StringOutput)
}

// The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.
func (o FunctionAppSlotAuthSettingsActiveDirectoryOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettingsActiveDirectory) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

type FunctionAppSlotAuthSettingsActiveDirectoryPtrOutput struct{ *pulumi.OutputState }

func (FunctionAppSlotAuthSettingsActiveDirectoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppSlotAuthSettingsActiveDirectory)(nil)).Elem()
}

func (o FunctionAppSlotAuthSettingsActiveDirectoryPtrOutput) ToFunctionAppSlotAuthSettingsActiveDirectoryPtrOutput() FunctionAppSlotAuthSettingsActiveDirectoryPtrOutput {
	return o
}

func (o FunctionAppSlotAuthSettingsActiveDirectoryPtrOutput) ToFunctionAppSlotAuthSettingsActiveDirectoryPtrOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsActiveDirectoryPtrOutput {
	return o
}

func (o FunctionAppSlotAuthSettingsActiveDirectoryPtrOutput) Elem() FunctionAppSlotAuthSettingsActiveDirectoryOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettingsActiveDirectory) FunctionAppSlotAuthSettingsActiveDirectory {
		return *v
	}).(FunctionAppSlotAuthSettingsActiveDirectoryOutput)
}

// Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
func (o FunctionAppSlotAuthSettingsActiveDirectoryPtrOutput) AllowedAudiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettingsActiveDirectory) []string {
		if v == nil {
			return nil
		}
		return v.AllowedAudiences
	}).(pulumi.StringArrayOutput)
}

// The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
func (o FunctionAppSlotAuthSettingsActiveDirectoryPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettingsActiveDirectory) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.
func (o FunctionAppSlotAuthSettingsActiveDirectoryPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettingsActiveDirectory) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

type FunctionAppSlotAuthSettingsFacebook struct {
	// The App ID of the Facebook app used for login
	AppId string `pulumi:"appId"`
	// The App Secret of the Facebook app used for Facebook Login.
	AppSecret string `pulumi:"appSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication. https://developers.facebook.com/docs/facebook-login
	OauthScopes []string `pulumi:"oauthScopes"`
}

// FunctionAppSlotAuthSettingsFacebookInput is an input type that accepts FunctionAppSlotAuthSettingsFacebookArgs and FunctionAppSlotAuthSettingsFacebookOutput values.
// You can construct a concrete instance of `FunctionAppSlotAuthSettingsFacebookInput` via:
//
//          FunctionAppSlotAuthSettingsFacebookArgs{...}
type FunctionAppSlotAuthSettingsFacebookInput interface {
	pulumi.Input

	ToFunctionAppSlotAuthSettingsFacebookOutput() FunctionAppSlotAuthSettingsFacebookOutput
	ToFunctionAppSlotAuthSettingsFacebookOutputWithContext(context.Context) FunctionAppSlotAuthSettingsFacebookOutput
}

type FunctionAppSlotAuthSettingsFacebookArgs struct {
	// The App ID of the Facebook app used for login
	AppId pulumi.StringInput `pulumi:"appId"`
	// The App Secret of the Facebook app used for Facebook Login.
	AppSecret pulumi.StringInput `pulumi:"appSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication. https://developers.facebook.com/docs/facebook-login
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
}

func (FunctionAppSlotAuthSettingsFacebookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSlotAuthSettingsFacebook)(nil)).Elem()
}

func (i FunctionAppSlotAuthSettingsFacebookArgs) ToFunctionAppSlotAuthSettingsFacebookOutput() FunctionAppSlotAuthSettingsFacebookOutput {
	return i.ToFunctionAppSlotAuthSettingsFacebookOutputWithContext(context.Background())
}

func (i FunctionAppSlotAuthSettingsFacebookArgs) ToFunctionAppSlotAuthSettingsFacebookOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsFacebookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotAuthSettingsFacebookOutput)
}

func (i FunctionAppSlotAuthSettingsFacebookArgs) ToFunctionAppSlotAuthSettingsFacebookPtrOutput() FunctionAppSlotAuthSettingsFacebookPtrOutput {
	return i.ToFunctionAppSlotAuthSettingsFacebookPtrOutputWithContext(context.Background())
}

func (i FunctionAppSlotAuthSettingsFacebookArgs) ToFunctionAppSlotAuthSettingsFacebookPtrOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsFacebookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotAuthSettingsFacebookOutput).ToFunctionAppSlotAuthSettingsFacebookPtrOutputWithContext(ctx)
}

// FunctionAppSlotAuthSettingsFacebookPtrInput is an input type that accepts FunctionAppSlotAuthSettingsFacebookArgs, FunctionAppSlotAuthSettingsFacebookPtr and FunctionAppSlotAuthSettingsFacebookPtrOutput values.
// You can construct a concrete instance of `FunctionAppSlotAuthSettingsFacebookPtrInput` via:
//
//          FunctionAppSlotAuthSettingsFacebookArgs{...}
//
//  or:
//
//          nil
type FunctionAppSlotAuthSettingsFacebookPtrInput interface {
	pulumi.Input

	ToFunctionAppSlotAuthSettingsFacebookPtrOutput() FunctionAppSlotAuthSettingsFacebookPtrOutput
	ToFunctionAppSlotAuthSettingsFacebookPtrOutputWithContext(context.Context) FunctionAppSlotAuthSettingsFacebookPtrOutput
}

type functionAppSlotAuthSettingsFacebookPtrType FunctionAppSlotAuthSettingsFacebookArgs

func FunctionAppSlotAuthSettingsFacebookPtr(v *FunctionAppSlotAuthSettingsFacebookArgs) FunctionAppSlotAuthSettingsFacebookPtrInput {
	return (*functionAppSlotAuthSettingsFacebookPtrType)(v)
}

func (*functionAppSlotAuthSettingsFacebookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppSlotAuthSettingsFacebook)(nil)).Elem()
}

func (i *functionAppSlotAuthSettingsFacebookPtrType) ToFunctionAppSlotAuthSettingsFacebookPtrOutput() FunctionAppSlotAuthSettingsFacebookPtrOutput {
	return i.ToFunctionAppSlotAuthSettingsFacebookPtrOutputWithContext(context.Background())
}

func (i *functionAppSlotAuthSettingsFacebookPtrType) ToFunctionAppSlotAuthSettingsFacebookPtrOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsFacebookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotAuthSettingsFacebookPtrOutput)
}

type FunctionAppSlotAuthSettingsFacebookOutput struct{ *pulumi.OutputState }

func (FunctionAppSlotAuthSettingsFacebookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSlotAuthSettingsFacebook)(nil)).Elem()
}

func (o FunctionAppSlotAuthSettingsFacebookOutput) ToFunctionAppSlotAuthSettingsFacebookOutput() FunctionAppSlotAuthSettingsFacebookOutput {
	return o
}

func (o FunctionAppSlotAuthSettingsFacebookOutput) ToFunctionAppSlotAuthSettingsFacebookOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsFacebookOutput {
	return o
}

func (o FunctionAppSlotAuthSettingsFacebookOutput) ToFunctionAppSlotAuthSettingsFacebookPtrOutput() FunctionAppSlotAuthSettingsFacebookPtrOutput {
	return o.ToFunctionAppSlotAuthSettingsFacebookPtrOutputWithContext(context.Background())
}

func (o FunctionAppSlotAuthSettingsFacebookOutput) ToFunctionAppSlotAuthSettingsFacebookPtrOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsFacebookPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettingsFacebook) *FunctionAppSlotAuthSettingsFacebook {
		return &v
	}).(FunctionAppSlotAuthSettingsFacebookPtrOutput)
}

// The App ID of the Facebook app used for login
func (o FunctionAppSlotAuthSettingsFacebookOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettingsFacebook) string { return v.AppId }).(pulumi.StringOutput)
}

// The App Secret of the Facebook app used for Facebook Login.
func (o FunctionAppSlotAuthSettingsFacebookOutput) AppSecret() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettingsFacebook) string { return v.AppSecret }).(pulumi.StringOutput)
}

// The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication. https://developers.facebook.com/docs/facebook-login
func (o FunctionAppSlotAuthSettingsFacebookOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettingsFacebook) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

type FunctionAppSlotAuthSettingsFacebookPtrOutput struct{ *pulumi.OutputState }

func (FunctionAppSlotAuthSettingsFacebookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppSlotAuthSettingsFacebook)(nil)).Elem()
}

func (o FunctionAppSlotAuthSettingsFacebookPtrOutput) ToFunctionAppSlotAuthSettingsFacebookPtrOutput() FunctionAppSlotAuthSettingsFacebookPtrOutput {
	return o
}

func (o FunctionAppSlotAuthSettingsFacebookPtrOutput) ToFunctionAppSlotAuthSettingsFacebookPtrOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsFacebookPtrOutput {
	return o
}

func (o FunctionAppSlotAuthSettingsFacebookPtrOutput) Elem() FunctionAppSlotAuthSettingsFacebookOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettingsFacebook) FunctionAppSlotAuthSettingsFacebook { return *v }).(FunctionAppSlotAuthSettingsFacebookOutput)
}

// The App ID of the Facebook app used for login
func (o FunctionAppSlotAuthSettingsFacebookPtrOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettingsFacebook) *string {
		if v == nil {
			return nil
		}
		return &v.AppId
	}).(pulumi.StringPtrOutput)
}

// The App Secret of the Facebook app used for Facebook Login.
func (o FunctionAppSlotAuthSettingsFacebookPtrOutput) AppSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettingsFacebook) *string {
		if v == nil {
			return nil
		}
		return &v.AppSecret
	}).(pulumi.StringPtrOutput)
}

// The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication. https://developers.facebook.com/docs/facebook-login
func (o FunctionAppSlotAuthSettingsFacebookPtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettingsFacebook) []string {
		if v == nil {
			return nil
		}
		return v.OauthScopes
	}).(pulumi.StringArrayOutput)
}

type FunctionAppSlotAuthSettingsGoogle struct {
	// The OpenID Connect Client ID for the Google web application.
	ClientId string `pulumi:"clientId"`
	// The client secret associated with the Google web application.
	ClientSecret string `pulumi:"clientSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. https://developers.google.com/identity/sign-in/web/
	OauthScopes []string `pulumi:"oauthScopes"`
}

// FunctionAppSlotAuthSettingsGoogleInput is an input type that accepts FunctionAppSlotAuthSettingsGoogleArgs and FunctionAppSlotAuthSettingsGoogleOutput values.
// You can construct a concrete instance of `FunctionAppSlotAuthSettingsGoogleInput` via:
//
//          FunctionAppSlotAuthSettingsGoogleArgs{...}
type FunctionAppSlotAuthSettingsGoogleInput interface {
	pulumi.Input

	ToFunctionAppSlotAuthSettingsGoogleOutput() FunctionAppSlotAuthSettingsGoogleOutput
	ToFunctionAppSlotAuthSettingsGoogleOutputWithContext(context.Context) FunctionAppSlotAuthSettingsGoogleOutput
}

type FunctionAppSlotAuthSettingsGoogleArgs struct {
	// The OpenID Connect Client ID for the Google web application.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The client secret associated with the Google web application.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. https://developers.google.com/identity/sign-in/web/
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
}

func (FunctionAppSlotAuthSettingsGoogleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSlotAuthSettingsGoogle)(nil)).Elem()
}

func (i FunctionAppSlotAuthSettingsGoogleArgs) ToFunctionAppSlotAuthSettingsGoogleOutput() FunctionAppSlotAuthSettingsGoogleOutput {
	return i.ToFunctionAppSlotAuthSettingsGoogleOutputWithContext(context.Background())
}

func (i FunctionAppSlotAuthSettingsGoogleArgs) ToFunctionAppSlotAuthSettingsGoogleOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsGoogleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotAuthSettingsGoogleOutput)
}

func (i FunctionAppSlotAuthSettingsGoogleArgs) ToFunctionAppSlotAuthSettingsGooglePtrOutput() FunctionAppSlotAuthSettingsGooglePtrOutput {
	return i.ToFunctionAppSlotAuthSettingsGooglePtrOutputWithContext(context.Background())
}

func (i FunctionAppSlotAuthSettingsGoogleArgs) ToFunctionAppSlotAuthSettingsGooglePtrOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsGooglePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotAuthSettingsGoogleOutput).ToFunctionAppSlotAuthSettingsGooglePtrOutputWithContext(ctx)
}

// FunctionAppSlotAuthSettingsGooglePtrInput is an input type that accepts FunctionAppSlotAuthSettingsGoogleArgs, FunctionAppSlotAuthSettingsGooglePtr and FunctionAppSlotAuthSettingsGooglePtrOutput values.
// You can construct a concrete instance of `FunctionAppSlotAuthSettingsGooglePtrInput` via:
//
//          FunctionAppSlotAuthSettingsGoogleArgs{...}
//
//  or:
//
//          nil
type FunctionAppSlotAuthSettingsGooglePtrInput interface {
	pulumi.Input

	ToFunctionAppSlotAuthSettingsGooglePtrOutput() FunctionAppSlotAuthSettingsGooglePtrOutput
	ToFunctionAppSlotAuthSettingsGooglePtrOutputWithContext(context.Context) FunctionAppSlotAuthSettingsGooglePtrOutput
}

type functionAppSlotAuthSettingsGooglePtrType FunctionAppSlotAuthSettingsGoogleArgs

func FunctionAppSlotAuthSettingsGooglePtr(v *FunctionAppSlotAuthSettingsGoogleArgs) FunctionAppSlotAuthSettingsGooglePtrInput {
	return (*functionAppSlotAuthSettingsGooglePtrType)(v)
}

func (*functionAppSlotAuthSettingsGooglePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppSlotAuthSettingsGoogle)(nil)).Elem()
}

func (i *functionAppSlotAuthSettingsGooglePtrType) ToFunctionAppSlotAuthSettingsGooglePtrOutput() FunctionAppSlotAuthSettingsGooglePtrOutput {
	return i.ToFunctionAppSlotAuthSettingsGooglePtrOutputWithContext(context.Background())
}

func (i *functionAppSlotAuthSettingsGooglePtrType) ToFunctionAppSlotAuthSettingsGooglePtrOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsGooglePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotAuthSettingsGooglePtrOutput)
}

type FunctionAppSlotAuthSettingsGoogleOutput struct{ *pulumi.OutputState }

func (FunctionAppSlotAuthSettingsGoogleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSlotAuthSettingsGoogle)(nil)).Elem()
}

func (o FunctionAppSlotAuthSettingsGoogleOutput) ToFunctionAppSlotAuthSettingsGoogleOutput() FunctionAppSlotAuthSettingsGoogleOutput {
	return o
}

func (o FunctionAppSlotAuthSettingsGoogleOutput) ToFunctionAppSlotAuthSettingsGoogleOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsGoogleOutput {
	return o
}

func (o FunctionAppSlotAuthSettingsGoogleOutput) ToFunctionAppSlotAuthSettingsGooglePtrOutput() FunctionAppSlotAuthSettingsGooglePtrOutput {
	return o.ToFunctionAppSlotAuthSettingsGooglePtrOutputWithContext(context.Background())
}

func (o FunctionAppSlotAuthSettingsGoogleOutput) ToFunctionAppSlotAuthSettingsGooglePtrOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsGooglePtrOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettingsGoogle) *FunctionAppSlotAuthSettingsGoogle {
		return &v
	}).(FunctionAppSlotAuthSettingsGooglePtrOutput)
}

// The OpenID Connect Client ID for the Google web application.
func (o FunctionAppSlotAuthSettingsGoogleOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettingsGoogle) string { return v.ClientId }).(pulumi.StringOutput)
}

// The client secret associated with the Google web application.
func (o FunctionAppSlotAuthSettingsGoogleOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettingsGoogle) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. https://developers.google.com/identity/sign-in/web/
func (o FunctionAppSlotAuthSettingsGoogleOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettingsGoogle) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

type FunctionAppSlotAuthSettingsGooglePtrOutput struct{ *pulumi.OutputState }

func (FunctionAppSlotAuthSettingsGooglePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppSlotAuthSettingsGoogle)(nil)).Elem()
}

func (o FunctionAppSlotAuthSettingsGooglePtrOutput) ToFunctionAppSlotAuthSettingsGooglePtrOutput() FunctionAppSlotAuthSettingsGooglePtrOutput {
	return o
}

func (o FunctionAppSlotAuthSettingsGooglePtrOutput) ToFunctionAppSlotAuthSettingsGooglePtrOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsGooglePtrOutput {
	return o
}

func (o FunctionAppSlotAuthSettingsGooglePtrOutput) Elem() FunctionAppSlotAuthSettingsGoogleOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettingsGoogle) FunctionAppSlotAuthSettingsGoogle { return *v }).(FunctionAppSlotAuthSettingsGoogleOutput)
}

// The OpenID Connect Client ID for the Google web application.
func (o FunctionAppSlotAuthSettingsGooglePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettingsGoogle) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The client secret associated with the Google web application.
func (o FunctionAppSlotAuthSettingsGooglePtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettingsGoogle) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. https://developers.google.com/identity/sign-in/web/
func (o FunctionAppSlotAuthSettingsGooglePtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettingsGoogle) []string {
		if v == nil {
			return nil
		}
		return v.OauthScopes
	}).(pulumi.StringArrayOutput)
}

type FunctionAppSlotAuthSettingsMicrosoft struct {
	// The OAuth 2.0 client ID that was created for the app used for authentication.
	ClientId string `pulumi:"clientId"`
	// The OAuth 2.0 client secret that was created for the app used for authentication.
	ClientSecret string `pulumi:"clientSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. https://msdn.microsoft.com/en-us/library/dn631845.aspx
	OauthScopes []string `pulumi:"oauthScopes"`
}

// FunctionAppSlotAuthSettingsMicrosoftInput is an input type that accepts FunctionAppSlotAuthSettingsMicrosoftArgs and FunctionAppSlotAuthSettingsMicrosoftOutput values.
// You can construct a concrete instance of `FunctionAppSlotAuthSettingsMicrosoftInput` via:
//
//          FunctionAppSlotAuthSettingsMicrosoftArgs{...}
type FunctionAppSlotAuthSettingsMicrosoftInput interface {
	pulumi.Input

	ToFunctionAppSlotAuthSettingsMicrosoftOutput() FunctionAppSlotAuthSettingsMicrosoftOutput
	ToFunctionAppSlotAuthSettingsMicrosoftOutputWithContext(context.Context) FunctionAppSlotAuthSettingsMicrosoftOutput
}

type FunctionAppSlotAuthSettingsMicrosoftArgs struct {
	// The OAuth 2.0 client ID that was created for the app used for authentication.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The OAuth 2.0 client secret that was created for the app used for authentication.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. https://msdn.microsoft.com/en-us/library/dn631845.aspx
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
}

func (FunctionAppSlotAuthSettingsMicrosoftArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSlotAuthSettingsMicrosoft)(nil)).Elem()
}

func (i FunctionAppSlotAuthSettingsMicrosoftArgs) ToFunctionAppSlotAuthSettingsMicrosoftOutput() FunctionAppSlotAuthSettingsMicrosoftOutput {
	return i.ToFunctionAppSlotAuthSettingsMicrosoftOutputWithContext(context.Background())
}

func (i FunctionAppSlotAuthSettingsMicrosoftArgs) ToFunctionAppSlotAuthSettingsMicrosoftOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsMicrosoftOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotAuthSettingsMicrosoftOutput)
}

func (i FunctionAppSlotAuthSettingsMicrosoftArgs) ToFunctionAppSlotAuthSettingsMicrosoftPtrOutput() FunctionAppSlotAuthSettingsMicrosoftPtrOutput {
	return i.ToFunctionAppSlotAuthSettingsMicrosoftPtrOutputWithContext(context.Background())
}

func (i FunctionAppSlotAuthSettingsMicrosoftArgs) ToFunctionAppSlotAuthSettingsMicrosoftPtrOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsMicrosoftPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotAuthSettingsMicrosoftOutput).ToFunctionAppSlotAuthSettingsMicrosoftPtrOutputWithContext(ctx)
}

// FunctionAppSlotAuthSettingsMicrosoftPtrInput is an input type that accepts FunctionAppSlotAuthSettingsMicrosoftArgs, FunctionAppSlotAuthSettingsMicrosoftPtr and FunctionAppSlotAuthSettingsMicrosoftPtrOutput values.
// You can construct a concrete instance of `FunctionAppSlotAuthSettingsMicrosoftPtrInput` via:
//
//          FunctionAppSlotAuthSettingsMicrosoftArgs{...}
//
//  or:
//
//          nil
type FunctionAppSlotAuthSettingsMicrosoftPtrInput interface {
	pulumi.Input

	ToFunctionAppSlotAuthSettingsMicrosoftPtrOutput() FunctionAppSlotAuthSettingsMicrosoftPtrOutput
	ToFunctionAppSlotAuthSettingsMicrosoftPtrOutputWithContext(context.Context) FunctionAppSlotAuthSettingsMicrosoftPtrOutput
}

type functionAppSlotAuthSettingsMicrosoftPtrType FunctionAppSlotAuthSettingsMicrosoftArgs

func FunctionAppSlotAuthSettingsMicrosoftPtr(v *FunctionAppSlotAuthSettingsMicrosoftArgs) FunctionAppSlotAuthSettingsMicrosoftPtrInput {
	return (*functionAppSlotAuthSettingsMicrosoftPtrType)(v)
}

func (*functionAppSlotAuthSettingsMicrosoftPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppSlotAuthSettingsMicrosoft)(nil)).Elem()
}

func (i *functionAppSlotAuthSettingsMicrosoftPtrType) ToFunctionAppSlotAuthSettingsMicrosoftPtrOutput() FunctionAppSlotAuthSettingsMicrosoftPtrOutput {
	return i.ToFunctionAppSlotAuthSettingsMicrosoftPtrOutputWithContext(context.Background())
}

func (i *functionAppSlotAuthSettingsMicrosoftPtrType) ToFunctionAppSlotAuthSettingsMicrosoftPtrOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsMicrosoftPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotAuthSettingsMicrosoftPtrOutput)
}

type FunctionAppSlotAuthSettingsMicrosoftOutput struct{ *pulumi.OutputState }

func (FunctionAppSlotAuthSettingsMicrosoftOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSlotAuthSettingsMicrosoft)(nil)).Elem()
}

func (o FunctionAppSlotAuthSettingsMicrosoftOutput) ToFunctionAppSlotAuthSettingsMicrosoftOutput() FunctionAppSlotAuthSettingsMicrosoftOutput {
	return o
}

func (o FunctionAppSlotAuthSettingsMicrosoftOutput) ToFunctionAppSlotAuthSettingsMicrosoftOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsMicrosoftOutput {
	return o
}

func (o FunctionAppSlotAuthSettingsMicrosoftOutput) ToFunctionAppSlotAuthSettingsMicrosoftPtrOutput() FunctionAppSlotAuthSettingsMicrosoftPtrOutput {
	return o.ToFunctionAppSlotAuthSettingsMicrosoftPtrOutputWithContext(context.Background())
}

func (o FunctionAppSlotAuthSettingsMicrosoftOutput) ToFunctionAppSlotAuthSettingsMicrosoftPtrOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsMicrosoftPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettingsMicrosoft) *FunctionAppSlotAuthSettingsMicrosoft {
		return &v
	}).(FunctionAppSlotAuthSettingsMicrosoftPtrOutput)
}

// The OAuth 2.0 client ID that was created for the app used for authentication.
func (o FunctionAppSlotAuthSettingsMicrosoftOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettingsMicrosoft) string { return v.ClientId }).(pulumi.StringOutput)
}

// The OAuth 2.0 client secret that was created for the app used for authentication.
func (o FunctionAppSlotAuthSettingsMicrosoftOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettingsMicrosoft) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. https://msdn.microsoft.com/en-us/library/dn631845.aspx
func (o FunctionAppSlotAuthSettingsMicrosoftOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettingsMicrosoft) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

type FunctionAppSlotAuthSettingsMicrosoftPtrOutput struct{ *pulumi.OutputState }

func (FunctionAppSlotAuthSettingsMicrosoftPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppSlotAuthSettingsMicrosoft)(nil)).Elem()
}

func (o FunctionAppSlotAuthSettingsMicrosoftPtrOutput) ToFunctionAppSlotAuthSettingsMicrosoftPtrOutput() FunctionAppSlotAuthSettingsMicrosoftPtrOutput {
	return o
}

func (o FunctionAppSlotAuthSettingsMicrosoftPtrOutput) ToFunctionAppSlotAuthSettingsMicrosoftPtrOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsMicrosoftPtrOutput {
	return o
}

func (o FunctionAppSlotAuthSettingsMicrosoftPtrOutput) Elem() FunctionAppSlotAuthSettingsMicrosoftOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettingsMicrosoft) FunctionAppSlotAuthSettingsMicrosoft { return *v }).(FunctionAppSlotAuthSettingsMicrosoftOutput)
}

// The OAuth 2.0 client ID that was created for the app used for authentication.
func (o FunctionAppSlotAuthSettingsMicrosoftPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettingsMicrosoft) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The OAuth 2.0 client secret that was created for the app used for authentication.
func (o FunctionAppSlotAuthSettingsMicrosoftPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettingsMicrosoft) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. https://msdn.microsoft.com/en-us/library/dn631845.aspx
func (o FunctionAppSlotAuthSettingsMicrosoftPtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettingsMicrosoft) []string {
		if v == nil {
			return nil
		}
		return v.OauthScopes
	}).(pulumi.StringArrayOutput)
}

type FunctionAppSlotAuthSettingsTwitter struct {
	ConsumerKey    string `pulumi:"consumerKey"`
	ConsumerSecret string `pulumi:"consumerSecret"`
}

// FunctionAppSlotAuthSettingsTwitterInput is an input type that accepts FunctionAppSlotAuthSettingsTwitterArgs and FunctionAppSlotAuthSettingsTwitterOutput values.
// You can construct a concrete instance of `FunctionAppSlotAuthSettingsTwitterInput` via:
//
//          FunctionAppSlotAuthSettingsTwitterArgs{...}
type FunctionAppSlotAuthSettingsTwitterInput interface {
	pulumi.Input

	ToFunctionAppSlotAuthSettingsTwitterOutput() FunctionAppSlotAuthSettingsTwitterOutput
	ToFunctionAppSlotAuthSettingsTwitterOutputWithContext(context.Context) FunctionAppSlotAuthSettingsTwitterOutput
}

type FunctionAppSlotAuthSettingsTwitterArgs struct {
	ConsumerKey    pulumi.StringInput `pulumi:"consumerKey"`
	ConsumerSecret pulumi.StringInput `pulumi:"consumerSecret"`
}

func (FunctionAppSlotAuthSettingsTwitterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSlotAuthSettingsTwitter)(nil)).Elem()
}

func (i FunctionAppSlotAuthSettingsTwitterArgs) ToFunctionAppSlotAuthSettingsTwitterOutput() FunctionAppSlotAuthSettingsTwitterOutput {
	return i.ToFunctionAppSlotAuthSettingsTwitterOutputWithContext(context.Background())
}

func (i FunctionAppSlotAuthSettingsTwitterArgs) ToFunctionAppSlotAuthSettingsTwitterOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsTwitterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotAuthSettingsTwitterOutput)
}

func (i FunctionAppSlotAuthSettingsTwitterArgs) ToFunctionAppSlotAuthSettingsTwitterPtrOutput() FunctionAppSlotAuthSettingsTwitterPtrOutput {
	return i.ToFunctionAppSlotAuthSettingsTwitterPtrOutputWithContext(context.Background())
}

func (i FunctionAppSlotAuthSettingsTwitterArgs) ToFunctionAppSlotAuthSettingsTwitterPtrOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsTwitterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotAuthSettingsTwitterOutput).ToFunctionAppSlotAuthSettingsTwitterPtrOutputWithContext(ctx)
}

// FunctionAppSlotAuthSettingsTwitterPtrInput is an input type that accepts FunctionAppSlotAuthSettingsTwitterArgs, FunctionAppSlotAuthSettingsTwitterPtr and FunctionAppSlotAuthSettingsTwitterPtrOutput values.
// You can construct a concrete instance of `FunctionAppSlotAuthSettingsTwitterPtrInput` via:
//
//          FunctionAppSlotAuthSettingsTwitterArgs{...}
//
//  or:
//
//          nil
type FunctionAppSlotAuthSettingsTwitterPtrInput interface {
	pulumi.Input

	ToFunctionAppSlotAuthSettingsTwitterPtrOutput() FunctionAppSlotAuthSettingsTwitterPtrOutput
	ToFunctionAppSlotAuthSettingsTwitterPtrOutputWithContext(context.Context) FunctionAppSlotAuthSettingsTwitterPtrOutput
}

type functionAppSlotAuthSettingsTwitterPtrType FunctionAppSlotAuthSettingsTwitterArgs

func FunctionAppSlotAuthSettingsTwitterPtr(v *FunctionAppSlotAuthSettingsTwitterArgs) FunctionAppSlotAuthSettingsTwitterPtrInput {
	return (*functionAppSlotAuthSettingsTwitterPtrType)(v)
}

func (*functionAppSlotAuthSettingsTwitterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppSlotAuthSettingsTwitter)(nil)).Elem()
}

func (i *functionAppSlotAuthSettingsTwitterPtrType) ToFunctionAppSlotAuthSettingsTwitterPtrOutput() FunctionAppSlotAuthSettingsTwitterPtrOutput {
	return i.ToFunctionAppSlotAuthSettingsTwitterPtrOutputWithContext(context.Background())
}

func (i *functionAppSlotAuthSettingsTwitterPtrType) ToFunctionAppSlotAuthSettingsTwitterPtrOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsTwitterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotAuthSettingsTwitterPtrOutput)
}

type FunctionAppSlotAuthSettingsTwitterOutput struct{ *pulumi.OutputState }

func (FunctionAppSlotAuthSettingsTwitterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSlotAuthSettingsTwitter)(nil)).Elem()
}

func (o FunctionAppSlotAuthSettingsTwitterOutput) ToFunctionAppSlotAuthSettingsTwitterOutput() FunctionAppSlotAuthSettingsTwitterOutput {
	return o
}

func (o FunctionAppSlotAuthSettingsTwitterOutput) ToFunctionAppSlotAuthSettingsTwitterOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsTwitterOutput {
	return o
}

func (o FunctionAppSlotAuthSettingsTwitterOutput) ToFunctionAppSlotAuthSettingsTwitterPtrOutput() FunctionAppSlotAuthSettingsTwitterPtrOutput {
	return o.ToFunctionAppSlotAuthSettingsTwitterPtrOutputWithContext(context.Background())
}

func (o FunctionAppSlotAuthSettingsTwitterOutput) ToFunctionAppSlotAuthSettingsTwitterPtrOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsTwitterPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettingsTwitter) *FunctionAppSlotAuthSettingsTwitter {
		return &v
	}).(FunctionAppSlotAuthSettingsTwitterPtrOutput)
}
func (o FunctionAppSlotAuthSettingsTwitterOutput) ConsumerKey() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettingsTwitter) string { return v.ConsumerKey }).(pulumi.StringOutput)
}

func (o FunctionAppSlotAuthSettingsTwitterOutput) ConsumerSecret() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionAppSlotAuthSettingsTwitter) string { return v.ConsumerSecret }).(pulumi.StringOutput)
}

type FunctionAppSlotAuthSettingsTwitterPtrOutput struct{ *pulumi.OutputState }

func (FunctionAppSlotAuthSettingsTwitterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppSlotAuthSettingsTwitter)(nil)).Elem()
}

func (o FunctionAppSlotAuthSettingsTwitterPtrOutput) ToFunctionAppSlotAuthSettingsTwitterPtrOutput() FunctionAppSlotAuthSettingsTwitterPtrOutput {
	return o
}

func (o FunctionAppSlotAuthSettingsTwitterPtrOutput) ToFunctionAppSlotAuthSettingsTwitterPtrOutputWithContext(ctx context.Context) FunctionAppSlotAuthSettingsTwitterPtrOutput {
	return o
}

func (o FunctionAppSlotAuthSettingsTwitterPtrOutput) Elem() FunctionAppSlotAuthSettingsTwitterOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettingsTwitter) FunctionAppSlotAuthSettingsTwitter { return *v }).(FunctionAppSlotAuthSettingsTwitterOutput)
}

func (o FunctionAppSlotAuthSettingsTwitterPtrOutput) ConsumerKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettingsTwitter) *string {
		if v == nil {
			return nil
		}
		return &v.ConsumerKey
	}).(pulumi.StringPtrOutput)
}

func (o FunctionAppSlotAuthSettingsTwitterPtrOutput) ConsumerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotAuthSettingsTwitter) *string {
		if v == nil {
			return nil
		}
		return &v.ConsumerSecret
	}).(pulumi.StringPtrOutput)
}

type FunctionAppSlotConnectionString struct {
	// The name of the Connection String.
	Name string `pulumi:"name"`
	// The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure` and  `SQLServer`.
	Type string `pulumi:"type"`
	// The value for the Connection String.
	Value string `pulumi:"value"`
}

// FunctionAppSlotConnectionStringInput is an input type that accepts FunctionAppSlotConnectionStringArgs and FunctionAppSlotConnectionStringOutput values.
// You can construct a concrete instance of `FunctionAppSlotConnectionStringInput` via:
//
//          FunctionAppSlotConnectionStringArgs{...}
type FunctionAppSlotConnectionStringInput interface {
	pulumi.Input

	ToFunctionAppSlotConnectionStringOutput() FunctionAppSlotConnectionStringOutput
	ToFunctionAppSlotConnectionStringOutputWithContext(context.Context) FunctionAppSlotConnectionStringOutput
}

type FunctionAppSlotConnectionStringArgs struct {
	// The name of the Connection String.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure` and  `SQLServer`.
	Type pulumi.StringInput `pulumi:"type"`
	// The value for the Connection String.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FunctionAppSlotConnectionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSlotConnectionString)(nil)).Elem()
}

func (i FunctionAppSlotConnectionStringArgs) ToFunctionAppSlotConnectionStringOutput() FunctionAppSlotConnectionStringOutput {
	return i.ToFunctionAppSlotConnectionStringOutputWithContext(context.Background())
}

func (i FunctionAppSlotConnectionStringArgs) ToFunctionAppSlotConnectionStringOutputWithContext(ctx context.Context) FunctionAppSlotConnectionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotConnectionStringOutput)
}

// FunctionAppSlotConnectionStringArrayInput is an input type that accepts FunctionAppSlotConnectionStringArray and FunctionAppSlotConnectionStringArrayOutput values.
// You can construct a concrete instance of `FunctionAppSlotConnectionStringArrayInput` via:
//
//          FunctionAppSlotConnectionStringArray{ FunctionAppSlotConnectionStringArgs{...} }
type FunctionAppSlotConnectionStringArrayInput interface {
	pulumi.Input

	ToFunctionAppSlotConnectionStringArrayOutput() FunctionAppSlotConnectionStringArrayOutput
	ToFunctionAppSlotConnectionStringArrayOutputWithContext(context.Context) FunctionAppSlotConnectionStringArrayOutput
}

type FunctionAppSlotConnectionStringArray []FunctionAppSlotConnectionStringInput

func (FunctionAppSlotConnectionStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionAppSlotConnectionString)(nil)).Elem()
}

func (i FunctionAppSlotConnectionStringArray) ToFunctionAppSlotConnectionStringArrayOutput() FunctionAppSlotConnectionStringArrayOutput {
	return i.ToFunctionAppSlotConnectionStringArrayOutputWithContext(context.Background())
}

func (i FunctionAppSlotConnectionStringArray) ToFunctionAppSlotConnectionStringArrayOutputWithContext(ctx context.Context) FunctionAppSlotConnectionStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotConnectionStringArrayOutput)
}

type FunctionAppSlotConnectionStringOutput struct{ *pulumi.OutputState }

func (FunctionAppSlotConnectionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSlotConnectionString)(nil)).Elem()
}

func (o FunctionAppSlotConnectionStringOutput) ToFunctionAppSlotConnectionStringOutput() FunctionAppSlotConnectionStringOutput {
	return o
}

func (o FunctionAppSlotConnectionStringOutput) ToFunctionAppSlotConnectionStringOutputWithContext(ctx context.Context) FunctionAppSlotConnectionStringOutput {
	return o
}

// The name of the Connection String.
func (o FunctionAppSlotConnectionStringOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionAppSlotConnectionString) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure` and  `SQLServer`.
func (o FunctionAppSlotConnectionStringOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionAppSlotConnectionString) string { return v.Type }).(pulumi.StringOutput)
}

// The value for the Connection String.
func (o FunctionAppSlotConnectionStringOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionAppSlotConnectionString) string { return v.Value }).(pulumi.StringOutput)
}

type FunctionAppSlotConnectionStringArrayOutput struct{ *pulumi.OutputState }

func (FunctionAppSlotConnectionStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionAppSlotConnectionString)(nil)).Elem()
}

func (o FunctionAppSlotConnectionStringArrayOutput) ToFunctionAppSlotConnectionStringArrayOutput() FunctionAppSlotConnectionStringArrayOutput {
	return o
}

func (o FunctionAppSlotConnectionStringArrayOutput) ToFunctionAppSlotConnectionStringArrayOutputWithContext(ctx context.Context) FunctionAppSlotConnectionStringArrayOutput {
	return o
}

func (o FunctionAppSlotConnectionStringArrayOutput) Index(i pulumi.IntInput) FunctionAppSlotConnectionStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionAppSlotConnectionString {
		return vs[0].([]FunctionAppSlotConnectionString)[vs[1].(int)]
	}).(FunctionAppSlotConnectionStringOutput)
}

type FunctionAppSlotIdentity struct {
	// Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID for the Service Principal associated with the Managed Service Identity of this App Service.
	PrincipalId *string `pulumi:"principalId"`
	// The Tenant ID for the Service Principal associated with the Managed Service Identity of this App Service.
	TenantId *string `pulumi:"tenantId"`
	// Specifies the identity type of the Function App. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identityIds` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
	Type string `pulumi:"type"`
}

// FunctionAppSlotIdentityInput is an input type that accepts FunctionAppSlotIdentityArgs and FunctionAppSlotIdentityOutput values.
// You can construct a concrete instance of `FunctionAppSlotIdentityInput` via:
//
//          FunctionAppSlotIdentityArgs{...}
type FunctionAppSlotIdentityInput interface {
	pulumi.Input

	ToFunctionAppSlotIdentityOutput() FunctionAppSlotIdentityOutput
	ToFunctionAppSlotIdentityOutputWithContext(context.Context) FunctionAppSlotIdentityOutput
}

type FunctionAppSlotIdentityArgs struct {
	// Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID for the Service Principal associated with the Managed Service Identity of this App Service.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The Tenant ID for the Service Principal associated with the Managed Service Identity of this App Service.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Specifies the identity type of the Function App. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identityIds` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FunctionAppSlotIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSlotIdentity)(nil)).Elem()
}

func (i FunctionAppSlotIdentityArgs) ToFunctionAppSlotIdentityOutput() FunctionAppSlotIdentityOutput {
	return i.ToFunctionAppSlotIdentityOutputWithContext(context.Background())
}

func (i FunctionAppSlotIdentityArgs) ToFunctionAppSlotIdentityOutputWithContext(ctx context.Context) FunctionAppSlotIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotIdentityOutput)
}

func (i FunctionAppSlotIdentityArgs) ToFunctionAppSlotIdentityPtrOutput() FunctionAppSlotIdentityPtrOutput {
	return i.ToFunctionAppSlotIdentityPtrOutputWithContext(context.Background())
}

func (i FunctionAppSlotIdentityArgs) ToFunctionAppSlotIdentityPtrOutputWithContext(ctx context.Context) FunctionAppSlotIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotIdentityOutput).ToFunctionAppSlotIdentityPtrOutputWithContext(ctx)
}

// FunctionAppSlotIdentityPtrInput is an input type that accepts FunctionAppSlotIdentityArgs, FunctionAppSlotIdentityPtr and FunctionAppSlotIdentityPtrOutput values.
// You can construct a concrete instance of `FunctionAppSlotIdentityPtrInput` via:
//
//          FunctionAppSlotIdentityArgs{...}
//
//  or:
//
//          nil
type FunctionAppSlotIdentityPtrInput interface {
	pulumi.Input

	ToFunctionAppSlotIdentityPtrOutput() FunctionAppSlotIdentityPtrOutput
	ToFunctionAppSlotIdentityPtrOutputWithContext(context.Context) FunctionAppSlotIdentityPtrOutput
}

type functionAppSlotIdentityPtrType FunctionAppSlotIdentityArgs

func FunctionAppSlotIdentityPtr(v *FunctionAppSlotIdentityArgs) FunctionAppSlotIdentityPtrInput {
	return (*functionAppSlotIdentityPtrType)(v)
}

func (*functionAppSlotIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppSlotIdentity)(nil)).Elem()
}

func (i *functionAppSlotIdentityPtrType) ToFunctionAppSlotIdentityPtrOutput() FunctionAppSlotIdentityPtrOutput {
	return i.ToFunctionAppSlotIdentityPtrOutputWithContext(context.Background())
}

func (i *functionAppSlotIdentityPtrType) ToFunctionAppSlotIdentityPtrOutputWithContext(ctx context.Context) FunctionAppSlotIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotIdentityPtrOutput)
}

type FunctionAppSlotIdentityOutput struct{ *pulumi.OutputState }

func (FunctionAppSlotIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSlotIdentity)(nil)).Elem()
}

func (o FunctionAppSlotIdentityOutput) ToFunctionAppSlotIdentityOutput() FunctionAppSlotIdentityOutput {
	return o
}

func (o FunctionAppSlotIdentityOutput) ToFunctionAppSlotIdentityOutputWithContext(ctx context.Context) FunctionAppSlotIdentityOutput {
	return o
}

func (o FunctionAppSlotIdentityOutput) ToFunctionAppSlotIdentityPtrOutput() FunctionAppSlotIdentityPtrOutput {
	return o.ToFunctionAppSlotIdentityPtrOutputWithContext(context.Background())
}

func (o FunctionAppSlotIdentityOutput) ToFunctionAppSlotIdentityPtrOutputWithContext(ctx context.Context) FunctionAppSlotIdentityPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotIdentity) *FunctionAppSlotIdentity {
		return &v
	}).(FunctionAppSlotIdentityPtrOutput)
}

// Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
func (o FunctionAppSlotIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionAppSlotIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID for the Service Principal associated with the Managed Service Identity of this App Service.
func (o FunctionAppSlotIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The Tenant ID for the Service Principal associated with the Managed Service Identity of this App Service.
func (o FunctionAppSlotIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the identity type of the Function App. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identityIds` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
func (o FunctionAppSlotIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionAppSlotIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type FunctionAppSlotIdentityPtrOutput struct{ *pulumi.OutputState }

func (FunctionAppSlotIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppSlotIdentity)(nil)).Elem()
}

func (o FunctionAppSlotIdentityPtrOutput) ToFunctionAppSlotIdentityPtrOutput() FunctionAppSlotIdentityPtrOutput {
	return o
}

func (o FunctionAppSlotIdentityPtrOutput) ToFunctionAppSlotIdentityPtrOutputWithContext(ctx context.Context) FunctionAppSlotIdentityPtrOutput {
	return o
}

func (o FunctionAppSlotIdentityPtrOutput) Elem() FunctionAppSlotIdentityOutput {
	return o.ApplyT(func(v *FunctionAppSlotIdentity) FunctionAppSlotIdentity { return *v }).(FunctionAppSlotIdentityOutput)
}

// Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
func (o FunctionAppSlotIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionAppSlotIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The Principal ID for the Service Principal associated with the Managed Service Identity of this App Service.
func (o FunctionAppSlotIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID for the Service Principal associated with the Managed Service Identity of this App Service.
func (o FunctionAppSlotIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the identity type of the Function App. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identityIds` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
func (o FunctionAppSlotIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type FunctionAppSlotSiteConfig struct {
	// Should the Function App be loaded at all times? Defaults to `false`.
	AlwaysOn *bool `pulumi:"alwaysOn"`
	// The name of the slot to automatically swap to during deployment
	AutoSwapSlotName *string `pulumi:"autoSwapSlotName"`
	// A `cors` block as defined below.
	Cors *FunctionAppSlotSiteConfigCors `pulumi:"cors"`
	// State of FTP / FTPS service for this function app. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`.
	FtpsState       *string `pulumi:"ftpsState"`
	HealthCheckPath *string `pulumi:"healthCheckPath"`
	// Specifies whether or not the http2 protocol should be enabled. Defaults to `false`.
	Http2Enabled *bool `pulumi:"http2Enabled"`
	// A [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing ip restrictions as defined below.
	IpRestrictions []FunctionAppSlotSiteConfigIpRestriction `pulumi:"ipRestrictions"`
	// Linux App Framework and version for the AppService, e.g. `DOCKER|(golang:latest)`.
	LinuxFxVersion *string `pulumi:"linuxFxVersion"`
	// The minimum supported TLS version for the function app. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new function apps.
	MinTlsVersion *string `pulumi:"minTlsVersion"`
	// The number of pre-warmed instances for this function app. Only affects apps on the Premium plan.
	PreWarmedInstanceCount  *int                                        `pulumi:"preWarmedInstanceCount"`
	ScmIpRestrictions       []FunctionAppSlotSiteConfigScmIpRestriction `pulumi:"scmIpRestrictions"`
	ScmType                 *string                                     `pulumi:"scmType"`
	ScmUseMainIpRestriction *bool                                       `pulumi:"scmUseMainIpRestriction"`
	// Should the Function App run in 32 bit mode, rather than 64 bit mode? Defaults to `true`.
	Use32BitWorkerProcess *bool `pulumi:"use32BitWorkerProcess"`
	// Should WebSockets be enabled?
	WebsocketsEnabled *bool `pulumi:"websocketsEnabled"`
}

// FunctionAppSlotSiteConfigInput is an input type that accepts FunctionAppSlotSiteConfigArgs and FunctionAppSlotSiteConfigOutput values.
// You can construct a concrete instance of `FunctionAppSlotSiteConfigInput` via:
//
//          FunctionAppSlotSiteConfigArgs{...}
type FunctionAppSlotSiteConfigInput interface {
	pulumi.Input

	ToFunctionAppSlotSiteConfigOutput() FunctionAppSlotSiteConfigOutput
	ToFunctionAppSlotSiteConfigOutputWithContext(context.Context) FunctionAppSlotSiteConfigOutput
}

type FunctionAppSlotSiteConfigArgs struct {
	// Should the Function App be loaded at all times? Defaults to `false`.
	AlwaysOn pulumi.BoolPtrInput `pulumi:"alwaysOn"`
	// The name of the slot to automatically swap to during deployment
	AutoSwapSlotName pulumi.StringPtrInput `pulumi:"autoSwapSlotName"`
	// A `cors` block as defined below.
	Cors FunctionAppSlotSiteConfigCorsPtrInput `pulumi:"cors"`
	// State of FTP / FTPS service for this function app. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`.
	FtpsState       pulumi.StringPtrInput `pulumi:"ftpsState"`
	HealthCheckPath pulumi.StringPtrInput `pulumi:"healthCheckPath"`
	// Specifies whether or not the http2 protocol should be enabled. Defaults to `false`.
	Http2Enabled pulumi.BoolPtrInput `pulumi:"http2Enabled"`
	// A [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing ip restrictions as defined below.
	IpRestrictions FunctionAppSlotSiteConfigIpRestrictionArrayInput `pulumi:"ipRestrictions"`
	// Linux App Framework and version for the AppService, e.g. `DOCKER|(golang:latest)`.
	LinuxFxVersion pulumi.StringPtrInput `pulumi:"linuxFxVersion"`
	// The minimum supported TLS version for the function app. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new function apps.
	MinTlsVersion pulumi.StringPtrInput `pulumi:"minTlsVersion"`
	// The number of pre-warmed instances for this function app. Only affects apps on the Premium plan.
	PreWarmedInstanceCount  pulumi.IntPtrInput                                  `pulumi:"preWarmedInstanceCount"`
	ScmIpRestrictions       FunctionAppSlotSiteConfigScmIpRestrictionArrayInput `pulumi:"scmIpRestrictions"`
	ScmType                 pulumi.StringPtrInput                               `pulumi:"scmType"`
	ScmUseMainIpRestriction pulumi.BoolPtrInput                                 `pulumi:"scmUseMainIpRestriction"`
	// Should the Function App run in 32 bit mode, rather than 64 bit mode? Defaults to `true`.
	Use32BitWorkerProcess pulumi.BoolPtrInput `pulumi:"use32BitWorkerProcess"`
	// Should WebSockets be enabled?
	WebsocketsEnabled pulumi.BoolPtrInput `pulumi:"websocketsEnabled"`
}

func (FunctionAppSlotSiteConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSlotSiteConfig)(nil)).Elem()
}

func (i FunctionAppSlotSiteConfigArgs) ToFunctionAppSlotSiteConfigOutput() FunctionAppSlotSiteConfigOutput {
	return i.ToFunctionAppSlotSiteConfigOutputWithContext(context.Background())
}

func (i FunctionAppSlotSiteConfigArgs) ToFunctionAppSlotSiteConfigOutputWithContext(ctx context.Context) FunctionAppSlotSiteConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotSiteConfigOutput)
}

func (i FunctionAppSlotSiteConfigArgs) ToFunctionAppSlotSiteConfigPtrOutput() FunctionAppSlotSiteConfigPtrOutput {
	return i.ToFunctionAppSlotSiteConfigPtrOutputWithContext(context.Background())
}

func (i FunctionAppSlotSiteConfigArgs) ToFunctionAppSlotSiteConfigPtrOutputWithContext(ctx context.Context) FunctionAppSlotSiteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotSiteConfigOutput).ToFunctionAppSlotSiteConfigPtrOutputWithContext(ctx)
}

// FunctionAppSlotSiteConfigPtrInput is an input type that accepts FunctionAppSlotSiteConfigArgs, FunctionAppSlotSiteConfigPtr and FunctionAppSlotSiteConfigPtrOutput values.
// You can construct a concrete instance of `FunctionAppSlotSiteConfigPtrInput` via:
//
//          FunctionAppSlotSiteConfigArgs{...}
//
//  or:
//
//          nil
type FunctionAppSlotSiteConfigPtrInput interface {
	pulumi.Input

	ToFunctionAppSlotSiteConfigPtrOutput() FunctionAppSlotSiteConfigPtrOutput
	ToFunctionAppSlotSiteConfigPtrOutputWithContext(context.Context) FunctionAppSlotSiteConfigPtrOutput
}

type functionAppSlotSiteConfigPtrType FunctionAppSlotSiteConfigArgs

func FunctionAppSlotSiteConfigPtr(v *FunctionAppSlotSiteConfigArgs) FunctionAppSlotSiteConfigPtrInput {
	return (*functionAppSlotSiteConfigPtrType)(v)
}

func (*functionAppSlotSiteConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppSlotSiteConfig)(nil)).Elem()
}

func (i *functionAppSlotSiteConfigPtrType) ToFunctionAppSlotSiteConfigPtrOutput() FunctionAppSlotSiteConfigPtrOutput {
	return i.ToFunctionAppSlotSiteConfigPtrOutputWithContext(context.Background())
}

func (i *functionAppSlotSiteConfigPtrType) ToFunctionAppSlotSiteConfigPtrOutputWithContext(ctx context.Context) FunctionAppSlotSiteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotSiteConfigPtrOutput)
}

type FunctionAppSlotSiteConfigOutput struct{ *pulumi.OutputState }

func (FunctionAppSlotSiteConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSlotSiteConfig)(nil)).Elem()
}

func (o FunctionAppSlotSiteConfigOutput) ToFunctionAppSlotSiteConfigOutput() FunctionAppSlotSiteConfigOutput {
	return o
}

func (o FunctionAppSlotSiteConfigOutput) ToFunctionAppSlotSiteConfigOutputWithContext(ctx context.Context) FunctionAppSlotSiteConfigOutput {
	return o
}

func (o FunctionAppSlotSiteConfigOutput) ToFunctionAppSlotSiteConfigPtrOutput() FunctionAppSlotSiteConfigPtrOutput {
	return o.ToFunctionAppSlotSiteConfigPtrOutputWithContext(context.Background())
}

func (o FunctionAppSlotSiteConfigOutput) ToFunctionAppSlotSiteConfigPtrOutputWithContext(ctx context.Context) FunctionAppSlotSiteConfigPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfig) *FunctionAppSlotSiteConfig {
		return &v
	}).(FunctionAppSlotSiteConfigPtrOutput)
}

// Should the Function App be loaded at all times? Defaults to `false`.
func (o FunctionAppSlotSiteConfigOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfig) *bool { return v.AlwaysOn }).(pulumi.BoolPtrOutput)
}

// The name of the slot to automatically swap to during deployment
func (o FunctionAppSlotSiteConfigOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfig) *string { return v.AutoSwapSlotName }).(pulumi.StringPtrOutput)
}

// A `cors` block as defined below.
func (o FunctionAppSlotSiteConfigOutput) Cors() FunctionAppSlotSiteConfigCorsPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfig) *FunctionAppSlotSiteConfigCors { return v.Cors }).(FunctionAppSlotSiteConfigCorsPtrOutput)
}

// State of FTP / FTPS service for this function app. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`.
func (o FunctionAppSlotSiteConfigOutput) FtpsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfig) *string { return v.FtpsState }).(pulumi.StringPtrOutput)
}

func (o FunctionAppSlotSiteConfigOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfig) *string { return v.HealthCheckPath }).(pulumi.StringPtrOutput)
}

// Specifies whether or not the http2 protocol should be enabled. Defaults to `false`.
func (o FunctionAppSlotSiteConfigOutput) Http2Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfig) *bool { return v.Http2Enabled }).(pulumi.BoolPtrOutput)
}

// A [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing ip restrictions as defined below.
func (o FunctionAppSlotSiteConfigOutput) IpRestrictions() FunctionAppSlotSiteConfigIpRestrictionArrayOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfig) []FunctionAppSlotSiteConfigIpRestriction { return v.IpRestrictions }).(FunctionAppSlotSiteConfigIpRestrictionArrayOutput)
}

// Linux App Framework and version for the AppService, e.g. `DOCKER|(golang:latest)`.
func (o FunctionAppSlotSiteConfigOutput) LinuxFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfig) *string { return v.LinuxFxVersion }).(pulumi.StringPtrOutput)
}

// The minimum supported TLS version for the function app. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new function apps.
func (o FunctionAppSlotSiteConfigOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfig) *string { return v.MinTlsVersion }).(pulumi.StringPtrOutput)
}

// The number of pre-warmed instances for this function app. Only affects apps on the Premium plan.
func (o FunctionAppSlotSiteConfigOutput) PreWarmedInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfig) *int { return v.PreWarmedInstanceCount }).(pulumi.IntPtrOutput)
}

func (o FunctionAppSlotSiteConfigOutput) ScmIpRestrictions() FunctionAppSlotSiteConfigScmIpRestrictionArrayOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfig) []FunctionAppSlotSiteConfigScmIpRestriction {
		return v.ScmIpRestrictions
	}).(FunctionAppSlotSiteConfigScmIpRestrictionArrayOutput)
}

func (o FunctionAppSlotSiteConfigOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfig) *string { return v.ScmType }).(pulumi.StringPtrOutput)
}

func (o FunctionAppSlotSiteConfigOutput) ScmUseMainIpRestriction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfig) *bool { return v.ScmUseMainIpRestriction }).(pulumi.BoolPtrOutput)
}

// Should the Function App run in 32 bit mode, rather than 64 bit mode? Defaults to `true`.
func (o FunctionAppSlotSiteConfigOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfig) *bool { return v.Use32BitWorkerProcess }).(pulumi.BoolPtrOutput)
}

// Should WebSockets be enabled?
func (o FunctionAppSlotSiteConfigOutput) WebsocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfig) *bool { return v.WebsocketsEnabled }).(pulumi.BoolPtrOutput)
}

type FunctionAppSlotSiteConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionAppSlotSiteConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppSlotSiteConfig)(nil)).Elem()
}

func (o FunctionAppSlotSiteConfigPtrOutput) ToFunctionAppSlotSiteConfigPtrOutput() FunctionAppSlotSiteConfigPtrOutput {
	return o
}

func (o FunctionAppSlotSiteConfigPtrOutput) ToFunctionAppSlotSiteConfigPtrOutputWithContext(ctx context.Context) FunctionAppSlotSiteConfigPtrOutput {
	return o
}

func (o FunctionAppSlotSiteConfigPtrOutput) Elem() FunctionAppSlotSiteConfigOutput {
	return o.ApplyT(func(v *FunctionAppSlotSiteConfig) FunctionAppSlotSiteConfig { return *v }).(FunctionAppSlotSiteConfigOutput)
}

// Should the Function App be loaded at all times? Defaults to `false`.
func (o FunctionAppSlotSiteConfigPtrOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AlwaysOn
	}).(pulumi.BoolPtrOutput)
}

// The name of the slot to automatically swap to during deployment
func (o FunctionAppSlotSiteConfigPtrOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.AutoSwapSlotName
	}).(pulumi.StringPtrOutput)
}

// A `cors` block as defined below.
func (o FunctionAppSlotSiteConfigPtrOutput) Cors() FunctionAppSlotSiteConfigCorsPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotSiteConfig) *FunctionAppSlotSiteConfigCors {
		if v == nil {
			return nil
		}
		return v.Cors
	}).(FunctionAppSlotSiteConfigCorsPtrOutput)
}

// State of FTP / FTPS service for this function app. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`.
func (o FunctionAppSlotSiteConfigPtrOutput) FtpsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.FtpsState
	}).(pulumi.StringPtrOutput)
}

func (o FunctionAppSlotSiteConfigPtrOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.HealthCheckPath
	}).(pulumi.StringPtrOutput)
}

// Specifies whether or not the http2 protocol should be enabled. Defaults to `false`.
func (o FunctionAppSlotSiteConfigPtrOutput) Http2Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Http2Enabled
	}).(pulumi.BoolPtrOutput)
}

// A [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing ip restrictions as defined below.
func (o FunctionAppSlotSiteConfigPtrOutput) IpRestrictions() FunctionAppSlotSiteConfigIpRestrictionArrayOutput {
	return o.ApplyT(func(v *FunctionAppSlotSiteConfig) []FunctionAppSlotSiteConfigIpRestriction {
		if v == nil {
			return nil
		}
		return v.IpRestrictions
	}).(FunctionAppSlotSiteConfigIpRestrictionArrayOutput)
}

// Linux App Framework and version for the AppService, e.g. `DOCKER|(golang:latest)`.
func (o FunctionAppSlotSiteConfigPtrOutput) LinuxFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.LinuxFxVersion
	}).(pulumi.StringPtrOutput)
}

// The minimum supported TLS version for the function app. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new function apps.
func (o FunctionAppSlotSiteConfigPtrOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.MinTlsVersion
	}).(pulumi.StringPtrOutput)
}

// The number of pre-warmed instances for this function app. Only affects apps on the Premium plan.
func (o FunctionAppSlotSiteConfigPtrOutput) PreWarmedInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotSiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.PreWarmedInstanceCount
	}).(pulumi.IntPtrOutput)
}

func (o FunctionAppSlotSiteConfigPtrOutput) ScmIpRestrictions() FunctionAppSlotSiteConfigScmIpRestrictionArrayOutput {
	return o.ApplyT(func(v *FunctionAppSlotSiteConfig) []FunctionAppSlotSiteConfigScmIpRestriction {
		if v == nil {
			return nil
		}
		return v.ScmIpRestrictions
	}).(FunctionAppSlotSiteConfigScmIpRestrictionArrayOutput)
}

func (o FunctionAppSlotSiteConfigPtrOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.ScmType
	}).(pulumi.StringPtrOutput)
}

func (o FunctionAppSlotSiteConfigPtrOutput) ScmUseMainIpRestriction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.ScmUseMainIpRestriction
	}).(pulumi.BoolPtrOutput)
}

// Should the Function App run in 32 bit mode, rather than 64 bit mode? Defaults to `true`.
func (o FunctionAppSlotSiteConfigPtrOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Use32BitWorkerProcess
	}).(pulumi.BoolPtrOutput)
}

// Should WebSockets be enabled?
func (o FunctionAppSlotSiteConfigPtrOutput) WebsocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.WebsocketsEnabled
	}).(pulumi.BoolPtrOutput)
}

type FunctionAppSlotSiteConfigCors struct {
	// A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// Are credentials supported?
	SupportCredentials *bool `pulumi:"supportCredentials"`
}

// FunctionAppSlotSiteConfigCorsInput is an input type that accepts FunctionAppSlotSiteConfigCorsArgs and FunctionAppSlotSiteConfigCorsOutput values.
// You can construct a concrete instance of `FunctionAppSlotSiteConfigCorsInput` via:
//
//          FunctionAppSlotSiteConfigCorsArgs{...}
type FunctionAppSlotSiteConfigCorsInput interface {
	pulumi.Input

	ToFunctionAppSlotSiteConfigCorsOutput() FunctionAppSlotSiteConfigCorsOutput
	ToFunctionAppSlotSiteConfigCorsOutputWithContext(context.Context) FunctionAppSlotSiteConfigCorsOutput
}

type FunctionAppSlotSiteConfigCorsArgs struct {
	// A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// Are credentials supported?
	SupportCredentials pulumi.BoolPtrInput `pulumi:"supportCredentials"`
}

func (FunctionAppSlotSiteConfigCorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSlotSiteConfigCors)(nil)).Elem()
}

func (i FunctionAppSlotSiteConfigCorsArgs) ToFunctionAppSlotSiteConfigCorsOutput() FunctionAppSlotSiteConfigCorsOutput {
	return i.ToFunctionAppSlotSiteConfigCorsOutputWithContext(context.Background())
}

func (i FunctionAppSlotSiteConfigCorsArgs) ToFunctionAppSlotSiteConfigCorsOutputWithContext(ctx context.Context) FunctionAppSlotSiteConfigCorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotSiteConfigCorsOutput)
}

func (i FunctionAppSlotSiteConfigCorsArgs) ToFunctionAppSlotSiteConfigCorsPtrOutput() FunctionAppSlotSiteConfigCorsPtrOutput {
	return i.ToFunctionAppSlotSiteConfigCorsPtrOutputWithContext(context.Background())
}

func (i FunctionAppSlotSiteConfigCorsArgs) ToFunctionAppSlotSiteConfigCorsPtrOutputWithContext(ctx context.Context) FunctionAppSlotSiteConfigCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotSiteConfigCorsOutput).ToFunctionAppSlotSiteConfigCorsPtrOutputWithContext(ctx)
}

// FunctionAppSlotSiteConfigCorsPtrInput is an input type that accepts FunctionAppSlotSiteConfigCorsArgs, FunctionAppSlotSiteConfigCorsPtr and FunctionAppSlotSiteConfigCorsPtrOutput values.
// You can construct a concrete instance of `FunctionAppSlotSiteConfigCorsPtrInput` via:
//
//          FunctionAppSlotSiteConfigCorsArgs{...}
//
//  or:
//
//          nil
type FunctionAppSlotSiteConfigCorsPtrInput interface {
	pulumi.Input

	ToFunctionAppSlotSiteConfigCorsPtrOutput() FunctionAppSlotSiteConfigCorsPtrOutput
	ToFunctionAppSlotSiteConfigCorsPtrOutputWithContext(context.Context) FunctionAppSlotSiteConfigCorsPtrOutput
}

type functionAppSlotSiteConfigCorsPtrType FunctionAppSlotSiteConfigCorsArgs

func FunctionAppSlotSiteConfigCorsPtr(v *FunctionAppSlotSiteConfigCorsArgs) FunctionAppSlotSiteConfigCorsPtrInput {
	return (*functionAppSlotSiteConfigCorsPtrType)(v)
}

func (*functionAppSlotSiteConfigCorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppSlotSiteConfigCors)(nil)).Elem()
}

func (i *functionAppSlotSiteConfigCorsPtrType) ToFunctionAppSlotSiteConfigCorsPtrOutput() FunctionAppSlotSiteConfigCorsPtrOutput {
	return i.ToFunctionAppSlotSiteConfigCorsPtrOutputWithContext(context.Background())
}

func (i *functionAppSlotSiteConfigCorsPtrType) ToFunctionAppSlotSiteConfigCorsPtrOutputWithContext(ctx context.Context) FunctionAppSlotSiteConfigCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotSiteConfigCorsPtrOutput)
}

type FunctionAppSlotSiteConfigCorsOutput struct{ *pulumi.OutputState }

func (FunctionAppSlotSiteConfigCorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSlotSiteConfigCors)(nil)).Elem()
}

func (o FunctionAppSlotSiteConfigCorsOutput) ToFunctionAppSlotSiteConfigCorsOutput() FunctionAppSlotSiteConfigCorsOutput {
	return o
}

func (o FunctionAppSlotSiteConfigCorsOutput) ToFunctionAppSlotSiteConfigCorsOutputWithContext(ctx context.Context) FunctionAppSlotSiteConfigCorsOutput {
	return o
}

func (o FunctionAppSlotSiteConfigCorsOutput) ToFunctionAppSlotSiteConfigCorsPtrOutput() FunctionAppSlotSiteConfigCorsPtrOutput {
	return o.ToFunctionAppSlotSiteConfigCorsPtrOutputWithContext(context.Background())
}

func (o FunctionAppSlotSiteConfigCorsOutput) ToFunctionAppSlotSiteConfigCorsPtrOutputWithContext(ctx context.Context) FunctionAppSlotSiteConfigCorsPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfigCors) *FunctionAppSlotSiteConfigCors {
		return &v
	}).(FunctionAppSlotSiteConfigCorsPtrOutput)
}

// A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
func (o FunctionAppSlotSiteConfigCorsOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfigCors) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// Are credentials supported?
func (o FunctionAppSlotSiteConfigCorsOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfigCors) *bool { return v.SupportCredentials }).(pulumi.BoolPtrOutput)
}

type FunctionAppSlotSiteConfigCorsPtrOutput struct{ *pulumi.OutputState }

func (FunctionAppSlotSiteConfigCorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppSlotSiteConfigCors)(nil)).Elem()
}

func (o FunctionAppSlotSiteConfigCorsPtrOutput) ToFunctionAppSlotSiteConfigCorsPtrOutput() FunctionAppSlotSiteConfigCorsPtrOutput {
	return o
}

func (o FunctionAppSlotSiteConfigCorsPtrOutput) ToFunctionAppSlotSiteConfigCorsPtrOutputWithContext(ctx context.Context) FunctionAppSlotSiteConfigCorsPtrOutput {
	return o
}

func (o FunctionAppSlotSiteConfigCorsPtrOutput) Elem() FunctionAppSlotSiteConfigCorsOutput {
	return o.ApplyT(func(v *FunctionAppSlotSiteConfigCors) FunctionAppSlotSiteConfigCors { return *v }).(FunctionAppSlotSiteConfigCorsOutput)
}

// A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
func (o FunctionAppSlotSiteConfigCorsPtrOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionAppSlotSiteConfigCors) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrigins
	}).(pulumi.StringArrayOutput)
}

// Are credentials supported?
func (o FunctionAppSlotSiteConfigCorsPtrOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionAppSlotSiteConfigCors) *bool {
		if v == nil {
			return nil
		}
		return v.SupportCredentials
	}).(pulumi.BoolPtrOutput)
}

type FunctionAppSlotSiteConfigIpRestriction struct {
	// Does this restriction `Allow` or `Deny` access for this IP range. Defaults to `Allow`.
	Action *string `pulumi:"action"`
	// The IP Address used for this IP Restriction in CIDR notation.
	IpAddress *string `pulumi:"ipAddress"`
	// The name for this IP Restriction.
	Name *string `pulumi:"name"`
	// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, priority is set to 65000 if not specified.
	Priority *int `pulumi:"priority"`
	// The Service Tag used for this IP Restriction.
	ServiceTag *string `pulumi:"serviceTag"`
	// Deprecated: This field has been deprecated in favour of `virtual_network_subnet_id` and will be removed in a future version of the provider
	SubnetId *string `pulumi:"subnetId"`
	// The Virtual Network Subnet ID used for this IP Restriction.
	VirtualNetworkSubnetId *string `pulumi:"virtualNetworkSubnetId"`
}

// FunctionAppSlotSiteConfigIpRestrictionInput is an input type that accepts FunctionAppSlotSiteConfigIpRestrictionArgs and FunctionAppSlotSiteConfigIpRestrictionOutput values.
// You can construct a concrete instance of `FunctionAppSlotSiteConfigIpRestrictionInput` via:
//
//          FunctionAppSlotSiteConfigIpRestrictionArgs{...}
type FunctionAppSlotSiteConfigIpRestrictionInput interface {
	pulumi.Input

	ToFunctionAppSlotSiteConfigIpRestrictionOutput() FunctionAppSlotSiteConfigIpRestrictionOutput
	ToFunctionAppSlotSiteConfigIpRestrictionOutputWithContext(context.Context) FunctionAppSlotSiteConfigIpRestrictionOutput
}

type FunctionAppSlotSiteConfigIpRestrictionArgs struct {
	// Does this restriction `Allow` or `Deny` access for this IP range. Defaults to `Allow`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// The IP Address used for this IP Restriction in CIDR notation.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The name for this IP Restriction.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, priority is set to 65000 if not specified.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The Service Tag used for this IP Restriction.
	ServiceTag pulumi.StringPtrInput `pulumi:"serviceTag"`
	// Deprecated: This field has been deprecated in favour of `virtual_network_subnet_id` and will be removed in a future version of the provider
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The Virtual Network Subnet ID used for this IP Restriction.
	VirtualNetworkSubnetId pulumi.StringPtrInput `pulumi:"virtualNetworkSubnetId"`
}

func (FunctionAppSlotSiteConfigIpRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSlotSiteConfigIpRestriction)(nil)).Elem()
}

func (i FunctionAppSlotSiteConfigIpRestrictionArgs) ToFunctionAppSlotSiteConfigIpRestrictionOutput() FunctionAppSlotSiteConfigIpRestrictionOutput {
	return i.ToFunctionAppSlotSiteConfigIpRestrictionOutputWithContext(context.Background())
}

func (i FunctionAppSlotSiteConfigIpRestrictionArgs) ToFunctionAppSlotSiteConfigIpRestrictionOutputWithContext(ctx context.Context) FunctionAppSlotSiteConfigIpRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotSiteConfigIpRestrictionOutput)
}

// FunctionAppSlotSiteConfigIpRestrictionArrayInput is an input type that accepts FunctionAppSlotSiteConfigIpRestrictionArray and FunctionAppSlotSiteConfigIpRestrictionArrayOutput values.
// You can construct a concrete instance of `FunctionAppSlotSiteConfigIpRestrictionArrayInput` via:
//
//          FunctionAppSlotSiteConfigIpRestrictionArray{ FunctionAppSlotSiteConfigIpRestrictionArgs{...} }
type FunctionAppSlotSiteConfigIpRestrictionArrayInput interface {
	pulumi.Input

	ToFunctionAppSlotSiteConfigIpRestrictionArrayOutput() FunctionAppSlotSiteConfigIpRestrictionArrayOutput
	ToFunctionAppSlotSiteConfigIpRestrictionArrayOutputWithContext(context.Context) FunctionAppSlotSiteConfigIpRestrictionArrayOutput
}

type FunctionAppSlotSiteConfigIpRestrictionArray []FunctionAppSlotSiteConfigIpRestrictionInput

func (FunctionAppSlotSiteConfigIpRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionAppSlotSiteConfigIpRestriction)(nil)).Elem()
}

func (i FunctionAppSlotSiteConfigIpRestrictionArray) ToFunctionAppSlotSiteConfigIpRestrictionArrayOutput() FunctionAppSlotSiteConfigIpRestrictionArrayOutput {
	return i.ToFunctionAppSlotSiteConfigIpRestrictionArrayOutputWithContext(context.Background())
}

func (i FunctionAppSlotSiteConfigIpRestrictionArray) ToFunctionAppSlotSiteConfigIpRestrictionArrayOutputWithContext(ctx context.Context) FunctionAppSlotSiteConfigIpRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotSiteConfigIpRestrictionArrayOutput)
}

type FunctionAppSlotSiteConfigIpRestrictionOutput struct{ *pulumi.OutputState }

func (FunctionAppSlotSiteConfigIpRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSlotSiteConfigIpRestriction)(nil)).Elem()
}

func (o FunctionAppSlotSiteConfigIpRestrictionOutput) ToFunctionAppSlotSiteConfigIpRestrictionOutput() FunctionAppSlotSiteConfigIpRestrictionOutput {
	return o
}

func (o FunctionAppSlotSiteConfigIpRestrictionOutput) ToFunctionAppSlotSiteConfigIpRestrictionOutputWithContext(ctx context.Context) FunctionAppSlotSiteConfigIpRestrictionOutput {
	return o
}

// Does this restriction `Allow` or `Deny` access for this IP range. Defaults to `Allow`.
func (o FunctionAppSlotSiteConfigIpRestrictionOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfigIpRestriction) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// The IP Address used for this IP Restriction in CIDR notation.
func (o FunctionAppSlotSiteConfigIpRestrictionOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfigIpRestriction) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The name for this IP Restriction.
func (o FunctionAppSlotSiteConfigIpRestrictionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfigIpRestriction) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, priority is set to 65000 if not specified.
func (o FunctionAppSlotSiteConfigIpRestrictionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfigIpRestriction) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The Service Tag used for this IP Restriction.
func (o FunctionAppSlotSiteConfigIpRestrictionOutput) ServiceTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfigIpRestriction) *string { return v.ServiceTag }).(pulumi.StringPtrOutput)
}

// Deprecated: This field has been deprecated in favour of `virtual_network_subnet_id` and will be removed in a future version of the provider
func (o FunctionAppSlotSiteConfigIpRestrictionOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfigIpRestriction) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The Virtual Network Subnet ID used for this IP Restriction.
func (o FunctionAppSlotSiteConfigIpRestrictionOutput) VirtualNetworkSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfigIpRestriction) *string { return v.VirtualNetworkSubnetId }).(pulumi.StringPtrOutput)
}

type FunctionAppSlotSiteConfigIpRestrictionArrayOutput struct{ *pulumi.OutputState }

func (FunctionAppSlotSiteConfigIpRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionAppSlotSiteConfigIpRestriction)(nil)).Elem()
}

func (o FunctionAppSlotSiteConfigIpRestrictionArrayOutput) ToFunctionAppSlotSiteConfigIpRestrictionArrayOutput() FunctionAppSlotSiteConfigIpRestrictionArrayOutput {
	return o
}

func (o FunctionAppSlotSiteConfigIpRestrictionArrayOutput) ToFunctionAppSlotSiteConfigIpRestrictionArrayOutputWithContext(ctx context.Context) FunctionAppSlotSiteConfigIpRestrictionArrayOutput {
	return o
}

func (o FunctionAppSlotSiteConfigIpRestrictionArrayOutput) Index(i pulumi.IntInput) FunctionAppSlotSiteConfigIpRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionAppSlotSiteConfigIpRestriction {
		return vs[0].([]FunctionAppSlotSiteConfigIpRestriction)[vs[1].(int)]
	}).(FunctionAppSlotSiteConfigIpRestrictionOutput)
}

type FunctionAppSlotSiteConfigScmIpRestriction struct {
	// Does this restriction `Allow` or `Deny` access for this IP range. Defaults to `Allow`.
	Action *string `pulumi:"action"`
	// The IP Address used for this IP Restriction in CIDR notation.
	IpAddress *string `pulumi:"ipAddress"`
	// Specifies the name of the Function App. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, priority is set to 65000 if not specified.
	Priority *int `pulumi:"priority"`
	// The Service Tag used for this IP Restriction.
	ServiceTag *string `pulumi:"serviceTag"`
	// Deprecated: This field has been deprecated in favour of `virtual_network_subnet_id` and will be removed in a future version of the provider
	SubnetId *string `pulumi:"subnetId"`
	// The Virtual Network Subnet ID used for this IP Restriction.
	VirtualNetworkSubnetId *string `pulumi:"virtualNetworkSubnetId"`
}

// FunctionAppSlotSiteConfigScmIpRestrictionInput is an input type that accepts FunctionAppSlotSiteConfigScmIpRestrictionArgs and FunctionAppSlotSiteConfigScmIpRestrictionOutput values.
// You can construct a concrete instance of `FunctionAppSlotSiteConfigScmIpRestrictionInput` via:
//
//          FunctionAppSlotSiteConfigScmIpRestrictionArgs{...}
type FunctionAppSlotSiteConfigScmIpRestrictionInput interface {
	pulumi.Input

	ToFunctionAppSlotSiteConfigScmIpRestrictionOutput() FunctionAppSlotSiteConfigScmIpRestrictionOutput
	ToFunctionAppSlotSiteConfigScmIpRestrictionOutputWithContext(context.Context) FunctionAppSlotSiteConfigScmIpRestrictionOutput
}

type FunctionAppSlotSiteConfigScmIpRestrictionArgs struct {
	// Does this restriction `Allow` or `Deny` access for this IP range. Defaults to `Allow`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// The IP Address used for this IP Restriction in CIDR notation.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// Specifies the name of the Function App. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, priority is set to 65000 if not specified.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The Service Tag used for this IP Restriction.
	ServiceTag pulumi.StringPtrInput `pulumi:"serviceTag"`
	// Deprecated: This field has been deprecated in favour of `virtual_network_subnet_id` and will be removed in a future version of the provider
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The Virtual Network Subnet ID used for this IP Restriction.
	VirtualNetworkSubnetId pulumi.StringPtrInput `pulumi:"virtualNetworkSubnetId"`
}

func (FunctionAppSlotSiteConfigScmIpRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSlotSiteConfigScmIpRestriction)(nil)).Elem()
}

func (i FunctionAppSlotSiteConfigScmIpRestrictionArgs) ToFunctionAppSlotSiteConfigScmIpRestrictionOutput() FunctionAppSlotSiteConfigScmIpRestrictionOutput {
	return i.ToFunctionAppSlotSiteConfigScmIpRestrictionOutputWithContext(context.Background())
}

func (i FunctionAppSlotSiteConfigScmIpRestrictionArgs) ToFunctionAppSlotSiteConfigScmIpRestrictionOutputWithContext(ctx context.Context) FunctionAppSlotSiteConfigScmIpRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotSiteConfigScmIpRestrictionOutput)
}

// FunctionAppSlotSiteConfigScmIpRestrictionArrayInput is an input type that accepts FunctionAppSlotSiteConfigScmIpRestrictionArray and FunctionAppSlotSiteConfigScmIpRestrictionArrayOutput values.
// You can construct a concrete instance of `FunctionAppSlotSiteConfigScmIpRestrictionArrayInput` via:
//
//          FunctionAppSlotSiteConfigScmIpRestrictionArray{ FunctionAppSlotSiteConfigScmIpRestrictionArgs{...} }
type FunctionAppSlotSiteConfigScmIpRestrictionArrayInput interface {
	pulumi.Input

	ToFunctionAppSlotSiteConfigScmIpRestrictionArrayOutput() FunctionAppSlotSiteConfigScmIpRestrictionArrayOutput
	ToFunctionAppSlotSiteConfigScmIpRestrictionArrayOutputWithContext(context.Context) FunctionAppSlotSiteConfigScmIpRestrictionArrayOutput
}

type FunctionAppSlotSiteConfigScmIpRestrictionArray []FunctionAppSlotSiteConfigScmIpRestrictionInput

func (FunctionAppSlotSiteConfigScmIpRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionAppSlotSiteConfigScmIpRestriction)(nil)).Elem()
}

func (i FunctionAppSlotSiteConfigScmIpRestrictionArray) ToFunctionAppSlotSiteConfigScmIpRestrictionArrayOutput() FunctionAppSlotSiteConfigScmIpRestrictionArrayOutput {
	return i.ToFunctionAppSlotSiteConfigScmIpRestrictionArrayOutputWithContext(context.Background())
}

func (i FunctionAppSlotSiteConfigScmIpRestrictionArray) ToFunctionAppSlotSiteConfigScmIpRestrictionArrayOutputWithContext(ctx context.Context) FunctionAppSlotSiteConfigScmIpRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotSiteConfigScmIpRestrictionArrayOutput)
}

type FunctionAppSlotSiteConfigScmIpRestrictionOutput struct{ *pulumi.OutputState }

func (FunctionAppSlotSiteConfigScmIpRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSlotSiteConfigScmIpRestriction)(nil)).Elem()
}

func (o FunctionAppSlotSiteConfigScmIpRestrictionOutput) ToFunctionAppSlotSiteConfigScmIpRestrictionOutput() FunctionAppSlotSiteConfigScmIpRestrictionOutput {
	return o
}

func (o FunctionAppSlotSiteConfigScmIpRestrictionOutput) ToFunctionAppSlotSiteConfigScmIpRestrictionOutputWithContext(ctx context.Context) FunctionAppSlotSiteConfigScmIpRestrictionOutput {
	return o
}

// Does this restriction `Allow` or `Deny` access for this IP range. Defaults to `Allow`.
func (o FunctionAppSlotSiteConfigScmIpRestrictionOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfigScmIpRestriction) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// The IP Address used for this IP Restriction in CIDR notation.
func (o FunctionAppSlotSiteConfigScmIpRestrictionOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfigScmIpRestriction) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// Specifies the name of the Function App. Changing this forces a new resource to be created.
func (o FunctionAppSlotSiteConfigScmIpRestrictionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfigScmIpRestriction) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, priority is set to 65000 if not specified.
func (o FunctionAppSlotSiteConfigScmIpRestrictionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfigScmIpRestriction) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The Service Tag used for this IP Restriction.
func (o FunctionAppSlotSiteConfigScmIpRestrictionOutput) ServiceTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfigScmIpRestriction) *string { return v.ServiceTag }).(pulumi.StringPtrOutput)
}

// Deprecated: This field has been deprecated in favour of `virtual_network_subnet_id` and will be removed in a future version of the provider
func (o FunctionAppSlotSiteConfigScmIpRestrictionOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfigScmIpRestriction) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The Virtual Network Subnet ID used for this IP Restriction.
func (o FunctionAppSlotSiteConfigScmIpRestrictionOutput) VirtualNetworkSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteConfigScmIpRestriction) *string { return v.VirtualNetworkSubnetId }).(pulumi.StringPtrOutput)
}

type FunctionAppSlotSiteConfigScmIpRestrictionArrayOutput struct{ *pulumi.OutputState }

func (FunctionAppSlotSiteConfigScmIpRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionAppSlotSiteConfigScmIpRestriction)(nil)).Elem()
}

func (o FunctionAppSlotSiteConfigScmIpRestrictionArrayOutput) ToFunctionAppSlotSiteConfigScmIpRestrictionArrayOutput() FunctionAppSlotSiteConfigScmIpRestrictionArrayOutput {
	return o
}

func (o FunctionAppSlotSiteConfigScmIpRestrictionArrayOutput) ToFunctionAppSlotSiteConfigScmIpRestrictionArrayOutputWithContext(ctx context.Context) FunctionAppSlotSiteConfigScmIpRestrictionArrayOutput {
	return o
}

func (o FunctionAppSlotSiteConfigScmIpRestrictionArrayOutput) Index(i pulumi.IntInput) FunctionAppSlotSiteConfigScmIpRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionAppSlotSiteConfigScmIpRestriction {
		return vs[0].([]FunctionAppSlotSiteConfigScmIpRestriction)[vs[1].(int)]
	}).(FunctionAppSlotSiteConfigScmIpRestrictionOutput)
}

type FunctionAppSlotSiteCredential struct {
	// The password associated with the username, which can be used to publish to this App Service.
	Password *string `pulumi:"password"`
	// The username which can be used to publish to this App Service
	Username *string `pulumi:"username"`
}

// FunctionAppSlotSiteCredentialInput is an input type that accepts FunctionAppSlotSiteCredentialArgs and FunctionAppSlotSiteCredentialOutput values.
// You can construct a concrete instance of `FunctionAppSlotSiteCredentialInput` via:
//
//          FunctionAppSlotSiteCredentialArgs{...}
type FunctionAppSlotSiteCredentialInput interface {
	pulumi.Input

	ToFunctionAppSlotSiteCredentialOutput() FunctionAppSlotSiteCredentialOutput
	ToFunctionAppSlotSiteCredentialOutputWithContext(context.Context) FunctionAppSlotSiteCredentialOutput
}

type FunctionAppSlotSiteCredentialArgs struct {
	// The password associated with the username, which can be used to publish to this App Service.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The username which can be used to publish to this App Service
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (FunctionAppSlotSiteCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSlotSiteCredential)(nil)).Elem()
}

func (i FunctionAppSlotSiteCredentialArgs) ToFunctionAppSlotSiteCredentialOutput() FunctionAppSlotSiteCredentialOutput {
	return i.ToFunctionAppSlotSiteCredentialOutputWithContext(context.Background())
}

func (i FunctionAppSlotSiteCredentialArgs) ToFunctionAppSlotSiteCredentialOutputWithContext(ctx context.Context) FunctionAppSlotSiteCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotSiteCredentialOutput)
}

// FunctionAppSlotSiteCredentialArrayInput is an input type that accepts FunctionAppSlotSiteCredentialArray and FunctionAppSlotSiteCredentialArrayOutput values.
// You can construct a concrete instance of `FunctionAppSlotSiteCredentialArrayInput` via:
//
//          FunctionAppSlotSiteCredentialArray{ FunctionAppSlotSiteCredentialArgs{...} }
type FunctionAppSlotSiteCredentialArrayInput interface {
	pulumi.Input

	ToFunctionAppSlotSiteCredentialArrayOutput() FunctionAppSlotSiteCredentialArrayOutput
	ToFunctionAppSlotSiteCredentialArrayOutputWithContext(context.Context) FunctionAppSlotSiteCredentialArrayOutput
}

type FunctionAppSlotSiteCredentialArray []FunctionAppSlotSiteCredentialInput

func (FunctionAppSlotSiteCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionAppSlotSiteCredential)(nil)).Elem()
}

func (i FunctionAppSlotSiteCredentialArray) ToFunctionAppSlotSiteCredentialArrayOutput() FunctionAppSlotSiteCredentialArrayOutput {
	return i.ToFunctionAppSlotSiteCredentialArrayOutputWithContext(context.Background())
}

func (i FunctionAppSlotSiteCredentialArray) ToFunctionAppSlotSiteCredentialArrayOutputWithContext(ctx context.Context) FunctionAppSlotSiteCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSlotSiteCredentialArrayOutput)
}

type FunctionAppSlotSiteCredentialOutput struct{ *pulumi.OutputState }

func (FunctionAppSlotSiteCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSlotSiteCredential)(nil)).Elem()
}

func (o FunctionAppSlotSiteCredentialOutput) ToFunctionAppSlotSiteCredentialOutput() FunctionAppSlotSiteCredentialOutput {
	return o
}

func (o FunctionAppSlotSiteCredentialOutput) ToFunctionAppSlotSiteCredentialOutputWithContext(ctx context.Context) FunctionAppSlotSiteCredentialOutput {
	return o
}

// The password associated with the username, which can be used to publish to this App Service.
func (o FunctionAppSlotSiteCredentialOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteCredential) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The username which can be used to publish to this App Service
func (o FunctionAppSlotSiteCredentialOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSlotSiteCredential) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type FunctionAppSlotSiteCredentialArrayOutput struct{ *pulumi.OutputState }

func (FunctionAppSlotSiteCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionAppSlotSiteCredential)(nil)).Elem()
}

func (o FunctionAppSlotSiteCredentialArrayOutput) ToFunctionAppSlotSiteCredentialArrayOutput() FunctionAppSlotSiteCredentialArrayOutput {
	return o
}

func (o FunctionAppSlotSiteCredentialArrayOutput) ToFunctionAppSlotSiteCredentialArrayOutputWithContext(ctx context.Context) FunctionAppSlotSiteCredentialArrayOutput {
	return o
}

func (o FunctionAppSlotSiteCredentialArrayOutput) Index(i pulumi.IntInput) FunctionAppSlotSiteCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionAppSlotSiteCredential {
		return vs[0].([]FunctionAppSlotSiteCredential)[vs[1].(int)]
	}).(FunctionAppSlotSiteCredentialOutput)
}

type FunctionAppSourceControl struct {
	// The branch of the remote repository to use. Defaults to 'master'.
	Branch *string `pulumi:"branch"`
	// Limits to manual integration. Defaults to `false` if not specified.
	ManualIntegration *bool `pulumi:"manualIntegration"`
	// The URL of the source code repository.
	RepoUrl *string `pulumi:"repoUrl"`
	// Enable roll-back for the repository. Defaults to `false` if not specified.
	RollbackEnabled *bool `pulumi:"rollbackEnabled"`
	// Use Mercurial if `true`, otherwise uses Git.
	UseMercurial *bool `pulumi:"useMercurial"`
}

// FunctionAppSourceControlInput is an input type that accepts FunctionAppSourceControlArgs and FunctionAppSourceControlOutput values.
// You can construct a concrete instance of `FunctionAppSourceControlInput` via:
//
//          FunctionAppSourceControlArgs{...}
type FunctionAppSourceControlInput interface {
	pulumi.Input

	ToFunctionAppSourceControlOutput() FunctionAppSourceControlOutput
	ToFunctionAppSourceControlOutputWithContext(context.Context) FunctionAppSourceControlOutput
}

type FunctionAppSourceControlArgs struct {
	// The branch of the remote repository to use. Defaults to 'master'.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Limits to manual integration. Defaults to `false` if not specified.
	ManualIntegration pulumi.BoolPtrInput `pulumi:"manualIntegration"`
	// The URL of the source code repository.
	RepoUrl pulumi.StringPtrInput `pulumi:"repoUrl"`
	// Enable roll-back for the repository. Defaults to `false` if not specified.
	RollbackEnabled pulumi.BoolPtrInput `pulumi:"rollbackEnabled"`
	// Use Mercurial if `true`, otherwise uses Git.
	UseMercurial pulumi.BoolPtrInput `pulumi:"useMercurial"`
}

func (FunctionAppSourceControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSourceControl)(nil)).Elem()
}

func (i FunctionAppSourceControlArgs) ToFunctionAppSourceControlOutput() FunctionAppSourceControlOutput {
	return i.ToFunctionAppSourceControlOutputWithContext(context.Background())
}

func (i FunctionAppSourceControlArgs) ToFunctionAppSourceControlOutputWithContext(ctx context.Context) FunctionAppSourceControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSourceControlOutput)
}

func (i FunctionAppSourceControlArgs) ToFunctionAppSourceControlPtrOutput() FunctionAppSourceControlPtrOutput {
	return i.ToFunctionAppSourceControlPtrOutputWithContext(context.Background())
}

func (i FunctionAppSourceControlArgs) ToFunctionAppSourceControlPtrOutputWithContext(ctx context.Context) FunctionAppSourceControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSourceControlOutput).ToFunctionAppSourceControlPtrOutputWithContext(ctx)
}

// FunctionAppSourceControlPtrInput is an input type that accepts FunctionAppSourceControlArgs, FunctionAppSourceControlPtr and FunctionAppSourceControlPtrOutput values.
// You can construct a concrete instance of `FunctionAppSourceControlPtrInput` via:
//
//          FunctionAppSourceControlArgs{...}
//
//  or:
//
//          nil
type FunctionAppSourceControlPtrInput interface {
	pulumi.Input

	ToFunctionAppSourceControlPtrOutput() FunctionAppSourceControlPtrOutput
	ToFunctionAppSourceControlPtrOutputWithContext(context.Context) FunctionAppSourceControlPtrOutput
}

type functionAppSourceControlPtrType FunctionAppSourceControlArgs

func FunctionAppSourceControlPtr(v *FunctionAppSourceControlArgs) FunctionAppSourceControlPtrInput {
	return (*functionAppSourceControlPtrType)(v)
}

func (*functionAppSourceControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppSourceControl)(nil)).Elem()
}

func (i *functionAppSourceControlPtrType) ToFunctionAppSourceControlPtrOutput() FunctionAppSourceControlPtrOutput {
	return i.ToFunctionAppSourceControlPtrOutputWithContext(context.Background())
}

func (i *functionAppSourceControlPtrType) ToFunctionAppSourceControlPtrOutputWithContext(ctx context.Context) FunctionAppSourceControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAppSourceControlPtrOutput)
}

type FunctionAppSourceControlOutput struct{ *pulumi.OutputState }

func (FunctionAppSourceControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionAppSourceControl)(nil)).Elem()
}

func (o FunctionAppSourceControlOutput) ToFunctionAppSourceControlOutput() FunctionAppSourceControlOutput {
	return o
}

func (o FunctionAppSourceControlOutput) ToFunctionAppSourceControlOutputWithContext(ctx context.Context) FunctionAppSourceControlOutput {
	return o
}

func (o FunctionAppSourceControlOutput) ToFunctionAppSourceControlPtrOutput() FunctionAppSourceControlPtrOutput {
	return o.ToFunctionAppSourceControlPtrOutputWithContext(context.Background())
}

func (o FunctionAppSourceControlOutput) ToFunctionAppSourceControlPtrOutputWithContext(ctx context.Context) FunctionAppSourceControlPtrOutput {
	return o.ApplyT(func(v FunctionAppSourceControl) *FunctionAppSourceControl {
		return &v
	}).(FunctionAppSourceControlPtrOutput)
}

// The branch of the remote repository to use. Defaults to 'master'.
func (o FunctionAppSourceControlOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSourceControl) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Limits to manual integration. Defaults to `false` if not specified.
func (o FunctionAppSourceControlOutput) ManualIntegration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionAppSourceControl) *bool { return v.ManualIntegration }).(pulumi.BoolPtrOutput)
}

// The URL of the source code repository.
func (o FunctionAppSourceControlOutput) RepoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionAppSourceControl) *string { return v.RepoUrl }).(pulumi.StringPtrOutput)
}

// Enable roll-back for the repository. Defaults to `false` if not specified.
func (o FunctionAppSourceControlOutput) RollbackEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionAppSourceControl) *bool { return v.RollbackEnabled }).(pulumi.BoolPtrOutput)
}

// Use Mercurial if `true`, otherwise uses Git.
func (o FunctionAppSourceControlOutput) UseMercurial() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionAppSourceControl) *bool { return v.UseMercurial }).(pulumi.BoolPtrOutput)
}

type FunctionAppSourceControlPtrOutput struct{ *pulumi.OutputState }

func (FunctionAppSourceControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAppSourceControl)(nil)).Elem()
}

func (o FunctionAppSourceControlPtrOutput) ToFunctionAppSourceControlPtrOutput() FunctionAppSourceControlPtrOutput {
	return o
}

func (o FunctionAppSourceControlPtrOutput) ToFunctionAppSourceControlPtrOutputWithContext(ctx context.Context) FunctionAppSourceControlPtrOutput {
	return o
}

func (o FunctionAppSourceControlPtrOutput) Elem() FunctionAppSourceControlOutput {
	return o.ApplyT(func(v *FunctionAppSourceControl) FunctionAppSourceControl { return *v }).(FunctionAppSourceControlOutput)
}

// The branch of the remote repository to use. Defaults to 'master'.
func (o FunctionAppSourceControlPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSourceControl) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// Limits to manual integration. Defaults to `false` if not specified.
func (o FunctionAppSourceControlPtrOutput) ManualIntegration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionAppSourceControl) *bool {
		if v == nil {
			return nil
		}
		return v.ManualIntegration
	}).(pulumi.BoolPtrOutput)
}

// The URL of the source code repository.
func (o FunctionAppSourceControlPtrOutput) RepoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionAppSourceControl) *string {
		if v == nil {
			return nil
		}
		return v.RepoUrl
	}).(pulumi.StringPtrOutput)
}

// Enable roll-back for the repository. Defaults to `false` if not specified.
func (o FunctionAppSourceControlPtrOutput) RollbackEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionAppSourceControl) *bool {
		if v == nil {
			return nil
		}
		return v.RollbackEnabled
	}).(pulumi.BoolPtrOutput)
}

// Use Mercurial if `true`, otherwise uses Git.
func (o FunctionAppSourceControlPtrOutput) UseMercurial() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionAppSourceControl) *bool {
		if v == nil {
			return nil
		}
		return v.UseMercurial
	}).(pulumi.BoolPtrOutput)
}

type PlanSku struct {
	// Specifies the number of workers associated with this App Service Plan.
	Capacity *int `pulumi:"capacity"`
	// Specifies the plan's instance size.
	Size string `pulumi:"size"`
	// Specifies the plan's pricing tier.
	Tier string `pulumi:"tier"`
}

// PlanSkuInput is an input type that accepts PlanSkuArgs and PlanSkuOutput values.
// You can construct a concrete instance of `PlanSkuInput` via:
//
//          PlanSkuArgs{...}
type PlanSkuInput interface {
	pulumi.Input

	ToPlanSkuOutput() PlanSkuOutput
	ToPlanSkuOutputWithContext(context.Context) PlanSkuOutput
}

type PlanSkuArgs struct {
	// Specifies the number of workers associated with this App Service Plan.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Specifies the plan's instance size.
	Size pulumi.StringInput `pulumi:"size"`
	// Specifies the plan's pricing tier.
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (PlanSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PlanSku)(nil)).Elem()
}

func (i PlanSkuArgs) ToPlanSkuOutput() PlanSkuOutput {
	return i.ToPlanSkuOutputWithContext(context.Background())
}

func (i PlanSkuArgs) ToPlanSkuOutputWithContext(ctx context.Context) PlanSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanSkuOutput)
}

func (i PlanSkuArgs) ToPlanSkuPtrOutput() PlanSkuPtrOutput {
	return i.ToPlanSkuPtrOutputWithContext(context.Background())
}

func (i PlanSkuArgs) ToPlanSkuPtrOutputWithContext(ctx context.Context) PlanSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanSkuOutput).ToPlanSkuPtrOutputWithContext(ctx)
}

// PlanSkuPtrInput is an input type that accepts PlanSkuArgs, PlanSkuPtr and PlanSkuPtrOutput values.
// You can construct a concrete instance of `PlanSkuPtrInput` via:
//
//          PlanSkuArgs{...}
//
//  or:
//
//          nil
type PlanSkuPtrInput interface {
	pulumi.Input

	ToPlanSkuPtrOutput() PlanSkuPtrOutput
	ToPlanSkuPtrOutputWithContext(context.Context) PlanSkuPtrOutput
}

type planSkuPtrType PlanSkuArgs

func PlanSkuPtr(v *PlanSkuArgs) PlanSkuPtrInput {
	return (*planSkuPtrType)(v)
}

func (*planSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PlanSku)(nil)).Elem()
}

func (i *planSkuPtrType) ToPlanSkuPtrOutput() PlanSkuPtrOutput {
	return i.ToPlanSkuPtrOutputWithContext(context.Background())
}

func (i *planSkuPtrType) ToPlanSkuPtrOutputWithContext(ctx context.Context) PlanSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanSkuPtrOutput)
}

type PlanSkuOutput struct{ *pulumi.OutputState }

func (PlanSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlanSku)(nil)).Elem()
}

func (o PlanSkuOutput) ToPlanSkuOutput() PlanSkuOutput {
	return o
}

func (o PlanSkuOutput) ToPlanSkuOutputWithContext(ctx context.Context) PlanSkuOutput {
	return o
}

func (o PlanSkuOutput) ToPlanSkuPtrOutput() PlanSkuPtrOutput {
	return o.ToPlanSkuPtrOutputWithContext(context.Background())
}

func (o PlanSkuOutput) ToPlanSkuPtrOutputWithContext(ctx context.Context) PlanSkuPtrOutput {
	return o.ApplyT(func(v PlanSku) *PlanSku {
		return &v
	}).(PlanSkuPtrOutput)
}

// Specifies the number of workers associated with this App Service Plan.
func (o PlanSkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PlanSku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Specifies the plan's instance size.
func (o PlanSkuOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v PlanSku) string { return v.Size }).(pulumi.StringOutput)
}

// Specifies the plan's pricing tier.
func (o PlanSkuOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v PlanSku) string { return v.Tier }).(pulumi.StringOutput)
}

type PlanSkuPtrOutput struct{ *pulumi.OutputState }

func (PlanSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlanSku)(nil)).Elem()
}

func (o PlanSkuPtrOutput) ToPlanSkuPtrOutput() PlanSkuPtrOutput {
	return o
}

func (o PlanSkuPtrOutput) ToPlanSkuPtrOutputWithContext(ctx context.Context) PlanSkuPtrOutput {
	return o
}

func (o PlanSkuPtrOutput) Elem() PlanSkuOutput {
	return o.ApplyT(func(v *PlanSku) PlanSku { return *v }).(PlanSkuOutput)
}

// Specifies the number of workers associated with this App Service Plan.
func (o PlanSkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PlanSku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Specifies the plan's instance size.
func (o PlanSkuPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlanSku) *string {
		if v == nil {
			return nil
		}
		return &v.Size
	}).(pulumi.StringPtrOutput)
}

// Specifies the plan's pricing tier.
func (o PlanSkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlanSku) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

type SlotAuthSettings struct {
	// A `activeDirectory` block as defined below.
	ActiveDirectory *SlotAuthSettingsActiveDirectory `pulumi:"activeDirectory"`
	// Login parameters to send to the OpenID Connect authorization endpoint when a user logs in. Each parameter must be in the form "key=value".
	AdditionalLoginParams map[string]string `pulumi:"additionalLoginParams"`
	// External URLs that can be redirected to as part of logging in or logging out of the app.
	AllowedExternalRedirectUrls []string `pulumi:"allowedExternalRedirectUrls"`
	// The default provider to use when multiple providers have been set up. Possible values are `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount` and `Twitter`.
	DefaultProvider *string `pulumi:"defaultProvider"`
	// Is Authentication enabled?
	Enabled bool `pulumi:"enabled"`
	// A `facebook` block as defined below.
	Facebook *SlotAuthSettingsFacebook `pulumi:"facebook"`
	// A `google` block as defined below.
	Google *SlotAuthSettingsGoogle `pulumi:"google"`
	// Issuer URI. When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
	Issuer *string `pulumi:"issuer"`
	// A `microsoft` block as defined below.
	Microsoft *SlotAuthSettingsMicrosoft `pulumi:"microsoft"`
	// The runtime version of the Authentication/Authorization module.
	RuntimeVersion *string `pulumi:"runtimeVersion"`
	// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72.
	TokenRefreshExtensionHours *float64 `pulumi:"tokenRefreshExtensionHours"`
	// If enabled the module will durably store platform-specific security tokens that are obtained during login flows. Defaults to false.
	TokenStoreEnabled *bool `pulumi:"tokenStoreEnabled"`
	// A `twitter` block as defined below.
	Twitter *SlotAuthSettingsTwitter `pulumi:"twitter"`
	// The action to take when an unauthenticated client attempts to access the app. Possible values are `AllowAnonymous` and `RedirectToLoginPage`.
	UnauthenticatedClientAction *string `pulumi:"unauthenticatedClientAction"`
}

// SlotAuthSettingsInput is an input type that accepts SlotAuthSettingsArgs and SlotAuthSettingsOutput values.
// You can construct a concrete instance of `SlotAuthSettingsInput` via:
//
//          SlotAuthSettingsArgs{...}
type SlotAuthSettingsInput interface {
	pulumi.Input

	ToSlotAuthSettingsOutput() SlotAuthSettingsOutput
	ToSlotAuthSettingsOutputWithContext(context.Context) SlotAuthSettingsOutput
}

type SlotAuthSettingsArgs struct {
	// A `activeDirectory` block as defined below.
	ActiveDirectory SlotAuthSettingsActiveDirectoryPtrInput `pulumi:"activeDirectory"`
	// Login parameters to send to the OpenID Connect authorization endpoint when a user logs in. Each parameter must be in the form "key=value".
	AdditionalLoginParams pulumi.StringMapInput `pulumi:"additionalLoginParams"`
	// External URLs that can be redirected to as part of logging in or logging out of the app.
	AllowedExternalRedirectUrls pulumi.StringArrayInput `pulumi:"allowedExternalRedirectUrls"`
	// The default provider to use when multiple providers have been set up. Possible values are `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount` and `Twitter`.
	DefaultProvider pulumi.StringPtrInput `pulumi:"defaultProvider"`
	// Is Authentication enabled?
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// A `facebook` block as defined below.
	Facebook SlotAuthSettingsFacebookPtrInput `pulumi:"facebook"`
	// A `google` block as defined below.
	Google SlotAuthSettingsGooglePtrInput `pulumi:"google"`
	// Issuer URI. When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
	Issuer pulumi.StringPtrInput `pulumi:"issuer"`
	// A `microsoft` block as defined below.
	Microsoft SlotAuthSettingsMicrosoftPtrInput `pulumi:"microsoft"`
	// The runtime version of the Authentication/Authorization module.
	RuntimeVersion pulumi.StringPtrInput `pulumi:"runtimeVersion"`
	// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72.
	TokenRefreshExtensionHours pulumi.Float64PtrInput `pulumi:"tokenRefreshExtensionHours"`
	// If enabled the module will durably store platform-specific security tokens that are obtained during login flows. Defaults to false.
	TokenStoreEnabled pulumi.BoolPtrInput `pulumi:"tokenStoreEnabled"`
	// A `twitter` block as defined below.
	Twitter SlotAuthSettingsTwitterPtrInput `pulumi:"twitter"`
	// The action to take when an unauthenticated client attempts to access the app. Possible values are `AllowAnonymous` and `RedirectToLoginPage`.
	UnauthenticatedClientAction pulumi.StringPtrInput `pulumi:"unauthenticatedClientAction"`
}

func (SlotAuthSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotAuthSettings)(nil)).Elem()
}

func (i SlotAuthSettingsArgs) ToSlotAuthSettingsOutput() SlotAuthSettingsOutput {
	return i.ToSlotAuthSettingsOutputWithContext(context.Background())
}

func (i SlotAuthSettingsArgs) ToSlotAuthSettingsOutputWithContext(ctx context.Context) SlotAuthSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotAuthSettingsOutput)
}

func (i SlotAuthSettingsArgs) ToSlotAuthSettingsPtrOutput() SlotAuthSettingsPtrOutput {
	return i.ToSlotAuthSettingsPtrOutputWithContext(context.Background())
}

func (i SlotAuthSettingsArgs) ToSlotAuthSettingsPtrOutputWithContext(ctx context.Context) SlotAuthSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotAuthSettingsOutput).ToSlotAuthSettingsPtrOutputWithContext(ctx)
}

// SlotAuthSettingsPtrInput is an input type that accepts SlotAuthSettingsArgs, SlotAuthSettingsPtr and SlotAuthSettingsPtrOutput values.
// You can construct a concrete instance of `SlotAuthSettingsPtrInput` via:
//
//          SlotAuthSettingsArgs{...}
//
//  or:
//
//          nil
type SlotAuthSettingsPtrInput interface {
	pulumi.Input

	ToSlotAuthSettingsPtrOutput() SlotAuthSettingsPtrOutput
	ToSlotAuthSettingsPtrOutputWithContext(context.Context) SlotAuthSettingsPtrOutput
}

type slotAuthSettingsPtrType SlotAuthSettingsArgs

func SlotAuthSettingsPtr(v *SlotAuthSettingsArgs) SlotAuthSettingsPtrInput {
	return (*slotAuthSettingsPtrType)(v)
}

func (*slotAuthSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotAuthSettings)(nil)).Elem()
}

func (i *slotAuthSettingsPtrType) ToSlotAuthSettingsPtrOutput() SlotAuthSettingsPtrOutput {
	return i.ToSlotAuthSettingsPtrOutputWithContext(context.Background())
}

func (i *slotAuthSettingsPtrType) ToSlotAuthSettingsPtrOutputWithContext(ctx context.Context) SlotAuthSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotAuthSettingsPtrOutput)
}

type SlotAuthSettingsOutput struct{ *pulumi.OutputState }

func (SlotAuthSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotAuthSettings)(nil)).Elem()
}

func (o SlotAuthSettingsOutput) ToSlotAuthSettingsOutput() SlotAuthSettingsOutput {
	return o
}

func (o SlotAuthSettingsOutput) ToSlotAuthSettingsOutputWithContext(ctx context.Context) SlotAuthSettingsOutput {
	return o
}

func (o SlotAuthSettingsOutput) ToSlotAuthSettingsPtrOutput() SlotAuthSettingsPtrOutput {
	return o.ToSlotAuthSettingsPtrOutputWithContext(context.Background())
}

func (o SlotAuthSettingsOutput) ToSlotAuthSettingsPtrOutputWithContext(ctx context.Context) SlotAuthSettingsPtrOutput {
	return o.ApplyT(func(v SlotAuthSettings) *SlotAuthSettings {
		return &v
	}).(SlotAuthSettingsPtrOutput)
}

// A `activeDirectory` block as defined below.
func (o SlotAuthSettingsOutput) ActiveDirectory() SlotAuthSettingsActiveDirectoryPtrOutput {
	return o.ApplyT(func(v SlotAuthSettings) *SlotAuthSettingsActiveDirectory { return v.ActiveDirectory }).(SlotAuthSettingsActiveDirectoryPtrOutput)
}

// Login parameters to send to the OpenID Connect authorization endpoint when a user logs in. Each parameter must be in the form "key=value".
func (o SlotAuthSettingsOutput) AdditionalLoginParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v SlotAuthSettings) map[string]string { return v.AdditionalLoginParams }).(pulumi.StringMapOutput)
}

// External URLs that can be redirected to as part of logging in or logging out of the app.
func (o SlotAuthSettingsOutput) AllowedExternalRedirectUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SlotAuthSettings) []string { return v.AllowedExternalRedirectUrls }).(pulumi.StringArrayOutput)
}

// The default provider to use when multiple providers have been set up. Possible values are `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount` and `Twitter`.
func (o SlotAuthSettingsOutput) DefaultProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotAuthSettings) *string { return v.DefaultProvider }).(pulumi.StringPtrOutput)
}

// Is Authentication enabled?
func (o SlotAuthSettingsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SlotAuthSettings) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// A `facebook` block as defined below.
func (o SlotAuthSettingsOutput) Facebook() SlotAuthSettingsFacebookPtrOutput {
	return o.ApplyT(func(v SlotAuthSettings) *SlotAuthSettingsFacebook { return v.Facebook }).(SlotAuthSettingsFacebookPtrOutput)
}

// A `google` block as defined below.
func (o SlotAuthSettingsOutput) Google() SlotAuthSettingsGooglePtrOutput {
	return o.ApplyT(func(v SlotAuthSettings) *SlotAuthSettingsGoogle { return v.Google }).(SlotAuthSettingsGooglePtrOutput)
}

// Issuer URI. When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
func (o SlotAuthSettingsOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotAuthSettings) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

// A `microsoft` block as defined below.
func (o SlotAuthSettingsOutput) Microsoft() SlotAuthSettingsMicrosoftPtrOutput {
	return o.ApplyT(func(v SlotAuthSettings) *SlotAuthSettingsMicrosoft { return v.Microsoft }).(SlotAuthSettingsMicrosoftPtrOutput)
}

// The runtime version of the Authentication/Authorization module.
func (o SlotAuthSettingsOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotAuthSettings) *string { return v.RuntimeVersion }).(pulumi.StringPtrOutput)
}

// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72.
func (o SlotAuthSettingsOutput) TokenRefreshExtensionHours() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SlotAuthSettings) *float64 { return v.TokenRefreshExtensionHours }).(pulumi.Float64PtrOutput)
}

// If enabled the module will durably store platform-specific security tokens that are obtained during login flows. Defaults to false.
func (o SlotAuthSettingsOutput) TokenStoreEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SlotAuthSettings) *bool { return v.TokenStoreEnabled }).(pulumi.BoolPtrOutput)
}

// A `twitter` block as defined below.
func (o SlotAuthSettingsOutput) Twitter() SlotAuthSettingsTwitterPtrOutput {
	return o.ApplyT(func(v SlotAuthSettings) *SlotAuthSettingsTwitter { return v.Twitter }).(SlotAuthSettingsTwitterPtrOutput)
}

// The action to take when an unauthenticated client attempts to access the app. Possible values are `AllowAnonymous` and `RedirectToLoginPage`.
func (o SlotAuthSettingsOutput) UnauthenticatedClientAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotAuthSettings) *string { return v.UnauthenticatedClientAction }).(pulumi.StringPtrOutput)
}

type SlotAuthSettingsPtrOutput struct{ *pulumi.OutputState }

func (SlotAuthSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotAuthSettings)(nil)).Elem()
}

func (o SlotAuthSettingsPtrOutput) ToSlotAuthSettingsPtrOutput() SlotAuthSettingsPtrOutput {
	return o
}

func (o SlotAuthSettingsPtrOutput) ToSlotAuthSettingsPtrOutputWithContext(ctx context.Context) SlotAuthSettingsPtrOutput {
	return o
}

func (o SlotAuthSettingsPtrOutput) Elem() SlotAuthSettingsOutput {
	return o.ApplyT(func(v *SlotAuthSettings) SlotAuthSettings { return *v }).(SlotAuthSettingsOutput)
}

// A `activeDirectory` block as defined below.
func (o SlotAuthSettingsPtrOutput) ActiveDirectory() SlotAuthSettingsActiveDirectoryPtrOutput {
	return o.ApplyT(func(v *SlotAuthSettings) *SlotAuthSettingsActiveDirectory {
		if v == nil {
			return nil
		}
		return v.ActiveDirectory
	}).(SlotAuthSettingsActiveDirectoryPtrOutput)
}

// Login parameters to send to the OpenID Connect authorization endpoint when a user logs in. Each parameter must be in the form "key=value".
func (o SlotAuthSettingsPtrOutput) AdditionalLoginParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SlotAuthSettings) map[string]string {
		if v == nil {
			return nil
		}
		return v.AdditionalLoginParams
	}).(pulumi.StringMapOutput)
}

// External URLs that can be redirected to as part of logging in or logging out of the app.
func (o SlotAuthSettingsPtrOutput) AllowedExternalRedirectUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SlotAuthSettings) []string {
		if v == nil {
			return nil
		}
		return v.AllowedExternalRedirectUrls
	}).(pulumi.StringArrayOutput)
}

// The default provider to use when multiple providers have been set up. Possible values are `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount` and `Twitter`.
func (o SlotAuthSettingsPtrOutput) DefaultProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotAuthSettings) *string {
		if v == nil {
			return nil
		}
		return v.DefaultProvider
	}).(pulumi.StringPtrOutput)
}

// Is Authentication enabled?
func (o SlotAuthSettingsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SlotAuthSettings) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// A `facebook` block as defined below.
func (o SlotAuthSettingsPtrOutput) Facebook() SlotAuthSettingsFacebookPtrOutput {
	return o.ApplyT(func(v *SlotAuthSettings) *SlotAuthSettingsFacebook {
		if v == nil {
			return nil
		}
		return v.Facebook
	}).(SlotAuthSettingsFacebookPtrOutput)
}

// A `google` block as defined below.
func (o SlotAuthSettingsPtrOutput) Google() SlotAuthSettingsGooglePtrOutput {
	return o.ApplyT(func(v *SlotAuthSettings) *SlotAuthSettingsGoogle {
		if v == nil {
			return nil
		}
		return v.Google
	}).(SlotAuthSettingsGooglePtrOutput)
}

// Issuer URI. When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
func (o SlotAuthSettingsPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotAuthSettings) *string {
		if v == nil {
			return nil
		}
		return v.Issuer
	}).(pulumi.StringPtrOutput)
}

// A `microsoft` block as defined below.
func (o SlotAuthSettingsPtrOutput) Microsoft() SlotAuthSettingsMicrosoftPtrOutput {
	return o.ApplyT(func(v *SlotAuthSettings) *SlotAuthSettingsMicrosoft {
		if v == nil {
			return nil
		}
		return v.Microsoft
	}).(SlotAuthSettingsMicrosoftPtrOutput)
}

// The runtime version of the Authentication/Authorization module.
func (o SlotAuthSettingsPtrOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotAuthSettings) *string {
		if v == nil {
			return nil
		}
		return v.RuntimeVersion
	}).(pulumi.StringPtrOutput)
}

// The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72.
func (o SlotAuthSettingsPtrOutput) TokenRefreshExtensionHours() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SlotAuthSettings) *float64 {
		if v == nil {
			return nil
		}
		return v.TokenRefreshExtensionHours
	}).(pulumi.Float64PtrOutput)
}

// If enabled the module will durably store platform-specific security tokens that are obtained during login flows. Defaults to false.
func (o SlotAuthSettingsPtrOutput) TokenStoreEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SlotAuthSettings) *bool {
		if v == nil {
			return nil
		}
		return v.TokenStoreEnabled
	}).(pulumi.BoolPtrOutput)
}

// A `twitter` block as defined below.
func (o SlotAuthSettingsPtrOutput) Twitter() SlotAuthSettingsTwitterPtrOutput {
	return o.ApplyT(func(v *SlotAuthSettings) *SlotAuthSettingsTwitter {
		if v == nil {
			return nil
		}
		return v.Twitter
	}).(SlotAuthSettingsTwitterPtrOutput)
}

// The action to take when an unauthenticated client attempts to access the app. Possible values are `AllowAnonymous` and `RedirectToLoginPage`.
func (o SlotAuthSettingsPtrOutput) UnauthenticatedClientAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotAuthSettings) *string {
		if v == nil {
			return nil
		}
		return v.UnauthenticatedClientAction
	}).(pulumi.StringPtrOutput)
}

type SlotAuthSettingsActiveDirectory struct {
	// Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
	AllowedAudiences []string `pulumi:"allowedAudiences"`
	// The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
	ClientId string `pulumi:"clientId"`
	// The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.
	ClientSecret *string `pulumi:"clientSecret"`
}

// SlotAuthSettingsActiveDirectoryInput is an input type that accepts SlotAuthSettingsActiveDirectoryArgs and SlotAuthSettingsActiveDirectoryOutput values.
// You can construct a concrete instance of `SlotAuthSettingsActiveDirectoryInput` via:
//
//          SlotAuthSettingsActiveDirectoryArgs{...}
type SlotAuthSettingsActiveDirectoryInput interface {
	pulumi.Input

	ToSlotAuthSettingsActiveDirectoryOutput() SlotAuthSettingsActiveDirectoryOutput
	ToSlotAuthSettingsActiveDirectoryOutputWithContext(context.Context) SlotAuthSettingsActiveDirectoryOutput
}

type SlotAuthSettingsActiveDirectoryArgs struct {
	// Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
	AllowedAudiences pulumi.StringArrayInput `pulumi:"allowedAudiences"`
	// The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
}

func (SlotAuthSettingsActiveDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotAuthSettingsActiveDirectory)(nil)).Elem()
}

func (i SlotAuthSettingsActiveDirectoryArgs) ToSlotAuthSettingsActiveDirectoryOutput() SlotAuthSettingsActiveDirectoryOutput {
	return i.ToSlotAuthSettingsActiveDirectoryOutputWithContext(context.Background())
}

func (i SlotAuthSettingsActiveDirectoryArgs) ToSlotAuthSettingsActiveDirectoryOutputWithContext(ctx context.Context) SlotAuthSettingsActiveDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotAuthSettingsActiveDirectoryOutput)
}

func (i SlotAuthSettingsActiveDirectoryArgs) ToSlotAuthSettingsActiveDirectoryPtrOutput() SlotAuthSettingsActiveDirectoryPtrOutput {
	return i.ToSlotAuthSettingsActiveDirectoryPtrOutputWithContext(context.Background())
}

func (i SlotAuthSettingsActiveDirectoryArgs) ToSlotAuthSettingsActiveDirectoryPtrOutputWithContext(ctx context.Context) SlotAuthSettingsActiveDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotAuthSettingsActiveDirectoryOutput).ToSlotAuthSettingsActiveDirectoryPtrOutputWithContext(ctx)
}

// SlotAuthSettingsActiveDirectoryPtrInput is an input type that accepts SlotAuthSettingsActiveDirectoryArgs, SlotAuthSettingsActiveDirectoryPtr and SlotAuthSettingsActiveDirectoryPtrOutput values.
// You can construct a concrete instance of `SlotAuthSettingsActiveDirectoryPtrInput` via:
//
//          SlotAuthSettingsActiveDirectoryArgs{...}
//
//  or:
//
//          nil
type SlotAuthSettingsActiveDirectoryPtrInput interface {
	pulumi.Input

	ToSlotAuthSettingsActiveDirectoryPtrOutput() SlotAuthSettingsActiveDirectoryPtrOutput
	ToSlotAuthSettingsActiveDirectoryPtrOutputWithContext(context.Context) SlotAuthSettingsActiveDirectoryPtrOutput
}

type slotAuthSettingsActiveDirectoryPtrType SlotAuthSettingsActiveDirectoryArgs

func SlotAuthSettingsActiveDirectoryPtr(v *SlotAuthSettingsActiveDirectoryArgs) SlotAuthSettingsActiveDirectoryPtrInput {
	return (*slotAuthSettingsActiveDirectoryPtrType)(v)
}

func (*slotAuthSettingsActiveDirectoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotAuthSettingsActiveDirectory)(nil)).Elem()
}

func (i *slotAuthSettingsActiveDirectoryPtrType) ToSlotAuthSettingsActiveDirectoryPtrOutput() SlotAuthSettingsActiveDirectoryPtrOutput {
	return i.ToSlotAuthSettingsActiveDirectoryPtrOutputWithContext(context.Background())
}

func (i *slotAuthSettingsActiveDirectoryPtrType) ToSlotAuthSettingsActiveDirectoryPtrOutputWithContext(ctx context.Context) SlotAuthSettingsActiveDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotAuthSettingsActiveDirectoryPtrOutput)
}

type SlotAuthSettingsActiveDirectoryOutput struct{ *pulumi.OutputState }

func (SlotAuthSettingsActiveDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotAuthSettingsActiveDirectory)(nil)).Elem()
}

func (o SlotAuthSettingsActiveDirectoryOutput) ToSlotAuthSettingsActiveDirectoryOutput() SlotAuthSettingsActiveDirectoryOutput {
	return o
}

func (o SlotAuthSettingsActiveDirectoryOutput) ToSlotAuthSettingsActiveDirectoryOutputWithContext(ctx context.Context) SlotAuthSettingsActiveDirectoryOutput {
	return o
}

func (o SlotAuthSettingsActiveDirectoryOutput) ToSlotAuthSettingsActiveDirectoryPtrOutput() SlotAuthSettingsActiveDirectoryPtrOutput {
	return o.ToSlotAuthSettingsActiveDirectoryPtrOutputWithContext(context.Background())
}

func (o SlotAuthSettingsActiveDirectoryOutput) ToSlotAuthSettingsActiveDirectoryPtrOutputWithContext(ctx context.Context) SlotAuthSettingsActiveDirectoryPtrOutput {
	return o.ApplyT(func(v SlotAuthSettingsActiveDirectory) *SlotAuthSettingsActiveDirectory {
		return &v
	}).(SlotAuthSettingsActiveDirectoryPtrOutput)
}

// Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
func (o SlotAuthSettingsActiveDirectoryOutput) AllowedAudiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SlotAuthSettingsActiveDirectory) []string { return v.AllowedAudiences }).(pulumi.StringArrayOutput)
}

// The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
func (o SlotAuthSettingsActiveDirectoryOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v SlotAuthSettingsActiveDirectory) string { return v.ClientId }).(pulumi.StringOutput)
}

// The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.
func (o SlotAuthSettingsActiveDirectoryOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotAuthSettingsActiveDirectory) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

type SlotAuthSettingsActiveDirectoryPtrOutput struct{ *pulumi.OutputState }

func (SlotAuthSettingsActiveDirectoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotAuthSettingsActiveDirectory)(nil)).Elem()
}

func (o SlotAuthSettingsActiveDirectoryPtrOutput) ToSlotAuthSettingsActiveDirectoryPtrOutput() SlotAuthSettingsActiveDirectoryPtrOutput {
	return o
}

func (o SlotAuthSettingsActiveDirectoryPtrOutput) ToSlotAuthSettingsActiveDirectoryPtrOutputWithContext(ctx context.Context) SlotAuthSettingsActiveDirectoryPtrOutput {
	return o
}

func (o SlotAuthSettingsActiveDirectoryPtrOutput) Elem() SlotAuthSettingsActiveDirectoryOutput {
	return o.ApplyT(func(v *SlotAuthSettingsActiveDirectory) SlotAuthSettingsActiveDirectory { return *v }).(SlotAuthSettingsActiveDirectoryOutput)
}

// Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
func (o SlotAuthSettingsActiveDirectoryPtrOutput) AllowedAudiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SlotAuthSettingsActiveDirectory) []string {
		if v == nil {
			return nil
		}
		return v.AllowedAudiences
	}).(pulumi.StringArrayOutput)
}

// The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
func (o SlotAuthSettingsActiveDirectoryPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotAuthSettingsActiveDirectory) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.
func (o SlotAuthSettingsActiveDirectoryPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotAuthSettingsActiveDirectory) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

type SlotAuthSettingsFacebook struct {
	// The App ID of the Facebook app used for login
	AppId string `pulumi:"appId"`
	// The App Secret of the Facebook app used for Facebook Login.
	AppSecret string `pulumi:"appSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication. https://developers.facebook.com/docs/facebook-login
	OauthScopes []string `pulumi:"oauthScopes"`
}

// SlotAuthSettingsFacebookInput is an input type that accepts SlotAuthSettingsFacebookArgs and SlotAuthSettingsFacebookOutput values.
// You can construct a concrete instance of `SlotAuthSettingsFacebookInput` via:
//
//          SlotAuthSettingsFacebookArgs{...}
type SlotAuthSettingsFacebookInput interface {
	pulumi.Input

	ToSlotAuthSettingsFacebookOutput() SlotAuthSettingsFacebookOutput
	ToSlotAuthSettingsFacebookOutputWithContext(context.Context) SlotAuthSettingsFacebookOutput
}

type SlotAuthSettingsFacebookArgs struct {
	// The App ID of the Facebook app used for login
	AppId pulumi.StringInput `pulumi:"appId"`
	// The App Secret of the Facebook app used for Facebook Login.
	AppSecret pulumi.StringInput `pulumi:"appSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication. https://developers.facebook.com/docs/facebook-login
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
}

func (SlotAuthSettingsFacebookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotAuthSettingsFacebook)(nil)).Elem()
}

func (i SlotAuthSettingsFacebookArgs) ToSlotAuthSettingsFacebookOutput() SlotAuthSettingsFacebookOutput {
	return i.ToSlotAuthSettingsFacebookOutputWithContext(context.Background())
}

func (i SlotAuthSettingsFacebookArgs) ToSlotAuthSettingsFacebookOutputWithContext(ctx context.Context) SlotAuthSettingsFacebookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotAuthSettingsFacebookOutput)
}

func (i SlotAuthSettingsFacebookArgs) ToSlotAuthSettingsFacebookPtrOutput() SlotAuthSettingsFacebookPtrOutput {
	return i.ToSlotAuthSettingsFacebookPtrOutputWithContext(context.Background())
}

func (i SlotAuthSettingsFacebookArgs) ToSlotAuthSettingsFacebookPtrOutputWithContext(ctx context.Context) SlotAuthSettingsFacebookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotAuthSettingsFacebookOutput).ToSlotAuthSettingsFacebookPtrOutputWithContext(ctx)
}

// SlotAuthSettingsFacebookPtrInput is an input type that accepts SlotAuthSettingsFacebookArgs, SlotAuthSettingsFacebookPtr and SlotAuthSettingsFacebookPtrOutput values.
// You can construct a concrete instance of `SlotAuthSettingsFacebookPtrInput` via:
//
//          SlotAuthSettingsFacebookArgs{...}
//
//  or:
//
//          nil
type SlotAuthSettingsFacebookPtrInput interface {
	pulumi.Input

	ToSlotAuthSettingsFacebookPtrOutput() SlotAuthSettingsFacebookPtrOutput
	ToSlotAuthSettingsFacebookPtrOutputWithContext(context.Context) SlotAuthSettingsFacebookPtrOutput
}

type slotAuthSettingsFacebookPtrType SlotAuthSettingsFacebookArgs

func SlotAuthSettingsFacebookPtr(v *SlotAuthSettingsFacebookArgs) SlotAuthSettingsFacebookPtrInput {
	return (*slotAuthSettingsFacebookPtrType)(v)
}

func (*slotAuthSettingsFacebookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotAuthSettingsFacebook)(nil)).Elem()
}

func (i *slotAuthSettingsFacebookPtrType) ToSlotAuthSettingsFacebookPtrOutput() SlotAuthSettingsFacebookPtrOutput {
	return i.ToSlotAuthSettingsFacebookPtrOutputWithContext(context.Background())
}

func (i *slotAuthSettingsFacebookPtrType) ToSlotAuthSettingsFacebookPtrOutputWithContext(ctx context.Context) SlotAuthSettingsFacebookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotAuthSettingsFacebookPtrOutput)
}

type SlotAuthSettingsFacebookOutput struct{ *pulumi.OutputState }

func (SlotAuthSettingsFacebookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotAuthSettingsFacebook)(nil)).Elem()
}

func (o SlotAuthSettingsFacebookOutput) ToSlotAuthSettingsFacebookOutput() SlotAuthSettingsFacebookOutput {
	return o
}

func (o SlotAuthSettingsFacebookOutput) ToSlotAuthSettingsFacebookOutputWithContext(ctx context.Context) SlotAuthSettingsFacebookOutput {
	return o
}

func (o SlotAuthSettingsFacebookOutput) ToSlotAuthSettingsFacebookPtrOutput() SlotAuthSettingsFacebookPtrOutput {
	return o.ToSlotAuthSettingsFacebookPtrOutputWithContext(context.Background())
}

func (o SlotAuthSettingsFacebookOutput) ToSlotAuthSettingsFacebookPtrOutputWithContext(ctx context.Context) SlotAuthSettingsFacebookPtrOutput {
	return o.ApplyT(func(v SlotAuthSettingsFacebook) *SlotAuthSettingsFacebook {
		return &v
	}).(SlotAuthSettingsFacebookPtrOutput)
}

// The App ID of the Facebook app used for login
func (o SlotAuthSettingsFacebookOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v SlotAuthSettingsFacebook) string { return v.AppId }).(pulumi.StringOutput)
}

// The App Secret of the Facebook app used for Facebook Login.
func (o SlotAuthSettingsFacebookOutput) AppSecret() pulumi.StringOutput {
	return o.ApplyT(func(v SlotAuthSettingsFacebook) string { return v.AppSecret }).(pulumi.StringOutput)
}

// The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication. https://developers.facebook.com/docs/facebook-login
func (o SlotAuthSettingsFacebookOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SlotAuthSettingsFacebook) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

type SlotAuthSettingsFacebookPtrOutput struct{ *pulumi.OutputState }

func (SlotAuthSettingsFacebookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotAuthSettingsFacebook)(nil)).Elem()
}

func (o SlotAuthSettingsFacebookPtrOutput) ToSlotAuthSettingsFacebookPtrOutput() SlotAuthSettingsFacebookPtrOutput {
	return o
}

func (o SlotAuthSettingsFacebookPtrOutput) ToSlotAuthSettingsFacebookPtrOutputWithContext(ctx context.Context) SlotAuthSettingsFacebookPtrOutput {
	return o
}

func (o SlotAuthSettingsFacebookPtrOutput) Elem() SlotAuthSettingsFacebookOutput {
	return o.ApplyT(func(v *SlotAuthSettingsFacebook) SlotAuthSettingsFacebook { return *v }).(SlotAuthSettingsFacebookOutput)
}

// The App ID of the Facebook app used for login
func (o SlotAuthSettingsFacebookPtrOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotAuthSettingsFacebook) *string {
		if v == nil {
			return nil
		}
		return &v.AppId
	}).(pulumi.StringPtrOutput)
}

// The App Secret of the Facebook app used for Facebook Login.
func (o SlotAuthSettingsFacebookPtrOutput) AppSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotAuthSettingsFacebook) *string {
		if v == nil {
			return nil
		}
		return &v.AppSecret
	}).(pulumi.StringPtrOutput)
}

// The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication. https://developers.facebook.com/docs/facebook-login
func (o SlotAuthSettingsFacebookPtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SlotAuthSettingsFacebook) []string {
		if v == nil {
			return nil
		}
		return v.OauthScopes
	}).(pulumi.StringArrayOutput)
}

type SlotAuthSettingsGoogle struct {
	// The OpenID Connect Client ID for the Google web application.
	ClientId string `pulumi:"clientId"`
	// The client secret associated with the Google web application.
	ClientSecret string `pulumi:"clientSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. https://developers.google.com/identity/sign-in/web/
	OauthScopes []string `pulumi:"oauthScopes"`
}

// SlotAuthSettingsGoogleInput is an input type that accepts SlotAuthSettingsGoogleArgs and SlotAuthSettingsGoogleOutput values.
// You can construct a concrete instance of `SlotAuthSettingsGoogleInput` via:
//
//          SlotAuthSettingsGoogleArgs{...}
type SlotAuthSettingsGoogleInput interface {
	pulumi.Input

	ToSlotAuthSettingsGoogleOutput() SlotAuthSettingsGoogleOutput
	ToSlotAuthSettingsGoogleOutputWithContext(context.Context) SlotAuthSettingsGoogleOutput
}

type SlotAuthSettingsGoogleArgs struct {
	// The OpenID Connect Client ID for the Google web application.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The client secret associated with the Google web application.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. https://developers.google.com/identity/sign-in/web/
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
}

func (SlotAuthSettingsGoogleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotAuthSettingsGoogle)(nil)).Elem()
}

func (i SlotAuthSettingsGoogleArgs) ToSlotAuthSettingsGoogleOutput() SlotAuthSettingsGoogleOutput {
	return i.ToSlotAuthSettingsGoogleOutputWithContext(context.Background())
}

func (i SlotAuthSettingsGoogleArgs) ToSlotAuthSettingsGoogleOutputWithContext(ctx context.Context) SlotAuthSettingsGoogleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotAuthSettingsGoogleOutput)
}

func (i SlotAuthSettingsGoogleArgs) ToSlotAuthSettingsGooglePtrOutput() SlotAuthSettingsGooglePtrOutput {
	return i.ToSlotAuthSettingsGooglePtrOutputWithContext(context.Background())
}

func (i SlotAuthSettingsGoogleArgs) ToSlotAuthSettingsGooglePtrOutputWithContext(ctx context.Context) SlotAuthSettingsGooglePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotAuthSettingsGoogleOutput).ToSlotAuthSettingsGooglePtrOutputWithContext(ctx)
}

// SlotAuthSettingsGooglePtrInput is an input type that accepts SlotAuthSettingsGoogleArgs, SlotAuthSettingsGooglePtr and SlotAuthSettingsGooglePtrOutput values.
// You can construct a concrete instance of `SlotAuthSettingsGooglePtrInput` via:
//
//          SlotAuthSettingsGoogleArgs{...}
//
//  or:
//
//          nil
type SlotAuthSettingsGooglePtrInput interface {
	pulumi.Input

	ToSlotAuthSettingsGooglePtrOutput() SlotAuthSettingsGooglePtrOutput
	ToSlotAuthSettingsGooglePtrOutputWithContext(context.Context) SlotAuthSettingsGooglePtrOutput
}

type slotAuthSettingsGooglePtrType SlotAuthSettingsGoogleArgs

func SlotAuthSettingsGooglePtr(v *SlotAuthSettingsGoogleArgs) SlotAuthSettingsGooglePtrInput {
	return (*slotAuthSettingsGooglePtrType)(v)
}

func (*slotAuthSettingsGooglePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotAuthSettingsGoogle)(nil)).Elem()
}

func (i *slotAuthSettingsGooglePtrType) ToSlotAuthSettingsGooglePtrOutput() SlotAuthSettingsGooglePtrOutput {
	return i.ToSlotAuthSettingsGooglePtrOutputWithContext(context.Background())
}

func (i *slotAuthSettingsGooglePtrType) ToSlotAuthSettingsGooglePtrOutputWithContext(ctx context.Context) SlotAuthSettingsGooglePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotAuthSettingsGooglePtrOutput)
}

type SlotAuthSettingsGoogleOutput struct{ *pulumi.OutputState }

func (SlotAuthSettingsGoogleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotAuthSettingsGoogle)(nil)).Elem()
}

func (o SlotAuthSettingsGoogleOutput) ToSlotAuthSettingsGoogleOutput() SlotAuthSettingsGoogleOutput {
	return o
}

func (o SlotAuthSettingsGoogleOutput) ToSlotAuthSettingsGoogleOutputWithContext(ctx context.Context) SlotAuthSettingsGoogleOutput {
	return o
}

func (o SlotAuthSettingsGoogleOutput) ToSlotAuthSettingsGooglePtrOutput() SlotAuthSettingsGooglePtrOutput {
	return o.ToSlotAuthSettingsGooglePtrOutputWithContext(context.Background())
}

func (o SlotAuthSettingsGoogleOutput) ToSlotAuthSettingsGooglePtrOutputWithContext(ctx context.Context) SlotAuthSettingsGooglePtrOutput {
	return o.ApplyT(func(v SlotAuthSettingsGoogle) *SlotAuthSettingsGoogle {
		return &v
	}).(SlotAuthSettingsGooglePtrOutput)
}

// The OpenID Connect Client ID for the Google web application.
func (o SlotAuthSettingsGoogleOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v SlotAuthSettingsGoogle) string { return v.ClientId }).(pulumi.StringOutput)
}

// The client secret associated with the Google web application.
func (o SlotAuthSettingsGoogleOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v SlotAuthSettingsGoogle) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. https://developers.google.com/identity/sign-in/web/
func (o SlotAuthSettingsGoogleOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SlotAuthSettingsGoogle) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

type SlotAuthSettingsGooglePtrOutput struct{ *pulumi.OutputState }

func (SlotAuthSettingsGooglePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotAuthSettingsGoogle)(nil)).Elem()
}

func (o SlotAuthSettingsGooglePtrOutput) ToSlotAuthSettingsGooglePtrOutput() SlotAuthSettingsGooglePtrOutput {
	return o
}

func (o SlotAuthSettingsGooglePtrOutput) ToSlotAuthSettingsGooglePtrOutputWithContext(ctx context.Context) SlotAuthSettingsGooglePtrOutput {
	return o
}

func (o SlotAuthSettingsGooglePtrOutput) Elem() SlotAuthSettingsGoogleOutput {
	return o.ApplyT(func(v *SlotAuthSettingsGoogle) SlotAuthSettingsGoogle { return *v }).(SlotAuthSettingsGoogleOutput)
}

// The OpenID Connect Client ID for the Google web application.
func (o SlotAuthSettingsGooglePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotAuthSettingsGoogle) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The client secret associated with the Google web application.
func (o SlotAuthSettingsGooglePtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotAuthSettingsGoogle) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. https://developers.google.com/identity/sign-in/web/
func (o SlotAuthSettingsGooglePtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SlotAuthSettingsGoogle) []string {
		if v == nil {
			return nil
		}
		return v.OauthScopes
	}).(pulumi.StringArrayOutput)
}

type SlotAuthSettingsMicrosoft struct {
	// The OAuth 2.0 client ID that was created for the app used for authentication.
	ClientId string `pulumi:"clientId"`
	// The OAuth 2.0 client secret that was created for the app used for authentication.
	ClientSecret string `pulumi:"clientSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. https://msdn.microsoft.com/en-us/library/dn631845.aspx
	OauthScopes []string `pulumi:"oauthScopes"`
}

// SlotAuthSettingsMicrosoftInput is an input type that accepts SlotAuthSettingsMicrosoftArgs and SlotAuthSettingsMicrosoftOutput values.
// You can construct a concrete instance of `SlotAuthSettingsMicrosoftInput` via:
//
//          SlotAuthSettingsMicrosoftArgs{...}
type SlotAuthSettingsMicrosoftInput interface {
	pulumi.Input

	ToSlotAuthSettingsMicrosoftOutput() SlotAuthSettingsMicrosoftOutput
	ToSlotAuthSettingsMicrosoftOutputWithContext(context.Context) SlotAuthSettingsMicrosoftOutput
}

type SlotAuthSettingsMicrosoftArgs struct {
	// The OAuth 2.0 client ID that was created for the app used for authentication.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The OAuth 2.0 client secret that was created for the app used for authentication.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. https://msdn.microsoft.com/en-us/library/dn631845.aspx
	OauthScopes pulumi.StringArrayInput `pulumi:"oauthScopes"`
}

func (SlotAuthSettingsMicrosoftArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotAuthSettingsMicrosoft)(nil)).Elem()
}

func (i SlotAuthSettingsMicrosoftArgs) ToSlotAuthSettingsMicrosoftOutput() SlotAuthSettingsMicrosoftOutput {
	return i.ToSlotAuthSettingsMicrosoftOutputWithContext(context.Background())
}

func (i SlotAuthSettingsMicrosoftArgs) ToSlotAuthSettingsMicrosoftOutputWithContext(ctx context.Context) SlotAuthSettingsMicrosoftOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotAuthSettingsMicrosoftOutput)
}

func (i SlotAuthSettingsMicrosoftArgs) ToSlotAuthSettingsMicrosoftPtrOutput() SlotAuthSettingsMicrosoftPtrOutput {
	return i.ToSlotAuthSettingsMicrosoftPtrOutputWithContext(context.Background())
}

func (i SlotAuthSettingsMicrosoftArgs) ToSlotAuthSettingsMicrosoftPtrOutputWithContext(ctx context.Context) SlotAuthSettingsMicrosoftPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotAuthSettingsMicrosoftOutput).ToSlotAuthSettingsMicrosoftPtrOutputWithContext(ctx)
}

// SlotAuthSettingsMicrosoftPtrInput is an input type that accepts SlotAuthSettingsMicrosoftArgs, SlotAuthSettingsMicrosoftPtr and SlotAuthSettingsMicrosoftPtrOutput values.
// You can construct a concrete instance of `SlotAuthSettingsMicrosoftPtrInput` via:
//
//          SlotAuthSettingsMicrosoftArgs{...}
//
//  or:
//
//          nil
type SlotAuthSettingsMicrosoftPtrInput interface {
	pulumi.Input

	ToSlotAuthSettingsMicrosoftPtrOutput() SlotAuthSettingsMicrosoftPtrOutput
	ToSlotAuthSettingsMicrosoftPtrOutputWithContext(context.Context) SlotAuthSettingsMicrosoftPtrOutput
}

type slotAuthSettingsMicrosoftPtrType SlotAuthSettingsMicrosoftArgs

func SlotAuthSettingsMicrosoftPtr(v *SlotAuthSettingsMicrosoftArgs) SlotAuthSettingsMicrosoftPtrInput {
	return (*slotAuthSettingsMicrosoftPtrType)(v)
}

func (*slotAuthSettingsMicrosoftPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotAuthSettingsMicrosoft)(nil)).Elem()
}

func (i *slotAuthSettingsMicrosoftPtrType) ToSlotAuthSettingsMicrosoftPtrOutput() SlotAuthSettingsMicrosoftPtrOutput {
	return i.ToSlotAuthSettingsMicrosoftPtrOutputWithContext(context.Background())
}

func (i *slotAuthSettingsMicrosoftPtrType) ToSlotAuthSettingsMicrosoftPtrOutputWithContext(ctx context.Context) SlotAuthSettingsMicrosoftPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotAuthSettingsMicrosoftPtrOutput)
}

type SlotAuthSettingsMicrosoftOutput struct{ *pulumi.OutputState }

func (SlotAuthSettingsMicrosoftOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotAuthSettingsMicrosoft)(nil)).Elem()
}

func (o SlotAuthSettingsMicrosoftOutput) ToSlotAuthSettingsMicrosoftOutput() SlotAuthSettingsMicrosoftOutput {
	return o
}

func (o SlotAuthSettingsMicrosoftOutput) ToSlotAuthSettingsMicrosoftOutputWithContext(ctx context.Context) SlotAuthSettingsMicrosoftOutput {
	return o
}

func (o SlotAuthSettingsMicrosoftOutput) ToSlotAuthSettingsMicrosoftPtrOutput() SlotAuthSettingsMicrosoftPtrOutput {
	return o.ToSlotAuthSettingsMicrosoftPtrOutputWithContext(context.Background())
}

func (o SlotAuthSettingsMicrosoftOutput) ToSlotAuthSettingsMicrosoftPtrOutputWithContext(ctx context.Context) SlotAuthSettingsMicrosoftPtrOutput {
	return o.ApplyT(func(v SlotAuthSettingsMicrosoft) *SlotAuthSettingsMicrosoft {
		return &v
	}).(SlotAuthSettingsMicrosoftPtrOutput)
}

// The OAuth 2.0 client ID that was created for the app used for authentication.
func (o SlotAuthSettingsMicrosoftOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v SlotAuthSettingsMicrosoft) string { return v.ClientId }).(pulumi.StringOutput)
}

// The OAuth 2.0 client secret that was created for the app used for authentication.
func (o SlotAuthSettingsMicrosoftOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v SlotAuthSettingsMicrosoft) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. https://msdn.microsoft.com/en-us/library/dn631845.aspx
func (o SlotAuthSettingsMicrosoftOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SlotAuthSettingsMicrosoft) []string { return v.OauthScopes }).(pulumi.StringArrayOutput)
}

type SlotAuthSettingsMicrosoftPtrOutput struct{ *pulumi.OutputState }

func (SlotAuthSettingsMicrosoftPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotAuthSettingsMicrosoft)(nil)).Elem()
}

func (o SlotAuthSettingsMicrosoftPtrOutput) ToSlotAuthSettingsMicrosoftPtrOutput() SlotAuthSettingsMicrosoftPtrOutput {
	return o
}

func (o SlotAuthSettingsMicrosoftPtrOutput) ToSlotAuthSettingsMicrosoftPtrOutputWithContext(ctx context.Context) SlotAuthSettingsMicrosoftPtrOutput {
	return o
}

func (o SlotAuthSettingsMicrosoftPtrOutput) Elem() SlotAuthSettingsMicrosoftOutput {
	return o.ApplyT(func(v *SlotAuthSettingsMicrosoft) SlotAuthSettingsMicrosoft { return *v }).(SlotAuthSettingsMicrosoftOutput)
}

// The OAuth 2.0 client ID that was created for the app used for authentication.
func (o SlotAuthSettingsMicrosoftPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotAuthSettingsMicrosoft) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The OAuth 2.0 client secret that was created for the app used for authentication.
func (o SlotAuthSettingsMicrosoftPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotAuthSettingsMicrosoft) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. https://msdn.microsoft.com/en-us/library/dn631845.aspx
func (o SlotAuthSettingsMicrosoftPtrOutput) OauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SlotAuthSettingsMicrosoft) []string {
		if v == nil {
			return nil
		}
		return v.OauthScopes
	}).(pulumi.StringArrayOutput)
}

type SlotAuthSettingsTwitter struct {
	ConsumerKey    string `pulumi:"consumerKey"`
	ConsumerSecret string `pulumi:"consumerSecret"`
}

// SlotAuthSettingsTwitterInput is an input type that accepts SlotAuthSettingsTwitterArgs and SlotAuthSettingsTwitterOutput values.
// You can construct a concrete instance of `SlotAuthSettingsTwitterInput` via:
//
//          SlotAuthSettingsTwitterArgs{...}
type SlotAuthSettingsTwitterInput interface {
	pulumi.Input

	ToSlotAuthSettingsTwitterOutput() SlotAuthSettingsTwitterOutput
	ToSlotAuthSettingsTwitterOutputWithContext(context.Context) SlotAuthSettingsTwitterOutput
}

type SlotAuthSettingsTwitterArgs struct {
	ConsumerKey    pulumi.StringInput `pulumi:"consumerKey"`
	ConsumerSecret pulumi.StringInput `pulumi:"consumerSecret"`
}

func (SlotAuthSettingsTwitterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotAuthSettingsTwitter)(nil)).Elem()
}

func (i SlotAuthSettingsTwitterArgs) ToSlotAuthSettingsTwitterOutput() SlotAuthSettingsTwitterOutput {
	return i.ToSlotAuthSettingsTwitterOutputWithContext(context.Background())
}

func (i SlotAuthSettingsTwitterArgs) ToSlotAuthSettingsTwitterOutputWithContext(ctx context.Context) SlotAuthSettingsTwitterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotAuthSettingsTwitterOutput)
}

func (i SlotAuthSettingsTwitterArgs) ToSlotAuthSettingsTwitterPtrOutput() SlotAuthSettingsTwitterPtrOutput {
	return i.ToSlotAuthSettingsTwitterPtrOutputWithContext(context.Background())
}

func (i SlotAuthSettingsTwitterArgs) ToSlotAuthSettingsTwitterPtrOutputWithContext(ctx context.Context) SlotAuthSettingsTwitterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotAuthSettingsTwitterOutput).ToSlotAuthSettingsTwitterPtrOutputWithContext(ctx)
}

// SlotAuthSettingsTwitterPtrInput is an input type that accepts SlotAuthSettingsTwitterArgs, SlotAuthSettingsTwitterPtr and SlotAuthSettingsTwitterPtrOutput values.
// You can construct a concrete instance of `SlotAuthSettingsTwitterPtrInput` via:
//
//          SlotAuthSettingsTwitterArgs{...}
//
//  or:
//
//          nil
type SlotAuthSettingsTwitterPtrInput interface {
	pulumi.Input

	ToSlotAuthSettingsTwitterPtrOutput() SlotAuthSettingsTwitterPtrOutput
	ToSlotAuthSettingsTwitterPtrOutputWithContext(context.Context) SlotAuthSettingsTwitterPtrOutput
}

type slotAuthSettingsTwitterPtrType SlotAuthSettingsTwitterArgs

func SlotAuthSettingsTwitterPtr(v *SlotAuthSettingsTwitterArgs) SlotAuthSettingsTwitterPtrInput {
	return (*slotAuthSettingsTwitterPtrType)(v)
}

func (*slotAuthSettingsTwitterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotAuthSettingsTwitter)(nil)).Elem()
}

func (i *slotAuthSettingsTwitterPtrType) ToSlotAuthSettingsTwitterPtrOutput() SlotAuthSettingsTwitterPtrOutput {
	return i.ToSlotAuthSettingsTwitterPtrOutputWithContext(context.Background())
}

func (i *slotAuthSettingsTwitterPtrType) ToSlotAuthSettingsTwitterPtrOutputWithContext(ctx context.Context) SlotAuthSettingsTwitterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotAuthSettingsTwitterPtrOutput)
}

type SlotAuthSettingsTwitterOutput struct{ *pulumi.OutputState }

func (SlotAuthSettingsTwitterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotAuthSettingsTwitter)(nil)).Elem()
}

func (o SlotAuthSettingsTwitterOutput) ToSlotAuthSettingsTwitterOutput() SlotAuthSettingsTwitterOutput {
	return o
}

func (o SlotAuthSettingsTwitterOutput) ToSlotAuthSettingsTwitterOutputWithContext(ctx context.Context) SlotAuthSettingsTwitterOutput {
	return o
}

func (o SlotAuthSettingsTwitterOutput) ToSlotAuthSettingsTwitterPtrOutput() SlotAuthSettingsTwitterPtrOutput {
	return o.ToSlotAuthSettingsTwitterPtrOutputWithContext(context.Background())
}

func (o SlotAuthSettingsTwitterOutput) ToSlotAuthSettingsTwitterPtrOutputWithContext(ctx context.Context) SlotAuthSettingsTwitterPtrOutput {
	return o.ApplyT(func(v SlotAuthSettingsTwitter) *SlotAuthSettingsTwitter {
		return &v
	}).(SlotAuthSettingsTwitterPtrOutput)
}
func (o SlotAuthSettingsTwitterOutput) ConsumerKey() pulumi.StringOutput {
	return o.ApplyT(func(v SlotAuthSettingsTwitter) string { return v.ConsumerKey }).(pulumi.StringOutput)
}

func (o SlotAuthSettingsTwitterOutput) ConsumerSecret() pulumi.StringOutput {
	return o.ApplyT(func(v SlotAuthSettingsTwitter) string { return v.ConsumerSecret }).(pulumi.StringOutput)
}

type SlotAuthSettingsTwitterPtrOutput struct{ *pulumi.OutputState }

func (SlotAuthSettingsTwitterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotAuthSettingsTwitter)(nil)).Elem()
}

func (o SlotAuthSettingsTwitterPtrOutput) ToSlotAuthSettingsTwitterPtrOutput() SlotAuthSettingsTwitterPtrOutput {
	return o
}

func (o SlotAuthSettingsTwitterPtrOutput) ToSlotAuthSettingsTwitterPtrOutputWithContext(ctx context.Context) SlotAuthSettingsTwitterPtrOutput {
	return o
}

func (o SlotAuthSettingsTwitterPtrOutput) Elem() SlotAuthSettingsTwitterOutput {
	return o.ApplyT(func(v *SlotAuthSettingsTwitter) SlotAuthSettingsTwitter { return *v }).(SlotAuthSettingsTwitterOutput)
}

func (o SlotAuthSettingsTwitterPtrOutput) ConsumerKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotAuthSettingsTwitter) *string {
		if v == nil {
			return nil
		}
		return &v.ConsumerKey
	}).(pulumi.StringPtrOutput)
}

func (o SlotAuthSettingsTwitterPtrOutput) ConsumerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotAuthSettingsTwitter) *string {
		if v == nil {
			return nil
		}
		return &v.ConsumerSecret
	}).(pulumi.StringPtrOutput)
}

type SlotConnectionString struct {
	// The name of the Connection String.
	Name string `pulumi:"name"`
	// The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure`, and  `SQLServer`.
	Type string `pulumi:"type"`
	// The value for the Connection String.
	Value string `pulumi:"value"`
}

// SlotConnectionStringInput is an input type that accepts SlotConnectionStringArgs and SlotConnectionStringOutput values.
// You can construct a concrete instance of `SlotConnectionStringInput` via:
//
//          SlotConnectionStringArgs{...}
type SlotConnectionStringInput interface {
	pulumi.Input

	ToSlotConnectionStringOutput() SlotConnectionStringOutput
	ToSlotConnectionStringOutputWithContext(context.Context) SlotConnectionStringOutput
}

type SlotConnectionStringArgs struct {
	// The name of the Connection String.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure`, and  `SQLServer`.
	Type pulumi.StringInput `pulumi:"type"`
	// The value for the Connection String.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SlotConnectionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotConnectionString)(nil)).Elem()
}

func (i SlotConnectionStringArgs) ToSlotConnectionStringOutput() SlotConnectionStringOutput {
	return i.ToSlotConnectionStringOutputWithContext(context.Background())
}

func (i SlotConnectionStringArgs) ToSlotConnectionStringOutputWithContext(ctx context.Context) SlotConnectionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotConnectionStringOutput)
}

// SlotConnectionStringArrayInput is an input type that accepts SlotConnectionStringArray and SlotConnectionStringArrayOutput values.
// You can construct a concrete instance of `SlotConnectionStringArrayInput` via:
//
//          SlotConnectionStringArray{ SlotConnectionStringArgs{...} }
type SlotConnectionStringArrayInput interface {
	pulumi.Input

	ToSlotConnectionStringArrayOutput() SlotConnectionStringArrayOutput
	ToSlotConnectionStringArrayOutputWithContext(context.Context) SlotConnectionStringArrayOutput
}

type SlotConnectionStringArray []SlotConnectionStringInput

func (SlotConnectionStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SlotConnectionString)(nil)).Elem()
}

func (i SlotConnectionStringArray) ToSlotConnectionStringArrayOutput() SlotConnectionStringArrayOutput {
	return i.ToSlotConnectionStringArrayOutputWithContext(context.Background())
}

func (i SlotConnectionStringArray) ToSlotConnectionStringArrayOutputWithContext(ctx context.Context) SlotConnectionStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotConnectionStringArrayOutput)
}

type SlotConnectionStringOutput struct{ *pulumi.OutputState }

func (SlotConnectionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotConnectionString)(nil)).Elem()
}

func (o SlotConnectionStringOutput) ToSlotConnectionStringOutput() SlotConnectionStringOutput {
	return o
}

func (o SlotConnectionStringOutput) ToSlotConnectionStringOutputWithContext(ctx context.Context) SlotConnectionStringOutput {
	return o
}

// The name of the Connection String.
func (o SlotConnectionStringOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SlotConnectionString) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure`, and  `SQLServer`.
func (o SlotConnectionStringOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SlotConnectionString) string { return v.Type }).(pulumi.StringOutput)
}

// The value for the Connection String.
func (o SlotConnectionStringOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SlotConnectionString) string { return v.Value }).(pulumi.StringOutput)
}

type SlotConnectionStringArrayOutput struct{ *pulumi.OutputState }

func (SlotConnectionStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SlotConnectionString)(nil)).Elem()
}

func (o SlotConnectionStringArrayOutput) ToSlotConnectionStringArrayOutput() SlotConnectionStringArrayOutput {
	return o
}

func (o SlotConnectionStringArrayOutput) ToSlotConnectionStringArrayOutputWithContext(ctx context.Context) SlotConnectionStringArrayOutput {
	return o
}

func (o SlotConnectionStringArrayOutput) Index(i pulumi.IntInput) SlotConnectionStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SlotConnectionString {
		return vs[0].([]SlotConnectionString)[vs[1].(int)]
	}).(SlotConnectionStringOutput)
}

type SlotIdentity struct {
	// Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
	IdentityIds []string `pulumi:"identityIds"`
	PrincipalId *string  `pulumi:"principalId"`
	TenantId    *string  `pulumi:"tenantId"`
	// Specifies the identity type of the App Service. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identityIds` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
	Type string `pulumi:"type"`
}

// SlotIdentityInput is an input type that accepts SlotIdentityArgs and SlotIdentityOutput values.
// You can construct a concrete instance of `SlotIdentityInput` via:
//
//          SlotIdentityArgs{...}
type SlotIdentityInput interface {
	pulumi.Input

	ToSlotIdentityOutput() SlotIdentityOutput
	ToSlotIdentityOutputWithContext(context.Context) SlotIdentityOutput
}

type SlotIdentityArgs struct {
	// Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	PrincipalId pulumi.StringPtrInput   `pulumi:"principalId"`
	TenantId    pulumi.StringPtrInput   `pulumi:"tenantId"`
	// Specifies the identity type of the App Service. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identityIds` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SlotIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotIdentity)(nil)).Elem()
}

func (i SlotIdentityArgs) ToSlotIdentityOutput() SlotIdentityOutput {
	return i.ToSlotIdentityOutputWithContext(context.Background())
}

func (i SlotIdentityArgs) ToSlotIdentityOutputWithContext(ctx context.Context) SlotIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotIdentityOutput)
}

func (i SlotIdentityArgs) ToSlotIdentityPtrOutput() SlotIdentityPtrOutput {
	return i.ToSlotIdentityPtrOutputWithContext(context.Background())
}

func (i SlotIdentityArgs) ToSlotIdentityPtrOutputWithContext(ctx context.Context) SlotIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotIdentityOutput).ToSlotIdentityPtrOutputWithContext(ctx)
}

// SlotIdentityPtrInput is an input type that accepts SlotIdentityArgs, SlotIdentityPtr and SlotIdentityPtrOutput values.
// You can construct a concrete instance of `SlotIdentityPtrInput` via:
//
//          SlotIdentityArgs{...}
//
//  or:
//
//          nil
type SlotIdentityPtrInput interface {
	pulumi.Input

	ToSlotIdentityPtrOutput() SlotIdentityPtrOutput
	ToSlotIdentityPtrOutputWithContext(context.Context) SlotIdentityPtrOutput
}

type slotIdentityPtrType SlotIdentityArgs

func SlotIdentityPtr(v *SlotIdentityArgs) SlotIdentityPtrInput {
	return (*slotIdentityPtrType)(v)
}

func (*slotIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotIdentity)(nil)).Elem()
}

func (i *slotIdentityPtrType) ToSlotIdentityPtrOutput() SlotIdentityPtrOutput {
	return i.ToSlotIdentityPtrOutputWithContext(context.Background())
}

func (i *slotIdentityPtrType) ToSlotIdentityPtrOutputWithContext(ctx context.Context) SlotIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotIdentityPtrOutput)
}

type SlotIdentityOutput struct{ *pulumi.OutputState }

func (SlotIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotIdentity)(nil)).Elem()
}

func (o SlotIdentityOutput) ToSlotIdentityOutput() SlotIdentityOutput {
	return o
}

func (o SlotIdentityOutput) ToSlotIdentityOutputWithContext(ctx context.Context) SlotIdentityOutput {
	return o
}

func (o SlotIdentityOutput) ToSlotIdentityPtrOutput() SlotIdentityPtrOutput {
	return o.ToSlotIdentityPtrOutputWithContext(context.Background())
}

func (o SlotIdentityOutput) ToSlotIdentityPtrOutputWithContext(ctx context.Context) SlotIdentityPtrOutput {
	return o.ApplyT(func(v SlotIdentity) *SlotIdentity {
		return &v
	}).(SlotIdentityPtrOutput)
}

// Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
func (o SlotIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SlotIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

func (o SlotIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

func (o SlotIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the identity type of the App Service. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identityIds` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
func (o SlotIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SlotIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type SlotIdentityPtrOutput struct{ *pulumi.OutputState }

func (SlotIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotIdentity)(nil)).Elem()
}

func (o SlotIdentityPtrOutput) ToSlotIdentityPtrOutput() SlotIdentityPtrOutput {
	return o
}

func (o SlotIdentityPtrOutput) ToSlotIdentityPtrOutputWithContext(ctx context.Context) SlotIdentityPtrOutput {
	return o
}

func (o SlotIdentityPtrOutput) Elem() SlotIdentityOutput {
	return o.ApplyT(func(v *SlotIdentity) SlotIdentity { return *v }).(SlotIdentityOutput)
}

// Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
func (o SlotIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SlotIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

func (o SlotIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

func (o SlotIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the identity type of the App Service. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identityIds` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
func (o SlotIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type SlotLogs struct {
	// An `applicationLogs` block as defined below.
	ApplicationLogs *SlotLogsApplicationLogs `pulumi:"applicationLogs"`
	// Should `Detailed error messages` be enabled on this App Service slot? Defaults to `false`.
	DetailedErrorMessagesEnabled *bool `pulumi:"detailedErrorMessagesEnabled"`
	// Should `Failed request tracing` be enabled on this App Service slot? Defaults to `false`.
	FailedRequestTracingEnabled *bool `pulumi:"failedRequestTracingEnabled"`
	// An `httpLogs` block as defined below.
	HttpLogs *SlotLogsHttpLogs `pulumi:"httpLogs"`
}

// SlotLogsInput is an input type that accepts SlotLogsArgs and SlotLogsOutput values.
// You can construct a concrete instance of `SlotLogsInput` via:
//
//          SlotLogsArgs{...}
type SlotLogsInput interface {
	pulumi.Input

	ToSlotLogsOutput() SlotLogsOutput
	ToSlotLogsOutputWithContext(context.Context) SlotLogsOutput
}

type SlotLogsArgs struct {
	// An `applicationLogs` block as defined below.
	ApplicationLogs SlotLogsApplicationLogsPtrInput `pulumi:"applicationLogs"`
	// Should `Detailed error messages` be enabled on this App Service slot? Defaults to `false`.
	DetailedErrorMessagesEnabled pulumi.BoolPtrInput `pulumi:"detailedErrorMessagesEnabled"`
	// Should `Failed request tracing` be enabled on this App Service slot? Defaults to `false`.
	FailedRequestTracingEnabled pulumi.BoolPtrInput `pulumi:"failedRequestTracingEnabled"`
	// An `httpLogs` block as defined below.
	HttpLogs SlotLogsHttpLogsPtrInput `pulumi:"httpLogs"`
}

func (SlotLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotLogs)(nil)).Elem()
}

func (i SlotLogsArgs) ToSlotLogsOutput() SlotLogsOutput {
	return i.ToSlotLogsOutputWithContext(context.Background())
}

func (i SlotLogsArgs) ToSlotLogsOutputWithContext(ctx context.Context) SlotLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotLogsOutput)
}

func (i SlotLogsArgs) ToSlotLogsPtrOutput() SlotLogsPtrOutput {
	return i.ToSlotLogsPtrOutputWithContext(context.Background())
}

func (i SlotLogsArgs) ToSlotLogsPtrOutputWithContext(ctx context.Context) SlotLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotLogsOutput).ToSlotLogsPtrOutputWithContext(ctx)
}

// SlotLogsPtrInput is an input type that accepts SlotLogsArgs, SlotLogsPtr and SlotLogsPtrOutput values.
// You can construct a concrete instance of `SlotLogsPtrInput` via:
//
//          SlotLogsArgs{...}
//
//  or:
//
//          nil
type SlotLogsPtrInput interface {
	pulumi.Input

	ToSlotLogsPtrOutput() SlotLogsPtrOutput
	ToSlotLogsPtrOutputWithContext(context.Context) SlotLogsPtrOutput
}

type slotLogsPtrType SlotLogsArgs

func SlotLogsPtr(v *SlotLogsArgs) SlotLogsPtrInput {
	return (*slotLogsPtrType)(v)
}

func (*slotLogsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotLogs)(nil)).Elem()
}

func (i *slotLogsPtrType) ToSlotLogsPtrOutput() SlotLogsPtrOutput {
	return i.ToSlotLogsPtrOutputWithContext(context.Background())
}

func (i *slotLogsPtrType) ToSlotLogsPtrOutputWithContext(ctx context.Context) SlotLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotLogsPtrOutput)
}

type SlotLogsOutput struct{ *pulumi.OutputState }

func (SlotLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotLogs)(nil)).Elem()
}

func (o SlotLogsOutput) ToSlotLogsOutput() SlotLogsOutput {
	return o
}

func (o SlotLogsOutput) ToSlotLogsOutputWithContext(ctx context.Context) SlotLogsOutput {
	return o
}

func (o SlotLogsOutput) ToSlotLogsPtrOutput() SlotLogsPtrOutput {
	return o.ToSlotLogsPtrOutputWithContext(context.Background())
}

func (o SlotLogsOutput) ToSlotLogsPtrOutputWithContext(ctx context.Context) SlotLogsPtrOutput {
	return o.ApplyT(func(v SlotLogs) *SlotLogs {
		return &v
	}).(SlotLogsPtrOutput)
}

// An `applicationLogs` block as defined below.
func (o SlotLogsOutput) ApplicationLogs() SlotLogsApplicationLogsPtrOutput {
	return o.ApplyT(func(v SlotLogs) *SlotLogsApplicationLogs { return v.ApplicationLogs }).(SlotLogsApplicationLogsPtrOutput)
}

// Should `Detailed error messages` be enabled on this App Service slot? Defaults to `false`.
func (o SlotLogsOutput) DetailedErrorMessagesEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SlotLogs) *bool { return v.DetailedErrorMessagesEnabled }).(pulumi.BoolPtrOutput)
}

// Should `Failed request tracing` be enabled on this App Service slot? Defaults to `false`.
func (o SlotLogsOutput) FailedRequestTracingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SlotLogs) *bool { return v.FailedRequestTracingEnabled }).(pulumi.BoolPtrOutput)
}

// An `httpLogs` block as defined below.
func (o SlotLogsOutput) HttpLogs() SlotLogsHttpLogsPtrOutput {
	return o.ApplyT(func(v SlotLogs) *SlotLogsHttpLogs { return v.HttpLogs }).(SlotLogsHttpLogsPtrOutput)
}

type SlotLogsPtrOutput struct{ *pulumi.OutputState }

func (SlotLogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotLogs)(nil)).Elem()
}

func (o SlotLogsPtrOutput) ToSlotLogsPtrOutput() SlotLogsPtrOutput {
	return o
}

func (o SlotLogsPtrOutput) ToSlotLogsPtrOutputWithContext(ctx context.Context) SlotLogsPtrOutput {
	return o
}

func (o SlotLogsPtrOutput) Elem() SlotLogsOutput {
	return o.ApplyT(func(v *SlotLogs) SlotLogs { return *v }).(SlotLogsOutput)
}

// An `applicationLogs` block as defined below.
func (o SlotLogsPtrOutput) ApplicationLogs() SlotLogsApplicationLogsPtrOutput {
	return o.ApplyT(func(v *SlotLogs) *SlotLogsApplicationLogs {
		if v == nil {
			return nil
		}
		return v.ApplicationLogs
	}).(SlotLogsApplicationLogsPtrOutput)
}

// Should `Detailed error messages` be enabled on this App Service slot? Defaults to `false`.
func (o SlotLogsPtrOutput) DetailedErrorMessagesEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SlotLogs) *bool {
		if v == nil {
			return nil
		}
		return v.DetailedErrorMessagesEnabled
	}).(pulumi.BoolPtrOutput)
}

// Should `Failed request tracing` be enabled on this App Service slot? Defaults to `false`.
func (o SlotLogsPtrOutput) FailedRequestTracingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SlotLogs) *bool {
		if v == nil {
			return nil
		}
		return v.FailedRequestTracingEnabled
	}).(pulumi.BoolPtrOutput)
}

// An `httpLogs` block as defined below.
func (o SlotLogsPtrOutput) HttpLogs() SlotLogsHttpLogsPtrOutput {
	return o.ApplyT(func(v *SlotLogs) *SlotLogsHttpLogs {
		if v == nil {
			return nil
		}
		return v.HttpLogs
	}).(SlotLogsHttpLogsPtrOutput)
}

type SlotLogsApplicationLogs struct {
	// An `azureBlobStorage` block as defined below.
	AzureBlobStorage *SlotLogsApplicationLogsAzureBlobStorage `pulumi:"azureBlobStorage"`
	// The file system log level. Possible values are `Off`, `Error`, `Warning`, `Information`, and `Verbose`.
	FileSystemLevel *string `pulumi:"fileSystemLevel"`
}

// SlotLogsApplicationLogsInput is an input type that accepts SlotLogsApplicationLogsArgs and SlotLogsApplicationLogsOutput values.
// You can construct a concrete instance of `SlotLogsApplicationLogsInput` via:
//
//          SlotLogsApplicationLogsArgs{...}
type SlotLogsApplicationLogsInput interface {
	pulumi.Input

	ToSlotLogsApplicationLogsOutput() SlotLogsApplicationLogsOutput
	ToSlotLogsApplicationLogsOutputWithContext(context.Context) SlotLogsApplicationLogsOutput
}

type SlotLogsApplicationLogsArgs struct {
	// An `azureBlobStorage` block as defined below.
	AzureBlobStorage SlotLogsApplicationLogsAzureBlobStoragePtrInput `pulumi:"azureBlobStorage"`
	// The file system log level. Possible values are `Off`, `Error`, `Warning`, `Information`, and `Verbose`.
	FileSystemLevel pulumi.StringPtrInput `pulumi:"fileSystemLevel"`
}

func (SlotLogsApplicationLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotLogsApplicationLogs)(nil)).Elem()
}

func (i SlotLogsApplicationLogsArgs) ToSlotLogsApplicationLogsOutput() SlotLogsApplicationLogsOutput {
	return i.ToSlotLogsApplicationLogsOutputWithContext(context.Background())
}

func (i SlotLogsApplicationLogsArgs) ToSlotLogsApplicationLogsOutputWithContext(ctx context.Context) SlotLogsApplicationLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotLogsApplicationLogsOutput)
}

func (i SlotLogsApplicationLogsArgs) ToSlotLogsApplicationLogsPtrOutput() SlotLogsApplicationLogsPtrOutput {
	return i.ToSlotLogsApplicationLogsPtrOutputWithContext(context.Background())
}

func (i SlotLogsApplicationLogsArgs) ToSlotLogsApplicationLogsPtrOutputWithContext(ctx context.Context) SlotLogsApplicationLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotLogsApplicationLogsOutput).ToSlotLogsApplicationLogsPtrOutputWithContext(ctx)
}

// SlotLogsApplicationLogsPtrInput is an input type that accepts SlotLogsApplicationLogsArgs, SlotLogsApplicationLogsPtr and SlotLogsApplicationLogsPtrOutput values.
// You can construct a concrete instance of `SlotLogsApplicationLogsPtrInput` via:
//
//          SlotLogsApplicationLogsArgs{...}
//
//  or:
//
//          nil
type SlotLogsApplicationLogsPtrInput interface {
	pulumi.Input

	ToSlotLogsApplicationLogsPtrOutput() SlotLogsApplicationLogsPtrOutput
	ToSlotLogsApplicationLogsPtrOutputWithContext(context.Context) SlotLogsApplicationLogsPtrOutput
}

type slotLogsApplicationLogsPtrType SlotLogsApplicationLogsArgs

func SlotLogsApplicationLogsPtr(v *SlotLogsApplicationLogsArgs) SlotLogsApplicationLogsPtrInput {
	return (*slotLogsApplicationLogsPtrType)(v)
}

func (*slotLogsApplicationLogsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotLogsApplicationLogs)(nil)).Elem()
}

func (i *slotLogsApplicationLogsPtrType) ToSlotLogsApplicationLogsPtrOutput() SlotLogsApplicationLogsPtrOutput {
	return i.ToSlotLogsApplicationLogsPtrOutputWithContext(context.Background())
}

func (i *slotLogsApplicationLogsPtrType) ToSlotLogsApplicationLogsPtrOutputWithContext(ctx context.Context) SlotLogsApplicationLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotLogsApplicationLogsPtrOutput)
}

type SlotLogsApplicationLogsOutput struct{ *pulumi.OutputState }

func (SlotLogsApplicationLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotLogsApplicationLogs)(nil)).Elem()
}

func (o SlotLogsApplicationLogsOutput) ToSlotLogsApplicationLogsOutput() SlotLogsApplicationLogsOutput {
	return o
}

func (o SlotLogsApplicationLogsOutput) ToSlotLogsApplicationLogsOutputWithContext(ctx context.Context) SlotLogsApplicationLogsOutput {
	return o
}

func (o SlotLogsApplicationLogsOutput) ToSlotLogsApplicationLogsPtrOutput() SlotLogsApplicationLogsPtrOutput {
	return o.ToSlotLogsApplicationLogsPtrOutputWithContext(context.Background())
}

func (o SlotLogsApplicationLogsOutput) ToSlotLogsApplicationLogsPtrOutputWithContext(ctx context.Context) SlotLogsApplicationLogsPtrOutput {
	return o.ApplyT(func(v SlotLogsApplicationLogs) *SlotLogsApplicationLogs {
		return &v
	}).(SlotLogsApplicationLogsPtrOutput)
}

// An `azureBlobStorage` block as defined below.
func (o SlotLogsApplicationLogsOutput) AzureBlobStorage() SlotLogsApplicationLogsAzureBlobStoragePtrOutput {
	return o.ApplyT(func(v SlotLogsApplicationLogs) *SlotLogsApplicationLogsAzureBlobStorage { return v.AzureBlobStorage }).(SlotLogsApplicationLogsAzureBlobStoragePtrOutput)
}

// The file system log level. Possible values are `Off`, `Error`, `Warning`, `Information`, and `Verbose`.
func (o SlotLogsApplicationLogsOutput) FileSystemLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotLogsApplicationLogs) *string { return v.FileSystemLevel }).(pulumi.StringPtrOutput)
}

type SlotLogsApplicationLogsPtrOutput struct{ *pulumi.OutputState }

func (SlotLogsApplicationLogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotLogsApplicationLogs)(nil)).Elem()
}

func (o SlotLogsApplicationLogsPtrOutput) ToSlotLogsApplicationLogsPtrOutput() SlotLogsApplicationLogsPtrOutput {
	return o
}

func (o SlotLogsApplicationLogsPtrOutput) ToSlotLogsApplicationLogsPtrOutputWithContext(ctx context.Context) SlotLogsApplicationLogsPtrOutput {
	return o
}

func (o SlotLogsApplicationLogsPtrOutput) Elem() SlotLogsApplicationLogsOutput {
	return o.ApplyT(func(v *SlotLogsApplicationLogs) SlotLogsApplicationLogs { return *v }).(SlotLogsApplicationLogsOutput)
}

// An `azureBlobStorage` block as defined below.
func (o SlotLogsApplicationLogsPtrOutput) AzureBlobStorage() SlotLogsApplicationLogsAzureBlobStoragePtrOutput {
	return o.ApplyT(func(v *SlotLogsApplicationLogs) *SlotLogsApplicationLogsAzureBlobStorage {
		if v == nil {
			return nil
		}
		return v.AzureBlobStorage
	}).(SlotLogsApplicationLogsAzureBlobStoragePtrOutput)
}

// The file system log level. Possible values are `Off`, `Error`, `Warning`, `Information`, and `Verbose`.
func (o SlotLogsApplicationLogsPtrOutput) FileSystemLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotLogsApplicationLogs) *string {
		if v == nil {
			return nil
		}
		return v.FileSystemLevel
	}).(pulumi.StringPtrOutput)
}

type SlotLogsApplicationLogsAzureBlobStorage struct {
	// The level at which to log. Possible values include `Error`, `Warning`, `Information`, `Verbose` and `Off`. **NOTE:** this field is not available for `httpLogs`
	Level string `pulumi:"level"`
	// The number of days to retain logs for.
	RetentionInDays int `pulumi:"retentionInDays"`
	// The URL to the storage container, with a Service SAS token appended. **NOTE:** there is currently no means of generating Service SAS tokens with the `azurerm` provider.
	SasUrl string `pulumi:"sasUrl"`
}

// SlotLogsApplicationLogsAzureBlobStorageInput is an input type that accepts SlotLogsApplicationLogsAzureBlobStorageArgs and SlotLogsApplicationLogsAzureBlobStorageOutput values.
// You can construct a concrete instance of `SlotLogsApplicationLogsAzureBlobStorageInput` via:
//
//          SlotLogsApplicationLogsAzureBlobStorageArgs{...}
type SlotLogsApplicationLogsAzureBlobStorageInput interface {
	pulumi.Input

	ToSlotLogsApplicationLogsAzureBlobStorageOutput() SlotLogsApplicationLogsAzureBlobStorageOutput
	ToSlotLogsApplicationLogsAzureBlobStorageOutputWithContext(context.Context) SlotLogsApplicationLogsAzureBlobStorageOutput
}

type SlotLogsApplicationLogsAzureBlobStorageArgs struct {
	// The level at which to log. Possible values include `Error`, `Warning`, `Information`, `Verbose` and `Off`. **NOTE:** this field is not available for `httpLogs`
	Level pulumi.StringInput `pulumi:"level"`
	// The number of days to retain logs for.
	RetentionInDays pulumi.IntInput `pulumi:"retentionInDays"`
	// The URL to the storage container, with a Service SAS token appended. **NOTE:** there is currently no means of generating Service SAS tokens with the `azurerm` provider.
	SasUrl pulumi.StringInput `pulumi:"sasUrl"`
}

func (SlotLogsApplicationLogsAzureBlobStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotLogsApplicationLogsAzureBlobStorage)(nil)).Elem()
}

func (i SlotLogsApplicationLogsAzureBlobStorageArgs) ToSlotLogsApplicationLogsAzureBlobStorageOutput() SlotLogsApplicationLogsAzureBlobStorageOutput {
	return i.ToSlotLogsApplicationLogsAzureBlobStorageOutputWithContext(context.Background())
}

func (i SlotLogsApplicationLogsAzureBlobStorageArgs) ToSlotLogsApplicationLogsAzureBlobStorageOutputWithContext(ctx context.Context) SlotLogsApplicationLogsAzureBlobStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotLogsApplicationLogsAzureBlobStorageOutput)
}

func (i SlotLogsApplicationLogsAzureBlobStorageArgs) ToSlotLogsApplicationLogsAzureBlobStoragePtrOutput() SlotLogsApplicationLogsAzureBlobStoragePtrOutput {
	return i.ToSlotLogsApplicationLogsAzureBlobStoragePtrOutputWithContext(context.Background())
}

func (i SlotLogsApplicationLogsAzureBlobStorageArgs) ToSlotLogsApplicationLogsAzureBlobStoragePtrOutputWithContext(ctx context.Context) SlotLogsApplicationLogsAzureBlobStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotLogsApplicationLogsAzureBlobStorageOutput).ToSlotLogsApplicationLogsAzureBlobStoragePtrOutputWithContext(ctx)
}

// SlotLogsApplicationLogsAzureBlobStoragePtrInput is an input type that accepts SlotLogsApplicationLogsAzureBlobStorageArgs, SlotLogsApplicationLogsAzureBlobStoragePtr and SlotLogsApplicationLogsAzureBlobStoragePtrOutput values.
// You can construct a concrete instance of `SlotLogsApplicationLogsAzureBlobStoragePtrInput` via:
//
//          SlotLogsApplicationLogsAzureBlobStorageArgs{...}
//
//  or:
//
//          nil
type SlotLogsApplicationLogsAzureBlobStoragePtrInput interface {
	pulumi.Input

	ToSlotLogsApplicationLogsAzureBlobStoragePtrOutput() SlotLogsApplicationLogsAzureBlobStoragePtrOutput
	ToSlotLogsApplicationLogsAzureBlobStoragePtrOutputWithContext(context.Context) SlotLogsApplicationLogsAzureBlobStoragePtrOutput
}

type slotLogsApplicationLogsAzureBlobStoragePtrType SlotLogsApplicationLogsAzureBlobStorageArgs

func SlotLogsApplicationLogsAzureBlobStoragePtr(v *SlotLogsApplicationLogsAzureBlobStorageArgs) SlotLogsApplicationLogsAzureBlobStoragePtrInput {
	return (*slotLogsApplicationLogsAzureBlobStoragePtrType)(v)
}

func (*slotLogsApplicationLogsAzureBlobStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotLogsApplicationLogsAzureBlobStorage)(nil)).Elem()
}

func (i *slotLogsApplicationLogsAzureBlobStoragePtrType) ToSlotLogsApplicationLogsAzureBlobStoragePtrOutput() SlotLogsApplicationLogsAzureBlobStoragePtrOutput {
	return i.ToSlotLogsApplicationLogsAzureBlobStoragePtrOutputWithContext(context.Background())
}

func (i *slotLogsApplicationLogsAzureBlobStoragePtrType) ToSlotLogsApplicationLogsAzureBlobStoragePtrOutputWithContext(ctx context.Context) SlotLogsApplicationLogsAzureBlobStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotLogsApplicationLogsAzureBlobStoragePtrOutput)
}

type SlotLogsApplicationLogsAzureBlobStorageOutput struct{ *pulumi.OutputState }

func (SlotLogsApplicationLogsAzureBlobStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotLogsApplicationLogsAzureBlobStorage)(nil)).Elem()
}

func (o SlotLogsApplicationLogsAzureBlobStorageOutput) ToSlotLogsApplicationLogsAzureBlobStorageOutput() SlotLogsApplicationLogsAzureBlobStorageOutput {
	return o
}

func (o SlotLogsApplicationLogsAzureBlobStorageOutput) ToSlotLogsApplicationLogsAzureBlobStorageOutputWithContext(ctx context.Context) SlotLogsApplicationLogsAzureBlobStorageOutput {
	return o
}

func (o SlotLogsApplicationLogsAzureBlobStorageOutput) ToSlotLogsApplicationLogsAzureBlobStoragePtrOutput() SlotLogsApplicationLogsAzureBlobStoragePtrOutput {
	return o.ToSlotLogsApplicationLogsAzureBlobStoragePtrOutputWithContext(context.Background())
}

func (o SlotLogsApplicationLogsAzureBlobStorageOutput) ToSlotLogsApplicationLogsAzureBlobStoragePtrOutputWithContext(ctx context.Context) SlotLogsApplicationLogsAzureBlobStoragePtrOutput {
	return o.ApplyT(func(v SlotLogsApplicationLogsAzureBlobStorage) *SlotLogsApplicationLogsAzureBlobStorage {
		return &v
	}).(SlotLogsApplicationLogsAzureBlobStoragePtrOutput)
}

// The level at which to log. Possible values include `Error`, `Warning`, `Information`, `Verbose` and `Off`. **NOTE:** this field is not available for `httpLogs`
func (o SlotLogsApplicationLogsAzureBlobStorageOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v SlotLogsApplicationLogsAzureBlobStorage) string { return v.Level }).(pulumi.StringOutput)
}

// The number of days to retain logs for.
func (o SlotLogsApplicationLogsAzureBlobStorageOutput) RetentionInDays() pulumi.IntOutput {
	return o.ApplyT(func(v SlotLogsApplicationLogsAzureBlobStorage) int { return v.RetentionInDays }).(pulumi.IntOutput)
}

// The URL to the storage container, with a Service SAS token appended. **NOTE:** there is currently no means of generating Service SAS tokens with the `azurerm` provider.
func (o SlotLogsApplicationLogsAzureBlobStorageOutput) SasUrl() pulumi.StringOutput {
	return o.ApplyT(func(v SlotLogsApplicationLogsAzureBlobStorage) string { return v.SasUrl }).(pulumi.StringOutput)
}

type SlotLogsApplicationLogsAzureBlobStoragePtrOutput struct{ *pulumi.OutputState }

func (SlotLogsApplicationLogsAzureBlobStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotLogsApplicationLogsAzureBlobStorage)(nil)).Elem()
}

func (o SlotLogsApplicationLogsAzureBlobStoragePtrOutput) ToSlotLogsApplicationLogsAzureBlobStoragePtrOutput() SlotLogsApplicationLogsAzureBlobStoragePtrOutput {
	return o
}

func (o SlotLogsApplicationLogsAzureBlobStoragePtrOutput) ToSlotLogsApplicationLogsAzureBlobStoragePtrOutputWithContext(ctx context.Context) SlotLogsApplicationLogsAzureBlobStoragePtrOutput {
	return o
}

func (o SlotLogsApplicationLogsAzureBlobStoragePtrOutput) Elem() SlotLogsApplicationLogsAzureBlobStorageOutput {
	return o.ApplyT(func(v *SlotLogsApplicationLogsAzureBlobStorage) SlotLogsApplicationLogsAzureBlobStorage { return *v }).(SlotLogsApplicationLogsAzureBlobStorageOutput)
}

// The level at which to log. Possible values include `Error`, `Warning`, `Information`, `Verbose` and `Off`. **NOTE:** this field is not available for `httpLogs`
func (o SlotLogsApplicationLogsAzureBlobStoragePtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotLogsApplicationLogsAzureBlobStorage) *string {
		if v == nil {
			return nil
		}
		return &v.Level
	}).(pulumi.StringPtrOutput)
}

// The number of days to retain logs for.
func (o SlotLogsApplicationLogsAzureBlobStoragePtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SlotLogsApplicationLogsAzureBlobStorage) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

// The URL to the storage container, with a Service SAS token appended. **NOTE:** there is currently no means of generating Service SAS tokens with the `azurerm` provider.
func (o SlotLogsApplicationLogsAzureBlobStoragePtrOutput) SasUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotLogsApplicationLogsAzureBlobStorage) *string {
		if v == nil {
			return nil
		}
		return &v.SasUrl
	}).(pulumi.StringPtrOutput)
}

type SlotLogsHttpLogs struct {
	// An `azureBlobStorage` block as defined below.
	AzureBlobStorage *SlotLogsHttpLogsAzureBlobStorage `pulumi:"azureBlobStorage"`
	// A `fileSystem` block as defined below.
	FileSystem *SlotLogsHttpLogsFileSystem `pulumi:"fileSystem"`
}

// SlotLogsHttpLogsInput is an input type that accepts SlotLogsHttpLogsArgs and SlotLogsHttpLogsOutput values.
// You can construct a concrete instance of `SlotLogsHttpLogsInput` via:
//
//          SlotLogsHttpLogsArgs{...}
type SlotLogsHttpLogsInput interface {
	pulumi.Input

	ToSlotLogsHttpLogsOutput() SlotLogsHttpLogsOutput
	ToSlotLogsHttpLogsOutputWithContext(context.Context) SlotLogsHttpLogsOutput
}

type SlotLogsHttpLogsArgs struct {
	// An `azureBlobStorage` block as defined below.
	AzureBlobStorage SlotLogsHttpLogsAzureBlobStoragePtrInput `pulumi:"azureBlobStorage"`
	// A `fileSystem` block as defined below.
	FileSystem SlotLogsHttpLogsFileSystemPtrInput `pulumi:"fileSystem"`
}

func (SlotLogsHttpLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotLogsHttpLogs)(nil)).Elem()
}

func (i SlotLogsHttpLogsArgs) ToSlotLogsHttpLogsOutput() SlotLogsHttpLogsOutput {
	return i.ToSlotLogsHttpLogsOutputWithContext(context.Background())
}

func (i SlotLogsHttpLogsArgs) ToSlotLogsHttpLogsOutputWithContext(ctx context.Context) SlotLogsHttpLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotLogsHttpLogsOutput)
}

func (i SlotLogsHttpLogsArgs) ToSlotLogsHttpLogsPtrOutput() SlotLogsHttpLogsPtrOutput {
	return i.ToSlotLogsHttpLogsPtrOutputWithContext(context.Background())
}

func (i SlotLogsHttpLogsArgs) ToSlotLogsHttpLogsPtrOutputWithContext(ctx context.Context) SlotLogsHttpLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotLogsHttpLogsOutput).ToSlotLogsHttpLogsPtrOutputWithContext(ctx)
}

// SlotLogsHttpLogsPtrInput is an input type that accepts SlotLogsHttpLogsArgs, SlotLogsHttpLogsPtr and SlotLogsHttpLogsPtrOutput values.
// You can construct a concrete instance of `SlotLogsHttpLogsPtrInput` via:
//
//          SlotLogsHttpLogsArgs{...}
//
//  or:
//
//          nil
type SlotLogsHttpLogsPtrInput interface {
	pulumi.Input

	ToSlotLogsHttpLogsPtrOutput() SlotLogsHttpLogsPtrOutput
	ToSlotLogsHttpLogsPtrOutputWithContext(context.Context) SlotLogsHttpLogsPtrOutput
}

type slotLogsHttpLogsPtrType SlotLogsHttpLogsArgs

func SlotLogsHttpLogsPtr(v *SlotLogsHttpLogsArgs) SlotLogsHttpLogsPtrInput {
	return (*slotLogsHttpLogsPtrType)(v)
}

func (*slotLogsHttpLogsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotLogsHttpLogs)(nil)).Elem()
}

func (i *slotLogsHttpLogsPtrType) ToSlotLogsHttpLogsPtrOutput() SlotLogsHttpLogsPtrOutput {
	return i.ToSlotLogsHttpLogsPtrOutputWithContext(context.Background())
}

func (i *slotLogsHttpLogsPtrType) ToSlotLogsHttpLogsPtrOutputWithContext(ctx context.Context) SlotLogsHttpLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotLogsHttpLogsPtrOutput)
}

type SlotLogsHttpLogsOutput struct{ *pulumi.OutputState }

func (SlotLogsHttpLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotLogsHttpLogs)(nil)).Elem()
}

func (o SlotLogsHttpLogsOutput) ToSlotLogsHttpLogsOutput() SlotLogsHttpLogsOutput {
	return o
}

func (o SlotLogsHttpLogsOutput) ToSlotLogsHttpLogsOutputWithContext(ctx context.Context) SlotLogsHttpLogsOutput {
	return o
}

func (o SlotLogsHttpLogsOutput) ToSlotLogsHttpLogsPtrOutput() SlotLogsHttpLogsPtrOutput {
	return o.ToSlotLogsHttpLogsPtrOutputWithContext(context.Background())
}

func (o SlotLogsHttpLogsOutput) ToSlotLogsHttpLogsPtrOutputWithContext(ctx context.Context) SlotLogsHttpLogsPtrOutput {
	return o.ApplyT(func(v SlotLogsHttpLogs) *SlotLogsHttpLogs {
		return &v
	}).(SlotLogsHttpLogsPtrOutput)
}

// An `azureBlobStorage` block as defined below.
func (o SlotLogsHttpLogsOutput) AzureBlobStorage() SlotLogsHttpLogsAzureBlobStoragePtrOutput {
	return o.ApplyT(func(v SlotLogsHttpLogs) *SlotLogsHttpLogsAzureBlobStorage { return v.AzureBlobStorage }).(SlotLogsHttpLogsAzureBlobStoragePtrOutput)
}

// A `fileSystem` block as defined below.
func (o SlotLogsHttpLogsOutput) FileSystem() SlotLogsHttpLogsFileSystemPtrOutput {
	return o.ApplyT(func(v SlotLogsHttpLogs) *SlotLogsHttpLogsFileSystem { return v.FileSystem }).(SlotLogsHttpLogsFileSystemPtrOutput)
}

type SlotLogsHttpLogsPtrOutput struct{ *pulumi.OutputState }

func (SlotLogsHttpLogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotLogsHttpLogs)(nil)).Elem()
}

func (o SlotLogsHttpLogsPtrOutput) ToSlotLogsHttpLogsPtrOutput() SlotLogsHttpLogsPtrOutput {
	return o
}

func (o SlotLogsHttpLogsPtrOutput) ToSlotLogsHttpLogsPtrOutputWithContext(ctx context.Context) SlotLogsHttpLogsPtrOutput {
	return o
}

func (o SlotLogsHttpLogsPtrOutput) Elem() SlotLogsHttpLogsOutput {
	return o.ApplyT(func(v *SlotLogsHttpLogs) SlotLogsHttpLogs { return *v }).(SlotLogsHttpLogsOutput)
}

// An `azureBlobStorage` block as defined below.
func (o SlotLogsHttpLogsPtrOutput) AzureBlobStorage() SlotLogsHttpLogsAzureBlobStoragePtrOutput {
	return o.ApplyT(func(v *SlotLogsHttpLogs) *SlotLogsHttpLogsAzureBlobStorage {
		if v == nil {
			return nil
		}
		return v.AzureBlobStorage
	}).(SlotLogsHttpLogsAzureBlobStoragePtrOutput)
}

// A `fileSystem` block as defined below.
func (o SlotLogsHttpLogsPtrOutput) FileSystem() SlotLogsHttpLogsFileSystemPtrOutput {
	return o.ApplyT(func(v *SlotLogsHttpLogs) *SlotLogsHttpLogsFileSystem {
		if v == nil {
			return nil
		}
		return v.FileSystem
	}).(SlotLogsHttpLogsFileSystemPtrOutput)
}

type SlotLogsHttpLogsAzureBlobStorage struct {
	// The number of days to retain logs for.
	RetentionInDays int `pulumi:"retentionInDays"`
	// The URL to the storage container, with a Service SAS token appended. **NOTE:** there is currently no means of generating Service SAS tokens with the `azurerm` provider.
	SasUrl string `pulumi:"sasUrl"`
}

// SlotLogsHttpLogsAzureBlobStorageInput is an input type that accepts SlotLogsHttpLogsAzureBlobStorageArgs and SlotLogsHttpLogsAzureBlobStorageOutput values.
// You can construct a concrete instance of `SlotLogsHttpLogsAzureBlobStorageInput` via:
//
//          SlotLogsHttpLogsAzureBlobStorageArgs{...}
type SlotLogsHttpLogsAzureBlobStorageInput interface {
	pulumi.Input

	ToSlotLogsHttpLogsAzureBlobStorageOutput() SlotLogsHttpLogsAzureBlobStorageOutput
	ToSlotLogsHttpLogsAzureBlobStorageOutputWithContext(context.Context) SlotLogsHttpLogsAzureBlobStorageOutput
}

type SlotLogsHttpLogsAzureBlobStorageArgs struct {
	// The number of days to retain logs for.
	RetentionInDays pulumi.IntInput `pulumi:"retentionInDays"`
	// The URL to the storage container, with a Service SAS token appended. **NOTE:** there is currently no means of generating Service SAS tokens with the `azurerm` provider.
	SasUrl pulumi.StringInput `pulumi:"sasUrl"`
}

func (SlotLogsHttpLogsAzureBlobStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotLogsHttpLogsAzureBlobStorage)(nil)).Elem()
}

func (i SlotLogsHttpLogsAzureBlobStorageArgs) ToSlotLogsHttpLogsAzureBlobStorageOutput() SlotLogsHttpLogsAzureBlobStorageOutput {
	return i.ToSlotLogsHttpLogsAzureBlobStorageOutputWithContext(context.Background())
}

func (i SlotLogsHttpLogsAzureBlobStorageArgs) ToSlotLogsHttpLogsAzureBlobStorageOutputWithContext(ctx context.Context) SlotLogsHttpLogsAzureBlobStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotLogsHttpLogsAzureBlobStorageOutput)
}

func (i SlotLogsHttpLogsAzureBlobStorageArgs) ToSlotLogsHttpLogsAzureBlobStoragePtrOutput() SlotLogsHttpLogsAzureBlobStoragePtrOutput {
	return i.ToSlotLogsHttpLogsAzureBlobStoragePtrOutputWithContext(context.Background())
}

func (i SlotLogsHttpLogsAzureBlobStorageArgs) ToSlotLogsHttpLogsAzureBlobStoragePtrOutputWithContext(ctx context.Context) SlotLogsHttpLogsAzureBlobStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotLogsHttpLogsAzureBlobStorageOutput).ToSlotLogsHttpLogsAzureBlobStoragePtrOutputWithContext(ctx)
}

// SlotLogsHttpLogsAzureBlobStoragePtrInput is an input type that accepts SlotLogsHttpLogsAzureBlobStorageArgs, SlotLogsHttpLogsAzureBlobStoragePtr and SlotLogsHttpLogsAzureBlobStoragePtrOutput values.
// You can construct a concrete instance of `SlotLogsHttpLogsAzureBlobStoragePtrInput` via:
//
//          SlotLogsHttpLogsAzureBlobStorageArgs{...}
//
//  or:
//
//          nil
type SlotLogsHttpLogsAzureBlobStoragePtrInput interface {
	pulumi.Input

	ToSlotLogsHttpLogsAzureBlobStoragePtrOutput() SlotLogsHttpLogsAzureBlobStoragePtrOutput
	ToSlotLogsHttpLogsAzureBlobStoragePtrOutputWithContext(context.Context) SlotLogsHttpLogsAzureBlobStoragePtrOutput
}

type slotLogsHttpLogsAzureBlobStoragePtrType SlotLogsHttpLogsAzureBlobStorageArgs

func SlotLogsHttpLogsAzureBlobStoragePtr(v *SlotLogsHttpLogsAzureBlobStorageArgs) SlotLogsHttpLogsAzureBlobStoragePtrInput {
	return (*slotLogsHttpLogsAzureBlobStoragePtrType)(v)
}

func (*slotLogsHttpLogsAzureBlobStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotLogsHttpLogsAzureBlobStorage)(nil)).Elem()
}

func (i *slotLogsHttpLogsAzureBlobStoragePtrType) ToSlotLogsHttpLogsAzureBlobStoragePtrOutput() SlotLogsHttpLogsAzureBlobStoragePtrOutput {
	return i.ToSlotLogsHttpLogsAzureBlobStoragePtrOutputWithContext(context.Background())
}

func (i *slotLogsHttpLogsAzureBlobStoragePtrType) ToSlotLogsHttpLogsAzureBlobStoragePtrOutputWithContext(ctx context.Context) SlotLogsHttpLogsAzureBlobStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotLogsHttpLogsAzureBlobStoragePtrOutput)
}

type SlotLogsHttpLogsAzureBlobStorageOutput struct{ *pulumi.OutputState }

func (SlotLogsHttpLogsAzureBlobStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotLogsHttpLogsAzureBlobStorage)(nil)).Elem()
}

func (o SlotLogsHttpLogsAzureBlobStorageOutput) ToSlotLogsHttpLogsAzureBlobStorageOutput() SlotLogsHttpLogsAzureBlobStorageOutput {
	return o
}

func (o SlotLogsHttpLogsAzureBlobStorageOutput) ToSlotLogsHttpLogsAzureBlobStorageOutputWithContext(ctx context.Context) SlotLogsHttpLogsAzureBlobStorageOutput {
	return o
}

func (o SlotLogsHttpLogsAzureBlobStorageOutput) ToSlotLogsHttpLogsAzureBlobStoragePtrOutput() SlotLogsHttpLogsAzureBlobStoragePtrOutput {
	return o.ToSlotLogsHttpLogsAzureBlobStoragePtrOutputWithContext(context.Background())
}

func (o SlotLogsHttpLogsAzureBlobStorageOutput) ToSlotLogsHttpLogsAzureBlobStoragePtrOutputWithContext(ctx context.Context) SlotLogsHttpLogsAzureBlobStoragePtrOutput {
	return o.ApplyT(func(v SlotLogsHttpLogsAzureBlobStorage) *SlotLogsHttpLogsAzureBlobStorage {
		return &v
	}).(SlotLogsHttpLogsAzureBlobStoragePtrOutput)
}

// The number of days to retain logs for.
func (o SlotLogsHttpLogsAzureBlobStorageOutput) RetentionInDays() pulumi.IntOutput {
	return o.ApplyT(func(v SlotLogsHttpLogsAzureBlobStorage) int { return v.RetentionInDays }).(pulumi.IntOutput)
}

// The URL to the storage container, with a Service SAS token appended. **NOTE:** there is currently no means of generating Service SAS tokens with the `azurerm` provider.
func (o SlotLogsHttpLogsAzureBlobStorageOutput) SasUrl() pulumi.StringOutput {
	return o.ApplyT(func(v SlotLogsHttpLogsAzureBlobStorage) string { return v.SasUrl }).(pulumi.StringOutput)
}

type SlotLogsHttpLogsAzureBlobStoragePtrOutput struct{ *pulumi.OutputState }

func (SlotLogsHttpLogsAzureBlobStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotLogsHttpLogsAzureBlobStorage)(nil)).Elem()
}

func (o SlotLogsHttpLogsAzureBlobStoragePtrOutput) ToSlotLogsHttpLogsAzureBlobStoragePtrOutput() SlotLogsHttpLogsAzureBlobStoragePtrOutput {
	return o
}

func (o SlotLogsHttpLogsAzureBlobStoragePtrOutput) ToSlotLogsHttpLogsAzureBlobStoragePtrOutputWithContext(ctx context.Context) SlotLogsHttpLogsAzureBlobStoragePtrOutput {
	return o
}

func (o SlotLogsHttpLogsAzureBlobStoragePtrOutput) Elem() SlotLogsHttpLogsAzureBlobStorageOutput {
	return o.ApplyT(func(v *SlotLogsHttpLogsAzureBlobStorage) SlotLogsHttpLogsAzureBlobStorage { return *v }).(SlotLogsHttpLogsAzureBlobStorageOutput)
}

// The number of days to retain logs for.
func (o SlotLogsHttpLogsAzureBlobStoragePtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SlotLogsHttpLogsAzureBlobStorage) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

// The URL to the storage container, with a Service SAS token appended. **NOTE:** there is currently no means of generating Service SAS tokens with the `azurerm` provider.
func (o SlotLogsHttpLogsAzureBlobStoragePtrOutput) SasUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotLogsHttpLogsAzureBlobStorage) *string {
		if v == nil {
			return nil
		}
		return &v.SasUrl
	}).(pulumi.StringPtrOutput)
}

type SlotLogsHttpLogsFileSystem struct {
	// The number of days to retain logs for.
	RetentionInDays int `pulumi:"retentionInDays"`
	// The maximum size in megabytes that http log files can use before being removed.
	RetentionInMb int `pulumi:"retentionInMb"`
}

// SlotLogsHttpLogsFileSystemInput is an input type that accepts SlotLogsHttpLogsFileSystemArgs and SlotLogsHttpLogsFileSystemOutput values.
// You can construct a concrete instance of `SlotLogsHttpLogsFileSystemInput` via:
//
//          SlotLogsHttpLogsFileSystemArgs{...}
type SlotLogsHttpLogsFileSystemInput interface {
	pulumi.Input

	ToSlotLogsHttpLogsFileSystemOutput() SlotLogsHttpLogsFileSystemOutput
	ToSlotLogsHttpLogsFileSystemOutputWithContext(context.Context) SlotLogsHttpLogsFileSystemOutput
}

type SlotLogsHttpLogsFileSystemArgs struct {
	// The number of days to retain logs for.
	RetentionInDays pulumi.IntInput `pulumi:"retentionInDays"`
	// The maximum size in megabytes that http log files can use before being removed.
	RetentionInMb pulumi.IntInput `pulumi:"retentionInMb"`
}

func (SlotLogsHttpLogsFileSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotLogsHttpLogsFileSystem)(nil)).Elem()
}

func (i SlotLogsHttpLogsFileSystemArgs) ToSlotLogsHttpLogsFileSystemOutput() SlotLogsHttpLogsFileSystemOutput {
	return i.ToSlotLogsHttpLogsFileSystemOutputWithContext(context.Background())
}

func (i SlotLogsHttpLogsFileSystemArgs) ToSlotLogsHttpLogsFileSystemOutputWithContext(ctx context.Context) SlotLogsHttpLogsFileSystemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotLogsHttpLogsFileSystemOutput)
}

func (i SlotLogsHttpLogsFileSystemArgs) ToSlotLogsHttpLogsFileSystemPtrOutput() SlotLogsHttpLogsFileSystemPtrOutput {
	return i.ToSlotLogsHttpLogsFileSystemPtrOutputWithContext(context.Background())
}

func (i SlotLogsHttpLogsFileSystemArgs) ToSlotLogsHttpLogsFileSystemPtrOutputWithContext(ctx context.Context) SlotLogsHttpLogsFileSystemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotLogsHttpLogsFileSystemOutput).ToSlotLogsHttpLogsFileSystemPtrOutputWithContext(ctx)
}

// SlotLogsHttpLogsFileSystemPtrInput is an input type that accepts SlotLogsHttpLogsFileSystemArgs, SlotLogsHttpLogsFileSystemPtr and SlotLogsHttpLogsFileSystemPtrOutput values.
// You can construct a concrete instance of `SlotLogsHttpLogsFileSystemPtrInput` via:
//
//          SlotLogsHttpLogsFileSystemArgs{...}
//
//  or:
//
//          nil
type SlotLogsHttpLogsFileSystemPtrInput interface {
	pulumi.Input

	ToSlotLogsHttpLogsFileSystemPtrOutput() SlotLogsHttpLogsFileSystemPtrOutput
	ToSlotLogsHttpLogsFileSystemPtrOutputWithContext(context.Context) SlotLogsHttpLogsFileSystemPtrOutput
}

type slotLogsHttpLogsFileSystemPtrType SlotLogsHttpLogsFileSystemArgs

func SlotLogsHttpLogsFileSystemPtr(v *SlotLogsHttpLogsFileSystemArgs) SlotLogsHttpLogsFileSystemPtrInput {
	return (*slotLogsHttpLogsFileSystemPtrType)(v)
}

func (*slotLogsHttpLogsFileSystemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotLogsHttpLogsFileSystem)(nil)).Elem()
}

func (i *slotLogsHttpLogsFileSystemPtrType) ToSlotLogsHttpLogsFileSystemPtrOutput() SlotLogsHttpLogsFileSystemPtrOutput {
	return i.ToSlotLogsHttpLogsFileSystemPtrOutputWithContext(context.Background())
}

func (i *slotLogsHttpLogsFileSystemPtrType) ToSlotLogsHttpLogsFileSystemPtrOutputWithContext(ctx context.Context) SlotLogsHttpLogsFileSystemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotLogsHttpLogsFileSystemPtrOutput)
}

type SlotLogsHttpLogsFileSystemOutput struct{ *pulumi.OutputState }

func (SlotLogsHttpLogsFileSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotLogsHttpLogsFileSystem)(nil)).Elem()
}

func (o SlotLogsHttpLogsFileSystemOutput) ToSlotLogsHttpLogsFileSystemOutput() SlotLogsHttpLogsFileSystemOutput {
	return o
}

func (o SlotLogsHttpLogsFileSystemOutput) ToSlotLogsHttpLogsFileSystemOutputWithContext(ctx context.Context) SlotLogsHttpLogsFileSystemOutput {
	return o
}

func (o SlotLogsHttpLogsFileSystemOutput) ToSlotLogsHttpLogsFileSystemPtrOutput() SlotLogsHttpLogsFileSystemPtrOutput {
	return o.ToSlotLogsHttpLogsFileSystemPtrOutputWithContext(context.Background())
}

func (o SlotLogsHttpLogsFileSystemOutput) ToSlotLogsHttpLogsFileSystemPtrOutputWithContext(ctx context.Context) SlotLogsHttpLogsFileSystemPtrOutput {
	return o.ApplyT(func(v SlotLogsHttpLogsFileSystem) *SlotLogsHttpLogsFileSystem {
		return &v
	}).(SlotLogsHttpLogsFileSystemPtrOutput)
}

// The number of days to retain logs for.
func (o SlotLogsHttpLogsFileSystemOutput) RetentionInDays() pulumi.IntOutput {
	return o.ApplyT(func(v SlotLogsHttpLogsFileSystem) int { return v.RetentionInDays }).(pulumi.IntOutput)
}

// The maximum size in megabytes that http log files can use before being removed.
func (o SlotLogsHttpLogsFileSystemOutput) RetentionInMb() pulumi.IntOutput {
	return o.ApplyT(func(v SlotLogsHttpLogsFileSystem) int { return v.RetentionInMb }).(pulumi.IntOutput)
}

type SlotLogsHttpLogsFileSystemPtrOutput struct{ *pulumi.OutputState }

func (SlotLogsHttpLogsFileSystemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotLogsHttpLogsFileSystem)(nil)).Elem()
}

func (o SlotLogsHttpLogsFileSystemPtrOutput) ToSlotLogsHttpLogsFileSystemPtrOutput() SlotLogsHttpLogsFileSystemPtrOutput {
	return o
}

func (o SlotLogsHttpLogsFileSystemPtrOutput) ToSlotLogsHttpLogsFileSystemPtrOutputWithContext(ctx context.Context) SlotLogsHttpLogsFileSystemPtrOutput {
	return o
}

func (o SlotLogsHttpLogsFileSystemPtrOutput) Elem() SlotLogsHttpLogsFileSystemOutput {
	return o.ApplyT(func(v *SlotLogsHttpLogsFileSystem) SlotLogsHttpLogsFileSystem { return *v }).(SlotLogsHttpLogsFileSystemOutput)
}

// The number of days to retain logs for.
func (o SlotLogsHttpLogsFileSystemPtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SlotLogsHttpLogsFileSystem) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

// The maximum size in megabytes that http log files can use before being removed.
func (o SlotLogsHttpLogsFileSystemPtrOutput) RetentionInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SlotLogsHttpLogsFileSystem) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionInMb
	}).(pulumi.IntPtrOutput)
}

type SlotSiteConfig struct {
	// Should the app be loaded at all times? Defaults to `false`.
	AlwaysOn *bool `pulumi:"alwaysOn"`
	// App command line to launch, e.g. `/sbin/myserver -b 0.0.0.0`.
	AppCommandLine *string `pulumi:"appCommandLine"`
	// The name of the slot to automatically swap to during deployment
	AutoSwapSlotName *string `pulumi:"autoSwapSlotName"`
	// A `cors` block as defined below.
	Cors *SlotSiteConfigCors `pulumi:"cors"`
	// The ordering of default documents to load, if an address isn't specified.
	DefaultDocuments []string `pulumi:"defaultDocuments"`
	// The version of the .net framework's CLR used in this App Service Slot. Possible values are `v2.0` (which will use the latest version of the .net framework for the .net CLR v2 - currently `.net 3.5`) and `v4.0` (which corresponds to the latest version of the .net CLR v4 - which at the time of writing is `.net 4.7.1`). [For more information on which .net CLR version to use based on the .net framework you're targeting - please see this table](https://en.wikipedia.org/wiki/.NET_Framework_version_history#Overview). Defaults to `v4.0`.
	DotnetFrameworkVersion *string `pulumi:"dotnetFrameworkVersion"`
	FtpsState              *string `pulumi:"ftpsState"`
	HealthCheckPath        *string `pulumi:"healthCheckPath"`
	// Is HTTP2 Enabled on this App Service? Defaults to `false`.
	Http2Enabled *bool `pulumi:"http2Enabled"`
	// A list of objects representing ip restrictions as defined below.
	IpRestrictions []SlotSiteConfigIpRestriction `pulumi:"ipRestrictions"`
	// The Java Container to use. If specified `javaVersion` and `javaContainerVersion` must also be specified. Possible values are `JETTY` and `TOMCAT`.
	JavaContainer *string `pulumi:"javaContainer"`
	// The version of the Java Container to use. If specified `javaVersion` and `javaContainer` must also be specified.
	JavaContainerVersion *string `pulumi:"javaContainerVersion"`
	// The version of Java to use. If specified `javaContainer` and `javaContainerVersion` must also be specified. Possible values are `1.7`, `1.8`, and `11` and their specific versions - except for Java 11 (e.g. `1.7.0_80`, `1.8.0_181`, `11`)
	JavaVersion    *string `pulumi:"javaVersion"`
	LinuxFxVersion *string `pulumi:"linuxFxVersion"`
	// Is "MySQL In App" Enabled? This runs a local MySQL instance with your app and shares resources from the App Service plan.
	LocalMysqlEnabled *bool `pulumi:"localMysqlEnabled"`
	// The Managed Pipeline Mode. Possible values are `Integrated` and `Classic`. Defaults to `Integrated`.
	ManagedPipelineMode *string `pulumi:"managedPipelineMode"`
	// The minimum supported TLS version for the app service. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new app services.
	MinTlsVersion   *string `pulumi:"minTlsVersion"`
	NumberOfWorkers *int    `pulumi:"numberOfWorkers"`
	// The version of PHP to use in this App Service Slot. Possible values are `5.5`, `5.6`, `7.0`, `7.1`, `7.2`, and `7.3`.
	PhpVersion *string `pulumi:"phpVersion"`
	// The version of Python to use in this App Service Slot. Possible values are `2.7` and `3.4`.
	PythonVersion *string `pulumi:"pythonVersion"`
	// Is Remote Debugging Enabled? Defaults to `false`.
	RemoteDebuggingEnabled *bool `pulumi:"remoteDebuggingEnabled"`
	// Which version of Visual Studio should the Remote Debugger be compatible with? Possible values are `VS2012`, `VS2013`, `VS2015`, and `VS2017`.
	RemoteDebuggingVersion *string                          `pulumi:"remoteDebuggingVersion"`
	ScmIpRestrictions      []SlotSiteConfigScmIpRestriction `pulumi:"scmIpRestrictions"`
	// The type of Source Control enabled for this App Service Slot. Defaults to `None`. Possible values are: `BitbucketGit`, `BitbucketHg`, `CodePlexGit`, `CodePlexHg`, `Dropbox`, `ExternalGit`, `ExternalHg`, `GitHub`, `LocalGit`, `None`, `OneDrive`, `Tfs`, `VSO`, and `VSTSRM`
	ScmType                 *string `pulumi:"scmType"`
	ScmUseMainIpRestriction *bool   `pulumi:"scmUseMainIpRestriction"`
	// Should the App Service Slot run in 32 bit mode, rather than 64 bit mode?
	Use32BitWorkerProcess *bool `pulumi:"use32BitWorkerProcess"`
	// Should WebSockets be enabled?
	WebsocketsEnabled *bool   `pulumi:"websocketsEnabled"`
	WindowsFxVersion  *string `pulumi:"windowsFxVersion"`
}

// SlotSiteConfigInput is an input type that accepts SlotSiteConfigArgs and SlotSiteConfigOutput values.
// You can construct a concrete instance of `SlotSiteConfigInput` via:
//
//          SlotSiteConfigArgs{...}
type SlotSiteConfigInput interface {
	pulumi.Input

	ToSlotSiteConfigOutput() SlotSiteConfigOutput
	ToSlotSiteConfigOutputWithContext(context.Context) SlotSiteConfigOutput
}

type SlotSiteConfigArgs struct {
	// Should the app be loaded at all times? Defaults to `false`.
	AlwaysOn pulumi.BoolPtrInput `pulumi:"alwaysOn"`
	// App command line to launch, e.g. `/sbin/myserver -b 0.0.0.0`.
	AppCommandLine pulumi.StringPtrInput `pulumi:"appCommandLine"`
	// The name of the slot to automatically swap to during deployment
	AutoSwapSlotName pulumi.StringPtrInput `pulumi:"autoSwapSlotName"`
	// A `cors` block as defined below.
	Cors SlotSiteConfigCorsPtrInput `pulumi:"cors"`
	// The ordering of default documents to load, if an address isn't specified.
	DefaultDocuments pulumi.StringArrayInput `pulumi:"defaultDocuments"`
	// The version of the .net framework's CLR used in this App Service Slot. Possible values are `v2.0` (which will use the latest version of the .net framework for the .net CLR v2 - currently `.net 3.5`) and `v4.0` (which corresponds to the latest version of the .net CLR v4 - which at the time of writing is `.net 4.7.1`). [For more information on which .net CLR version to use based on the .net framework you're targeting - please see this table](https://en.wikipedia.org/wiki/.NET_Framework_version_history#Overview). Defaults to `v4.0`.
	DotnetFrameworkVersion pulumi.StringPtrInput `pulumi:"dotnetFrameworkVersion"`
	FtpsState              pulumi.StringPtrInput `pulumi:"ftpsState"`
	HealthCheckPath        pulumi.StringPtrInput `pulumi:"healthCheckPath"`
	// Is HTTP2 Enabled on this App Service? Defaults to `false`.
	Http2Enabled pulumi.BoolPtrInput `pulumi:"http2Enabled"`
	// A list of objects representing ip restrictions as defined below.
	IpRestrictions SlotSiteConfigIpRestrictionArrayInput `pulumi:"ipRestrictions"`
	// The Java Container to use. If specified `javaVersion` and `javaContainerVersion` must also be specified. Possible values are `JETTY` and `TOMCAT`.
	JavaContainer pulumi.StringPtrInput `pulumi:"javaContainer"`
	// The version of the Java Container to use. If specified `javaVersion` and `javaContainer` must also be specified.
	JavaContainerVersion pulumi.StringPtrInput `pulumi:"javaContainerVersion"`
	// The version of Java to use. If specified `javaContainer` and `javaContainerVersion` must also be specified. Possible values are `1.7`, `1.8`, and `11` and their specific versions - except for Java 11 (e.g. `1.7.0_80`, `1.8.0_181`, `11`)
	JavaVersion    pulumi.StringPtrInput `pulumi:"javaVersion"`
	LinuxFxVersion pulumi.StringPtrInput `pulumi:"linuxFxVersion"`
	// Is "MySQL In App" Enabled? This runs a local MySQL instance with your app and shares resources from the App Service plan.
	LocalMysqlEnabled pulumi.BoolPtrInput `pulumi:"localMysqlEnabled"`
	// The Managed Pipeline Mode. Possible values are `Integrated` and `Classic`. Defaults to `Integrated`.
	ManagedPipelineMode pulumi.StringPtrInput `pulumi:"managedPipelineMode"`
	// The minimum supported TLS version for the app service. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new app services.
	MinTlsVersion   pulumi.StringPtrInput `pulumi:"minTlsVersion"`
	NumberOfWorkers pulumi.IntPtrInput    `pulumi:"numberOfWorkers"`
	// The version of PHP to use in this App Service Slot. Possible values are `5.5`, `5.6`, `7.0`, `7.1`, `7.2`, and `7.3`.
	PhpVersion pulumi.StringPtrInput `pulumi:"phpVersion"`
	// The version of Python to use in this App Service Slot. Possible values are `2.7` and `3.4`.
	PythonVersion pulumi.StringPtrInput `pulumi:"pythonVersion"`
	// Is Remote Debugging Enabled? Defaults to `false`.
	RemoteDebuggingEnabled pulumi.BoolPtrInput `pulumi:"remoteDebuggingEnabled"`
	// Which version of Visual Studio should the Remote Debugger be compatible with? Possible values are `VS2012`, `VS2013`, `VS2015`, and `VS2017`.
	RemoteDebuggingVersion pulumi.StringPtrInput                    `pulumi:"remoteDebuggingVersion"`
	ScmIpRestrictions      SlotSiteConfigScmIpRestrictionArrayInput `pulumi:"scmIpRestrictions"`
	// The type of Source Control enabled for this App Service Slot. Defaults to `None`. Possible values are: `BitbucketGit`, `BitbucketHg`, `CodePlexGit`, `CodePlexHg`, `Dropbox`, `ExternalGit`, `ExternalHg`, `GitHub`, `LocalGit`, `None`, `OneDrive`, `Tfs`, `VSO`, and `VSTSRM`
	ScmType                 pulumi.StringPtrInput `pulumi:"scmType"`
	ScmUseMainIpRestriction pulumi.BoolPtrInput   `pulumi:"scmUseMainIpRestriction"`
	// Should the App Service Slot run in 32 bit mode, rather than 64 bit mode?
	Use32BitWorkerProcess pulumi.BoolPtrInput `pulumi:"use32BitWorkerProcess"`
	// Should WebSockets be enabled?
	WebsocketsEnabled pulumi.BoolPtrInput   `pulumi:"websocketsEnabled"`
	WindowsFxVersion  pulumi.StringPtrInput `pulumi:"windowsFxVersion"`
}

func (SlotSiteConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotSiteConfig)(nil)).Elem()
}

func (i SlotSiteConfigArgs) ToSlotSiteConfigOutput() SlotSiteConfigOutput {
	return i.ToSlotSiteConfigOutputWithContext(context.Background())
}

func (i SlotSiteConfigArgs) ToSlotSiteConfigOutputWithContext(ctx context.Context) SlotSiteConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotSiteConfigOutput)
}

func (i SlotSiteConfigArgs) ToSlotSiteConfigPtrOutput() SlotSiteConfigPtrOutput {
	return i.ToSlotSiteConfigPtrOutputWithContext(context.Background())
}

func (i SlotSiteConfigArgs) ToSlotSiteConfigPtrOutputWithContext(ctx context.Context) SlotSiteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotSiteConfigOutput).ToSlotSiteConfigPtrOutputWithContext(ctx)
}

// SlotSiteConfigPtrInput is an input type that accepts SlotSiteConfigArgs, SlotSiteConfigPtr and SlotSiteConfigPtrOutput values.
// You can construct a concrete instance of `SlotSiteConfigPtrInput` via:
//
//          SlotSiteConfigArgs{...}
//
//  or:
//
//          nil
type SlotSiteConfigPtrInput interface {
	pulumi.Input

	ToSlotSiteConfigPtrOutput() SlotSiteConfigPtrOutput
	ToSlotSiteConfigPtrOutputWithContext(context.Context) SlotSiteConfigPtrOutput
}

type slotSiteConfigPtrType SlotSiteConfigArgs

func SlotSiteConfigPtr(v *SlotSiteConfigArgs) SlotSiteConfigPtrInput {
	return (*slotSiteConfigPtrType)(v)
}

func (*slotSiteConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotSiteConfig)(nil)).Elem()
}

func (i *slotSiteConfigPtrType) ToSlotSiteConfigPtrOutput() SlotSiteConfigPtrOutput {
	return i.ToSlotSiteConfigPtrOutputWithContext(context.Background())
}

func (i *slotSiteConfigPtrType) ToSlotSiteConfigPtrOutputWithContext(ctx context.Context) SlotSiteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotSiteConfigPtrOutput)
}

type SlotSiteConfigOutput struct{ *pulumi.OutputState }

func (SlotSiteConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotSiteConfig)(nil)).Elem()
}

func (o SlotSiteConfigOutput) ToSlotSiteConfigOutput() SlotSiteConfigOutput {
	return o
}

func (o SlotSiteConfigOutput) ToSlotSiteConfigOutputWithContext(ctx context.Context) SlotSiteConfigOutput {
	return o
}

func (o SlotSiteConfigOutput) ToSlotSiteConfigPtrOutput() SlotSiteConfigPtrOutput {
	return o.ToSlotSiteConfigPtrOutputWithContext(context.Background())
}

func (o SlotSiteConfigOutput) ToSlotSiteConfigPtrOutputWithContext(ctx context.Context) SlotSiteConfigPtrOutput {
	return o.ApplyT(func(v SlotSiteConfig) *SlotSiteConfig {
		return &v
	}).(SlotSiteConfigPtrOutput)
}

// Should the app be loaded at all times? Defaults to `false`.
func (o SlotSiteConfigOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SlotSiteConfig) *bool { return v.AlwaysOn }).(pulumi.BoolPtrOutput)
}

// App command line to launch, e.g. `/sbin/myserver -b 0.0.0.0`.
func (o SlotSiteConfigOutput) AppCommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteConfig) *string { return v.AppCommandLine }).(pulumi.StringPtrOutput)
}

// The name of the slot to automatically swap to during deployment
func (o SlotSiteConfigOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteConfig) *string { return v.AutoSwapSlotName }).(pulumi.StringPtrOutput)
}

// A `cors` block as defined below.
func (o SlotSiteConfigOutput) Cors() SlotSiteConfigCorsPtrOutput {
	return o.ApplyT(func(v SlotSiteConfig) *SlotSiteConfigCors { return v.Cors }).(SlotSiteConfigCorsPtrOutput)
}

// The ordering of default documents to load, if an address isn't specified.
func (o SlotSiteConfigOutput) DefaultDocuments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SlotSiteConfig) []string { return v.DefaultDocuments }).(pulumi.StringArrayOutput)
}

// The version of the .net framework's CLR used in this App Service Slot. Possible values are `v2.0` (which will use the latest version of the .net framework for the .net CLR v2 - currently `.net 3.5`) and `v4.0` (which corresponds to the latest version of the .net CLR v4 - which at the time of writing is `.net 4.7.1`). [For more information on which .net CLR version to use based on the .net framework you're targeting - please see this table](https://en.wikipedia.org/wiki/.NET_Framework_version_history#Overview). Defaults to `v4.0`.
func (o SlotSiteConfigOutput) DotnetFrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteConfig) *string { return v.DotnetFrameworkVersion }).(pulumi.StringPtrOutput)
}

func (o SlotSiteConfigOutput) FtpsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteConfig) *string { return v.FtpsState }).(pulumi.StringPtrOutput)
}

func (o SlotSiteConfigOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteConfig) *string { return v.HealthCheckPath }).(pulumi.StringPtrOutput)
}

// Is HTTP2 Enabled on this App Service? Defaults to `false`.
func (o SlotSiteConfigOutput) Http2Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SlotSiteConfig) *bool { return v.Http2Enabled }).(pulumi.BoolPtrOutput)
}

// A list of objects representing ip restrictions as defined below.
func (o SlotSiteConfigOutput) IpRestrictions() SlotSiteConfigIpRestrictionArrayOutput {
	return o.ApplyT(func(v SlotSiteConfig) []SlotSiteConfigIpRestriction { return v.IpRestrictions }).(SlotSiteConfigIpRestrictionArrayOutput)
}

// The Java Container to use. If specified `javaVersion` and `javaContainerVersion` must also be specified. Possible values are `JETTY` and `TOMCAT`.
func (o SlotSiteConfigOutput) JavaContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteConfig) *string { return v.JavaContainer }).(pulumi.StringPtrOutput)
}

// The version of the Java Container to use. If specified `javaVersion` and `javaContainer` must also be specified.
func (o SlotSiteConfigOutput) JavaContainerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteConfig) *string { return v.JavaContainerVersion }).(pulumi.StringPtrOutput)
}

// The version of Java to use. If specified `javaContainer` and `javaContainerVersion` must also be specified. Possible values are `1.7`, `1.8`, and `11` and their specific versions - except for Java 11 (e.g. `1.7.0_80`, `1.8.0_181`, `11`)
func (o SlotSiteConfigOutput) JavaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteConfig) *string { return v.JavaVersion }).(pulumi.StringPtrOutput)
}

func (o SlotSiteConfigOutput) LinuxFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteConfig) *string { return v.LinuxFxVersion }).(pulumi.StringPtrOutput)
}

// Is "MySQL In App" Enabled? This runs a local MySQL instance with your app and shares resources from the App Service plan.
func (o SlotSiteConfigOutput) LocalMysqlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SlotSiteConfig) *bool { return v.LocalMysqlEnabled }).(pulumi.BoolPtrOutput)
}

// The Managed Pipeline Mode. Possible values are `Integrated` and `Classic`. Defaults to `Integrated`.
func (o SlotSiteConfigOutput) ManagedPipelineMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteConfig) *string { return v.ManagedPipelineMode }).(pulumi.StringPtrOutput)
}

// The minimum supported TLS version for the app service. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new app services.
func (o SlotSiteConfigOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteConfig) *string { return v.MinTlsVersion }).(pulumi.StringPtrOutput)
}

func (o SlotSiteConfigOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SlotSiteConfig) *int { return v.NumberOfWorkers }).(pulumi.IntPtrOutput)
}

// The version of PHP to use in this App Service Slot. Possible values are `5.5`, `5.6`, `7.0`, `7.1`, `7.2`, and `7.3`.
func (o SlotSiteConfigOutput) PhpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteConfig) *string { return v.PhpVersion }).(pulumi.StringPtrOutput)
}

// The version of Python to use in this App Service Slot. Possible values are `2.7` and `3.4`.
func (o SlotSiteConfigOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteConfig) *string { return v.PythonVersion }).(pulumi.StringPtrOutput)
}

// Is Remote Debugging Enabled? Defaults to `false`.
func (o SlotSiteConfigOutput) RemoteDebuggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SlotSiteConfig) *bool { return v.RemoteDebuggingEnabled }).(pulumi.BoolPtrOutput)
}

// Which version of Visual Studio should the Remote Debugger be compatible with? Possible values are `VS2012`, `VS2013`, `VS2015`, and `VS2017`.
func (o SlotSiteConfigOutput) RemoteDebuggingVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteConfig) *string { return v.RemoteDebuggingVersion }).(pulumi.StringPtrOutput)
}

func (o SlotSiteConfigOutput) ScmIpRestrictions() SlotSiteConfigScmIpRestrictionArrayOutput {
	return o.ApplyT(func(v SlotSiteConfig) []SlotSiteConfigScmIpRestriction { return v.ScmIpRestrictions }).(SlotSiteConfigScmIpRestrictionArrayOutput)
}

// The type of Source Control enabled for this App Service Slot. Defaults to `None`. Possible values are: `BitbucketGit`, `BitbucketHg`, `CodePlexGit`, `CodePlexHg`, `Dropbox`, `ExternalGit`, `ExternalHg`, `GitHub`, `LocalGit`, `None`, `OneDrive`, `Tfs`, `VSO`, and `VSTSRM`
func (o SlotSiteConfigOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteConfig) *string { return v.ScmType }).(pulumi.StringPtrOutput)
}

func (o SlotSiteConfigOutput) ScmUseMainIpRestriction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SlotSiteConfig) *bool { return v.ScmUseMainIpRestriction }).(pulumi.BoolPtrOutput)
}

// Should the App Service Slot run in 32 bit mode, rather than 64 bit mode?
func (o SlotSiteConfigOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SlotSiteConfig) *bool { return v.Use32BitWorkerProcess }).(pulumi.BoolPtrOutput)
}

// Should WebSockets be enabled?
func (o SlotSiteConfigOutput) WebsocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SlotSiteConfig) *bool { return v.WebsocketsEnabled }).(pulumi.BoolPtrOutput)
}

func (o SlotSiteConfigOutput) WindowsFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteConfig) *string { return v.WindowsFxVersion }).(pulumi.StringPtrOutput)
}

type SlotSiteConfigPtrOutput struct{ *pulumi.OutputState }

func (SlotSiteConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotSiteConfig)(nil)).Elem()
}

func (o SlotSiteConfigPtrOutput) ToSlotSiteConfigPtrOutput() SlotSiteConfigPtrOutput {
	return o
}

func (o SlotSiteConfigPtrOutput) ToSlotSiteConfigPtrOutputWithContext(ctx context.Context) SlotSiteConfigPtrOutput {
	return o
}

func (o SlotSiteConfigPtrOutput) Elem() SlotSiteConfigOutput {
	return o.ApplyT(func(v *SlotSiteConfig) SlotSiteConfig { return *v }).(SlotSiteConfigOutput)
}

// Should the app be loaded at all times? Defaults to `false`.
func (o SlotSiteConfigPtrOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SlotSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AlwaysOn
	}).(pulumi.BoolPtrOutput)
}

// App command line to launch, e.g. `/sbin/myserver -b 0.0.0.0`.
func (o SlotSiteConfigPtrOutput) AppCommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.AppCommandLine
	}).(pulumi.StringPtrOutput)
}

// The name of the slot to automatically swap to during deployment
func (o SlotSiteConfigPtrOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.AutoSwapSlotName
	}).(pulumi.StringPtrOutput)
}

// A `cors` block as defined below.
func (o SlotSiteConfigPtrOutput) Cors() SlotSiteConfigCorsPtrOutput {
	return o.ApplyT(func(v *SlotSiteConfig) *SlotSiteConfigCors {
		if v == nil {
			return nil
		}
		return v.Cors
	}).(SlotSiteConfigCorsPtrOutput)
}

// The ordering of default documents to load, if an address isn't specified.
func (o SlotSiteConfigPtrOutput) DefaultDocuments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SlotSiteConfig) []string {
		if v == nil {
			return nil
		}
		return v.DefaultDocuments
	}).(pulumi.StringArrayOutput)
}

// The version of the .net framework's CLR used in this App Service Slot. Possible values are `v2.0` (which will use the latest version of the .net framework for the .net CLR v2 - currently `.net 3.5`) and `v4.0` (which corresponds to the latest version of the .net CLR v4 - which at the time of writing is `.net 4.7.1`). [For more information on which .net CLR version to use based on the .net framework you're targeting - please see this table](https://en.wikipedia.org/wiki/.NET_Framework_version_history#Overview). Defaults to `v4.0`.
func (o SlotSiteConfigPtrOutput) DotnetFrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.DotnetFrameworkVersion
	}).(pulumi.StringPtrOutput)
}

func (o SlotSiteConfigPtrOutput) FtpsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.FtpsState
	}).(pulumi.StringPtrOutput)
}

func (o SlotSiteConfigPtrOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.HealthCheckPath
	}).(pulumi.StringPtrOutput)
}

// Is HTTP2 Enabled on this App Service? Defaults to `false`.
func (o SlotSiteConfigPtrOutput) Http2Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SlotSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Http2Enabled
	}).(pulumi.BoolPtrOutput)
}

// A list of objects representing ip restrictions as defined below.
func (o SlotSiteConfigPtrOutput) IpRestrictions() SlotSiteConfigIpRestrictionArrayOutput {
	return o.ApplyT(func(v *SlotSiteConfig) []SlotSiteConfigIpRestriction {
		if v == nil {
			return nil
		}
		return v.IpRestrictions
	}).(SlotSiteConfigIpRestrictionArrayOutput)
}

// The Java Container to use. If specified `javaVersion` and `javaContainerVersion` must also be specified. Possible values are `JETTY` and `TOMCAT`.
func (o SlotSiteConfigPtrOutput) JavaContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.JavaContainer
	}).(pulumi.StringPtrOutput)
}

// The version of the Java Container to use. If specified `javaVersion` and `javaContainer` must also be specified.
func (o SlotSiteConfigPtrOutput) JavaContainerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.JavaContainerVersion
	}).(pulumi.StringPtrOutput)
}

// The version of Java to use. If specified `javaContainer` and `javaContainerVersion` must also be specified. Possible values are `1.7`, `1.8`, and `11` and their specific versions - except for Java 11 (e.g. `1.7.0_80`, `1.8.0_181`, `11`)
func (o SlotSiteConfigPtrOutput) JavaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.JavaVersion
	}).(pulumi.StringPtrOutput)
}

func (o SlotSiteConfigPtrOutput) LinuxFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.LinuxFxVersion
	}).(pulumi.StringPtrOutput)
}

// Is "MySQL In App" Enabled? This runs a local MySQL instance with your app and shares resources from the App Service plan.
func (o SlotSiteConfigPtrOutput) LocalMysqlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SlotSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.LocalMysqlEnabled
	}).(pulumi.BoolPtrOutput)
}

// The Managed Pipeline Mode. Possible values are `Integrated` and `Classic`. Defaults to `Integrated`.
func (o SlotSiteConfigPtrOutput) ManagedPipelineMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.ManagedPipelineMode
	}).(pulumi.StringPtrOutput)
}

// The minimum supported TLS version for the app service. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new app services.
func (o SlotSiteConfigPtrOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.MinTlsVersion
	}).(pulumi.StringPtrOutput)
}

func (o SlotSiteConfigPtrOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SlotSiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfWorkers
	}).(pulumi.IntPtrOutput)
}

// The version of PHP to use in this App Service Slot. Possible values are `5.5`, `5.6`, `7.0`, `7.1`, `7.2`, and `7.3`.
func (o SlotSiteConfigPtrOutput) PhpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.PhpVersion
	}).(pulumi.StringPtrOutput)
}

// The version of Python to use in this App Service Slot. Possible values are `2.7` and `3.4`.
func (o SlotSiteConfigPtrOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.PythonVersion
	}).(pulumi.StringPtrOutput)
}

// Is Remote Debugging Enabled? Defaults to `false`.
func (o SlotSiteConfigPtrOutput) RemoteDebuggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SlotSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.RemoteDebuggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Which version of Visual Studio should the Remote Debugger be compatible with? Possible values are `VS2012`, `VS2013`, `VS2015`, and `VS2017`.
func (o SlotSiteConfigPtrOutput) RemoteDebuggingVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.RemoteDebuggingVersion
	}).(pulumi.StringPtrOutput)
}

func (o SlotSiteConfigPtrOutput) ScmIpRestrictions() SlotSiteConfigScmIpRestrictionArrayOutput {
	return o.ApplyT(func(v *SlotSiteConfig) []SlotSiteConfigScmIpRestriction {
		if v == nil {
			return nil
		}
		return v.ScmIpRestrictions
	}).(SlotSiteConfigScmIpRestrictionArrayOutput)
}

// The type of Source Control enabled for this App Service Slot. Defaults to `None`. Possible values are: `BitbucketGit`, `BitbucketHg`, `CodePlexGit`, `CodePlexHg`, `Dropbox`, `ExternalGit`, `ExternalHg`, `GitHub`, `LocalGit`, `None`, `OneDrive`, `Tfs`, `VSO`, and `VSTSRM`
func (o SlotSiteConfigPtrOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.ScmType
	}).(pulumi.StringPtrOutput)
}

func (o SlotSiteConfigPtrOutput) ScmUseMainIpRestriction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SlotSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.ScmUseMainIpRestriction
	}).(pulumi.BoolPtrOutput)
}

// Should the App Service Slot run in 32 bit mode, rather than 64 bit mode?
func (o SlotSiteConfigPtrOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SlotSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Use32BitWorkerProcess
	}).(pulumi.BoolPtrOutput)
}

// Should WebSockets be enabled?
func (o SlotSiteConfigPtrOutput) WebsocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SlotSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.WebsocketsEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o SlotSiteConfigPtrOutput) WindowsFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlotSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.WindowsFxVersion
	}).(pulumi.StringPtrOutput)
}

type SlotSiteConfigCors struct {
	// A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// Are credentials supported?
	SupportCredentials *bool `pulumi:"supportCredentials"`
}

// SlotSiteConfigCorsInput is an input type that accepts SlotSiteConfigCorsArgs and SlotSiteConfigCorsOutput values.
// You can construct a concrete instance of `SlotSiteConfigCorsInput` via:
//
//          SlotSiteConfigCorsArgs{...}
type SlotSiteConfigCorsInput interface {
	pulumi.Input

	ToSlotSiteConfigCorsOutput() SlotSiteConfigCorsOutput
	ToSlotSiteConfigCorsOutputWithContext(context.Context) SlotSiteConfigCorsOutput
}

type SlotSiteConfigCorsArgs struct {
	// A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// Are credentials supported?
	SupportCredentials pulumi.BoolPtrInput `pulumi:"supportCredentials"`
}

func (SlotSiteConfigCorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotSiteConfigCors)(nil)).Elem()
}

func (i SlotSiteConfigCorsArgs) ToSlotSiteConfigCorsOutput() SlotSiteConfigCorsOutput {
	return i.ToSlotSiteConfigCorsOutputWithContext(context.Background())
}

func (i SlotSiteConfigCorsArgs) ToSlotSiteConfigCorsOutputWithContext(ctx context.Context) SlotSiteConfigCorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotSiteConfigCorsOutput)
}

func (i SlotSiteConfigCorsArgs) ToSlotSiteConfigCorsPtrOutput() SlotSiteConfigCorsPtrOutput {
	return i.ToSlotSiteConfigCorsPtrOutputWithContext(context.Background())
}

func (i SlotSiteConfigCorsArgs) ToSlotSiteConfigCorsPtrOutputWithContext(ctx context.Context) SlotSiteConfigCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotSiteConfigCorsOutput).ToSlotSiteConfigCorsPtrOutputWithContext(ctx)
}

// SlotSiteConfigCorsPtrInput is an input type that accepts SlotSiteConfigCorsArgs, SlotSiteConfigCorsPtr and SlotSiteConfigCorsPtrOutput values.
// You can construct a concrete instance of `SlotSiteConfigCorsPtrInput` via:
//
//          SlotSiteConfigCorsArgs{...}
//
//  or:
//
//          nil
type SlotSiteConfigCorsPtrInput interface {
	pulumi.Input

	ToSlotSiteConfigCorsPtrOutput() SlotSiteConfigCorsPtrOutput
	ToSlotSiteConfigCorsPtrOutputWithContext(context.Context) SlotSiteConfigCorsPtrOutput
}

type slotSiteConfigCorsPtrType SlotSiteConfigCorsArgs

func SlotSiteConfigCorsPtr(v *SlotSiteConfigCorsArgs) SlotSiteConfigCorsPtrInput {
	return (*slotSiteConfigCorsPtrType)(v)
}

func (*slotSiteConfigCorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotSiteConfigCors)(nil)).Elem()
}

func (i *slotSiteConfigCorsPtrType) ToSlotSiteConfigCorsPtrOutput() SlotSiteConfigCorsPtrOutput {
	return i.ToSlotSiteConfigCorsPtrOutputWithContext(context.Background())
}

func (i *slotSiteConfigCorsPtrType) ToSlotSiteConfigCorsPtrOutputWithContext(ctx context.Context) SlotSiteConfigCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotSiteConfigCorsPtrOutput)
}

type SlotSiteConfigCorsOutput struct{ *pulumi.OutputState }

func (SlotSiteConfigCorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotSiteConfigCors)(nil)).Elem()
}

func (o SlotSiteConfigCorsOutput) ToSlotSiteConfigCorsOutput() SlotSiteConfigCorsOutput {
	return o
}

func (o SlotSiteConfigCorsOutput) ToSlotSiteConfigCorsOutputWithContext(ctx context.Context) SlotSiteConfigCorsOutput {
	return o
}

func (o SlotSiteConfigCorsOutput) ToSlotSiteConfigCorsPtrOutput() SlotSiteConfigCorsPtrOutput {
	return o.ToSlotSiteConfigCorsPtrOutputWithContext(context.Background())
}

func (o SlotSiteConfigCorsOutput) ToSlotSiteConfigCorsPtrOutputWithContext(ctx context.Context) SlotSiteConfigCorsPtrOutput {
	return o.ApplyT(func(v SlotSiteConfigCors) *SlotSiteConfigCors {
		return &v
	}).(SlotSiteConfigCorsPtrOutput)
}

// A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
func (o SlotSiteConfigCorsOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SlotSiteConfigCors) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// Are credentials supported?
func (o SlotSiteConfigCorsOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SlotSiteConfigCors) *bool { return v.SupportCredentials }).(pulumi.BoolPtrOutput)
}

type SlotSiteConfigCorsPtrOutput struct{ *pulumi.OutputState }

func (SlotSiteConfigCorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlotSiteConfigCors)(nil)).Elem()
}

func (o SlotSiteConfigCorsPtrOutput) ToSlotSiteConfigCorsPtrOutput() SlotSiteConfigCorsPtrOutput {
	return o
}

func (o SlotSiteConfigCorsPtrOutput) ToSlotSiteConfigCorsPtrOutputWithContext(ctx context.Context) SlotSiteConfigCorsPtrOutput {
	return o
}

func (o SlotSiteConfigCorsPtrOutput) Elem() SlotSiteConfigCorsOutput {
	return o.ApplyT(func(v *SlotSiteConfigCors) SlotSiteConfigCors { return *v }).(SlotSiteConfigCorsOutput)
}

// A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
func (o SlotSiteConfigCorsPtrOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SlotSiteConfigCors) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrigins
	}).(pulumi.StringArrayOutput)
}

// Are credentials supported?
func (o SlotSiteConfigCorsPtrOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SlotSiteConfigCors) *bool {
		if v == nil {
			return nil
		}
		return v.SupportCredentials
	}).(pulumi.BoolPtrOutput)
}

type SlotSiteConfigIpRestriction struct {
	// Does this restriction `Allow` or `Deny` access for this IP range. Defaults to `Allow`.
	Action *string `pulumi:"action"`
	// The IP Address used for this IP Restriction in CIDR notation.
	IpAddress *string `pulumi:"ipAddress"`
	// The name for this IP Restriction.
	Name *string `pulumi:"name"`
	// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, priority is set to 65000 if not specified.
	Priority *int `pulumi:"priority"`
	// The Service Tag used for this IP Restriction.
	ServiceTag *string `pulumi:"serviceTag"`
	// Deprecated: This field has been deprecated in favour of `virtual_network_subnet_id` and will be removed in a future version of the provider
	SubnetId *string `pulumi:"subnetId"`
	// The Virtual Network Subnet ID used for this IP Restriction.
	VirtualNetworkSubnetId *string `pulumi:"virtualNetworkSubnetId"`
}

// SlotSiteConfigIpRestrictionInput is an input type that accepts SlotSiteConfigIpRestrictionArgs and SlotSiteConfigIpRestrictionOutput values.
// You can construct a concrete instance of `SlotSiteConfigIpRestrictionInput` via:
//
//          SlotSiteConfigIpRestrictionArgs{...}
type SlotSiteConfigIpRestrictionInput interface {
	pulumi.Input

	ToSlotSiteConfigIpRestrictionOutput() SlotSiteConfigIpRestrictionOutput
	ToSlotSiteConfigIpRestrictionOutputWithContext(context.Context) SlotSiteConfigIpRestrictionOutput
}

type SlotSiteConfigIpRestrictionArgs struct {
	// Does this restriction `Allow` or `Deny` access for this IP range. Defaults to `Allow`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// The IP Address used for this IP Restriction in CIDR notation.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The name for this IP Restriction.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, priority is set to 65000 if not specified.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The Service Tag used for this IP Restriction.
	ServiceTag pulumi.StringPtrInput `pulumi:"serviceTag"`
	// Deprecated: This field has been deprecated in favour of `virtual_network_subnet_id` and will be removed in a future version of the provider
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The Virtual Network Subnet ID used for this IP Restriction.
	VirtualNetworkSubnetId pulumi.StringPtrInput `pulumi:"virtualNetworkSubnetId"`
}

func (SlotSiteConfigIpRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotSiteConfigIpRestriction)(nil)).Elem()
}

func (i SlotSiteConfigIpRestrictionArgs) ToSlotSiteConfigIpRestrictionOutput() SlotSiteConfigIpRestrictionOutput {
	return i.ToSlotSiteConfigIpRestrictionOutputWithContext(context.Background())
}

func (i SlotSiteConfigIpRestrictionArgs) ToSlotSiteConfigIpRestrictionOutputWithContext(ctx context.Context) SlotSiteConfigIpRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotSiteConfigIpRestrictionOutput)
}

// SlotSiteConfigIpRestrictionArrayInput is an input type that accepts SlotSiteConfigIpRestrictionArray and SlotSiteConfigIpRestrictionArrayOutput values.
// You can construct a concrete instance of `SlotSiteConfigIpRestrictionArrayInput` via:
//
//          SlotSiteConfigIpRestrictionArray{ SlotSiteConfigIpRestrictionArgs{...} }
type SlotSiteConfigIpRestrictionArrayInput interface {
	pulumi.Input

	ToSlotSiteConfigIpRestrictionArrayOutput() SlotSiteConfigIpRestrictionArrayOutput
	ToSlotSiteConfigIpRestrictionArrayOutputWithContext(context.Context) SlotSiteConfigIpRestrictionArrayOutput
}

type SlotSiteConfigIpRestrictionArray []SlotSiteConfigIpRestrictionInput

func (SlotSiteConfigIpRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SlotSiteConfigIpRestriction)(nil)).Elem()
}

func (i SlotSiteConfigIpRestrictionArray) ToSlotSiteConfigIpRestrictionArrayOutput() SlotSiteConfigIpRestrictionArrayOutput {
	return i.ToSlotSiteConfigIpRestrictionArrayOutputWithContext(context.Background())
}

func (i SlotSiteConfigIpRestrictionArray) ToSlotSiteConfigIpRestrictionArrayOutputWithContext(ctx context.Context) SlotSiteConfigIpRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotSiteConfigIpRestrictionArrayOutput)
}

type SlotSiteConfigIpRestrictionOutput struct{ *pulumi.OutputState }

func (SlotSiteConfigIpRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotSiteConfigIpRestriction)(nil)).Elem()
}

func (o SlotSiteConfigIpRestrictionOutput) ToSlotSiteConfigIpRestrictionOutput() SlotSiteConfigIpRestrictionOutput {
	return o
}

func (o SlotSiteConfigIpRestrictionOutput) ToSlotSiteConfigIpRestrictionOutputWithContext(ctx context.Context) SlotSiteConfigIpRestrictionOutput {
	return o
}

// Does this restriction `Allow` or `Deny` access for this IP range. Defaults to `Allow`.
func (o SlotSiteConfigIpRestrictionOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteConfigIpRestriction) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// The IP Address used for this IP Restriction in CIDR notation.
func (o SlotSiteConfigIpRestrictionOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteConfigIpRestriction) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The name for this IP Restriction.
func (o SlotSiteConfigIpRestrictionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteConfigIpRestriction) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, priority is set to 65000 if not specified.
func (o SlotSiteConfigIpRestrictionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SlotSiteConfigIpRestriction) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The Service Tag used for this IP Restriction.
func (o SlotSiteConfigIpRestrictionOutput) ServiceTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteConfigIpRestriction) *string { return v.ServiceTag }).(pulumi.StringPtrOutput)
}

// Deprecated: This field has been deprecated in favour of `virtual_network_subnet_id` and will be removed in a future version of the provider
func (o SlotSiteConfigIpRestrictionOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteConfigIpRestriction) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The Virtual Network Subnet ID used for this IP Restriction.
func (o SlotSiteConfigIpRestrictionOutput) VirtualNetworkSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteConfigIpRestriction) *string { return v.VirtualNetworkSubnetId }).(pulumi.StringPtrOutput)
}

type SlotSiteConfigIpRestrictionArrayOutput struct{ *pulumi.OutputState }

func (SlotSiteConfigIpRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SlotSiteConfigIpRestriction)(nil)).Elem()
}

func (o SlotSiteConfigIpRestrictionArrayOutput) ToSlotSiteConfigIpRestrictionArrayOutput() SlotSiteConfigIpRestrictionArrayOutput {
	return o
}

func (o SlotSiteConfigIpRestrictionArrayOutput) ToSlotSiteConfigIpRestrictionArrayOutputWithContext(ctx context.Context) SlotSiteConfigIpRestrictionArrayOutput {
	return o
}

func (o SlotSiteConfigIpRestrictionArrayOutput) Index(i pulumi.IntInput) SlotSiteConfigIpRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SlotSiteConfigIpRestriction {
		return vs[0].([]SlotSiteConfigIpRestriction)[vs[1].(int)]
	}).(SlotSiteConfigIpRestrictionOutput)
}

type SlotSiteConfigScmIpRestriction struct {
	// Does this restriction `Allow` or `Deny` access for this IP range. Defaults to `Allow`.
	Action *string `pulumi:"action"`
	// The IP Address used for this IP Restriction in CIDR notation.
	IpAddress *string `pulumi:"ipAddress"`
	// Specifies the name of the App Service Slot component. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, priority is set to 65000 if not specified.
	Priority *int `pulumi:"priority"`
	// The Service Tag used for this IP Restriction.
	ServiceTag *string `pulumi:"serviceTag"`
	// Deprecated: This field has been deprecated in favour of `virtual_network_subnet_id` and will be removed in a future version of the provider
	SubnetId *string `pulumi:"subnetId"`
	// The Virtual Network Subnet ID used for this IP Restriction.
	VirtualNetworkSubnetId *string `pulumi:"virtualNetworkSubnetId"`
}

// SlotSiteConfigScmIpRestrictionInput is an input type that accepts SlotSiteConfigScmIpRestrictionArgs and SlotSiteConfigScmIpRestrictionOutput values.
// You can construct a concrete instance of `SlotSiteConfigScmIpRestrictionInput` via:
//
//          SlotSiteConfigScmIpRestrictionArgs{...}
type SlotSiteConfigScmIpRestrictionInput interface {
	pulumi.Input

	ToSlotSiteConfigScmIpRestrictionOutput() SlotSiteConfigScmIpRestrictionOutput
	ToSlotSiteConfigScmIpRestrictionOutputWithContext(context.Context) SlotSiteConfigScmIpRestrictionOutput
}

type SlotSiteConfigScmIpRestrictionArgs struct {
	// Does this restriction `Allow` or `Deny` access for this IP range. Defaults to `Allow`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// The IP Address used for this IP Restriction in CIDR notation.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// Specifies the name of the App Service Slot component. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, priority is set to 65000 if not specified.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The Service Tag used for this IP Restriction.
	ServiceTag pulumi.StringPtrInput `pulumi:"serviceTag"`
	// Deprecated: This field has been deprecated in favour of `virtual_network_subnet_id` and will be removed in a future version of the provider
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The Virtual Network Subnet ID used for this IP Restriction.
	VirtualNetworkSubnetId pulumi.StringPtrInput `pulumi:"virtualNetworkSubnetId"`
}

func (SlotSiteConfigScmIpRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotSiteConfigScmIpRestriction)(nil)).Elem()
}

func (i SlotSiteConfigScmIpRestrictionArgs) ToSlotSiteConfigScmIpRestrictionOutput() SlotSiteConfigScmIpRestrictionOutput {
	return i.ToSlotSiteConfigScmIpRestrictionOutputWithContext(context.Background())
}

func (i SlotSiteConfigScmIpRestrictionArgs) ToSlotSiteConfigScmIpRestrictionOutputWithContext(ctx context.Context) SlotSiteConfigScmIpRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotSiteConfigScmIpRestrictionOutput)
}

// SlotSiteConfigScmIpRestrictionArrayInput is an input type that accepts SlotSiteConfigScmIpRestrictionArray and SlotSiteConfigScmIpRestrictionArrayOutput values.
// You can construct a concrete instance of `SlotSiteConfigScmIpRestrictionArrayInput` via:
//
//          SlotSiteConfigScmIpRestrictionArray{ SlotSiteConfigScmIpRestrictionArgs{...} }
type SlotSiteConfigScmIpRestrictionArrayInput interface {
	pulumi.Input

	ToSlotSiteConfigScmIpRestrictionArrayOutput() SlotSiteConfigScmIpRestrictionArrayOutput
	ToSlotSiteConfigScmIpRestrictionArrayOutputWithContext(context.Context) SlotSiteConfigScmIpRestrictionArrayOutput
}

type SlotSiteConfigScmIpRestrictionArray []SlotSiteConfigScmIpRestrictionInput

func (SlotSiteConfigScmIpRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SlotSiteConfigScmIpRestriction)(nil)).Elem()
}

func (i SlotSiteConfigScmIpRestrictionArray) ToSlotSiteConfigScmIpRestrictionArrayOutput() SlotSiteConfigScmIpRestrictionArrayOutput {
	return i.ToSlotSiteConfigScmIpRestrictionArrayOutputWithContext(context.Background())
}

func (i SlotSiteConfigScmIpRestrictionArray) ToSlotSiteConfigScmIpRestrictionArrayOutputWithContext(ctx context.Context) SlotSiteConfigScmIpRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotSiteConfigScmIpRestrictionArrayOutput)
}

type SlotSiteConfigScmIpRestrictionOutput struct{ *pulumi.OutputState }

func (SlotSiteConfigScmIpRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotSiteConfigScmIpRestriction)(nil)).Elem()
}

func (o SlotSiteConfigScmIpRestrictionOutput) ToSlotSiteConfigScmIpRestrictionOutput() SlotSiteConfigScmIpRestrictionOutput {
	return o
}

func (o SlotSiteConfigScmIpRestrictionOutput) ToSlotSiteConfigScmIpRestrictionOutputWithContext(ctx context.Context) SlotSiteConfigScmIpRestrictionOutput {
	return o
}

// Does this restriction `Allow` or `Deny` access for this IP range. Defaults to `Allow`.
func (o SlotSiteConfigScmIpRestrictionOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteConfigScmIpRestriction) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// The IP Address used for this IP Restriction in CIDR notation.
func (o SlotSiteConfigScmIpRestrictionOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteConfigScmIpRestriction) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// Specifies the name of the App Service Slot component. Changing this forces a new resource to be created.
func (o SlotSiteConfigScmIpRestrictionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteConfigScmIpRestriction) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, priority is set to 65000 if not specified.
func (o SlotSiteConfigScmIpRestrictionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SlotSiteConfigScmIpRestriction) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The Service Tag used for this IP Restriction.
func (o SlotSiteConfigScmIpRestrictionOutput) ServiceTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteConfigScmIpRestriction) *string { return v.ServiceTag }).(pulumi.StringPtrOutput)
}

// Deprecated: This field has been deprecated in favour of `virtual_network_subnet_id` and will be removed in a future version of the provider
func (o SlotSiteConfigScmIpRestrictionOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteConfigScmIpRestriction) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The Virtual Network Subnet ID used for this IP Restriction.
func (o SlotSiteConfigScmIpRestrictionOutput) VirtualNetworkSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteConfigScmIpRestriction) *string { return v.VirtualNetworkSubnetId }).(pulumi.StringPtrOutput)
}

type SlotSiteConfigScmIpRestrictionArrayOutput struct{ *pulumi.OutputState }

func (SlotSiteConfigScmIpRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SlotSiteConfigScmIpRestriction)(nil)).Elem()
}

func (o SlotSiteConfigScmIpRestrictionArrayOutput) ToSlotSiteConfigScmIpRestrictionArrayOutput() SlotSiteConfigScmIpRestrictionArrayOutput {
	return o
}

func (o SlotSiteConfigScmIpRestrictionArrayOutput) ToSlotSiteConfigScmIpRestrictionArrayOutputWithContext(ctx context.Context) SlotSiteConfigScmIpRestrictionArrayOutput {
	return o
}

func (o SlotSiteConfigScmIpRestrictionArrayOutput) Index(i pulumi.IntInput) SlotSiteConfigScmIpRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SlotSiteConfigScmIpRestriction {
		return vs[0].([]SlotSiteConfigScmIpRestriction)[vs[1].(int)]
	}).(SlotSiteConfigScmIpRestrictionOutput)
}

type SlotSiteCredential struct {
	// The password associated with the username, which can be used to publish to this App Service.
	Password *string `pulumi:"password"`
	// The username which can be used to publish to this App Service
	Username *string `pulumi:"username"`
}

// SlotSiteCredentialInput is an input type that accepts SlotSiteCredentialArgs and SlotSiteCredentialOutput values.
// You can construct a concrete instance of `SlotSiteCredentialInput` via:
//
//          SlotSiteCredentialArgs{...}
type SlotSiteCredentialInput interface {
	pulumi.Input

	ToSlotSiteCredentialOutput() SlotSiteCredentialOutput
	ToSlotSiteCredentialOutputWithContext(context.Context) SlotSiteCredentialOutput
}

type SlotSiteCredentialArgs struct {
	// The password associated with the username, which can be used to publish to this App Service.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The username which can be used to publish to this App Service
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (SlotSiteCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotSiteCredential)(nil)).Elem()
}

func (i SlotSiteCredentialArgs) ToSlotSiteCredentialOutput() SlotSiteCredentialOutput {
	return i.ToSlotSiteCredentialOutputWithContext(context.Background())
}

func (i SlotSiteCredentialArgs) ToSlotSiteCredentialOutputWithContext(ctx context.Context) SlotSiteCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotSiteCredentialOutput)
}

// SlotSiteCredentialArrayInput is an input type that accepts SlotSiteCredentialArray and SlotSiteCredentialArrayOutput values.
// You can construct a concrete instance of `SlotSiteCredentialArrayInput` via:
//
//          SlotSiteCredentialArray{ SlotSiteCredentialArgs{...} }
type SlotSiteCredentialArrayInput interface {
	pulumi.Input

	ToSlotSiteCredentialArrayOutput() SlotSiteCredentialArrayOutput
	ToSlotSiteCredentialArrayOutputWithContext(context.Context) SlotSiteCredentialArrayOutput
}

type SlotSiteCredentialArray []SlotSiteCredentialInput

func (SlotSiteCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SlotSiteCredential)(nil)).Elem()
}

func (i SlotSiteCredentialArray) ToSlotSiteCredentialArrayOutput() SlotSiteCredentialArrayOutput {
	return i.ToSlotSiteCredentialArrayOutputWithContext(context.Background())
}

func (i SlotSiteCredentialArray) ToSlotSiteCredentialArrayOutputWithContext(ctx context.Context) SlotSiteCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotSiteCredentialArrayOutput)
}

type SlotSiteCredentialOutput struct{ *pulumi.OutputState }

func (SlotSiteCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotSiteCredential)(nil)).Elem()
}

func (o SlotSiteCredentialOutput) ToSlotSiteCredentialOutput() SlotSiteCredentialOutput {
	return o
}

func (o SlotSiteCredentialOutput) ToSlotSiteCredentialOutputWithContext(ctx context.Context) SlotSiteCredentialOutput {
	return o
}

// The password associated with the username, which can be used to publish to this App Service.
func (o SlotSiteCredentialOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteCredential) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The username which can be used to publish to this App Service
func (o SlotSiteCredentialOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlotSiteCredential) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type SlotSiteCredentialArrayOutput struct{ *pulumi.OutputState }

func (SlotSiteCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SlotSiteCredential)(nil)).Elem()
}

func (o SlotSiteCredentialArrayOutput) ToSlotSiteCredentialArrayOutput() SlotSiteCredentialArrayOutput {
	return o
}

func (o SlotSiteCredentialArrayOutput) ToSlotSiteCredentialArrayOutputWithContext(ctx context.Context) SlotSiteCredentialArrayOutput {
	return o
}

func (o SlotSiteCredentialArrayOutput) Index(i pulumi.IntInput) SlotSiteCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SlotSiteCredential {
		return vs[0].([]SlotSiteCredential)[vs[1].(int)]
	}).(SlotSiteCredentialOutput)
}

type GetAppServiceConnectionString struct {
	// The name of the App Service.
	Name string `pulumi:"name"`
	// The type of the Connection String.
	Type string `pulumi:"type"`
	// The value for the Connection String.
	Value string `pulumi:"value"`
}

// GetAppServiceConnectionStringInput is an input type that accepts GetAppServiceConnectionStringArgs and GetAppServiceConnectionStringOutput values.
// You can construct a concrete instance of `GetAppServiceConnectionStringInput` via:
//
//          GetAppServiceConnectionStringArgs{...}
type GetAppServiceConnectionStringInput interface {
	pulumi.Input

	ToGetAppServiceConnectionStringOutput() GetAppServiceConnectionStringOutput
	ToGetAppServiceConnectionStringOutputWithContext(context.Context) GetAppServiceConnectionStringOutput
}

type GetAppServiceConnectionStringArgs struct {
	// The name of the App Service.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the Connection String.
	Type pulumi.StringInput `pulumi:"type"`
	// The value for the Connection String.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetAppServiceConnectionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppServiceConnectionString)(nil)).Elem()
}

func (i GetAppServiceConnectionStringArgs) ToGetAppServiceConnectionStringOutput() GetAppServiceConnectionStringOutput {
	return i.ToGetAppServiceConnectionStringOutputWithContext(context.Background())
}

func (i GetAppServiceConnectionStringArgs) ToGetAppServiceConnectionStringOutputWithContext(ctx context.Context) GetAppServiceConnectionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppServiceConnectionStringOutput)
}

// GetAppServiceConnectionStringArrayInput is an input type that accepts GetAppServiceConnectionStringArray and GetAppServiceConnectionStringArrayOutput values.
// You can construct a concrete instance of `GetAppServiceConnectionStringArrayInput` via:
//
//          GetAppServiceConnectionStringArray{ GetAppServiceConnectionStringArgs{...} }
type GetAppServiceConnectionStringArrayInput interface {
	pulumi.Input

	ToGetAppServiceConnectionStringArrayOutput() GetAppServiceConnectionStringArrayOutput
	ToGetAppServiceConnectionStringArrayOutputWithContext(context.Context) GetAppServiceConnectionStringArrayOutput
}

type GetAppServiceConnectionStringArray []GetAppServiceConnectionStringInput

func (GetAppServiceConnectionStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppServiceConnectionString)(nil)).Elem()
}

func (i GetAppServiceConnectionStringArray) ToGetAppServiceConnectionStringArrayOutput() GetAppServiceConnectionStringArrayOutput {
	return i.ToGetAppServiceConnectionStringArrayOutputWithContext(context.Background())
}

func (i GetAppServiceConnectionStringArray) ToGetAppServiceConnectionStringArrayOutputWithContext(ctx context.Context) GetAppServiceConnectionStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppServiceConnectionStringArrayOutput)
}

type GetAppServiceConnectionStringOutput struct{ *pulumi.OutputState }

func (GetAppServiceConnectionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppServiceConnectionString)(nil)).Elem()
}

func (o GetAppServiceConnectionStringOutput) ToGetAppServiceConnectionStringOutput() GetAppServiceConnectionStringOutput {
	return o
}

func (o GetAppServiceConnectionStringOutput) ToGetAppServiceConnectionStringOutputWithContext(ctx context.Context) GetAppServiceConnectionStringOutput {
	return o
}

// The name of the App Service.
func (o GetAppServiceConnectionStringOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceConnectionString) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the Connection String.
func (o GetAppServiceConnectionStringOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceConnectionString) string { return v.Type }).(pulumi.StringOutput)
}

// The value for the Connection String.
func (o GetAppServiceConnectionStringOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceConnectionString) string { return v.Value }).(pulumi.StringOutput)
}

type GetAppServiceConnectionStringArrayOutput struct{ *pulumi.OutputState }

func (GetAppServiceConnectionStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppServiceConnectionString)(nil)).Elem()
}

func (o GetAppServiceConnectionStringArrayOutput) ToGetAppServiceConnectionStringArrayOutput() GetAppServiceConnectionStringArrayOutput {
	return o
}

func (o GetAppServiceConnectionStringArrayOutput) ToGetAppServiceConnectionStringArrayOutputWithContext(ctx context.Context) GetAppServiceConnectionStringArrayOutput {
	return o
}

func (o GetAppServiceConnectionStringArrayOutput) Index(i pulumi.IntInput) GetAppServiceConnectionStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppServiceConnectionString {
		return vs[0].([]GetAppServiceConnectionString)[vs[1].(int)]
	}).(GetAppServiceConnectionStringOutput)
}

type GetAppServiceEnvironmentClusterSetting struct {
	// The name of this App Service Environment.
	Name string `pulumi:"name"`
	// The value for the Cluster Setting.
	Value string `pulumi:"value"`
}

// GetAppServiceEnvironmentClusterSettingInput is an input type that accepts GetAppServiceEnvironmentClusterSettingArgs and GetAppServiceEnvironmentClusterSettingOutput values.
// You can construct a concrete instance of `GetAppServiceEnvironmentClusterSettingInput` via:
//
//          GetAppServiceEnvironmentClusterSettingArgs{...}
type GetAppServiceEnvironmentClusterSettingInput interface {
	pulumi.Input

	ToGetAppServiceEnvironmentClusterSettingOutput() GetAppServiceEnvironmentClusterSettingOutput
	ToGetAppServiceEnvironmentClusterSettingOutputWithContext(context.Context) GetAppServiceEnvironmentClusterSettingOutput
}

type GetAppServiceEnvironmentClusterSettingArgs struct {
	// The name of this App Service Environment.
	Name pulumi.StringInput `pulumi:"name"`
	// The value for the Cluster Setting.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetAppServiceEnvironmentClusterSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppServiceEnvironmentClusterSetting)(nil)).Elem()
}

func (i GetAppServiceEnvironmentClusterSettingArgs) ToGetAppServiceEnvironmentClusterSettingOutput() GetAppServiceEnvironmentClusterSettingOutput {
	return i.ToGetAppServiceEnvironmentClusterSettingOutputWithContext(context.Background())
}

func (i GetAppServiceEnvironmentClusterSettingArgs) ToGetAppServiceEnvironmentClusterSettingOutputWithContext(ctx context.Context) GetAppServiceEnvironmentClusterSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppServiceEnvironmentClusterSettingOutput)
}

// GetAppServiceEnvironmentClusterSettingArrayInput is an input type that accepts GetAppServiceEnvironmentClusterSettingArray and GetAppServiceEnvironmentClusterSettingArrayOutput values.
// You can construct a concrete instance of `GetAppServiceEnvironmentClusterSettingArrayInput` via:
//
//          GetAppServiceEnvironmentClusterSettingArray{ GetAppServiceEnvironmentClusterSettingArgs{...} }
type GetAppServiceEnvironmentClusterSettingArrayInput interface {
	pulumi.Input

	ToGetAppServiceEnvironmentClusterSettingArrayOutput() GetAppServiceEnvironmentClusterSettingArrayOutput
	ToGetAppServiceEnvironmentClusterSettingArrayOutputWithContext(context.Context) GetAppServiceEnvironmentClusterSettingArrayOutput
}

type GetAppServiceEnvironmentClusterSettingArray []GetAppServiceEnvironmentClusterSettingInput

func (GetAppServiceEnvironmentClusterSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppServiceEnvironmentClusterSetting)(nil)).Elem()
}

func (i GetAppServiceEnvironmentClusterSettingArray) ToGetAppServiceEnvironmentClusterSettingArrayOutput() GetAppServiceEnvironmentClusterSettingArrayOutput {
	return i.ToGetAppServiceEnvironmentClusterSettingArrayOutputWithContext(context.Background())
}

func (i GetAppServiceEnvironmentClusterSettingArray) ToGetAppServiceEnvironmentClusterSettingArrayOutputWithContext(ctx context.Context) GetAppServiceEnvironmentClusterSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppServiceEnvironmentClusterSettingArrayOutput)
}

type GetAppServiceEnvironmentClusterSettingOutput struct{ *pulumi.OutputState }

func (GetAppServiceEnvironmentClusterSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppServiceEnvironmentClusterSetting)(nil)).Elem()
}

func (o GetAppServiceEnvironmentClusterSettingOutput) ToGetAppServiceEnvironmentClusterSettingOutput() GetAppServiceEnvironmentClusterSettingOutput {
	return o
}

func (o GetAppServiceEnvironmentClusterSettingOutput) ToGetAppServiceEnvironmentClusterSettingOutputWithContext(ctx context.Context) GetAppServiceEnvironmentClusterSettingOutput {
	return o
}

// The name of this App Service Environment.
func (o GetAppServiceEnvironmentClusterSettingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceEnvironmentClusterSetting) string { return v.Name }).(pulumi.StringOutput)
}

// The value for the Cluster Setting.
func (o GetAppServiceEnvironmentClusterSettingOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceEnvironmentClusterSetting) string { return v.Value }).(pulumi.StringOutput)
}

type GetAppServiceEnvironmentClusterSettingArrayOutput struct{ *pulumi.OutputState }

func (GetAppServiceEnvironmentClusterSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppServiceEnvironmentClusterSetting)(nil)).Elem()
}

func (o GetAppServiceEnvironmentClusterSettingArrayOutput) ToGetAppServiceEnvironmentClusterSettingArrayOutput() GetAppServiceEnvironmentClusterSettingArrayOutput {
	return o
}

func (o GetAppServiceEnvironmentClusterSettingArrayOutput) ToGetAppServiceEnvironmentClusterSettingArrayOutputWithContext(ctx context.Context) GetAppServiceEnvironmentClusterSettingArrayOutput {
	return o
}

func (o GetAppServiceEnvironmentClusterSettingArrayOutput) Index(i pulumi.IntInput) GetAppServiceEnvironmentClusterSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppServiceEnvironmentClusterSetting {
		return vs[0].([]GetAppServiceEnvironmentClusterSetting)[vs[1].(int)]
	}).(GetAppServiceEnvironmentClusterSettingOutput)
}

type GetAppServicePlanSku struct {
	// Specifies the number of workers associated with this App Service Plan.
	Capacity int `pulumi:"capacity"`
	// Specifies the plan's instance size.
	Size string `pulumi:"size"`
	// Specifies the plan's pricing tier.
	Tier string `pulumi:"tier"`
}

// GetAppServicePlanSkuInput is an input type that accepts GetAppServicePlanSkuArgs and GetAppServicePlanSkuOutput values.
// You can construct a concrete instance of `GetAppServicePlanSkuInput` via:
//
//          GetAppServicePlanSkuArgs{...}
type GetAppServicePlanSkuInput interface {
	pulumi.Input

	ToGetAppServicePlanSkuOutput() GetAppServicePlanSkuOutput
	ToGetAppServicePlanSkuOutputWithContext(context.Context) GetAppServicePlanSkuOutput
}

type GetAppServicePlanSkuArgs struct {
	// Specifies the number of workers associated with this App Service Plan.
	Capacity pulumi.IntInput `pulumi:"capacity"`
	// Specifies the plan's instance size.
	Size pulumi.StringInput `pulumi:"size"`
	// Specifies the plan's pricing tier.
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (GetAppServicePlanSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppServicePlanSku)(nil)).Elem()
}

func (i GetAppServicePlanSkuArgs) ToGetAppServicePlanSkuOutput() GetAppServicePlanSkuOutput {
	return i.ToGetAppServicePlanSkuOutputWithContext(context.Background())
}

func (i GetAppServicePlanSkuArgs) ToGetAppServicePlanSkuOutputWithContext(ctx context.Context) GetAppServicePlanSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppServicePlanSkuOutput)
}

type GetAppServicePlanSkuOutput struct{ *pulumi.OutputState }

func (GetAppServicePlanSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppServicePlanSku)(nil)).Elem()
}

func (o GetAppServicePlanSkuOutput) ToGetAppServicePlanSkuOutput() GetAppServicePlanSkuOutput {
	return o
}

func (o GetAppServicePlanSkuOutput) ToGetAppServicePlanSkuOutputWithContext(ctx context.Context) GetAppServicePlanSkuOutput {
	return o
}

// Specifies the number of workers associated with this App Service Plan.
func (o GetAppServicePlanSkuOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetAppServicePlanSku) int { return v.Capacity }).(pulumi.IntOutput)
}

// Specifies the plan's instance size.
func (o GetAppServicePlanSkuOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServicePlanSku) string { return v.Size }).(pulumi.StringOutput)
}

// Specifies the plan's pricing tier.
func (o GetAppServicePlanSkuOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServicePlanSku) string { return v.Tier }).(pulumi.StringOutput)
}

type GetAppServiceSiteConfig struct {
	// Is the app loaded at all times?
	AlwaysOn bool `pulumi:"alwaysOn"`
	// App command line to launch.
	AppCommandLine string `pulumi:"appCommandLine"`
	// A `cors` block as defined above.
	Cors []GetAppServiceSiteConfigCor `pulumi:"cors"`
	// The ordering of default documents to load, if an address isn't specified.
	DefaultDocuments []string `pulumi:"defaultDocuments"`
	// The version of the .net framework's CLR used in this App Service.
	DotnetFrameworkVersion string `pulumi:"dotnetFrameworkVersion"`
	// State of FTP / FTPS service for this AppService.
	FtpsState string `pulumi:"ftpsState"`
	// The health check path to be pinged by App Service.
	HealthCheckPath string `pulumi:"healthCheckPath"`
	// Is HTTP2 Enabled on this App Service?
	Http2Enabled bool `pulumi:"http2Enabled"`
	// One or more `ipRestriction` blocks as defined above.
	IpRestrictions []GetAppServiceSiteConfigIpRestriction `pulumi:"ipRestrictions"`
	// The Java Container in use.
	JavaContainer string `pulumi:"javaContainer"`
	// The version of the Java Container in use.
	JavaContainerVersion string `pulumi:"javaContainerVersion"`
	// The version of Java in use.
	JavaVersion string `pulumi:"javaVersion"`
	// Linux App Framework and version for the AppService.
	LinuxFxVersion string `pulumi:"linuxFxVersion"`
	// Is "MySQL In App" Enabled? This runs a local MySQL instance with your app and shares resources from the App Service plan.
	LocalMysqlEnabled bool `pulumi:"localMysqlEnabled"`
	// The Managed Pipeline Mode used in this App Service.
	ManagedPipelineMode string `pulumi:"managedPipelineMode"`
	// The minimum supported TLS version for this App Service.
	MinTlsVersion string `pulumi:"minTlsVersion"`
	// The scaled number of workers (for per site scaling) of this App Service.
	NumberOfWorkers int `pulumi:"numberOfWorkers"`
	// The version of PHP used in this App Service.
	PhpVersion string `pulumi:"phpVersion"`
	// The version of Python used in this App Service.
	PythonVersion string `pulumi:"pythonVersion"`
	// Is Remote Debugging Enabled in this App Service?
	RemoteDebuggingEnabled bool `pulumi:"remoteDebuggingEnabled"`
	// Which version of Visual Studio is the Remote Debugger compatible with?
	RemoteDebuggingVersion string `pulumi:"remoteDebuggingVersion"`
	// One or more `scmIpRestriction` blocks as defined above.
	ScmIpRestrictions []GetAppServiceSiteConfigScmIpRestriction `pulumi:"scmIpRestrictions"`
	// The type of Source Control enabled for this App Service.
	ScmType string `pulumi:"scmType"`
	// IP security restrictions for scm to use main.
	ScmUseMainIpRestriction bool `pulumi:"scmUseMainIpRestriction"`
	// Does the App Service run in 32 bit mode, rather than 64 bit mode?
	Use32BitWorkerProcess bool `pulumi:"use32BitWorkerProcess"`
	// Are WebSockets enabled for this App Service?
	WebsocketsEnabled bool `pulumi:"websocketsEnabled"`
	// Windows Container Docker Image for the AppService.
	WindowsFxVersion string `pulumi:"windowsFxVersion"`
}

// GetAppServiceSiteConfigInput is an input type that accepts GetAppServiceSiteConfigArgs and GetAppServiceSiteConfigOutput values.
// You can construct a concrete instance of `GetAppServiceSiteConfigInput` via:
//
//          GetAppServiceSiteConfigArgs{...}
type GetAppServiceSiteConfigInput interface {
	pulumi.Input

	ToGetAppServiceSiteConfigOutput() GetAppServiceSiteConfigOutput
	ToGetAppServiceSiteConfigOutputWithContext(context.Context) GetAppServiceSiteConfigOutput
}

type GetAppServiceSiteConfigArgs struct {
	// Is the app loaded at all times?
	AlwaysOn pulumi.BoolInput `pulumi:"alwaysOn"`
	// App command line to launch.
	AppCommandLine pulumi.StringInput `pulumi:"appCommandLine"`
	// A `cors` block as defined above.
	Cors GetAppServiceSiteConfigCorArrayInput `pulumi:"cors"`
	// The ordering of default documents to load, if an address isn't specified.
	DefaultDocuments pulumi.StringArrayInput `pulumi:"defaultDocuments"`
	// The version of the .net framework's CLR used in this App Service.
	DotnetFrameworkVersion pulumi.StringInput `pulumi:"dotnetFrameworkVersion"`
	// State of FTP / FTPS service for this AppService.
	FtpsState pulumi.StringInput `pulumi:"ftpsState"`
	// The health check path to be pinged by App Service.
	HealthCheckPath pulumi.StringInput `pulumi:"healthCheckPath"`
	// Is HTTP2 Enabled on this App Service?
	Http2Enabled pulumi.BoolInput `pulumi:"http2Enabled"`
	// One or more `ipRestriction` blocks as defined above.
	IpRestrictions GetAppServiceSiteConfigIpRestrictionArrayInput `pulumi:"ipRestrictions"`
	// The Java Container in use.
	JavaContainer pulumi.StringInput `pulumi:"javaContainer"`
	// The version of the Java Container in use.
	JavaContainerVersion pulumi.StringInput `pulumi:"javaContainerVersion"`
	// The version of Java in use.
	JavaVersion pulumi.StringInput `pulumi:"javaVersion"`
	// Linux App Framework and version for the AppService.
	LinuxFxVersion pulumi.StringInput `pulumi:"linuxFxVersion"`
	// Is "MySQL In App" Enabled? This runs a local MySQL instance with your app and shares resources from the App Service plan.
	LocalMysqlEnabled pulumi.BoolInput `pulumi:"localMysqlEnabled"`
	// The Managed Pipeline Mode used in this App Service.
	ManagedPipelineMode pulumi.StringInput `pulumi:"managedPipelineMode"`
	// The minimum supported TLS version for this App Service.
	MinTlsVersion pulumi.StringInput `pulumi:"minTlsVersion"`
	// The scaled number of workers (for per site scaling) of this App Service.
	NumberOfWorkers pulumi.IntInput `pulumi:"numberOfWorkers"`
	// The version of PHP used in this App Service.
	PhpVersion pulumi.StringInput `pulumi:"phpVersion"`
	// The version of Python used in this App Service.
	PythonVersion pulumi.StringInput `pulumi:"pythonVersion"`
	// Is Remote Debugging Enabled in this App Service?
	RemoteDebuggingEnabled pulumi.BoolInput `pulumi:"remoteDebuggingEnabled"`
	// Which version of Visual Studio is the Remote Debugger compatible with?
	RemoteDebuggingVersion pulumi.StringInput `pulumi:"remoteDebuggingVersion"`
	// One or more `scmIpRestriction` blocks as defined above.
	ScmIpRestrictions GetAppServiceSiteConfigScmIpRestrictionArrayInput `pulumi:"scmIpRestrictions"`
	// The type of Source Control enabled for this App Service.
	ScmType pulumi.StringInput `pulumi:"scmType"`
	// IP security restrictions for scm to use main.
	ScmUseMainIpRestriction pulumi.BoolInput `pulumi:"scmUseMainIpRestriction"`
	// Does the App Service run in 32 bit mode, rather than 64 bit mode?
	Use32BitWorkerProcess pulumi.BoolInput `pulumi:"use32BitWorkerProcess"`
	// Are WebSockets enabled for this App Service?
	WebsocketsEnabled pulumi.BoolInput `pulumi:"websocketsEnabled"`
	// Windows Container Docker Image for the AppService.
	WindowsFxVersion pulumi.StringInput `pulumi:"windowsFxVersion"`
}

func (GetAppServiceSiteConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppServiceSiteConfig)(nil)).Elem()
}

func (i GetAppServiceSiteConfigArgs) ToGetAppServiceSiteConfigOutput() GetAppServiceSiteConfigOutput {
	return i.ToGetAppServiceSiteConfigOutputWithContext(context.Background())
}

func (i GetAppServiceSiteConfigArgs) ToGetAppServiceSiteConfigOutputWithContext(ctx context.Context) GetAppServiceSiteConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppServiceSiteConfigOutput)
}

// GetAppServiceSiteConfigArrayInput is an input type that accepts GetAppServiceSiteConfigArray and GetAppServiceSiteConfigArrayOutput values.
// You can construct a concrete instance of `GetAppServiceSiteConfigArrayInput` via:
//
//          GetAppServiceSiteConfigArray{ GetAppServiceSiteConfigArgs{...} }
type GetAppServiceSiteConfigArrayInput interface {
	pulumi.Input

	ToGetAppServiceSiteConfigArrayOutput() GetAppServiceSiteConfigArrayOutput
	ToGetAppServiceSiteConfigArrayOutputWithContext(context.Context) GetAppServiceSiteConfigArrayOutput
}

type GetAppServiceSiteConfigArray []GetAppServiceSiteConfigInput

func (GetAppServiceSiteConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppServiceSiteConfig)(nil)).Elem()
}

func (i GetAppServiceSiteConfigArray) ToGetAppServiceSiteConfigArrayOutput() GetAppServiceSiteConfigArrayOutput {
	return i.ToGetAppServiceSiteConfigArrayOutputWithContext(context.Background())
}

func (i GetAppServiceSiteConfigArray) ToGetAppServiceSiteConfigArrayOutputWithContext(ctx context.Context) GetAppServiceSiteConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppServiceSiteConfigArrayOutput)
}

type GetAppServiceSiteConfigOutput struct{ *pulumi.OutputState }

func (GetAppServiceSiteConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppServiceSiteConfig)(nil)).Elem()
}

func (o GetAppServiceSiteConfigOutput) ToGetAppServiceSiteConfigOutput() GetAppServiceSiteConfigOutput {
	return o
}

func (o GetAppServiceSiteConfigOutput) ToGetAppServiceSiteConfigOutputWithContext(ctx context.Context) GetAppServiceSiteConfigOutput {
	return o
}

// Is the app loaded at all times?
func (o GetAppServiceSiteConfigOutput) AlwaysOn() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfig) bool { return v.AlwaysOn }).(pulumi.BoolOutput)
}

// App command line to launch.
func (o GetAppServiceSiteConfigOutput) AppCommandLine() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfig) string { return v.AppCommandLine }).(pulumi.StringOutput)
}

// A `cors` block as defined above.
func (o GetAppServiceSiteConfigOutput) Cors() GetAppServiceSiteConfigCorArrayOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfig) []GetAppServiceSiteConfigCor { return v.Cors }).(GetAppServiceSiteConfigCorArrayOutput)
}

// The ordering of default documents to load, if an address isn't specified.
func (o GetAppServiceSiteConfigOutput) DefaultDocuments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfig) []string { return v.DefaultDocuments }).(pulumi.StringArrayOutput)
}

// The version of the .net framework's CLR used in this App Service.
func (o GetAppServiceSiteConfigOutput) DotnetFrameworkVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfig) string { return v.DotnetFrameworkVersion }).(pulumi.StringOutput)
}

// State of FTP / FTPS service for this AppService.
func (o GetAppServiceSiteConfigOutput) FtpsState() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfig) string { return v.FtpsState }).(pulumi.StringOutput)
}

// The health check path to be pinged by App Service.
func (o GetAppServiceSiteConfigOutput) HealthCheckPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfig) string { return v.HealthCheckPath }).(pulumi.StringOutput)
}

// Is HTTP2 Enabled on this App Service?
func (o GetAppServiceSiteConfigOutput) Http2Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfig) bool { return v.Http2Enabled }).(pulumi.BoolOutput)
}

// One or more `ipRestriction` blocks as defined above.
func (o GetAppServiceSiteConfigOutput) IpRestrictions() GetAppServiceSiteConfigIpRestrictionArrayOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfig) []GetAppServiceSiteConfigIpRestriction { return v.IpRestrictions }).(GetAppServiceSiteConfigIpRestrictionArrayOutput)
}

// The Java Container in use.
func (o GetAppServiceSiteConfigOutput) JavaContainer() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfig) string { return v.JavaContainer }).(pulumi.StringOutput)
}

// The version of the Java Container in use.
func (o GetAppServiceSiteConfigOutput) JavaContainerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfig) string { return v.JavaContainerVersion }).(pulumi.StringOutput)
}

// The version of Java in use.
func (o GetAppServiceSiteConfigOutput) JavaVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfig) string { return v.JavaVersion }).(pulumi.StringOutput)
}

// Linux App Framework and version for the AppService.
func (o GetAppServiceSiteConfigOutput) LinuxFxVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfig) string { return v.LinuxFxVersion }).(pulumi.StringOutput)
}

// Is "MySQL In App" Enabled? This runs a local MySQL instance with your app and shares resources from the App Service plan.
func (o GetAppServiceSiteConfigOutput) LocalMysqlEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfig) bool { return v.LocalMysqlEnabled }).(pulumi.BoolOutput)
}

// The Managed Pipeline Mode used in this App Service.
func (o GetAppServiceSiteConfigOutput) ManagedPipelineMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfig) string { return v.ManagedPipelineMode }).(pulumi.StringOutput)
}

// The minimum supported TLS version for this App Service.
func (o GetAppServiceSiteConfigOutput) MinTlsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfig) string { return v.MinTlsVersion }).(pulumi.StringOutput)
}

// The scaled number of workers (for per site scaling) of this App Service.
func (o GetAppServiceSiteConfigOutput) NumberOfWorkers() pulumi.IntOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfig) int { return v.NumberOfWorkers }).(pulumi.IntOutput)
}

// The version of PHP used in this App Service.
func (o GetAppServiceSiteConfigOutput) PhpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfig) string { return v.PhpVersion }).(pulumi.StringOutput)
}

// The version of Python used in this App Service.
func (o GetAppServiceSiteConfigOutput) PythonVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfig) string { return v.PythonVersion }).(pulumi.StringOutput)
}

// Is Remote Debugging Enabled in this App Service?
func (o GetAppServiceSiteConfigOutput) RemoteDebuggingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfig) bool { return v.RemoteDebuggingEnabled }).(pulumi.BoolOutput)
}

// Which version of Visual Studio is the Remote Debugger compatible with?
func (o GetAppServiceSiteConfigOutput) RemoteDebuggingVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfig) string { return v.RemoteDebuggingVersion }).(pulumi.StringOutput)
}

// One or more `scmIpRestriction` blocks as defined above.
func (o GetAppServiceSiteConfigOutput) ScmIpRestrictions() GetAppServiceSiteConfigScmIpRestrictionArrayOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfig) []GetAppServiceSiteConfigScmIpRestriction { return v.ScmIpRestrictions }).(GetAppServiceSiteConfigScmIpRestrictionArrayOutput)
}

// The type of Source Control enabled for this App Service.
func (o GetAppServiceSiteConfigOutput) ScmType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfig) string { return v.ScmType }).(pulumi.StringOutput)
}

// IP security restrictions for scm to use main.
func (o GetAppServiceSiteConfigOutput) ScmUseMainIpRestriction() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfig) bool { return v.ScmUseMainIpRestriction }).(pulumi.BoolOutput)
}

// Does the App Service run in 32 bit mode, rather than 64 bit mode?
func (o GetAppServiceSiteConfigOutput) Use32BitWorkerProcess() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfig) bool { return v.Use32BitWorkerProcess }).(pulumi.BoolOutput)
}

// Are WebSockets enabled for this App Service?
func (o GetAppServiceSiteConfigOutput) WebsocketsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfig) bool { return v.WebsocketsEnabled }).(pulumi.BoolOutput)
}

// Windows Container Docker Image for the AppService.
func (o GetAppServiceSiteConfigOutput) WindowsFxVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfig) string { return v.WindowsFxVersion }).(pulumi.StringOutput)
}

type GetAppServiceSiteConfigArrayOutput struct{ *pulumi.OutputState }

func (GetAppServiceSiteConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppServiceSiteConfig)(nil)).Elem()
}

func (o GetAppServiceSiteConfigArrayOutput) ToGetAppServiceSiteConfigArrayOutput() GetAppServiceSiteConfigArrayOutput {
	return o
}

func (o GetAppServiceSiteConfigArrayOutput) ToGetAppServiceSiteConfigArrayOutputWithContext(ctx context.Context) GetAppServiceSiteConfigArrayOutput {
	return o
}

func (o GetAppServiceSiteConfigArrayOutput) Index(i pulumi.IntInput) GetAppServiceSiteConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppServiceSiteConfig {
		return vs[0].([]GetAppServiceSiteConfig)[vs[1].(int)]
	}).(GetAppServiceSiteConfigOutput)
}

type GetAppServiceSiteConfigCor struct {
	// A list of origins which are able to make cross-origin calls.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// Are credentials supported?
	SupportCredentials bool `pulumi:"supportCredentials"`
}

// GetAppServiceSiteConfigCorInput is an input type that accepts GetAppServiceSiteConfigCorArgs and GetAppServiceSiteConfigCorOutput values.
// You can construct a concrete instance of `GetAppServiceSiteConfigCorInput` via:
//
//          GetAppServiceSiteConfigCorArgs{...}
type GetAppServiceSiteConfigCorInput interface {
	pulumi.Input

	ToGetAppServiceSiteConfigCorOutput() GetAppServiceSiteConfigCorOutput
	ToGetAppServiceSiteConfigCorOutputWithContext(context.Context) GetAppServiceSiteConfigCorOutput
}

type GetAppServiceSiteConfigCorArgs struct {
	// A list of origins which are able to make cross-origin calls.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// Are credentials supported?
	SupportCredentials pulumi.BoolInput `pulumi:"supportCredentials"`
}

func (GetAppServiceSiteConfigCorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppServiceSiteConfigCor)(nil)).Elem()
}

func (i GetAppServiceSiteConfigCorArgs) ToGetAppServiceSiteConfigCorOutput() GetAppServiceSiteConfigCorOutput {
	return i.ToGetAppServiceSiteConfigCorOutputWithContext(context.Background())
}

func (i GetAppServiceSiteConfigCorArgs) ToGetAppServiceSiteConfigCorOutputWithContext(ctx context.Context) GetAppServiceSiteConfigCorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppServiceSiteConfigCorOutput)
}

// GetAppServiceSiteConfigCorArrayInput is an input type that accepts GetAppServiceSiteConfigCorArray and GetAppServiceSiteConfigCorArrayOutput values.
// You can construct a concrete instance of `GetAppServiceSiteConfigCorArrayInput` via:
//
//          GetAppServiceSiteConfigCorArray{ GetAppServiceSiteConfigCorArgs{...} }
type GetAppServiceSiteConfigCorArrayInput interface {
	pulumi.Input

	ToGetAppServiceSiteConfigCorArrayOutput() GetAppServiceSiteConfigCorArrayOutput
	ToGetAppServiceSiteConfigCorArrayOutputWithContext(context.Context) GetAppServiceSiteConfigCorArrayOutput
}

type GetAppServiceSiteConfigCorArray []GetAppServiceSiteConfigCorInput

func (GetAppServiceSiteConfigCorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppServiceSiteConfigCor)(nil)).Elem()
}

func (i GetAppServiceSiteConfigCorArray) ToGetAppServiceSiteConfigCorArrayOutput() GetAppServiceSiteConfigCorArrayOutput {
	return i.ToGetAppServiceSiteConfigCorArrayOutputWithContext(context.Background())
}

func (i GetAppServiceSiteConfigCorArray) ToGetAppServiceSiteConfigCorArrayOutputWithContext(ctx context.Context) GetAppServiceSiteConfigCorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppServiceSiteConfigCorArrayOutput)
}

type GetAppServiceSiteConfigCorOutput struct{ *pulumi.OutputState }

func (GetAppServiceSiteConfigCorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppServiceSiteConfigCor)(nil)).Elem()
}

func (o GetAppServiceSiteConfigCorOutput) ToGetAppServiceSiteConfigCorOutput() GetAppServiceSiteConfigCorOutput {
	return o
}

func (o GetAppServiceSiteConfigCorOutput) ToGetAppServiceSiteConfigCorOutputWithContext(ctx context.Context) GetAppServiceSiteConfigCorOutput {
	return o
}

// A list of origins which are able to make cross-origin calls.
func (o GetAppServiceSiteConfigCorOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfigCor) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// Are credentials supported?
func (o GetAppServiceSiteConfigCorOutput) SupportCredentials() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfigCor) bool { return v.SupportCredentials }).(pulumi.BoolOutput)
}

type GetAppServiceSiteConfigCorArrayOutput struct{ *pulumi.OutputState }

func (GetAppServiceSiteConfigCorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppServiceSiteConfigCor)(nil)).Elem()
}

func (o GetAppServiceSiteConfigCorArrayOutput) ToGetAppServiceSiteConfigCorArrayOutput() GetAppServiceSiteConfigCorArrayOutput {
	return o
}

func (o GetAppServiceSiteConfigCorArrayOutput) ToGetAppServiceSiteConfigCorArrayOutputWithContext(ctx context.Context) GetAppServiceSiteConfigCorArrayOutput {
	return o
}

func (o GetAppServiceSiteConfigCorArrayOutput) Index(i pulumi.IntInput) GetAppServiceSiteConfigCorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppServiceSiteConfigCor {
		return vs[0].([]GetAppServiceSiteConfigCor)[vs[1].(int)]
	}).(GetAppServiceSiteConfigCorOutput)
}

type GetAppServiceSiteConfigIpRestriction struct {
	// Allow or Deny access for this IP range. Defaults to Allow.
	Action string `pulumi:"action"`
	// The IP Address used for this IP Restriction in CIDR notation.
	IpAddress string `pulumi:"ipAddress"`
	// The name of the App Service.
	Name string `pulumi:"name"`
	// The priority for this IP Restriction.
	Priority int `pulumi:"priority"`
	// The Service Tag used for this IP Restriction.
	ServiceTag string `pulumi:"serviceTag"`
	SubnetId   string `pulumi:"subnetId"`
	// The Virtual Network Subnet ID used for this IP Restriction.
	VirtualNetworkSubnetId string `pulumi:"virtualNetworkSubnetId"`
}

// GetAppServiceSiteConfigIpRestrictionInput is an input type that accepts GetAppServiceSiteConfigIpRestrictionArgs and GetAppServiceSiteConfigIpRestrictionOutput values.
// You can construct a concrete instance of `GetAppServiceSiteConfigIpRestrictionInput` via:
//
//          GetAppServiceSiteConfigIpRestrictionArgs{...}
type GetAppServiceSiteConfigIpRestrictionInput interface {
	pulumi.Input

	ToGetAppServiceSiteConfigIpRestrictionOutput() GetAppServiceSiteConfigIpRestrictionOutput
	ToGetAppServiceSiteConfigIpRestrictionOutputWithContext(context.Context) GetAppServiceSiteConfigIpRestrictionOutput
}

type GetAppServiceSiteConfigIpRestrictionArgs struct {
	// Allow or Deny access for this IP range. Defaults to Allow.
	Action pulumi.StringInput `pulumi:"action"`
	// The IP Address used for this IP Restriction in CIDR notation.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The name of the App Service.
	Name pulumi.StringInput `pulumi:"name"`
	// The priority for this IP Restriction.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The Service Tag used for this IP Restriction.
	ServiceTag pulumi.StringInput `pulumi:"serviceTag"`
	SubnetId   pulumi.StringInput `pulumi:"subnetId"`
	// The Virtual Network Subnet ID used for this IP Restriction.
	VirtualNetworkSubnetId pulumi.StringInput `pulumi:"virtualNetworkSubnetId"`
}

func (GetAppServiceSiteConfigIpRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppServiceSiteConfigIpRestriction)(nil)).Elem()
}

func (i GetAppServiceSiteConfigIpRestrictionArgs) ToGetAppServiceSiteConfigIpRestrictionOutput() GetAppServiceSiteConfigIpRestrictionOutput {
	return i.ToGetAppServiceSiteConfigIpRestrictionOutputWithContext(context.Background())
}

func (i GetAppServiceSiteConfigIpRestrictionArgs) ToGetAppServiceSiteConfigIpRestrictionOutputWithContext(ctx context.Context) GetAppServiceSiteConfigIpRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppServiceSiteConfigIpRestrictionOutput)
}

// GetAppServiceSiteConfigIpRestrictionArrayInput is an input type that accepts GetAppServiceSiteConfigIpRestrictionArray and GetAppServiceSiteConfigIpRestrictionArrayOutput values.
// You can construct a concrete instance of `GetAppServiceSiteConfigIpRestrictionArrayInput` via:
//
//          GetAppServiceSiteConfigIpRestrictionArray{ GetAppServiceSiteConfigIpRestrictionArgs{...} }
type GetAppServiceSiteConfigIpRestrictionArrayInput interface {
	pulumi.Input

	ToGetAppServiceSiteConfigIpRestrictionArrayOutput() GetAppServiceSiteConfigIpRestrictionArrayOutput
	ToGetAppServiceSiteConfigIpRestrictionArrayOutputWithContext(context.Context) GetAppServiceSiteConfigIpRestrictionArrayOutput
}

type GetAppServiceSiteConfigIpRestrictionArray []GetAppServiceSiteConfigIpRestrictionInput

func (GetAppServiceSiteConfigIpRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppServiceSiteConfigIpRestriction)(nil)).Elem()
}

func (i GetAppServiceSiteConfigIpRestrictionArray) ToGetAppServiceSiteConfigIpRestrictionArrayOutput() GetAppServiceSiteConfigIpRestrictionArrayOutput {
	return i.ToGetAppServiceSiteConfigIpRestrictionArrayOutputWithContext(context.Background())
}

func (i GetAppServiceSiteConfigIpRestrictionArray) ToGetAppServiceSiteConfigIpRestrictionArrayOutputWithContext(ctx context.Context) GetAppServiceSiteConfigIpRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppServiceSiteConfigIpRestrictionArrayOutput)
}

type GetAppServiceSiteConfigIpRestrictionOutput struct{ *pulumi.OutputState }

func (GetAppServiceSiteConfigIpRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppServiceSiteConfigIpRestriction)(nil)).Elem()
}

func (o GetAppServiceSiteConfigIpRestrictionOutput) ToGetAppServiceSiteConfigIpRestrictionOutput() GetAppServiceSiteConfigIpRestrictionOutput {
	return o
}

func (o GetAppServiceSiteConfigIpRestrictionOutput) ToGetAppServiceSiteConfigIpRestrictionOutputWithContext(ctx context.Context) GetAppServiceSiteConfigIpRestrictionOutput {
	return o
}

// Allow or Deny access for this IP range. Defaults to Allow.
func (o GetAppServiceSiteConfigIpRestrictionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfigIpRestriction) string { return v.Action }).(pulumi.StringOutput)
}

// The IP Address used for this IP Restriction in CIDR notation.
func (o GetAppServiceSiteConfigIpRestrictionOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfigIpRestriction) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The name of the App Service.
func (o GetAppServiceSiteConfigIpRestrictionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfigIpRestriction) string { return v.Name }).(pulumi.StringOutput)
}

// The priority for this IP Restriction.
func (o GetAppServiceSiteConfigIpRestrictionOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfigIpRestriction) int { return v.Priority }).(pulumi.IntOutput)
}

// The Service Tag used for this IP Restriction.
func (o GetAppServiceSiteConfigIpRestrictionOutput) ServiceTag() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfigIpRestriction) string { return v.ServiceTag }).(pulumi.StringOutput)
}

func (o GetAppServiceSiteConfigIpRestrictionOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfigIpRestriction) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The Virtual Network Subnet ID used for this IP Restriction.
func (o GetAppServiceSiteConfigIpRestrictionOutput) VirtualNetworkSubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfigIpRestriction) string { return v.VirtualNetworkSubnetId }).(pulumi.StringOutput)
}

type GetAppServiceSiteConfigIpRestrictionArrayOutput struct{ *pulumi.OutputState }

func (GetAppServiceSiteConfigIpRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppServiceSiteConfigIpRestriction)(nil)).Elem()
}

func (o GetAppServiceSiteConfigIpRestrictionArrayOutput) ToGetAppServiceSiteConfigIpRestrictionArrayOutput() GetAppServiceSiteConfigIpRestrictionArrayOutput {
	return o
}

func (o GetAppServiceSiteConfigIpRestrictionArrayOutput) ToGetAppServiceSiteConfigIpRestrictionArrayOutputWithContext(ctx context.Context) GetAppServiceSiteConfigIpRestrictionArrayOutput {
	return o
}

func (o GetAppServiceSiteConfigIpRestrictionArrayOutput) Index(i pulumi.IntInput) GetAppServiceSiteConfigIpRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppServiceSiteConfigIpRestriction {
		return vs[0].([]GetAppServiceSiteConfigIpRestriction)[vs[1].(int)]
	}).(GetAppServiceSiteConfigIpRestrictionOutput)
}

type GetAppServiceSiteConfigScmIpRestriction struct {
	// Allow or Deny access for this IP range. Defaults to Allow.
	Action string `pulumi:"action"`
	// The IP Address used for this IP Restriction in CIDR notation.
	IpAddress string `pulumi:"ipAddress"`
	// The name of the App Service.
	Name string `pulumi:"name"`
	// The priority for this IP Restriction.
	Priority int `pulumi:"priority"`
	// The Service Tag used for this IP Restriction.
	ServiceTag string `pulumi:"serviceTag"`
	SubnetId   string `pulumi:"subnetId"`
	// The Virtual Network Subnet ID used for this IP Restriction.
	VirtualNetworkSubnetId string `pulumi:"virtualNetworkSubnetId"`
}

// GetAppServiceSiteConfigScmIpRestrictionInput is an input type that accepts GetAppServiceSiteConfigScmIpRestrictionArgs and GetAppServiceSiteConfigScmIpRestrictionOutput values.
// You can construct a concrete instance of `GetAppServiceSiteConfigScmIpRestrictionInput` via:
//
//          GetAppServiceSiteConfigScmIpRestrictionArgs{...}
type GetAppServiceSiteConfigScmIpRestrictionInput interface {
	pulumi.Input

	ToGetAppServiceSiteConfigScmIpRestrictionOutput() GetAppServiceSiteConfigScmIpRestrictionOutput
	ToGetAppServiceSiteConfigScmIpRestrictionOutputWithContext(context.Context) GetAppServiceSiteConfigScmIpRestrictionOutput
}

type GetAppServiceSiteConfigScmIpRestrictionArgs struct {
	// Allow or Deny access for this IP range. Defaults to Allow.
	Action pulumi.StringInput `pulumi:"action"`
	// The IP Address used for this IP Restriction in CIDR notation.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The name of the App Service.
	Name pulumi.StringInput `pulumi:"name"`
	// The priority for this IP Restriction.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The Service Tag used for this IP Restriction.
	ServiceTag pulumi.StringInput `pulumi:"serviceTag"`
	SubnetId   pulumi.StringInput `pulumi:"subnetId"`
	// The Virtual Network Subnet ID used for this IP Restriction.
	VirtualNetworkSubnetId pulumi.StringInput `pulumi:"virtualNetworkSubnetId"`
}

func (GetAppServiceSiteConfigScmIpRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppServiceSiteConfigScmIpRestriction)(nil)).Elem()
}

func (i GetAppServiceSiteConfigScmIpRestrictionArgs) ToGetAppServiceSiteConfigScmIpRestrictionOutput() GetAppServiceSiteConfigScmIpRestrictionOutput {
	return i.ToGetAppServiceSiteConfigScmIpRestrictionOutputWithContext(context.Background())
}

func (i GetAppServiceSiteConfigScmIpRestrictionArgs) ToGetAppServiceSiteConfigScmIpRestrictionOutputWithContext(ctx context.Context) GetAppServiceSiteConfigScmIpRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppServiceSiteConfigScmIpRestrictionOutput)
}

// GetAppServiceSiteConfigScmIpRestrictionArrayInput is an input type that accepts GetAppServiceSiteConfigScmIpRestrictionArray and GetAppServiceSiteConfigScmIpRestrictionArrayOutput values.
// You can construct a concrete instance of `GetAppServiceSiteConfigScmIpRestrictionArrayInput` via:
//
//          GetAppServiceSiteConfigScmIpRestrictionArray{ GetAppServiceSiteConfigScmIpRestrictionArgs{...} }
type GetAppServiceSiteConfigScmIpRestrictionArrayInput interface {
	pulumi.Input

	ToGetAppServiceSiteConfigScmIpRestrictionArrayOutput() GetAppServiceSiteConfigScmIpRestrictionArrayOutput
	ToGetAppServiceSiteConfigScmIpRestrictionArrayOutputWithContext(context.Context) GetAppServiceSiteConfigScmIpRestrictionArrayOutput
}

type GetAppServiceSiteConfigScmIpRestrictionArray []GetAppServiceSiteConfigScmIpRestrictionInput

func (GetAppServiceSiteConfigScmIpRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppServiceSiteConfigScmIpRestriction)(nil)).Elem()
}

func (i GetAppServiceSiteConfigScmIpRestrictionArray) ToGetAppServiceSiteConfigScmIpRestrictionArrayOutput() GetAppServiceSiteConfigScmIpRestrictionArrayOutput {
	return i.ToGetAppServiceSiteConfigScmIpRestrictionArrayOutputWithContext(context.Background())
}

func (i GetAppServiceSiteConfigScmIpRestrictionArray) ToGetAppServiceSiteConfigScmIpRestrictionArrayOutputWithContext(ctx context.Context) GetAppServiceSiteConfigScmIpRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppServiceSiteConfigScmIpRestrictionArrayOutput)
}

type GetAppServiceSiteConfigScmIpRestrictionOutput struct{ *pulumi.OutputState }

func (GetAppServiceSiteConfigScmIpRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppServiceSiteConfigScmIpRestriction)(nil)).Elem()
}

func (o GetAppServiceSiteConfigScmIpRestrictionOutput) ToGetAppServiceSiteConfigScmIpRestrictionOutput() GetAppServiceSiteConfigScmIpRestrictionOutput {
	return o
}

func (o GetAppServiceSiteConfigScmIpRestrictionOutput) ToGetAppServiceSiteConfigScmIpRestrictionOutputWithContext(ctx context.Context) GetAppServiceSiteConfigScmIpRestrictionOutput {
	return o
}

// Allow or Deny access for this IP range. Defaults to Allow.
func (o GetAppServiceSiteConfigScmIpRestrictionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfigScmIpRestriction) string { return v.Action }).(pulumi.StringOutput)
}

// The IP Address used for this IP Restriction in CIDR notation.
func (o GetAppServiceSiteConfigScmIpRestrictionOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfigScmIpRestriction) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The name of the App Service.
func (o GetAppServiceSiteConfigScmIpRestrictionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfigScmIpRestriction) string { return v.Name }).(pulumi.StringOutput)
}

// The priority for this IP Restriction.
func (o GetAppServiceSiteConfigScmIpRestrictionOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfigScmIpRestriction) int { return v.Priority }).(pulumi.IntOutput)
}

// The Service Tag used for this IP Restriction.
func (o GetAppServiceSiteConfigScmIpRestrictionOutput) ServiceTag() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfigScmIpRestriction) string { return v.ServiceTag }).(pulumi.StringOutput)
}

func (o GetAppServiceSiteConfigScmIpRestrictionOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfigScmIpRestriction) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The Virtual Network Subnet ID used for this IP Restriction.
func (o GetAppServiceSiteConfigScmIpRestrictionOutput) VirtualNetworkSubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSiteConfigScmIpRestriction) string { return v.VirtualNetworkSubnetId }).(pulumi.StringOutput)
}

type GetAppServiceSiteConfigScmIpRestrictionArrayOutput struct{ *pulumi.OutputState }

func (GetAppServiceSiteConfigScmIpRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppServiceSiteConfigScmIpRestriction)(nil)).Elem()
}

func (o GetAppServiceSiteConfigScmIpRestrictionArrayOutput) ToGetAppServiceSiteConfigScmIpRestrictionArrayOutput() GetAppServiceSiteConfigScmIpRestrictionArrayOutput {
	return o
}

func (o GetAppServiceSiteConfigScmIpRestrictionArrayOutput) ToGetAppServiceSiteConfigScmIpRestrictionArrayOutputWithContext(ctx context.Context) GetAppServiceSiteConfigScmIpRestrictionArrayOutput {
	return o
}

func (o GetAppServiceSiteConfigScmIpRestrictionArrayOutput) Index(i pulumi.IntInput) GetAppServiceSiteConfigScmIpRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppServiceSiteConfigScmIpRestriction {
		return vs[0].([]GetAppServiceSiteConfigScmIpRestriction)[vs[1].(int)]
	}).(GetAppServiceSiteConfigScmIpRestrictionOutput)
}

type GetAppServiceSiteCredential struct {
	Password string `pulumi:"password"`
	Username string `pulumi:"username"`
}

// GetAppServiceSiteCredentialInput is an input type that accepts GetAppServiceSiteCredentialArgs and GetAppServiceSiteCredentialOutput values.
// You can construct a concrete instance of `GetAppServiceSiteCredentialInput` via:
//
//          GetAppServiceSiteCredentialArgs{...}
type GetAppServiceSiteCredentialInput interface {
	pulumi.Input

	ToGetAppServiceSiteCredentialOutput() GetAppServiceSiteCredentialOutput
	ToGetAppServiceSiteCredentialOutputWithContext(context.Context) GetAppServiceSiteCredentialOutput
}

type GetAppServiceSiteCredentialArgs struct {
	Password pulumi.StringInput `pulumi:"password"`
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetAppServiceSiteCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppServiceSiteCredential)(nil)).Elem()
}

func (i GetAppServiceSiteCredentialArgs) ToGetAppServiceSiteCredentialOutput() GetAppServiceSiteCredentialOutput {
	return i.ToGetAppServiceSiteCredentialOutputWithContext(context.Background())
}

func (i GetAppServiceSiteCredentialArgs) ToGetAppServiceSiteCredentialOutputWithContext(ctx context.Context) GetAppServiceSiteCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppServiceSiteCredentialOutput)
}

// GetAppServiceSiteCredentialArrayInput is an input type that accepts GetAppServiceSiteCredentialArray and GetAppServiceSiteCredentialArrayOutput values.
// You can construct a concrete instance of `GetAppServiceSiteCredentialArrayInput` via:
//
//          GetAppServiceSiteCredentialArray{ GetAppServiceSiteCredentialArgs{...} }
type GetAppServiceSiteCredentialArrayInput interface {
	pulumi.Input

	ToGetAppServiceSiteCredentialArrayOutput() GetAppServiceSiteCredentialArrayOutput
	ToGetAppServiceSiteCredentialArrayOutputWithContext(context.Context) GetAppServiceSiteCredentialArrayOutput
}

type GetAppServiceSiteCredentialArray []GetAppServiceSiteCredentialInput

func (GetAppServiceSiteCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppServiceSiteCredential)(nil)).Elem()
}

func (i GetAppServiceSiteCredentialArray) ToGetAppServiceSiteCredentialArrayOutput() GetAppServiceSiteCredentialArrayOutput {
	return i.ToGetAppServiceSiteCredentialArrayOutputWithContext(context.Background())
}

func (i GetAppServiceSiteCredentialArray) ToGetAppServiceSiteCredentialArrayOutputWithContext(ctx context.Context) GetAppServiceSiteCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppServiceSiteCredentialArrayOutput)
}

type GetAppServiceSiteCredentialOutput struct{ *pulumi.OutputState }

func (GetAppServiceSiteCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppServiceSiteCredential)(nil)).Elem()
}

func (o GetAppServiceSiteCredentialOutput) ToGetAppServiceSiteCredentialOutput() GetAppServiceSiteCredentialOutput {
	return o
}

func (o GetAppServiceSiteCredentialOutput) ToGetAppServiceSiteCredentialOutputWithContext(ctx context.Context) GetAppServiceSiteCredentialOutput {
	return o
}

func (o GetAppServiceSiteCredentialOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSiteCredential) string { return v.Password }).(pulumi.StringOutput)
}

func (o GetAppServiceSiteCredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSiteCredential) string { return v.Username }).(pulumi.StringOutput)
}

type GetAppServiceSiteCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetAppServiceSiteCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppServiceSiteCredential)(nil)).Elem()
}

func (o GetAppServiceSiteCredentialArrayOutput) ToGetAppServiceSiteCredentialArrayOutput() GetAppServiceSiteCredentialArrayOutput {
	return o
}

func (o GetAppServiceSiteCredentialArrayOutput) ToGetAppServiceSiteCredentialArrayOutputWithContext(ctx context.Context) GetAppServiceSiteCredentialArrayOutput {
	return o
}

func (o GetAppServiceSiteCredentialArrayOutput) Index(i pulumi.IntInput) GetAppServiceSiteCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppServiceSiteCredential {
		return vs[0].([]GetAppServiceSiteCredential)[vs[1].(int)]
	}).(GetAppServiceSiteCredentialOutput)
}

type GetAppServiceSourceControl struct {
	// The branch of the remote repository in use.
	Branch string `pulumi:"branch"`
	// Limits to manual integration.
	ManualIntegration bool `pulumi:"manualIntegration"`
	// The URL of the source code repository.
	RepoUrl string `pulumi:"repoUrl"`
	// Is roll-back enabled for the repository.
	RollbackEnabled bool `pulumi:"rollbackEnabled"`
	// Uses Mercurial if `true`, otherwise uses Git.
	UseMercurial bool `pulumi:"useMercurial"`
}

// GetAppServiceSourceControlInput is an input type that accepts GetAppServiceSourceControlArgs and GetAppServiceSourceControlOutput values.
// You can construct a concrete instance of `GetAppServiceSourceControlInput` via:
//
//          GetAppServiceSourceControlArgs{...}
type GetAppServiceSourceControlInput interface {
	pulumi.Input

	ToGetAppServiceSourceControlOutput() GetAppServiceSourceControlOutput
	ToGetAppServiceSourceControlOutputWithContext(context.Context) GetAppServiceSourceControlOutput
}

type GetAppServiceSourceControlArgs struct {
	// The branch of the remote repository in use.
	Branch pulumi.StringInput `pulumi:"branch"`
	// Limits to manual integration.
	ManualIntegration pulumi.BoolInput `pulumi:"manualIntegration"`
	// The URL of the source code repository.
	RepoUrl pulumi.StringInput `pulumi:"repoUrl"`
	// Is roll-back enabled for the repository.
	RollbackEnabled pulumi.BoolInput `pulumi:"rollbackEnabled"`
	// Uses Mercurial if `true`, otherwise uses Git.
	UseMercurial pulumi.BoolInput `pulumi:"useMercurial"`
}

func (GetAppServiceSourceControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppServiceSourceControl)(nil)).Elem()
}

func (i GetAppServiceSourceControlArgs) ToGetAppServiceSourceControlOutput() GetAppServiceSourceControlOutput {
	return i.ToGetAppServiceSourceControlOutputWithContext(context.Background())
}

func (i GetAppServiceSourceControlArgs) ToGetAppServiceSourceControlOutputWithContext(ctx context.Context) GetAppServiceSourceControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppServiceSourceControlOutput)
}

// GetAppServiceSourceControlArrayInput is an input type that accepts GetAppServiceSourceControlArray and GetAppServiceSourceControlArrayOutput values.
// You can construct a concrete instance of `GetAppServiceSourceControlArrayInput` via:
//
//          GetAppServiceSourceControlArray{ GetAppServiceSourceControlArgs{...} }
type GetAppServiceSourceControlArrayInput interface {
	pulumi.Input

	ToGetAppServiceSourceControlArrayOutput() GetAppServiceSourceControlArrayOutput
	ToGetAppServiceSourceControlArrayOutputWithContext(context.Context) GetAppServiceSourceControlArrayOutput
}

type GetAppServiceSourceControlArray []GetAppServiceSourceControlInput

func (GetAppServiceSourceControlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppServiceSourceControl)(nil)).Elem()
}

func (i GetAppServiceSourceControlArray) ToGetAppServiceSourceControlArrayOutput() GetAppServiceSourceControlArrayOutput {
	return i.ToGetAppServiceSourceControlArrayOutputWithContext(context.Background())
}

func (i GetAppServiceSourceControlArray) ToGetAppServiceSourceControlArrayOutputWithContext(ctx context.Context) GetAppServiceSourceControlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppServiceSourceControlArrayOutput)
}

type GetAppServiceSourceControlOutput struct{ *pulumi.OutputState }

func (GetAppServiceSourceControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppServiceSourceControl)(nil)).Elem()
}

func (o GetAppServiceSourceControlOutput) ToGetAppServiceSourceControlOutput() GetAppServiceSourceControlOutput {
	return o
}

func (o GetAppServiceSourceControlOutput) ToGetAppServiceSourceControlOutputWithContext(ctx context.Context) GetAppServiceSourceControlOutput {
	return o
}

// The branch of the remote repository in use.
func (o GetAppServiceSourceControlOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSourceControl) string { return v.Branch }).(pulumi.StringOutput)
}

// Limits to manual integration.
func (o GetAppServiceSourceControlOutput) ManualIntegration() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAppServiceSourceControl) bool { return v.ManualIntegration }).(pulumi.BoolOutput)
}

// The URL of the source code repository.
func (o GetAppServiceSourceControlOutput) RepoUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServiceSourceControl) string { return v.RepoUrl }).(pulumi.StringOutput)
}

// Is roll-back enabled for the repository.
func (o GetAppServiceSourceControlOutput) RollbackEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAppServiceSourceControl) bool { return v.RollbackEnabled }).(pulumi.BoolOutput)
}

// Uses Mercurial if `true`, otherwise uses Git.
func (o GetAppServiceSourceControlOutput) UseMercurial() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAppServiceSourceControl) bool { return v.UseMercurial }).(pulumi.BoolOutput)
}

type GetAppServiceSourceControlArrayOutput struct{ *pulumi.OutputState }

func (GetAppServiceSourceControlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppServiceSourceControl)(nil)).Elem()
}

func (o GetAppServiceSourceControlArrayOutput) ToGetAppServiceSourceControlArrayOutput() GetAppServiceSourceControlArrayOutput {
	return o
}

func (o GetAppServiceSourceControlArrayOutput) ToGetAppServiceSourceControlArrayOutputWithContext(ctx context.Context) GetAppServiceSourceControlArrayOutput {
	return o
}

func (o GetAppServiceSourceControlArrayOutput) Index(i pulumi.IntInput) GetAppServiceSourceControlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppServiceSourceControl {
		return vs[0].([]GetAppServiceSourceControl)[vs[1].(int)]
	}).(GetAppServiceSourceControlOutput)
}

type GetCertificateOrderCertificate struct {
	// The name of the App Service Certificate.
	CertificateName string `pulumi:"certificateName"`
	// Key Vault resource Id.
	KeyVaultId string `pulumi:"keyVaultId"`
	// Key Vault secret name.
	KeyVaultSecretName string `pulumi:"keyVaultSecretName"`
	// Status of the Key Vault secret.
	ProvisioningState string `pulumi:"provisioningState"`
}

// GetCertificateOrderCertificateInput is an input type that accepts GetCertificateOrderCertificateArgs and GetCertificateOrderCertificateOutput values.
// You can construct a concrete instance of `GetCertificateOrderCertificateInput` via:
//
//          GetCertificateOrderCertificateArgs{...}
type GetCertificateOrderCertificateInput interface {
	pulumi.Input

	ToGetCertificateOrderCertificateOutput() GetCertificateOrderCertificateOutput
	ToGetCertificateOrderCertificateOutputWithContext(context.Context) GetCertificateOrderCertificateOutput
}

type GetCertificateOrderCertificateArgs struct {
	// The name of the App Service Certificate.
	CertificateName pulumi.StringInput `pulumi:"certificateName"`
	// Key Vault resource Id.
	KeyVaultId pulumi.StringInput `pulumi:"keyVaultId"`
	// Key Vault secret name.
	KeyVaultSecretName pulumi.StringInput `pulumi:"keyVaultSecretName"`
	// Status of the Key Vault secret.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (GetCertificateOrderCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateOrderCertificate)(nil)).Elem()
}

func (i GetCertificateOrderCertificateArgs) ToGetCertificateOrderCertificateOutput() GetCertificateOrderCertificateOutput {
	return i.ToGetCertificateOrderCertificateOutputWithContext(context.Background())
}

func (i GetCertificateOrderCertificateArgs) ToGetCertificateOrderCertificateOutputWithContext(ctx context.Context) GetCertificateOrderCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateOrderCertificateOutput)
}

// GetCertificateOrderCertificateArrayInput is an input type that accepts GetCertificateOrderCertificateArray and GetCertificateOrderCertificateArrayOutput values.
// You can construct a concrete instance of `GetCertificateOrderCertificateArrayInput` via:
//
//          GetCertificateOrderCertificateArray{ GetCertificateOrderCertificateArgs{...} }
type GetCertificateOrderCertificateArrayInput interface {
	pulumi.Input

	ToGetCertificateOrderCertificateArrayOutput() GetCertificateOrderCertificateArrayOutput
	ToGetCertificateOrderCertificateArrayOutputWithContext(context.Context) GetCertificateOrderCertificateArrayOutput
}

type GetCertificateOrderCertificateArray []GetCertificateOrderCertificateInput

func (GetCertificateOrderCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateOrderCertificate)(nil)).Elem()
}

func (i GetCertificateOrderCertificateArray) ToGetCertificateOrderCertificateArrayOutput() GetCertificateOrderCertificateArrayOutput {
	return i.ToGetCertificateOrderCertificateArrayOutputWithContext(context.Background())
}

func (i GetCertificateOrderCertificateArray) ToGetCertificateOrderCertificateArrayOutputWithContext(ctx context.Context) GetCertificateOrderCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateOrderCertificateArrayOutput)
}

type GetCertificateOrderCertificateOutput struct{ *pulumi.OutputState }

func (GetCertificateOrderCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateOrderCertificate)(nil)).Elem()
}

func (o GetCertificateOrderCertificateOutput) ToGetCertificateOrderCertificateOutput() GetCertificateOrderCertificateOutput {
	return o
}

func (o GetCertificateOrderCertificateOutput) ToGetCertificateOrderCertificateOutputWithContext(ctx context.Context) GetCertificateOrderCertificateOutput {
	return o
}

// The name of the App Service Certificate.
func (o GetCertificateOrderCertificateOutput) CertificateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateOrderCertificate) string { return v.CertificateName }).(pulumi.StringOutput)
}

// Key Vault resource Id.
func (o GetCertificateOrderCertificateOutput) KeyVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateOrderCertificate) string { return v.KeyVaultId }).(pulumi.StringOutput)
}

// Key Vault secret name.
func (o GetCertificateOrderCertificateOutput) KeyVaultSecretName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateOrderCertificate) string { return v.KeyVaultSecretName }).(pulumi.StringOutput)
}

// Status of the Key Vault secret.
func (o GetCertificateOrderCertificateOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateOrderCertificate) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type GetCertificateOrderCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetCertificateOrderCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificateOrderCertificate)(nil)).Elem()
}

func (o GetCertificateOrderCertificateArrayOutput) ToGetCertificateOrderCertificateArrayOutput() GetCertificateOrderCertificateArrayOutput {
	return o
}

func (o GetCertificateOrderCertificateArrayOutput) ToGetCertificateOrderCertificateArrayOutputWithContext(ctx context.Context) GetCertificateOrderCertificateArrayOutput {
	return o
}

func (o GetCertificateOrderCertificateArrayOutput) Index(i pulumi.IntInput) GetCertificateOrderCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificateOrderCertificate {
		return vs[0].([]GetCertificateOrderCertificate)[vs[1].(int)]
	}).(GetCertificateOrderCertificateOutput)
}

type GetFunctionAppConnectionString struct {
	// The name of the Function App resource.
	Name string `pulumi:"name"`
	// The identity type of the Managed Identity assigned to the function app.
	Type string `pulumi:"type"`
	// The value for the Connection String.
	Value string `pulumi:"value"`
}

// GetFunctionAppConnectionStringInput is an input type that accepts GetFunctionAppConnectionStringArgs and GetFunctionAppConnectionStringOutput values.
// You can construct a concrete instance of `GetFunctionAppConnectionStringInput` via:
//
//          GetFunctionAppConnectionStringArgs{...}
type GetFunctionAppConnectionStringInput interface {
	pulumi.Input

	ToGetFunctionAppConnectionStringOutput() GetFunctionAppConnectionStringOutput
	ToGetFunctionAppConnectionStringOutputWithContext(context.Context) GetFunctionAppConnectionStringOutput
}

type GetFunctionAppConnectionStringArgs struct {
	// The name of the Function App resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The identity type of the Managed Identity assigned to the function app.
	Type pulumi.StringInput `pulumi:"type"`
	// The value for the Connection String.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetFunctionAppConnectionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionAppConnectionString)(nil)).Elem()
}

func (i GetFunctionAppConnectionStringArgs) ToGetFunctionAppConnectionStringOutput() GetFunctionAppConnectionStringOutput {
	return i.ToGetFunctionAppConnectionStringOutputWithContext(context.Background())
}

func (i GetFunctionAppConnectionStringArgs) ToGetFunctionAppConnectionStringOutputWithContext(ctx context.Context) GetFunctionAppConnectionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionAppConnectionStringOutput)
}

// GetFunctionAppConnectionStringArrayInput is an input type that accepts GetFunctionAppConnectionStringArray and GetFunctionAppConnectionStringArrayOutput values.
// You can construct a concrete instance of `GetFunctionAppConnectionStringArrayInput` via:
//
//          GetFunctionAppConnectionStringArray{ GetFunctionAppConnectionStringArgs{...} }
type GetFunctionAppConnectionStringArrayInput interface {
	pulumi.Input

	ToGetFunctionAppConnectionStringArrayOutput() GetFunctionAppConnectionStringArrayOutput
	ToGetFunctionAppConnectionStringArrayOutputWithContext(context.Context) GetFunctionAppConnectionStringArrayOutput
}

type GetFunctionAppConnectionStringArray []GetFunctionAppConnectionStringInput

func (GetFunctionAppConnectionStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionAppConnectionString)(nil)).Elem()
}

func (i GetFunctionAppConnectionStringArray) ToGetFunctionAppConnectionStringArrayOutput() GetFunctionAppConnectionStringArrayOutput {
	return i.ToGetFunctionAppConnectionStringArrayOutputWithContext(context.Background())
}

func (i GetFunctionAppConnectionStringArray) ToGetFunctionAppConnectionStringArrayOutputWithContext(ctx context.Context) GetFunctionAppConnectionStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionAppConnectionStringArrayOutput)
}

type GetFunctionAppConnectionStringOutput struct{ *pulumi.OutputState }

func (GetFunctionAppConnectionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionAppConnectionString)(nil)).Elem()
}

func (o GetFunctionAppConnectionStringOutput) ToGetFunctionAppConnectionStringOutput() GetFunctionAppConnectionStringOutput {
	return o
}

func (o GetFunctionAppConnectionStringOutput) ToGetFunctionAppConnectionStringOutputWithContext(ctx context.Context) GetFunctionAppConnectionStringOutput {
	return o
}

// The name of the Function App resource.
func (o GetFunctionAppConnectionStringOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAppConnectionString) string { return v.Name }).(pulumi.StringOutput)
}

// The identity type of the Managed Identity assigned to the function app.
func (o GetFunctionAppConnectionStringOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAppConnectionString) string { return v.Type }).(pulumi.StringOutput)
}

// The value for the Connection String.
func (o GetFunctionAppConnectionStringOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAppConnectionString) string { return v.Value }).(pulumi.StringOutput)
}

type GetFunctionAppConnectionStringArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionAppConnectionStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionAppConnectionString)(nil)).Elem()
}

func (o GetFunctionAppConnectionStringArrayOutput) ToGetFunctionAppConnectionStringArrayOutput() GetFunctionAppConnectionStringArrayOutput {
	return o
}

func (o GetFunctionAppConnectionStringArrayOutput) ToGetFunctionAppConnectionStringArrayOutputWithContext(ctx context.Context) GetFunctionAppConnectionStringArrayOutput {
	return o
}

func (o GetFunctionAppConnectionStringArrayOutput) Index(i pulumi.IntInput) GetFunctionAppConnectionStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionAppConnectionString {
		return vs[0].([]GetFunctionAppConnectionString)[vs[1].(int)]
	}).(GetFunctionAppConnectionStringOutput)
}

type GetFunctionAppIdentity struct {
	// The ID of the System Managed Service Principal assigned to the function app.
	PrincipalId string `pulumi:"principalId"`
	// The ID of the Tenant of the System Managed Service Principal assigned to the function app.
	TenantId string `pulumi:"tenantId"`
	// The identity type of the Managed Identity assigned to the function app.
	Type string `pulumi:"type"`
}

// GetFunctionAppIdentityInput is an input type that accepts GetFunctionAppIdentityArgs and GetFunctionAppIdentityOutput values.
// You can construct a concrete instance of `GetFunctionAppIdentityInput` via:
//
//          GetFunctionAppIdentityArgs{...}
type GetFunctionAppIdentityInput interface {
	pulumi.Input

	ToGetFunctionAppIdentityOutput() GetFunctionAppIdentityOutput
	ToGetFunctionAppIdentityOutputWithContext(context.Context) GetFunctionAppIdentityOutput
}

type GetFunctionAppIdentityArgs struct {
	// The ID of the System Managed Service Principal assigned to the function app.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The ID of the Tenant of the System Managed Service Principal assigned to the function app.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The identity type of the Managed Identity assigned to the function app.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetFunctionAppIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionAppIdentity)(nil)).Elem()
}

func (i GetFunctionAppIdentityArgs) ToGetFunctionAppIdentityOutput() GetFunctionAppIdentityOutput {
	return i.ToGetFunctionAppIdentityOutputWithContext(context.Background())
}

func (i GetFunctionAppIdentityArgs) ToGetFunctionAppIdentityOutputWithContext(ctx context.Context) GetFunctionAppIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionAppIdentityOutput)
}

// GetFunctionAppIdentityArrayInput is an input type that accepts GetFunctionAppIdentityArray and GetFunctionAppIdentityArrayOutput values.
// You can construct a concrete instance of `GetFunctionAppIdentityArrayInput` via:
//
//          GetFunctionAppIdentityArray{ GetFunctionAppIdentityArgs{...} }
type GetFunctionAppIdentityArrayInput interface {
	pulumi.Input

	ToGetFunctionAppIdentityArrayOutput() GetFunctionAppIdentityArrayOutput
	ToGetFunctionAppIdentityArrayOutputWithContext(context.Context) GetFunctionAppIdentityArrayOutput
}

type GetFunctionAppIdentityArray []GetFunctionAppIdentityInput

func (GetFunctionAppIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionAppIdentity)(nil)).Elem()
}

func (i GetFunctionAppIdentityArray) ToGetFunctionAppIdentityArrayOutput() GetFunctionAppIdentityArrayOutput {
	return i.ToGetFunctionAppIdentityArrayOutputWithContext(context.Background())
}

func (i GetFunctionAppIdentityArray) ToGetFunctionAppIdentityArrayOutputWithContext(ctx context.Context) GetFunctionAppIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionAppIdentityArrayOutput)
}

type GetFunctionAppIdentityOutput struct{ *pulumi.OutputState }

func (GetFunctionAppIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionAppIdentity)(nil)).Elem()
}

func (o GetFunctionAppIdentityOutput) ToGetFunctionAppIdentityOutput() GetFunctionAppIdentityOutput {
	return o
}

func (o GetFunctionAppIdentityOutput) ToGetFunctionAppIdentityOutputWithContext(ctx context.Context) GetFunctionAppIdentityOutput {
	return o
}

// The ID of the System Managed Service Principal assigned to the function app.
func (o GetFunctionAppIdentityOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAppIdentity) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The ID of the Tenant of the System Managed Service Principal assigned to the function app.
func (o GetFunctionAppIdentityOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAppIdentity) string { return v.TenantId }).(pulumi.StringOutput)
}

// The identity type of the Managed Identity assigned to the function app.
func (o GetFunctionAppIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAppIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type GetFunctionAppIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionAppIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionAppIdentity)(nil)).Elem()
}

func (o GetFunctionAppIdentityArrayOutput) ToGetFunctionAppIdentityArrayOutput() GetFunctionAppIdentityArrayOutput {
	return o
}

func (o GetFunctionAppIdentityArrayOutput) ToGetFunctionAppIdentityArrayOutputWithContext(ctx context.Context) GetFunctionAppIdentityArrayOutput {
	return o
}

func (o GetFunctionAppIdentityArrayOutput) Index(i pulumi.IntInput) GetFunctionAppIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionAppIdentity {
		return vs[0].([]GetFunctionAppIdentity)[vs[1].(int)]
	}).(GetFunctionAppIdentityOutput)
}

type GetFunctionAppSiteConfig struct {
	// Is the app loaded at all times?
	AlwaysOn         bool   `pulumi:"alwaysOn"`
	AutoSwapSlotName string `pulumi:"autoSwapSlotName"`
	// A `cors` block as defined above.
	Cors GetFunctionAppSiteConfigCors `pulumi:"cors"`
	// State of FTP / FTPS service for this AppService.
	FtpsState       string `pulumi:"ftpsState"`
	HealthCheckPath string `pulumi:"healthCheckPath"`
	// Is HTTP2 Enabled on this App Service?
	Http2Enabled bool `pulumi:"http2Enabled"`
	// One or more `ipRestriction` blocks as defined above.
	IpRestrictions []GetFunctionAppSiteConfigIpRestriction `pulumi:"ipRestrictions"`
	// Linux App Framework and version for the AppService.
	LinuxFxVersion string `pulumi:"linuxFxVersion"`
	// The minimum supported TLS version for this App Service.
	MinTlsVersion string `pulumi:"minTlsVersion"`
	// The number of pre-warmed instances for this function app. Only applicable to apps on the Premium plan.
	PreWarmedInstanceCount int `pulumi:"preWarmedInstanceCount"`
	// One or more `scmIpRestriction` blocks as defined above.
	ScmIpRestrictions []GetFunctionAppSiteConfigScmIpRestriction `pulumi:"scmIpRestrictions"`
	// The type of Source Control enabled for this App Service.
	ScmType string `pulumi:"scmType"`
	// IP security restrictions for scm to use main.
	ScmUseMainIpRestriction bool `pulumi:"scmUseMainIpRestriction"`
	// Does the App Service run in 32 bit mode, rather than 64 bit mode?
	Use32BitWorkerProcess bool `pulumi:"use32BitWorkerProcess"`
	// Are WebSockets enabled for this App Service?
	WebsocketsEnabled bool `pulumi:"websocketsEnabled"`
}

// GetFunctionAppSiteConfigInput is an input type that accepts GetFunctionAppSiteConfigArgs and GetFunctionAppSiteConfigOutput values.
// You can construct a concrete instance of `GetFunctionAppSiteConfigInput` via:
//
//          GetFunctionAppSiteConfigArgs{...}
type GetFunctionAppSiteConfigInput interface {
	pulumi.Input

	ToGetFunctionAppSiteConfigOutput() GetFunctionAppSiteConfigOutput
	ToGetFunctionAppSiteConfigOutputWithContext(context.Context) GetFunctionAppSiteConfigOutput
}

type GetFunctionAppSiteConfigArgs struct {
	// Is the app loaded at all times?
	AlwaysOn         pulumi.BoolInput   `pulumi:"alwaysOn"`
	AutoSwapSlotName pulumi.StringInput `pulumi:"autoSwapSlotName"`
	// A `cors` block as defined above.
	Cors GetFunctionAppSiteConfigCorsInput `pulumi:"cors"`
	// State of FTP / FTPS service for this AppService.
	FtpsState       pulumi.StringInput `pulumi:"ftpsState"`
	HealthCheckPath pulumi.StringInput `pulumi:"healthCheckPath"`
	// Is HTTP2 Enabled on this App Service?
	Http2Enabled pulumi.BoolInput `pulumi:"http2Enabled"`
	// One or more `ipRestriction` blocks as defined above.
	IpRestrictions GetFunctionAppSiteConfigIpRestrictionArrayInput `pulumi:"ipRestrictions"`
	// Linux App Framework and version for the AppService.
	LinuxFxVersion pulumi.StringInput `pulumi:"linuxFxVersion"`
	// The minimum supported TLS version for this App Service.
	MinTlsVersion pulumi.StringInput `pulumi:"minTlsVersion"`
	// The number of pre-warmed instances for this function app. Only applicable to apps on the Premium plan.
	PreWarmedInstanceCount pulumi.IntInput `pulumi:"preWarmedInstanceCount"`
	// One or more `scmIpRestriction` blocks as defined above.
	ScmIpRestrictions GetFunctionAppSiteConfigScmIpRestrictionArrayInput `pulumi:"scmIpRestrictions"`
	// The type of Source Control enabled for this App Service.
	ScmType pulumi.StringInput `pulumi:"scmType"`
	// IP security restrictions for scm to use main.
	ScmUseMainIpRestriction pulumi.BoolInput `pulumi:"scmUseMainIpRestriction"`
	// Does the App Service run in 32 bit mode, rather than 64 bit mode?
	Use32BitWorkerProcess pulumi.BoolInput `pulumi:"use32BitWorkerProcess"`
	// Are WebSockets enabled for this App Service?
	WebsocketsEnabled pulumi.BoolInput `pulumi:"websocketsEnabled"`
}

func (GetFunctionAppSiteConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionAppSiteConfig)(nil)).Elem()
}

func (i GetFunctionAppSiteConfigArgs) ToGetFunctionAppSiteConfigOutput() GetFunctionAppSiteConfigOutput {
	return i.ToGetFunctionAppSiteConfigOutputWithContext(context.Background())
}

func (i GetFunctionAppSiteConfigArgs) ToGetFunctionAppSiteConfigOutputWithContext(ctx context.Context) GetFunctionAppSiteConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionAppSiteConfigOutput)
}

// GetFunctionAppSiteConfigArrayInput is an input type that accepts GetFunctionAppSiteConfigArray and GetFunctionAppSiteConfigArrayOutput values.
// You can construct a concrete instance of `GetFunctionAppSiteConfigArrayInput` via:
//
//          GetFunctionAppSiteConfigArray{ GetFunctionAppSiteConfigArgs{...} }
type GetFunctionAppSiteConfigArrayInput interface {
	pulumi.Input

	ToGetFunctionAppSiteConfigArrayOutput() GetFunctionAppSiteConfigArrayOutput
	ToGetFunctionAppSiteConfigArrayOutputWithContext(context.Context) GetFunctionAppSiteConfigArrayOutput
}

type GetFunctionAppSiteConfigArray []GetFunctionAppSiteConfigInput

func (GetFunctionAppSiteConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionAppSiteConfig)(nil)).Elem()
}

func (i GetFunctionAppSiteConfigArray) ToGetFunctionAppSiteConfigArrayOutput() GetFunctionAppSiteConfigArrayOutput {
	return i.ToGetFunctionAppSiteConfigArrayOutputWithContext(context.Background())
}

func (i GetFunctionAppSiteConfigArray) ToGetFunctionAppSiteConfigArrayOutputWithContext(ctx context.Context) GetFunctionAppSiteConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionAppSiteConfigArrayOutput)
}

type GetFunctionAppSiteConfigOutput struct{ *pulumi.OutputState }

func (GetFunctionAppSiteConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionAppSiteConfig)(nil)).Elem()
}

func (o GetFunctionAppSiteConfigOutput) ToGetFunctionAppSiteConfigOutput() GetFunctionAppSiteConfigOutput {
	return o
}

func (o GetFunctionAppSiteConfigOutput) ToGetFunctionAppSiteConfigOutputWithContext(ctx context.Context) GetFunctionAppSiteConfigOutput {
	return o
}

// Is the app loaded at all times?
func (o GetFunctionAppSiteConfigOutput) AlwaysOn() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfig) bool { return v.AlwaysOn }).(pulumi.BoolOutput)
}

func (o GetFunctionAppSiteConfigOutput) AutoSwapSlotName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfig) string { return v.AutoSwapSlotName }).(pulumi.StringOutput)
}

// A `cors` block as defined above.
func (o GetFunctionAppSiteConfigOutput) Cors() GetFunctionAppSiteConfigCorsOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfig) GetFunctionAppSiteConfigCors { return v.Cors }).(GetFunctionAppSiteConfigCorsOutput)
}

// State of FTP / FTPS service for this AppService.
func (o GetFunctionAppSiteConfigOutput) FtpsState() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfig) string { return v.FtpsState }).(pulumi.StringOutput)
}

func (o GetFunctionAppSiteConfigOutput) HealthCheckPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfig) string { return v.HealthCheckPath }).(pulumi.StringOutput)
}

// Is HTTP2 Enabled on this App Service?
func (o GetFunctionAppSiteConfigOutput) Http2Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfig) bool { return v.Http2Enabled }).(pulumi.BoolOutput)
}

// One or more `ipRestriction` blocks as defined above.
func (o GetFunctionAppSiteConfigOutput) IpRestrictions() GetFunctionAppSiteConfigIpRestrictionArrayOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfig) []GetFunctionAppSiteConfigIpRestriction { return v.IpRestrictions }).(GetFunctionAppSiteConfigIpRestrictionArrayOutput)
}

// Linux App Framework and version for the AppService.
func (o GetFunctionAppSiteConfigOutput) LinuxFxVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfig) string { return v.LinuxFxVersion }).(pulumi.StringOutput)
}

// The minimum supported TLS version for this App Service.
func (o GetFunctionAppSiteConfigOutput) MinTlsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfig) string { return v.MinTlsVersion }).(pulumi.StringOutput)
}

// The number of pre-warmed instances for this function app. Only applicable to apps on the Premium plan.
func (o GetFunctionAppSiteConfigOutput) PreWarmedInstanceCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfig) int { return v.PreWarmedInstanceCount }).(pulumi.IntOutput)
}

// One or more `scmIpRestriction` blocks as defined above.
func (o GetFunctionAppSiteConfigOutput) ScmIpRestrictions() GetFunctionAppSiteConfigScmIpRestrictionArrayOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfig) []GetFunctionAppSiteConfigScmIpRestriction {
		return v.ScmIpRestrictions
	}).(GetFunctionAppSiteConfigScmIpRestrictionArrayOutput)
}

// The type of Source Control enabled for this App Service.
func (o GetFunctionAppSiteConfigOutput) ScmType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfig) string { return v.ScmType }).(pulumi.StringOutput)
}

// IP security restrictions for scm to use main.
func (o GetFunctionAppSiteConfigOutput) ScmUseMainIpRestriction() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfig) bool { return v.ScmUseMainIpRestriction }).(pulumi.BoolOutput)
}

// Does the App Service run in 32 bit mode, rather than 64 bit mode?
func (o GetFunctionAppSiteConfigOutput) Use32BitWorkerProcess() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfig) bool { return v.Use32BitWorkerProcess }).(pulumi.BoolOutput)
}

// Are WebSockets enabled for this App Service?
func (o GetFunctionAppSiteConfigOutput) WebsocketsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfig) bool { return v.WebsocketsEnabled }).(pulumi.BoolOutput)
}

type GetFunctionAppSiteConfigArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionAppSiteConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionAppSiteConfig)(nil)).Elem()
}

func (o GetFunctionAppSiteConfigArrayOutput) ToGetFunctionAppSiteConfigArrayOutput() GetFunctionAppSiteConfigArrayOutput {
	return o
}

func (o GetFunctionAppSiteConfigArrayOutput) ToGetFunctionAppSiteConfigArrayOutputWithContext(ctx context.Context) GetFunctionAppSiteConfigArrayOutput {
	return o
}

func (o GetFunctionAppSiteConfigArrayOutput) Index(i pulumi.IntInput) GetFunctionAppSiteConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionAppSiteConfig {
		return vs[0].([]GetFunctionAppSiteConfig)[vs[1].(int)]
	}).(GetFunctionAppSiteConfigOutput)
}

type GetFunctionAppSiteConfigCors struct {
	AllowedOrigins     []string `pulumi:"allowedOrigins"`
	SupportCredentials *bool    `pulumi:"supportCredentials"`
}

// GetFunctionAppSiteConfigCorsInput is an input type that accepts GetFunctionAppSiteConfigCorsArgs and GetFunctionAppSiteConfigCorsOutput values.
// You can construct a concrete instance of `GetFunctionAppSiteConfigCorsInput` via:
//
//          GetFunctionAppSiteConfigCorsArgs{...}
type GetFunctionAppSiteConfigCorsInput interface {
	pulumi.Input

	ToGetFunctionAppSiteConfigCorsOutput() GetFunctionAppSiteConfigCorsOutput
	ToGetFunctionAppSiteConfigCorsOutputWithContext(context.Context) GetFunctionAppSiteConfigCorsOutput
}

type GetFunctionAppSiteConfigCorsArgs struct {
	AllowedOrigins     pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	SupportCredentials pulumi.BoolPtrInput     `pulumi:"supportCredentials"`
}

func (GetFunctionAppSiteConfigCorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionAppSiteConfigCors)(nil)).Elem()
}

func (i GetFunctionAppSiteConfigCorsArgs) ToGetFunctionAppSiteConfigCorsOutput() GetFunctionAppSiteConfigCorsOutput {
	return i.ToGetFunctionAppSiteConfigCorsOutputWithContext(context.Background())
}

func (i GetFunctionAppSiteConfigCorsArgs) ToGetFunctionAppSiteConfigCorsOutputWithContext(ctx context.Context) GetFunctionAppSiteConfigCorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionAppSiteConfigCorsOutput)
}

type GetFunctionAppSiteConfigCorsOutput struct{ *pulumi.OutputState }

func (GetFunctionAppSiteConfigCorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionAppSiteConfigCors)(nil)).Elem()
}

func (o GetFunctionAppSiteConfigCorsOutput) ToGetFunctionAppSiteConfigCorsOutput() GetFunctionAppSiteConfigCorsOutput {
	return o
}

func (o GetFunctionAppSiteConfigCorsOutput) ToGetFunctionAppSiteConfigCorsOutputWithContext(ctx context.Context) GetFunctionAppSiteConfigCorsOutput {
	return o
}

func (o GetFunctionAppSiteConfigCorsOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfigCors) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

func (o GetFunctionAppSiteConfigCorsOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfigCors) *bool { return v.SupportCredentials }).(pulumi.BoolPtrOutput)
}

type GetFunctionAppSiteConfigIpRestriction struct {
	// Allow or Deny access for this IP range. Defaults to Allow.
	Action string `pulumi:"action"`
	// The IP Address used for this IP Restriction in CIDR notation.
	IpAddress string `pulumi:"ipAddress"`
	// The name of the Function App resource.
	Name string `pulumi:"name"`
	// The priority for this IP Restriction.
	Priority int `pulumi:"priority"`
	// The Service Tag used for this IP Restriction.
	ServiceTag string `pulumi:"serviceTag"`
	SubnetId   string `pulumi:"subnetId"`
	// The Virtual Network Subnet ID used for this IP Restriction.
	VirtualNetworkSubnetId string `pulumi:"virtualNetworkSubnetId"`
}

// GetFunctionAppSiteConfigIpRestrictionInput is an input type that accepts GetFunctionAppSiteConfigIpRestrictionArgs and GetFunctionAppSiteConfigIpRestrictionOutput values.
// You can construct a concrete instance of `GetFunctionAppSiteConfigIpRestrictionInput` via:
//
//          GetFunctionAppSiteConfigIpRestrictionArgs{...}
type GetFunctionAppSiteConfigIpRestrictionInput interface {
	pulumi.Input

	ToGetFunctionAppSiteConfigIpRestrictionOutput() GetFunctionAppSiteConfigIpRestrictionOutput
	ToGetFunctionAppSiteConfigIpRestrictionOutputWithContext(context.Context) GetFunctionAppSiteConfigIpRestrictionOutput
}

type GetFunctionAppSiteConfigIpRestrictionArgs struct {
	// Allow or Deny access for this IP range. Defaults to Allow.
	Action pulumi.StringInput `pulumi:"action"`
	// The IP Address used for this IP Restriction in CIDR notation.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The name of the Function App resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The priority for this IP Restriction.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The Service Tag used for this IP Restriction.
	ServiceTag pulumi.StringInput `pulumi:"serviceTag"`
	SubnetId   pulumi.StringInput `pulumi:"subnetId"`
	// The Virtual Network Subnet ID used for this IP Restriction.
	VirtualNetworkSubnetId pulumi.StringInput `pulumi:"virtualNetworkSubnetId"`
}

func (GetFunctionAppSiteConfigIpRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionAppSiteConfigIpRestriction)(nil)).Elem()
}

func (i GetFunctionAppSiteConfigIpRestrictionArgs) ToGetFunctionAppSiteConfigIpRestrictionOutput() GetFunctionAppSiteConfigIpRestrictionOutput {
	return i.ToGetFunctionAppSiteConfigIpRestrictionOutputWithContext(context.Background())
}

func (i GetFunctionAppSiteConfigIpRestrictionArgs) ToGetFunctionAppSiteConfigIpRestrictionOutputWithContext(ctx context.Context) GetFunctionAppSiteConfigIpRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionAppSiteConfigIpRestrictionOutput)
}

// GetFunctionAppSiteConfigIpRestrictionArrayInput is an input type that accepts GetFunctionAppSiteConfigIpRestrictionArray and GetFunctionAppSiteConfigIpRestrictionArrayOutput values.
// You can construct a concrete instance of `GetFunctionAppSiteConfigIpRestrictionArrayInput` via:
//
//          GetFunctionAppSiteConfigIpRestrictionArray{ GetFunctionAppSiteConfigIpRestrictionArgs{...} }
type GetFunctionAppSiteConfigIpRestrictionArrayInput interface {
	pulumi.Input

	ToGetFunctionAppSiteConfigIpRestrictionArrayOutput() GetFunctionAppSiteConfigIpRestrictionArrayOutput
	ToGetFunctionAppSiteConfigIpRestrictionArrayOutputWithContext(context.Context) GetFunctionAppSiteConfigIpRestrictionArrayOutput
}

type GetFunctionAppSiteConfigIpRestrictionArray []GetFunctionAppSiteConfigIpRestrictionInput

func (GetFunctionAppSiteConfigIpRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionAppSiteConfigIpRestriction)(nil)).Elem()
}

func (i GetFunctionAppSiteConfigIpRestrictionArray) ToGetFunctionAppSiteConfigIpRestrictionArrayOutput() GetFunctionAppSiteConfigIpRestrictionArrayOutput {
	return i.ToGetFunctionAppSiteConfigIpRestrictionArrayOutputWithContext(context.Background())
}

func (i GetFunctionAppSiteConfigIpRestrictionArray) ToGetFunctionAppSiteConfigIpRestrictionArrayOutputWithContext(ctx context.Context) GetFunctionAppSiteConfigIpRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionAppSiteConfigIpRestrictionArrayOutput)
}

type GetFunctionAppSiteConfigIpRestrictionOutput struct{ *pulumi.OutputState }

func (GetFunctionAppSiteConfigIpRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionAppSiteConfigIpRestriction)(nil)).Elem()
}

func (o GetFunctionAppSiteConfigIpRestrictionOutput) ToGetFunctionAppSiteConfigIpRestrictionOutput() GetFunctionAppSiteConfigIpRestrictionOutput {
	return o
}

func (o GetFunctionAppSiteConfigIpRestrictionOutput) ToGetFunctionAppSiteConfigIpRestrictionOutputWithContext(ctx context.Context) GetFunctionAppSiteConfigIpRestrictionOutput {
	return o
}

// Allow or Deny access for this IP range. Defaults to Allow.
func (o GetFunctionAppSiteConfigIpRestrictionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfigIpRestriction) string { return v.Action }).(pulumi.StringOutput)
}

// The IP Address used for this IP Restriction in CIDR notation.
func (o GetFunctionAppSiteConfigIpRestrictionOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfigIpRestriction) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The name of the Function App resource.
func (o GetFunctionAppSiteConfigIpRestrictionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfigIpRestriction) string { return v.Name }).(pulumi.StringOutput)
}

// The priority for this IP Restriction.
func (o GetFunctionAppSiteConfigIpRestrictionOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfigIpRestriction) int { return v.Priority }).(pulumi.IntOutput)
}

// The Service Tag used for this IP Restriction.
func (o GetFunctionAppSiteConfigIpRestrictionOutput) ServiceTag() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfigIpRestriction) string { return v.ServiceTag }).(pulumi.StringOutput)
}

func (o GetFunctionAppSiteConfigIpRestrictionOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfigIpRestriction) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The Virtual Network Subnet ID used for this IP Restriction.
func (o GetFunctionAppSiteConfigIpRestrictionOutput) VirtualNetworkSubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfigIpRestriction) string { return v.VirtualNetworkSubnetId }).(pulumi.StringOutput)
}

type GetFunctionAppSiteConfigIpRestrictionArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionAppSiteConfigIpRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionAppSiteConfigIpRestriction)(nil)).Elem()
}

func (o GetFunctionAppSiteConfigIpRestrictionArrayOutput) ToGetFunctionAppSiteConfigIpRestrictionArrayOutput() GetFunctionAppSiteConfigIpRestrictionArrayOutput {
	return o
}

func (o GetFunctionAppSiteConfigIpRestrictionArrayOutput) ToGetFunctionAppSiteConfigIpRestrictionArrayOutputWithContext(ctx context.Context) GetFunctionAppSiteConfigIpRestrictionArrayOutput {
	return o
}

func (o GetFunctionAppSiteConfigIpRestrictionArrayOutput) Index(i pulumi.IntInput) GetFunctionAppSiteConfigIpRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionAppSiteConfigIpRestriction {
		return vs[0].([]GetFunctionAppSiteConfigIpRestriction)[vs[1].(int)]
	}).(GetFunctionAppSiteConfigIpRestrictionOutput)
}

type GetFunctionAppSiteConfigScmIpRestriction struct {
	// Allow or Deny access for this IP range. Defaults to Allow.
	Action string `pulumi:"action"`
	// The IP Address used for this IP Restriction in CIDR notation.
	IpAddress string `pulumi:"ipAddress"`
	// The name of the Function App resource.
	Name string `pulumi:"name"`
	// The priority for this IP Restriction.
	Priority int `pulumi:"priority"`
	// The Service Tag used for this IP Restriction.
	ServiceTag string `pulumi:"serviceTag"`
	SubnetId   string `pulumi:"subnetId"`
	// The Virtual Network Subnet ID used for this IP Restriction.
	VirtualNetworkSubnetId string `pulumi:"virtualNetworkSubnetId"`
}

// GetFunctionAppSiteConfigScmIpRestrictionInput is an input type that accepts GetFunctionAppSiteConfigScmIpRestrictionArgs and GetFunctionAppSiteConfigScmIpRestrictionOutput values.
// You can construct a concrete instance of `GetFunctionAppSiteConfigScmIpRestrictionInput` via:
//
//          GetFunctionAppSiteConfigScmIpRestrictionArgs{...}
type GetFunctionAppSiteConfigScmIpRestrictionInput interface {
	pulumi.Input

	ToGetFunctionAppSiteConfigScmIpRestrictionOutput() GetFunctionAppSiteConfigScmIpRestrictionOutput
	ToGetFunctionAppSiteConfigScmIpRestrictionOutputWithContext(context.Context) GetFunctionAppSiteConfigScmIpRestrictionOutput
}

type GetFunctionAppSiteConfigScmIpRestrictionArgs struct {
	// Allow or Deny access for this IP range. Defaults to Allow.
	Action pulumi.StringInput `pulumi:"action"`
	// The IP Address used for this IP Restriction in CIDR notation.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The name of the Function App resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The priority for this IP Restriction.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The Service Tag used for this IP Restriction.
	ServiceTag pulumi.StringInput `pulumi:"serviceTag"`
	SubnetId   pulumi.StringInput `pulumi:"subnetId"`
	// The Virtual Network Subnet ID used for this IP Restriction.
	VirtualNetworkSubnetId pulumi.StringInput `pulumi:"virtualNetworkSubnetId"`
}

func (GetFunctionAppSiteConfigScmIpRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionAppSiteConfigScmIpRestriction)(nil)).Elem()
}

func (i GetFunctionAppSiteConfigScmIpRestrictionArgs) ToGetFunctionAppSiteConfigScmIpRestrictionOutput() GetFunctionAppSiteConfigScmIpRestrictionOutput {
	return i.ToGetFunctionAppSiteConfigScmIpRestrictionOutputWithContext(context.Background())
}

func (i GetFunctionAppSiteConfigScmIpRestrictionArgs) ToGetFunctionAppSiteConfigScmIpRestrictionOutputWithContext(ctx context.Context) GetFunctionAppSiteConfigScmIpRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionAppSiteConfigScmIpRestrictionOutput)
}

// GetFunctionAppSiteConfigScmIpRestrictionArrayInput is an input type that accepts GetFunctionAppSiteConfigScmIpRestrictionArray and GetFunctionAppSiteConfigScmIpRestrictionArrayOutput values.
// You can construct a concrete instance of `GetFunctionAppSiteConfigScmIpRestrictionArrayInput` via:
//
//          GetFunctionAppSiteConfigScmIpRestrictionArray{ GetFunctionAppSiteConfigScmIpRestrictionArgs{...} }
type GetFunctionAppSiteConfigScmIpRestrictionArrayInput interface {
	pulumi.Input

	ToGetFunctionAppSiteConfigScmIpRestrictionArrayOutput() GetFunctionAppSiteConfigScmIpRestrictionArrayOutput
	ToGetFunctionAppSiteConfigScmIpRestrictionArrayOutputWithContext(context.Context) GetFunctionAppSiteConfigScmIpRestrictionArrayOutput
}

type GetFunctionAppSiteConfigScmIpRestrictionArray []GetFunctionAppSiteConfigScmIpRestrictionInput

func (GetFunctionAppSiteConfigScmIpRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionAppSiteConfigScmIpRestriction)(nil)).Elem()
}

func (i GetFunctionAppSiteConfigScmIpRestrictionArray) ToGetFunctionAppSiteConfigScmIpRestrictionArrayOutput() GetFunctionAppSiteConfigScmIpRestrictionArrayOutput {
	return i.ToGetFunctionAppSiteConfigScmIpRestrictionArrayOutputWithContext(context.Background())
}

func (i GetFunctionAppSiteConfigScmIpRestrictionArray) ToGetFunctionAppSiteConfigScmIpRestrictionArrayOutputWithContext(ctx context.Context) GetFunctionAppSiteConfigScmIpRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionAppSiteConfigScmIpRestrictionArrayOutput)
}

type GetFunctionAppSiteConfigScmIpRestrictionOutput struct{ *pulumi.OutputState }

func (GetFunctionAppSiteConfigScmIpRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionAppSiteConfigScmIpRestriction)(nil)).Elem()
}

func (o GetFunctionAppSiteConfigScmIpRestrictionOutput) ToGetFunctionAppSiteConfigScmIpRestrictionOutput() GetFunctionAppSiteConfigScmIpRestrictionOutput {
	return o
}

func (o GetFunctionAppSiteConfigScmIpRestrictionOutput) ToGetFunctionAppSiteConfigScmIpRestrictionOutputWithContext(ctx context.Context) GetFunctionAppSiteConfigScmIpRestrictionOutput {
	return o
}

// Allow or Deny access for this IP range. Defaults to Allow.
func (o GetFunctionAppSiteConfigScmIpRestrictionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfigScmIpRestriction) string { return v.Action }).(pulumi.StringOutput)
}

// The IP Address used for this IP Restriction in CIDR notation.
func (o GetFunctionAppSiteConfigScmIpRestrictionOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfigScmIpRestriction) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The name of the Function App resource.
func (o GetFunctionAppSiteConfigScmIpRestrictionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfigScmIpRestriction) string { return v.Name }).(pulumi.StringOutput)
}

// The priority for this IP Restriction.
func (o GetFunctionAppSiteConfigScmIpRestrictionOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfigScmIpRestriction) int { return v.Priority }).(pulumi.IntOutput)
}

// The Service Tag used for this IP Restriction.
func (o GetFunctionAppSiteConfigScmIpRestrictionOutput) ServiceTag() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfigScmIpRestriction) string { return v.ServiceTag }).(pulumi.StringOutput)
}

func (o GetFunctionAppSiteConfigScmIpRestrictionOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfigScmIpRestriction) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The Virtual Network Subnet ID used for this IP Restriction.
func (o GetFunctionAppSiteConfigScmIpRestrictionOutput) VirtualNetworkSubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAppSiteConfigScmIpRestriction) string { return v.VirtualNetworkSubnetId }).(pulumi.StringOutput)
}

type GetFunctionAppSiteConfigScmIpRestrictionArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionAppSiteConfigScmIpRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionAppSiteConfigScmIpRestriction)(nil)).Elem()
}

func (o GetFunctionAppSiteConfigScmIpRestrictionArrayOutput) ToGetFunctionAppSiteConfigScmIpRestrictionArrayOutput() GetFunctionAppSiteConfigScmIpRestrictionArrayOutput {
	return o
}

func (o GetFunctionAppSiteConfigScmIpRestrictionArrayOutput) ToGetFunctionAppSiteConfigScmIpRestrictionArrayOutputWithContext(ctx context.Context) GetFunctionAppSiteConfigScmIpRestrictionArrayOutput {
	return o
}

func (o GetFunctionAppSiteConfigScmIpRestrictionArrayOutput) Index(i pulumi.IntInput) GetFunctionAppSiteConfigScmIpRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionAppSiteConfigScmIpRestriction {
		return vs[0].([]GetFunctionAppSiteConfigScmIpRestriction)[vs[1].(int)]
	}).(GetFunctionAppSiteConfigScmIpRestrictionOutput)
}

type GetFunctionAppSiteCredential struct {
	// The password associated with the username, which can be used to publish to this App Service.
	Password string `pulumi:"password"`
	// The username which can be used to publish to this App Service
	Username string `pulumi:"username"`
}

// GetFunctionAppSiteCredentialInput is an input type that accepts GetFunctionAppSiteCredentialArgs and GetFunctionAppSiteCredentialOutput values.
// You can construct a concrete instance of `GetFunctionAppSiteCredentialInput` via:
//
//          GetFunctionAppSiteCredentialArgs{...}
type GetFunctionAppSiteCredentialInput interface {
	pulumi.Input

	ToGetFunctionAppSiteCredentialOutput() GetFunctionAppSiteCredentialOutput
	ToGetFunctionAppSiteCredentialOutputWithContext(context.Context) GetFunctionAppSiteCredentialOutput
}

type GetFunctionAppSiteCredentialArgs struct {
	// The password associated with the username, which can be used to publish to this App Service.
	Password pulumi.StringInput `pulumi:"password"`
	// The username which can be used to publish to this App Service
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetFunctionAppSiteCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionAppSiteCredential)(nil)).Elem()
}

func (i GetFunctionAppSiteCredentialArgs) ToGetFunctionAppSiteCredentialOutput() GetFunctionAppSiteCredentialOutput {
	return i.ToGetFunctionAppSiteCredentialOutputWithContext(context.Background())
}

func (i GetFunctionAppSiteCredentialArgs) ToGetFunctionAppSiteCredentialOutputWithContext(ctx context.Context) GetFunctionAppSiteCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionAppSiteCredentialOutput)
}

// GetFunctionAppSiteCredentialArrayInput is an input type that accepts GetFunctionAppSiteCredentialArray and GetFunctionAppSiteCredentialArrayOutput values.
// You can construct a concrete instance of `GetFunctionAppSiteCredentialArrayInput` via:
//
//          GetFunctionAppSiteCredentialArray{ GetFunctionAppSiteCredentialArgs{...} }
type GetFunctionAppSiteCredentialArrayInput interface {
	pulumi.Input

	ToGetFunctionAppSiteCredentialArrayOutput() GetFunctionAppSiteCredentialArrayOutput
	ToGetFunctionAppSiteCredentialArrayOutputWithContext(context.Context) GetFunctionAppSiteCredentialArrayOutput
}

type GetFunctionAppSiteCredentialArray []GetFunctionAppSiteCredentialInput

func (GetFunctionAppSiteCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionAppSiteCredential)(nil)).Elem()
}

func (i GetFunctionAppSiteCredentialArray) ToGetFunctionAppSiteCredentialArrayOutput() GetFunctionAppSiteCredentialArrayOutput {
	return i.ToGetFunctionAppSiteCredentialArrayOutputWithContext(context.Background())
}

func (i GetFunctionAppSiteCredentialArray) ToGetFunctionAppSiteCredentialArrayOutputWithContext(ctx context.Context) GetFunctionAppSiteCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionAppSiteCredentialArrayOutput)
}

type GetFunctionAppSiteCredentialOutput struct{ *pulumi.OutputState }

func (GetFunctionAppSiteCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionAppSiteCredential)(nil)).Elem()
}

func (o GetFunctionAppSiteCredentialOutput) ToGetFunctionAppSiteCredentialOutput() GetFunctionAppSiteCredentialOutput {
	return o
}

func (o GetFunctionAppSiteCredentialOutput) ToGetFunctionAppSiteCredentialOutputWithContext(ctx context.Context) GetFunctionAppSiteCredentialOutput {
	return o
}

// The password associated with the username, which can be used to publish to this App Service.
func (o GetFunctionAppSiteCredentialOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAppSiteCredential) string { return v.Password }).(pulumi.StringOutput)
}

// The username which can be used to publish to this App Service
func (o GetFunctionAppSiteCredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAppSiteCredential) string { return v.Username }).(pulumi.StringOutput)
}

type GetFunctionAppSiteCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionAppSiteCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionAppSiteCredential)(nil)).Elem()
}

func (o GetFunctionAppSiteCredentialArrayOutput) ToGetFunctionAppSiteCredentialArrayOutput() GetFunctionAppSiteCredentialArrayOutput {
	return o
}

func (o GetFunctionAppSiteCredentialArrayOutput) ToGetFunctionAppSiteCredentialArrayOutputWithContext(ctx context.Context) GetFunctionAppSiteCredentialArrayOutput {
	return o
}

func (o GetFunctionAppSiteCredentialArrayOutput) Index(i pulumi.IntInput) GetFunctionAppSiteCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionAppSiteCredential {
		return vs[0].([]GetFunctionAppSiteCredential)[vs[1].(int)]
	}).(GetFunctionAppSiteCredentialOutput)
}

type GetFunctionAppSourceControl struct {
	// The branch of the remote repository in use.
	Branch string `pulumi:"branch"`
	// Limits to manual integration.
	ManualIntegration bool `pulumi:"manualIntegration"`
	// The URL of the source code repository.
	RepoUrl string `pulumi:"repoUrl"`
	// Is roll-back enabled for the repository.
	RollbackEnabled bool `pulumi:"rollbackEnabled"`
	// Uses Mercurial if `true`, otherwise uses Git.
	UseMercurial bool `pulumi:"useMercurial"`
}

// GetFunctionAppSourceControlInput is an input type that accepts GetFunctionAppSourceControlArgs and GetFunctionAppSourceControlOutput values.
// You can construct a concrete instance of `GetFunctionAppSourceControlInput` via:
//
//          GetFunctionAppSourceControlArgs{...}
type GetFunctionAppSourceControlInput interface {
	pulumi.Input

	ToGetFunctionAppSourceControlOutput() GetFunctionAppSourceControlOutput
	ToGetFunctionAppSourceControlOutputWithContext(context.Context) GetFunctionAppSourceControlOutput
}

type GetFunctionAppSourceControlArgs struct {
	// The branch of the remote repository in use.
	Branch pulumi.StringInput `pulumi:"branch"`
	// Limits to manual integration.
	ManualIntegration pulumi.BoolInput `pulumi:"manualIntegration"`
	// The URL of the source code repository.
	RepoUrl pulumi.StringInput `pulumi:"repoUrl"`
	// Is roll-back enabled for the repository.
	RollbackEnabled pulumi.BoolInput `pulumi:"rollbackEnabled"`
	// Uses Mercurial if `true`, otherwise uses Git.
	UseMercurial pulumi.BoolInput `pulumi:"useMercurial"`
}

func (GetFunctionAppSourceControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionAppSourceControl)(nil)).Elem()
}

func (i GetFunctionAppSourceControlArgs) ToGetFunctionAppSourceControlOutput() GetFunctionAppSourceControlOutput {
	return i.ToGetFunctionAppSourceControlOutputWithContext(context.Background())
}

func (i GetFunctionAppSourceControlArgs) ToGetFunctionAppSourceControlOutputWithContext(ctx context.Context) GetFunctionAppSourceControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionAppSourceControlOutput)
}

// GetFunctionAppSourceControlArrayInput is an input type that accepts GetFunctionAppSourceControlArray and GetFunctionAppSourceControlArrayOutput values.
// You can construct a concrete instance of `GetFunctionAppSourceControlArrayInput` via:
//
//          GetFunctionAppSourceControlArray{ GetFunctionAppSourceControlArgs{...} }
type GetFunctionAppSourceControlArrayInput interface {
	pulumi.Input

	ToGetFunctionAppSourceControlArrayOutput() GetFunctionAppSourceControlArrayOutput
	ToGetFunctionAppSourceControlArrayOutputWithContext(context.Context) GetFunctionAppSourceControlArrayOutput
}

type GetFunctionAppSourceControlArray []GetFunctionAppSourceControlInput

func (GetFunctionAppSourceControlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionAppSourceControl)(nil)).Elem()
}

func (i GetFunctionAppSourceControlArray) ToGetFunctionAppSourceControlArrayOutput() GetFunctionAppSourceControlArrayOutput {
	return i.ToGetFunctionAppSourceControlArrayOutputWithContext(context.Background())
}

func (i GetFunctionAppSourceControlArray) ToGetFunctionAppSourceControlArrayOutputWithContext(ctx context.Context) GetFunctionAppSourceControlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionAppSourceControlArrayOutput)
}

type GetFunctionAppSourceControlOutput struct{ *pulumi.OutputState }

func (GetFunctionAppSourceControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionAppSourceControl)(nil)).Elem()
}

func (o GetFunctionAppSourceControlOutput) ToGetFunctionAppSourceControlOutput() GetFunctionAppSourceControlOutput {
	return o
}

func (o GetFunctionAppSourceControlOutput) ToGetFunctionAppSourceControlOutputWithContext(ctx context.Context) GetFunctionAppSourceControlOutput {
	return o
}

// The branch of the remote repository in use.
func (o GetFunctionAppSourceControlOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAppSourceControl) string { return v.Branch }).(pulumi.StringOutput)
}

// Limits to manual integration.
func (o GetFunctionAppSourceControlOutput) ManualIntegration() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFunctionAppSourceControl) bool { return v.ManualIntegration }).(pulumi.BoolOutput)
}

// The URL of the source code repository.
func (o GetFunctionAppSourceControlOutput) RepoUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionAppSourceControl) string { return v.RepoUrl }).(pulumi.StringOutput)
}

// Is roll-back enabled for the repository.
func (o GetFunctionAppSourceControlOutput) RollbackEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFunctionAppSourceControl) bool { return v.RollbackEnabled }).(pulumi.BoolOutput)
}

// Uses Mercurial if `true`, otherwise uses Git.
func (o GetFunctionAppSourceControlOutput) UseMercurial() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFunctionAppSourceControl) bool { return v.UseMercurial }).(pulumi.BoolOutput)
}

type GetFunctionAppSourceControlArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionAppSourceControlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionAppSourceControl)(nil)).Elem()
}

func (o GetFunctionAppSourceControlArrayOutput) ToGetFunctionAppSourceControlArrayOutput() GetFunctionAppSourceControlArrayOutput {
	return o
}

func (o GetFunctionAppSourceControlArrayOutput) ToGetFunctionAppSourceControlArrayOutputWithContext(ctx context.Context) GetFunctionAppSourceControlArrayOutput {
	return o
}

func (o GetFunctionAppSourceControlArrayOutput) Index(i pulumi.IntInput) GetFunctionAppSourceControlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionAppSourceControl {
		return vs[0].([]GetFunctionAppSourceControl)[vs[1].(int)]
	}).(GetFunctionAppSourceControlOutput)
}

func init() {
	pulumi.RegisterOutputType(AppServiceAuthSettingsOutput{})
	pulumi.RegisterOutputType(AppServiceAuthSettingsPtrOutput{})
	pulumi.RegisterOutputType(AppServiceAuthSettingsActiveDirectoryOutput{})
	pulumi.RegisterOutputType(AppServiceAuthSettingsActiveDirectoryPtrOutput{})
	pulumi.RegisterOutputType(AppServiceAuthSettingsFacebookOutput{})
	pulumi.RegisterOutputType(AppServiceAuthSettingsFacebookPtrOutput{})
	pulumi.RegisterOutputType(AppServiceAuthSettingsGoogleOutput{})
	pulumi.RegisterOutputType(AppServiceAuthSettingsGooglePtrOutput{})
	pulumi.RegisterOutputType(AppServiceAuthSettingsMicrosoftOutput{})
	pulumi.RegisterOutputType(AppServiceAuthSettingsMicrosoftPtrOutput{})
	pulumi.RegisterOutputType(AppServiceAuthSettingsTwitterOutput{})
	pulumi.RegisterOutputType(AppServiceAuthSettingsTwitterPtrOutput{})
	pulumi.RegisterOutputType(AppServiceBackupOutput{})
	pulumi.RegisterOutputType(AppServiceBackupPtrOutput{})
	pulumi.RegisterOutputType(AppServiceBackupScheduleOutput{})
	pulumi.RegisterOutputType(AppServiceBackupSchedulePtrOutput{})
	pulumi.RegisterOutputType(AppServiceConnectionStringOutput{})
	pulumi.RegisterOutputType(AppServiceConnectionStringArrayOutput{})
	pulumi.RegisterOutputType(AppServiceIdentityOutput{})
	pulumi.RegisterOutputType(AppServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(AppServiceLogsOutput{})
	pulumi.RegisterOutputType(AppServiceLogsPtrOutput{})
	pulumi.RegisterOutputType(AppServiceLogsApplicationLogsOutput{})
	pulumi.RegisterOutputType(AppServiceLogsApplicationLogsPtrOutput{})
	pulumi.RegisterOutputType(AppServiceLogsApplicationLogsAzureBlobStorageOutput{})
	pulumi.RegisterOutputType(AppServiceLogsApplicationLogsAzureBlobStoragePtrOutput{})
	pulumi.RegisterOutputType(AppServiceLogsHttpLogsOutput{})
	pulumi.RegisterOutputType(AppServiceLogsHttpLogsPtrOutput{})
	pulumi.RegisterOutputType(AppServiceLogsHttpLogsAzureBlobStorageOutput{})
	pulumi.RegisterOutputType(AppServiceLogsHttpLogsAzureBlobStoragePtrOutput{})
	pulumi.RegisterOutputType(AppServiceLogsHttpLogsFileSystemOutput{})
	pulumi.RegisterOutputType(AppServiceLogsHttpLogsFileSystemPtrOutput{})
	pulumi.RegisterOutputType(AppServiceSiteConfigOutput{})
	pulumi.RegisterOutputType(AppServiceSiteConfigPtrOutput{})
	pulumi.RegisterOutputType(AppServiceSiteConfigCorsOutput{})
	pulumi.RegisterOutputType(AppServiceSiteConfigCorsPtrOutput{})
	pulumi.RegisterOutputType(AppServiceSiteConfigIpRestrictionOutput{})
	pulumi.RegisterOutputType(AppServiceSiteConfigIpRestrictionArrayOutput{})
	pulumi.RegisterOutputType(AppServiceSiteConfigScmIpRestrictionOutput{})
	pulumi.RegisterOutputType(AppServiceSiteConfigScmIpRestrictionArrayOutput{})
	pulumi.RegisterOutputType(AppServiceSiteCredentialOutput{})
	pulumi.RegisterOutputType(AppServiceSiteCredentialArrayOutput{})
	pulumi.RegisterOutputType(AppServiceSourceControlOutput{})
	pulumi.RegisterOutputType(AppServiceSourceControlPtrOutput{})
	pulumi.RegisterOutputType(AppServiceStorageAccountOutput{})
	pulumi.RegisterOutputType(AppServiceStorageAccountArrayOutput{})
	pulumi.RegisterOutputType(CertificateOrderCertificateOutput{})
	pulumi.RegisterOutputType(CertificateOrderCertificateArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentClusterSettingOutput{})
	pulumi.RegisterOutputType(EnvironmentClusterSettingArrayOutput{})
	pulumi.RegisterOutputType(FunctionAppAuthSettingsOutput{})
	pulumi.RegisterOutputType(FunctionAppAuthSettingsPtrOutput{})
	pulumi.RegisterOutputType(FunctionAppAuthSettingsActiveDirectoryOutput{})
	pulumi.RegisterOutputType(FunctionAppAuthSettingsActiveDirectoryPtrOutput{})
	pulumi.RegisterOutputType(FunctionAppAuthSettingsFacebookOutput{})
	pulumi.RegisterOutputType(FunctionAppAuthSettingsFacebookPtrOutput{})
	pulumi.RegisterOutputType(FunctionAppAuthSettingsGoogleOutput{})
	pulumi.RegisterOutputType(FunctionAppAuthSettingsGooglePtrOutput{})
	pulumi.RegisterOutputType(FunctionAppAuthSettingsMicrosoftOutput{})
	pulumi.RegisterOutputType(FunctionAppAuthSettingsMicrosoftPtrOutput{})
	pulumi.RegisterOutputType(FunctionAppAuthSettingsTwitterOutput{})
	pulumi.RegisterOutputType(FunctionAppAuthSettingsTwitterPtrOutput{})
	pulumi.RegisterOutputType(FunctionAppConnectionStringOutput{})
	pulumi.RegisterOutputType(FunctionAppConnectionStringArrayOutput{})
	pulumi.RegisterOutputType(FunctionAppIdentityOutput{})
	pulumi.RegisterOutputType(FunctionAppIdentityPtrOutput{})
	pulumi.RegisterOutputType(FunctionAppSiteConfigOutput{})
	pulumi.RegisterOutputType(FunctionAppSiteConfigPtrOutput{})
	pulumi.RegisterOutputType(FunctionAppSiteConfigCorsOutput{})
	pulumi.RegisterOutputType(FunctionAppSiteConfigCorsPtrOutput{})
	pulumi.RegisterOutputType(FunctionAppSiteConfigIpRestrictionOutput{})
	pulumi.RegisterOutputType(FunctionAppSiteConfigIpRestrictionArrayOutput{})
	pulumi.RegisterOutputType(FunctionAppSiteConfigScmIpRestrictionOutput{})
	pulumi.RegisterOutputType(FunctionAppSiteConfigScmIpRestrictionArrayOutput{})
	pulumi.RegisterOutputType(FunctionAppSiteCredentialOutput{})
	pulumi.RegisterOutputType(FunctionAppSiteCredentialArrayOutput{})
	pulumi.RegisterOutputType(FunctionAppSlotAuthSettingsOutput{})
	pulumi.RegisterOutputType(FunctionAppSlotAuthSettingsPtrOutput{})
	pulumi.RegisterOutputType(FunctionAppSlotAuthSettingsActiveDirectoryOutput{})
	pulumi.RegisterOutputType(FunctionAppSlotAuthSettingsActiveDirectoryPtrOutput{})
	pulumi.RegisterOutputType(FunctionAppSlotAuthSettingsFacebookOutput{})
	pulumi.RegisterOutputType(FunctionAppSlotAuthSettingsFacebookPtrOutput{})
	pulumi.RegisterOutputType(FunctionAppSlotAuthSettingsGoogleOutput{})
	pulumi.RegisterOutputType(FunctionAppSlotAuthSettingsGooglePtrOutput{})
	pulumi.RegisterOutputType(FunctionAppSlotAuthSettingsMicrosoftOutput{})
	pulumi.RegisterOutputType(FunctionAppSlotAuthSettingsMicrosoftPtrOutput{})
	pulumi.RegisterOutputType(FunctionAppSlotAuthSettingsTwitterOutput{})
	pulumi.RegisterOutputType(FunctionAppSlotAuthSettingsTwitterPtrOutput{})
	pulumi.RegisterOutputType(FunctionAppSlotConnectionStringOutput{})
	pulumi.RegisterOutputType(FunctionAppSlotConnectionStringArrayOutput{})
	pulumi.RegisterOutputType(FunctionAppSlotIdentityOutput{})
	pulumi.RegisterOutputType(FunctionAppSlotIdentityPtrOutput{})
	pulumi.RegisterOutputType(FunctionAppSlotSiteConfigOutput{})
	pulumi.RegisterOutputType(FunctionAppSlotSiteConfigPtrOutput{})
	pulumi.RegisterOutputType(FunctionAppSlotSiteConfigCorsOutput{})
	pulumi.RegisterOutputType(FunctionAppSlotSiteConfigCorsPtrOutput{})
	pulumi.RegisterOutputType(FunctionAppSlotSiteConfigIpRestrictionOutput{})
	pulumi.RegisterOutputType(FunctionAppSlotSiteConfigIpRestrictionArrayOutput{})
	pulumi.RegisterOutputType(FunctionAppSlotSiteConfigScmIpRestrictionOutput{})
	pulumi.RegisterOutputType(FunctionAppSlotSiteConfigScmIpRestrictionArrayOutput{})
	pulumi.RegisterOutputType(FunctionAppSlotSiteCredentialOutput{})
	pulumi.RegisterOutputType(FunctionAppSlotSiteCredentialArrayOutput{})
	pulumi.RegisterOutputType(FunctionAppSourceControlOutput{})
	pulumi.RegisterOutputType(FunctionAppSourceControlPtrOutput{})
	pulumi.RegisterOutputType(PlanSkuOutput{})
	pulumi.RegisterOutputType(PlanSkuPtrOutput{})
	pulumi.RegisterOutputType(SlotAuthSettingsOutput{})
	pulumi.RegisterOutputType(SlotAuthSettingsPtrOutput{})
	pulumi.RegisterOutputType(SlotAuthSettingsActiveDirectoryOutput{})
	pulumi.RegisterOutputType(SlotAuthSettingsActiveDirectoryPtrOutput{})
	pulumi.RegisterOutputType(SlotAuthSettingsFacebookOutput{})
	pulumi.RegisterOutputType(SlotAuthSettingsFacebookPtrOutput{})
	pulumi.RegisterOutputType(SlotAuthSettingsGoogleOutput{})
	pulumi.RegisterOutputType(SlotAuthSettingsGooglePtrOutput{})
	pulumi.RegisterOutputType(SlotAuthSettingsMicrosoftOutput{})
	pulumi.RegisterOutputType(SlotAuthSettingsMicrosoftPtrOutput{})
	pulumi.RegisterOutputType(SlotAuthSettingsTwitterOutput{})
	pulumi.RegisterOutputType(SlotAuthSettingsTwitterPtrOutput{})
	pulumi.RegisterOutputType(SlotConnectionStringOutput{})
	pulumi.RegisterOutputType(SlotConnectionStringArrayOutput{})
	pulumi.RegisterOutputType(SlotIdentityOutput{})
	pulumi.RegisterOutputType(SlotIdentityPtrOutput{})
	pulumi.RegisterOutputType(SlotLogsOutput{})
	pulumi.RegisterOutputType(SlotLogsPtrOutput{})
	pulumi.RegisterOutputType(SlotLogsApplicationLogsOutput{})
	pulumi.RegisterOutputType(SlotLogsApplicationLogsPtrOutput{})
	pulumi.RegisterOutputType(SlotLogsApplicationLogsAzureBlobStorageOutput{})
	pulumi.RegisterOutputType(SlotLogsApplicationLogsAzureBlobStoragePtrOutput{})
	pulumi.RegisterOutputType(SlotLogsHttpLogsOutput{})
	pulumi.RegisterOutputType(SlotLogsHttpLogsPtrOutput{})
	pulumi.RegisterOutputType(SlotLogsHttpLogsAzureBlobStorageOutput{})
	pulumi.RegisterOutputType(SlotLogsHttpLogsAzureBlobStoragePtrOutput{})
	pulumi.RegisterOutputType(SlotLogsHttpLogsFileSystemOutput{})
	pulumi.RegisterOutputType(SlotLogsHttpLogsFileSystemPtrOutput{})
	pulumi.RegisterOutputType(SlotSiteConfigOutput{})
	pulumi.RegisterOutputType(SlotSiteConfigPtrOutput{})
	pulumi.RegisterOutputType(SlotSiteConfigCorsOutput{})
	pulumi.RegisterOutputType(SlotSiteConfigCorsPtrOutput{})
	pulumi.RegisterOutputType(SlotSiteConfigIpRestrictionOutput{})
	pulumi.RegisterOutputType(SlotSiteConfigIpRestrictionArrayOutput{})
	pulumi.RegisterOutputType(SlotSiteConfigScmIpRestrictionOutput{})
	pulumi.RegisterOutputType(SlotSiteConfigScmIpRestrictionArrayOutput{})
	pulumi.RegisterOutputType(SlotSiteCredentialOutput{})
	pulumi.RegisterOutputType(SlotSiteCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetAppServiceConnectionStringOutput{})
	pulumi.RegisterOutputType(GetAppServiceConnectionStringArrayOutput{})
	pulumi.RegisterOutputType(GetAppServiceEnvironmentClusterSettingOutput{})
	pulumi.RegisterOutputType(GetAppServiceEnvironmentClusterSettingArrayOutput{})
	pulumi.RegisterOutputType(GetAppServicePlanSkuOutput{})
	pulumi.RegisterOutputType(GetAppServiceSiteConfigOutput{})
	pulumi.RegisterOutputType(GetAppServiceSiteConfigArrayOutput{})
	pulumi.RegisterOutputType(GetAppServiceSiteConfigCorOutput{})
	pulumi.RegisterOutputType(GetAppServiceSiteConfigCorArrayOutput{})
	pulumi.RegisterOutputType(GetAppServiceSiteConfigIpRestrictionOutput{})
	pulumi.RegisterOutputType(GetAppServiceSiteConfigIpRestrictionArrayOutput{})
	pulumi.RegisterOutputType(GetAppServiceSiteConfigScmIpRestrictionOutput{})
	pulumi.RegisterOutputType(GetAppServiceSiteConfigScmIpRestrictionArrayOutput{})
	pulumi.RegisterOutputType(GetAppServiceSiteCredentialOutput{})
	pulumi.RegisterOutputType(GetAppServiceSiteCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetAppServiceSourceControlOutput{})
	pulumi.RegisterOutputType(GetAppServiceSourceControlArrayOutput{})
	pulumi.RegisterOutputType(GetCertificateOrderCertificateOutput{})
	pulumi.RegisterOutputType(GetCertificateOrderCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionAppConnectionStringOutput{})
	pulumi.RegisterOutputType(GetFunctionAppConnectionStringArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionAppIdentityOutput{})
	pulumi.RegisterOutputType(GetFunctionAppIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionAppSiteConfigOutput{})
	pulumi.RegisterOutputType(GetFunctionAppSiteConfigArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionAppSiteConfigCorsOutput{})
	pulumi.RegisterOutputType(GetFunctionAppSiteConfigIpRestrictionOutput{})
	pulumi.RegisterOutputType(GetFunctionAppSiteConfigIpRestrictionArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionAppSiteConfigScmIpRestrictionOutput{})
	pulumi.RegisterOutputType(GetFunctionAppSiteConfigScmIpRestrictionArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionAppSiteCredentialOutput{})
	pulumi.RegisterOutputType(GetFunctionAppSiteCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionAppSourceControlOutput{})
	pulumi.RegisterOutputType(GetFunctionAppSourceControlArrayOutput{})
}
