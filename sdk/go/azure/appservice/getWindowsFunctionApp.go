// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Use this data source to access information about an existing Windows Function App.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appservice"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := appservice.LookupWindowsFunctionApp(ctx, &appservice.LookupWindowsFunctionAppArgs{
//				Name:              "existing",
//				ResourceGroupName: "existing",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", example.Id)
//			return nil
//		})
//	}
//
// ```
func LookupWindowsFunctionApp(ctx *pulumi.Context, args *LookupWindowsFunctionAppArgs, opts ...pulumi.InvokeOption) (*LookupWindowsFunctionAppResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWindowsFunctionAppResult
	err := ctx.Invoke("azure:appservice/getWindowsFunctionApp:getWindowsFunctionApp", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWindowsFunctionApp.
type LookupWindowsFunctionAppArgs struct {
	// The name of this Windows Function App.
	Name string `pulumi:"name"`
	// The name of the Resource Group where the Windows Function App exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getWindowsFunctionApp.
type LookupWindowsFunctionAppResult struct {
	// A `map of key-value pairs for App Settings and custom values.
	AppSettings map[string]string `pulumi:"appSettings"`
	// A `authSettings` block as defined below.
	AuthSettings []GetWindowsFunctionAppAuthSetting `pulumi:"authSettings"`
	// A `authSettingsV2` block as defined below.
	AuthSettingsV2s []GetWindowsFunctionAppAuthSettingsV2 `pulumi:"authSettingsV2s"`
	// A `backup` block as defined below.
	Backups []GetWindowsFunctionAppBackup `pulumi:"backups"`
	// Is the built-in logging enabled?
	BuiltinLoggingEnabled bool `pulumi:"builtinLoggingEnabled"`
	// Is the use of Client Certificates enabled?
	ClientCertificateEnabled bool `pulumi:"clientCertificateEnabled"`
	// Paths to exclude when using client certificates, separated by ;
	ClientCertificateExclusionPaths string `pulumi:"clientCertificateExclusionPaths"`
	// The mode of the Function App's client certificates requirement for incoming requests.
	ClientCertificateMode string `pulumi:"clientCertificateMode"`
	// One or more `connectionString` blocks as defined below.
	ConnectionStrings []GetWindowsFunctionAppConnectionString `pulumi:"connectionStrings"`
	// Are Content Share Settings disabled?
	ContentShareForceDisabled bool `pulumi:"contentShareForceDisabled"`
	// The identifier used by App Service to perform domain ownership verification via DNS TXT record.
	CustomDomainVerificationId string `pulumi:"customDomainVerificationId"`
	// The amount of memory in gigabyte-seconds that your application is allowed to consume per day.
	DailyMemoryTimeQuota int `pulumi:"dailyMemoryTimeQuota"`
	// The default hostname of the Windows Function App.
	DefaultHostname string `pulumi:"defaultHostname"`
	// Is the Backup Job enabled?
	Enabled bool `pulumi:"enabled"`
	// Are the default FTP Basic Authentication publishing credentials enabled.
	FtpPublishBasicAuthenticationEnabled bool `pulumi:"ftpPublishBasicAuthenticationEnabled"`
	// The runtime version associated with the Function App.
	FunctionsExtensionVersion string `pulumi:"functionsExtensionVersion"`
	// The ID of the App Service Environment used by Function App.
	HostingEnvironmentId string `pulumi:"hostingEnvironmentId"`
	// Is the Function App only accessible via HTTPS?
	HttpsOnly bool `pulumi:"httpsOnly"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A `identity` block as defined below.
	Identities []GetWindowsFunctionAppIdentity `pulumi:"identities"`
	// The Kind value for this Windows Function App.
	Kind string `pulumi:"kind"`
	// The Azure Region where the Windows Function App exists.
	Location string `pulumi:"location"`
	// The Site Credentials Username used for publishing.
	Name string `pulumi:"name"`
	// A list of outbound IP addresses. For example `["52.23.25.3", "52.143.43.12"]`
	OutboundIpAddressLists []string `pulumi:"outboundIpAddressLists"`
	// A comma separated list of outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12`.
	OutboundIpAddresses string `pulumi:"outboundIpAddresses"`
	// A list of possible outbound IP addresses, not all of which are necessarily in use. This is a superset of `outboundIpAddressList`. For example `["52.23.25.3", "52.143.43.12"]`.
	PossibleOutboundIpAddressLists []string `pulumi:"possibleOutboundIpAddressLists"`
	// A comma separated list of possible outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12,52.143.43.17`. This is a superset of `outboundIpAddresses`.
	PossibleOutboundIpAddresses string `pulumi:"possibleOutboundIpAddresses"`
	// Is Public Network Access enabled for the Windows Function App.
	PublicNetworkAccessEnabled bool   `pulumi:"publicNetworkAccessEnabled"`
	ResourceGroupName          string `pulumi:"resourceGroupName"`
	// The ID of the App Service Plan.
	ServicePlanId string `pulumi:"servicePlanId"`
	// A `siteConfig` block as defined below.
	SiteConfigs []GetWindowsFunctionAppSiteConfig `pulumi:"siteConfigs"`
	// A `siteCredential` block as defined below.
	SiteCredentials []GetWindowsFunctionAppSiteCredential `pulumi:"siteCredentials"`
	// A `stickySettings` block as defined below.
	StickySettings []GetWindowsFunctionAppStickySetting `pulumi:"stickySettings"`
	// The access key which is used to access the backend storage account for the Function App.
	StorageAccountAccessKey string `pulumi:"storageAccountAccessKey"`
	// The backend storage account name which is used by this Function App.
	StorageAccountName string `pulumi:"storageAccountName"`
	// The Key Vault Secret ID, including version, that contains the Connection String used to connect to the storage account for this Function App.
	StorageKeyVaultSecretId string `pulumi:"storageKeyVaultSecretId"`
	// Is the Function App using a Managed Identity to access the storage account?
	StorageUsesManagedIdentity bool `pulumi:"storageUsesManagedIdentity"`
	// A mapping of tags assigned to the Windows Function App.
	Tags map[string]string `pulumi:"tags"`
	// The subnet id which the Windows Function App is vNet Integrated with.
	VirtualNetworkSubnetId string `pulumi:"virtualNetworkSubnetId"`
	// Are the default WebDeploy Basic Authentication publishing credentials enabled.
	WebdeployPublishBasicAuthenticationEnabled bool `pulumi:"webdeployPublishBasicAuthenticationEnabled"`
}

func LookupWindowsFunctionAppOutput(ctx *pulumi.Context, args LookupWindowsFunctionAppOutputArgs, opts ...pulumi.InvokeOption) LookupWindowsFunctionAppResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWindowsFunctionAppResult, error) {
			args := v.(LookupWindowsFunctionAppArgs)
			r, err := LookupWindowsFunctionApp(ctx, &args, opts...)
			var s LookupWindowsFunctionAppResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWindowsFunctionAppResultOutput)
}

// A collection of arguments for invoking getWindowsFunctionApp.
type LookupWindowsFunctionAppOutputArgs struct {
	// The name of this Windows Function App.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Resource Group where the Windows Function App exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupWindowsFunctionAppOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWindowsFunctionAppArgs)(nil)).Elem()
}

// A collection of values returned by getWindowsFunctionApp.
type LookupWindowsFunctionAppResultOutput struct{ *pulumi.OutputState }

func (LookupWindowsFunctionAppResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWindowsFunctionAppResult)(nil)).Elem()
}

func (o LookupWindowsFunctionAppResultOutput) ToLookupWindowsFunctionAppResultOutput() LookupWindowsFunctionAppResultOutput {
	return o
}

func (o LookupWindowsFunctionAppResultOutput) ToLookupWindowsFunctionAppResultOutputWithContext(ctx context.Context) LookupWindowsFunctionAppResultOutput {
	return o
}

func (o LookupWindowsFunctionAppResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupWindowsFunctionAppResult] {
	return pulumix.Output[LookupWindowsFunctionAppResult]{
		OutputState: o.OutputState,
	}
}

// A `map of key-value pairs for App Settings and custom values.
func (o LookupWindowsFunctionAppResultOutput) AppSettings() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) map[string]string { return v.AppSettings }).(pulumi.StringMapOutput)
}

// A `authSettings` block as defined below.
func (o LookupWindowsFunctionAppResultOutput) AuthSettings() GetWindowsFunctionAppAuthSettingArrayOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) []GetWindowsFunctionAppAuthSetting { return v.AuthSettings }).(GetWindowsFunctionAppAuthSettingArrayOutput)
}

// A `authSettingsV2` block as defined below.
func (o LookupWindowsFunctionAppResultOutput) AuthSettingsV2s() GetWindowsFunctionAppAuthSettingsV2ArrayOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) []GetWindowsFunctionAppAuthSettingsV2 { return v.AuthSettingsV2s }).(GetWindowsFunctionAppAuthSettingsV2ArrayOutput)
}

// A `backup` block as defined below.
func (o LookupWindowsFunctionAppResultOutput) Backups() GetWindowsFunctionAppBackupArrayOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) []GetWindowsFunctionAppBackup { return v.Backups }).(GetWindowsFunctionAppBackupArrayOutput)
}

// Is the built-in logging enabled?
func (o LookupWindowsFunctionAppResultOutput) BuiltinLoggingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) bool { return v.BuiltinLoggingEnabled }).(pulumi.BoolOutput)
}

// Is the use of Client Certificates enabled?
func (o LookupWindowsFunctionAppResultOutput) ClientCertificateEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) bool { return v.ClientCertificateEnabled }).(pulumi.BoolOutput)
}

// Paths to exclude when using client certificates, separated by ;
func (o LookupWindowsFunctionAppResultOutput) ClientCertificateExclusionPaths() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) string { return v.ClientCertificateExclusionPaths }).(pulumi.StringOutput)
}

// The mode of the Function App's client certificates requirement for incoming requests.
func (o LookupWindowsFunctionAppResultOutput) ClientCertificateMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) string { return v.ClientCertificateMode }).(pulumi.StringOutput)
}

// One or more `connectionString` blocks as defined below.
func (o LookupWindowsFunctionAppResultOutput) ConnectionStrings() GetWindowsFunctionAppConnectionStringArrayOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) []GetWindowsFunctionAppConnectionString {
		return v.ConnectionStrings
	}).(GetWindowsFunctionAppConnectionStringArrayOutput)
}

// Are Content Share Settings disabled?
func (o LookupWindowsFunctionAppResultOutput) ContentShareForceDisabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) bool { return v.ContentShareForceDisabled }).(pulumi.BoolOutput)
}

// The identifier used by App Service to perform domain ownership verification via DNS TXT record.
func (o LookupWindowsFunctionAppResultOutput) CustomDomainVerificationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) string { return v.CustomDomainVerificationId }).(pulumi.StringOutput)
}

// The amount of memory in gigabyte-seconds that your application is allowed to consume per day.
func (o LookupWindowsFunctionAppResultOutput) DailyMemoryTimeQuota() pulumi.IntOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) int { return v.DailyMemoryTimeQuota }).(pulumi.IntOutput)
}

// The default hostname of the Windows Function App.
func (o LookupWindowsFunctionAppResultOutput) DefaultHostname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) string { return v.DefaultHostname }).(pulumi.StringOutput)
}

// Is the Backup Job enabled?
func (o LookupWindowsFunctionAppResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Are the default FTP Basic Authentication publishing credentials enabled.
func (o LookupWindowsFunctionAppResultOutput) FtpPublishBasicAuthenticationEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) bool { return v.FtpPublishBasicAuthenticationEnabled }).(pulumi.BoolOutput)
}

// The runtime version associated with the Function App.
func (o LookupWindowsFunctionAppResultOutput) FunctionsExtensionVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) string { return v.FunctionsExtensionVersion }).(pulumi.StringOutput)
}

// The ID of the App Service Environment used by Function App.
func (o LookupWindowsFunctionAppResultOutput) HostingEnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) string { return v.HostingEnvironmentId }).(pulumi.StringOutput)
}

// Is the Function App only accessible via HTTPS?
func (o LookupWindowsFunctionAppResultOutput) HttpsOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) bool { return v.HttpsOnly }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupWindowsFunctionAppResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) string { return v.Id }).(pulumi.StringOutput)
}

// A `identity` block as defined below.
func (o LookupWindowsFunctionAppResultOutput) Identities() GetWindowsFunctionAppIdentityArrayOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) []GetWindowsFunctionAppIdentity { return v.Identities }).(GetWindowsFunctionAppIdentityArrayOutput)
}

// The Kind value for this Windows Function App.
func (o LookupWindowsFunctionAppResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) string { return v.Kind }).(pulumi.StringOutput)
}

// The Azure Region where the Windows Function App exists.
func (o LookupWindowsFunctionAppResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) string { return v.Location }).(pulumi.StringOutput)
}

// The Site Credentials Username used for publishing.
func (o LookupWindowsFunctionAppResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) string { return v.Name }).(pulumi.StringOutput)
}

// A list of outbound IP addresses. For example `["52.23.25.3", "52.143.43.12"]`
func (o LookupWindowsFunctionAppResultOutput) OutboundIpAddressLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) []string { return v.OutboundIpAddressLists }).(pulumi.StringArrayOutput)
}

// A comma separated list of outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12`.
func (o LookupWindowsFunctionAppResultOutput) OutboundIpAddresses() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) string { return v.OutboundIpAddresses }).(pulumi.StringOutput)
}

// A list of possible outbound IP addresses, not all of which are necessarily in use. This is a superset of `outboundIpAddressList`. For example `["52.23.25.3", "52.143.43.12"]`.
func (o LookupWindowsFunctionAppResultOutput) PossibleOutboundIpAddressLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) []string { return v.PossibleOutboundIpAddressLists }).(pulumi.StringArrayOutput)
}

// A comma separated list of possible outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12,52.143.43.17`. This is a superset of `outboundIpAddresses`.
func (o LookupWindowsFunctionAppResultOutput) PossibleOutboundIpAddresses() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) string { return v.PossibleOutboundIpAddresses }).(pulumi.StringOutput)
}

// Is Public Network Access enabled for the Windows Function App.
func (o LookupWindowsFunctionAppResultOutput) PublicNetworkAccessEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) bool { return v.PublicNetworkAccessEnabled }).(pulumi.BoolOutput)
}

func (o LookupWindowsFunctionAppResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The ID of the App Service Plan.
func (o LookupWindowsFunctionAppResultOutput) ServicePlanId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) string { return v.ServicePlanId }).(pulumi.StringOutput)
}

// A `siteConfig` block as defined below.
func (o LookupWindowsFunctionAppResultOutput) SiteConfigs() GetWindowsFunctionAppSiteConfigArrayOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) []GetWindowsFunctionAppSiteConfig { return v.SiteConfigs }).(GetWindowsFunctionAppSiteConfigArrayOutput)
}

// A `siteCredential` block as defined below.
func (o LookupWindowsFunctionAppResultOutput) SiteCredentials() GetWindowsFunctionAppSiteCredentialArrayOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) []GetWindowsFunctionAppSiteCredential { return v.SiteCredentials }).(GetWindowsFunctionAppSiteCredentialArrayOutput)
}

// A `stickySettings` block as defined below.
func (o LookupWindowsFunctionAppResultOutput) StickySettings() GetWindowsFunctionAppStickySettingArrayOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) []GetWindowsFunctionAppStickySetting { return v.StickySettings }).(GetWindowsFunctionAppStickySettingArrayOutput)
}

// The access key which is used to access the backend storage account for the Function App.
func (o LookupWindowsFunctionAppResultOutput) StorageAccountAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) string { return v.StorageAccountAccessKey }).(pulumi.StringOutput)
}

// The backend storage account name which is used by this Function App.
func (o LookupWindowsFunctionAppResultOutput) StorageAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) string { return v.StorageAccountName }).(pulumi.StringOutput)
}

// The Key Vault Secret ID, including version, that contains the Connection String used to connect to the storage account for this Function App.
func (o LookupWindowsFunctionAppResultOutput) StorageKeyVaultSecretId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) string { return v.StorageKeyVaultSecretId }).(pulumi.StringOutput)
}

// Is the Function App using a Managed Identity to access the storage account?
func (o LookupWindowsFunctionAppResultOutput) StorageUsesManagedIdentity() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) bool { return v.StorageUsesManagedIdentity }).(pulumi.BoolOutput)
}

// A mapping of tags assigned to the Windows Function App.
func (o LookupWindowsFunctionAppResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The subnet id which the Windows Function App is vNet Integrated with.
func (o LookupWindowsFunctionAppResultOutput) VirtualNetworkSubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) string { return v.VirtualNetworkSubnetId }).(pulumi.StringOutput)
}

// Are the default WebDeploy Basic Authentication publishing credentials enabled.
func (o LookupWindowsFunctionAppResultOutput) WebdeployPublishBasicAuthenticationEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupWindowsFunctionAppResult) bool { return v.WebdeployPublishBasicAuthenticationEnabled }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWindowsFunctionAppResultOutput{})
}
