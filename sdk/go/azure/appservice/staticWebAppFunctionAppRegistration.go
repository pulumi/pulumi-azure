// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appservice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an App Service Static Web App Function App Registration.
//
// > **Note:** This resource registers the specified Function App to the `Production` build of the Static Web App.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/appservice"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resources"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleStaticWebApp, err := appservice.NewStaticWebApp(ctx, "example", &appservice.StaticWebAppArgs{
//				Name:              pulumi.String("example"),
//				ResourceGroupName: example.Name,
//				Location:          example.Location,
//			})
//			if err != nil {
//				return err
//			}
//			exampleAccount, err := storage.NewAccount(ctx, "example", &storage.AccountArgs{
//				Name:                   pulumi.String("examplesstorageacc"),
//				ResourceGroupName:      example.Name,
//				Location:               example.Location,
//				AccountTier:            pulumi.String("Standard"),
//				AccountReplicationType: pulumi.String("LRS"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleServicePlan, err := appservice.NewServicePlan(ctx, "example", &appservice.ServicePlanArgs{
//				Name:              pulumi.String("example-service-plan"),
//				Location:          example.Location,
//				ResourceGroupName: example.Name,
//				OsType:            pulumi.String("Linux"),
//				SkuName:           pulumi.String("S1"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleLinuxFunctionApp, err := appservice.NewLinuxFunctionApp(ctx, "example", &appservice.LinuxFunctionAppArgs{
//				Name:                    pulumi.String("example-function-app"),
//				Location:                example.Location,
//				ResourceGroupName:       example.Name,
//				ServicePlanId:           exampleServicePlan.ID(),
//				StorageAccountName:      exampleAccount.Name,
//				StorageAccountAccessKey: exampleAccount.PrimaryAccessKey,
//				SiteConfig:              &appservice.LinuxFunctionAppSiteConfigArgs{},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = appservice.NewStaticWebAppFunctionAppRegistration(ctx, "example", &appservice.StaticWebAppFunctionAppRegistrationArgs{
//				StaticWebAppId: exampleStaticWebApp.ID(),
//				FunctionAppId:  exampleLinuxFunctionApp.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This resource uses the following Azure API Providers:
//
// * `Microsoft.Web` - 2023-12-01, 2023-01-01
//
// ## Import
//
// Static Web App Function App Registration can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:appservice/staticWebAppFunctionAppRegistration:StaticWebAppFunctionAppRegistration example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/group1/providers/Microsoft.Web/staticSites/my-static-site1/userProvidedFunctionApps/myFunctionApp
// ```
type StaticWebAppFunctionAppRegistration struct {
	pulumi.CustomResourceState

	// The ID of a Linux or Windows Function App to connect to the Static Web App as a Backend. Changing this forces a new resource to be created.
	//
	// > **Note:** Only one Function App can be connected to a Static Web App. Multiple Function Apps are not currently supported.
	//
	// > **Note:** Connecting a Function App resource to a Static Web App resource updates the Function App to use AuthV2 and configures the `azureStaticWebAppV2` which may need to be accounted for by the use of `ignoreChanges` depending on the existing `authSettingsV2` configuration of the target Function App.
	FunctionAppId pulumi.StringOutput `pulumi:"functionAppId"`
	// The ID of the Static Web App to register the Function App to as a backend. Changing this forces a new resource to be created.
	StaticWebAppId pulumi.StringOutput `pulumi:"staticWebAppId"`
}

// NewStaticWebAppFunctionAppRegistration registers a new resource with the given unique name, arguments, and options.
func NewStaticWebAppFunctionAppRegistration(ctx *pulumi.Context,
	name string, args *StaticWebAppFunctionAppRegistrationArgs, opts ...pulumi.ResourceOption) (*StaticWebAppFunctionAppRegistration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FunctionAppId == nil {
		return nil, errors.New("invalid value for required argument 'FunctionAppId'")
	}
	if args.StaticWebAppId == nil {
		return nil, errors.New("invalid value for required argument 'StaticWebAppId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource StaticWebAppFunctionAppRegistration
	err := ctx.RegisterResource("azure:appservice/staticWebAppFunctionAppRegistration:StaticWebAppFunctionAppRegistration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStaticWebAppFunctionAppRegistration gets an existing StaticWebAppFunctionAppRegistration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStaticWebAppFunctionAppRegistration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StaticWebAppFunctionAppRegistrationState, opts ...pulumi.ResourceOption) (*StaticWebAppFunctionAppRegistration, error) {
	var resource StaticWebAppFunctionAppRegistration
	err := ctx.ReadResource("azure:appservice/staticWebAppFunctionAppRegistration:StaticWebAppFunctionAppRegistration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StaticWebAppFunctionAppRegistration resources.
type staticWebAppFunctionAppRegistrationState struct {
	// The ID of a Linux or Windows Function App to connect to the Static Web App as a Backend. Changing this forces a new resource to be created.
	//
	// > **Note:** Only one Function App can be connected to a Static Web App. Multiple Function Apps are not currently supported.
	//
	// > **Note:** Connecting a Function App resource to a Static Web App resource updates the Function App to use AuthV2 and configures the `azureStaticWebAppV2` which may need to be accounted for by the use of `ignoreChanges` depending on the existing `authSettingsV2` configuration of the target Function App.
	FunctionAppId *string `pulumi:"functionAppId"`
	// The ID of the Static Web App to register the Function App to as a backend. Changing this forces a new resource to be created.
	StaticWebAppId *string `pulumi:"staticWebAppId"`
}

type StaticWebAppFunctionAppRegistrationState struct {
	// The ID of a Linux or Windows Function App to connect to the Static Web App as a Backend. Changing this forces a new resource to be created.
	//
	// > **Note:** Only one Function App can be connected to a Static Web App. Multiple Function Apps are not currently supported.
	//
	// > **Note:** Connecting a Function App resource to a Static Web App resource updates the Function App to use AuthV2 and configures the `azureStaticWebAppV2` which may need to be accounted for by the use of `ignoreChanges` depending on the existing `authSettingsV2` configuration of the target Function App.
	FunctionAppId pulumi.StringPtrInput
	// The ID of the Static Web App to register the Function App to as a backend. Changing this forces a new resource to be created.
	StaticWebAppId pulumi.StringPtrInput
}

func (StaticWebAppFunctionAppRegistrationState) ElementType() reflect.Type {
	return reflect.TypeOf((*staticWebAppFunctionAppRegistrationState)(nil)).Elem()
}

type staticWebAppFunctionAppRegistrationArgs struct {
	// The ID of a Linux or Windows Function App to connect to the Static Web App as a Backend. Changing this forces a new resource to be created.
	//
	// > **Note:** Only one Function App can be connected to a Static Web App. Multiple Function Apps are not currently supported.
	//
	// > **Note:** Connecting a Function App resource to a Static Web App resource updates the Function App to use AuthV2 and configures the `azureStaticWebAppV2` which may need to be accounted for by the use of `ignoreChanges` depending on the existing `authSettingsV2` configuration of the target Function App.
	FunctionAppId string `pulumi:"functionAppId"`
	// The ID of the Static Web App to register the Function App to as a backend. Changing this forces a new resource to be created.
	StaticWebAppId string `pulumi:"staticWebAppId"`
}

// The set of arguments for constructing a StaticWebAppFunctionAppRegistration resource.
type StaticWebAppFunctionAppRegistrationArgs struct {
	// The ID of a Linux or Windows Function App to connect to the Static Web App as a Backend. Changing this forces a new resource to be created.
	//
	// > **Note:** Only one Function App can be connected to a Static Web App. Multiple Function Apps are not currently supported.
	//
	// > **Note:** Connecting a Function App resource to a Static Web App resource updates the Function App to use AuthV2 and configures the `azureStaticWebAppV2` which may need to be accounted for by the use of `ignoreChanges` depending on the existing `authSettingsV2` configuration of the target Function App.
	FunctionAppId pulumi.StringInput
	// The ID of the Static Web App to register the Function App to as a backend. Changing this forces a new resource to be created.
	StaticWebAppId pulumi.StringInput
}

func (StaticWebAppFunctionAppRegistrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*staticWebAppFunctionAppRegistrationArgs)(nil)).Elem()
}

type StaticWebAppFunctionAppRegistrationInput interface {
	pulumi.Input

	ToStaticWebAppFunctionAppRegistrationOutput() StaticWebAppFunctionAppRegistrationOutput
	ToStaticWebAppFunctionAppRegistrationOutputWithContext(ctx context.Context) StaticWebAppFunctionAppRegistrationOutput
}

func (*StaticWebAppFunctionAppRegistration) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticWebAppFunctionAppRegistration)(nil)).Elem()
}

func (i *StaticWebAppFunctionAppRegistration) ToStaticWebAppFunctionAppRegistrationOutput() StaticWebAppFunctionAppRegistrationOutput {
	return i.ToStaticWebAppFunctionAppRegistrationOutputWithContext(context.Background())
}

func (i *StaticWebAppFunctionAppRegistration) ToStaticWebAppFunctionAppRegistrationOutputWithContext(ctx context.Context) StaticWebAppFunctionAppRegistrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticWebAppFunctionAppRegistrationOutput)
}

// StaticWebAppFunctionAppRegistrationArrayInput is an input type that accepts StaticWebAppFunctionAppRegistrationArray and StaticWebAppFunctionAppRegistrationArrayOutput values.
// You can construct a concrete instance of `StaticWebAppFunctionAppRegistrationArrayInput` via:
//
//	StaticWebAppFunctionAppRegistrationArray{ StaticWebAppFunctionAppRegistrationArgs{...} }
type StaticWebAppFunctionAppRegistrationArrayInput interface {
	pulumi.Input

	ToStaticWebAppFunctionAppRegistrationArrayOutput() StaticWebAppFunctionAppRegistrationArrayOutput
	ToStaticWebAppFunctionAppRegistrationArrayOutputWithContext(context.Context) StaticWebAppFunctionAppRegistrationArrayOutput
}

type StaticWebAppFunctionAppRegistrationArray []StaticWebAppFunctionAppRegistrationInput

func (StaticWebAppFunctionAppRegistrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StaticWebAppFunctionAppRegistration)(nil)).Elem()
}

func (i StaticWebAppFunctionAppRegistrationArray) ToStaticWebAppFunctionAppRegistrationArrayOutput() StaticWebAppFunctionAppRegistrationArrayOutput {
	return i.ToStaticWebAppFunctionAppRegistrationArrayOutputWithContext(context.Background())
}

func (i StaticWebAppFunctionAppRegistrationArray) ToStaticWebAppFunctionAppRegistrationArrayOutputWithContext(ctx context.Context) StaticWebAppFunctionAppRegistrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticWebAppFunctionAppRegistrationArrayOutput)
}

// StaticWebAppFunctionAppRegistrationMapInput is an input type that accepts StaticWebAppFunctionAppRegistrationMap and StaticWebAppFunctionAppRegistrationMapOutput values.
// You can construct a concrete instance of `StaticWebAppFunctionAppRegistrationMapInput` via:
//
//	StaticWebAppFunctionAppRegistrationMap{ "key": StaticWebAppFunctionAppRegistrationArgs{...} }
type StaticWebAppFunctionAppRegistrationMapInput interface {
	pulumi.Input

	ToStaticWebAppFunctionAppRegistrationMapOutput() StaticWebAppFunctionAppRegistrationMapOutput
	ToStaticWebAppFunctionAppRegistrationMapOutputWithContext(context.Context) StaticWebAppFunctionAppRegistrationMapOutput
}

type StaticWebAppFunctionAppRegistrationMap map[string]StaticWebAppFunctionAppRegistrationInput

func (StaticWebAppFunctionAppRegistrationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StaticWebAppFunctionAppRegistration)(nil)).Elem()
}

func (i StaticWebAppFunctionAppRegistrationMap) ToStaticWebAppFunctionAppRegistrationMapOutput() StaticWebAppFunctionAppRegistrationMapOutput {
	return i.ToStaticWebAppFunctionAppRegistrationMapOutputWithContext(context.Background())
}

func (i StaticWebAppFunctionAppRegistrationMap) ToStaticWebAppFunctionAppRegistrationMapOutputWithContext(ctx context.Context) StaticWebAppFunctionAppRegistrationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticWebAppFunctionAppRegistrationMapOutput)
}

type StaticWebAppFunctionAppRegistrationOutput struct{ *pulumi.OutputState }

func (StaticWebAppFunctionAppRegistrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticWebAppFunctionAppRegistration)(nil)).Elem()
}

func (o StaticWebAppFunctionAppRegistrationOutput) ToStaticWebAppFunctionAppRegistrationOutput() StaticWebAppFunctionAppRegistrationOutput {
	return o
}

func (o StaticWebAppFunctionAppRegistrationOutput) ToStaticWebAppFunctionAppRegistrationOutputWithContext(ctx context.Context) StaticWebAppFunctionAppRegistrationOutput {
	return o
}

// The ID of a Linux or Windows Function App to connect to the Static Web App as a Backend. Changing this forces a new resource to be created.
//
// > **Note:** Only one Function App can be connected to a Static Web App. Multiple Function Apps are not currently supported.
//
// > **Note:** Connecting a Function App resource to a Static Web App resource updates the Function App to use AuthV2 and configures the `azureStaticWebAppV2` which may need to be accounted for by the use of `ignoreChanges` depending on the existing `authSettingsV2` configuration of the target Function App.
func (o StaticWebAppFunctionAppRegistrationOutput) FunctionAppId() pulumi.StringOutput {
	return o.ApplyT(func(v *StaticWebAppFunctionAppRegistration) pulumi.StringOutput { return v.FunctionAppId }).(pulumi.StringOutput)
}

// The ID of the Static Web App to register the Function App to as a backend. Changing this forces a new resource to be created.
func (o StaticWebAppFunctionAppRegistrationOutput) StaticWebAppId() pulumi.StringOutput {
	return o.ApplyT(func(v *StaticWebAppFunctionAppRegistration) pulumi.StringOutput { return v.StaticWebAppId }).(pulumi.StringOutput)
}

type StaticWebAppFunctionAppRegistrationArrayOutput struct{ *pulumi.OutputState }

func (StaticWebAppFunctionAppRegistrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StaticWebAppFunctionAppRegistration)(nil)).Elem()
}

func (o StaticWebAppFunctionAppRegistrationArrayOutput) ToStaticWebAppFunctionAppRegistrationArrayOutput() StaticWebAppFunctionAppRegistrationArrayOutput {
	return o
}

func (o StaticWebAppFunctionAppRegistrationArrayOutput) ToStaticWebAppFunctionAppRegistrationArrayOutputWithContext(ctx context.Context) StaticWebAppFunctionAppRegistrationArrayOutput {
	return o
}

func (o StaticWebAppFunctionAppRegistrationArrayOutput) Index(i pulumi.IntInput) StaticWebAppFunctionAppRegistrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *StaticWebAppFunctionAppRegistration {
		return vs[0].([]*StaticWebAppFunctionAppRegistration)[vs[1].(int)]
	}).(StaticWebAppFunctionAppRegistrationOutput)
}

type StaticWebAppFunctionAppRegistrationMapOutput struct{ *pulumi.OutputState }

func (StaticWebAppFunctionAppRegistrationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StaticWebAppFunctionAppRegistration)(nil)).Elem()
}

func (o StaticWebAppFunctionAppRegistrationMapOutput) ToStaticWebAppFunctionAppRegistrationMapOutput() StaticWebAppFunctionAppRegistrationMapOutput {
	return o
}

func (o StaticWebAppFunctionAppRegistrationMapOutput) ToStaticWebAppFunctionAppRegistrationMapOutputWithContext(ctx context.Context) StaticWebAppFunctionAppRegistrationMapOutput {
	return o
}

func (o StaticWebAppFunctionAppRegistrationMapOutput) MapIndex(k pulumi.StringInput) StaticWebAppFunctionAppRegistrationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *StaticWebAppFunctionAppRegistration {
		return vs[0].(map[string]*StaticWebAppFunctionAppRegistration)[vs[1].(string)]
	}).(StaticWebAppFunctionAppRegistrationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StaticWebAppFunctionAppRegistrationInput)(nil)).Elem(), &StaticWebAppFunctionAppRegistration{})
	pulumi.RegisterInputType(reflect.TypeOf((*StaticWebAppFunctionAppRegistrationArrayInput)(nil)).Elem(), StaticWebAppFunctionAppRegistrationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StaticWebAppFunctionAppRegistrationMapInput)(nil)).Elem(), StaticWebAppFunctionAppRegistrationMap{})
	pulumi.RegisterOutputType(StaticWebAppFunctionAppRegistrationOutput{})
	pulumi.RegisterOutputType(StaticWebAppFunctionAppRegistrationArrayOutput{})
	pulumi.RegisterOutputType(StaticWebAppFunctionAppRegistrationMapOutput{})
}
