// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appservice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an App Service Static Site.
//
// ->**NOTE:** After the Static Site is provisioned, you'll need to associate your target repository, which contains your web app, to the Static Site, by following the [Azure Static Site document](https://docs.microsoft.com/azure/static-web-apps/github-actions-workflow).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appservice"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = appservice.NewStaticSite(ctx, "exampleStaticSite", &appservice.StaticSiteArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Static Web Apps can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:appservice/staticSite:StaticSite example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Web/staticSites/my-static-site1
//
// ```
type StaticSite struct {
	pulumi.CustomResourceState

	// The API key of this Static Web App, which is used for later interacting with this Static Web App from other clients, e.g. GitHub Action.
	ApiKey pulumi.StringOutput `pulumi:"apiKey"`
	// A key-value pair of App Settings.
	AppSettings pulumi.StringMapOutput `pulumi:"appSettings"`
	// The default host name of the Static Web App.
	DefaultHostName pulumi.StringOutput `pulumi:"defaultHostName"`
	// An `identity` block as defined below.
	Identity StaticSiteIdentityPtrOutput `pulumi:"identity"`
	// The Azure Region where the Static Web App should exist. Changing this forces a new Static Web App to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name which should be used for this Static Web App. Changing this forces a new Static Web App to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the Resource Group where the Static Web App should exist. Changing this forces a new Static Web App to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// Specifies the SKU size of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
	SkuSize pulumi.StringPtrOutput `pulumi:"skuSize"`
	// Specifies the SKU tier of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
	SkuTier pulumi.StringPtrOutput `pulumi:"skuTier"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewStaticSite registers a new resource with the given unique name, arguments, and options.
func NewStaticSite(ctx *pulumi.Context,
	name string, args *StaticSiteArgs, opts ...pulumi.ResourceOption) (*StaticSite, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"apiKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource StaticSite
	err := ctx.RegisterResource("azure:appservice/staticSite:StaticSite", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStaticSite gets an existing StaticSite resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStaticSite(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StaticSiteState, opts ...pulumi.ResourceOption) (*StaticSite, error) {
	var resource StaticSite
	err := ctx.ReadResource("azure:appservice/staticSite:StaticSite", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StaticSite resources.
type staticSiteState struct {
	// The API key of this Static Web App, which is used for later interacting with this Static Web App from other clients, e.g. GitHub Action.
	ApiKey *string `pulumi:"apiKey"`
	// A key-value pair of App Settings.
	AppSettings map[string]string `pulumi:"appSettings"`
	// The default host name of the Static Web App.
	DefaultHostName *string `pulumi:"defaultHostName"`
	// An `identity` block as defined below.
	Identity *StaticSiteIdentity `pulumi:"identity"`
	// The Azure Region where the Static Web App should exist. Changing this forces a new Static Web App to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this Static Web App. Changing this forces a new Static Web App to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group where the Static Web App should exist. Changing this forces a new Static Web App to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// Specifies the SKU size of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
	SkuSize *string `pulumi:"skuSize"`
	// Specifies the SKU tier of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
	SkuTier *string `pulumi:"skuTier"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

type StaticSiteState struct {
	// The API key of this Static Web App, which is used for later interacting with this Static Web App from other clients, e.g. GitHub Action.
	ApiKey pulumi.StringPtrInput
	// A key-value pair of App Settings.
	AppSettings pulumi.StringMapInput
	// The default host name of the Static Web App.
	DefaultHostName pulumi.StringPtrInput
	// An `identity` block as defined below.
	Identity StaticSiteIdentityPtrInput
	// The Azure Region where the Static Web App should exist. Changing this forces a new Static Web App to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this Static Web App. Changing this forces a new Static Web App to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group where the Static Web App should exist. Changing this forces a new Static Web App to be created.
	ResourceGroupName pulumi.StringPtrInput
	// Specifies the SKU size of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
	SkuSize pulumi.StringPtrInput
	// Specifies the SKU tier of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
	SkuTier pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
}

func (StaticSiteState) ElementType() reflect.Type {
	return reflect.TypeOf((*staticSiteState)(nil)).Elem()
}

type staticSiteArgs struct {
	// A key-value pair of App Settings.
	AppSettings map[string]string `pulumi:"appSettings"`
	// An `identity` block as defined below.
	Identity *StaticSiteIdentity `pulumi:"identity"`
	// The Azure Region where the Static Web App should exist. Changing this forces a new Static Web App to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this Static Web App. Changing this forces a new Static Web App to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group where the Static Web App should exist. Changing this forces a new Static Web App to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Specifies the SKU size of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
	SkuSize *string `pulumi:"skuSize"`
	// Specifies the SKU tier of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
	SkuTier *string `pulumi:"skuTier"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a StaticSite resource.
type StaticSiteArgs struct {
	// A key-value pair of App Settings.
	AppSettings pulumi.StringMapInput
	// An `identity` block as defined below.
	Identity StaticSiteIdentityPtrInput
	// The Azure Region where the Static Web App should exist. Changing this forces a new Static Web App to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this Static Web App. Changing this forces a new Static Web App to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group where the Static Web App should exist. Changing this forces a new Static Web App to be created.
	ResourceGroupName pulumi.StringInput
	// Specifies the SKU size of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
	SkuSize pulumi.StringPtrInput
	// Specifies the SKU tier of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
	SkuTier pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
}

func (StaticSiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*staticSiteArgs)(nil)).Elem()
}

type StaticSiteInput interface {
	pulumi.Input

	ToStaticSiteOutput() StaticSiteOutput
	ToStaticSiteOutputWithContext(ctx context.Context) StaticSiteOutput
}

func (*StaticSite) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticSite)(nil)).Elem()
}

func (i *StaticSite) ToStaticSiteOutput() StaticSiteOutput {
	return i.ToStaticSiteOutputWithContext(context.Background())
}

func (i *StaticSite) ToStaticSiteOutputWithContext(ctx context.Context) StaticSiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteOutput)
}

// StaticSiteArrayInput is an input type that accepts StaticSiteArray and StaticSiteArrayOutput values.
// You can construct a concrete instance of `StaticSiteArrayInput` via:
//
//	StaticSiteArray{ StaticSiteArgs{...} }
type StaticSiteArrayInput interface {
	pulumi.Input

	ToStaticSiteArrayOutput() StaticSiteArrayOutput
	ToStaticSiteArrayOutputWithContext(context.Context) StaticSiteArrayOutput
}

type StaticSiteArray []StaticSiteInput

func (StaticSiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StaticSite)(nil)).Elem()
}

func (i StaticSiteArray) ToStaticSiteArrayOutput() StaticSiteArrayOutput {
	return i.ToStaticSiteArrayOutputWithContext(context.Background())
}

func (i StaticSiteArray) ToStaticSiteArrayOutputWithContext(ctx context.Context) StaticSiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteArrayOutput)
}

// StaticSiteMapInput is an input type that accepts StaticSiteMap and StaticSiteMapOutput values.
// You can construct a concrete instance of `StaticSiteMapInput` via:
//
//	StaticSiteMap{ "key": StaticSiteArgs{...} }
type StaticSiteMapInput interface {
	pulumi.Input

	ToStaticSiteMapOutput() StaticSiteMapOutput
	ToStaticSiteMapOutputWithContext(context.Context) StaticSiteMapOutput
}

type StaticSiteMap map[string]StaticSiteInput

func (StaticSiteMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StaticSite)(nil)).Elem()
}

func (i StaticSiteMap) ToStaticSiteMapOutput() StaticSiteMapOutput {
	return i.ToStaticSiteMapOutputWithContext(context.Background())
}

func (i StaticSiteMap) ToStaticSiteMapOutputWithContext(ctx context.Context) StaticSiteMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteMapOutput)
}

type StaticSiteOutput struct{ *pulumi.OutputState }

func (StaticSiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticSite)(nil)).Elem()
}

func (o StaticSiteOutput) ToStaticSiteOutput() StaticSiteOutput {
	return o
}

func (o StaticSiteOutput) ToStaticSiteOutputWithContext(ctx context.Context) StaticSiteOutput {
	return o
}

// The API key of this Static Web App, which is used for later interacting with this Static Web App from other clients, e.g. GitHub Action.
func (o StaticSiteOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v *StaticSite) pulumi.StringOutput { return v.ApiKey }).(pulumi.StringOutput)
}

// A key-value pair of App Settings.
func (o StaticSiteOutput) AppSettings() pulumi.StringMapOutput {
	return o.ApplyT(func(v *StaticSite) pulumi.StringMapOutput { return v.AppSettings }).(pulumi.StringMapOutput)
}

// The default host name of the Static Web App.
func (o StaticSiteOutput) DefaultHostName() pulumi.StringOutput {
	return o.ApplyT(func(v *StaticSite) pulumi.StringOutput { return v.DefaultHostName }).(pulumi.StringOutput)
}

// An `identity` block as defined below.
func (o StaticSiteOutput) Identity() StaticSiteIdentityPtrOutput {
	return o.ApplyT(func(v *StaticSite) StaticSiteIdentityPtrOutput { return v.Identity }).(StaticSiteIdentityPtrOutput)
}

// The Azure Region where the Static Web App should exist. Changing this forces a new Static Web App to be created.
func (o StaticSiteOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *StaticSite) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name which should be used for this Static Web App. Changing this forces a new Static Web App to be created.
func (o StaticSiteOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *StaticSite) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the Resource Group where the Static Web App should exist. Changing this forces a new Static Web App to be created.
func (o StaticSiteOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *StaticSite) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// Specifies the SKU size of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
func (o StaticSiteOutput) SkuSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSite) pulumi.StringPtrOutput { return v.SkuSize }).(pulumi.StringPtrOutput)
}

// Specifies the SKU tier of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
func (o StaticSiteOutput) SkuTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSite) pulumi.StringPtrOutput { return v.SkuTier }).(pulumi.StringPtrOutput)
}

// A mapping of tags to assign to the resource.
func (o StaticSiteOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *StaticSite) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type StaticSiteArrayOutput struct{ *pulumi.OutputState }

func (StaticSiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StaticSite)(nil)).Elem()
}

func (o StaticSiteArrayOutput) ToStaticSiteArrayOutput() StaticSiteArrayOutput {
	return o
}

func (o StaticSiteArrayOutput) ToStaticSiteArrayOutputWithContext(ctx context.Context) StaticSiteArrayOutput {
	return o
}

func (o StaticSiteArrayOutput) Index(i pulumi.IntInput) StaticSiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *StaticSite {
		return vs[0].([]*StaticSite)[vs[1].(int)]
	}).(StaticSiteOutput)
}

type StaticSiteMapOutput struct{ *pulumi.OutputState }

func (StaticSiteMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StaticSite)(nil)).Elem()
}

func (o StaticSiteMapOutput) ToStaticSiteMapOutput() StaticSiteMapOutput {
	return o
}

func (o StaticSiteMapOutput) ToStaticSiteMapOutputWithContext(ctx context.Context) StaticSiteMapOutput {
	return o
}

func (o StaticSiteMapOutput) MapIndex(k pulumi.StringInput) StaticSiteOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *StaticSite {
		return vs[0].(map[string]*StaticSite)[vs[1].(string)]
	}).(StaticSiteOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StaticSiteInput)(nil)).Elem(), &StaticSite{})
	pulumi.RegisterInputType(reflect.TypeOf((*StaticSiteArrayInput)(nil)).Elem(), StaticSiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StaticSiteMapInput)(nil)).Elem(), StaticSiteMap{})
	pulumi.RegisterOutputType(StaticSiteOutput{})
	pulumi.RegisterOutputType(StaticSiteArrayOutput{})
	pulumi.RegisterOutputType(StaticSiteMapOutput{})
}
