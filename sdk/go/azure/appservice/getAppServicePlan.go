// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing App Service Plan (formerly known as a `Server Farm`).
//
// !> **Note:** The `appservice.Plan` data source is deprecated in version 3.0 of the AzureRM provider and will be removed in version 4.0. Please use the `appservice.ServicePlan` data source instead.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appservice"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := appservice.GetAppServicePlan(ctx, &appservice.GetAppServicePlanArgs{
//				Name:              "search-app-service-plan",
//				ResourceGroupName: "search-service",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("appServicePlanId", example.Id)
//			return nil
//		})
//	}
//
// ```
func GetAppServicePlan(ctx *pulumi.Context, args *GetAppServicePlanArgs, opts ...pulumi.InvokeOption) (*GetAppServicePlanResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAppServicePlanResult
	err := ctx.Invoke("azure:appservice/getAppServicePlan:getAppServicePlan", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAppServicePlan.
type GetAppServicePlanArgs struct {
	// The name of the App Service Plan.
	Name string `pulumi:"name"`
	// The Name of the Resource Group where the App Service Plan exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getAppServicePlan.
type GetAppServicePlanResult struct {
	// The ID of the App Service Environment where the App Service Plan is located.
	AppServiceEnvironmentId string `pulumi:"appServiceEnvironmentId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A flag that indicates if it's a xenon plan (support for Windows Container)
	IsXenon bool `pulumi:"isXenon"`
	// The Operating System type of the App Service Plan
	Kind string `pulumi:"kind"`
	// The Azure location where the App Service Plan exists
	Location string `pulumi:"location"`
	// The maximum number of total workers allowed for this ElasticScaleEnabled App Service Plan.
	MaximumElasticWorkerCount int `pulumi:"maximumElasticWorkerCount"`
	// The maximum number of workers supported with the App Service Plan's sku.
	MaximumNumberOfWorkers int    `pulumi:"maximumNumberOfWorkers"`
	Name                   string `pulumi:"name"`
	// Can Apps assigned to this App Service Plan be scaled independently?
	PerSiteScaling bool `pulumi:"perSiteScaling"`
	// Is this App Service Plan `Reserved`?
	Reserved          bool   `pulumi:"reserved"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A `sku` block as documented below.
	Sku GetAppServicePlanSku `pulumi:"sku"`
	// A mapping of tags assigned to the resource.
	Tags map[string]string `pulumi:"tags"`
	// App Service Plan perform availability zone balancing.
	ZoneRedundant bool `pulumi:"zoneRedundant"`
}

func GetAppServicePlanOutput(ctx *pulumi.Context, args GetAppServicePlanOutputArgs, opts ...pulumi.InvokeOption) GetAppServicePlanResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAppServicePlanResult, error) {
			args := v.(GetAppServicePlanArgs)
			r, err := GetAppServicePlan(ctx, &args, opts...)
			var s GetAppServicePlanResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAppServicePlanResultOutput)
}

// A collection of arguments for invoking getAppServicePlan.
type GetAppServicePlanOutputArgs struct {
	// The name of the App Service Plan.
	Name pulumi.StringInput `pulumi:"name"`
	// The Name of the Resource Group where the App Service Plan exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetAppServicePlanOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppServicePlanArgs)(nil)).Elem()
}

// A collection of values returned by getAppServicePlan.
type GetAppServicePlanResultOutput struct{ *pulumi.OutputState }

func (GetAppServicePlanResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppServicePlanResult)(nil)).Elem()
}

func (o GetAppServicePlanResultOutput) ToGetAppServicePlanResultOutput() GetAppServicePlanResultOutput {
	return o
}

func (o GetAppServicePlanResultOutput) ToGetAppServicePlanResultOutputWithContext(ctx context.Context) GetAppServicePlanResultOutput {
	return o
}

// The ID of the App Service Environment where the App Service Plan is located.
func (o GetAppServicePlanResultOutput) AppServiceEnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServicePlanResult) string { return v.AppServiceEnvironmentId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAppServicePlanResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServicePlanResult) string { return v.Id }).(pulumi.StringOutput)
}

// A flag that indicates if it's a xenon plan (support for Windows Container)
func (o GetAppServicePlanResultOutput) IsXenon() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAppServicePlanResult) bool { return v.IsXenon }).(pulumi.BoolOutput)
}

// The Operating System type of the App Service Plan
func (o GetAppServicePlanResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServicePlanResult) string { return v.Kind }).(pulumi.StringOutput)
}

// The Azure location where the App Service Plan exists
func (o GetAppServicePlanResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServicePlanResult) string { return v.Location }).(pulumi.StringOutput)
}

// The maximum number of total workers allowed for this ElasticScaleEnabled App Service Plan.
func (o GetAppServicePlanResultOutput) MaximumElasticWorkerCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetAppServicePlanResult) int { return v.MaximumElasticWorkerCount }).(pulumi.IntOutput)
}

// The maximum number of workers supported with the App Service Plan's sku.
func (o GetAppServicePlanResultOutput) MaximumNumberOfWorkers() pulumi.IntOutput {
	return o.ApplyT(func(v GetAppServicePlanResult) int { return v.MaximumNumberOfWorkers }).(pulumi.IntOutput)
}

func (o GetAppServicePlanResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServicePlanResult) string { return v.Name }).(pulumi.StringOutput)
}

// Can Apps assigned to this App Service Plan be scaled independently?
func (o GetAppServicePlanResultOutput) PerSiteScaling() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAppServicePlanResult) bool { return v.PerSiteScaling }).(pulumi.BoolOutput)
}

// Is this App Service Plan `Reserved`?
func (o GetAppServicePlanResultOutput) Reserved() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAppServicePlanResult) bool { return v.Reserved }).(pulumi.BoolOutput)
}

func (o GetAppServicePlanResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppServicePlanResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A `sku` block as documented below.
func (o GetAppServicePlanResultOutput) Sku() GetAppServicePlanSkuOutput {
	return o.ApplyT(func(v GetAppServicePlanResult) GetAppServicePlanSku { return v.Sku }).(GetAppServicePlanSkuOutput)
}

// A mapping of tags assigned to the resource.
func (o GetAppServicePlanResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetAppServicePlanResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// App Service Plan perform availability zone balancing.
func (o GetAppServicePlanResultOutput) ZoneRedundant() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAppServicePlanResult) bool { return v.ZoneRedundant }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAppServicePlanResultOutput{})
}
