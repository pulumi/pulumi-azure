// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appservice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an App Service Static Web App.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appservice"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resources"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = appservice.NewStaticWebApp(ctx, "example", &appservice.StaticWebAppArgs{
//				Name:              pulumi.String("example"),
//				ResourceGroupName: example.Name,
//				Location:          example.Location,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Static Web Apps can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:appservice/staticWebApp:StaticWebApp example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Web/staticSites/my-static-site1
// ```
type StaticWebApp struct {
	pulumi.CustomResourceState

	// The API key of this Static Web App, which is used for later interacting with this Static Web App from other clients, e.g. GitHub Action.
	ApiKey pulumi.StringOutput `pulumi:"apiKey"`
	// A key-value pair of App Settings.
	AppSettings pulumi.StringMapOutput `pulumi:"appSettings"`
	// A `basicAuth` block as defined below.
	BasicAuth StaticWebAppBasicAuthPtrOutput `pulumi:"basicAuth"`
	// Should changes to the configuration file be permitted. Defaults to `true`.
	ConfigurationFileChangesEnabled pulumi.BoolPtrOutput `pulumi:"configurationFileChangesEnabled"`
	// The default host name of the Static Web App.
	DefaultHostName pulumi.StringOutput `pulumi:"defaultHostName"`
	// An `identity` block as defined below.
	Identity StaticWebAppIdentityPtrOutput `pulumi:"identity"`
	// The Azure Region where the Static Web App should exist. Changing this forces a new Static Web App to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name which should be used for this Static Web App. Changing this forces a new Static Web App to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Are Preview (Staging) environments enabled. Defaults to `true`.
	PreviewEnvironmentsEnabled pulumi.BoolPtrOutput `pulumi:"previewEnvironmentsEnabled"`
	// The name of the Resource Group where the Static Web App should exist. Changing this forces a new Static Web App to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// Specifies the SKU size of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
	SkuSize pulumi.StringPtrOutput `pulumi:"skuSize"`
	// Specifies the SKU tier of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
	SkuTier pulumi.StringPtrOutput `pulumi:"skuTier"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewStaticWebApp registers a new resource with the given unique name, arguments, and options.
func NewStaticWebApp(ctx *pulumi.Context,
	name string, args *StaticWebAppArgs, opts ...pulumi.ResourceOption) (*StaticWebApp, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.BasicAuth != nil {
		args.BasicAuth = pulumi.ToSecret(args.BasicAuth).(StaticWebAppBasicAuthPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"apiKey",
		"basicAuth",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource StaticWebApp
	err := ctx.RegisterResource("azure:appservice/staticWebApp:StaticWebApp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStaticWebApp gets an existing StaticWebApp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStaticWebApp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StaticWebAppState, opts ...pulumi.ResourceOption) (*StaticWebApp, error) {
	var resource StaticWebApp
	err := ctx.ReadResource("azure:appservice/staticWebApp:StaticWebApp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StaticWebApp resources.
type staticWebAppState struct {
	// The API key of this Static Web App, which is used for later interacting with this Static Web App from other clients, e.g. GitHub Action.
	ApiKey *string `pulumi:"apiKey"`
	// A key-value pair of App Settings.
	AppSettings map[string]string `pulumi:"appSettings"`
	// A `basicAuth` block as defined below.
	BasicAuth *StaticWebAppBasicAuth `pulumi:"basicAuth"`
	// Should changes to the configuration file be permitted. Defaults to `true`.
	ConfigurationFileChangesEnabled *bool `pulumi:"configurationFileChangesEnabled"`
	// The default host name of the Static Web App.
	DefaultHostName *string `pulumi:"defaultHostName"`
	// An `identity` block as defined below.
	Identity *StaticWebAppIdentity `pulumi:"identity"`
	// The Azure Region where the Static Web App should exist. Changing this forces a new Static Web App to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this Static Web App. Changing this forces a new Static Web App to be created.
	Name *string `pulumi:"name"`
	// Are Preview (Staging) environments enabled. Defaults to `true`.
	PreviewEnvironmentsEnabled *bool `pulumi:"previewEnvironmentsEnabled"`
	// The name of the Resource Group where the Static Web App should exist. Changing this forces a new Static Web App to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// Specifies the SKU size of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
	SkuSize *string `pulumi:"skuSize"`
	// Specifies the SKU tier of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
	SkuTier *string `pulumi:"skuTier"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

type StaticWebAppState struct {
	// The API key of this Static Web App, which is used for later interacting with this Static Web App from other clients, e.g. GitHub Action.
	ApiKey pulumi.StringPtrInput
	// A key-value pair of App Settings.
	AppSettings pulumi.StringMapInput
	// A `basicAuth` block as defined below.
	BasicAuth StaticWebAppBasicAuthPtrInput
	// Should changes to the configuration file be permitted. Defaults to `true`.
	ConfigurationFileChangesEnabled pulumi.BoolPtrInput
	// The default host name of the Static Web App.
	DefaultHostName pulumi.StringPtrInput
	// An `identity` block as defined below.
	Identity StaticWebAppIdentityPtrInput
	// The Azure Region where the Static Web App should exist. Changing this forces a new Static Web App to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this Static Web App. Changing this forces a new Static Web App to be created.
	Name pulumi.StringPtrInput
	// Are Preview (Staging) environments enabled. Defaults to `true`.
	PreviewEnvironmentsEnabled pulumi.BoolPtrInput
	// The name of the Resource Group where the Static Web App should exist. Changing this forces a new Static Web App to be created.
	ResourceGroupName pulumi.StringPtrInput
	// Specifies the SKU size of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
	SkuSize pulumi.StringPtrInput
	// Specifies the SKU tier of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
	SkuTier pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
}

func (StaticWebAppState) ElementType() reflect.Type {
	return reflect.TypeOf((*staticWebAppState)(nil)).Elem()
}

type staticWebAppArgs struct {
	// A key-value pair of App Settings.
	AppSettings map[string]string `pulumi:"appSettings"`
	// A `basicAuth` block as defined below.
	BasicAuth *StaticWebAppBasicAuth `pulumi:"basicAuth"`
	// Should changes to the configuration file be permitted. Defaults to `true`.
	ConfigurationFileChangesEnabled *bool `pulumi:"configurationFileChangesEnabled"`
	// An `identity` block as defined below.
	Identity *StaticWebAppIdentity `pulumi:"identity"`
	// The Azure Region where the Static Web App should exist. Changing this forces a new Static Web App to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this Static Web App. Changing this forces a new Static Web App to be created.
	Name *string `pulumi:"name"`
	// Are Preview (Staging) environments enabled. Defaults to `true`.
	PreviewEnvironmentsEnabled *bool `pulumi:"previewEnvironmentsEnabled"`
	// The name of the Resource Group where the Static Web App should exist. Changing this forces a new Static Web App to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Specifies the SKU size of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
	SkuSize *string `pulumi:"skuSize"`
	// Specifies the SKU tier of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
	SkuTier *string `pulumi:"skuTier"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a StaticWebApp resource.
type StaticWebAppArgs struct {
	// A key-value pair of App Settings.
	AppSettings pulumi.StringMapInput
	// A `basicAuth` block as defined below.
	BasicAuth StaticWebAppBasicAuthPtrInput
	// Should changes to the configuration file be permitted. Defaults to `true`.
	ConfigurationFileChangesEnabled pulumi.BoolPtrInput
	// An `identity` block as defined below.
	Identity StaticWebAppIdentityPtrInput
	// The Azure Region where the Static Web App should exist. Changing this forces a new Static Web App to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this Static Web App. Changing this forces a new Static Web App to be created.
	Name pulumi.StringPtrInput
	// Are Preview (Staging) environments enabled. Defaults to `true`.
	PreviewEnvironmentsEnabled pulumi.BoolPtrInput
	// The name of the Resource Group where the Static Web App should exist. Changing this forces a new Static Web App to be created.
	ResourceGroupName pulumi.StringInput
	// Specifies the SKU size of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
	SkuSize pulumi.StringPtrInput
	// Specifies the SKU tier of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
	SkuTier pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
}

func (StaticWebAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*staticWebAppArgs)(nil)).Elem()
}

type StaticWebAppInput interface {
	pulumi.Input

	ToStaticWebAppOutput() StaticWebAppOutput
	ToStaticWebAppOutputWithContext(ctx context.Context) StaticWebAppOutput
}

func (*StaticWebApp) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticWebApp)(nil)).Elem()
}

func (i *StaticWebApp) ToStaticWebAppOutput() StaticWebAppOutput {
	return i.ToStaticWebAppOutputWithContext(context.Background())
}

func (i *StaticWebApp) ToStaticWebAppOutputWithContext(ctx context.Context) StaticWebAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticWebAppOutput)
}

// StaticWebAppArrayInput is an input type that accepts StaticWebAppArray and StaticWebAppArrayOutput values.
// You can construct a concrete instance of `StaticWebAppArrayInput` via:
//
//	StaticWebAppArray{ StaticWebAppArgs{...} }
type StaticWebAppArrayInput interface {
	pulumi.Input

	ToStaticWebAppArrayOutput() StaticWebAppArrayOutput
	ToStaticWebAppArrayOutputWithContext(context.Context) StaticWebAppArrayOutput
}

type StaticWebAppArray []StaticWebAppInput

func (StaticWebAppArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StaticWebApp)(nil)).Elem()
}

func (i StaticWebAppArray) ToStaticWebAppArrayOutput() StaticWebAppArrayOutput {
	return i.ToStaticWebAppArrayOutputWithContext(context.Background())
}

func (i StaticWebAppArray) ToStaticWebAppArrayOutputWithContext(ctx context.Context) StaticWebAppArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticWebAppArrayOutput)
}

// StaticWebAppMapInput is an input type that accepts StaticWebAppMap and StaticWebAppMapOutput values.
// You can construct a concrete instance of `StaticWebAppMapInput` via:
//
//	StaticWebAppMap{ "key": StaticWebAppArgs{...} }
type StaticWebAppMapInput interface {
	pulumi.Input

	ToStaticWebAppMapOutput() StaticWebAppMapOutput
	ToStaticWebAppMapOutputWithContext(context.Context) StaticWebAppMapOutput
}

type StaticWebAppMap map[string]StaticWebAppInput

func (StaticWebAppMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StaticWebApp)(nil)).Elem()
}

func (i StaticWebAppMap) ToStaticWebAppMapOutput() StaticWebAppMapOutput {
	return i.ToStaticWebAppMapOutputWithContext(context.Background())
}

func (i StaticWebAppMap) ToStaticWebAppMapOutputWithContext(ctx context.Context) StaticWebAppMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticWebAppMapOutput)
}

type StaticWebAppOutput struct{ *pulumi.OutputState }

func (StaticWebAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticWebApp)(nil)).Elem()
}

func (o StaticWebAppOutput) ToStaticWebAppOutput() StaticWebAppOutput {
	return o
}

func (o StaticWebAppOutput) ToStaticWebAppOutputWithContext(ctx context.Context) StaticWebAppOutput {
	return o
}

// The API key of this Static Web App, which is used for later interacting with this Static Web App from other clients, e.g. GitHub Action.
func (o StaticWebAppOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v *StaticWebApp) pulumi.StringOutput { return v.ApiKey }).(pulumi.StringOutput)
}

// A key-value pair of App Settings.
func (o StaticWebAppOutput) AppSettings() pulumi.StringMapOutput {
	return o.ApplyT(func(v *StaticWebApp) pulumi.StringMapOutput { return v.AppSettings }).(pulumi.StringMapOutput)
}

// A `basicAuth` block as defined below.
func (o StaticWebAppOutput) BasicAuth() StaticWebAppBasicAuthPtrOutput {
	return o.ApplyT(func(v *StaticWebApp) StaticWebAppBasicAuthPtrOutput { return v.BasicAuth }).(StaticWebAppBasicAuthPtrOutput)
}

// Should changes to the configuration file be permitted. Defaults to `true`.
func (o StaticWebAppOutput) ConfigurationFileChangesEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StaticWebApp) pulumi.BoolPtrOutput { return v.ConfigurationFileChangesEnabled }).(pulumi.BoolPtrOutput)
}

// The default host name of the Static Web App.
func (o StaticWebAppOutput) DefaultHostName() pulumi.StringOutput {
	return o.ApplyT(func(v *StaticWebApp) pulumi.StringOutput { return v.DefaultHostName }).(pulumi.StringOutput)
}

// An `identity` block as defined below.
func (o StaticWebAppOutput) Identity() StaticWebAppIdentityPtrOutput {
	return o.ApplyT(func(v *StaticWebApp) StaticWebAppIdentityPtrOutput { return v.Identity }).(StaticWebAppIdentityPtrOutput)
}

// The Azure Region where the Static Web App should exist. Changing this forces a new Static Web App to be created.
func (o StaticWebAppOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *StaticWebApp) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name which should be used for this Static Web App. Changing this forces a new Static Web App to be created.
func (o StaticWebAppOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *StaticWebApp) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Are Preview (Staging) environments enabled. Defaults to `true`.
func (o StaticWebAppOutput) PreviewEnvironmentsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StaticWebApp) pulumi.BoolPtrOutput { return v.PreviewEnvironmentsEnabled }).(pulumi.BoolPtrOutput)
}

// The name of the Resource Group where the Static Web App should exist. Changing this forces a new Static Web App to be created.
func (o StaticWebAppOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *StaticWebApp) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// Specifies the SKU size of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
func (o StaticWebAppOutput) SkuSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticWebApp) pulumi.StringPtrOutput { return v.SkuSize }).(pulumi.StringPtrOutput)
}

// Specifies the SKU tier of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
func (o StaticWebAppOutput) SkuTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticWebApp) pulumi.StringPtrOutput { return v.SkuTier }).(pulumi.StringPtrOutput)
}

// A mapping of tags to assign to the resource.
func (o StaticWebAppOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *StaticWebApp) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type StaticWebAppArrayOutput struct{ *pulumi.OutputState }

func (StaticWebAppArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StaticWebApp)(nil)).Elem()
}

func (o StaticWebAppArrayOutput) ToStaticWebAppArrayOutput() StaticWebAppArrayOutput {
	return o
}

func (o StaticWebAppArrayOutput) ToStaticWebAppArrayOutputWithContext(ctx context.Context) StaticWebAppArrayOutput {
	return o
}

func (o StaticWebAppArrayOutput) Index(i pulumi.IntInput) StaticWebAppOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *StaticWebApp {
		return vs[0].([]*StaticWebApp)[vs[1].(int)]
	}).(StaticWebAppOutput)
}

type StaticWebAppMapOutput struct{ *pulumi.OutputState }

func (StaticWebAppMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StaticWebApp)(nil)).Elem()
}

func (o StaticWebAppMapOutput) ToStaticWebAppMapOutput() StaticWebAppMapOutput {
	return o
}

func (o StaticWebAppMapOutput) ToStaticWebAppMapOutputWithContext(ctx context.Context) StaticWebAppMapOutput {
	return o
}

func (o StaticWebAppMapOutput) MapIndex(k pulumi.StringInput) StaticWebAppOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *StaticWebApp {
		return vs[0].(map[string]*StaticWebApp)[vs[1].(string)]
	}).(StaticWebAppOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StaticWebAppInput)(nil)).Elem(), &StaticWebApp{})
	pulumi.RegisterInputType(reflect.TypeOf((*StaticWebAppArrayInput)(nil)).Elem(), StaticWebAppArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StaticWebAppMapInput)(nil)).Elem(), StaticWebAppMap{})
	pulumi.RegisterOutputType(StaticWebAppOutput{})
	pulumi.RegisterOutputType(StaticWebAppArrayOutput{})
	pulumi.RegisterOutputType(StaticWebAppMapOutput{})
}
