// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appservice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an App Service (within an App Service Plan).
//
// !> **NOTE:** This resource has been deprecated in version 3.0 of the AzureRM provider and will be removed in version 4.0. Please use `appservice.LinuxWebApp` resources instead.
//
// > **Note:** When using Slots - the `appSettings`, `connectionString` and `siteConfig` blocks on the `appservice.AppService` resource will be overwritten when promoting a Slot using the `appservice.ActiveSlot` resource.
//
// ## Example Usage
//
// This example provisions a Windows App Service.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appservice"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			examplePlan, err := appservice.NewPlan(ctx, "examplePlan", &appservice.PlanArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				Sku: &appservice.PlanSkuArgs{
//					Tier: pulumi.String("Standard"),
//					Size: pulumi.String("S1"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = appservice.NewAppService(ctx, "exampleAppService", &appservice.AppServiceArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				AppServicePlanId:  examplePlan.ID(),
//				SiteConfig: &appservice.AppServiceSiteConfigArgs{
//					DotnetFrameworkVersion: pulumi.String("v4.0"),
//					ScmType:                pulumi.String("LocalGit"),
//				},
//				AppSettings: pulumi.StringMap{
//					"SOME_KEY": pulumi.String("some-value"),
//				},
//				ConnectionStrings: appservice.AppServiceConnectionStringArray{
//					&appservice.AppServiceConnectionStringArgs{
//						Name:  pulumi.String("Database"),
//						Type:  pulumi.String("SQLServer"),
//						Value: pulumi.String("Server=some-server.mydomain.com;Integrated Security=SSPI"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// App Services can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:appservice/appService:AppService instance1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Web/sites/instance1
//
// ```
type AppService struct {
	pulumi.CustomResourceState

	// The ID of the App Service Plan within which to create this App Service.
	AppServicePlanId pulumi.StringOutput `pulumi:"appServicePlanId"`
	// A key-value pair of App Settings.
	AppSettings pulumi.StringMapOutput `pulumi:"appSettings"`
	// A `authSettings` block as defined below.
	AuthSettings AppServiceAuthSettingsOutput `pulumi:"authSettings"`
	// A `backup` block as defined below.
	Backup AppServiceBackupPtrOutput `pulumi:"backup"`
	// Should the App Service send session affinity cookies, which route client requests in the same session to the same instance?
	ClientAffinityEnabled pulumi.BoolPtrOutput `pulumi:"clientAffinityEnabled"`
	// Does the App Service require client certificates for incoming requests? Defaults to `false`.
	ClientCertEnabled pulumi.BoolPtrOutput `pulumi:"clientCertEnabled"`
	// Mode of client certificates for this App Service. Possible values are `Required`, `Optional` and `OptionalInteractiveUser`. If this parameter is set, `clientCertEnabled` must be set to `true`, otherwise this parameter is ignored.
	ClientCertMode pulumi.StringOutput `pulumi:"clientCertMode"`
	// One or more `connectionString` blocks as defined below.
	ConnectionStrings AppServiceConnectionStringArrayOutput `pulumi:"connectionStrings"`
	// An identifier used by App Service to perform domain ownership verification via DNS TXT record.
	CustomDomainVerificationId pulumi.StringOutput `pulumi:"customDomainVerificationId"`
	// The Default Hostname associated with the App Service - such as `mysite.azurewebsites.net`
	DefaultSiteHostname pulumi.StringOutput `pulumi:"defaultSiteHostname"`
	// Is the App Service Enabled? Defaults to `true`.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Can the App Service only be accessed via HTTPS? Defaults to `false`.
	HttpsOnly pulumi.BoolPtrOutput `pulumi:"httpsOnly"`
	// An `identity` block as defined below.
	Identity AppServiceIdentityPtrOutput `pulumi:"identity"`
	// The User Assigned Identity Id used for looking up KeyVault secrets. The identity must be assigned to the application. [For more information see - Access vaults with a user-assigned identity](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references#access-vaults-with-a-user-assigned-identity)
	KeyVaultReferenceIdentityId pulumi.StringOutput `pulumi:"keyVaultReferenceIdentityId"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// A `logs` block as defined below.
	Logs AppServiceLogsOutput `pulumi:"logs"`
	// Specifies the name of the App Service. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// A list of outbound IP addresses - such as `["52.23.25.3", "52.143.43.12"]`
	OutboundIpAddressLists pulumi.StringArrayOutput `pulumi:"outboundIpAddressLists"`
	// A comma separated list of outbound IP addresses - such as `52.23.25.3,52.143.43.12`
	OutboundIpAddresses pulumi.StringOutput `pulumi:"outboundIpAddresses"`
	// A list of outbound IP addresses - such as `["52.23.25.3", "52.143.43.12", "52.143.43.17"]` - not all of which are necessarily in use. Superset of `outboundIpAddressList`.
	PossibleOutboundIpAddressLists pulumi.StringArrayOutput `pulumi:"possibleOutboundIpAddressLists"`
	// A comma separated list of outbound IP addresses - such as `52.23.25.3,52.143.43.12,52.143.43.17` - not all of which are necessarily in use. Superset of `outboundIpAddresses`.
	PossibleOutboundIpAddresses pulumi.StringOutput `pulumi:"possibleOutboundIpAddresses"`
	// The name of the resource group in which to create the App Service. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A `siteConfig` block as defined below.
	SiteConfig AppServiceSiteConfigOutput `pulumi:"siteConfig"`
	// A `siteCredential` block as defined below, which contains the site-level credentials used to publish to this App Service.
	SiteCredentials AppServiceSiteCredentialArrayOutput `pulumi:"siteCredentials"`
	// A `sourceControl` block as defined below.
	SourceControl AppServiceSourceControlOutput `pulumi:"sourceControl"`
	// One or more `storageAccount` blocks as defined below.
	StorageAccounts AppServiceStorageAccountArrayOutput `pulumi:"storageAccounts"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewAppService registers a new resource with the given unique name, arguments, and options.
func NewAppService(ctx *pulumi.Context,
	name string, args *AppServiceArgs, opts ...pulumi.ResourceOption) (*AppService, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AppServicePlanId == nil {
		return nil, errors.New("invalid value for required argument 'AppServicePlanId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppService
	err := ctx.RegisterResource("azure:appservice/appService:AppService", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppService gets an existing AppService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppServiceState, opts ...pulumi.ResourceOption) (*AppService, error) {
	var resource AppService
	err := ctx.ReadResource("azure:appservice/appService:AppService", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppService resources.
type appServiceState struct {
	// The ID of the App Service Plan within which to create this App Service.
	AppServicePlanId *string `pulumi:"appServicePlanId"`
	// A key-value pair of App Settings.
	AppSettings map[string]string `pulumi:"appSettings"`
	// A `authSettings` block as defined below.
	AuthSettings *AppServiceAuthSettings `pulumi:"authSettings"`
	// A `backup` block as defined below.
	Backup *AppServiceBackup `pulumi:"backup"`
	// Should the App Service send session affinity cookies, which route client requests in the same session to the same instance?
	ClientAffinityEnabled *bool `pulumi:"clientAffinityEnabled"`
	// Does the App Service require client certificates for incoming requests? Defaults to `false`.
	ClientCertEnabled *bool `pulumi:"clientCertEnabled"`
	// Mode of client certificates for this App Service. Possible values are `Required`, `Optional` and `OptionalInteractiveUser`. If this parameter is set, `clientCertEnabled` must be set to `true`, otherwise this parameter is ignored.
	ClientCertMode *string `pulumi:"clientCertMode"`
	// One or more `connectionString` blocks as defined below.
	ConnectionStrings []AppServiceConnectionString `pulumi:"connectionStrings"`
	// An identifier used by App Service to perform domain ownership verification via DNS TXT record.
	CustomDomainVerificationId *string `pulumi:"customDomainVerificationId"`
	// The Default Hostname associated with the App Service - such as `mysite.azurewebsites.net`
	DefaultSiteHostname *string `pulumi:"defaultSiteHostname"`
	// Is the App Service Enabled? Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// Can the App Service only be accessed via HTTPS? Defaults to `false`.
	HttpsOnly *bool `pulumi:"httpsOnly"`
	// An `identity` block as defined below.
	Identity *AppServiceIdentity `pulumi:"identity"`
	// The User Assigned Identity Id used for looking up KeyVault secrets. The identity must be assigned to the application. [For more information see - Access vaults with a user-assigned identity](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references#access-vaults-with-a-user-assigned-identity)
	KeyVaultReferenceIdentityId *string `pulumi:"keyVaultReferenceIdentityId"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// A `logs` block as defined below.
	Logs *AppServiceLogs `pulumi:"logs"`
	// Specifies the name of the App Service. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A list of outbound IP addresses - such as `["52.23.25.3", "52.143.43.12"]`
	OutboundIpAddressLists []string `pulumi:"outboundIpAddressLists"`
	// A comma separated list of outbound IP addresses - such as `52.23.25.3,52.143.43.12`
	OutboundIpAddresses *string `pulumi:"outboundIpAddresses"`
	// A list of outbound IP addresses - such as `["52.23.25.3", "52.143.43.12", "52.143.43.17"]` - not all of which are necessarily in use. Superset of `outboundIpAddressList`.
	PossibleOutboundIpAddressLists []string `pulumi:"possibleOutboundIpAddressLists"`
	// A comma separated list of outbound IP addresses - such as `52.23.25.3,52.143.43.12,52.143.43.17` - not all of which are necessarily in use. Superset of `outboundIpAddresses`.
	PossibleOutboundIpAddresses *string `pulumi:"possibleOutboundIpAddresses"`
	// The name of the resource group in which to create the App Service. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A `siteConfig` block as defined below.
	SiteConfig *AppServiceSiteConfig `pulumi:"siteConfig"`
	// A `siteCredential` block as defined below, which contains the site-level credentials used to publish to this App Service.
	SiteCredentials []AppServiceSiteCredential `pulumi:"siteCredentials"`
	// A `sourceControl` block as defined below.
	SourceControl *AppServiceSourceControl `pulumi:"sourceControl"`
	// One or more `storageAccount` blocks as defined below.
	StorageAccounts []AppServiceStorageAccount `pulumi:"storageAccounts"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

type AppServiceState struct {
	// The ID of the App Service Plan within which to create this App Service.
	AppServicePlanId pulumi.StringPtrInput
	// A key-value pair of App Settings.
	AppSettings pulumi.StringMapInput
	// A `authSettings` block as defined below.
	AuthSettings AppServiceAuthSettingsPtrInput
	// A `backup` block as defined below.
	Backup AppServiceBackupPtrInput
	// Should the App Service send session affinity cookies, which route client requests in the same session to the same instance?
	ClientAffinityEnabled pulumi.BoolPtrInput
	// Does the App Service require client certificates for incoming requests? Defaults to `false`.
	ClientCertEnabled pulumi.BoolPtrInput
	// Mode of client certificates for this App Service. Possible values are `Required`, `Optional` and `OptionalInteractiveUser`. If this parameter is set, `clientCertEnabled` must be set to `true`, otherwise this parameter is ignored.
	ClientCertMode pulumi.StringPtrInput
	// One or more `connectionString` blocks as defined below.
	ConnectionStrings AppServiceConnectionStringArrayInput
	// An identifier used by App Service to perform domain ownership verification via DNS TXT record.
	CustomDomainVerificationId pulumi.StringPtrInput
	// The Default Hostname associated with the App Service - such as `mysite.azurewebsites.net`
	DefaultSiteHostname pulumi.StringPtrInput
	// Is the App Service Enabled? Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	// Can the App Service only be accessed via HTTPS? Defaults to `false`.
	HttpsOnly pulumi.BoolPtrInput
	// An `identity` block as defined below.
	Identity AppServiceIdentityPtrInput
	// The User Assigned Identity Id used for looking up KeyVault secrets. The identity must be assigned to the application. [For more information see - Access vaults with a user-assigned identity](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references#access-vaults-with-a-user-assigned-identity)
	KeyVaultReferenceIdentityId pulumi.StringPtrInput
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// A `logs` block as defined below.
	Logs AppServiceLogsPtrInput
	// Specifies the name of the App Service. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A list of outbound IP addresses - such as `["52.23.25.3", "52.143.43.12"]`
	OutboundIpAddressLists pulumi.StringArrayInput
	// A comma separated list of outbound IP addresses - such as `52.23.25.3,52.143.43.12`
	OutboundIpAddresses pulumi.StringPtrInput
	// A list of outbound IP addresses - such as `["52.23.25.3", "52.143.43.12", "52.143.43.17"]` - not all of which are necessarily in use. Superset of `outboundIpAddressList`.
	PossibleOutboundIpAddressLists pulumi.StringArrayInput
	// A comma separated list of outbound IP addresses - such as `52.23.25.3,52.143.43.12,52.143.43.17` - not all of which are necessarily in use. Superset of `outboundIpAddresses`.
	PossibleOutboundIpAddresses pulumi.StringPtrInput
	// The name of the resource group in which to create the App Service. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// A `siteConfig` block as defined below.
	SiteConfig AppServiceSiteConfigPtrInput
	// A `siteCredential` block as defined below, which contains the site-level credentials used to publish to this App Service.
	SiteCredentials AppServiceSiteCredentialArrayInput
	// A `sourceControl` block as defined below.
	SourceControl AppServiceSourceControlPtrInput
	// One or more `storageAccount` blocks as defined below.
	StorageAccounts AppServiceStorageAccountArrayInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
}

func (AppServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*appServiceState)(nil)).Elem()
}

type appServiceArgs struct {
	// The ID of the App Service Plan within which to create this App Service.
	AppServicePlanId string `pulumi:"appServicePlanId"`
	// A key-value pair of App Settings.
	AppSettings map[string]string `pulumi:"appSettings"`
	// A `authSettings` block as defined below.
	AuthSettings *AppServiceAuthSettings `pulumi:"authSettings"`
	// A `backup` block as defined below.
	Backup *AppServiceBackup `pulumi:"backup"`
	// Should the App Service send session affinity cookies, which route client requests in the same session to the same instance?
	ClientAffinityEnabled *bool `pulumi:"clientAffinityEnabled"`
	// Does the App Service require client certificates for incoming requests? Defaults to `false`.
	ClientCertEnabled *bool `pulumi:"clientCertEnabled"`
	// Mode of client certificates for this App Service. Possible values are `Required`, `Optional` and `OptionalInteractiveUser`. If this parameter is set, `clientCertEnabled` must be set to `true`, otherwise this parameter is ignored.
	ClientCertMode *string `pulumi:"clientCertMode"`
	// One or more `connectionString` blocks as defined below.
	ConnectionStrings []AppServiceConnectionString `pulumi:"connectionStrings"`
	// Is the App Service Enabled? Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// Can the App Service only be accessed via HTTPS? Defaults to `false`.
	HttpsOnly *bool `pulumi:"httpsOnly"`
	// An `identity` block as defined below.
	Identity *AppServiceIdentity `pulumi:"identity"`
	// The User Assigned Identity Id used for looking up KeyVault secrets. The identity must be assigned to the application. [For more information see - Access vaults with a user-assigned identity](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references#access-vaults-with-a-user-assigned-identity)
	KeyVaultReferenceIdentityId *string `pulumi:"keyVaultReferenceIdentityId"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// A `logs` block as defined below.
	Logs *AppServiceLogs `pulumi:"logs"`
	// Specifies the name of the App Service. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the resource group in which to create the App Service. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A `siteConfig` block as defined below.
	SiteConfig *AppServiceSiteConfig `pulumi:"siteConfig"`
	// A `sourceControl` block as defined below.
	SourceControl *AppServiceSourceControl `pulumi:"sourceControl"`
	// One or more `storageAccount` blocks as defined below.
	StorageAccounts []AppServiceStorageAccount `pulumi:"storageAccounts"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a AppService resource.
type AppServiceArgs struct {
	// The ID of the App Service Plan within which to create this App Service.
	AppServicePlanId pulumi.StringInput
	// A key-value pair of App Settings.
	AppSettings pulumi.StringMapInput
	// A `authSettings` block as defined below.
	AuthSettings AppServiceAuthSettingsPtrInput
	// A `backup` block as defined below.
	Backup AppServiceBackupPtrInput
	// Should the App Service send session affinity cookies, which route client requests in the same session to the same instance?
	ClientAffinityEnabled pulumi.BoolPtrInput
	// Does the App Service require client certificates for incoming requests? Defaults to `false`.
	ClientCertEnabled pulumi.BoolPtrInput
	// Mode of client certificates for this App Service. Possible values are `Required`, `Optional` and `OptionalInteractiveUser`. If this parameter is set, `clientCertEnabled` must be set to `true`, otherwise this parameter is ignored.
	ClientCertMode pulumi.StringPtrInput
	// One or more `connectionString` blocks as defined below.
	ConnectionStrings AppServiceConnectionStringArrayInput
	// Is the App Service Enabled? Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	// Can the App Service only be accessed via HTTPS? Defaults to `false`.
	HttpsOnly pulumi.BoolPtrInput
	// An `identity` block as defined below.
	Identity AppServiceIdentityPtrInput
	// The User Assigned Identity Id used for looking up KeyVault secrets. The identity must be assigned to the application. [For more information see - Access vaults with a user-assigned identity](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references#access-vaults-with-a-user-assigned-identity)
	KeyVaultReferenceIdentityId pulumi.StringPtrInput
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// A `logs` block as defined below.
	Logs AppServiceLogsPtrInput
	// Specifies the name of the App Service. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the resource group in which to create the App Service. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// A `siteConfig` block as defined below.
	SiteConfig AppServiceSiteConfigPtrInput
	// A `sourceControl` block as defined below.
	SourceControl AppServiceSourceControlPtrInput
	// One or more `storageAccount` blocks as defined below.
	StorageAccounts AppServiceStorageAccountArrayInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
}

func (AppServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appServiceArgs)(nil)).Elem()
}

type AppServiceInput interface {
	pulumi.Input

	ToAppServiceOutput() AppServiceOutput
	ToAppServiceOutputWithContext(ctx context.Context) AppServiceOutput
}

func (*AppService) ElementType() reflect.Type {
	return reflect.TypeOf((**AppService)(nil)).Elem()
}

func (i *AppService) ToAppServiceOutput() AppServiceOutput {
	return i.ToAppServiceOutputWithContext(context.Background())
}

func (i *AppService) ToAppServiceOutputWithContext(ctx context.Context) AppServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceOutput)
}

func (i *AppService) ToOutput(ctx context.Context) pulumix.Output[*AppService] {
	return pulumix.Output[*AppService]{
		OutputState: i.ToAppServiceOutputWithContext(ctx).OutputState,
	}
}

// AppServiceArrayInput is an input type that accepts AppServiceArray and AppServiceArrayOutput values.
// You can construct a concrete instance of `AppServiceArrayInput` via:
//
//	AppServiceArray{ AppServiceArgs{...} }
type AppServiceArrayInput interface {
	pulumi.Input

	ToAppServiceArrayOutput() AppServiceArrayOutput
	ToAppServiceArrayOutputWithContext(context.Context) AppServiceArrayOutput
}

type AppServiceArray []AppServiceInput

func (AppServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppService)(nil)).Elem()
}

func (i AppServiceArray) ToAppServiceArrayOutput() AppServiceArrayOutput {
	return i.ToAppServiceArrayOutputWithContext(context.Background())
}

func (i AppServiceArray) ToAppServiceArrayOutputWithContext(ctx context.Context) AppServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceArrayOutput)
}

func (i AppServiceArray) ToOutput(ctx context.Context) pulumix.Output[[]*AppService] {
	return pulumix.Output[[]*AppService]{
		OutputState: i.ToAppServiceArrayOutputWithContext(ctx).OutputState,
	}
}

// AppServiceMapInput is an input type that accepts AppServiceMap and AppServiceMapOutput values.
// You can construct a concrete instance of `AppServiceMapInput` via:
//
//	AppServiceMap{ "key": AppServiceArgs{...} }
type AppServiceMapInput interface {
	pulumi.Input

	ToAppServiceMapOutput() AppServiceMapOutput
	ToAppServiceMapOutputWithContext(context.Context) AppServiceMapOutput
}

type AppServiceMap map[string]AppServiceInput

func (AppServiceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppService)(nil)).Elem()
}

func (i AppServiceMap) ToAppServiceMapOutput() AppServiceMapOutput {
	return i.ToAppServiceMapOutputWithContext(context.Background())
}

func (i AppServiceMap) ToAppServiceMapOutputWithContext(ctx context.Context) AppServiceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceMapOutput)
}

func (i AppServiceMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*AppService] {
	return pulumix.Output[map[string]*AppService]{
		OutputState: i.ToAppServiceMapOutputWithContext(ctx).OutputState,
	}
}

type AppServiceOutput struct{ *pulumi.OutputState }

func (AppServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppService)(nil)).Elem()
}

func (o AppServiceOutput) ToAppServiceOutput() AppServiceOutput {
	return o
}

func (o AppServiceOutput) ToAppServiceOutputWithContext(ctx context.Context) AppServiceOutput {
	return o
}

func (o AppServiceOutput) ToOutput(ctx context.Context) pulumix.Output[*AppService] {
	return pulumix.Output[*AppService]{
		OutputState: o.OutputState,
	}
}

// The ID of the App Service Plan within which to create this App Service.
func (o AppServiceOutput) AppServicePlanId() pulumi.StringOutput {
	return o.ApplyT(func(v *AppService) pulumi.StringOutput { return v.AppServicePlanId }).(pulumi.StringOutput)
}

// A key-value pair of App Settings.
func (o AppServiceOutput) AppSettings() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AppService) pulumi.StringMapOutput { return v.AppSettings }).(pulumi.StringMapOutput)
}

// A `authSettings` block as defined below.
func (o AppServiceOutput) AuthSettings() AppServiceAuthSettingsOutput {
	return o.ApplyT(func(v *AppService) AppServiceAuthSettingsOutput { return v.AuthSettings }).(AppServiceAuthSettingsOutput)
}

// A `backup` block as defined below.
func (o AppServiceOutput) Backup() AppServiceBackupPtrOutput {
	return o.ApplyT(func(v *AppService) AppServiceBackupPtrOutput { return v.Backup }).(AppServiceBackupPtrOutput)
}

// Should the App Service send session affinity cookies, which route client requests in the same session to the same instance?
func (o AppServiceOutput) ClientAffinityEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppService) pulumi.BoolPtrOutput { return v.ClientAffinityEnabled }).(pulumi.BoolPtrOutput)
}

// Does the App Service require client certificates for incoming requests? Defaults to `false`.
func (o AppServiceOutput) ClientCertEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppService) pulumi.BoolPtrOutput { return v.ClientCertEnabled }).(pulumi.BoolPtrOutput)
}

// Mode of client certificates for this App Service. Possible values are `Required`, `Optional` and `OptionalInteractiveUser`. If this parameter is set, `clientCertEnabled` must be set to `true`, otherwise this parameter is ignored.
func (o AppServiceOutput) ClientCertMode() pulumi.StringOutput {
	return o.ApplyT(func(v *AppService) pulumi.StringOutput { return v.ClientCertMode }).(pulumi.StringOutput)
}

// One or more `connectionString` blocks as defined below.
func (o AppServiceOutput) ConnectionStrings() AppServiceConnectionStringArrayOutput {
	return o.ApplyT(func(v *AppService) AppServiceConnectionStringArrayOutput { return v.ConnectionStrings }).(AppServiceConnectionStringArrayOutput)
}

// An identifier used by App Service to perform domain ownership verification via DNS TXT record.
func (o AppServiceOutput) CustomDomainVerificationId() pulumi.StringOutput {
	return o.ApplyT(func(v *AppService) pulumi.StringOutput { return v.CustomDomainVerificationId }).(pulumi.StringOutput)
}

// The Default Hostname associated with the App Service - such as `mysite.azurewebsites.net`
func (o AppServiceOutput) DefaultSiteHostname() pulumi.StringOutput {
	return o.ApplyT(func(v *AppService) pulumi.StringOutput { return v.DefaultSiteHostname }).(pulumi.StringOutput)
}

// Is the App Service Enabled? Defaults to `true`.
func (o AppServiceOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppService) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Can the App Service only be accessed via HTTPS? Defaults to `false`.
func (o AppServiceOutput) HttpsOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppService) pulumi.BoolPtrOutput { return v.HttpsOnly }).(pulumi.BoolPtrOutput)
}

// An `identity` block as defined below.
func (o AppServiceOutput) Identity() AppServiceIdentityPtrOutput {
	return o.ApplyT(func(v *AppService) AppServiceIdentityPtrOutput { return v.Identity }).(AppServiceIdentityPtrOutput)
}

// The User Assigned Identity Id used for looking up KeyVault secrets. The identity must be assigned to the application. [For more information see - Access vaults with a user-assigned identity](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references#access-vaults-with-a-user-assigned-identity)
func (o AppServiceOutput) KeyVaultReferenceIdentityId() pulumi.StringOutput {
	return o.ApplyT(func(v *AppService) pulumi.StringOutput { return v.KeyVaultReferenceIdentityId }).(pulumi.StringOutput)
}

// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
func (o AppServiceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *AppService) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// A `logs` block as defined below.
func (o AppServiceOutput) Logs() AppServiceLogsOutput {
	return o.ApplyT(func(v *AppService) AppServiceLogsOutput { return v.Logs }).(AppServiceLogsOutput)
}

// Specifies the name of the App Service. Changing this forces a new resource to be created.
func (o AppServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AppService) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A list of outbound IP addresses - such as `["52.23.25.3", "52.143.43.12"]`
func (o AppServiceOutput) OutboundIpAddressLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppService) pulumi.StringArrayOutput { return v.OutboundIpAddressLists }).(pulumi.StringArrayOutput)
}

// A comma separated list of outbound IP addresses - such as `52.23.25.3,52.143.43.12`
func (o AppServiceOutput) OutboundIpAddresses() pulumi.StringOutput {
	return o.ApplyT(func(v *AppService) pulumi.StringOutput { return v.OutboundIpAddresses }).(pulumi.StringOutput)
}

// A list of outbound IP addresses - such as `["52.23.25.3", "52.143.43.12", "52.143.43.17"]` - not all of which are necessarily in use. Superset of `outboundIpAddressList`.
func (o AppServiceOutput) PossibleOutboundIpAddressLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppService) pulumi.StringArrayOutput { return v.PossibleOutboundIpAddressLists }).(pulumi.StringArrayOutput)
}

// A comma separated list of outbound IP addresses - such as `52.23.25.3,52.143.43.12,52.143.43.17` - not all of which are necessarily in use. Superset of `outboundIpAddresses`.
func (o AppServiceOutput) PossibleOutboundIpAddresses() pulumi.StringOutput {
	return o.ApplyT(func(v *AppService) pulumi.StringOutput { return v.PossibleOutboundIpAddresses }).(pulumi.StringOutput)
}

// The name of the resource group in which to create the App Service. Changing this forces a new resource to be created.
func (o AppServiceOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *AppService) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A `siteConfig` block as defined below.
func (o AppServiceOutput) SiteConfig() AppServiceSiteConfigOutput {
	return o.ApplyT(func(v *AppService) AppServiceSiteConfigOutput { return v.SiteConfig }).(AppServiceSiteConfigOutput)
}

// A `siteCredential` block as defined below, which contains the site-level credentials used to publish to this App Service.
func (o AppServiceOutput) SiteCredentials() AppServiceSiteCredentialArrayOutput {
	return o.ApplyT(func(v *AppService) AppServiceSiteCredentialArrayOutput { return v.SiteCredentials }).(AppServiceSiteCredentialArrayOutput)
}

// A `sourceControl` block as defined below.
func (o AppServiceOutput) SourceControl() AppServiceSourceControlOutput {
	return o.ApplyT(func(v *AppService) AppServiceSourceControlOutput { return v.SourceControl }).(AppServiceSourceControlOutput)
}

// One or more `storageAccount` blocks as defined below.
func (o AppServiceOutput) StorageAccounts() AppServiceStorageAccountArrayOutput {
	return o.ApplyT(func(v *AppService) AppServiceStorageAccountArrayOutput { return v.StorageAccounts }).(AppServiceStorageAccountArrayOutput)
}

// A mapping of tags to assign to the resource.
func (o AppServiceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AppService) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type AppServiceArrayOutput struct{ *pulumi.OutputState }

func (AppServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppService)(nil)).Elem()
}

func (o AppServiceArrayOutput) ToAppServiceArrayOutput() AppServiceArrayOutput {
	return o
}

func (o AppServiceArrayOutput) ToAppServiceArrayOutputWithContext(ctx context.Context) AppServiceArrayOutput {
	return o
}

func (o AppServiceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*AppService] {
	return pulumix.Output[[]*AppService]{
		OutputState: o.OutputState,
	}
}

func (o AppServiceArrayOutput) Index(i pulumi.IntInput) AppServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppService {
		return vs[0].([]*AppService)[vs[1].(int)]
	}).(AppServiceOutput)
}

type AppServiceMapOutput struct{ *pulumi.OutputState }

func (AppServiceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppService)(nil)).Elem()
}

func (o AppServiceMapOutput) ToAppServiceMapOutput() AppServiceMapOutput {
	return o
}

func (o AppServiceMapOutput) ToAppServiceMapOutputWithContext(ctx context.Context) AppServiceMapOutput {
	return o
}

func (o AppServiceMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*AppService] {
	return pulumix.Output[map[string]*AppService]{
		OutputState: o.OutputState,
	}
}

func (o AppServiceMapOutput) MapIndex(k pulumi.StringInput) AppServiceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppService {
		return vs[0].(map[string]*AppService)[vs[1].(string)]
	}).(AppServiceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppServiceInput)(nil)).Elem(), &AppService{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppServiceArrayInput)(nil)).Elem(), AppServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppServiceMapInput)(nil)).Elem(), AppServiceMap{})
	pulumi.RegisterOutputType(AppServiceOutput{})
	pulumi.RegisterOutputType(AppServiceArrayOutput{})
	pulumi.RegisterOutputType(AppServiceMapOutput{})
}
