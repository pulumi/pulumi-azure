// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appservice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages a Windows Function App Slot.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appservice"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleAccount, err := storage.NewAccount(ctx, "exampleAccount", &storage.AccountArgs{
//				ResourceGroupName:      exampleResourceGroup.Name,
//				Location:               exampleResourceGroup.Location,
//				AccountTier:            pulumi.String("Standard"),
//				AccountReplicationType: pulumi.String("LRS"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleServicePlan, err := appservice.NewServicePlan(ctx, "exampleServicePlan", &appservice.ServicePlanArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				OsType:            pulumi.String("Windows"),
//				SkuName:           pulumi.String("Y1"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleWindowsFunctionApp, err := appservice.NewWindowsFunctionApp(ctx, "exampleWindowsFunctionApp", &appservice.WindowsFunctionAppArgs{
//				ResourceGroupName:  exampleResourceGroup.Name,
//				Location:           exampleResourceGroup.Location,
//				StorageAccountName: exampleAccount.Name,
//				ServicePlanId:      exampleServicePlan.ID(),
//				SiteConfig:         nil,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = appservice.NewWindowsFunctionAppSlot(ctx, "exampleWindowsFunctionAppSlot", &appservice.WindowsFunctionAppSlotArgs{
//				FunctionAppId:      exampleWindowsFunctionApp.ID(),
//				StorageAccountName: exampleAccount.Name,
//				SiteConfig:         nil,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// A Windows Function App Slot can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:appservice/windowsFunctionAppSlot:WindowsFunctionAppSlot example "/subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.Web/sites/site1/slots/slot1"
//
// ```
type WindowsFunctionAppSlot struct {
	pulumi.CustomResourceState

	// A map of key-value pairs for [App Settings](https://docs.microsoft.com/azure/azure-functions/functions-app-settings) and custom values.
	AppSettings pulumi.StringMapOutput `pulumi:"appSettings"`
	// an `authSettings` block as detailed below.
	AuthSettings WindowsFunctionAppSlotAuthSettingsPtrOutput `pulumi:"authSettings"`
	// an `authSettingsV2` block as detailed below.
	AuthSettingsV2 WindowsFunctionAppSlotAuthSettingsV2PtrOutput `pulumi:"authSettingsV2"`
	// a `backup` block as detailed below.
	Backup WindowsFunctionAppSlotBackupPtrOutput `pulumi:"backup"`
	// Should built-in logging be enabled. Configures `AzureWebJobsDashboard` app setting based on the configured storage setting. Defaults to `true`.
	BuiltinLoggingEnabled pulumi.BoolPtrOutput `pulumi:"builtinLoggingEnabled"`
	// Should the Function App Slot use Client Certificates.
	ClientCertificateEnabled pulumi.BoolPtrOutput `pulumi:"clientCertificateEnabled"`
	// Paths to exclude when using client certificates, separated by ;
	ClientCertificateExclusionPaths pulumi.StringPtrOutput `pulumi:"clientCertificateExclusionPaths"`
	// The mode of the Function App Slot's client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`. Defaults to `Optional`.
	ClientCertificateMode pulumi.StringPtrOutput `pulumi:"clientCertificateMode"`
	// a `connectionString` block as detailed below.
	ConnectionStrings WindowsFunctionAppSlotConnectionStringArrayOutput `pulumi:"connectionStrings"`
	// Force disable the content share settings.
	ContentShareForceDisabled pulumi.BoolPtrOutput `pulumi:"contentShareForceDisabled"`
	// The identifier used by App Service to perform domain ownership verification via DNS TXT record.
	CustomDomainVerificationId pulumi.StringOutput `pulumi:"customDomainVerificationId"`
	// The amount of memory in gigabyte-seconds that your application is allowed to consume per day. Setting this value only affects function apps in Consumption Plans. Defaults to `0`.
	DailyMemoryTimeQuota pulumi.IntPtrOutput `pulumi:"dailyMemoryTimeQuota"`
	// The default hostname of the Windows Function App Slot.
	DefaultHostname pulumi.StringOutput `pulumi:"defaultHostname"`
	// Is the Windows Function App Slot enabled. Defaults to `true`.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Should the default FTP Basic Authentication publishing profile be enabled. Defaults to `true`.
	FtpPublishBasicAuthenticationEnabled pulumi.BoolPtrOutput `pulumi:"ftpPublishBasicAuthenticationEnabled"`
	// The name of the Windows Function App this Slot is a member of. Changing this forces a new resource to be created.
	FunctionAppId pulumi.StringOutput `pulumi:"functionAppId"`
	// The runtime version associated with the Function App Slot. Defaults to `~4`.
	FunctionsExtensionVersion pulumi.StringPtrOutput `pulumi:"functionsExtensionVersion"`
	// The ID of the App Service Environment used by Function App Slot.
	HostingEnvironmentId pulumi.StringOutput `pulumi:"hostingEnvironmentId"`
	// Can the Function App Slot only be accessed via HTTPS?
	HttpsOnly pulumi.BoolPtrOutput `pulumi:"httpsOnly"`
	// an `identity` block as detailed below.
	Identity WindowsFunctionAppSlotIdentityPtrOutput `pulumi:"identity"`
	// The User Assigned Identity ID used for accessing KeyVault secrets. The identity must be assigned to the application in the `identity` block. [For more information see - Access vaults with a user-assigned identity](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references#access-vaults-with-a-user-assigned-identity)
	KeyVaultReferenceIdentityId pulumi.StringOutput `pulumi:"keyVaultReferenceIdentityId"`
	// The Kind value for this Windows Function App Slot.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Specifies the name of the Windows Function App Slot. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// A list of outbound IP addresses. For example `["52.23.25.3", "52.143.43.12"]`.
	OutboundIpAddressLists pulumi.StringArrayOutput `pulumi:"outboundIpAddressLists"`
	// A comma separated list of outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12`.
	OutboundIpAddresses pulumi.StringOutput `pulumi:"outboundIpAddresses"`
	// A list of possible outbound IP addresses, not all of which are necessarily in use. This is a superset of `outboundIpAddressList`. For example `["52.23.25.3", "52.143.43.12"]`.
	PossibleOutboundIpAddressLists pulumi.StringArrayOutput `pulumi:"possibleOutboundIpAddressLists"`
	// A comma separated list of possible outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12,52.143.43.17`. This is a superset of `outboundIpAddresses`. For example `["52.23.25.3", "52.143.43.12","52.143.43.17"]`.
	PossibleOutboundIpAddresses pulumi.StringOutput `pulumi:"possibleOutboundIpAddresses"`
	// Should public network access be enabled for the Function App. Defaults to `true`.
	PublicNetworkAccessEnabled pulumi.BoolPtrOutput `pulumi:"publicNetworkAccessEnabled"`
	// The ID of the Service Plan in which to run this slot. If not specified the same Service Plan as the Windows Function App will be used.
	ServicePlanId pulumi.StringPtrOutput `pulumi:"servicePlanId"`
	// a `siteConfig` block as detailed below.
	SiteConfig WindowsFunctionAppSlotSiteConfigOutput `pulumi:"siteConfig"`
	// A `siteCredential` block as defined below.
	SiteCredentials WindowsFunctionAppSlotSiteCredentialArrayOutput `pulumi:"siteCredentials"`
	// The access key which will be used to access the storage account for the Function App Slot.
	StorageAccountAccessKey pulumi.StringPtrOutput `pulumi:"storageAccountAccessKey"`
	// The backend storage account name which will be used by this Function App Slot.
	StorageAccountName pulumi.StringPtrOutput `pulumi:"storageAccountName"`
	// One or more `storageAccount` blocks as defined below.
	StorageAccounts WindowsFunctionAppSlotStorageAccountArrayOutput `pulumi:"storageAccounts"`
	// The Key Vault Secret ID, optionally including version, that contains the Connection String to connect to the storage account for this Function App Slot.
	//
	// > **NOTE:** `storageKeyVaultSecretId` cannot be used with `storageAccountName`.
	//
	// > **NOTE:** `storageKeyVaultSecretId` used without a version will use the latest version of the secret, however, the service can take up to 24h to pick up a rotation of the latest version. See the [official docs](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references#rotation) for more information.
	StorageKeyVaultSecretId pulumi.StringPtrOutput `pulumi:"storageKeyVaultSecretId"`
	// Should the Function App Slot use its Managed Identity to access storage.
	//
	// > **NOTE:** One of `storageAccountAccessKey` or `storageUsesManagedIdentity` must be specified when using `storageAccountName`.
	StorageUsesManagedIdentity pulumi.BoolPtrOutput `pulumi:"storageUsesManagedIdentity"`
	// A mapping of tags which should be assigned to the Windows Function App Slot.
	Tags                   pulumi.StringMapOutput `pulumi:"tags"`
	VirtualNetworkSubnetId pulumi.StringPtrOutput `pulumi:"virtualNetworkSubnetId"`
	// Should the default WebDeploy Basic Authentication publishing credentials enabled. Defaults to`true`.
	WebdeployPublishBasicAuthenticationEnabled pulumi.BoolPtrOutput `pulumi:"webdeployPublishBasicAuthenticationEnabled"`
}

// NewWindowsFunctionAppSlot registers a new resource with the given unique name, arguments, and options.
func NewWindowsFunctionAppSlot(ctx *pulumi.Context,
	name string, args *WindowsFunctionAppSlotArgs, opts ...pulumi.ResourceOption) (*WindowsFunctionAppSlot, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FunctionAppId == nil {
		return nil, errors.New("invalid value for required argument 'FunctionAppId'")
	}
	if args.SiteConfig == nil {
		return nil, errors.New("invalid value for required argument 'SiteConfig'")
	}
	if args.StorageAccountAccessKey != nil {
		args.StorageAccountAccessKey = pulumi.ToSecret(args.StorageAccountAccessKey).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"customDomainVerificationId",
		"siteCredentials",
		"storageAccountAccessKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WindowsFunctionAppSlot
	err := ctx.RegisterResource("azure:appservice/windowsFunctionAppSlot:WindowsFunctionAppSlot", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWindowsFunctionAppSlot gets an existing WindowsFunctionAppSlot resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWindowsFunctionAppSlot(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WindowsFunctionAppSlotState, opts ...pulumi.ResourceOption) (*WindowsFunctionAppSlot, error) {
	var resource WindowsFunctionAppSlot
	err := ctx.ReadResource("azure:appservice/windowsFunctionAppSlot:WindowsFunctionAppSlot", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WindowsFunctionAppSlot resources.
type windowsFunctionAppSlotState struct {
	// A map of key-value pairs for [App Settings](https://docs.microsoft.com/azure/azure-functions/functions-app-settings) and custom values.
	AppSettings map[string]string `pulumi:"appSettings"`
	// an `authSettings` block as detailed below.
	AuthSettings *WindowsFunctionAppSlotAuthSettings `pulumi:"authSettings"`
	// an `authSettingsV2` block as detailed below.
	AuthSettingsV2 *WindowsFunctionAppSlotAuthSettingsV2 `pulumi:"authSettingsV2"`
	// a `backup` block as detailed below.
	Backup *WindowsFunctionAppSlotBackup `pulumi:"backup"`
	// Should built-in logging be enabled. Configures `AzureWebJobsDashboard` app setting based on the configured storage setting. Defaults to `true`.
	BuiltinLoggingEnabled *bool `pulumi:"builtinLoggingEnabled"`
	// Should the Function App Slot use Client Certificates.
	ClientCertificateEnabled *bool `pulumi:"clientCertificateEnabled"`
	// Paths to exclude when using client certificates, separated by ;
	ClientCertificateExclusionPaths *string `pulumi:"clientCertificateExclusionPaths"`
	// The mode of the Function App Slot's client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`. Defaults to `Optional`.
	ClientCertificateMode *string `pulumi:"clientCertificateMode"`
	// a `connectionString` block as detailed below.
	ConnectionStrings []WindowsFunctionAppSlotConnectionString `pulumi:"connectionStrings"`
	// Force disable the content share settings.
	ContentShareForceDisabled *bool `pulumi:"contentShareForceDisabled"`
	// The identifier used by App Service to perform domain ownership verification via DNS TXT record.
	CustomDomainVerificationId *string `pulumi:"customDomainVerificationId"`
	// The amount of memory in gigabyte-seconds that your application is allowed to consume per day. Setting this value only affects function apps in Consumption Plans. Defaults to `0`.
	DailyMemoryTimeQuota *int `pulumi:"dailyMemoryTimeQuota"`
	// The default hostname of the Windows Function App Slot.
	DefaultHostname *string `pulumi:"defaultHostname"`
	// Is the Windows Function App Slot enabled. Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// Should the default FTP Basic Authentication publishing profile be enabled. Defaults to `true`.
	FtpPublishBasicAuthenticationEnabled *bool `pulumi:"ftpPublishBasicAuthenticationEnabled"`
	// The name of the Windows Function App this Slot is a member of. Changing this forces a new resource to be created.
	FunctionAppId *string `pulumi:"functionAppId"`
	// The runtime version associated with the Function App Slot. Defaults to `~4`.
	FunctionsExtensionVersion *string `pulumi:"functionsExtensionVersion"`
	// The ID of the App Service Environment used by Function App Slot.
	HostingEnvironmentId *string `pulumi:"hostingEnvironmentId"`
	// Can the Function App Slot only be accessed via HTTPS?
	HttpsOnly *bool `pulumi:"httpsOnly"`
	// an `identity` block as detailed below.
	Identity *WindowsFunctionAppSlotIdentity `pulumi:"identity"`
	// The User Assigned Identity ID used for accessing KeyVault secrets. The identity must be assigned to the application in the `identity` block. [For more information see - Access vaults with a user-assigned identity](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references#access-vaults-with-a-user-assigned-identity)
	KeyVaultReferenceIdentityId *string `pulumi:"keyVaultReferenceIdentityId"`
	// The Kind value for this Windows Function App Slot.
	Kind *string `pulumi:"kind"`
	// Specifies the name of the Windows Function App Slot. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A list of outbound IP addresses. For example `["52.23.25.3", "52.143.43.12"]`.
	OutboundIpAddressLists []string `pulumi:"outboundIpAddressLists"`
	// A comma separated list of outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12`.
	OutboundIpAddresses *string `pulumi:"outboundIpAddresses"`
	// A list of possible outbound IP addresses, not all of which are necessarily in use. This is a superset of `outboundIpAddressList`. For example `["52.23.25.3", "52.143.43.12"]`.
	PossibleOutboundIpAddressLists []string `pulumi:"possibleOutboundIpAddressLists"`
	// A comma separated list of possible outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12,52.143.43.17`. This is a superset of `outboundIpAddresses`. For example `["52.23.25.3", "52.143.43.12","52.143.43.17"]`.
	PossibleOutboundIpAddresses *string `pulumi:"possibleOutboundIpAddresses"`
	// Should public network access be enabled for the Function App. Defaults to `true`.
	PublicNetworkAccessEnabled *bool `pulumi:"publicNetworkAccessEnabled"`
	// The ID of the Service Plan in which to run this slot. If not specified the same Service Plan as the Windows Function App will be used.
	ServicePlanId *string `pulumi:"servicePlanId"`
	// a `siteConfig` block as detailed below.
	SiteConfig *WindowsFunctionAppSlotSiteConfig `pulumi:"siteConfig"`
	// A `siteCredential` block as defined below.
	SiteCredentials []WindowsFunctionAppSlotSiteCredential `pulumi:"siteCredentials"`
	// The access key which will be used to access the storage account for the Function App Slot.
	StorageAccountAccessKey *string `pulumi:"storageAccountAccessKey"`
	// The backend storage account name which will be used by this Function App Slot.
	StorageAccountName *string `pulumi:"storageAccountName"`
	// One or more `storageAccount` blocks as defined below.
	StorageAccounts []WindowsFunctionAppSlotStorageAccount `pulumi:"storageAccounts"`
	// The Key Vault Secret ID, optionally including version, that contains the Connection String to connect to the storage account for this Function App Slot.
	//
	// > **NOTE:** `storageKeyVaultSecretId` cannot be used with `storageAccountName`.
	//
	// > **NOTE:** `storageKeyVaultSecretId` used without a version will use the latest version of the secret, however, the service can take up to 24h to pick up a rotation of the latest version. See the [official docs](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references#rotation) for more information.
	StorageKeyVaultSecretId *string `pulumi:"storageKeyVaultSecretId"`
	// Should the Function App Slot use its Managed Identity to access storage.
	//
	// > **NOTE:** One of `storageAccountAccessKey` or `storageUsesManagedIdentity` must be specified when using `storageAccountName`.
	StorageUsesManagedIdentity *bool `pulumi:"storageUsesManagedIdentity"`
	// A mapping of tags which should be assigned to the Windows Function App Slot.
	Tags                   map[string]string `pulumi:"tags"`
	VirtualNetworkSubnetId *string           `pulumi:"virtualNetworkSubnetId"`
	// Should the default WebDeploy Basic Authentication publishing credentials enabled. Defaults to`true`.
	WebdeployPublishBasicAuthenticationEnabled *bool `pulumi:"webdeployPublishBasicAuthenticationEnabled"`
}

type WindowsFunctionAppSlotState struct {
	// A map of key-value pairs for [App Settings](https://docs.microsoft.com/azure/azure-functions/functions-app-settings) and custom values.
	AppSettings pulumi.StringMapInput
	// an `authSettings` block as detailed below.
	AuthSettings WindowsFunctionAppSlotAuthSettingsPtrInput
	// an `authSettingsV2` block as detailed below.
	AuthSettingsV2 WindowsFunctionAppSlotAuthSettingsV2PtrInput
	// a `backup` block as detailed below.
	Backup WindowsFunctionAppSlotBackupPtrInput
	// Should built-in logging be enabled. Configures `AzureWebJobsDashboard` app setting based on the configured storage setting. Defaults to `true`.
	BuiltinLoggingEnabled pulumi.BoolPtrInput
	// Should the Function App Slot use Client Certificates.
	ClientCertificateEnabled pulumi.BoolPtrInput
	// Paths to exclude when using client certificates, separated by ;
	ClientCertificateExclusionPaths pulumi.StringPtrInput
	// The mode of the Function App Slot's client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`. Defaults to `Optional`.
	ClientCertificateMode pulumi.StringPtrInput
	// a `connectionString` block as detailed below.
	ConnectionStrings WindowsFunctionAppSlotConnectionStringArrayInput
	// Force disable the content share settings.
	ContentShareForceDisabled pulumi.BoolPtrInput
	// The identifier used by App Service to perform domain ownership verification via DNS TXT record.
	CustomDomainVerificationId pulumi.StringPtrInput
	// The amount of memory in gigabyte-seconds that your application is allowed to consume per day. Setting this value only affects function apps in Consumption Plans. Defaults to `0`.
	DailyMemoryTimeQuota pulumi.IntPtrInput
	// The default hostname of the Windows Function App Slot.
	DefaultHostname pulumi.StringPtrInput
	// Is the Windows Function App Slot enabled. Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	// Should the default FTP Basic Authentication publishing profile be enabled. Defaults to `true`.
	FtpPublishBasicAuthenticationEnabled pulumi.BoolPtrInput
	// The name of the Windows Function App this Slot is a member of. Changing this forces a new resource to be created.
	FunctionAppId pulumi.StringPtrInput
	// The runtime version associated with the Function App Slot. Defaults to `~4`.
	FunctionsExtensionVersion pulumi.StringPtrInput
	// The ID of the App Service Environment used by Function App Slot.
	HostingEnvironmentId pulumi.StringPtrInput
	// Can the Function App Slot only be accessed via HTTPS?
	HttpsOnly pulumi.BoolPtrInput
	// an `identity` block as detailed below.
	Identity WindowsFunctionAppSlotIdentityPtrInput
	// The User Assigned Identity ID used for accessing KeyVault secrets. The identity must be assigned to the application in the `identity` block. [For more information see - Access vaults with a user-assigned identity](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references#access-vaults-with-a-user-assigned-identity)
	KeyVaultReferenceIdentityId pulumi.StringPtrInput
	// The Kind value for this Windows Function App Slot.
	Kind pulumi.StringPtrInput
	// Specifies the name of the Windows Function App Slot. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A list of outbound IP addresses. For example `["52.23.25.3", "52.143.43.12"]`.
	OutboundIpAddressLists pulumi.StringArrayInput
	// A comma separated list of outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12`.
	OutboundIpAddresses pulumi.StringPtrInput
	// A list of possible outbound IP addresses, not all of which are necessarily in use. This is a superset of `outboundIpAddressList`. For example `["52.23.25.3", "52.143.43.12"]`.
	PossibleOutboundIpAddressLists pulumi.StringArrayInput
	// A comma separated list of possible outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12,52.143.43.17`. This is a superset of `outboundIpAddresses`. For example `["52.23.25.3", "52.143.43.12","52.143.43.17"]`.
	PossibleOutboundIpAddresses pulumi.StringPtrInput
	// Should public network access be enabled for the Function App. Defaults to `true`.
	PublicNetworkAccessEnabled pulumi.BoolPtrInput
	// The ID of the Service Plan in which to run this slot. If not specified the same Service Plan as the Windows Function App will be used.
	ServicePlanId pulumi.StringPtrInput
	// a `siteConfig` block as detailed below.
	SiteConfig WindowsFunctionAppSlotSiteConfigPtrInput
	// A `siteCredential` block as defined below.
	SiteCredentials WindowsFunctionAppSlotSiteCredentialArrayInput
	// The access key which will be used to access the storage account for the Function App Slot.
	StorageAccountAccessKey pulumi.StringPtrInput
	// The backend storage account name which will be used by this Function App Slot.
	StorageAccountName pulumi.StringPtrInput
	// One or more `storageAccount` blocks as defined below.
	StorageAccounts WindowsFunctionAppSlotStorageAccountArrayInput
	// The Key Vault Secret ID, optionally including version, that contains the Connection String to connect to the storage account for this Function App Slot.
	//
	// > **NOTE:** `storageKeyVaultSecretId` cannot be used with `storageAccountName`.
	//
	// > **NOTE:** `storageKeyVaultSecretId` used without a version will use the latest version of the secret, however, the service can take up to 24h to pick up a rotation of the latest version. See the [official docs](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references#rotation) for more information.
	StorageKeyVaultSecretId pulumi.StringPtrInput
	// Should the Function App Slot use its Managed Identity to access storage.
	//
	// > **NOTE:** One of `storageAccountAccessKey` or `storageUsesManagedIdentity` must be specified when using `storageAccountName`.
	StorageUsesManagedIdentity pulumi.BoolPtrInput
	// A mapping of tags which should be assigned to the Windows Function App Slot.
	Tags                   pulumi.StringMapInput
	VirtualNetworkSubnetId pulumi.StringPtrInput
	// Should the default WebDeploy Basic Authentication publishing credentials enabled. Defaults to`true`.
	WebdeployPublishBasicAuthenticationEnabled pulumi.BoolPtrInput
}

func (WindowsFunctionAppSlotState) ElementType() reflect.Type {
	return reflect.TypeOf((*windowsFunctionAppSlotState)(nil)).Elem()
}

type windowsFunctionAppSlotArgs struct {
	// A map of key-value pairs for [App Settings](https://docs.microsoft.com/azure/azure-functions/functions-app-settings) and custom values.
	AppSettings map[string]string `pulumi:"appSettings"`
	// an `authSettings` block as detailed below.
	AuthSettings *WindowsFunctionAppSlotAuthSettings `pulumi:"authSettings"`
	// an `authSettingsV2` block as detailed below.
	AuthSettingsV2 *WindowsFunctionAppSlotAuthSettingsV2 `pulumi:"authSettingsV2"`
	// a `backup` block as detailed below.
	Backup *WindowsFunctionAppSlotBackup `pulumi:"backup"`
	// Should built-in logging be enabled. Configures `AzureWebJobsDashboard` app setting based on the configured storage setting. Defaults to `true`.
	BuiltinLoggingEnabled *bool `pulumi:"builtinLoggingEnabled"`
	// Should the Function App Slot use Client Certificates.
	ClientCertificateEnabled *bool `pulumi:"clientCertificateEnabled"`
	// Paths to exclude when using client certificates, separated by ;
	ClientCertificateExclusionPaths *string `pulumi:"clientCertificateExclusionPaths"`
	// The mode of the Function App Slot's client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`. Defaults to `Optional`.
	ClientCertificateMode *string `pulumi:"clientCertificateMode"`
	// a `connectionString` block as detailed below.
	ConnectionStrings []WindowsFunctionAppSlotConnectionString `pulumi:"connectionStrings"`
	// Force disable the content share settings.
	ContentShareForceDisabled *bool `pulumi:"contentShareForceDisabled"`
	// The amount of memory in gigabyte-seconds that your application is allowed to consume per day. Setting this value only affects function apps in Consumption Plans. Defaults to `0`.
	DailyMemoryTimeQuota *int `pulumi:"dailyMemoryTimeQuota"`
	// Is the Windows Function App Slot enabled. Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// Should the default FTP Basic Authentication publishing profile be enabled. Defaults to `true`.
	FtpPublishBasicAuthenticationEnabled *bool `pulumi:"ftpPublishBasicAuthenticationEnabled"`
	// The name of the Windows Function App this Slot is a member of. Changing this forces a new resource to be created.
	FunctionAppId string `pulumi:"functionAppId"`
	// The runtime version associated with the Function App Slot. Defaults to `~4`.
	FunctionsExtensionVersion *string `pulumi:"functionsExtensionVersion"`
	// Can the Function App Slot only be accessed via HTTPS?
	HttpsOnly *bool `pulumi:"httpsOnly"`
	// an `identity` block as detailed below.
	Identity *WindowsFunctionAppSlotIdentity `pulumi:"identity"`
	// The User Assigned Identity ID used for accessing KeyVault secrets. The identity must be assigned to the application in the `identity` block. [For more information see - Access vaults with a user-assigned identity](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references#access-vaults-with-a-user-assigned-identity)
	KeyVaultReferenceIdentityId *string `pulumi:"keyVaultReferenceIdentityId"`
	// Specifies the name of the Windows Function App Slot. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Should public network access be enabled for the Function App. Defaults to `true`.
	PublicNetworkAccessEnabled *bool `pulumi:"publicNetworkAccessEnabled"`
	// The ID of the Service Plan in which to run this slot. If not specified the same Service Plan as the Windows Function App will be used.
	ServicePlanId *string `pulumi:"servicePlanId"`
	// a `siteConfig` block as detailed below.
	SiteConfig WindowsFunctionAppSlotSiteConfig `pulumi:"siteConfig"`
	// The access key which will be used to access the storage account for the Function App Slot.
	StorageAccountAccessKey *string `pulumi:"storageAccountAccessKey"`
	// The backend storage account name which will be used by this Function App Slot.
	StorageAccountName *string `pulumi:"storageAccountName"`
	// One or more `storageAccount` blocks as defined below.
	StorageAccounts []WindowsFunctionAppSlotStorageAccount `pulumi:"storageAccounts"`
	// The Key Vault Secret ID, optionally including version, that contains the Connection String to connect to the storage account for this Function App Slot.
	//
	// > **NOTE:** `storageKeyVaultSecretId` cannot be used with `storageAccountName`.
	//
	// > **NOTE:** `storageKeyVaultSecretId` used without a version will use the latest version of the secret, however, the service can take up to 24h to pick up a rotation of the latest version. See the [official docs](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references#rotation) for more information.
	StorageKeyVaultSecretId *string `pulumi:"storageKeyVaultSecretId"`
	// Should the Function App Slot use its Managed Identity to access storage.
	//
	// > **NOTE:** One of `storageAccountAccessKey` or `storageUsesManagedIdentity` must be specified when using `storageAccountName`.
	StorageUsesManagedIdentity *bool `pulumi:"storageUsesManagedIdentity"`
	// A mapping of tags which should be assigned to the Windows Function App Slot.
	Tags                   map[string]string `pulumi:"tags"`
	VirtualNetworkSubnetId *string           `pulumi:"virtualNetworkSubnetId"`
	// Should the default WebDeploy Basic Authentication publishing credentials enabled. Defaults to`true`.
	WebdeployPublishBasicAuthenticationEnabled *bool `pulumi:"webdeployPublishBasicAuthenticationEnabled"`
}

// The set of arguments for constructing a WindowsFunctionAppSlot resource.
type WindowsFunctionAppSlotArgs struct {
	// A map of key-value pairs for [App Settings](https://docs.microsoft.com/azure/azure-functions/functions-app-settings) and custom values.
	AppSettings pulumi.StringMapInput
	// an `authSettings` block as detailed below.
	AuthSettings WindowsFunctionAppSlotAuthSettingsPtrInput
	// an `authSettingsV2` block as detailed below.
	AuthSettingsV2 WindowsFunctionAppSlotAuthSettingsV2PtrInput
	// a `backup` block as detailed below.
	Backup WindowsFunctionAppSlotBackupPtrInput
	// Should built-in logging be enabled. Configures `AzureWebJobsDashboard` app setting based on the configured storage setting. Defaults to `true`.
	BuiltinLoggingEnabled pulumi.BoolPtrInput
	// Should the Function App Slot use Client Certificates.
	ClientCertificateEnabled pulumi.BoolPtrInput
	// Paths to exclude when using client certificates, separated by ;
	ClientCertificateExclusionPaths pulumi.StringPtrInput
	// The mode of the Function App Slot's client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`. Defaults to `Optional`.
	ClientCertificateMode pulumi.StringPtrInput
	// a `connectionString` block as detailed below.
	ConnectionStrings WindowsFunctionAppSlotConnectionStringArrayInput
	// Force disable the content share settings.
	ContentShareForceDisabled pulumi.BoolPtrInput
	// The amount of memory in gigabyte-seconds that your application is allowed to consume per day. Setting this value only affects function apps in Consumption Plans. Defaults to `0`.
	DailyMemoryTimeQuota pulumi.IntPtrInput
	// Is the Windows Function App Slot enabled. Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	// Should the default FTP Basic Authentication publishing profile be enabled. Defaults to `true`.
	FtpPublishBasicAuthenticationEnabled pulumi.BoolPtrInput
	// The name of the Windows Function App this Slot is a member of. Changing this forces a new resource to be created.
	FunctionAppId pulumi.StringInput
	// The runtime version associated with the Function App Slot. Defaults to `~4`.
	FunctionsExtensionVersion pulumi.StringPtrInput
	// Can the Function App Slot only be accessed via HTTPS?
	HttpsOnly pulumi.BoolPtrInput
	// an `identity` block as detailed below.
	Identity WindowsFunctionAppSlotIdentityPtrInput
	// The User Assigned Identity ID used for accessing KeyVault secrets. The identity must be assigned to the application in the `identity` block. [For more information see - Access vaults with a user-assigned identity](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references#access-vaults-with-a-user-assigned-identity)
	KeyVaultReferenceIdentityId pulumi.StringPtrInput
	// Specifies the name of the Windows Function App Slot. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Should public network access be enabled for the Function App. Defaults to `true`.
	PublicNetworkAccessEnabled pulumi.BoolPtrInput
	// The ID of the Service Plan in which to run this slot. If not specified the same Service Plan as the Windows Function App will be used.
	ServicePlanId pulumi.StringPtrInput
	// a `siteConfig` block as detailed below.
	SiteConfig WindowsFunctionAppSlotSiteConfigInput
	// The access key which will be used to access the storage account for the Function App Slot.
	StorageAccountAccessKey pulumi.StringPtrInput
	// The backend storage account name which will be used by this Function App Slot.
	StorageAccountName pulumi.StringPtrInput
	// One or more `storageAccount` blocks as defined below.
	StorageAccounts WindowsFunctionAppSlotStorageAccountArrayInput
	// The Key Vault Secret ID, optionally including version, that contains the Connection String to connect to the storage account for this Function App Slot.
	//
	// > **NOTE:** `storageKeyVaultSecretId` cannot be used with `storageAccountName`.
	//
	// > **NOTE:** `storageKeyVaultSecretId` used without a version will use the latest version of the secret, however, the service can take up to 24h to pick up a rotation of the latest version. See the [official docs](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references#rotation) for more information.
	StorageKeyVaultSecretId pulumi.StringPtrInput
	// Should the Function App Slot use its Managed Identity to access storage.
	//
	// > **NOTE:** One of `storageAccountAccessKey` or `storageUsesManagedIdentity` must be specified when using `storageAccountName`.
	StorageUsesManagedIdentity pulumi.BoolPtrInput
	// A mapping of tags which should be assigned to the Windows Function App Slot.
	Tags                   pulumi.StringMapInput
	VirtualNetworkSubnetId pulumi.StringPtrInput
	// Should the default WebDeploy Basic Authentication publishing credentials enabled. Defaults to`true`.
	WebdeployPublishBasicAuthenticationEnabled pulumi.BoolPtrInput
}

func (WindowsFunctionAppSlotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*windowsFunctionAppSlotArgs)(nil)).Elem()
}

type WindowsFunctionAppSlotInput interface {
	pulumi.Input

	ToWindowsFunctionAppSlotOutput() WindowsFunctionAppSlotOutput
	ToWindowsFunctionAppSlotOutputWithContext(ctx context.Context) WindowsFunctionAppSlotOutput
}

func (*WindowsFunctionAppSlot) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsFunctionAppSlot)(nil)).Elem()
}

func (i *WindowsFunctionAppSlot) ToWindowsFunctionAppSlotOutput() WindowsFunctionAppSlotOutput {
	return i.ToWindowsFunctionAppSlotOutputWithContext(context.Background())
}

func (i *WindowsFunctionAppSlot) ToWindowsFunctionAppSlotOutputWithContext(ctx context.Context) WindowsFunctionAppSlotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsFunctionAppSlotOutput)
}

func (i *WindowsFunctionAppSlot) ToOutput(ctx context.Context) pulumix.Output[*WindowsFunctionAppSlot] {
	return pulumix.Output[*WindowsFunctionAppSlot]{
		OutputState: i.ToWindowsFunctionAppSlotOutputWithContext(ctx).OutputState,
	}
}

// WindowsFunctionAppSlotArrayInput is an input type that accepts WindowsFunctionAppSlotArray and WindowsFunctionAppSlotArrayOutput values.
// You can construct a concrete instance of `WindowsFunctionAppSlotArrayInput` via:
//
//	WindowsFunctionAppSlotArray{ WindowsFunctionAppSlotArgs{...} }
type WindowsFunctionAppSlotArrayInput interface {
	pulumi.Input

	ToWindowsFunctionAppSlotArrayOutput() WindowsFunctionAppSlotArrayOutput
	ToWindowsFunctionAppSlotArrayOutputWithContext(context.Context) WindowsFunctionAppSlotArrayOutput
}

type WindowsFunctionAppSlotArray []WindowsFunctionAppSlotInput

func (WindowsFunctionAppSlotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WindowsFunctionAppSlot)(nil)).Elem()
}

func (i WindowsFunctionAppSlotArray) ToWindowsFunctionAppSlotArrayOutput() WindowsFunctionAppSlotArrayOutput {
	return i.ToWindowsFunctionAppSlotArrayOutputWithContext(context.Background())
}

func (i WindowsFunctionAppSlotArray) ToWindowsFunctionAppSlotArrayOutputWithContext(ctx context.Context) WindowsFunctionAppSlotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsFunctionAppSlotArrayOutput)
}

func (i WindowsFunctionAppSlotArray) ToOutput(ctx context.Context) pulumix.Output[[]*WindowsFunctionAppSlot] {
	return pulumix.Output[[]*WindowsFunctionAppSlot]{
		OutputState: i.ToWindowsFunctionAppSlotArrayOutputWithContext(ctx).OutputState,
	}
}

// WindowsFunctionAppSlotMapInput is an input type that accepts WindowsFunctionAppSlotMap and WindowsFunctionAppSlotMapOutput values.
// You can construct a concrete instance of `WindowsFunctionAppSlotMapInput` via:
//
//	WindowsFunctionAppSlotMap{ "key": WindowsFunctionAppSlotArgs{...} }
type WindowsFunctionAppSlotMapInput interface {
	pulumi.Input

	ToWindowsFunctionAppSlotMapOutput() WindowsFunctionAppSlotMapOutput
	ToWindowsFunctionAppSlotMapOutputWithContext(context.Context) WindowsFunctionAppSlotMapOutput
}

type WindowsFunctionAppSlotMap map[string]WindowsFunctionAppSlotInput

func (WindowsFunctionAppSlotMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WindowsFunctionAppSlot)(nil)).Elem()
}

func (i WindowsFunctionAppSlotMap) ToWindowsFunctionAppSlotMapOutput() WindowsFunctionAppSlotMapOutput {
	return i.ToWindowsFunctionAppSlotMapOutputWithContext(context.Background())
}

func (i WindowsFunctionAppSlotMap) ToWindowsFunctionAppSlotMapOutputWithContext(ctx context.Context) WindowsFunctionAppSlotMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsFunctionAppSlotMapOutput)
}

func (i WindowsFunctionAppSlotMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*WindowsFunctionAppSlot] {
	return pulumix.Output[map[string]*WindowsFunctionAppSlot]{
		OutputState: i.ToWindowsFunctionAppSlotMapOutputWithContext(ctx).OutputState,
	}
}

type WindowsFunctionAppSlotOutput struct{ *pulumi.OutputState }

func (WindowsFunctionAppSlotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsFunctionAppSlot)(nil)).Elem()
}

func (o WindowsFunctionAppSlotOutput) ToWindowsFunctionAppSlotOutput() WindowsFunctionAppSlotOutput {
	return o
}

func (o WindowsFunctionAppSlotOutput) ToWindowsFunctionAppSlotOutputWithContext(ctx context.Context) WindowsFunctionAppSlotOutput {
	return o
}

func (o WindowsFunctionAppSlotOutput) ToOutput(ctx context.Context) pulumix.Output[*WindowsFunctionAppSlot] {
	return pulumix.Output[*WindowsFunctionAppSlot]{
		OutputState: o.OutputState,
	}
}

// A map of key-value pairs for [App Settings](https://docs.microsoft.com/azure/azure-functions/functions-app-settings) and custom values.
func (o WindowsFunctionAppSlotOutput) AppSettings() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.StringMapOutput { return v.AppSettings }).(pulumi.StringMapOutput)
}

// an `authSettings` block as detailed below.
func (o WindowsFunctionAppSlotOutput) AuthSettings() WindowsFunctionAppSlotAuthSettingsPtrOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) WindowsFunctionAppSlotAuthSettingsPtrOutput { return v.AuthSettings }).(WindowsFunctionAppSlotAuthSettingsPtrOutput)
}

// an `authSettingsV2` block as detailed below.
func (o WindowsFunctionAppSlotOutput) AuthSettingsV2() WindowsFunctionAppSlotAuthSettingsV2PtrOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) WindowsFunctionAppSlotAuthSettingsV2PtrOutput { return v.AuthSettingsV2 }).(WindowsFunctionAppSlotAuthSettingsV2PtrOutput)
}

// a `backup` block as detailed below.
func (o WindowsFunctionAppSlotOutput) Backup() WindowsFunctionAppSlotBackupPtrOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) WindowsFunctionAppSlotBackupPtrOutput { return v.Backup }).(WindowsFunctionAppSlotBackupPtrOutput)
}

// Should built-in logging be enabled. Configures `AzureWebJobsDashboard` app setting based on the configured storage setting. Defaults to `true`.
func (o WindowsFunctionAppSlotOutput) BuiltinLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.BoolPtrOutput { return v.BuiltinLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// Should the Function App Slot use Client Certificates.
func (o WindowsFunctionAppSlotOutput) ClientCertificateEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.BoolPtrOutput { return v.ClientCertificateEnabled }).(pulumi.BoolPtrOutput)
}

// Paths to exclude when using client certificates, separated by ;
func (o WindowsFunctionAppSlotOutput) ClientCertificateExclusionPaths() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.StringPtrOutput { return v.ClientCertificateExclusionPaths }).(pulumi.StringPtrOutput)
}

// The mode of the Function App Slot's client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`. Defaults to `Optional`.
func (o WindowsFunctionAppSlotOutput) ClientCertificateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.StringPtrOutput { return v.ClientCertificateMode }).(pulumi.StringPtrOutput)
}

// a `connectionString` block as detailed below.
func (o WindowsFunctionAppSlotOutput) ConnectionStrings() WindowsFunctionAppSlotConnectionStringArrayOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) WindowsFunctionAppSlotConnectionStringArrayOutput {
		return v.ConnectionStrings
	}).(WindowsFunctionAppSlotConnectionStringArrayOutput)
}

// Force disable the content share settings.
func (o WindowsFunctionAppSlotOutput) ContentShareForceDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.BoolPtrOutput { return v.ContentShareForceDisabled }).(pulumi.BoolPtrOutput)
}

// The identifier used by App Service to perform domain ownership verification via DNS TXT record.
func (o WindowsFunctionAppSlotOutput) CustomDomainVerificationId() pulumi.StringOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.StringOutput { return v.CustomDomainVerificationId }).(pulumi.StringOutput)
}

// The amount of memory in gigabyte-seconds that your application is allowed to consume per day. Setting this value only affects function apps in Consumption Plans. Defaults to `0`.
func (o WindowsFunctionAppSlotOutput) DailyMemoryTimeQuota() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.IntPtrOutput { return v.DailyMemoryTimeQuota }).(pulumi.IntPtrOutput)
}

// The default hostname of the Windows Function App Slot.
func (o WindowsFunctionAppSlotOutput) DefaultHostname() pulumi.StringOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.StringOutput { return v.DefaultHostname }).(pulumi.StringOutput)
}

// Is the Windows Function App Slot enabled. Defaults to `true`.
func (o WindowsFunctionAppSlotOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Should the default FTP Basic Authentication publishing profile be enabled. Defaults to `true`.
func (o WindowsFunctionAppSlotOutput) FtpPublishBasicAuthenticationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.BoolPtrOutput { return v.FtpPublishBasicAuthenticationEnabled }).(pulumi.BoolPtrOutput)
}

// The name of the Windows Function App this Slot is a member of. Changing this forces a new resource to be created.
func (o WindowsFunctionAppSlotOutput) FunctionAppId() pulumi.StringOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.StringOutput { return v.FunctionAppId }).(pulumi.StringOutput)
}

// The runtime version associated with the Function App Slot. Defaults to `~4`.
func (o WindowsFunctionAppSlotOutput) FunctionsExtensionVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.StringPtrOutput { return v.FunctionsExtensionVersion }).(pulumi.StringPtrOutput)
}

// The ID of the App Service Environment used by Function App Slot.
func (o WindowsFunctionAppSlotOutput) HostingEnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.StringOutput { return v.HostingEnvironmentId }).(pulumi.StringOutput)
}

// Can the Function App Slot only be accessed via HTTPS?
func (o WindowsFunctionAppSlotOutput) HttpsOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.BoolPtrOutput { return v.HttpsOnly }).(pulumi.BoolPtrOutput)
}

// an `identity` block as detailed below.
func (o WindowsFunctionAppSlotOutput) Identity() WindowsFunctionAppSlotIdentityPtrOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) WindowsFunctionAppSlotIdentityPtrOutput { return v.Identity }).(WindowsFunctionAppSlotIdentityPtrOutput)
}

// The User Assigned Identity ID used for accessing KeyVault secrets. The identity must be assigned to the application in the `identity` block. [For more information see - Access vaults with a user-assigned identity](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references#access-vaults-with-a-user-assigned-identity)
func (o WindowsFunctionAppSlotOutput) KeyVaultReferenceIdentityId() pulumi.StringOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.StringOutput { return v.KeyVaultReferenceIdentityId }).(pulumi.StringOutput)
}

// The Kind value for this Windows Function App Slot.
func (o WindowsFunctionAppSlotOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Specifies the name of the Windows Function App Slot. Changing this forces a new resource to be created.
func (o WindowsFunctionAppSlotOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A list of outbound IP addresses. For example `["52.23.25.3", "52.143.43.12"]`.
func (o WindowsFunctionAppSlotOutput) OutboundIpAddressLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.StringArrayOutput { return v.OutboundIpAddressLists }).(pulumi.StringArrayOutput)
}

// A comma separated list of outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12`.
func (o WindowsFunctionAppSlotOutput) OutboundIpAddresses() pulumi.StringOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.StringOutput { return v.OutboundIpAddresses }).(pulumi.StringOutput)
}

// A list of possible outbound IP addresses, not all of which are necessarily in use. This is a superset of `outboundIpAddressList`. For example `["52.23.25.3", "52.143.43.12"]`.
func (o WindowsFunctionAppSlotOutput) PossibleOutboundIpAddressLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.StringArrayOutput { return v.PossibleOutboundIpAddressLists }).(pulumi.StringArrayOutput)
}

// A comma separated list of possible outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12,52.143.43.17`. This is a superset of `outboundIpAddresses`. For example `["52.23.25.3", "52.143.43.12","52.143.43.17"]`.
func (o WindowsFunctionAppSlotOutput) PossibleOutboundIpAddresses() pulumi.StringOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.StringOutput { return v.PossibleOutboundIpAddresses }).(pulumi.StringOutput)
}

// Should public network access be enabled for the Function App. Defaults to `true`.
func (o WindowsFunctionAppSlotOutput) PublicNetworkAccessEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.BoolPtrOutput { return v.PublicNetworkAccessEnabled }).(pulumi.BoolPtrOutput)
}

// The ID of the Service Plan in which to run this slot. If not specified the same Service Plan as the Windows Function App will be used.
func (o WindowsFunctionAppSlotOutput) ServicePlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.StringPtrOutput { return v.ServicePlanId }).(pulumi.StringPtrOutput)
}

// a `siteConfig` block as detailed below.
func (o WindowsFunctionAppSlotOutput) SiteConfig() WindowsFunctionAppSlotSiteConfigOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) WindowsFunctionAppSlotSiteConfigOutput { return v.SiteConfig }).(WindowsFunctionAppSlotSiteConfigOutput)
}

// A `siteCredential` block as defined below.
func (o WindowsFunctionAppSlotOutput) SiteCredentials() WindowsFunctionAppSlotSiteCredentialArrayOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) WindowsFunctionAppSlotSiteCredentialArrayOutput {
		return v.SiteCredentials
	}).(WindowsFunctionAppSlotSiteCredentialArrayOutput)
}

// The access key which will be used to access the storage account for the Function App Slot.
func (o WindowsFunctionAppSlotOutput) StorageAccountAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.StringPtrOutput { return v.StorageAccountAccessKey }).(pulumi.StringPtrOutput)
}

// The backend storage account name which will be used by this Function App Slot.
func (o WindowsFunctionAppSlotOutput) StorageAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.StringPtrOutput { return v.StorageAccountName }).(pulumi.StringPtrOutput)
}

// One or more `storageAccount` blocks as defined below.
func (o WindowsFunctionAppSlotOutput) StorageAccounts() WindowsFunctionAppSlotStorageAccountArrayOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) WindowsFunctionAppSlotStorageAccountArrayOutput {
		return v.StorageAccounts
	}).(WindowsFunctionAppSlotStorageAccountArrayOutput)
}

// The Key Vault Secret ID, optionally including version, that contains the Connection String to connect to the storage account for this Function App Slot.
//
// > **NOTE:** `storageKeyVaultSecretId` cannot be used with `storageAccountName`.
//
// > **NOTE:** `storageKeyVaultSecretId` used without a version will use the latest version of the secret, however, the service can take up to 24h to pick up a rotation of the latest version. See the [official docs](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references#rotation) for more information.
func (o WindowsFunctionAppSlotOutput) StorageKeyVaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.StringPtrOutput { return v.StorageKeyVaultSecretId }).(pulumi.StringPtrOutput)
}

// Should the Function App Slot use its Managed Identity to access storage.
//
// > **NOTE:** One of `storageAccountAccessKey` or `storageUsesManagedIdentity` must be specified when using `storageAccountName`.
func (o WindowsFunctionAppSlotOutput) StorageUsesManagedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.BoolPtrOutput { return v.StorageUsesManagedIdentity }).(pulumi.BoolPtrOutput)
}

// A mapping of tags which should be assigned to the Windows Function App Slot.
func (o WindowsFunctionAppSlotOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o WindowsFunctionAppSlotOutput) VirtualNetworkSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.StringPtrOutput { return v.VirtualNetworkSubnetId }).(pulumi.StringPtrOutput)
}

// Should the default WebDeploy Basic Authentication publishing credentials enabled. Defaults to`true`.
func (o WindowsFunctionAppSlotOutput) WebdeployPublishBasicAuthenticationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsFunctionAppSlot) pulumi.BoolPtrOutput {
		return v.WebdeployPublishBasicAuthenticationEnabled
	}).(pulumi.BoolPtrOutput)
}

type WindowsFunctionAppSlotArrayOutput struct{ *pulumi.OutputState }

func (WindowsFunctionAppSlotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WindowsFunctionAppSlot)(nil)).Elem()
}

func (o WindowsFunctionAppSlotArrayOutput) ToWindowsFunctionAppSlotArrayOutput() WindowsFunctionAppSlotArrayOutput {
	return o
}

func (o WindowsFunctionAppSlotArrayOutput) ToWindowsFunctionAppSlotArrayOutputWithContext(ctx context.Context) WindowsFunctionAppSlotArrayOutput {
	return o
}

func (o WindowsFunctionAppSlotArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*WindowsFunctionAppSlot] {
	return pulumix.Output[[]*WindowsFunctionAppSlot]{
		OutputState: o.OutputState,
	}
}

func (o WindowsFunctionAppSlotArrayOutput) Index(i pulumi.IntInput) WindowsFunctionAppSlotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WindowsFunctionAppSlot {
		return vs[0].([]*WindowsFunctionAppSlot)[vs[1].(int)]
	}).(WindowsFunctionAppSlotOutput)
}

type WindowsFunctionAppSlotMapOutput struct{ *pulumi.OutputState }

func (WindowsFunctionAppSlotMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WindowsFunctionAppSlot)(nil)).Elem()
}

func (o WindowsFunctionAppSlotMapOutput) ToWindowsFunctionAppSlotMapOutput() WindowsFunctionAppSlotMapOutput {
	return o
}

func (o WindowsFunctionAppSlotMapOutput) ToWindowsFunctionAppSlotMapOutputWithContext(ctx context.Context) WindowsFunctionAppSlotMapOutput {
	return o
}

func (o WindowsFunctionAppSlotMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*WindowsFunctionAppSlot] {
	return pulumix.Output[map[string]*WindowsFunctionAppSlot]{
		OutputState: o.OutputState,
	}
}

func (o WindowsFunctionAppSlotMapOutput) MapIndex(k pulumi.StringInput) WindowsFunctionAppSlotOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WindowsFunctionAppSlot {
		return vs[0].(map[string]*WindowsFunctionAppSlot)[vs[1].(string)]
	}).(WindowsFunctionAppSlotOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WindowsFunctionAppSlotInput)(nil)).Elem(), &WindowsFunctionAppSlot{})
	pulumi.RegisterInputType(reflect.TypeOf((*WindowsFunctionAppSlotArrayInput)(nil)).Elem(), WindowsFunctionAppSlotArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WindowsFunctionAppSlotMapInput)(nil)).Elem(), WindowsFunctionAppSlotMap{})
	pulumi.RegisterOutputType(WindowsFunctionAppSlotOutput{})
	pulumi.RegisterOutputType(WindowsFunctionAppSlotArrayOutput{})
	pulumi.RegisterOutputType(WindowsFunctionAppSlotMapOutput{})
}
