// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appservice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Function App Running on a Flex Consumption Plan.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/appservice"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resources"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleAccount, err := storage.NewAccount(ctx, "example", &storage.AccountArgs{
//				Name:                   pulumi.String("examplelinuxfunctionappsa"),
//				ResourceGroupName:      example.Name,
//				Location:               example.Location,
//				AccountTier:            pulumi.String("Standard"),
//				AccountReplicationType: pulumi.String("LRS"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleContainer, err := storage.NewContainer(ctx, "example", &storage.ContainerArgs{
//				Name:                pulumi.String("example-flexcontainer"),
//				StorageAccountId:    exampleAccount.ID(),
//				ContainerAccessType: pulumi.String("private"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleServicePlan, err := appservice.NewServicePlan(ctx, "example", &appservice.ServicePlanArgs{
//				Name:              pulumi.String("example-app-service-plan"),
//				ResourceGroupName: example.Name,
//				Location:          example.Location,
//				SkuName:           pulumi.String("FC1"),
//				OsType:            pulumi.String("Linux"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = appservice.NewAppFlexConsumption(ctx, "example", &appservice.AppFlexConsumptionArgs{
//				Name:                 pulumi.String("example-linux-function-app"),
//				ResourceGroupName:    example.Name,
//				Location:             example.Location,
//				ServicePlanId:        exampleServicePlan.ID(),
//				StorageContainerType: pulumi.String("blobContainer"),
//				StorageContainerEndpoint: pulumi.All(exampleAccount.PrimaryBlobEndpoint, exampleContainer.Name).ApplyT(func(_args []interface{}) (string, error) {
//					primaryBlobEndpoint := _args[0].(string)
//					name := _args[1].(string)
//					return fmt.Sprintf("%v%v", primaryBlobEndpoint, name), nil
//				}).(pulumi.StringOutput),
//				StorageAuthenticationType: pulumi.String("StorageAccountConnectionString"),
//				StorageAccessKey:          exampleAccount.PrimaryAccessKey,
//				RuntimeName:               pulumi.String("node"),
//				RuntimeVersion:            pulumi.String("20"),
//				MaximumInstanceCount:      pulumi.Int(50),
//				InstanceMemoryInMb:        pulumi.Int(2048),
//				SiteConfig:                &appservice.AppFlexConsumptionSiteConfigArgs{},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This resource uses the following Azure API Providers:
//
// * `Microsoft.Web`: 2023-12-01, 2023-01-01
//
// ## Import
//
// The Function Apps can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:appservice/appFlexConsumption:AppFlexConsumption example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.Web/sites/site1
// ```
type AppFlexConsumption struct {
	pulumi.CustomResourceState

	// One or more `alwaysReady` blocks as defined below.
	AlwaysReadies AppFlexConsumptionAlwaysReadyArrayOutput `pulumi:"alwaysReadies"`
	// A map of key-value pairs for [App
	// Settings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-app-settings) and custom values.
	AppSettings pulumi.StringMapOutput `pulumi:"appSettings"`
	// A `authSettings` block as defined below.
	AuthSettings AppFlexConsumptionAuthSettingsPtrOutput `pulumi:"authSettings"`
	// An `authSettingsV2` block as defined below.
	AuthSettingsV2 AppFlexConsumptionAuthSettingsV2PtrOutput `pulumi:"authSettingsV2"`
	// Should the function app use Client Certificates.
	ClientCertificateEnabled pulumi.BoolPtrOutput `pulumi:"clientCertificateEnabled"`
	// Paths to exclude when using client certificates, separated by ;
	ClientCertificateExclusionPaths pulumi.StringPtrOutput `pulumi:"clientCertificateExclusionPaths"`
	// The mode of the Function App's client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`. Defaults to `Optional`.
	ClientCertificateMode pulumi.StringPtrOutput `pulumi:"clientCertificateMode"`
	// One or more `connectionString` blocks as defined below.
	ConnectionStrings AppFlexConsumptionConnectionStringArrayOutput `pulumi:"connectionStrings"`
	// The identifier used by App Service to perform domain ownership verification via DNS TXT record.
	CustomDomainVerificationId pulumi.StringOutput `pulumi:"customDomainVerificationId"`
	// The default hostname of the Linux Function App.
	DefaultHostname pulumi.StringOutput `pulumi:"defaultHostname"`
	// Is the Function App enabled? Defaults to `true`.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// The ID of the App Service Environment used by Function App.
	HostingEnvironmentId pulumi.StringOutput `pulumi:"hostingEnvironmentId"`
	// A `identity` block as defined below.
	Identity AppFlexConsumptionIdentityPtrOutput `pulumi:"identity"`
	// The memory size of the instances on which your app runs. The [currently supported values](https://learn.microsoft.com/en-us/azure/azure-functions/flex-consumption-plan#instance-memory) are `2048` or `4096`.
	InstanceMemoryInMb pulumi.IntPtrOutput `pulumi:"instanceMemoryInMb"`
	// The Kind value for this Linux Function App.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// The Azure Region where the Function App should exist. Changing this forces a new Function App to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The number of workers this function app can scale out to.
	MaximumInstanceCount pulumi.IntPtrOutput `pulumi:"maximumInstanceCount"`
	// The name which should be used for this Function App. Changing this forces a new Function App to be created. Limit the function name to 32 characters to avoid naming collisions. For more information about [Function App naming rule](https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-name-rules#microsoftweb) and [Host ID Collisions](https://github.com/Azure/azure-functions-host/wiki/Host-IDs#host-id-collisions)
	Name pulumi.StringOutput `pulumi:"name"`
	// A list of outbound IP addresses. For example `["52.23.25.3", "52.143.43.12"]`
	OutboundIpAddressLists pulumi.StringArrayOutput `pulumi:"outboundIpAddressLists"`
	// A comma separated list of outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12`.
	OutboundIpAddresses pulumi.StringOutput `pulumi:"outboundIpAddresses"`
	// A list of possible outbound IP addresses, not all of which are necessarily in use. This is a superset of `outboundIpAddressList`. For example `["52.23.25.3", "52.143.43.12"]`.
	PossibleOutboundIpAddressLists pulumi.StringArrayOutput `pulumi:"possibleOutboundIpAddressLists"`
	// A comma separated list of possible outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12,52.143.43.17`. This is a superset of `outboundIpAddresses`.
	PossibleOutboundIpAddresses pulumi.StringOutput `pulumi:"possibleOutboundIpAddresses"`
	// Should public network access be enabled for the Function App. Defaults to `true`.
	PublicNetworkAccessEnabled pulumi.BoolPtrOutput `pulumi:"publicNetworkAccessEnabled"`
	// The name of the Resource Group where the Function App should exist. Changing this forces a new Linux Function App to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The Runtime of the Linux Function App. Possible values are `node`, `dotnet-isolated`, `powershell`, `python`, `java` and `custom`.
	RuntimeName pulumi.StringOutput `pulumi:"runtimeName"`
	// The Runtime version of the Linux Function App. The values are diff from different runtime version. The supported values are `8.0`, `9.0` for `dotnet-isolated`, `20` for `node`, `3.10`, `3.11` for `python`, `11`, `17` for `java`, `7.4` for `powershell`.
	RuntimeVersion pulumi.StringOutput `pulumi:"runtimeVersion"`
	// The ID of the App Service Plan within which to create this Function App. Changing this forces a new Linux Function App to be created.
	ServicePlanId pulumi.StringOutput `pulumi:"servicePlanId"`
	// A `siteConfig` block as defined below.
	SiteConfig AppFlexConsumptionSiteConfigOutput `pulumi:"siteConfig"`
	// A `siteCredential` block as defined below.
	SiteCredentials AppFlexConsumptionSiteCredentialArrayOutput `pulumi:"siteCredentials"`
	// A `stickySettings` block as defined below.
	StickySettings AppFlexConsumptionStickySettingsPtrOutput `pulumi:"stickySettings"`
	// The access key which will be used to access the backend storage account for the Function App.
	//
	// > **Note:** The `storageAccessKey` must be specified when `storageAuthenticationType` is set to `StorageAccountConnectionString`.
	StorageAccessKey pulumi.StringPtrOutput `pulumi:"storageAccessKey"`
	// The authentication type which will be used to access the backend storage account for the Function App. Possible values are `StorageAccountConnectionString`, `SystemAssignedIdentity`, and `UserAssignedIdentity`.
	StorageAuthenticationType pulumi.StringOutput `pulumi:"storageAuthenticationType"`
	// The backend storage container endpoint which will be used by this Function App.
	StorageContainerEndpoint pulumi.StringOutput `pulumi:"storageContainerEndpoint"`
	// The storage container type used for the Function App. The current supported type is `blobContainer`.
	StorageContainerType pulumi.StringOutput `pulumi:"storageContainerType"`
	// The user assigned Managed Identity to access the storage account. Conflicts with `storageAccessKey`.
	//
	// > **Note:** The `storageUserAssignedIdentityId` must be specified when `storageAuthenticationType` is set to `UserAssignedIdentity`.
	StorageUserAssignedIdentityId pulumi.StringPtrOutput `pulumi:"storageUserAssignedIdentityId"`
	// A mapping of tags which should be assigned to the Linux Function App.
	Tags                   pulumi.StringMapOutput `pulumi:"tags"`
	VirtualNetworkSubnetId pulumi.StringPtrOutput `pulumi:"virtualNetworkSubnetId"`
	// Should the default WebDeploy Basic Authentication publishing credentials enabled. Defaults to `true`.
	//
	// > **Note:** Setting this value to true will disable the ability to use `zipDeployFile` which currently relies on the default publishing profile.
	WebdeployPublishBasicAuthenticationEnabled pulumi.BoolPtrOutput `pulumi:"webdeployPublishBasicAuthenticationEnabled"`
	// The local path and filename of the Zip packaged application to deploy to this Linux Function App.
	//
	// > **Note:** Using this value requires either `WEBSITE_RUN_FROM_PACKAGE=1` or `SCM_DO_BUILD_DURING_DEPLOYMENT=true` to be set on the App in `appSettings`. Refer to the [Azure docs](https://learn.microsoft.com/en-us/azure/azure-functions/functions-deployment-technologies) for further details.
	ZipDeployFile pulumi.StringOutput `pulumi:"zipDeployFile"`
}

// NewAppFlexConsumption registers a new resource with the given unique name, arguments, and options.
func NewAppFlexConsumption(ctx *pulumi.Context,
	name string, args *AppFlexConsumptionArgs, opts ...pulumi.ResourceOption) (*AppFlexConsumption, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.RuntimeName == nil {
		return nil, errors.New("invalid value for required argument 'RuntimeName'")
	}
	if args.RuntimeVersion == nil {
		return nil, errors.New("invalid value for required argument 'RuntimeVersion'")
	}
	if args.ServicePlanId == nil {
		return nil, errors.New("invalid value for required argument 'ServicePlanId'")
	}
	if args.SiteConfig == nil {
		return nil, errors.New("invalid value for required argument 'SiteConfig'")
	}
	if args.StorageAuthenticationType == nil {
		return nil, errors.New("invalid value for required argument 'StorageAuthenticationType'")
	}
	if args.StorageContainerEndpoint == nil {
		return nil, errors.New("invalid value for required argument 'StorageContainerEndpoint'")
	}
	if args.StorageContainerType == nil {
		return nil, errors.New("invalid value for required argument 'StorageContainerType'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"customDomainVerificationId",
		"siteCredentials",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppFlexConsumption
	err := ctx.RegisterResource("azure:appservice/appFlexConsumption:AppFlexConsumption", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppFlexConsumption gets an existing AppFlexConsumption resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppFlexConsumption(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppFlexConsumptionState, opts ...pulumi.ResourceOption) (*AppFlexConsumption, error) {
	var resource AppFlexConsumption
	err := ctx.ReadResource("azure:appservice/appFlexConsumption:AppFlexConsumption", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppFlexConsumption resources.
type appFlexConsumptionState struct {
	// One or more `alwaysReady` blocks as defined below.
	AlwaysReadies []AppFlexConsumptionAlwaysReady `pulumi:"alwaysReadies"`
	// A map of key-value pairs for [App
	// Settings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-app-settings) and custom values.
	AppSettings map[string]string `pulumi:"appSettings"`
	// A `authSettings` block as defined below.
	AuthSettings *AppFlexConsumptionAuthSettings `pulumi:"authSettings"`
	// An `authSettingsV2` block as defined below.
	AuthSettingsV2 *AppFlexConsumptionAuthSettingsV2 `pulumi:"authSettingsV2"`
	// Should the function app use Client Certificates.
	ClientCertificateEnabled *bool `pulumi:"clientCertificateEnabled"`
	// Paths to exclude when using client certificates, separated by ;
	ClientCertificateExclusionPaths *string `pulumi:"clientCertificateExclusionPaths"`
	// The mode of the Function App's client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`. Defaults to `Optional`.
	ClientCertificateMode *string `pulumi:"clientCertificateMode"`
	// One or more `connectionString` blocks as defined below.
	ConnectionStrings []AppFlexConsumptionConnectionString `pulumi:"connectionStrings"`
	// The identifier used by App Service to perform domain ownership verification via DNS TXT record.
	CustomDomainVerificationId *string `pulumi:"customDomainVerificationId"`
	// The default hostname of the Linux Function App.
	DefaultHostname *string `pulumi:"defaultHostname"`
	// Is the Function App enabled? Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// The ID of the App Service Environment used by Function App.
	HostingEnvironmentId *string `pulumi:"hostingEnvironmentId"`
	// A `identity` block as defined below.
	Identity *AppFlexConsumptionIdentity `pulumi:"identity"`
	// The memory size of the instances on which your app runs. The [currently supported values](https://learn.microsoft.com/en-us/azure/azure-functions/flex-consumption-plan#instance-memory) are `2048` or `4096`.
	InstanceMemoryInMb *int `pulumi:"instanceMemoryInMb"`
	// The Kind value for this Linux Function App.
	Kind *string `pulumi:"kind"`
	// The Azure Region where the Function App should exist. Changing this forces a new Function App to be created.
	Location *string `pulumi:"location"`
	// The number of workers this function app can scale out to.
	MaximumInstanceCount *int `pulumi:"maximumInstanceCount"`
	// The name which should be used for this Function App. Changing this forces a new Function App to be created. Limit the function name to 32 characters to avoid naming collisions. For more information about [Function App naming rule](https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-name-rules#microsoftweb) and [Host ID Collisions](https://github.com/Azure/azure-functions-host/wiki/Host-IDs#host-id-collisions)
	Name *string `pulumi:"name"`
	// A list of outbound IP addresses. For example `["52.23.25.3", "52.143.43.12"]`
	OutboundIpAddressLists []string `pulumi:"outboundIpAddressLists"`
	// A comma separated list of outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12`.
	OutboundIpAddresses *string `pulumi:"outboundIpAddresses"`
	// A list of possible outbound IP addresses, not all of which are necessarily in use. This is a superset of `outboundIpAddressList`. For example `["52.23.25.3", "52.143.43.12"]`.
	PossibleOutboundIpAddressLists []string `pulumi:"possibleOutboundIpAddressLists"`
	// A comma separated list of possible outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12,52.143.43.17`. This is a superset of `outboundIpAddresses`.
	PossibleOutboundIpAddresses *string `pulumi:"possibleOutboundIpAddresses"`
	// Should public network access be enabled for the Function App. Defaults to `true`.
	PublicNetworkAccessEnabled *bool `pulumi:"publicNetworkAccessEnabled"`
	// The name of the Resource Group where the Function App should exist. Changing this forces a new Linux Function App to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The Runtime of the Linux Function App. Possible values are `node`, `dotnet-isolated`, `powershell`, `python`, `java` and `custom`.
	RuntimeName *string `pulumi:"runtimeName"`
	// The Runtime version of the Linux Function App. The values are diff from different runtime version. The supported values are `8.0`, `9.0` for `dotnet-isolated`, `20` for `node`, `3.10`, `3.11` for `python`, `11`, `17` for `java`, `7.4` for `powershell`.
	RuntimeVersion *string `pulumi:"runtimeVersion"`
	// The ID of the App Service Plan within which to create this Function App. Changing this forces a new Linux Function App to be created.
	ServicePlanId *string `pulumi:"servicePlanId"`
	// A `siteConfig` block as defined below.
	SiteConfig *AppFlexConsumptionSiteConfig `pulumi:"siteConfig"`
	// A `siteCredential` block as defined below.
	SiteCredentials []AppFlexConsumptionSiteCredential `pulumi:"siteCredentials"`
	// A `stickySettings` block as defined below.
	StickySettings *AppFlexConsumptionStickySettings `pulumi:"stickySettings"`
	// The access key which will be used to access the backend storage account for the Function App.
	//
	// > **Note:** The `storageAccessKey` must be specified when `storageAuthenticationType` is set to `StorageAccountConnectionString`.
	StorageAccessKey *string `pulumi:"storageAccessKey"`
	// The authentication type which will be used to access the backend storage account for the Function App. Possible values are `StorageAccountConnectionString`, `SystemAssignedIdentity`, and `UserAssignedIdentity`.
	StorageAuthenticationType *string `pulumi:"storageAuthenticationType"`
	// The backend storage container endpoint which will be used by this Function App.
	StorageContainerEndpoint *string `pulumi:"storageContainerEndpoint"`
	// The storage container type used for the Function App. The current supported type is `blobContainer`.
	StorageContainerType *string `pulumi:"storageContainerType"`
	// The user assigned Managed Identity to access the storage account. Conflicts with `storageAccessKey`.
	//
	// > **Note:** The `storageUserAssignedIdentityId` must be specified when `storageAuthenticationType` is set to `UserAssignedIdentity`.
	StorageUserAssignedIdentityId *string `pulumi:"storageUserAssignedIdentityId"`
	// A mapping of tags which should be assigned to the Linux Function App.
	Tags                   map[string]string `pulumi:"tags"`
	VirtualNetworkSubnetId *string           `pulumi:"virtualNetworkSubnetId"`
	// Should the default WebDeploy Basic Authentication publishing credentials enabled. Defaults to `true`.
	//
	// > **Note:** Setting this value to true will disable the ability to use `zipDeployFile` which currently relies on the default publishing profile.
	WebdeployPublishBasicAuthenticationEnabled *bool `pulumi:"webdeployPublishBasicAuthenticationEnabled"`
	// The local path and filename of the Zip packaged application to deploy to this Linux Function App.
	//
	// > **Note:** Using this value requires either `WEBSITE_RUN_FROM_PACKAGE=1` or `SCM_DO_BUILD_DURING_DEPLOYMENT=true` to be set on the App in `appSettings`. Refer to the [Azure docs](https://learn.microsoft.com/en-us/azure/azure-functions/functions-deployment-technologies) for further details.
	ZipDeployFile *string `pulumi:"zipDeployFile"`
}

type AppFlexConsumptionState struct {
	// One or more `alwaysReady` blocks as defined below.
	AlwaysReadies AppFlexConsumptionAlwaysReadyArrayInput
	// A map of key-value pairs for [App
	// Settings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-app-settings) and custom values.
	AppSettings pulumi.StringMapInput
	// A `authSettings` block as defined below.
	AuthSettings AppFlexConsumptionAuthSettingsPtrInput
	// An `authSettingsV2` block as defined below.
	AuthSettingsV2 AppFlexConsumptionAuthSettingsV2PtrInput
	// Should the function app use Client Certificates.
	ClientCertificateEnabled pulumi.BoolPtrInput
	// Paths to exclude when using client certificates, separated by ;
	ClientCertificateExclusionPaths pulumi.StringPtrInput
	// The mode of the Function App's client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`. Defaults to `Optional`.
	ClientCertificateMode pulumi.StringPtrInput
	// One or more `connectionString` blocks as defined below.
	ConnectionStrings AppFlexConsumptionConnectionStringArrayInput
	// The identifier used by App Service to perform domain ownership verification via DNS TXT record.
	CustomDomainVerificationId pulumi.StringPtrInput
	// The default hostname of the Linux Function App.
	DefaultHostname pulumi.StringPtrInput
	// Is the Function App enabled? Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	// The ID of the App Service Environment used by Function App.
	HostingEnvironmentId pulumi.StringPtrInput
	// A `identity` block as defined below.
	Identity AppFlexConsumptionIdentityPtrInput
	// The memory size of the instances on which your app runs. The [currently supported values](https://learn.microsoft.com/en-us/azure/azure-functions/flex-consumption-plan#instance-memory) are `2048` or `4096`.
	InstanceMemoryInMb pulumi.IntPtrInput
	// The Kind value for this Linux Function App.
	Kind pulumi.StringPtrInput
	// The Azure Region where the Function App should exist. Changing this forces a new Function App to be created.
	Location pulumi.StringPtrInput
	// The number of workers this function app can scale out to.
	MaximumInstanceCount pulumi.IntPtrInput
	// The name which should be used for this Function App. Changing this forces a new Function App to be created. Limit the function name to 32 characters to avoid naming collisions. For more information about [Function App naming rule](https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-name-rules#microsoftweb) and [Host ID Collisions](https://github.com/Azure/azure-functions-host/wiki/Host-IDs#host-id-collisions)
	Name pulumi.StringPtrInput
	// A list of outbound IP addresses. For example `["52.23.25.3", "52.143.43.12"]`
	OutboundIpAddressLists pulumi.StringArrayInput
	// A comma separated list of outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12`.
	OutboundIpAddresses pulumi.StringPtrInput
	// A list of possible outbound IP addresses, not all of which are necessarily in use. This is a superset of `outboundIpAddressList`. For example `["52.23.25.3", "52.143.43.12"]`.
	PossibleOutboundIpAddressLists pulumi.StringArrayInput
	// A comma separated list of possible outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12,52.143.43.17`. This is a superset of `outboundIpAddresses`.
	PossibleOutboundIpAddresses pulumi.StringPtrInput
	// Should public network access be enabled for the Function App. Defaults to `true`.
	PublicNetworkAccessEnabled pulumi.BoolPtrInput
	// The name of the Resource Group where the Function App should exist. Changing this forces a new Linux Function App to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The Runtime of the Linux Function App. Possible values are `node`, `dotnet-isolated`, `powershell`, `python`, `java` and `custom`.
	RuntimeName pulumi.StringPtrInput
	// The Runtime version of the Linux Function App. The values are diff from different runtime version. The supported values are `8.0`, `9.0` for `dotnet-isolated`, `20` for `node`, `3.10`, `3.11` for `python`, `11`, `17` for `java`, `7.4` for `powershell`.
	RuntimeVersion pulumi.StringPtrInput
	// The ID of the App Service Plan within which to create this Function App. Changing this forces a new Linux Function App to be created.
	ServicePlanId pulumi.StringPtrInput
	// A `siteConfig` block as defined below.
	SiteConfig AppFlexConsumptionSiteConfigPtrInput
	// A `siteCredential` block as defined below.
	SiteCredentials AppFlexConsumptionSiteCredentialArrayInput
	// A `stickySettings` block as defined below.
	StickySettings AppFlexConsumptionStickySettingsPtrInput
	// The access key which will be used to access the backend storage account for the Function App.
	//
	// > **Note:** The `storageAccessKey` must be specified when `storageAuthenticationType` is set to `StorageAccountConnectionString`.
	StorageAccessKey pulumi.StringPtrInput
	// The authentication type which will be used to access the backend storage account for the Function App. Possible values are `StorageAccountConnectionString`, `SystemAssignedIdentity`, and `UserAssignedIdentity`.
	StorageAuthenticationType pulumi.StringPtrInput
	// The backend storage container endpoint which will be used by this Function App.
	StorageContainerEndpoint pulumi.StringPtrInput
	// The storage container type used for the Function App. The current supported type is `blobContainer`.
	StorageContainerType pulumi.StringPtrInput
	// The user assigned Managed Identity to access the storage account. Conflicts with `storageAccessKey`.
	//
	// > **Note:** The `storageUserAssignedIdentityId` must be specified when `storageAuthenticationType` is set to `UserAssignedIdentity`.
	StorageUserAssignedIdentityId pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Linux Function App.
	Tags                   pulumi.StringMapInput
	VirtualNetworkSubnetId pulumi.StringPtrInput
	// Should the default WebDeploy Basic Authentication publishing credentials enabled. Defaults to `true`.
	//
	// > **Note:** Setting this value to true will disable the ability to use `zipDeployFile` which currently relies on the default publishing profile.
	WebdeployPublishBasicAuthenticationEnabled pulumi.BoolPtrInput
	// The local path and filename of the Zip packaged application to deploy to this Linux Function App.
	//
	// > **Note:** Using this value requires either `WEBSITE_RUN_FROM_PACKAGE=1` or `SCM_DO_BUILD_DURING_DEPLOYMENT=true` to be set on the App in `appSettings`. Refer to the [Azure docs](https://learn.microsoft.com/en-us/azure/azure-functions/functions-deployment-technologies) for further details.
	ZipDeployFile pulumi.StringPtrInput
}

func (AppFlexConsumptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*appFlexConsumptionState)(nil)).Elem()
}

type appFlexConsumptionArgs struct {
	// One or more `alwaysReady` blocks as defined below.
	AlwaysReadies []AppFlexConsumptionAlwaysReady `pulumi:"alwaysReadies"`
	// A map of key-value pairs for [App
	// Settings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-app-settings) and custom values.
	AppSettings map[string]string `pulumi:"appSettings"`
	// A `authSettings` block as defined below.
	AuthSettings *AppFlexConsumptionAuthSettings `pulumi:"authSettings"`
	// An `authSettingsV2` block as defined below.
	AuthSettingsV2 *AppFlexConsumptionAuthSettingsV2 `pulumi:"authSettingsV2"`
	// Should the function app use Client Certificates.
	ClientCertificateEnabled *bool `pulumi:"clientCertificateEnabled"`
	// Paths to exclude when using client certificates, separated by ;
	ClientCertificateExclusionPaths *string `pulumi:"clientCertificateExclusionPaths"`
	// The mode of the Function App's client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`. Defaults to `Optional`.
	ClientCertificateMode *string `pulumi:"clientCertificateMode"`
	// One or more `connectionString` blocks as defined below.
	ConnectionStrings []AppFlexConsumptionConnectionString `pulumi:"connectionStrings"`
	// Is the Function App enabled? Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// A `identity` block as defined below.
	Identity *AppFlexConsumptionIdentity `pulumi:"identity"`
	// The memory size of the instances on which your app runs. The [currently supported values](https://learn.microsoft.com/en-us/azure/azure-functions/flex-consumption-plan#instance-memory) are `2048` or `4096`.
	InstanceMemoryInMb *int `pulumi:"instanceMemoryInMb"`
	// The Azure Region where the Function App should exist. Changing this forces a new Function App to be created.
	Location *string `pulumi:"location"`
	// The number of workers this function app can scale out to.
	MaximumInstanceCount *int `pulumi:"maximumInstanceCount"`
	// The name which should be used for this Function App. Changing this forces a new Function App to be created. Limit the function name to 32 characters to avoid naming collisions. For more information about [Function App naming rule](https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-name-rules#microsoftweb) and [Host ID Collisions](https://github.com/Azure/azure-functions-host/wiki/Host-IDs#host-id-collisions)
	Name *string `pulumi:"name"`
	// Should public network access be enabled for the Function App. Defaults to `true`.
	PublicNetworkAccessEnabled *bool `pulumi:"publicNetworkAccessEnabled"`
	// The name of the Resource Group where the Function App should exist. Changing this forces a new Linux Function App to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The Runtime of the Linux Function App. Possible values are `node`, `dotnet-isolated`, `powershell`, `python`, `java` and `custom`.
	RuntimeName string `pulumi:"runtimeName"`
	// The Runtime version of the Linux Function App. The values are diff from different runtime version. The supported values are `8.0`, `9.0` for `dotnet-isolated`, `20` for `node`, `3.10`, `3.11` for `python`, `11`, `17` for `java`, `7.4` for `powershell`.
	RuntimeVersion string `pulumi:"runtimeVersion"`
	// The ID of the App Service Plan within which to create this Function App. Changing this forces a new Linux Function App to be created.
	ServicePlanId string `pulumi:"servicePlanId"`
	// A `siteConfig` block as defined below.
	SiteConfig AppFlexConsumptionSiteConfig `pulumi:"siteConfig"`
	// A `stickySettings` block as defined below.
	StickySettings *AppFlexConsumptionStickySettings `pulumi:"stickySettings"`
	// The access key which will be used to access the backend storage account for the Function App.
	//
	// > **Note:** The `storageAccessKey` must be specified when `storageAuthenticationType` is set to `StorageAccountConnectionString`.
	StorageAccessKey *string `pulumi:"storageAccessKey"`
	// The authentication type which will be used to access the backend storage account for the Function App. Possible values are `StorageAccountConnectionString`, `SystemAssignedIdentity`, and `UserAssignedIdentity`.
	StorageAuthenticationType string `pulumi:"storageAuthenticationType"`
	// The backend storage container endpoint which will be used by this Function App.
	StorageContainerEndpoint string `pulumi:"storageContainerEndpoint"`
	// The storage container type used for the Function App. The current supported type is `blobContainer`.
	StorageContainerType string `pulumi:"storageContainerType"`
	// The user assigned Managed Identity to access the storage account. Conflicts with `storageAccessKey`.
	//
	// > **Note:** The `storageUserAssignedIdentityId` must be specified when `storageAuthenticationType` is set to `UserAssignedIdentity`.
	StorageUserAssignedIdentityId *string `pulumi:"storageUserAssignedIdentityId"`
	// A mapping of tags which should be assigned to the Linux Function App.
	Tags                   map[string]string `pulumi:"tags"`
	VirtualNetworkSubnetId *string           `pulumi:"virtualNetworkSubnetId"`
	// Should the default WebDeploy Basic Authentication publishing credentials enabled. Defaults to `true`.
	//
	// > **Note:** Setting this value to true will disable the ability to use `zipDeployFile` which currently relies on the default publishing profile.
	WebdeployPublishBasicAuthenticationEnabled *bool `pulumi:"webdeployPublishBasicAuthenticationEnabled"`
	// The local path and filename of the Zip packaged application to deploy to this Linux Function App.
	//
	// > **Note:** Using this value requires either `WEBSITE_RUN_FROM_PACKAGE=1` or `SCM_DO_BUILD_DURING_DEPLOYMENT=true` to be set on the App in `appSettings`. Refer to the [Azure docs](https://learn.microsoft.com/en-us/azure/azure-functions/functions-deployment-technologies) for further details.
	ZipDeployFile *string `pulumi:"zipDeployFile"`
}

// The set of arguments for constructing a AppFlexConsumption resource.
type AppFlexConsumptionArgs struct {
	// One or more `alwaysReady` blocks as defined below.
	AlwaysReadies AppFlexConsumptionAlwaysReadyArrayInput
	// A map of key-value pairs for [App
	// Settings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-app-settings) and custom values.
	AppSettings pulumi.StringMapInput
	// A `authSettings` block as defined below.
	AuthSettings AppFlexConsumptionAuthSettingsPtrInput
	// An `authSettingsV2` block as defined below.
	AuthSettingsV2 AppFlexConsumptionAuthSettingsV2PtrInput
	// Should the function app use Client Certificates.
	ClientCertificateEnabled pulumi.BoolPtrInput
	// Paths to exclude when using client certificates, separated by ;
	ClientCertificateExclusionPaths pulumi.StringPtrInput
	// The mode of the Function App's client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`. Defaults to `Optional`.
	ClientCertificateMode pulumi.StringPtrInput
	// One or more `connectionString` blocks as defined below.
	ConnectionStrings AppFlexConsumptionConnectionStringArrayInput
	// Is the Function App enabled? Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	// A `identity` block as defined below.
	Identity AppFlexConsumptionIdentityPtrInput
	// The memory size of the instances on which your app runs. The [currently supported values](https://learn.microsoft.com/en-us/azure/azure-functions/flex-consumption-plan#instance-memory) are `2048` or `4096`.
	InstanceMemoryInMb pulumi.IntPtrInput
	// The Azure Region where the Function App should exist. Changing this forces a new Function App to be created.
	Location pulumi.StringPtrInput
	// The number of workers this function app can scale out to.
	MaximumInstanceCount pulumi.IntPtrInput
	// The name which should be used for this Function App. Changing this forces a new Function App to be created. Limit the function name to 32 characters to avoid naming collisions. For more information about [Function App naming rule](https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-name-rules#microsoftweb) and [Host ID Collisions](https://github.com/Azure/azure-functions-host/wiki/Host-IDs#host-id-collisions)
	Name pulumi.StringPtrInput
	// Should public network access be enabled for the Function App. Defaults to `true`.
	PublicNetworkAccessEnabled pulumi.BoolPtrInput
	// The name of the Resource Group where the Function App should exist. Changing this forces a new Linux Function App to be created.
	ResourceGroupName pulumi.StringInput
	// The Runtime of the Linux Function App. Possible values are `node`, `dotnet-isolated`, `powershell`, `python`, `java` and `custom`.
	RuntimeName pulumi.StringInput
	// The Runtime version of the Linux Function App. The values are diff from different runtime version. The supported values are `8.0`, `9.0` for `dotnet-isolated`, `20` for `node`, `3.10`, `3.11` for `python`, `11`, `17` for `java`, `7.4` for `powershell`.
	RuntimeVersion pulumi.StringInput
	// The ID of the App Service Plan within which to create this Function App. Changing this forces a new Linux Function App to be created.
	ServicePlanId pulumi.StringInput
	// A `siteConfig` block as defined below.
	SiteConfig AppFlexConsumptionSiteConfigInput
	// A `stickySettings` block as defined below.
	StickySettings AppFlexConsumptionStickySettingsPtrInput
	// The access key which will be used to access the backend storage account for the Function App.
	//
	// > **Note:** The `storageAccessKey` must be specified when `storageAuthenticationType` is set to `StorageAccountConnectionString`.
	StorageAccessKey pulumi.StringPtrInput
	// The authentication type which will be used to access the backend storage account for the Function App. Possible values are `StorageAccountConnectionString`, `SystemAssignedIdentity`, and `UserAssignedIdentity`.
	StorageAuthenticationType pulumi.StringInput
	// The backend storage container endpoint which will be used by this Function App.
	StorageContainerEndpoint pulumi.StringInput
	// The storage container type used for the Function App. The current supported type is `blobContainer`.
	StorageContainerType pulumi.StringInput
	// The user assigned Managed Identity to access the storage account. Conflicts with `storageAccessKey`.
	//
	// > **Note:** The `storageUserAssignedIdentityId` must be specified when `storageAuthenticationType` is set to `UserAssignedIdentity`.
	StorageUserAssignedIdentityId pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Linux Function App.
	Tags                   pulumi.StringMapInput
	VirtualNetworkSubnetId pulumi.StringPtrInput
	// Should the default WebDeploy Basic Authentication publishing credentials enabled. Defaults to `true`.
	//
	// > **Note:** Setting this value to true will disable the ability to use `zipDeployFile` which currently relies on the default publishing profile.
	WebdeployPublishBasicAuthenticationEnabled pulumi.BoolPtrInput
	// The local path and filename of the Zip packaged application to deploy to this Linux Function App.
	//
	// > **Note:** Using this value requires either `WEBSITE_RUN_FROM_PACKAGE=1` or `SCM_DO_BUILD_DURING_DEPLOYMENT=true` to be set on the App in `appSettings`. Refer to the [Azure docs](https://learn.microsoft.com/en-us/azure/azure-functions/functions-deployment-technologies) for further details.
	ZipDeployFile pulumi.StringPtrInput
}

func (AppFlexConsumptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appFlexConsumptionArgs)(nil)).Elem()
}

type AppFlexConsumptionInput interface {
	pulumi.Input

	ToAppFlexConsumptionOutput() AppFlexConsumptionOutput
	ToAppFlexConsumptionOutputWithContext(ctx context.Context) AppFlexConsumptionOutput
}

func (*AppFlexConsumption) ElementType() reflect.Type {
	return reflect.TypeOf((**AppFlexConsumption)(nil)).Elem()
}

func (i *AppFlexConsumption) ToAppFlexConsumptionOutput() AppFlexConsumptionOutput {
	return i.ToAppFlexConsumptionOutputWithContext(context.Background())
}

func (i *AppFlexConsumption) ToAppFlexConsumptionOutputWithContext(ctx context.Context) AppFlexConsumptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppFlexConsumptionOutput)
}

// AppFlexConsumptionArrayInput is an input type that accepts AppFlexConsumptionArray and AppFlexConsumptionArrayOutput values.
// You can construct a concrete instance of `AppFlexConsumptionArrayInput` via:
//
//	AppFlexConsumptionArray{ AppFlexConsumptionArgs{...} }
type AppFlexConsumptionArrayInput interface {
	pulumi.Input

	ToAppFlexConsumptionArrayOutput() AppFlexConsumptionArrayOutput
	ToAppFlexConsumptionArrayOutputWithContext(context.Context) AppFlexConsumptionArrayOutput
}

type AppFlexConsumptionArray []AppFlexConsumptionInput

func (AppFlexConsumptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppFlexConsumption)(nil)).Elem()
}

func (i AppFlexConsumptionArray) ToAppFlexConsumptionArrayOutput() AppFlexConsumptionArrayOutput {
	return i.ToAppFlexConsumptionArrayOutputWithContext(context.Background())
}

func (i AppFlexConsumptionArray) ToAppFlexConsumptionArrayOutputWithContext(ctx context.Context) AppFlexConsumptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppFlexConsumptionArrayOutput)
}

// AppFlexConsumptionMapInput is an input type that accepts AppFlexConsumptionMap and AppFlexConsumptionMapOutput values.
// You can construct a concrete instance of `AppFlexConsumptionMapInput` via:
//
//	AppFlexConsumptionMap{ "key": AppFlexConsumptionArgs{...} }
type AppFlexConsumptionMapInput interface {
	pulumi.Input

	ToAppFlexConsumptionMapOutput() AppFlexConsumptionMapOutput
	ToAppFlexConsumptionMapOutputWithContext(context.Context) AppFlexConsumptionMapOutput
}

type AppFlexConsumptionMap map[string]AppFlexConsumptionInput

func (AppFlexConsumptionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppFlexConsumption)(nil)).Elem()
}

func (i AppFlexConsumptionMap) ToAppFlexConsumptionMapOutput() AppFlexConsumptionMapOutput {
	return i.ToAppFlexConsumptionMapOutputWithContext(context.Background())
}

func (i AppFlexConsumptionMap) ToAppFlexConsumptionMapOutputWithContext(ctx context.Context) AppFlexConsumptionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppFlexConsumptionMapOutput)
}

type AppFlexConsumptionOutput struct{ *pulumi.OutputState }

func (AppFlexConsumptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppFlexConsumption)(nil)).Elem()
}

func (o AppFlexConsumptionOutput) ToAppFlexConsumptionOutput() AppFlexConsumptionOutput {
	return o
}

func (o AppFlexConsumptionOutput) ToAppFlexConsumptionOutputWithContext(ctx context.Context) AppFlexConsumptionOutput {
	return o
}

// One or more `alwaysReady` blocks as defined below.
func (o AppFlexConsumptionOutput) AlwaysReadies() AppFlexConsumptionAlwaysReadyArrayOutput {
	return o.ApplyT(func(v *AppFlexConsumption) AppFlexConsumptionAlwaysReadyArrayOutput { return v.AlwaysReadies }).(AppFlexConsumptionAlwaysReadyArrayOutput)
}

// A map of key-value pairs for [App
// Settings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-app-settings) and custom values.
func (o AppFlexConsumptionOutput) AppSettings() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.StringMapOutput { return v.AppSettings }).(pulumi.StringMapOutput)
}

// A `authSettings` block as defined below.
func (o AppFlexConsumptionOutput) AuthSettings() AppFlexConsumptionAuthSettingsPtrOutput {
	return o.ApplyT(func(v *AppFlexConsumption) AppFlexConsumptionAuthSettingsPtrOutput { return v.AuthSettings }).(AppFlexConsumptionAuthSettingsPtrOutput)
}

// An `authSettingsV2` block as defined below.
func (o AppFlexConsumptionOutput) AuthSettingsV2() AppFlexConsumptionAuthSettingsV2PtrOutput {
	return o.ApplyT(func(v *AppFlexConsumption) AppFlexConsumptionAuthSettingsV2PtrOutput { return v.AuthSettingsV2 }).(AppFlexConsumptionAuthSettingsV2PtrOutput)
}

// Should the function app use Client Certificates.
func (o AppFlexConsumptionOutput) ClientCertificateEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.BoolPtrOutput { return v.ClientCertificateEnabled }).(pulumi.BoolPtrOutput)
}

// Paths to exclude when using client certificates, separated by ;
func (o AppFlexConsumptionOutput) ClientCertificateExclusionPaths() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.StringPtrOutput { return v.ClientCertificateExclusionPaths }).(pulumi.StringPtrOutput)
}

// The mode of the Function App's client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`. Defaults to `Optional`.
func (o AppFlexConsumptionOutput) ClientCertificateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.StringPtrOutput { return v.ClientCertificateMode }).(pulumi.StringPtrOutput)
}

// One or more `connectionString` blocks as defined below.
func (o AppFlexConsumptionOutput) ConnectionStrings() AppFlexConsumptionConnectionStringArrayOutput {
	return o.ApplyT(func(v *AppFlexConsumption) AppFlexConsumptionConnectionStringArrayOutput { return v.ConnectionStrings }).(AppFlexConsumptionConnectionStringArrayOutput)
}

// The identifier used by App Service to perform domain ownership verification via DNS TXT record.
func (o AppFlexConsumptionOutput) CustomDomainVerificationId() pulumi.StringOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.StringOutput { return v.CustomDomainVerificationId }).(pulumi.StringOutput)
}

// The default hostname of the Linux Function App.
func (o AppFlexConsumptionOutput) DefaultHostname() pulumi.StringOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.StringOutput { return v.DefaultHostname }).(pulumi.StringOutput)
}

// Is the Function App enabled? Defaults to `true`.
func (o AppFlexConsumptionOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The ID of the App Service Environment used by Function App.
func (o AppFlexConsumptionOutput) HostingEnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.StringOutput { return v.HostingEnvironmentId }).(pulumi.StringOutput)
}

// A `identity` block as defined below.
func (o AppFlexConsumptionOutput) Identity() AppFlexConsumptionIdentityPtrOutput {
	return o.ApplyT(func(v *AppFlexConsumption) AppFlexConsumptionIdentityPtrOutput { return v.Identity }).(AppFlexConsumptionIdentityPtrOutput)
}

// The memory size of the instances on which your app runs. The [currently supported values](https://learn.microsoft.com/en-us/azure/azure-functions/flex-consumption-plan#instance-memory) are `2048` or `4096`.
func (o AppFlexConsumptionOutput) InstanceMemoryInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.IntPtrOutput { return v.InstanceMemoryInMb }).(pulumi.IntPtrOutput)
}

// The Kind value for this Linux Function App.
func (o AppFlexConsumptionOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// The Azure Region where the Function App should exist. Changing this forces a new Function App to be created.
func (o AppFlexConsumptionOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The number of workers this function app can scale out to.
func (o AppFlexConsumptionOutput) MaximumInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.IntPtrOutput { return v.MaximumInstanceCount }).(pulumi.IntPtrOutput)
}

// The name which should be used for this Function App. Changing this forces a new Function App to be created. Limit the function name to 32 characters to avoid naming collisions. For more information about [Function App naming rule](https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-name-rules#microsoftweb) and [Host ID Collisions](https://github.com/Azure/azure-functions-host/wiki/Host-IDs#host-id-collisions)
func (o AppFlexConsumptionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A list of outbound IP addresses. For example `["52.23.25.3", "52.143.43.12"]`
func (o AppFlexConsumptionOutput) OutboundIpAddressLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.StringArrayOutput { return v.OutboundIpAddressLists }).(pulumi.StringArrayOutput)
}

// A comma separated list of outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12`.
func (o AppFlexConsumptionOutput) OutboundIpAddresses() pulumi.StringOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.StringOutput { return v.OutboundIpAddresses }).(pulumi.StringOutput)
}

// A list of possible outbound IP addresses, not all of which are necessarily in use. This is a superset of `outboundIpAddressList`. For example `["52.23.25.3", "52.143.43.12"]`.
func (o AppFlexConsumptionOutput) PossibleOutboundIpAddressLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.StringArrayOutput { return v.PossibleOutboundIpAddressLists }).(pulumi.StringArrayOutput)
}

// A comma separated list of possible outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12,52.143.43.17`. This is a superset of `outboundIpAddresses`.
func (o AppFlexConsumptionOutput) PossibleOutboundIpAddresses() pulumi.StringOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.StringOutput { return v.PossibleOutboundIpAddresses }).(pulumi.StringOutput)
}

// Should public network access be enabled for the Function App. Defaults to `true`.
func (o AppFlexConsumptionOutput) PublicNetworkAccessEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.BoolPtrOutput { return v.PublicNetworkAccessEnabled }).(pulumi.BoolPtrOutput)
}

// The name of the Resource Group where the Function App should exist. Changing this forces a new Linux Function App to be created.
func (o AppFlexConsumptionOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The Runtime of the Linux Function App. Possible values are `node`, `dotnet-isolated`, `powershell`, `python`, `java` and `custom`.
func (o AppFlexConsumptionOutput) RuntimeName() pulumi.StringOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.StringOutput { return v.RuntimeName }).(pulumi.StringOutput)
}

// The Runtime version of the Linux Function App. The values are diff from different runtime version. The supported values are `8.0`, `9.0` for `dotnet-isolated`, `20` for `node`, `3.10`, `3.11` for `python`, `11`, `17` for `java`, `7.4` for `powershell`.
func (o AppFlexConsumptionOutput) RuntimeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.StringOutput { return v.RuntimeVersion }).(pulumi.StringOutput)
}

// The ID of the App Service Plan within which to create this Function App. Changing this forces a new Linux Function App to be created.
func (o AppFlexConsumptionOutput) ServicePlanId() pulumi.StringOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.StringOutput { return v.ServicePlanId }).(pulumi.StringOutput)
}

// A `siteConfig` block as defined below.
func (o AppFlexConsumptionOutput) SiteConfig() AppFlexConsumptionSiteConfigOutput {
	return o.ApplyT(func(v *AppFlexConsumption) AppFlexConsumptionSiteConfigOutput { return v.SiteConfig }).(AppFlexConsumptionSiteConfigOutput)
}

// A `siteCredential` block as defined below.
func (o AppFlexConsumptionOutput) SiteCredentials() AppFlexConsumptionSiteCredentialArrayOutput {
	return o.ApplyT(func(v *AppFlexConsumption) AppFlexConsumptionSiteCredentialArrayOutput { return v.SiteCredentials }).(AppFlexConsumptionSiteCredentialArrayOutput)
}

// A `stickySettings` block as defined below.
func (o AppFlexConsumptionOutput) StickySettings() AppFlexConsumptionStickySettingsPtrOutput {
	return o.ApplyT(func(v *AppFlexConsumption) AppFlexConsumptionStickySettingsPtrOutput { return v.StickySettings }).(AppFlexConsumptionStickySettingsPtrOutput)
}

// The access key which will be used to access the backend storage account for the Function App.
//
// > **Note:** The `storageAccessKey` must be specified when `storageAuthenticationType` is set to `StorageAccountConnectionString`.
func (o AppFlexConsumptionOutput) StorageAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.StringPtrOutput { return v.StorageAccessKey }).(pulumi.StringPtrOutput)
}

// The authentication type which will be used to access the backend storage account for the Function App. Possible values are `StorageAccountConnectionString`, `SystemAssignedIdentity`, and `UserAssignedIdentity`.
func (o AppFlexConsumptionOutput) StorageAuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.StringOutput { return v.StorageAuthenticationType }).(pulumi.StringOutput)
}

// The backend storage container endpoint which will be used by this Function App.
func (o AppFlexConsumptionOutput) StorageContainerEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.StringOutput { return v.StorageContainerEndpoint }).(pulumi.StringOutput)
}

// The storage container type used for the Function App. The current supported type is `blobContainer`.
func (o AppFlexConsumptionOutput) StorageContainerType() pulumi.StringOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.StringOutput { return v.StorageContainerType }).(pulumi.StringOutput)
}

// The user assigned Managed Identity to access the storage account. Conflicts with `storageAccessKey`.
//
// > **Note:** The `storageUserAssignedIdentityId` must be specified when `storageAuthenticationType` is set to `UserAssignedIdentity`.
func (o AppFlexConsumptionOutput) StorageUserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.StringPtrOutput { return v.StorageUserAssignedIdentityId }).(pulumi.StringPtrOutput)
}

// A mapping of tags which should be assigned to the Linux Function App.
func (o AppFlexConsumptionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o AppFlexConsumptionOutput) VirtualNetworkSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.StringPtrOutput { return v.VirtualNetworkSubnetId }).(pulumi.StringPtrOutput)
}

// Should the default WebDeploy Basic Authentication publishing credentials enabled. Defaults to `true`.
//
// > **Note:** Setting this value to true will disable the ability to use `zipDeployFile` which currently relies on the default publishing profile.
func (o AppFlexConsumptionOutput) WebdeployPublishBasicAuthenticationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.BoolPtrOutput { return v.WebdeployPublishBasicAuthenticationEnabled }).(pulumi.BoolPtrOutput)
}

// The local path and filename of the Zip packaged application to deploy to this Linux Function App.
//
// > **Note:** Using this value requires either `WEBSITE_RUN_FROM_PACKAGE=1` or `SCM_DO_BUILD_DURING_DEPLOYMENT=true` to be set on the App in `appSettings`. Refer to the [Azure docs](https://learn.microsoft.com/en-us/azure/azure-functions/functions-deployment-technologies) for further details.
func (o AppFlexConsumptionOutput) ZipDeployFile() pulumi.StringOutput {
	return o.ApplyT(func(v *AppFlexConsumption) pulumi.StringOutput { return v.ZipDeployFile }).(pulumi.StringOutput)
}

type AppFlexConsumptionArrayOutput struct{ *pulumi.OutputState }

func (AppFlexConsumptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppFlexConsumption)(nil)).Elem()
}

func (o AppFlexConsumptionArrayOutput) ToAppFlexConsumptionArrayOutput() AppFlexConsumptionArrayOutput {
	return o
}

func (o AppFlexConsumptionArrayOutput) ToAppFlexConsumptionArrayOutputWithContext(ctx context.Context) AppFlexConsumptionArrayOutput {
	return o
}

func (o AppFlexConsumptionArrayOutput) Index(i pulumi.IntInput) AppFlexConsumptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppFlexConsumption {
		return vs[0].([]*AppFlexConsumption)[vs[1].(int)]
	}).(AppFlexConsumptionOutput)
}

type AppFlexConsumptionMapOutput struct{ *pulumi.OutputState }

func (AppFlexConsumptionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppFlexConsumption)(nil)).Elem()
}

func (o AppFlexConsumptionMapOutput) ToAppFlexConsumptionMapOutput() AppFlexConsumptionMapOutput {
	return o
}

func (o AppFlexConsumptionMapOutput) ToAppFlexConsumptionMapOutputWithContext(ctx context.Context) AppFlexConsumptionMapOutput {
	return o
}

func (o AppFlexConsumptionMapOutput) MapIndex(k pulumi.StringInput) AppFlexConsumptionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppFlexConsumption {
		return vs[0].(map[string]*AppFlexConsumption)[vs[1].(string)]
	}).(AppFlexConsumptionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppFlexConsumptionInput)(nil)).Elem(), &AppFlexConsumption{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppFlexConsumptionArrayInput)(nil)).Elem(), AppFlexConsumptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppFlexConsumptionMapInput)(nil)).Elem(), AppFlexConsumptionMap{})
	pulumi.RegisterOutputType(AppFlexConsumptionOutput{})
	pulumi.RegisterOutputType(AppFlexConsumptionArrayOutput{})
	pulumi.RegisterOutputType(AppFlexConsumptionMapOutput{})
}
