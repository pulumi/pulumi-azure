// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages SingleSignOn on the datadog Monitor.
//
// ## Example Usage
// ### Enabling SSO on monitor
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/datadog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West US 2"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleMonitor, err := datadog.NewMonitor(ctx, "exampleMonitor", &datadog.MonitorArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				DatadogOrganization: &datadog.MonitorDatadogOrganizationArgs{
//					ApiKey:         pulumi.String("XXXX"),
//					ApplicationKey: pulumi.String("XXXX"),
//				},
//				User: &datadog.MonitorUserArgs{
//					Name:  pulumi.String("Example"),
//					Email: pulumi.String("abc@xyz.com"),
//				},
//				SkuName: pulumi.String("Linked"),
//				Identity: &datadog.MonitorIdentityArgs{
//					Type: pulumi.String("SystemAssigned"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = datadog.NewMonitorSsoConfiguration(ctx, "exampleMonitorSsoConfiguration", &datadog.MonitorSsoConfigurationArgs{
//				DatadogMonitorId:        exampleMonitor.ID(),
//				SingleSignOnEnabled:     pulumi.String("Enable"),
//				EnterpriseApplicationId: pulumi.String("XXXX"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// SingleSignOn on the Datadog Monitor can be imported using the `signle sign on resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:datadog/monitorSsoConfiguration:MonitorSsoConfiguration example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Datadog/monitors/monitor1/singleSignOnConfigurations/default
//
// ```
type MonitorSsoConfiguration struct {
	pulumi.CustomResourceState

	// The Datadog Monitor Id which should be used for this Datadog Monitor SSO Configuration. Changing this forces a new Datadog Monitor SSO Configuration to be created.
	DatadogMonitorId pulumi.StringOutput `pulumi:"datadogMonitorId"`
	// The application Id to perform SSO operation.
	EnterpriseApplicationId pulumi.StringOutput `pulumi:"enterpriseApplicationId"`
	// The SingleSignOn URL to login to Datadog org.
	LoginUrl pulumi.StringOutput `pulumi:"loginUrl"`
	// The name of the SingleSignOn configuration. Defaults to `default`.
	Name pulumi.StringOutput `pulumi:"name"`
	// The state of SingleSignOn configuration. Possible values are `Enable` and `Disable`.
	SingleSignOnEnabled pulumi.StringOutput `pulumi:"singleSignOnEnabled"`
}

// NewMonitorSsoConfiguration registers a new resource with the given unique name, arguments, and options.
func NewMonitorSsoConfiguration(ctx *pulumi.Context,
	name string, args *MonitorSsoConfigurationArgs, opts ...pulumi.ResourceOption) (*MonitorSsoConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DatadogMonitorId == nil {
		return nil, errors.New("invalid value for required argument 'DatadogMonitorId'")
	}
	if args.EnterpriseApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'EnterpriseApplicationId'")
	}
	if args.SingleSignOnEnabled == nil {
		return nil, errors.New("invalid value for required argument 'SingleSignOnEnabled'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MonitorSsoConfiguration
	err := ctx.RegisterResource("azure:datadog/monitorSsoConfiguration:MonitorSsoConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMonitorSsoConfiguration gets an existing MonitorSsoConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMonitorSsoConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MonitorSsoConfigurationState, opts ...pulumi.ResourceOption) (*MonitorSsoConfiguration, error) {
	var resource MonitorSsoConfiguration
	err := ctx.ReadResource("azure:datadog/monitorSsoConfiguration:MonitorSsoConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MonitorSsoConfiguration resources.
type monitorSsoConfigurationState struct {
	// The Datadog Monitor Id which should be used for this Datadog Monitor SSO Configuration. Changing this forces a new Datadog Monitor SSO Configuration to be created.
	DatadogMonitorId *string `pulumi:"datadogMonitorId"`
	// The application Id to perform SSO operation.
	EnterpriseApplicationId *string `pulumi:"enterpriseApplicationId"`
	// The SingleSignOn URL to login to Datadog org.
	LoginUrl *string `pulumi:"loginUrl"`
	// The name of the SingleSignOn configuration. Defaults to `default`.
	Name *string `pulumi:"name"`
	// The state of SingleSignOn configuration. Possible values are `Enable` and `Disable`.
	SingleSignOnEnabled *string `pulumi:"singleSignOnEnabled"`
}

type MonitorSsoConfigurationState struct {
	// The Datadog Monitor Id which should be used for this Datadog Monitor SSO Configuration. Changing this forces a new Datadog Monitor SSO Configuration to be created.
	DatadogMonitorId pulumi.StringPtrInput
	// The application Id to perform SSO operation.
	EnterpriseApplicationId pulumi.StringPtrInput
	// The SingleSignOn URL to login to Datadog org.
	LoginUrl pulumi.StringPtrInput
	// The name of the SingleSignOn configuration. Defaults to `default`.
	Name pulumi.StringPtrInput
	// The state of SingleSignOn configuration. Possible values are `Enable` and `Disable`.
	SingleSignOnEnabled pulumi.StringPtrInput
}

func (MonitorSsoConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*monitorSsoConfigurationState)(nil)).Elem()
}

type monitorSsoConfigurationArgs struct {
	// The Datadog Monitor Id which should be used for this Datadog Monitor SSO Configuration. Changing this forces a new Datadog Monitor SSO Configuration to be created.
	DatadogMonitorId string `pulumi:"datadogMonitorId"`
	// The application Id to perform SSO operation.
	EnterpriseApplicationId string `pulumi:"enterpriseApplicationId"`
	// The name of the SingleSignOn configuration. Defaults to `default`.
	Name *string `pulumi:"name"`
	// The state of SingleSignOn configuration. Possible values are `Enable` and `Disable`.
	SingleSignOnEnabled string `pulumi:"singleSignOnEnabled"`
}

// The set of arguments for constructing a MonitorSsoConfiguration resource.
type MonitorSsoConfigurationArgs struct {
	// The Datadog Monitor Id which should be used for this Datadog Monitor SSO Configuration. Changing this forces a new Datadog Monitor SSO Configuration to be created.
	DatadogMonitorId pulumi.StringInput
	// The application Id to perform SSO operation.
	EnterpriseApplicationId pulumi.StringInput
	// The name of the SingleSignOn configuration. Defaults to `default`.
	Name pulumi.StringPtrInput
	// The state of SingleSignOn configuration. Possible values are `Enable` and `Disable`.
	SingleSignOnEnabled pulumi.StringInput
}

func (MonitorSsoConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*monitorSsoConfigurationArgs)(nil)).Elem()
}

type MonitorSsoConfigurationInput interface {
	pulumi.Input

	ToMonitorSsoConfigurationOutput() MonitorSsoConfigurationOutput
	ToMonitorSsoConfigurationOutputWithContext(ctx context.Context) MonitorSsoConfigurationOutput
}

func (*MonitorSsoConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorSsoConfiguration)(nil)).Elem()
}

func (i *MonitorSsoConfiguration) ToMonitorSsoConfigurationOutput() MonitorSsoConfigurationOutput {
	return i.ToMonitorSsoConfigurationOutputWithContext(context.Background())
}

func (i *MonitorSsoConfiguration) ToMonitorSsoConfigurationOutputWithContext(ctx context.Context) MonitorSsoConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorSsoConfigurationOutput)
}

// MonitorSsoConfigurationArrayInput is an input type that accepts MonitorSsoConfigurationArray and MonitorSsoConfigurationArrayOutput values.
// You can construct a concrete instance of `MonitorSsoConfigurationArrayInput` via:
//
//	MonitorSsoConfigurationArray{ MonitorSsoConfigurationArgs{...} }
type MonitorSsoConfigurationArrayInput interface {
	pulumi.Input

	ToMonitorSsoConfigurationArrayOutput() MonitorSsoConfigurationArrayOutput
	ToMonitorSsoConfigurationArrayOutputWithContext(context.Context) MonitorSsoConfigurationArrayOutput
}

type MonitorSsoConfigurationArray []MonitorSsoConfigurationInput

func (MonitorSsoConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MonitorSsoConfiguration)(nil)).Elem()
}

func (i MonitorSsoConfigurationArray) ToMonitorSsoConfigurationArrayOutput() MonitorSsoConfigurationArrayOutput {
	return i.ToMonitorSsoConfigurationArrayOutputWithContext(context.Background())
}

func (i MonitorSsoConfigurationArray) ToMonitorSsoConfigurationArrayOutputWithContext(ctx context.Context) MonitorSsoConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorSsoConfigurationArrayOutput)
}

// MonitorSsoConfigurationMapInput is an input type that accepts MonitorSsoConfigurationMap and MonitorSsoConfigurationMapOutput values.
// You can construct a concrete instance of `MonitorSsoConfigurationMapInput` via:
//
//	MonitorSsoConfigurationMap{ "key": MonitorSsoConfigurationArgs{...} }
type MonitorSsoConfigurationMapInput interface {
	pulumi.Input

	ToMonitorSsoConfigurationMapOutput() MonitorSsoConfigurationMapOutput
	ToMonitorSsoConfigurationMapOutputWithContext(context.Context) MonitorSsoConfigurationMapOutput
}

type MonitorSsoConfigurationMap map[string]MonitorSsoConfigurationInput

func (MonitorSsoConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MonitorSsoConfiguration)(nil)).Elem()
}

func (i MonitorSsoConfigurationMap) ToMonitorSsoConfigurationMapOutput() MonitorSsoConfigurationMapOutput {
	return i.ToMonitorSsoConfigurationMapOutputWithContext(context.Background())
}

func (i MonitorSsoConfigurationMap) ToMonitorSsoConfigurationMapOutputWithContext(ctx context.Context) MonitorSsoConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorSsoConfigurationMapOutput)
}

type MonitorSsoConfigurationOutput struct{ *pulumi.OutputState }

func (MonitorSsoConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorSsoConfiguration)(nil)).Elem()
}

func (o MonitorSsoConfigurationOutput) ToMonitorSsoConfigurationOutput() MonitorSsoConfigurationOutput {
	return o
}

func (o MonitorSsoConfigurationOutput) ToMonitorSsoConfigurationOutputWithContext(ctx context.Context) MonitorSsoConfigurationOutput {
	return o
}

// The Datadog Monitor Id which should be used for this Datadog Monitor SSO Configuration. Changing this forces a new Datadog Monitor SSO Configuration to be created.
func (o MonitorSsoConfigurationOutput) DatadogMonitorId() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitorSsoConfiguration) pulumi.StringOutput { return v.DatadogMonitorId }).(pulumi.StringOutput)
}

// The application Id to perform SSO operation.
func (o MonitorSsoConfigurationOutput) EnterpriseApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitorSsoConfiguration) pulumi.StringOutput { return v.EnterpriseApplicationId }).(pulumi.StringOutput)
}

// The SingleSignOn URL to login to Datadog org.
func (o MonitorSsoConfigurationOutput) LoginUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitorSsoConfiguration) pulumi.StringOutput { return v.LoginUrl }).(pulumi.StringOutput)
}

// The name of the SingleSignOn configuration. Defaults to `default`.
func (o MonitorSsoConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitorSsoConfiguration) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The state of SingleSignOn configuration. Possible values are `Enable` and `Disable`.
func (o MonitorSsoConfigurationOutput) SingleSignOnEnabled() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitorSsoConfiguration) pulumi.StringOutput { return v.SingleSignOnEnabled }).(pulumi.StringOutput)
}

type MonitorSsoConfigurationArrayOutput struct{ *pulumi.OutputState }

func (MonitorSsoConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MonitorSsoConfiguration)(nil)).Elem()
}

func (o MonitorSsoConfigurationArrayOutput) ToMonitorSsoConfigurationArrayOutput() MonitorSsoConfigurationArrayOutput {
	return o
}

func (o MonitorSsoConfigurationArrayOutput) ToMonitorSsoConfigurationArrayOutputWithContext(ctx context.Context) MonitorSsoConfigurationArrayOutput {
	return o
}

func (o MonitorSsoConfigurationArrayOutput) Index(i pulumi.IntInput) MonitorSsoConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MonitorSsoConfiguration {
		return vs[0].([]*MonitorSsoConfiguration)[vs[1].(int)]
	}).(MonitorSsoConfigurationOutput)
}

type MonitorSsoConfigurationMapOutput struct{ *pulumi.OutputState }

func (MonitorSsoConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MonitorSsoConfiguration)(nil)).Elem()
}

func (o MonitorSsoConfigurationMapOutput) ToMonitorSsoConfigurationMapOutput() MonitorSsoConfigurationMapOutput {
	return o
}

func (o MonitorSsoConfigurationMapOutput) ToMonitorSsoConfigurationMapOutputWithContext(ctx context.Context) MonitorSsoConfigurationMapOutput {
	return o
}

func (o MonitorSsoConfigurationMapOutput) MapIndex(k pulumi.StringInput) MonitorSsoConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MonitorSsoConfiguration {
		return vs[0].(map[string]*MonitorSsoConfiguration)[vs[1].(string)]
	}).(MonitorSsoConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorSsoConfigurationInput)(nil)).Elem(), &MonitorSsoConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorSsoConfigurationArrayInput)(nil)).Elem(), MonitorSsoConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorSsoConfigurationMapInput)(nil)).Elem(), MonitorSsoConfigurationMap{})
	pulumi.RegisterOutputType(MonitorSsoConfigurationOutput{})
	pulumi.RegisterOutputType(MonitorSsoConfigurationArrayOutput{})
	pulumi.RegisterOutputType(MonitorSsoConfigurationMapOutput{})
}
