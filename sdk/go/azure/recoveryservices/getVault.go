// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package recoveryservices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Recovery Services Vault.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/recoveryservices"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := recoveryservices.LookupVault(ctx, &recoveryservices.LookupVaultArgs{
// 			Name:              "tfex-recovery_vault",
// 			ResourceGroupName: "tfex-resource_group",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupVault(ctx *pulumi.Context, args *LookupVaultArgs, opts ...pulumi.InvokeOption) (*LookupVaultResult, error) {
	var rv LookupVaultResult
	err := ctx.Invoke("azure:recoveryservices/getVault:getVault", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVault.
type LookupVaultArgs struct {
	// Specifies the name of the Recovery Services Vault.
	Name string `pulumi:"name"`
	// The name of the resource group in which the Recovery Services Vault resides.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getVault.
type LookupVaultResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Azure location where the resource resides.
	Location          string `pulumi:"location"`
	Name              string `pulumi:"name"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The vault's current SKU.
	Sku string `pulumi:"sku"`
	// A mapping of tags assigned to the resource.
	Tags map[string]string `pulumi:"tags"`
}

func LookupVaultOutput(ctx *pulumi.Context, args LookupVaultOutputArgs, opts ...pulumi.InvokeOption) LookupVaultResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVaultResult, error) {
			args := v.(LookupVaultArgs)
			r, err := LookupVault(ctx, &args, opts...)
			return *r, err
		}).(LookupVaultResultOutput)
}

// A collection of arguments for invoking getVault.
type LookupVaultOutputArgs struct {
	// Specifies the name of the Recovery Services Vault.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group in which the Recovery Services Vault resides.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupVaultOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVaultArgs)(nil)).Elem()
}

// A collection of values returned by getVault.
type LookupVaultResultOutput struct{ *pulumi.OutputState }

func (LookupVaultResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVaultResult)(nil)).Elem()
}

func (o LookupVaultResultOutput) ToLookupVaultResultOutput() LookupVaultResultOutput {
	return o
}

func (o LookupVaultResultOutput) ToLookupVaultResultOutputWithContext(ctx context.Context) LookupVaultResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupVaultResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVaultResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Azure location where the resource resides.
func (o LookupVaultResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVaultResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupVaultResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVaultResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupVaultResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVaultResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The vault's current SKU.
func (o LookupVaultResultOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVaultResult) string { return v.Sku }).(pulumi.StringOutput)
}

// A mapping of tags assigned to the resource.
func (o LookupVaultResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVaultResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVaultResultOutput{})
}
