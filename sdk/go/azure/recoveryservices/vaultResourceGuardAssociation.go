// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package recoveryservices

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an association of a Resource Guard and Recovery Services Vault.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/dataprotection"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/recoveryservices"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = dataprotection.NewResourceGuard(ctx, "exampleResourceGuard", &dataprotection.ResourceGuardArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = recoveryservices.NewVault(ctx, "vault", &recoveryservices.VaultArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				Sku:               pulumi.String("Standard"),
//				SoftDeleteEnabled: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = recoveryservices.NewVaultResourceGuardAssociation(ctx, "test", &recoveryservices.VaultResourceGuardAssociationArgs{
//				VaultId:         pulumi.Any(azurerm_recovery_services_vault.Test.Id),
//				ResourceGuardId: pulumi.Any(azurerm_data_protection_resource_guard.Test.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Resource Guards can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:recoveryservices/vaultResourceGuardAssociation:VaultResourceGuardAssociation example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.RecoveryServices/vaults/vault1/backupResourceGuardProxies/proxy1
//
// ```
type VaultResourceGuardAssociation struct {
	pulumi.CustomResourceState

	// Specifies the name of the Recovery Services Vault Resource Guard Association. Changing this forces a new resource to be created. Defaults to `VaultProxy`.
	//
	// > **NOTE:** `name` has been deprecated and will be removed in version 4.0 of the provider.
	//
	// Deprecated: The `name` field will be removed in v4.0 of the AzureRM Provider.
	Name pulumi.StringOutput `pulumi:"name"`
	// ID of the Resource Guard which should be associated with. Changing this forces a new resource to be created.
	ResourceGuardId pulumi.StringOutput `pulumi:"resourceGuardId"`
	// ID of the Recovery Services Vault which should be associated with. Changing this forces a new resource to be created.
	VaultId pulumi.StringOutput `pulumi:"vaultId"`
}

// NewVaultResourceGuardAssociation registers a new resource with the given unique name, arguments, and options.
func NewVaultResourceGuardAssociation(ctx *pulumi.Context,
	name string, args *VaultResourceGuardAssociationArgs, opts ...pulumi.ResourceOption) (*VaultResourceGuardAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGuardId == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGuardId'")
	}
	if args.VaultId == nil {
		return nil, errors.New("invalid value for required argument 'VaultId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VaultResourceGuardAssociation
	err := ctx.RegisterResource("azure:recoveryservices/vaultResourceGuardAssociation:VaultResourceGuardAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVaultResourceGuardAssociation gets an existing VaultResourceGuardAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVaultResourceGuardAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VaultResourceGuardAssociationState, opts ...pulumi.ResourceOption) (*VaultResourceGuardAssociation, error) {
	var resource VaultResourceGuardAssociation
	err := ctx.ReadResource("azure:recoveryservices/vaultResourceGuardAssociation:VaultResourceGuardAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VaultResourceGuardAssociation resources.
type vaultResourceGuardAssociationState struct {
	// Specifies the name of the Recovery Services Vault Resource Guard Association. Changing this forces a new resource to be created. Defaults to `VaultProxy`.
	//
	// > **NOTE:** `name` has been deprecated and will be removed in version 4.0 of the provider.
	//
	// Deprecated: The `name` field will be removed in v4.0 of the AzureRM Provider.
	Name *string `pulumi:"name"`
	// ID of the Resource Guard which should be associated with. Changing this forces a new resource to be created.
	ResourceGuardId *string `pulumi:"resourceGuardId"`
	// ID of the Recovery Services Vault which should be associated with. Changing this forces a new resource to be created.
	VaultId *string `pulumi:"vaultId"`
}

type VaultResourceGuardAssociationState struct {
	// Specifies the name of the Recovery Services Vault Resource Guard Association. Changing this forces a new resource to be created. Defaults to `VaultProxy`.
	//
	// > **NOTE:** `name` has been deprecated and will be removed in version 4.0 of the provider.
	//
	// Deprecated: The `name` field will be removed in v4.0 of the AzureRM Provider.
	Name pulumi.StringPtrInput
	// ID of the Resource Guard which should be associated with. Changing this forces a new resource to be created.
	ResourceGuardId pulumi.StringPtrInput
	// ID of the Recovery Services Vault which should be associated with. Changing this forces a new resource to be created.
	VaultId pulumi.StringPtrInput
}

func (VaultResourceGuardAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*vaultResourceGuardAssociationState)(nil)).Elem()
}

type vaultResourceGuardAssociationArgs struct {
	// Specifies the name of the Recovery Services Vault Resource Guard Association. Changing this forces a new resource to be created. Defaults to `VaultProxy`.
	//
	// > **NOTE:** `name` has been deprecated and will be removed in version 4.0 of the provider.
	//
	// Deprecated: The `name` field will be removed in v4.0 of the AzureRM Provider.
	Name *string `pulumi:"name"`
	// ID of the Resource Guard which should be associated with. Changing this forces a new resource to be created.
	ResourceGuardId string `pulumi:"resourceGuardId"`
	// ID of the Recovery Services Vault which should be associated with. Changing this forces a new resource to be created.
	VaultId string `pulumi:"vaultId"`
}

// The set of arguments for constructing a VaultResourceGuardAssociation resource.
type VaultResourceGuardAssociationArgs struct {
	// Specifies the name of the Recovery Services Vault Resource Guard Association. Changing this forces a new resource to be created. Defaults to `VaultProxy`.
	//
	// > **NOTE:** `name` has been deprecated and will be removed in version 4.0 of the provider.
	//
	// Deprecated: The `name` field will be removed in v4.0 of the AzureRM Provider.
	Name pulumi.StringPtrInput
	// ID of the Resource Guard which should be associated with. Changing this forces a new resource to be created.
	ResourceGuardId pulumi.StringInput
	// ID of the Recovery Services Vault which should be associated with. Changing this forces a new resource to be created.
	VaultId pulumi.StringInput
}

func (VaultResourceGuardAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vaultResourceGuardAssociationArgs)(nil)).Elem()
}

type VaultResourceGuardAssociationInput interface {
	pulumi.Input

	ToVaultResourceGuardAssociationOutput() VaultResourceGuardAssociationOutput
	ToVaultResourceGuardAssociationOutputWithContext(ctx context.Context) VaultResourceGuardAssociationOutput
}

func (*VaultResourceGuardAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultResourceGuardAssociation)(nil)).Elem()
}

func (i *VaultResourceGuardAssociation) ToVaultResourceGuardAssociationOutput() VaultResourceGuardAssociationOutput {
	return i.ToVaultResourceGuardAssociationOutputWithContext(context.Background())
}

func (i *VaultResourceGuardAssociation) ToVaultResourceGuardAssociationOutputWithContext(ctx context.Context) VaultResourceGuardAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultResourceGuardAssociationOutput)
}

func (i *VaultResourceGuardAssociation) ToOutput(ctx context.Context) pulumix.Output[*VaultResourceGuardAssociation] {
	return pulumix.Output[*VaultResourceGuardAssociation]{
		OutputState: i.ToVaultResourceGuardAssociationOutputWithContext(ctx).OutputState,
	}
}

// VaultResourceGuardAssociationArrayInput is an input type that accepts VaultResourceGuardAssociationArray and VaultResourceGuardAssociationArrayOutput values.
// You can construct a concrete instance of `VaultResourceGuardAssociationArrayInput` via:
//
//	VaultResourceGuardAssociationArray{ VaultResourceGuardAssociationArgs{...} }
type VaultResourceGuardAssociationArrayInput interface {
	pulumi.Input

	ToVaultResourceGuardAssociationArrayOutput() VaultResourceGuardAssociationArrayOutput
	ToVaultResourceGuardAssociationArrayOutputWithContext(context.Context) VaultResourceGuardAssociationArrayOutput
}

type VaultResourceGuardAssociationArray []VaultResourceGuardAssociationInput

func (VaultResourceGuardAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VaultResourceGuardAssociation)(nil)).Elem()
}

func (i VaultResourceGuardAssociationArray) ToVaultResourceGuardAssociationArrayOutput() VaultResourceGuardAssociationArrayOutput {
	return i.ToVaultResourceGuardAssociationArrayOutputWithContext(context.Background())
}

func (i VaultResourceGuardAssociationArray) ToVaultResourceGuardAssociationArrayOutputWithContext(ctx context.Context) VaultResourceGuardAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultResourceGuardAssociationArrayOutput)
}

func (i VaultResourceGuardAssociationArray) ToOutput(ctx context.Context) pulumix.Output[[]*VaultResourceGuardAssociation] {
	return pulumix.Output[[]*VaultResourceGuardAssociation]{
		OutputState: i.ToVaultResourceGuardAssociationArrayOutputWithContext(ctx).OutputState,
	}
}

// VaultResourceGuardAssociationMapInput is an input type that accepts VaultResourceGuardAssociationMap and VaultResourceGuardAssociationMapOutput values.
// You can construct a concrete instance of `VaultResourceGuardAssociationMapInput` via:
//
//	VaultResourceGuardAssociationMap{ "key": VaultResourceGuardAssociationArgs{...} }
type VaultResourceGuardAssociationMapInput interface {
	pulumi.Input

	ToVaultResourceGuardAssociationMapOutput() VaultResourceGuardAssociationMapOutput
	ToVaultResourceGuardAssociationMapOutputWithContext(context.Context) VaultResourceGuardAssociationMapOutput
}

type VaultResourceGuardAssociationMap map[string]VaultResourceGuardAssociationInput

func (VaultResourceGuardAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VaultResourceGuardAssociation)(nil)).Elem()
}

func (i VaultResourceGuardAssociationMap) ToVaultResourceGuardAssociationMapOutput() VaultResourceGuardAssociationMapOutput {
	return i.ToVaultResourceGuardAssociationMapOutputWithContext(context.Background())
}

func (i VaultResourceGuardAssociationMap) ToVaultResourceGuardAssociationMapOutputWithContext(ctx context.Context) VaultResourceGuardAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultResourceGuardAssociationMapOutput)
}

func (i VaultResourceGuardAssociationMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*VaultResourceGuardAssociation] {
	return pulumix.Output[map[string]*VaultResourceGuardAssociation]{
		OutputState: i.ToVaultResourceGuardAssociationMapOutputWithContext(ctx).OutputState,
	}
}

type VaultResourceGuardAssociationOutput struct{ *pulumi.OutputState }

func (VaultResourceGuardAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultResourceGuardAssociation)(nil)).Elem()
}

func (o VaultResourceGuardAssociationOutput) ToVaultResourceGuardAssociationOutput() VaultResourceGuardAssociationOutput {
	return o
}

func (o VaultResourceGuardAssociationOutput) ToVaultResourceGuardAssociationOutputWithContext(ctx context.Context) VaultResourceGuardAssociationOutput {
	return o
}

func (o VaultResourceGuardAssociationOutput) ToOutput(ctx context.Context) pulumix.Output[*VaultResourceGuardAssociation] {
	return pulumix.Output[*VaultResourceGuardAssociation]{
		OutputState: o.OutputState,
	}
}

// Specifies the name of the Recovery Services Vault Resource Guard Association. Changing this forces a new resource to be created. Defaults to `VaultProxy`.
//
// > **NOTE:** `name` has been deprecated and will be removed in version 4.0 of the provider.
//
// Deprecated: The `name` field will be removed in v4.0 of the AzureRM Provider.
func (o VaultResourceGuardAssociationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VaultResourceGuardAssociation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// ID of the Resource Guard which should be associated with. Changing this forces a new resource to be created.
func (o VaultResourceGuardAssociationOutput) ResourceGuardId() pulumi.StringOutput {
	return o.ApplyT(func(v *VaultResourceGuardAssociation) pulumi.StringOutput { return v.ResourceGuardId }).(pulumi.StringOutput)
}

// ID of the Recovery Services Vault which should be associated with. Changing this forces a new resource to be created.
func (o VaultResourceGuardAssociationOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v *VaultResourceGuardAssociation) pulumi.StringOutput { return v.VaultId }).(pulumi.StringOutput)
}

type VaultResourceGuardAssociationArrayOutput struct{ *pulumi.OutputState }

func (VaultResourceGuardAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VaultResourceGuardAssociation)(nil)).Elem()
}

func (o VaultResourceGuardAssociationArrayOutput) ToVaultResourceGuardAssociationArrayOutput() VaultResourceGuardAssociationArrayOutput {
	return o
}

func (o VaultResourceGuardAssociationArrayOutput) ToVaultResourceGuardAssociationArrayOutputWithContext(ctx context.Context) VaultResourceGuardAssociationArrayOutput {
	return o
}

func (o VaultResourceGuardAssociationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*VaultResourceGuardAssociation] {
	return pulumix.Output[[]*VaultResourceGuardAssociation]{
		OutputState: o.OutputState,
	}
}

func (o VaultResourceGuardAssociationArrayOutput) Index(i pulumi.IntInput) VaultResourceGuardAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VaultResourceGuardAssociation {
		return vs[0].([]*VaultResourceGuardAssociation)[vs[1].(int)]
	}).(VaultResourceGuardAssociationOutput)
}

type VaultResourceGuardAssociationMapOutput struct{ *pulumi.OutputState }

func (VaultResourceGuardAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VaultResourceGuardAssociation)(nil)).Elem()
}

func (o VaultResourceGuardAssociationMapOutput) ToVaultResourceGuardAssociationMapOutput() VaultResourceGuardAssociationMapOutput {
	return o
}

func (o VaultResourceGuardAssociationMapOutput) ToVaultResourceGuardAssociationMapOutputWithContext(ctx context.Context) VaultResourceGuardAssociationMapOutput {
	return o
}

func (o VaultResourceGuardAssociationMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*VaultResourceGuardAssociation] {
	return pulumix.Output[map[string]*VaultResourceGuardAssociation]{
		OutputState: o.OutputState,
	}
}

func (o VaultResourceGuardAssociationMapOutput) MapIndex(k pulumi.StringInput) VaultResourceGuardAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VaultResourceGuardAssociation {
		return vs[0].(map[string]*VaultResourceGuardAssociation)[vs[1].(string)]
	}).(VaultResourceGuardAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VaultResourceGuardAssociationInput)(nil)).Elem(), &VaultResourceGuardAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*VaultResourceGuardAssociationArrayInput)(nil)).Elem(), VaultResourceGuardAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VaultResourceGuardAssociationMapInput)(nil)).Elem(), VaultResourceGuardAssociationMap{})
	pulumi.RegisterOutputType(VaultResourceGuardAssociationOutput{})
	pulumi.RegisterOutputType(VaultResourceGuardAssociationArrayOutput{})
	pulumi.RegisterOutputType(VaultResourceGuardAssociationMapOutput{})
}
