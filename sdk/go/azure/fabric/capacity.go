// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fabric

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Fabric Capacity.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/fabric"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			current, err := core.GetClientConfig(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resources"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = fabric.NewCapacity(ctx, "example", &fabric.CapacityArgs{
//				Name:              pulumi.String("example-ffc"),
//				ResourceGroupName: example.Name,
//				Location:          pulumi.String("West Europe"),
//				AdministrationMembers: pulumi.StringArray{
//					pulumi.String(current.ObjectId),
//				},
//				Sku: &fabric.CapacitySkuArgs{
//					Name: pulumi.String("F32"),
//					Tier: pulumi.String("Fabric"),
//				},
//				Tags: pulumi.StringMap{
//					"environment": pulumi.String("test"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Fabric Capacities can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:fabric/capacity:Capacity example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Fabric/capacities/capacity1
// ```
type Capacity struct {
	pulumi.CustomResourceState

	// An array of administrator user identities. The member must be an Entra user or a service principal.
	//
	// > **Note:** If the member is an Entra user, use user principal name (UPN) format. If the user is a service principal, use object ID.
	AdministrationMembers pulumi.StringArrayOutput `pulumi:"administrationMembers"`
	// The supported Azure location where the Fabric Capacity exists. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name which should be used for the Fabric Capacity. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the Resource Group in which to create the Fabric Capacity. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A `sku` block as defined below.
	Sku CapacitySkuOutput `pulumi:"sku"`
	// A mapping of tags to assign to the Fabric Capacity.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewCapacity registers a new resource with the given unique name, arguments, and options.
func NewCapacity(ctx *pulumi.Context,
	name string, args *CapacityArgs, opts ...pulumi.ResourceOption) (*Capacity, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Sku == nil {
		return nil, errors.New("invalid value for required argument 'Sku'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Capacity
	err := ctx.RegisterResource("azure:fabric/capacity:Capacity", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCapacity gets an existing Capacity resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCapacity(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CapacityState, opts ...pulumi.ResourceOption) (*Capacity, error) {
	var resource Capacity
	err := ctx.ReadResource("azure:fabric/capacity:Capacity", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Capacity resources.
type capacityState struct {
	// An array of administrator user identities. The member must be an Entra user or a service principal.
	//
	// > **Note:** If the member is an Entra user, use user principal name (UPN) format. If the user is a service principal, use object ID.
	AdministrationMembers []string `pulumi:"administrationMembers"`
	// The supported Azure location where the Fabric Capacity exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for the Fabric Capacity. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group in which to create the Fabric Capacity. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A `sku` block as defined below.
	Sku *CapacitySku `pulumi:"sku"`
	// A mapping of tags to assign to the Fabric Capacity.
	Tags map[string]string `pulumi:"tags"`
}

type CapacityState struct {
	// An array of administrator user identities. The member must be an Entra user or a service principal.
	//
	// > **Note:** If the member is an Entra user, use user principal name (UPN) format. If the user is a service principal, use object ID.
	AdministrationMembers pulumi.StringArrayInput
	// The supported Azure location where the Fabric Capacity exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for the Fabric Capacity. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group in which to create the Fabric Capacity. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// A `sku` block as defined below.
	Sku CapacitySkuPtrInput
	// A mapping of tags to assign to the Fabric Capacity.
	Tags pulumi.StringMapInput
}

func (CapacityState) ElementType() reflect.Type {
	return reflect.TypeOf((*capacityState)(nil)).Elem()
}

type capacityArgs struct {
	// An array of administrator user identities. The member must be an Entra user or a service principal.
	//
	// > **Note:** If the member is an Entra user, use user principal name (UPN) format. If the user is a service principal, use object ID.
	AdministrationMembers []string `pulumi:"administrationMembers"`
	// The supported Azure location where the Fabric Capacity exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for the Fabric Capacity. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group in which to create the Fabric Capacity. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A `sku` block as defined below.
	Sku CapacitySku `pulumi:"sku"`
	// A mapping of tags to assign to the Fabric Capacity.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Capacity resource.
type CapacityArgs struct {
	// An array of administrator user identities. The member must be an Entra user or a service principal.
	//
	// > **Note:** If the member is an Entra user, use user principal name (UPN) format. If the user is a service principal, use object ID.
	AdministrationMembers pulumi.StringArrayInput
	// The supported Azure location where the Fabric Capacity exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for the Fabric Capacity. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group in which to create the Fabric Capacity. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// A `sku` block as defined below.
	Sku CapacitySkuInput
	// A mapping of tags to assign to the Fabric Capacity.
	Tags pulumi.StringMapInput
}

func (CapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*capacityArgs)(nil)).Elem()
}

type CapacityInput interface {
	pulumi.Input

	ToCapacityOutput() CapacityOutput
	ToCapacityOutputWithContext(ctx context.Context) CapacityOutput
}

func (*Capacity) ElementType() reflect.Type {
	return reflect.TypeOf((**Capacity)(nil)).Elem()
}

func (i *Capacity) ToCapacityOutput() CapacityOutput {
	return i.ToCapacityOutputWithContext(context.Background())
}

func (i *Capacity) ToCapacityOutputWithContext(ctx context.Context) CapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityOutput)
}

// CapacityArrayInput is an input type that accepts CapacityArray and CapacityArrayOutput values.
// You can construct a concrete instance of `CapacityArrayInput` via:
//
//	CapacityArray{ CapacityArgs{...} }
type CapacityArrayInput interface {
	pulumi.Input

	ToCapacityArrayOutput() CapacityArrayOutput
	ToCapacityArrayOutputWithContext(context.Context) CapacityArrayOutput
}

type CapacityArray []CapacityInput

func (CapacityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Capacity)(nil)).Elem()
}

func (i CapacityArray) ToCapacityArrayOutput() CapacityArrayOutput {
	return i.ToCapacityArrayOutputWithContext(context.Background())
}

func (i CapacityArray) ToCapacityArrayOutputWithContext(ctx context.Context) CapacityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityArrayOutput)
}

// CapacityMapInput is an input type that accepts CapacityMap and CapacityMapOutput values.
// You can construct a concrete instance of `CapacityMapInput` via:
//
//	CapacityMap{ "key": CapacityArgs{...} }
type CapacityMapInput interface {
	pulumi.Input

	ToCapacityMapOutput() CapacityMapOutput
	ToCapacityMapOutputWithContext(context.Context) CapacityMapOutput
}

type CapacityMap map[string]CapacityInput

func (CapacityMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Capacity)(nil)).Elem()
}

func (i CapacityMap) ToCapacityMapOutput() CapacityMapOutput {
	return i.ToCapacityMapOutputWithContext(context.Background())
}

func (i CapacityMap) ToCapacityMapOutputWithContext(ctx context.Context) CapacityMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityMapOutput)
}

type CapacityOutput struct{ *pulumi.OutputState }

func (CapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Capacity)(nil)).Elem()
}

func (o CapacityOutput) ToCapacityOutput() CapacityOutput {
	return o
}

func (o CapacityOutput) ToCapacityOutputWithContext(ctx context.Context) CapacityOutput {
	return o
}

// An array of administrator user identities. The member must be an Entra user or a service principal.
//
// > **Note:** If the member is an Entra user, use user principal name (UPN) format. If the user is a service principal, use object ID.
func (o CapacityOutput) AdministrationMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Capacity) pulumi.StringArrayOutput { return v.AdministrationMembers }).(pulumi.StringArrayOutput)
}

// The supported Azure location where the Fabric Capacity exists. Changing this forces a new resource to be created.
func (o CapacityOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Capacity) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name which should be used for the Fabric Capacity. Changing this forces a new resource to be created.
func (o CapacityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Capacity) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the Resource Group in which to create the Fabric Capacity. Changing this forces a new resource to be created.
func (o CapacityOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *Capacity) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A `sku` block as defined below.
func (o CapacityOutput) Sku() CapacitySkuOutput {
	return o.ApplyT(func(v *Capacity) CapacitySkuOutput { return v.Sku }).(CapacitySkuOutput)
}

// A mapping of tags to assign to the Fabric Capacity.
func (o CapacityOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Capacity) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type CapacityArrayOutput struct{ *pulumi.OutputState }

func (CapacityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Capacity)(nil)).Elem()
}

func (o CapacityArrayOutput) ToCapacityArrayOutput() CapacityArrayOutput {
	return o
}

func (o CapacityArrayOutput) ToCapacityArrayOutputWithContext(ctx context.Context) CapacityArrayOutput {
	return o
}

func (o CapacityArrayOutput) Index(i pulumi.IntInput) CapacityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Capacity {
		return vs[0].([]*Capacity)[vs[1].(int)]
	}).(CapacityOutput)
}

type CapacityMapOutput struct{ *pulumi.OutputState }

func (CapacityMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Capacity)(nil)).Elem()
}

func (o CapacityMapOutput) ToCapacityMapOutput() CapacityMapOutput {
	return o
}

func (o CapacityMapOutput) ToCapacityMapOutputWithContext(ctx context.Context) CapacityMapOutput {
	return o
}

func (o CapacityMapOutput) MapIndex(k pulumi.StringInput) CapacityOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Capacity {
		return vs[0].(map[string]*Capacity)[vs[1].(string)]
	}).(CapacityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CapacityInput)(nil)).Elem(), &Capacity{})
	pulumi.RegisterInputType(reflect.TypeOf((*CapacityArrayInput)(nil)).Elem(), CapacityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CapacityMapInput)(nil)).Elem(), CapacityMap{})
	pulumi.RegisterOutputType(CapacityOutput{})
	pulumi.RegisterOutputType(CapacityArrayOutput{})
	pulumi.RegisterOutputType(CapacityMapOutput{})
}
