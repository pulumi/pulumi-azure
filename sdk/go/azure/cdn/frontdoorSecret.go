// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cdn

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Front Door (standard/premium) Secret.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"encoding/base64"
//	"os"
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/cdn"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/keyvault"
//	"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func filebase64OrPanic(path string) string {
//		if fileData, err := os.ReadFile(path); err == nil {
//			return base64.StdEncoding.EncodeToString(fileData[:])
//		} else {
//			panic(err.Error())
//		}
//	}
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			current, err := core.GetClientConfig(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			frontdoor, err := azuread.LookupServicePrincipal(ctx, &azuread.LookupServicePrincipalArgs{
//				DisplayName: pulumi.StringRef("Microsoft.Azure.Cdn"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleKeyVault, err := keyvault.NewKeyVault(ctx, "exampleKeyVault", &keyvault.KeyVaultArgs{
//				Location:                exampleResourceGroup.Location,
//				ResourceGroupName:       exampleResourceGroup.Name,
//				TenantId:                *pulumi.String(current.TenantId),
//				SkuName:                 pulumi.String("premium"),
//				SoftDeleteRetentionDays: pulumi.Int(7),
//				NetworkAcls: &keyvault.KeyVaultNetworkAclsArgs{
//					DefaultAction: pulumi.String("Deny"),
//					Bypass:        pulumi.String("AzureServices"),
//					IpRules: pulumi.StringArray{
//						pulumi.String("10.0.0.0/24"),
//					},
//				},
//				AccessPolicies: keyvault.KeyVaultAccessPolicyArray{
//					&keyvault.KeyVaultAccessPolicyArgs{
//						TenantId: *pulumi.String(current.TenantId),
//						ObjectId: *pulumi.String(frontdoor.ObjectId),
//						SecretPermissions: pulumi.StringArray{
//							pulumi.String("Get"),
//						},
//					},
//					&keyvault.KeyVaultAccessPolicyArgs{
//						TenantId: *pulumi.String(current.TenantId),
//						ObjectId: *pulumi.String(current.ObjectId),
//						CertificatePermissions: pulumi.StringArray{
//							pulumi.String("Get"),
//							pulumi.String("Import"),
//							pulumi.String("Delete"),
//							pulumi.String("Purge"),
//						},
//						SecretPermissions: pulumi.StringArray{
//							pulumi.String("Get"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleCertificate, err := keyvault.NewCertificate(ctx, "exampleCertificate", &keyvault.CertificateArgs{
//				KeyVaultId: exampleKeyVault.ID(),
//				Certificate: &keyvault.CertificateCertificateArgs{
//					Contents: filebase64OrPanic("my-certificate.pfx"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleFrontdoorProfile, err := cdn.NewFrontdoorProfile(ctx, "exampleFrontdoorProfile", &cdn.FrontdoorProfileArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				SkuName:           pulumi.String("Standard_AzureFrontDoor"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cdn.NewFrontdoorSecret(ctx, "exampleFrontdoorSecret", &cdn.FrontdoorSecretArgs{
//				CdnFrontdoorProfileId: exampleFrontdoorProfile.ID(),
//				Secret: &cdn.FrontdoorSecretSecretArgs{
//					CustomerCertificates: cdn.FrontdoorSecretSecretCustomerCertificateArray{
//						&cdn.FrontdoorSecretSecretCustomerCertificateArgs{
//							KeyVaultCertificateId: exampleCertificate.ID(),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Front Door Secrets can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:cdn/frontdoorSecret:FrontdoorSecret example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Cdn/profiles/profile1/secrets/secrets1
//
// ```
type FrontdoorSecret struct {
	pulumi.CustomResourceState

	// The Resource ID of the Front Door Profile. Changing this forces a new Front Door Secret to be created.
	CdnFrontdoorProfileId pulumi.StringOutput `pulumi:"cdnFrontdoorProfileId"`
	// The name of the Front Door Profile containing this Front Door Secret.
	CdnFrontdoorProfileName pulumi.StringOutput `pulumi:"cdnFrontdoorProfileName"`
	// The name which should be used for this Front Door Secret. Possible values must start with a letter or a number, only contain letters, numbers and hyphens and have a length of between 2 and 260 characters. Changing this forces a new Front Door Secret to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// A `secret` block as defined below. Changing this forces a new Front Door Secret to be created.
	Secret FrontdoorSecretSecretOutput `pulumi:"secret"`
}

// NewFrontdoorSecret registers a new resource with the given unique name, arguments, and options.
func NewFrontdoorSecret(ctx *pulumi.Context,
	name string, args *FrontdoorSecretArgs, opts ...pulumi.ResourceOption) (*FrontdoorSecret, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CdnFrontdoorProfileId == nil {
		return nil, errors.New("invalid value for required argument 'CdnFrontdoorProfileId'")
	}
	if args.Secret == nil {
		return nil, errors.New("invalid value for required argument 'Secret'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FrontdoorSecret
	err := ctx.RegisterResource("azure:cdn/frontdoorSecret:FrontdoorSecret", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFrontdoorSecret gets an existing FrontdoorSecret resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFrontdoorSecret(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FrontdoorSecretState, opts ...pulumi.ResourceOption) (*FrontdoorSecret, error) {
	var resource FrontdoorSecret
	err := ctx.ReadResource("azure:cdn/frontdoorSecret:FrontdoorSecret", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FrontdoorSecret resources.
type frontdoorSecretState struct {
	// The Resource ID of the Front Door Profile. Changing this forces a new Front Door Secret to be created.
	CdnFrontdoorProfileId *string `pulumi:"cdnFrontdoorProfileId"`
	// The name of the Front Door Profile containing this Front Door Secret.
	CdnFrontdoorProfileName *string `pulumi:"cdnFrontdoorProfileName"`
	// The name which should be used for this Front Door Secret. Possible values must start with a letter or a number, only contain letters, numbers and hyphens and have a length of between 2 and 260 characters. Changing this forces a new Front Door Secret to be created.
	Name *string `pulumi:"name"`
	// A `secret` block as defined below. Changing this forces a new Front Door Secret to be created.
	Secret *FrontdoorSecretSecret `pulumi:"secret"`
}

type FrontdoorSecretState struct {
	// The Resource ID of the Front Door Profile. Changing this forces a new Front Door Secret to be created.
	CdnFrontdoorProfileId pulumi.StringPtrInput
	// The name of the Front Door Profile containing this Front Door Secret.
	CdnFrontdoorProfileName pulumi.StringPtrInput
	// The name which should be used for this Front Door Secret. Possible values must start with a letter or a number, only contain letters, numbers and hyphens and have a length of between 2 and 260 characters. Changing this forces a new Front Door Secret to be created.
	Name pulumi.StringPtrInput
	// A `secret` block as defined below. Changing this forces a new Front Door Secret to be created.
	Secret FrontdoorSecretSecretPtrInput
}

func (FrontdoorSecretState) ElementType() reflect.Type {
	return reflect.TypeOf((*frontdoorSecretState)(nil)).Elem()
}

type frontdoorSecretArgs struct {
	// The Resource ID of the Front Door Profile. Changing this forces a new Front Door Secret to be created.
	CdnFrontdoorProfileId string `pulumi:"cdnFrontdoorProfileId"`
	// The name which should be used for this Front Door Secret. Possible values must start with a letter or a number, only contain letters, numbers and hyphens and have a length of between 2 and 260 characters. Changing this forces a new Front Door Secret to be created.
	Name *string `pulumi:"name"`
	// A `secret` block as defined below. Changing this forces a new Front Door Secret to be created.
	Secret FrontdoorSecretSecret `pulumi:"secret"`
}

// The set of arguments for constructing a FrontdoorSecret resource.
type FrontdoorSecretArgs struct {
	// The Resource ID of the Front Door Profile. Changing this forces a new Front Door Secret to be created.
	CdnFrontdoorProfileId pulumi.StringInput
	// The name which should be used for this Front Door Secret. Possible values must start with a letter or a number, only contain letters, numbers and hyphens and have a length of between 2 and 260 characters. Changing this forces a new Front Door Secret to be created.
	Name pulumi.StringPtrInput
	// A `secret` block as defined below. Changing this forces a new Front Door Secret to be created.
	Secret FrontdoorSecretSecretInput
}

func (FrontdoorSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*frontdoorSecretArgs)(nil)).Elem()
}

type FrontdoorSecretInput interface {
	pulumi.Input

	ToFrontdoorSecretOutput() FrontdoorSecretOutput
	ToFrontdoorSecretOutputWithContext(ctx context.Context) FrontdoorSecretOutput
}

func (*FrontdoorSecret) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontdoorSecret)(nil)).Elem()
}

func (i *FrontdoorSecret) ToFrontdoorSecretOutput() FrontdoorSecretOutput {
	return i.ToFrontdoorSecretOutputWithContext(context.Background())
}

func (i *FrontdoorSecret) ToFrontdoorSecretOutputWithContext(ctx context.Context) FrontdoorSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontdoorSecretOutput)
}

// FrontdoorSecretArrayInput is an input type that accepts FrontdoorSecretArray and FrontdoorSecretArrayOutput values.
// You can construct a concrete instance of `FrontdoorSecretArrayInput` via:
//
//	FrontdoorSecretArray{ FrontdoorSecretArgs{...} }
type FrontdoorSecretArrayInput interface {
	pulumi.Input

	ToFrontdoorSecretArrayOutput() FrontdoorSecretArrayOutput
	ToFrontdoorSecretArrayOutputWithContext(context.Context) FrontdoorSecretArrayOutput
}

type FrontdoorSecretArray []FrontdoorSecretInput

func (FrontdoorSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FrontdoorSecret)(nil)).Elem()
}

func (i FrontdoorSecretArray) ToFrontdoorSecretArrayOutput() FrontdoorSecretArrayOutput {
	return i.ToFrontdoorSecretArrayOutputWithContext(context.Background())
}

func (i FrontdoorSecretArray) ToFrontdoorSecretArrayOutputWithContext(ctx context.Context) FrontdoorSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontdoorSecretArrayOutput)
}

// FrontdoorSecretMapInput is an input type that accepts FrontdoorSecretMap and FrontdoorSecretMapOutput values.
// You can construct a concrete instance of `FrontdoorSecretMapInput` via:
//
//	FrontdoorSecretMap{ "key": FrontdoorSecretArgs{...} }
type FrontdoorSecretMapInput interface {
	pulumi.Input

	ToFrontdoorSecretMapOutput() FrontdoorSecretMapOutput
	ToFrontdoorSecretMapOutputWithContext(context.Context) FrontdoorSecretMapOutput
}

type FrontdoorSecretMap map[string]FrontdoorSecretInput

func (FrontdoorSecretMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FrontdoorSecret)(nil)).Elem()
}

func (i FrontdoorSecretMap) ToFrontdoorSecretMapOutput() FrontdoorSecretMapOutput {
	return i.ToFrontdoorSecretMapOutputWithContext(context.Background())
}

func (i FrontdoorSecretMap) ToFrontdoorSecretMapOutputWithContext(ctx context.Context) FrontdoorSecretMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontdoorSecretMapOutput)
}

type FrontdoorSecretOutput struct{ *pulumi.OutputState }

func (FrontdoorSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontdoorSecret)(nil)).Elem()
}

func (o FrontdoorSecretOutput) ToFrontdoorSecretOutput() FrontdoorSecretOutput {
	return o
}

func (o FrontdoorSecretOutput) ToFrontdoorSecretOutputWithContext(ctx context.Context) FrontdoorSecretOutput {
	return o
}

// The Resource ID of the Front Door Profile. Changing this forces a new Front Door Secret to be created.
func (o FrontdoorSecretOutput) CdnFrontdoorProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *FrontdoorSecret) pulumi.StringOutput { return v.CdnFrontdoorProfileId }).(pulumi.StringOutput)
}

// The name of the Front Door Profile containing this Front Door Secret.
func (o FrontdoorSecretOutput) CdnFrontdoorProfileName() pulumi.StringOutput {
	return o.ApplyT(func(v *FrontdoorSecret) pulumi.StringOutput { return v.CdnFrontdoorProfileName }).(pulumi.StringOutput)
}

// The name which should be used for this Front Door Secret. Possible values must start with a letter or a number, only contain letters, numbers and hyphens and have a length of between 2 and 260 characters. Changing this forces a new Front Door Secret to be created.
func (o FrontdoorSecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FrontdoorSecret) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A `secret` block as defined below. Changing this forces a new Front Door Secret to be created.
func (o FrontdoorSecretOutput) Secret() FrontdoorSecretSecretOutput {
	return o.ApplyT(func(v *FrontdoorSecret) FrontdoorSecretSecretOutput { return v.Secret }).(FrontdoorSecretSecretOutput)
}

type FrontdoorSecretArrayOutput struct{ *pulumi.OutputState }

func (FrontdoorSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FrontdoorSecret)(nil)).Elem()
}

func (o FrontdoorSecretArrayOutput) ToFrontdoorSecretArrayOutput() FrontdoorSecretArrayOutput {
	return o
}

func (o FrontdoorSecretArrayOutput) ToFrontdoorSecretArrayOutputWithContext(ctx context.Context) FrontdoorSecretArrayOutput {
	return o
}

func (o FrontdoorSecretArrayOutput) Index(i pulumi.IntInput) FrontdoorSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FrontdoorSecret {
		return vs[0].([]*FrontdoorSecret)[vs[1].(int)]
	}).(FrontdoorSecretOutput)
}

type FrontdoorSecretMapOutput struct{ *pulumi.OutputState }

func (FrontdoorSecretMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FrontdoorSecret)(nil)).Elem()
}

func (o FrontdoorSecretMapOutput) ToFrontdoorSecretMapOutput() FrontdoorSecretMapOutput {
	return o
}

func (o FrontdoorSecretMapOutput) ToFrontdoorSecretMapOutputWithContext(ctx context.Context) FrontdoorSecretMapOutput {
	return o
}

func (o FrontdoorSecretMapOutput) MapIndex(k pulumi.StringInput) FrontdoorSecretOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FrontdoorSecret {
		return vs[0].(map[string]*FrontdoorSecret)[vs[1].(string)]
	}).(FrontdoorSecretOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FrontdoorSecretInput)(nil)).Elem(), &FrontdoorSecret{})
	pulumi.RegisterInputType(reflect.TypeOf((*FrontdoorSecretArrayInput)(nil)).Elem(), FrontdoorSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FrontdoorSecretMapInput)(nil)).Elem(), FrontdoorSecretMap{})
	pulumi.RegisterOutputType(FrontdoorSecretOutput{})
	pulumi.RegisterOutputType(FrontdoorSecretArrayOutput{})
	pulumi.RegisterOutputType(FrontdoorSecretMapOutput{})
}
