// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cdn

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/cdn"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/dns"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleZone, err := dns.NewZone(ctx, "exampleZone", &dns.ZoneArgs{
//				ResourceGroupName: pulumi.Any(azurerm_resource_group.Test.Name),
//			})
//			if err != nil {
//				return err
//			}
//			exampleFrontdoorProfile, err := cdn.NewFrontdoorProfile(ctx, "exampleFrontdoorProfile", &cdn.FrontdoorProfileArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cdn.NewFrontdoorCustomEndpoint(ctx, "exampleFrontdoorCustomEndpoint", &cdn.FrontdoorCustomEndpointArgs{
//				CdnFrontdoorProfileId:            exampleFrontdoorProfile.ID(),
//				DnsZoneId:                        exampleZone.ID(),
//				HostName:                         pulumi.String("contoso.com"),
//				AssociateWithCdnFrontdoorRouteId: pulumi.Any(azurerm_cdn_frontdoor_route.Example.Id),
//				Tls: &cdn.FrontdoorCustomEndpointTlsArgs{
//					CertificateType:   pulumi.String("ManagedCertificate"),
//					MinimumTlsVersion: pulumi.String("TLS12"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## Example CNAME Record Usage
//
// !>**IMPORTANT:** You **must** include the `dependsOn` meta-argument which references both the `cdn.FrontdoorRoute` and the `cdn.FrontdoorSecurityPolicy` that are associated with your Custom Domain. The reason for these `dependsOn` meta-arguments is because all of the resources for the Custom Domain need to be associated within FrontDoor before the CNAME record can be written to the domains DNS, else the CNAME validation will fail and FrontDoor will not enable traffic to the Domain.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/dns"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dns.NewCNameRecord(ctx, "example", &dns.CNameRecordArgs{
//				ZoneName:          pulumi.Any(azurerm_dns_zone.Example.Name),
//				ResourceGroupName: pulumi.Any(azurerm_resource_group.Example.Name),
//				Ttl:               pulumi.Int(3600),
//				Record:            pulumi.Any(azurerm_cdn_frontdoor_endpoint.Example.Host_name),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				azurerm_cdn_frontdoor_route.Example,
//				azurerm_cdn_frontdoor_security_policy.Example,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// CDN FrontDoor Custom Domains can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:cdn/frontdoorCustomEndpoint:FrontdoorCustomEndpoint example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Cdn/profiles/profile1/customDomains/customDomain1
//
// ```
type FrontdoorCustomEndpoint struct {
	pulumi.CustomResourceState

	// The resource ID of the CDN FrontDoor Route this Custom Domain should be associated with.
	AssociateWithCdnFrontdoorRouteId pulumi.StringPtrOutput `pulumi:"associateWithCdnFrontdoorRouteId"`
	// The ID of the Frontdoor Profile. Changing this forces a new Frontdoor Profile to be created.
	CdnFrontdoorProfileId pulumi.StringOutput `pulumi:"cdnFrontdoorProfileId"`
	// The ID of the DNS Zone which should be used for this FrontDoor Custom Domain.
	DnsZoneId pulumi.StringPtrOutput `pulumi:"dnsZoneId"`
	// The date time that the token expires.
	ExpirationDate pulumi.StringOutput `pulumi:"expirationDate"`
	// The host name of the domain. Changing this forces a new CDN FrontDoor Custom Domain to be created.
	HostName pulumi.StringOutput `pulumi:"hostName"`
	// The name which should be used for this CDN FrontDoor Custom Domain. Possible values must be between 2 and 260 characters in length, must begin with a letter or number, end with a letter or number and contain only letters, numbers and hyphens. Changing this forces a new CDN FrontDoor Custom Domain to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// A `tls` block as defined below.
	Tls FrontdoorCustomEndpointTlsOutput `pulumi:"tls"`
	// Challenge used for DNS TXT record or file based validation.
	ValidationToken pulumi.StringOutput `pulumi:"validationToken"`
}

// NewFrontdoorCustomEndpoint registers a new resource with the given unique name, arguments, and options.
func NewFrontdoorCustomEndpoint(ctx *pulumi.Context,
	name string, args *FrontdoorCustomEndpointArgs, opts ...pulumi.ResourceOption) (*FrontdoorCustomEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CdnFrontdoorProfileId == nil {
		return nil, errors.New("invalid value for required argument 'CdnFrontdoorProfileId'")
	}
	if args.HostName == nil {
		return nil, errors.New("invalid value for required argument 'HostName'")
	}
	if args.Tls == nil {
		return nil, errors.New("invalid value for required argument 'Tls'")
	}
	var resource FrontdoorCustomEndpoint
	err := ctx.RegisterResource("azure:cdn/frontdoorCustomEndpoint:FrontdoorCustomEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFrontdoorCustomEndpoint gets an existing FrontdoorCustomEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFrontdoorCustomEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FrontdoorCustomEndpointState, opts ...pulumi.ResourceOption) (*FrontdoorCustomEndpoint, error) {
	var resource FrontdoorCustomEndpoint
	err := ctx.ReadResource("azure:cdn/frontdoorCustomEndpoint:FrontdoorCustomEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FrontdoorCustomEndpoint resources.
type frontdoorCustomEndpointState struct {
	// The resource ID of the CDN FrontDoor Route this Custom Domain should be associated with.
	AssociateWithCdnFrontdoorRouteId *string `pulumi:"associateWithCdnFrontdoorRouteId"`
	// The ID of the Frontdoor Profile. Changing this forces a new Frontdoor Profile to be created.
	CdnFrontdoorProfileId *string `pulumi:"cdnFrontdoorProfileId"`
	// The ID of the DNS Zone which should be used for this FrontDoor Custom Domain.
	DnsZoneId *string `pulumi:"dnsZoneId"`
	// The date time that the token expires.
	ExpirationDate *string `pulumi:"expirationDate"`
	// The host name of the domain. Changing this forces a new CDN FrontDoor Custom Domain to be created.
	HostName *string `pulumi:"hostName"`
	// The name which should be used for this CDN FrontDoor Custom Domain. Possible values must be between 2 and 260 characters in length, must begin with a letter or number, end with a letter or number and contain only letters, numbers and hyphens. Changing this forces a new CDN FrontDoor Custom Domain to be created.
	Name *string `pulumi:"name"`
	// A `tls` block as defined below.
	Tls *FrontdoorCustomEndpointTls `pulumi:"tls"`
	// Challenge used for DNS TXT record or file based validation.
	ValidationToken *string `pulumi:"validationToken"`
}

type FrontdoorCustomEndpointState struct {
	// The resource ID of the CDN FrontDoor Route this Custom Domain should be associated with.
	AssociateWithCdnFrontdoorRouteId pulumi.StringPtrInput
	// The ID of the Frontdoor Profile. Changing this forces a new Frontdoor Profile to be created.
	CdnFrontdoorProfileId pulumi.StringPtrInput
	// The ID of the DNS Zone which should be used for this FrontDoor Custom Domain.
	DnsZoneId pulumi.StringPtrInput
	// The date time that the token expires.
	ExpirationDate pulumi.StringPtrInput
	// The host name of the domain. Changing this forces a new CDN FrontDoor Custom Domain to be created.
	HostName pulumi.StringPtrInput
	// The name which should be used for this CDN FrontDoor Custom Domain. Possible values must be between 2 and 260 characters in length, must begin with a letter or number, end with a letter or number and contain only letters, numbers and hyphens. Changing this forces a new CDN FrontDoor Custom Domain to be created.
	Name pulumi.StringPtrInput
	// A `tls` block as defined below.
	Tls FrontdoorCustomEndpointTlsPtrInput
	// Challenge used for DNS TXT record or file based validation.
	ValidationToken pulumi.StringPtrInput
}

func (FrontdoorCustomEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*frontdoorCustomEndpointState)(nil)).Elem()
}

type frontdoorCustomEndpointArgs struct {
	// The resource ID of the CDN FrontDoor Route this Custom Domain should be associated with.
	AssociateWithCdnFrontdoorRouteId *string `pulumi:"associateWithCdnFrontdoorRouteId"`
	// The ID of the Frontdoor Profile. Changing this forces a new Frontdoor Profile to be created.
	CdnFrontdoorProfileId string `pulumi:"cdnFrontdoorProfileId"`
	// The ID of the DNS Zone which should be used for this FrontDoor Custom Domain.
	DnsZoneId *string `pulumi:"dnsZoneId"`
	// The host name of the domain. Changing this forces a new CDN FrontDoor Custom Domain to be created.
	HostName string `pulumi:"hostName"`
	// The name which should be used for this CDN FrontDoor Custom Domain. Possible values must be between 2 and 260 characters in length, must begin with a letter or number, end with a letter or number and contain only letters, numbers and hyphens. Changing this forces a new CDN FrontDoor Custom Domain to be created.
	Name *string `pulumi:"name"`
	// A `tls` block as defined below.
	Tls FrontdoorCustomEndpointTls `pulumi:"tls"`
}

// The set of arguments for constructing a FrontdoorCustomEndpoint resource.
type FrontdoorCustomEndpointArgs struct {
	// The resource ID of the CDN FrontDoor Route this Custom Domain should be associated with.
	AssociateWithCdnFrontdoorRouteId pulumi.StringPtrInput
	// The ID of the Frontdoor Profile. Changing this forces a new Frontdoor Profile to be created.
	CdnFrontdoorProfileId pulumi.StringInput
	// The ID of the DNS Zone which should be used for this FrontDoor Custom Domain.
	DnsZoneId pulumi.StringPtrInput
	// The host name of the domain. Changing this forces a new CDN FrontDoor Custom Domain to be created.
	HostName pulumi.StringInput
	// The name which should be used for this CDN FrontDoor Custom Domain. Possible values must be between 2 and 260 characters in length, must begin with a letter or number, end with a letter or number and contain only letters, numbers and hyphens. Changing this forces a new CDN FrontDoor Custom Domain to be created.
	Name pulumi.StringPtrInput
	// A `tls` block as defined below.
	Tls FrontdoorCustomEndpointTlsInput
}

func (FrontdoorCustomEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*frontdoorCustomEndpointArgs)(nil)).Elem()
}

type FrontdoorCustomEndpointInput interface {
	pulumi.Input

	ToFrontdoorCustomEndpointOutput() FrontdoorCustomEndpointOutput
	ToFrontdoorCustomEndpointOutputWithContext(ctx context.Context) FrontdoorCustomEndpointOutput
}

func (*FrontdoorCustomEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontdoorCustomEndpoint)(nil)).Elem()
}

func (i *FrontdoorCustomEndpoint) ToFrontdoorCustomEndpointOutput() FrontdoorCustomEndpointOutput {
	return i.ToFrontdoorCustomEndpointOutputWithContext(context.Background())
}

func (i *FrontdoorCustomEndpoint) ToFrontdoorCustomEndpointOutputWithContext(ctx context.Context) FrontdoorCustomEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontdoorCustomEndpointOutput)
}

// FrontdoorCustomEndpointArrayInput is an input type that accepts FrontdoorCustomEndpointArray and FrontdoorCustomEndpointArrayOutput values.
// You can construct a concrete instance of `FrontdoorCustomEndpointArrayInput` via:
//
//	FrontdoorCustomEndpointArray{ FrontdoorCustomEndpointArgs{...} }
type FrontdoorCustomEndpointArrayInput interface {
	pulumi.Input

	ToFrontdoorCustomEndpointArrayOutput() FrontdoorCustomEndpointArrayOutput
	ToFrontdoorCustomEndpointArrayOutputWithContext(context.Context) FrontdoorCustomEndpointArrayOutput
}

type FrontdoorCustomEndpointArray []FrontdoorCustomEndpointInput

func (FrontdoorCustomEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FrontdoorCustomEndpoint)(nil)).Elem()
}

func (i FrontdoorCustomEndpointArray) ToFrontdoorCustomEndpointArrayOutput() FrontdoorCustomEndpointArrayOutput {
	return i.ToFrontdoorCustomEndpointArrayOutputWithContext(context.Background())
}

func (i FrontdoorCustomEndpointArray) ToFrontdoorCustomEndpointArrayOutputWithContext(ctx context.Context) FrontdoorCustomEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontdoorCustomEndpointArrayOutput)
}

// FrontdoorCustomEndpointMapInput is an input type that accepts FrontdoorCustomEndpointMap and FrontdoorCustomEndpointMapOutput values.
// You can construct a concrete instance of `FrontdoorCustomEndpointMapInput` via:
//
//	FrontdoorCustomEndpointMap{ "key": FrontdoorCustomEndpointArgs{...} }
type FrontdoorCustomEndpointMapInput interface {
	pulumi.Input

	ToFrontdoorCustomEndpointMapOutput() FrontdoorCustomEndpointMapOutput
	ToFrontdoorCustomEndpointMapOutputWithContext(context.Context) FrontdoorCustomEndpointMapOutput
}

type FrontdoorCustomEndpointMap map[string]FrontdoorCustomEndpointInput

func (FrontdoorCustomEndpointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FrontdoorCustomEndpoint)(nil)).Elem()
}

func (i FrontdoorCustomEndpointMap) ToFrontdoorCustomEndpointMapOutput() FrontdoorCustomEndpointMapOutput {
	return i.ToFrontdoorCustomEndpointMapOutputWithContext(context.Background())
}

func (i FrontdoorCustomEndpointMap) ToFrontdoorCustomEndpointMapOutputWithContext(ctx context.Context) FrontdoorCustomEndpointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontdoorCustomEndpointMapOutput)
}

type FrontdoorCustomEndpointOutput struct{ *pulumi.OutputState }

func (FrontdoorCustomEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontdoorCustomEndpoint)(nil)).Elem()
}

func (o FrontdoorCustomEndpointOutput) ToFrontdoorCustomEndpointOutput() FrontdoorCustomEndpointOutput {
	return o
}

func (o FrontdoorCustomEndpointOutput) ToFrontdoorCustomEndpointOutputWithContext(ctx context.Context) FrontdoorCustomEndpointOutput {
	return o
}

// The resource ID of the CDN FrontDoor Route this Custom Domain should be associated with.
func (o FrontdoorCustomEndpointOutput) AssociateWithCdnFrontdoorRouteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontdoorCustomEndpoint) pulumi.StringPtrOutput { return v.AssociateWithCdnFrontdoorRouteId }).(pulumi.StringPtrOutput)
}

// The ID of the Frontdoor Profile. Changing this forces a new Frontdoor Profile to be created.
func (o FrontdoorCustomEndpointOutput) CdnFrontdoorProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *FrontdoorCustomEndpoint) pulumi.StringOutput { return v.CdnFrontdoorProfileId }).(pulumi.StringOutput)
}

// The ID of the DNS Zone which should be used for this FrontDoor Custom Domain.
func (o FrontdoorCustomEndpointOutput) DnsZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontdoorCustomEndpoint) pulumi.StringPtrOutput { return v.DnsZoneId }).(pulumi.StringPtrOutput)
}

// The date time that the token expires.
func (o FrontdoorCustomEndpointOutput) ExpirationDate() pulumi.StringOutput {
	return o.ApplyT(func(v *FrontdoorCustomEndpoint) pulumi.StringOutput { return v.ExpirationDate }).(pulumi.StringOutput)
}

// The host name of the domain. Changing this forces a new CDN FrontDoor Custom Domain to be created.
func (o FrontdoorCustomEndpointOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v *FrontdoorCustomEndpoint) pulumi.StringOutput { return v.HostName }).(pulumi.StringOutput)
}

// The name which should be used for this CDN FrontDoor Custom Domain. Possible values must be between 2 and 260 characters in length, must begin with a letter or number, end with a letter or number and contain only letters, numbers and hyphens. Changing this forces a new CDN FrontDoor Custom Domain to be created.
func (o FrontdoorCustomEndpointOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FrontdoorCustomEndpoint) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A `tls` block as defined below.
func (o FrontdoorCustomEndpointOutput) Tls() FrontdoorCustomEndpointTlsOutput {
	return o.ApplyT(func(v *FrontdoorCustomEndpoint) FrontdoorCustomEndpointTlsOutput { return v.Tls }).(FrontdoorCustomEndpointTlsOutput)
}

// Challenge used for DNS TXT record or file based validation.
func (o FrontdoorCustomEndpointOutput) ValidationToken() pulumi.StringOutput {
	return o.ApplyT(func(v *FrontdoorCustomEndpoint) pulumi.StringOutput { return v.ValidationToken }).(pulumi.StringOutput)
}

type FrontdoorCustomEndpointArrayOutput struct{ *pulumi.OutputState }

func (FrontdoorCustomEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FrontdoorCustomEndpoint)(nil)).Elem()
}

func (o FrontdoorCustomEndpointArrayOutput) ToFrontdoorCustomEndpointArrayOutput() FrontdoorCustomEndpointArrayOutput {
	return o
}

func (o FrontdoorCustomEndpointArrayOutput) ToFrontdoorCustomEndpointArrayOutputWithContext(ctx context.Context) FrontdoorCustomEndpointArrayOutput {
	return o
}

func (o FrontdoorCustomEndpointArrayOutput) Index(i pulumi.IntInput) FrontdoorCustomEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FrontdoorCustomEndpoint {
		return vs[0].([]*FrontdoorCustomEndpoint)[vs[1].(int)]
	}).(FrontdoorCustomEndpointOutput)
}

type FrontdoorCustomEndpointMapOutput struct{ *pulumi.OutputState }

func (FrontdoorCustomEndpointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FrontdoorCustomEndpoint)(nil)).Elem()
}

func (o FrontdoorCustomEndpointMapOutput) ToFrontdoorCustomEndpointMapOutput() FrontdoorCustomEndpointMapOutput {
	return o
}

func (o FrontdoorCustomEndpointMapOutput) ToFrontdoorCustomEndpointMapOutputWithContext(ctx context.Context) FrontdoorCustomEndpointMapOutput {
	return o
}

func (o FrontdoorCustomEndpointMapOutput) MapIndex(k pulumi.StringInput) FrontdoorCustomEndpointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FrontdoorCustomEndpoint {
		return vs[0].(map[string]*FrontdoorCustomEndpoint)[vs[1].(string)]
	}).(FrontdoorCustomEndpointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FrontdoorCustomEndpointInput)(nil)).Elem(), &FrontdoorCustomEndpoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*FrontdoorCustomEndpointArrayInput)(nil)).Elem(), FrontdoorCustomEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FrontdoorCustomEndpointMapInput)(nil)).Elem(), FrontdoorCustomEndpointMap{})
	pulumi.RegisterOutputType(FrontdoorCustomEndpointOutput{})
	pulumi.RegisterOutputType(FrontdoorCustomEndpointArrayOutput{})
	pulumi.RegisterOutputType(FrontdoorCustomEndpointMapOutput{})
}
