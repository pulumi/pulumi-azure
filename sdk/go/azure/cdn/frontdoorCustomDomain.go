// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cdn

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/cdn"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/dns"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleZone, err := dns.NewZone(ctx, "exampleZone", &dns.ZoneArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//			})
//			if err != nil {
//				return err
//			}
//			exampleFrontdoorProfile, err := cdn.NewFrontdoorProfile(ctx, "exampleFrontdoorProfile", &cdn.FrontdoorProfileArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				SkuName:           pulumi.String("Standard_AzureFrontDoor"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cdn.NewFrontdoorCustomDomain(ctx, "exampleFrontdoorCustomDomain", &cdn.FrontdoorCustomDomainArgs{
//				CdnFrontdoorProfileId: exampleFrontdoorProfile.ID(),
//				DnsZoneId:             exampleZone.ID(),
//				HostName:              pulumi.String("contoso.fabrikam.com"),
//				Tls: &cdn.FrontdoorCustomDomainTlsArgs{
//					CertificateType:   pulumi.String("ManagedCertificate"),
//					MinimumTlsVersion: pulumi.String("TLS12"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## Example CNAME Record Usage
//
// !>**IMPORTANT:** You **must** include the `dependsOn` meta-argument which references both the `cdn.FrontdoorRoute` and the `cdn.FrontdoorSecurityPolicy` that are associated with your Custom Domain. The reason for these `dependsOn` meta-arguments is because all of the resources for the Custom Domain need to be associated within Front Door before the CNAME record can be written to the domains DNS, else the CNAME validation will fail and Front Door will not enable traffic to the Domain.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/dns"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dns.NewCNameRecord(ctx, "example", &dns.CNameRecordArgs{
//				ZoneName:          pulumi.Any(azurerm_dns_zone.Example.Name),
//				ResourceGroupName: pulumi.Any(azurerm_resource_group.Example.Name),
//				Ttl:               pulumi.Int(3600),
//				Record:            pulumi.Any(azurerm_cdn_frontdoor_endpoint.Example.Host_name),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				azurerm_cdn_frontdoor_route.Example,
//				azurerm_cdn_frontdoor_security_policy.Example,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Front Door Custom Domains can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:cdn/frontdoorCustomDomain:FrontdoorCustomDomain example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Cdn/profiles/profile1/customDomains/customDomain1
//
// ```
type FrontdoorCustomDomain struct {
	pulumi.CustomResourceState

	// The ID of the Front Door Profile. Changing this forces a new Front Door Custom Domain to be created.
	CdnFrontdoorProfileId pulumi.StringOutput `pulumi:"cdnFrontdoorProfileId"`
	// The ID of the Azure DNS Zone which should be used for this Front Door Custom Domain. If you are using Azure to host your [DNS domains](https://learn.microsoft.com/azure/dns/dns-overview), you must delegate the domain provider's domain name system (DNS) to an Azure DNS Zone. For more information, see [Delegate a domain to Azure DNS](https://learn.microsoft.com/azure/dns/dns-delegate-domain-azure-dns). Otherwise, if you're using your own domain provider to handle your DNS, you must validate the Front Door Custom Domain by creating the DNS TXT records manually.
	//
	// <!-- * `preValidatedCdnFrontdoorCustomDomainId` - (Optional) The resource ID of the pre-validated Front Door Custom Domain. This domain type is used when you wish to onboard a validated Azure service domain, and then configure the Azure service behind an Azure Front Door.
	//
	// ->**NOTE:** Currently `preValidatedCdnFrontdoorCustomDomainId` only supports domains validated by Static Web App. -->
	DnsZoneId pulumi.StringPtrOutput `pulumi:"dnsZoneId"`
	// The date time that the token expires.
	ExpirationDate pulumi.StringOutput `pulumi:"expirationDate"`
	// The host name of the domain. The `hostName` field must be the FQDN of your domain(e.g. `contoso.fabrikam.com`). Changing this forces a new Front Door Custom Domain to be created.
	HostName pulumi.StringOutput `pulumi:"hostName"`
	// The name which should be used for this Front Door Custom Domain. Possible values must be between 2 and 260 characters in length, must begin with a letter or number, end with a letter or number and contain only letters, numbers and hyphens. Changing this forces a new Front Door Custom Domain to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// A `tls` block as defined below.
	Tls FrontdoorCustomDomainTlsOutput `pulumi:"tls"`
	// Challenge used for DNS TXT record or file based validation.
	ValidationToken pulumi.StringOutput `pulumi:"validationToken"`
}

// NewFrontdoorCustomDomain registers a new resource with the given unique name, arguments, and options.
func NewFrontdoorCustomDomain(ctx *pulumi.Context,
	name string, args *FrontdoorCustomDomainArgs, opts ...pulumi.ResourceOption) (*FrontdoorCustomDomain, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CdnFrontdoorProfileId == nil {
		return nil, errors.New("invalid value for required argument 'CdnFrontdoorProfileId'")
	}
	if args.HostName == nil {
		return nil, errors.New("invalid value for required argument 'HostName'")
	}
	if args.Tls == nil {
		return nil, errors.New("invalid value for required argument 'Tls'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure:cdn/frontdoorCustomEndpoint:FrontdoorCustomEndpoint"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FrontdoorCustomDomain
	err := ctx.RegisterResource("azure:cdn/frontdoorCustomDomain:FrontdoorCustomDomain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFrontdoorCustomDomain gets an existing FrontdoorCustomDomain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFrontdoorCustomDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FrontdoorCustomDomainState, opts ...pulumi.ResourceOption) (*FrontdoorCustomDomain, error) {
	var resource FrontdoorCustomDomain
	err := ctx.ReadResource("azure:cdn/frontdoorCustomDomain:FrontdoorCustomDomain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FrontdoorCustomDomain resources.
type frontdoorCustomDomainState struct {
	// The ID of the Front Door Profile. Changing this forces a new Front Door Custom Domain to be created.
	CdnFrontdoorProfileId *string `pulumi:"cdnFrontdoorProfileId"`
	// The ID of the Azure DNS Zone which should be used for this Front Door Custom Domain. If you are using Azure to host your [DNS domains](https://learn.microsoft.com/azure/dns/dns-overview), you must delegate the domain provider's domain name system (DNS) to an Azure DNS Zone. For more information, see [Delegate a domain to Azure DNS](https://learn.microsoft.com/azure/dns/dns-delegate-domain-azure-dns). Otherwise, if you're using your own domain provider to handle your DNS, you must validate the Front Door Custom Domain by creating the DNS TXT records manually.
	//
	// <!-- * `preValidatedCdnFrontdoorCustomDomainId` - (Optional) The resource ID of the pre-validated Front Door Custom Domain. This domain type is used when you wish to onboard a validated Azure service domain, and then configure the Azure service behind an Azure Front Door.
	//
	// ->**NOTE:** Currently `preValidatedCdnFrontdoorCustomDomainId` only supports domains validated by Static Web App. -->
	DnsZoneId *string `pulumi:"dnsZoneId"`
	// The date time that the token expires.
	ExpirationDate *string `pulumi:"expirationDate"`
	// The host name of the domain. The `hostName` field must be the FQDN of your domain(e.g. `contoso.fabrikam.com`). Changing this forces a new Front Door Custom Domain to be created.
	HostName *string `pulumi:"hostName"`
	// The name which should be used for this Front Door Custom Domain. Possible values must be between 2 and 260 characters in length, must begin with a letter or number, end with a letter or number and contain only letters, numbers and hyphens. Changing this forces a new Front Door Custom Domain to be created.
	Name *string `pulumi:"name"`
	// A `tls` block as defined below.
	Tls *FrontdoorCustomDomainTls `pulumi:"tls"`
	// Challenge used for DNS TXT record or file based validation.
	ValidationToken *string `pulumi:"validationToken"`
}

type FrontdoorCustomDomainState struct {
	// The ID of the Front Door Profile. Changing this forces a new Front Door Custom Domain to be created.
	CdnFrontdoorProfileId pulumi.StringPtrInput
	// The ID of the Azure DNS Zone which should be used for this Front Door Custom Domain. If you are using Azure to host your [DNS domains](https://learn.microsoft.com/azure/dns/dns-overview), you must delegate the domain provider's domain name system (DNS) to an Azure DNS Zone. For more information, see [Delegate a domain to Azure DNS](https://learn.microsoft.com/azure/dns/dns-delegate-domain-azure-dns). Otherwise, if you're using your own domain provider to handle your DNS, you must validate the Front Door Custom Domain by creating the DNS TXT records manually.
	//
	// <!-- * `preValidatedCdnFrontdoorCustomDomainId` - (Optional) The resource ID of the pre-validated Front Door Custom Domain. This domain type is used when you wish to onboard a validated Azure service domain, and then configure the Azure service behind an Azure Front Door.
	//
	// ->**NOTE:** Currently `preValidatedCdnFrontdoorCustomDomainId` only supports domains validated by Static Web App. -->
	DnsZoneId pulumi.StringPtrInput
	// The date time that the token expires.
	ExpirationDate pulumi.StringPtrInput
	// The host name of the domain. The `hostName` field must be the FQDN of your domain(e.g. `contoso.fabrikam.com`). Changing this forces a new Front Door Custom Domain to be created.
	HostName pulumi.StringPtrInput
	// The name which should be used for this Front Door Custom Domain. Possible values must be between 2 and 260 characters in length, must begin with a letter or number, end with a letter or number and contain only letters, numbers and hyphens. Changing this forces a new Front Door Custom Domain to be created.
	Name pulumi.StringPtrInput
	// A `tls` block as defined below.
	Tls FrontdoorCustomDomainTlsPtrInput
	// Challenge used for DNS TXT record or file based validation.
	ValidationToken pulumi.StringPtrInput
}

func (FrontdoorCustomDomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*frontdoorCustomDomainState)(nil)).Elem()
}

type frontdoorCustomDomainArgs struct {
	// The ID of the Front Door Profile. Changing this forces a new Front Door Custom Domain to be created.
	CdnFrontdoorProfileId string `pulumi:"cdnFrontdoorProfileId"`
	// The ID of the Azure DNS Zone which should be used for this Front Door Custom Domain. If you are using Azure to host your [DNS domains](https://learn.microsoft.com/azure/dns/dns-overview), you must delegate the domain provider's domain name system (DNS) to an Azure DNS Zone. For more information, see [Delegate a domain to Azure DNS](https://learn.microsoft.com/azure/dns/dns-delegate-domain-azure-dns). Otherwise, if you're using your own domain provider to handle your DNS, you must validate the Front Door Custom Domain by creating the DNS TXT records manually.
	//
	// <!-- * `preValidatedCdnFrontdoorCustomDomainId` - (Optional) The resource ID of the pre-validated Front Door Custom Domain. This domain type is used when you wish to onboard a validated Azure service domain, and then configure the Azure service behind an Azure Front Door.
	//
	// ->**NOTE:** Currently `preValidatedCdnFrontdoorCustomDomainId` only supports domains validated by Static Web App. -->
	DnsZoneId *string `pulumi:"dnsZoneId"`
	// The host name of the domain. The `hostName` field must be the FQDN of your domain(e.g. `contoso.fabrikam.com`). Changing this forces a new Front Door Custom Domain to be created.
	HostName string `pulumi:"hostName"`
	// The name which should be used for this Front Door Custom Domain. Possible values must be between 2 and 260 characters in length, must begin with a letter or number, end with a letter or number and contain only letters, numbers and hyphens. Changing this forces a new Front Door Custom Domain to be created.
	Name *string `pulumi:"name"`
	// A `tls` block as defined below.
	Tls FrontdoorCustomDomainTls `pulumi:"tls"`
}

// The set of arguments for constructing a FrontdoorCustomDomain resource.
type FrontdoorCustomDomainArgs struct {
	// The ID of the Front Door Profile. Changing this forces a new Front Door Custom Domain to be created.
	CdnFrontdoorProfileId pulumi.StringInput
	// The ID of the Azure DNS Zone which should be used for this Front Door Custom Domain. If you are using Azure to host your [DNS domains](https://learn.microsoft.com/azure/dns/dns-overview), you must delegate the domain provider's domain name system (DNS) to an Azure DNS Zone. For more information, see [Delegate a domain to Azure DNS](https://learn.microsoft.com/azure/dns/dns-delegate-domain-azure-dns). Otherwise, if you're using your own domain provider to handle your DNS, you must validate the Front Door Custom Domain by creating the DNS TXT records manually.
	//
	// <!-- * `preValidatedCdnFrontdoorCustomDomainId` - (Optional) The resource ID of the pre-validated Front Door Custom Domain. This domain type is used when you wish to onboard a validated Azure service domain, and then configure the Azure service behind an Azure Front Door.
	//
	// ->**NOTE:** Currently `preValidatedCdnFrontdoorCustomDomainId` only supports domains validated by Static Web App. -->
	DnsZoneId pulumi.StringPtrInput
	// The host name of the domain. The `hostName` field must be the FQDN of your domain(e.g. `contoso.fabrikam.com`). Changing this forces a new Front Door Custom Domain to be created.
	HostName pulumi.StringInput
	// The name which should be used for this Front Door Custom Domain. Possible values must be between 2 and 260 characters in length, must begin with a letter or number, end with a letter or number and contain only letters, numbers and hyphens. Changing this forces a new Front Door Custom Domain to be created.
	Name pulumi.StringPtrInput
	// A `tls` block as defined below.
	Tls FrontdoorCustomDomainTlsInput
}

func (FrontdoorCustomDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*frontdoorCustomDomainArgs)(nil)).Elem()
}

type FrontdoorCustomDomainInput interface {
	pulumi.Input

	ToFrontdoorCustomDomainOutput() FrontdoorCustomDomainOutput
	ToFrontdoorCustomDomainOutputWithContext(ctx context.Context) FrontdoorCustomDomainOutput
}

func (*FrontdoorCustomDomain) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontdoorCustomDomain)(nil)).Elem()
}

func (i *FrontdoorCustomDomain) ToFrontdoorCustomDomainOutput() FrontdoorCustomDomainOutput {
	return i.ToFrontdoorCustomDomainOutputWithContext(context.Background())
}

func (i *FrontdoorCustomDomain) ToFrontdoorCustomDomainOutputWithContext(ctx context.Context) FrontdoorCustomDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontdoorCustomDomainOutput)
}

// FrontdoorCustomDomainArrayInput is an input type that accepts FrontdoorCustomDomainArray and FrontdoorCustomDomainArrayOutput values.
// You can construct a concrete instance of `FrontdoorCustomDomainArrayInput` via:
//
//	FrontdoorCustomDomainArray{ FrontdoorCustomDomainArgs{...} }
type FrontdoorCustomDomainArrayInput interface {
	pulumi.Input

	ToFrontdoorCustomDomainArrayOutput() FrontdoorCustomDomainArrayOutput
	ToFrontdoorCustomDomainArrayOutputWithContext(context.Context) FrontdoorCustomDomainArrayOutput
}

type FrontdoorCustomDomainArray []FrontdoorCustomDomainInput

func (FrontdoorCustomDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FrontdoorCustomDomain)(nil)).Elem()
}

func (i FrontdoorCustomDomainArray) ToFrontdoorCustomDomainArrayOutput() FrontdoorCustomDomainArrayOutput {
	return i.ToFrontdoorCustomDomainArrayOutputWithContext(context.Background())
}

func (i FrontdoorCustomDomainArray) ToFrontdoorCustomDomainArrayOutputWithContext(ctx context.Context) FrontdoorCustomDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontdoorCustomDomainArrayOutput)
}

// FrontdoorCustomDomainMapInput is an input type that accepts FrontdoorCustomDomainMap and FrontdoorCustomDomainMapOutput values.
// You can construct a concrete instance of `FrontdoorCustomDomainMapInput` via:
//
//	FrontdoorCustomDomainMap{ "key": FrontdoorCustomDomainArgs{...} }
type FrontdoorCustomDomainMapInput interface {
	pulumi.Input

	ToFrontdoorCustomDomainMapOutput() FrontdoorCustomDomainMapOutput
	ToFrontdoorCustomDomainMapOutputWithContext(context.Context) FrontdoorCustomDomainMapOutput
}

type FrontdoorCustomDomainMap map[string]FrontdoorCustomDomainInput

func (FrontdoorCustomDomainMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FrontdoorCustomDomain)(nil)).Elem()
}

func (i FrontdoorCustomDomainMap) ToFrontdoorCustomDomainMapOutput() FrontdoorCustomDomainMapOutput {
	return i.ToFrontdoorCustomDomainMapOutputWithContext(context.Background())
}

func (i FrontdoorCustomDomainMap) ToFrontdoorCustomDomainMapOutputWithContext(ctx context.Context) FrontdoorCustomDomainMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontdoorCustomDomainMapOutput)
}

type FrontdoorCustomDomainOutput struct{ *pulumi.OutputState }

func (FrontdoorCustomDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontdoorCustomDomain)(nil)).Elem()
}

func (o FrontdoorCustomDomainOutput) ToFrontdoorCustomDomainOutput() FrontdoorCustomDomainOutput {
	return o
}

func (o FrontdoorCustomDomainOutput) ToFrontdoorCustomDomainOutputWithContext(ctx context.Context) FrontdoorCustomDomainOutput {
	return o
}

// The ID of the Front Door Profile. Changing this forces a new Front Door Custom Domain to be created.
func (o FrontdoorCustomDomainOutput) CdnFrontdoorProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *FrontdoorCustomDomain) pulumi.StringOutput { return v.CdnFrontdoorProfileId }).(pulumi.StringOutput)
}

// The ID of the Azure DNS Zone which should be used for this Front Door Custom Domain. If you are using Azure to host your [DNS domains](https://learn.microsoft.com/azure/dns/dns-overview), you must delegate the domain provider's domain name system (DNS) to an Azure DNS Zone. For more information, see [Delegate a domain to Azure DNS](https://learn.microsoft.com/azure/dns/dns-delegate-domain-azure-dns). Otherwise, if you're using your own domain provider to handle your DNS, you must validate the Front Door Custom Domain by creating the DNS TXT records manually.
//
// <!-- * `preValidatedCdnFrontdoorCustomDomainId` - (Optional) The resource ID of the pre-validated Front Door Custom Domain. This domain type is used when you wish to onboard a validated Azure service domain, and then configure the Azure service behind an Azure Front Door.
//
// ->**NOTE:** Currently `preValidatedCdnFrontdoorCustomDomainId` only supports domains validated by Static Web App. -->
func (o FrontdoorCustomDomainOutput) DnsZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontdoorCustomDomain) pulumi.StringPtrOutput { return v.DnsZoneId }).(pulumi.StringPtrOutput)
}

// The date time that the token expires.
func (o FrontdoorCustomDomainOutput) ExpirationDate() pulumi.StringOutput {
	return o.ApplyT(func(v *FrontdoorCustomDomain) pulumi.StringOutput { return v.ExpirationDate }).(pulumi.StringOutput)
}

// The host name of the domain. The `hostName` field must be the FQDN of your domain(e.g. `contoso.fabrikam.com`). Changing this forces a new Front Door Custom Domain to be created.
func (o FrontdoorCustomDomainOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v *FrontdoorCustomDomain) pulumi.StringOutput { return v.HostName }).(pulumi.StringOutput)
}

// The name which should be used for this Front Door Custom Domain. Possible values must be between 2 and 260 characters in length, must begin with a letter or number, end with a letter or number and contain only letters, numbers and hyphens. Changing this forces a new Front Door Custom Domain to be created.
func (o FrontdoorCustomDomainOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FrontdoorCustomDomain) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A `tls` block as defined below.
func (o FrontdoorCustomDomainOutput) Tls() FrontdoorCustomDomainTlsOutput {
	return o.ApplyT(func(v *FrontdoorCustomDomain) FrontdoorCustomDomainTlsOutput { return v.Tls }).(FrontdoorCustomDomainTlsOutput)
}

// Challenge used for DNS TXT record or file based validation.
func (o FrontdoorCustomDomainOutput) ValidationToken() pulumi.StringOutput {
	return o.ApplyT(func(v *FrontdoorCustomDomain) pulumi.StringOutput { return v.ValidationToken }).(pulumi.StringOutput)
}

type FrontdoorCustomDomainArrayOutput struct{ *pulumi.OutputState }

func (FrontdoorCustomDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FrontdoorCustomDomain)(nil)).Elem()
}

func (o FrontdoorCustomDomainArrayOutput) ToFrontdoorCustomDomainArrayOutput() FrontdoorCustomDomainArrayOutput {
	return o
}

func (o FrontdoorCustomDomainArrayOutput) ToFrontdoorCustomDomainArrayOutputWithContext(ctx context.Context) FrontdoorCustomDomainArrayOutput {
	return o
}

func (o FrontdoorCustomDomainArrayOutput) Index(i pulumi.IntInput) FrontdoorCustomDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FrontdoorCustomDomain {
		return vs[0].([]*FrontdoorCustomDomain)[vs[1].(int)]
	}).(FrontdoorCustomDomainOutput)
}

type FrontdoorCustomDomainMapOutput struct{ *pulumi.OutputState }

func (FrontdoorCustomDomainMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FrontdoorCustomDomain)(nil)).Elem()
}

func (o FrontdoorCustomDomainMapOutput) ToFrontdoorCustomDomainMapOutput() FrontdoorCustomDomainMapOutput {
	return o
}

func (o FrontdoorCustomDomainMapOutput) ToFrontdoorCustomDomainMapOutputWithContext(ctx context.Context) FrontdoorCustomDomainMapOutput {
	return o
}

func (o FrontdoorCustomDomainMapOutput) MapIndex(k pulumi.StringInput) FrontdoorCustomDomainOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FrontdoorCustomDomain {
		return vs[0].(map[string]*FrontdoorCustomDomain)[vs[1].(string)]
	}).(FrontdoorCustomDomainOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FrontdoorCustomDomainInput)(nil)).Elem(), &FrontdoorCustomDomain{})
	pulumi.RegisterInputType(reflect.TypeOf((*FrontdoorCustomDomainArrayInput)(nil)).Elem(), FrontdoorCustomDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FrontdoorCustomDomainMapInput)(nil)).Elem(), FrontdoorCustomDomainMap{})
	pulumi.RegisterOutputType(FrontdoorCustomDomainOutput{})
	pulumi.RegisterOutputType(FrontdoorCustomDomainArrayOutput{})
	pulumi.RegisterOutputType(FrontdoorCustomDomainMapOutput{})
}
