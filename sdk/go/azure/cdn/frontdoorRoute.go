// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cdn

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages a Front Door (standard/premium) Route.
//
// ## Import
//
// Front Door Routes can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:cdn/frontdoorRoute:FrontdoorRoute example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Cdn/profiles/profile1/afdEndpoints/endpoint1/routes/route1
//
// ```
type FrontdoorRoute struct {
	pulumi.CustomResourceState

	// A `cache` block as defined below.
	//
	// > **NOTE:** To disable caching, do not provide the `cache` block in the configuration file.
	Cache FrontdoorRouteCachePtrOutput `pulumi:"cache"`
	// The IDs of the Front Door Custom Domains which are associated with this Front Door Route.
	CdnFrontdoorCustomDomainIds pulumi.StringArrayOutput `pulumi:"cdnFrontdoorCustomDomainIds"`
	// The resource ID of the Front Door Endpoint where this Front Door Route should exist. Changing this forces a new Front Door Route to be created.
	CdnFrontdoorEndpointId pulumi.StringOutput `pulumi:"cdnFrontdoorEndpointId"`
	// The resource ID of the Front Door Origin Group where this Front Door Route should be created.
	CdnFrontdoorOriginGroupId pulumi.StringOutput `pulumi:"cdnFrontdoorOriginGroupId"`
	// One or more Front Door Origin resource IDs that this Front Door Route will link to.
	CdnFrontdoorOriginIds pulumi.StringArrayOutput `pulumi:"cdnFrontdoorOriginIds"`
	// A directory path on the Front Door Origin that can be used to retrieve content (e.g. `contoso.cloudapp.net/originpath`).
	CdnFrontdoorOriginPath pulumi.StringPtrOutput `pulumi:"cdnFrontdoorOriginPath"`
	// A list of the Front Door Rule Set IDs which should be assigned to this Front Door Route.
	CdnFrontdoorRuleSetIds pulumi.StringArrayOutput `pulumi:"cdnFrontdoorRuleSetIds"`
	// Is this Front Door Route enabled? Possible values are `true` or `false`. Defaults to `true`.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// The Protocol that will be use when forwarding traffic to backends. Possible values are `HttpOnly`, `HttpsOnly` or `MatchRequest`. Defaults to `MatchRequest`.
	ForwardingProtocol pulumi.StringPtrOutput `pulumi:"forwardingProtocol"`
	// Automatically redirect HTTP traffic to HTTPS traffic? Possible values are `true` or `false`. Defaults to `true`.
	//
	// > **NOTE:** The `httpsRedirectEnabled` rule is the first rule that will be executed.
	HttpsRedirectEnabled pulumi.BoolPtrOutput `pulumi:"httpsRedirectEnabled"`
	// Should this Front Door Route be linked to the default endpoint? Possible values include `true` or `false`. Defaults to `true`.
	LinkToDefaultDomain pulumi.BoolPtrOutput `pulumi:"linkToDefaultDomain"`
	// The name which should be used for this Front Door Route. Valid values must begin with a letter or number, end with a letter or number and may only contain letters, numbers and hyphens with a maximum length of 90 characters. Changing this forces a new Front Door Route to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The route patterns of the rule.
	PatternsToMatches pulumi.StringArrayOutput `pulumi:"patternsToMatches"`
	// One or more Protocols supported by this Front Door Route. Possible values are `Http` or `Https`.
	//
	// > **NOTE:** If `httpsRedirectEnabled` is set to `true` the `supportedProtocols` field must contain both `Http` and `Https` values.
	SupportedProtocols pulumi.StringArrayOutput `pulumi:"supportedProtocols"`
}

// NewFrontdoorRoute registers a new resource with the given unique name, arguments, and options.
func NewFrontdoorRoute(ctx *pulumi.Context,
	name string, args *FrontdoorRouteArgs, opts ...pulumi.ResourceOption) (*FrontdoorRoute, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CdnFrontdoorEndpointId == nil {
		return nil, errors.New("invalid value for required argument 'CdnFrontdoorEndpointId'")
	}
	if args.CdnFrontdoorOriginGroupId == nil {
		return nil, errors.New("invalid value for required argument 'CdnFrontdoorOriginGroupId'")
	}
	if args.CdnFrontdoorOriginIds == nil {
		return nil, errors.New("invalid value for required argument 'CdnFrontdoorOriginIds'")
	}
	if args.PatternsToMatches == nil {
		return nil, errors.New("invalid value for required argument 'PatternsToMatches'")
	}
	if args.SupportedProtocols == nil {
		return nil, errors.New("invalid value for required argument 'SupportedProtocols'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FrontdoorRoute
	err := ctx.RegisterResource("azure:cdn/frontdoorRoute:FrontdoorRoute", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFrontdoorRoute gets an existing FrontdoorRoute resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFrontdoorRoute(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FrontdoorRouteState, opts ...pulumi.ResourceOption) (*FrontdoorRoute, error) {
	var resource FrontdoorRoute
	err := ctx.ReadResource("azure:cdn/frontdoorRoute:FrontdoorRoute", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FrontdoorRoute resources.
type frontdoorRouteState struct {
	// A `cache` block as defined below.
	//
	// > **NOTE:** To disable caching, do not provide the `cache` block in the configuration file.
	Cache *FrontdoorRouteCache `pulumi:"cache"`
	// The IDs of the Front Door Custom Domains which are associated with this Front Door Route.
	CdnFrontdoorCustomDomainIds []string `pulumi:"cdnFrontdoorCustomDomainIds"`
	// The resource ID of the Front Door Endpoint where this Front Door Route should exist. Changing this forces a new Front Door Route to be created.
	CdnFrontdoorEndpointId *string `pulumi:"cdnFrontdoorEndpointId"`
	// The resource ID of the Front Door Origin Group where this Front Door Route should be created.
	CdnFrontdoorOriginGroupId *string `pulumi:"cdnFrontdoorOriginGroupId"`
	// One or more Front Door Origin resource IDs that this Front Door Route will link to.
	CdnFrontdoorOriginIds []string `pulumi:"cdnFrontdoorOriginIds"`
	// A directory path on the Front Door Origin that can be used to retrieve content (e.g. `contoso.cloudapp.net/originpath`).
	CdnFrontdoorOriginPath *string `pulumi:"cdnFrontdoorOriginPath"`
	// A list of the Front Door Rule Set IDs which should be assigned to this Front Door Route.
	CdnFrontdoorRuleSetIds []string `pulumi:"cdnFrontdoorRuleSetIds"`
	// Is this Front Door Route enabled? Possible values are `true` or `false`. Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// The Protocol that will be use when forwarding traffic to backends. Possible values are `HttpOnly`, `HttpsOnly` or `MatchRequest`. Defaults to `MatchRequest`.
	ForwardingProtocol *string `pulumi:"forwardingProtocol"`
	// Automatically redirect HTTP traffic to HTTPS traffic? Possible values are `true` or `false`. Defaults to `true`.
	//
	// > **NOTE:** The `httpsRedirectEnabled` rule is the first rule that will be executed.
	HttpsRedirectEnabled *bool `pulumi:"httpsRedirectEnabled"`
	// Should this Front Door Route be linked to the default endpoint? Possible values include `true` or `false`. Defaults to `true`.
	LinkToDefaultDomain *bool `pulumi:"linkToDefaultDomain"`
	// The name which should be used for this Front Door Route. Valid values must begin with a letter or number, end with a letter or number and may only contain letters, numbers and hyphens with a maximum length of 90 characters. Changing this forces a new Front Door Route to be created.
	Name *string `pulumi:"name"`
	// The route patterns of the rule.
	PatternsToMatches []string `pulumi:"patternsToMatches"`
	// One or more Protocols supported by this Front Door Route. Possible values are `Http` or `Https`.
	//
	// > **NOTE:** If `httpsRedirectEnabled` is set to `true` the `supportedProtocols` field must contain both `Http` and `Https` values.
	SupportedProtocols []string `pulumi:"supportedProtocols"`
}

type FrontdoorRouteState struct {
	// A `cache` block as defined below.
	//
	// > **NOTE:** To disable caching, do not provide the `cache` block in the configuration file.
	Cache FrontdoorRouteCachePtrInput
	// The IDs of the Front Door Custom Domains which are associated with this Front Door Route.
	CdnFrontdoorCustomDomainIds pulumi.StringArrayInput
	// The resource ID of the Front Door Endpoint where this Front Door Route should exist. Changing this forces a new Front Door Route to be created.
	CdnFrontdoorEndpointId pulumi.StringPtrInput
	// The resource ID of the Front Door Origin Group where this Front Door Route should be created.
	CdnFrontdoorOriginGroupId pulumi.StringPtrInput
	// One or more Front Door Origin resource IDs that this Front Door Route will link to.
	CdnFrontdoorOriginIds pulumi.StringArrayInput
	// A directory path on the Front Door Origin that can be used to retrieve content (e.g. `contoso.cloudapp.net/originpath`).
	CdnFrontdoorOriginPath pulumi.StringPtrInput
	// A list of the Front Door Rule Set IDs which should be assigned to this Front Door Route.
	CdnFrontdoorRuleSetIds pulumi.StringArrayInput
	// Is this Front Door Route enabled? Possible values are `true` or `false`. Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	// The Protocol that will be use when forwarding traffic to backends. Possible values are `HttpOnly`, `HttpsOnly` or `MatchRequest`. Defaults to `MatchRequest`.
	ForwardingProtocol pulumi.StringPtrInput
	// Automatically redirect HTTP traffic to HTTPS traffic? Possible values are `true` or `false`. Defaults to `true`.
	//
	// > **NOTE:** The `httpsRedirectEnabled` rule is the first rule that will be executed.
	HttpsRedirectEnabled pulumi.BoolPtrInput
	// Should this Front Door Route be linked to the default endpoint? Possible values include `true` or `false`. Defaults to `true`.
	LinkToDefaultDomain pulumi.BoolPtrInput
	// The name which should be used for this Front Door Route. Valid values must begin with a letter or number, end with a letter or number and may only contain letters, numbers and hyphens with a maximum length of 90 characters. Changing this forces a new Front Door Route to be created.
	Name pulumi.StringPtrInput
	// The route patterns of the rule.
	PatternsToMatches pulumi.StringArrayInput
	// One or more Protocols supported by this Front Door Route. Possible values are `Http` or `Https`.
	//
	// > **NOTE:** If `httpsRedirectEnabled` is set to `true` the `supportedProtocols` field must contain both `Http` and `Https` values.
	SupportedProtocols pulumi.StringArrayInput
}

func (FrontdoorRouteState) ElementType() reflect.Type {
	return reflect.TypeOf((*frontdoorRouteState)(nil)).Elem()
}

type frontdoorRouteArgs struct {
	// A `cache` block as defined below.
	//
	// > **NOTE:** To disable caching, do not provide the `cache` block in the configuration file.
	Cache *FrontdoorRouteCache `pulumi:"cache"`
	// The IDs of the Front Door Custom Domains which are associated with this Front Door Route.
	CdnFrontdoorCustomDomainIds []string `pulumi:"cdnFrontdoorCustomDomainIds"`
	// The resource ID of the Front Door Endpoint where this Front Door Route should exist. Changing this forces a new Front Door Route to be created.
	CdnFrontdoorEndpointId string `pulumi:"cdnFrontdoorEndpointId"`
	// The resource ID of the Front Door Origin Group where this Front Door Route should be created.
	CdnFrontdoorOriginGroupId string `pulumi:"cdnFrontdoorOriginGroupId"`
	// One or more Front Door Origin resource IDs that this Front Door Route will link to.
	CdnFrontdoorOriginIds []string `pulumi:"cdnFrontdoorOriginIds"`
	// A directory path on the Front Door Origin that can be used to retrieve content (e.g. `contoso.cloudapp.net/originpath`).
	CdnFrontdoorOriginPath *string `pulumi:"cdnFrontdoorOriginPath"`
	// A list of the Front Door Rule Set IDs which should be assigned to this Front Door Route.
	CdnFrontdoorRuleSetIds []string `pulumi:"cdnFrontdoorRuleSetIds"`
	// Is this Front Door Route enabled? Possible values are `true` or `false`. Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// The Protocol that will be use when forwarding traffic to backends. Possible values are `HttpOnly`, `HttpsOnly` or `MatchRequest`. Defaults to `MatchRequest`.
	ForwardingProtocol *string `pulumi:"forwardingProtocol"`
	// Automatically redirect HTTP traffic to HTTPS traffic? Possible values are `true` or `false`. Defaults to `true`.
	//
	// > **NOTE:** The `httpsRedirectEnabled` rule is the first rule that will be executed.
	HttpsRedirectEnabled *bool `pulumi:"httpsRedirectEnabled"`
	// Should this Front Door Route be linked to the default endpoint? Possible values include `true` or `false`. Defaults to `true`.
	LinkToDefaultDomain *bool `pulumi:"linkToDefaultDomain"`
	// The name which should be used for this Front Door Route. Valid values must begin with a letter or number, end with a letter or number and may only contain letters, numbers and hyphens with a maximum length of 90 characters. Changing this forces a new Front Door Route to be created.
	Name *string `pulumi:"name"`
	// The route patterns of the rule.
	PatternsToMatches []string `pulumi:"patternsToMatches"`
	// One or more Protocols supported by this Front Door Route. Possible values are `Http` or `Https`.
	//
	// > **NOTE:** If `httpsRedirectEnabled` is set to `true` the `supportedProtocols` field must contain both `Http` and `Https` values.
	SupportedProtocols []string `pulumi:"supportedProtocols"`
}

// The set of arguments for constructing a FrontdoorRoute resource.
type FrontdoorRouteArgs struct {
	// A `cache` block as defined below.
	//
	// > **NOTE:** To disable caching, do not provide the `cache` block in the configuration file.
	Cache FrontdoorRouteCachePtrInput
	// The IDs of the Front Door Custom Domains which are associated with this Front Door Route.
	CdnFrontdoorCustomDomainIds pulumi.StringArrayInput
	// The resource ID of the Front Door Endpoint where this Front Door Route should exist. Changing this forces a new Front Door Route to be created.
	CdnFrontdoorEndpointId pulumi.StringInput
	// The resource ID of the Front Door Origin Group where this Front Door Route should be created.
	CdnFrontdoorOriginGroupId pulumi.StringInput
	// One or more Front Door Origin resource IDs that this Front Door Route will link to.
	CdnFrontdoorOriginIds pulumi.StringArrayInput
	// A directory path on the Front Door Origin that can be used to retrieve content (e.g. `contoso.cloudapp.net/originpath`).
	CdnFrontdoorOriginPath pulumi.StringPtrInput
	// A list of the Front Door Rule Set IDs which should be assigned to this Front Door Route.
	CdnFrontdoorRuleSetIds pulumi.StringArrayInput
	// Is this Front Door Route enabled? Possible values are `true` or `false`. Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	// The Protocol that will be use when forwarding traffic to backends. Possible values are `HttpOnly`, `HttpsOnly` or `MatchRequest`. Defaults to `MatchRequest`.
	ForwardingProtocol pulumi.StringPtrInput
	// Automatically redirect HTTP traffic to HTTPS traffic? Possible values are `true` or `false`. Defaults to `true`.
	//
	// > **NOTE:** The `httpsRedirectEnabled` rule is the first rule that will be executed.
	HttpsRedirectEnabled pulumi.BoolPtrInput
	// Should this Front Door Route be linked to the default endpoint? Possible values include `true` or `false`. Defaults to `true`.
	LinkToDefaultDomain pulumi.BoolPtrInput
	// The name which should be used for this Front Door Route. Valid values must begin with a letter or number, end with a letter or number and may only contain letters, numbers and hyphens with a maximum length of 90 characters. Changing this forces a new Front Door Route to be created.
	Name pulumi.StringPtrInput
	// The route patterns of the rule.
	PatternsToMatches pulumi.StringArrayInput
	// One or more Protocols supported by this Front Door Route. Possible values are `Http` or `Https`.
	//
	// > **NOTE:** If `httpsRedirectEnabled` is set to `true` the `supportedProtocols` field must contain both `Http` and `Https` values.
	SupportedProtocols pulumi.StringArrayInput
}

func (FrontdoorRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*frontdoorRouteArgs)(nil)).Elem()
}

type FrontdoorRouteInput interface {
	pulumi.Input

	ToFrontdoorRouteOutput() FrontdoorRouteOutput
	ToFrontdoorRouteOutputWithContext(ctx context.Context) FrontdoorRouteOutput
}

func (*FrontdoorRoute) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontdoorRoute)(nil)).Elem()
}

func (i *FrontdoorRoute) ToFrontdoorRouteOutput() FrontdoorRouteOutput {
	return i.ToFrontdoorRouteOutputWithContext(context.Background())
}

func (i *FrontdoorRoute) ToFrontdoorRouteOutputWithContext(ctx context.Context) FrontdoorRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontdoorRouteOutput)
}

func (i *FrontdoorRoute) ToOutput(ctx context.Context) pulumix.Output[*FrontdoorRoute] {
	return pulumix.Output[*FrontdoorRoute]{
		OutputState: i.ToFrontdoorRouteOutputWithContext(ctx).OutputState,
	}
}

// FrontdoorRouteArrayInput is an input type that accepts FrontdoorRouteArray and FrontdoorRouteArrayOutput values.
// You can construct a concrete instance of `FrontdoorRouteArrayInput` via:
//
//	FrontdoorRouteArray{ FrontdoorRouteArgs{...} }
type FrontdoorRouteArrayInput interface {
	pulumi.Input

	ToFrontdoorRouteArrayOutput() FrontdoorRouteArrayOutput
	ToFrontdoorRouteArrayOutputWithContext(context.Context) FrontdoorRouteArrayOutput
}

type FrontdoorRouteArray []FrontdoorRouteInput

func (FrontdoorRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FrontdoorRoute)(nil)).Elem()
}

func (i FrontdoorRouteArray) ToFrontdoorRouteArrayOutput() FrontdoorRouteArrayOutput {
	return i.ToFrontdoorRouteArrayOutputWithContext(context.Background())
}

func (i FrontdoorRouteArray) ToFrontdoorRouteArrayOutputWithContext(ctx context.Context) FrontdoorRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontdoorRouteArrayOutput)
}

func (i FrontdoorRouteArray) ToOutput(ctx context.Context) pulumix.Output[[]*FrontdoorRoute] {
	return pulumix.Output[[]*FrontdoorRoute]{
		OutputState: i.ToFrontdoorRouteArrayOutputWithContext(ctx).OutputState,
	}
}

// FrontdoorRouteMapInput is an input type that accepts FrontdoorRouteMap and FrontdoorRouteMapOutput values.
// You can construct a concrete instance of `FrontdoorRouteMapInput` via:
//
//	FrontdoorRouteMap{ "key": FrontdoorRouteArgs{...} }
type FrontdoorRouteMapInput interface {
	pulumi.Input

	ToFrontdoorRouteMapOutput() FrontdoorRouteMapOutput
	ToFrontdoorRouteMapOutputWithContext(context.Context) FrontdoorRouteMapOutput
}

type FrontdoorRouteMap map[string]FrontdoorRouteInput

func (FrontdoorRouteMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FrontdoorRoute)(nil)).Elem()
}

func (i FrontdoorRouteMap) ToFrontdoorRouteMapOutput() FrontdoorRouteMapOutput {
	return i.ToFrontdoorRouteMapOutputWithContext(context.Background())
}

func (i FrontdoorRouteMap) ToFrontdoorRouteMapOutputWithContext(ctx context.Context) FrontdoorRouteMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontdoorRouteMapOutput)
}

func (i FrontdoorRouteMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*FrontdoorRoute] {
	return pulumix.Output[map[string]*FrontdoorRoute]{
		OutputState: i.ToFrontdoorRouteMapOutputWithContext(ctx).OutputState,
	}
}

type FrontdoorRouteOutput struct{ *pulumi.OutputState }

func (FrontdoorRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontdoorRoute)(nil)).Elem()
}

func (o FrontdoorRouteOutput) ToFrontdoorRouteOutput() FrontdoorRouteOutput {
	return o
}

func (o FrontdoorRouteOutput) ToFrontdoorRouteOutputWithContext(ctx context.Context) FrontdoorRouteOutput {
	return o
}

func (o FrontdoorRouteOutput) ToOutput(ctx context.Context) pulumix.Output[*FrontdoorRoute] {
	return pulumix.Output[*FrontdoorRoute]{
		OutputState: o.OutputState,
	}
}

// A `cache` block as defined below.
//
// > **NOTE:** To disable caching, do not provide the `cache` block in the configuration file.
func (o FrontdoorRouteOutput) Cache() FrontdoorRouteCachePtrOutput {
	return o.ApplyT(func(v *FrontdoorRoute) FrontdoorRouteCachePtrOutput { return v.Cache }).(FrontdoorRouteCachePtrOutput)
}

// The IDs of the Front Door Custom Domains which are associated with this Front Door Route.
func (o FrontdoorRouteOutput) CdnFrontdoorCustomDomainIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FrontdoorRoute) pulumi.StringArrayOutput { return v.CdnFrontdoorCustomDomainIds }).(pulumi.StringArrayOutput)
}

// The resource ID of the Front Door Endpoint where this Front Door Route should exist. Changing this forces a new Front Door Route to be created.
func (o FrontdoorRouteOutput) CdnFrontdoorEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v *FrontdoorRoute) pulumi.StringOutput { return v.CdnFrontdoorEndpointId }).(pulumi.StringOutput)
}

// The resource ID of the Front Door Origin Group where this Front Door Route should be created.
func (o FrontdoorRouteOutput) CdnFrontdoorOriginGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *FrontdoorRoute) pulumi.StringOutput { return v.CdnFrontdoorOriginGroupId }).(pulumi.StringOutput)
}

// One or more Front Door Origin resource IDs that this Front Door Route will link to.
func (o FrontdoorRouteOutput) CdnFrontdoorOriginIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FrontdoorRoute) pulumi.StringArrayOutput { return v.CdnFrontdoorOriginIds }).(pulumi.StringArrayOutput)
}

// A directory path on the Front Door Origin that can be used to retrieve content (e.g. `contoso.cloudapp.net/originpath`).
func (o FrontdoorRouteOutput) CdnFrontdoorOriginPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontdoorRoute) pulumi.StringPtrOutput { return v.CdnFrontdoorOriginPath }).(pulumi.StringPtrOutput)
}

// A list of the Front Door Rule Set IDs which should be assigned to this Front Door Route.
func (o FrontdoorRouteOutput) CdnFrontdoorRuleSetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FrontdoorRoute) pulumi.StringArrayOutput { return v.CdnFrontdoorRuleSetIds }).(pulumi.StringArrayOutput)
}

// Is this Front Door Route enabled? Possible values are `true` or `false`. Defaults to `true`.
func (o FrontdoorRouteOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FrontdoorRoute) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The Protocol that will be use when forwarding traffic to backends. Possible values are `HttpOnly`, `HttpsOnly` or `MatchRequest`. Defaults to `MatchRequest`.
func (o FrontdoorRouteOutput) ForwardingProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontdoorRoute) pulumi.StringPtrOutput { return v.ForwardingProtocol }).(pulumi.StringPtrOutput)
}

// Automatically redirect HTTP traffic to HTTPS traffic? Possible values are `true` or `false`. Defaults to `true`.
//
// > **NOTE:** The `httpsRedirectEnabled` rule is the first rule that will be executed.
func (o FrontdoorRouteOutput) HttpsRedirectEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FrontdoorRoute) pulumi.BoolPtrOutput { return v.HttpsRedirectEnabled }).(pulumi.BoolPtrOutput)
}

// Should this Front Door Route be linked to the default endpoint? Possible values include `true` or `false`. Defaults to `true`.
func (o FrontdoorRouteOutput) LinkToDefaultDomain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FrontdoorRoute) pulumi.BoolPtrOutput { return v.LinkToDefaultDomain }).(pulumi.BoolPtrOutput)
}

// The name which should be used for this Front Door Route. Valid values must begin with a letter or number, end with a letter or number and may only contain letters, numbers and hyphens with a maximum length of 90 characters. Changing this forces a new Front Door Route to be created.
func (o FrontdoorRouteOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FrontdoorRoute) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The route patterns of the rule.
func (o FrontdoorRouteOutput) PatternsToMatches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FrontdoorRoute) pulumi.StringArrayOutput { return v.PatternsToMatches }).(pulumi.StringArrayOutput)
}

// One or more Protocols supported by this Front Door Route. Possible values are `Http` or `Https`.
//
// > **NOTE:** If `httpsRedirectEnabled` is set to `true` the `supportedProtocols` field must contain both `Http` and `Https` values.
func (o FrontdoorRouteOutput) SupportedProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FrontdoorRoute) pulumi.StringArrayOutput { return v.SupportedProtocols }).(pulumi.StringArrayOutput)
}

type FrontdoorRouteArrayOutput struct{ *pulumi.OutputState }

func (FrontdoorRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FrontdoorRoute)(nil)).Elem()
}

func (o FrontdoorRouteArrayOutput) ToFrontdoorRouteArrayOutput() FrontdoorRouteArrayOutput {
	return o
}

func (o FrontdoorRouteArrayOutput) ToFrontdoorRouteArrayOutputWithContext(ctx context.Context) FrontdoorRouteArrayOutput {
	return o
}

func (o FrontdoorRouteArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*FrontdoorRoute] {
	return pulumix.Output[[]*FrontdoorRoute]{
		OutputState: o.OutputState,
	}
}

func (o FrontdoorRouteArrayOutput) Index(i pulumi.IntInput) FrontdoorRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FrontdoorRoute {
		return vs[0].([]*FrontdoorRoute)[vs[1].(int)]
	}).(FrontdoorRouteOutput)
}

type FrontdoorRouteMapOutput struct{ *pulumi.OutputState }

func (FrontdoorRouteMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FrontdoorRoute)(nil)).Elem()
}

func (o FrontdoorRouteMapOutput) ToFrontdoorRouteMapOutput() FrontdoorRouteMapOutput {
	return o
}

func (o FrontdoorRouteMapOutput) ToFrontdoorRouteMapOutputWithContext(ctx context.Context) FrontdoorRouteMapOutput {
	return o
}

func (o FrontdoorRouteMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*FrontdoorRoute] {
	return pulumix.Output[map[string]*FrontdoorRoute]{
		OutputState: o.OutputState,
	}
}

func (o FrontdoorRouteMapOutput) MapIndex(k pulumi.StringInput) FrontdoorRouteOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FrontdoorRoute {
		return vs[0].(map[string]*FrontdoorRoute)[vs[1].(string)]
	}).(FrontdoorRouteOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FrontdoorRouteInput)(nil)).Elem(), &FrontdoorRoute{})
	pulumi.RegisterInputType(reflect.TypeOf((*FrontdoorRouteArrayInput)(nil)).Elem(), FrontdoorRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FrontdoorRouteMapInput)(nil)).Elem(), FrontdoorRouteMap{})
	pulumi.RegisterOutputType(FrontdoorRouteOutput{})
	pulumi.RegisterOutputType(FrontdoorRouteArrayOutput{})
	pulumi.RegisterOutputType(FrontdoorRouteMapOutput{})
}
