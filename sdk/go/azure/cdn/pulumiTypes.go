// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cdn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type EndpointGeoFilter struct {
	// The Action of the Geo Filter. Possible values include `Allow` and `Block`.
	Action string `pulumi:"action"`
	// A List of two letter country codes (e.g. `US`, `GB`) to be associated with this Geo Filter.
	CountryCodes []string `pulumi:"countryCodes"`
	// The relative path applicable to geo filter.
	RelativePath string `pulumi:"relativePath"`
}

// EndpointGeoFilterInput is an input type that accepts EndpointGeoFilterArgs and EndpointGeoFilterOutput values.
// You can construct a concrete instance of `EndpointGeoFilterInput` via:
//
// 		 EndpointGeoFilterArgs{...}
//
type EndpointGeoFilterInput interface {
	pulumi.Input

	ToEndpointGeoFilterOutput() EndpointGeoFilterOutput
	ToEndpointGeoFilterOutputWithContext(context.Context) EndpointGeoFilterOutput
}

type EndpointGeoFilterArgs struct {
	// The Action of the Geo Filter. Possible values include `Allow` and `Block`.
	Action pulumi.StringInput `pulumi:"action"`
	// A List of two letter country codes (e.g. `US`, `GB`) to be associated with this Geo Filter.
	CountryCodes pulumi.StringArrayInput `pulumi:"countryCodes"`
	// The relative path applicable to geo filter.
	RelativePath pulumi.StringInput `pulumi:"relativePath"`
}

func (EndpointGeoFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointGeoFilter)(nil)).Elem()
}

func (i EndpointGeoFilterArgs) ToEndpointGeoFilterOutput() EndpointGeoFilterOutput {
	return i.ToEndpointGeoFilterOutputWithContext(context.Background())
}

func (i EndpointGeoFilterArgs) ToEndpointGeoFilterOutputWithContext(ctx context.Context) EndpointGeoFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointGeoFilterOutput)
}

// EndpointGeoFilterArrayInput is an input type that accepts EndpointGeoFilterArray and EndpointGeoFilterArrayOutput values.
// You can construct a concrete instance of `EndpointGeoFilterArrayInput` via:
//
// 		 EndpointGeoFilterArray{ EndpointGeoFilterArgs{...} }
//
type EndpointGeoFilterArrayInput interface {
	pulumi.Input

	ToEndpointGeoFilterArrayOutput() EndpointGeoFilterArrayOutput
	ToEndpointGeoFilterArrayOutputWithContext(context.Context) EndpointGeoFilterArrayOutput
}

type EndpointGeoFilterArray []EndpointGeoFilterInput

func (EndpointGeoFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointGeoFilter)(nil)).Elem()
}

func (i EndpointGeoFilterArray) ToEndpointGeoFilterArrayOutput() EndpointGeoFilterArrayOutput {
	return i.ToEndpointGeoFilterArrayOutputWithContext(context.Background())
}

func (i EndpointGeoFilterArray) ToEndpointGeoFilterArrayOutputWithContext(ctx context.Context) EndpointGeoFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointGeoFilterArrayOutput)
}

type EndpointGeoFilterOutput struct{ *pulumi.OutputState }

func (EndpointGeoFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointGeoFilter)(nil)).Elem()
}

func (o EndpointGeoFilterOutput) ToEndpointGeoFilterOutput() EndpointGeoFilterOutput {
	return o
}

func (o EndpointGeoFilterOutput) ToEndpointGeoFilterOutputWithContext(ctx context.Context) EndpointGeoFilterOutput {
	return o
}

// The Action of the Geo Filter. Possible values include `Allow` and `Block`.
func (o EndpointGeoFilterOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointGeoFilter) string { return v.Action }).(pulumi.StringOutput)
}

// A List of two letter country codes (e.g. `US`, `GB`) to be associated with this Geo Filter.
func (o EndpointGeoFilterOutput) CountryCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointGeoFilter) []string { return v.CountryCodes }).(pulumi.StringArrayOutput)
}

// The relative path applicable to geo filter.
func (o EndpointGeoFilterOutput) RelativePath() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointGeoFilter) string { return v.RelativePath }).(pulumi.StringOutput)
}

type EndpointGeoFilterArrayOutput struct{ *pulumi.OutputState }

func (EndpointGeoFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointGeoFilter)(nil)).Elem()
}

func (o EndpointGeoFilterArrayOutput) ToEndpointGeoFilterArrayOutput() EndpointGeoFilterArrayOutput {
	return o
}

func (o EndpointGeoFilterArrayOutput) ToEndpointGeoFilterArrayOutputWithContext(ctx context.Context) EndpointGeoFilterArrayOutput {
	return o
}

func (o EndpointGeoFilterArrayOutput) Index(i pulumi.IntInput) EndpointGeoFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointGeoFilter {
		return vs[0].([]EndpointGeoFilter)[vs[1].(int)]
	}).(EndpointGeoFilterOutput)
}

type EndpointOrigin struct {
	// A string that determines the hostname/IP address of the origin server. This string can be a domain name, Storage Account endpoint, Web App endpoint, IPv4 address or IPv6 address. Changing this forces a new resource to be created.
	HostName string `pulumi:"hostName"`
	// The HTTP port of the origin. Defaults to `80`. Changing this forces a new resource to be created.
	HttpPort *int `pulumi:"httpPort"`
	// The HTTPS port of the origin. Defaults to `443`. Changing this forces a new resource to be created.
	HttpsPort *int `pulumi:"httpsPort"`
	// The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
}

// EndpointOriginInput is an input type that accepts EndpointOriginArgs and EndpointOriginOutput values.
// You can construct a concrete instance of `EndpointOriginInput` via:
//
// 		 EndpointOriginArgs{...}
//
type EndpointOriginInput interface {
	pulumi.Input

	ToEndpointOriginOutput() EndpointOriginOutput
	ToEndpointOriginOutputWithContext(context.Context) EndpointOriginOutput
}

type EndpointOriginArgs struct {
	// A string that determines the hostname/IP address of the origin server. This string can be a domain name, Storage Account endpoint, Web App endpoint, IPv4 address or IPv6 address. Changing this forces a new resource to be created.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The HTTP port of the origin. Defaults to `80`. Changing this forces a new resource to be created.
	HttpPort pulumi.IntPtrInput `pulumi:"httpPort"`
	// The HTTPS port of the origin. Defaults to `443`. Changing this forces a new resource to be created.
	HttpsPort pulumi.IntPtrInput `pulumi:"httpsPort"`
	// The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
}

func (EndpointOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointOrigin)(nil)).Elem()
}

func (i EndpointOriginArgs) ToEndpointOriginOutput() EndpointOriginOutput {
	return i.ToEndpointOriginOutputWithContext(context.Background())
}

func (i EndpointOriginArgs) ToEndpointOriginOutputWithContext(ctx context.Context) EndpointOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointOriginOutput)
}

// EndpointOriginArrayInput is an input type that accepts EndpointOriginArray and EndpointOriginArrayOutput values.
// You can construct a concrete instance of `EndpointOriginArrayInput` via:
//
// 		 EndpointOriginArray{ EndpointOriginArgs{...} }
//
type EndpointOriginArrayInput interface {
	pulumi.Input

	ToEndpointOriginArrayOutput() EndpointOriginArrayOutput
	ToEndpointOriginArrayOutputWithContext(context.Context) EndpointOriginArrayOutput
}

type EndpointOriginArray []EndpointOriginInput

func (EndpointOriginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointOrigin)(nil)).Elem()
}

func (i EndpointOriginArray) ToEndpointOriginArrayOutput() EndpointOriginArrayOutput {
	return i.ToEndpointOriginArrayOutputWithContext(context.Background())
}

func (i EndpointOriginArray) ToEndpointOriginArrayOutputWithContext(ctx context.Context) EndpointOriginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointOriginArrayOutput)
}

type EndpointOriginOutput struct{ *pulumi.OutputState }

func (EndpointOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointOrigin)(nil)).Elem()
}

func (o EndpointOriginOutput) ToEndpointOriginOutput() EndpointOriginOutput {
	return o
}

func (o EndpointOriginOutput) ToEndpointOriginOutputWithContext(ctx context.Context) EndpointOriginOutput {
	return o
}

// A string that determines the hostname/IP address of the origin server. This string can be a domain name, Storage Account endpoint, Web App endpoint, IPv4 address or IPv6 address. Changing this forces a new resource to be created.
func (o EndpointOriginOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointOrigin) string { return v.HostName }).(pulumi.StringOutput)
}

// The HTTP port of the origin. Defaults to `80`. Changing this forces a new resource to be created.
func (o EndpointOriginOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointOrigin) *int { return v.HttpPort }).(pulumi.IntPtrOutput)
}

// The HTTPS port of the origin. Defaults to `443`. Changing this forces a new resource to be created.
func (o EndpointOriginOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointOrigin) *int { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

// The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.
func (o EndpointOriginOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointOrigin) string { return v.Name }).(pulumi.StringOutput)
}

type EndpointOriginArrayOutput struct{ *pulumi.OutputState }

func (EndpointOriginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointOrigin)(nil)).Elem()
}

func (o EndpointOriginArrayOutput) ToEndpointOriginArrayOutput() EndpointOriginArrayOutput {
	return o
}

func (o EndpointOriginArrayOutput) ToEndpointOriginArrayOutputWithContext(ctx context.Context) EndpointOriginArrayOutput {
	return o
}

func (o EndpointOriginArrayOutput) Index(i pulumi.IntInput) EndpointOriginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointOrigin {
		return vs[0].([]EndpointOrigin)[vs[1].(int)]
	}).(EndpointOriginOutput)
}

func init() {
	pulumi.RegisterOutputType(EndpointGeoFilterOutput{})
	pulumi.RegisterOutputType(EndpointGeoFilterArrayOutput{})
	pulumi.RegisterOutputType(EndpointOriginOutput{})
	pulumi.RegisterOutputType(EndpointOriginArrayOutput{})
}
