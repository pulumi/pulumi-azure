// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cdn

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Front Door (standard/premium) Origin Group.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/cdn"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleFrontdoorProfile, err := cdn.NewFrontdoorProfile(ctx, "exampleFrontdoorProfile", &cdn.FrontdoorProfileArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				SkuName:           pulumi.String("Standard_AzureFrontDoor"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cdn.NewFrontdoorOriginGroup(ctx, "exampleFrontdoorOriginGroup", &cdn.FrontdoorOriginGroupArgs{
//				CdnFrontdoorProfileId:                            exampleFrontdoorProfile.ID(),
//				SessionAffinityEnabled:                           pulumi.Bool(true),
//				RestoreTrafficTimeToHealedOrNewEndpointInMinutes: pulumi.Int(10),
//				HealthProbe: &cdn.FrontdoorOriginGroupHealthProbeArgs{
//					IntervalInSeconds: pulumi.Int(240),
//					Path:              pulumi.String("/healthProbe"),
//					Protocol:          pulumi.String("Https"),
//					RequestType:       pulumi.String("HEAD"),
//				},
//				LoadBalancing: &cdn.FrontdoorOriginGroupLoadBalancingArgs{
//					AdditionalLatencyInMilliseconds: pulumi.Int(0),
//					SampleSize:                      pulumi.Int(16),
//					SuccessfulSamplesRequired:       pulumi.Int(3),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Front Door Origin Groups can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:cdn/frontdoorOriginGroup:FrontdoorOriginGroup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Cdn/profiles/profile1/originGroups/originGroup1
//
// ```
type FrontdoorOriginGroup struct {
	pulumi.CustomResourceState

	// The ID of the Front Door Profile within which this Front Door Origin Group should exist. Changing this forces a new Front Door Origin Group to be created.
	CdnFrontdoorProfileId pulumi.StringOutput `pulumi:"cdnFrontdoorProfileId"`
	// A `healthProbe` block as defined below.
	HealthProbe FrontdoorOriginGroupHealthProbePtrOutput `pulumi:"healthProbe"`
	// A `loadBalancing` block as defined below.
	LoadBalancing FrontdoorOriginGroupLoadBalancingOutput `pulumi:"loadBalancing"`
	// The name which should be used for this Front Door Origin Group. Changing this forces a new Front Door Origin Group to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the amount of time which should elapse before shifting traffic to another endpoint when a healthy endpoint becomes unhealthy or a new endpoint is added. Possible values are between `0` and `50` minutes (inclusive). Default is `10` minutes.
	//
	// > **NOTE:** This property is currently not used, but will be in the near future.
	RestoreTrafficTimeToHealedOrNewEndpointInMinutes pulumi.IntPtrOutput `pulumi:"restoreTrafficTimeToHealedOrNewEndpointInMinutes"`
	// Specifies whether session affinity should be enabled on this host. Defaults to `true`.
	SessionAffinityEnabled pulumi.BoolPtrOutput `pulumi:"sessionAffinityEnabled"`
}

// NewFrontdoorOriginGroup registers a new resource with the given unique name, arguments, and options.
func NewFrontdoorOriginGroup(ctx *pulumi.Context,
	name string, args *FrontdoorOriginGroupArgs, opts ...pulumi.ResourceOption) (*FrontdoorOriginGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CdnFrontdoorProfileId == nil {
		return nil, errors.New("invalid value for required argument 'CdnFrontdoorProfileId'")
	}
	if args.LoadBalancing == nil {
		return nil, errors.New("invalid value for required argument 'LoadBalancing'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FrontdoorOriginGroup
	err := ctx.RegisterResource("azure:cdn/frontdoorOriginGroup:FrontdoorOriginGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFrontdoorOriginGroup gets an existing FrontdoorOriginGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFrontdoorOriginGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FrontdoorOriginGroupState, opts ...pulumi.ResourceOption) (*FrontdoorOriginGroup, error) {
	var resource FrontdoorOriginGroup
	err := ctx.ReadResource("azure:cdn/frontdoorOriginGroup:FrontdoorOriginGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FrontdoorOriginGroup resources.
type frontdoorOriginGroupState struct {
	// The ID of the Front Door Profile within which this Front Door Origin Group should exist. Changing this forces a new Front Door Origin Group to be created.
	CdnFrontdoorProfileId *string `pulumi:"cdnFrontdoorProfileId"`
	// A `healthProbe` block as defined below.
	HealthProbe *FrontdoorOriginGroupHealthProbe `pulumi:"healthProbe"`
	// A `loadBalancing` block as defined below.
	LoadBalancing *FrontdoorOriginGroupLoadBalancing `pulumi:"loadBalancing"`
	// The name which should be used for this Front Door Origin Group. Changing this forces a new Front Door Origin Group to be created.
	Name *string `pulumi:"name"`
	// Specifies the amount of time which should elapse before shifting traffic to another endpoint when a healthy endpoint becomes unhealthy or a new endpoint is added. Possible values are between `0` and `50` minutes (inclusive). Default is `10` minutes.
	//
	// > **NOTE:** This property is currently not used, but will be in the near future.
	RestoreTrafficTimeToHealedOrNewEndpointInMinutes *int `pulumi:"restoreTrafficTimeToHealedOrNewEndpointInMinutes"`
	// Specifies whether session affinity should be enabled on this host. Defaults to `true`.
	SessionAffinityEnabled *bool `pulumi:"sessionAffinityEnabled"`
}

type FrontdoorOriginGroupState struct {
	// The ID of the Front Door Profile within which this Front Door Origin Group should exist. Changing this forces a new Front Door Origin Group to be created.
	CdnFrontdoorProfileId pulumi.StringPtrInput
	// A `healthProbe` block as defined below.
	HealthProbe FrontdoorOriginGroupHealthProbePtrInput
	// A `loadBalancing` block as defined below.
	LoadBalancing FrontdoorOriginGroupLoadBalancingPtrInput
	// The name which should be used for this Front Door Origin Group. Changing this forces a new Front Door Origin Group to be created.
	Name pulumi.StringPtrInput
	// Specifies the amount of time which should elapse before shifting traffic to another endpoint when a healthy endpoint becomes unhealthy or a new endpoint is added. Possible values are between `0` and `50` minutes (inclusive). Default is `10` minutes.
	//
	// > **NOTE:** This property is currently not used, but will be in the near future.
	RestoreTrafficTimeToHealedOrNewEndpointInMinutes pulumi.IntPtrInput
	// Specifies whether session affinity should be enabled on this host. Defaults to `true`.
	SessionAffinityEnabled pulumi.BoolPtrInput
}

func (FrontdoorOriginGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*frontdoorOriginGroupState)(nil)).Elem()
}

type frontdoorOriginGroupArgs struct {
	// The ID of the Front Door Profile within which this Front Door Origin Group should exist. Changing this forces a new Front Door Origin Group to be created.
	CdnFrontdoorProfileId string `pulumi:"cdnFrontdoorProfileId"`
	// A `healthProbe` block as defined below.
	HealthProbe *FrontdoorOriginGroupHealthProbe `pulumi:"healthProbe"`
	// A `loadBalancing` block as defined below.
	LoadBalancing FrontdoorOriginGroupLoadBalancing `pulumi:"loadBalancing"`
	// The name which should be used for this Front Door Origin Group. Changing this forces a new Front Door Origin Group to be created.
	Name *string `pulumi:"name"`
	// Specifies the amount of time which should elapse before shifting traffic to another endpoint when a healthy endpoint becomes unhealthy or a new endpoint is added. Possible values are between `0` and `50` minutes (inclusive). Default is `10` minutes.
	//
	// > **NOTE:** This property is currently not used, but will be in the near future.
	RestoreTrafficTimeToHealedOrNewEndpointInMinutes *int `pulumi:"restoreTrafficTimeToHealedOrNewEndpointInMinutes"`
	// Specifies whether session affinity should be enabled on this host. Defaults to `true`.
	SessionAffinityEnabled *bool `pulumi:"sessionAffinityEnabled"`
}

// The set of arguments for constructing a FrontdoorOriginGroup resource.
type FrontdoorOriginGroupArgs struct {
	// The ID of the Front Door Profile within which this Front Door Origin Group should exist. Changing this forces a new Front Door Origin Group to be created.
	CdnFrontdoorProfileId pulumi.StringInput
	// A `healthProbe` block as defined below.
	HealthProbe FrontdoorOriginGroupHealthProbePtrInput
	// A `loadBalancing` block as defined below.
	LoadBalancing FrontdoorOriginGroupLoadBalancingInput
	// The name which should be used for this Front Door Origin Group. Changing this forces a new Front Door Origin Group to be created.
	Name pulumi.StringPtrInput
	// Specifies the amount of time which should elapse before shifting traffic to another endpoint when a healthy endpoint becomes unhealthy or a new endpoint is added. Possible values are between `0` and `50` minutes (inclusive). Default is `10` minutes.
	//
	// > **NOTE:** This property is currently not used, but will be in the near future.
	RestoreTrafficTimeToHealedOrNewEndpointInMinutes pulumi.IntPtrInput
	// Specifies whether session affinity should be enabled on this host. Defaults to `true`.
	SessionAffinityEnabled pulumi.BoolPtrInput
}

func (FrontdoorOriginGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*frontdoorOriginGroupArgs)(nil)).Elem()
}

type FrontdoorOriginGroupInput interface {
	pulumi.Input

	ToFrontdoorOriginGroupOutput() FrontdoorOriginGroupOutput
	ToFrontdoorOriginGroupOutputWithContext(ctx context.Context) FrontdoorOriginGroupOutput
}

func (*FrontdoorOriginGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontdoorOriginGroup)(nil)).Elem()
}

func (i *FrontdoorOriginGroup) ToFrontdoorOriginGroupOutput() FrontdoorOriginGroupOutput {
	return i.ToFrontdoorOriginGroupOutputWithContext(context.Background())
}

func (i *FrontdoorOriginGroup) ToFrontdoorOriginGroupOutputWithContext(ctx context.Context) FrontdoorOriginGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontdoorOriginGroupOutput)
}

// FrontdoorOriginGroupArrayInput is an input type that accepts FrontdoorOriginGroupArray and FrontdoorOriginGroupArrayOutput values.
// You can construct a concrete instance of `FrontdoorOriginGroupArrayInput` via:
//
//	FrontdoorOriginGroupArray{ FrontdoorOriginGroupArgs{...} }
type FrontdoorOriginGroupArrayInput interface {
	pulumi.Input

	ToFrontdoorOriginGroupArrayOutput() FrontdoorOriginGroupArrayOutput
	ToFrontdoorOriginGroupArrayOutputWithContext(context.Context) FrontdoorOriginGroupArrayOutput
}

type FrontdoorOriginGroupArray []FrontdoorOriginGroupInput

func (FrontdoorOriginGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FrontdoorOriginGroup)(nil)).Elem()
}

func (i FrontdoorOriginGroupArray) ToFrontdoorOriginGroupArrayOutput() FrontdoorOriginGroupArrayOutput {
	return i.ToFrontdoorOriginGroupArrayOutputWithContext(context.Background())
}

func (i FrontdoorOriginGroupArray) ToFrontdoorOriginGroupArrayOutputWithContext(ctx context.Context) FrontdoorOriginGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontdoorOriginGroupArrayOutput)
}

// FrontdoorOriginGroupMapInput is an input type that accepts FrontdoorOriginGroupMap and FrontdoorOriginGroupMapOutput values.
// You can construct a concrete instance of `FrontdoorOriginGroupMapInput` via:
//
//	FrontdoorOriginGroupMap{ "key": FrontdoorOriginGroupArgs{...} }
type FrontdoorOriginGroupMapInput interface {
	pulumi.Input

	ToFrontdoorOriginGroupMapOutput() FrontdoorOriginGroupMapOutput
	ToFrontdoorOriginGroupMapOutputWithContext(context.Context) FrontdoorOriginGroupMapOutput
}

type FrontdoorOriginGroupMap map[string]FrontdoorOriginGroupInput

func (FrontdoorOriginGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FrontdoorOriginGroup)(nil)).Elem()
}

func (i FrontdoorOriginGroupMap) ToFrontdoorOriginGroupMapOutput() FrontdoorOriginGroupMapOutput {
	return i.ToFrontdoorOriginGroupMapOutputWithContext(context.Background())
}

func (i FrontdoorOriginGroupMap) ToFrontdoorOriginGroupMapOutputWithContext(ctx context.Context) FrontdoorOriginGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontdoorOriginGroupMapOutput)
}

type FrontdoorOriginGroupOutput struct{ *pulumi.OutputState }

func (FrontdoorOriginGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontdoorOriginGroup)(nil)).Elem()
}

func (o FrontdoorOriginGroupOutput) ToFrontdoorOriginGroupOutput() FrontdoorOriginGroupOutput {
	return o
}

func (o FrontdoorOriginGroupOutput) ToFrontdoorOriginGroupOutputWithContext(ctx context.Context) FrontdoorOriginGroupOutput {
	return o
}

// The ID of the Front Door Profile within which this Front Door Origin Group should exist. Changing this forces a new Front Door Origin Group to be created.
func (o FrontdoorOriginGroupOutput) CdnFrontdoorProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *FrontdoorOriginGroup) pulumi.StringOutput { return v.CdnFrontdoorProfileId }).(pulumi.StringOutput)
}

// A `healthProbe` block as defined below.
func (o FrontdoorOriginGroupOutput) HealthProbe() FrontdoorOriginGroupHealthProbePtrOutput {
	return o.ApplyT(func(v *FrontdoorOriginGroup) FrontdoorOriginGroupHealthProbePtrOutput { return v.HealthProbe }).(FrontdoorOriginGroupHealthProbePtrOutput)
}

// A `loadBalancing` block as defined below.
func (o FrontdoorOriginGroupOutput) LoadBalancing() FrontdoorOriginGroupLoadBalancingOutput {
	return o.ApplyT(func(v *FrontdoorOriginGroup) FrontdoorOriginGroupLoadBalancingOutput { return v.LoadBalancing }).(FrontdoorOriginGroupLoadBalancingOutput)
}

// The name which should be used for this Front Door Origin Group. Changing this forces a new Front Door Origin Group to be created.
func (o FrontdoorOriginGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FrontdoorOriginGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the amount of time which should elapse before shifting traffic to another endpoint when a healthy endpoint becomes unhealthy or a new endpoint is added. Possible values are between `0` and `50` minutes (inclusive). Default is `10` minutes.
//
// > **NOTE:** This property is currently not used, but will be in the near future.
func (o FrontdoorOriginGroupOutput) RestoreTrafficTimeToHealedOrNewEndpointInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FrontdoorOriginGroup) pulumi.IntPtrOutput {
		return v.RestoreTrafficTimeToHealedOrNewEndpointInMinutes
	}).(pulumi.IntPtrOutput)
}

// Specifies whether session affinity should be enabled on this host. Defaults to `true`.
func (o FrontdoorOriginGroupOutput) SessionAffinityEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FrontdoorOriginGroup) pulumi.BoolPtrOutput { return v.SessionAffinityEnabled }).(pulumi.BoolPtrOutput)
}

type FrontdoorOriginGroupArrayOutput struct{ *pulumi.OutputState }

func (FrontdoorOriginGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FrontdoorOriginGroup)(nil)).Elem()
}

func (o FrontdoorOriginGroupArrayOutput) ToFrontdoorOriginGroupArrayOutput() FrontdoorOriginGroupArrayOutput {
	return o
}

func (o FrontdoorOriginGroupArrayOutput) ToFrontdoorOriginGroupArrayOutputWithContext(ctx context.Context) FrontdoorOriginGroupArrayOutput {
	return o
}

func (o FrontdoorOriginGroupArrayOutput) Index(i pulumi.IntInput) FrontdoorOriginGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FrontdoorOriginGroup {
		return vs[0].([]*FrontdoorOriginGroup)[vs[1].(int)]
	}).(FrontdoorOriginGroupOutput)
}

type FrontdoorOriginGroupMapOutput struct{ *pulumi.OutputState }

func (FrontdoorOriginGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FrontdoorOriginGroup)(nil)).Elem()
}

func (o FrontdoorOriginGroupMapOutput) ToFrontdoorOriginGroupMapOutput() FrontdoorOriginGroupMapOutput {
	return o
}

func (o FrontdoorOriginGroupMapOutput) ToFrontdoorOriginGroupMapOutputWithContext(ctx context.Context) FrontdoorOriginGroupMapOutput {
	return o
}

func (o FrontdoorOriginGroupMapOutput) MapIndex(k pulumi.StringInput) FrontdoorOriginGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FrontdoorOriginGroup {
		return vs[0].(map[string]*FrontdoorOriginGroup)[vs[1].(string)]
	}).(FrontdoorOriginGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FrontdoorOriginGroupInput)(nil)).Elem(), &FrontdoorOriginGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*FrontdoorOriginGroupArrayInput)(nil)).Elem(), FrontdoorOriginGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FrontdoorOriginGroupMapInput)(nil)).Elem(), FrontdoorOriginGroupMap{})
	pulumi.RegisterOutputType(FrontdoorOriginGroupOutput{})
	pulumi.RegisterOutputType(FrontdoorOriginGroupArrayOutput{})
	pulumi.RegisterOutputType(FrontdoorOriginGroupMapOutput{})
}
