// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cdn

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages the association between a Front Door (standard/premium) Custom Domain and one or more Front Door (standard/premium) Routes.
//
// ## Import
//
// Front Door Custom Domain Associations can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:cdn/frontdoorCustomDomainAssociation:FrontdoorCustomDomainAssociation example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Cdn/profiles/profile1/associations/assoc1
//
// ```
type FrontdoorCustomDomainAssociation struct {
	pulumi.CustomResourceState

	// The ID of the Front Door Custom Domain that should be managed by the association resource. Changing this forces a new association resource to be created.
	CdnFrontdoorCustomDomainId pulumi.StringOutput `pulumi:"cdnFrontdoorCustomDomainId"`
	// One or more IDs of the Front Door Route to which the Front Door Custom Domain is associated with.
	//
	// > **NOTE:** This should include all of the Front Door Route resources that the Front Door Custom Domain is associated with. If the list of Front Door Routes is not complete you will receive the service side error `This resource is still associated with a route. Please delete the association with the route first before deleting this resource` when you attempt to `destroy`/`delete` your Front Door Custom Domain.
	CdnFrontdoorRouteIds pulumi.StringArrayOutput `pulumi:"cdnFrontdoorRouteIds"`
}

// NewFrontdoorCustomDomainAssociation registers a new resource with the given unique name, arguments, and options.
func NewFrontdoorCustomDomainAssociation(ctx *pulumi.Context,
	name string, args *FrontdoorCustomDomainAssociationArgs, opts ...pulumi.ResourceOption) (*FrontdoorCustomDomainAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CdnFrontdoorCustomDomainId == nil {
		return nil, errors.New("invalid value for required argument 'CdnFrontdoorCustomDomainId'")
	}
	if args.CdnFrontdoorRouteIds == nil {
		return nil, errors.New("invalid value for required argument 'CdnFrontdoorRouteIds'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FrontdoorCustomDomainAssociation
	err := ctx.RegisterResource("azure:cdn/frontdoorCustomDomainAssociation:FrontdoorCustomDomainAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFrontdoorCustomDomainAssociation gets an existing FrontdoorCustomDomainAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFrontdoorCustomDomainAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FrontdoorCustomDomainAssociationState, opts ...pulumi.ResourceOption) (*FrontdoorCustomDomainAssociation, error) {
	var resource FrontdoorCustomDomainAssociation
	err := ctx.ReadResource("azure:cdn/frontdoorCustomDomainAssociation:FrontdoorCustomDomainAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FrontdoorCustomDomainAssociation resources.
type frontdoorCustomDomainAssociationState struct {
	// The ID of the Front Door Custom Domain that should be managed by the association resource. Changing this forces a new association resource to be created.
	CdnFrontdoorCustomDomainId *string `pulumi:"cdnFrontdoorCustomDomainId"`
	// One or more IDs of the Front Door Route to which the Front Door Custom Domain is associated with.
	//
	// > **NOTE:** This should include all of the Front Door Route resources that the Front Door Custom Domain is associated with. If the list of Front Door Routes is not complete you will receive the service side error `This resource is still associated with a route. Please delete the association with the route first before deleting this resource` when you attempt to `destroy`/`delete` your Front Door Custom Domain.
	CdnFrontdoorRouteIds []string `pulumi:"cdnFrontdoorRouteIds"`
}

type FrontdoorCustomDomainAssociationState struct {
	// The ID of the Front Door Custom Domain that should be managed by the association resource. Changing this forces a new association resource to be created.
	CdnFrontdoorCustomDomainId pulumi.StringPtrInput
	// One or more IDs of the Front Door Route to which the Front Door Custom Domain is associated with.
	//
	// > **NOTE:** This should include all of the Front Door Route resources that the Front Door Custom Domain is associated with. If the list of Front Door Routes is not complete you will receive the service side error `This resource is still associated with a route. Please delete the association with the route first before deleting this resource` when you attempt to `destroy`/`delete` your Front Door Custom Domain.
	CdnFrontdoorRouteIds pulumi.StringArrayInput
}

func (FrontdoorCustomDomainAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*frontdoorCustomDomainAssociationState)(nil)).Elem()
}

type frontdoorCustomDomainAssociationArgs struct {
	// The ID of the Front Door Custom Domain that should be managed by the association resource. Changing this forces a new association resource to be created.
	CdnFrontdoorCustomDomainId string `pulumi:"cdnFrontdoorCustomDomainId"`
	// One or more IDs of the Front Door Route to which the Front Door Custom Domain is associated with.
	//
	// > **NOTE:** This should include all of the Front Door Route resources that the Front Door Custom Domain is associated with. If the list of Front Door Routes is not complete you will receive the service side error `This resource is still associated with a route. Please delete the association with the route first before deleting this resource` when you attempt to `destroy`/`delete` your Front Door Custom Domain.
	CdnFrontdoorRouteIds []string `pulumi:"cdnFrontdoorRouteIds"`
}

// The set of arguments for constructing a FrontdoorCustomDomainAssociation resource.
type FrontdoorCustomDomainAssociationArgs struct {
	// The ID of the Front Door Custom Domain that should be managed by the association resource. Changing this forces a new association resource to be created.
	CdnFrontdoorCustomDomainId pulumi.StringInput
	// One or more IDs of the Front Door Route to which the Front Door Custom Domain is associated with.
	//
	// > **NOTE:** This should include all of the Front Door Route resources that the Front Door Custom Domain is associated with. If the list of Front Door Routes is not complete you will receive the service side error `This resource is still associated with a route. Please delete the association with the route first before deleting this resource` when you attempt to `destroy`/`delete` your Front Door Custom Domain.
	CdnFrontdoorRouteIds pulumi.StringArrayInput
}

func (FrontdoorCustomDomainAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*frontdoorCustomDomainAssociationArgs)(nil)).Elem()
}

type FrontdoorCustomDomainAssociationInput interface {
	pulumi.Input

	ToFrontdoorCustomDomainAssociationOutput() FrontdoorCustomDomainAssociationOutput
	ToFrontdoorCustomDomainAssociationOutputWithContext(ctx context.Context) FrontdoorCustomDomainAssociationOutput
}

func (*FrontdoorCustomDomainAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontdoorCustomDomainAssociation)(nil)).Elem()
}

func (i *FrontdoorCustomDomainAssociation) ToFrontdoorCustomDomainAssociationOutput() FrontdoorCustomDomainAssociationOutput {
	return i.ToFrontdoorCustomDomainAssociationOutputWithContext(context.Background())
}

func (i *FrontdoorCustomDomainAssociation) ToFrontdoorCustomDomainAssociationOutputWithContext(ctx context.Context) FrontdoorCustomDomainAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontdoorCustomDomainAssociationOutput)
}

// FrontdoorCustomDomainAssociationArrayInput is an input type that accepts FrontdoorCustomDomainAssociationArray and FrontdoorCustomDomainAssociationArrayOutput values.
// You can construct a concrete instance of `FrontdoorCustomDomainAssociationArrayInput` via:
//
//	FrontdoorCustomDomainAssociationArray{ FrontdoorCustomDomainAssociationArgs{...} }
type FrontdoorCustomDomainAssociationArrayInput interface {
	pulumi.Input

	ToFrontdoorCustomDomainAssociationArrayOutput() FrontdoorCustomDomainAssociationArrayOutput
	ToFrontdoorCustomDomainAssociationArrayOutputWithContext(context.Context) FrontdoorCustomDomainAssociationArrayOutput
}

type FrontdoorCustomDomainAssociationArray []FrontdoorCustomDomainAssociationInput

func (FrontdoorCustomDomainAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FrontdoorCustomDomainAssociation)(nil)).Elem()
}

func (i FrontdoorCustomDomainAssociationArray) ToFrontdoorCustomDomainAssociationArrayOutput() FrontdoorCustomDomainAssociationArrayOutput {
	return i.ToFrontdoorCustomDomainAssociationArrayOutputWithContext(context.Background())
}

func (i FrontdoorCustomDomainAssociationArray) ToFrontdoorCustomDomainAssociationArrayOutputWithContext(ctx context.Context) FrontdoorCustomDomainAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontdoorCustomDomainAssociationArrayOutput)
}

// FrontdoorCustomDomainAssociationMapInput is an input type that accepts FrontdoorCustomDomainAssociationMap and FrontdoorCustomDomainAssociationMapOutput values.
// You can construct a concrete instance of `FrontdoorCustomDomainAssociationMapInput` via:
//
//	FrontdoorCustomDomainAssociationMap{ "key": FrontdoorCustomDomainAssociationArgs{...} }
type FrontdoorCustomDomainAssociationMapInput interface {
	pulumi.Input

	ToFrontdoorCustomDomainAssociationMapOutput() FrontdoorCustomDomainAssociationMapOutput
	ToFrontdoorCustomDomainAssociationMapOutputWithContext(context.Context) FrontdoorCustomDomainAssociationMapOutput
}

type FrontdoorCustomDomainAssociationMap map[string]FrontdoorCustomDomainAssociationInput

func (FrontdoorCustomDomainAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FrontdoorCustomDomainAssociation)(nil)).Elem()
}

func (i FrontdoorCustomDomainAssociationMap) ToFrontdoorCustomDomainAssociationMapOutput() FrontdoorCustomDomainAssociationMapOutput {
	return i.ToFrontdoorCustomDomainAssociationMapOutputWithContext(context.Background())
}

func (i FrontdoorCustomDomainAssociationMap) ToFrontdoorCustomDomainAssociationMapOutputWithContext(ctx context.Context) FrontdoorCustomDomainAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontdoorCustomDomainAssociationMapOutput)
}

type FrontdoorCustomDomainAssociationOutput struct{ *pulumi.OutputState }

func (FrontdoorCustomDomainAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontdoorCustomDomainAssociation)(nil)).Elem()
}

func (o FrontdoorCustomDomainAssociationOutput) ToFrontdoorCustomDomainAssociationOutput() FrontdoorCustomDomainAssociationOutput {
	return o
}

func (o FrontdoorCustomDomainAssociationOutput) ToFrontdoorCustomDomainAssociationOutputWithContext(ctx context.Context) FrontdoorCustomDomainAssociationOutput {
	return o
}

// The ID of the Front Door Custom Domain that should be managed by the association resource. Changing this forces a new association resource to be created.
func (o FrontdoorCustomDomainAssociationOutput) CdnFrontdoorCustomDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v *FrontdoorCustomDomainAssociation) pulumi.StringOutput { return v.CdnFrontdoorCustomDomainId }).(pulumi.StringOutput)
}

// One or more IDs of the Front Door Route to which the Front Door Custom Domain is associated with.
//
// > **NOTE:** This should include all of the Front Door Route resources that the Front Door Custom Domain is associated with. If the list of Front Door Routes is not complete you will receive the service side error `This resource is still associated with a route. Please delete the association with the route first before deleting this resource` when you attempt to `destroy`/`delete` your Front Door Custom Domain.
func (o FrontdoorCustomDomainAssociationOutput) CdnFrontdoorRouteIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FrontdoorCustomDomainAssociation) pulumi.StringArrayOutput { return v.CdnFrontdoorRouteIds }).(pulumi.StringArrayOutput)
}

type FrontdoorCustomDomainAssociationArrayOutput struct{ *pulumi.OutputState }

func (FrontdoorCustomDomainAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FrontdoorCustomDomainAssociation)(nil)).Elem()
}

func (o FrontdoorCustomDomainAssociationArrayOutput) ToFrontdoorCustomDomainAssociationArrayOutput() FrontdoorCustomDomainAssociationArrayOutput {
	return o
}

func (o FrontdoorCustomDomainAssociationArrayOutput) ToFrontdoorCustomDomainAssociationArrayOutputWithContext(ctx context.Context) FrontdoorCustomDomainAssociationArrayOutput {
	return o
}

func (o FrontdoorCustomDomainAssociationArrayOutput) Index(i pulumi.IntInput) FrontdoorCustomDomainAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FrontdoorCustomDomainAssociation {
		return vs[0].([]*FrontdoorCustomDomainAssociation)[vs[1].(int)]
	}).(FrontdoorCustomDomainAssociationOutput)
}

type FrontdoorCustomDomainAssociationMapOutput struct{ *pulumi.OutputState }

func (FrontdoorCustomDomainAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FrontdoorCustomDomainAssociation)(nil)).Elem()
}

func (o FrontdoorCustomDomainAssociationMapOutput) ToFrontdoorCustomDomainAssociationMapOutput() FrontdoorCustomDomainAssociationMapOutput {
	return o
}

func (o FrontdoorCustomDomainAssociationMapOutput) ToFrontdoorCustomDomainAssociationMapOutputWithContext(ctx context.Context) FrontdoorCustomDomainAssociationMapOutput {
	return o
}

func (o FrontdoorCustomDomainAssociationMapOutput) MapIndex(k pulumi.StringInput) FrontdoorCustomDomainAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FrontdoorCustomDomainAssociation {
		return vs[0].(map[string]*FrontdoorCustomDomainAssociation)[vs[1].(string)]
	}).(FrontdoorCustomDomainAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FrontdoorCustomDomainAssociationInput)(nil)).Elem(), &FrontdoorCustomDomainAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*FrontdoorCustomDomainAssociationArrayInput)(nil)).Elem(), FrontdoorCustomDomainAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FrontdoorCustomDomainAssociationMapInput)(nil)).Elem(), FrontdoorCustomDomainAssociationMap{})
	pulumi.RegisterOutputType(FrontdoorCustomDomainAssociationOutput{})
	pulumi.RegisterOutputType(FrontdoorCustomDomainAssociationArrayOutput{})
	pulumi.RegisterOutputType(FrontdoorCustomDomainAssociationMapOutput{})
}
