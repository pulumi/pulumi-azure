// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Virtual Machine Restore Point Collection.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
//	"github.com/pulumi/pulumi-std/sdk/go/std"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resources"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "example", &network.VirtualNetworkArgs{
//				Name: pulumi.String("example-network"),
//				AddressSpaces: pulumi.StringArray{
//					pulumi.String("10.0.0.0/16"),
//				},
//				Location:          example.Location,
//				ResourceGroupName: example.Name,
//			})
//			if err != nil {
//				return err
//			}
//			exampleSubnet, err := network.NewSubnet(ctx, "example", &network.SubnetArgs{
//				Name:               pulumi.String("internal"),
//				ResourceGroupName:  example.Name,
//				VirtualNetworkName: exampleVirtualNetwork.Name,
//				AddressPrefixes: pulumi.StringArray{
//					pulumi.String("10.0.2.0/24"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleNetworkInterface, err := network.NewNetworkInterface(ctx, "example", &network.NetworkInterfaceArgs{
//				Name:              pulumi.String("example-nic"),
//				Location:          example.Location,
//				ResourceGroupName: example.Name,
//				IpConfigurations: network.NetworkInterfaceIpConfigurationArray{
//					&network.NetworkInterfaceIpConfigurationArgs{
//						Name:                       pulumi.String("internal"),
//						SubnetId:                   exampleSubnet.ID(),
//						PrivateIpAddressAllocation: pulumi.String("Dynamic"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			invokeFile, err := std.File(ctx, &std.FileArgs{
//				Input: "~/.ssh/id_rsa.pub",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			exampleLinuxVirtualMachine, err := compute.NewLinuxVirtualMachine(ctx, "example", &compute.LinuxVirtualMachineArgs{
//				Name:              pulumi.String("example-machine"),
//				ResourceGroupName: example.Name,
//				Location:          example.Location,
//				Size:              pulumi.String("Standard_F2"),
//				AdminUsername:     pulumi.String("adminuser"),
//				NetworkInterfaceIds: pulumi.StringArray{
//					exampleNetworkInterface.ID(),
//				},
//				AdminSshKeys: compute.LinuxVirtualMachineAdminSshKeyArray{
//					&compute.LinuxVirtualMachineAdminSshKeyArgs{
//						Username:  pulumi.String("adminuser"),
//						PublicKey: pulumi.String(invokeFile.Result),
//					},
//				},
//				OsDisk: &compute.LinuxVirtualMachineOsDiskArgs{
//					Caching:            pulumi.String("ReadWrite"),
//					StorageAccountType: pulumi.String("Standard_LRS"),
//				},
//				SourceImageReference: &compute.LinuxVirtualMachineSourceImageReferenceArgs{
//					Publisher: pulumi.String("Canonical"),
//					Offer:     pulumi.String("0001-com-ubuntu-server-jammy"),
//					Sku:       pulumi.String("22_04-lts"),
//					Version:   pulumi.String("latest"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewRestorePointCollection(ctx, "example", &compute.RestorePointCollectionArgs{
//				Name:                   pulumi.String("example-collection"),
//				ResourceGroupName:      example.Name,
//				Location:               exampleLinuxVirtualMachine.Location,
//				SourceVirtualMachineId: exampleLinuxVirtualMachine.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Virtual Machine Restore Point Collections can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:compute/restorePointCollection:RestorePointCollection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/restorePointCollections/collection1
// ```
type RestorePointCollection struct {
	pulumi.CustomResourceState

	// The Azure location where the Virtual Machine Restore Point Collection should exist. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// Specifies the name of the Virtual Machine Restore Point Collection. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the Resource Group in which the Virtual Machine Restore Point Collection should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The ID of the virtual machine that will be associated with this Virtual Machine Restore Point Collection. Changing this forces a new resource to be created.
	SourceVirtualMachineId pulumi.StringOutput `pulumi:"sourceVirtualMachineId"`
	// A mapping of tags which should be assigned to this Virtual Machine Restore Point Collection.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewRestorePointCollection registers a new resource with the given unique name, arguments, and options.
func NewRestorePointCollection(ctx *pulumi.Context,
	name string, args *RestorePointCollectionArgs, opts ...pulumi.ResourceOption) (*RestorePointCollection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SourceVirtualMachineId == nil {
		return nil, errors.New("invalid value for required argument 'SourceVirtualMachineId'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure:compute/virtualMachineRestorePointCollection:VirtualMachineRestorePointCollection"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RestorePointCollection
	err := ctx.RegisterResource("azure:compute/restorePointCollection:RestorePointCollection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRestorePointCollection gets an existing RestorePointCollection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRestorePointCollection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RestorePointCollectionState, opts ...pulumi.ResourceOption) (*RestorePointCollection, error) {
	var resource RestorePointCollection
	err := ctx.ReadResource("azure:compute/restorePointCollection:RestorePointCollection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RestorePointCollection resources.
type restorePointCollectionState struct {
	// The Azure location where the Virtual Machine Restore Point Collection should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of the Virtual Machine Restore Point Collection. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group in which the Virtual Machine Restore Point Collection should exist. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The ID of the virtual machine that will be associated with this Virtual Machine Restore Point Collection. Changing this forces a new resource to be created.
	SourceVirtualMachineId *string `pulumi:"sourceVirtualMachineId"`
	// A mapping of tags which should be assigned to this Virtual Machine Restore Point Collection.
	Tags map[string]string `pulumi:"tags"`
}

type RestorePointCollectionState struct {
	// The Azure location where the Virtual Machine Restore Point Collection should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of the Virtual Machine Restore Point Collection. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group in which the Virtual Machine Restore Point Collection should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The ID of the virtual machine that will be associated with this Virtual Machine Restore Point Collection. Changing this forces a new resource to be created.
	SourceVirtualMachineId pulumi.StringPtrInput
	// A mapping of tags which should be assigned to this Virtual Machine Restore Point Collection.
	Tags pulumi.StringMapInput
}

func (RestorePointCollectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*restorePointCollectionState)(nil)).Elem()
}

type restorePointCollectionArgs struct {
	// The Azure location where the Virtual Machine Restore Point Collection should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of the Virtual Machine Restore Point Collection. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group in which the Virtual Machine Restore Point Collection should exist. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The ID of the virtual machine that will be associated with this Virtual Machine Restore Point Collection. Changing this forces a new resource to be created.
	SourceVirtualMachineId string `pulumi:"sourceVirtualMachineId"`
	// A mapping of tags which should be assigned to this Virtual Machine Restore Point Collection.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a RestorePointCollection resource.
type RestorePointCollectionArgs struct {
	// The Azure location where the Virtual Machine Restore Point Collection should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of the Virtual Machine Restore Point Collection. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group in which the Virtual Machine Restore Point Collection should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// The ID of the virtual machine that will be associated with this Virtual Machine Restore Point Collection. Changing this forces a new resource to be created.
	SourceVirtualMachineId pulumi.StringInput
	// A mapping of tags which should be assigned to this Virtual Machine Restore Point Collection.
	Tags pulumi.StringMapInput
}

func (RestorePointCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*restorePointCollectionArgs)(nil)).Elem()
}

type RestorePointCollectionInput interface {
	pulumi.Input

	ToRestorePointCollectionOutput() RestorePointCollectionOutput
	ToRestorePointCollectionOutputWithContext(ctx context.Context) RestorePointCollectionOutput
}

func (*RestorePointCollection) ElementType() reflect.Type {
	return reflect.TypeOf((**RestorePointCollection)(nil)).Elem()
}

func (i *RestorePointCollection) ToRestorePointCollectionOutput() RestorePointCollectionOutput {
	return i.ToRestorePointCollectionOutputWithContext(context.Background())
}

func (i *RestorePointCollection) ToRestorePointCollectionOutputWithContext(ctx context.Context) RestorePointCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestorePointCollectionOutput)
}

// RestorePointCollectionArrayInput is an input type that accepts RestorePointCollectionArray and RestorePointCollectionArrayOutput values.
// You can construct a concrete instance of `RestorePointCollectionArrayInput` via:
//
//	RestorePointCollectionArray{ RestorePointCollectionArgs{...} }
type RestorePointCollectionArrayInput interface {
	pulumi.Input

	ToRestorePointCollectionArrayOutput() RestorePointCollectionArrayOutput
	ToRestorePointCollectionArrayOutputWithContext(context.Context) RestorePointCollectionArrayOutput
}

type RestorePointCollectionArray []RestorePointCollectionInput

func (RestorePointCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RestorePointCollection)(nil)).Elem()
}

func (i RestorePointCollectionArray) ToRestorePointCollectionArrayOutput() RestorePointCollectionArrayOutput {
	return i.ToRestorePointCollectionArrayOutputWithContext(context.Background())
}

func (i RestorePointCollectionArray) ToRestorePointCollectionArrayOutputWithContext(ctx context.Context) RestorePointCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestorePointCollectionArrayOutput)
}

// RestorePointCollectionMapInput is an input type that accepts RestorePointCollectionMap and RestorePointCollectionMapOutput values.
// You can construct a concrete instance of `RestorePointCollectionMapInput` via:
//
//	RestorePointCollectionMap{ "key": RestorePointCollectionArgs{...} }
type RestorePointCollectionMapInput interface {
	pulumi.Input

	ToRestorePointCollectionMapOutput() RestorePointCollectionMapOutput
	ToRestorePointCollectionMapOutputWithContext(context.Context) RestorePointCollectionMapOutput
}

type RestorePointCollectionMap map[string]RestorePointCollectionInput

func (RestorePointCollectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RestorePointCollection)(nil)).Elem()
}

func (i RestorePointCollectionMap) ToRestorePointCollectionMapOutput() RestorePointCollectionMapOutput {
	return i.ToRestorePointCollectionMapOutputWithContext(context.Background())
}

func (i RestorePointCollectionMap) ToRestorePointCollectionMapOutputWithContext(ctx context.Context) RestorePointCollectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestorePointCollectionMapOutput)
}

type RestorePointCollectionOutput struct{ *pulumi.OutputState }

func (RestorePointCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestorePointCollection)(nil)).Elem()
}

func (o RestorePointCollectionOutput) ToRestorePointCollectionOutput() RestorePointCollectionOutput {
	return o
}

func (o RestorePointCollectionOutput) ToRestorePointCollectionOutputWithContext(ctx context.Context) RestorePointCollectionOutput {
	return o
}

// The Azure location where the Virtual Machine Restore Point Collection should exist. Changing this forces a new resource to be created.
func (o RestorePointCollectionOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePointCollection) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Specifies the name of the Virtual Machine Restore Point Collection. Changing this forces a new resource to be created.
func (o RestorePointCollectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePointCollection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the Resource Group in which the Virtual Machine Restore Point Collection should exist. Changing this forces a new resource to be created.
func (o RestorePointCollectionOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePointCollection) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The ID of the virtual machine that will be associated with this Virtual Machine Restore Point Collection. Changing this forces a new resource to be created.
func (o RestorePointCollectionOutput) SourceVirtualMachineId() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePointCollection) pulumi.StringOutput { return v.SourceVirtualMachineId }).(pulumi.StringOutput)
}

// A mapping of tags which should be assigned to this Virtual Machine Restore Point Collection.
func (o RestorePointCollectionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RestorePointCollection) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type RestorePointCollectionArrayOutput struct{ *pulumi.OutputState }

func (RestorePointCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RestorePointCollection)(nil)).Elem()
}

func (o RestorePointCollectionArrayOutput) ToRestorePointCollectionArrayOutput() RestorePointCollectionArrayOutput {
	return o
}

func (o RestorePointCollectionArrayOutput) ToRestorePointCollectionArrayOutputWithContext(ctx context.Context) RestorePointCollectionArrayOutput {
	return o
}

func (o RestorePointCollectionArrayOutput) Index(i pulumi.IntInput) RestorePointCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RestorePointCollection {
		return vs[0].([]*RestorePointCollection)[vs[1].(int)]
	}).(RestorePointCollectionOutput)
}

type RestorePointCollectionMapOutput struct{ *pulumi.OutputState }

func (RestorePointCollectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RestorePointCollection)(nil)).Elem()
}

func (o RestorePointCollectionMapOutput) ToRestorePointCollectionMapOutput() RestorePointCollectionMapOutput {
	return o
}

func (o RestorePointCollectionMapOutput) ToRestorePointCollectionMapOutputWithContext(ctx context.Context) RestorePointCollectionMapOutput {
	return o
}

func (o RestorePointCollectionMapOutput) MapIndex(k pulumi.StringInput) RestorePointCollectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RestorePointCollection {
		return vs[0].(map[string]*RestorePointCollection)[vs[1].(string)]
	}).(RestorePointCollectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RestorePointCollectionInput)(nil)).Elem(), &RestorePointCollection{})
	pulumi.RegisterInputType(reflect.TypeOf((*RestorePointCollectionArrayInput)(nil)).Elem(), RestorePointCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RestorePointCollectionMapInput)(nil)).Elem(), RestorePointCollectionMap{})
	pulumi.RegisterOutputType(RestorePointCollectionOutput{})
	pulumi.RegisterOutputType(RestorePointCollectionArrayOutput{})
	pulumi.RegisterOutputType(RestorePointCollectionMapOutput{})
}
