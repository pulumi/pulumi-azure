// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Managed Disk.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := compute.GetManagedDisks(ctx, &compute.GetManagedDisksArgs{
//				ResourceGroupName: "example-resources",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("firstDiskId", existingAzurermManagedDisk.Disk[0].Id)
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This data source uses the following Azure API Providers:
//
// * `Microsoft.Compute` - 2023-04-02
func GetManagedDisks(ctx *pulumi.Context, args *GetManagedDisksArgs, opts ...pulumi.InvokeOption) (*GetManagedDisksResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedDisksResult
	err := ctx.Invoke("azure:compute/getManagedDisks:getManagedDisks", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedDisks.
type GetManagedDisksArgs struct {
	// Specifies the name of the Resource Group where this Managed Disk exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getManagedDisks.
type GetManagedDisksResult struct {
	// a `disk` block as detailed below.
	Disks []GetManagedDisksDisk `pulumi:"disks"`
	// The provider-assigned unique ID for this managed resource.
	Id                string `pulumi:"id"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

func GetManagedDisksOutput(ctx *pulumi.Context, args GetManagedDisksOutputArgs, opts ...pulumi.InvokeOption) GetManagedDisksResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetManagedDisksResultOutput, error) {
			args := v.(GetManagedDisksArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure:compute/getManagedDisks:getManagedDisks", args, GetManagedDisksResultOutput{}, options).(GetManagedDisksResultOutput), nil
		}).(GetManagedDisksResultOutput)
}

// A collection of arguments for invoking getManagedDisks.
type GetManagedDisksOutputArgs struct {
	// Specifies the name of the Resource Group where this Managed Disk exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetManagedDisksOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDisksArgs)(nil)).Elem()
}

// A collection of values returned by getManagedDisks.
type GetManagedDisksResultOutput struct{ *pulumi.OutputState }

func (GetManagedDisksResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDisksResult)(nil)).Elem()
}

func (o GetManagedDisksResultOutput) ToGetManagedDisksResultOutput() GetManagedDisksResultOutput {
	return o
}

func (o GetManagedDisksResultOutput) ToGetManagedDisksResultOutputWithContext(ctx context.Context) GetManagedDisksResultOutput {
	return o
}

// a `disk` block as detailed below.
func (o GetManagedDisksResultOutput) Disks() GetManagedDisksDiskArrayOutput {
	return o.ApplyT(func(v GetManagedDisksResult) []GetManagedDisksDisk { return v.Disks }).(GetManagedDisksDiskArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedDisksResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDisksResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetManagedDisksResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDisksResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedDisksResultOutput{})
}
