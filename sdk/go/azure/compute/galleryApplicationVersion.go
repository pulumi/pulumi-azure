// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Gallery Application Version.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/compute"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleSharedImageGallery, err := compute.NewSharedImageGallery(ctx, "exampleSharedImageGallery", &compute.SharedImageGalleryArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//			})
//			if err != nil {
//				return err
//			}
//			exampleGalleryApplication, err := compute.NewGalleryApplication(ctx, "exampleGalleryApplication", &compute.GalleryApplicationArgs{
//				GalleryId:       exampleSharedImageGallery.ID(),
//				Location:        exampleResourceGroup.Location,
//				SupportedOsType: pulumi.String("Linux"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleAccount, err := storage.NewAccount(ctx, "exampleAccount", &storage.AccountArgs{
//				ResourceGroupName:      exampleResourceGroup.Name,
//				Location:               exampleResourceGroup.Location,
//				AccountTier:            pulumi.String("Standard"),
//				AccountReplicationType: pulumi.String("LRS"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleContainer, err := storage.NewContainer(ctx, "exampleContainer", &storage.ContainerArgs{
//				StorageAccountName:  exampleAccount.Name,
//				ContainerAccessType: pulumi.String("blob"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleBlob, err := storage.NewBlob(ctx, "exampleBlob", &storage.BlobArgs{
//				StorageAccountName:   exampleAccount.Name,
//				StorageContainerName: exampleContainer.Name,
//				Type:                 pulumi.String("Block"),
//				SourceContent:        pulumi.String("[scripts file content]"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewGalleryApplicationVersion(ctx, "exampleGalleryApplicationVersion", &compute.GalleryApplicationVersionArgs{
//				GalleryApplicationId: exampleGalleryApplication.ID(),
//				Location:             exampleGalleryApplication.Location,
//				ManageAction: &compute.GalleryApplicationVersionManageActionArgs{
//					Install: pulumi.String("[install command]"),
//					Remove:  pulumi.String("[remove command]"),
//				},
//				Source: &compute.GalleryApplicationVersionSourceArgs{
//					MediaLink: exampleBlob.ID(),
//				},
//				TargetRegions: compute.GalleryApplicationVersionTargetRegionArray{
//					&compute.GalleryApplicationVersionTargetRegionArgs{
//						Name:                 exampleGalleryApplication.Location,
//						RegionalReplicaCount: pulumi.Int(1),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Gallery Application Versions can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:compute/galleryApplicationVersion:GalleryApplicationVersion example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Compute/galleries/gallery1/applications/galleryApplication1/versions/galleryApplicationVersion1
//
// ```
type GalleryApplicationVersion struct {
	pulumi.CustomResourceState

	// Should the Gallery Application reports health. Defaults to `false`.
	EnableHealthCheck pulumi.BoolPtrOutput `pulumi:"enableHealthCheck"`
	// The end of life date in RFC3339 format of the Gallery Application Version.
	EndOfLifeDate pulumi.StringPtrOutput `pulumi:"endOfLifeDate"`
	// Should the Gallery Application Version be excluded from the `latest` filter? If set to `true` this Gallery Application Version won't be returned for the `latest` version. Defaults to `false`.
	ExcludeFromLatest pulumi.BoolPtrOutput `pulumi:"excludeFromLatest"`
	// The ID of the Gallery Application. Changing this forces a new resource to be created.
	GalleryApplicationId pulumi.StringOutput `pulumi:"galleryApplicationId"`
	// The Azure Region where the Gallery Application Version exists. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// A `manageAction` block as defined below.
	ManageAction GalleryApplicationVersionManageActionOutput `pulumi:"manageAction"`
	// The version name of the Gallery Application Version, such as `1.0.0`. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// A `source` block as defined below.
	Source GalleryApplicationVersionSourceOutput `pulumi:"source"`
	// A mapping of tags to assign to the Gallery Application Version.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// One or more `targetRegion` blocks as defined below.
	TargetRegions GalleryApplicationVersionTargetRegionArrayOutput `pulumi:"targetRegions"`
}

// NewGalleryApplicationVersion registers a new resource with the given unique name, arguments, and options.
func NewGalleryApplicationVersion(ctx *pulumi.Context,
	name string, args *GalleryApplicationVersionArgs, opts ...pulumi.ResourceOption) (*GalleryApplicationVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GalleryApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'GalleryApplicationId'")
	}
	if args.ManageAction == nil {
		return nil, errors.New("invalid value for required argument 'ManageAction'")
	}
	if args.Source == nil {
		return nil, errors.New("invalid value for required argument 'Source'")
	}
	if args.TargetRegions == nil {
		return nil, errors.New("invalid value for required argument 'TargetRegions'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GalleryApplicationVersion
	err := ctx.RegisterResource("azure:compute/galleryApplicationVersion:GalleryApplicationVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGalleryApplicationVersion gets an existing GalleryApplicationVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGalleryApplicationVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GalleryApplicationVersionState, opts ...pulumi.ResourceOption) (*GalleryApplicationVersion, error) {
	var resource GalleryApplicationVersion
	err := ctx.ReadResource("azure:compute/galleryApplicationVersion:GalleryApplicationVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GalleryApplicationVersion resources.
type galleryApplicationVersionState struct {
	// Should the Gallery Application reports health. Defaults to `false`.
	EnableHealthCheck *bool `pulumi:"enableHealthCheck"`
	// The end of life date in RFC3339 format of the Gallery Application Version.
	EndOfLifeDate *string `pulumi:"endOfLifeDate"`
	// Should the Gallery Application Version be excluded from the `latest` filter? If set to `true` this Gallery Application Version won't be returned for the `latest` version. Defaults to `false`.
	ExcludeFromLatest *bool `pulumi:"excludeFromLatest"`
	// The ID of the Gallery Application. Changing this forces a new resource to be created.
	GalleryApplicationId *string `pulumi:"galleryApplicationId"`
	// The Azure Region where the Gallery Application Version exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// A `manageAction` block as defined below.
	ManageAction *GalleryApplicationVersionManageAction `pulumi:"manageAction"`
	// The version name of the Gallery Application Version, such as `1.0.0`. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A `source` block as defined below.
	Source *GalleryApplicationVersionSource `pulumi:"source"`
	// A mapping of tags to assign to the Gallery Application Version.
	Tags map[string]string `pulumi:"tags"`
	// One or more `targetRegion` blocks as defined below.
	TargetRegions []GalleryApplicationVersionTargetRegion `pulumi:"targetRegions"`
}

type GalleryApplicationVersionState struct {
	// Should the Gallery Application reports health. Defaults to `false`.
	EnableHealthCheck pulumi.BoolPtrInput
	// The end of life date in RFC3339 format of the Gallery Application Version.
	EndOfLifeDate pulumi.StringPtrInput
	// Should the Gallery Application Version be excluded from the `latest` filter? If set to `true` this Gallery Application Version won't be returned for the `latest` version. Defaults to `false`.
	ExcludeFromLatest pulumi.BoolPtrInput
	// The ID of the Gallery Application. Changing this forces a new resource to be created.
	GalleryApplicationId pulumi.StringPtrInput
	// The Azure Region where the Gallery Application Version exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// A `manageAction` block as defined below.
	ManageAction GalleryApplicationVersionManageActionPtrInput
	// The version name of the Gallery Application Version, such as `1.0.0`. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A `source` block as defined below.
	Source GalleryApplicationVersionSourcePtrInput
	// A mapping of tags to assign to the Gallery Application Version.
	Tags pulumi.StringMapInput
	// One or more `targetRegion` blocks as defined below.
	TargetRegions GalleryApplicationVersionTargetRegionArrayInput
}

func (GalleryApplicationVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*galleryApplicationVersionState)(nil)).Elem()
}

type galleryApplicationVersionArgs struct {
	// Should the Gallery Application reports health. Defaults to `false`.
	EnableHealthCheck *bool `pulumi:"enableHealthCheck"`
	// The end of life date in RFC3339 format of the Gallery Application Version.
	EndOfLifeDate *string `pulumi:"endOfLifeDate"`
	// Should the Gallery Application Version be excluded from the `latest` filter? If set to `true` this Gallery Application Version won't be returned for the `latest` version. Defaults to `false`.
	ExcludeFromLatest *bool `pulumi:"excludeFromLatest"`
	// The ID of the Gallery Application. Changing this forces a new resource to be created.
	GalleryApplicationId string `pulumi:"galleryApplicationId"`
	// The Azure Region where the Gallery Application Version exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// A `manageAction` block as defined below.
	ManageAction GalleryApplicationVersionManageAction `pulumi:"manageAction"`
	// The version name of the Gallery Application Version, such as `1.0.0`. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A `source` block as defined below.
	Source GalleryApplicationVersionSource `pulumi:"source"`
	// A mapping of tags to assign to the Gallery Application Version.
	Tags map[string]string `pulumi:"tags"`
	// One or more `targetRegion` blocks as defined below.
	TargetRegions []GalleryApplicationVersionTargetRegion `pulumi:"targetRegions"`
}

// The set of arguments for constructing a GalleryApplicationVersion resource.
type GalleryApplicationVersionArgs struct {
	// Should the Gallery Application reports health. Defaults to `false`.
	EnableHealthCheck pulumi.BoolPtrInput
	// The end of life date in RFC3339 format of the Gallery Application Version.
	EndOfLifeDate pulumi.StringPtrInput
	// Should the Gallery Application Version be excluded from the `latest` filter? If set to `true` this Gallery Application Version won't be returned for the `latest` version. Defaults to `false`.
	ExcludeFromLatest pulumi.BoolPtrInput
	// The ID of the Gallery Application. Changing this forces a new resource to be created.
	GalleryApplicationId pulumi.StringInput
	// The Azure Region where the Gallery Application Version exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// A `manageAction` block as defined below.
	ManageAction GalleryApplicationVersionManageActionInput
	// The version name of the Gallery Application Version, such as `1.0.0`. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A `source` block as defined below.
	Source GalleryApplicationVersionSourceInput
	// A mapping of tags to assign to the Gallery Application Version.
	Tags pulumi.StringMapInput
	// One or more `targetRegion` blocks as defined below.
	TargetRegions GalleryApplicationVersionTargetRegionArrayInput
}

func (GalleryApplicationVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*galleryApplicationVersionArgs)(nil)).Elem()
}

type GalleryApplicationVersionInput interface {
	pulumi.Input

	ToGalleryApplicationVersionOutput() GalleryApplicationVersionOutput
	ToGalleryApplicationVersionOutputWithContext(ctx context.Context) GalleryApplicationVersionOutput
}

func (*GalleryApplicationVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryApplicationVersion)(nil)).Elem()
}

func (i *GalleryApplicationVersion) ToGalleryApplicationVersionOutput() GalleryApplicationVersionOutput {
	return i.ToGalleryApplicationVersionOutputWithContext(context.Background())
}

func (i *GalleryApplicationVersion) ToGalleryApplicationVersionOutputWithContext(ctx context.Context) GalleryApplicationVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryApplicationVersionOutput)
}

// GalleryApplicationVersionArrayInput is an input type that accepts GalleryApplicationVersionArray and GalleryApplicationVersionArrayOutput values.
// You can construct a concrete instance of `GalleryApplicationVersionArrayInput` via:
//
//	GalleryApplicationVersionArray{ GalleryApplicationVersionArgs{...} }
type GalleryApplicationVersionArrayInput interface {
	pulumi.Input

	ToGalleryApplicationVersionArrayOutput() GalleryApplicationVersionArrayOutput
	ToGalleryApplicationVersionArrayOutputWithContext(context.Context) GalleryApplicationVersionArrayOutput
}

type GalleryApplicationVersionArray []GalleryApplicationVersionInput

func (GalleryApplicationVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GalleryApplicationVersion)(nil)).Elem()
}

func (i GalleryApplicationVersionArray) ToGalleryApplicationVersionArrayOutput() GalleryApplicationVersionArrayOutput {
	return i.ToGalleryApplicationVersionArrayOutputWithContext(context.Background())
}

func (i GalleryApplicationVersionArray) ToGalleryApplicationVersionArrayOutputWithContext(ctx context.Context) GalleryApplicationVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryApplicationVersionArrayOutput)
}

// GalleryApplicationVersionMapInput is an input type that accepts GalleryApplicationVersionMap and GalleryApplicationVersionMapOutput values.
// You can construct a concrete instance of `GalleryApplicationVersionMapInput` via:
//
//	GalleryApplicationVersionMap{ "key": GalleryApplicationVersionArgs{...} }
type GalleryApplicationVersionMapInput interface {
	pulumi.Input

	ToGalleryApplicationVersionMapOutput() GalleryApplicationVersionMapOutput
	ToGalleryApplicationVersionMapOutputWithContext(context.Context) GalleryApplicationVersionMapOutput
}

type GalleryApplicationVersionMap map[string]GalleryApplicationVersionInput

func (GalleryApplicationVersionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GalleryApplicationVersion)(nil)).Elem()
}

func (i GalleryApplicationVersionMap) ToGalleryApplicationVersionMapOutput() GalleryApplicationVersionMapOutput {
	return i.ToGalleryApplicationVersionMapOutputWithContext(context.Background())
}

func (i GalleryApplicationVersionMap) ToGalleryApplicationVersionMapOutputWithContext(ctx context.Context) GalleryApplicationVersionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryApplicationVersionMapOutput)
}

type GalleryApplicationVersionOutput struct{ *pulumi.OutputState }

func (GalleryApplicationVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryApplicationVersion)(nil)).Elem()
}

func (o GalleryApplicationVersionOutput) ToGalleryApplicationVersionOutput() GalleryApplicationVersionOutput {
	return o
}

func (o GalleryApplicationVersionOutput) ToGalleryApplicationVersionOutputWithContext(ctx context.Context) GalleryApplicationVersionOutput {
	return o
}

// Should the Gallery Application reports health. Defaults to `false`.
func (o GalleryApplicationVersionOutput) EnableHealthCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GalleryApplicationVersion) pulumi.BoolPtrOutput { return v.EnableHealthCheck }).(pulumi.BoolPtrOutput)
}

// The end of life date in RFC3339 format of the Gallery Application Version.
func (o GalleryApplicationVersionOutput) EndOfLifeDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryApplicationVersion) pulumi.StringPtrOutput { return v.EndOfLifeDate }).(pulumi.StringPtrOutput)
}

// Should the Gallery Application Version be excluded from the `latest` filter? If set to `true` this Gallery Application Version won't be returned for the `latest` version. Defaults to `false`.
func (o GalleryApplicationVersionOutput) ExcludeFromLatest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GalleryApplicationVersion) pulumi.BoolPtrOutput { return v.ExcludeFromLatest }).(pulumi.BoolPtrOutput)
}

// The ID of the Gallery Application. Changing this forces a new resource to be created.
func (o GalleryApplicationVersionOutput) GalleryApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *GalleryApplicationVersion) pulumi.StringOutput { return v.GalleryApplicationId }).(pulumi.StringOutput)
}

// The Azure Region where the Gallery Application Version exists. Changing this forces a new resource to be created.
func (o GalleryApplicationVersionOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *GalleryApplicationVersion) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// A `manageAction` block as defined below.
func (o GalleryApplicationVersionOutput) ManageAction() GalleryApplicationVersionManageActionOutput {
	return o.ApplyT(func(v *GalleryApplicationVersion) GalleryApplicationVersionManageActionOutput { return v.ManageAction }).(GalleryApplicationVersionManageActionOutput)
}

// The version name of the Gallery Application Version, such as `1.0.0`. Changing this forces a new resource to be created.
func (o GalleryApplicationVersionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *GalleryApplicationVersion) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A `source` block as defined below.
func (o GalleryApplicationVersionOutput) Source() GalleryApplicationVersionSourceOutput {
	return o.ApplyT(func(v *GalleryApplicationVersion) GalleryApplicationVersionSourceOutput { return v.Source }).(GalleryApplicationVersionSourceOutput)
}

// A mapping of tags to assign to the Gallery Application Version.
func (o GalleryApplicationVersionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GalleryApplicationVersion) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// One or more `targetRegion` blocks as defined below.
func (o GalleryApplicationVersionOutput) TargetRegions() GalleryApplicationVersionTargetRegionArrayOutput {
	return o.ApplyT(func(v *GalleryApplicationVersion) GalleryApplicationVersionTargetRegionArrayOutput {
		return v.TargetRegions
	}).(GalleryApplicationVersionTargetRegionArrayOutput)
}

type GalleryApplicationVersionArrayOutput struct{ *pulumi.OutputState }

func (GalleryApplicationVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GalleryApplicationVersion)(nil)).Elem()
}

func (o GalleryApplicationVersionArrayOutput) ToGalleryApplicationVersionArrayOutput() GalleryApplicationVersionArrayOutput {
	return o
}

func (o GalleryApplicationVersionArrayOutput) ToGalleryApplicationVersionArrayOutputWithContext(ctx context.Context) GalleryApplicationVersionArrayOutput {
	return o
}

func (o GalleryApplicationVersionArrayOutput) Index(i pulumi.IntInput) GalleryApplicationVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GalleryApplicationVersion {
		return vs[0].([]*GalleryApplicationVersion)[vs[1].(int)]
	}).(GalleryApplicationVersionOutput)
}

type GalleryApplicationVersionMapOutput struct{ *pulumi.OutputState }

func (GalleryApplicationVersionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GalleryApplicationVersion)(nil)).Elem()
}

func (o GalleryApplicationVersionMapOutput) ToGalleryApplicationVersionMapOutput() GalleryApplicationVersionMapOutput {
	return o
}

func (o GalleryApplicationVersionMapOutput) ToGalleryApplicationVersionMapOutputWithContext(ctx context.Context) GalleryApplicationVersionMapOutput {
	return o
}

func (o GalleryApplicationVersionMapOutput) MapIndex(k pulumi.StringInput) GalleryApplicationVersionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GalleryApplicationVersion {
		return vs[0].(map[string]*GalleryApplicationVersion)[vs[1].(string)]
	}).(GalleryApplicationVersionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GalleryApplicationVersionInput)(nil)).Elem(), &GalleryApplicationVersion{})
	pulumi.RegisterInputType(reflect.TypeOf((*GalleryApplicationVersionArrayInput)(nil)).Elem(), GalleryApplicationVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GalleryApplicationVersionMapInput)(nil)).Elem(), GalleryApplicationVersionMap{})
	pulumi.RegisterOutputType(GalleryApplicationVersionOutput{})
	pulumi.RegisterOutputType(GalleryApplicationVersionArrayOutput{})
	pulumi.RegisterOutputType(GalleryApplicationVersionMapOutput{})
}
