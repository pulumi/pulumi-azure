// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Virtual Machine Gallery Application Assignment.
//
// > **Note:** Gallery Application Assignments can be defined either directly on `compute.LinuxVirtualMachine` and `compute.WindowsVirtualMachine` resources, or using the `compute.GalleryApplicationAssignment` resource - but the two approaches cannot be used together. If both are used with the same Virtual Machine, spurious changes will occur. It's recommended to use `ignoreChanges` for the `galleryApplication` block on the associated virtual machine resources, to avoid a persistent diff when using this resource.
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := compute.LookupVirtualMachine(ctx, &compute.LookupVirtualMachineArgs{
//				Name:              "example-vm",
//				ResourceGroupName: "example-resources-vm",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resources"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleSharedImageGallery, err := compute.NewSharedImageGallery(ctx, "example", &compute.SharedImageGalleryArgs{
//				Name:              pulumi.String("examplegallery"),
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//			})
//			if err != nil {
//				return err
//			}
//			exampleGalleryApplication, err := compute.NewGalleryApplication(ctx, "example", &compute.GalleryApplicationArgs{
//				Name:            pulumi.String("example-app"),
//				GalleryId:       exampleSharedImageGallery.ID(),
//				Location:        exampleResourceGroup.Location,
//				SupportedOsType: pulumi.String("Linux"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleAccount, err := storage.NewAccount(ctx, "example", &storage.AccountArgs{
//				Name:                   pulumi.String("examplestorage"),
//				ResourceGroupName:      exampleResourceGroup.Name,
//				Location:               exampleResourceGroup.Location,
//				AccountTier:            pulumi.String("Standard"),
//				AccountReplicationType: pulumi.String("LRS"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleContainer, err := storage.NewContainer(ctx, "example", &storage.ContainerArgs{
//				Name:                pulumi.String("example-container"),
//				StorageAccountName:  exampleAccount.Name,
//				ContainerAccessType: pulumi.String("blob"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleBlob, err := storage.NewBlob(ctx, "example", &storage.BlobArgs{
//				Name:                 pulumi.String("scripts"),
//				StorageAccountName:   exampleAccount.Name,
//				StorageContainerName: exampleContainer.Name,
//				Type:                 pulumi.String("Block"),
//				SourceContent:        pulumi.String("[scripts file content]"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleGalleryApplicationVersion, err := compute.NewGalleryApplicationVersion(ctx, "example", &compute.GalleryApplicationVersionArgs{
//				Name:                 pulumi.String("0.0.1"),
//				GalleryApplicationId: exampleGalleryApplication.ID(),
//				Location:             exampleGalleryApplication.Location,
//				ManageAction: &compute.GalleryApplicationVersionManageActionArgs{
//					Install: pulumi.String("[install command]"),
//					Remove:  pulumi.String("[remove command]"),
//				},
//				Source: &compute.GalleryApplicationVersionSourceArgs{
//					MediaLink: exampleBlob.ID(),
//				},
//				TargetRegions: compute.GalleryApplicationVersionTargetRegionArray{
//					&compute.GalleryApplicationVersionTargetRegionArgs{
//						Name:                 exampleGalleryApplication.Location,
//						RegionalReplicaCount: pulumi.Int(1),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewGalleryApplicationAssignment(ctx, "example", &compute.GalleryApplicationAssignmentArgs{
//				GalleryApplicationVersionId: exampleGalleryApplicationVersion.ID(),
//				VirtualMachineId:            pulumi.String(example.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This resource uses the following Azure API Providers:
//
// * `Microsoft.Compute`: 2024-03-01
//
// ## Import
//
// Virtual Machine Gallery Application Assignments can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:compute/galleryApplicationAssignment:GalleryApplicationAssignment example subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/virtualMachines/machine1|/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Compute/galleries/gallery1/applications/galleryApplication1/versions/galleryApplicationVersion1
// ```
type GalleryApplicationAssignment struct {
	pulumi.CustomResourceState

	// Specifies the URI to an Azure Blob that will replace the default configuration for the package if provided. Changing this forces a new resource to be created.
	ConfigurationBlobUri pulumi.StringPtrOutput `pulumi:"configurationBlobUri"`
	// The ID of the Gallery Application Version. Changing this forces a new resource to be created.
	GalleryApplicationVersionId pulumi.StringOutput `pulumi:"galleryApplicationVersionId"`
	// Specifies the order in which the packages have to be installed. Possible values are between `0` and `2147483647`. Defaults to `0`.
	Order pulumi.IntPtrOutput `pulumi:"order"`
	// Specifies a passthrough value for more generic context. This field can be any valid `string` value. Changing this forces a new resource to be created.
	Tag pulumi.StringPtrOutput `pulumi:"tag"`
	// The ID of the Virtual Machine. Changing this forces a new resource to be created.
	VirtualMachineId pulumi.StringOutput `pulumi:"virtualMachineId"`
}

// NewGalleryApplicationAssignment registers a new resource with the given unique name, arguments, and options.
func NewGalleryApplicationAssignment(ctx *pulumi.Context,
	name string, args *GalleryApplicationAssignmentArgs, opts ...pulumi.ResourceOption) (*GalleryApplicationAssignment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GalleryApplicationVersionId == nil {
		return nil, errors.New("invalid value for required argument 'GalleryApplicationVersionId'")
	}
	if args.VirtualMachineId == nil {
		return nil, errors.New("invalid value for required argument 'VirtualMachineId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GalleryApplicationAssignment
	err := ctx.RegisterResource("azure:compute/galleryApplicationAssignment:GalleryApplicationAssignment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGalleryApplicationAssignment gets an existing GalleryApplicationAssignment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGalleryApplicationAssignment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GalleryApplicationAssignmentState, opts ...pulumi.ResourceOption) (*GalleryApplicationAssignment, error) {
	var resource GalleryApplicationAssignment
	err := ctx.ReadResource("azure:compute/galleryApplicationAssignment:GalleryApplicationAssignment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GalleryApplicationAssignment resources.
type galleryApplicationAssignmentState struct {
	// Specifies the URI to an Azure Blob that will replace the default configuration for the package if provided. Changing this forces a new resource to be created.
	ConfigurationBlobUri *string `pulumi:"configurationBlobUri"`
	// The ID of the Gallery Application Version. Changing this forces a new resource to be created.
	GalleryApplicationVersionId *string `pulumi:"galleryApplicationVersionId"`
	// Specifies the order in which the packages have to be installed. Possible values are between `0` and `2147483647`. Defaults to `0`.
	Order *int `pulumi:"order"`
	// Specifies a passthrough value for more generic context. This field can be any valid `string` value. Changing this forces a new resource to be created.
	Tag *string `pulumi:"tag"`
	// The ID of the Virtual Machine. Changing this forces a new resource to be created.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
}

type GalleryApplicationAssignmentState struct {
	// Specifies the URI to an Azure Blob that will replace the default configuration for the package if provided. Changing this forces a new resource to be created.
	ConfigurationBlobUri pulumi.StringPtrInput
	// The ID of the Gallery Application Version. Changing this forces a new resource to be created.
	GalleryApplicationVersionId pulumi.StringPtrInput
	// Specifies the order in which the packages have to be installed. Possible values are between `0` and `2147483647`. Defaults to `0`.
	Order pulumi.IntPtrInput
	// Specifies a passthrough value for more generic context. This field can be any valid `string` value. Changing this forces a new resource to be created.
	Tag pulumi.StringPtrInput
	// The ID of the Virtual Machine. Changing this forces a new resource to be created.
	VirtualMachineId pulumi.StringPtrInput
}

func (GalleryApplicationAssignmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*galleryApplicationAssignmentState)(nil)).Elem()
}

type galleryApplicationAssignmentArgs struct {
	// Specifies the URI to an Azure Blob that will replace the default configuration for the package if provided. Changing this forces a new resource to be created.
	ConfigurationBlobUri *string `pulumi:"configurationBlobUri"`
	// The ID of the Gallery Application Version. Changing this forces a new resource to be created.
	GalleryApplicationVersionId string `pulumi:"galleryApplicationVersionId"`
	// Specifies the order in which the packages have to be installed. Possible values are between `0` and `2147483647`. Defaults to `0`.
	Order *int `pulumi:"order"`
	// Specifies a passthrough value for more generic context. This field can be any valid `string` value. Changing this forces a new resource to be created.
	Tag *string `pulumi:"tag"`
	// The ID of the Virtual Machine. Changing this forces a new resource to be created.
	VirtualMachineId string `pulumi:"virtualMachineId"`
}

// The set of arguments for constructing a GalleryApplicationAssignment resource.
type GalleryApplicationAssignmentArgs struct {
	// Specifies the URI to an Azure Blob that will replace the default configuration for the package if provided. Changing this forces a new resource to be created.
	ConfigurationBlobUri pulumi.StringPtrInput
	// The ID of the Gallery Application Version. Changing this forces a new resource to be created.
	GalleryApplicationVersionId pulumi.StringInput
	// Specifies the order in which the packages have to be installed. Possible values are between `0` and `2147483647`. Defaults to `0`.
	Order pulumi.IntPtrInput
	// Specifies a passthrough value for more generic context. This field can be any valid `string` value. Changing this forces a new resource to be created.
	Tag pulumi.StringPtrInput
	// The ID of the Virtual Machine. Changing this forces a new resource to be created.
	VirtualMachineId pulumi.StringInput
}

func (GalleryApplicationAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*galleryApplicationAssignmentArgs)(nil)).Elem()
}

type GalleryApplicationAssignmentInput interface {
	pulumi.Input

	ToGalleryApplicationAssignmentOutput() GalleryApplicationAssignmentOutput
	ToGalleryApplicationAssignmentOutputWithContext(ctx context.Context) GalleryApplicationAssignmentOutput
}

func (*GalleryApplicationAssignment) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryApplicationAssignment)(nil)).Elem()
}

func (i *GalleryApplicationAssignment) ToGalleryApplicationAssignmentOutput() GalleryApplicationAssignmentOutput {
	return i.ToGalleryApplicationAssignmentOutputWithContext(context.Background())
}

func (i *GalleryApplicationAssignment) ToGalleryApplicationAssignmentOutputWithContext(ctx context.Context) GalleryApplicationAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryApplicationAssignmentOutput)
}

// GalleryApplicationAssignmentArrayInput is an input type that accepts GalleryApplicationAssignmentArray and GalleryApplicationAssignmentArrayOutput values.
// You can construct a concrete instance of `GalleryApplicationAssignmentArrayInput` via:
//
//	GalleryApplicationAssignmentArray{ GalleryApplicationAssignmentArgs{...} }
type GalleryApplicationAssignmentArrayInput interface {
	pulumi.Input

	ToGalleryApplicationAssignmentArrayOutput() GalleryApplicationAssignmentArrayOutput
	ToGalleryApplicationAssignmentArrayOutputWithContext(context.Context) GalleryApplicationAssignmentArrayOutput
}

type GalleryApplicationAssignmentArray []GalleryApplicationAssignmentInput

func (GalleryApplicationAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GalleryApplicationAssignment)(nil)).Elem()
}

func (i GalleryApplicationAssignmentArray) ToGalleryApplicationAssignmentArrayOutput() GalleryApplicationAssignmentArrayOutput {
	return i.ToGalleryApplicationAssignmentArrayOutputWithContext(context.Background())
}

func (i GalleryApplicationAssignmentArray) ToGalleryApplicationAssignmentArrayOutputWithContext(ctx context.Context) GalleryApplicationAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryApplicationAssignmentArrayOutput)
}

// GalleryApplicationAssignmentMapInput is an input type that accepts GalleryApplicationAssignmentMap and GalleryApplicationAssignmentMapOutput values.
// You can construct a concrete instance of `GalleryApplicationAssignmentMapInput` via:
//
//	GalleryApplicationAssignmentMap{ "key": GalleryApplicationAssignmentArgs{...} }
type GalleryApplicationAssignmentMapInput interface {
	pulumi.Input

	ToGalleryApplicationAssignmentMapOutput() GalleryApplicationAssignmentMapOutput
	ToGalleryApplicationAssignmentMapOutputWithContext(context.Context) GalleryApplicationAssignmentMapOutput
}

type GalleryApplicationAssignmentMap map[string]GalleryApplicationAssignmentInput

func (GalleryApplicationAssignmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GalleryApplicationAssignment)(nil)).Elem()
}

func (i GalleryApplicationAssignmentMap) ToGalleryApplicationAssignmentMapOutput() GalleryApplicationAssignmentMapOutput {
	return i.ToGalleryApplicationAssignmentMapOutputWithContext(context.Background())
}

func (i GalleryApplicationAssignmentMap) ToGalleryApplicationAssignmentMapOutputWithContext(ctx context.Context) GalleryApplicationAssignmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryApplicationAssignmentMapOutput)
}

type GalleryApplicationAssignmentOutput struct{ *pulumi.OutputState }

func (GalleryApplicationAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryApplicationAssignment)(nil)).Elem()
}

func (o GalleryApplicationAssignmentOutput) ToGalleryApplicationAssignmentOutput() GalleryApplicationAssignmentOutput {
	return o
}

func (o GalleryApplicationAssignmentOutput) ToGalleryApplicationAssignmentOutputWithContext(ctx context.Context) GalleryApplicationAssignmentOutput {
	return o
}

// Specifies the URI to an Azure Blob that will replace the default configuration for the package if provided. Changing this forces a new resource to be created.
func (o GalleryApplicationAssignmentOutput) ConfigurationBlobUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryApplicationAssignment) pulumi.StringPtrOutput { return v.ConfigurationBlobUri }).(pulumi.StringPtrOutput)
}

// The ID of the Gallery Application Version. Changing this forces a new resource to be created.
func (o GalleryApplicationAssignmentOutput) GalleryApplicationVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v *GalleryApplicationAssignment) pulumi.StringOutput { return v.GalleryApplicationVersionId }).(pulumi.StringOutput)
}

// Specifies the order in which the packages have to be installed. Possible values are between `0` and `2147483647`. Defaults to `0`.
func (o GalleryApplicationAssignmentOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GalleryApplicationAssignment) pulumi.IntPtrOutput { return v.Order }).(pulumi.IntPtrOutput)
}

// Specifies a passthrough value for more generic context. This field can be any valid `string` value. Changing this forces a new resource to be created.
func (o GalleryApplicationAssignmentOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryApplicationAssignment) pulumi.StringPtrOutput { return v.Tag }).(pulumi.StringPtrOutput)
}

// The ID of the Virtual Machine. Changing this forces a new resource to be created.
func (o GalleryApplicationAssignmentOutput) VirtualMachineId() pulumi.StringOutput {
	return o.ApplyT(func(v *GalleryApplicationAssignment) pulumi.StringOutput { return v.VirtualMachineId }).(pulumi.StringOutput)
}

type GalleryApplicationAssignmentArrayOutput struct{ *pulumi.OutputState }

func (GalleryApplicationAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GalleryApplicationAssignment)(nil)).Elem()
}

func (o GalleryApplicationAssignmentArrayOutput) ToGalleryApplicationAssignmentArrayOutput() GalleryApplicationAssignmentArrayOutput {
	return o
}

func (o GalleryApplicationAssignmentArrayOutput) ToGalleryApplicationAssignmentArrayOutputWithContext(ctx context.Context) GalleryApplicationAssignmentArrayOutput {
	return o
}

func (o GalleryApplicationAssignmentArrayOutput) Index(i pulumi.IntInput) GalleryApplicationAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GalleryApplicationAssignment {
		return vs[0].([]*GalleryApplicationAssignment)[vs[1].(int)]
	}).(GalleryApplicationAssignmentOutput)
}

type GalleryApplicationAssignmentMapOutput struct{ *pulumi.OutputState }

func (GalleryApplicationAssignmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GalleryApplicationAssignment)(nil)).Elem()
}

func (o GalleryApplicationAssignmentMapOutput) ToGalleryApplicationAssignmentMapOutput() GalleryApplicationAssignmentMapOutput {
	return o
}

func (o GalleryApplicationAssignmentMapOutput) ToGalleryApplicationAssignmentMapOutputWithContext(ctx context.Context) GalleryApplicationAssignmentMapOutput {
	return o
}

func (o GalleryApplicationAssignmentMapOutput) MapIndex(k pulumi.StringInput) GalleryApplicationAssignmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GalleryApplicationAssignment {
		return vs[0].(map[string]*GalleryApplicationAssignment)[vs[1].(string)]
	}).(GalleryApplicationAssignmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GalleryApplicationAssignmentInput)(nil)).Elem(), &GalleryApplicationAssignment{})
	pulumi.RegisterInputType(reflect.TypeOf((*GalleryApplicationAssignmentArrayInput)(nil)).Elem(), GalleryApplicationAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GalleryApplicationAssignmentMapInput)(nil)).Elem(), GalleryApplicationAssignmentMap{})
	pulumi.RegisterOutputType(GalleryApplicationAssignmentOutput{})
	pulumi.RegisterOutputType(GalleryApplicationAssignmentArrayOutput{})
	pulumi.RegisterOutputType(GalleryApplicationAssignmentMapOutput{})
}
