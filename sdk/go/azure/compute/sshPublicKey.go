// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages a SSH Public Key.
//
// ## Import
//
// SSH Public Keys can be imported using the `resource id`, e.g.
//
// ```sh
//  $ pulumi import azure:compute/sshPublicKey:SshPublicKey example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Compute/SshPublicKeys/mySshPublicKeyName1
// ```
type SshPublicKey struct {
	pulumi.CustomResourceState

	// The Azure Region where the SSH Public Key should exist. Changing this forces a new SSH Public Key to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name which should be used for this SSH Public Key. Changing this forces a new SSH Public Key to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// SSH public key used to authenticate to a virtual machine through ssh. the provided public key needs to be at least 2048-bit and in ssh-rsa format.
	PublicKey pulumi.StringOutput `pulumi:"publicKey"`
	// The name of the Resource Group where the SSH Public Key should exist. Changing this forces a new SSH Public Key to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A mapping of tags which should be assigned to the SSH Public Key.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewSshPublicKey registers a new resource with the given unique name, arguments, and options.
func NewSshPublicKey(ctx *pulumi.Context,
	name string, args *SshPublicKeyArgs, opts ...pulumi.ResourceOption) (*SshPublicKey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PublicKey == nil {
		return nil, errors.New("invalid value for required argument 'PublicKey'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	var resource SshPublicKey
	err := ctx.RegisterResource("azure:compute/sshPublicKey:SshPublicKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSshPublicKey gets an existing SshPublicKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSshPublicKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SshPublicKeyState, opts ...pulumi.ResourceOption) (*SshPublicKey, error) {
	var resource SshPublicKey
	err := ctx.ReadResource("azure:compute/sshPublicKey:SshPublicKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SshPublicKey resources.
type sshPublicKeyState struct {
	// The Azure Region where the SSH Public Key should exist. Changing this forces a new SSH Public Key to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this SSH Public Key. Changing this forces a new SSH Public Key to be created.
	Name *string `pulumi:"name"`
	// SSH public key used to authenticate to a virtual machine through ssh. the provided public key needs to be at least 2048-bit and in ssh-rsa format.
	PublicKey *string `pulumi:"publicKey"`
	// The name of the Resource Group where the SSH Public Key should exist. Changing this forces a new SSH Public Key to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A mapping of tags which should be assigned to the SSH Public Key.
	Tags map[string]string `pulumi:"tags"`
}

type SshPublicKeyState struct {
	// The Azure Region where the SSH Public Key should exist. Changing this forces a new SSH Public Key to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this SSH Public Key. Changing this forces a new SSH Public Key to be created.
	Name pulumi.StringPtrInput
	// SSH public key used to authenticate to a virtual machine through ssh. the provided public key needs to be at least 2048-bit and in ssh-rsa format.
	PublicKey pulumi.StringPtrInput
	// The name of the Resource Group where the SSH Public Key should exist. Changing this forces a new SSH Public Key to be created.
	ResourceGroupName pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the SSH Public Key.
	Tags pulumi.StringMapInput
}

func (SshPublicKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*sshPublicKeyState)(nil)).Elem()
}

type sshPublicKeyArgs struct {
	// The Azure Region where the SSH Public Key should exist. Changing this forces a new SSH Public Key to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this SSH Public Key. Changing this forces a new SSH Public Key to be created.
	Name *string `pulumi:"name"`
	// SSH public key used to authenticate to a virtual machine through ssh. the provided public key needs to be at least 2048-bit and in ssh-rsa format.
	PublicKey string `pulumi:"publicKey"`
	// The name of the Resource Group where the SSH Public Key should exist. Changing this forces a new SSH Public Key to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A mapping of tags which should be assigned to the SSH Public Key.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a SshPublicKey resource.
type SshPublicKeyArgs struct {
	// The Azure Region where the SSH Public Key should exist. Changing this forces a new SSH Public Key to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this SSH Public Key. Changing this forces a new SSH Public Key to be created.
	Name pulumi.StringPtrInput
	// SSH public key used to authenticate to a virtual machine through ssh. the provided public key needs to be at least 2048-bit and in ssh-rsa format.
	PublicKey pulumi.StringInput
	// The name of the Resource Group where the SSH Public Key should exist. Changing this forces a new SSH Public Key to be created.
	ResourceGroupName pulumi.StringInput
	// A mapping of tags which should be assigned to the SSH Public Key.
	Tags pulumi.StringMapInput
}

func (SshPublicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sshPublicKeyArgs)(nil)).Elem()
}

type SshPublicKeyInput interface {
	pulumi.Input

	ToSshPublicKeyOutput() SshPublicKeyOutput
	ToSshPublicKeyOutputWithContext(ctx context.Context) SshPublicKeyOutput
}

func (SshPublicKey) ElementType() reflect.Type {
	return reflect.TypeOf((*SshPublicKey)(nil)).Elem()
}

func (i SshPublicKey) ToSshPublicKeyOutput() SshPublicKeyOutput {
	return i.ToSshPublicKeyOutputWithContext(context.Background())
}

func (i SshPublicKey) ToSshPublicKeyOutputWithContext(ctx context.Context) SshPublicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshPublicKeyOutput)
}

type SshPublicKeyOutput struct {
	*pulumi.OutputState
}

func (SshPublicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SshPublicKeyOutput)(nil)).Elem()
}

func (o SshPublicKeyOutput) ToSshPublicKeyOutput() SshPublicKeyOutput {
	return o
}

func (o SshPublicKeyOutput) ToSshPublicKeyOutputWithContext(ctx context.Context) SshPublicKeyOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(SshPublicKeyOutput{})
}
