// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Shared Image within a Shared Image Gallery.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/compute"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleSharedImageGallery, err := compute.NewSharedImageGallery(ctx, "exampleSharedImageGallery", &compute.SharedImageGalleryArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				Description:       pulumi.String("Shared images and things."),
//				Tags: pulumi.StringMap{
//					"Hello": pulumi.String("There"),
//					"World": pulumi.String("Example"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewSharedImage(ctx, "exampleSharedImage", &compute.SharedImageArgs{
//				GalleryName:       exampleSharedImageGallery.Name,
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				OsType:            pulumi.String("Linux"),
//				Identifier: &compute.SharedImageIdentifierArgs{
//					Publisher: pulumi.String("PublisherName"),
//					Offer:     pulumi.String("OfferName"),
//					Sku:       pulumi.String("ExampleSku"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Shared Images can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:compute/sharedImage:SharedImage image1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/galleries/gallery1/images/image1
//
// ```
type SharedImage struct {
	pulumi.CustomResourceState

	// Specifies if the Shared Image supports Accelerated Network. Changing this forces a new resource to be created.
	AcceleratedNetworkSupportEnabled pulumi.BoolPtrOutput `pulumi:"acceleratedNetworkSupportEnabled"`
	// CPU architecture supported by an OS. Possible values are `x64` and `Arm64`. Defaults to `x64`. Changing this forces a new resource to be created.
	Architecture pulumi.StringPtrOutput `pulumi:"architecture"`
	// Specifies if Confidential Virtual Machines enabled. It will enable all the features of trusted, with higher confidentiality features for isolate machines or encrypted data. Available for Gen2 machines. Changing this forces a new resource to be created.
	//
	// > **Note:**: Only one of `trustedLaunchSupported`, `trustedLaunchEnabled`, `confidentialVmSupported` and `confidentialVmEnabled` can be specified.
	ConfidentialVmEnabled pulumi.BoolPtrOutput `pulumi:"confidentialVmEnabled"`
	// Specifies if supports creation of both Confidential virtual machines and Gen2 virtual machines with standard security from a compatible Gen2 OS disk VHD or Gen2 Managed image. Changing this forces a new resource to be created.
	ConfidentialVmSupported pulumi.BoolPtrOutput `pulumi:"confidentialVmSupported"`
	// A description of this Shared Image.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// One or more Disk Types not allowed for the Image. Possible values include `Standard_LRS` and `Premium_LRS`.
	DiskTypesNotAlloweds pulumi.StringArrayOutput `pulumi:"diskTypesNotAlloweds"`
	// The end of life date in RFC3339 format of the Image.
	EndOfLifeDate pulumi.StringPtrOutput `pulumi:"endOfLifeDate"`
	// The End User Licence Agreement for the Shared Image. Changing this forces a new resource to be created.
	Eula pulumi.StringPtrOutput `pulumi:"eula"`
	// Specifies the name of the Shared Image Gallery in which this Shared Image should exist. Changing this forces a new resource to be created.
	GalleryName pulumi.StringOutput `pulumi:"galleryName"`
	// The generation of HyperV that the Virtual Machine used to create the Shared Image is based on. Possible values are `V1` and `V2`. Defaults to `V1`. Changing this forces a new resource to be created.
	HyperVGeneration pulumi.StringPtrOutput `pulumi:"hyperVGeneration"`
	// An `identifier` block as defined below.
	Identifier SharedImageIdentifierOutput `pulumi:"identifier"`
	// Specifies the supported Azure location where the Shared Image Gallery exists. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// Maximum memory in GB recommended for the Image.
	MaxRecommendedMemoryInGb pulumi.IntPtrOutput `pulumi:"maxRecommendedMemoryInGb"`
	// Maximum count of vCPUs recommended for the Image.
	MaxRecommendedVcpuCount pulumi.IntPtrOutput `pulumi:"maxRecommendedVcpuCount"`
	// Minimum memory in GB recommended for the Image.
	MinRecommendedMemoryInGb pulumi.IntPtrOutput `pulumi:"minRecommendedMemoryInGb"`
	// Minimum count of vCPUs recommended for the Image.
	MinRecommendedVcpuCount pulumi.IntPtrOutput `pulumi:"minRecommendedVcpuCount"`
	// Specifies the name of the Shared Image. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The type of Operating System present in this Shared Image. Possible values are `Linux` and `Windows`. Changing this forces a new resource to be created.
	OsType pulumi.StringOutput `pulumi:"osType"`
	// The URI containing the Privacy Statement associated with this Shared Image. Changing this forces a new resource to be created.
	PrivacyStatementUri pulumi.StringPtrOutput `pulumi:"privacyStatementUri"`
	// A `purchasePlan` block as defined below.
	PurchasePlan SharedImagePurchasePlanPtrOutput `pulumi:"purchasePlan"`
	// The URI containing the Release Notes associated with this Shared Image.
	ReleaseNoteUri pulumi.StringPtrOutput `pulumi:"releaseNoteUri"`
	// The name of the resource group in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// Specifies that the Operating System used inside this Image has not been Generalized (for example, `sysprep` on Windows has not been run). Changing this forces a new resource to be created.
	//
	// !> **Note:** It's recommended to Generalize images where possible - Specialized Images reuse the same UUID internally within each Virtual Machine, which can have unintended side-effects.
	Specialized pulumi.BoolPtrOutput `pulumi:"specialized"`
	// A mapping of tags to assign to the Shared Image.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Specifies if Trusted Launch has to be enabled for the Virtual Machine created from the Shared Image. Changing this forces a new resource to be created.
	TrustedLaunchEnabled pulumi.BoolPtrOutput `pulumi:"trustedLaunchEnabled"`
	// Specifies if supports creation of both Trusted Launch virtual machines and Gen2 virtual machines with standard security created from the Shared Image. Changing this forces a new resource to be created.
	TrustedLaunchSupported pulumi.BoolPtrOutput `pulumi:"trustedLaunchSupported"`
}

// NewSharedImage registers a new resource with the given unique name, arguments, and options.
func NewSharedImage(ctx *pulumi.Context,
	name string, args *SharedImageArgs, opts ...pulumi.ResourceOption) (*SharedImage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GalleryName == nil {
		return nil, errors.New("invalid value for required argument 'GalleryName'")
	}
	if args.Identifier == nil {
		return nil, errors.New("invalid value for required argument 'Identifier'")
	}
	if args.OsType == nil {
		return nil, errors.New("invalid value for required argument 'OsType'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SharedImage
	err := ctx.RegisterResource("azure:compute/sharedImage:SharedImage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSharedImage gets an existing SharedImage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSharedImage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SharedImageState, opts ...pulumi.ResourceOption) (*SharedImage, error) {
	var resource SharedImage
	err := ctx.ReadResource("azure:compute/sharedImage:SharedImage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SharedImage resources.
type sharedImageState struct {
	// Specifies if the Shared Image supports Accelerated Network. Changing this forces a new resource to be created.
	AcceleratedNetworkSupportEnabled *bool `pulumi:"acceleratedNetworkSupportEnabled"`
	// CPU architecture supported by an OS. Possible values are `x64` and `Arm64`. Defaults to `x64`. Changing this forces a new resource to be created.
	Architecture *string `pulumi:"architecture"`
	// Specifies if Confidential Virtual Machines enabled. It will enable all the features of trusted, with higher confidentiality features for isolate machines or encrypted data. Available for Gen2 machines. Changing this forces a new resource to be created.
	//
	// > **Note:**: Only one of `trustedLaunchSupported`, `trustedLaunchEnabled`, `confidentialVmSupported` and `confidentialVmEnabled` can be specified.
	ConfidentialVmEnabled *bool `pulumi:"confidentialVmEnabled"`
	// Specifies if supports creation of both Confidential virtual machines and Gen2 virtual machines with standard security from a compatible Gen2 OS disk VHD or Gen2 Managed image. Changing this forces a new resource to be created.
	ConfidentialVmSupported *bool `pulumi:"confidentialVmSupported"`
	// A description of this Shared Image.
	Description *string `pulumi:"description"`
	// One or more Disk Types not allowed for the Image. Possible values include `Standard_LRS` and `Premium_LRS`.
	DiskTypesNotAlloweds []string `pulumi:"diskTypesNotAlloweds"`
	// The end of life date in RFC3339 format of the Image.
	EndOfLifeDate *string `pulumi:"endOfLifeDate"`
	// The End User Licence Agreement for the Shared Image. Changing this forces a new resource to be created.
	Eula *string `pulumi:"eula"`
	// Specifies the name of the Shared Image Gallery in which this Shared Image should exist. Changing this forces a new resource to be created.
	GalleryName *string `pulumi:"galleryName"`
	// The generation of HyperV that the Virtual Machine used to create the Shared Image is based on. Possible values are `V1` and `V2`. Defaults to `V1`. Changing this forces a new resource to be created.
	HyperVGeneration *string `pulumi:"hyperVGeneration"`
	// An `identifier` block as defined below.
	Identifier *SharedImageIdentifier `pulumi:"identifier"`
	// Specifies the supported Azure location where the Shared Image Gallery exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Maximum memory in GB recommended for the Image.
	MaxRecommendedMemoryInGb *int `pulumi:"maxRecommendedMemoryInGb"`
	// Maximum count of vCPUs recommended for the Image.
	MaxRecommendedVcpuCount *int `pulumi:"maxRecommendedVcpuCount"`
	// Minimum memory in GB recommended for the Image.
	MinRecommendedMemoryInGb *int `pulumi:"minRecommendedMemoryInGb"`
	// Minimum count of vCPUs recommended for the Image.
	MinRecommendedVcpuCount *int `pulumi:"minRecommendedVcpuCount"`
	// Specifies the name of the Shared Image. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The type of Operating System present in this Shared Image. Possible values are `Linux` and `Windows`. Changing this forces a new resource to be created.
	OsType *string `pulumi:"osType"`
	// The URI containing the Privacy Statement associated with this Shared Image. Changing this forces a new resource to be created.
	PrivacyStatementUri *string `pulumi:"privacyStatementUri"`
	// A `purchasePlan` block as defined below.
	PurchasePlan *SharedImagePurchasePlan `pulumi:"purchasePlan"`
	// The URI containing the Release Notes associated with this Shared Image.
	ReleaseNoteUri *string `pulumi:"releaseNoteUri"`
	// The name of the resource group in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// Specifies that the Operating System used inside this Image has not been Generalized (for example, `sysprep` on Windows has not been run). Changing this forces a new resource to be created.
	//
	// !> **Note:** It's recommended to Generalize images where possible - Specialized Images reuse the same UUID internally within each Virtual Machine, which can have unintended side-effects.
	Specialized *bool `pulumi:"specialized"`
	// A mapping of tags to assign to the Shared Image.
	Tags map[string]string `pulumi:"tags"`
	// Specifies if Trusted Launch has to be enabled for the Virtual Machine created from the Shared Image. Changing this forces a new resource to be created.
	TrustedLaunchEnabled *bool `pulumi:"trustedLaunchEnabled"`
	// Specifies if supports creation of both Trusted Launch virtual machines and Gen2 virtual machines with standard security created from the Shared Image. Changing this forces a new resource to be created.
	TrustedLaunchSupported *bool `pulumi:"trustedLaunchSupported"`
}

type SharedImageState struct {
	// Specifies if the Shared Image supports Accelerated Network. Changing this forces a new resource to be created.
	AcceleratedNetworkSupportEnabled pulumi.BoolPtrInput
	// CPU architecture supported by an OS. Possible values are `x64` and `Arm64`. Defaults to `x64`. Changing this forces a new resource to be created.
	Architecture pulumi.StringPtrInput
	// Specifies if Confidential Virtual Machines enabled. It will enable all the features of trusted, with higher confidentiality features for isolate machines or encrypted data. Available for Gen2 machines. Changing this forces a new resource to be created.
	//
	// > **Note:**: Only one of `trustedLaunchSupported`, `trustedLaunchEnabled`, `confidentialVmSupported` and `confidentialVmEnabled` can be specified.
	ConfidentialVmEnabled pulumi.BoolPtrInput
	// Specifies if supports creation of both Confidential virtual machines and Gen2 virtual machines with standard security from a compatible Gen2 OS disk VHD or Gen2 Managed image. Changing this forces a new resource to be created.
	ConfidentialVmSupported pulumi.BoolPtrInput
	// A description of this Shared Image.
	Description pulumi.StringPtrInput
	// One or more Disk Types not allowed for the Image. Possible values include `Standard_LRS` and `Premium_LRS`.
	DiskTypesNotAlloweds pulumi.StringArrayInput
	// The end of life date in RFC3339 format of the Image.
	EndOfLifeDate pulumi.StringPtrInput
	// The End User Licence Agreement for the Shared Image. Changing this forces a new resource to be created.
	Eula pulumi.StringPtrInput
	// Specifies the name of the Shared Image Gallery in which this Shared Image should exist. Changing this forces a new resource to be created.
	GalleryName pulumi.StringPtrInput
	// The generation of HyperV that the Virtual Machine used to create the Shared Image is based on. Possible values are `V1` and `V2`. Defaults to `V1`. Changing this forces a new resource to be created.
	HyperVGeneration pulumi.StringPtrInput
	// An `identifier` block as defined below.
	Identifier SharedImageIdentifierPtrInput
	// Specifies the supported Azure location where the Shared Image Gallery exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Maximum memory in GB recommended for the Image.
	MaxRecommendedMemoryInGb pulumi.IntPtrInput
	// Maximum count of vCPUs recommended for the Image.
	MaxRecommendedVcpuCount pulumi.IntPtrInput
	// Minimum memory in GB recommended for the Image.
	MinRecommendedMemoryInGb pulumi.IntPtrInput
	// Minimum count of vCPUs recommended for the Image.
	MinRecommendedVcpuCount pulumi.IntPtrInput
	// Specifies the name of the Shared Image. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The type of Operating System present in this Shared Image. Possible values are `Linux` and `Windows`. Changing this forces a new resource to be created.
	OsType pulumi.StringPtrInput
	// The URI containing the Privacy Statement associated with this Shared Image. Changing this forces a new resource to be created.
	PrivacyStatementUri pulumi.StringPtrInput
	// A `purchasePlan` block as defined below.
	PurchasePlan SharedImagePurchasePlanPtrInput
	// The URI containing the Release Notes associated with this Shared Image.
	ReleaseNoteUri pulumi.StringPtrInput
	// The name of the resource group in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// Specifies that the Operating System used inside this Image has not been Generalized (for example, `sysprep` on Windows has not been run). Changing this forces a new resource to be created.
	//
	// !> **Note:** It's recommended to Generalize images where possible - Specialized Images reuse the same UUID internally within each Virtual Machine, which can have unintended side-effects.
	Specialized pulumi.BoolPtrInput
	// A mapping of tags to assign to the Shared Image.
	Tags pulumi.StringMapInput
	// Specifies if Trusted Launch has to be enabled for the Virtual Machine created from the Shared Image. Changing this forces a new resource to be created.
	TrustedLaunchEnabled pulumi.BoolPtrInput
	// Specifies if supports creation of both Trusted Launch virtual machines and Gen2 virtual machines with standard security created from the Shared Image. Changing this forces a new resource to be created.
	TrustedLaunchSupported pulumi.BoolPtrInput
}

func (SharedImageState) ElementType() reflect.Type {
	return reflect.TypeOf((*sharedImageState)(nil)).Elem()
}

type sharedImageArgs struct {
	// Specifies if the Shared Image supports Accelerated Network. Changing this forces a new resource to be created.
	AcceleratedNetworkSupportEnabled *bool `pulumi:"acceleratedNetworkSupportEnabled"`
	// CPU architecture supported by an OS. Possible values are `x64` and `Arm64`. Defaults to `x64`. Changing this forces a new resource to be created.
	Architecture *string `pulumi:"architecture"`
	// Specifies if Confidential Virtual Machines enabled. It will enable all the features of trusted, with higher confidentiality features for isolate machines or encrypted data. Available for Gen2 machines. Changing this forces a new resource to be created.
	//
	// > **Note:**: Only one of `trustedLaunchSupported`, `trustedLaunchEnabled`, `confidentialVmSupported` and `confidentialVmEnabled` can be specified.
	ConfidentialVmEnabled *bool `pulumi:"confidentialVmEnabled"`
	// Specifies if supports creation of both Confidential virtual machines and Gen2 virtual machines with standard security from a compatible Gen2 OS disk VHD or Gen2 Managed image. Changing this forces a new resource to be created.
	ConfidentialVmSupported *bool `pulumi:"confidentialVmSupported"`
	// A description of this Shared Image.
	Description *string `pulumi:"description"`
	// One or more Disk Types not allowed for the Image. Possible values include `Standard_LRS` and `Premium_LRS`.
	DiskTypesNotAlloweds []string `pulumi:"diskTypesNotAlloweds"`
	// The end of life date in RFC3339 format of the Image.
	EndOfLifeDate *string `pulumi:"endOfLifeDate"`
	// The End User Licence Agreement for the Shared Image. Changing this forces a new resource to be created.
	Eula *string `pulumi:"eula"`
	// Specifies the name of the Shared Image Gallery in which this Shared Image should exist. Changing this forces a new resource to be created.
	GalleryName string `pulumi:"galleryName"`
	// The generation of HyperV that the Virtual Machine used to create the Shared Image is based on. Possible values are `V1` and `V2`. Defaults to `V1`. Changing this forces a new resource to be created.
	HyperVGeneration *string `pulumi:"hyperVGeneration"`
	// An `identifier` block as defined below.
	Identifier SharedImageIdentifier `pulumi:"identifier"`
	// Specifies the supported Azure location where the Shared Image Gallery exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Maximum memory in GB recommended for the Image.
	MaxRecommendedMemoryInGb *int `pulumi:"maxRecommendedMemoryInGb"`
	// Maximum count of vCPUs recommended for the Image.
	MaxRecommendedVcpuCount *int `pulumi:"maxRecommendedVcpuCount"`
	// Minimum memory in GB recommended for the Image.
	MinRecommendedMemoryInGb *int `pulumi:"minRecommendedMemoryInGb"`
	// Minimum count of vCPUs recommended for the Image.
	MinRecommendedVcpuCount *int `pulumi:"minRecommendedVcpuCount"`
	// Specifies the name of the Shared Image. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The type of Operating System present in this Shared Image. Possible values are `Linux` and `Windows`. Changing this forces a new resource to be created.
	OsType string `pulumi:"osType"`
	// The URI containing the Privacy Statement associated with this Shared Image. Changing this forces a new resource to be created.
	PrivacyStatementUri *string `pulumi:"privacyStatementUri"`
	// A `purchasePlan` block as defined below.
	PurchasePlan *SharedImagePurchasePlan `pulumi:"purchasePlan"`
	// The URI containing the Release Notes associated with this Shared Image.
	ReleaseNoteUri *string `pulumi:"releaseNoteUri"`
	// The name of the resource group in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Specifies that the Operating System used inside this Image has not been Generalized (for example, `sysprep` on Windows has not been run). Changing this forces a new resource to be created.
	//
	// !> **Note:** It's recommended to Generalize images where possible - Specialized Images reuse the same UUID internally within each Virtual Machine, which can have unintended side-effects.
	Specialized *bool `pulumi:"specialized"`
	// A mapping of tags to assign to the Shared Image.
	Tags map[string]string `pulumi:"tags"`
	// Specifies if Trusted Launch has to be enabled for the Virtual Machine created from the Shared Image. Changing this forces a new resource to be created.
	TrustedLaunchEnabled *bool `pulumi:"trustedLaunchEnabled"`
	// Specifies if supports creation of both Trusted Launch virtual machines and Gen2 virtual machines with standard security created from the Shared Image. Changing this forces a new resource to be created.
	TrustedLaunchSupported *bool `pulumi:"trustedLaunchSupported"`
}

// The set of arguments for constructing a SharedImage resource.
type SharedImageArgs struct {
	// Specifies if the Shared Image supports Accelerated Network. Changing this forces a new resource to be created.
	AcceleratedNetworkSupportEnabled pulumi.BoolPtrInput
	// CPU architecture supported by an OS. Possible values are `x64` and `Arm64`. Defaults to `x64`. Changing this forces a new resource to be created.
	Architecture pulumi.StringPtrInput
	// Specifies if Confidential Virtual Machines enabled. It will enable all the features of trusted, with higher confidentiality features for isolate machines or encrypted data. Available for Gen2 machines. Changing this forces a new resource to be created.
	//
	// > **Note:**: Only one of `trustedLaunchSupported`, `trustedLaunchEnabled`, `confidentialVmSupported` and `confidentialVmEnabled` can be specified.
	ConfidentialVmEnabled pulumi.BoolPtrInput
	// Specifies if supports creation of both Confidential virtual machines and Gen2 virtual machines with standard security from a compatible Gen2 OS disk VHD or Gen2 Managed image. Changing this forces a new resource to be created.
	ConfidentialVmSupported pulumi.BoolPtrInput
	// A description of this Shared Image.
	Description pulumi.StringPtrInput
	// One or more Disk Types not allowed for the Image. Possible values include `Standard_LRS` and `Premium_LRS`.
	DiskTypesNotAlloweds pulumi.StringArrayInput
	// The end of life date in RFC3339 format of the Image.
	EndOfLifeDate pulumi.StringPtrInput
	// The End User Licence Agreement for the Shared Image. Changing this forces a new resource to be created.
	Eula pulumi.StringPtrInput
	// Specifies the name of the Shared Image Gallery in which this Shared Image should exist. Changing this forces a new resource to be created.
	GalleryName pulumi.StringInput
	// The generation of HyperV that the Virtual Machine used to create the Shared Image is based on. Possible values are `V1` and `V2`. Defaults to `V1`. Changing this forces a new resource to be created.
	HyperVGeneration pulumi.StringPtrInput
	// An `identifier` block as defined below.
	Identifier SharedImageIdentifierInput
	// Specifies the supported Azure location where the Shared Image Gallery exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Maximum memory in GB recommended for the Image.
	MaxRecommendedMemoryInGb pulumi.IntPtrInput
	// Maximum count of vCPUs recommended for the Image.
	MaxRecommendedVcpuCount pulumi.IntPtrInput
	// Minimum memory in GB recommended for the Image.
	MinRecommendedMemoryInGb pulumi.IntPtrInput
	// Minimum count of vCPUs recommended for the Image.
	MinRecommendedVcpuCount pulumi.IntPtrInput
	// Specifies the name of the Shared Image. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The type of Operating System present in this Shared Image. Possible values are `Linux` and `Windows`. Changing this forces a new resource to be created.
	OsType pulumi.StringInput
	// The URI containing the Privacy Statement associated with this Shared Image. Changing this forces a new resource to be created.
	PrivacyStatementUri pulumi.StringPtrInput
	// A `purchasePlan` block as defined below.
	PurchasePlan SharedImagePurchasePlanPtrInput
	// The URI containing the Release Notes associated with this Shared Image.
	ReleaseNoteUri pulumi.StringPtrInput
	// The name of the resource group in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// Specifies that the Operating System used inside this Image has not been Generalized (for example, `sysprep` on Windows has not been run). Changing this forces a new resource to be created.
	//
	// !> **Note:** It's recommended to Generalize images where possible - Specialized Images reuse the same UUID internally within each Virtual Machine, which can have unintended side-effects.
	Specialized pulumi.BoolPtrInput
	// A mapping of tags to assign to the Shared Image.
	Tags pulumi.StringMapInput
	// Specifies if Trusted Launch has to be enabled for the Virtual Machine created from the Shared Image. Changing this forces a new resource to be created.
	TrustedLaunchEnabled pulumi.BoolPtrInput
	// Specifies if supports creation of both Trusted Launch virtual machines and Gen2 virtual machines with standard security created from the Shared Image. Changing this forces a new resource to be created.
	TrustedLaunchSupported pulumi.BoolPtrInput
}

func (SharedImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sharedImageArgs)(nil)).Elem()
}

type SharedImageInput interface {
	pulumi.Input

	ToSharedImageOutput() SharedImageOutput
	ToSharedImageOutputWithContext(ctx context.Context) SharedImageOutput
}

func (*SharedImage) ElementType() reflect.Type {
	return reflect.TypeOf((**SharedImage)(nil)).Elem()
}

func (i *SharedImage) ToSharedImageOutput() SharedImageOutput {
	return i.ToSharedImageOutputWithContext(context.Background())
}

func (i *SharedImage) ToSharedImageOutputWithContext(ctx context.Context) SharedImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedImageOutput)
}

// SharedImageArrayInput is an input type that accepts SharedImageArray and SharedImageArrayOutput values.
// You can construct a concrete instance of `SharedImageArrayInput` via:
//
//	SharedImageArray{ SharedImageArgs{...} }
type SharedImageArrayInput interface {
	pulumi.Input

	ToSharedImageArrayOutput() SharedImageArrayOutput
	ToSharedImageArrayOutputWithContext(context.Context) SharedImageArrayOutput
}

type SharedImageArray []SharedImageInput

func (SharedImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SharedImage)(nil)).Elem()
}

func (i SharedImageArray) ToSharedImageArrayOutput() SharedImageArrayOutput {
	return i.ToSharedImageArrayOutputWithContext(context.Background())
}

func (i SharedImageArray) ToSharedImageArrayOutputWithContext(ctx context.Context) SharedImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedImageArrayOutput)
}

// SharedImageMapInput is an input type that accepts SharedImageMap and SharedImageMapOutput values.
// You can construct a concrete instance of `SharedImageMapInput` via:
//
//	SharedImageMap{ "key": SharedImageArgs{...} }
type SharedImageMapInput interface {
	pulumi.Input

	ToSharedImageMapOutput() SharedImageMapOutput
	ToSharedImageMapOutputWithContext(context.Context) SharedImageMapOutput
}

type SharedImageMap map[string]SharedImageInput

func (SharedImageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SharedImage)(nil)).Elem()
}

func (i SharedImageMap) ToSharedImageMapOutput() SharedImageMapOutput {
	return i.ToSharedImageMapOutputWithContext(context.Background())
}

func (i SharedImageMap) ToSharedImageMapOutputWithContext(ctx context.Context) SharedImageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedImageMapOutput)
}

type SharedImageOutput struct{ *pulumi.OutputState }

func (SharedImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SharedImage)(nil)).Elem()
}

func (o SharedImageOutput) ToSharedImageOutput() SharedImageOutput {
	return o
}

func (o SharedImageOutput) ToSharedImageOutputWithContext(ctx context.Context) SharedImageOutput {
	return o
}

// Specifies if the Shared Image supports Accelerated Network. Changing this forces a new resource to be created.
func (o SharedImageOutput) AcceleratedNetworkSupportEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SharedImage) pulumi.BoolPtrOutput { return v.AcceleratedNetworkSupportEnabled }).(pulumi.BoolPtrOutput)
}

// CPU architecture supported by an OS. Possible values are `x64` and `Arm64`. Defaults to `x64`. Changing this forces a new resource to be created.
func (o SharedImageOutput) Architecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedImage) pulumi.StringPtrOutput { return v.Architecture }).(pulumi.StringPtrOutput)
}

// Specifies if Confidential Virtual Machines enabled. It will enable all the features of trusted, with higher confidentiality features for isolate machines or encrypted data. Available for Gen2 machines. Changing this forces a new resource to be created.
//
// > **Note:**: Only one of `trustedLaunchSupported`, `trustedLaunchEnabled`, `confidentialVmSupported` and `confidentialVmEnabled` can be specified.
func (o SharedImageOutput) ConfidentialVmEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SharedImage) pulumi.BoolPtrOutput { return v.ConfidentialVmEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies if supports creation of both Confidential virtual machines and Gen2 virtual machines with standard security from a compatible Gen2 OS disk VHD or Gen2 Managed image. Changing this forces a new resource to be created.
func (o SharedImageOutput) ConfidentialVmSupported() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SharedImage) pulumi.BoolPtrOutput { return v.ConfidentialVmSupported }).(pulumi.BoolPtrOutput)
}

// A description of this Shared Image.
func (o SharedImageOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedImage) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// One or more Disk Types not allowed for the Image. Possible values include `Standard_LRS` and `Premium_LRS`.
func (o SharedImageOutput) DiskTypesNotAlloweds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SharedImage) pulumi.StringArrayOutput { return v.DiskTypesNotAlloweds }).(pulumi.StringArrayOutput)
}

// The end of life date in RFC3339 format of the Image.
func (o SharedImageOutput) EndOfLifeDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedImage) pulumi.StringPtrOutput { return v.EndOfLifeDate }).(pulumi.StringPtrOutput)
}

// The End User Licence Agreement for the Shared Image. Changing this forces a new resource to be created.
func (o SharedImageOutput) Eula() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedImage) pulumi.StringPtrOutput { return v.Eula }).(pulumi.StringPtrOutput)
}

// Specifies the name of the Shared Image Gallery in which this Shared Image should exist. Changing this forces a new resource to be created.
func (o SharedImageOutput) GalleryName() pulumi.StringOutput {
	return o.ApplyT(func(v *SharedImage) pulumi.StringOutput { return v.GalleryName }).(pulumi.StringOutput)
}

// The generation of HyperV that the Virtual Machine used to create the Shared Image is based on. Possible values are `V1` and `V2`. Defaults to `V1`. Changing this forces a new resource to be created.
func (o SharedImageOutput) HyperVGeneration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedImage) pulumi.StringPtrOutput { return v.HyperVGeneration }).(pulumi.StringPtrOutput)
}

// An `identifier` block as defined below.
func (o SharedImageOutput) Identifier() SharedImageIdentifierOutput {
	return o.ApplyT(func(v *SharedImage) SharedImageIdentifierOutput { return v.Identifier }).(SharedImageIdentifierOutput)
}

// Specifies the supported Azure location where the Shared Image Gallery exists. Changing this forces a new resource to be created.
func (o SharedImageOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *SharedImage) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Maximum memory in GB recommended for the Image.
func (o SharedImageOutput) MaxRecommendedMemoryInGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SharedImage) pulumi.IntPtrOutput { return v.MaxRecommendedMemoryInGb }).(pulumi.IntPtrOutput)
}

// Maximum count of vCPUs recommended for the Image.
func (o SharedImageOutput) MaxRecommendedVcpuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SharedImage) pulumi.IntPtrOutput { return v.MaxRecommendedVcpuCount }).(pulumi.IntPtrOutput)
}

// Minimum memory in GB recommended for the Image.
func (o SharedImageOutput) MinRecommendedMemoryInGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SharedImage) pulumi.IntPtrOutput { return v.MinRecommendedMemoryInGb }).(pulumi.IntPtrOutput)
}

// Minimum count of vCPUs recommended for the Image.
func (o SharedImageOutput) MinRecommendedVcpuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SharedImage) pulumi.IntPtrOutput { return v.MinRecommendedVcpuCount }).(pulumi.IntPtrOutput)
}

// Specifies the name of the Shared Image. Changing this forces a new resource to be created.
func (o SharedImageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SharedImage) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The type of Operating System present in this Shared Image. Possible values are `Linux` and `Windows`. Changing this forces a new resource to be created.
func (o SharedImageOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v *SharedImage) pulumi.StringOutput { return v.OsType }).(pulumi.StringOutput)
}

// The URI containing the Privacy Statement associated with this Shared Image. Changing this forces a new resource to be created.
func (o SharedImageOutput) PrivacyStatementUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedImage) pulumi.StringPtrOutput { return v.PrivacyStatementUri }).(pulumi.StringPtrOutput)
}

// A `purchasePlan` block as defined below.
func (o SharedImageOutput) PurchasePlan() SharedImagePurchasePlanPtrOutput {
	return o.ApplyT(func(v *SharedImage) SharedImagePurchasePlanPtrOutput { return v.PurchasePlan }).(SharedImagePurchasePlanPtrOutput)
}

// The URI containing the Release Notes associated with this Shared Image.
func (o SharedImageOutput) ReleaseNoteUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedImage) pulumi.StringPtrOutput { return v.ReleaseNoteUri }).(pulumi.StringPtrOutput)
}

// The name of the resource group in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
func (o SharedImageOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *SharedImage) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// Specifies that the Operating System used inside this Image has not been Generalized (for example, `sysprep` on Windows has not been run). Changing this forces a new resource to be created.
//
// !> **Note:** It's recommended to Generalize images where possible - Specialized Images reuse the same UUID internally within each Virtual Machine, which can have unintended side-effects.
func (o SharedImageOutput) Specialized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SharedImage) pulumi.BoolPtrOutput { return v.Specialized }).(pulumi.BoolPtrOutput)
}

// A mapping of tags to assign to the Shared Image.
func (o SharedImageOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SharedImage) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies if Trusted Launch has to be enabled for the Virtual Machine created from the Shared Image. Changing this forces a new resource to be created.
func (o SharedImageOutput) TrustedLaunchEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SharedImage) pulumi.BoolPtrOutput { return v.TrustedLaunchEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies if supports creation of both Trusted Launch virtual machines and Gen2 virtual machines with standard security created from the Shared Image. Changing this forces a new resource to be created.
func (o SharedImageOutput) TrustedLaunchSupported() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SharedImage) pulumi.BoolPtrOutput { return v.TrustedLaunchSupported }).(pulumi.BoolPtrOutput)
}

type SharedImageArrayOutput struct{ *pulumi.OutputState }

func (SharedImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SharedImage)(nil)).Elem()
}

func (o SharedImageArrayOutput) ToSharedImageArrayOutput() SharedImageArrayOutput {
	return o
}

func (o SharedImageArrayOutput) ToSharedImageArrayOutputWithContext(ctx context.Context) SharedImageArrayOutput {
	return o
}

func (o SharedImageArrayOutput) Index(i pulumi.IntInput) SharedImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SharedImage {
		return vs[0].([]*SharedImage)[vs[1].(int)]
	}).(SharedImageOutput)
}

type SharedImageMapOutput struct{ *pulumi.OutputState }

func (SharedImageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SharedImage)(nil)).Elem()
}

func (o SharedImageMapOutput) ToSharedImageMapOutput() SharedImageMapOutput {
	return o
}

func (o SharedImageMapOutput) ToSharedImageMapOutputWithContext(ctx context.Context) SharedImageMapOutput {
	return o
}

func (o SharedImageMapOutput) MapIndex(k pulumi.StringInput) SharedImageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SharedImage {
		return vs[0].(map[string]*SharedImage)[vs[1].(string)]
	}).(SharedImageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SharedImageInput)(nil)).Elem(), &SharedImage{})
	pulumi.RegisterInputType(reflect.TypeOf((*SharedImageArrayInput)(nil)).Elem(), SharedImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SharedImageMapInput)(nil)).Elem(), SharedImageMap{})
	pulumi.RegisterOutputType(SharedImageOutput{})
	pulumi.RegisterOutputType(SharedImageArrayOutput{})
	pulumi.RegisterOutputType(SharedImageMapOutput{})
}
