// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Virtual Machine Restore Point Collection.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/compute"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network"
//	"github.com/pulumi/pulumi-std/sdk/go/std"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resources"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "example", &network.VirtualNetworkArgs{
//				Name: pulumi.String("example-network"),
//				AddressSpaces: pulumi.StringArray{
//					pulumi.String("10.0.0.0/16"),
//				},
//				Location:          example.Location,
//				ResourceGroupName: example.Name,
//			})
//			if err != nil {
//				return err
//			}
//			exampleSubnet, err := network.NewSubnet(ctx, "example", &network.SubnetArgs{
//				Name:               pulumi.String("internal"),
//				ResourceGroupName:  example.Name,
//				VirtualNetworkName: exampleVirtualNetwork.Name,
//				AddressPrefixes: pulumi.StringArray{
//					pulumi.String("10.0.2.0/24"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleNetworkInterface, err := network.NewNetworkInterface(ctx, "example", &network.NetworkInterfaceArgs{
//				Name:              pulumi.String("example-nic"),
//				Location:          example.Location,
//				ResourceGroupName: example.Name,
//				IpConfigurations: network.NetworkInterfaceIpConfigurationArray{
//					&network.NetworkInterfaceIpConfigurationArgs{
//						Name:                       pulumi.String("internal"),
//						SubnetId:                   exampleSubnet.ID(),
//						PrivateIpAddressAllocation: pulumi.String("Dynamic"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			invokeFile, err := std.File(ctx, &std.FileArgs{
//				Input: "~/.ssh/id_rsa.pub",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			exampleLinuxVirtualMachine, err := compute.NewLinuxVirtualMachine(ctx, "example", &compute.LinuxVirtualMachineArgs{
//				Name:              pulumi.String("example-machine"),
//				ResourceGroupName: example.Name,
//				Location:          example.Location,
//				Size:              pulumi.String("Standard_F2"),
//				AdminUsername:     pulumi.String("adminuser"),
//				NetworkInterfaceIds: pulumi.StringArray{
//					exampleNetworkInterface.ID(),
//				},
//				AdminSshKeys: compute.LinuxVirtualMachineAdminSshKeyArray{
//					&compute.LinuxVirtualMachineAdminSshKeyArgs{
//						Username:  pulumi.String("adminuser"),
//						PublicKey: invokeFile.Result,
//					},
//				},
//				OsDisk: &compute.LinuxVirtualMachineOsDiskArgs{
//					Caching:            pulumi.String("ReadWrite"),
//					StorageAccountType: pulumi.String("Standard_LRS"),
//				},
//				SourceImageReference: &compute.LinuxVirtualMachineSourceImageReferenceArgs{
//					Publisher: pulumi.String("Canonical"),
//					Offer:     pulumi.String("0001-com-ubuntu-server-jammy"),
//					Sku:       pulumi.String("22_04-lts"),
//					Version:   pulumi.String("latest"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewVirtualMachineRestorePointCollection(ctx, "example", &compute.VirtualMachineRestorePointCollectionArgs{
//				Name:                   pulumi.String("example-collection"),
//				ResourceGroupName:      example.Name,
//				Location:               exampleLinuxVirtualMachine.Location,
//				SourceVirtualMachineId: exampleLinuxVirtualMachine.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Virtual Machine Restore Point Collections can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:compute/virtualMachineRestorePointCollection:VirtualMachineRestorePointCollection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/restorePointCollections/collection1
// ```
type VirtualMachineRestorePointCollection struct {
	pulumi.CustomResourceState

	// The Azure location where the Virtual Machine Restore Point Collection should exist. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// Specifies the name of the Virtual Machine Restore Point Collection. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the Resource Group in which the Virtual Machine Restore Point Collection should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The ID of the virtual machine that will be associated with this Virtual Machine Restore Point Collection. Changing this forces a new resource to be created.
	SourceVirtualMachineId pulumi.StringOutput `pulumi:"sourceVirtualMachineId"`
	// A mapping of tags which should be assigned to this Virtual Machine Restore Point Collection.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewVirtualMachineRestorePointCollection registers a new resource with the given unique name, arguments, and options.
func NewVirtualMachineRestorePointCollection(ctx *pulumi.Context,
	name string, args *VirtualMachineRestorePointCollectionArgs, opts ...pulumi.ResourceOption) (*VirtualMachineRestorePointCollection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SourceVirtualMachineId == nil {
		return nil, errors.New("invalid value for required argument 'SourceVirtualMachineId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VirtualMachineRestorePointCollection
	err := ctx.RegisterResource("azure:compute/virtualMachineRestorePointCollection:VirtualMachineRestorePointCollection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVirtualMachineRestorePointCollection gets an existing VirtualMachineRestorePointCollection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVirtualMachineRestorePointCollection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VirtualMachineRestorePointCollectionState, opts ...pulumi.ResourceOption) (*VirtualMachineRestorePointCollection, error) {
	var resource VirtualMachineRestorePointCollection
	err := ctx.ReadResource("azure:compute/virtualMachineRestorePointCollection:VirtualMachineRestorePointCollection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VirtualMachineRestorePointCollection resources.
type virtualMachineRestorePointCollectionState struct {
	// The Azure location where the Virtual Machine Restore Point Collection should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of the Virtual Machine Restore Point Collection. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group in which the Virtual Machine Restore Point Collection should exist. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The ID of the virtual machine that will be associated with this Virtual Machine Restore Point Collection. Changing this forces a new resource to be created.
	SourceVirtualMachineId *string `pulumi:"sourceVirtualMachineId"`
	// A mapping of tags which should be assigned to this Virtual Machine Restore Point Collection.
	Tags map[string]string `pulumi:"tags"`
}

type VirtualMachineRestorePointCollectionState struct {
	// The Azure location where the Virtual Machine Restore Point Collection should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of the Virtual Machine Restore Point Collection. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group in which the Virtual Machine Restore Point Collection should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The ID of the virtual machine that will be associated with this Virtual Machine Restore Point Collection. Changing this forces a new resource to be created.
	SourceVirtualMachineId pulumi.StringPtrInput
	// A mapping of tags which should be assigned to this Virtual Machine Restore Point Collection.
	Tags pulumi.StringMapInput
}

func (VirtualMachineRestorePointCollectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualMachineRestorePointCollectionState)(nil)).Elem()
}

type virtualMachineRestorePointCollectionArgs struct {
	// The Azure location where the Virtual Machine Restore Point Collection should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of the Virtual Machine Restore Point Collection. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group in which the Virtual Machine Restore Point Collection should exist. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The ID of the virtual machine that will be associated with this Virtual Machine Restore Point Collection. Changing this forces a new resource to be created.
	SourceVirtualMachineId string `pulumi:"sourceVirtualMachineId"`
	// A mapping of tags which should be assigned to this Virtual Machine Restore Point Collection.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a VirtualMachineRestorePointCollection resource.
type VirtualMachineRestorePointCollectionArgs struct {
	// The Azure location where the Virtual Machine Restore Point Collection should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of the Virtual Machine Restore Point Collection. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group in which the Virtual Machine Restore Point Collection should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// The ID of the virtual machine that will be associated with this Virtual Machine Restore Point Collection. Changing this forces a new resource to be created.
	SourceVirtualMachineId pulumi.StringInput
	// A mapping of tags which should be assigned to this Virtual Machine Restore Point Collection.
	Tags pulumi.StringMapInput
}

func (VirtualMachineRestorePointCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualMachineRestorePointCollectionArgs)(nil)).Elem()
}

type VirtualMachineRestorePointCollectionInput interface {
	pulumi.Input

	ToVirtualMachineRestorePointCollectionOutput() VirtualMachineRestorePointCollectionOutput
	ToVirtualMachineRestorePointCollectionOutputWithContext(ctx context.Context) VirtualMachineRestorePointCollectionOutput
}

func (*VirtualMachineRestorePointCollection) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineRestorePointCollection)(nil)).Elem()
}

func (i *VirtualMachineRestorePointCollection) ToVirtualMachineRestorePointCollectionOutput() VirtualMachineRestorePointCollectionOutput {
	return i.ToVirtualMachineRestorePointCollectionOutputWithContext(context.Background())
}

func (i *VirtualMachineRestorePointCollection) ToVirtualMachineRestorePointCollectionOutputWithContext(ctx context.Context) VirtualMachineRestorePointCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineRestorePointCollectionOutput)
}

// VirtualMachineRestorePointCollectionArrayInput is an input type that accepts VirtualMachineRestorePointCollectionArray and VirtualMachineRestorePointCollectionArrayOutput values.
// You can construct a concrete instance of `VirtualMachineRestorePointCollectionArrayInput` via:
//
//	VirtualMachineRestorePointCollectionArray{ VirtualMachineRestorePointCollectionArgs{...} }
type VirtualMachineRestorePointCollectionArrayInput interface {
	pulumi.Input

	ToVirtualMachineRestorePointCollectionArrayOutput() VirtualMachineRestorePointCollectionArrayOutput
	ToVirtualMachineRestorePointCollectionArrayOutputWithContext(context.Context) VirtualMachineRestorePointCollectionArrayOutput
}

type VirtualMachineRestorePointCollectionArray []VirtualMachineRestorePointCollectionInput

func (VirtualMachineRestorePointCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VirtualMachineRestorePointCollection)(nil)).Elem()
}

func (i VirtualMachineRestorePointCollectionArray) ToVirtualMachineRestorePointCollectionArrayOutput() VirtualMachineRestorePointCollectionArrayOutput {
	return i.ToVirtualMachineRestorePointCollectionArrayOutputWithContext(context.Background())
}

func (i VirtualMachineRestorePointCollectionArray) ToVirtualMachineRestorePointCollectionArrayOutputWithContext(ctx context.Context) VirtualMachineRestorePointCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineRestorePointCollectionArrayOutput)
}

// VirtualMachineRestorePointCollectionMapInput is an input type that accepts VirtualMachineRestorePointCollectionMap and VirtualMachineRestorePointCollectionMapOutput values.
// You can construct a concrete instance of `VirtualMachineRestorePointCollectionMapInput` via:
//
//	VirtualMachineRestorePointCollectionMap{ "key": VirtualMachineRestorePointCollectionArgs{...} }
type VirtualMachineRestorePointCollectionMapInput interface {
	pulumi.Input

	ToVirtualMachineRestorePointCollectionMapOutput() VirtualMachineRestorePointCollectionMapOutput
	ToVirtualMachineRestorePointCollectionMapOutputWithContext(context.Context) VirtualMachineRestorePointCollectionMapOutput
}

type VirtualMachineRestorePointCollectionMap map[string]VirtualMachineRestorePointCollectionInput

func (VirtualMachineRestorePointCollectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VirtualMachineRestorePointCollection)(nil)).Elem()
}

func (i VirtualMachineRestorePointCollectionMap) ToVirtualMachineRestorePointCollectionMapOutput() VirtualMachineRestorePointCollectionMapOutput {
	return i.ToVirtualMachineRestorePointCollectionMapOutputWithContext(context.Background())
}

func (i VirtualMachineRestorePointCollectionMap) ToVirtualMachineRestorePointCollectionMapOutputWithContext(ctx context.Context) VirtualMachineRestorePointCollectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineRestorePointCollectionMapOutput)
}

type VirtualMachineRestorePointCollectionOutput struct{ *pulumi.OutputState }

func (VirtualMachineRestorePointCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineRestorePointCollection)(nil)).Elem()
}

func (o VirtualMachineRestorePointCollectionOutput) ToVirtualMachineRestorePointCollectionOutput() VirtualMachineRestorePointCollectionOutput {
	return o
}

func (o VirtualMachineRestorePointCollectionOutput) ToVirtualMachineRestorePointCollectionOutputWithContext(ctx context.Context) VirtualMachineRestorePointCollectionOutput {
	return o
}

// The Azure location where the Virtual Machine Restore Point Collection should exist. Changing this forces a new resource to be created.
func (o VirtualMachineRestorePointCollectionOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineRestorePointCollection) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Specifies the name of the Virtual Machine Restore Point Collection. Changing this forces a new resource to be created.
func (o VirtualMachineRestorePointCollectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineRestorePointCollection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the Resource Group in which the Virtual Machine Restore Point Collection should exist. Changing this forces a new resource to be created.
func (o VirtualMachineRestorePointCollectionOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineRestorePointCollection) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The ID of the virtual machine that will be associated with this Virtual Machine Restore Point Collection. Changing this forces a new resource to be created.
func (o VirtualMachineRestorePointCollectionOutput) SourceVirtualMachineId() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineRestorePointCollection) pulumi.StringOutput { return v.SourceVirtualMachineId }).(pulumi.StringOutput)
}

// A mapping of tags which should be assigned to this Virtual Machine Restore Point Collection.
func (o VirtualMachineRestorePointCollectionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualMachineRestorePointCollection) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type VirtualMachineRestorePointCollectionArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineRestorePointCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VirtualMachineRestorePointCollection)(nil)).Elem()
}

func (o VirtualMachineRestorePointCollectionArrayOutput) ToVirtualMachineRestorePointCollectionArrayOutput() VirtualMachineRestorePointCollectionArrayOutput {
	return o
}

func (o VirtualMachineRestorePointCollectionArrayOutput) ToVirtualMachineRestorePointCollectionArrayOutputWithContext(ctx context.Context) VirtualMachineRestorePointCollectionArrayOutput {
	return o
}

func (o VirtualMachineRestorePointCollectionArrayOutput) Index(i pulumi.IntInput) VirtualMachineRestorePointCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VirtualMachineRestorePointCollection {
		return vs[0].([]*VirtualMachineRestorePointCollection)[vs[1].(int)]
	}).(VirtualMachineRestorePointCollectionOutput)
}

type VirtualMachineRestorePointCollectionMapOutput struct{ *pulumi.OutputState }

func (VirtualMachineRestorePointCollectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VirtualMachineRestorePointCollection)(nil)).Elem()
}

func (o VirtualMachineRestorePointCollectionMapOutput) ToVirtualMachineRestorePointCollectionMapOutput() VirtualMachineRestorePointCollectionMapOutput {
	return o
}

func (o VirtualMachineRestorePointCollectionMapOutput) ToVirtualMachineRestorePointCollectionMapOutputWithContext(ctx context.Context) VirtualMachineRestorePointCollectionMapOutput {
	return o
}

func (o VirtualMachineRestorePointCollectionMapOutput) MapIndex(k pulumi.StringInput) VirtualMachineRestorePointCollectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VirtualMachineRestorePointCollection {
		return vs[0].(map[string]*VirtualMachineRestorePointCollection)[vs[1].(string)]
	}).(VirtualMachineRestorePointCollectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineRestorePointCollectionInput)(nil)).Elem(), &VirtualMachineRestorePointCollection{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineRestorePointCollectionArrayInput)(nil)).Elem(), VirtualMachineRestorePointCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineRestorePointCollectionMapInput)(nil)).Elem(), VirtualMachineRestorePointCollectionMap{})
	pulumi.RegisterOutputType(VirtualMachineRestorePointCollectionOutput{})
	pulumi.RegisterOutputType(VirtualMachineRestorePointCollectionArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineRestorePointCollectionMapOutput{})
}
