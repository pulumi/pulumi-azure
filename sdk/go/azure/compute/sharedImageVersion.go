// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages a Version of a Shared Image within a Shared Image Gallery.
type SharedImageVersion struct {
	pulumi.CustomResourceState

	// Should this Image Version be excluded from the `latest` filter? If set to `true` this Image Version won't be returned for the `latest` version. Defaults to `false`.
	ExcludeFromLatest pulumi.BoolPtrOutput `pulumi:"excludeFromLatest"`
	// The name of the Shared Image Gallery in which the Shared Image exists. Changing this forces a new resource to be created.
	GalleryName pulumi.StringOutput `pulumi:"galleryName"`
	// The name of the Shared Image within the Shared Image Gallery in which this Version should be created. Changing this forces a new resource to be created.
	ImageName pulumi.StringOutput `pulumi:"imageName"`
	// The Azure Region in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The ID of the Managed Image which should be used for this Shared Image Version. Changing this forces a new resource to be created.
	ManagedImageId pulumi.StringOutput `pulumi:"managedImageId"`
	// The version number for this Image Version, such as `1.0.0`. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the Resource Group in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A collection of tags which should be applied to this resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// One or more `targetRegion` blocks as documented below.
	TargetRegions SharedImageVersionTargetRegionArrayOutput `pulumi:"targetRegions"`
}

// NewSharedImageVersion registers a new resource with the given unique name, arguments, and options.
func NewSharedImageVersion(ctx *pulumi.Context,
	name string, args *SharedImageVersionArgs, opts ...pulumi.ResourceOption) (*SharedImageVersion, error) {
	if args == nil || args.GalleryName == nil {
		return nil, errors.New("missing required argument 'GalleryName'")
	}
	if args == nil || args.ImageName == nil {
		return nil, errors.New("missing required argument 'ImageName'")
	}
	if args == nil || args.ManagedImageId == nil {
		return nil, errors.New("missing required argument 'ManagedImageId'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.TargetRegions == nil {
		return nil, errors.New("missing required argument 'TargetRegions'")
	}
	if args == nil {
		args = &SharedImageVersionArgs{}
	}
	var resource SharedImageVersion
	err := ctx.RegisterResource("azure:compute/sharedImageVersion:SharedImageVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSharedImageVersion gets an existing SharedImageVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSharedImageVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SharedImageVersionState, opts ...pulumi.ResourceOption) (*SharedImageVersion, error) {
	var resource SharedImageVersion
	err := ctx.ReadResource("azure:compute/sharedImageVersion:SharedImageVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SharedImageVersion resources.
type sharedImageVersionState struct {
	// Should this Image Version be excluded from the `latest` filter? If set to `true` this Image Version won't be returned for the `latest` version. Defaults to `false`.
	ExcludeFromLatest *bool `pulumi:"excludeFromLatest"`
	// The name of the Shared Image Gallery in which the Shared Image exists. Changing this forces a new resource to be created.
	GalleryName *string `pulumi:"galleryName"`
	// The name of the Shared Image within the Shared Image Gallery in which this Version should be created. Changing this forces a new resource to be created.
	ImageName *string `pulumi:"imageName"`
	// The Azure Region in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The ID of the Managed Image which should be used for this Shared Image Version. Changing this forces a new resource to be created.
	ManagedImageId *string `pulumi:"managedImageId"`
	// The version number for this Image Version, such as `1.0.0`. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A collection of tags which should be applied to this resource.
	Tags map[string]string `pulumi:"tags"`
	// One or more `targetRegion` blocks as documented below.
	TargetRegions []SharedImageVersionTargetRegion `pulumi:"targetRegions"`
}

type SharedImageVersionState struct {
	// Should this Image Version be excluded from the `latest` filter? If set to `true` this Image Version won't be returned for the `latest` version. Defaults to `false`.
	ExcludeFromLatest pulumi.BoolPtrInput
	// The name of the Shared Image Gallery in which the Shared Image exists. Changing this forces a new resource to be created.
	GalleryName pulumi.StringPtrInput
	// The name of the Shared Image within the Shared Image Gallery in which this Version should be created. Changing this forces a new resource to be created.
	ImageName pulumi.StringPtrInput
	// The Azure Region in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The ID of the Managed Image which should be used for this Shared Image Version. Changing this forces a new resource to be created.
	ManagedImageId pulumi.StringPtrInput
	// The version number for this Image Version, such as `1.0.0`. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// A collection of tags which should be applied to this resource.
	Tags pulumi.StringMapInput
	// One or more `targetRegion` blocks as documented below.
	TargetRegions SharedImageVersionTargetRegionArrayInput
}

func (SharedImageVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*sharedImageVersionState)(nil)).Elem()
}

type sharedImageVersionArgs struct {
	// Should this Image Version be excluded from the `latest` filter? If set to `true` this Image Version won't be returned for the `latest` version. Defaults to `false`.
	ExcludeFromLatest *bool `pulumi:"excludeFromLatest"`
	// The name of the Shared Image Gallery in which the Shared Image exists. Changing this forces a new resource to be created.
	GalleryName string `pulumi:"galleryName"`
	// The name of the Shared Image within the Shared Image Gallery in which this Version should be created. Changing this forces a new resource to be created.
	ImageName string `pulumi:"imageName"`
	// The Azure Region in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The ID of the Managed Image which should be used for this Shared Image Version. Changing this forces a new resource to be created.
	ManagedImageId string `pulumi:"managedImageId"`
	// The version number for this Image Version, such as `1.0.0`. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A collection of tags which should be applied to this resource.
	Tags map[string]string `pulumi:"tags"`
	// One or more `targetRegion` blocks as documented below.
	TargetRegions []SharedImageVersionTargetRegion `pulumi:"targetRegions"`
}

// The set of arguments for constructing a SharedImageVersion resource.
type SharedImageVersionArgs struct {
	// Should this Image Version be excluded from the `latest` filter? If set to `true` this Image Version won't be returned for the `latest` version. Defaults to `false`.
	ExcludeFromLatest pulumi.BoolPtrInput
	// The name of the Shared Image Gallery in which the Shared Image exists. Changing this forces a new resource to be created.
	GalleryName pulumi.StringInput
	// The name of the Shared Image within the Shared Image Gallery in which this Version should be created. Changing this forces a new resource to be created.
	ImageName pulumi.StringInput
	// The Azure Region in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The ID of the Managed Image which should be used for this Shared Image Version. Changing this forces a new resource to be created.
	ManagedImageId pulumi.StringInput
	// The version number for this Image Version, such as `1.0.0`. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// A collection of tags which should be applied to this resource.
	Tags pulumi.StringMapInput
	// One or more `targetRegion` blocks as documented below.
	TargetRegions SharedImageVersionTargetRegionArrayInput
}

func (SharedImageVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sharedImageVersionArgs)(nil)).Elem()
}
