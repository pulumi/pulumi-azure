// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a Version of a Shared Image within a Shared Image Gallery.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/shared_image_version.html.markdown.
type SharedImageVersion struct {
	s *pulumi.ResourceState
}

// NewSharedImageVersion registers a new resource with the given unique name, arguments, and options.
func NewSharedImageVersion(ctx *pulumi.Context,
	name string, args *SharedImageVersionArgs, opts ...pulumi.ResourceOpt) (*SharedImageVersion, error) {
	if args == nil || args.GalleryName == nil {
		return nil, errors.New("missing required argument 'GalleryName'")
	}
	if args == nil || args.ImageName == nil {
		return nil, errors.New("missing required argument 'ImageName'")
	}
	if args == nil || args.ManagedImageId == nil {
		return nil, errors.New("missing required argument 'ManagedImageId'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.TargetRegions == nil {
		return nil, errors.New("missing required argument 'TargetRegions'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["excludeFromLatest"] = nil
		inputs["galleryName"] = nil
		inputs["imageName"] = nil
		inputs["location"] = nil
		inputs["managedImageId"] = nil
		inputs["name"] = nil
		inputs["resourceGroupName"] = nil
		inputs["tags"] = nil
		inputs["targetRegions"] = nil
	} else {
		inputs["excludeFromLatest"] = args.ExcludeFromLatest
		inputs["galleryName"] = args.GalleryName
		inputs["imageName"] = args.ImageName
		inputs["location"] = args.Location
		inputs["managedImageId"] = args.ManagedImageId
		inputs["name"] = args.Name
		inputs["resourceGroupName"] = args.ResourceGroupName
		inputs["tags"] = args.Tags
		inputs["targetRegions"] = args.TargetRegions
	}
	s, err := ctx.RegisterResource("azure:compute/sharedImageVersion:SharedImageVersion", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &SharedImageVersion{s: s}, nil
}

// GetSharedImageVersion gets an existing SharedImageVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSharedImageVersion(ctx *pulumi.Context,
	name string, id pulumi.ID, state *SharedImageVersionState, opts ...pulumi.ResourceOpt) (*SharedImageVersion, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["excludeFromLatest"] = state.ExcludeFromLatest
		inputs["galleryName"] = state.GalleryName
		inputs["imageName"] = state.ImageName
		inputs["location"] = state.Location
		inputs["managedImageId"] = state.ManagedImageId
		inputs["name"] = state.Name
		inputs["resourceGroupName"] = state.ResourceGroupName
		inputs["tags"] = state.Tags
		inputs["targetRegions"] = state.TargetRegions
	}
	s, err := ctx.ReadResource("azure:compute/sharedImageVersion:SharedImageVersion", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &SharedImageVersion{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *SharedImageVersion) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *SharedImageVersion) ID() pulumi.IDOutput {
	return r.s.ID()
}

// Should this Image Version be excluded from the `latest` filter? If set to `true` this Image Version won't be returned for the `latest` version. Defaults to `false`.
func (r *SharedImageVersion) ExcludeFromLatest() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["excludeFromLatest"])
}

// The name of the Shared Image Gallery in which the Shared Image exists. Changing this forces a new resource to be created.
func (r *SharedImageVersion) GalleryName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["galleryName"])
}

// The name of the Shared Image within the Shared Image Gallery in which this Version should be created. Changing this forces a new resource to be created.
func (r *SharedImageVersion) ImageName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["imageName"])
}

// The Azure Region in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
func (r *SharedImageVersion) Location() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["location"])
}

// The ID of the Managed Image which should be used for this Shared Image Version. Changing this forces a new resource to be created.
func (r *SharedImageVersion) ManagedImageId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["managedImageId"])
}

// The version number for this Image Version, such as `1.0.0`. Changing this forces a new resource to be created.
func (r *SharedImageVersion) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// The name of the Resource Group in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
func (r *SharedImageVersion) ResourceGroupName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["resourceGroupName"])
}

// A collection of tags which should be applied to this resource.
func (r *SharedImageVersion) Tags() pulumi.MapOutput {
	return (pulumi.MapOutput)(r.s.State["tags"])
}

// One or more `targetRegion` blocks as documented below.
func (r *SharedImageVersion) TargetRegions() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["targetRegions"])
}

// Input properties used for looking up and filtering SharedImageVersion resources.
type SharedImageVersionState struct {
	// Should this Image Version be excluded from the `latest` filter? If set to `true` this Image Version won't be returned for the `latest` version. Defaults to `false`.
	ExcludeFromLatest interface{}
	// The name of the Shared Image Gallery in which the Shared Image exists. Changing this forces a new resource to be created.
	GalleryName interface{}
	// The name of the Shared Image within the Shared Image Gallery in which this Version should be created. Changing this forces a new resource to be created.
	ImageName interface{}
	// The Azure Region in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
	Location interface{}
	// The ID of the Managed Image which should be used for this Shared Image Version. Changing this forces a new resource to be created.
	ManagedImageId interface{}
	// The version number for this Image Version, such as `1.0.0`. Changing this forces a new resource to be created.
	Name interface{}
	// The name of the Resource Group in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// A collection of tags which should be applied to this resource.
	Tags interface{}
	// One or more `targetRegion` blocks as documented below.
	TargetRegions interface{}
}

// The set of arguments for constructing a SharedImageVersion resource.
type SharedImageVersionArgs struct {
	// Should this Image Version be excluded from the `latest` filter? If set to `true` this Image Version won't be returned for the `latest` version. Defaults to `false`.
	ExcludeFromLatest interface{}
	// The name of the Shared Image Gallery in which the Shared Image exists. Changing this forces a new resource to be created.
	GalleryName interface{}
	// The name of the Shared Image within the Shared Image Gallery in which this Version should be created. Changing this forces a new resource to be created.
	ImageName interface{}
	// The Azure Region in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
	Location interface{}
	// The ID of the Managed Image which should be used for this Shared Image Version. Changing this forces a new resource to be created.
	ManagedImageId interface{}
	// The version number for this Image Version, such as `1.0.0`. Changing this forces a new resource to be created.
	Name interface{}
	// The name of the Resource Group in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// A collection of tags which should be applied to this resource.
	Tags interface{}
	// One or more `targetRegion` blocks as documented below.
	TargetRegions interface{}
}
