// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets information about an existing Confidential Ledger.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			current, err := compute.GetConfidentialLedger(ctx, &compute.GetConfidentialLedgerArgs{
//				Name:              "example-ledger",
//				ResourceGroupName: "example-resources",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("ledgerEndpoint", current.LedgerEndpoint)
//			return nil
//		})
//	}
//
// ```
func GetConfidentialLedger(ctx *pulumi.Context, args *GetConfidentialLedgerArgs, opts ...pulumi.InvokeOption) (*GetConfidentialLedgerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetConfidentialLedgerResult
	err := ctx.Invoke("azure:compute/getConfidentialLedger:getConfidentialLedger", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConfidentialLedger.
type GetConfidentialLedgerArgs struct {
	// Specifies the name of this Confidential Ledger.
	Name string `pulumi:"name"`
	// Specifies the name of the Resource Group where this Confidential Ledger exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getConfidentialLedger.
type GetConfidentialLedgerResult struct {
	AzureadBasedServicePrincipals      []GetConfidentialLedgerAzureadBasedServicePrincipal      `pulumi:"azureadBasedServicePrincipals"`
	CertificateBasedSecurityPrincipals []GetConfidentialLedgerCertificateBasedSecurityPrincipal `pulumi:"certificateBasedSecurityPrincipals"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Identity Service Endpoint for this Confidential Ledger.
	IdentityServiceEndpoint string `pulumi:"identityServiceEndpoint"`
	// The Endpoint for this Confidential Ledger.
	LedgerEndpoint string `pulumi:"ledgerEndpoint"`
	// The type of Confidential Ledger.
	LedgerType string `pulumi:"ledgerType"`
	// The supported Azure location where the Confidential Ledger exists.
	Location          string `pulumi:"location"`
	Name              string `pulumi:"name"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A mapping of tags to assign to the Confidential Ledger.
	Tags map[string]string `pulumi:"tags"`
}

func GetConfidentialLedgerOutput(ctx *pulumi.Context, args GetConfidentialLedgerOutputArgs, opts ...pulumi.InvokeOption) GetConfidentialLedgerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetConfidentialLedgerResult, error) {
			args := v.(GetConfidentialLedgerArgs)
			r, err := GetConfidentialLedger(ctx, &args, opts...)
			var s GetConfidentialLedgerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetConfidentialLedgerResultOutput)
}

// A collection of arguments for invoking getConfidentialLedger.
type GetConfidentialLedgerOutputArgs struct {
	// Specifies the name of this Confidential Ledger.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the name of the Resource Group where this Confidential Ledger exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetConfidentialLedgerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfidentialLedgerArgs)(nil)).Elem()
}

// A collection of values returned by getConfidentialLedger.
type GetConfidentialLedgerResultOutput struct{ *pulumi.OutputState }

func (GetConfidentialLedgerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfidentialLedgerResult)(nil)).Elem()
}

func (o GetConfidentialLedgerResultOutput) ToGetConfidentialLedgerResultOutput() GetConfidentialLedgerResultOutput {
	return o
}

func (o GetConfidentialLedgerResultOutput) ToGetConfidentialLedgerResultOutputWithContext(ctx context.Context) GetConfidentialLedgerResultOutput {
	return o
}

func (o GetConfidentialLedgerResultOutput) AzureadBasedServicePrincipals() GetConfidentialLedgerAzureadBasedServicePrincipalArrayOutput {
	return o.ApplyT(func(v GetConfidentialLedgerResult) []GetConfidentialLedgerAzureadBasedServicePrincipal {
		return v.AzureadBasedServicePrincipals
	}).(GetConfidentialLedgerAzureadBasedServicePrincipalArrayOutput)
}

func (o GetConfidentialLedgerResultOutput) CertificateBasedSecurityPrincipals() GetConfidentialLedgerCertificateBasedSecurityPrincipalArrayOutput {
	return o.ApplyT(func(v GetConfidentialLedgerResult) []GetConfidentialLedgerCertificateBasedSecurityPrincipal {
		return v.CertificateBasedSecurityPrincipals
	}).(GetConfidentialLedgerCertificateBasedSecurityPrincipalArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetConfidentialLedgerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfidentialLedgerResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Identity Service Endpoint for this Confidential Ledger.
func (o GetConfidentialLedgerResultOutput) IdentityServiceEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfidentialLedgerResult) string { return v.IdentityServiceEndpoint }).(pulumi.StringOutput)
}

// The Endpoint for this Confidential Ledger.
func (o GetConfidentialLedgerResultOutput) LedgerEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfidentialLedgerResult) string { return v.LedgerEndpoint }).(pulumi.StringOutput)
}

// The type of Confidential Ledger.
func (o GetConfidentialLedgerResultOutput) LedgerType() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfidentialLedgerResult) string { return v.LedgerType }).(pulumi.StringOutput)
}

// The supported Azure location where the Confidential Ledger exists.
func (o GetConfidentialLedgerResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfidentialLedgerResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o GetConfidentialLedgerResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfidentialLedgerResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetConfidentialLedgerResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfidentialLedgerResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the Confidential Ledger.
func (o GetConfidentialLedgerResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetConfidentialLedgerResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetConfidentialLedgerResultOutput{})
}
