// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Shared Image Gallery.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/compute"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewSharedImageGallery(ctx, "exampleSharedImageGallery", &compute.SharedImageGalleryArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				Description:       pulumi.String("Shared images and things."),
//				Tags: pulumi.StringMap{
//					"Hello": pulumi.String("There"),
//					"World": pulumi.String("Example"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Shared Image Galleries can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:compute/sharedImageGallery:SharedImageGallery gallery1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/galleries/gallery1
//
// ```
type SharedImageGallery struct {
	pulumi.CustomResourceState

	// A description for this Shared Image Gallery.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// Specifies the name of the Shared Image Gallery. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the resource group in which to create the Shared Image Gallery. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A `sharing` block as defined below. Changing this forces a new resource to be created.
	Sharing SharedImageGallerySharingPtrOutput `pulumi:"sharing"`
	// A mapping of tags to assign to the Shared Image Gallery.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The Unique Name for this Shared Image Gallery.
	UniqueName pulumi.StringOutput `pulumi:"uniqueName"`
}

// NewSharedImageGallery registers a new resource with the given unique name, arguments, and options.
func NewSharedImageGallery(ctx *pulumi.Context,
	name string, args *SharedImageGalleryArgs, opts ...pulumi.ResourceOption) (*SharedImageGallery, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SharedImageGallery
	err := ctx.RegisterResource("azure:compute/sharedImageGallery:SharedImageGallery", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSharedImageGallery gets an existing SharedImageGallery resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSharedImageGallery(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SharedImageGalleryState, opts ...pulumi.ResourceOption) (*SharedImageGallery, error) {
	var resource SharedImageGallery
	err := ctx.ReadResource("azure:compute/sharedImageGallery:SharedImageGallery", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SharedImageGallery resources.
type sharedImageGalleryState struct {
	// A description for this Shared Image Gallery.
	Description *string `pulumi:"description"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of the Shared Image Gallery. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the resource group in which to create the Shared Image Gallery. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A `sharing` block as defined below. Changing this forces a new resource to be created.
	Sharing *SharedImageGallerySharing `pulumi:"sharing"`
	// A mapping of tags to assign to the Shared Image Gallery.
	Tags map[string]string `pulumi:"tags"`
	// The Unique Name for this Shared Image Gallery.
	UniqueName *string `pulumi:"uniqueName"`
}

type SharedImageGalleryState struct {
	// A description for this Shared Image Gallery.
	Description pulumi.StringPtrInput
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of the Shared Image Gallery. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the resource group in which to create the Shared Image Gallery. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// A `sharing` block as defined below. Changing this forces a new resource to be created.
	Sharing SharedImageGallerySharingPtrInput
	// A mapping of tags to assign to the Shared Image Gallery.
	Tags pulumi.StringMapInput
	// The Unique Name for this Shared Image Gallery.
	UniqueName pulumi.StringPtrInput
}

func (SharedImageGalleryState) ElementType() reflect.Type {
	return reflect.TypeOf((*sharedImageGalleryState)(nil)).Elem()
}

type sharedImageGalleryArgs struct {
	// A description for this Shared Image Gallery.
	Description *string `pulumi:"description"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of the Shared Image Gallery. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the resource group in which to create the Shared Image Gallery. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A `sharing` block as defined below. Changing this forces a new resource to be created.
	Sharing *SharedImageGallerySharing `pulumi:"sharing"`
	// A mapping of tags to assign to the Shared Image Gallery.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a SharedImageGallery resource.
type SharedImageGalleryArgs struct {
	// A description for this Shared Image Gallery.
	Description pulumi.StringPtrInput
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of the Shared Image Gallery. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the resource group in which to create the Shared Image Gallery. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// A `sharing` block as defined below. Changing this forces a new resource to be created.
	Sharing SharedImageGallerySharingPtrInput
	// A mapping of tags to assign to the Shared Image Gallery.
	Tags pulumi.StringMapInput
}

func (SharedImageGalleryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sharedImageGalleryArgs)(nil)).Elem()
}

type SharedImageGalleryInput interface {
	pulumi.Input

	ToSharedImageGalleryOutput() SharedImageGalleryOutput
	ToSharedImageGalleryOutputWithContext(ctx context.Context) SharedImageGalleryOutput
}

func (*SharedImageGallery) ElementType() reflect.Type {
	return reflect.TypeOf((**SharedImageGallery)(nil)).Elem()
}

func (i *SharedImageGallery) ToSharedImageGalleryOutput() SharedImageGalleryOutput {
	return i.ToSharedImageGalleryOutputWithContext(context.Background())
}

func (i *SharedImageGallery) ToSharedImageGalleryOutputWithContext(ctx context.Context) SharedImageGalleryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedImageGalleryOutput)
}

// SharedImageGalleryArrayInput is an input type that accepts SharedImageGalleryArray and SharedImageGalleryArrayOutput values.
// You can construct a concrete instance of `SharedImageGalleryArrayInput` via:
//
//	SharedImageGalleryArray{ SharedImageGalleryArgs{...} }
type SharedImageGalleryArrayInput interface {
	pulumi.Input

	ToSharedImageGalleryArrayOutput() SharedImageGalleryArrayOutput
	ToSharedImageGalleryArrayOutputWithContext(context.Context) SharedImageGalleryArrayOutput
}

type SharedImageGalleryArray []SharedImageGalleryInput

func (SharedImageGalleryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SharedImageGallery)(nil)).Elem()
}

func (i SharedImageGalleryArray) ToSharedImageGalleryArrayOutput() SharedImageGalleryArrayOutput {
	return i.ToSharedImageGalleryArrayOutputWithContext(context.Background())
}

func (i SharedImageGalleryArray) ToSharedImageGalleryArrayOutputWithContext(ctx context.Context) SharedImageGalleryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedImageGalleryArrayOutput)
}

// SharedImageGalleryMapInput is an input type that accepts SharedImageGalleryMap and SharedImageGalleryMapOutput values.
// You can construct a concrete instance of `SharedImageGalleryMapInput` via:
//
//	SharedImageGalleryMap{ "key": SharedImageGalleryArgs{...} }
type SharedImageGalleryMapInput interface {
	pulumi.Input

	ToSharedImageGalleryMapOutput() SharedImageGalleryMapOutput
	ToSharedImageGalleryMapOutputWithContext(context.Context) SharedImageGalleryMapOutput
}

type SharedImageGalleryMap map[string]SharedImageGalleryInput

func (SharedImageGalleryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SharedImageGallery)(nil)).Elem()
}

func (i SharedImageGalleryMap) ToSharedImageGalleryMapOutput() SharedImageGalleryMapOutput {
	return i.ToSharedImageGalleryMapOutputWithContext(context.Background())
}

func (i SharedImageGalleryMap) ToSharedImageGalleryMapOutputWithContext(ctx context.Context) SharedImageGalleryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedImageGalleryMapOutput)
}

type SharedImageGalleryOutput struct{ *pulumi.OutputState }

func (SharedImageGalleryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SharedImageGallery)(nil)).Elem()
}

func (o SharedImageGalleryOutput) ToSharedImageGalleryOutput() SharedImageGalleryOutput {
	return o
}

func (o SharedImageGalleryOutput) ToSharedImageGalleryOutputWithContext(ctx context.Context) SharedImageGalleryOutput {
	return o
}

// A description for this Shared Image Gallery.
func (o SharedImageGalleryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedImageGallery) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
func (o SharedImageGalleryOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *SharedImageGallery) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Specifies the name of the Shared Image Gallery. Changing this forces a new resource to be created.
func (o SharedImageGalleryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SharedImageGallery) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the resource group in which to create the Shared Image Gallery. Changing this forces a new resource to be created.
func (o SharedImageGalleryOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *SharedImageGallery) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A `sharing` block as defined below. Changing this forces a new resource to be created.
func (o SharedImageGalleryOutput) Sharing() SharedImageGallerySharingPtrOutput {
	return o.ApplyT(func(v *SharedImageGallery) SharedImageGallerySharingPtrOutput { return v.Sharing }).(SharedImageGallerySharingPtrOutput)
}

// A mapping of tags to assign to the Shared Image Gallery.
func (o SharedImageGalleryOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SharedImageGallery) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The Unique Name for this Shared Image Gallery.
func (o SharedImageGalleryOutput) UniqueName() pulumi.StringOutput {
	return o.ApplyT(func(v *SharedImageGallery) pulumi.StringOutput { return v.UniqueName }).(pulumi.StringOutput)
}

type SharedImageGalleryArrayOutput struct{ *pulumi.OutputState }

func (SharedImageGalleryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SharedImageGallery)(nil)).Elem()
}

func (o SharedImageGalleryArrayOutput) ToSharedImageGalleryArrayOutput() SharedImageGalleryArrayOutput {
	return o
}

func (o SharedImageGalleryArrayOutput) ToSharedImageGalleryArrayOutputWithContext(ctx context.Context) SharedImageGalleryArrayOutput {
	return o
}

func (o SharedImageGalleryArrayOutput) Index(i pulumi.IntInput) SharedImageGalleryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SharedImageGallery {
		return vs[0].([]*SharedImageGallery)[vs[1].(int)]
	}).(SharedImageGalleryOutput)
}

type SharedImageGalleryMapOutput struct{ *pulumi.OutputState }

func (SharedImageGalleryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SharedImageGallery)(nil)).Elem()
}

func (o SharedImageGalleryMapOutput) ToSharedImageGalleryMapOutput() SharedImageGalleryMapOutput {
	return o
}

func (o SharedImageGalleryMapOutput) ToSharedImageGalleryMapOutputWithContext(ctx context.Context) SharedImageGalleryMapOutput {
	return o
}

func (o SharedImageGalleryMapOutput) MapIndex(k pulumi.StringInput) SharedImageGalleryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SharedImageGallery {
		return vs[0].(map[string]*SharedImageGallery)[vs[1].(string)]
	}).(SharedImageGalleryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SharedImageGalleryInput)(nil)).Elem(), &SharedImageGallery{})
	pulumi.RegisterInputType(reflect.TypeOf((*SharedImageGalleryArrayInput)(nil)).Elem(), SharedImageGalleryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SharedImageGalleryMapInput)(nil)).Elem(), SharedImageGalleryMap{})
	pulumi.RegisterOutputType(SharedImageGalleryOutput{})
	pulumi.RegisterOutputType(SharedImageGalleryArrayOutput{})
	pulumi.RegisterOutputType(SharedImageGalleryMapOutput{})
}
