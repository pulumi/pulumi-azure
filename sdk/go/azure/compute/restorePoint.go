// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Virtual Machine Restore Point.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/compute"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
//	"github.com/pulumi/pulumi-std/sdk/go/std"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resources"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "example", &network.VirtualNetworkArgs{
//				Name: pulumi.String("example-network"),
//				AddressSpaces: pulumi.StringArray{
//					pulumi.String("10.0.0.0/16"),
//				},
//				Location:          example.Location,
//				ResourceGroupName: example.Name,
//			})
//			if err != nil {
//				return err
//			}
//			exampleSubnet, err := network.NewSubnet(ctx, "example", &network.SubnetArgs{
//				Name:               pulumi.String("internal"),
//				ResourceGroupName:  example.Name,
//				VirtualNetworkName: exampleVirtualNetwork.Name,
//				AddressPrefixes: pulumi.StringArray{
//					pulumi.String("10.0.2.0/24"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleNetworkInterface, err := network.NewNetworkInterface(ctx, "example", &network.NetworkInterfaceArgs{
//				Name:              pulumi.String("example-nic"),
//				Location:          example.Location,
//				ResourceGroupName: example.Name,
//				IpConfigurations: network.NetworkInterfaceIpConfigurationArray{
//					&network.NetworkInterfaceIpConfigurationArgs{
//						Name:                       pulumi.String("internal"),
//						SubnetId:                   exampleSubnet.ID(),
//						PrivateIpAddressAllocation: pulumi.String("Dynamic"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			invokeFile, err := std.File(ctx, &std.FileArgs{
//				Input: "~/.ssh/id_rsa.pub",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			exampleLinuxVirtualMachine, err := compute.NewLinuxVirtualMachine(ctx, "example", &compute.LinuxVirtualMachineArgs{
//				Name:              pulumi.String("example-machine"),
//				ResourceGroupName: example.Name,
//				Location:          example.Location,
//				Size:              pulumi.String("Standard_F2"),
//				AdminUsername:     pulumi.String("adminuser"),
//				NetworkInterfaceIds: pulumi.StringArray{
//					exampleNetworkInterface.ID(),
//				},
//				AdminSshKeys: compute.LinuxVirtualMachineAdminSshKeyArray{
//					&compute.LinuxVirtualMachineAdminSshKeyArgs{
//						Username:  pulumi.String("adminuser"),
//						PublicKey: pulumi.String(invokeFile.Result),
//					},
//				},
//				OsDisk: &compute.LinuxVirtualMachineOsDiskArgs{
//					Caching:            pulumi.String("ReadWrite"),
//					StorageAccountType: pulumi.String("Standard_LRS"),
//				},
//				SourceImageReference: &compute.LinuxVirtualMachineSourceImageReferenceArgs{
//					Publisher: pulumi.String("Canonical"),
//					Offer:     pulumi.String("0001-com-ubuntu-server-jammy"),
//					Sku:       pulumi.String("22_04-lts"),
//					Version:   pulumi.String("latest"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleRestorePointCollection, err := compute.NewRestorePointCollection(ctx, "example", &compute.RestorePointCollectionArgs{
//				Name:                   pulumi.String("example-collection"),
//				ResourceGroupName:      example.Name,
//				Location:               exampleLinuxVirtualMachine.Location,
//				SourceVirtualMachineId: exampleLinuxVirtualMachine.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewRestorePoint(ctx, "example", &compute.RestorePointArgs{
//				Name:                                   pulumi.String("example-restore-point"),
//				VirtualMachineRestorePointCollectionId: exampleRestorePointCollection.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This resource uses the following Azure API Providers:
//
// * `Microsoft.Compute` - 2024-03-01
//
// ## Import
//
// Virtual Machine Restore Point can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:compute/restorePoint:RestorePoint example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/restorePointCollections/collection1/restorePoints/restorePoint1
// ```
type RestorePoint struct {
	pulumi.CustomResourceState

	// Whether the Consistency Mode of the Virtual Machine Restore Point is set to `CrashConsistent`. Defaults to `false`. Changing this forces a new resource to be created.
	CrashConsistencyModeEnabled pulumi.BoolPtrOutput `pulumi:"crashConsistencyModeEnabled"`
	// A list of disks that will be excluded from the Virtual Machine Restore Point. Changing this forces a new resource to be created.
	ExcludedDisks pulumi.StringArrayOutput `pulumi:"excludedDisks"`
	// Specifies the name of the Virtual Machine Restore Point. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the ID of the Virtual Machine Restore Point Collection the Virtual Machine Restore Point will be associated with. Changing this forces a new resource to be created.
	VirtualMachineRestorePointCollectionId pulumi.StringOutput `pulumi:"virtualMachineRestorePointCollectionId"`
}

// NewRestorePoint registers a new resource with the given unique name, arguments, and options.
func NewRestorePoint(ctx *pulumi.Context,
	name string, args *RestorePointArgs, opts ...pulumi.ResourceOption) (*RestorePoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.VirtualMachineRestorePointCollectionId == nil {
		return nil, errors.New("invalid value for required argument 'VirtualMachineRestorePointCollectionId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RestorePoint
	err := ctx.RegisterResource("azure:compute/restorePoint:RestorePoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRestorePoint gets an existing RestorePoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRestorePoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RestorePointState, opts ...pulumi.ResourceOption) (*RestorePoint, error) {
	var resource RestorePoint
	err := ctx.ReadResource("azure:compute/restorePoint:RestorePoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RestorePoint resources.
type restorePointState struct {
	// Whether the Consistency Mode of the Virtual Machine Restore Point is set to `CrashConsistent`. Defaults to `false`. Changing this forces a new resource to be created.
	CrashConsistencyModeEnabled *bool `pulumi:"crashConsistencyModeEnabled"`
	// A list of disks that will be excluded from the Virtual Machine Restore Point. Changing this forces a new resource to be created.
	ExcludedDisks []string `pulumi:"excludedDisks"`
	// Specifies the name of the Virtual Machine Restore Point. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the ID of the Virtual Machine Restore Point Collection the Virtual Machine Restore Point will be associated with. Changing this forces a new resource to be created.
	VirtualMachineRestorePointCollectionId *string `pulumi:"virtualMachineRestorePointCollectionId"`
}

type RestorePointState struct {
	// Whether the Consistency Mode of the Virtual Machine Restore Point is set to `CrashConsistent`. Defaults to `false`. Changing this forces a new resource to be created.
	CrashConsistencyModeEnabled pulumi.BoolPtrInput
	// A list of disks that will be excluded from the Virtual Machine Restore Point. Changing this forces a new resource to be created.
	ExcludedDisks pulumi.StringArrayInput
	// Specifies the name of the Virtual Machine Restore Point. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the ID of the Virtual Machine Restore Point Collection the Virtual Machine Restore Point will be associated with. Changing this forces a new resource to be created.
	VirtualMachineRestorePointCollectionId pulumi.StringPtrInput
}

func (RestorePointState) ElementType() reflect.Type {
	return reflect.TypeOf((*restorePointState)(nil)).Elem()
}

type restorePointArgs struct {
	// Whether the Consistency Mode of the Virtual Machine Restore Point is set to `CrashConsistent`. Defaults to `false`. Changing this forces a new resource to be created.
	CrashConsistencyModeEnabled *bool `pulumi:"crashConsistencyModeEnabled"`
	// A list of disks that will be excluded from the Virtual Machine Restore Point. Changing this forces a new resource to be created.
	ExcludedDisks []string `pulumi:"excludedDisks"`
	// Specifies the name of the Virtual Machine Restore Point. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the ID of the Virtual Machine Restore Point Collection the Virtual Machine Restore Point will be associated with. Changing this forces a new resource to be created.
	VirtualMachineRestorePointCollectionId string `pulumi:"virtualMachineRestorePointCollectionId"`
}

// The set of arguments for constructing a RestorePoint resource.
type RestorePointArgs struct {
	// Whether the Consistency Mode of the Virtual Machine Restore Point is set to `CrashConsistent`. Defaults to `false`. Changing this forces a new resource to be created.
	CrashConsistencyModeEnabled pulumi.BoolPtrInput
	// A list of disks that will be excluded from the Virtual Machine Restore Point. Changing this forces a new resource to be created.
	ExcludedDisks pulumi.StringArrayInput
	// Specifies the name of the Virtual Machine Restore Point. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the ID of the Virtual Machine Restore Point Collection the Virtual Machine Restore Point will be associated with. Changing this forces a new resource to be created.
	VirtualMachineRestorePointCollectionId pulumi.StringInput
}

func (RestorePointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*restorePointArgs)(nil)).Elem()
}

type RestorePointInput interface {
	pulumi.Input

	ToRestorePointOutput() RestorePointOutput
	ToRestorePointOutputWithContext(ctx context.Context) RestorePointOutput
}

func (*RestorePoint) ElementType() reflect.Type {
	return reflect.TypeOf((**RestorePoint)(nil)).Elem()
}

func (i *RestorePoint) ToRestorePointOutput() RestorePointOutput {
	return i.ToRestorePointOutputWithContext(context.Background())
}

func (i *RestorePoint) ToRestorePointOutputWithContext(ctx context.Context) RestorePointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestorePointOutput)
}

// RestorePointArrayInput is an input type that accepts RestorePointArray and RestorePointArrayOutput values.
// You can construct a concrete instance of `RestorePointArrayInput` via:
//
//	RestorePointArray{ RestorePointArgs{...} }
type RestorePointArrayInput interface {
	pulumi.Input

	ToRestorePointArrayOutput() RestorePointArrayOutput
	ToRestorePointArrayOutputWithContext(context.Context) RestorePointArrayOutput
}

type RestorePointArray []RestorePointInput

func (RestorePointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RestorePoint)(nil)).Elem()
}

func (i RestorePointArray) ToRestorePointArrayOutput() RestorePointArrayOutput {
	return i.ToRestorePointArrayOutputWithContext(context.Background())
}

func (i RestorePointArray) ToRestorePointArrayOutputWithContext(ctx context.Context) RestorePointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestorePointArrayOutput)
}

// RestorePointMapInput is an input type that accepts RestorePointMap and RestorePointMapOutput values.
// You can construct a concrete instance of `RestorePointMapInput` via:
//
//	RestorePointMap{ "key": RestorePointArgs{...} }
type RestorePointMapInput interface {
	pulumi.Input

	ToRestorePointMapOutput() RestorePointMapOutput
	ToRestorePointMapOutputWithContext(context.Context) RestorePointMapOutput
}

type RestorePointMap map[string]RestorePointInput

func (RestorePointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RestorePoint)(nil)).Elem()
}

func (i RestorePointMap) ToRestorePointMapOutput() RestorePointMapOutput {
	return i.ToRestorePointMapOutputWithContext(context.Background())
}

func (i RestorePointMap) ToRestorePointMapOutputWithContext(ctx context.Context) RestorePointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestorePointMapOutput)
}

type RestorePointOutput struct{ *pulumi.OutputState }

func (RestorePointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestorePoint)(nil)).Elem()
}

func (o RestorePointOutput) ToRestorePointOutput() RestorePointOutput {
	return o
}

func (o RestorePointOutput) ToRestorePointOutputWithContext(ctx context.Context) RestorePointOutput {
	return o
}

// Whether the Consistency Mode of the Virtual Machine Restore Point is set to `CrashConsistent`. Defaults to `false`. Changing this forces a new resource to be created.
func (o RestorePointOutput) CrashConsistencyModeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RestorePoint) pulumi.BoolPtrOutput { return v.CrashConsistencyModeEnabled }).(pulumi.BoolPtrOutput)
}

// A list of disks that will be excluded from the Virtual Machine Restore Point. Changing this forces a new resource to be created.
func (o RestorePointOutput) ExcludedDisks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RestorePoint) pulumi.StringArrayOutput { return v.ExcludedDisks }).(pulumi.StringArrayOutput)
}

// Specifies the name of the Virtual Machine Restore Point. Changing this forces a new resource to be created.
func (o RestorePointOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePoint) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the ID of the Virtual Machine Restore Point Collection the Virtual Machine Restore Point will be associated with. Changing this forces a new resource to be created.
func (o RestorePointOutput) VirtualMachineRestorePointCollectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePoint) pulumi.StringOutput { return v.VirtualMachineRestorePointCollectionId }).(pulumi.StringOutput)
}

type RestorePointArrayOutput struct{ *pulumi.OutputState }

func (RestorePointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RestorePoint)(nil)).Elem()
}

func (o RestorePointArrayOutput) ToRestorePointArrayOutput() RestorePointArrayOutput {
	return o
}

func (o RestorePointArrayOutput) ToRestorePointArrayOutputWithContext(ctx context.Context) RestorePointArrayOutput {
	return o
}

func (o RestorePointArrayOutput) Index(i pulumi.IntInput) RestorePointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RestorePoint {
		return vs[0].([]*RestorePoint)[vs[1].(int)]
	}).(RestorePointOutput)
}

type RestorePointMapOutput struct{ *pulumi.OutputState }

func (RestorePointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RestorePoint)(nil)).Elem()
}

func (o RestorePointMapOutput) ToRestorePointMapOutput() RestorePointMapOutput {
	return o
}

func (o RestorePointMapOutput) ToRestorePointMapOutputWithContext(ctx context.Context) RestorePointMapOutput {
	return o
}

func (o RestorePointMapOutput) MapIndex(k pulumi.StringInput) RestorePointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RestorePoint {
		return vs[0].(map[string]*RestorePoint)[vs[1].(string)]
	}).(RestorePointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RestorePointInput)(nil)).Elem(), &RestorePoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*RestorePointArrayInput)(nil)).Elem(), RestorePointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RestorePointMapInput)(nil)).Elem(), RestorePointMap{})
	pulumi.RegisterOutputType(RestorePointOutput{})
	pulumi.RegisterOutputType(RestorePointArrayOutput{})
	pulumi.RegisterOutputType(RestorePointMapOutput{})
}
