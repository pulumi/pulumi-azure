// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Bastion Host.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/compute"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := compute.LookupBastionHost(ctx, &compute.LookupBastionHostArgs{
//				Name:              "existing-bastion",
//				ResourceGroupName: "existing-resources",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", example.Id)
//			return nil
//		})
//	}
//
// ```
func LookupBastionHost(ctx *pulumi.Context, args *LookupBastionHostArgs, opts ...pulumi.InvokeOption) (*LookupBastionHostResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBastionHostResult
	err := ctx.Invoke("azure:compute/getBastionHost:getBastionHost", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBastionHost.
type LookupBastionHostArgs struct {
	// The name of the Bastion Host.
	Name string `pulumi:"name"`
	// The name of the Resource Group where the Bastion Host exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getBastionHost.
type LookupBastionHostResult struct {
	// Is Copy/Paste feature enabled for the Bastion Host.
	CopyPasteEnabled bool `pulumi:"copyPasteEnabled"`
	// The FQDN for the Bastion Host.
	DnsName string `pulumi:"dnsName"`
	// Is File Copy feature enabled for the Bastion Host.
	FileCopyEnabled bool `pulumi:"fileCopyEnabled"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A `ipConfiguration` block as defined below.
	IpConfigurations []GetBastionHostIpConfiguration `pulumi:"ipConfigurations"`
	// Is IP Connect feature enabled for the Bastion Host.
	IpConnectEnabled bool `pulumi:"ipConnectEnabled"`
	// The Azure Region where the Bastion Host exists.
	Location string `pulumi:"location"`
	// The name of the IP configuration.
	Name              string `pulumi:"name"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The number of scale units provisioned for the Bastion Host.
	ScaleUnits int `pulumi:"scaleUnits"`
	// Is Shareable Link feature enabled for the Bastion Host.
	ShareableLinkEnabled bool `pulumi:"shareableLinkEnabled"`
	// The SKU of the Bastion Host.
	Sku string `pulumi:"sku"`
	// A mapping of tags assigned to the Bastion Host.
	Tags map[string]string `pulumi:"tags"`
	// Is Tunneling feature enabled for the Bastion Host.
	TunnelingEnabled bool `pulumi:"tunnelingEnabled"`
}

func LookupBastionHostOutput(ctx *pulumi.Context, args LookupBastionHostOutputArgs, opts ...pulumi.InvokeOption) LookupBastionHostResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBastionHostResult, error) {
			args := v.(LookupBastionHostArgs)
			r, err := LookupBastionHost(ctx, &args, opts...)
			var s LookupBastionHostResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBastionHostResultOutput)
}

// A collection of arguments for invoking getBastionHost.
type LookupBastionHostOutputArgs struct {
	// The name of the Bastion Host.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Resource Group where the Bastion Host exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupBastionHostOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBastionHostArgs)(nil)).Elem()
}

// A collection of values returned by getBastionHost.
type LookupBastionHostResultOutput struct{ *pulumi.OutputState }

func (LookupBastionHostResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBastionHostResult)(nil)).Elem()
}

func (o LookupBastionHostResultOutput) ToLookupBastionHostResultOutput() LookupBastionHostResultOutput {
	return o
}

func (o LookupBastionHostResultOutput) ToLookupBastionHostResultOutputWithContext(ctx context.Context) LookupBastionHostResultOutput {
	return o
}

// Is Copy/Paste feature enabled for the Bastion Host.
func (o LookupBastionHostResultOutput) CopyPasteEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBastionHostResult) bool { return v.CopyPasteEnabled }).(pulumi.BoolOutput)
}

// The FQDN for the Bastion Host.
func (o LookupBastionHostResultOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBastionHostResult) string { return v.DnsName }).(pulumi.StringOutput)
}

// Is File Copy feature enabled for the Bastion Host.
func (o LookupBastionHostResultOutput) FileCopyEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBastionHostResult) bool { return v.FileCopyEnabled }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupBastionHostResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBastionHostResult) string { return v.Id }).(pulumi.StringOutput)
}

// A `ipConfiguration` block as defined below.
func (o LookupBastionHostResultOutput) IpConfigurations() GetBastionHostIpConfigurationArrayOutput {
	return o.ApplyT(func(v LookupBastionHostResult) []GetBastionHostIpConfiguration { return v.IpConfigurations }).(GetBastionHostIpConfigurationArrayOutput)
}

// Is IP Connect feature enabled for the Bastion Host.
func (o LookupBastionHostResultOutput) IpConnectEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBastionHostResult) bool { return v.IpConnectEnabled }).(pulumi.BoolOutput)
}

// The Azure Region where the Bastion Host exists.
func (o LookupBastionHostResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBastionHostResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the IP configuration.
func (o LookupBastionHostResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBastionHostResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupBastionHostResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBastionHostResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The number of scale units provisioned for the Bastion Host.
func (o LookupBastionHostResultOutput) ScaleUnits() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBastionHostResult) int { return v.ScaleUnits }).(pulumi.IntOutput)
}

// Is Shareable Link feature enabled for the Bastion Host.
func (o LookupBastionHostResultOutput) ShareableLinkEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBastionHostResult) bool { return v.ShareableLinkEnabled }).(pulumi.BoolOutput)
}

// The SKU of the Bastion Host.
func (o LookupBastionHostResultOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBastionHostResult) string { return v.Sku }).(pulumi.StringOutput)
}

// A mapping of tags assigned to the Bastion Host.
func (o LookupBastionHostResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBastionHostResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Is Tunneling feature enabled for the Bastion Host.
func (o LookupBastionHostResultOutput) TunnelingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBastionHostResult) bool { return v.TunnelingEnabled }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBastionHostResultOutput{})
}
