// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type BastionHostIpConfiguration struct {
	// The name of the IP configuration.
	Name string `pulumi:"name"`
	// Reference to a Public IP Address to associate with this Bastion Host.
	PublicIpAddressId string `pulumi:"publicIpAddressId"`
	// Reference to a subnet in which this Bastion Host has been created.
	SubnetId string `pulumi:"subnetId"`
}

// BastionHostIpConfigurationInput is an input type that accepts BastionHostIpConfigurationArgs and BastionHostIpConfigurationOutput values.
// You can construct a concrete instance of `BastionHostIpConfigurationInput` via:
//
// 		 BastionHostIpConfigurationArgs{...}
//
type BastionHostIpConfigurationInput interface {
	pulumi.Input

	ToBastionHostIpConfigurationOutput() BastionHostIpConfigurationOutput
	ToBastionHostIpConfigurationOutputWithContext(context.Context) BastionHostIpConfigurationOutput
}

type BastionHostIpConfigurationArgs struct {
	// The name of the IP configuration.
	Name pulumi.StringInput `pulumi:"name"`
	// Reference to a Public IP Address to associate with this Bastion Host.
	PublicIpAddressId pulumi.StringInput `pulumi:"publicIpAddressId"`
	// Reference to a subnet in which this Bastion Host has been created.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (BastionHostIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BastionHostIpConfiguration)(nil)).Elem()
}

func (i BastionHostIpConfigurationArgs) ToBastionHostIpConfigurationOutput() BastionHostIpConfigurationOutput {
	return i.ToBastionHostIpConfigurationOutputWithContext(context.Background())
}

func (i BastionHostIpConfigurationArgs) ToBastionHostIpConfigurationOutputWithContext(ctx context.Context) BastionHostIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BastionHostIpConfigurationOutput)
}

func (i BastionHostIpConfigurationArgs) ToBastionHostIpConfigurationPtrOutput() BastionHostIpConfigurationPtrOutput {
	return i.ToBastionHostIpConfigurationPtrOutputWithContext(context.Background())
}

func (i BastionHostIpConfigurationArgs) ToBastionHostIpConfigurationPtrOutputWithContext(ctx context.Context) BastionHostIpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BastionHostIpConfigurationOutput).ToBastionHostIpConfigurationPtrOutputWithContext(ctx)
}

// BastionHostIpConfigurationPtrInput is an input type that accepts BastionHostIpConfigurationArgs, BastionHostIpConfigurationPtr and BastionHostIpConfigurationPtrOutput values.
// You can construct a concrete instance of `BastionHostIpConfigurationPtrInput` via:
//
// 		 BastionHostIpConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type BastionHostIpConfigurationPtrInput interface {
	pulumi.Input

	ToBastionHostIpConfigurationPtrOutput() BastionHostIpConfigurationPtrOutput
	ToBastionHostIpConfigurationPtrOutputWithContext(context.Context) BastionHostIpConfigurationPtrOutput
}

type bastionHostIpConfigurationPtrType BastionHostIpConfigurationArgs

func BastionHostIpConfigurationPtr(v *BastionHostIpConfigurationArgs) BastionHostIpConfigurationPtrInput {
	return (*bastionHostIpConfigurationPtrType)(v)
}

func (*bastionHostIpConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BastionHostIpConfiguration)(nil)).Elem()
}

func (i *bastionHostIpConfigurationPtrType) ToBastionHostIpConfigurationPtrOutput() BastionHostIpConfigurationPtrOutput {
	return i.ToBastionHostIpConfigurationPtrOutputWithContext(context.Background())
}

func (i *bastionHostIpConfigurationPtrType) ToBastionHostIpConfigurationPtrOutputWithContext(ctx context.Context) BastionHostIpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BastionHostIpConfigurationPtrOutput)
}

type BastionHostIpConfigurationOutput struct{ *pulumi.OutputState }

func (BastionHostIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BastionHostIpConfiguration)(nil)).Elem()
}

func (o BastionHostIpConfigurationOutput) ToBastionHostIpConfigurationOutput() BastionHostIpConfigurationOutput {
	return o
}

func (o BastionHostIpConfigurationOutput) ToBastionHostIpConfigurationOutputWithContext(ctx context.Context) BastionHostIpConfigurationOutput {
	return o
}

func (o BastionHostIpConfigurationOutput) ToBastionHostIpConfigurationPtrOutput() BastionHostIpConfigurationPtrOutput {
	return o.ToBastionHostIpConfigurationPtrOutputWithContext(context.Background())
}

func (o BastionHostIpConfigurationOutput) ToBastionHostIpConfigurationPtrOutputWithContext(ctx context.Context) BastionHostIpConfigurationPtrOutput {
	return o.ApplyT(func(v BastionHostIpConfiguration) *BastionHostIpConfiguration {
		return &v
	}).(BastionHostIpConfigurationPtrOutput)
}

// The name of the IP configuration.
func (o BastionHostIpConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BastionHostIpConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// Reference to a Public IP Address to associate with this Bastion Host.
func (o BastionHostIpConfigurationOutput) PublicIpAddressId() pulumi.StringOutput {
	return o.ApplyT(func(v BastionHostIpConfiguration) string { return v.PublicIpAddressId }).(pulumi.StringOutput)
}

// Reference to a subnet in which this Bastion Host has been created.
func (o BastionHostIpConfigurationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v BastionHostIpConfiguration) string { return v.SubnetId }).(pulumi.StringOutput)
}

type BastionHostIpConfigurationPtrOutput struct{ *pulumi.OutputState }

func (BastionHostIpConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BastionHostIpConfiguration)(nil)).Elem()
}

func (o BastionHostIpConfigurationPtrOutput) ToBastionHostIpConfigurationPtrOutput() BastionHostIpConfigurationPtrOutput {
	return o
}

func (o BastionHostIpConfigurationPtrOutput) ToBastionHostIpConfigurationPtrOutputWithContext(ctx context.Context) BastionHostIpConfigurationPtrOutput {
	return o
}

func (o BastionHostIpConfigurationPtrOutput) Elem() BastionHostIpConfigurationOutput {
	return o.ApplyT(func(v *BastionHostIpConfiguration) BastionHostIpConfiguration { return *v }).(BastionHostIpConfigurationOutput)
}

// The name of the IP configuration.
func (o BastionHostIpConfigurationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BastionHostIpConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Reference to a Public IP Address to associate with this Bastion Host.
func (o BastionHostIpConfigurationPtrOutput) PublicIpAddressId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BastionHostIpConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.PublicIpAddressId
	}).(pulumi.StringPtrOutput)
}

// Reference to a subnet in which this Bastion Host has been created.
func (o BastionHostIpConfigurationPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BastionHostIpConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.SubnetId
	}).(pulumi.StringPtrOutput)
}

type DiskEncryptionSetIdentity struct {
	// The (Client) ID of the Service Principal.
	PrincipalId *string `pulumi:"principalId"`
	// The ID of the Tenant the Service Principal is assigned in.
	TenantId *string `pulumi:"tenantId"`
	// The Type of Identity which should be used for this Disk Encryption Set. At this time the only possible value is `SystemAssigned`.
	Type string `pulumi:"type"`
}

// DiskEncryptionSetIdentityInput is an input type that accepts DiskEncryptionSetIdentityArgs and DiskEncryptionSetIdentityOutput values.
// You can construct a concrete instance of `DiskEncryptionSetIdentityInput` via:
//
// 		 DiskEncryptionSetIdentityArgs{...}
//
type DiskEncryptionSetIdentityInput interface {
	pulumi.Input

	ToDiskEncryptionSetIdentityOutput() DiskEncryptionSetIdentityOutput
	ToDiskEncryptionSetIdentityOutputWithContext(context.Context) DiskEncryptionSetIdentityOutput
}

type DiskEncryptionSetIdentityArgs struct {
	// The (Client) ID of the Service Principal.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The ID of the Tenant the Service Principal is assigned in.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The Type of Identity which should be used for this Disk Encryption Set. At this time the only possible value is `SystemAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DiskEncryptionSetIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskEncryptionSetIdentity)(nil)).Elem()
}

func (i DiskEncryptionSetIdentityArgs) ToDiskEncryptionSetIdentityOutput() DiskEncryptionSetIdentityOutput {
	return i.ToDiskEncryptionSetIdentityOutputWithContext(context.Background())
}

func (i DiskEncryptionSetIdentityArgs) ToDiskEncryptionSetIdentityOutputWithContext(ctx context.Context) DiskEncryptionSetIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionSetIdentityOutput)
}

func (i DiskEncryptionSetIdentityArgs) ToDiskEncryptionSetIdentityPtrOutput() DiskEncryptionSetIdentityPtrOutput {
	return i.ToDiskEncryptionSetIdentityPtrOutputWithContext(context.Background())
}

func (i DiskEncryptionSetIdentityArgs) ToDiskEncryptionSetIdentityPtrOutputWithContext(ctx context.Context) DiskEncryptionSetIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionSetIdentityOutput).ToDiskEncryptionSetIdentityPtrOutputWithContext(ctx)
}

// DiskEncryptionSetIdentityPtrInput is an input type that accepts DiskEncryptionSetIdentityArgs, DiskEncryptionSetIdentityPtr and DiskEncryptionSetIdentityPtrOutput values.
// You can construct a concrete instance of `DiskEncryptionSetIdentityPtrInput` via:
//
// 		 DiskEncryptionSetIdentityArgs{...}
//
//  or:
//
// 		 nil
//
type DiskEncryptionSetIdentityPtrInput interface {
	pulumi.Input

	ToDiskEncryptionSetIdentityPtrOutput() DiskEncryptionSetIdentityPtrOutput
	ToDiskEncryptionSetIdentityPtrOutputWithContext(context.Context) DiskEncryptionSetIdentityPtrOutput
}

type diskEncryptionSetIdentityPtrType DiskEncryptionSetIdentityArgs

func DiskEncryptionSetIdentityPtr(v *DiskEncryptionSetIdentityArgs) DiskEncryptionSetIdentityPtrInput {
	return (*diskEncryptionSetIdentityPtrType)(v)
}

func (*diskEncryptionSetIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskEncryptionSetIdentity)(nil)).Elem()
}

func (i *diskEncryptionSetIdentityPtrType) ToDiskEncryptionSetIdentityPtrOutput() DiskEncryptionSetIdentityPtrOutput {
	return i.ToDiskEncryptionSetIdentityPtrOutputWithContext(context.Background())
}

func (i *diskEncryptionSetIdentityPtrType) ToDiskEncryptionSetIdentityPtrOutputWithContext(ctx context.Context) DiskEncryptionSetIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskEncryptionSetIdentityPtrOutput)
}

type DiskEncryptionSetIdentityOutput struct{ *pulumi.OutputState }

func (DiskEncryptionSetIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskEncryptionSetIdentity)(nil)).Elem()
}

func (o DiskEncryptionSetIdentityOutput) ToDiskEncryptionSetIdentityOutput() DiskEncryptionSetIdentityOutput {
	return o
}

func (o DiskEncryptionSetIdentityOutput) ToDiskEncryptionSetIdentityOutputWithContext(ctx context.Context) DiskEncryptionSetIdentityOutput {
	return o
}

func (o DiskEncryptionSetIdentityOutput) ToDiskEncryptionSetIdentityPtrOutput() DiskEncryptionSetIdentityPtrOutput {
	return o.ToDiskEncryptionSetIdentityPtrOutputWithContext(context.Background())
}

func (o DiskEncryptionSetIdentityOutput) ToDiskEncryptionSetIdentityPtrOutputWithContext(ctx context.Context) DiskEncryptionSetIdentityPtrOutput {
	return o.ApplyT(func(v DiskEncryptionSetIdentity) *DiskEncryptionSetIdentity {
		return &v
	}).(DiskEncryptionSetIdentityPtrOutput)
}

// The (Client) ID of the Service Principal.
func (o DiskEncryptionSetIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiskEncryptionSetIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The ID of the Tenant the Service Principal is assigned in.
func (o DiskEncryptionSetIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiskEncryptionSetIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The Type of Identity which should be used for this Disk Encryption Set. At this time the only possible value is `SystemAssigned`.
func (o DiskEncryptionSetIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DiskEncryptionSetIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type DiskEncryptionSetIdentityPtrOutput struct{ *pulumi.OutputState }

func (DiskEncryptionSetIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskEncryptionSetIdentity)(nil)).Elem()
}

func (o DiskEncryptionSetIdentityPtrOutput) ToDiskEncryptionSetIdentityPtrOutput() DiskEncryptionSetIdentityPtrOutput {
	return o
}

func (o DiskEncryptionSetIdentityPtrOutput) ToDiskEncryptionSetIdentityPtrOutputWithContext(ctx context.Context) DiskEncryptionSetIdentityPtrOutput {
	return o
}

func (o DiskEncryptionSetIdentityPtrOutput) Elem() DiskEncryptionSetIdentityOutput {
	return o.ApplyT(func(v *DiskEncryptionSetIdentity) DiskEncryptionSetIdentity { return *v }).(DiskEncryptionSetIdentityOutput)
}

// The (Client) ID of the Service Principal.
func (o DiskEncryptionSetIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskEncryptionSetIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The ID of the Tenant the Service Principal is assigned in.
func (o DiskEncryptionSetIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskEncryptionSetIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The Type of Identity which should be used for this Disk Encryption Set. At this time the only possible value is `SystemAssigned`.
func (o DiskEncryptionSetIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskEncryptionSetIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ImageDataDisk struct {
	// Specifies the URI in Azure storage of the blob that you want to use to create the image.
	BlobUri *string `pulumi:"blobUri"`
	// Specifies the caching mode as `ReadWrite`, `ReadOnly`, or `None`. The default is `None`.
	Caching *string `pulumi:"caching"`
	// Specifies the logical unit number of the data disk.
	Lun *int `pulumi:"lun"`
	// Specifies the ID of the managed disk resource that you want to use to create the image.
	ManagedDiskId *string `pulumi:"managedDiskId"`
	// Specifies the size of the image to be created. The target size can't be smaller than the source size.
	SizeGb *int `pulumi:"sizeGb"`
}

// ImageDataDiskInput is an input type that accepts ImageDataDiskArgs and ImageDataDiskOutput values.
// You can construct a concrete instance of `ImageDataDiskInput` via:
//
// 		 ImageDataDiskArgs{...}
//
type ImageDataDiskInput interface {
	pulumi.Input

	ToImageDataDiskOutput() ImageDataDiskOutput
	ToImageDataDiskOutputWithContext(context.Context) ImageDataDiskOutput
}

type ImageDataDiskArgs struct {
	// Specifies the URI in Azure storage of the blob that you want to use to create the image.
	BlobUri pulumi.StringPtrInput `pulumi:"blobUri"`
	// Specifies the caching mode as `ReadWrite`, `ReadOnly`, or `None`. The default is `None`.
	Caching pulumi.StringPtrInput `pulumi:"caching"`
	// Specifies the logical unit number of the data disk.
	Lun pulumi.IntPtrInput `pulumi:"lun"`
	// Specifies the ID of the managed disk resource that you want to use to create the image.
	ManagedDiskId pulumi.StringPtrInput `pulumi:"managedDiskId"`
	// Specifies the size of the image to be created. The target size can't be smaller than the source size.
	SizeGb pulumi.IntPtrInput `pulumi:"sizeGb"`
}

func (ImageDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageDataDisk)(nil)).Elem()
}

func (i ImageDataDiskArgs) ToImageDataDiskOutput() ImageDataDiskOutput {
	return i.ToImageDataDiskOutputWithContext(context.Background())
}

func (i ImageDataDiskArgs) ToImageDataDiskOutputWithContext(ctx context.Context) ImageDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageDataDiskOutput)
}

// ImageDataDiskArrayInput is an input type that accepts ImageDataDiskArray and ImageDataDiskArrayOutput values.
// You can construct a concrete instance of `ImageDataDiskArrayInput` via:
//
// 		 ImageDataDiskArray{ ImageDataDiskArgs{...} }
//
type ImageDataDiskArrayInput interface {
	pulumi.Input

	ToImageDataDiskArrayOutput() ImageDataDiskArrayOutput
	ToImageDataDiskArrayOutputWithContext(context.Context) ImageDataDiskArrayOutput
}

type ImageDataDiskArray []ImageDataDiskInput

func (ImageDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageDataDisk)(nil)).Elem()
}

func (i ImageDataDiskArray) ToImageDataDiskArrayOutput() ImageDataDiskArrayOutput {
	return i.ToImageDataDiskArrayOutputWithContext(context.Background())
}

func (i ImageDataDiskArray) ToImageDataDiskArrayOutputWithContext(ctx context.Context) ImageDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageDataDiskArrayOutput)
}

type ImageDataDiskOutput struct{ *pulumi.OutputState }

func (ImageDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageDataDisk)(nil)).Elem()
}

func (o ImageDataDiskOutput) ToImageDataDiskOutput() ImageDataDiskOutput {
	return o
}

func (o ImageDataDiskOutput) ToImageDataDiskOutputWithContext(ctx context.Context) ImageDataDiskOutput {
	return o
}

// Specifies the URI in Azure storage of the blob that you want to use to create the image.
func (o ImageDataDiskOutput) BlobUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageDataDisk) *string { return v.BlobUri }).(pulumi.StringPtrOutput)
}

// Specifies the caching mode as `ReadWrite`, `ReadOnly`, or `None`. The default is `None`.
func (o ImageDataDiskOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageDataDisk) *string { return v.Caching }).(pulumi.StringPtrOutput)
}

// Specifies the logical unit number of the data disk.
func (o ImageDataDiskOutput) Lun() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ImageDataDisk) *int { return v.Lun }).(pulumi.IntPtrOutput)
}

// Specifies the ID of the managed disk resource that you want to use to create the image.
func (o ImageDataDiskOutput) ManagedDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageDataDisk) *string { return v.ManagedDiskId }).(pulumi.StringPtrOutput)
}

// Specifies the size of the image to be created. The target size can't be smaller than the source size.
func (o ImageDataDiskOutput) SizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ImageDataDisk) *int { return v.SizeGb }).(pulumi.IntPtrOutput)
}

type ImageDataDiskArrayOutput struct{ *pulumi.OutputState }

func (ImageDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageDataDisk)(nil)).Elem()
}

func (o ImageDataDiskArrayOutput) ToImageDataDiskArrayOutput() ImageDataDiskArrayOutput {
	return o
}

func (o ImageDataDiskArrayOutput) ToImageDataDiskArrayOutputWithContext(ctx context.Context) ImageDataDiskArrayOutput {
	return o
}

func (o ImageDataDiskArrayOutput) Index(i pulumi.IntInput) ImageDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageDataDisk {
		return vs[0].([]ImageDataDisk)[vs[1].(int)]
	}).(ImageDataDiskOutput)
}

type ImageOsDisk struct {
	// Specifies the URI in Azure storage of the blob that you want to use to create the image.
	BlobUri *string `pulumi:"blobUri"`
	// Specifies the caching mode as `ReadWrite`, `ReadOnly`, or `None`. The default is `None`.
	Caching *string `pulumi:"caching"`
	// Specifies the ID of the managed disk resource that you want to use to create the image.
	ManagedDiskId *string `pulumi:"managedDiskId"`
	// Specifies the state of the operating system contained in the blob. Currently, the only value is Generalized.
	OsState *string `pulumi:"osState"`
	// Specifies the type of operating system contained in the virtual machine image. Possible values are: Windows or Linux.
	OsType *string `pulumi:"osType"`
	// Specifies the size of the image to be created. The target size can't be smaller than the source size.
	SizeGb *int `pulumi:"sizeGb"`
}

// ImageOsDiskInput is an input type that accepts ImageOsDiskArgs and ImageOsDiskOutput values.
// You can construct a concrete instance of `ImageOsDiskInput` via:
//
// 		 ImageOsDiskArgs{...}
//
type ImageOsDiskInput interface {
	pulumi.Input

	ToImageOsDiskOutput() ImageOsDiskOutput
	ToImageOsDiskOutputWithContext(context.Context) ImageOsDiskOutput
}

type ImageOsDiskArgs struct {
	// Specifies the URI in Azure storage of the blob that you want to use to create the image.
	BlobUri pulumi.StringPtrInput `pulumi:"blobUri"`
	// Specifies the caching mode as `ReadWrite`, `ReadOnly`, or `None`. The default is `None`.
	Caching pulumi.StringPtrInput `pulumi:"caching"`
	// Specifies the ID of the managed disk resource that you want to use to create the image.
	ManagedDiskId pulumi.StringPtrInput `pulumi:"managedDiskId"`
	// Specifies the state of the operating system contained in the blob. Currently, the only value is Generalized.
	OsState pulumi.StringPtrInput `pulumi:"osState"`
	// Specifies the type of operating system contained in the virtual machine image. Possible values are: Windows or Linux.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// Specifies the size of the image to be created. The target size can't be smaller than the source size.
	SizeGb pulumi.IntPtrInput `pulumi:"sizeGb"`
}

func (ImageOsDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageOsDisk)(nil)).Elem()
}

func (i ImageOsDiskArgs) ToImageOsDiskOutput() ImageOsDiskOutput {
	return i.ToImageOsDiskOutputWithContext(context.Background())
}

func (i ImageOsDiskArgs) ToImageOsDiskOutputWithContext(ctx context.Context) ImageOsDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageOsDiskOutput)
}

func (i ImageOsDiskArgs) ToImageOsDiskPtrOutput() ImageOsDiskPtrOutput {
	return i.ToImageOsDiskPtrOutputWithContext(context.Background())
}

func (i ImageOsDiskArgs) ToImageOsDiskPtrOutputWithContext(ctx context.Context) ImageOsDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageOsDiskOutput).ToImageOsDiskPtrOutputWithContext(ctx)
}

// ImageOsDiskPtrInput is an input type that accepts ImageOsDiskArgs, ImageOsDiskPtr and ImageOsDiskPtrOutput values.
// You can construct a concrete instance of `ImageOsDiskPtrInput` via:
//
// 		 ImageOsDiskArgs{...}
//
//  or:
//
// 		 nil
//
type ImageOsDiskPtrInput interface {
	pulumi.Input

	ToImageOsDiskPtrOutput() ImageOsDiskPtrOutput
	ToImageOsDiskPtrOutputWithContext(context.Context) ImageOsDiskPtrOutput
}

type imageOsDiskPtrType ImageOsDiskArgs

func ImageOsDiskPtr(v *ImageOsDiskArgs) ImageOsDiskPtrInput {
	return (*imageOsDiskPtrType)(v)
}

func (*imageOsDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageOsDisk)(nil)).Elem()
}

func (i *imageOsDiskPtrType) ToImageOsDiskPtrOutput() ImageOsDiskPtrOutput {
	return i.ToImageOsDiskPtrOutputWithContext(context.Background())
}

func (i *imageOsDiskPtrType) ToImageOsDiskPtrOutputWithContext(ctx context.Context) ImageOsDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageOsDiskPtrOutput)
}

type ImageOsDiskOutput struct{ *pulumi.OutputState }

func (ImageOsDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageOsDisk)(nil)).Elem()
}

func (o ImageOsDiskOutput) ToImageOsDiskOutput() ImageOsDiskOutput {
	return o
}

func (o ImageOsDiskOutput) ToImageOsDiskOutputWithContext(ctx context.Context) ImageOsDiskOutput {
	return o
}

func (o ImageOsDiskOutput) ToImageOsDiskPtrOutput() ImageOsDiskPtrOutput {
	return o.ToImageOsDiskPtrOutputWithContext(context.Background())
}

func (o ImageOsDiskOutput) ToImageOsDiskPtrOutputWithContext(ctx context.Context) ImageOsDiskPtrOutput {
	return o.ApplyT(func(v ImageOsDisk) *ImageOsDisk {
		return &v
	}).(ImageOsDiskPtrOutput)
}

// Specifies the URI in Azure storage of the blob that you want to use to create the image.
func (o ImageOsDiskOutput) BlobUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageOsDisk) *string { return v.BlobUri }).(pulumi.StringPtrOutput)
}

// Specifies the caching mode as `ReadWrite`, `ReadOnly`, or `None`. The default is `None`.
func (o ImageOsDiskOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageOsDisk) *string { return v.Caching }).(pulumi.StringPtrOutput)
}

// Specifies the ID of the managed disk resource that you want to use to create the image.
func (o ImageOsDiskOutput) ManagedDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageOsDisk) *string { return v.ManagedDiskId }).(pulumi.StringPtrOutput)
}

// Specifies the state of the operating system contained in the blob. Currently, the only value is Generalized.
func (o ImageOsDiskOutput) OsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageOsDisk) *string { return v.OsState }).(pulumi.StringPtrOutput)
}

// Specifies the type of operating system contained in the virtual machine image. Possible values are: Windows or Linux.
func (o ImageOsDiskOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ImageOsDisk) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// Specifies the size of the image to be created. The target size can't be smaller than the source size.
func (o ImageOsDiskOutput) SizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ImageOsDisk) *int { return v.SizeGb }).(pulumi.IntPtrOutput)
}

type ImageOsDiskPtrOutput struct{ *pulumi.OutputState }

func (ImageOsDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageOsDisk)(nil)).Elem()
}

func (o ImageOsDiskPtrOutput) ToImageOsDiskPtrOutput() ImageOsDiskPtrOutput {
	return o
}

func (o ImageOsDiskPtrOutput) ToImageOsDiskPtrOutputWithContext(ctx context.Context) ImageOsDiskPtrOutput {
	return o
}

func (o ImageOsDiskPtrOutput) Elem() ImageOsDiskOutput {
	return o.ApplyT(func(v *ImageOsDisk) ImageOsDisk { return *v }).(ImageOsDiskOutput)
}

// Specifies the URI in Azure storage of the blob that you want to use to create the image.
func (o ImageOsDiskPtrOutput) BlobUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageOsDisk) *string {
		if v == nil {
			return nil
		}
		return v.BlobUri
	}).(pulumi.StringPtrOutput)
}

// Specifies the caching mode as `ReadWrite`, `ReadOnly`, or `None`. The default is `None`.
func (o ImageOsDiskPtrOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageOsDisk) *string {
		if v == nil {
			return nil
		}
		return v.Caching
	}).(pulumi.StringPtrOutput)
}

// Specifies the ID of the managed disk resource that you want to use to create the image.
func (o ImageOsDiskPtrOutput) ManagedDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageOsDisk) *string {
		if v == nil {
			return nil
		}
		return v.ManagedDiskId
	}).(pulumi.StringPtrOutput)
}

// Specifies the state of the operating system contained in the blob. Currently, the only value is Generalized.
func (o ImageOsDiskPtrOutput) OsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageOsDisk) *string {
		if v == nil {
			return nil
		}
		return v.OsState
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of operating system contained in the virtual machine image. Possible values are: Windows or Linux.
func (o ImageOsDiskPtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImageOsDisk) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// Specifies the size of the image to be created. The target size can't be smaller than the source size.
func (o ImageOsDiskPtrOutput) SizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ImageOsDisk) *int {
		if v == nil {
			return nil
		}
		return v.SizeGb
	}).(pulumi.IntPtrOutput)
}

type LinuxVirtualMachineAdditionalCapabilities struct {
	// Should the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine? Defaults to `false`. Changing this forces a new resource to be created.
	UltraSsdEnabled *bool `pulumi:"ultraSsdEnabled"`
}

// LinuxVirtualMachineAdditionalCapabilitiesInput is an input type that accepts LinuxVirtualMachineAdditionalCapabilitiesArgs and LinuxVirtualMachineAdditionalCapabilitiesOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineAdditionalCapabilitiesInput` via:
//
// 		 LinuxVirtualMachineAdditionalCapabilitiesArgs{...}
//
type LinuxVirtualMachineAdditionalCapabilitiesInput interface {
	pulumi.Input

	ToLinuxVirtualMachineAdditionalCapabilitiesOutput() LinuxVirtualMachineAdditionalCapabilitiesOutput
	ToLinuxVirtualMachineAdditionalCapabilitiesOutputWithContext(context.Context) LinuxVirtualMachineAdditionalCapabilitiesOutput
}

type LinuxVirtualMachineAdditionalCapabilitiesArgs struct {
	// Should the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine? Defaults to `false`. Changing this forces a new resource to be created.
	UltraSsdEnabled pulumi.BoolPtrInput `pulumi:"ultraSsdEnabled"`
}

func (LinuxVirtualMachineAdditionalCapabilitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineAdditionalCapabilities)(nil)).Elem()
}

func (i LinuxVirtualMachineAdditionalCapabilitiesArgs) ToLinuxVirtualMachineAdditionalCapabilitiesOutput() LinuxVirtualMachineAdditionalCapabilitiesOutput {
	return i.ToLinuxVirtualMachineAdditionalCapabilitiesOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineAdditionalCapabilitiesArgs) ToLinuxVirtualMachineAdditionalCapabilitiesOutputWithContext(ctx context.Context) LinuxVirtualMachineAdditionalCapabilitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineAdditionalCapabilitiesOutput)
}

func (i LinuxVirtualMachineAdditionalCapabilitiesArgs) ToLinuxVirtualMachineAdditionalCapabilitiesPtrOutput() LinuxVirtualMachineAdditionalCapabilitiesPtrOutput {
	return i.ToLinuxVirtualMachineAdditionalCapabilitiesPtrOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineAdditionalCapabilitiesArgs) ToLinuxVirtualMachineAdditionalCapabilitiesPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineAdditionalCapabilitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineAdditionalCapabilitiesOutput).ToLinuxVirtualMachineAdditionalCapabilitiesPtrOutputWithContext(ctx)
}

// LinuxVirtualMachineAdditionalCapabilitiesPtrInput is an input type that accepts LinuxVirtualMachineAdditionalCapabilitiesArgs, LinuxVirtualMachineAdditionalCapabilitiesPtr and LinuxVirtualMachineAdditionalCapabilitiesPtrOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineAdditionalCapabilitiesPtrInput` via:
//
// 		 LinuxVirtualMachineAdditionalCapabilitiesArgs{...}
//
//  or:
//
// 		 nil
//
type LinuxVirtualMachineAdditionalCapabilitiesPtrInput interface {
	pulumi.Input

	ToLinuxVirtualMachineAdditionalCapabilitiesPtrOutput() LinuxVirtualMachineAdditionalCapabilitiesPtrOutput
	ToLinuxVirtualMachineAdditionalCapabilitiesPtrOutputWithContext(context.Context) LinuxVirtualMachineAdditionalCapabilitiesPtrOutput
}

type linuxVirtualMachineAdditionalCapabilitiesPtrType LinuxVirtualMachineAdditionalCapabilitiesArgs

func LinuxVirtualMachineAdditionalCapabilitiesPtr(v *LinuxVirtualMachineAdditionalCapabilitiesArgs) LinuxVirtualMachineAdditionalCapabilitiesPtrInput {
	return (*linuxVirtualMachineAdditionalCapabilitiesPtrType)(v)
}

func (*linuxVirtualMachineAdditionalCapabilitiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineAdditionalCapabilities)(nil)).Elem()
}

func (i *linuxVirtualMachineAdditionalCapabilitiesPtrType) ToLinuxVirtualMachineAdditionalCapabilitiesPtrOutput() LinuxVirtualMachineAdditionalCapabilitiesPtrOutput {
	return i.ToLinuxVirtualMachineAdditionalCapabilitiesPtrOutputWithContext(context.Background())
}

func (i *linuxVirtualMachineAdditionalCapabilitiesPtrType) ToLinuxVirtualMachineAdditionalCapabilitiesPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineAdditionalCapabilitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineAdditionalCapabilitiesPtrOutput)
}

type LinuxVirtualMachineAdditionalCapabilitiesOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineAdditionalCapabilitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineAdditionalCapabilities)(nil)).Elem()
}

func (o LinuxVirtualMachineAdditionalCapabilitiesOutput) ToLinuxVirtualMachineAdditionalCapabilitiesOutput() LinuxVirtualMachineAdditionalCapabilitiesOutput {
	return o
}

func (o LinuxVirtualMachineAdditionalCapabilitiesOutput) ToLinuxVirtualMachineAdditionalCapabilitiesOutputWithContext(ctx context.Context) LinuxVirtualMachineAdditionalCapabilitiesOutput {
	return o
}

func (o LinuxVirtualMachineAdditionalCapabilitiesOutput) ToLinuxVirtualMachineAdditionalCapabilitiesPtrOutput() LinuxVirtualMachineAdditionalCapabilitiesPtrOutput {
	return o.ToLinuxVirtualMachineAdditionalCapabilitiesPtrOutputWithContext(context.Background())
}

func (o LinuxVirtualMachineAdditionalCapabilitiesOutput) ToLinuxVirtualMachineAdditionalCapabilitiesPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineAdditionalCapabilitiesPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineAdditionalCapabilities) *LinuxVirtualMachineAdditionalCapabilities {
		return &v
	}).(LinuxVirtualMachineAdditionalCapabilitiesPtrOutput)
}

// Should the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine? Defaults to `false`. Changing this forces a new resource to be created.
func (o LinuxVirtualMachineAdditionalCapabilitiesOutput) UltraSsdEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineAdditionalCapabilities) *bool { return v.UltraSsdEnabled }).(pulumi.BoolPtrOutput)
}

type LinuxVirtualMachineAdditionalCapabilitiesPtrOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineAdditionalCapabilitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineAdditionalCapabilities)(nil)).Elem()
}

func (o LinuxVirtualMachineAdditionalCapabilitiesPtrOutput) ToLinuxVirtualMachineAdditionalCapabilitiesPtrOutput() LinuxVirtualMachineAdditionalCapabilitiesPtrOutput {
	return o
}

func (o LinuxVirtualMachineAdditionalCapabilitiesPtrOutput) ToLinuxVirtualMachineAdditionalCapabilitiesPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineAdditionalCapabilitiesPtrOutput {
	return o
}

func (o LinuxVirtualMachineAdditionalCapabilitiesPtrOutput) Elem() LinuxVirtualMachineAdditionalCapabilitiesOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineAdditionalCapabilities) LinuxVirtualMachineAdditionalCapabilities {
		return *v
	}).(LinuxVirtualMachineAdditionalCapabilitiesOutput)
}

// Should the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine? Defaults to `false`. Changing this forces a new resource to be created.
func (o LinuxVirtualMachineAdditionalCapabilitiesPtrOutput) UltraSsdEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineAdditionalCapabilities) *bool {
		if v == nil {
			return nil
		}
		return v.UltraSsdEnabled
	}).(pulumi.BoolPtrOutput)
}

type LinuxVirtualMachineAdminSshKey struct {
	// The Public Key which should be used for authentication, which needs to be at least 2048-bit and in `ssh-rsa` format. Changing this forces a new resource to be created.
	PublicKey string `pulumi:"publicKey"`
	// The Username for which this Public SSH Key should be configured. Changing this forces a new resource to be created.
	Username string `pulumi:"username"`
}

// LinuxVirtualMachineAdminSshKeyInput is an input type that accepts LinuxVirtualMachineAdminSshKeyArgs and LinuxVirtualMachineAdminSshKeyOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineAdminSshKeyInput` via:
//
// 		 LinuxVirtualMachineAdminSshKeyArgs{...}
//
type LinuxVirtualMachineAdminSshKeyInput interface {
	pulumi.Input

	ToLinuxVirtualMachineAdminSshKeyOutput() LinuxVirtualMachineAdminSshKeyOutput
	ToLinuxVirtualMachineAdminSshKeyOutputWithContext(context.Context) LinuxVirtualMachineAdminSshKeyOutput
}

type LinuxVirtualMachineAdminSshKeyArgs struct {
	// The Public Key which should be used for authentication, which needs to be at least 2048-bit and in `ssh-rsa` format. Changing this forces a new resource to be created.
	PublicKey pulumi.StringInput `pulumi:"publicKey"`
	// The Username for which this Public SSH Key should be configured. Changing this forces a new resource to be created.
	Username pulumi.StringInput `pulumi:"username"`
}

func (LinuxVirtualMachineAdminSshKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineAdminSshKey)(nil)).Elem()
}

func (i LinuxVirtualMachineAdminSshKeyArgs) ToLinuxVirtualMachineAdminSshKeyOutput() LinuxVirtualMachineAdminSshKeyOutput {
	return i.ToLinuxVirtualMachineAdminSshKeyOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineAdminSshKeyArgs) ToLinuxVirtualMachineAdminSshKeyOutputWithContext(ctx context.Context) LinuxVirtualMachineAdminSshKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineAdminSshKeyOutput)
}

// LinuxVirtualMachineAdminSshKeyArrayInput is an input type that accepts LinuxVirtualMachineAdminSshKeyArray and LinuxVirtualMachineAdminSshKeyArrayOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineAdminSshKeyArrayInput` via:
//
// 		 LinuxVirtualMachineAdminSshKeyArray{ LinuxVirtualMachineAdminSshKeyArgs{...} }
//
type LinuxVirtualMachineAdminSshKeyArrayInput interface {
	pulumi.Input

	ToLinuxVirtualMachineAdminSshKeyArrayOutput() LinuxVirtualMachineAdminSshKeyArrayOutput
	ToLinuxVirtualMachineAdminSshKeyArrayOutputWithContext(context.Context) LinuxVirtualMachineAdminSshKeyArrayOutput
}

type LinuxVirtualMachineAdminSshKeyArray []LinuxVirtualMachineAdminSshKeyInput

func (LinuxVirtualMachineAdminSshKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinuxVirtualMachineAdminSshKey)(nil)).Elem()
}

func (i LinuxVirtualMachineAdminSshKeyArray) ToLinuxVirtualMachineAdminSshKeyArrayOutput() LinuxVirtualMachineAdminSshKeyArrayOutput {
	return i.ToLinuxVirtualMachineAdminSshKeyArrayOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineAdminSshKeyArray) ToLinuxVirtualMachineAdminSshKeyArrayOutputWithContext(ctx context.Context) LinuxVirtualMachineAdminSshKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineAdminSshKeyArrayOutput)
}

type LinuxVirtualMachineAdminSshKeyOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineAdminSshKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineAdminSshKey)(nil)).Elem()
}

func (o LinuxVirtualMachineAdminSshKeyOutput) ToLinuxVirtualMachineAdminSshKeyOutput() LinuxVirtualMachineAdminSshKeyOutput {
	return o
}

func (o LinuxVirtualMachineAdminSshKeyOutput) ToLinuxVirtualMachineAdminSshKeyOutputWithContext(ctx context.Context) LinuxVirtualMachineAdminSshKeyOutput {
	return o
}

// The Public Key which should be used for authentication, which needs to be at least 2048-bit and in `ssh-rsa` format. Changing this forces a new resource to be created.
func (o LinuxVirtualMachineAdminSshKeyOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineAdminSshKey) string { return v.PublicKey }).(pulumi.StringOutput)
}

// The Username for which this Public SSH Key should be configured. Changing this forces a new resource to be created.
func (o LinuxVirtualMachineAdminSshKeyOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineAdminSshKey) string { return v.Username }).(pulumi.StringOutput)
}

type LinuxVirtualMachineAdminSshKeyArrayOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineAdminSshKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinuxVirtualMachineAdminSshKey)(nil)).Elem()
}

func (o LinuxVirtualMachineAdminSshKeyArrayOutput) ToLinuxVirtualMachineAdminSshKeyArrayOutput() LinuxVirtualMachineAdminSshKeyArrayOutput {
	return o
}

func (o LinuxVirtualMachineAdminSshKeyArrayOutput) ToLinuxVirtualMachineAdminSshKeyArrayOutputWithContext(ctx context.Context) LinuxVirtualMachineAdminSshKeyArrayOutput {
	return o
}

func (o LinuxVirtualMachineAdminSshKeyArrayOutput) Index(i pulumi.IntInput) LinuxVirtualMachineAdminSshKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LinuxVirtualMachineAdminSshKey {
		return vs[0].([]LinuxVirtualMachineAdminSshKey)[vs[1].(int)]
	}).(LinuxVirtualMachineAdminSshKeyOutput)
}

type LinuxVirtualMachineBootDiagnostics struct {
	// The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
	StorageAccountUri string `pulumi:"storageAccountUri"`
}

// LinuxVirtualMachineBootDiagnosticsInput is an input type that accepts LinuxVirtualMachineBootDiagnosticsArgs and LinuxVirtualMachineBootDiagnosticsOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineBootDiagnosticsInput` via:
//
// 		 LinuxVirtualMachineBootDiagnosticsArgs{...}
//
type LinuxVirtualMachineBootDiagnosticsInput interface {
	pulumi.Input

	ToLinuxVirtualMachineBootDiagnosticsOutput() LinuxVirtualMachineBootDiagnosticsOutput
	ToLinuxVirtualMachineBootDiagnosticsOutputWithContext(context.Context) LinuxVirtualMachineBootDiagnosticsOutput
}

type LinuxVirtualMachineBootDiagnosticsArgs struct {
	// The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
	StorageAccountUri pulumi.StringInput `pulumi:"storageAccountUri"`
}

func (LinuxVirtualMachineBootDiagnosticsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineBootDiagnostics)(nil)).Elem()
}

func (i LinuxVirtualMachineBootDiagnosticsArgs) ToLinuxVirtualMachineBootDiagnosticsOutput() LinuxVirtualMachineBootDiagnosticsOutput {
	return i.ToLinuxVirtualMachineBootDiagnosticsOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineBootDiagnosticsArgs) ToLinuxVirtualMachineBootDiagnosticsOutputWithContext(ctx context.Context) LinuxVirtualMachineBootDiagnosticsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineBootDiagnosticsOutput)
}

func (i LinuxVirtualMachineBootDiagnosticsArgs) ToLinuxVirtualMachineBootDiagnosticsPtrOutput() LinuxVirtualMachineBootDiagnosticsPtrOutput {
	return i.ToLinuxVirtualMachineBootDiagnosticsPtrOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineBootDiagnosticsArgs) ToLinuxVirtualMachineBootDiagnosticsPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineBootDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineBootDiagnosticsOutput).ToLinuxVirtualMachineBootDiagnosticsPtrOutputWithContext(ctx)
}

// LinuxVirtualMachineBootDiagnosticsPtrInput is an input type that accepts LinuxVirtualMachineBootDiagnosticsArgs, LinuxVirtualMachineBootDiagnosticsPtr and LinuxVirtualMachineBootDiagnosticsPtrOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineBootDiagnosticsPtrInput` via:
//
// 		 LinuxVirtualMachineBootDiagnosticsArgs{...}
//
//  or:
//
// 		 nil
//
type LinuxVirtualMachineBootDiagnosticsPtrInput interface {
	pulumi.Input

	ToLinuxVirtualMachineBootDiagnosticsPtrOutput() LinuxVirtualMachineBootDiagnosticsPtrOutput
	ToLinuxVirtualMachineBootDiagnosticsPtrOutputWithContext(context.Context) LinuxVirtualMachineBootDiagnosticsPtrOutput
}

type linuxVirtualMachineBootDiagnosticsPtrType LinuxVirtualMachineBootDiagnosticsArgs

func LinuxVirtualMachineBootDiagnosticsPtr(v *LinuxVirtualMachineBootDiagnosticsArgs) LinuxVirtualMachineBootDiagnosticsPtrInput {
	return (*linuxVirtualMachineBootDiagnosticsPtrType)(v)
}

func (*linuxVirtualMachineBootDiagnosticsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineBootDiagnostics)(nil)).Elem()
}

func (i *linuxVirtualMachineBootDiagnosticsPtrType) ToLinuxVirtualMachineBootDiagnosticsPtrOutput() LinuxVirtualMachineBootDiagnosticsPtrOutput {
	return i.ToLinuxVirtualMachineBootDiagnosticsPtrOutputWithContext(context.Background())
}

func (i *linuxVirtualMachineBootDiagnosticsPtrType) ToLinuxVirtualMachineBootDiagnosticsPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineBootDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineBootDiagnosticsPtrOutput)
}

type LinuxVirtualMachineBootDiagnosticsOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineBootDiagnosticsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineBootDiagnostics)(nil)).Elem()
}

func (o LinuxVirtualMachineBootDiagnosticsOutput) ToLinuxVirtualMachineBootDiagnosticsOutput() LinuxVirtualMachineBootDiagnosticsOutput {
	return o
}

func (o LinuxVirtualMachineBootDiagnosticsOutput) ToLinuxVirtualMachineBootDiagnosticsOutputWithContext(ctx context.Context) LinuxVirtualMachineBootDiagnosticsOutput {
	return o
}

func (o LinuxVirtualMachineBootDiagnosticsOutput) ToLinuxVirtualMachineBootDiagnosticsPtrOutput() LinuxVirtualMachineBootDiagnosticsPtrOutput {
	return o.ToLinuxVirtualMachineBootDiagnosticsPtrOutputWithContext(context.Background())
}

func (o LinuxVirtualMachineBootDiagnosticsOutput) ToLinuxVirtualMachineBootDiagnosticsPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineBootDiagnosticsPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineBootDiagnostics) *LinuxVirtualMachineBootDiagnostics {
		return &v
	}).(LinuxVirtualMachineBootDiagnosticsPtrOutput)
}

// The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
func (o LinuxVirtualMachineBootDiagnosticsOutput) StorageAccountUri() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineBootDiagnostics) string { return v.StorageAccountUri }).(pulumi.StringOutput)
}

type LinuxVirtualMachineBootDiagnosticsPtrOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineBootDiagnosticsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineBootDiagnostics)(nil)).Elem()
}

func (o LinuxVirtualMachineBootDiagnosticsPtrOutput) ToLinuxVirtualMachineBootDiagnosticsPtrOutput() LinuxVirtualMachineBootDiagnosticsPtrOutput {
	return o
}

func (o LinuxVirtualMachineBootDiagnosticsPtrOutput) ToLinuxVirtualMachineBootDiagnosticsPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineBootDiagnosticsPtrOutput {
	return o
}

func (o LinuxVirtualMachineBootDiagnosticsPtrOutput) Elem() LinuxVirtualMachineBootDiagnosticsOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineBootDiagnostics) LinuxVirtualMachineBootDiagnostics { return *v }).(LinuxVirtualMachineBootDiagnosticsOutput)
}

// The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
func (o LinuxVirtualMachineBootDiagnosticsPtrOutput) StorageAccountUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineBootDiagnostics) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountUri
	}).(pulumi.StringPtrOutput)
}

type LinuxVirtualMachineIdentity struct {
	// A list of User Managed Identity ID's which should be assigned to the Linux Virtual Machine.
	IdentityIds []string `pulumi:"identityIds"`
	// The ID of the System Managed Service Principal.
	PrincipalId *string `pulumi:"principalId"`
	// The ID of the Tenant the System Managed Service Principal is assigned in.
	TenantId *string `pulumi:"tenantId"`
	// The type of Managed Identity which should be assigned to the Linux Virtual Machine. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
	Type string `pulumi:"type"`
}

// LinuxVirtualMachineIdentityInput is an input type that accepts LinuxVirtualMachineIdentityArgs and LinuxVirtualMachineIdentityOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineIdentityInput` via:
//
// 		 LinuxVirtualMachineIdentityArgs{...}
//
type LinuxVirtualMachineIdentityInput interface {
	pulumi.Input

	ToLinuxVirtualMachineIdentityOutput() LinuxVirtualMachineIdentityOutput
	ToLinuxVirtualMachineIdentityOutputWithContext(context.Context) LinuxVirtualMachineIdentityOutput
}

type LinuxVirtualMachineIdentityArgs struct {
	// A list of User Managed Identity ID's which should be assigned to the Linux Virtual Machine.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The ID of the System Managed Service Principal.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The ID of the Tenant the System Managed Service Principal is assigned in.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The type of Managed Identity which should be assigned to the Linux Virtual Machine. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (LinuxVirtualMachineIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineIdentity)(nil)).Elem()
}

func (i LinuxVirtualMachineIdentityArgs) ToLinuxVirtualMachineIdentityOutput() LinuxVirtualMachineIdentityOutput {
	return i.ToLinuxVirtualMachineIdentityOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineIdentityArgs) ToLinuxVirtualMachineIdentityOutputWithContext(ctx context.Context) LinuxVirtualMachineIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineIdentityOutput)
}

func (i LinuxVirtualMachineIdentityArgs) ToLinuxVirtualMachineIdentityPtrOutput() LinuxVirtualMachineIdentityPtrOutput {
	return i.ToLinuxVirtualMachineIdentityPtrOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineIdentityArgs) ToLinuxVirtualMachineIdentityPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineIdentityOutput).ToLinuxVirtualMachineIdentityPtrOutputWithContext(ctx)
}

// LinuxVirtualMachineIdentityPtrInput is an input type that accepts LinuxVirtualMachineIdentityArgs, LinuxVirtualMachineIdentityPtr and LinuxVirtualMachineIdentityPtrOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineIdentityPtrInput` via:
//
// 		 LinuxVirtualMachineIdentityArgs{...}
//
//  or:
//
// 		 nil
//
type LinuxVirtualMachineIdentityPtrInput interface {
	pulumi.Input

	ToLinuxVirtualMachineIdentityPtrOutput() LinuxVirtualMachineIdentityPtrOutput
	ToLinuxVirtualMachineIdentityPtrOutputWithContext(context.Context) LinuxVirtualMachineIdentityPtrOutput
}

type linuxVirtualMachineIdentityPtrType LinuxVirtualMachineIdentityArgs

func LinuxVirtualMachineIdentityPtr(v *LinuxVirtualMachineIdentityArgs) LinuxVirtualMachineIdentityPtrInput {
	return (*linuxVirtualMachineIdentityPtrType)(v)
}

func (*linuxVirtualMachineIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineIdentity)(nil)).Elem()
}

func (i *linuxVirtualMachineIdentityPtrType) ToLinuxVirtualMachineIdentityPtrOutput() LinuxVirtualMachineIdentityPtrOutput {
	return i.ToLinuxVirtualMachineIdentityPtrOutputWithContext(context.Background())
}

func (i *linuxVirtualMachineIdentityPtrType) ToLinuxVirtualMachineIdentityPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineIdentityPtrOutput)
}

type LinuxVirtualMachineIdentityOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineIdentity)(nil)).Elem()
}

func (o LinuxVirtualMachineIdentityOutput) ToLinuxVirtualMachineIdentityOutput() LinuxVirtualMachineIdentityOutput {
	return o
}

func (o LinuxVirtualMachineIdentityOutput) ToLinuxVirtualMachineIdentityOutputWithContext(ctx context.Context) LinuxVirtualMachineIdentityOutput {
	return o
}

func (o LinuxVirtualMachineIdentityOutput) ToLinuxVirtualMachineIdentityPtrOutput() LinuxVirtualMachineIdentityPtrOutput {
	return o.ToLinuxVirtualMachineIdentityPtrOutputWithContext(context.Background())
}

func (o LinuxVirtualMachineIdentityOutput) ToLinuxVirtualMachineIdentityPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineIdentityPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineIdentity) *LinuxVirtualMachineIdentity {
		return &v
	}).(LinuxVirtualMachineIdentityPtrOutput)
}

// A list of User Managed Identity ID's which should be assigned to the Linux Virtual Machine.
func (o LinuxVirtualMachineIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LinuxVirtualMachineIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The ID of the System Managed Service Principal.
func (o LinuxVirtualMachineIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The ID of the Tenant the System Managed Service Principal is assigned in.
func (o LinuxVirtualMachineIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The type of Managed Identity which should be assigned to the Linux Virtual Machine. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
func (o LinuxVirtualMachineIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type LinuxVirtualMachineIdentityPtrOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineIdentity)(nil)).Elem()
}

func (o LinuxVirtualMachineIdentityPtrOutput) ToLinuxVirtualMachineIdentityPtrOutput() LinuxVirtualMachineIdentityPtrOutput {
	return o
}

func (o LinuxVirtualMachineIdentityPtrOutput) ToLinuxVirtualMachineIdentityPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineIdentityPtrOutput {
	return o
}

func (o LinuxVirtualMachineIdentityPtrOutput) Elem() LinuxVirtualMachineIdentityOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineIdentity) LinuxVirtualMachineIdentity { return *v }).(LinuxVirtualMachineIdentityOutput)
}

// A list of User Managed Identity ID's which should be assigned to the Linux Virtual Machine.
func (o LinuxVirtualMachineIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The ID of the System Managed Service Principal.
func (o LinuxVirtualMachineIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The ID of the Tenant the System Managed Service Principal is assigned in.
func (o LinuxVirtualMachineIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of Managed Identity which should be assigned to the Linux Virtual Machine. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
func (o LinuxVirtualMachineIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type LinuxVirtualMachineOsDisk struct {
	// The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
	Caching string `pulumi:"caching"`
	// A `diffDiskSettings` block as defined above.
	DiffDiskSettings *LinuxVirtualMachineOsDiskDiffDiskSettings `pulumi:"diffDiskSettings"`
	// The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine is sourced from.
	DiskSizeGb *int `pulumi:"diskSizeGb"`
	// The name which should be used for the Internal OS Disk. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The Type of Storage Account which should back this the Internal OS Disk. Possible values are `Standard_LRS`, `StandardSSD_LRS` and `Premium_LRS`. Changing this forces a new resource to be created.
	StorageAccountType string `pulumi:"storageAccountType"`
	// Should Write Accelerator be Enabled for this OS Disk? Defaults to `false`.
	WriteAcceleratorEnabled *bool `pulumi:"writeAcceleratorEnabled"`
}

// LinuxVirtualMachineOsDiskInput is an input type that accepts LinuxVirtualMachineOsDiskArgs and LinuxVirtualMachineOsDiskOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineOsDiskInput` via:
//
// 		 LinuxVirtualMachineOsDiskArgs{...}
//
type LinuxVirtualMachineOsDiskInput interface {
	pulumi.Input

	ToLinuxVirtualMachineOsDiskOutput() LinuxVirtualMachineOsDiskOutput
	ToLinuxVirtualMachineOsDiskOutputWithContext(context.Context) LinuxVirtualMachineOsDiskOutput
}

type LinuxVirtualMachineOsDiskArgs struct {
	// The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
	Caching pulumi.StringInput `pulumi:"caching"`
	// A `diffDiskSettings` block as defined above.
	DiffDiskSettings LinuxVirtualMachineOsDiskDiffDiskSettingsPtrInput `pulumi:"diffDiskSettings"`
	// The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk.
	DiskEncryptionSetId pulumi.StringPtrInput `pulumi:"diskEncryptionSetId"`
	// The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine is sourced from.
	DiskSizeGb pulumi.IntPtrInput `pulumi:"diskSizeGb"`
	// The name which should be used for the Internal OS Disk. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The Type of Storage Account which should back this the Internal OS Disk. Possible values are `Standard_LRS`, `StandardSSD_LRS` and `Premium_LRS`. Changing this forces a new resource to be created.
	StorageAccountType pulumi.StringInput `pulumi:"storageAccountType"`
	// Should Write Accelerator be Enabled for this OS Disk? Defaults to `false`.
	WriteAcceleratorEnabled pulumi.BoolPtrInput `pulumi:"writeAcceleratorEnabled"`
}

func (LinuxVirtualMachineOsDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineOsDisk)(nil)).Elem()
}

func (i LinuxVirtualMachineOsDiskArgs) ToLinuxVirtualMachineOsDiskOutput() LinuxVirtualMachineOsDiskOutput {
	return i.ToLinuxVirtualMachineOsDiskOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineOsDiskArgs) ToLinuxVirtualMachineOsDiskOutputWithContext(ctx context.Context) LinuxVirtualMachineOsDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineOsDiskOutput)
}

func (i LinuxVirtualMachineOsDiskArgs) ToLinuxVirtualMachineOsDiskPtrOutput() LinuxVirtualMachineOsDiskPtrOutput {
	return i.ToLinuxVirtualMachineOsDiskPtrOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineOsDiskArgs) ToLinuxVirtualMachineOsDiskPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineOsDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineOsDiskOutput).ToLinuxVirtualMachineOsDiskPtrOutputWithContext(ctx)
}

// LinuxVirtualMachineOsDiskPtrInput is an input type that accepts LinuxVirtualMachineOsDiskArgs, LinuxVirtualMachineOsDiskPtr and LinuxVirtualMachineOsDiskPtrOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineOsDiskPtrInput` via:
//
// 		 LinuxVirtualMachineOsDiskArgs{...}
//
//  or:
//
// 		 nil
//
type LinuxVirtualMachineOsDiskPtrInput interface {
	pulumi.Input

	ToLinuxVirtualMachineOsDiskPtrOutput() LinuxVirtualMachineOsDiskPtrOutput
	ToLinuxVirtualMachineOsDiskPtrOutputWithContext(context.Context) LinuxVirtualMachineOsDiskPtrOutput
}

type linuxVirtualMachineOsDiskPtrType LinuxVirtualMachineOsDiskArgs

func LinuxVirtualMachineOsDiskPtr(v *LinuxVirtualMachineOsDiskArgs) LinuxVirtualMachineOsDiskPtrInput {
	return (*linuxVirtualMachineOsDiskPtrType)(v)
}

func (*linuxVirtualMachineOsDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineOsDisk)(nil)).Elem()
}

func (i *linuxVirtualMachineOsDiskPtrType) ToLinuxVirtualMachineOsDiskPtrOutput() LinuxVirtualMachineOsDiskPtrOutput {
	return i.ToLinuxVirtualMachineOsDiskPtrOutputWithContext(context.Background())
}

func (i *linuxVirtualMachineOsDiskPtrType) ToLinuxVirtualMachineOsDiskPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineOsDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineOsDiskPtrOutput)
}

type LinuxVirtualMachineOsDiskOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineOsDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineOsDisk)(nil)).Elem()
}

func (o LinuxVirtualMachineOsDiskOutput) ToLinuxVirtualMachineOsDiskOutput() LinuxVirtualMachineOsDiskOutput {
	return o
}

func (o LinuxVirtualMachineOsDiskOutput) ToLinuxVirtualMachineOsDiskOutputWithContext(ctx context.Context) LinuxVirtualMachineOsDiskOutput {
	return o
}

func (o LinuxVirtualMachineOsDiskOutput) ToLinuxVirtualMachineOsDiskPtrOutput() LinuxVirtualMachineOsDiskPtrOutput {
	return o.ToLinuxVirtualMachineOsDiskPtrOutputWithContext(context.Background())
}

func (o LinuxVirtualMachineOsDiskOutput) ToLinuxVirtualMachineOsDiskPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineOsDiskPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineOsDisk) *LinuxVirtualMachineOsDisk {
		return &v
	}).(LinuxVirtualMachineOsDiskPtrOutput)
}

// The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
func (o LinuxVirtualMachineOsDiskOutput) Caching() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineOsDisk) string { return v.Caching }).(pulumi.StringOutput)
}

// A `diffDiskSettings` block as defined above.
func (o LinuxVirtualMachineOsDiskOutput) DiffDiskSettings() LinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineOsDisk) *LinuxVirtualMachineOsDiskDiffDiskSettings {
		return v.DiffDiskSettings
	}).(LinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutput)
}

// The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk.
func (o LinuxVirtualMachineOsDiskOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineOsDisk) *string { return v.DiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine is sourced from.
func (o LinuxVirtualMachineOsDiskOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineOsDisk) *int { return v.DiskSizeGb }).(pulumi.IntPtrOutput)
}

// The name which should be used for the Internal OS Disk. Changing this forces a new resource to be created.
func (o LinuxVirtualMachineOsDiskOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineOsDisk) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The Type of Storage Account which should back this the Internal OS Disk. Possible values are `Standard_LRS`, `StandardSSD_LRS` and `Premium_LRS`. Changing this forces a new resource to be created.
func (o LinuxVirtualMachineOsDiskOutput) StorageAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineOsDisk) string { return v.StorageAccountType }).(pulumi.StringOutput)
}

// Should Write Accelerator be Enabled for this OS Disk? Defaults to `false`.
func (o LinuxVirtualMachineOsDiskOutput) WriteAcceleratorEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineOsDisk) *bool { return v.WriteAcceleratorEnabled }).(pulumi.BoolPtrOutput)
}

type LinuxVirtualMachineOsDiskPtrOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineOsDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineOsDisk)(nil)).Elem()
}

func (o LinuxVirtualMachineOsDiskPtrOutput) ToLinuxVirtualMachineOsDiskPtrOutput() LinuxVirtualMachineOsDiskPtrOutput {
	return o
}

func (o LinuxVirtualMachineOsDiskPtrOutput) ToLinuxVirtualMachineOsDiskPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineOsDiskPtrOutput {
	return o
}

func (o LinuxVirtualMachineOsDiskPtrOutput) Elem() LinuxVirtualMachineOsDiskOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineOsDisk) LinuxVirtualMachineOsDisk { return *v }).(LinuxVirtualMachineOsDiskOutput)
}

// The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
func (o LinuxVirtualMachineOsDiskPtrOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineOsDisk) *string {
		if v == nil {
			return nil
		}
		return &v.Caching
	}).(pulumi.StringPtrOutput)
}

// A `diffDiskSettings` block as defined above.
func (o LinuxVirtualMachineOsDiskPtrOutput) DiffDiskSettings() LinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineOsDisk) *LinuxVirtualMachineOsDiskDiffDiskSettings {
		if v == nil {
			return nil
		}
		return v.DiffDiskSettings
	}).(LinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutput)
}

// The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk.
func (o LinuxVirtualMachineOsDiskPtrOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineOsDisk) *string {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionSetId
	}).(pulumi.StringPtrOutput)
}

// The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine is sourced from.
func (o LinuxVirtualMachineOsDiskPtrOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineOsDisk) *int {
		if v == nil {
			return nil
		}
		return v.DiskSizeGb
	}).(pulumi.IntPtrOutput)
}

// The name which should be used for the Internal OS Disk. Changing this forces a new resource to be created.
func (o LinuxVirtualMachineOsDiskPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineOsDisk) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The Type of Storage Account which should back this the Internal OS Disk. Possible values are `Standard_LRS`, `StandardSSD_LRS` and `Premium_LRS`. Changing this forces a new resource to be created.
func (o LinuxVirtualMachineOsDiskPtrOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineOsDisk) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountType
	}).(pulumi.StringPtrOutput)
}

// Should Write Accelerator be Enabled for this OS Disk? Defaults to `false`.
func (o LinuxVirtualMachineOsDiskPtrOutput) WriteAcceleratorEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineOsDisk) *bool {
		if v == nil {
			return nil
		}
		return v.WriteAcceleratorEnabled
	}).(pulumi.BoolPtrOutput)
}

type LinuxVirtualMachineOsDiskDiffDiskSettings struct {
	// Specifies the Ephemeral Disk Settings for the OS Disk. At this time the only possible value is `Local`. Changing this forces a new resource to be created.
	Option string `pulumi:"option"`
}

// LinuxVirtualMachineOsDiskDiffDiskSettingsInput is an input type that accepts LinuxVirtualMachineOsDiskDiffDiskSettingsArgs and LinuxVirtualMachineOsDiskDiffDiskSettingsOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineOsDiskDiffDiskSettingsInput` via:
//
// 		 LinuxVirtualMachineOsDiskDiffDiskSettingsArgs{...}
//
type LinuxVirtualMachineOsDiskDiffDiskSettingsInput interface {
	pulumi.Input

	ToLinuxVirtualMachineOsDiskDiffDiskSettingsOutput() LinuxVirtualMachineOsDiskDiffDiskSettingsOutput
	ToLinuxVirtualMachineOsDiskDiffDiskSettingsOutputWithContext(context.Context) LinuxVirtualMachineOsDiskDiffDiskSettingsOutput
}

type LinuxVirtualMachineOsDiskDiffDiskSettingsArgs struct {
	// Specifies the Ephemeral Disk Settings for the OS Disk. At this time the only possible value is `Local`. Changing this forces a new resource to be created.
	Option pulumi.StringInput `pulumi:"option"`
}

func (LinuxVirtualMachineOsDiskDiffDiskSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineOsDiskDiffDiskSettings)(nil)).Elem()
}

func (i LinuxVirtualMachineOsDiskDiffDiskSettingsArgs) ToLinuxVirtualMachineOsDiskDiffDiskSettingsOutput() LinuxVirtualMachineOsDiskDiffDiskSettingsOutput {
	return i.ToLinuxVirtualMachineOsDiskDiffDiskSettingsOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineOsDiskDiffDiskSettingsArgs) ToLinuxVirtualMachineOsDiskDiffDiskSettingsOutputWithContext(ctx context.Context) LinuxVirtualMachineOsDiskDiffDiskSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineOsDiskDiffDiskSettingsOutput)
}

func (i LinuxVirtualMachineOsDiskDiffDiskSettingsArgs) ToLinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutput() LinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutput {
	return i.ToLinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineOsDiskDiffDiskSettingsArgs) ToLinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineOsDiskDiffDiskSettingsOutput).ToLinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutputWithContext(ctx)
}

// LinuxVirtualMachineOsDiskDiffDiskSettingsPtrInput is an input type that accepts LinuxVirtualMachineOsDiskDiffDiskSettingsArgs, LinuxVirtualMachineOsDiskDiffDiskSettingsPtr and LinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineOsDiskDiffDiskSettingsPtrInput` via:
//
// 		 LinuxVirtualMachineOsDiskDiffDiskSettingsArgs{...}
//
//  or:
//
// 		 nil
//
type LinuxVirtualMachineOsDiskDiffDiskSettingsPtrInput interface {
	pulumi.Input

	ToLinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutput() LinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutput
	ToLinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutputWithContext(context.Context) LinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutput
}

type linuxVirtualMachineOsDiskDiffDiskSettingsPtrType LinuxVirtualMachineOsDiskDiffDiskSettingsArgs

func LinuxVirtualMachineOsDiskDiffDiskSettingsPtr(v *LinuxVirtualMachineOsDiskDiffDiskSettingsArgs) LinuxVirtualMachineOsDiskDiffDiskSettingsPtrInput {
	return (*linuxVirtualMachineOsDiskDiffDiskSettingsPtrType)(v)
}

func (*linuxVirtualMachineOsDiskDiffDiskSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineOsDiskDiffDiskSettings)(nil)).Elem()
}

func (i *linuxVirtualMachineOsDiskDiffDiskSettingsPtrType) ToLinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutput() LinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutput {
	return i.ToLinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutputWithContext(context.Background())
}

func (i *linuxVirtualMachineOsDiskDiffDiskSettingsPtrType) ToLinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutput)
}

type LinuxVirtualMachineOsDiskDiffDiskSettingsOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineOsDiskDiffDiskSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineOsDiskDiffDiskSettings)(nil)).Elem()
}

func (o LinuxVirtualMachineOsDiskDiffDiskSettingsOutput) ToLinuxVirtualMachineOsDiskDiffDiskSettingsOutput() LinuxVirtualMachineOsDiskDiffDiskSettingsOutput {
	return o
}

func (o LinuxVirtualMachineOsDiskDiffDiskSettingsOutput) ToLinuxVirtualMachineOsDiskDiffDiskSettingsOutputWithContext(ctx context.Context) LinuxVirtualMachineOsDiskDiffDiskSettingsOutput {
	return o
}

func (o LinuxVirtualMachineOsDiskDiffDiskSettingsOutput) ToLinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutput() LinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutput {
	return o.ToLinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutputWithContext(context.Background())
}

func (o LinuxVirtualMachineOsDiskDiffDiskSettingsOutput) ToLinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineOsDiskDiffDiskSettings) *LinuxVirtualMachineOsDiskDiffDiskSettings {
		return &v
	}).(LinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutput)
}

// Specifies the Ephemeral Disk Settings for the OS Disk. At this time the only possible value is `Local`. Changing this forces a new resource to be created.
func (o LinuxVirtualMachineOsDiskDiffDiskSettingsOutput) Option() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineOsDiskDiffDiskSettings) string { return v.Option }).(pulumi.StringOutput)
}

type LinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineOsDiskDiffDiskSettings)(nil)).Elem()
}

func (o LinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutput) ToLinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutput() LinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutput {
	return o
}

func (o LinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutput) ToLinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutput {
	return o
}

func (o LinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutput) Elem() LinuxVirtualMachineOsDiskDiffDiskSettingsOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineOsDiskDiffDiskSettings) LinuxVirtualMachineOsDiskDiffDiskSettings {
		return *v
	}).(LinuxVirtualMachineOsDiskDiffDiskSettingsOutput)
}

// Specifies the Ephemeral Disk Settings for the OS Disk. At this time the only possible value is `Local`. Changing this forces a new resource to be created.
func (o LinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutput) Option() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineOsDiskDiffDiskSettings) *string {
		if v == nil {
			return nil
		}
		return &v.Option
	}).(pulumi.StringPtrOutput)
}

type LinuxVirtualMachinePlan struct {
	// Specifies the Name of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
	// Specifies the Product of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
	Product string `pulumi:"product"`
	// Specifies the Publisher of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
	Publisher string `pulumi:"publisher"`
}

// LinuxVirtualMachinePlanInput is an input type that accepts LinuxVirtualMachinePlanArgs and LinuxVirtualMachinePlanOutput values.
// You can construct a concrete instance of `LinuxVirtualMachinePlanInput` via:
//
// 		 LinuxVirtualMachinePlanArgs{...}
//
type LinuxVirtualMachinePlanInput interface {
	pulumi.Input

	ToLinuxVirtualMachinePlanOutput() LinuxVirtualMachinePlanOutput
	ToLinuxVirtualMachinePlanOutputWithContext(context.Context) LinuxVirtualMachinePlanOutput
}

type LinuxVirtualMachinePlanArgs struct {
	// Specifies the Name of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the Product of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
	Product pulumi.StringInput `pulumi:"product"`
	// Specifies the Publisher of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
	Publisher pulumi.StringInput `pulumi:"publisher"`
}

func (LinuxVirtualMachinePlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachinePlan)(nil)).Elem()
}

func (i LinuxVirtualMachinePlanArgs) ToLinuxVirtualMachinePlanOutput() LinuxVirtualMachinePlanOutput {
	return i.ToLinuxVirtualMachinePlanOutputWithContext(context.Background())
}

func (i LinuxVirtualMachinePlanArgs) ToLinuxVirtualMachinePlanOutputWithContext(ctx context.Context) LinuxVirtualMachinePlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachinePlanOutput)
}

func (i LinuxVirtualMachinePlanArgs) ToLinuxVirtualMachinePlanPtrOutput() LinuxVirtualMachinePlanPtrOutput {
	return i.ToLinuxVirtualMachinePlanPtrOutputWithContext(context.Background())
}

func (i LinuxVirtualMachinePlanArgs) ToLinuxVirtualMachinePlanPtrOutputWithContext(ctx context.Context) LinuxVirtualMachinePlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachinePlanOutput).ToLinuxVirtualMachinePlanPtrOutputWithContext(ctx)
}

// LinuxVirtualMachinePlanPtrInput is an input type that accepts LinuxVirtualMachinePlanArgs, LinuxVirtualMachinePlanPtr and LinuxVirtualMachinePlanPtrOutput values.
// You can construct a concrete instance of `LinuxVirtualMachinePlanPtrInput` via:
//
// 		 LinuxVirtualMachinePlanArgs{...}
//
//  or:
//
// 		 nil
//
type LinuxVirtualMachinePlanPtrInput interface {
	pulumi.Input

	ToLinuxVirtualMachinePlanPtrOutput() LinuxVirtualMachinePlanPtrOutput
	ToLinuxVirtualMachinePlanPtrOutputWithContext(context.Context) LinuxVirtualMachinePlanPtrOutput
}

type linuxVirtualMachinePlanPtrType LinuxVirtualMachinePlanArgs

func LinuxVirtualMachinePlanPtr(v *LinuxVirtualMachinePlanArgs) LinuxVirtualMachinePlanPtrInput {
	return (*linuxVirtualMachinePlanPtrType)(v)
}

func (*linuxVirtualMachinePlanPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachinePlan)(nil)).Elem()
}

func (i *linuxVirtualMachinePlanPtrType) ToLinuxVirtualMachinePlanPtrOutput() LinuxVirtualMachinePlanPtrOutput {
	return i.ToLinuxVirtualMachinePlanPtrOutputWithContext(context.Background())
}

func (i *linuxVirtualMachinePlanPtrType) ToLinuxVirtualMachinePlanPtrOutputWithContext(ctx context.Context) LinuxVirtualMachinePlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachinePlanPtrOutput)
}

type LinuxVirtualMachinePlanOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachinePlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachinePlan)(nil)).Elem()
}

func (o LinuxVirtualMachinePlanOutput) ToLinuxVirtualMachinePlanOutput() LinuxVirtualMachinePlanOutput {
	return o
}

func (o LinuxVirtualMachinePlanOutput) ToLinuxVirtualMachinePlanOutputWithContext(ctx context.Context) LinuxVirtualMachinePlanOutput {
	return o
}

func (o LinuxVirtualMachinePlanOutput) ToLinuxVirtualMachinePlanPtrOutput() LinuxVirtualMachinePlanPtrOutput {
	return o.ToLinuxVirtualMachinePlanPtrOutputWithContext(context.Background())
}

func (o LinuxVirtualMachinePlanOutput) ToLinuxVirtualMachinePlanPtrOutputWithContext(ctx context.Context) LinuxVirtualMachinePlanPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachinePlan) *LinuxVirtualMachinePlan {
		return &v
	}).(LinuxVirtualMachinePlanPtrOutput)
}

// Specifies the Name of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
func (o LinuxVirtualMachinePlanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachinePlan) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the Product of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
func (o LinuxVirtualMachinePlanOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachinePlan) string { return v.Product }).(pulumi.StringOutput)
}

// Specifies the Publisher of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
func (o LinuxVirtualMachinePlanOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachinePlan) string { return v.Publisher }).(pulumi.StringOutput)
}

type LinuxVirtualMachinePlanPtrOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachinePlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachinePlan)(nil)).Elem()
}

func (o LinuxVirtualMachinePlanPtrOutput) ToLinuxVirtualMachinePlanPtrOutput() LinuxVirtualMachinePlanPtrOutput {
	return o
}

func (o LinuxVirtualMachinePlanPtrOutput) ToLinuxVirtualMachinePlanPtrOutputWithContext(ctx context.Context) LinuxVirtualMachinePlanPtrOutput {
	return o
}

func (o LinuxVirtualMachinePlanPtrOutput) Elem() LinuxVirtualMachinePlanOutput {
	return o.ApplyT(func(v *LinuxVirtualMachinePlan) LinuxVirtualMachinePlan { return *v }).(LinuxVirtualMachinePlanOutput)
}

// Specifies the Name of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
func (o LinuxVirtualMachinePlanPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachinePlan) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies the Product of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
func (o LinuxVirtualMachinePlanPtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachinePlan) *string {
		if v == nil {
			return nil
		}
		return &v.Product
	}).(pulumi.StringPtrOutput)
}

// Specifies the Publisher of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
func (o LinuxVirtualMachinePlanPtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachinePlan) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

type LinuxVirtualMachineScaleSetAdditionalCapabilities struct {
	// Should the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine Scale Set? Defaults to `false`. Changing this forces a new resource to be created.
	UltraSsdEnabled *bool `pulumi:"ultraSsdEnabled"`
}

// LinuxVirtualMachineScaleSetAdditionalCapabilitiesInput is an input type that accepts LinuxVirtualMachineScaleSetAdditionalCapabilitiesArgs and LinuxVirtualMachineScaleSetAdditionalCapabilitiesOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetAdditionalCapabilitiesInput` via:
//
// 		 LinuxVirtualMachineScaleSetAdditionalCapabilitiesArgs{...}
//
type LinuxVirtualMachineScaleSetAdditionalCapabilitiesInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetAdditionalCapabilitiesOutput() LinuxVirtualMachineScaleSetAdditionalCapabilitiesOutput
	ToLinuxVirtualMachineScaleSetAdditionalCapabilitiesOutputWithContext(context.Context) LinuxVirtualMachineScaleSetAdditionalCapabilitiesOutput
}

type LinuxVirtualMachineScaleSetAdditionalCapabilitiesArgs struct {
	// Should the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine Scale Set? Defaults to `false`. Changing this forces a new resource to be created.
	UltraSsdEnabled pulumi.BoolPtrInput `pulumi:"ultraSsdEnabled"`
}

func (LinuxVirtualMachineScaleSetAdditionalCapabilitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetAdditionalCapabilities)(nil)).Elem()
}

func (i LinuxVirtualMachineScaleSetAdditionalCapabilitiesArgs) ToLinuxVirtualMachineScaleSetAdditionalCapabilitiesOutput() LinuxVirtualMachineScaleSetAdditionalCapabilitiesOutput {
	return i.ToLinuxVirtualMachineScaleSetAdditionalCapabilitiesOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetAdditionalCapabilitiesArgs) ToLinuxVirtualMachineScaleSetAdditionalCapabilitiesOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetAdditionalCapabilitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetAdditionalCapabilitiesOutput)
}

func (i LinuxVirtualMachineScaleSetAdditionalCapabilitiesArgs) ToLinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput() LinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput {
	return i.ToLinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetAdditionalCapabilitiesArgs) ToLinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetAdditionalCapabilitiesOutput).ToLinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutputWithContext(ctx)
}

// LinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrInput is an input type that accepts LinuxVirtualMachineScaleSetAdditionalCapabilitiesArgs, LinuxVirtualMachineScaleSetAdditionalCapabilitiesPtr and LinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrInput` via:
//
// 		 LinuxVirtualMachineScaleSetAdditionalCapabilitiesArgs{...}
//
//  or:
//
// 		 nil
//
type LinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput() LinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput
	ToLinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutputWithContext(context.Context) LinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput
}

type linuxVirtualMachineScaleSetAdditionalCapabilitiesPtrType LinuxVirtualMachineScaleSetAdditionalCapabilitiesArgs

func LinuxVirtualMachineScaleSetAdditionalCapabilitiesPtr(v *LinuxVirtualMachineScaleSetAdditionalCapabilitiesArgs) LinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrInput {
	return (*linuxVirtualMachineScaleSetAdditionalCapabilitiesPtrType)(v)
}

func (*linuxVirtualMachineScaleSetAdditionalCapabilitiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineScaleSetAdditionalCapabilities)(nil)).Elem()
}

func (i *linuxVirtualMachineScaleSetAdditionalCapabilitiesPtrType) ToLinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput() LinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput {
	return i.ToLinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutputWithContext(context.Background())
}

func (i *linuxVirtualMachineScaleSetAdditionalCapabilitiesPtrType) ToLinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput)
}

type LinuxVirtualMachineScaleSetAdditionalCapabilitiesOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetAdditionalCapabilitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetAdditionalCapabilities)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetAdditionalCapabilitiesOutput) ToLinuxVirtualMachineScaleSetAdditionalCapabilitiesOutput() LinuxVirtualMachineScaleSetAdditionalCapabilitiesOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetAdditionalCapabilitiesOutput) ToLinuxVirtualMachineScaleSetAdditionalCapabilitiesOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetAdditionalCapabilitiesOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetAdditionalCapabilitiesOutput) ToLinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput() LinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput {
	return o.ToLinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutputWithContext(context.Background())
}

func (o LinuxVirtualMachineScaleSetAdditionalCapabilitiesOutput) ToLinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetAdditionalCapabilities) *LinuxVirtualMachineScaleSetAdditionalCapabilities {
		return &v
	}).(LinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput)
}

// Should the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine Scale Set? Defaults to `false`. Changing this forces a new resource to be created.
func (o LinuxVirtualMachineScaleSetAdditionalCapabilitiesOutput) UltraSsdEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetAdditionalCapabilities) *bool { return v.UltraSsdEnabled }).(pulumi.BoolPtrOutput)
}

type LinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineScaleSetAdditionalCapabilities)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput) ToLinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput() LinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput) ToLinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput) Elem() LinuxVirtualMachineScaleSetAdditionalCapabilitiesOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetAdditionalCapabilities) LinuxVirtualMachineScaleSetAdditionalCapabilities {
		return *v
	}).(LinuxVirtualMachineScaleSetAdditionalCapabilitiesOutput)
}

// Should the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine Scale Set? Defaults to `false`. Changing this forces a new resource to be created.
func (o LinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput) UltraSsdEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetAdditionalCapabilities) *bool {
		if v == nil {
			return nil
		}
		return v.UltraSsdEnabled
	}).(pulumi.BoolPtrOutput)
}

type LinuxVirtualMachineScaleSetAdminSshKey struct {
	// The Public Key which should be used for authentication, which needs to be at least 2048-bit and in `ssh-rsa` format.
	PublicKey string `pulumi:"publicKey"`
	// The Username for which this Public SSH Key should be configured.
	Username string `pulumi:"username"`
}

// LinuxVirtualMachineScaleSetAdminSshKeyInput is an input type that accepts LinuxVirtualMachineScaleSetAdminSshKeyArgs and LinuxVirtualMachineScaleSetAdminSshKeyOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetAdminSshKeyInput` via:
//
// 		 LinuxVirtualMachineScaleSetAdminSshKeyArgs{...}
//
type LinuxVirtualMachineScaleSetAdminSshKeyInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetAdminSshKeyOutput() LinuxVirtualMachineScaleSetAdminSshKeyOutput
	ToLinuxVirtualMachineScaleSetAdminSshKeyOutputWithContext(context.Context) LinuxVirtualMachineScaleSetAdminSshKeyOutput
}

type LinuxVirtualMachineScaleSetAdminSshKeyArgs struct {
	// The Public Key which should be used for authentication, which needs to be at least 2048-bit and in `ssh-rsa` format.
	PublicKey pulumi.StringInput `pulumi:"publicKey"`
	// The Username for which this Public SSH Key should be configured.
	Username pulumi.StringInput `pulumi:"username"`
}

func (LinuxVirtualMachineScaleSetAdminSshKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetAdminSshKey)(nil)).Elem()
}

func (i LinuxVirtualMachineScaleSetAdminSshKeyArgs) ToLinuxVirtualMachineScaleSetAdminSshKeyOutput() LinuxVirtualMachineScaleSetAdminSshKeyOutput {
	return i.ToLinuxVirtualMachineScaleSetAdminSshKeyOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetAdminSshKeyArgs) ToLinuxVirtualMachineScaleSetAdminSshKeyOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetAdminSshKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetAdminSshKeyOutput)
}

// LinuxVirtualMachineScaleSetAdminSshKeyArrayInput is an input type that accepts LinuxVirtualMachineScaleSetAdminSshKeyArray and LinuxVirtualMachineScaleSetAdminSshKeyArrayOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetAdminSshKeyArrayInput` via:
//
// 		 LinuxVirtualMachineScaleSetAdminSshKeyArray{ LinuxVirtualMachineScaleSetAdminSshKeyArgs{...} }
//
type LinuxVirtualMachineScaleSetAdminSshKeyArrayInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetAdminSshKeyArrayOutput() LinuxVirtualMachineScaleSetAdminSshKeyArrayOutput
	ToLinuxVirtualMachineScaleSetAdminSshKeyArrayOutputWithContext(context.Context) LinuxVirtualMachineScaleSetAdminSshKeyArrayOutput
}

type LinuxVirtualMachineScaleSetAdminSshKeyArray []LinuxVirtualMachineScaleSetAdminSshKeyInput

func (LinuxVirtualMachineScaleSetAdminSshKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinuxVirtualMachineScaleSetAdminSshKey)(nil)).Elem()
}

func (i LinuxVirtualMachineScaleSetAdminSshKeyArray) ToLinuxVirtualMachineScaleSetAdminSshKeyArrayOutput() LinuxVirtualMachineScaleSetAdminSshKeyArrayOutput {
	return i.ToLinuxVirtualMachineScaleSetAdminSshKeyArrayOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetAdminSshKeyArray) ToLinuxVirtualMachineScaleSetAdminSshKeyArrayOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetAdminSshKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetAdminSshKeyArrayOutput)
}

type LinuxVirtualMachineScaleSetAdminSshKeyOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetAdminSshKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetAdminSshKey)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetAdminSshKeyOutput) ToLinuxVirtualMachineScaleSetAdminSshKeyOutput() LinuxVirtualMachineScaleSetAdminSshKeyOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetAdminSshKeyOutput) ToLinuxVirtualMachineScaleSetAdminSshKeyOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetAdminSshKeyOutput {
	return o
}

// The Public Key which should be used for authentication, which needs to be at least 2048-bit and in `ssh-rsa` format.
func (o LinuxVirtualMachineScaleSetAdminSshKeyOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetAdminSshKey) string { return v.PublicKey }).(pulumi.StringOutput)
}

// The Username for which this Public SSH Key should be configured.
func (o LinuxVirtualMachineScaleSetAdminSshKeyOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetAdminSshKey) string { return v.Username }).(pulumi.StringOutput)
}

type LinuxVirtualMachineScaleSetAdminSshKeyArrayOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetAdminSshKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinuxVirtualMachineScaleSetAdminSshKey)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetAdminSshKeyArrayOutput) ToLinuxVirtualMachineScaleSetAdminSshKeyArrayOutput() LinuxVirtualMachineScaleSetAdminSshKeyArrayOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetAdminSshKeyArrayOutput) ToLinuxVirtualMachineScaleSetAdminSshKeyArrayOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetAdminSshKeyArrayOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetAdminSshKeyArrayOutput) Index(i pulumi.IntInput) LinuxVirtualMachineScaleSetAdminSshKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LinuxVirtualMachineScaleSetAdminSshKey {
		return vs[0].([]LinuxVirtualMachineScaleSetAdminSshKey)[vs[1].(int)]
	}).(LinuxVirtualMachineScaleSetAdminSshKeyOutput)
}

type LinuxVirtualMachineScaleSetAutomaticInstanceRepair struct {
	// Should the automatic instance repair be enabled on this Virtual Machine Scale Set?
	Enabled bool `pulumi:"enabled"`
	// Amount of time (in minutes, between 30 and 90, defaults to 30 minutes) for which automatic repairs will be delayed. The grace period starts right after the VM is found unhealthy. The time duration should be specified in ISO 8601 format.
	GracePeriod *string `pulumi:"gracePeriod"`
}

// LinuxVirtualMachineScaleSetAutomaticInstanceRepairInput is an input type that accepts LinuxVirtualMachineScaleSetAutomaticInstanceRepairArgs and LinuxVirtualMachineScaleSetAutomaticInstanceRepairOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetAutomaticInstanceRepairInput` via:
//
// 		 LinuxVirtualMachineScaleSetAutomaticInstanceRepairArgs{...}
//
type LinuxVirtualMachineScaleSetAutomaticInstanceRepairInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetAutomaticInstanceRepairOutput() LinuxVirtualMachineScaleSetAutomaticInstanceRepairOutput
	ToLinuxVirtualMachineScaleSetAutomaticInstanceRepairOutputWithContext(context.Context) LinuxVirtualMachineScaleSetAutomaticInstanceRepairOutput
}

type LinuxVirtualMachineScaleSetAutomaticInstanceRepairArgs struct {
	// Should the automatic instance repair be enabled on this Virtual Machine Scale Set?
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Amount of time (in minutes, between 30 and 90, defaults to 30 minutes) for which automatic repairs will be delayed. The grace period starts right after the VM is found unhealthy. The time duration should be specified in ISO 8601 format.
	GracePeriod pulumi.StringPtrInput `pulumi:"gracePeriod"`
}

func (LinuxVirtualMachineScaleSetAutomaticInstanceRepairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetAutomaticInstanceRepair)(nil)).Elem()
}

func (i LinuxVirtualMachineScaleSetAutomaticInstanceRepairArgs) ToLinuxVirtualMachineScaleSetAutomaticInstanceRepairOutput() LinuxVirtualMachineScaleSetAutomaticInstanceRepairOutput {
	return i.ToLinuxVirtualMachineScaleSetAutomaticInstanceRepairOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetAutomaticInstanceRepairArgs) ToLinuxVirtualMachineScaleSetAutomaticInstanceRepairOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetAutomaticInstanceRepairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetAutomaticInstanceRepairOutput)
}

func (i LinuxVirtualMachineScaleSetAutomaticInstanceRepairArgs) ToLinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput() LinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput {
	return i.ToLinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetAutomaticInstanceRepairArgs) ToLinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetAutomaticInstanceRepairOutput).ToLinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutputWithContext(ctx)
}

// LinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrInput is an input type that accepts LinuxVirtualMachineScaleSetAutomaticInstanceRepairArgs, LinuxVirtualMachineScaleSetAutomaticInstanceRepairPtr and LinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrInput` via:
//
// 		 LinuxVirtualMachineScaleSetAutomaticInstanceRepairArgs{...}
//
//  or:
//
// 		 nil
//
type LinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput() LinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput
	ToLinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutputWithContext(context.Context) LinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput
}

type linuxVirtualMachineScaleSetAutomaticInstanceRepairPtrType LinuxVirtualMachineScaleSetAutomaticInstanceRepairArgs

func LinuxVirtualMachineScaleSetAutomaticInstanceRepairPtr(v *LinuxVirtualMachineScaleSetAutomaticInstanceRepairArgs) LinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrInput {
	return (*linuxVirtualMachineScaleSetAutomaticInstanceRepairPtrType)(v)
}

func (*linuxVirtualMachineScaleSetAutomaticInstanceRepairPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineScaleSetAutomaticInstanceRepair)(nil)).Elem()
}

func (i *linuxVirtualMachineScaleSetAutomaticInstanceRepairPtrType) ToLinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput() LinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput {
	return i.ToLinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutputWithContext(context.Background())
}

func (i *linuxVirtualMachineScaleSetAutomaticInstanceRepairPtrType) ToLinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput)
}

type LinuxVirtualMachineScaleSetAutomaticInstanceRepairOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetAutomaticInstanceRepairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetAutomaticInstanceRepair)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetAutomaticInstanceRepairOutput) ToLinuxVirtualMachineScaleSetAutomaticInstanceRepairOutput() LinuxVirtualMachineScaleSetAutomaticInstanceRepairOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetAutomaticInstanceRepairOutput) ToLinuxVirtualMachineScaleSetAutomaticInstanceRepairOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetAutomaticInstanceRepairOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetAutomaticInstanceRepairOutput) ToLinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput() LinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput {
	return o.ToLinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutputWithContext(context.Background())
}

func (o LinuxVirtualMachineScaleSetAutomaticInstanceRepairOutput) ToLinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetAutomaticInstanceRepair) *LinuxVirtualMachineScaleSetAutomaticInstanceRepair {
		return &v
	}).(LinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput)
}

// Should the automatic instance repair be enabled on this Virtual Machine Scale Set?
func (o LinuxVirtualMachineScaleSetAutomaticInstanceRepairOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetAutomaticInstanceRepair) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Amount of time (in minutes, between 30 and 90, defaults to 30 minutes) for which automatic repairs will be delayed. The grace period starts right after the VM is found unhealthy. The time duration should be specified in ISO 8601 format.
func (o LinuxVirtualMachineScaleSetAutomaticInstanceRepairOutput) GracePeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetAutomaticInstanceRepair) *string { return v.GracePeriod }).(pulumi.StringPtrOutput)
}

type LinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineScaleSetAutomaticInstanceRepair)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput) ToLinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput() LinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput) ToLinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput) Elem() LinuxVirtualMachineScaleSetAutomaticInstanceRepairOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetAutomaticInstanceRepair) LinuxVirtualMachineScaleSetAutomaticInstanceRepair {
		return *v
	}).(LinuxVirtualMachineScaleSetAutomaticInstanceRepairOutput)
}

// Should the automatic instance repair be enabled on this Virtual Machine Scale Set?
func (o LinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetAutomaticInstanceRepair) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Amount of time (in minutes, between 30 and 90, defaults to 30 minutes) for which automatic repairs will be delayed. The grace period starts right after the VM is found unhealthy. The time duration should be specified in ISO 8601 format.
func (o LinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput) GracePeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetAutomaticInstanceRepair) *string {
		if v == nil {
			return nil
		}
		return v.GracePeriod
	}).(pulumi.StringPtrOutput)
}

type LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicy struct {
	// Should automatic rollbacks be disabled? Changing this forces a new resource to be created.
	DisableAutomaticRollback bool `pulumi:"disableAutomaticRollback"`
	// Should OS Upgrades automatically be applied to Scale Set instances in a rolling fashion when a newer version of the OS Image becomes available? Changing this forces a new resource to be created.
	EnableAutomaticOsUpgrade bool `pulumi:"enableAutomaticOsUpgrade"`
}

// LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyInput is an input type that accepts LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs and LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyInput` via:
//
// 		 LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs{...}
//
type LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput() LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput
	ToLinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyOutputWithContext(context.Context) LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput
}

type LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs struct {
	// Should automatic rollbacks be disabled? Changing this forces a new resource to be created.
	DisableAutomaticRollback pulumi.BoolInput `pulumi:"disableAutomaticRollback"`
	// Should OS Upgrades automatically be applied to Scale Set instances in a rolling fashion when a newer version of the OS Image becomes available? Changing this forces a new resource to be created.
	EnableAutomaticOsUpgrade pulumi.BoolInput `pulumi:"enableAutomaticOsUpgrade"`
}

func (LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicy)(nil)).Elem()
}

func (i LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs) ToLinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput() LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput {
	return i.ToLinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs) ToLinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput)
}

func (i LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs) ToLinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput() LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput {
	return i.ToLinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs) ToLinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput).ToLinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutputWithContext(ctx)
}

// LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrInput is an input type that accepts LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs, LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtr and LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrInput` via:
//
// 		 LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs{...}
//
//  or:
//
// 		 nil
//
type LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput() LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput
	ToLinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutputWithContext(context.Context) LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput
}

type linuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrType LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs

func LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtr(v *LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs) LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrInput {
	return (*linuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrType)(v)
}

func (*linuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicy)(nil)).Elem()
}

func (i *linuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrType) ToLinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput() LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput {
	return i.ToLinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutputWithContext(context.Background())
}

func (i *linuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrType) ToLinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput)
}

type LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicy)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput) ToLinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput() LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput) ToLinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput) ToLinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput() LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput {
	return o.ToLinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutputWithContext(context.Background())
}

func (o LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput) ToLinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicy) *LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicy {
		return &v
	}).(LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput)
}

// Should automatic rollbacks be disabled? Changing this forces a new resource to be created.
func (o LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput) DisableAutomaticRollback() pulumi.BoolOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicy) bool { return v.DisableAutomaticRollback }).(pulumi.BoolOutput)
}

// Should OS Upgrades automatically be applied to Scale Set instances in a rolling fashion when a newer version of the OS Image becomes available? Changing this forces a new resource to be created.
func (o LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput) EnableAutomaticOsUpgrade() pulumi.BoolOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicy) bool { return v.EnableAutomaticOsUpgrade }).(pulumi.BoolOutput)
}

type LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicy)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput) ToLinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput() LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput) ToLinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput) Elem() LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicy) LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicy {
		return *v
	}).(LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput)
}

// Should automatic rollbacks be disabled? Changing this forces a new resource to be created.
func (o LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput) DisableAutomaticRollback() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.DisableAutomaticRollback
	}).(pulumi.BoolPtrOutput)
}

// Should OS Upgrades automatically be applied to Scale Set instances in a rolling fashion when a newer version of the OS Image becomes available? Changing this forces a new resource to be created.
func (o LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput) EnableAutomaticOsUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableAutomaticOsUpgrade
	}).(pulumi.BoolPtrOutput)
}

type LinuxVirtualMachineScaleSetBootDiagnostics struct {
	// The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
	StorageAccountUri string `pulumi:"storageAccountUri"`
}

// LinuxVirtualMachineScaleSetBootDiagnosticsInput is an input type that accepts LinuxVirtualMachineScaleSetBootDiagnosticsArgs and LinuxVirtualMachineScaleSetBootDiagnosticsOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetBootDiagnosticsInput` via:
//
// 		 LinuxVirtualMachineScaleSetBootDiagnosticsArgs{...}
//
type LinuxVirtualMachineScaleSetBootDiagnosticsInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetBootDiagnosticsOutput() LinuxVirtualMachineScaleSetBootDiagnosticsOutput
	ToLinuxVirtualMachineScaleSetBootDiagnosticsOutputWithContext(context.Context) LinuxVirtualMachineScaleSetBootDiagnosticsOutput
}

type LinuxVirtualMachineScaleSetBootDiagnosticsArgs struct {
	// The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
	StorageAccountUri pulumi.StringInput `pulumi:"storageAccountUri"`
}

func (LinuxVirtualMachineScaleSetBootDiagnosticsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetBootDiagnostics)(nil)).Elem()
}

func (i LinuxVirtualMachineScaleSetBootDiagnosticsArgs) ToLinuxVirtualMachineScaleSetBootDiagnosticsOutput() LinuxVirtualMachineScaleSetBootDiagnosticsOutput {
	return i.ToLinuxVirtualMachineScaleSetBootDiagnosticsOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetBootDiagnosticsArgs) ToLinuxVirtualMachineScaleSetBootDiagnosticsOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetBootDiagnosticsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetBootDiagnosticsOutput)
}

func (i LinuxVirtualMachineScaleSetBootDiagnosticsArgs) ToLinuxVirtualMachineScaleSetBootDiagnosticsPtrOutput() LinuxVirtualMachineScaleSetBootDiagnosticsPtrOutput {
	return i.ToLinuxVirtualMachineScaleSetBootDiagnosticsPtrOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetBootDiagnosticsArgs) ToLinuxVirtualMachineScaleSetBootDiagnosticsPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetBootDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetBootDiagnosticsOutput).ToLinuxVirtualMachineScaleSetBootDiagnosticsPtrOutputWithContext(ctx)
}

// LinuxVirtualMachineScaleSetBootDiagnosticsPtrInput is an input type that accepts LinuxVirtualMachineScaleSetBootDiagnosticsArgs, LinuxVirtualMachineScaleSetBootDiagnosticsPtr and LinuxVirtualMachineScaleSetBootDiagnosticsPtrOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetBootDiagnosticsPtrInput` via:
//
// 		 LinuxVirtualMachineScaleSetBootDiagnosticsArgs{...}
//
//  or:
//
// 		 nil
//
type LinuxVirtualMachineScaleSetBootDiagnosticsPtrInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetBootDiagnosticsPtrOutput() LinuxVirtualMachineScaleSetBootDiagnosticsPtrOutput
	ToLinuxVirtualMachineScaleSetBootDiagnosticsPtrOutputWithContext(context.Context) LinuxVirtualMachineScaleSetBootDiagnosticsPtrOutput
}

type linuxVirtualMachineScaleSetBootDiagnosticsPtrType LinuxVirtualMachineScaleSetBootDiagnosticsArgs

func LinuxVirtualMachineScaleSetBootDiagnosticsPtr(v *LinuxVirtualMachineScaleSetBootDiagnosticsArgs) LinuxVirtualMachineScaleSetBootDiagnosticsPtrInput {
	return (*linuxVirtualMachineScaleSetBootDiagnosticsPtrType)(v)
}

func (*linuxVirtualMachineScaleSetBootDiagnosticsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineScaleSetBootDiagnostics)(nil)).Elem()
}

func (i *linuxVirtualMachineScaleSetBootDiagnosticsPtrType) ToLinuxVirtualMachineScaleSetBootDiagnosticsPtrOutput() LinuxVirtualMachineScaleSetBootDiagnosticsPtrOutput {
	return i.ToLinuxVirtualMachineScaleSetBootDiagnosticsPtrOutputWithContext(context.Background())
}

func (i *linuxVirtualMachineScaleSetBootDiagnosticsPtrType) ToLinuxVirtualMachineScaleSetBootDiagnosticsPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetBootDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetBootDiagnosticsPtrOutput)
}

type LinuxVirtualMachineScaleSetBootDiagnosticsOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetBootDiagnosticsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetBootDiagnostics)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetBootDiagnosticsOutput) ToLinuxVirtualMachineScaleSetBootDiagnosticsOutput() LinuxVirtualMachineScaleSetBootDiagnosticsOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetBootDiagnosticsOutput) ToLinuxVirtualMachineScaleSetBootDiagnosticsOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetBootDiagnosticsOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetBootDiagnosticsOutput) ToLinuxVirtualMachineScaleSetBootDiagnosticsPtrOutput() LinuxVirtualMachineScaleSetBootDiagnosticsPtrOutput {
	return o.ToLinuxVirtualMachineScaleSetBootDiagnosticsPtrOutputWithContext(context.Background())
}

func (o LinuxVirtualMachineScaleSetBootDiagnosticsOutput) ToLinuxVirtualMachineScaleSetBootDiagnosticsPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetBootDiagnosticsPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetBootDiagnostics) *LinuxVirtualMachineScaleSetBootDiagnostics {
		return &v
	}).(LinuxVirtualMachineScaleSetBootDiagnosticsPtrOutput)
}

// The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
func (o LinuxVirtualMachineScaleSetBootDiagnosticsOutput) StorageAccountUri() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetBootDiagnostics) string { return v.StorageAccountUri }).(pulumi.StringOutput)
}

type LinuxVirtualMachineScaleSetBootDiagnosticsPtrOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetBootDiagnosticsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineScaleSetBootDiagnostics)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetBootDiagnosticsPtrOutput) ToLinuxVirtualMachineScaleSetBootDiagnosticsPtrOutput() LinuxVirtualMachineScaleSetBootDiagnosticsPtrOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetBootDiagnosticsPtrOutput) ToLinuxVirtualMachineScaleSetBootDiagnosticsPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetBootDiagnosticsPtrOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetBootDiagnosticsPtrOutput) Elem() LinuxVirtualMachineScaleSetBootDiagnosticsOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetBootDiagnostics) LinuxVirtualMachineScaleSetBootDiagnostics {
		return *v
	}).(LinuxVirtualMachineScaleSetBootDiagnosticsOutput)
}

// The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
func (o LinuxVirtualMachineScaleSetBootDiagnosticsPtrOutput) StorageAccountUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetBootDiagnostics) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountUri
	}).(pulumi.StringPtrOutput)
}

type LinuxVirtualMachineScaleSetDataDisk struct {
	// The type of Caching which should be used for this Data Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
	Caching string `pulumi:"caching"`
	// The create option which should be used for this Data Disk. Possible values are `Empty` and `FromImage`. Defaults to `Empty`. (`FromImage` should only be used if the source image includes data disks).
	CreateOption *string `pulumi:"createOption"`
	// The ID of the Disk Encryption Set which should be used to encrypt this Data Disk.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// The size of the Data Disk which should be created.
	DiskSizeGb int `pulumi:"diskSizeGb"`
	// The Logical Unit Number of the Data Disk, which must be unique within the Virtual Machine.
	Lun int `pulumi:"lun"`
	// The Type of Storage Account which should back this Data Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS` and `UltraSSD_LRS`.
	StorageAccountType string `pulumi:"storageAccountType"`
	// Should Write Accelerator be enabled for this Data Disk? Defaults to `false`.
	WriteAcceleratorEnabled *bool `pulumi:"writeAcceleratorEnabled"`
}

// LinuxVirtualMachineScaleSetDataDiskInput is an input type that accepts LinuxVirtualMachineScaleSetDataDiskArgs and LinuxVirtualMachineScaleSetDataDiskOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetDataDiskInput` via:
//
// 		 LinuxVirtualMachineScaleSetDataDiskArgs{...}
//
type LinuxVirtualMachineScaleSetDataDiskInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetDataDiskOutput() LinuxVirtualMachineScaleSetDataDiskOutput
	ToLinuxVirtualMachineScaleSetDataDiskOutputWithContext(context.Context) LinuxVirtualMachineScaleSetDataDiskOutput
}

type LinuxVirtualMachineScaleSetDataDiskArgs struct {
	// The type of Caching which should be used for this Data Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
	Caching pulumi.StringInput `pulumi:"caching"`
	// The create option which should be used for this Data Disk. Possible values are `Empty` and `FromImage`. Defaults to `Empty`. (`FromImage` should only be used if the source image includes data disks).
	CreateOption pulumi.StringPtrInput `pulumi:"createOption"`
	// The ID of the Disk Encryption Set which should be used to encrypt this Data Disk.
	DiskEncryptionSetId pulumi.StringPtrInput `pulumi:"diskEncryptionSetId"`
	// The size of the Data Disk which should be created.
	DiskSizeGb pulumi.IntInput `pulumi:"diskSizeGb"`
	// The Logical Unit Number of the Data Disk, which must be unique within the Virtual Machine.
	Lun pulumi.IntInput `pulumi:"lun"`
	// The Type of Storage Account which should back this Data Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS` and `UltraSSD_LRS`.
	StorageAccountType pulumi.StringInput `pulumi:"storageAccountType"`
	// Should Write Accelerator be enabled for this Data Disk? Defaults to `false`.
	WriteAcceleratorEnabled pulumi.BoolPtrInput `pulumi:"writeAcceleratorEnabled"`
}

func (LinuxVirtualMachineScaleSetDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetDataDisk)(nil)).Elem()
}

func (i LinuxVirtualMachineScaleSetDataDiskArgs) ToLinuxVirtualMachineScaleSetDataDiskOutput() LinuxVirtualMachineScaleSetDataDiskOutput {
	return i.ToLinuxVirtualMachineScaleSetDataDiskOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetDataDiskArgs) ToLinuxVirtualMachineScaleSetDataDiskOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetDataDiskOutput)
}

// LinuxVirtualMachineScaleSetDataDiskArrayInput is an input type that accepts LinuxVirtualMachineScaleSetDataDiskArray and LinuxVirtualMachineScaleSetDataDiskArrayOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetDataDiskArrayInput` via:
//
// 		 LinuxVirtualMachineScaleSetDataDiskArray{ LinuxVirtualMachineScaleSetDataDiskArgs{...} }
//
type LinuxVirtualMachineScaleSetDataDiskArrayInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetDataDiskArrayOutput() LinuxVirtualMachineScaleSetDataDiskArrayOutput
	ToLinuxVirtualMachineScaleSetDataDiskArrayOutputWithContext(context.Context) LinuxVirtualMachineScaleSetDataDiskArrayOutput
}

type LinuxVirtualMachineScaleSetDataDiskArray []LinuxVirtualMachineScaleSetDataDiskInput

func (LinuxVirtualMachineScaleSetDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinuxVirtualMachineScaleSetDataDisk)(nil)).Elem()
}

func (i LinuxVirtualMachineScaleSetDataDiskArray) ToLinuxVirtualMachineScaleSetDataDiskArrayOutput() LinuxVirtualMachineScaleSetDataDiskArrayOutput {
	return i.ToLinuxVirtualMachineScaleSetDataDiskArrayOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetDataDiskArray) ToLinuxVirtualMachineScaleSetDataDiskArrayOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetDataDiskArrayOutput)
}

type LinuxVirtualMachineScaleSetDataDiskOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetDataDisk)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetDataDiskOutput) ToLinuxVirtualMachineScaleSetDataDiskOutput() LinuxVirtualMachineScaleSetDataDiskOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetDataDiskOutput) ToLinuxVirtualMachineScaleSetDataDiskOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetDataDiskOutput {
	return o
}

// The type of Caching which should be used for this Data Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
func (o LinuxVirtualMachineScaleSetDataDiskOutput) Caching() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetDataDisk) string { return v.Caching }).(pulumi.StringOutput)
}

// The create option which should be used for this Data Disk. Possible values are `Empty` and `FromImage`. Defaults to `Empty`. (`FromImage` should only be used if the source image includes data disks).
func (o LinuxVirtualMachineScaleSetDataDiskOutput) CreateOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetDataDisk) *string { return v.CreateOption }).(pulumi.StringPtrOutput)
}

// The ID of the Disk Encryption Set which should be used to encrypt this Data Disk.
func (o LinuxVirtualMachineScaleSetDataDiskOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetDataDisk) *string { return v.DiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// The size of the Data Disk which should be created.
func (o LinuxVirtualMachineScaleSetDataDiskOutput) DiskSizeGb() pulumi.IntOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetDataDisk) int { return v.DiskSizeGb }).(pulumi.IntOutput)
}

// The Logical Unit Number of the Data Disk, which must be unique within the Virtual Machine.
func (o LinuxVirtualMachineScaleSetDataDiskOutput) Lun() pulumi.IntOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetDataDisk) int { return v.Lun }).(pulumi.IntOutput)
}

// The Type of Storage Account which should back this Data Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS` and `UltraSSD_LRS`.
func (o LinuxVirtualMachineScaleSetDataDiskOutput) StorageAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetDataDisk) string { return v.StorageAccountType }).(pulumi.StringOutput)
}

// Should Write Accelerator be enabled for this Data Disk? Defaults to `false`.
func (o LinuxVirtualMachineScaleSetDataDiskOutput) WriteAcceleratorEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetDataDisk) *bool { return v.WriteAcceleratorEnabled }).(pulumi.BoolPtrOutput)
}

type LinuxVirtualMachineScaleSetDataDiskArrayOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinuxVirtualMachineScaleSetDataDisk)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetDataDiskArrayOutput) ToLinuxVirtualMachineScaleSetDataDiskArrayOutput() LinuxVirtualMachineScaleSetDataDiskArrayOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetDataDiskArrayOutput) ToLinuxVirtualMachineScaleSetDataDiskArrayOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetDataDiskArrayOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetDataDiskArrayOutput) Index(i pulumi.IntInput) LinuxVirtualMachineScaleSetDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LinuxVirtualMachineScaleSetDataDisk {
		return vs[0].([]LinuxVirtualMachineScaleSetDataDisk)[vs[1].(int)]
	}).(LinuxVirtualMachineScaleSetDataDiskOutput)
}

type LinuxVirtualMachineScaleSetIdentity struct {
	// A list of User Managed Identity ID's which should be assigned to the Linux Virtual Machine Scale Set.
	IdentityIds []string `pulumi:"identityIds"`
	// The ID of the System Managed Service Principal.
	PrincipalId *string `pulumi:"principalId"`
	// The type of Managed Identity which should be assigned to the Linux Virtual Machine Scale Set. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
	Type string `pulumi:"type"`
}

// LinuxVirtualMachineScaleSetIdentityInput is an input type that accepts LinuxVirtualMachineScaleSetIdentityArgs and LinuxVirtualMachineScaleSetIdentityOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetIdentityInput` via:
//
// 		 LinuxVirtualMachineScaleSetIdentityArgs{...}
//
type LinuxVirtualMachineScaleSetIdentityInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetIdentityOutput() LinuxVirtualMachineScaleSetIdentityOutput
	ToLinuxVirtualMachineScaleSetIdentityOutputWithContext(context.Context) LinuxVirtualMachineScaleSetIdentityOutput
}

type LinuxVirtualMachineScaleSetIdentityArgs struct {
	// A list of User Managed Identity ID's which should be assigned to the Linux Virtual Machine Scale Set.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The ID of the System Managed Service Principal.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The type of Managed Identity which should be assigned to the Linux Virtual Machine Scale Set. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (LinuxVirtualMachineScaleSetIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetIdentity)(nil)).Elem()
}

func (i LinuxVirtualMachineScaleSetIdentityArgs) ToLinuxVirtualMachineScaleSetIdentityOutput() LinuxVirtualMachineScaleSetIdentityOutput {
	return i.ToLinuxVirtualMachineScaleSetIdentityOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetIdentityArgs) ToLinuxVirtualMachineScaleSetIdentityOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetIdentityOutput)
}

func (i LinuxVirtualMachineScaleSetIdentityArgs) ToLinuxVirtualMachineScaleSetIdentityPtrOutput() LinuxVirtualMachineScaleSetIdentityPtrOutput {
	return i.ToLinuxVirtualMachineScaleSetIdentityPtrOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetIdentityArgs) ToLinuxVirtualMachineScaleSetIdentityPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetIdentityOutput).ToLinuxVirtualMachineScaleSetIdentityPtrOutputWithContext(ctx)
}

// LinuxVirtualMachineScaleSetIdentityPtrInput is an input type that accepts LinuxVirtualMachineScaleSetIdentityArgs, LinuxVirtualMachineScaleSetIdentityPtr and LinuxVirtualMachineScaleSetIdentityPtrOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetIdentityPtrInput` via:
//
// 		 LinuxVirtualMachineScaleSetIdentityArgs{...}
//
//  or:
//
// 		 nil
//
type LinuxVirtualMachineScaleSetIdentityPtrInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetIdentityPtrOutput() LinuxVirtualMachineScaleSetIdentityPtrOutput
	ToLinuxVirtualMachineScaleSetIdentityPtrOutputWithContext(context.Context) LinuxVirtualMachineScaleSetIdentityPtrOutput
}

type linuxVirtualMachineScaleSetIdentityPtrType LinuxVirtualMachineScaleSetIdentityArgs

func LinuxVirtualMachineScaleSetIdentityPtr(v *LinuxVirtualMachineScaleSetIdentityArgs) LinuxVirtualMachineScaleSetIdentityPtrInput {
	return (*linuxVirtualMachineScaleSetIdentityPtrType)(v)
}

func (*linuxVirtualMachineScaleSetIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineScaleSetIdentity)(nil)).Elem()
}

func (i *linuxVirtualMachineScaleSetIdentityPtrType) ToLinuxVirtualMachineScaleSetIdentityPtrOutput() LinuxVirtualMachineScaleSetIdentityPtrOutput {
	return i.ToLinuxVirtualMachineScaleSetIdentityPtrOutputWithContext(context.Background())
}

func (i *linuxVirtualMachineScaleSetIdentityPtrType) ToLinuxVirtualMachineScaleSetIdentityPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetIdentityPtrOutput)
}

type LinuxVirtualMachineScaleSetIdentityOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetIdentity)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetIdentityOutput) ToLinuxVirtualMachineScaleSetIdentityOutput() LinuxVirtualMachineScaleSetIdentityOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetIdentityOutput) ToLinuxVirtualMachineScaleSetIdentityOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetIdentityOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetIdentityOutput) ToLinuxVirtualMachineScaleSetIdentityPtrOutput() LinuxVirtualMachineScaleSetIdentityPtrOutput {
	return o.ToLinuxVirtualMachineScaleSetIdentityPtrOutputWithContext(context.Background())
}

func (o LinuxVirtualMachineScaleSetIdentityOutput) ToLinuxVirtualMachineScaleSetIdentityPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetIdentityPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetIdentity) *LinuxVirtualMachineScaleSetIdentity {
		return &v
	}).(LinuxVirtualMachineScaleSetIdentityPtrOutput)
}

// A list of User Managed Identity ID's which should be assigned to the Linux Virtual Machine Scale Set.
func (o LinuxVirtualMachineScaleSetIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The ID of the System Managed Service Principal.
func (o LinuxVirtualMachineScaleSetIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The type of Managed Identity which should be assigned to the Linux Virtual Machine Scale Set. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
func (o LinuxVirtualMachineScaleSetIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type LinuxVirtualMachineScaleSetIdentityPtrOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineScaleSetIdentity)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetIdentityPtrOutput) ToLinuxVirtualMachineScaleSetIdentityPtrOutput() LinuxVirtualMachineScaleSetIdentityPtrOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetIdentityPtrOutput) ToLinuxVirtualMachineScaleSetIdentityPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetIdentityPtrOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetIdentityPtrOutput) Elem() LinuxVirtualMachineScaleSetIdentityOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetIdentity) LinuxVirtualMachineScaleSetIdentity { return *v }).(LinuxVirtualMachineScaleSetIdentityOutput)
}

// A list of User Managed Identity ID's which should be assigned to the Linux Virtual Machine Scale Set.
func (o LinuxVirtualMachineScaleSetIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The ID of the System Managed Service Principal.
func (o LinuxVirtualMachineScaleSetIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The type of Managed Identity which should be assigned to the Linux Virtual Machine Scale Set. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
func (o LinuxVirtualMachineScaleSetIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type LinuxVirtualMachineScaleSetNetworkInterface struct {
	// A list of IP Addresses of DNS Servers which should be assigned to the Network Interface.
	DnsServers []string `pulumi:"dnsServers"`
	// Does this Network Interface support Accelerated Networking? Defaults to `false`.
	EnableAcceleratedNetworking *bool `pulumi:"enableAcceleratedNetworking"`
	// Does this Network Interface support IP Forwarding? Defaults to `false`.
	EnableIpForwarding *bool `pulumi:"enableIpForwarding"`
	// One or more `ipConfiguration` blocks as defined above.
	IpConfigurations []LinuxVirtualMachineScaleSetNetworkInterfaceIpConfiguration `pulumi:"ipConfigurations"`
	// The Name which should be used for this Network Interface. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
	// The ID of a Network Security Group which should be assigned to this Network Interface.
	NetworkSecurityGroupId *string `pulumi:"networkSecurityGroupId"`
	// Is this the Primary IP Configuration?
	Primary *bool `pulumi:"primary"`
}

// LinuxVirtualMachineScaleSetNetworkInterfaceInput is an input type that accepts LinuxVirtualMachineScaleSetNetworkInterfaceArgs and LinuxVirtualMachineScaleSetNetworkInterfaceOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetNetworkInterfaceInput` via:
//
// 		 LinuxVirtualMachineScaleSetNetworkInterfaceArgs{...}
//
type LinuxVirtualMachineScaleSetNetworkInterfaceInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetNetworkInterfaceOutput() LinuxVirtualMachineScaleSetNetworkInterfaceOutput
	ToLinuxVirtualMachineScaleSetNetworkInterfaceOutputWithContext(context.Context) LinuxVirtualMachineScaleSetNetworkInterfaceOutput
}

type LinuxVirtualMachineScaleSetNetworkInterfaceArgs struct {
	// A list of IP Addresses of DNS Servers which should be assigned to the Network Interface.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	// Does this Network Interface support Accelerated Networking? Defaults to `false`.
	EnableAcceleratedNetworking pulumi.BoolPtrInput `pulumi:"enableAcceleratedNetworking"`
	// Does this Network Interface support IP Forwarding? Defaults to `false`.
	EnableIpForwarding pulumi.BoolPtrInput `pulumi:"enableIpForwarding"`
	// One or more `ipConfiguration` blocks as defined above.
	IpConfigurations LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayInput `pulumi:"ipConfigurations"`
	// The Name which should be used for this Network Interface. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of a Network Security Group which should be assigned to this Network Interface.
	NetworkSecurityGroupId pulumi.StringPtrInput `pulumi:"networkSecurityGroupId"`
	// Is this the Primary IP Configuration?
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
}

func (LinuxVirtualMachineScaleSetNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetNetworkInterface)(nil)).Elem()
}

func (i LinuxVirtualMachineScaleSetNetworkInterfaceArgs) ToLinuxVirtualMachineScaleSetNetworkInterfaceOutput() LinuxVirtualMachineScaleSetNetworkInterfaceOutput {
	return i.ToLinuxVirtualMachineScaleSetNetworkInterfaceOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetNetworkInterfaceArgs) ToLinuxVirtualMachineScaleSetNetworkInterfaceOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetNetworkInterfaceOutput)
}

// LinuxVirtualMachineScaleSetNetworkInterfaceArrayInput is an input type that accepts LinuxVirtualMachineScaleSetNetworkInterfaceArray and LinuxVirtualMachineScaleSetNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetNetworkInterfaceArrayInput` via:
//
// 		 LinuxVirtualMachineScaleSetNetworkInterfaceArray{ LinuxVirtualMachineScaleSetNetworkInterfaceArgs{...} }
//
type LinuxVirtualMachineScaleSetNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetNetworkInterfaceArrayOutput() LinuxVirtualMachineScaleSetNetworkInterfaceArrayOutput
	ToLinuxVirtualMachineScaleSetNetworkInterfaceArrayOutputWithContext(context.Context) LinuxVirtualMachineScaleSetNetworkInterfaceArrayOutput
}

type LinuxVirtualMachineScaleSetNetworkInterfaceArray []LinuxVirtualMachineScaleSetNetworkInterfaceInput

func (LinuxVirtualMachineScaleSetNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinuxVirtualMachineScaleSetNetworkInterface)(nil)).Elem()
}

func (i LinuxVirtualMachineScaleSetNetworkInterfaceArray) ToLinuxVirtualMachineScaleSetNetworkInterfaceArrayOutput() LinuxVirtualMachineScaleSetNetworkInterfaceArrayOutput {
	return i.ToLinuxVirtualMachineScaleSetNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetNetworkInterfaceArray) ToLinuxVirtualMachineScaleSetNetworkInterfaceArrayOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetNetworkInterfaceArrayOutput)
}

type LinuxVirtualMachineScaleSetNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetNetworkInterface)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetNetworkInterfaceOutput) ToLinuxVirtualMachineScaleSetNetworkInterfaceOutput() LinuxVirtualMachineScaleSetNetworkInterfaceOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetNetworkInterfaceOutput) ToLinuxVirtualMachineScaleSetNetworkInterfaceOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetNetworkInterfaceOutput {
	return o
}

// A list of IP Addresses of DNS Servers which should be assigned to the Network Interface.
func (o LinuxVirtualMachineScaleSetNetworkInterfaceOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetNetworkInterface) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// Does this Network Interface support Accelerated Networking? Defaults to `false`.
func (o LinuxVirtualMachineScaleSetNetworkInterfaceOutput) EnableAcceleratedNetworking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetNetworkInterface) *bool { return v.EnableAcceleratedNetworking }).(pulumi.BoolPtrOutput)
}

// Does this Network Interface support IP Forwarding? Defaults to `false`.
func (o LinuxVirtualMachineScaleSetNetworkInterfaceOutput) EnableIpForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetNetworkInterface) *bool { return v.EnableIpForwarding }).(pulumi.BoolPtrOutput)
}

// One or more `ipConfiguration` blocks as defined above.
func (o LinuxVirtualMachineScaleSetNetworkInterfaceOutput) IpConfigurations() LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetNetworkInterface) []LinuxVirtualMachineScaleSetNetworkInterfaceIpConfiguration {
		return v.IpConfigurations
	}).(LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput)
}

// The Name which should be used for this Network Interface. Changing this forces a new resource to be created.
func (o LinuxVirtualMachineScaleSetNetworkInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetNetworkInterface) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of a Network Security Group which should be assigned to this Network Interface.
func (o LinuxVirtualMachineScaleSetNetworkInterfaceOutput) NetworkSecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetNetworkInterface) *string { return v.NetworkSecurityGroupId }).(pulumi.StringPtrOutput)
}

// Is this the Primary IP Configuration?
func (o LinuxVirtualMachineScaleSetNetworkInterfaceOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetNetworkInterface) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

type LinuxVirtualMachineScaleSetNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinuxVirtualMachineScaleSetNetworkInterface)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetNetworkInterfaceArrayOutput) ToLinuxVirtualMachineScaleSetNetworkInterfaceArrayOutput() LinuxVirtualMachineScaleSetNetworkInterfaceArrayOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetNetworkInterfaceArrayOutput) ToLinuxVirtualMachineScaleSetNetworkInterfaceArrayOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetNetworkInterfaceArrayOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) LinuxVirtualMachineScaleSetNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LinuxVirtualMachineScaleSetNetworkInterface {
		return vs[0].([]LinuxVirtualMachineScaleSetNetworkInterface)[vs[1].(int)]
	}).(LinuxVirtualMachineScaleSetNetworkInterfaceOutput)
}

type LinuxVirtualMachineScaleSetNetworkInterfaceIpConfiguration struct {
	// A list of Backend Address Pools ID's from a Application Gateway which this Virtual Machine Scale Set should be connected to.
	ApplicationGatewayBackendAddressPoolIds []string `pulumi:"applicationGatewayBackendAddressPoolIds"`
	// A list of Application Security Group ID's which this Virtual Machine Scale Set should be connected to.
	ApplicationSecurityGroupIds []string `pulumi:"applicationSecurityGroupIds"`
	// A list of Backend Address Pools ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
	LoadBalancerBackendAddressPoolIds []string `pulumi:"loadBalancerBackendAddressPoolIds"`
	// A list of NAT Rule ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
	LoadBalancerInboundNatRulesIds []string `pulumi:"loadBalancerInboundNatRulesIds"`
	// The Name which should be used for this IP Configuration.
	Name string `pulumi:"name"`
	// Is this the Primary IP Configuration for this Network Interface? Defaults to `false`.
	Primary *bool `pulumi:"primary"`
	// A `publicIpAddress` block as defined below.
	PublicIpAddresses []LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress `pulumi:"publicIpAddresses"`
	// The ID of the Subnet which this IP Configuration should be connected to.
	SubnetId *string `pulumi:"subnetId"`
	// The Internet Protocol Version which should be used for this IP Configuration. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`.
	Version *string `pulumi:"version"`
}

// LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationInput is an input type that accepts LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs and LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationInput` via:
//
// 		 LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs{...}
//
type LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput() LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput
	ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutputWithContext(context.Context) LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput
}

type LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs struct {
	// A list of Backend Address Pools ID's from a Application Gateway which this Virtual Machine Scale Set should be connected to.
	ApplicationGatewayBackendAddressPoolIds pulumi.StringArrayInput `pulumi:"applicationGatewayBackendAddressPoolIds"`
	// A list of Application Security Group ID's which this Virtual Machine Scale Set should be connected to.
	ApplicationSecurityGroupIds pulumi.StringArrayInput `pulumi:"applicationSecurityGroupIds"`
	// A list of Backend Address Pools ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
	LoadBalancerBackendAddressPoolIds pulumi.StringArrayInput `pulumi:"loadBalancerBackendAddressPoolIds"`
	// A list of NAT Rule ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
	LoadBalancerInboundNatRulesIds pulumi.StringArrayInput `pulumi:"loadBalancerInboundNatRulesIds"`
	// The Name which should be used for this IP Configuration.
	Name pulumi.StringInput `pulumi:"name"`
	// Is this the Primary IP Configuration for this Network Interface? Defaults to `false`.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// A `publicIpAddress` block as defined below.
	PublicIpAddresses LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayInput `pulumi:"publicIpAddresses"`
	// The ID of the Subnet which this IP Configuration should be connected to.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The Internet Protocol Version which should be used for this IP Configuration. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetNetworkInterfaceIpConfiguration)(nil)).Elem()
}

func (i LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs) ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput() LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput {
	return i.ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs) ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput)
}

// LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayInput is an input type that accepts LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArray and LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayInput` via:
//
// 		 LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArray{ LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs{...} }
//
type LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput() LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput
	ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutputWithContext(context.Context) LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput
}

type LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArray []LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationInput

func (LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinuxVirtualMachineScaleSetNetworkInterfaceIpConfiguration)(nil)).Elem()
}

func (i LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArray) ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput() LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput {
	return i.ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArray) ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput)
}

type LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetNetworkInterfaceIpConfiguration)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput) ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput() LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput) ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput {
	return o
}

// A list of Backend Address Pools ID's from a Application Gateway which this Virtual Machine Scale Set should be connected to.
func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput) ApplicationGatewayBackendAddressPoolIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetNetworkInterfaceIpConfiguration) []string {
		return v.ApplicationGatewayBackendAddressPoolIds
	}).(pulumi.StringArrayOutput)
}

// A list of Application Security Group ID's which this Virtual Machine Scale Set should be connected to.
func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput) ApplicationSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetNetworkInterfaceIpConfiguration) []string {
		return v.ApplicationSecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// A list of Backend Address Pools ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput) LoadBalancerBackendAddressPoolIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetNetworkInterfaceIpConfiguration) []string {
		return v.LoadBalancerBackendAddressPoolIds
	}).(pulumi.StringArrayOutput)
}

// A list of NAT Rule ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput) LoadBalancerInboundNatRulesIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetNetworkInterfaceIpConfiguration) []string {
		return v.LoadBalancerInboundNatRulesIds
	}).(pulumi.StringArrayOutput)
}

// The Name which should be used for this IP Configuration.
func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetNetworkInterfaceIpConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// Is this the Primary IP Configuration for this Network Interface? Defaults to `false`.
func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetNetworkInterfaceIpConfiguration) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// A `publicIpAddress` block as defined below.
func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput) PublicIpAddresses() LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetNetworkInterfaceIpConfiguration) []LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress {
		return v.PublicIpAddresses
	}).(LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput)
}

// The ID of the Subnet which this IP Configuration should be connected to.
func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetNetworkInterfaceIpConfiguration) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The Internet Protocol Version which should be used for this IP Configuration. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`.
func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetNetworkInterfaceIpConfiguration) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinuxVirtualMachineScaleSetNetworkInterfaceIpConfiguration)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput) ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput() LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput) ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput) Index(i pulumi.IntInput) LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LinuxVirtualMachineScaleSetNetworkInterfaceIpConfiguration {
		return vs[0].([]LinuxVirtualMachineScaleSetNetworkInterfaceIpConfiguration)[vs[1].(int)]
	}).(LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput)
}

type LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress struct {
	// The Prefix which should be used for the Domain Name Label for each Virtual Machine Instance. Azure concatenates the Domain Name Label and Virtual Machine Index to create a unique Domain Name Label for each Virtual Machine.
	DomainNameLabel *string `pulumi:"domainNameLabel"`
	// The Idle Timeout in Minutes for the Public IP Address. Possible values are in the range `4` to `32`.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// One or more `ipTag` blocks as defined above.
	IpTags []LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag `pulumi:"ipTags"`
	// The Name of the Public IP Address Configuration.
	Name string `pulumi:"name"`
	// The ID of the Public IP Address Prefix from where Public IP Addresses should be allocated. Changing this forces a new resource to be created.
	PublicIpPrefixId *string `pulumi:"publicIpPrefixId"`
}

// LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressInput is an input type that accepts LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs and LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressInput` via:
//
// 		 LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs{...}
//
type LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput() LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput
	ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutputWithContext(context.Context) LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput
}

type LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs struct {
	// The Prefix which should be used for the Domain Name Label for each Virtual Machine Instance. Azure concatenates the Domain Name Label and Virtual Machine Index to create a unique Domain Name Label for each Virtual Machine.
	DomainNameLabel pulumi.StringPtrInput `pulumi:"domainNameLabel"`
	// The Idle Timeout in Minutes for the Public IP Address. Possible values are in the range `4` to `32`.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// One or more `ipTag` blocks as defined above.
	IpTags LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayInput `pulumi:"ipTags"`
	// The Name of the Public IP Address Configuration.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the Public IP Address Prefix from where Public IP Addresses should be allocated. Changing this forces a new resource to be created.
	PublicIpPrefixId pulumi.StringPtrInput `pulumi:"publicIpPrefixId"`
}

func (LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress)(nil)).Elem()
}

func (i LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs) ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput() LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput {
	return i.ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs) ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput)
}

// LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayInput is an input type that accepts LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArray and LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayInput` via:
//
// 		 LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArray{ LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs{...} }
//
type LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput() LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput
	ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutputWithContext(context.Context) LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput
}

type LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArray []LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressInput

func (LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress)(nil)).Elem()
}

func (i LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArray) ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput() LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput {
	return i.ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArray) ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput)
}

type LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput) ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput() LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput) ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput {
	return o
}

// The Prefix which should be used for the Domain Name Label for each Virtual Machine Instance. Azure concatenates the Domain Name Label and Virtual Machine Index to create a unique Domain Name Label for each Virtual Machine.
func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress) *string {
		return v.DomainNameLabel
	}).(pulumi.StringPtrOutput)
}

// The Idle Timeout in Minutes for the Public IP Address. Possible values are in the range `4` to `32`.
func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress) *int {
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// One or more `ipTag` blocks as defined above.
func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput) IpTags() LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress) []LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag {
		return v.IpTags
	}).(LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput)
}

// The Name of the Public IP Address Configuration.
func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// The ID of the Public IP Address Prefix from where Public IP Addresses should be allocated. Changing this forces a new resource to be created.
func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput) PublicIpPrefixId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress) *string {
		return v.PublicIpPrefixId
	}).(pulumi.StringPtrOutput)
}

type LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput) ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput() LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput) ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput) Index(i pulumi.IntInput) LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress {
		return vs[0].([]LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress)[vs[1].(int)]
	}).(LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput)
}

type LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag struct {
	// The IP Tag associated with the Public IP, such as `SQL` or `Storage`.
	Tag string `pulumi:"tag"`
	// The Type of IP Tag, such as `FirstPartyUsage`.
	Type string `pulumi:"type"`
}

// LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagInput is an input type that accepts LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs and LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagInput` via:
//
// 		 LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs{...}
//
type LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput() LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput
	ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutputWithContext(context.Context) LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput
}

type LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs struct {
	// The IP Tag associated with the Public IP, such as `SQL` or `Storage`.
	Tag pulumi.StringInput `pulumi:"tag"`
	// The Type of IP Tag, such as `FirstPartyUsage`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag)(nil)).Elem()
}

func (i LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs) ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput() LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput {
	return i.ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs) ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput)
}

// LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayInput is an input type that accepts LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArray and LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayInput` via:
//
// 		 LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArray{ LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs{...} }
//
type LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput() LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput
	ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutputWithContext(context.Context) LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput
}

type LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArray []LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagInput

func (LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag)(nil)).Elem()
}

func (i LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArray) ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput() LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput {
	return i.ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArray) ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput)
}

type LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput) ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput() LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput) ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput {
	return o
}

// The IP Tag associated with the Public IP, such as `SQL` or `Storage`.
func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag) string {
		return v.Tag
	}).(pulumi.StringOutput)
}

// The Type of IP Tag, such as `FirstPartyUsage`.
func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput) ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput() LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput) ToLinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput) Index(i pulumi.IntInput) LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag {
		return vs[0].([]LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag)[vs[1].(int)]
	}).(LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput)
}

type LinuxVirtualMachineScaleSetOsDisk struct {
	// The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
	Caching string `pulumi:"caching"`
	// A `diffDiskSettings` block as defined above. Changing this forces a new resource to be created.
	DiffDiskSettings *LinuxVirtualMachineScaleSetOsDiskDiffDiskSettings `pulumi:"diffDiskSettings"`
	// The ID of the Disk Encryption Set which should be used to encrypt this OS Disk.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine Scale Set is sourced from.
	DiskSizeGb *int `pulumi:"diskSizeGb"`
	// The Type of Storage Account which should back this the Internal OS Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS` and `Premium_LRS`.
	StorageAccountType string `pulumi:"storageAccountType"`
	// Should Write Accelerator be Enabled for this OS Disk? Defaults to `false`.
	WriteAcceleratorEnabled *bool `pulumi:"writeAcceleratorEnabled"`
}

// LinuxVirtualMachineScaleSetOsDiskInput is an input type that accepts LinuxVirtualMachineScaleSetOsDiskArgs and LinuxVirtualMachineScaleSetOsDiskOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetOsDiskInput` via:
//
// 		 LinuxVirtualMachineScaleSetOsDiskArgs{...}
//
type LinuxVirtualMachineScaleSetOsDiskInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetOsDiskOutput() LinuxVirtualMachineScaleSetOsDiskOutput
	ToLinuxVirtualMachineScaleSetOsDiskOutputWithContext(context.Context) LinuxVirtualMachineScaleSetOsDiskOutput
}

type LinuxVirtualMachineScaleSetOsDiskArgs struct {
	// The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
	Caching pulumi.StringInput `pulumi:"caching"`
	// A `diffDiskSettings` block as defined above. Changing this forces a new resource to be created.
	DiffDiskSettings LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrInput `pulumi:"diffDiskSettings"`
	// The ID of the Disk Encryption Set which should be used to encrypt this OS Disk.
	DiskEncryptionSetId pulumi.StringPtrInput `pulumi:"diskEncryptionSetId"`
	// The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine Scale Set is sourced from.
	DiskSizeGb pulumi.IntPtrInput `pulumi:"diskSizeGb"`
	// The Type of Storage Account which should back this the Internal OS Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS` and `Premium_LRS`.
	StorageAccountType pulumi.StringInput `pulumi:"storageAccountType"`
	// Should Write Accelerator be Enabled for this OS Disk? Defaults to `false`.
	WriteAcceleratorEnabled pulumi.BoolPtrInput `pulumi:"writeAcceleratorEnabled"`
}

func (LinuxVirtualMachineScaleSetOsDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetOsDisk)(nil)).Elem()
}

func (i LinuxVirtualMachineScaleSetOsDiskArgs) ToLinuxVirtualMachineScaleSetOsDiskOutput() LinuxVirtualMachineScaleSetOsDiskOutput {
	return i.ToLinuxVirtualMachineScaleSetOsDiskOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetOsDiskArgs) ToLinuxVirtualMachineScaleSetOsDiskOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetOsDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetOsDiskOutput)
}

func (i LinuxVirtualMachineScaleSetOsDiskArgs) ToLinuxVirtualMachineScaleSetOsDiskPtrOutput() LinuxVirtualMachineScaleSetOsDiskPtrOutput {
	return i.ToLinuxVirtualMachineScaleSetOsDiskPtrOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetOsDiskArgs) ToLinuxVirtualMachineScaleSetOsDiskPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetOsDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetOsDiskOutput).ToLinuxVirtualMachineScaleSetOsDiskPtrOutputWithContext(ctx)
}

// LinuxVirtualMachineScaleSetOsDiskPtrInput is an input type that accepts LinuxVirtualMachineScaleSetOsDiskArgs, LinuxVirtualMachineScaleSetOsDiskPtr and LinuxVirtualMachineScaleSetOsDiskPtrOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetOsDiskPtrInput` via:
//
// 		 LinuxVirtualMachineScaleSetOsDiskArgs{...}
//
//  or:
//
// 		 nil
//
type LinuxVirtualMachineScaleSetOsDiskPtrInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetOsDiskPtrOutput() LinuxVirtualMachineScaleSetOsDiskPtrOutput
	ToLinuxVirtualMachineScaleSetOsDiskPtrOutputWithContext(context.Context) LinuxVirtualMachineScaleSetOsDiskPtrOutput
}

type linuxVirtualMachineScaleSetOsDiskPtrType LinuxVirtualMachineScaleSetOsDiskArgs

func LinuxVirtualMachineScaleSetOsDiskPtr(v *LinuxVirtualMachineScaleSetOsDiskArgs) LinuxVirtualMachineScaleSetOsDiskPtrInput {
	return (*linuxVirtualMachineScaleSetOsDiskPtrType)(v)
}

func (*linuxVirtualMachineScaleSetOsDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineScaleSetOsDisk)(nil)).Elem()
}

func (i *linuxVirtualMachineScaleSetOsDiskPtrType) ToLinuxVirtualMachineScaleSetOsDiskPtrOutput() LinuxVirtualMachineScaleSetOsDiskPtrOutput {
	return i.ToLinuxVirtualMachineScaleSetOsDiskPtrOutputWithContext(context.Background())
}

func (i *linuxVirtualMachineScaleSetOsDiskPtrType) ToLinuxVirtualMachineScaleSetOsDiskPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetOsDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetOsDiskPtrOutput)
}

type LinuxVirtualMachineScaleSetOsDiskOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetOsDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetOsDisk)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetOsDiskOutput) ToLinuxVirtualMachineScaleSetOsDiskOutput() LinuxVirtualMachineScaleSetOsDiskOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetOsDiskOutput) ToLinuxVirtualMachineScaleSetOsDiskOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetOsDiskOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetOsDiskOutput) ToLinuxVirtualMachineScaleSetOsDiskPtrOutput() LinuxVirtualMachineScaleSetOsDiskPtrOutput {
	return o.ToLinuxVirtualMachineScaleSetOsDiskPtrOutputWithContext(context.Background())
}

func (o LinuxVirtualMachineScaleSetOsDiskOutput) ToLinuxVirtualMachineScaleSetOsDiskPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetOsDiskPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetOsDisk) *LinuxVirtualMachineScaleSetOsDisk {
		return &v
	}).(LinuxVirtualMachineScaleSetOsDiskPtrOutput)
}

// The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
func (o LinuxVirtualMachineScaleSetOsDiskOutput) Caching() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetOsDisk) string { return v.Caching }).(pulumi.StringOutput)
}

// A `diffDiskSettings` block as defined above. Changing this forces a new resource to be created.
func (o LinuxVirtualMachineScaleSetOsDiskOutput) DiffDiskSettings() LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetOsDisk) *LinuxVirtualMachineScaleSetOsDiskDiffDiskSettings {
		return v.DiffDiskSettings
	}).(LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput)
}

// The ID of the Disk Encryption Set which should be used to encrypt this OS Disk.
func (o LinuxVirtualMachineScaleSetOsDiskOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetOsDisk) *string { return v.DiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine Scale Set is sourced from.
func (o LinuxVirtualMachineScaleSetOsDiskOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetOsDisk) *int { return v.DiskSizeGb }).(pulumi.IntPtrOutput)
}

// The Type of Storage Account which should back this the Internal OS Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS` and `Premium_LRS`.
func (o LinuxVirtualMachineScaleSetOsDiskOutput) StorageAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetOsDisk) string { return v.StorageAccountType }).(pulumi.StringOutput)
}

// Should Write Accelerator be Enabled for this OS Disk? Defaults to `false`.
func (o LinuxVirtualMachineScaleSetOsDiskOutput) WriteAcceleratorEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetOsDisk) *bool { return v.WriteAcceleratorEnabled }).(pulumi.BoolPtrOutput)
}

type LinuxVirtualMachineScaleSetOsDiskPtrOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetOsDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineScaleSetOsDisk)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetOsDiskPtrOutput) ToLinuxVirtualMachineScaleSetOsDiskPtrOutput() LinuxVirtualMachineScaleSetOsDiskPtrOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetOsDiskPtrOutput) ToLinuxVirtualMachineScaleSetOsDiskPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetOsDiskPtrOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetOsDiskPtrOutput) Elem() LinuxVirtualMachineScaleSetOsDiskOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetOsDisk) LinuxVirtualMachineScaleSetOsDisk { return *v }).(LinuxVirtualMachineScaleSetOsDiskOutput)
}

// The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
func (o LinuxVirtualMachineScaleSetOsDiskPtrOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetOsDisk) *string {
		if v == nil {
			return nil
		}
		return &v.Caching
	}).(pulumi.StringPtrOutput)
}

// A `diffDiskSettings` block as defined above. Changing this forces a new resource to be created.
func (o LinuxVirtualMachineScaleSetOsDiskPtrOutput) DiffDiskSettings() LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetOsDisk) *LinuxVirtualMachineScaleSetOsDiskDiffDiskSettings {
		if v == nil {
			return nil
		}
		return v.DiffDiskSettings
	}).(LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput)
}

// The ID of the Disk Encryption Set which should be used to encrypt this OS Disk.
func (o LinuxVirtualMachineScaleSetOsDiskPtrOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetOsDisk) *string {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionSetId
	}).(pulumi.StringPtrOutput)
}

// The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine Scale Set is sourced from.
func (o LinuxVirtualMachineScaleSetOsDiskPtrOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetOsDisk) *int {
		if v == nil {
			return nil
		}
		return v.DiskSizeGb
	}).(pulumi.IntPtrOutput)
}

// The Type of Storage Account which should back this the Internal OS Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS` and `Premium_LRS`.
func (o LinuxVirtualMachineScaleSetOsDiskPtrOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetOsDisk) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountType
	}).(pulumi.StringPtrOutput)
}

// Should Write Accelerator be Enabled for this OS Disk? Defaults to `false`.
func (o LinuxVirtualMachineScaleSetOsDiskPtrOutput) WriteAcceleratorEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetOsDisk) *bool {
		if v == nil {
			return nil
		}
		return v.WriteAcceleratorEnabled
	}).(pulumi.BoolPtrOutput)
}

type LinuxVirtualMachineScaleSetOsDiskDiffDiskSettings struct {
	Option string `pulumi:"option"`
}

// LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsInput is an input type that accepts LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs and LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsInput` via:
//
// 		 LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs{...}
//
type LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput() LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput
	ToLinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsOutputWithContext(context.Context) LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput
}

type LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs struct {
	Option pulumi.StringInput `pulumi:"option"`
}

func (LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetOsDiskDiffDiskSettings)(nil)).Elem()
}

func (i LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs) ToLinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput() LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput {
	return i.ToLinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs) ToLinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput)
}

func (i LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs) ToLinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput() LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput {
	return i.ToLinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs) ToLinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput).ToLinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutputWithContext(ctx)
}

// LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrInput is an input type that accepts LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs, LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtr and LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrInput` via:
//
// 		 LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs{...}
//
//  or:
//
// 		 nil
//
type LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput() LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput
	ToLinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutputWithContext(context.Context) LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput
}

type linuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrType LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs

func LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtr(v *LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs) LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrInput {
	return (*linuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrType)(v)
}

func (*linuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineScaleSetOsDiskDiffDiskSettings)(nil)).Elem()
}

func (i *linuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrType) ToLinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput() LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput {
	return i.ToLinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutputWithContext(context.Background())
}

func (i *linuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrType) ToLinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput)
}

type LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetOsDiskDiffDiskSettings)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput) ToLinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput() LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput) ToLinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput) ToLinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput() LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput {
	return o.ToLinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutputWithContext(context.Background())
}

func (o LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput) ToLinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetOsDiskDiffDiskSettings) *LinuxVirtualMachineScaleSetOsDiskDiffDiskSettings {
		return &v
	}).(LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput)
}
func (o LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput) Option() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetOsDiskDiffDiskSettings) string { return v.Option }).(pulumi.StringOutput)
}

type LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineScaleSetOsDiskDiffDiskSettings)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput) ToLinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput() LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput) ToLinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput) Elem() LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetOsDiskDiffDiskSettings) LinuxVirtualMachineScaleSetOsDiskDiffDiskSettings {
		return *v
	}).(LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput)
}

func (o LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput) Option() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetOsDiskDiffDiskSettings) *string {
		if v == nil {
			return nil
		}
		return &v.Option
	}).(pulumi.StringPtrOutput)
}

type LinuxVirtualMachineScaleSetPlan struct {
	// The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
	Name    string `pulumi:"name"`
	Product string `pulumi:"product"`
	// Specifies the publisher of the image used to create the virtual machines.
	Publisher string `pulumi:"publisher"`
}

// LinuxVirtualMachineScaleSetPlanInput is an input type that accepts LinuxVirtualMachineScaleSetPlanArgs and LinuxVirtualMachineScaleSetPlanOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetPlanInput` via:
//
// 		 LinuxVirtualMachineScaleSetPlanArgs{...}
//
type LinuxVirtualMachineScaleSetPlanInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetPlanOutput() LinuxVirtualMachineScaleSetPlanOutput
	ToLinuxVirtualMachineScaleSetPlanOutputWithContext(context.Context) LinuxVirtualMachineScaleSetPlanOutput
}

type LinuxVirtualMachineScaleSetPlanArgs struct {
	// The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
	Name    pulumi.StringInput `pulumi:"name"`
	Product pulumi.StringInput `pulumi:"product"`
	// Specifies the publisher of the image used to create the virtual machines.
	Publisher pulumi.StringInput `pulumi:"publisher"`
}

func (LinuxVirtualMachineScaleSetPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetPlan)(nil)).Elem()
}

func (i LinuxVirtualMachineScaleSetPlanArgs) ToLinuxVirtualMachineScaleSetPlanOutput() LinuxVirtualMachineScaleSetPlanOutput {
	return i.ToLinuxVirtualMachineScaleSetPlanOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetPlanArgs) ToLinuxVirtualMachineScaleSetPlanOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetPlanOutput)
}

func (i LinuxVirtualMachineScaleSetPlanArgs) ToLinuxVirtualMachineScaleSetPlanPtrOutput() LinuxVirtualMachineScaleSetPlanPtrOutput {
	return i.ToLinuxVirtualMachineScaleSetPlanPtrOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetPlanArgs) ToLinuxVirtualMachineScaleSetPlanPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetPlanOutput).ToLinuxVirtualMachineScaleSetPlanPtrOutputWithContext(ctx)
}

// LinuxVirtualMachineScaleSetPlanPtrInput is an input type that accepts LinuxVirtualMachineScaleSetPlanArgs, LinuxVirtualMachineScaleSetPlanPtr and LinuxVirtualMachineScaleSetPlanPtrOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetPlanPtrInput` via:
//
// 		 LinuxVirtualMachineScaleSetPlanArgs{...}
//
//  or:
//
// 		 nil
//
type LinuxVirtualMachineScaleSetPlanPtrInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetPlanPtrOutput() LinuxVirtualMachineScaleSetPlanPtrOutput
	ToLinuxVirtualMachineScaleSetPlanPtrOutputWithContext(context.Context) LinuxVirtualMachineScaleSetPlanPtrOutput
}

type linuxVirtualMachineScaleSetPlanPtrType LinuxVirtualMachineScaleSetPlanArgs

func LinuxVirtualMachineScaleSetPlanPtr(v *LinuxVirtualMachineScaleSetPlanArgs) LinuxVirtualMachineScaleSetPlanPtrInput {
	return (*linuxVirtualMachineScaleSetPlanPtrType)(v)
}

func (*linuxVirtualMachineScaleSetPlanPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineScaleSetPlan)(nil)).Elem()
}

func (i *linuxVirtualMachineScaleSetPlanPtrType) ToLinuxVirtualMachineScaleSetPlanPtrOutput() LinuxVirtualMachineScaleSetPlanPtrOutput {
	return i.ToLinuxVirtualMachineScaleSetPlanPtrOutputWithContext(context.Background())
}

func (i *linuxVirtualMachineScaleSetPlanPtrType) ToLinuxVirtualMachineScaleSetPlanPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetPlanPtrOutput)
}

type LinuxVirtualMachineScaleSetPlanOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetPlan)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetPlanOutput) ToLinuxVirtualMachineScaleSetPlanOutput() LinuxVirtualMachineScaleSetPlanOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetPlanOutput) ToLinuxVirtualMachineScaleSetPlanOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetPlanOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetPlanOutput) ToLinuxVirtualMachineScaleSetPlanPtrOutput() LinuxVirtualMachineScaleSetPlanPtrOutput {
	return o.ToLinuxVirtualMachineScaleSetPlanPtrOutputWithContext(context.Background())
}

func (o LinuxVirtualMachineScaleSetPlanOutput) ToLinuxVirtualMachineScaleSetPlanPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetPlanPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetPlan) *LinuxVirtualMachineScaleSetPlan {
		return &v
	}).(LinuxVirtualMachineScaleSetPlanPtrOutput)
}

// The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
func (o LinuxVirtualMachineScaleSetPlanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetPlan) string { return v.Name }).(pulumi.StringOutput)
}

func (o LinuxVirtualMachineScaleSetPlanOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetPlan) string { return v.Product }).(pulumi.StringOutput)
}

// Specifies the publisher of the image used to create the virtual machines.
func (o LinuxVirtualMachineScaleSetPlanOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetPlan) string { return v.Publisher }).(pulumi.StringOutput)
}

type LinuxVirtualMachineScaleSetPlanPtrOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetPlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineScaleSetPlan)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetPlanPtrOutput) ToLinuxVirtualMachineScaleSetPlanPtrOutput() LinuxVirtualMachineScaleSetPlanPtrOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetPlanPtrOutput) ToLinuxVirtualMachineScaleSetPlanPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetPlanPtrOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetPlanPtrOutput) Elem() LinuxVirtualMachineScaleSetPlanOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetPlan) LinuxVirtualMachineScaleSetPlan { return *v }).(LinuxVirtualMachineScaleSetPlanOutput)
}

// The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
func (o LinuxVirtualMachineScaleSetPlanPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetPlan) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o LinuxVirtualMachineScaleSetPlanPtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetPlan) *string {
		if v == nil {
			return nil
		}
		return &v.Product
	}).(pulumi.StringPtrOutput)
}

// Specifies the publisher of the image used to create the virtual machines.
func (o LinuxVirtualMachineScaleSetPlanPtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetPlan) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

type LinuxVirtualMachineScaleSetRollingUpgradePolicy struct {
	// The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. Changing this forces a new resource to be created.
	MaxBatchInstancePercent int `pulumi:"maxBatchInstancePercent"`
	// The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. Changing this forces a new resource to be created.
	MaxUnhealthyInstancePercent int `pulumi:"maxUnhealthyInstancePercent"`
	// The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. Changing this forces a new resource to be created.
	MaxUnhealthyUpgradedInstancePercent int `pulumi:"maxUnhealthyUpgradedInstancePercent"`
	// The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. Changing this forces a new resource to be created.
	PauseTimeBetweenBatches string `pulumi:"pauseTimeBetweenBatches"`
}

// LinuxVirtualMachineScaleSetRollingUpgradePolicyInput is an input type that accepts LinuxVirtualMachineScaleSetRollingUpgradePolicyArgs and LinuxVirtualMachineScaleSetRollingUpgradePolicyOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetRollingUpgradePolicyInput` via:
//
// 		 LinuxVirtualMachineScaleSetRollingUpgradePolicyArgs{...}
//
type LinuxVirtualMachineScaleSetRollingUpgradePolicyInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetRollingUpgradePolicyOutput() LinuxVirtualMachineScaleSetRollingUpgradePolicyOutput
	ToLinuxVirtualMachineScaleSetRollingUpgradePolicyOutputWithContext(context.Context) LinuxVirtualMachineScaleSetRollingUpgradePolicyOutput
}

type LinuxVirtualMachineScaleSetRollingUpgradePolicyArgs struct {
	// The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. Changing this forces a new resource to be created.
	MaxBatchInstancePercent pulumi.IntInput `pulumi:"maxBatchInstancePercent"`
	// The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. Changing this forces a new resource to be created.
	MaxUnhealthyInstancePercent pulumi.IntInput `pulumi:"maxUnhealthyInstancePercent"`
	// The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. Changing this forces a new resource to be created.
	MaxUnhealthyUpgradedInstancePercent pulumi.IntInput `pulumi:"maxUnhealthyUpgradedInstancePercent"`
	// The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. Changing this forces a new resource to be created.
	PauseTimeBetweenBatches pulumi.StringInput `pulumi:"pauseTimeBetweenBatches"`
}

func (LinuxVirtualMachineScaleSetRollingUpgradePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetRollingUpgradePolicy)(nil)).Elem()
}

func (i LinuxVirtualMachineScaleSetRollingUpgradePolicyArgs) ToLinuxVirtualMachineScaleSetRollingUpgradePolicyOutput() LinuxVirtualMachineScaleSetRollingUpgradePolicyOutput {
	return i.ToLinuxVirtualMachineScaleSetRollingUpgradePolicyOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetRollingUpgradePolicyArgs) ToLinuxVirtualMachineScaleSetRollingUpgradePolicyOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetRollingUpgradePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetRollingUpgradePolicyOutput)
}

func (i LinuxVirtualMachineScaleSetRollingUpgradePolicyArgs) ToLinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutput() LinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutput {
	return i.ToLinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetRollingUpgradePolicyArgs) ToLinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetRollingUpgradePolicyOutput).ToLinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutputWithContext(ctx)
}

// LinuxVirtualMachineScaleSetRollingUpgradePolicyPtrInput is an input type that accepts LinuxVirtualMachineScaleSetRollingUpgradePolicyArgs, LinuxVirtualMachineScaleSetRollingUpgradePolicyPtr and LinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetRollingUpgradePolicyPtrInput` via:
//
// 		 LinuxVirtualMachineScaleSetRollingUpgradePolicyArgs{...}
//
//  or:
//
// 		 nil
//
type LinuxVirtualMachineScaleSetRollingUpgradePolicyPtrInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutput() LinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutput
	ToLinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutputWithContext(context.Context) LinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutput
}

type linuxVirtualMachineScaleSetRollingUpgradePolicyPtrType LinuxVirtualMachineScaleSetRollingUpgradePolicyArgs

func LinuxVirtualMachineScaleSetRollingUpgradePolicyPtr(v *LinuxVirtualMachineScaleSetRollingUpgradePolicyArgs) LinuxVirtualMachineScaleSetRollingUpgradePolicyPtrInput {
	return (*linuxVirtualMachineScaleSetRollingUpgradePolicyPtrType)(v)
}

func (*linuxVirtualMachineScaleSetRollingUpgradePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineScaleSetRollingUpgradePolicy)(nil)).Elem()
}

func (i *linuxVirtualMachineScaleSetRollingUpgradePolicyPtrType) ToLinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutput() LinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutput {
	return i.ToLinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutputWithContext(context.Background())
}

func (i *linuxVirtualMachineScaleSetRollingUpgradePolicyPtrType) ToLinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutput)
}

type LinuxVirtualMachineScaleSetRollingUpgradePolicyOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetRollingUpgradePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetRollingUpgradePolicy)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetRollingUpgradePolicyOutput) ToLinuxVirtualMachineScaleSetRollingUpgradePolicyOutput() LinuxVirtualMachineScaleSetRollingUpgradePolicyOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetRollingUpgradePolicyOutput) ToLinuxVirtualMachineScaleSetRollingUpgradePolicyOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetRollingUpgradePolicyOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetRollingUpgradePolicyOutput) ToLinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutput() LinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutput {
	return o.ToLinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutputWithContext(context.Background())
}

func (o LinuxVirtualMachineScaleSetRollingUpgradePolicyOutput) ToLinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetRollingUpgradePolicy) *LinuxVirtualMachineScaleSetRollingUpgradePolicy {
		return &v
	}).(LinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutput)
}

// The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. Changing this forces a new resource to be created.
func (o LinuxVirtualMachineScaleSetRollingUpgradePolicyOutput) MaxBatchInstancePercent() pulumi.IntOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetRollingUpgradePolicy) int { return v.MaxBatchInstancePercent }).(pulumi.IntOutput)
}

// The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. Changing this forces a new resource to be created.
func (o LinuxVirtualMachineScaleSetRollingUpgradePolicyOutput) MaxUnhealthyInstancePercent() pulumi.IntOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetRollingUpgradePolicy) int { return v.MaxUnhealthyInstancePercent }).(pulumi.IntOutput)
}

// The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. Changing this forces a new resource to be created.
func (o LinuxVirtualMachineScaleSetRollingUpgradePolicyOutput) MaxUnhealthyUpgradedInstancePercent() pulumi.IntOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetRollingUpgradePolicy) int {
		return v.MaxUnhealthyUpgradedInstancePercent
	}).(pulumi.IntOutput)
}

// The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. Changing this forces a new resource to be created.
func (o LinuxVirtualMachineScaleSetRollingUpgradePolicyOutput) PauseTimeBetweenBatches() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetRollingUpgradePolicy) string { return v.PauseTimeBetweenBatches }).(pulumi.StringOutput)
}

type LinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineScaleSetRollingUpgradePolicy)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutput) ToLinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutput() LinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutput) ToLinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutput) Elem() LinuxVirtualMachineScaleSetRollingUpgradePolicyOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetRollingUpgradePolicy) LinuxVirtualMachineScaleSetRollingUpgradePolicy {
		return *v
	}).(LinuxVirtualMachineScaleSetRollingUpgradePolicyOutput)
}

// The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. Changing this forces a new resource to be created.
func (o LinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutput) MaxBatchInstancePercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetRollingUpgradePolicy) *int {
		if v == nil {
			return nil
		}
		return &v.MaxBatchInstancePercent
	}).(pulumi.IntPtrOutput)
}

// The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. Changing this forces a new resource to be created.
func (o LinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutput) MaxUnhealthyInstancePercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetRollingUpgradePolicy) *int {
		if v == nil {
			return nil
		}
		return &v.MaxUnhealthyInstancePercent
	}).(pulumi.IntPtrOutput)
}

// The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. Changing this forces a new resource to be created.
func (o LinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutput) MaxUnhealthyUpgradedInstancePercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetRollingUpgradePolicy) *int {
		if v == nil {
			return nil
		}
		return &v.MaxUnhealthyUpgradedInstancePercent
	}).(pulumi.IntPtrOutput)
}

// The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. Changing this forces a new resource to be created.
func (o LinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutput) PauseTimeBetweenBatches() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetRollingUpgradePolicy) *string {
		if v == nil {
			return nil
		}
		return &v.PauseTimeBetweenBatches
	}).(pulumi.StringPtrOutput)
}

type LinuxVirtualMachineScaleSetSecret struct {
	// One or more `certificate` blocks as defined above.
	Certificates []LinuxVirtualMachineScaleSetSecretCertificate `pulumi:"certificates"`
	// The ID of the Key Vault from which all Secrets should be sourced.
	KeyVaultId string `pulumi:"keyVaultId"`
}

// LinuxVirtualMachineScaleSetSecretInput is an input type that accepts LinuxVirtualMachineScaleSetSecretArgs and LinuxVirtualMachineScaleSetSecretOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetSecretInput` via:
//
// 		 LinuxVirtualMachineScaleSetSecretArgs{...}
//
type LinuxVirtualMachineScaleSetSecretInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetSecretOutput() LinuxVirtualMachineScaleSetSecretOutput
	ToLinuxVirtualMachineScaleSetSecretOutputWithContext(context.Context) LinuxVirtualMachineScaleSetSecretOutput
}

type LinuxVirtualMachineScaleSetSecretArgs struct {
	// One or more `certificate` blocks as defined above.
	Certificates LinuxVirtualMachineScaleSetSecretCertificateArrayInput `pulumi:"certificates"`
	// The ID of the Key Vault from which all Secrets should be sourced.
	KeyVaultId pulumi.StringInput `pulumi:"keyVaultId"`
}

func (LinuxVirtualMachineScaleSetSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetSecret)(nil)).Elem()
}

func (i LinuxVirtualMachineScaleSetSecretArgs) ToLinuxVirtualMachineScaleSetSecretOutput() LinuxVirtualMachineScaleSetSecretOutput {
	return i.ToLinuxVirtualMachineScaleSetSecretOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetSecretArgs) ToLinuxVirtualMachineScaleSetSecretOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetSecretOutput)
}

// LinuxVirtualMachineScaleSetSecretArrayInput is an input type that accepts LinuxVirtualMachineScaleSetSecretArray and LinuxVirtualMachineScaleSetSecretArrayOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetSecretArrayInput` via:
//
// 		 LinuxVirtualMachineScaleSetSecretArray{ LinuxVirtualMachineScaleSetSecretArgs{...} }
//
type LinuxVirtualMachineScaleSetSecretArrayInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetSecretArrayOutput() LinuxVirtualMachineScaleSetSecretArrayOutput
	ToLinuxVirtualMachineScaleSetSecretArrayOutputWithContext(context.Context) LinuxVirtualMachineScaleSetSecretArrayOutput
}

type LinuxVirtualMachineScaleSetSecretArray []LinuxVirtualMachineScaleSetSecretInput

func (LinuxVirtualMachineScaleSetSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinuxVirtualMachineScaleSetSecret)(nil)).Elem()
}

func (i LinuxVirtualMachineScaleSetSecretArray) ToLinuxVirtualMachineScaleSetSecretArrayOutput() LinuxVirtualMachineScaleSetSecretArrayOutput {
	return i.ToLinuxVirtualMachineScaleSetSecretArrayOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetSecretArray) ToLinuxVirtualMachineScaleSetSecretArrayOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetSecretArrayOutput)
}

type LinuxVirtualMachineScaleSetSecretOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetSecret)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetSecretOutput) ToLinuxVirtualMachineScaleSetSecretOutput() LinuxVirtualMachineScaleSetSecretOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetSecretOutput) ToLinuxVirtualMachineScaleSetSecretOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetSecretOutput {
	return o
}

// One or more `certificate` blocks as defined above.
func (o LinuxVirtualMachineScaleSetSecretOutput) Certificates() LinuxVirtualMachineScaleSetSecretCertificateArrayOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetSecret) []LinuxVirtualMachineScaleSetSecretCertificate {
		return v.Certificates
	}).(LinuxVirtualMachineScaleSetSecretCertificateArrayOutput)
}

// The ID of the Key Vault from which all Secrets should be sourced.
func (o LinuxVirtualMachineScaleSetSecretOutput) KeyVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetSecret) string { return v.KeyVaultId }).(pulumi.StringOutput)
}

type LinuxVirtualMachineScaleSetSecretArrayOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinuxVirtualMachineScaleSetSecret)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetSecretArrayOutput) ToLinuxVirtualMachineScaleSetSecretArrayOutput() LinuxVirtualMachineScaleSetSecretArrayOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetSecretArrayOutput) ToLinuxVirtualMachineScaleSetSecretArrayOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetSecretArrayOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetSecretArrayOutput) Index(i pulumi.IntInput) LinuxVirtualMachineScaleSetSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LinuxVirtualMachineScaleSetSecret {
		return vs[0].([]LinuxVirtualMachineScaleSetSecret)[vs[1].(int)]
	}).(LinuxVirtualMachineScaleSetSecretOutput)
}

type LinuxVirtualMachineScaleSetSecretCertificate struct {
	// The Secret URL of a Key Vault Certificate.
	Url string `pulumi:"url"`
}

// LinuxVirtualMachineScaleSetSecretCertificateInput is an input type that accepts LinuxVirtualMachineScaleSetSecretCertificateArgs and LinuxVirtualMachineScaleSetSecretCertificateOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetSecretCertificateInput` via:
//
// 		 LinuxVirtualMachineScaleSetSecretCertificateArgs{...}
//
type LinuxVirtualMachineScaleSetSecretCertificateInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetSecretCertificateOutput() LinuxVirtualMachineScaleSetSecretCertificateOutput
	ToLinuxVirtualMachineScaleSetSecretCertificateOutputWithContext(context.Context) LinuxVirtualMachineScaleSetSecretCertificateOutput
}

type LinuxVirtualMachineScaleSetSecretCertificateArgs struct {
	// The Secret URL of a Key Vault Certificate.
	Url pulumi.StringInput `pulumi:"url"`
}

func (LinuxVirtualMachineScaleSetSecretCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetSecretCertificate)(nil)).Elem()
}

func (i LinuxVirtualMachineScaleSetSecretCertificateArgs) ToLinuxVirtualMachineScaleSetSecretCertificateOutput() LinuxVirtualMachineScaleSetSecretCertificateOutput {
	return i.ToLinuxVirtualMachineScaleSetSecretCertificateOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetSecretCertificateArgs) ToLinuxVirtualMachineScaleSetSecretCertificateOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetSecretCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetSecretCertificateOutput)
}

// LinuxVirtualMachineScaleSetSecretCertificateArrayInput is an input type that accepts LinuxVirtualMachineScaleSetSecretCertificateArray and LinuxVirtualMachineScaleSetSecretCertificateArrayOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetSecretCertificateArrayInput` via:
//
// 		 LinuxVirtualMachineScaleSetSecretCertificateArray{ LinuxVirtualMachineScaleSetSecretCertificateArgs{...} }
//
type LinuxVirtualMachineScaleSetSecretCertificateArrayInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetSecretCertificateArrayOutput() LinuxVirtualMachineScaleSetSecretCertificateArrayOutput
	ToLinuxVirtualMachineScaleSetSecretCertificateArrayOutputWithContext(context.Context) LinuxVirtualMachineScaleSetSecretCertificateArrayOutput
}

type LinuxVirtualMachineScaleSetSecretCertificateArray []LinuxVirtualMachineScaleSetSecretCertificateInput

func (LinuxVirtualMachineScaleSetSecretCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinuxVirtualMachineScaleSetSecretCertificate)(nil)).Elem()
}

func (i LinuxVirtualMachineScaleSetSecretCertificateArray) ToLinuxVirtualMachineScaleSetSecretCertificateArrayOutput() LinuxVirtualMachineScaleSetSecretCertificateArrayOutput {
	return i.ToLinuxVirtualMachineScaleSetSecretCertificateArrayOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetSecretCertificateArray) ToLinuxVirtualMachineScaleSetSecretCertificateArrayOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetSecretCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetSecretCertificateArrayOutput)
}

type LinuxVirtualMachineScaleSetSecretCertificateOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetSecretCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetSecretCertificate)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetSecretCertificateOutput) ToLinuxVirtualMachineScaleSetSecretCertificateOutput() LinuxVirtualMachineScaleSetSecretCertificateOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetSecretCertificateOutput) ToLinuxVirtualMachineScaleSetSecretCertificateOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetSecretCertificateOutput {
	return o
}

// The Secret URL of a Key Vault Certificate.
func (o LinuxVirtualMachineScaleSetSecretCertificateOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetSecretCertificate) string { return v.Url }).(pulumi.StringOutput)
}

type LinuxVirtualMachineScaleSetSecretCertificateArrayOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetSecretCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinuxVirtualMachineScaleSetSecretCertificate)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetSecretCertificateArrayOutput) ToLinuxVirtualMachineScaleSetSecretCertificateArrayOutput() LinuxVirtualMachineScaleSetSecretCertificateArrayOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetSecretCertificateArrayOutput) ToLinuxVirtualMachineScaleSetSecretCertificateArrayOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetSecretCertificateArrayOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetSecretCertificateArrayOutput) Index(i pulumi.IntInput) LinuxVirtualMachineScaleSetSecretCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LinuxVirtualMachineScaleSetSecretCertificate {
		return vs[0].([]LinuxVirtualMachineScaleSetSecretCertificate)[vs[1].(int)]
	}).(LinuxVirtualMachineScaleSetSecretCertificateOutput)
}

type LinuxVirtualMachineScaleSetSourceImageReference struct {
	// Specifies the offer of the image used to create the virtual machines.
	Offer string `pulumi:"offer"`
	// Specifies the publisher of the image used to create the virtual machines.
	Publisher string `pulumi:"publisher"`
	// Specifies the SKU of the image used to create the virtual machines.
	Sku string `pulumi:"sku"`
	// Specifies the version of the image used to create the virtual machines.
	Version string `pulumi:"version"`
}

// LinuxVirtualMachineScaleSetSourceImageReferenceInput is an input type that accepts LinuxVirtualMachineScaleSetSourceImageReferenceArgs and LinuxVirtualMachineScaleSetSourceImageReferenceOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetSourceImageReferenceInput` via:
//
// 		 LinuxVirtualMachineScaleSetSourceImageReferenceArgs{...}
//
type LinuxVirtualMachineScaleSetSourceImageReferenceInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetSourceImageReferenceOutput() LinuxVirtualMachineScaleSetSourceImageReferenceOutput
	ToLinuxVirtualMachineScaleSetSourceImageReferenceOutputWithContext(context.Context) LinuxVirtualMachineScaleSetSourceImageReferenceOutput
}

type LinuxVirtualMachineScaleSetSourceImageReferenceArgs struct {
	// Specifies the offer of the image used to create the virtual machines.
	Offer pulumi.StringInput `pulumi:"offer"`
	// Specifies the publisher of the image used to create the virtual machines.
	Publisher pulumi.StringInput `pulumi:"publisher"`
	// Specifies the SKU of the image used to create the virtual machines.
	Sku pulumi.StringInput `pulumi:"sku"`
	// Specifies the version of the image used to create the virtual machines.
	Version pulumi.StringInput `pulumi:"version"`
}

func (LinuxVirtualMachineScaleSetSourceImageReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetSourceImageReference)(nil)).Elem()
}

func (i LinuxVirtualMachineScaleSetSourceImageReferenceArgs) ToLinuxVirtualMachineScaleSetSourceImageReferenceOutput() LinuxVirtualMachineScaleSetSourceImageReferenceOutput {
	return i.ToLinuxVirtualMachineScaleSetSourceImageReferenceOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetSourceImageReferenceArgs) ToLinuxVirtualMachineScaleSetSourceImageReferenceOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetSourceImageReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetSourceImageReferenceOutput)
}

func (i LinuxVirtualMachineScaleSetSourceImageReferenceArgs) ToLinuxVirtualMachineScaleSetSourceImageReferencePtrOutput() LinuxVirtualMachineScaleSetSourceImageReferencePtrOutput {
	return i.ToLinuxVirtualMachineScaleSetSourceImageReferencePtrOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetSourceImageReferenceArgs) ToLinuxVirtualMachineScaleSetSourceImageReferencePtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetSourceImageReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetSourceImageReferenceOutput).ToLinuxVirtualMachineScaleSetSourceImageReferencePtrOutputWithContext(ctx)
}

// LinuxVirtualMachineScaleSetSourceImageReferencePtrInput is an input type that accepts LinuxVirtualMachineScaleSetSourceImageReferenceArgs, LinuxVirtualMachineScaleSetSourceImageReferencePtr and LinuxVirtualMachineScaleSetSourceImageReferencePtrOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetSourceImageReferencePtrInput` via:
//
// 		 LinuxVirtualMachineScaleSetSourceImageReferenceArgs{...}
//
//  or:
//
// 		 nil
//
type LinuxVirtualMachineScaleSetSourceImageReferencePtrInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetSourceImageReferencePtrOutput() LinuxVirtualMachineScaleSetSourceImageReferencePtrOutput
	ToLinuxVirtualMachineScaleSetSourceImageReferencePtrOutputWithContext(context.Context) LinuxVirtualMachineScaleSetSourceImageReferencePtrOutput
}

type linuxVirtualMachineScaleSetSourceImageReferencePtrType LinuxVirtualMachineScaleSetSourceImageReferenceArgs

func LinuxVirtualMachineScaleSetSourceImageReferencePtr(v *LinuxVirtualMachineScaleSetSourceImageReferenceArgs) LinuxVirtualMachineScaleSetSourceImageReferencePtrInput {
	return (*linuxVirtualMachineScaleSetSourceImageReferencePtrType)(v)
}

func (*linuxVirtualMachineScaleSetSourceImageReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineScaleSetSourceImageReference)(nil)).Elem()
}

func (i *linuxVirtualMachineScaleSetSourceImageReferencePtrType) ToLinuxVirtualMachineScaleSetSourceImageReferencePtrOutput() LinuxVirtualMachineScaleSetSourceImageReferencePtrOutput {
	return i.ToLinuxVirtualMachineScaleSetSourceImageReferencePtrOutputWithContext(context.Background())
}

func (i *linuxVirtualMachineScaleSetSourceImageReferencePtrType) ToLinuxVirtualMachineScaleSetSourceImageReferencePtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetSourceImageReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetSourceImageReferencePtrOutput)
}

type LinuxVirtualMachineScaleSetSourceImageReferenceOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetSourceImageReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetSourceImageReference)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetSourceImageReferenceOutput) ToLinuxVirtualMachineScaleSetSourceImageReferenceOutput() LinuxVirtualMachineScaleSetSourceImageReferenceOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetSourceImageReferenceOutput) ToLinuxVirtualMachineScaleSetSourceImageReferenceOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetSourceImageReferenceOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetSourceImageReferenceOutput) ToLinuxVirtualMachineScaleSetSourceImageReferencePtrOutput() LinuxVirtualMachineScaleSetSourceImageReferencePtrOutput {
	return o.ToLinuxVirtualMachineScaleSetSourceImageReferencePtrOutputWithContext(context.Background())
}

func (o LinuxVirtualMachineScaleSetSourceImageReferenceOutput) ToLinuxVirtualMachineScaleSetSourceImageReferencePtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetSourceImageReferencePtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetSourceImageReference) *LinuxVirtualMachineScaleSetSourceImageReference {
		return &v
	}).(LinuxVirtualMachineScaleSetSourceImageReferencePtrOutput)
}

// Specifies the offer of the image used to create the virtual machines.
func (o LinuxVirtualMachineScaleSetSourceImageReferenceOutput) Offer() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetSourceImageReference) string { return v.Offer }).(pulumi.StringOutput)
}

// Specifies the publisher of the image used to create the virtual machines.
func (o LinuxVirtualMachineScaleSetSourceImageReferenceOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetSourceImageReference) string { return v.Publisher }).(pulumi.StringOutput)
}

// Specifies the SKU of the image used to create the virtual machines.
func (o LinuxVirtualMachineScaleSetSourceImageReferenceOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetSourceImageReference) string { return v.Sku }).(pulumi.StringOutput)
}

// Specifies the version of the image used to create the virtual machines.
func (o LinuxVirtualMachineScaleSetSourceImageReferenceOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetSourceImageReference) string { return v.Version }).(pulumi.StringOutput)
}

type LinuxVirtualMachineScaleSetSourceImageReferencePtrOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetSourceImageReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineScaleSetSourceImageReference)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetSourceImageReferencePtrOutput) ToLinuxVirtualMachineScaleSetSourceImageReferencePtrOutput() LinuxVirtualMachineScaleSetSourceImageReferencePtrOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetSourceImageReferencePtrOutput) ToLinuxVirtualMachineScaleSetSourceImageReferencePtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetSourceImageReferencePtrOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetSourceImageReferencePtrOutput) Elem() LinuxVirtualMachineScaleSetSourceImageReferenceOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetSourceImageReference) LinuxVirtualMachineScaleSetSourceImageReference {
		return *v
	}).(LinuxVirtualMachineScaleSetSourceImageReferenceOutput)
}

// Specifies the offer of the image used to create the virtual machines.
func (o LinuxVirtualMachineScaleSetSourceImageReferencePtrOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetSourceImageReference) *string {
		if v == nil {
			return nil
		}
		return &v.Offer
	}).(pulumi.StringPtrOutput)
}

// Specifies the publisher of the image used to create the virtual machines.
func (o LinuxVirtualMachineScaleSetSourceImageReferencePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetSourceImageReference) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Specifies the SKU of the image used to create the virtual machines.
func (o LinuxVirtualMachineScaleSetSourceImageReferencePtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetSourceImageReference) *string {
		if v == nil {
			return nil
		}
		return &v.Sku
	}).(pulumi.StringPtrOutput)
}

// Specifies the version of the image used to create the virtual machines.
func (o LinuxVirtualMachineScaleSetSourceImageReferencePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetSourceImageReference) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type LinuxVirtualMachineScaleSetTerminateNotification struct {
	// Should the terminate notification be enabled on this Virtual Machine Scale Set? Defaults to `false`.
	Enabled bool `pulumi:"enabled"`
	// Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format.
	Timeout *string `pulumi:"timeout"`
}

// LinuxVirtualMachineScaleSetTerminateNotificationInput is an input type that accepts LinuxVirtualMachineScaleSetTerminateNotificationArgs and LinuxVirtualMachineScaleSetTerminateNotificationOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetTerminateNotificationInput` via:
//
// 		 LinuxVirtualMachineScaleSetTerminateNotificationArgs{...}
//
type LinuxVirtualMachineScaleSetTerminateNotificationInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetTerminateNotificationOutput() LinuxVirtualMachineScaleSetTerminateNotificationOutput
	ToLinuxVirtualMachineScaleSetTerminateNotificationOutputWithContext(context.Context) LinuxVirtualMachineScaleSetTerminateNotificationOutput
}

type LinuxVirtualMachineScaleSetTerminateNotificationArgs struct {
	// Should the terminate notification be enabled on this Virtual Machine Scale Set? Defaults to `false`.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (LinuxVirtualMachineScaleSetTerminateNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetTerminateNotification)(nil)).Elem()
}

func (i LinuxVirtualMachineScaleSetTerminateNotificationArgs) ToLinuxVirtualMachineScaleSetTerminateNotificationOutput() LinuxVirtualMachineScaleSetTerminateNotificationOutput {
	return i.ToLinuxVirtualMachineScaleSetTerminateNotificationOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetTerminateNotificationArgs) ToLinuxVirtualMachineScaleSetTerminateNotificationOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetTerminateNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetTerminateNotificationOutput)
}

func (i LinuxVirtualMachineScaleSetTerminateNotificationArgs) ToLinuxVirtualMachineScaleSetTerminateNotificationPtrOutput() LinuxVirtualMachineScaleSetTerminateNotificationPtrOutput {
	return i.ToLinuxVirtualMachineScaleSetTerminateNotificationPtrOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineScaleSetTerminateNotificationArgs) ToLinuxVirtualMachineScaleSetTerminateNotificationPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetTerminateNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetTerminateNotificationOutput).ToLinuxVirtualMachineScaleSetTerminateNotificationPtrOutputWithContext(ctx)
}

// LinuxVirtualMachineScaleSetTerminateNotificationPtrInput is an input type that accepts LinuxVirtualMachineScaleSetTerminateNotificationArgs, LinuxVirtualMachineScaleSetTerminateNotificationPtr and LinuxVirtualMachineScaleSetTerminateNotificationPtrOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineScaleSetTerminateNotificationPtrInput` via:
//
// 		 LinuxVirtualMachineScaleSetTerminateNotificationArgs{...}
//
//  or:
//
// 		 nil
//
type LinuxVirtualMachineScaleSetTerminateNotificationPtrInput interface {
	pulumi.Input

	ToLinuxVirtualMachineScaleSetTerminateNotificationPtrOutput() LinuxVirtualMachineScaleSetTerminateNotificationPtrOutput
	ToLinuxVirtualMachineScaleSetTerminateNotificationPtrOutputWithContext(context.Context) LinuxVirtualMachineScaleSetTerminateNotificationPtrOutput
}

type linuxVirtualMachineScaleSetTerminateNotificationPtrType LinuxVirtualMachineScaleSetTerminateNotificationArgs

func LinuxVirtualMachineScaleSetTerminateNotificationPtr(v *LinuxVirtualMachineScaleSetTerminateNotificationArgs) LinuxVirtualMachineScaleSetTerminateNotificationPtrInput {
	return (*linuxVirtualMachineScaleSetTerminateNotificationPtrType)(v)
}

func (*linuxVirtualMachineScaleSetTerminateNotificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineScaleSetTerminateNotification)(nil)).Elem()
}

func (i *linuxVirtualMachineScaleSetTerminateNotificationPtrType) ToLinuxVirtualMachineScaleSetTerminateNotificationPtrOutput() LinuxVirtualMachineScaleSetTerminateNotificationPtrOutput {
	return i.ToLinuxVirtualMachineScaleSetTerminateNotificationPtrOutputWithContext(context.Background())
}

func (i *linuxVirtualMachineScaleSetTerminateNotificationPtrType) ToLinuxVirtualMachineScaleSetTerminateNotificationPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetTerminateNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineScaleSetTerminateNotificationPtrOutput)
}

type LinuxVirtualMachineScaleSetTerminateNotificationOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetTerminateNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineScaleSetTerminateNotification)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetTerminateNotificationOutput) ToLinuxVirtualMachineScaleSetTerminateNotificationOutput() LinuxVirtualMachineScaleSetTerminateNotificationOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetTerminateNotificationOutput) ToLinuxVirtualMachineScaleSetTerminateNotificationOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetTerminateNotificationOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetTerminateNotificationOutput) ToLinuxVirtualMachineScaleSetTerminateNotificationPtrOutput() LinuxVirtualMachineScaleSetTerminateNotificationPtrOutput {
	return o.ToLinuxVirtualMachineScaleSetTerminateNotificationPtrOutputWithContext(context.Background())
}

func (o LinuxVirtualMachineScaleSetTerminateNotificationOutput) ToLinuxVirtualMachineScaleSetTerminateNotificationPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetTerminateNotificationPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetTerminateNotification) *LinuxVirtualMachineScaleSetTerminateNotification {
		return &v
	}).(LinuxVirtualMachineScaleSetTerminateNotificationPtrOutput)
}

// Should the terminate notification be enabled on this Virtual Machine Scale Set? Defaults to `false`.
func (o LinuxVirtualMachineScaleSetTerminateNotificationOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetTerminateNotification) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format.
func (o LinuxVirtualMachineScaleSetTerminateNotificationOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineScaleSetTerminateNotification) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type LinuxVirtualMachineScaleSetTerminateNotificationPtrOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineScaleSetTerminateNotificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineScaleSetTerminateNotification)(nil)).Elem()
}

func (o LinuxVirtualMachineScaleSetTerminateNotificationPtrOutput) ToLinuxVirtualMachineScaleSetTerminateNotificationPtrOutput() LinuxVirtualMachineScaleSetTerminateNotificationPtrOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetTerminateNotificationPtrOutput) ToLinuxVirtualMachineScaleSetTerminateNotificationPtrOutputWithContext(ctx context.Context) LinuxVirtualMachineScaleSetTerminateNotificationPtrOutput {
	return o
}

func (o LinuxVirtualMachineScaleSetTerminateNotificationPtrOutput) Elem() LinuxVirtualMachineScaleSetTerminateNotificationOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetTerminateNotification) LinuxVirtualMachineScaleSetTerminateNotification {
		return *v
	}).(LinuxVirtualMachineScaleSetTerminateNotificationOutput)
}

// Should the terminate notification be enabled on this Virtual Machine Scale Set? Defaults to `false`.
func (o LinuxVirtualMachineScaleSetTerminateNotificationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetTerminateNotification) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format.
func (o LinuxVirtualMachineScaleSetTerminateNotificationPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineScaleSetTerminateNotification) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

type LinuxVirtualMachineSecret struct {
	// One or more `certificate` blocks as defined above.
	Certificates []LinuxVirtualMachineSecretCertificate `pulumi:"certificates"`
	// The ID of the Key Vault from which all Secrets should be sourced.
	KeyVaultId string `pulumi:"keyVaultId"`
}

// LinuxVirtualMachineSecretInput is an input type that accepts LinuxVirtualMachineSecretArgs and LinuxVirtualMachineSecretOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineSecretInput` via:
//
// 		 LinuxVirtualMachineSecretArgs{...}
//
type LinuxVirtualMachineSecretInput interface {
	pulumi.Input

	ToLinuxVirtualMachineSecretOutput() LinuxVirtualMachineSecretOutput
	ToLinuxVirtualMachineSecretOutputWithContext(context.Context) LinuxVirtualMachineSecretOutput
}

type LinuxVirtualMachineSecretArgs struct {
	// One or more `certificate` blocks as defined above.
	Certificates LinuxVirtualMachineSecretCertificateArrayInput `pulumi:"certificates"`
	// The ID of the Key Vault from which all Secrets should be sourced.
	KeyVaultId pulumi.StringInput `pulumi:"keyVaultId"`
}

func (LinuxVirtualMachineSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineSecret)(nil)).Elem()
}

func (i LinuxVirtualMachineSecretArgs) ToLinuxVirtualMachineSecretOutput() LinuxVirtualMachineSecretOutput {
	return i.ToLinuxVirtualMachineSecretOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineSecretArgs) ToLinuxVirtualMachineSecretOutputWithContext(ctx context.Context) LinuxVirtualMachineSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineSecretOutput)
}

// LinuxVirtualMachineSecretArrayInput is an input type that accepts LinuxVirtualMachineSecretArray and LinuxVirtualMachineSecretArrayOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineSecretArrayInput` via:
//
// 		 LinuxVirtualMachineSecretArray{ LinuxVirtualMachineSecretArgs{...} }
//
type LinuxVirtualMachineSecretArrayInput interface {
	pulumi.Input

	ToLinuxVirtualMachineSecretArrayOutput() LinuxVirtualMachineSecretArrayOutput
	ToLinuxVirtualMachineSecretArrayOutputWithContext(context.Context) LinuxVirtualMachineSecretArrayOutput
}

type LinuxVirtualMachineSecretArray []LinuxVirtualMachineSecretInput

func (LinuxVirtualMachineSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinuxVirtualMachineSecret)(nil)).Elem()
}

func (i LinuxVirtualMachineSecretArray) ToLinuxVirtualMachineSecretArrayOutput() LinuxVirtualMachineSecretArrayOutput {
	return i.ToLinuxVirtualMachineSecretArrayOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineSecretArray) ToLinuxVirtualMachineSecretArrayOutputWithContext(ctx context.Context) LinuxVirtualMachineSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineSecretArrayOutput)
}

type LinuxVirtualMachineSecretOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineSecret)(nil)).Elem()
}

func (o LinuxVirtualMachineSecretOutput) ToLinuxVirtualMachineSecretOutput() LinuxVirtualMachineSecretOutput {
	return o
}

func (o LinuxVirtualMachineSecretOutput) ToLinuxVirtualMachineSecretOutputWithContext(ctx context.Context) LinuxVirtualMachineSecretOutput {
	return o
}

// One or more `certificate` blocks as defined above.
func (o LinuxVirtualMachineSecretOutput) Certificates() LinuxVirtualMachineSecretCertificateArrayOutput {
	return o.ApplyT(func(v LinuxVirtualMachineSecret) []LinuxVirtualMachineSecretCertificate { return v.Certificates }).(LinuxVirtualMachineSecretCertificateArrayOutput)
}

// The ID of the Key Vault from which all Secrets should be sourced.
func (o LinuxVirtualMachineSecretOutput) KeyVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineSecret) string { return v.KeyVaultId }).(pulumi.StringOutput)
}

type LinuxVirtualMachineSecretArrayOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinuxVirtualMachineSecret)(nil)).Elem()
}

func (o LinuxVirtualMachineSecretArrayOutput) ToLinuxVirtualMachineSecretArrayOutput() LinuxVirtualMachineSecretArrayOutput {
	return o
}

func (o LinuxVirtualMachineSecretArrayOutput) ToLinuxVirtualMachineSecretArrayOutputWithContext(ctx context.Context) LinuxVirtualMachineSecretArrayOutput {
	return o
}

func (o LinuxVirtualMachineSecretArrayOutput) Index(i pulumi.IntInput) LinuxVirtualMachineSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LinuxVirtualMachineSecret {
		return vs[0].([]LinuxVirtualMachineSecret)[vs[1].(int)]
	}).(LinuxVirtualMachineSecretOutput)
}

type LinuxVirtualMachineSecretCertificate struct {
	// The Secret URL of a Key Vault Certificate.
	Url string `pulumi:"url"`
}

// LinuxVirtualMachineSecretCertificateInput is an input type that accepts LinuxVirtualMachineSecretCertificateArgs and LinuxVirtualMachineSecretCertificateOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineSecretCertificateInput` via:
//
// 		 LinuxVirtualMachineSecretCertificateArgs{...}
//
type LinuxVirtualMachineSecretCertificateInput interface {
	pulumi.Input

	ToLinuxVirtualMachineSecretCertificateOutput() LinuxVirtualMachineSecretCertificateOutput
	ToLinuxVirtualMachineSecretCertificateOutputWithContext(context.Context) LinuxVirtualMachineSecretCertificateOutput
}

type LinuxVirtualMachineSecretCertificateArgs struct {
	// The Secret URL of a Key Vault Certificate.
	Url pulumi.StringInput `pulumi:"url"`
}

func (LinuxVirtualMachineSecretCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineSecretCertificate)(nil)).Elem()
}

func (i LinuxVirtualMachineSecretCertificateArgs) ToLinuxVirtualMachineSecretCertificateOutput() LinuxVirtualMachineSecretCertificateOutput {
	return i.ToLinuxVirtualMachineSecretCertificateOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineSecretCertificateArgs) ToLinuxVirtualMachineSecretCertificateOutputWithContext(ctx context.Context) LinuxVirtualMachineSecretCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineSecretCertificateOutput)
}

// LinuxVirtualMachineSecretCertificateArrayInput is an input type that accepts LinuxVirtualMachineSecretCertificateArray and LinuxVirtualMachineSecretCertificateArrayOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineSecretCertificateArrayInput` via:
//
// 		 LinuxVirtualMachineSecretCertificateArray{ LinuxVirtualMachineSecretCertificateArgs{...} }
//
type LinuxVirtualMachineSecretCertificateArrayInput interface {
	pulumi.Input

	ToLinuxVirtualMachineSecretCertificateArrayOutput() LinuxVirtualMachineSecretCertificateArrayOutput
	ToLinuxVirtualMachineSecretCertificateArrayOutputWithContext(context.Context) LinuxVirtualMachineSecretCertificateArrayOutput
}

type LinuxVirtualMachineSecretCertificateArray []LinuxVirtualMachineSecretCertificateInput

func (LinuxVirtualMachineSecretCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinuxVirtualMachineSecretCertificate)(nil)).Elem()
}

func (i LinuxVirtualMachineSecretCertificateArray) ToLinuxVirtualMachineSecretCertificateArrayOutput() LinuxVirtualMachineSecretCertificateArrayOutput {
	return i.ToLinuxVirtualMachineSecretCertificateArrayOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineSecretCertificateArray) ToLinuxVirtualMachineSecretCertificateArrayOutputWithContext(ctx context.Context) LinuxVirtualMachineSecretCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineSecretCertificateArrayOutput)
}

type LinuxVirtualMachineSecretCertificateOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineSecretCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineSecretCertificate)(nil)).Elem()
}

func (o LinuxVirtualMachineSecretCertificateOutput) ToLinuxVirtualMachineSecretCertificateOutput() LinuxVirtualMachineSecretCertificateOutput {
	return o
}

func (o LinuxVirtualMachineSecretCertificateOutput) ToLinuxVirtualMachineSecretCertificateOutputWithContext(ctx context.Context) LinuxVirtualMachineSecretCertificateOutput {
	return o
}

// The Secret URL of a Key Vault Certificate.
func (o LinuxVirtualMachineSecretCertificateOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineSecretCertificate) string { return v.Url }).(pulumi.StringOutput)
}

type LinuxVirtualMachineSecretCertificateArrayOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineSecretCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinuxVirtualMachineSecretCertificate)(nil)).Elem()
}

func (o LinuxVirtualMachineSecretCertificateArrayOutput) ToLinuxVirtualMachineSecretCertificateArrayOutput() LinuxVirtualMachineSecretCertificateArrayOutput {
	return o
}

func (o LinuxVirtualMachineSecretCertificateArrayOutput) ToLinuxVirtualMachineSecretCertificateArrayOutputWithContext(ctx context.Context) LinuxVirtualMachineSecretCertificateArrayOutput {
	return o
}

func (o LinuxVirtualMachineSecretCertificateArrayOutput) Index(i pulumi.IntInput) LinuxVirtualMachineSecretCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LinuxVirtualMachineSecretCertificate {
		return vs[0].([]LinuxVirtualMachineSecretCertificate)[vs[1].(int)]
	}).(LinuxVirtualMachineSecretCertificateOutput)
}

type LinuxVirtualMachineSourceImageReference struct {
	// Specifies the offer of the image used to create the virtual machines.
	Offer string `pulumi:"offer"`
	// Specifies the publisher of the image used to create the virtual machines.
	Publisher string `pulumi:"publisher"`
	// Specifies the SKU of the image used to create the virtual machines.
	Sku string `pulumi:"sku"`
	// Specifies the version of the image used to create the virtual machines.
	Version string `pulumi:"version"`
}

// LinuxVirtualMachineSourceImageReferenceInput is an input type that accepts LinuxVirtualMachineSourceImageReferenceArgs and LinuxVirtualMachineSourceImageReferenceOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineSourceImageReferenceInput` via:
//
// 		 LinuxVirtualMachineSourceImageReferenceArgs{...}
//
type LinuxVirtualMachineSourceImageReferenceInput interface {
	pulumi.Input

	ToLinuxVirtualMachineSourceImageReferenceOutput() LinuxVirtualMachineSourceImageReferenceOutput
	ToLinuxVirtualMachineSourceImageReferenceOutputWithContext(context.Context) LinuxVirtualMachineSourceImageReferenceOutput
}

type LinuxVirtualMachineSourceImageReferenceArgs struct {
	// Specifies the offer of the image used to create the virtual machines.
	Offer pulumi.StringInput `pulumi:"offer"`
	// Specifies the publisher of the image used to create the virtual machines.
	Publisher pulumi.StringInput `pulumi:"publisher"`
	// Specifies the SKU of the image used to create the virtual machines.
	Sku pulumi.StringInput `pulumi:"sku"`
	// Specifies the version of the image used to create the virtual machines.
	Version pulumi.StringInput `pulumi:"version"`
}

func (LinuxVirtualMachineSourceImageReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineSourceImageReference)(nil)).Elem()
}

func (i LinuxVirtualMachineSourceImageReferenceArgs) ToLinuxVirtualMachineSourceImageReferenceOutput() LinuxVirtualMachineSourceImageReferenceOutput {
	return i.ToLinuxVirtualMachineSourceImageReferenceOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineSourceImageReferenceArgs) ToLinuxVirtualMachineSourceImageReferenceOutputWithContext(ctx context.Context) LinuxVirtualMachineSourceImageReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineSourceImageReferenceOutput)
}

func (i LinuxVirtualMachineSourceImageReferenceArgs) ToLinuxVirtualMachineSourceImageReferencePtrOutput() LinuxVirtualMachineSourceImageReferencePtrOutput {
	return i.ToLinuxVirtualMachineSourceImageReferencePtrOutputWithContext(context.Background())
}

func (i LinuxVirtualMachineSourceImageReferenceArgs) ToLinuxVirtualMachineSourceImageReferencePtrOutputWithContext(ctx context.Context) LinuxVirtualMachineSourceImageReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineSourceImageReferenceOutput).ToLinuxVirtualMachineSourceImageReferencePtrOutputWithContext(ctx)
}

// LinuxVirtualMachineSourceImageReferencePtrInput is an input type that accepts LinuxVirtualMachineSourceImageReferenceArgs, LinuxVirtualMachineSourceImageReferencePtr and LinuxVirtualMachineSourceImageReferencePtrOutput values.
// You can construct a concrete instance of `LinuxVirtualMachineSourceImageReferencePtrInput` via:
//
// 		 LinuxVirtualMachineSourceImageReferenceArgs{...}
//
//  or:
//
// 		 nil
//
type LinuxVirtualMachineSourceImageReferencePtrInput interface {
	pulumi.Input

	ToLinuxVirtualMachineSourceImageReferencePtrOutput() LinuxVirtualMachineSourceImageReferencePtrOutput
	ToLinuxVirtualMachineSourceImageReferencePtrOutputWithContext(context.Context) LinuxVirtualMachineSourceImageReferencePtrOutput
}

type linuxVirtualMachineSourceImageReferencePtrType LinuxVirtualMachineSourceImageReferenceArgs

func LinuxVirtualMachineSourceImageReferencePtr(v *LinuxVirtualMachineSourceImageReferenceArgs) LinuxVirtualMachineSourceImageReferencePtrInput {
	return (*linuxVirtualMachineSourceImageReferencePtrType)(v)
}

func (*linuxVirtualMachineSourceImageReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineSourceImageReference)(nil)).Elem()
}

func (i *linuxVirtualMachineSourceImageReferencePtrType) ToLinuxVirtualMachineSourceImageReferencePtrOutput() LinuxVirtualMachineSourceImageReferencePtrOutput {
	return i.ToLinuxVirtualMachineSourceImageReferencePtrOutputWithContext(context.Background())
}

func (i *linuxVirtualMachineSourceImageReferencePtrType) ToLinuxVirtualMachineSourceImageReferencePtrOutputWithContext(ctx context.Context) LinuxVirtualMachineSourceImageReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxVirtualMachineSourceImageReferencePtrOutput)
}

type LinuxVirtualMachineSourceImageReferenceOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineSourceImageReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxVirtualMachineSourceImageReference)(nil)).Elem()
}

func (o LinuxVirtualMachineSourceImageReferenceOutput) ToLinuxVirtualMachineSourceImageReferenceOutput() LinuxVirtualMachineSourceImageReferenceOutput {
	return o
}

func (o LinuxVirtualMachineSourceImageReferenceOutput) ToLinuxVirtualMachineSourceImageReferenceOutputWithContext(ctx context.Context) LinuxVirtualMachineSourceImageReferenceOutput {
	return o
}

func (o LinuxVirtualMachineSourceImageReferenceOutput) ToLinuxVirtualMachineSourceImageReferencePtrOutput() LinuxVirtualMachineSourceImageReferencePtrOutput {
	return o.ToLinuxVirtualMachineSourceImageReferencePtrOutputWithContext(context.Background())
}

func (o LinuxVirtualMachineSourceImageReferenceOutput) ToLinuxVirtualMachineSourceImageReferencePtrOutputWithContext(ctx context.Context) LinuxVirtualMachineSourceImageReferencePtrOutput {
	return o.ApplyT(func(v LinuxVirtualMachineSourceImageReference) *LinuxVirtualMachineSourceImageReference {
		return &v
	}).(LinuxVirtualMachineSourceImageReferencePtrOutput)
}

// Specifies the offer of the image used to create the virtual machines.
func (o LinuxVirtualMachineSourceImageReferenceOutput) Offer() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineSourceImageReference) string { return v.Offer }).(pulumi.StringOutput)
}

// Specifies the publisher of the image used to create the virtual machines.
func (o LinuxVirtualMachineSourceImageReferenceOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineSourceImageReference) string { return v.Publisher }).(pulumi.StringOutput)
}

// Specifies the SKU of the image used to create the virtual machines.
func (o LinuxVirtualMachineSourceImageReferenceOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineSourceImageReference) string { return v.Sku }).(pulumi.StringOutput)
}

// Specifies the version of the image used to create the virtual machines.
func (o LinuxVirtualMachineSourceImageReferenceOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LinuxVirtualMachineSourceImageReference) string { return v.Version }).(pulumi.StringOutput)
}

type LinuxVirtualMachineSourceImageReferencePtrOutput struct{ *pulumi.OutputState }

func (LinuxVirtualMachineSourceImageReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxVirtualMachineSourceImageReference)(nil)).Elem()
}

func (o LinuxVirtualMachineSourceImageReferencePtrOutput) ToLinuxVirtualMachineSourceImageReferencePtrOutput() LinuxVirtualMachineSourceImageReferencePtrOutput {
	return o
}

func (o LinuxVirtualMachineSourceImageReferencePtrOutput) ToLinuxVirtualMachineSourceImageReferencePtrOutputWithContext(ctx context.Context) LinuxVirtualMachineSourceImageReferencePtrOutput {
	return o
}

func (o LinuxVirtualMachineSourceImageReferencePtrOutput) Elem() LinuxVirtualMachineSourceImageReferenceOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineSourceImageReference) LinuxVirtualMachineSourceImageReference { return *v }).(LinuxVirtualMachineSourceImageReferenceOutput)
}

// Specifies the offer of the image used to create the virtual machines.
func (o LinuxVirtualMachineSourceImageReferencePtrOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineSourceImageReference) *string {
		if v == nil {
			return nil
		}
		return &v.Offer
	}).(pulumi.StringPtrOutput)
}

// Specifies the publisher of the image used to create the virtual machines.
func (o LinuxVirtualMachineSourceImageReferencePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineSourceImageReference) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Specifies the SKU of the image used to create the virtual machines.
func (o LinuxVirtualMachineSourceImageReferencePtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineSourceImageReference) *string {
		if v == nil {
			return nil
		}
		return &v.Sku
	}).(pulumi.StringPtrOutput)
}

// Specifies the version of the image used to create the virtual machines.
func (o LinuxVirtualMachineSourceImageReferencePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxVirtualMachineSourceImageReference) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type ManagedDiskEncryptionSettings struct {
	// A `diskEncryptionKey` block as defined above.
	DiskEncryptionKey *ManagedDiskEncryptionSettingsDiskEncryptionKey `pulumi:"diskEncryptionKey"`
	// Is Encryption enabled on this Managed Disk? Changing this forces a new resource to be created.
	Enabled bool `pulumi:"enabled"`
	// A `keyEncryptionKey` block as defined below.
	KeyEncryptionKey *ManagedDiskEncryptionSettingsKeyEncryptionKey `pulumi:"keyEncryptionKey"`
}

// ManagedDiskEncryptionSettingsInput is an input type that accepts ManagedDiskEncryptionSettingsArgs and ManagedDiskEncryptionSettingsOutput values.
// You can construct a concrete instance of `ManagedDiskEncryptionSettingsInput` via:
//
// 		 ManagedDiskEncryptionSettingsArgs{...}
//
type ManagedDiskEncryptionSettingsInput interface {
	pulumi.Input

	ToManagedDiskEncryptionSettingsOutput() ManagedDiskEncryptionSettingsOutput
	ToManagedDiskEncryptionSettingsOutputWithContext(context.Context) ManagedDiskEncryptionSettingsOutput
}

type ManagedDiskEncryptionSettingsArgs struct {
	// A `diskEncryptionKey` block as defined above.
	DiskEncryptionKey ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrInput `pulumi:"diskEncryptionKey"`
	// Is Encryption enabled on this Managed Disk? Changing this forces a new resource to be created.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// A `keyEncryptionKey` block as defined below.
	KeyEncryptionKey ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrInput `pulumi:"keyEncryptionKey"`
}

func (ManagedDiskEncryptionSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDiskEncryptionSettings)(nil)).Elem()
}

func (i ManagedDiskEncryptionSettingsArgs) ToManagedDiskEncryptionSettingsOutput() ManagedDiskEncryptionSettingsOutput {
	return i.ToManagedDiskEncryptionSettingsOutputWithContext(context.Background())
}

func (i ManagedDiskEncryptionSettingsArgs) ToManagedDiskEncryptionSettingsOutputWithContext(ctx context.Context) ManagedDiskEncryptionSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDiskEncryptionSettingsOutput)
}

func (i ManagedDiskEncryptionSettingsArgs) ToManagedDiskEncryptionSettingsPtrOutput() ManagedDiskEncryptionSettingsPtrOutput {
	return i.ToManagedDiskEncryptionSettingsPtrOutputWithContext(context.Background())
}

func (i ManagedDiskEncryptionSettingsArgs) ToManagedDiskEncryptionSettingsPtrOutputWithContext(ctx context.Context) ManagedDiskEncryptionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDiskEncryptionSettingsOutput).ToManagedDiskEncryptionSettingsPtrOutputWithContext(ctx)
}

// ManagedDiskEncryptionSettingsPtrInput is an input type that accepts ManagedDiskEncryptionSettingsArgs, ManagedDiskEncryptionSettingsPtr and ManagedDiskEncryptionSettingsPtrOutput values.
// You can construct a concrete instance of `ManagedDiskEncryptionSettingsPtrInput` via:
//
// 		 ManagedDiskEncryptionSettingsArgs{...}
//
//  or:
//
// 		 nil
//
type ManagedDiskEncryptionSettingsPtrInput interface {
	pulumi.Input

	ToManagedDiskEncryptionSettingsPtrOutput() ManagedDiskEncryptionSettingsPtrOutput
	ToManagedDiskEncryptionSettingsPtrOutputWithContext(context.Context) ManagedDiskEncryptionSettingsPtrOutput
}

type managedDiskEncryptionSettingsPtrType ManagedDiskEncryptionSettingsArgs

func ManagedDiskEncryptionSettingsPtr(v *ManagedDiskEncryptionSettingsArgs) ManagedDiskEncryptionSettingsPtrInput {
	return (*managedDiskEncryptionSettingsPtrType)(v)
}

func (*managedDiskEncryptionSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDiskEncryptionSettings)(nil)).Elem()
}

func (i *managedDiskEncryptionSettingsPtrType) ToManagedDiskEncryptionSettingsPtrOutput() ManagedDiskEncryptionSettingsPtrOutput {
	return i.ToManagedDiskEncryptionSettingsPtrOutputWithContext(context.Background())
}

func (i *managedDiskEncryptionSettingsPtrType) ToManagedDiskEncryptionSettingsPtrOutputWithContext(ctx context.Context) ManagedDiskEncryptionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDiskEncryptionSettingsPtrOutput)
}

type ManagedDiskEncryptionSettingsOutput struct{ *pulumi.OutputState }

func (ManagedDiskEncryptionSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDiskEncryptionSettings)(nil)).Elem()
}

func (o ManagedDiskEncryptionSettingsOutput) ToManagedDiskEncryptionSettingsOutput() ManagedDiskEncryptionSettingsOutput {
	return o
}

func (o ManagedDiskEncryptionSettingsOutput) ToManagedDiskEncryptionSettingsOutputWithContext(ctx context.Context) ManagedDiskEncryptionSettingsOutput {
	return o
}

func (o ManagedDiskEncryptionSettingsOutput) ToManagedDiskEncryptionSettingsPtrOutput() ManagedDiskEncryptionSettingsPtrOutput {
	return o.ToManagedDiskEncryptionSettingsPtrOutputWithContext(context.Background())
}

func (o ManagedDiskEncryptionSettingsOutput) ToManagedDiskEncryptionSettingsPtrOutputWithContext(ctx context.Context) ManagedDiskEncryptionSettingsPtrOutput {
	return o.ApplyT(func(v ManagedDiskEncryptionSettings) *ManagedDiskEncryptionSettings {
		return &v
	}).(ManagedDiskEncryptionSettingsPtrOutput)
}

// A `diskEncryptionKey` block as defined above.
func (o ManagedDiskEncryptionSettingsOutput) DiskEncryptionKey() ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput {
	return o.ApplyT(func(v ManagedDiskEncryptionSettings) *ManagedDiskEncryptionSettingsDiskEncryptionKey {
		return v.DiskEncryptionKey
	}).(ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput)
}

// Is Encryption enabled on this Managed Disk? Changing this forces a new resource to be created.
func (o ManagedDiskEncryptionSettingsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ManagedDiskEncryptionSettings) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// A `keyEncryptionKey` block as defined below.
func (o ManagedDiskEncryptionSettingsOutput) KeyEncryptionKey() ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput {
	return o.ApplyT(func(v ManagedDiskEncryptionSettings) *ManagedDiskEncryptionSettingsKeyEncryptionKey {
		return v.KeyEncryptionKey
	}).(ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput)
}

type ManagedDiskEncryptionSettingsPtrOutput struct{ *pulumi.OutputState }

func (ManagedDiskEncryptionSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDiskEncryptionSettings)(nil)).Elem()
}

func (o ManagedDiskEncryptionSettingsPtrOutput) ToManagedDiskEncryptionSettingsPtrOutput() ManagedDiskEncryptionSettingsPtrOutput {
	return o
}

func (o ManagedDiskEncryptionSettingsPtrOutput) ToManagedDiskEncryptionSettingsPtrOutputWithContext(ctx context.Context) ManagedDiskEncryptionSettingsPtrOutput {
	return o
}

func (o ManagedDiskEncryptionSettingsPtrOutput) Elem() ManagedDiskEncryptionSettingsOutput {
	return o.ApplyT(func(v *ManagedDiskEncryptionSettings) ManagedDiskEncryptionSettings { return *v }).(ManagedDiskEncryptionSettingsOutput)
}

// A `diskEncryptionKey` block as defined above.
func (o ManagedDiskEncryptionSettingsPtrOutput) DiskEncryptionKey() ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput {
	return o.ApplyT(func(v *ManagedDiskEncryptionSettings) *ManagedDiskEncryptionSettingsDiskEncryptionKey {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionKey
	}).(ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput)
}

// Is Encryption enabled on this Managed Disk? Changing this forces a new resource to be created.
func (o ManagedDiskEncryptionSettingsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDiskEncryptionSettings) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// A `keyEncryptionKey` block as defined below.
func (o ManagedDiskEncryptionSettingsPtrOutput) KeyEncryptionKey() ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput {
	return o.ApplyT(func(v *ManagedDiskEncryptionSettings) *ManagedDiskEncryptionSettingsKeyEncryptionKey {
		if v == nil {
			return nil
		}
		return v.KeyEncryptionKey
	}).(ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput)
}

type ManagedDiskEncryptionSettingsDiskEncryptionKey struct {
	// The URL to the Key Vault Secret used as the Disk Encryption Key. This can be found as `id` on the `keyvault.Secret` resource.
	SecretUrl string `pulumi:"secretUrl"`
	// The ID of the source Key Vault.
	SourceVaultId string `pulumi:"sourceVaultId"`
}

// ManagedDiskEncryptionSettingsDiskEncryptionKeyInput is an input type that accepts ManagedDiskEncryptionSettingsDiskEncryptionKeyArgs and ManagedDiskEncryptionSettingsDiskEncryptionKeyOutput values.
// You can construct a concrete instance of `ManagedDiskEncryptionSettingsDiskEncryptionKeyInput` via:
//
// 		 ManagedDiskEncryptionSettingsDiskEncryptionKeyArgs{...}
//
type ManagedDiskEncryptionSettingsDiskEncryptionKeyInput interface {
	pulumi.Input

	ToManagedDiskEncryptionSettingsDiskEncryptionKeyOutput() ManagedDiskEncryptionSettingsDiskEncryptionKeyOutput
	ToManagedDiskEncryptionSettingsDiskEncryptionKeyOutputWithContext(context.Context) ManagedDiskEncryptionSettingsDiskEncryptionKeyOutput
}

type ManagedDiskEncryptionSettingsDiskEncryptionKeyArgs struct {
	// The URL to the Key Vault Secret used as the Disk Encryption Key. This can be found as `id` on the `keyvault.Secret` resource.
	SecretUrl pulumi.StringInput `pulumi:"secretUrl"`
	// The ID of the source Key Vault.
	SourceVaultId pulumi.StringInput `pulumi:"sourceVaultId"`
}

func (ManagedDiskEncryptionSettingsDiskEncryptionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDiskEncryptionSettingsDiskEncryptionKey)(nil)).Elem()
}

func (i ManagedDiskEncryptionSettingsDiskEncryptionKeyArgs) ToManagedDiskEncryptionSettingsDiskEncryptionKeyOutput() ManagedDiskEncryptionSettingsDiskEncryptionKeyOutput {
	return i.ToManagedDiskEncryptionSettingsDiskEncryptionKeyOutputWithContext(context.Background())
}

func (i ManagedDiskEncryptionSettingsDiskEncryptionKeyArgs) ToManagedDiskEncryptionSettingsDiskEncryptionKeyOutputWithContext(ctx context.Context) ManagedDiskEncryptionSettingsDiskEncryptionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDiskEncryptionSettingsDiskEncryptionKeyOutput)
}

func (i ManagedDiskEncryptionSettingsDiskEncryptionKeyArgs) ToManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput() ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput {
	return i.ToManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutputWithContext(context.Background())
}

func (i ManagedDiskEncryptionSettingsDiskEncryptionKeyArgs) ToManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutputWithContext(ctx context.Context) ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDiskEncryptionSettingsDiskEncryptionKeyOutput).ToManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutputWithContext(ctx)
}

// ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrInput is an input type that accepts ManagedDiskEncryptionSettingsDiskEncryptionKeyArgs, ManagedDiskEncryptionSettingsDiskEncryptionKeyPtr and ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput values.
// You can construct a concrete instance of `ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrInput` via:
//
// 		 ManagedDiskEncryptionSettingsDiskEncryptionKeyArgs{...}
//
//  or:
//
// 		 nil
//
type ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrInput interface {
	pulumi.Input

	ToManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput() ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput
	ToManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutputWithContext(context.Context) ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput
}

type managedDiskEncryptionSettingsDiskEncryptionKeyPtrType ManagedDiskEncryptionSettingsDiskEncryptionKeyArgs

func ManagedDiskEncryptionSettingsDiskEncryptionKeyPtr(v *ManagedDiskEncryptionSettingsDiskEncryptionKeyArgs) ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrInput {
	return (*managedDiskEncryptionSettingsDiskEncryptionKeyPtrType)(v)
}

func (*managedDiskEncryptionSettingsDiskEncryptionKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDiskEncryptionSettingsDiskEncryptionKey)(nil)).Elem()
}

func (i *managedDiskEncryptionSettingsDiskEncryptionKeyPtrType) ToManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput() ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput {
	return i.ToManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutputWithContext(context.Background())
}

func (i *managedDiskEncryptionSettingsDiskEncryptionKeyPtrType) ToManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutputWithContext(ctx context.Context) ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput)
}

type ManagedDiskEncryptionSettingsDiskEncryptionKeyOutput struct{ *pulumi.OutputState }

func (ManagedDiskEncryptionSettingsDiskEncryptionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDiskEncryptionSettingsDiskEncryptionKey)(nil)).Elem()
}

func (o ManagedDiskEncryptionSettingsDiskEncryptionKeyOutput) ToManagedDiskEncryptionSettingsDiskEncryptionKeyOutput() ManagedDiskEncryptionSettingsDiskEncryptionKeyOutput {
	return o
}

func (o ManagedDiskEncryptionSettingsDiskEncryptionKeyOutput) ToManagedDiskEncryptionSettingsDiskEncryptionKeyOutputWithContext(ctx context.Context) ManagedDiskEncryptionSettingsDiskEncryptionKeyOutput {
	return o
}

func (o ManagedDiskEncryptionSettingsDiskEncryptionKeyOutput) ToManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput() ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput {
	return o.ToManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutputWithContext(context.Background())
}

func (o ManagedDiskEncryptionSettingsDiskEncryptionKeyOutput) ToManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutputWithContext(ctx context.Context) ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput {
	return o.ApplyT(func(v ManagedDiskEncryptionSettingsDiskEncryptionKey) *ManagedDiskEncryptionSettingsDiskEncryptionKey {
		return &v
	}).(ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput)
}

// The URL to the Key Vault Secret used as the Disk Encryption Key. This can be found as `id` on the `keyvault.Secret` resource.
func (o ManagedDiskEncryptionSettingsDiskEncryptionKeyOutput) SecretUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDiskEncryptionSettingsDiskEncryptionKey) string { return v.SecretUrl }).(pulumi.StringOutput)
}

// The ID of the source Key Vault.
func (o ManagedDiskEncryptionSettingsDiskEncryptionKeyOutput) SourceVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDiskEncryptionSettingsDiskEncryptionKey) string { return v.SourceVaultId }).(pulumi.StringOutput)
}

type ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput struct{ *pulumi.OutputState }

func (ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDiskEncryptionSettingsDiskEncryptionKey)(nil)).Elem()
}

func (o ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput) ToManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput() ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput {
	return o
}

func (o ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput) ToManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutputWithContext(ctx context.Context) ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput {
	return o
}

func (o ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput) Elem() ManagedDiskEncryptionSettingsDiskEncryptionKeyOutput {
	return o.ApplyT(func(v *ManagedDiskEncryptionSettingsDiskEncryptionKey) ManagedDiskEncryptionSettingsDiskEncryptionKey {
		return *v
	}).(ManagedDiskEncryptionSettingsDiskEncryptionKeyOutput)
}

// The URL to the Key Vault Secret used as the Disk Encryption Key. This can be found as `id` on the `keyvault.Secret` resource.
func (o ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput) SecretUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDiskEncryptionSettingsDiskEncryptionKey) *string {
		if v == nil {
			return nil
		}
		return &v.SecretUrl
	}).(pulumi.StringPtrOutput)
}

// The ID of the source Key Vault.
func (o ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput) SourceVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDiskEncryptionSettingsDiskEncryptionKey) *string {
		if v == nil {
			return nil
		}
		return &v.SourceVaultId
	}).(pulumi.StringPtrOutput)
}

type ManagedDiskEncryptionSettingsKeyEncryptionKey struct {
	// The URL to the Key Vault Key used as the Key Encryption Key. This can be found as `id` on the `keyvault.Key` resource.
	KeyUrl string `pulumi:"keyUrl"`
	// The ID of the source Key Vault.
	SourceVaultId string `pulumi:"sourceVaultId"`
}

// ManagedDiskEncryptionSettingsKeyEncryptionKeyInput is an input type that accepts ManagedDiskEncryptionSettingsKeyEncryptionKeyArgs and ManagedDiskEncryptionSettingsKeyEncryptionKeyOutput values.
// You can construct a concrete instance of `ManagedDiskEncryptionSettingsKeyEncryptionKeyInput` via:
//
// 		 ManagedDiskEncryptionSettingsKeyEncryptionKeyArgs{...}
//
type ManagedDiskEncryptionSettingsKeyEncryptionKeyInput interface {
	pulumi.Input

	ToManagedDiskEncryptionSettingsKeyEncryptionKeyOutput() ManagedDiskEncryptionSettingsKeyEncryptionKeyOutput
	ToManagedDiskEncryptionSettingsKeyEncryptionKeyOutputWithContext(context.Context) ManagedDiskEncryptionSettingsKeyEncryptionKeyOutput
}

type ManagedDiskEncryptionSettingsKeyEncryptionKeyArgs struct {
	// The URL to the Key Vault Key used as the Key Encryption Key. This can be found as `id` on the `keyvault.Key` resource.
	KeyUrl pulumi.StringInput `pulumi:"keyUrl"`
	// The ID of the source Key Vault.
	SourceVaultId pulumi.StringInput `pulumi:"sourceVaultId"`
}

func (ManagedDiskEncryptionSettingsKeyEncryptionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDiskEncryptionSettingsKeyEncryptionKey)(nil)).Elem()
}

func (i ManagedDiskEncryptionSettingsKeyEncryptionKeyArgs) ToManagedDiskEncryptionSettingsKeyEncryptionKeyOutput() ManagedDiskEncryptionSettingsKeyEncryptionKeyOutput {
	return i.ToManagedDiskEncryptionSettingsKeyEncryptionKeyOutputWithContext(context.Background())
}

func (i ManagedDiskEncryptionSettingsKeyEncryptionKeyArgs) ToManagedDiskEncryptionSettingsKeyEncryptionKeyOutputWithContext(ctx context.Context) ManagedDiskEncryptionSettingsKeyEncryptionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDiskEncryptionSettingsKeyEncryptionKeyOutput)
}

func (i ManagedDiskEncryptionSettingsKeyEncryptionKeyArgs) ToManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput() ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput {
	return i.ToManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutputWithContext(context.Background())
}

func (i ManagedDiskEncryptionSettingsKeyEncryptionKeyArgs) ToManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutputWithContext(ctx context.Context) ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDiskEncryptionSettingsKeyEncryptionKeyOutput).ToManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutputWithContext(ctx)
}

// ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrInput is an input type that accepts ManagedDiskEncryptionSettingsKeyEncryptionKeyArgs, ManagedDiskEncryptionSettingsKeyEncryptionKeyPtr and ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput values.
// You can construct a concrete instance of `ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrInput` via:
//
// 		 ManagedDiskEncryptionSettingsKeyEncryptionKeyArgs{...}
//
//  or:
//
// 		 nil
//
type ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrInput interface {
	pulumi.Input

	ToManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput() ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput
	ToManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutputWithContext(context.Context) ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput
}

type managedDiskEncryptionSettingsKeyEncryptionKeyPtrType ManagedDiskEncryptionSettingsKeyEncryptionKeyArgs

func ManagedDiskEncryptionSettingsKeyEncryptionKeyPtr(v *ManagedDiskEncryptionSettingsKeyEncryptionKeyArgs) ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrInput {
	return (*managedDiskEncryptionSettingsKeyEncryptionKeyPtrType)(v)
}

func (*managedDiskEncryptionSettingsKeyEncryptionKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDiskEncryptionSettingsKeyEncryptionKey)(nil)).Elem()
}

func (i *managedDiskEncryptionSettingsKeyEncryptionKeyPtrType) ToManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput() ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput {
	return i.ToManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutputWithContext(context.Background())
}

func (i *managedDiskEncryptionSettingsKeyEncryptionKeyPtrType) ToManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutputWithContext(ctx context.Context) ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput)
}

type ManagedDiskEncryptionSettingsKeyEncryptionKeyOutput struct{ *pulumi.OutputState }

func (ManagedDiskEncryptionSettingsKeyEncryptionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDiskEncryptionSettingsKeyEncryptionKey)(nil)).Elem()
}

func (o ManagedDiskEncryptionSettingsKeyEncryptionKeyOutput) ToManagedDiskEncryptionSettingsKeyEncryptionKeyOutput() ManagedDiskEncryptionSettingsKeyEncryptionKeyOutput {
	return o
}

func (o ManagedDiskEncryptionSettingsKeyEncryptionKeyOutput) ToManagedDiskEncryptionSettingsKeyEncryptionKeyOutputWithContext(ctx context.Context) ManagedDiskEncryptionSettingsKeyEncryptionKeyOutput {
	return o
}

func (o ManagedDiskEncryptionSettingsKeyEncryptionKeyOutput) ToManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput() ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput {
	return o.ToManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutputWithContext(context.Background())
}

func (o ManagedDiskEncryptionSettingsKeyEncryptionKeyOutput) ToManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutputWithContext(ctx context.Context) ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput {
	return o.ApplyT(func(v ManagedDiskEncryptionSettingsKeyEncryptionKey) *ManagedDiskEncryptionSettingsKeyEncryptionKey {
		return &v
	}).(ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput)
}

// The URL to the Key Vault Key used as the Key Encryption Key. This can be found as `id` on the `keyvault.Key` resource.
func (o ManagedDiskEncryptionSettingsKeyEncryptionKeyOutput) KeyUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDiskEncryptionSettingsKeyEncryptionKey) string { return v.KeyUrl }).(pulumi.StringOutput)
}

// The ID of the source Key Vault.
func (o ManagedDiskEncryptionSettingsKeyEncryptionKeyOutput) SourceVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDiskEncryptionSettingsKeyEncryptionKey) string { return v.SourceVaultId }).(pulumi.StringOutput)
}

type ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput struct{ *pulumi.OutputState }

func (ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDiskEncryptionSettingsKeyEncryptionKey)(nil)).Elem()
}

func (o ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput) ToManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput() ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput {
	return o
}

func (o ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput) ToManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutputWithContext(ctx context.Context) ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput {
	return o
}

func (o ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput) Elem() ManagedDiskEncryptionSettingsKeyEncryptionKeyOutput {
	return o.ApplyT(func(v *ManagedDiskEncryptionSettingsKeyEncryptionKey) ManagedDiskEncryptionSettingsKeyEncryptionKey {
		return *v
	}).(ManagedDiskEncryptionSettingsKeyEncryptionKeyOutput)
}

// The URL to the Key Vault Key used as the Key Encryption Key. This can be found as `id` on the `keyvault.Key` resource.
func (o ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput) KeyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDiskEncryptionSettingsKeyEncryptionKey) *string {
		if v == nil {
			return nil
		}
		return &v.KeyUrl
	}).(pulumi.StringPtrOutput)
}

// The ID of the source Key Vault.
func (o ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput) SourceVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDiskEncryptionSettingsKeyEncryptionKey) *string {
		if v == nil {
			return nil
		}
		return &v.SourceVaultId
	}).(pulumi.StringPtrOutput)
}

type ScaleSetBootDiagnostics struct {
	Enabled    *bool  `pulumi:"enabled"`
	StorageUri string `pulumi:"storageUri"`
}

// ScaleSetBootDiagnosticsInput is an input type that accepts ScaleSetBootDiagnosticsArgs and ScaleSetBootDiagnosticsOutput values.
// You can construct a concrete instance of `ScaleSetBootDiagnosticsInput` via:
//
// 		 ScaleSetBootDiagnosticsArgs{...}
//
type ScaleSetBootDiagnosticsInput interface {
	pulumi.Input

	ToScaleSetBootDiagnosticsOutput() ScaleSetBootDiagnosticsOutput
	ToScaleSetBootDiagnosticsOutputWithContext(context.Context) ScaleSetBootDiagnosticsOutput
}

type ScaleSetBootDiagnosticsArgs struct {
	Enabled    pulumi.BoolPtrInput `pulumi:"enabled"`
	StorageUri pulumi.StringInput  `pulumi:"storageUri"`
}

func (ScaleSetBootDiagnosticsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetBootDiagnostics)(nil)).Elem()
}

func (i ScaleSetBootDiagnosticsArgs) ToScaleSetBootDiagnosticsOutput() ScaleSetBootDiagnosticsOutput {
	return i.ToScaleSetBootDiagnosticsOutputWithContext(context.Background())
}

func (i ScaleSetBootDiagnosticsArgs) ToScaleSetBootDiagnosticsOutputWithContext(ctx context.Context) ScaleSetBootDiagnosticsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetBootDiagnosticsOutput)
}

func (i ScaleSetBootDiagnosticsArgs) ToScaleSetBootDiagnosticsPtrOutput() ScaleSetBootDiagnosticsPtrOutput {
	return i.ToScaleSetBootDiagnosticsPtrOutputWithContext(context.Background())
}

func (i ScaleSetBootDiagnosticsArgs) ToScaleSetBootDiagnosticsPtrOutputWithContext(ctx context.Context) ScaleSetBootDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetBootDiagnosticsOutput).ToScaleSetBootDiagnosticsPtrOutputWithContext(ctx)
}

// ScaleSetBootDiagnosticsPtrInput is an input type that accepts ScaleSetBootDiagnosticsArgs, ScaleSetBootDiagnosticsPtr and ScaleSetBootDiagnosticsPtrOutput values.
// You can construct a concrete instance of `ScaleSetBootDiagnosticsPtrInput` via:
//
// 		 ScaleSetBootDiagnosticsArgs{...}
//
//  or:
//
// 		 nil
//
type ScaleSetBootDiagnosticsPtrInput interface {
	pulumi.Input

	ToScaleSetBootDiagnosticsPtrOutput() ScaleSetBootDiagnosticsPtrOutput
	ToScaleSetBootDiagnosticsPtrOutputWithContext(context.Context) ScaleSetBootDiagnosticsPtrOutput
}

type scaleSetBootDiagnosticsPtrType ScaleSetBootDiagnosticsArgs

func ScaleSetBootDiagnosticsPtr(v *ScaleSetBootDiagnosticsArgs) ScaleSetBootDiagnosticsPtrInput {
	return (*scaleSetBootDiagnosticsPtrType)(v)
}

func (*scaleSetBootDiagnosticsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSetBootDiagnostics)(nil)).Elem()
}

func (i *scaleSetBootDiagnosticsPtrType) ToScaleSetBootDiagnosticsPtrOutput() ScaleSetBootDiagnosticsPtrOutput {
	return i.ToScaleSetBootDiagnosticsPtrOutputWithContext(context.Background())
}

func (i *scaleSetBootDiagnosticsPtrType) ToScaleSetBootDiagnosticsPtrOutputWithContext(ctx context.Context) ScaleSetBootDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetBootDiagnosticsPtrOutput)
}

type ScaleSetBootDiagnosticsOutput struct{ *pulumi.OutputState }

func (ScaleSetBootDiagnosticsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetBootDiagnostics)(nil)).Elem()
}

func (o ScaleSetBootDiagnosticsOutput) ToScaleSetBootDiagnosticsOutput() ScaleSetBootDiagnosticsOutput {
	return o
}

func (o ScaleSetBootDiagnosticsOutput) ToScaleSetBootDiagnosticsOutputWithContext(ctx context.Context) ScaleSetBootDiagnosticsOutput {
	return o
}

func (o ScaleSetBootDiagnosticsOutput) ToScaleSetBootDiagnosticsPtrOutput() ScaleSetBootDiagnosticsPtrOutput {
	return o.ToScaleSetBootDiagnosticsPtrOutputWithContext(context.Background())
}

func (o ScaleSetBootDiagnosticsOutput) ToScaleSetBootDiagnosticsPtrOutputWithContext(ctx context.Context) ScaleSetBootDiagnosticsPtrOutput {
	return o.ApplyT(func(v ScaleSetBootDiagnostics) *ScaleSetBootDiagnostics {
		return &v
	}).(ScaleSetBootDiagnosticsPtrOutput)
}
func (o ScaleSetBootDiagnosticsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScaleSetBootDiagnostics) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o ScaleSetBootDiagnosticsOutput) StorageUri() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleSetBootDiagnostics) string { return v.StorageUri }).(pulumi.StringOutput)
}

type ScaleSetBootDiagnosticsPtrOutput struct{ *pulumi.OutputState }

func (ScaleSetBootDiagnosticsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSetBootDiagnostics)(nil)).Elem()
}

func (o ScaleSetBootDiagnosticsPtrOutput) ToScaleSetBootDiagnosticsPtrOutput() ScaleSetBootDiagnosticsPtrOutput {
	return o
}

func (o ScaleSetBootDiagnosticsPtrOutput) ToScaleSetBootDiagnosticsPtrOutputWithContext(ctx context.Context) ScaleSetBootDiagnosticsPtrOutput {
	return o
}

func (o ScaleSetBootDiagnosticsPtrOutput) Elem() ScaleSetBootDiagnosticsOutput {
	return o.ApplyT(func(v *ScaleSetBootDiagnostics) ScaleSetBootDiagnostics { return *v }).(ScaleSetBootDiagnosticsOutput)
}

func (o ScaleSetBootDiagnosticsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScaleSetBootDiagnostics) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o ScaleSetBootDiagnosticsPtrOutput) StorageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSetBootDiagnostics) *string {
		if v == nil {
			return nil
		}
		return &v.StorageUri
	}).(pulumi.StringPtrOutput)
}

type ScaleSetExtension struct {
	// Specifies whether or not to use the latest minor version available.
	AutoUpgradeMinorVersion *bool `pulumi:"autoUpgradeMinorVersion"`
	// Specifies the name of the extension.
	Name string `pulumi:"name"`
	// The protectedSettings passed to the extension, like settings, these are specified as a JSON object in a string.
	ProtectedSettings *string `pulumi:"protectedSettings"`
	// Specifies a dependency array of extensions required to be executed before, the array stores the name of each extension.
	ProvisionAfterExtensions []string `pulumi:"provisionAfterExtensions"`
	// The publisher of the extension, available publishers can be found by using the Azure CLI.
	Publisher string `pulumi:"publisher"`
	// The settings passed to the extension, these are specified as a JSON object in a string.
	Settings *string `pulumi:"settings"`
	// The type of extension, available types for a publisher can be found using the Azure CLI.
	Type string `pulumi:"type"`
	// Specifies the version of the extension to use, available versions can be found using the Azure CLI.
	TypeHandlerVersion string `pulumi:"typeHandlerVersion"`
}

// ScaleSetExtensionInput is an input type that accepts ScaleSetExtensionArgs and ScaleSetExtensionOutput values.
// You can construct a concrete instance of `ScaleSetExtensionInput` via:
//
// 		 ScaleSetExtensionArgs{...}
//
type ScaleSetExtensionInput interface {
	pulumi.Input

	ToScaleSetExtensionOutput() ScaleSetExtensionOutput
	ToScaleSetExtensionOutputWithContext(context.Context) ScaleSetExtensionOutput
}

type ScaleSetExtensionArgs struct {
	// Specifies whether or not to use the latest minor version available.
	AutoUpgradeMinorVersion pulumi.BoolPtrInput `pulumi:"autoUpgradeMinorVersion"`
	// Specifies the name of the extension.
	Name pulumi.StringInput `pulumi:"name"`
	// The protectedSettings passed to the extension, like settings, these are specified as a JSON object in a string.
	ProtectedSettings pulumi.StringPtrInput `pulumi:"protectedSettings"`
	// Specifies a dependency array of extensions required to be executed before, the array stores the name of each extension.
	ProvisionAfterExtensions pulumi.StringArrayInput `pulumi:"provisionAfterExtensions"`
	// The publisher of the extension, available publishers can be found by using the Azure CLI.
	Publisher pulumi.StringInput `pulumi:"publisher"`
	// The settings passed to the extension, these are specified as a JSON object in a string.
	Settings pulumi.StringPtrInput `pulumi:"settings"`
	// The type of extension, available types for a publisher can be found using the Azure CLI.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies the version of the extension to use, available versions can be found using the Azure CLI.
	TypeHandlerVersion pulumi.StringInput `pulumi:"typeHandlerVersion"`
}

func (ScaleSetExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetExtension)(nil)).Elem()
}

func (i ScaleSetExtensionArgs) ToScaleSetExtensionOutput() ScaleSetExtensionOutput {
	return i.ToScaleSetExtensionOutputWithContext(context.Background())
}

func (i ScaleSetExtensionArgs) ToScaleSetExtensionOutputWithContext(ctx context.Context) ScaleSetExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetExtensionOutput)
}

// ScaleSetExtensionArrayInput is an input type that accepts ScaleSetExtensionArray and ScaleSetExtensionArrayOutput values.
// You can construct a concrete instance of `ScaleSetExtensionArrayInput` via:
//
// 		 ScaleSetExtensionArray{ ScaleSetExtensionArgs{...} }
//
type ScaleSetExtensionArrayInput interface {
	pulumi.Input

	ToScaleSetExtensionArrayOutput() ScaleSetExtensionArrayOutput
	ToScaleSetExtensionArrayOutputWithContext(context.Context) ScaleSetExtensionArrayOutput
}

type ScaleSetExtensionArray []ScaleSetExtensionInput

func (ScaleSetExtensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleSetExtension)(nil)).Elem()
}

func (i ScaleSetExtensionArray) ToScaleSetExtensionArrayOutput() ScaleSetExtensionArrayOutput {
	return i.ToScaleSetExtensionArrayOutputWithContext(context.Background())
}

func (i ScaleSetExtensionArray) ToScaleSetExtensionArrayOutputWithContext(ctx context.Context) ScaleSetExtensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetExtensionArrayOutput)
}

type ScaleSetExtensionOutput struct{ *pulumi.OutputState }

func (ScaleSetExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetExtension)(nil)).Elem()
}

func (o ScaleSetExtensionOutput) ToScaleSetExtensionOutput() ScaleSetExtensionOutput {
	return o
}

func (o ScaleSetExtensionOutput) ToScaleSetExtensionOutputWithContext(ctx context.Context) ScaleSetExtensionOutput {
	return o
}

// Specifies whether or not to use the latest minor version available.
func (o ScaleSetExtensionOutput) AutoUpgradeMinorVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScaleSetExtension) *bool { return v.AutoUpgradeMinorVersion }).(pulumi.BoolPtrOutput)
}

// Specifies the name of the extension.
func (o ScaleSetExtensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleSetExtension) string { return v.Name }).(pulumi.StringOutput)
}

// The protectedSettings passed to the extension, like settings, these are specified as a JSON object in a string.
func (o ScaleSetExtensionOutput) ProtectedSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSetExtension) *string { return v.ProtectedSettings }).(pulumi.StringPtrOutput)
}

// Specifies a dependency array of extensions required to be executed before, the array stores the name of each extension.
func (o ScaleSetExtensionOutput) ProvisionAfterExtensions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScaleSetExtension) []string { return v.ProvisionAfterExtensions }).(pulumi.StringArrayOutput)
}

// The publisher of the extension, available publishers can be found by using the Azure CLI.
func (o ScaleSetExtensionOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleSetExtension) string { return v.Publisher }).(pulumi.StringOutput)
}

// The settings passed to the extension, these are specified as a JSON object in a string.
func (o ScaleSetExtensionOutput) Settings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSetExtension) *string { return v.Settings }).(pulumi.StringPtrOutput)
}

// The type of extension, available types for a publisher can be found using the Azure CLI.
func (o ScaleSetExtensionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleSetExtension) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies the version of the extension to use, available versions can be found using the Azure CLI.
func (o ScaleSetExtensionOutput) TypeHandlerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleSetExtension) string { return v.TypeHandlerVersion }).(pulumi.StringOutput)
}

type ScaleSetExtensionArrayOutput struct{ *pulumi.OutputState }

func (ScaleSetExtensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleSetExtension)(nil)).Elem()
}

func (o ScaleSetExtensionArrayOutput) ToScaleSetExtensionArrayOutput() ScaleSetExtensionArrayOutput {
	return o
}

func (o ScaleSetExtensionArrayOutput) ToScaleSetExtensionArrayOutputWithContext(ctx context.Context) ScaleSetExtensionArrayOutput {
	return o
}

func (o ScaleSetExtensionArrayOutput) Index(i pulumi.IntInput) ScaleSetExtensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScaleSetExtension {
		return vs[0].([]ScaleSetExtension)[vs[1].(int)]
	}).(ScaleSetExtensionOutput)
}

type ScaleSetIdentity struct {
	// Specifies a list of user managed identity ids to be assigned to the VMSS. Required if `type` is `UserAssigned`.
	IdentityIds []string `pulumi:"identityIds"`
	PrincipalId *string  `pulumi:"principalId"`
	// Specifies the identity type to be assigned to the scale set. Allowable values are `SystemAssigned` and `UserAssigned`. For the `SystemAssigned` identity the scale set's Service Principal ID (SPN) can be retrieved after the scale set has been created. See [documentation](https://docs.microsoft.com/en-us/azure/active-directory/managed-service-identity/overview) for more information.
	Type string `pulumi:"type"`
}

// ScaleSetIdentityInput is an input type that accepts ScaleSetIdentityArgs and ScaleSetIdentityOutput values.
// You can construct a concrete instance of `ScaleSetIdentityInput` via:
//
// 		 ScaleSetIdentityArgs{...}
//
type ScaleSetIdentityInput interface {
	pulumi.Input

	ToScaleSetIdentityOutput() ScaleSetIdentityOutput
	ToScaleSetIdentityOutputWithContext(context.Context) ScaleSetIdentityOutput
}

type ScaleSetIdentityArgs struct {
	// Specifies a list of user managed identity ids to be assigned to the VMSS. Required if `type` is `UserAssigned`.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	PrincipalId pulumi.StringPtrInput   `pulumi:"principalId"`
	// Specifies the identity type to be assigned to the scale set. Allowable values are `SystemAssigned` and `UserAssigned`. For the `SystemAssigned` identity the scale set's Service Principal ID (SPN) can be retrieved after the scale set has been created. See [documentation](https://docs.microsoft.com/en-us/azure/active-directory/managed-service-identity/overview) for more information.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ScaleSetIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetIdentity)(nil)).Elem()
}

func (i ScaleSetIdentityArgs) ToScaleSetIdentityOutput() ScaleSetIdentityOutput {
	return i.ToScaleSetIdentityOutputWithContext(context.Background())
}

func (i ScaleSetIdentityArgs) ToScaleSetIdentityOutputWithContext(ctx context.Context) ScaleSetIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetIdentityOutput)
}

func (i ScaleSetIdentityArgs) ToScaleSetIdentityPtrOutput() ScaleSetIdentityPtrOutput {
	return i.ToScaleSetIdentityPtrOutputWithContext(context.Background())
}

func (i ScaleSetIdentityArgs) ToScaleSetIdentityPtrOutputWithContext(ctx context.Context) ScaleSetIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetIdentityOutput).ToScaleSetIdentityPtrOutputWithContext(ctx)
}

// ScaleSetIdentityPtrInput is an input type that accepts ScaleSetIdentityArgs, ScaleSetIdentityPtr and ScaleSetIdentityPtrOutput values.
// You can construct a concrete instance of `ScaleSetIdentityPtrInput` via:
//
// 		 ScaleSetIdentityArgs{...}
//
//  or:
//
// 		 nil
//
type ScaleSetIdentityPtrInput interface {
	pulumi.Input

	ToScaleSetIdentityPtrOutput() ScaleSetIdentityPtrOutput
	ToScaleSetIdentityPtrOutputWithContext(context.Context) ScaleSetIdentityPtrOutput
}

type scaleSetIdentityPtrType ScaleSetIdentityArgs

func ScaleSetIdentityPtr(v *ScaleSetIdentityArgs) ScaleSetIdentityPtrInput {
	return (*scaleSetIdentityPtrType)(v)
}

func (*scaleSetIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSetIdentity)(nil)).Elem()
}

func (i *scaleSetIdentityPtrType) ToScaleSetIdentityPtrOutput() ScaleSetIdentityPtrOutput {
	return i.ToScaleSetIdentityPtrOutputWithContext(context.Background())
}

func (i *scaleSetIdentityPtrType) ToScaleSetIdentityPtrOutputWithContext(ctx context.Context) ScaleSetIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetIdentityPtrOutput)
}

type ScaleSetIdentityOutput struct{ *pulumi.OutputState }

func (ScaleSetIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetIdentity)(nil)).Elem()
}

func (o ScaleSetIdentityOutput) ToScaleSetIdentityOutput() ScaleSetIdentityOutput {
	return o
}

func (o ScaleSetIdentityOutput) ToScaleSetIdentityOutputWithContext(ctx context.Context) ScaleSetIdentityOutput {
	return o
}

func (o ScaleSetIdentityOutput) ToScaleSetIdentityPtrOutput() ScaleSetIdentityPtrOutput {
	return o.ToScaleSetIdentityPtrOutputWithContext(context.Background())
}

func (o ScaleSetIdentityOutput) ToScaleSetIdentityPtrOutputWithContext(ctx context.Context) ScaleSetIdentityPtrOutput {
	return o.ApplyT(func(v ScaleSetIdentity) *ScaleSetIdentity {
		return &v
	}).(ScaleSetIdentityPtrOutput)
}

// Specifies a list of user managed identity ids to be assigned to the VMSS. Required if `type` is `UserAssigned`.
func (o ScaleSetIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScaleSetIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

func (o ScaleSetIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSetIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// Specifies the identity type to be assigned to the scale set. Allowable values are `SystemAssigned` and `UserAssigned`. For the `SystemAssigned` identity the scale set's Service Principal ID (SPN) can be retrieved after the scale set has been created. See [documentation](https://docs.microsoft.com/en-us/azure/active-directory/managed-service-identity/overview) for more information.
func (o ScaleSetIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleSetIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type ScaleSetIdentityPtrOutput struct{ *pulumi.OutputState }

func (ScaleSetIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSetIdentity)(nil)).Elem()
}

func (o ScaleSetIdentityPtrOutput) ToScaleSetIdentityPtrOutput() ScaleSetIdentityPtrOutput {
	return o
}

func (o ScaleSetIdentityPtrOutput) ToScaleSetIdentityPtrOutputWithContext(ctx context.Context) ScaleSetIdentityPtrOutput {
	return o
}

func (o ScaleSetIdentityPtrOutput) Elem() ScaleSetIdentityOutput {
	return o.ApplyT(func(v *ScaleSetIdentity) ScaleSetIdentity { return *v }).(ScaleSetIdentityOutput)
}

// Specifies a list of user managed identity ids to be assigned to the VMSS. Required if `type` is `UserAssigned`.
func (o ScaleSetIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScaleSetIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

func (o ScaleSetIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSetIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// Specifies the identity type to be assigned to the scale set. Allowable values are `SystemAssigned` and `UserAssigned`. For the `SystemAssigned` identity the scale set's Service Principal ID (SPN) can be retrieved after the scale set has been created. See [documentation](https://docs.microsoft.com/en-us/azure/active-directory/managed-service-identity/overview) for more information.
func (o ScaleSetIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSetIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ScaleSetNetworkProfile struct {
	// Specifies whether to enable accelerated networking or not. Defaults to `false`.
	AcceleratedNetworking *bool `pulumi:"acceleratedNetworking"`
	// A dnsSettings block as documented below.
	DnsSettings *ScaleSetNetworkProfileDnsSettings `pulumi:"dnsSettings"`
	// An ipConfiguration block as documented below.
	IpConfigurations []ScaleSetNetworkProfileIpConfiguration `pulumi:"ipConfigurations"`
	// Whether IP forwarding is enabled on this NIC. Defaults to `false`.
	IpForwarding *bool `pulumi:"ipForwarding"`
	// Specifies the name of the network interface configuration.
	Name string `pulumi:"name"`
	// Specifies the identifier for the network security group.
	NetworkSecurityGroupId *string `pulumi:"networkSecurityGroupId"`
	// Indicates whether network interfaces created from the network interface configuration will be the primary NIC of the VM.
	Primary bool `pulumi:"primary"`
}

// ScaleSetNetworkProfileInput is an input type that accepts ScaleSetNetworkProfileArgs and ScaleSetNetworkProfileOutput values.
// You can construct a concrete instance of `ScaleSetNetworkProfileInput` via:
//
// 		 ScaleSetNetworkProfileArgs{...}
//
type ScaleSetNetworkProfileInput interface {
	pulumi.Input

	ToScaleSetNetworkProfileOutput() ScaleSetNetworkProfileOutput
	ToScaleSetNetworkProfileOutputWithContext(context.Context) ScaleSetNetworkProfileOutput
}

type ScaleSetNetworkProfileArgs struct {
	// Specifies whether to enable accelerated networking or not. Defaults to `false`.
	AcceleratedNetworking pulumi.BoolPtrInput `pulumi:"acceleratedNetworking"`
	// A dnsSettings block as documented below.
	DnsSettings ScaleSetNetworkProfileDnsSettingsPtrInput `pulumi:"dnsSettings"`
	// An ipConfiguration block as documented below.
	IpConfigurations ScaleSetNetworkProfileIpConfigurationArrayInput `pulumi:"ipConfigurations"`
	// Whether IP forwarding is enabled on this NIC. Defaults to `false`.
	IpForwarding pulumi.BoolPtrInput `pulumi:"ipForwarding"`
	// Specifies the name of the network interface configuration.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the identifier for the network security group.
	NetworkSecurityGroupId pulumi.StringPtrInput `pulumi:"networkSecurityGroupId"`
	// Indicates whether network interfaces created from the network interface configuration will be the primary NIC of the VM.
	Primary pulumi.BoolInput `pulumi:"primary"`
}

func (ScaleSetNetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetNetworkProfile)(nil)).Elem()
}

func (i ScaleSetNetworkProfileArgs) ToScaleSetNetworkProfileOutput() ScaleSetNetworkProfileOutput {
	return i.ToScaleSetNetworkProfileOutputWithContext(context.Background())
}

func (i ScaleSetNetworkProfileArgs) ToScaleSetNetworkProfileOutputWithContext(ctx context.Context) ScaleSetNetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetNetworkProfileOutput)
}

// ScaleSetNetworkProfileArrayInput is an input type that accepts ScaleSetNetworkProfileArray and ScaleSetNetworkProfileArrayOutput values.
// You can construct a concrete instance of `ScaleSetNetworkProfileArrayInput` via:
//
// 		 ScaleSetNetworkProfileArray{ ScaleSetNetworkProfileArgs{...} }
//
type ScaleSetNetworkProfileArrayInput interface {
	pulumi.Input

	ToScaleSetNetworkProfileArrayOutput() ScaleSetNetworkProfileArrayOutput
	ToScaleSetNetworkProfileArrayOutputWithContext(context.Context) ScaleSetNetworkProfileArrayOutput
}

type ScaleSetNetworkProfileArray []ScaleSetNetworkProfileInput

func (ScaleSetNetworkProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleSetNetworkProfile)(nil)).Elem()
}

func (i ScaleSetNetworkProfileArray) ToScaleSetNetworkProfileArrayOutput() ScaleSetNetworkProfileArrayOutput {
	return i.ToScaleSetNetworkProfileArrayOutputWithContext(context.Background())
}

func (i ScaleSetNetworkProfileArray) ToScaleSetNetworkProfileArrayOutputWithContext(ctx context.Context) ScaleSetNetworkProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetNetworkProfileArrayOutput)
}

type ScaleSetNetworkProfileOutput struct{ *pulumi.OutputState }

func (ScaleSetNetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetNetworkProfile)(nil)).Elem()
}

func (o ScaleSetNetworkProfileOutput) ToScaleSetNetworkProfileOutput() ScaleSetNetworkProfileOutput {
	return o
}

func (o ScaleSetNetworkProfileOutput) ToScaleSetNetworkProfileOutputWithContext(ctx context.Context) ScaleSetNetworkProfileOutput {
	return o
}

// Specifies whether to enable accelerated networking or not. Defaults to `false`.
func (o ScaleSetNetworkProfileOutput) AcceleratedNetworking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScaleSetNetworkProfile) *bool { return v.AcceleratedNetworking }).(pulumi.BoolPtrOutput)
}

// A dnsSettings block as documented below.
func (o ScaleSetNetworkProfileOutput) DnsSettings() ScaleSetNetworkProfileDnsSettingsPtrOutput {
	return o.ApplyT(func(v ScaleSetNetworkProfile) *ScaleSetNetworkProfileDnsSettings { return v.DnsSettings }).(ScaleSetNetworkProfileDnsSettingsPtrOutput)
}

// An ipConfiguration block as documented below.
func (o ScaleSetNetworkProfileOutput) IpConfigurations() ScaleSetNetworkProfileIpConfigurationArrayOutput {
	return o.ApplyT(func(v ScaleSetNetworkProfile) []ScaleSetNetworkProfileIpConfiguration { return v.IpConfigurations }).(ScaleSetNetworkProfileIpConfigurationArrayOutput)
}

// Whether IP forwarding is enabled on this NIC. Defaults to `false`.
func (o ScaleSetNetworkProfileOutput) IpForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScaleSetNetworkProfile) *bool { return v.IpForwarding }).(pulumi.BoolPtrOutput)
}

// Specifies the name of the network interface configuration.
func (o ScaleSetNetworkProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleSetNetworkProfile) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the identifier for the network security group.
func (o ScaleSetNetworkProfileOutput) NetworkSecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSetNetworkProfile) *string { return v.NetworkSecurityGroupId }).(pulumi.StringPtrOutput)
}

// Indicates whether network interfaces created from the network interface configuration will be the primary NIC of the VM.
func (o ScaleSetNetworkProfileOutput) Primary() pulumi.BoolOutput {
	return o.ApplyT(func(v ScaleSetNetworkProfile) bool { return v.Primary }).(pulumi.BoolOutput)
}

type ScaleSetNetworkProfileArrayOutput struct{ *pulumi.OutputState }

func (ScaleSetNetworkProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleSetNetworkProfile)(nil)).Elem()
}

func (o ScaleSetNetworkProfileArrayOutput) ToScaleSetNetworkProfileArrayOutput() ScaleSetNetworkProfileArrayOutput {
	return o
}

func (o ScaleSetNetworkProfileArrayOutput) ToScaleSetNetworkProfileArrayOutputWithContext(ctx context.Context) ScaleSetNetworkProfileArrayOutput {
	return o
}

func (o ScaleSetNetworkProfileArrayOutput) Index(i pulumi.IntInput) ScaleSetNetworkProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScaleSetNetworkProfile {
		return vs[0].([]ScaleSetNetworkProfile)[vs[1].(int)]
	}).(ScaleSetNetworkProfileOutput)
}

type ScaleSetNetworkProfileDnsSettings struct {
	// Specifies an array of dns servers.
	DnsServers []string `pulumi:"dnsServers"`
}

// ScaleSetNetworkProfileDnsSettingsInput is an input type that accepts ScaleSetNetworkProfileDnsSettingsArgs and ScaleSetNetworkProfileDnsSettingsOutput values.
// You can construct a concrete instance of `ScaleSetNetworkProfileDnsSettingsInput` via:
//
// 		 ScaleSetNetworkProfileDnsSettingsArgs{...}
//
type ScaleSetNetworkProfileDnsSettingsInput interface {
	pulumi.Input

	ToScaleSetNetworkProfileDnsSettingsOutput() ScaleSetNetworkProfileDnsSettingsOutput
	ToScaleSetNetworkProfileDnsSettingsOutputWithContext(context.Context) ScaleSetNetworkProfileDnsSettingsOutput
}

type ScaleSetNetworkProfileDnsSettingsArgs struct {
	// Specifies an array of dns servers.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
}

func (ScaleSetNetworkProfileDnsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetNetworkProfileDnsSettings)(nil)).Elem()
}

func (i ScaleSetNetworkProfileDnsSettingsArgs) ToScaleSetNetworkProfileDnsSettingsOutput() ScaleSetNetworkProfileDnsSettingsOutput {
	return i.ToScaleSetNetworkProfileDnsSettingsOutputWithContext(context.Background())
}

func (i ScaleSetNetworkProfileDnsSettingsArgs) ToScaleSetNetworkProfileDnsSettingsOutputWithContext(ctx context.Context) ScaleSetNetworkProfileDnsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetNetworkProfileDnsSettingsOutput)
}

func (i ScaleSetNetworkProfileDnsSettingsArgs) ToScaleSetNetworkProfileDnsSettingsPtrOutput() ScaleSetNetworkProfileDnsSettingsPtrOutput {
	return i.ToScaleSetNetworkProfileDnsSettingsPtrOutputWithContext(context.Background())
}

func (i ScaleSetNetworkProfileDnsSettingsArgs) ToScaleSetNetworkProfileDnsSettingsPtrOutputWithContext(ctx context.Context) ScaleSetNetworkProfileDnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetNetworkProfileDnsSettingsOutput).ToScaleSetNetworkProfileDnsSettingsPtrOutputWithContext(ctx)
}

// ScaleSetNetworkProfileDnsSettingsPtrInput is an input type that accepts ScaleSetNetworkProfileDnsSettingsArgs, ScaleSetNetworkProfileDnsSettingsPtr and ScaleSetNetworkProfileDnsSettingsPtrOutput values.
// You can construct a concrete instance of `ScaleSetNetworkProfileDnsSettingsPtrInput` via:
//
// 		 ScaleSetNetworkProfileDnsSettingsArgs{...}
//
//  or:
//
// 		 nil
//
type ScaleSetNetworkProfileDnsSettingsPtrInput interface {
	pulumi.Input

	ToScaleSetNetworkProfileDnsSettingsPtrOutput() ScaleSetNetworkProfileDnsSettingsPtrOutput
	ToScaleSetNetworkProfileDnsSettingsPtrOutputWithContext(context.Context) ScaleSetNetworkProfileDnsSettingsPtrOutput
}

type scaleSetNetworkProfileDnsSettingsPtrType ScaleSetNetworkProfileDnsSettingsArgs

func ScaleSetNetworkProfileDnsSettingsPtr(v *ScaleSetNetworkProfileDnsSettingsArgs) ScaleSetNetworkProfileDnsSettingsPtrInput {
	return (*scaleSetNetworkProfileDnsSettingsPtrType)(v)
}

func (*scaleSetNetworkProfileDnsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSetNetworkProfileDnsSettings)(nil)).Elem()
}

func (i *scaleSetNetworkProfileDnsSettingsPtrType) ToScaleSetNetworkProfileDnsSettingsPtrOutput() ScaleSetNetworkProfileDnsSettingsPtrOutput {
	return i.ToScaleSetNetworkProfileDnsSettingsPtrOutputWithContext(context.Background())
}

func (i *scaleSetNetworkProfileDnsSettingsPtrType) ToScaleSetNetworkProfileDnsSettingsPtrOutputWithContext(ctx context.Context) ScaleSetNetworkProfileDnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetNetworkProfileDnsSettingsPtrOutput)
}

type ScaleSetNetworkProfileDnsSettingsOutput struct{ *pulumi.OutputState }

func (ScaleSetNetworkProfileDnsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetNetworkProfileDnsSettings)(nil)).Elem()
}

func (o ScaleSetNetworkProfileDnsSettingsOutput) ToScaleSetNetworkProfileDnsSettingsOutput() ScaleSetNetworkProfileDnsSettingsOutput {
	return o
}

func (o ScaleSetNetworkProfileDnsSettingsOutput) ToScaleSetNetworkProfileDnsSettingsOutputWithContext(ctx context.Context) ScaleSetNetworkProfileDnsSettingsOutput {
	return o
}

func (o ScaleSetNetworkProfileDnsSettingsOutput) ToScaleSetNetworkProfileDnsSettingsPtrOutput() ScaleSetNetworkProfileDnsSettingsPtrOutput {
	return o.ToScaleSetNetworkProfileDnsSettingsPtrOutputWithContext(context.Background())
}

func (o ScaleSetNetworkProfileDnsSettingsOutput) ToScaleSetNetworkProfileDnsSettingsPtrOutputWithContext(ctx context.Context) ScaleSetNetworkProfileDnsSettingsPtrOutput {
	return o.ApplyT(func(v ScaleSetNetworkProfileDnsSettings) *ScaleSetNetworkProfileDnsSettings {
		return &v
	}).(ScaleSetNetworkProfileDnsSettingsPtrOutput)
}

// Specifies an array of dns servers.
func (o ScaleSetNetworkProfileDnsSettingsOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScaleSetNetworkProfileDnsSettings) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

type ScaleSetNetworkProfileDnsSettingsPtrOutput struct{ *pulumi.OutputState }

func (ScaleSetNetworkProfileDnsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSetNetworkProfileDnsSettings)(nil)).Elem()
}

func (o ScaleSetNetworkProfileDnsSettingsPtrOutput) ToScaleSetNetworkProfileDnsSettingsPtrOutput() ScaleSetNetworkProfileDnsSettingsPtrOutput {
	return o
}

func (o ScaleSetNetworkProfileDnsSettingsPtrOutput) ToScaleSetNetworkProfileDnsSettingsPtrOutputWithContext(ctx context.Context) ScaleSetNetworkProfileDnsSettingsPtrOutput {
	return o
}

func (o ScaleSetNetworkProfileDnsSettingsPtrOutput) Elem() ScaleSetNetworkProfileDnsSettingsOutput {
	return o.ApplyT(func(v *ScaleSetNetworkProfileDnsSettings) ScaleSetNetworkProfileDnsSettings { return *v }).(ScaleSetNetworkProfileDnsSettingsOutput)
}

// Specifies an array of dns servers.
func (o ScaleSetNetworkProfileDnsSettingsPtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScaleSetNetworkProfileDnsSettings) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

type ScaleSetNetworkProfileIpConfiguration struct {
	// Specifies an array of references to backend address pools of application gateways. A scale set can reference backend address pools of multiple application gateways. Multiple scale sets can use the same application gateway.
	ApplicationGatewayBackendAddressPoolIds []string `pulumi:"applicationGatewayBackendAddressPoolIds"`
	// Specifies up to `20` application security group IDs.
	ApplicationSecurityGroupIds []string `pulumi:"applicationSecurityGroupIds"`
	// Specifies an array of references to backend address pools of load balancers. A scale set can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the same load balancer.
	LoadBalancerBackendAddressPoolIds []string `pulumi:"loadBalancerBackendAddressPoolIds"`
	// Specifies an array of references to inbound NAT pools for load balancers. A scale set can reference inbound nat pools of one public and one internal load balancer. Multiple scale sets cannot use the same load balancer.
	LoadBalancerInboundNatRulesIds []string `pulumi:"loadBalancerInboundNatRulesIds"`
	// Specifies name of the IP configuration.
	Name string `pulumi:"name"`
	// Specifies if this ipConfiguration is the primary one.
	Primary bool `pulumi:"primary"`
	// Describes a virtual machines scale set IP Configuration's PublicIPAddress configuration. The publicIpAddressConfiguration is documented below.
	PublicIpAddressConfiguration *ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfiguration `pulumi:"publicIpAddressConfiguration"`
	// Specifies the identifier of the subnet.
	SubnetId string `pulumi:"subnetId"`
}

// ScaleSetNetworkProfileIpConfigurationInput is an input type that accepts ScaleSetNetworkProfileIpConfigurationArgs and ScaleSetNetworkProfileIpConfigurationOutput values.
// You can construct a concrete instance of `ScaleSetNetworkProfileIpConfigurationInput` via:
//
// 		 ScaleSetNetworkProfileIpConfigurationArgs{...}
//
type ScaleSetNetworkProfileIpConfigurationInput interface {
	pulumi.Input

	ToScaleSetNetworkProfileIpConfigurationOutput() ScaleSetNetworkProfileIpConfigurationOutput
	ToScaleSetNetworkProfileIpConfigurationOutputWithContext(context.Context) ScaleSetNetworkProfileIpConfigurationOutput
}

type ScaleSetNetworkProfileIpConfigurationArgs struct {
	// Specifies an array of references to backend address pools of application gateways. A scale set can reference backend address pools of multiple application gateways. Multiple scale sets can use the same application gateway.
	ApplicationGatewayBackendAddressPoolIds pulumi.StringArrayInput `pulumi:"applicationGatewayBackendAddressPoolIds"`
	// Specifies up to `20` application security group IDs.
	ApplicationSecurityGroupIds pulumi.StringArrayInput `pulumi:"applicationSecurityGroupIds"`
	// Specifies an array of references to backend address pools of load balancers. A scale set can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the same load balancer.
	LoadBalancerBackendAddressPoolIds pulumi.StringArrayInput `pulumi:"loadBalancerBackendAddressPoolIds"`
	// Specifies an array of references to inbound NAT pools for load balancers. A scale set can reference inbound nat pools of one public and one internal load balancer. Multiple scale sets cannot use the same load balancer.
	LoadBalancerInboundNatRulesIds pulumi.StringArrayInput `pulumi:"loadBalancerInboundNatRulesIds"`
	// Specifies name of the IP configuration.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies if this ipConfiguration is the primary one.
	Primary pulumi.BoolInput `pulumi:"primary"`
	// Describes a virtual machines scale set IP Configuration's PublicIPAddress configuration. The publicIpAddressConfiguration is documented below.
	PublicIpAddressConfiguration ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrInput `pulumi:"publicIpAddressConfiguration"`
	// Specifies the identifier of the subnet.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (ScaleSetNetworkProfileIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetNetworkProfileIpConfiguration)(nil)).Elem()
}

func (i ScaleSetNetworkProfileIpConfigurationArgs) ToScaleSetNetworkProfileIpConfigurationOutput() ScaleSetNetworkProfileIpConfigurationOutput {
	return i.ToScaleSetNetworkProfileIpConfigurationOutputWithContext(context.Background())
}

func (i ScaleSetNetworkProfileIpConfigurationArgs) ToScaleSetNetworkProfileIpConfigurationOutputWithContext(ctx context.Context) ScaleSetNetworkProfileIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetNetworkProfileIpConfigurationOutput)
}

// ScaleSetNetworkProfileIpConfigurationArrayInput is an input type that accepts ScaleSetNetworkProfileIpConfigurationArray and ScaleSetNetworkProfileIpConfigurationArrayOutput values.
// You can construct a concrete instance of `ScaleSetNetworkProfileIpConfigurationArrayInput` via:
//
// 		 ScaleSetNetworkProfileIpConfigurationArray{ ScaleSetNetworkProfileIpConfigurationArgs{...} }
//
type ScaleSetNetworkProfileIpConfigurationArrayInput interface {
	pulumi.Input

	ToScaleSetNetworkProfileIpConfigurationArrayOutput() ScaleSetNetworkProfileIpConfigurationArrayOutput
	ToScaleSetNetworkProfileIpConfigurationArrayOutputWithContext(context.Context) ScaleSetNetworkProfileIpConfigurationArrayOutput
}

type ScaleSetNetworkProfileIpConfigurationArray []ScaleSetNetworkProfileIpConfigurationInput

func (ScaleSetNetworkProfileIpConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleSetNetworkProfileIpConfiguration)(nil)).Elem()
}

func (i ScaleSetNetworkProfileIpConfigurationArray) ToScaleSetNetworkProfileIpConfigurationArrayOutput() ScaleSetNetworkProfileIpConfigurationArrayOutput {
	return i.ToScaleSetNetworkProfileIpConfigurationArrayOutputWithContext(context.Background())
}

func (i ScaleSetNetworkProfileIpConfigurationArray) ToScaleSetNetworkProfileIpConfigurationArrayOutputWithContext(ctx context.Context) ScaleSetNetworkProfileIpConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetNetworkProfileIpConfigurationArrayOutput)
}

type ScaleSetNetworkProfileIpConfigurationOutput struct{ *pulumi.OutputState }

func (ScaleSetNetworkProfileIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetNetworkProfileIpConfiguration)(nil)).Elem()
}

func (o ScaleSetNetworkProfileIpConfigurationOutput) ToScaleSetNetworkProfileIpConfigurationOutput() ScaleSetNetworkProfileIpConfigurationOutput {
	return o
}

func (o ScaleSetNetworkProfileIpConfigurationOutput) ToScaleSetNetworkProfileIpConfigurationOutputWithContext(ctx context.Context) ScaleSetNetworkProfileIpConfigurationOutput {
	return o
}

// Specifies an array of references to backend address pools of application gateways. A scale set can reference backend address pools of multiple application gateways. Multiple scale sets can use the same application gateway.
func (o ScaleSetNetworkProfileIpConfigurationOutput) ApplicationGatewayBackendAddressPoolIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScaleSetNetworkProfileIpConfiguration) []string {
		return v.ApplicationGatewayBackendAddressPoolIds
	}).(pulumi.StringArrayOutput)
}

// Specifies up to `20` application security group IDs.
func (o ScaleSetNetworkProfileIpConfigurationOutput) ApplicationSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScaleSetNetworkProfileIpConfiguration) []string { return v.ApplicationSecurityGroupIds }).(pulumi.StringArrayOutput)
}

// Specifies an array of references to backend address pools of load balancers. A scale set can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the same load balancer.
func (o ScaleSetNetworkProfileIpConfigurationOutput) LoadBalancerBackendAddressPoolIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScaleSetNetworkProfileIpConfiguration) []string { return v.LoadBalancerBackendAddressPoolIds }).(pulumi.StringArrayOutput)
}

// Specifies an array of references to inbound NAT pools for load balancers. A scale set can reference inbound nat pools of one public and one internal load balancer. Multiple scale sets cannot use the same load balancer.
func (o ScaleSetNetworkProfileIpConfigurationOutput) LoadBalancerInboundNatRulesIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScaleSetNetworkProfileIpConfiguration) []string { return v.LoadBalancerInboundNatRulesIds }).(pulumi.StringArrayOutput)
}

// Specifies name of the IP configuration.
func (o ScaleSetNetworkProfileIpConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleSetNetworkProfileIpConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies if this ipConfiguration is the primary one.
func (o ScaleSetNetworkProfileIpConfigurationOutput) Primary() pulumi.BoolOutput {
	return o.ApplyT(func(v ScaleSetNetworkProfileIpConfiguration) bool { return v.Primary }).(pulumi.BoolOutput)
}

// Describes a virtual machines scale set IP Configuration's PublicIPAddress configuration. The publicIpAddressConfiguration is documented below.
func (o ScaleSetNetworkProfileIpConfigurationOutput) PublicIpAddressConfiguration() ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutput {
	return o.ApplyT(func(v ScaleSetNetworkProfileIpConfiguration) *ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfiguration {
		return v.PublicIpAddressConfiguration
	}).(ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutput)
}

// Specifies the identifier of the subnet.
func (o ScaleSetNetworkProfileIpConfigurationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleSetNetworkProfileIpConfiguration) string { return v.SubnetId }).(pulumi.StringOutput)
}

type ScaleSetNetworkProfileIpConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ScaleSetNetworkProfileIpConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleSetNetworkProfileIpConfiguration)(nil)).Elem()
}

func (o ScaleSetNetworkProfileIpConfigurationArrayOutput) ToScaleSetNetworkProfileIpConfigurationArrayOutput() ScaleSetNetworkProfileIpConfigurationArrayOutput {
	return o
}

func (o ScaleSetNetworkProfileIpConfigurationArrayOutput) ToScaleSetNetworkProfileIpConfigurationArrayOutputWithContext(ctx context.Context) ScaleSetNetworkProfileIpConfigurationArrayOutput {
	return o
}

func (o ScaleSetNetworkProfileIpConfigurationArrayOutput) Index(i pulumi.IntInput) ScaleSetNetworkProfileIpConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScaleSetNetworkProfileIpConfiguration {
		return vs[0].([]ScaleSetNetworkProfileIpConfiguration)[vs[1].(int)]
	}).(ScaleSetNetworkProfileIpConfigurationOutput)
}

type ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfiguration struct {
	// The domain name label for the dns settings.
	DomainNameLabel string `pulumi:"domainNameLabel"`
	// The idle timeout in minutes. This value must be between 4 and 30.
	IdleTimeout int `pulumi:"idleTimeout"`
	// The name of the public ip address configuration
	Name string `pulumi:"name"`
}

// ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationInput is an input type that accepts ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs and ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationOutput values.
// You can construct a concrete instance of `ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationInput` via:
//
// 		 ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs{...}
//
type ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationInput interface {
	pulumi.Input

	ToScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationOutput() ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationOutput
	ToScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationOutputWithContext(context.Context) ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationOutput
}

type ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs struct {
	// The domain name label for the dns settings.
	DomainNameLabel pulumi.StringInput `pulumi:"domainNameLabel"`
	// The idle timeout in minutes. This value must be between 4 and 30.
	IdleTimeout pulumi.IntInput `pulumi:"idleTimeout"`
	// The name of the public ip address configuration
	Name pulumi.StringInput `pulumi:"name"`
}

func (ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfiguration)(nil)).Elem()
}

func (i ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs) ToScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationOutput() ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationOutput {
	return i.ToScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationOutputWithContext(context.Background())
}

func (i ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs) ToScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationOutputWithContext(ctx context.Context) ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationOutput)
}

func (i ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs) ToScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutput() ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutput {
	return i.ToScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutputWithContext(context.Background())
}

func (i ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs) ToScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutputWithContext(ctx context.Context) ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationOutput).ToScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutputWithContext(ctx)
}

// ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrInput is an input type that accepts ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs, ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtr and ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutput values.
// You can construct a concrete instance of `ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrInput` via:
//
// 		 ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrInput interface {
	pulumi.Input

	ToScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutput() ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutput
	ToScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutputWithContext(context.Context) ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutput
}

type scaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrType ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs

func ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtr(v *ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs) ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrInput {
	return (*scaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrType)(v)
}

func (*scaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfiguration)(nil)).Elem()
}

func (i *scaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrType) ToScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutput() ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutput {
	return i.ToScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutputWithContext(context.Background())
}

func (i *scaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrType) ToScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutputWithContext(ctx context.Context) ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutput)
}

type ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationOutput struct{ *pulumi.OutputState }

func (ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfiguration)(nil)).Elem()
}

func (o ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationOutput) ToScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationOutput() ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationOutput {
	return o
}

func (o ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationOutput) ToScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationOutputWithContext(ctx context.Context) ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationOutput {
	return o
}

func (o ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationOutput) ToScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutput() ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutput {
	return o.ToScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutputWithContext(context.Background())
}

func (o ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationOutput) ToScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutputWithContext(ctx context.Context) ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutput {
	return o.ApplyT(func(v ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfiguration) *ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfiguration {
		return &v
	}).(ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutput)
}

// The domain name label for the dns settings.
func (o ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationOutput) DomainNameLabel() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfiguration) string {
		return v.DomainNameLabel
	}).(pulumi.StringOutput)
}

// The idle timeout in minutes. This value must be between 4 and 30.
func (o ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationOutput) IdleTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfiguration) int { return v.IdleTimeout }).(pulumi.IntOutput)
}

// The name of the public ip address configuration
func (o ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

type ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfiguration)(nil)).Elem()
}

func (o ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutput) ToScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutput() ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutput {
	return o
}

func (o ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutput) ToScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutputWithContext(ctx context.Context) ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutput {
	return o
}

func (o ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutput) Elem() ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationOutput {
	return o.ApplyT(func(v *ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfiguration) ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfiguration {
		return *v
	}).(ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationOutput)
}

// The domain name label for the dns settings.
func (o ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.DomainNameLabel
	}).(pulumi.StringPtrOutput)
}

// The idle timeout in minutes. This value must be between 4 and 30.
func (o ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutput) IdleTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.IdleTimeout
	}).(pulumi.IntPtrOutput)
}

// The name of the public ip address configuration
func (o ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type ScaleSetOsProfile struct {
	// Specifies the administrator password to use for all the instances of virtual machines in a scale set.
	AdminPassword *string `pulumi:"adminPassword"`
	// Specifies the administrator account name to use for all the instances of virtual machines in the scale set.
	AdminUsername string `pulumi:"adminUsername"`
	// Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 9 characters long for windows images and 1 - 58 for linux. Changing this forces a new resource to be created.
	ComputerNamePrefix string `pulumi:"computerNamePrefix"`
	// Specifies custom data to supply to the machine. On linux-based systems, this can be used as a cloud-init script. On other systems, this will be copied as a file on disk. Internally, this provider will base64 encode this value before sending it to the API. The maximum length of the binary array is 65535 bytes.
	CustomData *string `pulumi:"customData"`
}

// ScaleSetOsProfileInput is an input type that accepts ScaleSetOsProfileArgs and ScaleSetOsProfileOutput values.
// You can construct a concrete instance of `ScaleSetOsProfileInput` via:
//
// 		 ScaleSetOsProfileArgs{...}
//
type ScaleSetOsProfileInput interface {
	pulumi.Input

	ToScaleSetOsProfileOutput() ScaleSetOsProfileOutput
	ToScaleSetOsProfileOutputWithContext(context.Context) ScaleSetOsProfileOutput
}

type ScaleSetOsProfileArgs struct {
	// Specifies the administrator password to use for all the instances of virtual machines in a scale set.
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// Specifies the administrator account name to use for all the instances of virtual machines in the scale set.
	AdminUsername pulumi.StringInput `pulumi:"adminUsername"`
	// Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 9 characters long for windows images and 1 - 58 for linux. Changing this forces a new resource to be created.
	ComputerNamePrefix pulumi.StringInput `pulumi:"computerNamePrefix"`
	// Specifies custom data to supply to the machine. On linux-based systems, this can be used as a cloud-init script. On other systems, this will be copied as a file on disk. Internally, this provider will base64 encode this value before sending it to the API. The maximum length of the binary array is 65535 bytes.
	CustomData pulumi.StringPtrInput `pulumi:"customData"`
}

func (ScaleSetOsProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetOsProfile)(nil)).Elem()
}

func (i ScaleSetOsProfileArgs) ToScaleSetOsProfileOutput() ScaleSetOsProfileOutput {
	return i.ToScaleSetOsProfileOutputWithContext(context.Background())
}

func (i ScaleSetOsProfileArgs) ToScaleSetOsProfileOutputWithContext(ctx context.Context) ScaleSetOsProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetOsProfileOutput)
}

func (i ScaleSetOsProfileArgs) ToScaleSetOsProfilePtrOutput() ScaleSetOsProfilePtrOutput {
	return i.ToScaleSetOsProfilePtrOutputWithContext(context.Background())
}

func (i ScaleSetOsProfileArgs) ToScaleSetOsProfilePtrOutputWithContext(ctx context.Context) ScaleSetOsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetOsProfileOutput).ToScaleSetOsProfilePtrOutputWithContext(ctx)
}

// ScaleSetOsProfilePtrInput is an input type that accepts ScaleSetOsProfileArgs, ScaleSetOsProfilePtr and ScaleSetOsProfilePtrOutput values.
// You can construct a concrete instance of `ScaleSetOsProfilePtrInput` via:
//
// 		 ScaleSetOsProfileArgs{...}
//
//  or:
//
// 		 nil
//
type ScaleSetOsProfilePtrInput interface {
	pulumi.Input

	ToScaleSetOsProfilePtrOutput() ScaleSetOsProfilePtrOutput
	ToScaleSetOsProfilePtrOutputWithContext(context.Context) ScaleSetOsProfilePtrOutput
}

type scaleSetOsProfilePtrType ScaleSetOsProfileArgs

func ScaleSetOsProfilePtr(v *ScaleSetOsProfileArgs) ScaleSetOsProfilePtrInput {
	return (*scaleSetOsProfilePtrType)(v)
}

func (*scaleSetOsProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSetOsProfile)(nil)).Elem()
}

func (i *scaleSetOsProfilePtrType) ToScaleSetOsProfilePtrOutput() ScaleSetOsProfilePtrOutput {
	return i.ToScaleSetOsProfilePtrOutputWithContext(context.Background())
}

func (i *scaleSetOsProfilePtrType) ToScaleSetOsProfilePtrOutputWithContext(ctx context.Context) ScaleSetOsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetOsProfilePtrOutput)
}

type ScaleSetOsProfileOutput struct{ *pulumi.OutputState }

func (ScaleSetOsProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetOsProfile)(nil)).Elem()
}

func (o ScaleSetOsProfileOutput) ToScaleSetOsProfileOutput() ScaleSetOsProfileOutput {
	return o
}

func (o ScaleSetOsProfileOutput) ToScaleSetOsProfileOutputWithContext(ctx context.Context) ScaleSetOsProfileOutput {
	return o
}

func (o ScaleSetOsProfileOutput) ToScaleSetOsProfilePtrOutput() ScaleSetOsProfilePtrOutput {
	return o.ToScaleSetOsProfilePtrOutputWithContext(context.Background())
}

func (o ScaleSetOsProfileOutput) ToScaleSetOsProfilePtrOutputWithContext(ctx context.Context) ScaleSetOsProfilePtrOutput {
	return o.ApplyT(func(v ScaleSetOsProfile) *ScaleSetOsProfile {
		return &v
	}).(ScaleSetOsProfilePtrOutput)
}

// Specifies the administrator password to use for all the instances of virtual machines in a scale set.
func (o ScaleSetOsProfileOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSetOsProfile) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// Specifies the administrator account name to use for all the instances of virtual machines in the scale set.
func (o ScaleSetOsProfileOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleSetOsProfile) string { return v.AdminUsername }).(pulumi.StringOutput)
}

// Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 9 characters long for windows images and 1 - 58 for linux. Changing this forces a new resource to be created.
func (o ScaleSetOsProfileOutput) ComputerNamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleSetOsProfile) string { return v.ComputerNamePrefix }).(pulumi.StringOutput)
}

// Specifies custom data to supply to the machine. On linux-based systems, this can be used as a cloud-init script. On other systems, this will be copied as a file on disk. Internally, this provider will base64 encode this value before sending it to the API. The maximum length of the binary array is 65535 bytes.
func (o ScaleSetOsProfileOutput) CustomData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSetOsProfile) *string { return v.CustomData }).(pulumi.StringPtrOutput)
}

type ScaleSetOsProfilePtrOutput struct{ *pulumi.OutputState }

func (ScaleSetOsProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSetOsProfile)(nil)).Elem()
}

func (o ScaleSetOsProfilePtrOutput) ToScaleSetOsProfilePtrOutput() ScaleSetOsProfilePtrOutput {
	return o
}

func (o ScaleSetOsProfilePtrOutput) ToScaleSetOsProfilePtrOutputWithContext(ctx context.Context) ScaleSetOsProfilePtrOutput {
	return o
}

func (o ScaleSetOsProfilePtrOutput) Elem() ScaleSetOsProfileOutput {
	return o.ApplyT(func(v *ScaleSetOsProfile) ScaleSetOsProfile { return *v }).(ScaleSetOsProfileOutput)
}

// Specifies the administrator password to use for all the instances of virtual machines in a scale set.
func (o ScaleSetOsProfilePtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSetOsProfile) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// Specifies the administrator account name to use for all the instances of virtual machines in the scale set.
func (o ScaleSetOsProfilePtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSetOsProfile) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 9 characters long for windows images and 1 - 58 for linux. Changing this forces a new resource to be created.
func (o ScaleSetOsProfilePtrOutput) ComputerNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSetOsProfile) *string {
		if v == nil {
			return nil
		}
		return &v.ComputerNamePrefix
	}).(pulumi.StringPtrOutput)
}

// Specifies custom data to supply to the machine. On linux-based systems, this can be used as a cloud-init script. On other systems, this will be copied as a file on disk. Internally, this provider will base64 encode this value before sending it to the API. The maximum length of the binary array is 65535 bytes.
func (o ScaleSetOsProfilePtrOutput) CustomData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSetOsProfile) *string {
		if v == nil {
			return nil
		}
		return v.CustomData
	}).(pulumi.StringPtrOutput)
}

type ScaleSetOsProfileLinuxConfig struct {
	// Specifies whether password authentication should be disabled. Defaults to `false`. Changing this forces a new resource to be created.
	DisablePasswordAuthentication *bool `pulumi:"disablePasswordAuthentication"`
	// Specifies a collection of `path` and `keyData` to be placed on the virtual machine.
	SshKeys []ScaleSetOsProfileLinuxConfigSshKey `pulumi:"sshKeys"`
}

// ScaleSetOsProfileLinuxConfigInput is an input type that accepts ScaleSetOsProfileLinuxConfigArgs and ScaleSetOsProfileLinuxConfigOutput values.
// You can construct a concrete instance of `ScaleSetOsProfileLinuxConfigInput` via:
//
// 		 ScaleSetOsProfileLinuxConfigArgs{...}
//
type ScaleSetOsProfileLinuxConfigInput interface {
	pulumi.Input

	ToScaleSetOsProfileLinuxConfigOutput() ScaleSetOsProfileLinuxConfigOutput
	ToScaleSetOsProfileLinuxConfigOutputWithContext(context.Context) ScaleSetOsProfileLinuxConfigOutput
}

type ScaleSetOsProfileLinuxConfigArgs struct {
	// Specifies whether password authentication should be disabled. Defaults to `false`. Changing this forces a new resource to be created.
	DisablePasswordAuthentication pulumi.BoolPtrInput `pulumi:"disablePasswordAuthentication"`
	// Specifies a collection of `path` and `keyData` to be placed on the virtual machine.
	SshKeys ScaleSetOsProfileLinuxConfigSshKeyArrayInput `pulumi:"sshKeys"`
}

func (ScaleSetOsProfileLinuxConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetOsProfileLinuxConfig)(nil)).Elem()
}

func (i ScaleSetOsProfileLinuxConfigArgs) ToScaleSetOsProfileLinuxConfigOutput() ScaleSetOsProfileLinuxConfigOutput {
	return i.ToScaleSetOsProfileLinuxConfigOutputWithContext(context.Background())
}

func (i ScaleSetOsProfileLinuxConfigArgs) ToScaleSetOsProfileLinuxConfigOutputWithContext(ctx context.Context) ScaleSetOsProfileLinuxConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetOsProfileLinuxConfigOutput)
}

func (i ScaleSetOsProfileLinuxConfigArgs) ToScaleSetOsProfileLinuxConfigPtrOutput() ScaleSetOsProfileLinuxConfigPtrOutput {
	return i.ToScaleSetOsProfileLinuxConfigPtrOutputWithContext(context.Background())
}

func (i ScaleSetOsProfileLinuxConfigArgs) ToScaleSetOsProfileLinuxConfigPtrOutputWithContext(ctx context.Context) ScaleSetOsProfileLinuxConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetOsProfileLinuxConfigOutput).ToScaleSetOsProfileLinuxConfigPtrOutputWithContext(ctx)
}

// ScaleSetOsProfileLinuxConfigPtrInput is an input type that accepts ScaleSetOsProfileLinuxConfigArgs, ScaleSetOsProfileLinuxConfigPtr and ScaleSetOsProfileLinuxConfigPtrOutput values.
// You can construct a concrete instance of `ScaleSetOsProfileLinuxConfigPtrInput` via:
//
// 		 ScaleSetOsProfileLinuxConfigArgs{...}
//
//  or:
//
// 		 nil
//
type ScaleSetOsProfileLinuxConfigPtrInput interface {
	pulumi.Input

	ToScaleSetOsProfileLinuxConfigPtrOutput() ScaleSetOsProfileLinuxConfigPtrOutput
	ToScaleSetOsProfileLinuxConfigPtrOutputWithContext(context.Context) ScaleSetOsProfileLinuxConfigPtrOutput
}

type scaleSetOsProfileLinuxConfigPtrType ScaleSetOsProfileLinuxConfigArgs

func ScaleSetOsProfileLinuxConfigPtr(v *ScaleSetOsProfileLinuxConfigArgs) ScaleSetOsProfileLinuxConfigPtrInput {
	return (*scaleSetOsProfileLinuxConfigPtrType)(v)
}

func (*scaleSetOsProfileLinuxConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSetOsProfileLinuxConfig)(nil)).Elem()
}

func (i *scaleSetOsProfileLinuxConfigPtrType) ToScaleSetOsProfileLinuxConfigPtrOutput() ScaleSetOsProfileLinuxConfigPtrOutput {
	return i.ToScaleSetOsProfileLinuxConfigPtrOutputWithContext(context.Background())
}

func (i *scaleSetOsProfileLinuxConfigPtrType) ToScaleSetOsProfileLinuxConfigPtrOutputWithContext(ctx context.Context) ScaleSetOsProfileLinuxConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetOsProfileLinuxConfigPtrOutput)
}

type ScaleSetOsProfileLinuxConfigOutput struct{ *pulumi.OutputState }

func (ScaleSetOsProfileLinuxConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetOsProfileLinuxConfig)(nil)).Elem()
}

func (o ScaleSetOsProfileLinuxConfigOutput) ToScaleSetOsProfileLinuxConfigOutput() ScaleSetOsProfileLinuxConfigOutput {
	return o
}

func (o ScaleSetOsProfileLinuxConfigOutput) ToScaleSetOsProfileLinuxConfigOutputWithContext(ctx context.Context) ScaleSetOsProfileLinuxConfigOutput {
	return o
}

func (o ScaleSetOsProfileLinuxConfigOutput) ToScaleSetOsProfileLinuxConfigPtrOutput() ScaleSetOsProfileLinuxConfigPtrOutput {
	return o.ToScaleSetOsProfileLinuxConfigPtrOutputWithContext(context.Background())
}

func (o ScaleSetOsProfileLinuxConfigOutput) ToScaleSetOsProfileLinuxConfigPtrOutputWithContext(ctx context.Context) ScaleSetOsProfileLinuxConfigPtrOutput {
	return o.ApplyT(func(v ScaleSetOsProfileLinuxConfig) *ScaleSetOsProfileLinuxConfig {
		return &v
	}).(ScaleSetOsProfileLinuxConfigPtrOutput)
}

// Specifies whether password authentication should be disabled. Defaults to `false`. Changing this forces a new resource to be created.
func (o ScaleSetOsProfileLinuxConfigOutput) DisablePasswordAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScaleSetOsProfileLinuxConfig) *bool { return v.DisablePasswordAuthentication }).(pulumi.BoolPtrOutput)
}

// Specifies a collection of `path` and `keyData` to be placed on the virtual machine.
func (o ScaleSetOsProfileLinuxConfigOutput) SshKeys() ScaleSetOsProfileLinuxConfigSshKeyArrayOutput {
	return o.ApplyT(func(v ScaleSetOsProfileLinuxConfig) []ScaleSetOsProfileLinuxConfigSshKey { return v.SshKeys }).(ScaleSetOsProfileLinuxConfigSshKeyArrayOutput)
}

type ScaleSetOsProfileLinuxConfigPtrOutput struct{ *pulumi.OutputState }

func (ScaleSetOsProfileLinuxConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSetOsProfileLinuxConfig)(nil)).Elem()
}

func (o ScaleSetOsProfileLinuxConfigPtrOutput) ToScaleSetOsProfileLinuxConfigPtrOutput() ScaleSetOsProfileLinuxConfigPtrOutput {
	return o
}

func (o ScaleSetOsProfileLinuxConfigPtrOutput) ToScaleSetOsProfileLinuxConfigPtrOutputWithContext(ctx context.Context) ScaleSetOsProfileLinuxConfigPtrOutput {
	return o
}

func (o ScaleSetOsProfileLinuxConfigPtrOutput) Elem() ScaleSetOsProfileLinuxConfigOutput {
	return o.ApplyT(func(v *ScaleSetOsProfileLinuxConfig) ScaleSetOsProfileLinuxConfig { return *v }).(ScaleSetOsProfileLinuxConfigOutput)
}

// Specifies whether password authentication should be disabled. Defaults to `false`. Changing this forces a new resource to be created.
func (o ScaleSetOsProfileLinuxConfigPtrOutput) DisablePasswordAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScaleSetOsProfileLinuxConfig) *bool {
		if v == nil {
			return nil
		}
		return v.DisablePasswordAuthentication
	}).(pulumi.BoolPtrOutput)
}

// Specifies a collection of `path` and `keyData` to be placed on the virtual machine.
func (o ScaleSetOsProfileLinuxConfigPtrOutput) SshKeys() ScaleSetOsProfileLinuxConfigSshKeyArrayOutput {
	return o.ApplyT(func(v *ScaleSetOsProfileLinuxConfig) []ScaleSetOsProfileLinuxConfigSshKey {
		if v == nil {
			return nil
		}
		return v.SshKeys
	}).(ScaleSetOsProfileLinuxConfigSshKeyArrayOutput)
}

type ScaleSetOsProfileLinuxConfigSshKey struct {
	KeyData *string `pulumi:"keyData"`
	Path    string  `pulumi:"path"`
}

// ScaleSetOsProfileLinuxConfigSshKeyInput is an input type that accepts ScaleSetOsProfileLinuxConfigSshKeyArgs and ScaleSetOsProfileLinuxConfigSshKeyOutput values.
// You can construct a concrete instance of `ScaleSetOsProfileLinuxConfigSshKeyInput` via:
//
// 		 ScaleSetOsProfileLinuxConfigSshKeyArgs{...}
//
type ScaleSetOsProfileLinuxConfigSshKeyInput interface {
	pulumi.Input

	ToScaleSetOsProfileLinuxConfigSshKeyOutput() ScaleSetOsProfileLinuxConfigSshKeyOutput
	ToScaleSetOsProfileLinuxConfigSshKeyOutputWithContext(context.Context) ScaleSetOsProfileLinuxConfigSshKeyOutput
}

type ScaleSetOsProfileLinuxConfigSshKeyArgs struct {
	KeyData pulumi.StringPtrInput `pulumi:"keyData"`
	Path    pulumi.StringInput    `pulumi:"path"`
}

func (ScaleSetOsProfileLinuxConfigSshKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetOsProfileLinuxConfigSshKey)(nil)).Elem()
}

func (i ScaleSetOsProfileLinuxConfigSshKeyArgs) ToScaleSetOsProfileLinuxConfigSshKeyOutput() ScaleSetOsProfileLinuxConfigSshKeyOutput {
	return i.ToScaleSetOsProfileLinuxConfigSshKeyOutputWithContext(context.Background())
}

func (i ScaleSetOsProfileLinuxConfigSshKeyArgs) ToScaleSetOsProfileLinuxConfigSshKeyOutputWithContext(ctx context.Context) ScaleSetOsProfileLinuxConfigSshKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetOsProfileLinuxConfigSshKeyOutput)
}

// ScaleSetOsProfileLinuxConfigSshKeyArrayInput is an input type that accepts ScaleSetOsProfileLinuxConfigSshKeyArray and ScaleSetOsProfileLinuxConfigSshKeyArrayOutput values.
// You can construct a concrete instance of `ScaleSetOsProfileLinuxConfigSshKeyArrayInput` via:
//
// 		 ScaleSetOsProfileLinuxConfigSshKeyArray{ ScaleSetOsProfileLinuxConfigSshKeyArgs{...} }
//
type ScaleSetOsProfileLinuxConfigSshKeyArrayInput interface {
	pulumi.Input

	ToScaleSetOsProfileLinuxConfigSshKeyArrayOutput() ScaleSetOsProfileLinuxConfigSshKeyArrayOutput
	ToScaleSetOsProfileLinuxConfigSshKeyArrayOutputWithContext(context.Context) ScaleSetOsProfileLinuxConfigSshKeyArrayOutput
}

type ScaleSetOsProfileLinuxConfigSshKeyArray []ScaleSetOsProfileLinuxConfigSshKeyInput

func (ScaleSetOsProfileLinuxConfigSshKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleSetOsProfileLinuxConfigSshKey)(nil)).Elem()
}

func (i ScaleSetOsProfileLinuxConfigSshKeyArray) ToScaleSetOsProfileLinuxConfigSshKeyArrayOutput() ScaleSetOsProfileLinuxConfigSshKeyArrayOutput {
	return i.ToScaleSetOsProfileLinuxConfigSshKeyArrayOutputWithContext(context.Background())
}

func (i ScaleSetOsProfileLinuxConfigSshKeyArray) ToScaleSetOsProfileLinuxConfigSshKeyArrayOutputWithContext(ctx context.Context) ScaleSetOsProfileLinuxConfigSshKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetOsProfileLinuxConfigSshKeyArrayOutput)
}

type ScaleSetOsProfileLinuxConfigSshKeyOutput struct{ *pulumi.OutputState }

func (ScaleSetOsProfileLinuxConfigSshKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetOsProfileLinuxConfigSshKey)(nil)).Elem()
}

func (o ScaleSetOsProfileLinuxConfigSshKeyOutput) ToScaleSetOsProfileLinuxConfigSshKeyOutput() ScaleSetOsProfileLinuxConfigSshKeyOutput {
	return o
}

func (o ScaleSetOsProfileLinuxConfigSshKeyOutput) ToScaleSetOsProfileLinuxConfigSshKeyOutputWithContext(ctx context.Context) ScaleSetOsProfileLinuxConfigSshKeyOutput {
	return o
}

func (o ScaleSetOsProfileLinuxConfigSshKeyOutput) KeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSetOsProfileLinuxConfigSshKey) *string { return v.KeyData }).(pulumi.StringPtrOutput)
}

func (o ScaleSetOsProfileLinuxConfigSshKeyOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleSetOsProfileLinuxConfigSshKey) string { return v.Path }).(pulumi.StringOutput)
}

type ScaleSetOsProfileLinuxConfigSshKeyArrayOutput struct{ *pulumi.OutputState }

func (ScaleSetOsProfileLinuxConfigSshKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleSetOsProfileLinuxConfigSshKey)(nil)).Elem()
}

func (o ScaleSetOsProfileLinuxConfigSshKeyArrayOutput) ToScaleSetOsProfileLinuxConfigSshKeyArrayOutput() ScaleSetOsProfileLinuxConfigSshKeyArrayOutput {
	return o
}

func (o ScaleSetOsProfileLinuxConfigSshKeyArrayOutput) ToScaleSetOsProfileLinuxConfigSshKeyArrayOutputWithContext(ctx context.Context) ScaleSetOsProfileLinuxConfigSshKeyArrayOutput {
	return o
}

func (o ScaleSetOsProfileLinuxConfigSshKeyArrayOutput) Index(i pulumi.IntInput) ScaleSetOsProfileLinuxConfigSshKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScaleSetOsProfileLinuxConfigSshKey {
		return vs[0].([]ScaleSetOsProfileLinuxConfigSshKey)[vs[1].(int)]
	}).(ScaleSetOsProfileLinuxConfigSshKeyOutput)
}

type ScaleSetOsProfileSecret struct {
	// Specifies the key vault to use.
	SourceVaultId string `pulumi:"sourceVaultId"`
	// A collection of Vault Certificates as documented below
	VaultCertificates []ScaleSetOsProfileSecretVaultCertificate `pulumi:"vaultCertificates"`
}

// ScaleSetOsProfileSecretInput is an input type that accepts ScaleSetOsProfileSecretArgs and ScaleSetOsProfileSecretOutput values.
// You can construct a concrete instance of `ScaleSetOsProfileSecretInput` via:
//
// 		 ScaleSetOsProfileSecretArgs{...}
//
type ScaleSetOsProfileSecretInput interface {
	pulumi.Input

	ToScaleSetOsProfileSecretOutput() ScaleSetOsProfileSecretOutput
	ToScaleSetOsProfileSecretOutputWithContext(context.Context) ScaleSetOsProfileSecretOutput
}

type ScaleSetOsProfileSecretArgs struct {
	// Specifies the key vault to use.
	SourceVaultId pulumi.StringInput `pulumi:"sourceVaultId"`
	// A collection of Vault Certificates as documented below
	VaultCertificates ScaleSetOsProfileSecretVaultCertificateArrayInput `pulumi:"vaultCertificates"`
}

func (ScaleSetOsProfileSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetOsProfileSecret)(nil)).Elem()
}

func (i ScaleSetOsProfileSecretArgs) ToScaleSetOsProfileSecretOutput() ScaleSetOsProfileSecretOutput {
	return i.ToScaleSetOsProfileSecretOutputWithContext(context.Background())
}

func (i ScaleSetOsProfileSecretArgs) ToScaleSetOsProfileSecretOutputWithContext(ctx context.Context) ScaleSetOsProfileSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetOsProfileSecretOutput)
}

// ScaleSetOsProfileSecretArrayInput is an input type that accepts ScaleSetOsProfileSecretArray and ScaleSetOsProfileSecretArrayOutput values.
// You can construct a concrete instance of `ScaleSetOsProfileSecretArrayInput` via:
//
// 		 ScaleSetOsProfileSecretArray{ ScaleSetOsProfileSecretArgs{...} }
//
type ScaleSetOsProfileSecretArrayInput interface {
	pulumi.Input

	ToScaleSetOsProfileSecretArrayOutput() ScaleSetOsProfileSecretArrayOutput
	ToScaleSetOsProfileSecretArrayOutputWithContext(context.Context) ScaleSetOsProfileSecretArrayOutput
}

type ScaleSetOsProfileSecretArray []ScaleSetOsProfileSecretInput

func (ScaleSetOsProfileSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleSetOsProfileSecret)(nil)).Elem()
}

func (i ScaleSetOsProfileSecretArray) ToScaleSetOsProfileSecretArrayOutput() ScaleSetOsProfileSecretArrayOutput {
	return i.ToScaleSetOsProfileSecretArrayOutputWithContext(context.Background())
}

func (i ScaleSetOsProfileSecretArray) ToScaleSetOsProfileSecretArrayOutputWithContext(ctx context.Context) ScaleSetOsProfileSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetOsProfileSecretArrayOutput)
}

type ScaleSetOsProfileSecretOutput struct{ *pulumi.OutputState }

func (ScaleSetOsProfileSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetOsProfileSecret)(nil)).Elem()
}

func (o ScaleSetOsProfileSecretOutput) ToScaleSetOsProfileSecretOutput() ScaleSetOsProfileSecretOutput {
	return o
}

func (o ScaleSetOsProfileSecretOutput) ToScaleSetOsProfileSecretOutputWithContext(ctx context.Context) ScaleSetOsProfileSecretOutput {
	return o
}

// Specifies the key vault to use.
func (o ScaleSetOsProfileSecretOutput) SourceVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleSetOsProfileSecret) string { return v.SourceVaultId }).(pulumi.StringOutput)
}

// A collection of Vault Certificates as documented below
func (o ScaleSetOsProfileSecretOutput) VaultCertificates() ScaleSetOsProfileSecretVaultCertificateArrayOutput {
	return o.ApplyT(func(v ScaleSetOsProfileSecret) []ScaleSetOsProfileSecretVaultCertificate { return v.VaultCertificates }).(ScaleSetOsProfileSecretVaultCertificateArrayOutput)
}

type ScaleSetOsProfileSecretArrayOutput struct{ *pulumi.OutputState }

func (ScaleSetOsProfileSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleSetOsProfileSecret)(nil)).Elem()
}

func (o ScaleSetOsProfileSecretArrayOutput) ToScaleSetOsProfileSecretArrayOutput() ScaleSetOsProfileSecretArrayOutput {
	return o
}

func (o ScaleSetOsProfileSecretArrayOutput) ToScaleSetOsProfileSecretArrayOutputWithContext(ctx context.Context) ScaleSetOsProfileSecretArrayOutput {
	return o
}

func (o ScaleSetOsProfileSecretArrayOutput) Index(i pulumi.IntInput) ScaleSetOsProfileSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScaleSetOsProfileSecret {
		return vs[0].([]ScaleSetOsProfileSecret)[vs[1].(int)]
	}).(ScaleSetOsProfileSecretOutput)
}

type ScaleSetOsProfileSecretVaultCertificate struct {
	// Specifies the certificate store on the Virtual Machine where the certificate should be added to.
	CertificateStore *string `pulumi:"certificateStore"`
	// It is the Base64 encoding of a JSON Object that which is encoded in UTF-8 of which the contents need to be `data`, `dataType` and `password`.
	CertificateUrl string `pulumi:"certificateUrl"`
}

// ScaleSetOsProfileSecretVaultCertificateInput is an input type that accepts ScaleSetOsProfileSecretVaultCertificateArgs and ScaleSetOsProfileSecretVaultCertificateOutput values.
// You can construct a concrete instance of `ScaleSetOsProfileSecretVaultCertificateInput` via:
//
// 		 ScaleSetOsProfileSecretVaultCertificateArgs{...}
//
type ScaleSetOsProfileSecretVaultCertificateInput interface {
	pulumi.Input

	ToScaleSetOsProfileSecretVaultCertificateOutput() ScaleSetOsProfileSecretVaultCertificateOutput
	ToScaleSetOsProfileSecretVaultCertificateOutputWithContext(context.Context) ScaleSetOsProfileSecretVaultCertificateOutput
}

type ScaleSetOsProfileSecretVaultCertificateArgs struct {
	// Specifies the certificate store on the Virtual Machine where the certificate should be added to.
	CertificateStore pulumi.StringPtrInput `pulumi:"certificateStore"`
	// It is the Base64 encoding of a JSON Object that which is encoded in UTF-8 of which the contents need to be `data`, `dataType` and `password`.
	CertificateUrl pulumi.StringInput `pulumi:"certificateUrl"`
}

func (ScaleSetOsProfileSecretVaultCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetOsProfileSecretVaultCertificate)(nil)).Elem()
}

func (i ScaleSetOsProfileSecretVaultCertificateArgs) ToScaleSetOsProfileSecretVaultCertificateOutput() ScaleSetOsProfileSecretVaultCertificateOutput {
	return i.ToScaleSetOsProfileSecretVaultCertificateOutputWithContext(context.Background())
}

func (i ScaleSetOsProfileSecretVaultCertificateArgs) ToScaleSetOsProfileSecretVaultCertificateOutputWithContext(ctx context.Context) ScaleSetOsProfileSecretVaultCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetOsProfileSecretVaultCertificateOutput)
}

// ScaleSetOsProfileSecretVaultCertificateArrayInput is an input type that accepts ScaleSetOsProfileSecretVaultCertificateArray and ScaleSetOsProfileSecretVaultCertificateArrayOutput values.
// You can construct a concrete instance of `ScaleSetOsProfileSecretVaultCertificateArrayInput` via:
//
// 		 ScaleSetOsProfileSecretVaultCertificateArray{ ScaleSetOsProfileSecretVaultCertificateArgs{...} }
//
type ScaleSetOsProfileSecretVaultCertificateArrayInput interface {
	pulumi.Input

	ToScaleSetOsProfileSecretVaultCertificateArrayOutput() ScaleSetOsProfileSecretVaultCertificateArrayOutput
	ToScaleSetOsProfileSecretVaultCertificateArrayOutputWithContext(context.Context) ScaleSetOsProfileSecretVaultCertificateArrayOutput
}

type ScaleSetOsProfileSecretVaultCertificateArray []ScaleSetOsProfileSecretVaultCertificateInput

func (ScaleSetOsProfileSecretVaultCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleSetOsProfileSecretVaultCertificate)(nil)).Elem()
}

func (i ScaleSetOsProfileSecretVaultCertificateArray) ToScaleSetOsProfileSecretVaultCertificateArrayOutput() ScaleSetOsProfileSecretVaultCertificateArrayOutput {
	return i.ToScaleSetOsProfileSecretVaultCertificateArrayOutputWithContext(context.Background())
}

func (i ScaleSetOsProfileSecretVaultCertificateArray) ToScaleSetOsProfileSecretVaultCertificateArrayOutputWithContext(ctx context.Context) ScaleSetOsProfileSecretVaultCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetOsProfileSecretVaultCertificateArrayOutput)
}

type ScaleSetOsProfileSecretVaultCertificateOutput struct{ *pulumi.OutputState }

func (ScaleSetOsProfileSecretVaultCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetOsProfileSecretVaultCertificate)(nil)).Elem()
}

func (o ScaleSetOsProfileSecretVaultCertificateOutput) ToScaleSetOsProfileSecretVaultCertificateOutput() ScaleSetOsProfileSecretVaultCertificateOutput {
	return o
}

func (o ScaleSetOsProfileSecretVaultCertificateOutput) ToScaleSetOsProfileSecretVaultCertificateOutputWithContext(ctx context.Context) ScaleSetOsProfileSecretVaultCertificateOutput {
	return o
}

// Specifies the certificate store on the Virtual Machine where the certificate should be added to.
func (o ScaleSetOsProfileSecretVaultCertificateOutput) CertificateStore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSetOsProfileSecretVaultCertificate) *string { return v.CertificateStore }).(pulumi.StringPtrOutput)
}

// It is the Base64 encoding of a JSON Object that which is encoded in UTF-8 of which the contents need to be `data`, `dataType` and `password`.
func (o ScaleSetOsProfileSecretVaultCertificateOutput) CertificateUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleSetOsProfileSecretVaultCertificate) string { return v.CertificateUrl }).(pulumi.StringOutput)
}

type ScaleSetOsProfileSecretVaultCertificateArrayOutput struct{ *pulumi.OutputState }

func (ScaleSetOsProfileSecretVaultCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleSetOsProfileSecretVaultCertificate)(nil)).Elem()
}

func (o ScaleSetOsProfileSecretVaultCertificateArrayOutput) ToScaleSetOsProfileSecretVaultCertificateArrayOutput() ScaleSetOsProfileSecretVaultCertificateArrayOutput {
	return o
}

func (o ScaleSetOsProfileSecretVaultCertificateArrayOutput) ToScaleSetOsProfileSecretVaultCertificateArrayOutputWithContext(ctx context.Context) ScaleSetOsProfileSecretVaultCertificateArrayOutput {
	return o
}

func (o ScaleSetOsProfileSecretVaultCertificateArrayOutput) Index(i pulumi.IntInput) ScaleSetOsProfileSecretVaultCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScaleSetOsProfileSecretVaultCertificate {
		return vs[0].([]ScaleSetOsProfileSecretVaultCertificate)[vs[1].(int)]
	}).(ScaleSetOsProfileSecretVaultCertificateOutput)
}

type ScaleSetOsProfileWindowsConfig struct {
	// An Additional Unattended Config block as documented below.
	AdditionalUnattendConfigs []ScaleSetOsProfileWindowsConfigAdditionalUnattendConfig `pulumi:"additionalUnattendConfigs"`
	// Indicates whether virtual machines in the scale set are enabled for automatic updates.
	EnableAutomaticUpgrades *bool `pulumi:"enableAutomaticUpgrades"`
	// Indicates whether virtual machine agent should be provisioned on the virtual machines in the scale set.
	ProvisionVmAgent *bool `pulumi:"provisionVmAgent"`
	// A collection of WinRM configuration blocks as documented below.
	Winrms []ScaleSetOsProfileWindowsConfigWinrm `pulumi:"winrms"`
}

// ScaleSetOsProfileWindowsConfigInput is an input type that accepts ScaleSetOsProfileWindowsConfigArgs and ScaleSetOsProfileWindowsConfigOutput values.
// You can construct a concrete instance of `ScaleSetOsProfileWindowsConfigInput` via:
//
// 		 ScaleSetOsProfileWindowsConfigArgs{...}
//
type ScaleSetOsProfileWindowsConfigInput interface {
	pulumi.Input

	ToScaleSetOsProfileWindowsConfigOutput() ScaleSetOsProfileWindowsConfigOutput
	ToScaleSetOsProfileWindowsConfigOutputWithContext(context.Context) ScaleSetOsProfileWindowsConfigOutput
}

type ScaleSetOsProfileWindowsConfigArgs struct {
	// An Additional Unattended Config block as documented below.
	AdditionalUnattendConfigs ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArrayInput `pulumi:"additionalUnattendConfigs"`
	// Indicates whether virtual machines in the scale set are enabled for automatic updates.
	EnableAutomaticUpgrades pulumi.BoolPtrInput `pulumi:"enableAutomaticUpgrades"`
	// Indicates whether virtual machine agent should be provisioned on the virtual machines in the scale set.
	ProvisionVmAgent pulumi.BoolPtrInput `pulumi:"provisionVmAgent"`
	// A collection of WinRM configuration blocks as documented below.
	Winrms ScaleSetOsProfileWindowsConfigWinrmArrayInput `pulumi:"winrms"`
}

func (ScaleSetOsProfileWindowsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetOsProfileWindowsConfig)(nil)).Elem()
}

func (i ScaleSetOsProfileWindowsConfigArgs) ToScaleSetOsProfileWindowsConfigOutput() ScaleSetOsProfileWindowsConfigOutput {
	return i.ToScaleSetOsProfileWindowsConfigOutputWithContext(context.Background())
}

func (i ScaleSetOsProfileWindowsConfigArgs) ToScaleSetOsProfileWindowsConfigOutputWithContext(ctx context.Context) ScaleSetOsProfileWindowsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetOsProfileWindowsConfigOutput)
}

func (i ScaleSetOsProfileWindowsConfigArgs) ToScaleSetOsProfileWindowsConfigPtrOutput() ScaleSetOsProfileWindowsConfigPtrOutput {
	return i.ToScaleSetOsProfileWindowsConfigPtrOutputWithContext(context.Background())
}

func (i ScaleSetOsProfileWindowsConfigArgs) ToScaleSetOsProfileWindowsConfigPtrOutputWithContext(ctx context.Context) ScaleSetOsProfileWindowsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetOsProfileWindowsConfigOutput).ToScaleSetOsProfileWindowsConfigPtrOutputWithContext(ctx)
}

// ScaleSetOsProfileWindowsConfigPtrInput is an input type that accepts ScaleSetOsProfileWindowsConfigArgs, ScaleSetOsProfileWindowsConfigPtr and ScaleSetOsProfileWindowsConfigPtrOutput values.
// You can construct a concrete instance of `ScaleSetOsProfileWindowsConfigPtrInput` via:
//
// 		 ScaleSetOsProfileWindowsConfigArgs{...}
//
//  or:
//
// 		 nil
//
type ScaleSetOsProfileWindowsConfigPtrInput interface {
	pulumi.Input

	ToScaleSetOsProfileWindowsConfigPtrOutput() ScaleSetOsProfileWindowsConfigPtrOutput
	ToScaleSetOsProfileWindowsConfigPtrOutputWithContext(context.Context) ScaleSetOsProfileWindowsConfigPtrOutput
}

type scaleSetOsProfileWindowsConfigPtrType ScaleSetOsProfileWindowsConfigArgs

func ScaleSetOsProfileWindowsConfigPtr(v *ScaleSetOsProfileWindowsConfigArgs) ScaleSetOsProfileWindowsConfigPtrInput {
	return (*scaleSetOsProfileWindowsConfigPtrType)(v)
}

func (*scaleSetOsProfileWindowsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSetOsProfileWindowsConfig)(nil)).Elem()
}

func (i *scaleSetOsProfileWindowsConfigPtrType) ToScaleSetOsProfileWindowsConfigPtrOutput() ScaleSetOsProfileWindowsConfigPtrOutput {
	return i.ToScaleSetOsProfileWindowsConfigPtrOutputWithContext(context.Background())
}

func (i *scaleSetOsProfileWindowsConfigPtrType) ToScaleSetOsProfileWindowsConfigPtrOutputWithContext(ctx context.Context) ScaleSetOsProfileWindowsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetOsProfileWindowsConfigPtrOutput)
}

type ScaleSetOsProfileWindowsConfigOutput struct{ *pulumi.OutputState }

func (ScaleSetOsProfileWindowsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetOsProfileWindowsConfig)(nil)).Elem()
}

func (o ScaleSetOsProfileWindowsConfigOutput) ToScaleSetOsProfileWindowsConfigOutput() ScaleSetOsProfileWindowsConfigOutput {
	return o
}

func (o ScaleSetOsProfileWindowsConfigOutput) ToScaleSetOsProfileWindowsConfigOutputWithContext(ctx context.Context) ScaleSetOsProfileWindowsConfigOutput {
	return o
}

func (o ScaleSetOsProfileWindowsConfigOutput) ToScaleSetOsProfileWindowsConfigPtrOutput() ScaleSetOsProfileWindowsConfigPtrOutput {
	return o.ToScaleSetOsProfileWindowsConfigPtrOutputWithContext(context.Background())
}

func (o ScaleSetOsProfileWindowsConfigOutput) ToScaleSetOsProfileWindowsConfigPtrOutputWithContext(ctx context.Context) ScaleSetOsProfileWindowsConfigPtrOutput {
	return o.ApplyT(func(v ScaleSetOsProfileWindowsConfig) *ScaleSetOsProfileWindowsConfig {
		return &v
	}).(ScaleSetOsProfileWindowsConfigPtrOutput)
}

// An Additional Unattended Config block as documented below.
func (o ScaleSetOsProfileWindowsConfigOutput) AdditionalUnattendConfigs() ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput {
	return o.ApplyT(func(v ScaleSetOsProfileWindowsConfig) []ScaleSetOsProfileWindowsConfigAdditionalUnattendConfig {
		return v.AdditionalUnattendConfigs
	}).(ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput)
}

// Indicates whether virtual machines in the scale set are enabled for automatic updates.
func (o ScaleSetOsProfileWindowsConfigOutput) EnableAutomaticUpgrades() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScaleSetOsProfileWindowsConfig) *bool { return v.EnableAutomaticUpgrades }).(pulumi.BoolPtrOutput)
}

// Indicates whether virtual machine agent should be provisioned on the virtual machines in the scale set.
func (o ScaleSetOsProfileWindowsConfigOutput) ProvisionVmAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScaleSetOsProfileWindowsConfig) *bool { return v.ProvisionVmAgent }).(pulumi.BoolPtrOutput)
}

// A collection of WinRM configuration blocks as documented below.
func (o ScaleSetOsProfileWindowsConfigOutput) Winrms() ScaleSetOsProfileWindowsConfigWinrmArrayOutput {
	return o.ApplyT(func(v ScaleSetOsProfileWindowsConfig) []ScaleSetOsProfileWindowsConfigWinrm { return v.Winrms }).(ScaleSetOsProfileWindowsConfigWinrmArrayOutput)
}

type ScaleSetOsProfileWindowsConfigPtrOutput struct{ *pulumi.OutputState }

func (ScaleSetOsProfileWindowsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSetOsProfileWindowsConfig)(nil)).Elem()
}

func (o ScaleSetOsProfileWindowsConfigPtrOutput) ToScaleSetOsProfileWindowsConfigPtrOutput() ScaleSetOsProfileWindowsConfigPtrOutput {
	return o
}

func (o ScaleSetOsProfileWindowsConfigPtrOutput) ToScaleSetOsProfileWindowsConfigPtrOutputWithContext(ctx context.Context) ScaleSetOsProfileWindowsConfigPtrOutput {
	return o
}

func (o ScaleSetOsProfileWindowsConfigPtrOutput) Elem() ScaleSetOsProfileWindowsConfigOutput {
	return o.ApplyT(func(v *ScaleSetOsProfileWindowsConfig) ScaleSetOsProfileWindowsConfig { return *v }).(ScaleSetOsProfileWindowsConfigOutput)
}

// An Additional Unattended Config block as documented below.
func (o ScaleSetOsProfileWindowsConfigPtrOutput) AdditionalUnattendConfigs() ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput {
	return o.ApplyT(func(v *ScaleSetOsProfileWindowsConfig) []ScaleSetOsProfileWindowsConfigAdditionalUnattendConfig {
		if v == nil {
			return nil
		}
		return v.AdditionalUnattendConfigs
	}).(ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput)
}

// Indicates whether virtual machines in the scale set are enabled for automatic updates.
func (o ScaleSetOsProfileWindowsConfigPtrOutput) EnableAutomaticUpgrades() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScaleSetOsProfileWindowsConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAutomaticUpgrades
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether virtual machine agent should be provisioned on the virtual machines in the scale set.
func (o ScaleSetOsProfileWindowsConfigPtrOutput) ProvisionVmAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScaleSetOsProfileWindowsConfig) *bool {
		if v == nil {
			return nil
		}
		return v.ProvisionVmAgent
	}).(pulumi.BoolPtrOutput)
}

// A collection of WinRM configuration blocks as documented below.
func (o ScaleSetOsProfileWindowsConfigPtrOutput) Winrms() ScaleSetOsProfileWindowsConfigWinrmArrayOutput {
	return o.ApplyT(func(v *ScaleSetOsProfileWindowsConfig) []ScaleSetOsProfileWindowsConfigWinrm {
		if v == nil {
			return nil
		}
		return v.Winrms
	}).(ScaleSetOsProfileWindowsConfigWinrmArrayOutput)
}

type ScaleSetOsProfileWindowsConfigAdditionalUnattendConfig struct {
	// Specifies the name of the component to configure with the added content. The only allowable value is `Microsoft-Windows-Shell-Setup`.
	Component string `pulumi:"component"`
	// Specifies the base-64 encoded XML formatted content that is added to the unattend.xml file for the specified path and component.
	Content string `pulumi:"content"`
	// Specifies the name of the pass that the content applies to. The only allowable value is `oobeSystem`.
	Pass string `pulumi:"pass"`
	// Specifies the name of the setting to which the content applies. Possible values are: `FirstLogonCommands` and `AutoLogon`.
	SettingName string `pulumi:"settingName"`
}

// ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigInput is an input type that accepts ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArgs and ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigOutput values.
// You can construct a concrete instance of `ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigInput` via:
//
// 		 ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArgs{...}
//
type ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigInput interface {
	pulumi.Input

	ToScaleSetOsProfileWindowsConfigAdditionalUnattendConfigOutput() ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigOutput
	ToScaleSetOsProfileWindowsConfigAdditionalUnattendConfigOutputWithContext(context.Context) ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigOutput
}

type ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArgs struct {
	// Specifies the name of the component to configure with the added content. The only allowable value is `Microsoft-Windows-Shell-Setup`.
	Component pulumi.StringInput `pulumi:"component"`
	// Specifies the base-64 encoded XML formatted content that is added to the unattend.xml file for the specified path and component.
	Content pulumi.StringInput `pulumi:"content"`
	// Specifies the name of the pass that the content applies to. The only allowable value is `oobeSystem`.
	Pass pulumi.StringInput `pulumi:"pass"`
	// Specifies the name of the setting to which the content applies. Possible values are: `FirstLogonCommands` and `AutoLogon`.
	SettingName pulumi.StringInput `pulumi:"settingName"`
}

func (ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetOsProfileWindowsConfigAdditionalUnattendConfig)(nil)).Elem()
}

func (i ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArgs) ToScaleSetOsProfileWindowsConfigAdditionalUnattendConfigOutput() ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigOutput {
	return i.ToScaleSetOsProfileWindowsConfigAdditionalUnattendConfigOutputWithContext(context.Background())
}

func (i ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArgs) ToScaleSetOsProfileWindowsConfigAdditionalUnattendConfigOutputWithContext(ctx context.Context) ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigOutput)
}

// ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArrayInput is an input type that accepts ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArray and ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput values.
// You can construct a concrete instance of `ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArrayInput` via:
//
// 		 ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArray{ ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArgs{...} }
//
type ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArrayInput interface {
	pulumi.Input

	ToScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput() ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput
	ToScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArrayOutputWithContext(context.Context) ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput
}

type ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArray []ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigInput

func (ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleSetOsProfileWindowsConfigAdditionalUnattendConfig)(nil)).Elem()
}

func (i ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArray) ToScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput() ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput {
	return i.ToScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArrayOutputWithContext(context.Background())
}

func (i ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArray) ToScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArrayOutputWithContext(ctx context.Context) ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput)
}

type ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigOutput struct{ *pulumi.OutputState }

func (ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetOsProfileWindowsConfigAdditionalUnattendConfig)(nil)).Elem()
}

func (o ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigOutput) ToScaleSetOsProfileWindowsConfigAdditionalUnattendConfigOutput() ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigOutput {
	return o
}

func (o ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigOutput) ToScaleSetOsProfileWindowsConfigAdditionalUnattendConfigOutputWithContext(ctx context.Context) ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigOutput {
	return o
}

// Specifies the name of the component to configure with the added content. The only allowable value is `Microsoft-Windows-Shell-Setup`.
func (o ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigOutput) Component() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleSetOsProfileWindowsConfigAdditionalUnattendConfig) string { return v.Component }).(pulumi.StringOutput)
}

// Specifies the base-64 encoded XML formatted content that is added to the unattend.xml file for the specified path and component.
func (o ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleSetOsProfileWindowsConfigAdditionalUnattendConfig) string { return v.Content }).(pulumi.StringOutput)
}

// Specifies the name of the pass that the content applies to. The only allowable value is `oobeSystem`.
func (o ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigOutput) Pass() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleSetOsProfileWindowsConfigAdditionalUnattendConfig) string { return v.Pass }).(pulumi.StringOutput)
}

// Specifies the name of the setting to which the content applies. Possible values are: `FirstLogonCommands` and `AutoLogon`.
func (o ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigOutput) SettingName() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleSetOsProfileWindowsConfigAdditionalUnattendConfig) string { return v.SettingName }).(pulumi.StringOutput)
}

type ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput struct{ *pulumi.OutputState }

func (ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleSetOsProfileWindowsConfigAdditionalUnattendConfig)(nil)).Elem()
}

func (o ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput) ToScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput() ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput {
	return o
}

func (o ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput) ToScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArrayOutputWithContext(ctx context.Context) ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput {
	return o
}

func (o ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput) Index(i pulumi.IntInput) ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScaleSetOsProfileWindowsConfigAdditionalUnattendConfig {
		return vs[0].([]ScaleSetOsProfileWindowsConfigAdditionalUnattendConfig)[vs[1].(int)]
	}).(ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigOutput)
}

type ScaleSetOsProfileWindowsConfigWinrm struct {
	// Specifies URL of the certificate with which new Virtual Machines is provisioned.
	CertificateUrl *string `pulumi:"certificateUrl"`
	// Specifies the protocol of listener
	Protocol string `pulumi:"protocol"`
}

// ScaleSetOsProfileWindowsConfigWinrmInput is an input type that accepts ScaleSetOsProfileWindowsConfigWinrmArgs and ScaleSetOsProfileWindowsConfigWinrmOutput values.
// You can construct a concrete instance of `ScaleSetOsProfileWindowsConfigWinrmInput` via:
//
// 		 ScaleSetOsProfileWindowsConfigWinrmArgs{...}
//
type ScaleSetOsProfileWindowsConfigWinrmInput interface {
	pulumi.Input

	ToScaleSetOsProfileWindowsConfigWinrmOutput() ScaleSetOsProfileWindowsConfigWinrmOutput
	ToScaleSetOsProfileWindowsConfigWinrmOutputWithContext(context.Context) ScaleSetOsProfileWindowsConfigWinrmOutput
}

type ScaleSetOsProfileWindowsConfigWinrmArgs struct {
	// Specifies URL of the certificate with which new Virtual Machines is provisioned.
	CertificateUrl pulumi.StringPtrInput `pulumi:"certificateUrl"`
	// Specifies the protocol of listener
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (ScaleSetOsProfileWindowsConfigWinrmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetOsProfileWindowsConfigWinrm)(nil)).Elem()
}

func (i ScaleSetOsProfileWindowsConfigWinrmArgs) ToScaleSetOsProfileWindowsConfigWinrmOutput() ScaleSetOsProfileWindowsConfigWinrmOutput {
	return i.ToScaleSetOsProfileWindowsConfigWinrmOutputWithContext(context.Background())
}

func (i ScaleSetOsProfileWindowsConfigWinrmArgs) ToScaleSetOsProfileWindowsConfigWinrmOutputWithContext(ctx context.Context) ScaleSetOsProfileWindowsConfigWinrmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetOsProfileWindowsConfigWinrmOutput)
}

// ScaleSetOsProfileWindowsConfigWinrmArrayInput is an input type that accepts ScaleSetOsProfileWindowsConfigWinrmArray and ScaleSetOsProfileWindowsConfigWinrmArrayOutput values.
// You can construct a concrete instance of `ScaleSetOsProfileWindowsConfigWinrmArrayInput` via:
//
// 		 ScaleSetOsProfileWindowsConfigWinrmArray{ ScaleSetOsProfileWindowsConfigWinrmArgs{...} }
//
type ScaleSetOsProfileWindowsConfigWinrmArrayInput interface {
	pulumi.Input

	ToScaleSetOsProfileWindowsConfigWinrmArrayOutput() ScaleSetOsProfileWindowsConfigWinrmArrayOutput
	ToScaleSetOsProfileWindowsConfigWinrmArrayOutputWithContext(context.Context) ScaleSetOsProfileWindowsConfigWinrmArrayOutput
}

type ScaleSetOsProfileWindowsConfigWinrmArray []ScaleSetOsProfileWindowsConfigWinrmInput

func (ScaleSetOsProfileWindowsConfigWinrmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleSetOsProfileWindowsConfigWinrm)(nil)).Elem()
}

func (i ScaleSetOsProfileWindowsConfigWinrmArray) ToScaleSetOsProfileWindowsConfigWinrmArrayOutput() ScaleSetOsProfileWindowsConfigWinrmArrayOutput {
	return i.ToScaleSetOsProfileWindowsConfigWinrmArrayOutputWithContext(context.Background())
}

func (i ScaleSetOsProfileWindowsConfigWinrmArray) ToScaleSetOsProfileWindowsConfigWinrmArrayOutputWithContext(ctx context.Context) ScaleSetOsProfileWindowsConfigWinrmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetOsProfileWindowsConfigWinrmArrayOutput)
}

type ScaleSetOsProfileWindowsConfigWinrmOutput struct{ *pulumi.OutputState }

func (ScaleSetOsProfileWindowsConfigWinrmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetOsProfileWindowsConfigWinrm)(nil)).Elem()
}

func (o ScaleSetOsProfileWindowsConfigWinrmOutput) ToScaleSetOsProfileWindowsConfigWinrmOutput() ScaleSetOsProfileWindowsConfigWinrmOutput {
	return o
}

func (o ScaleSetOsProfileWindowsConfigWinrmOutput) ToScaleSetOsProfileWindowsConfigWinrmOutputWithContext(ctx context.Context) ScaleSetOsProfileWindowsConfigWinrmOutput {
	return o
}

// Specifies URL of the certificate with which new Virtual Machines is provisioned.
func (o ScaleSetOsProfileWindowsConfigWinrmOutput) CertificateUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSetOsProfileWindowsConfigWinrm) *string { return v.CertificateUrl }).(pulumi.StringPtrOutput)
}

// Specifies the protocol of listener
func (o ScaleSetOsProfileWindowsConfigWinrmOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleSetOsProfileWindowsConfigWinrm) string { return v.Protocol }).(pulumi.StringOutput)
}

type ScaleSetOsProfileWindowsConfigWinrmArrayOutput struct{ *pulumi.OutputState }

func (ScaleSetOsProfileWindowsConfigWinrmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleSetOsProfileWindowsConfigWinrm)(nil)).Elem()
}

func (o ScaleSetOsProfileWindowsConfigWinrmArrayOutput) ToScaleSetOsProfileWindowsConfigWinrmArrayOutput() ScaleSetOsProfileWindowsConfigWinrmArrayOutput {
	return o
}

func (o ScaleSetOsProfileWindowsConfigWinrmArrayOutput) ToScaleSetOsProfileWindowsConfigWinrmArrayOutputWithContext(ctx context.Context) ScaleSetOsProfileWindowsConfigWinrmArrayOutput {
	return o
}

func (o ScaleSetOsProfileWindowsConfigWinrmArrayOutput) Index(i pulumi.IntInput) ScaleSetOsProfileWindowsConfigWinrmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScaleSetOsProfileWindowsConfigWinrm {
		return vs[0].([]ScaleSetOsProfileWindowsConfigWinrm)[vs[1].(int)]
	}).(ScaleSetOsProfileWindowsConfigWinrmOutput)
}

type ScaleSetPlan struct {
	// Specifies the name of the image from the marketplace.
	Name string `pulumi:"name"`
	// Specifies the product of the image from the marketplace.
	Product string `pulumi:"product"`
	// Specifies the publisher of the image.
	Publisher string `pulumi:"publisher"`
}

// ScaleSetPlanInput is an input type that accepts ScaleSetPlanArgs and ScaleSetPlanOutput values.
// You can construct a concrete instance of `ScaleSetPlanInput` via:
//
// 		 ScaleSetPlanArgs{...}
//
type ScaleSetPlanInput interface {
	pulumi.Input

	ToScaleSetPlanOutput() ScaleSetPlanOutput
	ToScaleSetPlanOutputWithContext(context.Context) ScaleSetPlanOutput
}

type ScaleSetPlanArgs struct {
	// Specifies the name of the image from the marketplace.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the product of the image from the marketplace.
	Product pulumi.StringInput `pulumi:"product"`
	// Specifies the publisher of the image.
	Publisher pulumi.StringInput `pulumi:"publisher"`
}

func (ScaleSetPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetPlan)(nil)).Elem()
}

func (i ScaleSetPlanArgs) ToScaleSetPlanOutput() ScaleSetPlanOutput {
	return i.ToScaleSetPlanOutputWithContext(context.Background())
}

func (i ScaleSetPlanArgs) ToScaleSetPlanOutputWithContext(ctx context.Context) ScaleSetPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetPlanOutput)
}

func (i ScaleSetPlanArgs) ToScaleSetPlanPtrOutput() ScaleSetPlanPtrOutput {
	return i.ToScaleSetPlanPtrOutputWithContext(context.Background())
}

func (i ScaleSetPlanArgs) ToScaleSetPlanPtrOutputWithContext(ctx context.Context) ScaleSetPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetPlanOutput).ToScaleSetPlanPtrOutputWithContext(ctx)
}

// ScaleSetPlanPtrInput is an input type that accepts ScaleSetPlanArgs, ScaleSetPlanPtr and ScaleSetPlanPtrOutput values.
// You can construct a concrete instance of `ScaleSetPlanPtrInput` via:
//
// 		 ScaleSetPlanArgs{...}
//
//  or:
//
// 		 nil
//
type ScaleSetPlanPtrInput interface {
	pulumi.Input

	ToScaleSetPlanPtrOutput() ScaleSetPlanPtrOutput
	ToScaleSetPlanPtrOutputWithContext(context.Context) ScaleSetPlanPtrOutput
}

type scaleSetPlanPtrType ScaleSetPlanArgs

func ScaleSetPlanPtr(v *ScaleSetPlanArgs) ScaleSetPlanPtrInput {
	return (*scaleSetPlanPtrType)(v)
}

func (*scaleSetPlanPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSetPlan)(nil)).Elem()
}

func (i *scaleSetPlanPtrType) ToScaleSetPlanPtrOutput() ScaleSetPlanPtrOutput {
	return i.ToScaleSetPlanPtrOutputWithContext(context.Background())
}

func (i *scaleSetPlanPtrType) ToScaleSetPlanPtrOutputWithContext(ctx context.Context) ScaleSetPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetPlanPtrOutput)
}

type ScaleSetPlanOutput struct{ *pulumi.OutputState }

func (ScaleSetPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetPlan)(nil)).Elem()
}

func (o ScaleSetPlanOutput) ToScaleSetPlanOutput() ScaleSetPlanOutput {
	return o
}

func (o ScaleSetPlanOutput) ToScaleSetPlanOutputWithContext(ctx context.Context) ScaleSetPlanOutput {
	return o
}

func (o ScaleSetPlanOutput) ToScaleSetPlanPtrOutput() ScaleSetPlanPtrOutput {
	return o.ToScaleSetPlanPtrOutputWithContext(context.Background())
}

func (o ScaleSetPlanOutput) ToScaleSetPlanPtrOutputWithContext(ctx context.Context) ScaleSetPlanPtrOutput {
	return o.ApplyT(func(v ScaleSetPlan) *ScaleSetPlan {
		return &v
	}).(ScaleSetPlanPtrOutput)
}

// Specifies the name of the image from the marketplace.
func (o ScaleSetPlanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleSetPlan) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the product of the image from the marketplace.
func (o ScaleSetPlanOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleSetPlan) string { return v.Product }).(pulumi.StringOutput)
}

// Specifies the publisher of the image.
func (o ScaleSetPlanOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleSetPlan) string { return v.Publisher }).(pulumi.StringOutput)
}

type ScaleSetPlanPtrOutput struct{ *pulumi.OutputState }

func (ScaleSetPlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSetPlan)(nil)).Elem()
}

func (o ScaleSetPlanPtrOutput) ToScaleSetPlanPtrOutput() ScaleSetPlanPtrOutput {
	return o
}

func (o ScaleSetPlanPtrOutput) ToScaleSetPlanPtrOutputWithContext(ctx context.Context) ScaleSetPlanPtrOutput {
	return o
}

func (o ScaleSetPlanPtrOutput) Elem() ScaleSetPlanOutput {
	return o.ApplyT(func(v *ScaleSetPlan) ScaleSetPlan { return *v }).(ScaleSetPlanOutput)
}

// Specifies the name of the image from the marketplace.
func (o ScaleSetPlanPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSetPlan) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies the product of the image from the marketplace.
func (o ScaleSetPlanPtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSetPlan) *string {
		if v == nil {
			return nil
		}
		return &v.Product
	}).(pulumi.StringPtrOutput)
}

// Specifies the publisher of the image.
func (o ScaleSetPlanPtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSetPlan) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

type ScaleSetRollingUpgradePolicy struct {
	// The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. Defaults to `20`.
	MaxBatchInstancePercent *int `pulumi:"maxBatchInstancePercent"`
	// The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. Defaults to `20`.
	MaxUnhealthyInstancePercent *int `pulumi:"maxUnhealthyInstancePercent"`
	// The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. Defaults to `20`.
	MaxUnhealthyUpgradedInstancePercent *int `pulumi:"maxUnhealthyUpgradedInstancePercent"`
	// The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format for duration (https://en.wikipedia.org/wiki/ISO_8601#Durations). Defaults to `0` seconds represented as `PT0S`.
	PauseTimeBetweenBatches *string `pulumi:"pauseTimeBetweenBatches"`
}

// ScaleSetRollingUpgradePolicyInput is an input type that accepts ScaleSetRollingUpgradePolicyArgs and ScaleSetRollingUpgradePolicyOutput values.
// You can construct a concrete instance of `ScaleSetRollingUpgradePolicyInput` via:
//
// 		 ScaleSetRollingUpgradePolicyArgs{...}
//
type ScaleSetRollingUpgradePolicyInput interface {
	pulumi.Input

	ToScaleSetRollingUpgradePolicyOutput() ScaleSetRollingUpgradePolicyOutput
	ToScaleSetRollingUpgradePolicyOutputWithContext(context.Context) ScaleSetRollingUpgradePolicyOutput
}

type ScaleSetRollingUpgradePolicyArgs struct {
	// The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. Defaults to `20`.
	MaxBatchInstancePercent pulumi.IntPtrInput `pulumi:"maxBatchInstancePercent"`
	// The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. Defaults to `20`.
	MaxUnhealthyInstancePercent pulumi.IntPtrInput `pulumi:"maxUnhealthyInstancePercent"`
	// The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. Defaults to `20`.
	MaxUnhealthyUpgradedInstancePercent pulumi.IntPtrInput `pulumi:"maxUnhealthyUpgradedInstancePercent"`
	// The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format for duration (https://en.wikipedia.org/wiki/ISO_8601#Durations). Defaults to `0` seconds represented as `PT0S`.
	PauseTimeBetweenBatches pulumi.StringPtrInput `pulumi:"pauseTimeBetweenBatches"`
}

func (ScaleSetRollingUpgradePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetRollingUpgradePolicy)(nil)).Elem()
}

func (i ScaleSetRollingUpgradePolicyArgs) ToScaleSetRollingUpgradePolicyOutput() ScaleSetRollingUpgradePolicyOutput {
	return i.ToScaleSetRollingUpgradePolicyOutputWithContext(context.Background())
}

func (i ScaleSetRollingUpgradePolicyArgs) ToScaleSetRollingUpgradePolicyOutputWithContext(ctx context.Context) ScaleSetRollingUpgradePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetRollingUpgradePolicyOutput)
}

func (i ScaleSetRollingUpgradePolicyArgs) ToScaleSetRollingUpgradePolicyPtrOutput() ScaleSetRollingUpgradePolicyPtrOutput {
	return i.ToScaleSetRollingUpgradePolicyPtrOutputWithContext(context.Background())
}

func (i ScaleSetRollingUpgradePolicyArgs) ToScaleSetRollingUpgradePolicyPtrOutputWithContext(ctx context.Context) ScaleSetRollingUpgradePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetRollingUpgradePolicyOutput).ToScaleSetRollingUpgradePolicyPtrOutputWithContext(ctx)
}

// ScaleSetRollingUpgradePolicyPtrInput is an input type that accepts ScaleSetRollingUpgradePolicyArgs, ScaleSetRollingUpgradePolicyPtr and ScaleSetRollingUpgradePolicyPtrOutput values.
// You can construct a concrete instance of `ScaleSetRollingUpgradePolicyPtrInput` via:
//
// 		 ScaleSetRollingUpgradePolicyArgs{...}
//
//  or:
//
// 		 nil
//
type ScaleSetRollingUpgradePolicyPtrInput interface {
	pulumi.Input

	ToScaleSetRollingUpgradePolicyPtrOutput() ScaleSetRollingUpgradePolicyPtrOutput
	ToScaleSetRollingUpgradePolicyPtrOutputWithContext(context.Context) ScaleSetRollingUpgradePolicyPtrOutput
}

type scaleSetRollingUpgradePolicyPtrType ScaleSetRollingUpgradePolicyArgs

func ScaleSetRollingUpgradePolicyPtr(v *ScaleSetRollingUpgradePolicyArgs) ScaleSetRollingUpgradePolicyPtrInput {
	return (*scaleSetRollingUpgradePolicyPtrType)(v)
}

func (*scaleSetRollingUpgradePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSetRollingUpgradePolicy)(nil)).Elem()
}

func (i *scaleSetRollingUpgradePolicyPtrType) ToScaleSetRollingUpgradePolicyPtrOutput() ScaleSetRollingUpgradePolicyPtrOutput {
	return i.ToScaleSetRollingUpgradePolicyPtrOutputWithContext(context.Background())
}

func (i *scaleSetRollingUpgradePolicyPtrType) ToScaleSetRollingUpgradePolicyPtrOutputWithContext(ctx context.Context) ScaleSetRollingUpgradePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetRollingUpgradePolicyPtrOutput)
}

type ScaleSetRollingUpgradePolicyOutput struct{ *pulumi.OutputState }

func (ScaleSetRollingUpgradePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetRollingUpgradePolicy)(nil)).Elem()
}

func (o ScaleSetRollingUpgradePolicyOutput) ToScaleSetRollingUpgradePolicyOutput() ScaleSetRollingUpgradePolicyOutput {
	return o
}

func (o ScaleSetRollingUpgradePolicyOutput) ToScaleSetRollingUpgradePolicyOutputWithContext(ctx context.Context) ScaleSetRollingUpgradePolicyOutput {
	return o
}

func (o ScaleSetRollingUpgradePolicyOutput) ToScaleSetRollingUpgradePolicyPtrOutput() ScaleSetRollingUpgradePolicyPtrOutput {
	return o.ToScaleSetRollingUpgradePolicyPtrOutputWithContext(context.Background())
}

func (o ScaleSetRollingUpgradePolicyOutput) ToScaleSetRollingUpgradePolicyPtrOutputWithContext(ctx context.Context) ScaleSetRollingUpgradePolicyPtrOutput {
	return o.ApplyT(func(v ScaleSetRollingUpgradePolicy) *ScaleSetRollingUpgradePolicy {
		return &v
	}).(ScaleSetRollingUpgradePolicyPtrOutput)
}

// The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. Defaults to `20`.
func (o ScaleSetRollingUpgradePolicyOutput) MaxBatchInstancePercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScaleSetRollingUpgradePolicy) *int { return v.MaxBatchInstancePercent }).(pulumi.IntPtrOutput)
}

// The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. Defaults to `20`.
func (o ScaleSetRollingUpgradePolicyOutput) MaxUnhealthyInstancePercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScaleSetRollingUpgradePolicy) *int { return v.MaxUnhealthyInstancePercent }).(pulumi.IntPtrOutput)
}

// The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. Defaults to `20`.
func (o ScaleSetRollingUpgradePolicyOutput) MaxUnhealthyUpgradedInstancePercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScaleSetRollingUpgradePolicy) *int { return v.MaxUnhealthyUpgradedInstancePercent }).(pulumi.IntPtrOutput)
}

// The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format for duration (https://en.wikipedia.org/wiki/ISO_8601#Durations). Defaults to `0` seconds represented as `PT0S`.
func (o ScaleSetRollingUpgradePolicyOutput) PauseTimeBetweenBatches() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSetRollingUpgradePolicy) *string { return v.PauseTimeBetweenBatches }).(pulumi.StringPtrOutput)
}

type ScaleSetRollingUpgradePolicyPtrOutput struct{ *pulumi.OutputState }

func (ScaleSetRollingUpgradePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSetRollingUpgradePolicy)(nil)).Elem()
}

func (o ScaleSetRollingUpgradePolicyPtrOutput) ToScaleSetRollingUpgradePolicyPtrOutput() ScaleSetRollingUpgradePolicyPtrOutput {
	return o
}

func (o ScaleSetRollingUpgradePolicyPtrOutput) ToScaleSetRollingUpgradePolicyPtrOutputWithContext(ctx context.Context) ScaleSetRollingUpgradePolicyPtrOutput {
	return o
}

func (o ScaleSetRollingUpgradePolicyPtrOutput) Elem() ScaleSetRollingUpgradePolicyOutput {
	return o.ApplyT(func(v *ScaleSetRollingUpgradePolicy) ScaleSetRollingUpgradePolicy { return *v }).(ScaleSetRollingUpgradePolicyOutput)
}

// The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. Defaults to `20`.
func (o ScaleSetRollingUpgradePolicyPtrOutput) MaxBatchInstancePercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleSetRollingUpgradePolicy) *int {
		if v == nil {
			return nil
		}
		return v.MaxBatchInstancePercent
	}).(pulumi.IntPtrOutput)
}

// The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. Defaults to `20`.
func (o ScaleSetRollingUpgradePolicyPtrOutput) MaxUnhealthyInstancePercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleSetRollingUpgradePolicy) *int {
		if v == nil {
			return nil
		}
		return v.MaxUnhealthyInstancePercent
	}).(pulumi.IntPtrOutput)
}

// The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. Defaults to `20`.
func (o ScaleSetRollingUpgradePolicyPtrOutput) MaxUnhealthyUpgradedInstancePercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleSetRollingUpgradePolicy) *int {
		if v == nil {
			return nil
		}
		return v.MaxUnhealthyUpgradedInstancePercent
	}).(pulumi.IntPtrOutput)
}

// The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format for duration (https://en.wikipedia.org/wiki/ISO_8601#Durations). Defaults to `0` seconds represented as `PT0S`.
func (o ScaleSetRollingUpgradePolicyPtrOutput) PauseTimeBetweenBatches() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSetRollingUpgradePolicy) *string {
		if v == nil {
			return nil
		}
		return v.PauseTimeBetweenBatches
	}).(pulumi.StringPtrOutput)
}

type ScaleSetSku struct {
	// Specifies the number of virtual machines in the scale set.
	Capacity int `pulumi:"capacity"`
	// Specifies the size of virtual machines in a scale set.
	Name string `pulumi:"name"`
	// Specifies the tier of virtual machines in a scale set. Possible values, `standard` or `basic`.
	Tier *string `pulumi:"tier"`
}

// ScaleSetSkuInput is an input type that accepts ScaleSetSkuArgs and ScaleSetSkuOutput values.
// You can construct a concrete instance of `ScaleSetSkuInput` via:
//
// 		 ScaleSetSkuArgs{...}
//
type ScaleSetSkuInput interface {
	pulumi.Input

	ToScaleSetSkuOutput() ScaleSetSkuOutput
	ToScaleSetSkuOutputWithContext(context.Context) ScaleSetSkuOutput
}

type ScaleSetSkuArgs struct {
	// Specifies the number of virtual machines in the scale set.
	Capacity pulumi.IntInput `pulumi:"capacity"`
	// Specifies the size of virtual machines in a scale set.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the tier of virtual machines in a scale set. Possible values, `standard` or `basic`.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (ScaleSetSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetSku)(nil)).Elem()
}

func (i ScaleSetSkuArgs) ToScaleSetSkuOutput() ScaleSetSkuOutput {
	return i.ToScaleSetSkuOutputWithContext(context.Background())
}

func (i ScaleSetSkuArgs) ToScaleSetSkuOutputWithContext(ctx context.Context) ScaleSetSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetSkuOutput)
}

func (i ScaleSetSkuArgs) ToScaleSetSkuPtrOutput() ScaleSetSkuPtrOutput {
	return i.ToScaleSetSkuPtrOutputWithContext(context.Background())
}

func (i ScaleSetSkuArgs) ToScaleSetSkuPtrOutputWithContext(ctx context.Context) ScaleSetSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetSkuOutput).ToScaleSetSkuPtrOutputWithContext(ctx)
}

// ScaleSetSkuPtrInput is an input type that accepts ScaleSetSkuArgs, ScaleSetSkuPtr and ScaleSetSkuPtrOutput values.
// You can construct a concrete instance of `ScaleSetSkuPtrInput` via:
//
// 		 ScaleSetSkuArgs{...}
//
//  or:
//
// 		 nil
//
type ScaleSetSkuPtrInput interface {
	pulumi.Input

	ToScaleSetSkuPtrOutput() ScaleSetSkuPtrOutput
	ToScaleSetSkuPtrOutputWithContext(context.Context) ScaleSetSkuPtrOutput
}

type scaleSetSkuPtrType ScaleSetSkuArgs

func ScaleSetSkuPtr(v *ScaleSetSkuArgs) ScaleSetSkuPtrInput {
	return (*scaleSetSkuPtrType)(v)
}

func (*scaleSetSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSetSku)(nil)).Elem()
}

func (i *scaleSetSkuPtrType) ToScaleSetSkuPtrOutput() ScaleSetSkuPtrOutput {
	return i.ToScaleSetSkuPtrOutputWithContext(context.Background())
}

func (i *scaleSetSkuPtrType) ToScaleSetSkuPtrOutputWithContext(ctx context.Context) ScaleSetSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetSkuPtrOutput)
}

type ScaleSetSkuOutput struct{ *pulumi.OutputState }

func (ScaleSetSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetSku)(nil)).Elem()
}

func (o ScaleSetSkuOutput) ToScaleSetSkuOutput() ScaleSetSkuOutput {
	return o
}

func (o ScaleSetSkuOutput) ToScaleSetSkuOutputWithContext(ctx context.Context) ScaleSetSkuOutput {
	return o
}

func (o ScaleSetSkuOutput) ToScaleSetSkuPtrOutput() ScaleSetSkuPtrOutput {
	return o.ToScaleSetSkuPtrOutputWithContext(context.Background())
}

func (o ScaleSetSkuOutput) ToScaleSetSkuPtrOutputWithContext(ctx context.Context) ScaleSetSkuPtrOutput {
	return o.ApplyT(func(v ScaleSetSku) *ScaleSetSku {
		return &v
	}).(ScaleSetSkuPtrOutput)
}

// Specifies the number of virtual machines in the scale set.
func (o ScaleSetSkuOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v ScaleSetSku) int { return v.Capacity }).(pulumi.IntOutput)
}

// Specifies the size of virtual machines in a scale set.
func (o ScaleSetSkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleSetSku) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the tier of virtual machines in a scale set. Possible values, `standard` or `basic`.
func (o ScaleSetSkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSetSku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ScaleSetSkuPtrOutput struct{ *pulumi.OutputState }

func (ScaleSetSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSetSku)(nil)).Elem()
}

func (o ScaleSetSkuPtrOutput) ToScaleSetSkuPtrOutput() ScaleSetSkuPtrOutput {
	return o
}

func (o ScaleSetSkuPtrOutput) ToScaleSetSkuPtrOutputWithContext(ctx context.Context) ScaleSetSkuPtrOutput {
	return o
}

func (o ScaleSetSkuPtrOutput) Elem() ScaleSetSkuOutput {
	return o.ApplyT(func(v *ScaleSetSku) ScaleSetSku { return *v }).(ScaleSetSkuOutput)
}

// Specifies the number of virtual machines in the scale set.
func (o ScaleSetSkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleSetSku) *int {
		if v == nil {
			return nil
		}
		return &v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Specifies the size of virtual machines in a scale set.
func (o ScaleSetSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSetSku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies the tier of virtual machines in a scale set. Possible values, `standard` or `basic`.
func (o ScaleSetSkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSetSku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

type ScaleSetStorageProfileDataDisk struct {
	// Specifies the caching requirements. Possible values include: `None` (default), `ReadOnly`, `ReadWrite`.
	Caching *string `pulumi:"caching"`
	// Specifies how the data disk should be created. The only possible options are `FromImage` and `Empty`.
	CreateOption string `pulumi:"createOption"`
	// Specifies the size of the disk in GB. This element is required when creating an empty disk.
	DiskSizeGb *int `pulumi:"diskSizeGb"`
	// Specifies the Logical Unit Number of the disk in each virtual machine in the scale set.
	Lun int `pulumi:"lun"`
	// Specifies the type of managed disk to create. Value must be either `Standard_LRS`, `StandardSSD_LRS` or `Premium_LRS`.
	ManagedDiskType *string `pulumi:"managedDiskType"`
}

// ScaleSetStorageProfileDataDiskInput is an input type that accepts ScaleSetStorageProfileDataDiskArgs and ScaleSetStorageProfileDataDiskOutput values.
// You can construct a concrete instance of `ScaleSetStorageProfileDataDiskInput` via:
//
// 		 ScaleSetStorageProfileDataDiskArgs{...}
//
type ScaleSetStorageProfileDataDiskInput interface {
	pulumi.Input

	ToScaleSetStorageProfileDataDiskOutput() ScaleSetStorageProfileDataDiskOutput
	ToScaleSetStorageProfileDataDiskOutputWithContext(context.Context) ScaleSetStorageProfileDataDiskOutput
}

type ScaleSetStorageProfileDataDiskArgs struct {
	// Specifies the caching requirements. Possible values include: `None` (default), `ReadOnly`, `ReadWrite`.
	Caching pulumi.StringPtrInput `pulumi:"caching"`
	// Specifies how the data disk should be created. The only possible options are `FromImage` and `Empty`.
	CreateOption pulumi.StringInput `pulumi:"createOption"`
	// Specifies the size of the disk in GB. This element is required when creating an empty disk.
	DiskSizeGb pulumi.IntPtrInput `pulumi:"diskSizeGb"`
	// Specifies the Logical Unit Number of the disk in each virtual machine in the scale set.
	Lun pulumi.IntInput `pulumi:"lun"`
	// Specifies the type of managed disk to create. Value must be either `Standard_LRS`, `StandardSSD_LRS` or `Premium_LRS`.
	ManagedDiskType pulumi.StringPtrInput `pulumi:"managedDiskType"`
}

func (ScaleSetStorageProfileDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetStorageProfileDataDisk)(nil)).Elem()
}

func (i ScaleSetStorageProfileDataDiskArgs) ToScaleSetStorageProfileDataDiskOutput() ScaleSetStorageProfileDataDiskOutput {
	return i.ToScaleSetStorageProfileDataDiskOutputWithContext(context.Background())
}

func (i ScaleSetStorageProfileDataDiskArgs) ToScaleSetStorageProfileDataDiskOutputWithContext(ctx context.Context) ScaleSetStorageProfileDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetStorageProfileDataDiskOutput)
}

// ScaleSetStorageProfileDataDiskArrayInput is an input type that accepts ScaleSetStorageProfileDataDiskArray and ScaleSetStorageProfileDataDiskArrayOutput values.
// You can construct a concrete instance of `ScaleSetStorageProfileDataDiskArrayInput` via:
//
// 		 ScaleSetStorageProfileDataDiskArray{ ScaleSetStorageProfileDataDiskArgs{...} }
//
type ScaleSetStorageProfileDataDiskArrayInput interface {
	pulumi.Input

	ToScaleSetStorageProfileDataDiskArrayOutput() ScaleSetStorageProfileDataDiskArrayOutput
	ToScaleSetStorageProfileDataDiskArrayOutputWithContext(context.Context) ScaleSetStorageProfileDataDiskArrayOutput
}

type ScaleSetStorageProfileDataDiskArray []ScaleSetStorageProfileDataDiskInput

func (ScaleSetStorageProfileDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleSetStorageProfileDataDisk)(nil)).Elem()
}

func (i ScaleSetStorageProfileDataDiskArray) ToScaleSetStorageProfileDataDiskArrayOutput() ScaleSetStorageProfileDataDiskArrayOutput {
	return i.ToScaleSetStorageProfileDataDiskArrayOutputWithContext(context.Background())
}

func (i ScaleSetStorageProfileDataDiskArray) ToScaleSetStorageProfileDataDiskArrayOutputWithContext(ctx context.Context) ScaleSetStorageProfileDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetStorageProfileDataDiskArrayOutput)
}

type ScaleSetStorageProfileDataDiskOutput struct{ *pulumi.OutputState }

func (ScaleSetStorageProfileDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetStorageProfileDataDisk)(nil)).Elem()
}

func (o ScaleSetStorageProfileDataDiskOutput) ToScaleSetStorageProfileDataDiskOutput() ScaleSetStorageProfileDataDiskOutput {
	return o
}

func (o ScaleSetStorageProfileDataDiskOutput) ToScaleSetStorageProfileDataDiskOutputWithContext(ctx context.Context) ScaleSetStorageProfileDataDiskOutput {
	return o
}

// Specifies the caching requirements. Possible values include: `None` (default), `ReadOnly`, `ReadWrite`.
func (o ScaleSetStorageProfileDataDiskOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSetStorageProfileDataDisk) *string { return v.Caching }).(pulumi.StringPtrOutput)
}

// Specifies how the data disk should be created. The only possible options are `FromImage` and `Empty`.
func (o ScaleSetStorageProfileDataDiskOutput) CreateOption() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleSetStorageProfileDataDisk) string { return v.CreateOption }).(pulumi.StringOutput)
}

// Specifies the size of the disk in GB. This element is required when creating an empty disk.
func (o ScaleSetStorageProfileDataDiskOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScaleSetStorageProfileDataDisk) *int { return v.DiskSizeGb }).(pulumi.IntPtrOutput)
}

// Specifies the Logical Unit Number of the disk in each virtual machine in the scale set.
func (o ScaleSetStorageProfileDataDiskOutput) Lun() pulumi.IntOutput {
	return o.ApplyT(func(v ScaleSetStorageProfileDataDisk) int { return v.Lun }).(pulumi.IntOutput)
}

// Specifies the type of managed disk to create. Value must be either `Standard_LRS`, `StandardSSD_LRS` or `Premium_LRS`.
func (o ScaleSetStorageProfileDataDiskOutput) ManagedDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSetStorageProfileDataDisk) *string { return v.ManagedDiskType }).(pulumi.StringPtrOutput)
}

type ScaleSetStorageProfileDataDiskArrayOutput struct{ *pulumi.OutputState }

func (ScaleSetStorageProfileDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleSetStorageProfileDataDisk)(nil)).Elem()
}

func (o ScaleSetStorageProfileDataDiskArrayOutput) ToScaleSetStorageProfileDataDiskArrayOutput() ScaleSetStorageProfileDataDiskArrayOutput {
	return o
}

func (o ScaleSetStorageProfileDataDiskArrayOutput) ToScaleSetStorageProfileDataDiskArrayOutputWithContext(ctx context.Context) ScaleSetStorageProfileDataDiskArrayOutput {
	return o
}

func (o ScaleSetStorageProfileDataDiskArrayOutput) Index(i pulumi.IntInput) ScaleSetStorageProfileDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScaleSetStorageProfileDataDisk {
		return vs[0].([]ScaleSetStorageProfileDataDisk)[vs[1].(int)]
	}).(ScaleSetStorageProfileDataDiskOutput)
}

type ScaleSetStorageProfileImageReference struct {
	// Specifies the ID of the (custom) image to use to create the virtual
	// machine scale set, as in the example below.
	Id *string `pulumi:"id"`
	// Specifies the offer of the image used to create the virtual machines.
	Offer *string `pulumi:"offer"`
	// Specifies the publisher of the image used to create the virtual machines.
	Publisher *string `pulumi:"publisher"`
	// Specifies the SKU of the image used to create the virtual machines.
	Sku *string `pulumi:"sku"`
	// Specifies the version of the image used to create the virtual machines.
	Version *string `pulumi:"version"`
}

// ScaleSetStorageProfileImageReferenceInput is an input type that accepts ScaleSetStorageProfileImageReferenceArgs and ScaleSetStorageProfileImageReferenceOutput values.
// You can construct a concrete instance of `ScaleSetStorageProfileImageReferenceInput` via:
//
// 		 ScaleSetStorageProfileImageReferenceArgs{...}
//
type ScaleSetStorageProfileImageReferenceInput interface {
	pulumi.Input

	ToScaleSetStorageProfileImageReferenceOutput() ScaleSetStorageProfileImageReferenceOutput
	ToScaleSetStorageProfileImageReferenceOutputWithContext(context.Context) ScaleSetStorageProfileImageReferenceOutput
}

type ScaleSetStorageProfileImageReferenceArgs struct {
	// Specifies the ID of the (custom) image to use to create the virtual
	// machine scale set, as in the example below.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies the offer of the image used to create the virtual machines.
	Offer pulumi.StringPtrInput `pulumi:"offer"`
	// Specifies the publisher of the image used to create the virtual machines.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
	// Specifies the SKU of the image used to create the virtual machines.
	Sku pulumi.StringPtrInput `pulumi:"sku"`
	// Specifies the version of the image used to create the virtual machines.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ScaleSetStorageProfileImageReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetStorageProfileImageReference)(nil)).Elem()
}

func (i ScaleSetStorageProfileImageReferenceArgs) ToScaleSetStorageProfileImageReferenceOutput() ScaleSetStorageProfileImageReferenceOutput {
	return i.ToScaleSetStorageProfileImageReferenceOutputWithContext(context.Background())
}

func (i ScaleSetStorageProfileImageReferenceArgs) ToScaleSetStorageProfileImageReferenceOutputWithContext(ctx context.Context) ScaleSetStorageProfileImageReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetStorageProfileImageReferenceOutput)
}

func (i ScaleSetStorageProfileImageReferenceArgs) ToScaleSetStorageProfileImageReferencePtrOutput() ScaleSetStorageProfileImageReferencePtrOutput {
	return i.ToScaleSetStorageProfileImageReferencePtrOutputWithContext(context.Background())
}

func (i ScaleSetStorageProfileImageReferenceArgs) ToScaleSetStorageProfileImageReferencePtrOutputWithContext(ctx context.Context) ScaleSetStorageProfileImageReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetStorageProfileImageReferenceOutput).ToScaleSetStorageProfileImageReferencePtrOutputWithContext(ctx)
}

// ScaleSetStorageProfileImageReferencePtrInput is an input type that accepts ScaleSetStorageProfileImageReferenceArgs, ScaleSetStorageProfileImageReferencePtr and ScaleSetStorageProfileImageReferencePtrOutput values.
// You can construct a concrete instance of `ScaleSetStorageProfileImageReferencePtrInput` via:
//
// 		 ScaleSetStorageProfileImageReferenceArgs{...}
//
//  or:
//
// 		 nil
//
type ScaleSetStorageProfileImageReferencePtrInput interface {
	pulumi.Input

	ToScaleSetStorageProfileImageReferencePtrOutput() ScaleSetStorageProfileImageReferencePtrOutput
	ToScaleSetStorageProfileImageReferencePtrOutputWithContext(context.Context) ScaleSetStorageProfileImageReferencePtrOutput
}

type scaleSetStorageProfileImageReferencePtrType ScaleSetStorageProfileImageReferenceArgs

func ScaleSetStorageProfileImageReferencePtr(v *ScaleSetStorageProfileImageReferenceArgs) ScaleSetStorageProfileImageReferencePtrInput {
	return (*scaleSetStorageProfileImageReferencePtrType)(v)
}

func (*scaleSetStorageProfileImageReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSetStorageProfileImageReference)(nil)).Elem()
}

func (i *scaleSetStorageProfileImageReferencePtrType) ToScaleSetStorageProfileImageReferencePtrOutput() ScaleSetStorageProfileImageReferencePtrOutput {
	return i.ToScaleSetStorageProfileImageReferencePtrOutputWithContext(context.Background())
}

func (i *scaleSetStorageProfileImageReferencePtrType) ToScaleSetStorageProfileImageReferencePtrOutputWithContext(ctx context.Context) ScaleSetStorageProfileImageReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetStorageProfileImageReferencePtrOutput)
}

type ScaleSetStorageProfileImageReferenceOutput struct{ *pulumi.OutputState }

func (ScaleSetStorageProfileImageReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetStorageProfileImageReference)(nil)).Elem()
}

func (o ScaleSetStorageProfileImageReferenceOutput) ToScaleSetStorageProfileImageReferenceOutput() ScaleSetStorageProfileImageReferenceOutput {
	return o
}

func (o ScaleSetStorageProfileImageReferenceOutput) ToScaleSetStorageProfileImageReferenceOutputWithContext(ctx context.Context) ScaleSetStorageProfileImageReferenceOutput {
	return o
}

func (o ScaleSetStorageProfileImageReferenceOutput) ToScaleSetStorageProfileImageReferencePtrOutput() ScaleSetStorageProfileImageReferencePtrOutput {
	return o.ToScaleSetStorageProfileImageReferencePtrOutputWithContext(context.Background())
}

func (o ScaleSetStorageProfileImageReferenceOutput) ToScaleSetStorageProfileImageReferencePtrOutputWithContext(ctx context.Context) ScaleSetStorageProfileImageReferencePtrOutput {
	return o.ApplyT(func(v ScaleSetStorageProfileImageReference) *ScaleSetStorageProfileImageReference {
		return &v
	}).(ScaleSetStorageProfileImageReferencePtrOutput)
}

// Specifies the ID of the (custom) image to use to create the virtual
// machine scale set, as in the example below.
func (o ScaleSetStorageProfileImageReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSetStorageProfileImageReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies the offer of the image used to create the virtual machines.
func (o ScaleSetStorageProfileImageReferenceOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSetStorageProfileImageReference) *string { return v.Offer }).(pulumi.StringPtrOutput)
}

// Specifies the publisher of the image used to create the virtual machines.
func (o ScaleSetStorageProfileImageReferenceOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSetStorageProfileImageReference) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// Specifies the SKU of the image used to create the virtual machines.
func (o ScaleSetStorageProfileImageReferenceOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSetStorageProfileImageReference) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

// Specifies the version of the image used to create the virtual machines.
func (o ScaleSetStorageProfileImageReferenceOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSetStorageProfileImageReference) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ScaleSetStorageProfileImageReferencePtrOutput struct{ *pulumi.OutputState }

func (ScaleSetStorageProfileImageReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSetStorageProfileImageReference)(nil)).Elem()
}

func (o ScaleSetStorageProfileImageReferencePtrOutput) ToScaleSetStorageProfileImageReferencePtrOutput() ScaleSetStorageProfileImageReferencePtrOutput {
	return o
}

func (o ScaleSetStorageProfileImageReferencePtrOutput) ToScaleSetStorageProfileImageReferencePtrOutputWithContext(ctx context.Context) ScaleSetStorageProfileImageReferencePtrOutput {
	return o
}

func (o ScaleSetStorageProfileImageReferencePtrOutput) Elem() ScaleSetStorageProfileImageReferenceOutput {
	return o.ApplyT(func(v *ScaleSetStorageProfileImageReference) ScaleSetStorageProfileImageReference { return *v }).(ScaleSetStorageProfileImageReferenceOutput)
}

// Specifies the ID of the (custom) image to use to create the virtual
// machine scale set, as in the example below.
func (o ScaleSetStorageProfileImageReferencePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSetStorageProfileImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Specifies the offer of the image used to create the virtual machines.
func (o ScaleSetStorageProfileImageReferencePtrOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSetStorageProfileImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Offer
	}).(pulumi.StringPtrOutput)
}

// Specifies the publisher of the image used to create the virtual machines.
func (o ScaleSetStorageProfileImageReferencePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSetStorageProfileImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Specifies the SKU of the image used to create the virtual machines.
func (o ScaleSetStorageProfileImageReferencePtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSetStorageProfileImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(pulumi.StringPtrOutput)
}

// Specifies the version of the image used to create the virtual machines.
func (o ScaleSetStorageProfileImageReferencePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSetStorageProfileImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type ScaleSetStorageProfileOsDisk struct {
	// Specifies the caching requirements. Possible values include: `None` (default), `ReadOnly`, `ReadWrite`.
	Caching *string `pulumi:"caching"`
	// Specifies how the virtual machine should be created. The only possible option is `FromImage`.
	CreateOption string `pulumi:"createOption"`
	// Specifies the blob uri for user image. A virtual machine scale set creates an os disk in the same container as the user image.
	// Updating the osDisk image causes the existing disk to be deleted and a new one created with the new image. If the VM scale set is in Manual upgrade mode then the virtual machines are not updated until they have manualUpgrade applied to them.
	// When setting this field `osType` needs to be specified. Cannot be used when `vhdContainers`, `managedDiskType` or `storageProfileImageReference` are specified.
	Image *string `pulumi:"image"`
	// Specifies the type of managed disk to create. Value you must be either `Standard_LRS`, `StandardSSD_LRS` or `Premium_LRS`. Cannot be used when `vhdContainers` or `image` is specified.
	ManagedDiskType *string `pulumi:"managedDiskType"`
	// Specifies the disk name. Must be specified when using unmanaged disk ('managed_disk_type' property not set).
	Name *string `pulumi:"name"`
	// Specifies the operating system Type, valid values are windows, linux.
	OsType *string `pulumi:"osType"`
	// Specifies the vhd uri. Cannot be used when `image` or `managedDiskType` is specified.
	VhdContainers []string `pulumi:"vhdContainers"`
}

// ScaleSetStorageProfileOsDiskInput is an input type that accepts ScaleSetStorageProfileOsDiskArgs and ScaleSetStorageProfileOsDiskOutput values.
// You can construct a concrete instance of `ScaleSetStorageProfileOsDiskInput` via:
//
// 		 ScaleSetStorageProfileOsDiskArgs{...}
//
type ScaleSetStorageProfileOsDiskInput interface {
	pulumi.Input

	ToScaleSetStorageProfileOsDiskOutput() ScaleSetStorageProfileOsDiskOutput
	ToScaleSetStorageProfileOsDiskOutputWithContext(context.Context) ScaleSetStorageProfileOsDiskOutput
}

type ScaleSetStorageProfileOsDiskArgs struct {
	// Specifies the caching requirements. Possible values include: `None` (default), `ReadOnly`, `ReadWrite`.
	Caching pulumi.StringPtrInput `pulumi:"caching"`
	// Specifies how the virtual machine should be created. The only possible option is `FromImage`.
	CreateOption pulumi.StringInput `pulumi:"createOption"`
	// Specifies the blob uri for user image. A virtual machine scale set creates an os disk in the same container as the user image.
	// Updating the osDisk image causes the existing disk to be deleted and a new one created with the new image. If the VM scale set is in Manual upgrade mode then the virtual machines are not updated until they have manualUpgrade applied to them.
	// When setting this field `osType` needs to be specified. Cannot be used when `vhdContainers`, `managedDiskType` or `storageProfileImageReference` are specified.
	Image pulumi.StringPtrInput `pulumi:"image"`
	// Specifies the type of managed disk to create. Value you must be either `Standard_LRS`, `StandardSSD_LRS` or `Premium_LRS`. Cannot be used when `vhdContainers` or `image` is specified.
	ManagedDiskType pulumi.StringPtrInput `pulumi:"managedDiskType"`
	// Specifies the disk name. Must be specified when using unmanaged disk ('managed_disk_type' property not set).
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the operating system Type, valid values are windows, linux.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// Specifies the vhd uri. Cannot be used when `image` or `managedDiskType` is specified.
	VhdContainers pulumi.StringArrayInput `pulumi:"vhdContainers"`
}

func (ScaleSetStorageProfileOsDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetStorageProfileOsDisk)(nil)).Elem()
}

func (i ScaleSetStorageProfileOsDiskArgs) ToScaleSetStorageProfileOsDiskOutput() ScaleSetStorageProfileOsDiskOutput {
	return i.ToScaleSetStorageProfileOsDiskOutputWithContext(context.Background())
}

func (i ScaleSetStorageProfileOsDiskArgs) ToScaleSetStorageProfileOsDiskOutputWithContext(ctx context.Context) ScaleSetStorageProfileOsDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetStorageProfileOsDiskOutput)
}

func (i ScaleSetStorageProfileOsDiskArgs) ToScaleSetStorageProfileOsDiskPtrOutput() ScaleSetStorageProfileOsDiskPtrOutput {
	return i.ToScaleSetStorageProfileOsDiskPtrOutputWithContext(context.Background())
}

func (i ScaleSetStorageProfileOsDiskArgs) ToScaleSetStorageProfileOsDiskPtrOutputWithContext(ctx context.Context) ScaleSetStorageProfileOsDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetStorageProfileOsDiskOutput).ToScaleSetStorageProfileOsDiskPtrOutputWithContext(ctx)
}

// ScaleSetStorageProfileOsDiskPtrInput is an input type that accepts ScaleSetStorageProfileOsDiskArgs, ScaleSetStorageProfileOsDiskPtr and ScaleSetStorageProfileOsDiskPtrOutput values.
// You can construct a concrete instance of `ScaleSetStorageProfileOsDiskPtrInput` via:
//
// 		 ScaleSetStorageProfileOsDiskArgs{...}
//
//  or:
//
// 		 nil
//
type ScaleSetStorageProfileOsDiskPtrInput interface {
	pulumi.Input

	ToScaleSetStorageProfileOsDiskPtrOutput() ScaleSetStorageProfileOsDiskPtrOutput
	ToScaleSetStorageProfileOsDiskPtrOutputWithContext(context.Context) ScaleSetStorageProfileOsDiskPtrOutput
}

type scaleSetStorageProfileOsDiskPtrType ScaleSetStorageProfileOsDiskArgs

func ScaleSetStorageProfileOsDiskPtr(v *ScaleSetStorageProfileOsDiskArgs) ScaleSetStorageProfileOsDiskPtrInput {
	return (*scaleSetStorageProfileOsDiskPtrType)(v)
}

func (*scaleSetStorageProfileOsDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSetStorageProfileOsDisk)(nil)).Elem()
}

func (i *scaleSetStorageProfileOsDiskPtrType) ToScaleSetStorageProfileOsDiskPtrOutput() ScaleSetStorageProfileOsDiskPtrOutput {
	return i.ToScaleSetStorageProfileOsDiskPtrOutputWithContext(context.Background())
}

func (i *scaleSetStorageProfileOsDiskPtrType) ToScaleSetStorageProfileOsDiskPtrOutputWithContext(ctx context.Context) ScaleSetStorageProfileOsDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleSetStorageProfileOsDiskPtrOutput)
}

type ScaleSetStorageProfileOsDiskOutput struct{ *pulumi.OutputState }

func (ScaleSetStorageProfileOsDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleSetStorageProfileOsDisk)(nil)).Elem()
}

func (o ScaleSetStorageProfileOsDiskOutput) ToScaleSetStorageProfileOsDiskOutput() ScaleSetStorageProfileOsDiskOutput {
	return o
}

func (o ScaleSetStorageProfileOsDiskOutput) ToScaleSetStorageProfileOsDiskOutputWithContext(ctx context.Context) ScaleSetStorageProfileOsDiskOutput {
	return o
}

func (o ScaleSetStorageProfileOsDiskOutput) ToScaleSetStorageProfileOsDiskPtrOutput() ScaleSetStorageProfileOsDiskPtrOutput {
	return o.ToScaleSetStorageProfileOsDiskPtrOutputWithContext(context.Background())
}

func (o ScaleSetStorageProfileOsDiskOutput) ToScaleSetStorageProfileOsDiskPtrOutputWithContext(ctx context.Context) ScaleSetStorageProfileOsDiskPtrOutput {
	return o.ApplyT(func(v ScaleSetStorageProfileOsDisk) *ScaleSetStorageProfileOsDisk {
		return &v
	}).(ScaleSetStorageProfileOsDiskPtrOutput)
}

// Specifies the caching requirements. Possible values include: `None` (default), `ReadOnly`, `ReadWrite`.
func (o ScaleSetStorageProfileOsDiskOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSetStorageProfileOsDisk) *string { return v.Caching }).(pulumi.StringPtrOutput)
}

// Specifies how the virtual machine should be created. The only possible option is `FromImage`.
func (o ScaleSetStorageProfileOsDiskOutput) CreateOption() pulumi.StringOutput {
	return o.ApplyT(func(v ScaleSetStorageProfileOsDisk) string { return v.CreateOption }).(pulumi.StringOutput)
}

// Specifies the blob uri for user image. A virtual machine scale set creates an os disk in the same container as the user image.
// Updating the osDisk image causes the existing disk to be deleted and a new one created with the new image. If the VM scale set is in Manual upgrade mode then the virtual machines are not updated until they have manualUpgrade applied to them.
// When setting this field `osType` needs to be specified. Cannot be used when `vhdContainers`, `managedDiskType` or `storageProfileImageReference` are specified.
func (o ScaleSetStorageProfileOsDiskOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSetStorageProfileOsDisk) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// Specifies the type of managed disk to create. Value you must be either `Standard_LRS`, `StandardSSD_LRS` or `Premium_LRS`. Cannot be used when `vhdContainers` or `image` is specified.
func (o ScaleSetStorageProfileOsDiskOutput) ManagedDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSetStorageProfileOsDisk) *string { return v.ManagedDiskType }).(pulumi.StringPtrOutput)
}

// Specifies the disk name. Must be specified when using unmanaged disk ('managed_disk_type' property not set).
func (o ScaleSetStorageProfileOsDiskOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSetStorageProfileOsDisk) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies the operating system Type, valid values are windows, linux.
func (o ScaleSetStorageProfileOsDiskOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleSetStorageProfileOsDisk) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// Specifies the vhd uri. Cannot be used when `image` or `managedDiskType` is specified.
func (o ScaleSetStorageProfileOsDiskOutput) VhdContainers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScaleSetStorageProfileOsDisk) []string { return v.VhdContainers }).(pulumi.StringArrayOutput)
}

type ScaleSetStorageProfileOsDiskPtrOutput struct{ *pulumi.OutputState }

func (ScaleSetStorageProfileOsDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleSetStorageProfileOsDisk)(nil)).Elem()
}

func (o ScaleSetStorageProfileOsDiskPtrOutput) ToScaleSetStorageProfileOsDiskPtrOutput() ScaleSetStorageProfileOsDiskPtrOutput {
	return o
}

func (o ScaleSetStorageProfileOsDiskPtrOutput) ToScaleSetStorageProfileOsDiskPtrOutputWithContext(ctx context.Context) ScaleSetStorageProfileOsDiskPtrOutput {
	return o
}

func (o ScaleSetStorageProfileOsDiskPtrOutput) Elem() ScaleSetStorageProfileOsDiskOutput {
	return o.ApplyT(func(v *ScaleSetStorageProfileOsDisk) ScaleSetStorageProfileOsDisk { return *v }).(ScaleSetStorageProfileOsDiskOutput)
}

// Specifies the caching requirements. Possible values include: `None` (default), `ReadOnly`, `ReadWrite`.
func (o ScaleSetStorageProfileOsDiskPtrOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSetStorageProfileOsDisk) *string {
		if v == nil {
			return nil
		}
		return v.Caching
	}).(pulumi.StringPtrOutput)
}

// Specifies how the virtual machine should be created. The only possible option is `FromImage`.
func (o ScaleSetStorageProfileOsDiskPtrOutput) CreateOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSetStorageProfileOsDisk) *string {
		if v == nil {
			return nil
		}
		return &v.CreateOption
	}).(pulumi.StringPtrOutput)
}

// Specifies the blob uri for user image. A virtual machine scale set creates an os disk in the same container as the user image.
// Updating the osDisk image causes the existing disk to be deleted and a new one created with the new image. If the VM scale set is in Manual upgrade mode then the virtual machines are not updated until they have manualUpgrade applied to them.
// When setting this field `osType` needs to be specified. Cannot be used when `vhdContainers`, `managedDiskType` or `storageProfileImageReference` are specified.
func (o ScaleSetStorageProfileOsDiskPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSetStorageProfileOsDisk) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of managed disk to create. Value you must be either `Standard_LRS`, `StandardSSD_LRS` or `Premium_LRS`. Cannot be used when `vhdContainers` or `image` is specified.
func (o ScaleSetStorageProfileOsDiskPtrOutput) ManagedDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSetStorageProfileOsDisk) *string {
		if v == nil {
			return nil
		}
		return v.ManagedDiskType
	}).(pulumi.StringPtrOutput)
}

// Specifies the disk name. Must be specified when using unmanaged disk ('managed_disk_type' property not set).
func (o ScaleSetStorageProfileOsDiskPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSetStorageProfileOsDisk) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies the operating system Type, valid values are windows, linux.
func (o ScaleSetStorageProfileOsDiskPtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScaleSetStorageProfileOsDisk) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// Specifies the vhd uri. Cannot be used when `image` or `managedDiskType` is specified.
func (o ScaleSetStorageProfileOsDiskPtrOutput) VhdContainers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScaleSetStorageProfileOsDisk) []string {
		if v == nil {
			return nil
		}
		return v.VhdContainers
	}).(pulumi.StringArrayOutput)
}

type SharedImageIdentifier struct {
	// The Offer Name for this Shared Image.
	Offer string `pulumi:"offer"`
	// The Publisher Name for this Gallery Image.
	Publisher string `pulumi:"publisher"`
	// The Name of the SKU for this Gallery Image.
	Sku string `pulumi:"sku"`
}

// SharedImageIdentifierInput is an input type that accepts SharedImageIdentifierArgs and SharedImageIdentifierOutput values.
// You can construct a concrete instance of `SharedImageIdentifierInput` via:
//
// 		 SharedImageIdentifierArgs{...}
//
type SharedImageIdentifierInput interface {
	pulumi.Input

	ToSharedImageIdentifierOutput() SharedImageIdentifierOutput
	ToSharedImageIdentifierOutputWithContext(context.Context) SharedImageIdentifierOutput
}

type SharedImageIdentifierArgs struct {
	// The Offer Name for this Shared Image.
	Offer pulumi.StringInput `pulumi:"offer"`
	// The Publisher Name for this Gallery Image.
	Publisher pulumi.StringInput `pulumi:"publisher"`
	// The Name of the SKU for this Gallery Image.
	Sku pulumi.StringInput `pulumi:"sku"`
}

func (SharedImageIdentifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedImageIdentifier)(nil)).Elem()
}

func (i SharedImageIdentifierArgs) ToSharedImageIdentifierOutput() SharedImageIdentifierOutput {
	return i.ToSharedImageIdentifierOutputWithContext(context.Background())
}

func (i SharedImageIdentifierArgs) ToSharedImageIdentifierOutputWithContext(ctx context.Context) SharedImageIdentifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedImageIdentifierOutput)
}

func (i SharedImageIdentifierArgs) ToSharedImageIdentifierPtrOutput() SharedImageIdentifierPtrOutput {
	return i.ToSharedImageIdentifierPtrOutputWithContext(context.Background())
}

func (i SharedImageIdentifierArgs) ToSharedImageIdentifierPtrOutputWithContext(ctx context.Context) SharedImageIdentifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedImageIdentifierOutput).ToSharedImageIdentifierPtrOutputWithContext(ctx)
}

// SharedImageIdentifierPtrInput is an input type that accepts SharedImageIdentifierArgs, SharedImageIdentifierPtr and SharedImageIdentifierPtrOutput values.
// You can construct a concrete instance of `SharedImageIdentifierPtrInput` via:
//
// 		 SharedImageIdentifierArgs{...}
//
//  or:
//
// 		 nil
//
type SharedImageIdentifierPtrInput interface {
	pulumi.Input

	ToSharedImageIdentifierPtrOutput() SharedImageIdentifierPtrOutput
	ToSharedImageIdentifierPtrOutputWithContext(context.Context) SharedImageIdentifierPtrOutput
}

type sharedImageIdentifierPtrType SharedImageIdentifierArgs

func SharedImageIdentifierPtr(v *SharedImageIdentifierArgs) SharedImageIdentifierPtrInput {
	return (*sharedImageIdentifierPtrType)(v)
}

func (*sharedImageIdentifierPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SharedImageIdentifier)(nil)).Elem()
}

func (i *sharedImageIdentifierPtrType) ToSharedImageIdentifierPtrOutput() SharedImageIdentifierPtrOutput {
	return i.ToSharedImageIdentifierPtrOutputWithContext(context.Background())
}

func (i *sharedImageIdentifierPtrType) ToSharedImageIdentifierPtrOutputWithContext(ctx context.Context) SharedImageIdentifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedImageIdentifierPtrOutput)
}

type SharedImageIdentifierOutput struct{ *pulumi.OutputState }

func (SharedImageIdentifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedImageIdentifier)(nil)).Elem()
}

func (o SharedImageIdentifierOutput) ToSharedImageIdentifierOutput() SharedImageIdentifierOutput {
	return o
}

func (o SharedImageIdentifierOutput) ToSharedImageIdentifierOutputWithContext(ctx context.Context) SharedImageIdentifierOutput {
	return o
}

func (o SharedImageIdentifierOutput) ToSharedImageIdentifierPtrOutput() SharedImageIdentifierPtrOutput {
	return o.ToSharedImageIdentifierPtrOutputWithContext(context.Background())
}

func (o SharedImageIdentifierOutput) ToSharedImageIdentifierPtrOutputWithContext(ctx context.Context) SharedImageIdentifierPtrOutput {
	return o.ApplyT(func(v SharedImageIdentifier) *SharedImageIdentifier {
		return &v
	}).(SharedImageIdentifierPtrOutput)
}

// The Offer Name for this Shared Image.
func (o SharedImageIdentifierOutput) Offer() pulumi.StringOutput {
	return o.ApplyT(func(v SharedImageIdentifier) string { return v.Offer }).(pulumi.StringOutput)
}

// The Publisher Name for this Gallery Image.
func (o SharedImageIdentifierOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v SharedImageIdentifier) string { return v.Publisher }).(pulumi.StringOutput)
}

// The Name of the SKU for this Gallery Image.
func (o SharedImageIdentifierOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v SharedImageIdentifier) string { return v.Sku }).(pulumi.StringOutput)
}

type SharedImageIdentifierPtrOutput struct{ *pulumi.OutputState }

func (SharedImageIdentifierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SharedImageIdentifier)(nil)).Elem()
}

func (o SharedImageIdentifierPtrOutput) ToSharedImageIdentifierPtrOutput() SharedImageIdentifierPtrOutput {
	return o
}

func (o SharedImageIdentifierPtrOutput) ToSharedImageIdentifierPtrOutputWithContext(ctx context.Context) SharedImageIdentifierPtrOutput {
	return o
}

func (o SharedImageIdentifierPtrOutput) Elem() SharedImageIdentifierOutput {
	return o.ApplyT(func(v *SharedImageIdentifier) SharedImageIdentifier { return *v }).(SharedImageIdentifierOutput)
}

// The Offer Name for this Shared Image.
func (o SharedImageIdentifierPtrOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedImageIdentifier) *string {
		if v == nil {
			return nil
		}
		return &v.Offer
	}).(pulumi.StringPtrOutput)
}

// The Publisher Name for this Gallery Image.
func (o SharedImageIdentifierPtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedImageIdentifier) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

// The Name of the SKU for this Gallery Image.
func (o SharedImageIdentifierPtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SharedImageIdentifier) *string {
		if v == nil {
			return nil
		}
		return &v.Sku
	}).(pulumi.StringPtrOutput)
}

type SharedImageVersionTargetRegion struct {
	// The Azure Region in which this Image Version should exist.
	Name string `pulumi:"name"`
	// The number of replicas of the Image Version to be created per region.
	RegionalReplicaCount int `pulumi:"regionalReplicaCount"`
	// The storage account type for the image version, which defaults to `Standard_LRS`. You can store all of your image version replicas in Zone Redundant Storage by specifying `Standard_ZRS`.
	StorageAccountType *string `pulumi:"storageAccountType"`
}

// SharedImageVersionTargetRegionInput is an input type that accepts SharedImageVersionTargetRegionArgs and SharedImageVersionTargetRegionOutput values.
// You can construct a concrete instance of `SharedImageVersionTargetRegionInput` via:
//
// 		 SharedImageVersionTargetRegionArgs{...}
//
type SharedImageVersionTargetRegionInput interface {
	pulumi.Input

	ToSharedImageVersionTargetRegionOutput() SharedImageVersionTargetRegionOutput
	ToSharedImageVersionTargetRegionOutputWithContext(context.Context) SharedImageVersionTargetRegionOutput
}

type SharedImageVersionTargetRegionArgs struct {
	// The Azure Region in which this Image Version should exist.
	Name pulumi.StringInput `pulumi:"name"`
	// The number of replicas of the Image Version to be created per region.
	RegionalReplicaCount pulumi.IntInput `pulumi:"regionalReplicaCount"`
	// The storage account type for the image version, which defaults to `Standard_LRS`. You can store all of your image version replicas in Zone Redundant Storage by specifying `Standard_ZRS`.
	StorageAccountType pulumi.StringPtrInput `pulumi:"storageAccountType"`
}

func (SharedImageVersionTargetRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedImageVersionTargetRegion)(nil)).Elem()
}

func (i SharedImageVersionTargetRegionArgs) ToSharedImageVersionTargetRegionOutput() SharedImageVersionTargetRegionOutput {
	return i.ToSharedImageVersionTargetRegionOutputWithContext(context.Background())
}

func (i SharedImageVersionTargetRegionArgs) ToSharedImageVersionTargetRegionOutputWithContext(ctx context.Context) SharedImageVersionTargetRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedImageVersionTargetRegionOutput)
}

// SharedImageVersionTargetRegionArrayInput is an input type that accepts SharedImageVersionTargetRegionArray and SharedImageVersionTargetRegionArrayOutput values.
// You can construct a concrete instance of `SharedImageVersionTargetRegionArrayInput` via:
//
// 		 SharedImageVersionTargetRegionArray{ SharedImageVersionTargetRegionArgs{...} }
//
type SharedImageVersionTargetRegionArrayInput interface {
	pulumi.Input

	ToSharedImageVersionTargetRegionArrayOutput() SharedImageVersionTargetRegionArrayOutput
	ToSharedImageVersionTargetRegionArrayOutputWithContext(context.Context) SharedImageVersionTargetRegionArrayOutput
}

type SharedImageVersionTargetRegionArray []SharedImageVersionTargetRegionInput

func (SharedImageVersionTargetRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedImageVersionTargetRegion)(nil)).Elem()
}

func (i SharedImageVersionTargetRegionArray) ToSharedImageVersionTargetRegionArrayOutput() SharedImageVersionTargetRegionArrayOutput {
	return i.ToSharedImageVersionTargetRegionArrayOutputWithContext(context.Background())
}

func (i SharedImageVersionTargetRegionArray) ToSharedImageVersionTargetRegionArrayOutputWithContext(ctx context.Context) SharedImageVersionTargetRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedImageVersionTargetRegionArrayOutput)
}

type SharedImageVersionTargetRegionOutput struct{ *pulumi.OutputState }

func (SharedImageVersionTargetRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedImageVersionTargetRegion)(nil)).Elem()
}

func (o SharedImageVersionTargetRegionOutput) ToSharedImageVersionTargetRegionOutput() SharedImageVersionTargetRegionOutput {
	return o
}

func (o SharedImageVersionTargetRegionOutput) ToSharedImageVersionTargetRegionOutputWithContext(ctx context.Context) SharedImageVersionTargetRegionOutput {
	return o
}

// The Azure Region in which this Image Version should exist.
func (o SharedImageVersionTargetRegionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SharedImageVersionTargetRegion) string { return v.Name }).(pulumi.StringOutput)
}

// The number of replicas of the Image Version to be created per region.
func (o SharedImageVersionTargetRegionOutput) RegionalReplicaCount() pulumi.IntOutput {
	return o.ApplyT(func(v SharedImageVersionTargetRegion) int { return v.RegionalReplicaCount }).(pulumi.IntOutput)
}

// The storage account type for the image version, which defaults to `Standard_LRS`. You can store all of your image version replicas in Zone Redundant Storage by specifying `Standard_ZRS`.
func (o SharedImageVersionTargetRegionOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedImageVersionTargetRegion) *string { return v.StorageAccountType }).(pulumi.StringPtrOutput)
}

type SharedImageVersionTargetRegionArrayOutput struct{ *pulumi.OutputState }

func (SharedImageVersionTargetRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedImageVersionTargetRegion)(nil)).Elem()
}

func (o SharedImageVersionTargetRegionArrayOutput) ToSharedImageVersionTargetRegionArrayOutput() SharedImageVersionTargetRegionArrayOutput {
	return o
}

func (o SharedImageVersionTargetRegionArrayOutput) ToSharedImageVersionTargetRegionArrayOutputWithContext(ctx context.Context) SharedImageVersionTargetRegionArrayOutput {
	return o
}

func (o SharedImageVersionTargetRegionArrayOutput) Index(i pulumi.IntInput) SharedImageVersionTargetRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SharedImageVersionTargetRegion {
		return vs[0].([]SharedImageVersionTargetRegion)[vs[1].(int)]
	}).(SharedImageVersionTargetRegionOutput)
}

type SnapshotEncryptionSettings struct {
	DiskEncryptionKey *SnapshotEncryptionSettingsDiskEncryptionKey `pulumi:"diskEncryptionKey"`
	Enabled           bool                                         `pulumi:"enabled"`
	KeyEncryptionKey  *SnapshotEncryptionSettingsKeyEncryptionKey  `pulumi:"keyEncryptionKey"`
}

// SnapshotEncryptionSettingsInput is an input type that accepts SnapshotEncryptionSettingsArgs and SnapshotEncryptionSettingsOutput values.
// You can construct a concrete instance of `SnapshotEncryptionSettingsInput` via:
//
// 		 SnapshotEncryptionSettingsArgs{...}
//
type SnapshotEncryptionSettingsInput interface {
	pulumi.Input

	ToSnapshotEncryptionSettingsOutput() SnapshotEncryptionSettingsOutput
	ToSnapshotEncryptionSettingsOutputWithContext(context.Context) SnapshotEncryptionSettingsOutput
}

type SnapshotEncryptionSettingsArgs struct {
	DiskEncryptionKey SnapshotEncryptionSettingsDiskEncryptionKeyPtrInput `pulumi:"diskEncryptionKey"`
	Enabled           pulumi.BoolInput                                    `pulumi:"enabled"`
	KeyEncryptionKey  SnapshotEncryptionSettingsKeyEncryptionKeyPtrInput  `pulumi:"keyEncryptionKey"`
}

func (SnapshotEncryptionSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotEncryptionSettings)(nil)).Elem()
}

func (i SnapshotEncryptionSettingsArgs) ToSnapshotEncryptionSettingsOutput() SnapshotEncryptionSettingsOutput {
	return i.ToSnapshotEncryptionSettingsOutputWithContext(context.Background())
}

func (i SnapshotEncryptionSettingsArgs) ToSnapshotEncryptionSettingsOutputWithContext(ctx context.Context) SnapshotEncryptionSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotEncryptionSettingsOutput)
}

func (i SnapshotEncryptionSettingsArgs) ToSnapshotEncryptionSettingsPtrOutput() SnapshotEncryptionSettingsPtrOutput {
	return i.ToSnapshotEncryptionSettingsPtrOutputWithContext(context.Background())
}

func (i SnapshotEncryptionSettingsArgs) ToSnapshotEncryptionSettingsPtrOutputWithContext(ctx context.Context) SnapshotEncryptionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotEncryptionSettingsOutput).ToSnapshotEncryptionSettingsPtrOutputWithContext(ctx)
}

// SnapshotEncryptionSettingsPtrInput is an input type that accepts SnapshotEncryptionSettingsArgs, SnapshotEncryptionSettingsPtr and SnapshotEncryptionSettingsPtrOutput values.
// You can construct a concrete instance of `SnapshotEncryptionSettingsPtrInput` via:
//
// 		 SnapshotEncryptionSettingsArgs{...}
//
//  or:
//
// 		 nil
//
type SnapshotEncryptionSettingsPtrInput interface {
	pulumi.Input

	ToSnapshotEncryptionSettingsPtrOutput() SnapshotEncryptionSettingsPtrOutput
	ToSnapshotEncryptionSettingsPtrOutputWithContext(context.Context) SnapshotEncryptionSettingsPtrOutput
}

type snapshotEncryptionSettingsPtrType SnapshotEncryptionSettingsArgs

func SnapshotEncryptionSettingsPtr(v *SnapshotEncryptionSettingsArgs) SnapshotEncryptionSettingsPtrInput {
	return (*snapshotEncryptionSettingsPtrType)(v)
}

func (*snapshotEncryptionSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotEncryptionSettings)(nil)).Elem()
}

func (i *snapshotEncryptionSettingsPtrType) ToSnapshotEncryptionSettingsPtrOutput() SnapshotEncryptionSettingsPtrOutput {
	return i.ToSnapshotEncryptionSettingsPtrOutputWithContext(context.Background())
}

func (i *snapshotEncryptionSettingsPtrType) ToSnapshotEncryptionSettingsPtrOutputWithContext(ctx context.Context) SnapshotEncryptionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotEncryptionSettingsPtrOutput)
}

type SnapshotEncryptionSettingsOutput struct{ *pulumi.OutputState }

func (SnapshotEncryptionSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotEncryptionSettings)(nil)).Elem()
}

func (o SnapshotEncryptionSettingsOutput) ToSnapshotEncryptionSettingsOutput() SnapshotEncryptionSettingsOutput {
	return o
}

func (o SnapshotEncryptionSettingsOutput) ToSnapshotEncryptionSettingsOutputWithContext(ctx context.Context) SnapshotEncryptionSettingsOutput {
	return o
}

func (o SnapshotEncryptionSettingsOutput) ToSnapshotEncryptionSettingsPtrOutput() SnapshotEncryptionSettingsPtrOutput {
	return o.ToSnapshotEncryptionSettingsPtrOutputWithContext(context.Background())
}

func (o SnapshotEncryptionSettingsOutput) ToSnapshotEncryptionSettingsPtrOutputWithContext(ctx context.Context) SnapshotEncryptionSettingsPtrOutput {
	return o.ApplyT(func(v SnapshotEncryptionSettings) *SnapshotEncryptionSettings {
		return &v
	}).(SnapshotEncryptionSettingsPtrOutput)
}
func (o SnapshotEncryptionSettingsOutput) DiskEncryptionKey() SnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput {
	return o.ApplyT(func(v SnapshotEncryptionSettings) *SnapshotEncryptionSettingsDiskEncryptionKey {
		return v.DiskEncryptionKey
	}).(SnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput)
}

func (o SnapshotEncryptionSettingsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SnapshotEncryptionSettings) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o SnapshotEncryptionSettingsOutput) KeyEncryptionKey() SnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput {
	return o.ApplyT(func(v SnapshotEncryptionSettings) *SnapshotEncryptionSettingsKeyEncryptionKey {
		return v.KeyEncryptionKey
	}).(SnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput)
}

type SnapshotEncryptionSettingsPtrOutput struct{ *pulumi.OutputState }

func (SnapshotEncryptionSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotEncryptionSettings)(nil)).Elem()
}

func (o SnapshotEncryptionSettingsPtrOutput) ToSnapshotEncryptionSettingsPtrOutput() SnapshotEncryptionSettingsPtrOutput {
	return o
}

func (o SnapshotEncryptionSettingsPtrOutput) ToSnapshotEncryptionSettingsPtrOutputWithContext(ctx context.Context) SnapshotEncryptionSettingsPtrOutput {
	return o
}

func (o SnapshotEncryptionSettingsPtrOutput) Elem() SnapshotEncryptionSettingsOutput {
	return o.ApplyT(func(v *SnapshotEncryptionSettings) SnapshotEncryptionSettings { return *v }).(SnapshotEncryptionSettingsOutput)
}

func (o SnapshotEncryptionSettingsPtrOutput) DiskEncryptionKey() SnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput {
	return o.ApplyT(func(v *SnapshotEncryptionSettings) *SnapshotEncryptionSettingsDiskEncryptionKey {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionKey
	}).(SnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput)
}

func (o SnapshotEncryptionSettingsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SnapshotEncryptionSettings) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o SnapshotEncryptionSettingsPtrOutput) KeyEncryptionKey() SnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput {
	return o.ApplyT(func(v *SnapshotEncryptionSettings) *SnapshotEncryptionSettingsKeyEncryptionKey {
		if v == nil {
			return nil
		}
		return v.KeyEncryptionKey
	}).(SnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput)
}

type SnapshotEncryptionSettingsDiskEncryptionKey struct {
	SecretUrl     string `pulumi:"secretUrl"`
	SourceVaultId string `pulumi:"sourceVaultId"`
}

// SnapshotEncryptionSettingsDiskEncryptionKeyInput is an input type that accepts SnapshotEncryptionSettingsDiskEncryptionKeyArgs and SnapshotEncryptionSettingsDiskEncryptionKeyOutput values.
// You can construct a concrete instance of `SnapshotEncryptionSettingsDiskEncryptionKeyInput` via:
//
// 		 SnapshotEncryptionSettingsDiskEncryptionKeyArgs{...}
//
type SnapshotEncryptionSettingsDiskEncryptionKeyInput interface {
	pulumi.Input

	ToSnapshotEncryptionSettingsDiskEncryptionKeyOutput() SnapshotEncryptionSettingsDiskEncryptionKeyOutput
	ToSnapshotEncryptionSettingsDiskEncryptionKeyOutputWithContext(context.Context) SnapshotEncryptionSettingsDiskEncryptionKeyOutput
}

type SnapshotEncryptionSettingsDiskEncryptionKeyArgs struct {
	SecretUrl     pulumi.StringInput `pulumi:"secretUrl"`
	SourceVaultId pulumi.StringInput `pulumi:"sourceVaultId"`
}

func (SnapshotEncryptionSettingsDiskEncryptionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotEncryptionSettingsDiskEncryptionKey)(nil)).Elem()
}

func (i SnapshotEncryptionSettingsDiskEncryptionKeyArgs) ToSnapshotEncryptionSettingsDiskEncryptionKeyOutput() SnapshotEncryptionSettingsDiskEncryptionKeyOutput {
	return i.ToSnapshotEncryptionSettingsDiskEncryptionKeyOutputWithContext(context.Background())
}

func (i SnapshotEncryptionSettingsDiskEncryptionKeyArgs) ToSnapshotEncryptionSettingsDiskEncryptionKeyOutputWithContext(ctx context.Context) SnapshotEncryptionSettingsDiskEncryptionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotEncryptionSettingsDiskEncryptionKeyOutput)
}

func (i SnapshotEncryptionSettingsDiskEncryptionKeyArgs) ToSnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput() SnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput {
	return i.ToSnapshotEncryptionSettingsDiskEncryptionKeyPtrOutputWithContext(context.Background())
}

func (i SnapshotEncryptionSettingsDiskEncryptionKeyArgs) ToSnapshotEncryptionSettingsDiskEncryptionKeyPtrOutputWithContext(ctx context.Context) SnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotEncryptionSettingsDiskEncryptionKeyOutput).ToSnapshotEncryptionSettingsDiskEncryptionKeyPtrOutputWithContext(ctx)
}

// SnapshotEncryptionSettingsDiskEncryptionKeyPtrInput is an input type that accepts SnapshotEncryptionSettingsDiskEncryptionKeyArgs, SnapshotEncryptionSettingsDiskEncryptionKeyPtr and SnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput values.
// You can construct a concrete instance of `SnapshotEncryptionSettingsDiskEncryptionKeyPtrInput` via:
//
// 		 SnapshotEncryptionSettingsDiskEncryptionKeyArgs{...}
//
//  or:
//
// 		 nil
//
type SnapshotEncryptionSettingsDiskEncryptionKeyPtrInput interface {
	pulumi.Input

	ToSnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput() SnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput
	ToSnapshotEncryptionSettingsDiskEncryptionKeyPtrOutputWithContext(context.Context) SnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput
}

type snapshotEncryptionSettingsDiskEncryptionKeyPtrType SnapshotEncryptionSettingsDiskEncryptionKeyArgs

func SnapshotEncryptionSettingsDiskEncryptionKeyPtr(v *SnapshotEncryptionSettingsDiskEncryptionKeyArgs) SnapshotEncryptionSettingsDiskEncryptionKeyPtrInput {
	return (*snapshotEncryptionSettingsDiskEncryptionKeyPtrType)(v)
}

func (*snapshotEncryptionSettingsDiskEncryptionKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotEncryptionSettingsDiskEncryptionKey)(nil)).Elem()
}

func (i *snapshotEncryptionSettingsDiskEncryptionKeyPtrType) ToSnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput() SnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput {
	return i.ToSnapshotEncryptionSettingsDiskEncryptionKeyPtrOutputWithContext(context.Background())
}

func (i *snapshotEncryptionSettingsDiskEncryptionKeyPtrType) ToSnapshotEncryptionSettingsDiskEncryptionKeyPtrOutputWithContext(ctx context.Context) SnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput)
}

type SnapshotEncryptionSettingsDiskEncryptionKeyOutput struct{ *pulumi.OutputState }

func (SnapshotEncryptionSettingsDiskEncryptionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotEncryptionSettingsDiskEncryptionKey)(nil)).Elem()
}

func (o SnapshotEncryptionSettingsDiskEncryptionKeyOutput) ToSnapshotEncryptionSettingsDiskEncryptionKeyOutput() SnapshotEncryptionSettingsDiskEncryptionKeyOutput {
	return o
}

func (o SnapshotEncryptionSettingsDiskEncryptionKeyOutput) ToSnapshotEncryptionSettingsDiskEncryptionKeyOutputWithContext(ctx context.Context) SnapshotEncryptionSettingsDiskEncryptionKeyOutput {
	return o
}

func (o SnapshotEncryptionSettingsDiskEncryptionKeyOutput) ToSnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput() SnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput {
	return o.ToSnapshotEncryptionSettingsDiskEncryptionKeyPtrOutputWithContext(context.Background())
}

func (o SnapshotEncryptionSettingsDiskEncryptionKeyOutput) ToSnapshotEncryptionSettingsDiskEncryptionKeyPtrOutputWithContext(ctx context.Context) SnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput {
	return o.ApplyT(func(v SnapshotEncryptionSettingsDiskEncryptionKey) *SnapshotEncryptionSettingsDiskEncryptionKey {
		return &v
	}).(SnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput)
}
func (o SnapshotEncryptionSettingsDiskEncryptionKeyOutput) SecretUrl() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotEncryptionSettingsDiskEncryptionKey) string { return v.SecretUrl }).(pulumi.StringOutput)
}

func (o SnapshotEncryptionSettingsDiskEncryptionKeyOutput) SourceVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotEncryptionSettingsDiskEncryptionKey) string { return v.SourceVaultId }).(pulumi.StringOutput)
}

type SnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput struct{ *pulumi.OutputState }

func (SnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotEncryptionSettingsDiskEncryptionKey)(nil)).Elem()
}

func (o SnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput) ToSnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput() SnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput {
	return o
}

func (o SnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput) ToSnapshotEncryptionSettingsDiskEncryptionKeyPtrOutputWithContext(ctx context.Context) SnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput {
	return o
}

func (o SnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput) Elem() SnapshotEncryptionSettingsDiskEncryptionKeyOutput {
	return o.ApplyT(func(v *SnapshotEncryptionSettingsDiskEncryptionKey) SnapshotEncryptionSettingsDiskEncryptionKey {
		return *v
	}).(SnapshotEncryptionSettingsDiskEncryptionKeyOutput)
}

func (o SnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput) SecretUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapshotEncryptionSettingsDiskEncryptionKey) *string {
		if v == nil {
			return nil
		}
		return &v.SecretUrl
	}).(pulumi.StringPtrOutput)
}

func (o SnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput) SourceVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapshotEncryptionSettingsDiskEncryptionKey) *string {
		if v == nil {
			return nil
		}
		return &v.SourceVaultId
	}).(pulumi.StringPtrOutput)
}

type SnapshotEncryptionSettingsKeyEncryptionKey struct {
	KeyUrl        string `pulumi:"keyUrl"`
	SourceVaultId string `pulumi:"sourceVaultId"`
}

// SnapshotEncryptionSettingsKeyEncryptionKeyInput is an input type that accepts SnapshotEncryptionSettingsKeyEncryptionKeyArgs and SnapshotEncryptionSettingsKeyEncryptionKeyOutput values.
// You can construct a concrete instance of `SnapshotEncryptionSettingsKeyEncryptionKeyInput` via:
//
// 		 SnapshotEncryptionSettingsKeyEncryptionKeyArgs{...}
//
type SnapshotEncryptionSettingsKeyEncryptionKeyInput interface {
	pulumi.Input

	ToSnapshotEncryptionSettingsKeyEncryptionKeyOutput() SnapshotEncryptionSettingsKeyEncryptionKeyOutput
	ToSnapshotEncryptionSettingsKeyEncryptionKeyOutputWithContext(context.Context) SnapshotEncryptionSettingsKeyEncryptionKeyOutput
}

type SnapshotEncryptionSettingsKeyEncryptionKeyArgs struct {
	KeyUrl        pulumi.StringInput `pulumi:"keyUrl"`
	SourceVaultId pulumi.StringInput `pulumi:"sourceVaultId"`
}

func (SnapshotEncryptionSettingsKeyEncryptionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotEncryptionSettingsKeyEncryptionKey)(nil)).Elem()
}

func (i SnapshotEncryptionSettingsKeyEncryptionKeyArgs) ToSnapshotEncryptionSettingsKeyEncryptionKeyOutput() SnapshotEncryptionSettingsKeyEncryptionKeyOutput {
	return i.ToSnapshotEncryptionSettingsKeyEncryptionKeyOutputWithContext(context.Background())
}

func (i SnapshotEncryptionSettingsKeyEncryptionKeyArgs) ToSnapshotEncryptionSettingsKeyEncryptionKeyOutputWithContext(ctx context.Context) SnapshotEncryptionSettingsKeyEncryptionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotEncryptionSettingsKeyEncryptionKeyOutput)
}

func (i SnapshotEncryptionSettingsKeyEncryptionKeyArgs) ToSnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput() SnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput {
	return i.ToSnapshotEncryptionSettingsKeyEncryptionKeyPtrOutputWithContext(context.Background())
}

func (i SnapshotEncryptionSettingsKeyEncryptionKeyArgs) ToSnapshotEncryptionSettingsKeyEncryptionKeyPtrOutputWithContext(ctx context.Context) SnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotEncryptionSettingsKeyEncryptionKeyOutput).ToSnapshotEncryptionSettingsKeyEncryptionKeyPtrOutputWithContext(ctx)
}

// SnapshotEncryptionSettingsKeyEncryptionKeyPtrInput is an input type that accepts SnapshotEncryptionSettingsKeyEncryptionKeyArgs, SnapshotEncryptionSettingsKeyEncryptionKeyPtr and SnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput values.
// You can construct a concrete instance of `SnapshotEncryptionSettingsKeyEncryptionKeyPtrInput` via:
//
// 		 SnapshotEncryptionSettingsKeyEncryptionKeyArgs{...}
//
//  or:
//
// 		 nil
//
type SnapshotEncryptionSettingsKeyEncryptionKeyPtrInput interface {
	pulumi.Input

	ToSnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput() SnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput
	ToSnapshotEncryptionSettingsKeyEncryptionKeyPtrOutputWithContext(context.Context) SnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput
}

type snapshotEncryptionSettingsKeyEncryptionKeyPtrType SnapshotEncryptionSettingsKeyEncryptionKeyArgs

func SnapshotEncryptionSettingsKeyEncryptionKeyPtr(v *SnapshotEncryptionSettingsKeyEncryptionKeyArgs) SnapshotEncryptionSettingsKeyEncryptionKeyPtrInput {
	return (*snapshotEncryptionSettingsKeyEncryptionKeyPtrType)(v)
}

func (*snapshotEncryptionSettingsKeyEncryptionKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotEncryptionSettingsKeyEncryptionKey)(nil)).Elem()
}

func (i *snapshotEncryptionSettingsKeyEncryptionKeyPtrType) ToSnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput() SnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput {
	return i.ToSnapshotEncryptionSettingsKeyEncryptionKeyPtrOutputWithContext(context.Background())
}

func (i *snapshotEncryptionSettingsKeyEncryptionKeyPtrType) ToSnapshotEncryptionSettingsKeyEncryptionKeyPtrOutputWithContext(ctx context.Context) SnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput)
}

type SnapshotEncryptionSettingsKeyEncryptionKeyOutput struct{ *pulumi.OutputState }

func (SnapshotEncryptionSettingsKeyEncryptionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotEncryptionSettingsKeyEncryptionKey)(nil)).Elem()
}

func (o SnapshotEncryptionSettingsKeyEncryptionKeyOutput) ToSnapshotEncryptionSettingsKeyEncryptionKeyOutput() SnapshotEncryptionSettingsKeyEncryptionKeyOutput {
	return o
}

func (o SnapshotEncryptionSettingsKeyEncryptionKeyOutput) ToSnapshotEncryptionSettingsKeyEncryptionKeyOutputWithContext(ctx context.Context) SnapshotEncryptionSettingsKeyEncryptionKeyOutput {
	return o
}

func (o SnapshotEncryptionSettingsKeyEncryptionKeyOutput) ToSnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput() SnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput {
	return o.ToSnapshotEncryptionSettingsKeyEncryptionKeyPtrOutputWithContext(context.Background())
}

func (o SnapshotEncryptionSettingsKeyEncryptionKeyOutput) ToSnapshotEncryptionSettingsKeyEncryptionKeyPtrOutputWithContext(ctx context.Context) SnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput {
	return o.ApplyT(func(v SnapshotEncryptionSettingsKeyEncryptionKey) *SnapshotEncryptionSettingsKeyEncryptionKey {
		return &v
	}).(SnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput)
}
func (o SnapshotEncryptionSettingsKeyEncryptionKeyOutput) KeyUrl() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotEncryptionSettingsKeyEncryptionKey) string { return v.KeyUrl }).(pulumi.StringOutput)
}

func (o SnapshotEncryptionSettingsKeyEncryptionKeyOutput) SourceVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotEncryptionSettingsKeyEncryptionKey) string { return v.SourceVaultId }).(pulumi.StringOutput)
}

type SnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput struct{ *pulumi.OutputState }

func (SnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotEncryptionSettingsKeyEncryptionKey)(nil)).Elem()
}

func (o SnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput) ToSnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput() SnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput {
	return o
}

func (o SnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput) ToSnapshotEncryptionSettingsKeyEncryptionKeyPtrOutputWithContext(ctx context.Context) SnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput {
	return o
}

func (o SnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput) Elem() SnapshotEncryptionSettingsKeyEncryptionKeyOutput {
	return o.ApplyT(func(v *SnapshotEncryptionSettingsKeyEncryptionKey) SnapshotEncryptionSettingsKeyEncryptionKey {
		return *v
	}).(SnapshotEncryptionSettingsKeyEncryptionKeyOutput)
}

func (o SnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput) KeyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapshotEncryptionSettingsKeyEncryptionKey) *string {
		if v == nil {
			return nil
		}
		return &v.KeyUrl
	}).(pulumi.StringPtrOutput)
}

func (o SnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput) SourceVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapshotEncryptionSettingsKeyEncryptionKey) *string {
		if v == nil {
			return nil
		}
		return &v.SourceVaultId
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineAdditionalCapabilities struct {
	// Should Ultra SSD disk be enabled for this Virtual Machine?
	UltraSsdEnabled bool `pulumi:"ultraSsdEnabled"`
}

// VirtualMachineAdditionalCapabilitiesInput is an input type that accepts VirtualMachineAdditionalCapabilitiesArgs and VirtualMachineAdditionalCapabilitiesOutput values.
// You can construct a concrete instance of `VirtualMachineAdditionalCapabilitiesInput` via:
//
// 		 VirtualMachineAdditionalCapabilitiesArgs{...}
//
type VirtualMachineAdditionalCapabilitiesInput interface {
	pulumi.Input

	ToVirtualMachineAdditionalCapabilitiesOutput() VirtualMachineAdditionalCapabilitiesOutput
	ToVirtualMachineAdditionalCapabilitiesOutputWithContext(context.Context) VirtualMachineAdditionalCapabilitiesOutput
}

type VirtualMachineAdditionalCapabilitiesArgs struct {
	// Should Ultra SSD disk be enabled for this Virtual Machine?
	UltraSsdEnabled pulumi.BoolInput `pulumi:"ultraSsdEnabled"`
}

func (VirtualMachineAdditionalCapabilitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineAdditionalCapabilities)(nil)).Elem()
}

func (i VirtualMachineAdditionalCapabilitiesArgs) ToVirtualMachineAdditionalCapabilitiesOutput() VirtualMachineAdditionalCapabilitiesOutput {
	return i.ToVirtualMachineAdditionalCapabilitiesOutputWithContext(context.Background())
}

func (i VirtualMachineAdditionalCapabilitiesArgs) ToVirtualMachineAdditionalCapabilitiesOutputWithContext(ctx context.Context) VirtualMachineAdditionalCapabilitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAdditionalCapabilitiesOutput)
}

func (i VirtualMachineAdditionalCapabilitiesArgs) ToVirtualMachineAdditionalCapabilitiesPtrOutput() VirtualMachineAdditionalCapabilitiesPtrOutput {
	return i.ToVirtualMachineAdditionalCapabilitiesPtrOutputWithContext(context.Background())
}

func (i VirtualMachineAdditionalCapabilitiesArgs) ToVirtualMachineAdditionalCapabilitiesPtrOutputWithContext(ctx context.Context) VirtualMachineAdditionalCapabilitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAdditionalCapabilitiesOutput).ToVirtualMachineAdditionalCapabilitiesPtrOutputWithContext(ctx)
}

// VirtualMachineAdditionalCapabilitiesPtrInput is an input type that accepts VirtualMachineAdditionalCapabilitiesArgs, VirtualMachineAdditionalCapabilitiesPtr and VirtualMachineAdditionalCapabilitiesPtrOutput values.
// You can construct a concrete instance of `VirtualMachineAdditionalCapabilitiesPtrInput` via:
//
// 		 VirtualMachineAdditionalCapabilitiesArgs{...}
//
//  or:
//
// 		 nil
//
type VirtualMachineAdditionalCapabilitiesPtrInput interface {
	pulumi.Input

	ToVirtualMachineAdditionalCapabilitiesPtrOutput() VirtualMachineAdditionalCapabilitiesPtrOutput
	ToVirtualMachineAdditionalCapabilitiesPtrOutputWithContext(context.Context) VirtualMachineAdditionalCapabilitiesPtrOutput
}

type virtualMachineAdditionalCapabilitiesPtrType VirtualMachineAdditionalCapabilitiesArgs

func VirtualMachineAdditionalCapabilitiesPtr(v *VirtualMachineAdditionalCapabilitiesArgs) VirtualMachineAdditionalCapabilitiesPtrInput {
	return (*virtualMachineAdditionalCapabilitiesPtrType)(v)
}

func (*virtualMachineAdditionalCapabilitiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineAdditionalCapabilities)(nil)).Elem()
}

func (i *virtualMachineAdditionalCapabilitiesPtrType) ToVirtualMachineAdditionalCapabilitiesPtrOutput() VirtualMachineAdditionalCapabilitiesPtrOutput {
	return i.ToVirtualMachineAdditionalCapabilitiesPtrOutputWithContext(context.Background())
}

func (i *virtualMachineAdditionalCapabilitiesPtrType) ToVirtualMachineAdditionalCapabilitiesPtrOutputWithContext(ctx context.Context) VirtualMachineAdditionalCapabilitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAdditionalCapabilitiesPtrOutput)
}

type VirtualMachineAdditionalCapabilitiesOutput struct{ *pulumi.OutputState }

func (VirtualMachineAdditionalCapabilitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineAdditionalCapabilities)(nil)).Elem()
}

func (o VirtualMachineAdditionalCapabilitiesOutput) ToVirtualMachineAdditionalCapabilitiesOutput() VirtualMachineAdditionalCapabilitiesOutput {
	return o
}

func (o VirtualMachineAdditionalCapabilitiesOutput) ToVirtualMachineAdditionalCapabilitiesOutputWithContext(ctx context.Context) VirtualMachineAdditionalCapabilitiesOutput {
	return o
}

func (o VirtualMachineAdditionalCapabilitiesOutput) ToVirtualMachineAdditionalCapabilitiesPtrOutput() VirtualMachineAdditionalCapabilitiesPtrOutput {
	return o.ToVirtualMachineAdditionalCapabilitiesPtrOutputWithContext(context.Background())
}

func (o VirtualMachineAdditionalCapabilitiesOutput) ToVirtualMachineAdditionalCapabilitiesPtrOutputWithContext(ctx context.Context) VirtualMachineAdditionalCapabilitiesPtrOutput {
	return o.ApplyT(func(v VirtualMachineAdditionalCapabilities) *VirtualMachineAdditionalCapabilities {
		return &v
	}).(VirtualMachineAdditionalCapabilitiesPtrOutput)
}

// Should Ultra SSD disk be enabled for this Virtual Machine?
func (o VirtualMachineAdditionalCapabilitiesOutput) UltraSsdEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v VirtualMachineAdditionalCapabilities) bool { return v.UltraSsdEnabled }).(pulumi.BoolOutput)
}

type VirtualMachineAdditionalCapabilitiesPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineAdditionalCapabilitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineAdditionalCapabilities)(nil)).Elem()
}

func (o VirtualMachineAdditionalCapabilitiesPtrOutput) ToVirtualMachineAdditionalCapabilitiesPtrOutput() VirtualMachineAdditionalCapabilitiesPtrOutput {
	return o
}

func (o VirtualMachineAdditionalCapabilitiesPtrOutput) ToVirtualMachineAdditionalCapabilitiesPtrOutputWithContext(ctx context.Context) VirtualMachineAdditionalCapabilitiesPtrOutput {
	return o
}

func (o VirtualMachineAdditionalCapabilitiesPtrOutput) Elem() VirtualMachineAdditionalCapabilitiesOutput {
	return o.ApplyT(func(v *VirtualMachineAdditionalCapabilities) VirtualMachineAdditionalCapabilities { return *v }).(VirtualMachineAdditionalCapabilitiesOutput)
}

// Should Ultra SSD disk be enabled for this Virtual Machine?
func (o VirtualMachineAdditionalCapabilitiesPtrOutput) UltraSsdEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAdditionalCapabilities) *bool {
		if v == nil {
			return nil
		}
		return &v.UltraSsdEnabled
	}).(pulumi.BoolPtrOutput)
}

type VirtualMachineBootDiagnostics struct {
	// Should Boot Diagnostics be enabled for this Virtual Machine?
	Enabled bool `pulumi:"enabled"`
	// The Storage Account's Blob Endpoint which should hold the virtual machine's diagnostic files.
	StorageUri string `pulumi:"storageUri"`
}

// VirtualMachineBootDiagnosticsInput is an input type that accepts VirtualMachineBootDiagnosticsArgs and VirtualMachineBootDiagnosticsOutput values.
// You can construct a concrete instance of `VirtualMachineBootDiagnosticsInput` via:
//
// 		 VirtualMachineBootDiagnosticsArgs{...}
//
type VirtualMachineBootDiagnosticsInput interface {
	pulumi.Input

	ToVirtualMachineBootDiagnosticsOutput() VirtualMachineBootDiagnosticsOutput
	ToVirtualMachineBootDiagnosticsOutputWithContext(context.Context) VirtualMachineBootDiagnosticsOutput
}

type VirtualMachineBootDiagnosticsArgs struct {
	// Should Boot Diagnostics be enabled for this Virtual Machine?
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The Storage Account's Blob Endpoint which should hold the virtual machine's diagnostic files.
	StorageUri pulumi.StringInput `pulumi:"storageUri"`
}

func (VirtualMachineBootDiagnosticsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineBootDiagnostics)(nil)).Elem()
}

func (i VirtualMachineBootDiagnosticsArgs) ToVirtualMachineBootDiagnosticsOutput() VirtualMachineBootDiagnosticsOutput {
	return i.ToVirtualMachineBootDiagnosticsOutputWithContext(context.Background())
}

func (i VirtualMachineBootDiagnosticsArgs) ToVirtualMachineBootDiagnosticsOutputWithContext(ctx context.Context) VirtualMachineBootDiagnosticsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineBootDiagnosticsOutput)
}

func (i VirtualMachineBootDiagnosticsArgs) ToVirtualMachineBootDiagnosticsPtrOutput() VirtualMachineBootDiagnosticsPtrOutput {
	return i.ToVirtualMachineBootDiagnosticsPtrOutputWithContext(context.Background())
}

func (i VirtualMachineBootDiagnosticsArgs) ToVirtualMachineBootDiagnosticsPtrOutputWithContext(ctx context.Context) VirtualMachineBootDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineBootDiagnosticsOutput).ToVirtualMachineBootDiagnosticsPtrOutputWithContext(ctx)
}

// VirtualMachineBootDiagnosticsPtrInput is an input type that accepts VirtualMachineBootDiagnosticsArgs, VirtualMachineBootDiagnosticsPtr and VirtualMachineBootDiagnosticsPtrOutput values.
// You can construct a concrete instance of `VirtualMachineBootDiagnosticsPtrInput` via:
//
// 		 VirtualMachineBootDiagnosticsArgs{...}
//
//  or:
//
// 		 nil
//
type VirtualMachineBootDiagnosticsPtrInput interface {
	pulumi.Input

	ToVirtualMachineBootDiagnosticsPtrOutput() VirtualMachineBootDiagnosticsPtrOutput
	ToVirtualMachineBootDiagnosticsPtrOutputWithContext(context.Context) VirtualMachineBootDiagnosticsPtrOutput
}

type virtualMachineBootDiagnosticsPtrType VirtualMachineBootDiagnosticsArgs

func VirtualMachineBootDiagnosticsPtr(v *VirtualMachineBootDiagnosticsArgs) VirtualMachineBootDiagnosticsPtrInput {
	return (*virtualMachineBootDiagnosticsPtrType)(v)
}

func (*virtualMachineBootDiagnosticsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineBootDiagnostics)(nil)).Elem()
}

func (i *virtualMachineBootDiagnosticsPtrType) ToVirtualMachineBootDiagnosticsPtrOutput() VirtualMachineBootDiagnosticsPtrOutput {
	return i.ToVirtualMachineBootDiagnosticsPtrOutputWithContext(context.Background())
}

func (i *virtualMachineBootDiagnosticsPtrType) ToVirtualMachineBootDiagnosticsPtrOutputWithContext(ctx context.Context) VirtualMachineBootDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineBootDiagnosticsPtrOutput)
}

type VirtualMachineBootDiagnosticsOutput struct{ *pulumi.OutputState }

func (VirtualMachineBootDiagnosticsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineBootDiagnostics)(nil)).Elem()
}

func (o VirtualMachineBootDiagnosticsOutput) ToVirtualMachineBootDiagnosticsOutput() VirtualMachineBootDiagnosticsOutput {
	return o
}

func (o VirtualMachineBootDiagnosticsOutput) ToVirtualMachineBootDiagnosticsOutputWithContext(ctx context.Context) VirtualMachineBootDiagnosticsOutput {
	return o
}

func (o VirtualMachineBootDiagnosticsOutput) ToVirtualMachineBootDiagnosticsPtrOutput() VirtualMachineBootDiagnosticsPtrOutput {
	return o.ToVirtualMachineBootDiagnosticsPtrOutputWithContext(context.Background())
}

func (o VirtualMachineBootDiagnosticsOutput) ToVirtualMachineBootDiagnosticsPtrOutputWithContext(ctx context.Context) VirtualMachineBootDiagnosticsPtrOutput {
	return o.ApplyT(func(v VirtualMachineBootDiagnostics) *VirtualMachineBootDiagnostics {
		return &v
	}).(VirtualMachineBootDiagnosticsPtrOutput)
}

// Should Boot Diagnostics be enabled for this Virtual Machine?
func (o VirtualMachineBootDiagnosticsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v VirtualMachineBootDiagnostics) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The Storage Account's Blob Endpoint which should hold the virtual machine's diagnostic files.
func (o VirtualMachineBootDiagnosticsOutput) StorageUri() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineBootDiagnostics) string { return v.StorageUri }).(pulumi.StringOutput)
}

type VirtualMachineBootDiagnosticsPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineBootDiagnosticsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineBootDiagnostics)(nil)).Elem()
}

func (o VirtualMachineBootDiagnosticsPtrOutput) ToVirtualMachineBootDiagnosticsPtrOutput() VirtualMachineBootDiagnosticsPtrOutput {
	return o
}

func (o VirtualMachineBootDiagnosticsPtrOutput) ToVirtualMachineBootDiagnosticsPtrOutputWithContext(ctx context.Context) VirtualMachineBootDiagnosticsPtrOutput {
	return o
}

func (o VirtualMachineBootDiagnosticsPtrOutput) Elem() VirtualMachineBootDiagnosticsOutput {
	return o.ApplyT(func(v *VirtualMachineBootDiagnostics) VirtualMachineBootDiagnostics { return *v }).(VirtualMachineBootDiagnosticsOutput)
}

// Should Boot Diagnostics be enabled for this Virtual Machine?
func (o VirtualMachineBootDiagnosticsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineBootDiagnostics) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The Storage Account's Blob Endpoint which should hold the virtual machine's diagnostic files.
func (o VirtualMachineBootDiagnosticsPtrOutput) StorageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineBootDiagnostics) *string {
		if v == nil {
			return nil
		}
		return &v.StorageUri
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineIdentity struct {
	// Specifies a list of user managed identity ids to be assigned to the VM. Required if `type` is `UserAssigned`.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID for the Service Principal associated with the Managed Service Identity of this Virtual Machine.
	PrincipalId *string `pulumi:"principalId"`
	// The Managed Service Identity Type of this Virtual Machine. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` (where you can specify the Service Principal ID's) to be used by this Virtual Machine using the `identityIds` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
	Type string `pulumi:"type"`
}

// VirtualMachineIdentityInput is an input type that accepts VirtualMachineIdentityArgs and VirtualMachineIdentityOutput values.
// You can construct a concrete instance of `VirtualMachineIdentityInput` via:
//
// 		 VirtualMachineIdentityArgs{...}
//
type VirtualMachineIdentityInput interface {
	pulumi.Input

	ToVirtualMachineIdentityOutput() VirtualMachineIdentityOutput
	ToVirtualMachineIdentityOutputWithContext(context.Context) VirtualMachineIdentityOutput
}

type VirtualMachineIdentityArgs struct {
	// Specifies a list of user managed identity ids to be assigned to the VM. Required if `type` is `UserAssigned`.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID for the Service Principal associated with the Managed Service Identity of this Virtual Machine.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The Managed Service Identity Type of this Virtual Machine. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` (where you can specify the Service Principal ID's) to be used by this Virtual Machine using the `identityIds` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
	Type pulumi.StringInput `pulumi:"type"`
}

func (VirtualMachineIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineIdentity)(nil)).Elem()
}

func (i VirtualMachineIdentityArgs) ToVirtualMachineIdentityOutput() VirtualMachineIdentityOutput {
	return i.ToVirtualMachineIdentityOutputWithContext(context.Background())
}

func (i VirtualMachineIdentityArgs) ToVirtualMachineIdentityOutputWithContext(ctx context.Context) VirtualMachineIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineIdentityOutput)
}

func (i VirtualMachineIdentityArgs) ToVirtualMachineIdentityPtrOutput() VirtualMachineIdentityPtrOutput {
	return i.ToVirtualMachineIdentityPtrOutputWithContext(context.Background())
}

func (i VirtualMachineIdentityArgs) ToVirtualMachineIdentityPtrOutputWithContext(ctx context.Context) VirtualMachineIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineIdentityOutput).ToVirtualMachineIdentityPtrOutputWithContext(ctx)
}

// VirtualMachineIdentityPtrInput is an input type that accepts VirtualMachineIdentityArgs, VirtualMachineIdentityPtr and VirtualMachineIdentityPtrOutput values.
// You can construct a concrete instance of `VirtualMachineIdentityPtrInput` via:
//
// 		 VirtualMachineIdentityArgs{...}
//
//  or:
//
// 		 nil
//
type VirtualMachineIdentityPtrInput interface {
	pulumi.Input

	ToVirtualMachineIdentityPtrOutput() VirtualMachineIdentityPtrOutput
	ToVirtualMachineIdentityPtrOutputWithContext(context.Context) VirtualMachineIdentityPtrOutput
}

type virtualMachineIdentityPtrType VirtualMachineIdentityArgs

func VirtualMachineIdentityPtr(v *VirtualMachineIdentityArgs) VirtualMachineIdentityPtrInput {
	return (*virtualMachineIdentityPtrType)(v)
}

func (*virtualMachineIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineIdentity)(nil)).Elem()
}

func (i *virtualMachineIdentityPtrType) ToVirtualMachineIdentityPtrOutput() VirtualMachineIdentityPtrOutput {
	return i.ToVirtualMachineIdentityPtrOutputWithContext(context.Background())
}

func (i *virtualMachineIdentityPtrType) ToVirtualMachineIdentityPtrOutputWithContext(ctx context.Context) VirtualMachineIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineIdentityPtrOutput)
}

type VirtualMachineIdentityOutput struct{ *pulumi.OutputState }

func (VirtualMachineIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineIdentity)(nil)).Elem()
}

func (o VirtualMachineIdentityOutput) ToVirtualMachineIdentityOutput() VirtualMachineIdentityOutput {
	return o
}

func (o VirtualMachineIdentityOutput) ToVirtualMachineIdentityOutputWithContext(ctx context.Context) VirtualMachineIdentityOutput {
	return o
}

func (o VirtualMachineIdentityOutput) ToVirtualMachineIdentityPtrOutput() VirtualMachineIdentityPtrOutput {
	return o.ToVirtualMachineIdentityPtrOutputWithContext(context.Background())
}

func (o VirtualMachineIdentityOutput) ToVirtualMachineIdentityPtrOutputWithContext(ctx context.Context) VirtualMachineIdentityPtrOutput {
	return o.ApplyT(func(v VirtualMachineIdentity) *VirtualMachineIdentity {
		return &v
	}).(VirtualMachineIdentityPtrOutput)
}

// Specifies a list of user managed identity ids to be assigned to the VM. Required if `type` is `UserAssigned`.
func (o VirtualMachineIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualMachineIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID for the Service Principal associated with the Managed Service Identity of this Virtual Machine.
func (o VirtualMachineIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The Managed Service Identity Type of this Virtual Machine. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` (where you can specify the Service Principal ID's) to be used by this Virtual Machine using the `identityIds` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
func (o VirtualMachineIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type VirtualMachineIdentityPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineIdentity)(nil)).Elem()
}

func (o VirtualMachineIdentityPtrOutput) ToVirtualMachineIdentityPtrOutput() VirtualMachineIdentityPtrOutput {
	return o
}

func (o VirtualMachineIdentityPtrOutput) ToVirtualMachineIdentityPtrOutputWithContext(ctx context.Context) VirtualMachineIdentityPtrOutput {
	return o
}

func (o VirtualMachineIdentityPtrOutput) Elem() VirtualMachineIdentityOutput {
	return o.ApplyT(func(v *VirtualMachineIdentity) VirtualMachineIdentity { return *v }).(VirtualMachineIdentityOutput)
}

// Specifies a list of user managed identity ids to be assigned to the VM. Required if `type` is `UserAssigned`.
func (o VirtualMachineIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualMachineIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The Principal ID for the Service Principal associated with the Managed Service Identity of this Virtual Machine.
func (o VirtualMachineIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Managed Service Identity Type of this Virtual Machine. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` (where you can specify the Service Principal ID's) to be used by this Virtual Machine using the `identityIds` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
func (o VirtualMachineIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineOsProfile struct {
	// The password associated with the local administrator account.
	AdminPassword *string `pulumi:"adminPassword"`
	// Specifies the name of the local administrator account.
	AdminUsername string `pulumi:"adminUsername"`
	// Specifies the name of the Virtual Machine.
	ComputerName string `pulumi:"computerName"`
	// Specifies custom data to supply to the machine. On Linux-based systems, this can be used as a cloud-init script. On other systems, this will be copied as a file on disk. Internally, this provider will base64 encode this value before sending it to the API. The maximum length of the binary array is 65535 bytes.
	CustomData *string `pulumi:"customData"`
}

// VirtualMachineOsProfileInput is an input type that accepts VirtualMachineOsProfileArgs and VirtualMachineOsProfileOutput values.
// You can construct a concrete instance of `VirtualMachineOsProfileInput` via:
//
// 		 VirtualMachineOsProfileArgs{...}
//
type VirtualMachineOsProfileInput interface {
	pulumi.Input

	ToVirtualMachineOsProfileOutput() VirtualMachineOsProfileOutput
	ToVirtualMachineOsProfileOutputWithContext(context.Context) VirtualMachineOsProfileOutput
}

type VirtualMachineOsProfileArgs struct {
	// The password associated with the local administrator account.
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// Specifies the name of the local administrator account.
	AdminUsername pulumi.StringInput `pulumi:"adminUsername"`
	// Specifies the name of the Virtual Machine.
	ComputerName pulumi.StringInput `pulumi:"computerName"`
	// Specifies custom data to supply to the machine. On Linux-based systems, this can be used as a cloud-init script. On other systems, this will be copied as a file on disk. Internally, this provider will base64 encode this value before sending it to the API. The maximum length of the binary array is 65535 bytes.
	CustomData pulumi.StringPtrInput `pulumi:"customData"`
}

func (VirtualMachineOsProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineOsProfile)(nil)).Elem()
}

func (i VirtualMachineOsProfileArgs) ToVirtualMachineOsProfileOutput() VirtualMachineOsProfileOutput {
	return i.ToVirtualMachineOsProfileOutputWithContext(context.Background())
}

func (i VirtualMachineOsProfileArgs) ToVirtualMachineOsProfileOutputWithContext(ctx context.Context) VirtualMachineOsProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOsProfileOutput)
}

func (i VirtualMachineOsProfileArgs) ToVirtualMachineOsProfilePtrOutput() VirtualMachineOsProfilePtrOutput {
	return i.ToVirtualMachineOsProfilePtrOutputWithContext(context.Background())
}

func (i VirtualMachineOsProfileArgs) ToVirtualMachineOsProfilePtrOutputWithContext(ctx context.Context) VirtualMachineOsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOsProfileOutput).ToVirtualMachineOsProfilePtrOutputWithContext(ctx)
}

// VirtualMachineOsProfilePtrInput is an input type that accepts VirtualMachineOsProfileArgs, VirtualMachineOsProfilePtr and VirtualMachineOsProfilePtrOutput values.
// You can construct a concrete instance of `VirtualMachineOsProfilePtrInput` via:
//
// 		 VirtualMachineOsProfileArgs{...}
//
//  or:
//
// 		 nil
//
type VirtualMachineOsProfilePtrInput interface {
	pulumi.Input

	ToVirtualMachineOsProfilePtrOutput() VirtualMachineOsProfilePtrOutput
	ToVirtualMachineOsProfilePtrOutputWithContext(context.Context) VirtualMachineOsProfilePtrOutput
}

type virtualMachineOsProfilePtrType VirtualMachineOsProfileArgs

func VirtualMachineOsProfilePtr(v *VirtualMachineOsProfileArgs) VirtualMachineOsProfilePtrInput {
	return (*virtualMachineOsProfilePtrType)(v)
}

func (*virtualMachineOsProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineOsProfile)(nil)).Elem()
}

func (i *virtualMachineOsProfilePtrType) ToVirtualMachineOsProfilePtrOutput() VirtualMachineOsProfilePtrOutput {
	return i.ToVirtualMachineOsProfilePtrOutputWithContext(context.Background())
}

func (i *virtualMachineOsProfilePtrType) ToVirtualMachineOsProfilePtrOutputWithContext(ctx context.Context) VirtualMachineOsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOsProfilePtrOutput)
}

type VirtualMachineOsProfileOutput struct{ *pulumi.OutputState }

func (VirtualMachineOsProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineOsProfile)(nil)).Elem()
}

func (o VirtualMachineOsProfileOutput) ToVirtualMachineOsProfileOutput() VirtualMachineOsProfileOutput {
	return o
}

func (o VirtualMachineOsProfileOutput) ToVirtualMachineOsProfileOutputWithContext(ctx context.Context) VirtualMachineOsProfileOutput {
	return o
}

func (o VirtualMachineOsProfileOutput) ToVirtualMachineOsProfilePtrOutput() VirtualMachineOsProfilePtrOutput {
	return o.ToVirtualMachineOsProfilePtrOutputWithContext(context.Background())
}

func (o VirtualMachineOsProfileOutput) ToVirtualMachineOsProfilePtrOutputWithContext(ctx context.Context) VirtualMachineOsProfilePtrOutput {
	return o.ApplyT(func(v VirtualMachineOsProfile) *VirtualMachineOsProfile {
		return &v
	}).(VirtualMachineOsProfilePtrOutput)
}

// The password associated with the local administrator account.
func (o VirtualMachineOsProfileOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineOsProfile) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// Specifies the name of the local administrator account.
func (o VirtualMachineOsProfileOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineOsProfile) string { return v.AdminUsername }).(pulumi.StringOutput)
}

// Specifies the name of the Virtual Machine.
func (o VirtualMachineOsProfileOutput) ComputerName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineOsProfile) string { return v.ComputerName }).(pulumi.StringOutput)
}

// Specifies custom data to supply to the machine. On Linux-based systems, this can be used as a cloud-init script. On other systems, this will be copied as a file on disk. Internally, this provider will base64 encode this value before sending it to the API. The maximum length of the binary array is 65535 bytes.
func (o VirtualMachineOsProfileOutput) CustomData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineOsProfile) *string { return v.CustomData }).(pulumi.StringPtrOutput)
}

type VirtualMachineOsProfilePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineOsProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineOsProfile)(nil)).Elem()
}

func (o VirtualMachineOsProfilePtrOutput) ToVirtualMachineOsProfilePtrOutput() VirtualMachineOsProfilePtrOutput {
	return o
}

func (o VirtualMachineOsProfilePtrOutput) ToVirtualMachineOsProfilePtrOutputWithContext(ctx context.Context) VirtualMachineOsProfilePtrOutput {
	return o
}

func (o VirtualMachineOsProfilePtrOutput) Elem() VirtualMachineOsProfileOutput {
	return o.ApplyT(func(v *VirtualMachineOsProfile) VirtualMachineOsProfile { return *v }).(VirtualMachineOsProfileOutput)
}

// The password associated with the local administrator account.
func (o VirtualMachineOsProfilePtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineOsProfile) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of the local administrator account.
func (o VirtualMachineOsProfilePtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineOsProfile) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of the Virtual Machine.
func (o VirtualMachineOsProfilePtrOutput) ComputerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineOsProfile) *string {
		if v == nil {
			return nil
		}
		return &v.ComputerName
	}).(pulumi.StringPtrOutput)
}

// Specifies custom data to supply to the machine. On Linux-based systems, this can be used as a cloud-init script. On other systems, this will be copied as a file on disk. Internally, this provider will base64 encode this value before sending it to the API. The maximum length of the binary array is 65535 bytes.
func (o VirtualMachineOsProfilePtrOutput) CustomData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineOsProfile) *string {
		if v == nil {
			return nil
		}
		return v.CustomData
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineOsProfileLinuxConfig struct {
	// Specifies whether password authentication should be disabled. If set to `false`, an `adminPassword` must be specified.
	DisablePasswordAuthentication bool `pulumi:"disablePasswordAuthentication"`
	// One or more `sshKeys` blocks. This field is required if `disablePasswordAuthentication` is set to `true`.
	SshKeys []VirtualMachineOsProfileLinuxConfigSshKey `pulumi:"sshKeys"`
}

// VirtualMachineOsProfileLinuxConfigInput is an input type that accepts VirtualMachineOsProfileLinuxConfigArgs and VirtualMachineOsProfileLinuxConfigOutput values.
// You can construct a concrete instance of `VirtualMachineOsProfileLinuxConfigInput` via:
//
// 		 VirtualMachineOsProfileLinuxConfigArgs{...}
//
type VirtualMachineOsProfileLinuxConfigInput interface {
	pulumi.Input

	ToVirtualMachineOsProfileLinuxConfigOutput() VirtualMachineOsProfileLinuxConfigOutput
	ToVirtualMachineOsProfileLinuxConfigOutputWithContext(context.Context) VirtualMachineOsProfileLinuxConfigOutput
}

type VirtualMachineOsProfileLinuxConfigArgs struct {
	// Specifies whether password authentication should be disabled. If set to `false`, an `adminPassword` must be specified.
	DisablePasswordAuthentication pulumi.BoolInput `pulumi:"disablePasswordAuthentication"`
	// One or more `sshKeys` blocks. This field is required if `disablePasswordAuthentication` is set to `true`.
	SshKeys VirtualMachineOsProfileLinuxConfigSshKeyArrayInput `pulumi:"sshKeys"`
}

func (VirtualMachineOsProfileLinuxConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineOsProfileLinuxConfig)(nil)).Elem()
}

func (i VirtualMachineOsProfileLinuxConfigArgs) ToVirtualMachineOsProfileLinuxConfigOutput() VirtualMachineOsProfileLinuxConfigOutput {
	return i.ToVirtualMachineOsProfileLinuxConfigOutputWithContext(context.Background())
}

func (i VirtualMachineOsProfileLinuxConfigArgs) ToVirtualMachineOsProfileLinuxConfigOutputWithContext(ctx context.Context) VirtualMachineOsProfileLinuxConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOsProfileLinuxConfigOutput)
}

func (i VirtualMachineOsProfileLinuxConfigArgs) ToVirtualMachineOsProfileLinuxConfigPtrOutput() VirtualMachineOsProfileLinuxConfigPtrOutput {
	return i.ToVirtualMachineOsProfileLinuxConfigPtrOutputWithContext(context.Background())
}

func (i VirtualMachineOsProfileLinuxConfigArgs) ToVirtualMachineOsProfileLinuxConfigPtrOutputWithContext(ctx context.Context) VirtualMachineOsProfileLinuxConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOsProfileLinuxConfigOutput).ToVirtualMachineOsProfileLinuxConfigPtrOutputWithContext(ctx)
}

// VirtualMachineOsProfileLinuxConfigPtrInput is an input type that accepts VirtualMachineOsProfileLinuxConfigArgs, VirtualMachineOsProfileLinuxConfigPtr and VirtualMachineOsProfileLinuxConfigPtrOutput values.
// You can construct a concrete instance of `VirtualMachineOsProfileLinuxConfigPtrInput` via:
//
// 		 VirtualMachineOsProfileLinuxConfigArgs{...}
//
//  or:
//
// 		 nil
//
type VirtualMachineOsProfileLinuxConfigPtrInput interface {
	pulumi.Input

	ToVirtualMachineOsProfileLinuxConfigPtrOutput() VirtualMachineOsProfileLinuxConfigPtrOutput
	ToVirtualMachineOsProfileLinuxConfigPtrOutputWithContext(context.Context) VirtualMachineOsProfileLinuxConfigPtrOutput
}

type virtualMachineOsProfileLinuxConfigPtrType VirtualMachineOsProfileLinuxConfigArgs

func VirtualMachineOsProfileLinuxConfigPtr(v *VirtualMachineOsProfileLinuxConfigArgs) VirtualMachineOsProfileLinuxConfigPtrInput {
	return (*virtualMachineOsProfileLinuxConfigPtrType)(v)
}

func (*virtualMachineOsProfileLinuxConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineOsProfileLinuxConfig)(nil)).Elem()
}

func (i *virtualMachineOsProfileLinuxConfigPtrType) ToVirtualMachineOsProfileLinuxConfigPtrOutput() VirtualMachineOsProfileLinuxConfigPtrOutput {
	return i.ToVirtualMachineOsProfileLinuxConfigPtrOutputWithContext(context.Background())
}

func (i *virtualMachineOsProfileLinuxConfigPtrType) ToVirtualMachineOsProfileLinuxConfigPtrOutputWithContext(ctx context.Context) VirtualMachineOsProfileLinuxConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOsProfileLinuxConfigPtrOutput)
}

type VirtualMachineOsProfileLinuxConfigOutput struct{ *pulumi.OutputState }

func (VirtualMachineOsProfileLinuxConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineOsProfileLinuxConfig)(nil)).Elem()
}

func (o VirtualMachineOsProfileLinuxConfigOutput) ToVirtualMachineOsProfileLinuxConfigOutput() VirtualMachineOsProfileLinuxConfigOutput {
	return o
}

func (o VirtualMachineOsProfileLinuxConfigOutput) ToVirtualMachineOsProfileLinuxConfigOutputWithContext(ctx context.Context) VirtualMachineOsProfileLinuxConfigOutput {
	return o
}

func (o VirtualMachineOsProfileLinuxConfigOutput) ToVirtualMachineOsProfileLinuxConfigPtrOutput() VirtualMachineOsProfileLinuxConfigPtrOutput {
	return o.ToVirtualMachineOsProfileLinuxConfigPtrOutputWithContext(context.Background())
}

func (o VirtualMachineOsProfileLinuxConfigOutput) ToVirtualMachineOsProfileLinuxConfigPtrOutputWithContext(ctx context.Context) VirtualMachineOsProfileLinuxConfigPtrOutput {
	return o.ApplyT(func(v VirtualMachineOsProfileLinuxConfig) *VirtualMachineOsProfileLinuxConfig {
		return &v
	}).(VirtualMachineOsProfileLinuxConfigPtrOutput)
}

// Specifies whether password authentication should be disabled. If set to `false`, an `adminPassword` must be specified.
func (o VirtualMachineOsProfileLinuxConfigOutput) DisablePasswordAuthentication() pulumi.BoolOutput {
	return o.ApplyT(func(v VirtualMachineOsProfileLinuxConfig) bool { return v.DisablePasswordAuthentication }).(pulumi.BoolOutput)
}

// One or more `sshKeys` blocks. This field is required if `disablePasswordAuthentication` is set to `true`.
func (o VirtualMachineOsProfileLinuxConfigOutput) SshKeys() VirtualMachineOsProfileLinuxConfigSshKeyArrayOutput {
	return o.ApplyT(func(v VirtualMachineOsProfileLinuxConfig) []VirtualMachineOsProfileLinuxConfigSshKey {
		return v.SshKeys
	}).(VirtualMachineOsProfileLinuxConfigSshKeyArrayOutput)
}

type VirtualMachineOsProfileLinuxConfigPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineOsProfileLinuxConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineOsProfileLinuxConfig)(nil)).Elem()
}

func (o VirtualMachineOsProfileLinuxConfigPtrOutput) ToVirtualMachineOsProfileLinuxConfigPtrOutput() VirtualMachineOsProfileLinuxConfigPtrOutput {
	return o
}

func (o VirtualMachineOsProfileLinuxConfigPtrOutput) ToVirtualMachineOsProfileLinuxConfigPtrOutputWithContext(ctx context.Context) VirtualMachineOsProfileLinuxConfigPtrOutput {
	return o
}

func (o VirtualMachineOsProfileLinuxConfigPtrOutput) Elem() VirtualMachineOsProfileLinuxConfigOutput {
	return o.ApplyT(func(v *VirtualMachineOsProfileLinuxConfig) VirtualMachineOsProfileLinuxConfig { return *v }).(VirtualMachineOsProfileLinuxConfigOutput)
}

// Specifies whether password authentication should be disabled. If set to `false`, an `adminPassword` must be specified.
func (o VirtualMachineOsProfileLinuxConfigPtrOutput) DisablePasswordAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineOsProfileLinuxConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.DisablePasswordAuthentication
	}).(pulumi.BoolPtrOutput)
}

// One or more `sshKeys` blocks. This field is required if `disablePasswordAuthentication` is set to `true`.
func (o VirtualMachineOsProfileLinuxConfigPtrOutput) SshKeys() VirtualMachineOsProfileLinuxConfigSshKeyArrayOutput {
	return o.ApplyT(func(v *VirtualMachineOsProfileLinuxConfig) []VirtualMachineOsProfileLinuxConfigSshKey {
		if v == nil {
			return nil
		}
		return v.SshKeys
	}).(VirtualMachineOsProfileLinuxConfigSshKeyArrayOutput)
}

type VirtualMachineOsProfileLinuxConfigSshKey struct {
	// The Public SSH Key which should be written to the `path` defined above.
	KeyData string `pulumi:"keyData"`
	// The path of the destination file on the virtual machine
	Path string `pulumi:"path"`
}

// VirtualMachineOsProfileLinuxConfigSshKeyInput is an input type that accepts VirtualMachineOsProfileLinuxConfigSshKeyArgs and VirtualMachineOsProfileLinuxConfigSshKeyOutput values.
// You can construct a concrete instance of `VirtualMachineOsProfileLinuxConfigSshKeyInput` via:
//
// 		 VirtualMachineOsProfileLinuxConfigSshKeyArgs{...}
//
type VirtualMachineOsProfileLinuxConfigSshKeyInput interface {
	pulumi.Input

	ToVirtualMachineOsProfileLinuxConfigSshKeyOutput() VirtualMachineOsProfileLinuxConfigSshKeyOutput
	ToVirtualMachineOsProfileLinuxConfigSshKeyOutputWithContext(context.Context) VirtualMachineOsProfileLinuxConfigSshKeyOutput
}

type VirtualMachineOsProfileLinuxConfigSshKeyArgs struct {
	// The Public SSH Key which should be written to the `path` defined above.
	KeyData pulumi.StringInput `pulumi:"keyData"`
	// The path of the destination file on the virtual machine
	Path pulumi.StringInput `pulumi:"path"`
}

func (VirtualMachineOsProfileLinuxConfigSshKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineOsProfileLinuxConfigSshKey)(nil)).Elem()
}

func (i VirtualMachineOsProfileLinuxConfigSshKeyArgs) ToVirtualMachineOsProfileLinuxConfigSshKeyOutput() VirtualMachineOsProfileLinuxConfigSshKeyOutput {
	return i.ToVirtualMachineOsProfileLinuxConfigSshKeyOutputWithContext(context.Background())
}

func (i VirtualMachineOsProfileLinuxConfigSshKeyArgs) ToVirtualMachineOsProfileLinuxConfigSshKeyOutputWithContext(ctx context.Context) VirtualMachineOsProfileLinuxConfigSshKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOsProfileLinuxConfigSshKeyOutput)
}

// VirtualMachineOsProfileLinuxConfigSshKeyArrayInput is an input type that accepts VirtualMachineOsProfileLinuxConfigSshKeyArray and VirtualMachineOsProfileLinuxConfigSshKeyArrayOutput values.
// You can construct a concrete instance of `VirtualMachineOsProfileLinuxConfigSshKeyArrayInput` via:
//
// 		 VirtualMachineOsProfileLinuxConfigSshKeyArray{ VirtualMachineOsProfileLinuxConfigSshKeyArgs{...} }
//
type VirtualMachineOsProfileLinuxConfigSshKeyArrayInput interface {
	pulumi.Input

	ToVirtualMachineOsProfileLinuxConfigSshKeyArrayOutput() VirtualMachineOsProfileLinuxConfigSshKeyArrayOutput
	ToVirtualMachineOsProfileLinuxConfigSshKeyArrayOutputWithContext(context.Context) VirtualMachineOsProfileLinuxConfigSshKeyArrayOutput
}

type VirtualMachineOsProfileLinuxConfigSshKeyArray []VirtualMachineOsProfileLinuxConfigSshKeyInput

func (VirtualMachineOsProfileLinuxConfigSshKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineOsProfileLinuxConfigSshKey)(nil)).Elem()
}

func (i VirtualMachineOsProfileLinuxConfigSshKeyArray) ToVirtualMachineOsProfileLinuxConfigSshKeyArrayOutput() VirtualMachineOsProfileLinuxConfigSshKeyArrayOutput {
	return i.ToVirtualMachineOsProfileLinuxConfigSshKeyArrayOutputWithContext(context.Background())
}

func (i VirtualMachineOsProfileLinuxConfigSshKeyArray) ToVirtualMachineOsProfileLinuxConfigSshKeyArrayOutputWithContext(ctx context.Context) VirtualMachineOsProfileLinuxConfigSshKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOsProfileLinuxConfigSshKeyArrayOutput)
}

type VirtualMachineOsProfileLinuxConfigSshKeyOutput struct{ *pulumi.OutputState }

func (VirtualMachineOsProfileLinuxConfigSshKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineOsProfileLinuxConfigSshKey)(nil)).Elem()
}

func (o VirtualMachineOsProfileLinuxConfigSshKeyOutput) ToVirtualMachineOsProfileLinuxConfigSshKeyOutput() VirtualMachineOsProfileLinuxConfigSshKeyOutput {
	return o
}

func (o VirtualMachineOsProfileLinuxConfigSshKeyOutput) ToVirtualMachineOsProfileLinuxConfigSshKeyOutputWithContext(ctx context.Context) VirtualMachineOsProfileLinuxConfigSshKeyOutput {
	return o
}

// The Public SSH Key which should be written to the `path` defined above.
func (o VirtualMachineOsProfileLinuxConfigSshKeyOutput) KeyData() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineOsProfileLinuxConfigSshKey) string { return v.KeyData }).(pulumi.StringOutput)
}

// The path of the destination file on the virtual machine
func (o VirtualMachineOsProfileLinuxConfigSshKeyOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineOsProfileLinuxConfigSshKey) string { return v.Path }).(pulumi.StringOutput)
}

type VirtualMachineOsProfileLinuxConfigSshKeyArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineOsProfileLinuxConfigSshKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineOsProfileLinuxConfigSshKey)(nil)).Elem()
}

func (o VirtualMachineOsProfileLinuxConfigSshKeyArrayOutput) ToVirtualMachineOsProfileLinuxConfigSshKeyArrayOutput() VirtualMachineOsProfileLinuxConfigSshKeyArrayOutput {
	return o
}

func (o VirtualMachineOsProfileLinuxConfigSshKeyArrayOutput) ToVirtualMachineOsProfileLinuxConfigSshKeyArrayOutputWithContext(ctx context.Context) VirtualMachineOsProfileLinuxConfigSshKeyArrayOutput {
	return o
}

func (o VirtualMachineOsProfileLinuxConfigSshKeyArrayOutput) Index(i pulumi.IntInput) VirtualMachineOsProfileLinuxConfigSshKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineOsProfileLinuxConfigSshKey {
		return vs[0].([]VirtualMachineOsProfileLinuxConfigSshKey)[vs[1].(int)]
	}).(VirtualMachineOsProfileLinuxConfigSshKeyOutput)
}

type VirtualMachineOsProfileSecret struct {
	// Specifies the ID of the Key Vault to use.
	SourceVaultId string `pulumi:"sourceVaultId"`
	// One or more `vaultCertificates` blocks.
	VaultCertificates []VirtualMachineOsProfileSecretVaultCertificate `pulumi:"vaultCertificates"`
}

// VirtualMachineOsProfileSecretInput is an input type that accepts VirtualMachineOsProfileSecretArgs and VirtualMachineOsProfileSecretOutput values.
// You can construct a concrete instance of `VirtualMachineOsProfileSecretInput` via:
//
// 		 VirtualMachineOsProfileSecretArgs{...}
//
type VirtualMachineOsProfileSecretInput interface {
	pulumi.Input

	ToVirtualMachineOsProfileSecretOutput() VirtualMachineOsProfileSecretOutput
	ToVirtualMachineOsProfileSecretOutputWithContext(context.Context) VirtualMachineOsProfileSecretOutput
}

type VirtualMachineOsProfileSecretArgs struct {
	// Specifies the ID of the Key Vault to use.
	SourceVaultId pulumi.StringInput `pulumi:"sourceVaultId"`
	// One or more `vaultCertificates` blocks.
	VaultCertificates VirtualMachineOsProfileSecretVaultCertificateArrayInput `pulumi:"vaultCertificates"`
}

func (VirtualMachineOsProfileSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineOsProfileSecret)(nil)).Elem()
}

func (i VirtualMachineOsProfileSecretArgs) ToVirtualMachineOsProfileSecretOutput() VirtualMachineOsProfileSecretOutput {
	return i.ToVirtualMachineOsProfileSecretOutputWithContext(context.Background())
}

func (i VirtualMachineOsProfileSecretArgs) ToVirtualMachineOsProfileSecretOutputWithContext(ctx context.Context) VirtualMachineOsProfileSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOsProfileSecretOutput)
}

// VirtualMachineOsProfileSecretArrayInput is an input type that accepts VirtualMachineOsProfileSecretArray and VirtualMachineOsProfileSecretArrayOutput values.
// You can construct a concrete instance of `VirtualMachineOsProfileSecretArrayInput` via:
//
// 		 VirtualMachineOsProfileSecretArray{ VirtualMachineOsProfileSecretArgs{...} }
//
type VirtualMachineOsProfileSecretArrayInput interface {
	pulumi.Input

	ToVirtualMachineOsProfileSecretArrayOutput() VirtualMachineOsProfileSecretArrayOutput
	ToVirtualMachineOsProfileSecretArrayOutputWithContext(context.Context) VirtualMachineOsProfileSecretArrayOutput
}

type VirtualMachineOsProfileSecretArray []VirtualMachineOsProfileSecretInput

func (VirtualMachineOsProfileSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineOsProfileSecret)(nil)).Elem()
}

func (i VirtualMachineOsProfileSecretArray) ToVirtualMachineOsProfileSecretArrayOutput() VirtualMachineOsProfileSecretArrayOutput {
	return i.ToVirtualMachineOsProfileSecretArrayOutputWithContext(context.Background())
}

func (i VirtualMachineOsProfileSecretArray) ToVirtualMachineOsProfileSecretArrayOutputWithContext(ctx context.Context) VirtualMachineOsProfileSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOsProfileSecretArrayOutput)
}

type VirtualMachineOsProfileSecretOutput struct{ *pulumi.OutputState }

func (VirtualMachineOsProfileSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineOsProfileSecret)(nil)).Elem()
}

func (o VirtualMachineOsProfileSecretOutput) ToVirtualMachineOsProfileSecretOutput() VirtualMachineOsProfileSecretOutput {
	return o
}

func (o VirtualMachineOsProfileSecretOutput) ToVirtualMachineOsProfileSecretOutputWithContext(ctx context.Context) VirtualMachineOsProfileSecretOutput {
	return o
}

// Specifies the ID of the Key Vault to use.
func (o VirtualMachineOsProfileSecretOutput) SourceVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineOsProfileSecret) string { return v.SourceVaultId }).(pulumi.StringOutput)
}

// One or more `vaultCertificates` blocks.
func (o VirtualMachineOsProfileSecretOutput) VaultCertificates() VirtualMachineOsProfileSecretVaultCertificateArrayOutput {
	return o.ApplyT(func(v VirtualMachineOsProfileSecret) []VirtualMachineOsProfileSecretVaultCertificate {
		return v.VaultCertificates
	}).(VirtualMachineOsProfileSecretVaultCertificateArrayOutput)
}

type VirtualMachineOsProfileSecretArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineOsProfileSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineOsProfileSecret)(nil)).Elem()
}

func (o VirtualMachineOsProfileSecretArrayOutput) ToVirtualMachineOsProfileSecretArrayOutput() VirtualMachineOsProfileSecretArrayOutput {
	return o
}

func (o VirtualMachineOsProfileSecretArrayOutput) ToVirtualMachineOsProfileSecretArrayOutputWithContext(ctx context.Context) VirtualMachineOsProfileSecretArrayOutput {
	return o
}

func (o VirtualMachineOsProfileSecretArrayOutput) Index(i pulumi.IntInput) VirtualMachineOsProfileSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineOsProfileSecret {
		return vs[0].([]VirtualMachineOsProfileSecret)[vs[1].(int)]
	}).(VirtualMachineOsProfileSecretOutput)
}

type VirtualMachineOsProfileSecretVaultCertificate struct {
	// Specifies the certificate store on the Virtual Machine where the certificate should be added to, such as `My`.
	CertificateStore *string `pulumi:"certificateStore"`
	// The ID of the Key Vault Secret. Stored secret is the Base64 encoding of a JSON Object that which is encoded in UTF-8 of which the contents need to be:
	CertificateUrl string `pulumi:"certificateUrl"`
}

// VirtualMachineOsProfileSecretVaultCertificateInput is an input type that accepts VirtualMachineOsProfileSecretVaultCertificateArgs and VirtualMachineOsProfileSecretVaultCertificateOutput values.
// You can construct a concrete instance of `VirtualMachineOsProfileSecretVaultCertificateInput` via:
//
// 		 VirtualMachineOsProfileSecretVaultCertificateArgs{...}
//
type VirtualMachineOsProfileSecretVaultCertificateInput interface {
	pulumi.Input

	ToVirtualMachineOsProfileSecretVaultCertificateOutput() VirtualMachineOsProfileSecretVaultCertificateOutput
	ToVirtualMachineOsProfileSecretVaultCertificateOutputWithContext(context.Context) VirtualMachineOsProfileSecretVaultCertificateOutput
}

type VirtualMachineOsProfileSecretVaultCertificateArgs struct {
	// Specifies the certificate store on the Virtual Machine where the certificate should be added to, such as `My`.
	CertificateStore pulumi.StringPtrInput `pulumi:"certificateStore"`
	// The ID of the Key Vault Secret. Stored secret is the Base64 encoding of a JSON Object that which is encoded in UTF-8 of which the contents need to be:
	CertificateUrl pulumi.StringInput `pulumi:"certificateUrl"`
}

func (VirtualMachineOsProfileSecretVaultCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineOsProfileSecretVaultCertificate)(nil)).Elem()
}

func (i VirtualMachineOsProfileSecretVaultCertificateArgs) ToVirtualMachineOsProfileSecretVaultCertificateOutput() VirtualMachineOsProfileSecretVaultCertificateOutput {
	return i.ToVirtualMachineOsProfileSecretVaultCertificateOutputWithContext(context.Background())
}

func (i VirtualMachineOsProfileSecretVaultCertificateArgs) ToVirtualMachineOsProfileSecretVaultCertificateOutputWithContext(ctx context.Context) VirtualMachineOsProfileSecretVaultCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOsProfileSecretVaultCertificateOutput)
}

// VirtualMachineOsProfileSecretVaultCertificateArrayInput is an input type that accepts VirtualMachineOsProfileSecretVaultCertificateArray and VirtualMachineOsProfileSecretVaultCertificateArrayOutput values.
// You can construct a concrete instance of `VirtualMachineOsProfileSecretVaultCertificateArrayInput` via:
//
// 		 VirtualMachineOsProfileSecretVaultCertificateArray{ VirtualMachineOsProfileSecretVaultCertificateArgs{...} }
//
type VirtualMachineOsProfileSecretVaultCertificateArrayInput interface {
	pulumi.Input

	ToVirtualMachineOsProfileSecretVaultCertificateArrayOutput() VirtualMachineOsProfileSecretVaultCertificateArrayOutput
	ToVirtualMachineOsProfileSecretVaultCertificateArrayOutputWithContext(context.Context) VirtualMachineOsProfileSecretVaultCertificateArrayOutput
}

type VirtualMachineOsProfileSecretVaultCertificateArray []VirtualMachineOsProfileSecretVaultCertificateInput

func (VirtualMachineOsProfileSecretVaultCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineOsProfileSecretVaultCertificate)(nil)).Elem()
}

func (i VirtualMachineOsProfileSecretVaultCertificateArray) ToVirtualMachineOsProfileSecretVaultCertificateArrayOutput() VirtualMachineOsProfileSecretVaultCertificateArrayOutput {
	return i.ToVirtualMachineOsProfileSecretVaultCertificateArrayOutputWithContext(context.Background())
}

func (i VirtualMachineOsProfileSecretVaultCertificateArray) ToVirtualMachineOsProfileSecretVaultCertificateArrayOutputWithContext(ctx context.Context) VirtualMachineOsProfileSecretVaultCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOsProfileSecretVaultCertificateArrayOutput)
}

type VirtualMachineOsProfileSecretVaultCertificateOutput struct{ *pulumi.OutputState }

func (VirtualMachineOsProfileSecretVaultCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineOsProfileSecretVaultCertificate)(nil)).Elem()
}

func (o VirtualMachineOsProfileSecretVaultCertificateOutput) ToVirtualMachineOsProfileSecretVaultCertificateOutput() VirtualMachineOsProfileSecretVaultCertificateOutput {
	return o
}

func (o VirtualMachineOsProfileSecretVaultCertificateOutput) ToVirtualMachineOsProfileSecretVaultCertificateOutputWithContext(ctx context.Context) VirtualMachineOsProfileSecretVaultCertificateOutput {
	return o
}

// Specifies the certificate store on the Virtual Machine where the certificate should be added to, such as `My`.
func (o VirtualMachineOsProfileSecretVaultCertificateOutput) CertificateStore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineOsProfileSecretVaultCertificate) *string { return v.CertificateStore }).(pulumi.StringPtrOutput)
}

// The ID of the Key Vault Secret. Stored secret is the Base64 encoding of a JSON Object that which is encoded in UTF-8 of which the contents need to be:
func (o VirtualMachineOsProfileSecretVaultCertificateOutput) CertificateUrl() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineOsProfileSecretVaultCertificate) string { return v.CertificateUrl }).(pulumi.StringOutput)
}

type VirtualMachineOsProfileSecretVaultCertificateArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineOsProfileSecretVaultCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineOsProfileSecretVaultCertificate)(nil)).Elem()
}

func (o VirtualMachineOsProfileSecretVaultCertificateArrayOutput) ToVirtualMachineOsProfileSecretVaultCertificateArrayOutput() VirtualMachineOsProfileSecretVaultCertificateArrayOutput {
	return o
}

func (o VirtualMachineOsProfileSecretVaultCertificateArrayOutput) ToVirtualMachineOsProfileSecretVaultCertificateArrayOutputWithContext(ctx context.Context) VirtualMachineOsProfileSecretVaultCertificateArrayOutput {
	return o
}

func (o VirtualMachineOsProfileSecretVaultCertificateArrayOutput) Index(i pulumi.IntInput) VirtualMachineOsProfileSecretVaultCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineOsProfileSecretVaultCertificate {
		return vs[0].([]VirtualMachineOsProfileSecretVaultCertificate)[vs[1].(int)]
	}).(VirtualMachineOsProfileSecretVaultCertificateOutput)
}

type VirtualMachineOsProfileWindowsConfig struct {
	// A `additionalUnattendConfig` block.
	AdditionalUnattendConfigs []VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig `pulumi:"additionalUnattendConfigs"`
	// Are automatic updates enabled on this Virtual Machine? Defaults to `false.`
	EnableAutomaticUpgrades *bool `pulumi:"enableAutomaticUpgrades"`
	// Should the Azure Virtual Machine Guest Agent be installed on this Virtual Machine? Defaults to `false`.
	ProvisionVmAgent *bool `pulumi:"provisionVmAgent"`
	// Specifies the time zone of the virtual machine, [the possible values are defined here](http://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
	Timezone *string `pulumi:"timezone"`
	// One or more `winrm` block.
	Winrms []VirtualMachineOsProfileWindowsConfigWinrm `pulumi:"winrms"`
}

// VirtualMachineOsProfileWindowsConfigInput is an input type that accepts VirtualMachineOsProfileWindowsConfigArgs and VirtualMachineOsProfileWindowsConfigOutput values.
// You can construct a concrete instance of `VirtualMachineOsProfileWindowsConfigInput` via:
//
// 		 VirtualMachineOsProfileWindowsConfigArgs{...}
//
type VirtualMachineOsProfileWindowsConfigInput interface {
	pulumi.Input

	ToVirtualMachineOsProfileWindowsConfigOutput() VirtualMachineOsProfileWindowsConfigOutput
	ToVirtualMachineOsProfileWindowsConfigOutputWithContext(context.Context) VirtualMachineOsProfileWindowsConfigOutput
}

type VirtualMachineOsProfileWindowsConfigArgs struct {
	// A `additionalUnattendConfig` block.
	AdditionalUnattendConfigs VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArrayInput `pulumi:"additionalUnattendConfigs"`
	// Are automatic updates enabled on this Virtual Machine? Defaults to `false.`
	EnableAutomaticUpgrades pulumi.BoolPtrInput `pulumi:"enableAutomaticUpgrades"`
	// Should the Azure Virtual Machine Guest Agent be installed on this Virtual Machine? Defaults to `false`.
	ProvisionVmAgent pulumi.BoolPtrInput `pulumi:"provisionVmAgent"`
	// Specifies the time zone of the virtual machine, [the possible values are defined here](http://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
	Timezone pulumi.StringPtrInput `pulumi:"timezone"`
	// One or more `winrm` block.
	Winrms VirtualMachineOsProfileWindowsConfigWinrmArrayInput `pulumi:"winrms"`
}

func (VirtualMachineOsProfileWindowsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineOsProfileWindowsConfig)(nil)).Elem()
}

func (i VirtualMachineOsProfileWindowsConfigArgs) ToVirtualMachineOsProfileWindowsConfigOutput() VirtualMachineOsProfileWindowsConfigOutput {
	return i.ToVirtualMachineOsProfileWindowsConfigOutputWithContext(context.Background())
}

func (i VirtualMachineOsProfileWindowsConfigArgs) ToVirtualMachineOsProfileWindowsConfigOutputWithContext(ctx context.Context) VirtualMachineOsProfileWindowsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOsProfileWindowsConfigOutput)
}

func (i VirtualMachineOsProfileWindowsConfigArgs) ToVirtualMachineOsProfileWindowsConfigPtrOutput() VirtualMachineOsProfileWindowsConfigPtrOutput {
	return i.ToVirtualMachineOsProfileWindowsConfigPtrOutputWithContext(context.Background())
}

func (i VirtualMachineOsProfileWindowsConfigArgs) ToVirtualMachineOsProfileWindowsConfigPtrOutputWithContext(ctx context.Context) VirtualMachineOsProfileWindowsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOsProfileWindowsConfigOutput).ToVirtualMachineOsProfileWindowsConfigPtrOutputWithContext(ctx)
}

// VirtualMachineOsProfileWindowsConfigPtrInput is an input type that accepts VirtualMachineOsProfileWindowsConfigArgs, VirtualMachineOsProfileWindowsConfigPtr and VirtualMachineOsProfileWindowsConfigPtrOutput values.
// You can construct a concrete instance of `VirtualMachineOsProfileWindowsConfigPtrInput` via:
//
// 		 VirtualMachineOsProfileWindowsConfigArgs{...}
//
//  or:
//
// 		 nil
//
type VirtualMachineOsProfileWindowsConfigPtrInput interface {
	pulumi.Input

	ToVirtualMachineOsProfileWindowsConfigPtrOutput() VirtualMachineOsProfileWindowsConfigPtrOutput
	ToVirtualMachineOsProfileWindowsConfigPtrOutputWithContext(context.Context) VirtualMachineOsProfileWindowsConfigPtrOutput
}

type virtualMachineOsProfileWindowsConfigPtrType VirtualMachineOsProfileWindowsConfigArgs

func VirtualMachineOsProfileWindowsConfigPtr(v *VirtualMachineOsProfileWindowsConfigArgs) VirtualMachineOsProfileWindowsConfigPtrInput {
	return (*virtualMachineOsProfileWindowsConfigPtrType)(v)
}

func (*virtualMachineOsProfileWindowsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineOsProfileWindowsConfig)(nil)).Elem()
}

func (i *virtualMachineOsProfileWindowsConfigPtrType) ToVirtualMachineOsProfileWindowsConfigPtrOutput() VirtualMachineOsProfileWindowsConfigPtrOutput {
	return i.ToVirtualMachineOsProfileWindowsConfigPtrOutputWithContext(context.Background())
}

func (i *virtualMachineOsProfileWindowsConfigPtrType) ToVirtualMachineOsProfileWindowsConfigPtrOutputWithContext(ctx context.Context) VirtualMachineOsProfileWindowsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOsProfileWindowsConfigPtrOutput)
}

type VirtualMachineOsProfileWindowsConfigOutput struct{ *pulumi.OutputState }

func (VirtualMachineOsProfileWindowsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineOsProfileWindowsConfig)(nil)).Elem()
}

func (o VirtualMachineOsProfileWindowsConfigOutput) ToVirtualMachineOsProfileWindowsConfigOutput() VirtualMachineOsProfileWindowsConfigOutput {
	return o
}

func (o VirtualMachineOsProfileWindowsConfigOutput) ToVirtualMachineOsProfileWindowsConfigOutputWithContext(ctx context.Context) VirtualMachineOsProfileWindowsConfigOutput {
	return o
}

func (o VirtualMachineOsProfileWindowsConfigOutput) ToVirtualMachineOsProfileWindowsConfigPtrOutput() VirtualMachineOsProfileWindowsConfigPtrOutput {
	return o.ToVirtualMachineOsProfileWindowsConfigPtrOutputWithContext(context.Background())
}

func (o VirtualMachineOsProfileWindowsConfigOutput) ToVirtualMachineOsProfileWindowsConfigPtrOutputWithContext(ctx context.Context) VirtualMachineOsProfileWindowsConfigPtrOutput {
	return o.ApplyT(func(v VirtualMachineOsProfileWindowsConfig) *VirtualMachineOsProfileWindowsConfig {
		return &v
	}).(VirtualMachineOsProfileWindowsConfigPtrOutput)
}

// A `additionalUnattendConfig` block.
func (o VirtualMachineOsProfileWindowsConfigOutput) AdditionalUnattendConfigs() VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput {
	return o.ApplyT(func(v VirtualMachineOsProfileWindowsConfig) []VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig {
		return v.AdditionalUnattendConfigs
	}).(VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput)
}

// Are automatic updates enabled on this Virtual Machine? Defaults to `false.`
func (o VirtualMachineOsProfileWindowsConfigOutput) EnableAutomaticUpgrades() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineOsProfileWindowsConfig) *bool { return v.EnableAutomaticUpgrades }).(pulumi.BoolPtrOutput)
}

// Should the Azure Virtual Machine Guest Agent be installed on this Virtual Machine? Defaults to `false`.
func (o VirtualMachineOsProfileWindowsConfigOutput) ProvisionVmAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineOsProfileWindowsConfig) *bool { return v.ProvisionVmAgent }).(pulumi.BoolPtrOutput)
}

// Specifies the time zone of the virtual machine, [the possible values are defined here](http://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
func (o VirtualMachineOsProfileWindowsConfigOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineOsProfileWindowsConfig) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

// One or more `winrm` block.
func (o VirtualMachineOsProfileWindowsConfigOutput) Winrms() VirtualMachineOsProfileWindowsConfigWinrmArrayOutput {
	return o.ApplyT(func(v VirtualMachineOsProfileWindowsConfig) []VirtualMachineOsProfileWindowsConfigWinrm {
		return v.Winrms
	}).(VirtualMachineOsProfileWindowsConfigWinrmArrayOutput)
}

type VirtualMachineOsProfileWindowsConfigPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineOsProfileWindowsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineOsProfileWindowsConfig)(nil)).Elem()
}

func (o VirtualMachineOsProfileWindowsConfigPtrOutput) ToVirtualMachineOsProfileWindowsConfigPtrOutput() VirtualMachineOsProfileWindowsConfigPtrOutput {
	return o
}

func (o VirtualMachineOsProfileWindowsConfigPtrOutput) ToVirtualMachineOsProfileWindowsConfigPtrOutputWithContext(ctx context.Context) VirtualMachineOsProfileWindowsConfigPtrOutput {
	return o
}

func (o VirtualMachineOsProfileWindowsConfigPtrOutput) Elem() VirtualMachineOsProfileWindowsConfigOutput {
	return o.ApplyT(func(v *VirtualMachineOsProfileWindowsConfig) VirtualMachineOsProfileWindowsConfig { return *v }).(VirtualMachineOsProfileWindowsConfigOutput)
}

// A `additionalUnattendConfig` block.
func (o VirtualMachineOsProfileWindowsConfigPtrOutput) AdditionalUnattendConfigs() VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput {
	return o.ApplyT(func(v *VirtualMachineOsProfileWindowsConfig) []VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig {
		if v == nil {
			return nil
		}
		return v.AdditionalUnattendConfigs
	}).(VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput)
}

// Are automatic updates enabled on this Virtual Machine? Defaults to `false.`
func (o VirtualMachineOsProfileWindowsConfigPtrOutput) EnableAutomaticUpgrades() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineOsProfileWindowsConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAutomaticUpgrades
	}).(pulumi.BoolPtrOutput)
}

// Should the Azure Virtual Machine Guest Agent be installed on this Virtual Machine? Defaults to `false`.
func (o VirtualMachineOsProfileWindowsConfigPtrOutput) ProvisionVmAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineOsProfileWindowsConfig) *bool {
		if v == nil {
			return nil
		}
		return v.ProvisionVmAgent
	}).(pulumi.BoolPtrOutput)
}

// Specifies the time zone of the virtual machine, [the possible values are defined here](http://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
func (o VirtualMachineOsProfileWindowsConfigPtrOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineOsProfileWindowsConfig) *string {
		if v == nil {
			return nil
		}
		return v.Timezone
	}).(pulumi.StringPtrOutput)
}

// One or more `winrm` block.
func (o VirtualMachineOsProfileWindowsConfigPtrOutput) Winrms() VirtualMachineOsProfileWindowsConfigWinrmArrayOutput {
	return o.ApplyT(func(v *VirtualMachineOsProfileWindowsConfig) []VirtualMachineOsProfileWindowsConfigWinrm {
		if v == nil {
			return nil
		}
		return v.Winrms
	}).(VirtualMachineOsProfileWindowsConfigWinrmArrayOutput)
}

type VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig struct {
	// Specifies the name of the component to configure with the added content. The only allowable value is `Microsoft-Windows-Shell-Setup`.
	Component string `pulumi:"component"`
	// Specifies the base-64 encoded XML formatted content that is added to the unattend.xml file for the specified path and component.
	Content string `pulumi:"content"`
	// Specifies the name of the pass that the content applies to. The only allowable value is `oobeSystem`.
	Pass string `pulumi:"pass"`
	// Specifies the name of the setting to which the content applies. Possible values are: `FirstLogonCommands` and `AutoLogon`.
	SettingName string `pulumi:"settingName"`
}

// VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigInput is an input type that accepts VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArgs and VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigOutput values.
// You can construct a concrete instance of `VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigInput` via:
//
// 		 VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArgs{...}
//
type VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigInput interface {
	pulumi.Input

	ToVirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigOutput() VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigOutput
	ToVirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigOutputWithContext(context.Context) VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigOutput
}

type VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArgs struct {
	// Specifies the name of the component to configure with the added content. The only allowable value is `Microsoft-Windows-Shell-Setup`.
	Component pulumi.StringInput `pulumi:"component"`
	// Specifies the base-64 encoded XML formatted content that is added to the unattend.xml file for the specified path and component.
	Content pulumi.StringInput `pulumi:"content"`
	// Specifies the name of the pass that the content applies to. The only allowable value is `oobeSystem`.
	Pass pulumi.StringInput `pulumi:"pass"`
	// Specifies the name of the setting to which the content applies. Possible values are: `FirstLogonCommands` and `AutoLogon`.
	SettingName pulumi.StringInput `pulumi:"settingName"`
}

func (VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig)(nil)).Elem()
}

func (i VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArgs) ToVirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigOutput() VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigOutput {
	return i.ToVirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigOutputWithContext(context.Background())
}

func (i VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArgs) ToVirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigOutputWithContext(ctx context.Context) VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigOutput)
}

// VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArrayInput is an input type that accepts VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArray and VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput values.
// You can construct a concrete instance of `VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArrayInput` via:
//
// 		 VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArray{ VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArgs{...} }
//
type VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArrayInput interface {
	pulumi.Input

	ToVirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput() VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput
	ToVirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArrayOutputWithContext(context.Context) VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput
}

type VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArray []VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigInput

func (VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig)(nil)).Elem()
}

func (i VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArray) ToVirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput() VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput {
	return i.ToVirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArrayOutputWithContext(context.Background())
}

func (i VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArray) ToVirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArrayOutputWithContext(ctx context.Context) VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput)
}

type VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigOutput struct{ *pulumi.OutputState }

func (VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig)(nil)).Elem()
}

func (o VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigOutput) ToVirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigOutput() VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigOutput {
	return o
}

func (o VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigOutput) ToVirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigOutputWithContext(ctx context.Context) VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigOutput {
	return o
}

// Specifies the name of the component to configure with the added content. The only allowable value is `Microsoft-Windows-Shell-Setup`.
func (o VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigOutput) Component() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig) string { return v.Component }).(pulumi.StringOutput)
}

// Specifies the base-64 encoded XML formatted content that is added to the unattend.xml file for the specified path and component.
func (o VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig) string { return v.Content }).(pulumi.StringOutput)
}

// Specifies the name of the pass that the content applies to. The only allowable value is `oobeSystem`.
func (o VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigOutput) Pass() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig) string { return v.Pass }).(pulumi.StringOutput)
}

// Specifies the name of the setting to which the content applies. Possible values are: `FirstLogonCommands` and `AutoLogon`.
func (o VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigOutput) SettingName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig) string { return v.SettingName }).(pulumi.StringOutput)
}

type VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig)(nil)).Elem()
}

func (o VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput) ToVirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput() VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput {
	return o
}

func (o VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput) ToVirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArrayOutputWithContext(ctx context.Context) VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput {
	return o
}

func (o VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput) Index(i pulumi.IntInput) VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig {
		return vs[0].([]VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig)[vs[1].(int)]
	}).(VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigOutput)
}

type VirtualMachineOsProfileWindowsConfigWinrm struct {
	// The ID of the Key Vault Secret which contains the encrypted Certificate which should be installed on the Virtual Machine. This certificate must also be specified in the `vaultCertificates` block within the `osProfileSecrets` block.
	CertificateUrl *string `pulumi:"certificateUrl"`
	// Specifies the protocol of listener. Possible values are `HTTP` or `HTTPS`.
	Protocol string `pulumi:"protocol"`
}

// VirtualMachineOsProfileWindowsConfigWinrmInput is an input type that accepts VirtualMachineOsProfileWindowsConfigWinrmArgs and VirtualMachineOsProfileWindowsConfigWinrmOutput values.
// You can construct a concrete instance of `VirtualMachineOsProfileWindowsConfigWinrmInput` via:
//
// 		 VirtualMachineOsProfileWindowsConfigWinrmArgs{...}
//
type VirtualMachineOsProfileWindowsConfigWinrmInput interface {
	pulumi.Input

	ToVirtualMachineOsProfileWindowsConfigWinrmOutput() VirtualMachineOsProfileWindowsConfigWinrmOutput
	ToVirtualMachineOsProfileWindowsConfigWinrmOutputWithContext(context.Context) VirtualMachineOsProfileWindowsConfigWinrmOutput
}

type VirtualMachineOsProfileWindowsConfigWinrmArgs struct {
	// The ID of the Key Vault Secret which contains the encrypted Certificate which should be installed on the Virtual Machine. This certificate must also be specified in the `vaultCertificates` block within the `osProfileSecrets` block.
	CertificateUrl pulumi.StringPtrInput `pulumi:"certificateUrl"`
	// Specifies the protocol of listener. Possible values are `HTTP` or `HTTPS`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (VirtualMachineOsProfileWindowsConfigWinrmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineOsProfileWindowsConfigWinrm)(nil)).Elem()
}

func (i VirtualMachineOsProfileWindowsConfigWinrmArgs) ToVirtualMachineOsProfileWindowsConfigWinrmOutput() VirtualMachineOsProfileWindowsConfigWinrmOutput {
	return i.ToVirtualMachineOsProfileWindowsConfigWinrmOutputWithContext(context.Background())
}

func (i VirtualMachineOsProfileWindowsConfigWinrmArgs) ToVirtualMachineOsProfileWindowsConfigWinrmOutputWithContext(ctx context.Context) VirtualMachineOsProfileWindowsConfigWinrmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOsProfileWindowsConfigWinrmOutput)
}

// VirtualMachineOsProfileWindowsConfigWinrmArrayInput is an input type that accepts VirtualMachineOsProfileWindowsConfigWinrmArray and VirtualMachineOsProfileWindowsConfigWinrmArrayOutput values.
// You can construct a concrete instance of `VirtualMachineOsProfileWindowsConfigWinrmArrayInput` via:
//
// 		 VirtualMachineOsProfileWindowsConfigWinrmArray{ VirtualMachineOsProfileWindowsConfigWinrmArgs{...} }
//
type VirtualMachineOsProfileWindowsConfigWinrmArrayInput interface {
	pulumi.Input

	ToVirtualMachineOsProfileWindowsConfigWinrmArrayOutput() VirtualMachineOsProfileWindowsConfigWinrmArrayOutput
	ToVirtualMachineOsProfileWindowsConfigWinrmArrayOutputWithContext(context.Context) VirtualMachineOsProfileWindowsConfigWinrmArrayOutput
}

type VirtualMachineOsProfileWindowsConfigWinrmArray []VirtualMachineOsProfileWindowsConfigWinrmInput

func (VirtualMachineOsProfileWindowsConfigWinrmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineOsProfileWindowsConfigWinrm)(nil)).Elem()
}

func (i VirtualMachineOsProfileWindowsConfigWinrmArray) ToVirtualMachineOsProfileWindowsConfigWinrmArrayOutput() VirtualMachineOsProfileWindowsConfigWinrmArrayOutput {
	return i.ToVirtualMachineOsProfileWindowsConfigWinrmArrayOutputWithContext(context.Background())
}

func (i VirtualMachineOsProfileWindowsConfigWinrmArray) ToVirtualMachineOsProfileWindowsConfigWinrmArrayOutputWithContext(ctx context.Context) VirtualMachineOsProfileWindowsConfigWinrmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOsProfileWindowsConfigWinrmArrayOutput)
}

type VirtualMachineOsProfileWindowsConfigWinrmOutput struct{ *pulumi.OutputState }

func (VirtualMachineOsProfileWindowsConfigWinrmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineOsProfileWindowsConfigWinrm)(nil)).Elem()
}

func (o VirtualMachineOsProfileWindowsConfigWinrmOutput) ToVirtualMachineOsProfileWindowsConfigWinrmOutput() VirtualMachineOsProfileWindowsConfigWinrmOutput {
	return o
}

func (o VirtualMachineOsProfileWindowsConfigWinrmOutput) ToVirtualMachineOsProfileWindowsConfigWinrmOutputWithContext(ctx context.Context) VirtualMachineOsProfileWindowsConfigWinrmOutput {
	return o
}

// The ID of the Key Vault Secret which contains the encrypted Certificate which should be installed on the Virtual Machine. This certificate must also be specified in the `vaultCertificates` block within the `osProfileSecrets` block.
func (o VirtualMachineOsProfileWindowsConfigWinrmOutput) CertificateUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineOsProfileWindowsConfigWinrm) *string { return v.CertificateUrl }).(pulumi.StringPtrOutput)
}

// Specifies the protocol of listener. Possible values are `HTTP` or `HTTPS`.
func (o VirtualMachineOsProfileWindowsConfigWinrmOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineOsProfileWindowsConfigWinrm) string { return v.Protocol }).(pulumi.StringOutput)
}

type VirtualMachineOsProfileWindowsConfigWinrmArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineOsProfileWindowsConfigWinrmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineOsProfileWindowsConfigWinrm)(nil)).Elem()
}

func (o VirtualMachineOsProfileWindowsConfigWinrmArrayOutput) ToVirtualMachineOsProfileWindowsConfigWinrmArrayOutput() VirtualMachineOsProfileWindowsConfigWinrmArrayOutput {
	return o
}

func (o VirtualMachineOsProfileWindowsConfigWinrmArrayOutput) ToVirtualMachineOsProfileWindowsConfigWinrmArrayOutputWithContext(ctx context.Context) VirtualMachineOsProfileWindowsConfigWinrmArrayOutput {
	return o
}

func (o VirtualMachineOsProfileWindowsConfigWinrmArrayOutput) Index(i pulumi.IntInput) VirtualMachineOsProfileWindowsConfigWinrmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineOsProfileWindowsConfigWinrm {
		return vs[0].([]VirtualMachineOsProfileWindowsConfigWinrm)[vs[1].(int)]
	}).(VirtualMachineOsProfileWindowsConfigWinrmOutput)
}

type VirtualMachinePlan struct {
	// Specifies the name of the image from the marketplace.
	Name string `pulumi:"name"`
	// Specifies the product of the image from the marketplace.
	Product string `pulumi:"product"`
	// Specifies the publisher of the image.
	Publisher string `pulumi:"publisher"`
}

// VirtualMachinePlanInput is an input type that accepts VirtualMachinePlanArgs and VirtualMachinePlanOutput values.
// You can construct a concrete instance of `VirtualMachinePlanInput` via:
//
// 		 VirtualMachinePlanArgs{...}
//
type VirtualMachinePlanInput interface {
	pulumi.Input

	ToVirtualMachinePlanOutput() VirtualMachinePlanOutput
	ToVirtualMachinePlanOutputWithContext(context.Context) VirtualMachinePlanOutput
}

type VirtualMachinePlanArgs struct {
	// Specifies the name of the image from the marketplace.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the product of the image from the marketplace.
	Product pulumi.StringInput `pulumi:"product"`
	// Specifies the publisher of the image.
	Publisher pulumi.StringInput `pulumi:"publisher"`
}

func (VirtualMachinePlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachinePlan)(nil)).Elem()
}

func (i VirtualMachinePlanArgs) ToVirtualMachinePlanOutput() VirtualMachinePlanOutput {
	return i.ToVirtualMachinePlanOutputWithContext(context.Background())
}

func (i VirtualMachinePlanArgs) ToVirtualMachinePlanOutputWithContext(ctx context.Context) VirtualMachinePlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachinePlanOutput)
}

func (i VirtualMachinePlanArgs) ToVirtualMachinePlanPtrOutput() VirtualMachinePlanPtrOutput {
	return i.ToVirtualMachinePlanPtrOutputWithContext(context.Background())
}

func (i VirtualMachinePlanArgs) ToVirtualMachinePlanPtrOutputWithContext(ctx context.Context) VirtualMachinePlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachinePlanOutput).ToVirtualMachinePlanPtrOutputWithContext(ctx)
}

// VirtualMachinePlanPtrInput is an input type that accepts VirtualMachinePlanArgs, VirtualMachinePlanPtr and VirtualMachinePlanPtrOutput values.
// You can construct a concrete instance of `VirtualMachinePlanPtrInput` via:
//
// 		 VirtualMachinePlanArgs{...}
//
//  or:
//
// 		 nil
//
type VirtualMachinePlanPtrInput interface {
	pulumi.Input

	ToVirtualMachinePlanPtrOutput() VirtualMachinePlanPtrOutput
	ToVirtualMachinePlanPtrOutputWithContext(context.Context) VirtualMachinePlanPtrOutput
}

type virtualMachinePlanPtrType VirtualMachinePlanArgs

func VirtualMachinePlanPtr(v *VirtualMachinePlanArgs) VirtualMachinePlanPtrInput {
	return (*virtualMachinePlanPtrType)(v)
}

func (*virtualMachinePlanPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachinePlan)(nil)).Elem()
}

func (i *virtualMachinePlanPtrType) ToVirtualMachinePlanPtrOutput() VirtualMachinePlanPtrOutput {
	return i.ToVirtualMachinePlanPtrOutputWithContext(context.Background())
}

func (i *virtualMachinePlanPtrType) ToVirtualMachinePlanPtrOutputWithContext(ctx context.Context) VirtualMachinePlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachinePlanPtrOutput)
}

type VirtualMachinePlanOutput struct{ *pulumi.OutputState }

func (VirtualMachinePlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachinePlan)(nil)).Elem()
}

func (o VirtualMachinePlanOutput) ToVirtualMachinePlanOutput() VirtualMachinePlanOutput {
	return o
}

func (o VirtualMachinePlanOutput) ToVirtualMachinePlanOutputWithContext(ctx context.Context) VirtualMachinePlanOutput {
	return o
}

func (o VirtualMachinePlanOutput) ToVirtualMachinePlanPtrOutput() VirtualMachinePlanPtrOutput {
	return o.ToVirtualMachinePlanPtrOutputWithContext(context.Background())
}

func (o VirtualMachinePlanOutput) ToVirtualMachinePlanPtrOutputWithContext(ctx context.Context) VirtualMachinePlanPtrOutput {
	return o.ApplyT(func(v VirtualMachinePlan) *VirtualMachinePlan {
		return &v
	}).(VirtualMachinePlanPtrOutput)
}

// Specifies the name of the image from the marketplace.
func (o VirtualMachinePlanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachinePlan) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the product of the image from the marketplace.
func (o VirtualMachinePlanOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachinePlan) string { return v.Product }).(pulumi.StringOutput)
}

// Specifies the publisher of the image.
func (o VirtualMachinePlanOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachinePlan) string { return v.Publisher }).(pulumi.StringOutput)
}

type VirtualMachinePlanPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachinePlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachinePlan)(nil)).Elem()
}

func (o VirtualMachinePlanPtrOutput) ToVirtualMachinePlanPtrOutput() VirtualMachinePlanPtrOutput {
	return o
}

func (o VirtualMachinePlanPtrOutput) ToVirtualMachinePlanPtrOutputWithContext(ctx context.Context) VirtualMachinePlanPtrOutput {
	return o
}

func (o VirtualMachinePlanPtrOutput) Elem() VirtualMachinePlanOutput {
	return o.ApplyT(func(v *VirtualMachinePlan) VirtualMachinePlan { return *v }).(VirtualMachinePlanOutput)
}

// Specifies the name of the image from the marketplace.
func (o VirtualMachinePlanPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachinePlan) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies the product of the image from the marketplace.
func (o VirtualMachinePlanPtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachinePlan) *string {
		if v == nil {
			return nil
		}
		return &v.Product
	}).(pulumi.StringPtrOutput)
}

// Specifies the publisher of the image.
func (o VirtualMachinePlanPtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachinePlan) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineStorageDataDisk struct {
	// Specifies the caching requirements for the Data Disk. Possible values include `None`, `ReadOnly` and `ReadWrite`.
	Caching *string `pulumi:"caching"`
	// Specifies how the data disk should be created. Possible values are `Attach`, `FromImage` and `Empty`.
	CreateOption string `pulumi:"createOption"`
	// Specifies the size of the data disk in gigabytes.
	DiskSizeGb *int `pulumi:"diskSizeGb"`
	// Specifies the logical unit number of the data disk. This needs to be unique within all the Data Disks on the Virtual Machine.
	Lun int `pulumi:"lun"`
	// Specifies the ID of an Existing Managed Disk which should be attached to this Virtual Machine. When this field is set `createOption` must be set to `Attach`.
	ManagedDiskId *string `pulumi:"managedDiskId"`
	// Specifies the type of managed disk to create. Possible values are either `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS` or `UltraSSD_LRS`.
	ManagedDiskType *string `pulumi:"managedDiskType"`
	// The name of the Data Disk.
	Name string `pulumi:"name"`
	// Specifies the URI of the VHD file backing this Unmanaged Data Disk. Changing this forces a new resource to be created.
	VhdUri *string `pulumi:"vhdUri"`
	// Specifies if Write Accelerator is enabled on the disk. This can only be enabled on `Premium_LRS` managed disks with no caching and [M-Series VMs](https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/how-to-enable-write-accelerator). Defaults to `false`.
	WriteAcceleratorEnabled *bool `pulumi:"writeAcceleratorEnabled"`
}

// VirtualMachineStorageDataDiskInput is an input type that accepts VirtualMachineStorageDataDiskArgs and VirtualMachineStorageDataDiskOutput values.
// You can construct a concrete instance of `VirtualMachineStorageDataDiskInput` via:
//
// 		 VirtualMachineStorageDataDiskArgs{...}
//
type VirtualMachineStorageDataDiskInput interface {
	pulumi.Input

	ToVirtualMachineStorageDataDiskOutput() VirtualMachineStorageDataDiskOutput
	ToVirtualMachineStorageDataDiskOutputWithContext(context.Context) VirtualMachineStorageDataDiskOutput
}

type VirtualMachineStorageDataDiskArgs struct {
	// Specifies the caching requirements for the Data Disk. Possible values include `None`, `ReadOnly` and `ReadWrite`.
	Caching pulumi.StringPtrInput `pulumi:"caching"`
	// Specifies how the data disk should be created. Possible values are `Attach`, `FromImage` and `Empty`.
	CreateOption pulumi.StringInput `pulumi:"createOption"`
	// Specifies the size of the data disk in gigabytes.
	DiskSizeGb pulumi.IntPtrInput `pulumi:"diskSizeGb"`
	// Specifies the logical unit number of the data disk. This needs to be unique within all the Data Disks on the Virtual Machine.
	Lun pulumi.IntInput `pulumi:"lun"`
	// Specifies the ID of an Existing Managed Disk which should be attached to this Virtual Machine. When this field is set `createOption` must be set to `Attach`.
	ManagedDiskId pulumi.StringPtrInput `pulumi:"managedDiskId"`
	// Specifies the type of managed disk to create. Possible values are either `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS` or `UltraSSD_LRS`.
	ManagedDiskType pulumi.StringPtrInput `pulumi:"managedDiskType"`
	// The name of the Data Disk.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the URI of the VHD file backing this Unmanaged Data Disk. Changing this forces a new resource to be created.
	VhdUri pulumi.StringPtrInput `pulumi:"vhdUri"`
	// Specifies if Write Accelerator is enabled on the disk. This can only be enabled on `Premium_LRS` managed disks with no caching and [M-Series VMs](https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/how-to-enable-write-accelerator). Defaults to `false`.
	WriteAcceleratorEnabled pulumi.BoolPtrInput `pulumi:"writeAcceleratorEnabled"`
}

func (VirtualMachineStorageDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineStorageDataDisk)(nil)).Elem()
}

func (i VirtualMachineStorageDataDiskArgs) ToVirtualMachineStorageDataDiskOutput() VirtualMachineStorageDataDiskOutput {
	return i.ToVirtualMachineStorageDataDiskOutputWithContext(context.Background())
}

func (i VirtualMachineStorageDataDiskArgs) ToVirtualMachineStorageDataDiskOutputWithContext(ctx context.Context) VirtualMachineStorageDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineStorageDataDiskOutput)
}

// VirtualMachineStorageDataDiskArrayInput is an input type that accepts VirtualMachineStorageDataDiskArray and VirtualMachineStorageDataDiskArrayOutput values.
// You can construct a concrete instance of `VirtualMachineStorageDataDiskArrayInput` via:
//
// 		 VirtualMachineStorageDataDiskArray{ VirtualMachineStorageDataDiskArgs{...} }
//
type VirtualMachineStorageDataDiskArrayInput interface {
	pulumi.Input

	ToVirtualMachineStorageDataDiskArrayOutput() VirtualMachineStorageDataDiskArrayOutput
	ToVirtualMachineStorageDataDiskArrayOutputWithContext(context.Context) VirtualMachineStorageDataDiskArrayOutput
}

type VirtualMachineStorageDataDiskArray []VirtualMachineStorageDataDiskInput

func (VirtualMachineStorageDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineStorageDataDisk)(nil)).Elem()
}

func (i VirtualMachineStorageDataDiskArray) ToVirtualMachineStorageDataDiskArrayOutput() VirtualMachineStorageDataDiskArrayOutput {
	return i.ToVirtualMachineStorageDataDiskArrayOutputWithContext(context.Background())
}

func (i VirtualMachineStorageDataDiskArray) ToVirtualMachineStorageDataDiskArrayOutputWithContext(ctx context.Context) VirtualMachineStorageDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineStorageDataDiskArrayOutput)
}

type VirtualMachineStorageDataDiskOutput struct{ *pulumi.OutputState }

func (VirtualMachineStorageDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineStorageDataDisk)(nil)).Elem()
}

func (o VirtualMachineStorageDataDiskOutput) ToVirtualMachineStorageDataDiskOutput() VirtualMachineStorageDataDiskOutput {
	return o
}

func (o VirtualMachineStorageDataDiskOutput) ToVirtualMachineStorageDataDiskOutputWithContext(ctx context.Context) VirtualMachineStorageDataDiskOutput {
	return o
}

// Specifies the caching requirements for the Data Disk. Possible values include `None`, `ReadOnly` and `ReadWrite`.
func (o VirtualMachineStorageDataDiskOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageDataDisk) *string { return v.Caching }).(pulumi.StringPtrOutput)
}

// Specifies how the data disk should be created. Possible values are `Attach`, `FromImage` and `Empty`.
func (o VirtualMachineStorageDataDiskOutput) CreateOption() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineStorageDataDisk) string { return v.CreateOption }).(pulumi.StringOutput)
}

// Specifies the size of the data disk in gigabytes.
func (o VirtualMachineStorageDataDiskOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageDataDisk) *int { return v.DiskSizeGb }).(pulumi.IntPtrOutput)
}

// Specifies the logical unit number of the data disk. This needs to be unique within all the Data Disks on the Virtual Machine.
func (o VirtualMachineStorageDataDiskOutput) Lun() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualMachineStorageDataDisk) int { return v.Lun }).(pulumi.IntOutput)
}

// Specifies the ID of an Existing Managed Disk which should be attached to this Virtual Machine. When this field is set `createOption` must be set to `Attach`.
func (o VirtualMachineStorageDataDiskOutput) ManagedDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageDataDisk) *string { return v.ManagedDiskId }).(pulumi.StringPtrOutput)
}

// Specifies the type of managed disk to create. Possible values are either `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS` or `UltraSSD_LRS`.
func (o VirtualMachineStorageDataDiskOutput) ManagedDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageDataDisk) *string { return v.ManagedDiskType }).(pulumi.StringPtrOutput)
}

// The name of the Data Disk.
func (o VirtualMachineStorageDataDiskOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineStorageDataDisk) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the URI of the VHD file backing this Unmanaged Data Disk. Changing this forces a new resource to be created.
func (o VirtualMachineStorageDataDiskOutput) VhdUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageDataDisk) *string { return v.VhdUri }).(pulumi.StringPtrOutput)
}

// Specifies if Write Accelerator is enabled on the disk. This can only be enabled on `Premium_LRS` managed disks with no caching and [M-Series VMs](https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/how-to-enable-write-accelerator). Defaults to `false`.
func (o VirtualMachineStorageDataDiskOutput) WriteAcceleratorEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageDataDisk) *bool { return v.WriteAcceleratorEnabled }).(pulumi.BoolPtrOutput)
}

type VirtualMachineStorageDataDiskArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineStorageDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineStorageDataDisk)(nil)).Elem()
}

func (o VirtualMachineStorageDataDiskArrayOutput) ToVirtualMachineStorageDataDiskArrayOutput() VirtualMachineStorageDataDiskArrayOutput {
	return o
}

func (o VirtualMachineStorageDataDiskArrayOutput) ToVirtualMachineStorageDataDiskArrayOutputWithContext(ctx context.Context) VirtualMachineStorageDataDiskArrayOutput {
	return o
}

func (o VirtualMachineStorageDataDiskArrayOutput) Index(i pulumi.IntInput) VirtualMachineStorageDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineStorageDataDisk {
		return vs[0].([]VirtualMachineStorageDataDisk)[vs[1].(int)]
	}).(VirtualMachineStorageDataDiskOutput)
}

type VirtualMachineStorageImageReference struct {
	// Specifies the ID of the Custom Image which the Virtual Machine should be created from. Changing this forces a new resource to be created.
	Id *string `pulumi:"id"`
	// Specifies the offer of the image used to create the virtual machine. Changing this forces a new resource to be created.
	Offer *string `pulumi:"offer"`
	// Specifies the publisher of the image used to create the virtual machine. Changing this forces a new resource to be created.
	Publisher *string `pulumi:"publisher"`
	// Specifies the SKU of the image used to create the virtual machine. Changing this forces a new resource to be created.
	Sku *string `pulumi:"sku"`
	// Specifies the version of the image used to create the virtual machine. Changing this forces a new resource to be created.
	Version *string `pulumi:"version"`
}

// VirtualMachineStorageImageReferenceInput is an input type that accepts VirtualMachineStorageImageReferenceArgs and VirtualMachineStorageImageReferenceOutput values.
// You can construct a concrete instance of `VirtualMachineStorageImageReferenceInput` via:
//
// 		 VirtualMachineStorageImageReferenceArgs{...}
//
type VirtualMachineStorageImageReferenceInput interface {
	pulumi.Input

	ToVirtualMachineStorageImageReferenceOutput() VirtualMachineStorageImageReferenceOutput
	ToVirtualMachineStorageImageReferenceOutputWithContext(context.Context) VirtualMachineStorageImageReferenceOutput
}

type VirtualMachineStorageImageReferenceArgs struct {
	// Specifies the ID of the Custom Image which the Virtual Machine should be created from. Changing this forces a new resource to be created.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies the offer of the image used to create the virtual machine. Changing this forces a new resource to be created.
	Offer pulumi.StringPtrInput `pulumi:"offer"`
	// Specifies the publisher of the image used to create the virtual machine. Changing this forces a new resource to be created.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
	// Specifies the SKU of the image used to create the virtual machine. Changing this forces a new resource to be created.
	Sku pulumi.StringPtrInput `pulumi:"sku"`
	// Specifies the version of the image used to create the virtual machine. Changing this forces a new resource to be created.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (VirtualMachineStorageImageReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineStorageImageReference)(nil)).Elem()
}

func (i VirtualMachineStorageImageReferenceArgs) ToVirtualMachineStorageImageReferenceOutput() VirtualMachineStorageImageReferenceOutput {
	return i.ToVirtualMachineStorageImageReferenceOutputWithContext(context.Background())
}

func (i VirtualMachineStorageImageReferenceArgs) ToVirtualMachineStorageImageReferenceOutputWithContext(ctx context.Context) VirtualMachineStorageImageReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineStorageImageReferenceOutput)
}

func (i VirtualMachineStorageImageReferenceArgs) ToVirtualMachineStorageImageReferencePtrOutput() VirtualMachineStorageImageReferencePtrOutput {
	return i.ToVirtualMachineStorageImageReferencePtrOutputWithContext(context.Background())
}

func (i VirtualMachineStorageImageReferenceArgs) ToVirtualMachineStorageImageReferencePtrOutputWithContext(ctx context.Context) VirtualMachineStorageImageReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineStorageImageReferenceOutput).ToVirtualMachineStorageImageReferencePtrOutputWithContext(ctx)
}

// VirtualMachineStorageImageReferencePtrInput is an input type that accepts VirtualMachineStorageImageReferenceArgs, VirtualMachineStorageImageReferencePtr and VirtualMachineStorageImageReferencePtrOutput values.
// You can construct a concrete instance of `VirtualMachineStorageImageReferencePtrInput` via:
//
// 		 VirtualMachineStorageImageReferenceArgs{...}
//
//  or:
//
// 		 nil
//
type VirtualMachineStorageImageReferencePtrInput interface {
	pulumi.Input

	ToVirtualMachineStorageImageReferencePtrOutput() VirtualMachineStorageImageReferencePtrOutput
	ToVirtualMachineStorageImageReferencePtrOutputWithContext(context.Context) VirtualMachineStorageImageReferencePtrOutput
}

type virtualMachineStorageImageReferencePtrType VirtualMachineStorageImageReferenceArgs

func VirtualMachineStorageImageReferencePtr(v *VirtualMachineStorageImageReferenceArgs) VirtualMachineStorageImageReferencePtrInput {
	return (*virtualMachineStorageImageReferencePtrType)(v)
}

func (*virtualMachineStorageImageReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineStorageImageReference)(nil)).Elem()
}

func (i *virtualMachineStorageImageReferencePtrType) ToVirtualMachineStorageImageReferencePtrOutput() VirtualMachineStorageImageReferencePtrOutput {
	return i.ToVirtualMachineStorageImageReferencePtrOutputWithContext(context.Background())
}

func (i *virtualMachineStorageImageReferencePtrType) ToVirtualMachineStorageImageReferencePtrOutputWithContext(ctx context.Context) VirtualMachineStorageImageReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineStorageImageReferencePtrOutput)
}

type VirtualMachineStorageImageReferenceOutput struct{ *pulumi.OutputState }

func (VirtualMachineStorageImageReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineStorageImageReference)(nil)).Elem()
}

func (o VirtualMachineStorageImageReferenceOutput) ToVirtualMachineStorageImageReferenceOutput() VirtualMachineStorageImageReferenceOutput {
	return o
}

func (o VirtualMachineStorageImageReferenceOutput) ToVirtualMachineStorageImageReferenceOutputWithContext(ctx context.Context) VirtualMachineStorageImageReferenceOutput {
	return o
}

func (o VirtualMachineStorageImageReferenceOutput) ToVirtualMachineStorageImageReferencePtrOutput() VirtualMachineStorageImageReferencePtrOutput {
	return o.ToVirtualMachineStorageImageReferencePtrOutputWithContext(context.Background())
}

func (o VirtualMachineStorageImageReferenceOutput) ToVirtualMachineStorageImageReferencePtrOutputWithContext(ctx context.Context) VirtualMachineStorageImageReferencePtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageImageReference) *VirtualMachineStorageImageReference {
		return &v
	}).(VirtualMachineStorageImageReferencePtrOutput)
}

// Specifies the ID of the Custom Image which the Virtual Machine should be created from. Changing this forces a new resource to be created.
func (o VirtualMachineStorageImageReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageImageReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies the offer of the image used to create the virtual machine. Changing this forces a new resource to be created.
func (o VirtualMachineStorageImageReferenceOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageImageReference) *string { return v.Offer }).(pulumi.StringPtrOutput)
}

// Specifies the publisher of the image used to create the virtual machine. Changing this forces a new resource to be created.
func (o VirtualMachineStorageImageReferenceOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageImageReference) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// Specifies the SKU of the image used to create the virtual machine. Changing this forces a new resource to be created.
func (o VirtualMachineStorageImageReferenceOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageImageReference) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

// Specifies the version of the image used to create the virtual machine. Changing this forces a new resource to be created.
func (o VirtualMachineStorageImageReferenceOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageImageReference) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type VirtualMachineStorageImageReferencePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineStorageImageReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineStorageImageReference)(nil)).Elem()
}

func (o VirtualMachineStorageImageReferencePtrOutput) ToVirtualMachineStorageImageReferencePtrOutput() VirtualMachineStorageImageReferencePtrOutput {
	return o
}

func (o VirtualMachineStorageImageReferencePtrOutput) ToVirtualMachineStorageImageReferencePtrOutputWithContext(ctx context.Context) VirtualMachineStorageImageReferencePtrOutput {
	return o
}

func (o VirtualMachineStorageImageReferencePtrOutput) Elem() VirtualMachineStorageImageReferenceOutput {
	return o.ApplyT(func(v *VirtualMachineStorageImageReference) VirtualMachineStorageImageReference { return *v }).(VirtualMachineStorageImageReferenceOutput)
}

// Specifies the ID of the Custom Image which the Virtual Machine should be created from. Changing this forces a new resource to be created.
func (o VirtualMachineStorageImageReferencePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineStorageImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Specifies the offer of the image used to create the virtual machine. Changing this forces a new resource to be created.
func (o VirtualMachineStorageImageReferencePtrOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineStorageImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Offer
	}).(pulumi.StringPtrOutput)
}

// Specifies the publisher of the image used to create the virtual machine. Changing this forces a new resource to be created.
func (o VirtualMachineStorageImageReferencePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineStorageImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Specifies the SKU of the image used to create the virtual machine. Changing this forces a new resource to be created.
func (o VirtualMachineStorageImageReferencePtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineStorageImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(pulumi.StringPtrOutput)
}

// Specifies the version of the image used to create the virtual machine. Changing this forces a new resource to be created.
func (o VirtualMachineStorageImageReferencePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineStorageImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineStorageOsDisk struct {
	// Specifies the caching requirements for the OS Disk. Possible values include `None`, `ReadOnly` and `ReadWrite`.
	Caching *string `pulumi:"caching"`
	// Specifies how the OS Disk should be created. Possible values are `Attach` (managed disks only) and `FromImage`.
	CreateOption string `pulumi:"createOption"`
	// Specifies the size of the OS Disk in gigabytes.
	DiskSizeGb *int `pulumi:"diskSizeGb"`
	// Specifies the Image URI in the format `publisherName:offer:skus:version`. This field can also specify the [VHD uri](https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-linux-cli-deploy-templates/#create-a-custom-vm-image) of a custom VM image to clone. When cloning a Custom (Unmanaged) Disk Image the `osType` field must be set.
	ImageUri *string `pulumi:"imageUri"`
	// Specifies the ID of an existing Managed Disk which should be attached as the OS Disk of this Virtual Machine. If this is set then the `createOption` must be set to `Attach`.
	ManagedDiskId *string `pulumi:"managedDiskId"`
	// Specifies the type of Managed Disk which should be created. Possible values are `Standard_LRS`, `StandardSSD_LRS` or `Premium_LRS`.
	ManagedDiskType *string `pulumi:"managedDiskType"`
	// Specifies the name of the OS Disk.
	Name string `pulumi:"name"`
	// Specifies the Operating System on the OS Disk. Possible values are `Linux` and `Windows`.
	OsType *string `pulumi:"osType"`
	// Specifies the URI of the VHD file backing this Unmanaged OS Disk. Changing this forces a new resource to be created.
	VhdUri *string `pulumi:"vhdUri"`
	// Specifies if Write Accelerator is enabled on the disk. This can only be enabled on `Premium_LRS` managed disks with no caching and [M-Series VMs](https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/how-to-enable-write-accelerator). Defaults to `false`.
	WriteAcceleratorEnabled *bool `pulumi:"writeAcceleratorEnabled"`
}

// VirtualMachineStorageOsDiskInput is an input type that accepts VirtualMachineStorageOsDiskArgs and VirtualMachineStorageOsDiskOutput values.
// You can construct a concrete instance of `VirtualMachineStorageOsDiskInput` via:
//
// 		 VirtualMachineStorageOsDiskArgs{...}
//
type VirtualMachineStorageOsDiskInput interface {
	pulumi.Input

	ToVirtualMachineStorageOsDiskOutput() VirtualMachineStorageOsDiskOutput
	ToVirtualMachineStorageOsDiskOutputWithContext(context.Context) VirtualMachineStorageOsDiskOutput
}

type VirtualMachineStorageOsDiskArgs struct {
	// Specifies the caching requirements for the OS Disk. Possible values include `None`, `ReadOnly` and `ReadWrite`.
	Caching pulumi.StringPtrInput `pulumi:"caching"`
	// Specifies how the OS Disk should be created. Possible values are `Attach` (managed disks only) and `FromImage`.
	CreateOption pulumi.StringInput `pulumi:"createOption"`
	// Specifies the size of the OS Disk in gigabytes.
	DiskSizeGb pulumi.IntPtrInput `pulumi:"diskSizeGb"`
	// Specifies the Image URI in the format `publisherName:offer:skus:version`. This field can also specify the [VHD uri](https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-linux-cli-deploy-templates/#create-a-custom-vm-image) of a custom VM image to clone. When cloning a Custom (Unmanaged) Disk Image the `osType` field must be set.
	ImageUri pulumi.StringPtrInput `pulumi:"imageUri"`
	// Specifies the ID of an existing Managed Disk which should be attached as the OS Disk of this Virtual Machine. If this is set then the `createOption` must be set to `Attach`.
	ManagedDiskId pulumi.StringPtrInput `pulumi:"managedDiskId"`
	// Specifies the type of Managed Disk which should be created. Possible values are `Standard_LRS`, `StandardSSD_LRS` or `Premium_LRS`.
	ManagedDiskType pulumi.StringPtrInput `pulumi:"managedDiskType"`
	// Specifies the name of the OS Disk.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the Operating System on the OS Disk. Possible values are `Linux` and `Windows`.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// Specifies the URI of the VHD file backing this Unmanaged OS Disk. Changing this forces a new resource to be created.
	VhdUri pulumi.StringPtrInput `pulumi:"vhdUri"`
	// Specifies if Write Accelerator is enabled on the disk. This can only be enabled on `Premium_LRS` managed disks with no caching and [M-Series VMs](https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/how-to-enable-write-accelerator). Defaults to `false`.
	WriteAcceleratorEnabled pulumi.BoolPtrInput `pulumi:"writeAcceleratorEnabled"`
}

func (VirtualMachineStorageOsDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineStorageOsDisk)(nil)).Elem()
}

func (i VirtualMachineStorageOsDiskArgs) ToVirtualMachineStorageOsDiskOutput() VirtualMachineStorageOsDiskOutput {
	return i.ToVirtualMachineStorageOsDiskOutputWithContext(context.Background())
}

func (i VirtualMachineStorageOsDiskArgs) ToVirtualMachineStorageOsDiskOutputWithContext(ctx context.Context) VirtualMachineStorageOsDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineStorageOsDiskOutput)
}

func (i VirtualMachineStorageOsDiskArgs) ToVirtualMachineStorageOsDiskPtrOutput() VirtualMachineStorageOsDiskPtrOutput {
	return i.ToVirtualMachineStorageOsDiskPtrOutputWithContext(context.Background())
}

func (i VirtualMachineStorageOsDiskArgs) ToVirtualMachineStorageOsDiskPtrOutputWithContext(ctx context.Context) VirtualMachineStorageOsDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineStorageOsDiskOutput).ToVirtualMachineStorageOsDiskPtrOutputWithContext(ctx)
}

// VirtualMachineStorageOsDiskPtrInput is an input type that accepts VirtualMachineStorageOsDiskArgs, VirtualMachineStorageOsDiskPtr and VirtualMachineStorageOsDiskPtrOutput values.
// You can construct a concrete instance of `VirtualMachineStorageOsDiskPtrInput` via:
//
// 		 VirtualMachineStorageOsDiskArgs{...}
//
//  or:
//
// 		 nil
//
type VirtualMachineStorageOsDiskPtrInput interface {
	pulumi.Input

	ToVirtualMachineStorageOsDiskPtrOutput() VirtualMachineStorageOsDiskPtrOutput
	ToVirtualMachineStorageOsDiskPtrOutputWithContext(context.Context) VirtualMachineStorageOsDiskPtrOutput
}

type virtualMachineStorageOsDiskPtrType VirtualMachineStorageOsDiskArgs

func VirtualMachineStorageOsDiskPtr(v *VirtualMachineStorageOsDiskArgs) VirtualMachineStorageOsDiskPtrInput {
	return (*virtualMachineStorageOsDiskPtrType)(v)
}

func (*virtualMachineStorageOsDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineStorageOsDisk)(nil)).Elem()
}

func (i *virtualMachineStorageOsDiskPtrType) ToVirtualMachineStorageOsDiskPtrOutput() VirtualMachineStorageOsDiskPtrOutput {
	return i.ToVirtualMachineStorageOsDiskPtrOutputWithContext(context.Background())
}

func (i *virtualMachineStorageOsDiskPtrType) ToVirtualMachineStorageOsDiskPtrOutputWithContext(ctx context.Context) VirtualMachineStorageOsDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineStorageOsDiskPtrOutput)
}

type VirtualMachineStorageOsDiskOutput struct{ *pulumi.OutputState }

func (VirtualMachineStorageOsDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineStorageOsDisk)(nil)).Elem()
}

func (o VirtualMachineStorageOsDiskOutput) ToVirtualMachineStorageOsDiskOutput() VirtualMachineStorageOsDiskOutput {
	return o
}

func (o VirtualMachineStorageOsDiskOutput) ToVirtualMachineStorageOsDiskOutputWithContext(ctx context.Context) VirtualMachineStorageOsDiskOutput {
	return o
}

func (o VirtualMachineStorageOsDiskOutput) ToVirtualMachineStorageOsDiskPtrOutput() VirtualMachineStorageOsDiskPtrOutput {
	return o.ToVirtualMachineStorageOsDiskPtrOutputWithContext(context.Background())
}

func (o VirtualMachineStorageOsDiskOutput) ToVirtualMachineStorageOsDiskPtrOutputWithContext(ctx context.Context) VirtualMachineStorageOsDiskPtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageOsDisk) *VirtualMachineStorageOsDisk {
		return &v
	}).(VirtualMachineStorageOsDiskPtrOutput)
}

// Specifies the caching requirements for the OS Disk. Possible values include `None`, `ReadOnly` and `ReadWrite`.
func (o VirtualMachineStorageOsDiskOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageOsDisk) *string { return v.Caching }).(pulumi.StringPtrOutput)
}

// Specifies how the OS Disk should be created. Possible values are `Attach` (managed disks only) and `FromImage`.
func (o VirtualMachineStorageOsDiskOutput) CreateOption() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineStorageOsDisk) string { return v.CreateOption }).(pulumi.StringOutput)
}

// Specifies the size of the OS Disk in gigabytes.
func (o VirtualMachineStorageOsDiskOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageOsDisk) *int { return v.DiskSizeGb }).(pulumi.IntPtrOutput)
}

// Specifies the Image URI in the format `publisherName:offer:skus:version`. This field can also specify the [VHD uri](https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-linux-cli-deploy-templates/#create-a-custom-vm-image) of a custom VM image to clone. When cloning a Custom (Unmanaged) Disk Image the `osType` field must be set.
func (o VirtualMachineStorageOsDiskOutput) ImageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageOsDisk) *string { return v.ImageUri }).(pulumi.StringPtrOutput)
}

// Specifies the ID of an existing Managed Disk which should be attached as the OS Disk of this Virtual Machine. If this is set then the `createOption` must be set to `Attach`.
func (o VirtualMachineStorageOsDiskOutput) ManagedDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageOsDisk) *string { return v.ManagedDiskId }).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Disk which should be created. Possible values are `Standard_LRS`, `StandardSSD_LRS` or `Premium_LRS`.
func (o VirtualMachineStorageOsDiskOutput) ManagedDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageOsDisk) *string { return v.ManagedDiskType }).(pulumi.StringPtrOutput)
}

// Specifies the name of the OS Disk.
func (o VirtualMachineStorageOsDiskOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineStorageOsDisk) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the Operating System on the OS Disk. Possible values are `Linux` and `Windows`.
func (o VirtualMachineStorageOsDiskOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageOsDisk) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// Specifies the URI of the VHD file backing this Unmanaged OS Disk. Changing this forces a new resource to be created.
func (o VirtualMachineStorageOsDiskOutput) VhdUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageOsDisk) *string { return v.VhdUri }).(pulumi.StringPtrOutput)
}

// Specifies if Write Accelerator is enabled on the disk. This can only be enabled on `Premium_LRS` managed disks with no caching and [M-Series VMs](https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/how-to-enable-write-accelerator). Defaults to `false`.
func (o VirtualMachineStorageOsDiskOutput) WriteAcceleratorEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageOsDisk) *bool { return v.WriteAcceleratorEnabled }).(pulumi.BoolPtrOutput)
}

type VirtualMachineStorageOsDiskPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineStorageOsDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineStorageOsDisk)(nil)).Elem()
}

func (o VirtualMachineStorageOsDiskPtrOutput) ToVirtualMachineStorageOsDiskPtrOutput() VirtualMachineStorageOsDiskPtrOutput {
	return o
}

func (o VirtualMachineStorageOsDiskPtrOutput) ToVirtualMachineStorageOsDiskPtrOutputWithContext(ctx context.Context) VirtualMachineStorageOsDiskPtrOutput {
	return o
}

func (o VirtualMachineStorageOsDiskPtrOutput) Elem() VirtualMachineStorageOsDiskOutput {
	return o.ApplyT(func(v *VirtualMachineStorageOsDisk) VirtualMachineStorageOsDisk { return *v }).(VirtualMachineStorageOsDiskOutput)
}

// Specifies the caching requirements for the OS Disk. Possible values include `None`, `ReadOnly` and `ReadWrite`.
func (o VirtualMachineStorageOsDiskPtrOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineStorageOsDisk) *string {
		if v == nil {
			return nil
		}
		return v.Caching
	}).(pulumi.StringPtrOutput)
}

// Specifies how the OS Disk should be created. Possible values are `Attach` (managed disks only) and `FromImage`.
func (o VirtualMachineStorageOsDiskPtrOutput) CreateOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineStorageOsDisk) *string {
		if v == nil {
			return nil
		}
		return &v.CreateOption
	}).(pulumi.StringPtrOutput)
}

// Specifies the size of the OS Disk in gigabytes.
func (o VirtualMachineStorageOsDiskPtrOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineStorageOsDisk) *int {
		if v == nil {
			return nil
		}
		return v.DiskSizeGb
	}).(pulumi.IntPtrOutput)
}

// Specifies the Image URI in the format `publisherName:offer:skus:version`. This field can also specify the [VHD uri](https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-linux-cli-deploy-templates/#create-a-custom-vm-image) of a custom VM image to clone. When cloning a Custom (Unmanaged) Disk Image the `osType` field must be set.
func (o VirtualMachineStorageOsDiskPtrOutput) ImageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineStorageOsDisk) *string {
		if v == nil {
			return nil
		}
		return v.ImageUri
	}).(pulumi.StringPtrOutput)
}

// Specifies the ID of an existing Managed Disk which should be attached as the OS Disk of this Virtual Machine. If this is set then the `createOption` must be set to `Attach`.
func (o VirtualMachineStorageOsDiskPtrOutput) ManagedDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineStorageOsDisk) *string {
		if v == nil {
			return nil
		}
		return v.ManagedDiskId
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Disk which should be created. Possible values are `Standard_LRS`, `StandardSSD_LRS` or `Premium_LRS`.
func (o VirtualMachineStorageOsDiskPtrOutput) ManagedDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineStorageOsDisk) *string {
		if v == nil {
			return nil
		}
		return v.ManagedDiskType
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of the OS Disk.
func (o VirtualMachineStorageOsDiskPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineStorageOsDisk) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies the Operating System on the OS Disk. Possible values are `Linux` and `Windows`.
func (o VirtualMachineStorageOsDiskPtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineStorageOsDisk) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// Specifies the URI of the VHD file backing this Unmanaged OS Disk. Changing this forces a new resource to be created.
func (o VirtualMachineStorageOsDiskPtrOutput) VhdUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineStorageOsDisk) *string {
		if v == nil {
			return nil
		}
		return v.VhdUri
	}).(pulumi.StringPtrOutput)
}

// Specifies if Write Accelerator is enabled on the disk. This can only be enabled on `Premium_LRS` managed disks with no caching and [M-Series VMs](https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/how-to-enable-write-accelerator). Defaults to `false`.
func (o VirtualMachineStorageOsDiskPtrOutput) WriteAcceleratorEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineStorageOsDisk) *bool {
		if v == nil {
			return nil
		}
		return v.WriteAcceleratorEnabled
	}).(pulumi.BoolPtrOutput)
}

type WindowsVirtualMachineAdditionalCapabilities struct {
	// Should the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine? Defaults to `false`. Changing this forces a new resource to be created.
	UltraSsdEnabled *bool `pulumi:"ultraSsdEnabled"`
}

// WindowsVirtualMachineAdditionalCapabilitiesInput is an input type that accepts WindowsVirtualMachineAdditionalCapabilitiesArgs and WindowsVirtualMachineAdditionalCapabilitiesOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineAdditionalCapabilitiesInput` via:
//
// 		 WindowsVirtualMachineAdditionalCapabilitiesArgs{...}
//
type WindowsVirtualMachineAdditionalCapabilitiesInput interface {
	pulumi.Input

	ToWindowsVirtualMachineAdditionalCapabilitiesOutput() WindowsVirtualMachineAdditionalCapabilitiesOutput
	ToWindowsVirtualMachineAdditionalCapabilitiesOutputWithContext(context.Context) WindowsVirtualMachineAdditionalCapabilitiesOutput
}

type WindowsVirtualMachineAdditionalCapabilitiesArgs struct {
	// Should the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine? Defaults to `false`. Changing this forces a new resource to be created.
	UltraSsdEnabled pulumi.BoolPtrInput `pulumi:"ultraSsdEnabled"`
}

func (WindowsVirtualMachineAdditionalCapabilitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineAdditionalCapabilities)(nil)).Elem()
}

func (i WindowsVirtualMachineAdditionalCapabilitiesArgs) ToWindowsVirtualMachineAdditionalCapabilitiesOutput() WindowsVirtualMachineAdditionalCapabilitiesOutput {
	return i.ToWindowsVirtualMachineAdditionalCapabilitiesOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineAdditionalCapabilitiesArgs) ToWindowsVirtualMachineAdditionalCapabilitiesOutputWithContext(ctx context.Context) WindowsVirtualMachineAdditionalCapabilitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineAdditionalCapabilitiesOutput)
}

func (i WindowsVirtualMachineAdditionalCapabilitiesArgs) ToWindowsVirtualMachineAdditionalCapabilitiesPtrOutput() WindowsVirtualMachineAdditionalCapabilitiesPtrOutput {
	return i.ToWindowsVirtualMachineAdditionalCapabilitiesPtrOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineAdditionalCapabilitiesArgs) ToWindowsVirtualMachineAdditionalCapabilitiesPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineAdditionalCapabilitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineAdditionalCapabilitiesOutput).ToWindowsVirtualMachineAdditionalCapabilitiesPtrOutputWithContext(ctx)
}

// WindowsVirtualMachineAdditionalCapabilitiesPtrInput is an input type that accepts WindowsVirtualMachineAdditionalCapabilitiesArgs, WindowsVirtualMachineAdditionalCapabilitiesPtr and WindowsVirtualMachineAdditionalCapabilitiesPtrOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineAdditionalCapabilitiesPtrInput` via:
//
// 		 WindowsVirtualMachineAdditionalCapabilitiesArgs{...}
//
//  or:
//
// 		 nil
//
type WindowsVirtualMachineAdditionalCapabilitiesPtrInput interface {
	pulumi.Input

	ToWindowsVirtualMachineAdditionalCapabilitiesPtrOutput() WindowsVirtualMachineAdditionalCapabilitiesPtrOutput
	ToWindowsVirtualMachineAdditionalCapabilitiesPtrOutputWithContext(context.Context) WindowsVirtualMachineAdditionalCapabilitiesPtrOutput
}

type windowsVirtualMachineAdditionalCapabilitiesPtrType WindowsVirtualMachineAdditionalCapabilitiesArgs

func WindowsVirtualMachineAdditionalCapabilitiesPtr(v *WindowsVirtualMachineAdditionalCapabilitiesArgs) WindowsVirtualMachineAdditionalCapabilitiesPtrInput {
	return (*windowsVirtualMachineAdditionalCapabilitiesPtrType)(v)
}

func (*windowsVirtualMachineAdditionalCapabilitiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineAdditionalCapabilities)(nil)).Elem()
}

func (i *windowsVirtualMachineAdditionalCapabilitiesPtrType) ToWindowsVirtualMachineAdditionalCapabilitiesPtrOutput() WindowsVirtualMachineAdditionalCapabilitiesPtrOutput {
	return i.ToWindowsVirtualMachineAdditionalCapabilitiesPtrOutputWithContext(context.Background())
}

func (i *windowsVirtualMachineAdditionalCapabilitiesPtrType) ToWindowsVirtualMachineAdditionalCapabilitiesPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineAdditionalCapabilitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineAdditionalCapabilitiesPtrOutput)
}

type WindowsVirtualMachineAdditionalCapabilitiesOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineAdditionalCapabilitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineAdditionalCapabilities)(nil)).Elem()
}

func (o WindowsVirtualMachineAdditionalCapabilitiesOutput) ToWindowsVirtualMachineAdditionalCapabilitiesOutput() WindowsVirtualMachineAdditionalCapabilitiesOutput {
	return o
}

func (o WindowsVirtualMachineAdditionalCapabilitiesOutput) ToWindowsVirtualMachineAdditionalCapabilitiesOutputWithContext(ctx context.Context) WindowsVirtualMachineAdditionalCapabilitiesOutput {
	return o
}

func (o WindowsVirtualMachineAdditionalCapabilitiesOutput) ToWindowsVirtualMachineAdditionalCapabilitiesPtrOutput() WindowsVirtualMachineAdditionalCapabilitiesPtrOutput {
	return o.ToWindowsVirtualMachineAdditionalCapabilitiesPtrOutputWithContext(context.Background())
}

func (o WindowsVirtualMachineAdditionalCapabilitiesOutput) ToWindowsVirtualMachineAdditionalCapabilitiesPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineAdditionalCapabilitiesPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineAdditionalCapabilities) *WindowsVirtualMachineAdditionalCapabilities {
		return &v
	}).(WindowsVirtualMachineAdditionalCapabilitiesPtrOutput)
}

// Should the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine? Defaults to `false`. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineAdditionalCapabilitiesOutput) UltraSsdEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineAdditionalCapabilities) *bool { return v.UltraSsdEnabled }).(pulumi.BoolPtrOutput)
}

type WindowsVirtualMachineAdditionalCapabilitiesPtrOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineAdditionalCapabilitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineAdditionalCapabilities)(nil)).Elem()
}

func (o WindowsVirtualMachineAdditionalCapabilitiesPtrOutput) ToWindowsVirtualMachineAdditionalCapabilitiesPtrOutput() WindowsVirtualMachineAdditionalCapabilitiesPtrOutput {
	return o
}

func (o WindowsVirtualMachineAdditionalCapabilitiesPtrOutput) ToWindowsVirtualMachineAdditionalCapabilitiesPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineAdditionalCapabilitiesPtrOutput {
	return o
}

func (o WindowsVirtualMachineAdditionalCapabilitiesPtrOutput) Elem() WindowsVirtualMachineAdditionalCapabilitiesOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineAdditionalCapabilities) WindowsVirtualMachineAdditionalCapabilities {
		return *v
	}).(WindowsVirtualMachineAdditionalCapabilitiesOutput)
}

// Should the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine? Defaults to `false`. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineAdditionalCapabilitiesPtrOutput) UltraSsdEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineAdditionalCapabilities) *bool {
		if v == nil {
			return nil
		}
		return v.UltraSsdEnabled
	}).(pulumi.BoolPtrOutput)
}

type WindowsVirtualMachineAdditionalUnattendContent struct {
	// The XML formatted content that is added to the unattend.xml file for the specified path and component. Changing this forces a new resource to be created.
	Content string `pulumi:"content"`
	// The name of the setting to which the content applies. Possible values are `AutoLogon` and `FirstLogonCommands`. Changing this forces a new resource to be created.
	Setting string `pulumi:"setting"`
}

// WindowsVirtualMachineAdditionalUnattendContentInput is an input type that accepts WindowsVirtualMachineAdditionalUnattendContentArgs and WindowsVirtualMachineAdditionalUnattendContentOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineAdditionalUnattendContentInput` via:
//
// 		 WindowsVirtualMachineAdditionalUnattendContentArgs{...}
//
type WindowsVirtualMachineAdditionalUnattendContentInput interface {
	pulumi.Input

	ToWindowsVirtualMachineAdditionalUnattendContentOutput() WindowsVirtualMachineAdditionalUnattendContentOutput
	ToWindowsVirtualMachineAdditionalUnattendContentOutputWithContext(context.Context) WindowsVirtualMachineAdditionalUnattendContentOutput
}

type WindowsVirtualMachineAdditionalUnattendContentArgs struct {
	// The XML formatted content that is added to the unattend.xml file for the specified path and component. Changing this forces a new resource to be created.
	Content pulumi.StringInput `pulumi:"content"`
	// The name of the setting to which the content applies. Possible values are `AutoLogon` and `FirstLogonCommands`. Changing this forces a new resource to be created.
	Setting pulumi.StringInput `pulumi:"setting"`
}

func (WindowsVirtualMachineAdditionalUnattendContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineAdditionalUnattendContent)(nil)).Elem()
}

func (i WindowsVirtualMachineAdditionalUnattendContentArgs) ToWindowsVirtualMachineAdditionalUnattendContentOutput() WindowsVirtualMachineAdditionalUnattendContentOutput {
	return i.ToWindowsVirtualMachineAdditionalUnattendContentOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineAdditionalUnattendContentArgs) ToWindowsVirtualMachineAdditionalUnattendContentOutputWithContext(ctx context.Context) WindowsVirtualMachineAdditionalUnattendContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineAdditionalUnattendContentOutput)
}

// WindowsVirtualMachineAdditionalUnattendContentArrayInput is an input type that accepts WindowsVirtualMachineAdditionalUnattendContentArray and WindowsVirtualMachineAdditionalUnattendContentArrayOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineAdditionalUnattendContentArrayInput` via:
//
// 		 WindowsVirtualMachineAdditionalUnattendContentArray{ WindowsVirtualMachineAdditionalUnattendContentArgs{...} }
//
type WindowsVirtualMachineAdditionalUnattendContentArrayInput interface {
	pulumi.Input

	ToWindowsVirtualMachineAdditionalUnattendContentArrayOutput() WindowsVirtualMachineAdditionalUnattendContentArrayOutput
	ToWindowsVirtualMachineAdditionalUnattendContentArrayOutputWithContext(context.Context) WindowsVirtualMachineAdditionalUnattendContentArrayOutput
}

type WindowsVirtualMachineAdditionalUnattendContentArray []WindowsVirtualMachineAdditionalUnattendContentInput

func (WindowsVirtualMachineAdditionalUnattendContentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WindowsVirtualMachineAdditionalUnattendContent)(nil)).Elem()
}

func (i WindowsVirtualMachineAdditionalUnattendContentArray) ToWindowsVirtualMachineAdditionalUnattendContentArrayOutput() WindowsVirtualMachineAdditionalUnattendContentArrayOutput {
	return i.ToWindowsVirtualMachineAdditionalUnattendContentArrayOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineAdditionalUnattendContentArray) ToWindowsVirtualMachineAdditionalUnattendContentArrayOutputWithContext(ctx context.Context) WindowsVirtualMachineAdditionalUnattendContentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineAdditionalUnattendContentArrayOutput)
}

type WindowsVirtualMachineAdditionalUnattendContentOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineAdditionalUnattendContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineAdditionalUnattendContent)(nil)).Elem()
}

func (o WindowsVirtualMachineAdditionalUnattendContentOutput) ToWindowsVirtualMachineAdditionalUnattendContentOutput() WindowsVirtualMachineAdditionalUnattendContentOutput {
	return o
}

func (o WindowsVirtualMachineAdditionalUnattendContentOutput) ToWindowsVirtualMachineAdditionalUnattendContentOutputWithContext(ctx context.Context) WindowsVirtualMachineAdditionalUnattendContentOutput {
	return o
}

// The XML formatted content that is added to the unattend.xml file for the specified path and component. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineAdditionalUnattendContentOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineAdditionalUnattendContent) string { return v.Content }).(pulumi.StringOutput)
}

// The name of the setting to which the content applies. Possible values are `AutoLogon` and `FirstLogonCommands`. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineAdditionalUnattendContentOutput) Setting() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineAdditionalUnattendContent) string { return v.Setting }).(pulumi.StringOutput)
}

type WindowsVirtualMachineAdditionalUnattendContentArrayOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineAdditionalUnattendContentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WindowsVirtualMachineAdditionalUnattendContent)(nil)).Elem()
}

func (o WindowsVirtualMachineAdditionalUnattendContentArrayOutput) ToWindowsVirtualMachineAdditionalUnattendContentArrayOutput() WindowsVirtualMachineAdditionalUnattendContentArrayOutput {
	return o
}

func (o WindowsVirtualMachineAdditionalUnattendContentArrayOutput) ToWindowsVirtualMachineAdditionalUnattendContentArrayOutputWithContext(ctx context.Context) WindowsVirtualMachineAdditionalUnattendContentArrayOutput {
	return o
}

func (o WindowsVirtualMachineAdditionalUnattendContentArrayOutput) Index(i pulumi.IntInput) WindowsVirtualMachineAdditionalUnattendContentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WindowsVirtualMachineAdditionalUnattendContent {
		return vs[0].([]WindowsVirtualMachineAdditionalUnattendContent)[vs[1].(int)]
	}).(WindowsVirtualMachineAdditionalUnattendContentOutput)
}

type WindowsVirtualMachineBootDiagnostics struct {
	// The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
	StorageAccountUri string `pulumi:"storageAccountUri"`
}

// WindowsVirtualMachineBootDiagnosticsInput is an input type that accepts WindowsVirtualMachineBootDiagnosticsArgs and WindowsVirtualMachineBootDiagnosticsOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineBootDiagnosticsInput` via:
//
// 		 WindowsVirtualMachineBootDiagnosticsArgs{...}
//
type WindowsVirtualMachineBootDiagnosticsInput interface {
	pulumi.Input

	ToWindowsVirtualMachineBootDiagnosticsOutput() WindowsVirtualMachineBootDiagnosticsOutput
	ToWindowsVirtualMachineBootDiagnosticsOutputWithContext(context.Context) WindowsVirtualMachineBootDiagnosticsOutput
}

type WindowsVirtualMachineBootDiagnosticsArgs struct {
	// The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
	StorageAccountUri pulumi.StringInput `pulumi:"storageAccountUri"`
}

func (WindowsVirtualMachineBootDiagnosticsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineBootDiagnostics)(nil)).Elem()
}

func (i WindowsVirtualMachineBootDiagnosticsArgs) ToWindowsVirtualMachineBootDiagnosticsOutput() WindowsVirtualMachineBootDiagnosticsOutput {
	return i.ToWindowsVirtualMachineBootDiagnosticsOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineBootDiagnosticsArgs) ToWindowsVirtualMachineBootDiagnosticsOutputWithContext(ctx context.Context) WindowsVirtualMachineBootDiagnosticsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineBootDiagnosticsOutput)
}

func (i WindowsVirtualMachineBootDiagnosticsArgs) ToWindowsVirtualMachineBootDiagnosticsPtrOutput() WindowsVirtualMachineBootDiagnosticsPtrOutput {
	return i.ToWindowsVirtualMachineBootDiagnosticsPtrOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineBootDiagnosticsArgs) ToWindowsVirtualMachineBootDiagnosticsPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineBootDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineBootDiagnosticsOutput).ToWindowsVirtualMachineBootDiagnosticsPtrOutputWithContext(ctx)
}

// WindowsVirtualMachineBootDiagnosticsPtrInput is an input type that accepts WindowsVirtualMachineBootDiagnosticsArgs, WindowsVirtualMachineBootDiagnosticsPtr and WindowsVirtualMachineBootDiagnosticsPtrOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineBootDiagnosticsPtrInput` via:
//
// 		 WindowsVirtualMachineBootDiagnosticsArgs{...}
//
//  or:
//
// 		 nil
//
type WindowsVirtualMachineBootDiagnosticsPtrInput interface {
	pulumi.Input

	ToWindowsVirtualMachineBootDiagnosticsPtrOutput() WindowsVirtualMachineBootDiagnosticsPtrOutput
	ToWindowsVirtualMachineBootDiagnosticsPtrOutputWithContext(context.Context) WindowsVirtualMachineBootDiagnosticsPtrOutput
}

type windowsVirtualMachineBootDiagnosticsPtrType WindowsVirtualMachineBootDiagnosticsArgs

func WindowsVirtualMachineBootDiagnosticsPtr(v *WindowsVirtualMachineBootDiagnosticsArgs) WindowsVirtualMachineBootDiagnosticsPtrInput {
	return (*windowsVirtualMachineBootDiagnosticsPtrType)(v)
}

func (*windowsVirtualMachineBootDiagnosticsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineBootDiagnostics)(nil)).Elem()
}

func (i *windowsVirtualMachineBootDiagnosticsPtrType) ToWindowsVirtualMachineBootDiagnosticsPtrOutput() WindowsVirtualMachineBootDiagnosticsPtrOutput {
	return i.ToWindowsVirtualMachineBootDiagnosticsPtrOutputWithContext(context.Background())
}

func (i *windowsVirtualMachineBootDiagnosticsPtrType) ToWindowsVirtualMachineBootDiagnosticsPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineBootDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineBootDiagnosticsPtrOutput)
}

type WindowsVirtualMachineBootDiagnosticsOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineBootDiagnosticsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineBootDiagnostics)(nil)).Elem()
}

func (o WindowsVirtualMachineBootDiagnosticsOutput) ToWindowsVirtualMachineBootDiagnosticsOutput() WindowsVirtualMachineBootDiagnosticsOutput {
	return o
}

func (o WindowsVirtualMachineBootDiagnosticsOutput) ToWindowsVirtualMachineBootDiagnosticsOutputWithContext(ctx context.Context) WindowsVirtualMachineBootDiagnosticsOutput {
	return o
}

func (o WindowsVirtualMachineBootDiagnosticsOutput) ToWindowsVirtualMachineBootDiagnosticsPtrOutput() WindowsVirtualMachineBootDiagnosticsPtrOutput {
	return o.ToWindowsVirtualMachineBootDiagnosticsPtrOutputWithContext(context.Background())
}

func (o WindowsVirtualMachineBootDiagnosticsOutput) ToWindowsVirtualMachineBootDiagnosticsPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineBootDiagnosticsPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineBootDiagnostics) *WindowsVirtualMachineBootDiagnostics {
		return &v
	}).(WindowsVirtualMachineBootDiagnosticsPtrOutput)
}

// The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
func (o WindowsVirtualMachineBootDiagnosticsOutput) StorageAccountUri() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineBootDiagnostics) string { return v.StorageAccountUri }).(pulumi.StringOutput)
}

type WindowsVirtualMachineBootDiagnosticsPtrOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineBootDiagnosticsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineBootDiagnostics)(nil)).Elem()
}

func (o WindowsVirtualMachineBootDiagnosticsPtrOutput) ToWindowsVirtualMachineBootDiagnosticsPtrOutput() WindowsVirtualMachineBootDiagnosticsPtrOutput {
	return o
}

func (o WindowsVirtualMachineBootDiagnosticsPtrOutput) ToWindowsVirtualMachineBootDiagnosticsPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineBootDiagnosticsPtrOutput {
	return o
}

func (o WindowsVirtualMachineBootDiagnosticsPtrOutput) Elem() WindowsVirtualMachineBootDiagnosticsOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineBootDiagnostics) WindowsVirtualMachineBootDiagnostics { return *v }).(WindowsVirtualMachineBootDiagnosticsOutput)
}

// The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
func (o WindowsVirtualMachineBootDiagnosticsPtrOutput) StorageAccountUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineBootDiagnostics) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountUri
	}).(pulumi.StringPtrOutput)
}

type WindowsVirtualMachineIdentity struct {
	// A list of User Managed Identity ID's which should be assigned to the Windows Virtual Machine.
	IdentityIds []string `pulumi:"identityIds"`
	// The ID of the System Managed Service Principal.
	PrincipalId *string `pulumi:"principalId"`
	// The ID of the Tenant the System Managed Service Principal is assigned in.
	TenantId *string `pulumi:"tenantId"`
	// The type of Managed Identity which should be assigned to the Windows Virtual Machine. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
	Type string `pulumi:"type"`
}

// WindowsVirtualMachineIdentityInput is an input type that accepts WindowsVirtualMachineIdentityArgs and WindowsVirtualMachineIdentityOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineIdentityInput` via:
//
// 		 WindowsVirtualMachineIdentityArgs{...}
//
type WindowsVirtualMachineIdentityInput interface {
	pulumi.Input

	ToWindowsVirtualMachineIdentityOutput() WindowsVirtualMachineIdentityOutput
	ToWindowsVirtualMachineIdentityOutputWithContext(context.Context) WindowsVirtualMachineIdentityOutput
}

type WindowsVirtualMachineIdentityArgs struct {
	// A list of User Managed Identity ID's which should be assigned to the Windows Virtual Machine.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The ID of the System Managed Service Principal.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The ID of the Tenant the System Managed Service Principal is assigned in.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The type of Managed Identity which should be assigned to the Windows Virtual Machine. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WindowsVirtualMachineIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineIdentity)(nil)).Elem()
}

func (i WindowsVirtualMachineIdentityArgs) ToWindowsVirtualMachineIdentityOutput() WindowsVirtualMachineIdentityOutput {
	return i.ToWindowsVirtualMachineIdentityOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineIdentityArgs) ToWindowsVirtualMachineIdentityOutputWithContext(ctx context.Context) WindowsVirtualMachineIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineIdentityOutput)
}

func (i WindowsVirtualMachineIdentityArgs) ToWindowsVirtualMachineIdentityPtrOutput() WindowsVirtualMachineIdentityPtrOutput {
	return i.ToWindowsVirtualMachineIdentityPtrOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineIdentityArgs) ToWindowsVirtualMachineIdentityPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineIdentityOutput).ToWindowsVirtualMachineIdentityPtrOutputWithContext(ctx)
}

// WindowsVirtualMachineIdentityPtrInput is an input type that accepts WindowsVirtualMachineIdentityArgs, WindowsVirtualMachineIdentityPtr and WindowsVirtualMachineIdentityPtrOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineIdentityPtrInput` via:
//
// 		 WindowsVirtualMachineIdentityArgs{...}
//
//  or:
//
// 		 nil
//
type WindowsVirtualMachineIdentityPtrInput interface {
	pulumi.Input

	ToWindowsVirtualMachineIdentityPtrOutput() WindowsVirtualMachineIdentityPtrOutput
	ToWindowsVirtualMachineIdentityPtrOutputWithContext(context.Context) WindowsVirtualMachineIdentityPtrOutput
}

type windowsVirtualMachineIdentityPtrType WindowsVirtualMachineIdentityArgs

func WindowsVirtualMachineIdentityPtr(v *WindowsVirtualMachineIdentityArgs) WindowsVirtualMachineIdentityPtrInput {
	return (*windowsVirtualMachineIdentityPtrType)(v)
}

func (*windowsVirtualMachineIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineIdentity)(nil)).Elem()
}

func (i *windowsVirtualMachineIdentityPtrType) ToWindowsVirtualMachineIdentityPtrOutput() WindowsVirtualMachineIdentityPtrOutput {
	return i.ToWindowsVirtualMachineIdentityPtrOutputWithContext(context.Background())
}

func (i *windowsVirtualMachineIdentityPtrType) ToWindowsVirtualMachineIdentityPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineIdentityPtrOutput)
}

type WindowsVirtualMachineIdentityOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineIdentity)(nil)).Elem()
}

func (o WindowsVirtualMachineIdentityOutput) ToWindowsVirtualMachineIdentityOutput() WindowsVirtualMachineIdentityOutput {
	return o
}

func (o WindowsVirtualMachineIdentityOutput) ToWindowsVirtualMachineIdentityOutputWithContext(ctx context.Context) WindowsVirtualMachineIdentityOutput {
	return o
}

func (o WindowsVirtualMachineIdentityOutput) ToWindowsVirtualMachineIdentityPtrOutput() WindowsVirtualMachineIdentityPtrOutput {
	return o.ToWindowsVirtualMachineIdentityPtrOutputWithContext(context.Background())
}

func (o WindowsVirtualMachineIdentityOutput) ToWindowsVirtualMachineIdentityPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineIdentityPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineIdentity) *WindowsVirtualMachineIdentity {
		return &v
	}).(WindowsVirtualMachineIdentityPtrOutput)
}

// A list of User Managed Identity ID's which should be assigned to the Windows Virtual Machine.
func (o WindowsVirtualMachineIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WindowsVirtualMachineIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The ID of the System Managed Service Principal.
func (o WindowsVirtualMachineIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The ID of the Tenant the System Managed Service Principal is assigned in.
func (o WindowsVirtualMachineIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The type of Managed Identity which should be assigned to the Windows Virtual Machine. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
func (o WindowsVirtualMachineIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type WindowsVirtualMachineIdentityPtrOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineIdentity)(nil)).Elem()
}

func (o WindowsVirtualMachineIdentityPtrOutput) ToWindowsVirtualMachineIdentityPtrOutput() WindowsVirtualMachineIdentityPtrOutput {
	return o
}

func (o WindowsVirtualMachineIdentityPtrOutput) ToWindowsVirtualMachineIdentityPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineIdentityPtrOutput {
	return o
}

func (o WindowsVirtualMachineIdentityPtrOutput) Elem() WindowsVirtualMachineIdentityOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineIdentity) WindowsVirtualMachineIdentity { return *v }).(WindowsVirtualMachineIdentityOutput)
}

// A list of User Managed Identity ID's which should be assigned to the Windows Virtual Machine.
func (o WindowsVirtualMachineIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The ID of the System Managed Service Principal.
func (o WindowsVirtualMachineIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The ID of the Tenant the System Managed Service Principal is assigned in.
func (o WindowsVirtualMachineIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of Managed Identity which should be assigned to the Windows Virtual Machine. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
func (o WindowsVirtualMachineIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type WindowsVirtualMachineOsDisk struct {
	// The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
	Caching string `pulumi:"caching"`
	// A `diffDiskSettings` block as defined above.
	DiffDiskSettings *WindowsVirtualMachineOsDiskDiffDiskSettings `pulumi:"diffDiskSettings"`
	// The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine is sourced from.
	DiskSizeGb *int `pulumi:"diskSizeGb"`
	// The name which should be used for the Internal OS Disk. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The Type of Storage Account which should back this the Internal OS Disk. Possible values are `Standard_LRS`, `StandardSSD_LRS` and `Premium_LRS`. Changing this forces a new resource to be created.
	StorageAccountType string `pulumi:"storageAccountType"`
	// Should Write Accelerator be Enabled for this OS Disk? Defaults to `false`.
	WriteAcceleratorEnabled *bool `pulumi:"writeAcceleratorEnabled"`
}

// WindowsVirtualMachineOsDiskInput is an input type that accepts WindowsVirtualMachineOsDiskArgs and WindowsVirtualMachineOsDiskOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineOsDiskInput` via:
//
// 		 WindowsVirtualMachineOsDiskArgs{...}
//
type WindowsVirtualMachineOsDiskInput interface {
	pulumi.Input

	ToWindowsVirtualMachineOsDiskOutput() WindowsVirtualMachineOsDiskOutput
	ToWindowsVirtualMachineOsDiskOutputWithContext(context.Context) WindowsVirtualMachineOsDiskOutput
}

type WindowsVirtualMachineOsDiskArgs struct {
	// The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
	Caching pulumi.StringInput `pulumi:"caching"`
	// A `diffDiskSettings` block as defined above.
	DiffDiskSettings WindowsVirtualMachineOsDiskDiffDiskSettingsPtrInput `pulumi:"diffDiskSettings"`
	// The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk.
	DiskEncryptionSetId pulumi.StringPtrInput `pulumi:"diskEncryptionSetId"`
	// The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine is sourced from.
	DiskSizeGb pulumi.IntPtrInput `pulumi:"diskSizeGb"`
	// The name which should be used for the Internal OS Disk. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The Type of Storage Account which should back this the Internal OS Disk. Possible values are `Standard_LRS`, `StandardSSD_LRS` and `Premium_LRS`. Changing this forces a new resource to be created.
	StorageAccountType pulumi.StringInput `pulumi:"storageAccountType"`
	// Should Write Accelerator be Enabled for this OS Disk? Defaults to `false`.
	WriteAcceleratorEnabled pulumi.BoolPtrInput `pulumi:"writeAcceleratorEnabled"`
}

func (WindowsVirtualMachineOsDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineOsDisk)(nil)).Elem()
}

func (i WindowsVirtualMachineOsDiskArgs) ToWindowsVirtualMachineOsDiskOutput() WindowsVirtualMachineOsDiskOutput {
	return i.ToWindowsVirtualMachineOsDiskOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineOsDiskArgs) ToWindowsVirtualMachineOsDiskOutputWithContext(ctx context.Context) WindowsVirtualMachineOsDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineOsDiskOutput)
}

func (i WindowsVirtualMachineOsDiskArgs) ToWindowsVirtualMachineOsDiskPtrOutput() WindowsVirtualMachineOsDiskPtrOutput {
	return i.ToWindowsVirtualMachineOsDiskPtrOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineOsDiskArgs) ToWindowsVirtualMachineOsDiskPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineOsDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineOsDiskOutput).ToWindowsVirtualMachineOsDiskPtrOutputWithContext(ctx)
}

// WindowsVirtualMachineOsDiskPtrInput is an input type that accepts WindowsVirtualMachineOsDiskArgs, WindowsVirtualMachineOsDiskPtr and WindowsVirtualMachineOsDiskPtrOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineOsDiskPtrInput` via:
//
// 		 WindowsVirtualMachineOsDiskArgs{...}
//
//  or:
//
// 		 nil
//
type WindowsVirtualMachineOsDiskPtrInput interface {
	pulumi.Input

	ToWindowsVirtualMachineOsDiskPtrOutput() WindowsVirtualMachineOsDiskPtrOutput
	ToWindowsVirtualMachineOsDiskPtrOutputWithContext(context.Context) WindowsVirtualMachineOsDiskPtrOutput
}

type windowsVirtualMachineOsDiskPtrType WindowsVirtualMachineOsDiskArgs

func WindowsVirtualMachineOsDiskPtr(v *WindowsVirtualMachineOsDiskArgs) WindowsVirtualMachineOsDiskPtrInput {
	return (*windowsVirtualMachineOsDiskPtrType)(v)
}

func (*windowsVirtualMachineOsDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineOsDisk)(nil)).Elem()
}

func (i *windowsVirtualMachineOsDiskPtrType) ToWindowsVirtualMachineOsDiskPtrOutput() WindowsVirtualMachineOsDiskPtrOutput {
	return i.ToWindowsVirtualMachineOsDiskPtrOutputWithContext(context.Background())
}

func (i *windowsVirtualMachineOsDiskPtrType) ToWindowsVirtualMachineOsDiskPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineOsDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineOsDiskPtrOutput)
}

type WindowsVirtualMachineOsDiskOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineOsDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineOsDisk)(nil)).Elem()
}

func (o WindowsVirtualMachineOsDiskOutput) ToWindowsVirtualMachineOsDiskOutput() WindowsVirtualMachineOsDiskOutput {
	return o
}

func (o WindowsVirtualMachineOsDiskOutput) ToWindowsVirtualMachineOsDiskOutputWithContext(ctx context.Context) WindowsVirtualMachineOsDiskOutput {
	return o
}

func (o WindowsVirtualMachineOsDiskOutput) ToWindowsVirtualMachineOsDiskPtrOutput() WindowsVirtualMachineOsDiskPtrOutput {
	return o.ToWindowsVirtualMachineOsDiskPtrOutputWithContext(context.Background())
}

func (o WindowsVirtualMachineOsDiskOutput) ToWindowsVirtualMachineOsDiskPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineOsDiskPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineOsDisk) *WindowsVirtualMachineOsDisk {
		return &v
	}).(WindowsVirtualMachineOsDiskPtrOutput)
}

// The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
func (o WindowsVirtualMachineOsDiskOutput) Caching() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineOsDisk) string { return v.Caching }).(pulumi.StringOutput)
}

// A `diffDiskSettings` block as defined above.
func (o WindowsVirtualMachineOsDiskOutput) DiffDiskSettings() WindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineOsDisk) *WindowsVirtualMachineOsDiskDiffDiskSettings {
		return v.DiffDiskSettings
	}).(WindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutput)
}

// The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk.
func (o WindowsVirtualMachineOsDiskOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineOsDisk) *string { return v.DiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine is sourced from.
func (o WindowsVirtualMachineOsDiskOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineOsDisk) *int { return v.DiskSizeGb }).(pulumi.IntPtrOutput)
}

// The name which should be used for the Internal OS Disk. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineOsDiskOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineOsDisk) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The Type of Storage Account which should back this the Internal OS Disk. Possible values are `Standard_LRS`, `StandardSSD_LRS` and `Premium_LRS`. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineOsDiskOutput) StorageAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineOsDisk) string { return v.StorageAccountType }).(pulumi.StringOutput)
}

// Should Write Accelerator be Enabled for this OS Disk? Defaults to `false`.
func (o WindowsVirtualMachineOsDiskOutput) WriteAcceleratorEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineOsDisk) *bool { return v.WriteAcceleratorEnabled }).(pulumi.BoolPtrOutput)
}

type WindowsVirtualMachineOsDiskPtrOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineOsDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineOsDisk)(nil)).Elem()
}

func (o WindowsVirtualMachineOsDiskPtrOutput) ToWindowsVirtualMachineOsDiskPtrOutput() WindowsVirtualMachineOsDiskPtrOutput {
	return o
}

func (o WindowsVirtualMachineOsDiskPtrOutput) ToWindowsVirtualMachineOsDiskPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineOsDiskPtrOutput {
	return o
}

func (o WindowsVirtualMachineOsDiskPtrOutput) Elem() WindowsVirtualMachineOsDiskOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineOsDisk) WindowsVirtualMachineOsDisk { return *v }).(WindowsVirtualMachineOsDiskOutput)
}

// The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
func (o WindowsVirtualMachineOsDiskPtrOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineOsDisk) *string {
		if v == nil {
			return nil
		}
		return &v.Caching
	}).(pulumi.StringPtrOutput)
}

// A `diffDiskSettings` block as defined above.
func (o WindowsVirtualMachineOsDiskPtrOutput) DiffDiskSettings() WindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineOsDisk) *WindowsVirtualMachineOsDiskDiffDiskSettings {
		if v == nil {
			return nil
		}
		return v.DiffDiskSettings
	}).(WindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutput)
}

// The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk.
func (o WindowsVirtualMachineOsDiskPtrOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineOsDisk) *string {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionSetId
	}).(pulumi.StringPtrOutput)
}

// The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine is sourced from.
func (o WindowsVirtualMachineOsDiskPtrOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineOsDisk) *int {
		if v == nil {
			return nil
		}
		return v.DiskSizeGb
	}).(pulumi.IntPtrOutput)
}

// The name which should be used for the Internal OS Disk. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineOsDiskPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineOsDisk) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The Type of Storage Account which should back this the Internal OS Disk. Possible values are `Standard_LRS`, `StandardSSD_LRS` and `Premium_LRS`. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineOsDiskPtrOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineOsDisk) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountType
	}).(pulumi.StringPtrOutput)
}

// Should Write Accelerator be Enabled for this OS Disk? Defaults to `false`.
func (o WindowsVirtualMachineOsDiskPtrOutput) WriteAcceleratorEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineOsDisk) *bool {
		if v == nil {
			return nil
		}
		return v.WriteAcceleratorEnabled
	}).(pulumi.BoolPtrOutput)
}

type WindowsVirtualMachineOsDiskDiffDiskSettings struct {
	// Specifies the Ephemeral Disk Settings for the OS Disk. At this time the only possible value is `Local`. Changing this forces a new resource to be created.
	Option string `pulumi:"option"`
}

// WindowsVirtualMachineOsDiskDiffDiskSettingsInput is an input type that accepts WindowsVirtualMachineOsDiskDiffDiskSettingsArgs and WindowsVirtualMachineOsDiskDiffDiskSettingsOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineOsDiskDiffDiskSettingsInput` via:
//
// 		 WindowsVirtualMachineOsDiskDiffDiskSettingsArgs{...}
//
type WindowsVirtualMachineOsDiskDiffDiskSettingsInput interface {
	pulumi.Input

	ToWindowsVirtualMachineOsDiskDiffDiskSettingsOutput() WindowsVirtualMachineOsDiskDiffDiskSettingsOutput
	ToWindowsVirtualMachineOsDiskDiffDiskSettingsOutputWithContext(context.Context) WindowsVirtualMachineOsDiskDiffDiskSettingsOutput
}

type WindowsVirtualMachineOsDiskDiffDiskSettingsArgs struct {
	// Specifies the Ephemeral Disk Settings for the OS Disk. At this time the only possible value is `Local`. Changing this forces a new resource to be created.
	Option pulumi.StringInput `pulumi:"option"`
}

func (WindowsVirtualMachineOsDiskDiffDiskSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineOsDiskDiffDiskSettings)(nil)).Elem()
}

func (i WindowsVirtualMachineOsDiskDiffDiskSettingsArgs) ToWindowsVirtualMachineOsDiskDiffDiskSettingsOutput() WindowsVirtualMachineOsDiskDiffDiskSettingsOutput {
	return i.ToWindowsVirtualMachineOsDiskDiffDiskSettingsOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineOsDiskDiffDiskSettingsArgs) ToWindowsVirtualMachineOsDiskDiffDiskSettingsOutputWithContext(ctx context.Context) WindowsVirtualMachineOsDiskDiffDiskSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineOsDiskDiffDiskSettingsOutput)
}

func (i WindowsVirtualMachineOsDiskDiffDiskSettingsArgs) ToWindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutput() WindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutput {
	return i.ToWindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineOsDiskDiffDiskSettingsArgs) ToWindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineOsDiskDiffDiskSettingsOutput).ToWindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutputWithContext(ctx)
}

// WindowsVirtualMachineOsDiskDiffDiskSettingsPtrInput is an input type that accepts WindowsVirtualMachineOsDiskDiffDiskSettingsArgs, WindowsVirtualMachineOsDiskDiffDiskSettingsPtr and WindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineOsDiskDiffDiskSettingsPtrInput` via:
//
// 		 WindowsVirtualMachineOsDiskDiffDiskSettingsArgs{...}
//
//  or:
//
// 		 nil
//
type WindowsVirtualMachineOsDiskDiffDiskSettingsPtrInput interface {
	pulumi.Input

	ToWindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutput() WindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutput
	ToWindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutputWithContext(context.Context) WindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutput
}

type windowsVirtualMachineOsDiskDiffDiskSettingsPtrType WindowsVirtualMachineOsDiskDiffDiskSettingsArgs

func WindowsVirtualMachineOsDiskDiffDiskSettingsPtr(v *WindowsVirtualMachineOsDiskDiffDiskSettingsArgs) WindowsVirtualMachineOsDiskDiffDiskSettingsPtrInput {
	return (*windowsVirtualMachineOsDiskDiffDiskSettingsPtrType)(v)
}

func (*windowsVirtualMachineOsDiskDiffDiskSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineOsDiskDiffDiskSettings)(nil)).Elem()
}

func (i *windowsVirtualMachineOsDiskDiffDiskSettingsPtrType) ToWindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutput() WindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutput {
	return i.ToWindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutputWithContext(context.Background())
}

func (i *windowsVirtualMachineOsDiskDiffDiskSettingsPtrType) ToWindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutput)
}

type WindowsVirtualMachineOsDiskDiffDiskSettingsOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineOsDiskDiffDiskSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineOsDiskDiffDiskSettings)(nil)).Elem()
}

func (o WindowsVirtualMachineOsDiskDiffDiskSettingsOutput) ToWindowsVirtualMachineOsDiskDiffDiskSettingsOutput() WindowsVirtualMachineOsDiskDiffDiskSettingsOutput {
	return o
}

func (o WindowsVirtualMachineOsDiskDiffDiskSettingsOutput) ToWindowsVirtualMachineOsDiskDiffDiskSettingsOutputWithContext(ctx context.Context) WindowsVirtualMachineOsDiskDiffDiskSettingsOutput {
	return o
}

func (o WindowsVirtualMachineOsDiskDiffDiskSettingsOutput) ToWindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutput() WindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutput {
	return o.ToWindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutputWithContext(context.Background())
}

func (o WindowsVirtualMachineOsDiskDiffDiskSettingsOutput) ToWindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineOsDiskDiffDiskSettings) *WindowsVirtualMachineOsDiskDiffDiskSettings {
		return &v
	}).(WindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutput)
}

// Specifies the Ephemeral Disk Settings for the OS Disk. At this time the only possible value is `Local`. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineOsDiskDiffDiskSettingsOutput) Option() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineOsDiskDiffDiskSettings) string { return v.Option }).(pulumi.StringOutput)
}

type WindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineOsDiskDiffDiskSettings)(nil)).Elem()
}

func (o WindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutput) ToWindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutput() WindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutput {
	return o
}

func (o WindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutput) ToWindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutput {
	return o
}

func (o WindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutput) Elem() WindowsVirtualMachineOsDiskDiffDiskSettingsOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineOsDiskDiffDiskSettings) WindowsVirtualMachineOsDiskDiffDiskSettings {
		return *v
	}).(WindowsVirtualMachineOsDiskDiffDiskSettingsOutput)
}

// Specifies the Ephemeral Disk Settings for the OS Disk. At this time the only possible value is `Local`. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutput) Option() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineOsDiskDiffDiskSettings) *string {
		if v == nil {
			return nil
		}
		return &v.Option
	}).(pulumi.StringPtrOutput)
}

type WindowsVirtualMachinePlan struct {
	// Specifies the Name of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
	// Specifies the Product of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
	Product string `pulumi:"product"`
	// Specifies the Publisher of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
	Publisher string `pulumi:"publisher"`
}

// WindowsVirtualMachinePlanInput is an input type that accepts WindowsVirtualMachinePlanArgs and WindowsVirtualMachinePlanOutput values.
// You can construct a concrete instance of `WindowsVirtualMachinePlanInput` via:
//
// 		 WindowsVirtualMachinePlanArgs{...}
//
type WindowsVirtualMachinePlanInput interface {
	pulumi.Input

	ToWindowsVirtualMachinePlanOutput() WindowsVirtualMachinePlanOutput
	ToWindowsVirtualMachinePlanOutputWithContext(context.Context) WindowsVirtualMachinePlanOutput
}

type WindowsVirtualMachinePlanArgs struct {
	// Specifies the Name of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the Product of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
	Product pulumi.StringInput `pulumi:"product"`
	// Specifies the Publisher of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
	Publisher pulumi.StringInput `pulumi:"publisher"`
}

func (WindowsVirtualMachinePlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachinePlan)(nil)).Elem()
}

func (i WindowsVirtualMachinePlanArgs) ToWindowsVirtualMachinePlanOutput() WindowsVirtualMachinePlanOutput {
	return i.ToWindowsVirtualMachinePlanOutputWithContext(context.Background())
}

func (i WindowsVirtualMachinePlanArgs) ToWindowsVirtualMachinePlanOutputWithContext(ctx context.Context) WindowsVirtualMachinePlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachinePlanOutput)
}

func (i WindowsVirtualMachinePlanArgs) ToWindowsVirtualMachinePlanPtrOutput() WindowsVirtualMachinePlanPtrOutput {
	return i.ToWindowsVirtualMachinePlanPtrOutputWithContext(context.Background())
}

func (i WindowsVirtualMachinePlanArgs) ToWindowsVirtualMachinePlanPtrOutputWithContext(ctx context.Context) WindowsVirtualMachinePlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachinePlanOutput).ToWindowsVirtualMachinePlanPtrOutputWithContext(ctx)
}

// WindowsVirtualMachinePlanPtrInput is an input type that accepts WindowsVirtualMachinePlanArgs, WindowsVirtualMachinePlanPtr and WindowsVirtualMachinePlanPtrOutput values.
// You can construct a concrete instance of `WindowsVirtualMachinePlanPtrInput` via:
//
// 		 WindowsVirtualMachinePlanArgs{...}
//
//  or:
//
// 		 nil
//
type WindowsVirtualMachinePlanPtrInput interface {
	pulumi.Input

	ToWindowsVirtualMachinePlanPtrOutput() WindowsVirtualMachinePlanPtrOutput
	ToWindowsVirtualMachinePlanPtrOutputWithContext(context.Context) WindowsVirtualMachinePlanPtrOutput
}

type windowsVirtualMachinePlanPtrType WindowsVirtualMachinePlanArgs

func WindowsVirtualMachinePlanPtr(v *WindowsVirtualMachinePlanArgs) WindowsVirtualMachinePlanPtrInput {
	return (*windowsVirtualMachinePlanPtrType)(v)
}

func (*windowsVirtualMachinePlanPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachinePlan)(nil)).Elem()
}

func (i *windowsVirtualMachinePlanPtrType) ToWindowsVirtualMachinePlanPtrOutput() WindowsVirtualMachinePlanPtrOutput {
	return i.ToWindowsVirtualMachinePlanPtrOutputWithContext(context.Background())
}

func (i *windowsVirtualMachinePlanPtrType) ToWindowsVirtualMachinePlanPtrOutputWithContext(ctx context.Context) WindowsVirtualMachinePlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachinePlanPtrOutput)
}

type WindowsVirtualMachinePlanOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachinePlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachinePlan)(nil)).Elem()
}

func (o WindowsVirtualMachinePlanOutput) ToWindowsVirtualMachinePlanOutput() WindowsVirtualMachinePlanOutput {
	return o
}

func (o WindowsVirtualMachinePlanOutput) ToWindowsVirtualMachinePlanOutputWithContext(ctx context.Context) WindowsVirtualMachinePlanOutput {
	return o
}

func (o WindowsVirtualMachinePlanOutput) ToWindowsVirtualMachinePlanPtrOutput() WindowsVirtualMachinePlanPtrOutput {
	return o.ToWindowsVirtualMachinePlanPtrOutputWithContext(context.Background())
}

func (o WindowsVirtualMachinePlanOutput) ToWindowsVirtualMachinePlanPtrOutputWithContext(ctx context.Context) WindowsVirtualMachinePlanPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachinePlan) *WindowsVirtualMachinePlan {
		return &v
	}).(WindowsVirtualMachinePlanPtrOutput)
}

// Specifies the Name of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
func (o WindowsVirtualMachinePlanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachinePlan) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the Product of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
func (o WindowsVirtualMachinePlanOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachinePlan) string { return v.Product }).(pulumi.StringOutput)
}

// Specifies the Publisher of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
func (o WindowsVirtualMachinePlanOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachinePlan) string { return v.Publisher }).(pulumi.StringOutput)
}

type WindowsVirtualMachinePlanPtrOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachinePlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachinePlan)(nil)).Elem()
}

func (o WindowsVirtualMachinePlanPtrOutput) ToWindowsVirtualMachinePlanPtrOutput() WindowsVirtualMachinePlanPtrOutput {
	return o
}

func (o WindowsVirtualMachinePlanPtrOutput) ToWindowsVirtualMachinePlanPtrOutputWithContext(ctx context.Context) WindowsVirtualMachinePlanPtrOutput {
	return o
}

func (o WindowsVirtualMachinePlanPtrOutput) Elem() WindowsVirtualMachinePlanOutput {
	return o.ApplyT(func(v *WindowsVirtualMachinePlan) WindowsVirtualMachinePlan { return *v }).(WindowsVirtualMachinePlanOutput)
}

// Specifies the Name of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
func (o WindowsVirtualMachinePlanPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachinePlan) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies the Product of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
func (o WindowsVirtualMachinePlanPtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachinePlan) *string {
		if v == nil {
			return nil
		}
		return &v.Product
	}).(pulumi.StringPtrOutput)
}

// Specifies the Publisher of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
func (o WindowsVirtualMachinePlanPtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachinePlan) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

type WindowsVirtualMachineScaleSetAdditionalCapabilities struct {
	// Should the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine Scale Set? Defaults to `false`. Changing this forces a new resource to be created.
	UltraSsdEnabled *bool `pulumi:"ultraSsdEnabled"`
}

// WindowsVirtualMachineScaleSetAdditionalCapabilitiesInput is an input type that accepts WindowsVirtualMachineScaleSetAdditionalCapabilitiesArgs and WindowsVirtualMachineScaleSetAdditionalCapabilitiesOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetAdditionalCapabilitiesInput` via:
//
// 		 WindowsVirtualMachineScaleSetAdditionalCapabilitiesArgs{...}
//
type WindowsVirtualMachineScaleSetAdditionalCapabilitiesInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetAdditionalCapabilitiesOutput() WindowsVirtualMachineScaleSetAdditionalCapabilitiesOutput
	ToWindowsVirtualMachineScaleSetAdditionalCapabilitiesOutputWithContext(context.Context) WindowsVirtualMachineScaleSetAdditionalCapabilitiesOutput
}

type WindowsVirtualMachineScaleSetAdditionalCapabilitiesArgs struct {
	// Should the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine Scale Set? Defaults to `false`. Changing this forces a new resource to be created.
	UltraSsdEnabled pulumi.BoolPtrInput `pulumi:"ultraSsdEnabled"`
}

func (WindowsVirtualMachineScaleSetAdditionalCapabilitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetAdditionalCapabilities)(nil)).Elem()
}

func (i WindowsVirtualMachineScaleSetAdditionalCapabilitiesArgs) ToWindowsVirtualMachineScaleSetAdditionalCapabilitiesOutput() WindowsVirtualMachineScaleSetAdditionalCapabilitiesOutput {
	return i.ToWindowsVirtualMachineScaleSetAdditionalCapabilitiesOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetAdditionalCapabilitiesArgs) ToWindowsVirtualMachineScaleSetAdditionalCapabilitiesOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetAdditionalCapabilitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetAdditionalCapabilitiesOutput)
}

func (i WindowsVirtualMachineScaleSetAdditionalCapabilitiesArgs) ToWindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput() WindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput {
	return i.ToWindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetAdditionalCapabilitiesArgs) ToWindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetAdditionalCapabilitiesOutput).ToWindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutputWithContext(ctx)
}

// WindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrInput is an input type that accepts WindowsVirtualMachineScaleSetAdditionalCapabilitiesArgs, WindowsVirtualMachineScaleSetAdditionalCapabilitiesPtr and WindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrInput` via:
//
// 		 WindowsVirtualMachineScaleSetAdditionalCapabilitiesArgs{...}
//
//  or:
//
// 		 nil
//
type WindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput() WindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput
	ToWindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutputWithContext(context.Context) WindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput
}

type windowsVirtualMachineScaleSetAdditionalCapabilitiesPtrType WindowsVirtualMachineScaleSetAdditionalCapabilitiesArgs

func WindowsVirtualMachineScaleSetAdditionalCapabilitiesPtr(v *WindowsVirtualMachineScaleSetAdditionalCapabilitiesArgs) WindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrInput {
	return (*windowsVirtualMachineScaleSetAdditionalCapabilitiesPtrType)(v)
}

func (*windowsVirtualMachineScaleSetAdditionalCapabilitiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineScaleSetAdditionalCapabilities)(nil)).Elem()
}

func (i *windowsVirtualMachineScaleSetAdditionalCapabilitiesPtrType) ToWindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput() WindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput {
	return i.ToWindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutputWithContext(context.Background())
}

func (i *windowsVirtualMachineScaleSetAdditionalCapabilitiesPtrType) ToWindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput)
}

type WindowsVirtualMachineScaleSetAdditionalCapabilitiesOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetAdditionalCapabilitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetAdditionalCapabilities)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetAdditionalCapabilitiesOutput) ToWindowsVirtualMachineScaleSetAdditionalCapabilitiesOutput() WindowsVirtualMachineScaleSetAdditionalCapabilitiesOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetAdditionalCapabilitiesOutput) ToWindowsVirtualMachineScaleSetAdditionalCapabilitiesOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetAdditionalCapabilitiesOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetAdditionalCapabilitiesOutput) ToWindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput() WindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput {
	return o.ToWindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutputWithContext(context.Background())
}

func (o WindowsVirtualMachineScaleSetAdditionalCapabilitiesOutput) ToWindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetAdditionalCapabilities) *WindowsVirtualMachineScaleSetAdditionalCapabilities {
		return &v
	}).(WindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput)
}

// Should the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine Scale Set? Defaults to `false`. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineScaleSetAdditionalCapabilitiesOutput) UltraSsdEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetAdditionalCapabilities) *bool { return v.UltraSsdEnabled }).(pulumi.BoolPtrOutput)
}

type WindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineScaleSetAdditionalCapabilities)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput) ToWindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput() WindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput) ToWindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput) Elem() WindowsVirtualMachineScaleSetAdditionalCapabilitiesOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetAdditionalCapabilities) WindowsVirtualMachineScaleSetAdditionalCapabilities {
		return *v
	}).(WindowsVirtualMachineScaleSetAdditionalCapabilitiesOutput)
}

// Should the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine Scale Set? Defaults to `false`. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput) UltraSsdEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetAdditionalCapabilities) *bool {
		if v == nil {
			return nil
		}
		return v.UltraSsdEnabled
	}).(pulumi.BoolPtrOutput)
}

type WindowsVirtualMachineScaleSetAdditionalUnattendContent struct {
	// The XML formatted content that is added to the unattend.xml file for the specified path and component. Changing this forces a new resource to be created.
	Content string `pulumi:"content"`
	// The name of the setting to which the content applies. Possible values are `AutoLogon` and `FirstLogonCommands`. Changing this forces a new resource to be created.
	Setting string `pulumi:"setting"`
}

// WindowsVirtualMachineScaleSetAdditionalUnattendContentInput is an input type that accepts WindowsVirtualMachineScaleSetAdditionalUnattendContentArgs and WindowsVirtualMachineScaleSetAdditionalUnattendContentOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetAdditionalUnattendContentInput` via:
//
// 		 WindowsVirtualMachineScaleSetAdditionalUnattendContentArgs{...}
//
type WindowsVirtualMachineScaleSetAdditionalUnattendContentInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetAdditionalUnattendContentOutput() WindowsVirtualMachineScaleSetAdditionalUnattendContentOutput
	ToWindowsVirtualMachineScaleSetAdditionalUnattendContentOutputWithContext(context.Context) WindowsVirtualMachineScaleSetAdditionalUnattendContentOutput
}

type WindowsVirtualMachineScaleSetAdditionalUnattendContentArgs struct {
	// The XML formatted content that is added to the unattend.xml file for the specified path and component. Changing this forces a new resource to be created.
	Content pulumi.StringInput `pulumi:"content"`
	// The name of the setting to which the content applies. Possible values are `AutoLogon` and `FirstLogonCommands`. Changing this forces a new resource to be created.
	Setting pulumi.StringInput `pulumi:"setting"`
}

func (WindowsVirtualMachineScaleSetAdditionalUnattendContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetAdditionalUnattendContent)(nil)).Elem()
}

func (i WindowsVirtualMachineScaleSetAdditionalUnattendContentArgs) ToWindowsVirtualMachineScaleSetAdditionalUnattendContentOutput() WindowsVirtualMachineScaleSetAdditionalUnattendContentOutput {
	return i.ToWindowsVirtualMachineScaleSetAdditionalUnattendContentOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetAdditionalUnattendContentArgs) ToWindowsVirtualMachineScaleSetAdditionalUnattendContentOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetAdditionalUnattendContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetAdditionalUnattendContentOutput)
}

// WindowsVirtualMachineScaleSetAdditionalUnattendContentArrayInput is an input type that accepts WindowsVirtualMachineScaleSetAdditionalUnattendContentArray and WindowsVirtualMachineScaleSetAdditionalUnattendContentArrayOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetAdditionalUnattendContentArrayInput` via:
//
// 		 WindowsVirtualMachineScaleSetAdditionalUnattendContentArray{ WindowsVirtualMachineScaleSetAdditionalUnattendContentArgs{...} }
//
type WindowsVirtualMachineScaleSetAdditionalUnattendContentArrayInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetAdditionalUnattendContentArrayOutput() WindowsVirtualMachineScaleSetAdditionalUnattendContentArrayOutput
	ToWindowsVirtualMachineScaleSetAdditionalUnattendContentArrayOutputWithContext(context.Context) WindowsVirtualMachineScaleSetAdditionalUnattendContentArrayOutput
}

type WindowsVirtualMachineScaleSetAdditionalUnattendContentArray []WindowsVirtualMachineScaleSetAdditionalUnattendContentInput

func (WindowsVirtualMachineScaleSetAdditionalUnattendContentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WindowsVirtualMachineScaleSetAdditionalUnattendContent)(nil)).Elem()
}

func (i WindowsVirtualMachineScaleSetAdditionalUnattendContentArray) ToWindowsVirtualMachineScaleSetAdditionalUnattendContentArrayOutput() WindowsVirtualMachineScaleSetAdditionalUnattendContentArrayOutput {
	return i.ToWindowsVirtualMachineScaleSetAdditionalUnattendContentArrayOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetAdditionalUnattendContentArray) ToWindowsVirtualMachineScaleSetAdditionalUnattendContentArrayOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetAdditionalUnattendContentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetAdditionalUnattendContentArrayOutput)
}

type WindowsVirtualMachineScaleSetAdditionalUnattendContentOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetAdditionalUnattendContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetAdditionalUnattendContent)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetAdditionalUnattendContentOutput) ToWindowsVirtualMachineScaleSetAdditionalUnattendContentOutput() WindowsVirtualMachineScaleSetAdditionalUnattendContentOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetAdditionalUnattendContentOutput) ToWindowsVirtualMachineScaleSetAdditionalUnattendContentOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetAdditionalUnattendContentOutput {
	return o
}

// The XML formatted content that is added to the unattend.xml file for the specified path and component. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineScaleSetAdditionalUnattendContentOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetAdditionalUnattendContent) string { return v.Content }).(pulumi.StringOutput)
}

// The name of the setting to which the content applies. Possible values are `AutoLogon` and `FirstLogonCommands`. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineScaleSetAdditionalUnattendContentOutput) Setting() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetAdditionalUnattendContent) string { return v.Setting }).(pulumi.StringOutput)
}

type WindowsVirtualMachineScaleSetAdditionalUnattendContentArrayOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetAdditionalUnattendContentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WindowsVirtualMachineScaleSetAdditionalUnattendContent)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetAdditionalUnattendContentArrayOutput) ToWindowsVirtualMachineScaleSetAdditionalUnattendContentArrayOutput() WindowsVirtualMachineScaleSetAdditionalUnattendContentArrayOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetAdditionalUnattendContentArrayOutput) ToWindowsVirtualMachineScaleSetAdditionalUnattendContentArrayOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetAdditionalUnattendContentArrayOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetAdditionalUnattendContentArrayOutput) Index(i pulumi.IntInput) WindowsVirtualMachineScaleSetAdditionalUnattendContentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WindowsVirtualMachineScaleSetAdditionalUnattendContent {
		return vs[0].([]WindowsVirtualMachineScaleSetAdditionalUnattendContent)[vs[1].(int)]
	}).(WindowsVirtualMachineScaleSetAdditionalUnattendContentOutput)
}

type WindowsVirtualMachineScaleSetAutomaticInstanceRepair struct {
	// Should the automatic instance repair be enabled on this Virtual Machine Scale Set?
	Enabled bool `pulumi:"enabled"`
	// Amount of time (in minutes, between 30 and 90, defaults to 30 minutes) for which automatic repairs will be delayed. The grace period starts right after the VM is found unhealthy. The time duration should be specified in ISO 8601 format.
	GracePeriod *string `pulumi:"gracePeriod"`
}

// WindowsVirtualMachineScaleSetAutomaticInstanceRepairInput is an input type that accepts WindowsVirtualMachineScaleSetAutomaticInstanceRepairArgs and WindowsVirtualMachineScaleSetAutomaticInstanceRepairOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetAutomaticInstanceRepairInput` via:
//
// 		 WindowsVirtualMachineScaleSetAutomaticInstanceRepairArgs{...}
//
type WindowsVirtualMachineScaleSetAutomaticInstanceRepairInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetAutomaticInstanceRepairOutput() WindowsVirtualMachineScaleSetAutomaticInstanceRepairOutput
	ToWindowsVirtualMachineScaleSetAutomaticInstanceRepairOutputWithContext(context.Context) WindowsVirtualMachineScaleSetAutomaticInstanceRepairOutput
}

type WindowsVirtualMachineScaleSetAutomaticInstanceRepairArgs struct {
	// Should the automatic instance repair be enabled on this Virtual Machine Scale Set?
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Amount of time (in minutes, between 30 and 90, defaults to 30 minutes) for which automatic repairs will be delayed. The grace period starts right after the VM is found unhealthy. The time duration should be specified in ISO 8601 format.
	GracePeriod pulumi.StringPtrInput `pulumi:"gracePeriod"`
}

func (WindowsVirtualMachineScaleSetAutomaticInstanceRepairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetAutomaticInstanceRepair)(nil)).Elem()
}

func (i WindowsVirtualMachineScaleSetAutomaticInstanceRepairArgs) ToWindowsVirtualMachineScaleSetAutomaticInstanceRepairOutput() WindowsVirtualMachineScaleSetAutomaticInstanceRepairOutput {
	return i.ToWindowsVirtualMachineScaleSetAutomaticInstanceRepairOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetAutomaticInstanceRepairArgs) ToWindowsVirtualMachineScaleSetAutomaticInstanceRepairOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetAutomaticInstanceRepairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetAutomaticInstanceRepairOutput)
}

func (i WindowsVirtualMachineScaleSetAutomaticInstanceRepairArgs) ToWindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput() WindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput {
	return i.ToWindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetAutomaticInstanceRepairArgs) ToWindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetAutomaticInstanceRepairOutput).ToWindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutputWithContext(ctx)
}

// WindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrInput is an input type that accepts WindowsVirtualMachineScaleSetAutomaticInstanceRepairArgs, WindowsVirtualMachineScaleSetAutomaticInstanceRepairPtr and WindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrInput` via:
//
// 		 WindowsVirtualMachineScaleSetAutomaticInstanceRepairArgs{...}
//
//  or:
//
// 		 nil
//
type WindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput() WindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput
	ToWindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutputWithContext(context.Context) WindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput
}

type windowsVirtualMachineScaleSetAutomaticInstanceRepairPtrType WindowsVirtualMachineScaleSetAutomaticInstanceRepairArgs

func WindowsVirtualMachineScaleSetAutomaticInstanceRepairPtr(v *WindowsVirtualMachineScaleSetAutomaticInstanceRepairArgs) WindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrInput {
	return (*windowsVirtualMachineScaleSetAutomaticInstanceRepairPtrType)(v)
}

func (*windowsVirtualMachineScaleSetAutomaticInstanceRepairPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineScaleSetAutomaticInstanceRepair)(nil)).Elem()
}

func (i *windowsVirtualMachineScaleSetAutomaticInstanceRepairPtrType) ToWindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput() WindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput {
	return i.ToWindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutputWithContext(context.Background())
}

func (i *windowsVirtualMachineScaleSetAutomaticInstanceRepairPtrType) ToWindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput)
}

type WindowsVirtualMachineScaleSetAutomaticInstanceRepairOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetAutomaticInstanceRepairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetAutomaticInstanceRepair)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetAutomaticInstanceRepairOutput) ToWindowsVirtualMachineScaleSetAutomaticInstanceRepairOutput() WindowsVirtualMachineScaleSetAutomaticInstanceRepairOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetAutomaticInstanceRepairOutput) ToWindowsVirtualMachineScaleSetAutomaticInstanceRepairOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetAutomaticInstanceRepairOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetAutomaticInstanceRepairOutput) ToWindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput() WindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput {
	return o.ToWindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutputWithContext(context.Background())
}

func (o WindowsVirtualMachineScaleSetAutomaticInstanceRepairOutput) ToWindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetAutomaticInstanceRepair) *WindowsVirtualMachineScaleSetAutomaticInstanceRepair {
		return &v
	}).(WindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput)
}

// Should the automatic instance repair be enabled on this Virtual Machine Scale Set?
func (o WindowsVirtualMachineScaleSetAutomaticInstanceRepairOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetAutomaticInstanceRepair) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Amount of time (in minutes, between 30 and 90, defaults to 30 minutes) for which automatic repairs will be delayed. The grace period starts right after the VM is found unhealthy. The time duration should be specified in ISO 8601 format.
func (o WindowsVirtualMachineScaleSetAutomaticInstanceRepairOutput) GracePeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetAutomaticInstanceRepair) *string { return v.GracePeriod }).(pulumi.StringPtrOutput)
}

type WindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineScaleSetAutomaticInstanceRepair)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput) ToWindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput() WindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput) ToWindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput) Elem() WindowsVirtualMachineScaleSetAutomaticInstanceRepairOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetAutomaticInstanceRepair) WindowsVirtualMachineScaleSetAutomaticInstanceRepair {
		return *v
	}).(WindowsVirtualMachineScaleSetAutomaticInstanceRepairOutput)
}

// Should the automatic instance repair be enabled on this Virtual Machine Scale Set?
func (o WindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetAutomaticInstanceRepair) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Amount of time (in minutes, between 30 and 90, defaults to 30 minutes) for which automatic repairs will be delayed. The grace period starts right after the VM is found unhealthy. The time duration should be specified in ISO 8601 format.
func (o WindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput) GracePeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetAutomaticInstanceRepair) *string {
		if v == nil {
			return nil
		}
		return v.GracePeriod
	}).(pulumi.StringPtrOutput)
}

type WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicy struct {
	// Should automatic rollbacks be disabled? Changing this forces a new resource to be created.
	DisableAutomaticRollback bool `pulumi:"disableAutomaticRollback"`
	// Should OS Upgrades automatically be applied to Scale Set instances in a rolling fashion when a newer version of the OS Image becomes available? Changing this forces a new resource to be created.
	EnableAutomaticOsUpgrade bool `pulumi:"enableAutomaticOsUpgrade"`
}

// WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyInput is an input type that accepts WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs and WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyInput` via:
//
// 		 WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs{...}
//
type WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput() WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput
	ToWindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyOutputWithContext(context.Context) WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput
}

type WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs struct {
	// Should automatic rollbacks be disabled? Changing this forces a new resource to be created.
	DisableAutomaticRollback pulumi.BoolInput `pulumi:"disableAutomaticRollback"`
	// Should OS Upgrades automatically be applied to Scale Set instances in a rolling fashion when a newer version of the OS Image becomes available? Changing this forces a new resource to be created.
	EnableAutomaticOsUpgrade pulumi.BoolInput `pulumi:"enableAutomaticOsUpgrade"`
}

func (WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicy)(nil)).Elem()
}

func (i WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs) ToWindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput() WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput {
	return i.ToWindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs) ToWindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput)
}

func (i WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs) ToWindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput() WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput {
	return i.ToWindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs) ToWindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput).ToWindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutputWithContext(ctx)
}

// WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrInput is an input type that accepts WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs, WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtr and WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrInput` via:
//
// 		 WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs{...}
//
//  or:
//
// 		 nil
//
type WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput() WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput
	ToWindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutputWithContext(context.Context) WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput
}

type windowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrType WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs

func WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtr(v *WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs) WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrInput {
	return (*windowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrType)(v)
}

func (*windowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicy)(nil)).Elem()
}

func (i *windowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrType) ToWindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput() WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput {
	return i.ToWindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutputWithContext(context.Background())
}

func (i *windowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrType) ToWindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput)
}

type WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicy)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput) ToWindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput() WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput) ToWindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput) ToWindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput() WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput {
	return o.ToWindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutputWithContext(context.Background())
}

func (o WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput) ToWindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicy) *WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicy {
		return &v
	}).(WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput)
}

// Should automatic rollbacks be disabled? Changing this forces a new resource to be created.
func (o WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput) DisableAutomaticRollback() pulumi.BoolOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicy) bool { return v.DisableAutomaticRollback }).(pulumi.BoolOutput)
}

// Should OS Upgrades automatically be applied to Scale Set instances in a rolling fashion when a newer version of the OS Image becomes available? Changing this forces a new resource to be created.
func (o WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput) EnableAutomaticOsUpgrade() pulumi.BoolOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicy) bool { return v.EnableAutomaticOsUpgrade }).(pulumi.BoolOutput)
}

type WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicy)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput) ToWindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput() WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput) ToWindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput) Elem() WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicy) WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicy {
		return *v
	}).(WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput)
}

// Should automatic rollbacks be disabled? Changing this forces a new resource to be created.
func (o WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput) DisableAutomaticRollback() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.DisableAutomaticRollback
	}).(pulumi.BoolPtrOutput)
}

// Should OS Upgrades automatically be applied to Scale Set instances in a rolling fashion when a newer version of the OS Image becomes available? Changing this forces a new resource to be created.
func (o WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput) EnableAutomaticOsUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableAutomaticOsUpgrade
	}).(pulumi.BoolPtrOutput)
}

type WindowsVirtualMachineScaleSetBootDiagnostics struct {
	// The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
	StorageAccountUri string `pulumi:"storageAccountUri"`
}

// WindowsVirtualMachineScaleSetBootDiagnosticsInput is an input type that accepts WindowsVirtualMachineScaleSetBootDiagnosticsArgs and WindowsVirtualMachineScaleSetBootDiagnosticsOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetBootDiagnosticsInput` via:
//
// 		 WindowsVirtualMachineScaleSetBootDiagnosticsArgs{...}
//
type WindowsVirtualMachineScaleSetBootDiagnosticsInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetBootDiagnosticsOutput() WindowsVirtualMachineScaleSetBootDiagnosticsOutput
	ToWindowsVirtualMachineScaleSetBootDiagnosticsOutputWithContext(context.Context) WindowsVirtualMachineScaleSetBootDiagnosticsOutput
}

type WindowsVirtualMachineScaleSetBootDiagnosticsArgs struct {
	// The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
	StorageAccountUri pulumi.StringInput `pulumi:"storageAccountUri"`
}

func (WindowsVirtualMachineScaleSetBootDiagnosticsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetBootDiagnostics)(nil)).Elem()
}

func (i WindowsVirtualMachineScaleSetBootDiagnosticsArgs) ToWindowsVirtualMachineScaleSetBootDiagnosticsOutput() WindowsVirtualMachineScaleSetBootDiagnosticsOutput {
	return i.ToWindowsVirtualMachineScaleSetBootDiagnosticsOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetBootDiagnosticsArgs) ToWindowsVirtualMachineScaleSetBootDiagnosticsOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetBootDiagnosticsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetBootDiagnosticsOutput)
}

func (i WindowsVirtualMachineScaleSetBootDiagnosticsArgs) ToWindowsVirtualMachineScaleSetBootDiagnosticsPtrOutput() WindowsVirtualMachineScaleSetBootDiagnosticsPtrOutput {
	return i.ToWindowsVirtualMachineScaleSetBootDiagnosticsPtrOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetBootDiagnosticsArgs) ToWindowsVirtualMachineScaleSetBootDiagnosticsPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetBootDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetBootDiagnosticsOutput).ToWindowsVirtualMachineScaleSetBootDiagnosticsPtrOutputWithContext(ctx)
}

// WindowsVirtualMachineScaleSetBootDiagnosticsPtrInput is an input type that accepts WindowsVirtualMachineScaleSetBootDiagnosticsArgs, WindowsVirtualMachineScaleSetBootDiagnosticsPtr and WindowsVirtualMachineScaleSetBootDiagnosticsPtrOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetBootDiagnosticsPtrInput` via:
//
// 		 WindowsVirtualMachineScaleSetBootDiagnosticsArgs{...}
//
//  or:
//
// 		 nil
//
type WindowsVirtualMachineScaleSetBootDiagnosticsPtrInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetBootDiagnosticsPtrOutput() WindowsVirtualMachineScaleSetBootDiagnosticsPtrOutput
	ToWindowsVirtualMachineScaleSetBootDiagnosticsPtrOutputWithContext(context.Context) WindowsVirtualMachineScaleSetBootDiagnosticsPtrOutput
}

type windowsVirtualMachineScaleSetBootDiagnosticsPtrType WindowsVirtualMachineScaleSetBootDiagnosticsArgs

func WindowsVirtualMachineScaleSetBootDiagnosticsPtr(v *WindowsVirtualMachineScaleSetBootDiagnosticsArgs) WindowsVirtualMachineScaleSetBootDiagnosticsPtrInput {
	return (*windowsVirtualMachineScaleSetBootDiagnosticsPtrType)(v)
}

func (*windowsVirtualMachineScaleSetBootDiagnosticsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineScaleSetBootDiagnostics)(nil)).Elem()
}

func (i *windowsVirtualMachineScaleSetBootDiagnosticsPtrType) ToWindowsVirtualMachineScaleSetBootDiagnosticsPtrOutput() WindowsVirtualMachineScaleSetBootDiagnosticsPtrOutput {
	return i.ToWindowsVirtualMachineScaleSetBootDiagnosticsPtrOutputWithContext(context.Background())
}

func (i *windowsVirtualMachineScaleSetBootDiagnosticsPtrType) ToWindowsVirtualMachineScaleSetBootDiagnosticsPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetBootDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetBootDiagnosticsPtrOutput)
}

type WindowsVirtualMachineScaleSetBootDiagnosticsOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetBootDiagnosticsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetBootDiagnostics)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetBootDiagnosticsOutput) ToWindowsVirtualMachineScaleSetBootDiagnosticsOutput() WindowsVirtualMachineScaleSetBootDiagnosticsOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetBootDiagnosticsOutput) ToWindowsVirtualMachineScaleSetBootDiagnosticsOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetBootDiagnosticsOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetBootDiagnosticsOutput) ToWindowsVirtualMachineScaleSetBootDiagnosticsPtrOutput() WindowsVirtualMachineScaleSetBootDiagnosticsPtrOutput {
	return o.ToWindowsVirtualMachineScaleSetBootDiagnosticsPtrOutputWithContext(context.Background())
}

func (o WindowsVirtualMachineScaleSetBootDiagnosticsOutput) ToWindowsVirtualMachineScaleSetBootDiagnosticsPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetBootDiagnosticsPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetBootDiagnostics) *WindowsVirtualMachineScaleSetBootDiagnostics {
		return &v
	}).(WindowsVirtualMachineScaleSetBootDiagnosticsPtrOutput)
}

// The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
func (o WindowsVirtualMachineScaleSetBootDiagnosticsOutput) StorageAccountUri() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetBootDiagnostics) string { return v.StorageAccountUri }).(pulumi.StringOutput)
}

type WindowsVirtualMachineScaleSetBootDiagnosticsPtrOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetBootDiagnosticsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineScaleSetBootDiagnostics)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetBootDiagnosticsPtrOutput) ToWindowsVirtualMachineScaleSetBootDiagnosticsPtrOutput() WindowsVirtualMachineScaleSetBootDiagnosticsPtrOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetBootDiagnosticsPtrOutput) ToWindowsVirtualMachineScaleSetBootDiagnosticsPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetBootDiagnosticsPtrOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetBootDiagnosticsPtrOutput) Elem() WindowsVirtualMachineScaleSetBootDiagnosticsOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetBootDiagnostics) WindowsVirtualMachineScaleSetBootDiagnostics {
		return *v
	}).(WindowsVirtualMachineScaleSetBootDiagnosticsOutput)
}

// The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
func (o WindowsVirtualMachineScaleSetBootDiagnosticsPtrOutput) StorageAccountUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetBootDiagnostics) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountUri
	}).(pulumi.StringPtrOutput)
}

type WindowsVirtualMachineScaleSetDataDisk struct {
	// The type of Caching which should be used for this Data Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
	Caching string `pulumi:"caching"`
	// The create option which should be used for this Data Disk. Possible values are `Empty` and `FromImage`. Defaults to `Empty`. (`FromImage` should only be used if the source image includes data disks).
	CreateOption *string `pulumi:"createOption"`
	// The ID of the Disk Encryption Set which should be used to encrypt this Data Disk.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// The size of the Data Disk which should be created.
	DiskSizeGb int `pulumi:"diskSizeGb"`
	// The Logical Unit Number of the Data Disk, which must be unique within the Virtual Machine.
	Lun int `pulumi:"lun"`
	// The Type of Storage Account which should back this Data Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS` and `UltraSSD_LRS`.
	StorageAccountType string `pulumi:"storageAccountType"`
	// Should Write Accelerator be enabled for this Data Disk? Defaults to `false`.
	WriteAcceleratorEnabled *bool `pulumi:"writeAcceleratorEnabled"`
}

// WindowsVirtualMachineScaleSetDataDiskInput is an input type that accepts WindowsVirtualMachineScaleSetDataDiskArgs and WindowsVirtualMachineScaleSetDataDiskOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetDataDiskInput` via:
//
// 		 WindowsVirtualMachineScaleSetDataDiskArgs{...}
//
type WindowsVirtualMachineScaleSetDataDiskInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetDataDiskOutput() WindowsVirtualMachineScaleSetDataDiskOutput
	ToWindowsVirtualMachineScaleSetDataDiskOutputWithContext(context.Context) WindowsVirtualMachineScaleSetDataDiskOutput
}

type WindowsVirtualMachineScaleSetDataDiskArgs struct {
	// The type of Caching which should be used for this Data Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
	Caching pulumi.StringInput `pulumi:"caching"`
	// The create option which should be used for this Data Disk. Possible values are `Empty` and `FromImage`. Defaults to `Empty`. (`FromImage` should only be used if the source image includes data disks).
	CreateOption pulumi.StringPtrInput `pulumi:"createOption"`
	// The ID of the Disk Encryption Set which should be used to encrypt this Data Disk.
	DiskEncryptionSetId pulumi.StringPtrInput `pulumi:"diskEncryptionSetId"`
	// The size of the Data Disk which should be created.
	DiskSizeGb pulumi.IntInput `pulumi:"diskSizeGb"`
	// The Logical Unit Number of the Data Disk, which must be unique within the Virtual Machine.
	Lun pulumi.IntInput `pulumi:"lun"`
	// The Type of Storage Account which should back this Data Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS` and `UltraSSD_LRS`.
	StorageAccountType pulumi.StringInput `pulumi:"storageAccountType"`
	// Should Write Accelerator be enabled for this Data Disk? Defaults to `false`.
	WriteAcceleratorEnabled pulumi.BoolPtrInput `pulumi:"writeAcceleratorEnabled"`
}

func (WindowsVirtualMachineScaleSetDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetDataDisk)(nil)).Elem()
}

func (i WindowsVirtualMachineScaleSetDataDiskArgs) ToWindowsVirtualMachineScaleSetDataDiskOutput() WindowsVirtualMachineScaleSetDataDiskOutput {
	return i.ToWindowsVirtualMachineScaleSetDataDiskOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetDataDiskArgs) ToWindowsVirtualMachineScaleSetDataDiskOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetDataDiskOutput)
}

// WindowsVirtualMachineScaleSetDataDiskArrayInput is an input type that accepts WindowsVirtualMachineScaleSetDataDiskArray and WindowsVirtualMachineScaleSetDataDiskArrayOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetDataDiskArrayInput` via:
//
// 		 WindowsVirtualMachineScaleSetDataDiskArray{ WindowsVirtualMachineScaleSetDataDiskArgs{...} }
//
type WindowsVirtualMachineScaleSetDataDiskArrayInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetDataDiskArrayOutput() WindowsVirtualMachineScaleSetDataDiskArrayOutput
	ToWindowsVirtualMachineScaleSetDataDiskArrayOutputWithContext(context.Context) WindowsVirtualMachineScaleSetDataDiskArrayOutput
}

type WindowsVirtualMachineScaleSetDataDiskArray []WindowsVirtualMachineScaleSetDataDiskInput

func (WindowsVirtualMachineScaleSetDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WindowsVirtualMachineScaleSetDataDisk)(nil)).Elem()
}

func (i WindowsVirtualMachineScaleSetDataDiskArray) ToWindowsVirtualMachineScaleSetDataDiskArrayOutput() WindowsVirtualMachineScaleSetDataDiskArrayOutput {
	return i.ToWindowsVirtualMachineScaleSetDataDiskArrayOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetDataDiskArray) ToWindowsVirtualMachineScaleSetDataDiskArrayOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetDataDiskArrayOutput)
}

type WindowsVirtualMachineScaleSetDataDiskOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetDataDisk)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetDataDiskOutput) ToWindowsVirtualMachineScaleSetDataDiskOutput() WindowsVirtualMachineScaleSetDataDiskOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetDataDiskOutput) ToWindowsVirtualMachineScaleSetDataDiskOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetDataDiskOutput {
	return o
}

// The type of Caching which should be used for this Data Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
func (o WindowsVirtualMachineScaleSetDataDiskOutput) Caching() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetDataDisk) string { return v.Caching }).(pulumi.StringOutput)
}

// The create option which should be used for this Data Disk. Possible values are `Empty` and `FromImage`. Defaults to `Empty`. (`FromImage` should only be used if the source image includes data disks).
func (o WindowsVirtualMachineScaleSetDataDiskOutput) CreateOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetDataDisk) *string { return v.CreateOption }).(pulumi.StringPtrOutput)
}

// The ID of the Disk Encryption Set which should be used to encrypt this Data Disk.
func (o WindowsVirtualMachineScaleSetDataDiskOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetDataDisk) *string { return v.DiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// The size of the Data Disk which should be created.
func (o WindowsVirtualMachineScaleSetDataDiskOutput) DiskSizeGb() pulumi.IntOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetDataDisk) int { return v.DiskSizeGb }).(pulumi.IntOutput)
}

// The Logical Unit Number of the Data Disk, which must be unique within the Virtual Machine.
func (o WindowsVirtualMachineScaleSetDataDiskOutput) Lun() pulumi.IntOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetDataDisk) int { return v.Lun }).(pulumi.IntOutput)
}

// The Type of Storage Account which should back this Data Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS` and `UltraSSD_LRS`.
func (o WindowsVirtualMachineScaleSetDataDiskOutput) StorageAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetDataDisk) string { return v.StorageAccountType }).(pulumi.StringOutput)
}

// Should Write Accelerator be enabled for this Data Disk? Defaults to `false`.
func (o WindowsVirtualMachineScaleSetDataDiskOutput) WriteAcceleratorEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetDataDisk) *bool { return v.WriteAcceleratorEnabled }).(pulumi.BoolPtrOutput)
}

type WindowsVirtualMachineScaleSetDataDiskArrayOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WindowsVirtualMachineScaleSetDataDisk)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetDataDiskArrayOutput) ToWindowsVirtualMachineScaleSetDataDiskArrayOutput() WindowsVirtualMachineScaleSetDataDiskArrayOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetDataDiskArrayOutput) ToWindowsVirtualMachineScaleSetDataDiskArrayOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetDataDiskArrayOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetDataDiskArrayOutput) Index(i pulumi.IntInput) WindowsVirtualMachineScaleSetDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WindowsVirtualMachineScaleSetDataDisk {
		return vs[0].([]WindowsVirtualMachineScaleSetDataDisk)[vs[1].(int)]
	}).(WindowsVirtualMachineScaleSetDataDiskOutput)
}

type WindowsVirtualMachineScaleSetIdentity struct {
	// A list of User Managed Identity ID's which should be assigned to the Windows Virtual Machine Scale Set.
	IdentityIds []string `pulumi:"identityIds"`
	// The ID of the System Managed Service Principal.
	PrincipalId *string `pulumi:"principalId"`
	// The type of Managed Identity which should be assigned to the Windows Virtual Machine Scale Set. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
	Type string `pulumi:"type"`
}

// WindowsVirtualMachineScaleSetIdentityInput is an input type that accepts WindowsVirtualMachineScaleSetIdentityArgs and WindowsVirtualMachineScaleSetIdentityOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetIdentityInput` via:
//
// 		 WindowsVirtualMachineScaleSetIdentityArgs{...}
//
type WindowsVirtualMachineScaleSetIdentityInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetIdentityOutput() WindowsVirtualMachineScaleSetIdentityOutput
	ToWindowsVirtualMachineScaleSetIdentityOutputWithContext(context.Context) WindowsVirtualMachineScaleSetIdentityOutput
}

type WindowsVirtualMachineScaleSetIdentityArgs struct {
	// A list of User Managed Identity ID's which should be assigned to the Windows Virtual Machine Scale Set.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The ID of the System Managed Service Principal.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The type of Managed Identity which should be assigned to the Windows Virtual Machine Scale Set. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WindowsVirtualMachineScaleSetIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetIdentity)(nil)).Elem()
}

func (i WindowsVirtualMachineScaleSetIdentityArgs) ToWindowsVirtualMachineScaleSetIdentityOutput() WindowsVirtualMachineScaleSetIdentityOutput {
	return i.ToWindowsVirtualMachineScaleSetIdentityOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetIdentityArgs) ToWindowsVirtualMachineScaleSetIdentityOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetIdentityOutput)
}

func (i WindowsVirtualMachineScaleSetIdentityArgs) ToWindowsVirtualMachineScaleSetIdentityPtrOutput() WindowsVirtualMachineScaleSetIdentityPtrOutput {
	return i.ToWindowsVirtualMachineScaleSetIdentityPtrOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetIdentityArgs) ToWindowsVirtualMachineScaleSetIdentityPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetIdentityOutput).ToWindowsVirtualMachineScaleSetIdentityPtrOutputWithContext(ctx)
}

// WindowsVirtualMachineScaleSetIdentityPtrInput is an input type that accepts WindowsVirtualMachineScaleSetIdentityArgs, WindowsVirtualMachineScaleSetIdentityPtr and WindowsVirtualMachineScaleSetIdentityPtrOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetIdentityPtrInput` via:
//
// 		 WindowsVirtualMachineScaleSetIdentityArgs{...}
//
//  or:
//
// 		 nil
//
type WindowsVirtualMachineScaleSetIdentityPtrInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetIdentityPtrOutput() WindowsVirtualMachineScaleSetIdentityPtrOutput
	ToWindowsVirtualMachineScaleSetIdentityPtrOutputWithContext(context.Context) WindowsVirtualMachineScaleSetIdentityPtrOutput
}

type windowsVirtualMachineScaleSetIdentityPtrType WindowsVirtualMachineScaleSetIdentityArgs

func WindowsVirtualMachineScaleSetIdentityPtr(v *WindowsVirtualMachineScaleSetIdentityArgs) WindowsVirtualMachineScaleSetIdentityPtrInput {
	return (*windowsVirtualMachineScaleSetIdentityPtrType)(v)
}

func (*windowsVirtualMachineScaleSetIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineScaleSetIdentity)(nil)).Elem()
}

func (i *windowsVirtualMachineScaleSetIdentityPtrType) ToWindowsVirtualMachineScaleSetIdentityPtrOutput() WindowsVirtualMachineScaleSetIdentityPtrOutput {
	return i.ToWindowsVirtualMachineScaleSetIdentityPtrOutputWithContext(context.Background())
}

func (i *windowsVirtualMachineScaleSetIdentityPtrType) ToWindowsVirtualMachineScaleSetIdentityPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetIdentityPtrOutput)
}

type WindowsVirtualMachineScaleSetIdentityOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetIdentity)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetIdentityOutput) ToWindowsVirtualMachineScaleSetIdentityOutput() WindowsVirtualMachineScaleSetIdentityOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetIdentityOutput) ToWindowsVirtualMachineScaleSetIdentityOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetIdentityOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetIdentityOutput) ToWindowsVirtualMachineScaleSetIdentityPtrOutput() WindowsVirtualMachineScaleSetIdentityPtrOutput {
	return o.ToWindowsVirtualMachineScaleSetIdentityPtrOutputWithContext(context.Background())
}

func (o WindowsVirtualMachineScaleSetIdentityOutput) ToWindowsVirtualMachineScaleSetIdentityPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetIdentityPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetIdentity) *WindowsVirtualMachineScaleSetIdentity {
		return &v
	}).(WindowsVirtualMachineScaleSetIdentityPtrOutput)
}

// A list of User Managed Identity ID's which should be assigned to the Windows Virtual Machine Scale Set.
func (o WindowsVirtualMachineScaleSetIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The ID of the System Managed Service Principal.
func (o WindowsVirtualMachineScaleSetIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The type of Managed Identity which should be assigned to the Windows Virtual Machine Scale Set. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
func (o WindowsVirtualMachineScaleSetIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type WindowsVirtualMachineScaleSetIdentityPtrOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineScaleSetIdentity)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetIdentityPtrOutput) ToWindowsVirtualMachineScaleSetIdentityPtrOutput() WindowsVirtualMachineScaleSetIdentityPtrOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetIdentityPtrOutput) ToWindowsVirtualMachineScaleSetIdentityPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetIdentityPtrOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetIdentityPtrOutput) Elem() WindowsVirtualMachineScaleSetIdentityOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetIdentity) WindowsVirtualMachineScaleSetIdentity { return *v }).(WindowsVirtualMachineScaleSetIdentityOutput)
}

// A list of User Managed Identity ID's which should be assigned to the Windows Virtual Machine Scale Set.
func (o WindowsVirtualMachineScaleSetIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The ID of the System Managed Service Principal.
func (o WindowsVirtualMachineScaleSetIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The type of Managed Identity which should be assigned to the Windows Virtual Machine Scale Set. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
func (o WindowsVirtualMachineScaleSetIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type WindowsVirtualMachineScaleSetNetworkInterface struct {
	// A list of IP Addresses of DNS Servers which should be assigned to the Network Interface.
	DnsServers []string `pulumi:"dnsServers"`
	// Does this Network Interface support Accelerated Networking? Defaults to `false`.
	EnableAcceleratedNetworking *bool `pulumi:"enableAcceleratedNetworking"`
	// Does this Network Interface support IP Forwarding? Defaults to `false`.
	EnableIpForwarding *bool `pulumi:"enableIpForwarding"`
	// One or more `ipConfiguration` blocks as defined above.
	IpConfigurations []WindowsVirtualMachineScaleSetNetworkInterfaceIpConfiguration `pulumi:"ipConfigurations"`
	// The Name which should be used for this Network Interface. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
	// The ID of a Network Security Group which should be assigned to this Network Interface.
	NetworkSecurityGroupId *string `pulumi:"networkSecurityGroupId"`
	// Is this the Primary IP Configuration?
	Primary *bool `pulumi:"primary"`
}

// WindowsVirtualMachineScaleSetNetworkInterfaceInput is an input type that accepts WindowsVirtualMachineScaleSetNetworkInterfaceArgs and WindowsVirtualMachineScaleSetNetworkInterfaceOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetNetworkInterfaceInput` via:
//
// 		 WindowsVirtualMachineScaleSetNetworkInterfaceArgs{...}
//
type WindowsVirtualMachineScaleSetNetworkInterfaceInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetNetworkInterfaceOutput() WindowsVirtualMachineScaleSetNetworkInterfaceOutput
	ToWindowsVirtualMachineScaleSetNetworkInterfaceOutputWithContext(context.Context) WindowsVirtualMachineScaleSetNetworkInterfaceOutput
}

type WindowsVirtualMachineScaleSetNetworkInterfaceArgs struct {
	// A list of IP Addresses of DNS Servers which should be assigned to the Network Interface.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	// Does this Network Interface support Accelerated Networking? Defaults to `false`.
	EnableAcceleratedNetworking pulumi.BoolPtrInput `pulumi:"enableAcceleratedNetworking"`
	// Does this Network Interface support IP Forwarding? Defaults to `false`.
	EnableIpForwarding pulumi.BoolPtrInput `pulumi:"enableIpForwarding"`
	// One or more `ipConfiguration` blocks as defined above.
	IpConfigurations WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayInput `pulumi:"ipConfigurations"`
	// The Name which should be used for this Network Interface. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of a Network Security Group which should be assigned to this Network Interface.
	NetworkSecurityGroupId pulumi.StringPtrInput `pulumi:"networkSecurityGroupId"`
	// Is this the Primary IP Configuration?
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
}

func (WindowsVirtualMachineScaleSetNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetNetworkInterface)(nil)).Elem()
}

func (i WindowsVirtualMachineScaleSetNetworkInterfaceArgs) ToWindowsVirtualMachineScaleSetNetworkInterfaceOutput() WindowsVirtualMachineScaleSetNetworkInterfaceOutput {
	return i.ToWindowsVirtualMachineScaleSetNetworkInterfaceOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetNetworkInterfaceArgs) ToWindowsVirtualMachineScaleSetNetworkInterfaceOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetNetworkInterfaceOutput)
}

// WindowsVirtualMachineScaleSetNetworkInterfaceArrayInput is an input type that accepts WindowsVirtualMachineScaleSetNetworkInterfaceArray and WindowsVirtualMachineScaleSetNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetNetworkInterfaceArrayInput` via:
//
// 		 WindowsVirtualMachineScaleSetNetworkInterfaceArray{ WindowsVirtualMachineScaleSetNetworkInterfaceArgs{...} }
//
type WindowsVirtualMachineScaleSetNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetNetworkInterfaceArrayOutput() WindowsVirtualMachineScaleSetNetworkInterfaceArrayOutput
	ToWindowsVirtualMachineScaleSetNetworkInterfaceArrayOutputWithContext(context.Context) WindowsVirtualMachineScaleSetNetworkInterfaceArrayOutput
}

type WindowsVirtualMachineScaleSetNetworkInterfaceArray []WindowsVirtualMachineScaleSetNetworkInterfaceInput

func (WindowsVirtualMachineScaleSetNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WindowsVirtualMachineScaleSetNetworkInterface)(nil)).Elem()
}

func (i WindowsVirtualMachineScaleSetNetworkInterfaceArray) ToWindowsVirtualMachineScaleSetNetworkInterfaceArrayOutput() WindowsVirtualMachineScaleSetNetworkInterfaceArrayOutput {
	return i.ToWindowsVirtualMachineScaleSetNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetNetworkInterfaceArray) ToWindowsVirtualMachineScaleSetNetworkInterfaceArrayOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetNetworkInterfaceArrayOutput)
}

type WindowsVirtualMachineScaleSetNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetNetworkInterface)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetNetworkInterfaceOutput) ToWindowsVirtualMachineScaleSetNetworkInterfaceOutput() WindowsVirtualMachineScaleSetNetworkInterfaceOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetNetworkInterfaceOutput) ToWindowsVirtualMachineScaleSetNetworkInterfaceOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetNetworkInterfaceOutput {
	return o
}

// A list of IP Addresses of DNS Servers which should be assigned to the Network Interface.
func (o WindowsVirtualMachineScaleSetNetworkInterfaceOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetNetworkInterface) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// Does this Network Interface support Accelerated Networking? Defaults to `false`.
func (o WindowsVirtualMachineScaleSetNetworkInterfaceOutput) EnableAcceleratedNetworking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetNetworkInterface) *bool { return v.EnableAcceleratedNetworking }).(pulumi.BoolPtrOutput)
}

// Does this Network Interface support IP Forwarding? Defaults to `false`.
func (o WindowsVirtualMachineScaleSetNetworkInterfaceOutput) EnableIpForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetNetworkInterface) *bool { return v.EnableIpForwarding }).(pulumi.BoolPtrOutput)
}

// One or more `ipConfiguration` blocks as defined above.
func (o WindowsVirtualMachineScaleSetNetworkInterfaceOutput) IpConfigurations() WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetNetworkInterface) []WindowsVirtualMachineScaleSetNetworkInterfaceIpConfiguration {
		return v.IpConfigurations
	}).(WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput)
}

// The Name which should be used for this Network Interface. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineScaleSetNetworkInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetNetworkInterface) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of a Network Security Group which should be assigned to this Network Interface.
func (o WindowsVirtualMachineScaleSetNetworkInterfaceOutput) NetworkSecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetNetworkInterface) *string { return v.NetworkSecurityGroupId }).(pulumi.StringPtrOutput)
}

// Is this the Primary IP Configuration?
func (o WindowsVirtualMachineScaleSetNetworkInterfaceOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetNetworkInterface) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

type WindowsVirtualMachineScaleSetNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WindowsVirtualMachineScaleSetNetworkInterface)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetNetworkInterfaceArrayOutput) ToWindowsVirtualMachineScaleSetNetworkInterfaceArrayOutput() WindowsVirtualMachineScaleSetNetworkInterfaceArrayOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetNetworkInterfaceArrayOutput) ToWindowsVirtualMachineScaleSetNetworkInterfaceArrayOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetNetworkInterfaceArrayOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) WindowsVirtualMachineScaleSetNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WindowsVirtualMachineScaleSetNetworkInterface {
		return vs[0].([]WindowsVirtualMachineScaleSetNetworkInterface)[vs[1].(int)]
	}).(WindowsVirtualMachineScaleSetNetworkInterfaceOutput)
}

type WindowsVirtualMachineScaleSetNetworkInterfaceIpConfiguration struct {
	// A list of Backend Address Pools ID's from a Application Gateway which this Virtual Machine Scale Set should be connected to.
	ApplicationGatewayBackendAddressPoolIds []string `pulumi:"applicationGatewayBackendAddressPoolIds"`
	// A list of Application Security Group ID's which this Virtual Machine Scale Set should be connected to.
	ApplicationSecurityGroupIds []string `pulumi:"applicationSecurityGroupIds"`
	// A list of Backend Address Pools ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
	LoadBalancerBackendAddressPoolIds []string `pulumi:"loadBalancerBackendAddressPoolIds"`
	// A list of NAT Rule ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
	LoadBalancerInboundNatRulesIds []string `pulumi:"loadBalancerInboundNatRulesIds"`
	// The Name which should be used for this IP Configuration.
	Name string `pulumi:"name"`
	// Is this the Primary IP Configuration for this Network Interface? Defaults to `false`.
	Primary *bool `pulumi:"primary"`
	// A `publicIpAddress` block as defined below.
	PublicIpAddresses []WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress `pulumi:"publicIpAddresses"`
	// The ID of the Subnet which this IP Configuration should be connected to.
	SubnetId *string `pulumi:"subnetId"`
	// The Internet Protocol Version which should be used for this IP Configuration. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`.
	Version *string `pulumi:"version"`
}

// WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationInput is an input type that accepts WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs and WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationInput` via:
//
// 		 WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs{...}
//
type WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput() WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput
	ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutputWithContext(context.Context) WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput
}

type WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs struct {
	// A list of Backend Address Pools ID's from a Application Gateway which this Virtual Machine Scale Set should be connected to.
	ApplicationGatewayBackendAddressPoolIds pulumi.StringArrayInput `pulumi:"applicationGatewayBackendAddressPoolIds"`
	// A list of Application Security Group ID's which this Virtual Machine Scale Set should be connected to.
	ApplicationSecurityGroupIds pulumi.StringArrayInput `pulumi:"applicationSecurityGroupIds"`
	// A list of Backend Address Pools ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
	LoadBalancerBackendAddressPoolIds pulumi.StringArrayInput `pulumi:"loadBalancerBackendAddressPoolIds"`
	// A list of NAT Rule ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
	LoadBalancerInboundNatRulesIds pulumi.StringArrayInput `pulumi:"loadBalancerInboundNatRulesIds"`
	// The Name which should be used for this IP Configuration.
	Name pulumi.StringInput `pulumi:"name"`
	// Is this the Primary IP Configuration for this Network Interface? Defaults to `false`.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// A `publicIpAddress` block as defined below.
	PublicIpAddresses WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayInput `pulumi:"publicIpAddresses"`
	// The ID of the Subnet which this IP Configuration should be connected to.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The Internet Protocol Version which should be used for this IP Configuration. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetNetworkInterfaceIpConfiguration)(nil)).Elem()
}

func (i WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs) ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput() WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput {
	return i.ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs) ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput)
}

// WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayInput is an input type that accepts WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArray and WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayInput` via:
//
// 		 WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArray{ WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs{...} }
//
type WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput() WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput
	ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutputWithContext(context.Context) WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput
}

type WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArray []WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationInput

func (WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WindowsVirtualMachineScaleSetNetworkInterfaceIpConfiguration)(nil)).Elem()
}

func (i WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArray) ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput() WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput {
	return i.ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArray) ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput)
}

type WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetNetworkInterfaceIpConfiguration)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput) ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput() WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput) ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput {
	return o
}

// A list of Backend Address Pools ID's from a Application Gateway which this Virtual Machine Scale Set should be connected to.
func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput) ApplicationGatewayBackendAddressPoolIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetNetworkInterfaceIpConfiguration) []string {
		return v.ApplicationGatewayBackendAddressPoolIds
	}).(pulumi.StringArrayOutput)
}

// A list of Application Security Group ID's which this Virtual Machine Scale Set should be connected to.
func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput) ApplicationSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetNetworkInterfaceIpConfiguration) []string {
		return v.ApplicationSecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// A list of Backend Address Pools ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput) LoadBalancerBackendAddressPoolIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetNetworkInterfaceIpConfiguration) []string {
		return v.LoadBalancerBackendAddressPoolIds
	}).(pulumi.StringArrayOutput)
}

// A list of NAT Rule ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput) LoadBalancerInboundNatRulesIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetNetworkInterfaceIpConfiguration) []string {
		return v.LoadBalancerInboundNatRulesIds
	}).(pulumi.StringArrayOutput)
}

// The Name which should be used for this IP Configuration.
func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetNetworkInterfaceIpConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// Is this the Primary IP Configuration for this Network Interface? Defaults to `false`.
func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetNetworkInterfaceIpConfiguration) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// A `publicIpAddress` block as defined below.
func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput) PublicIpAddresses() WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetNetworkInterfaceIpConfiguration) []WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress {
		return v.PublicIpAddresses
	}).(WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput)
}

// The ID of the Subnet which this IP Configuration should be connected to.
func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetNetworkInterfaceIpConfiguration) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The Internet Protocol Version which should be used for this IP Configuration. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`.
func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetNetworkInterfaceIpConfiguration) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WindowsVirtualMachineScaleSetNetworkInterfaceIpConfiguration)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput) ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput() WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput) ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput) Index(i pulumi.IntInput) WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WindowsVirtualMachineScaleSetNetworkInterfaceIpConfiguration {
		return vs[0].([]WindowsVirtualMachineScaleSetNetworkInterfaceIpConfiguration)[vs[1].(int)]
	}).(WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput)
}

type WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress struct {
	// The Prefix which should be used for the Domain Name Label for each Virtual Machine Instance. Azure concatenates the Domain Name Label and Virtual Machine Index to create a unique Domain Name Label for each Virtual Machine.
	DomainNameLabel *string `pulumi:"domainNameLabel"`
	// The Idle Timeout in Minutes for the Public IP Address. Possible values are in the range `4` to `32`.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// One or more `ipTag` blocks as defined above.
	IpTags []WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag `pulumi:"ipTags"`
	// The Name of the Public IP Address Configuration.
	Name string `pulumi:"name"`
	// The ID of the Public IP Address Prefix from where Public IP Addresses should be allocated. Changing this forces a new resource to be created.
	PublicIpPrefixId *string `pulumi:"publicIpPrefixId"`
}

// WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressInput is an input type that accepts WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs and WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressInput` via:
//
// 		 WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs{...}
//
type WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput() WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput
	ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutputWithContext(context.Context) WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput
}

type WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs struct {
	// The Prefix which should be used for the Domain Name Label for each Virtual Machine Instance. Azure concatenates the Domain Name Label and Virtual Machine Index to create a unique Domain Name Label for each Virtual Machine.
	DomainNameLabel pulumi.StringPtrInput `pulumi:"domainNameLabel"`
	// The Idle Timeout in Minutes for the Public IP Address. Possible values are in the range `4` to `32`.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// One or more `ipTag` blocks as defined above.
	IpTags WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayInput `pulumi:"ipTags"`
	// The Name of the Public IP Address Configuration.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the Public IP Address Prefix from where Public IP Addresses should be allocated. Changing this forces a new resource to be created.
	PublicIpPrefixId pulumi.StringPtrInput `pulumi:"publicIpPrefixId"`
}

func (WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress)(nil)).Elem()
}

func (i WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs) ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput() WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput {
	return i.ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs) ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput)
}

// WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayInput is an input type that accepts WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArray and WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayInput` via:
//
// 		 WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArray{ WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs{...} }
//
type WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput() WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput
	ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutputWithContext(context.Context) WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput
}

type WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArray []WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressInput

func (WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress)(nil)).Elem()
}

func (i WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArray) ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput() WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput {
	return i.ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArray) ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput)
}

type WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput) ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput() WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput) ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput {
	return o
}

// The Prefix which should be used for the Domain Name Label for each Virtual Machine Instance. Azure concatenates the Domain Name Label and Virtual Machine Index to create a unique Domain Name Label for each Virtual Machine.
func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress) *string {
		return v.DomainNameLabel
	}).(pulumi.StringPtrOutput)
}

// The Idle Timeout in Minutes for the Public IP Address. Possible values are in the range `4` to `32`.
func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress) *int {
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// One or more `ipTag` blocks as defined above.
func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput) IpTags() WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress) []WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag {
		return v.IpTags
	}).(WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput)
}

// The Name of the Public IP Address Configuration.
func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// The ID of the Public IP Address Prefix from where Public IP Addresses should be allocated. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput) PublicIpPrefixId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress) *string {
		return v.PublicIpPrefixId
	}).(pulumi.StringPtrOutput)
}

type WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput) ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput() WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput) ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput) Index(i pulumi.IntInput) WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress {
		return vs[0].([]WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress)[vs[1].(int)]
	}).(WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput)
}

type WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag struct {
	// The IP Tag associated with the Public IP, such as `SQL` or `Storage`.
	Tag string `pulumi:"tag"`
	// The Type of IP Tag, such as `FirstPartyUsage`.
	Type string `pulumi:"type"`
}

// WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagInput is an input type that accepts WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs and WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagInput` via:
//
// 		 WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs{...}
//
type WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput() WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput
	ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutputWithContext(context.Context) WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput
}

type WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs struct {
	// The IP Tag associated with the Public IP, such as `SQL` or `Storage`.
	Tag pulumi.StringInput `pulumi:"tag"`
	// The Type of IP Tag, such as `FirstPartyUsage`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag)(nil)).Elem()
}

func (i WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs) ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput() WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput {
	return i.ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs) ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput)
}

// WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayInput is an input type that accepts WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArray and WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayInput` via:
//
// 		 WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArray{ WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs{...} }
//
type WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput() WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput
	ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutputWithContext(context.Context) WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput
}

type WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArray []WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagInput

func (WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag)(nil)).Elem()
}

func (i WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArray) ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput() WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput {
	return i.ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArray) ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput)
}

type WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput) ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput() WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput) ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput {
	return o
}

// The IP Tag associated with the Public IP, such as `SQL` or `Storage`.
func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag) string {
		return v.Tag
	}).(pulumi.StringOutput)
}

// The Type of IP Tag, such as `FirstPartyUsage`.
func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput) ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput() WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput) ToWindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput) Index(i pulumi.IntInput) WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag {
		return vs[0].([]WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag)[vs[1].(int)]
	}).(WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput)
}

type WindowsVirtualMachineScaleSetOsDisk struct {
	// The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
	Caching string `pulumi:"caching"`
	// A `diffDiskSettings` block as defined above. Changing this forces a new resource to be created.
	DiffDiskSettings *WindowsVirtualMachineScaleSetOsDiskDiffDiskSettings `pulumi:"diffDiskSettings"`
	// The ID of the Disk Encryption Set which should be used to encrypt this OS Disk.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine Scale Set is sourced from.
	DiskSizeGb *int `pulumi:"diskSizeGb"`
	// The Type of Storage Account which should back this the Internal OS Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS` and `Premium_LRS`.
	StorageAccountType string `pulumi:"storageAccountType"`
	// Should Write Accelerator be Enabled for this OS Disk? Defaults to `false`.
	WriteAcceleratorEnabled *bool `pulumi:"writeAcceleratorEnabled"`
}

// WindowsVirtualMachineScaleSetOsDiskInput is an input type that accepts WindowsVirtualMachineScaleSetOsDiskArgs and WindowsVirtualMachineScaleSetOsDiskOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetOsDiskInput` via:
//
// 		 WindowsVirtualMachineScaleSetOsDiskArgs{...}
//
type WindowsVirtualMachineScaleSetOsDiskInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetOsDiskOutput() WindowsVirtualMachineScaleSetOsDiskOutput
	ToWindowsVirtualMachineScaleSetOsDiskOutputWithContext(context.Context) WindowsVirtualMachineScaleSetOsDiskOutput
}

type WindowsVirtualMachineScaleSetOsDiskArgs struct {
	// The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
	Caching pulumi.StringInput `pulumi:"caching"`
	// A `diffDiskSettings` block as defined above. Changing this forces a new resource to be created.
	DiffDiskSettings WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrInput `pulumi:"diffDiskSettings"`
	// The ID of the Disk Encryption Set which should be used to encrypt this OS Disk.
	DiskEncryptionSetId pulumi.StringPtrInput `pulumi:"diskEncryptionSetId"`
	// The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine Scale Set is sourced from.
	DiskSizeGb pulumi.IntPtrInput `pulumi:"diskSizeGb"`
	// The Type of Storage Account which should back this the Internal OS Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS` and `Premium_LRS`.
	StorageAccountType pulumi.StringInput `pulumi:"storageAccountType"`
	// Should Write Accelerator be Enabled for this OS Disk? Defaults to `false`.
	WriteAcceleratorEnabled pulumi.BoolPtrInput `pulumi:"writeAcceleratorEnabled"`
}

func (WindowsVirtualMachineScaleSetOsDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetOsDisk)(nil)).Elem()
}

func (i WindowsVirtualMachineScaleSetOsDiskArgs) ToWindowsVirtualMachineScaleSetOsDiskOutput() WindowsVirtualMachineScaleSetOsDiskOutput {
	return i.ToWindowsVirtualMachineScaleSetOsDiskOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetOsDiskArgs) ToWindowsVirtualMachineScaleSetOsDiskOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetOsDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetOsDiskOutput)
}

func (i WindowsVirtualMachineScaleSetOsDiskArgs) ToWindowsVirtualMachineScaleSetOsDiskPtrOutput() WindowsVirtualMachineScaleSetOsDiskPtrOutput {
	return i.ToWindowsVirtualMachineScaleSetOsDiskPtrOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetOsDiskArgs) ToWindowsVirtualMachineScaleSetOsDiskPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetOsDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetOsDiskOutput).ToWindowsVirtualMachineScaleSetOsDiskPtrOutputWithContext(ctx)
}

// WindowsVirtualMachineScaleSetOsDiskPtrInput is an input type that accepts WindowsVirtualMachineScaleSetOsDiskArgs, WindowsVirtualMachineScaleSetOsDiskPtr and WindowsVirtualMachineScaleSetOsDiskPtrOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetOsDiskPtrInput` via:
//
// 		 WindowsVirtualMachineScaleSetOsDiskArgs{...}
//
//  or:
//
// 		 nil
//
type WindowsVirtualMachineScaleSetOsDiskPtrInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetOsDiskPtrOutput() WindowsVirtualMachineScaleSetOsDiskPtrOutput
	ToWindowsVirtualMachineScaleSetOsDiskPtrOutputWithContext(context.Context) WindowsVirtualMachineScaleSetOsDiskPtrOutput
}

type windowsVirtualMachineScaleSetOsDiskPtrType WindowsVirtualMachineScaleSetOsDiskArgs

func WindowsVirtualMachineScaleSetOsDiskPtr(v *WindowsVirtualMachineScaleSetOsDiskArgs) WindowsVirtualMachineScaleSetOsDiskPtrInput {
	return (*windowsVirtualMachineScaleSetOsDiskPtrType)(v)
}

func (*windowsVirtualMachineScaleSetOsDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineScaleSetOsDisk)(nil)).Elem()
}

func (i *windowsVirtualMachineScaleSetOsDiskPtrType) ToWindowsVirtualMachineScaleSetOsDiskPtrOutput() WindowsVirtualMachineScaleSetOsDiskPtrOutput {
	return i.ToWindowsVirtualMachineScaleSetOsDiskPtrOutputWithContext(context.Background())
}

func (i *windowsVirtualMachineScaleSetOsDiskPtrType) ToWindowsVirtualMachineScaleSetOsDiskPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetOsDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetOsDiskPtrOutput)
}

type WindowsVirtualMachineScaleSetOsDiskOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetOsDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetOsDisk)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetOsDiskOutput) ToWindowsVirtualMachineScaleSetOsDiskOutput() WindowsVirtualMachineScaleSetOsDiskOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetOsDiskOutput) ToWindowsVirtualMachineScaleSetOsDiskOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetOsDiskOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetOsDiskOutput) ToWindowsVirtualMachineScaleSetOsDiskPtrOutput() WindowsVirtualMachineScaleSetOsDiskPtrOutput {
	return o.ToWindowsVirtualMachineScaleSetOsDiskPtrOutputWithContext(context.Background())
}

func (o WindowsVirtualMachineScaleSetOsDiskOutput) ToWindowsVirtualMachineScaleSetOsDiskPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetOsDiskPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetOsDisk) *WindowsVirtualMachineScaleSetOsDisk {
		return &v
	}).(WindowsVirtualMachineScaleSetOsDiskPtrOutput)
}

// The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
func (o WindowsVirtualMachineScaleSetOsDiskOutput) Caching() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetOsDisk) string { return v.Caching }).(pulumi.StringOutput)
}

// A `diffDiskSettings` block as defined above. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineScaleSetOsDiskOutput) DiffDiskSettings() WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetOsDisk) *WindowsVirtualMachineScaleSetOsDiskDiffDiskSettings {
		return v.DiffDiskSettings
	}).(WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput)
}

// The ID of the Disk Encryption Set which should be used to encrypt this OS Disk.
func (o WindowsVirtualMachineScaleSetOsDiskOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetOsDisk) *string { return v.DiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine Scale Set is sourced from.
func (o WindowsVirtualMachineScaleSetOsDiskOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetOsDisk) *int { return v.DiskSizeGb }).(pulumi.IntPtrOutput)
}

// The Type of Storage Account which should back this the Internal OS Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS` and `Premium_LRS`.
func (o WindowsVirtualMachineScaleSetOsDiskOutput) StorageAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetOsDisk) string { return v.StorageAccountType }).(pulumi.StringOutput)
}

// Should Write Accelerator be Enabled for this OS Disk? Defaults to `false`.
func (o WindowsVirtualMachineScaleSetOsDiskOutput) WriteAcceleratorEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetOsDisk) *bool { return v.WriteAcceleratorEnabled }).(pulumi.BoolPtrOutput)
}

type WindowsVirtualMachineScaleSetOsDiskPtrOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetOsDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineScaleSetOsDisk)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetOsDiskPtrOutput) ToWindowsVirtualMachineScaleSetOsDiskPtrOutput() WindowsVirtualMachineScaleSetOsDiskPtrOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetOsDiskPtrOutput) ToWindowsVirtualMachineScaleSetOsDiskPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetOsDiskPtrOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetOsDiskPtrOutput) Elem() WindowsVirtualMachineScaleSetOsDiskOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetOsDisk) WindowsVirtualMachineScaleSetOsDisk { return *v }).(WindowsVirtualMachineScaleSetOsDiskOutput)
}

// The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
func (o WindowsVirtualMachineScaleSetOsDiskPtrOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetOsDisk) *string {
		if v == nil {
			return nil
		}
		return &v.Caching
	}).(pulumi.StringPtrOutput)
}

// A `diffDiskSettings` block as defined above. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineScaleSetOsDiskPtrOutput) DiffDiskSettings() WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetOsDisk) *WindowsVirtualMachineScaleSetOsDiskDiffDiskSettings {
		if v == nil {
			return nil
		}
		return v.DiffDiskSettings
	}).(WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput)
}

// The ID of the Disk Encryption Set which should be used to encrypt this OS Disk.
func (o WindowsVirtualMachineScaleSetOsDiskPtrOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetOsDisk) *string {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionSetId
	}).(pulumi.StringPtrOutput)
}

// The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine Scale Set is sourced from.
func (o WindowsVirtualMachineScaleSetOsDiskPtrOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetOsDisk) *int {
		if v == nil {
			return nil
		}
		return v.DiskSizeGb
	}).(pulumi.IntPtrOutput)
}

// The Type of Storage Account which should back this the Internal OS Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS` and `Premium_LRS`.
func (o WindowsVirtualMachineScaleSetOsDiskPtrOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetOsDisk) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountType
	}).(pulumi.StringPtrOutput)
}

// Should Write Accelerator be Enabled for this OS Disk? Defaults to `false`.
func (o WindowsVirtualMachineScaleSetOsDiskPtrOutput) WriteAcceleratorEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetOsDisk) *bool {
		if v == nil {
			return nil
		}
		return v.WriteAcceleratorEnabled
	}).(pulumi.BoolPtrOutput)
}

type WindowsVirtualMachineScaleSetOsDiskDiffDiskSettings struct {
	Option string `pulumi:"option"`
}

// WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsInput is an input type that accepts WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs and WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsInput` via:
//
// 		 WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs{...}
//
type WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput() WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput
	ToWindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsOutputWithContext(context.Context) WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput
}

type WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs struct {
	Option pulumi.StringInput `pulumi:"option"`
}

func (WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetOsDiskDiffDiskSettings)(nil)).Elem()
}

func (i WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs) ToWindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput() WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput {
	return i.ToWindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs) ToWindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput)
}

func (i WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs) ToWindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput() WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput {
	return i.ToWindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs) ToWindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput).ToWindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutputWithContext(ctx)
}

// WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrInput is an input type that accepts WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs, WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtr and WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrInput` via:
//
// 		 WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs{...}
//
//  or:
//
// 		 nil
//
type WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput() WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput
	ToWindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutputWithContext(context.Context) WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput
}

type windowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrType WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs

func WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtr(v *WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs) WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrInput {
	return (*windowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrType)(v)
}

func (*windowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineScaleSetOsDiskDiffDiskSettings)(nil)).Elem()
}

func (i *windowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrType) ToWindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput() WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput {
	return i.ToWindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutputWithContext(context.Background())
}

func (i *windowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrType) ToWindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput)
}

type WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetOsDiskDiffDiskSettings)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput) ToWindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput() WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput) ToWindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput) ToWindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput() WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput {
	return o.ToWindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutputWithContext(context.Background())
}

func (o WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput) ToWindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetOsDiskDiffDiskSettings) *WindowsVirtualMachineScaleSetOsDiskDiffDiskSettings {
		return &v
	}).(WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput)
}
func (o WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput) Option() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetOsDiskDiffDiskSettings) string { return v.Option }).(pulumi.StringOutput)
}

type WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineScaleSetOsDiskDiffDiskSettings)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput) ToWindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput() WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput) ToWindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput) Elem() WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetOsDiskDiffDiskSettings) WindowsVirtualMachineScaleSetOsDiskDiffDiskSettings {
		return *v
	}).(WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput)
}

func (o WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput) Option() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetOsDiskDiffDiskSettings) *string {
		if v == nil {
			return nil
		}
		return &v.Option
	}).(pulumi.StringPtrOutput)
}

type WindowsVirtualMachineScaleSetPlan struct {
	// The name of the Windows Virtual Machine Scale Set. Changing this forces a new resource to be created.
	Name    string `pulumi:"name"`
	Product string `pulumi:"product"`
	// Specifies the publisher of the image used to create the virtual machines.
	Publisher string `pulumi:"publisher"`
}

// WindowsVirtualMachineScaleSetPlanInput is an input type that accepts WindowsVirtualMachineScaleSetPlanArgs and WindowsVirtualMachineScaleSetPlanOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetPlanInput` via:
//
// 		 WindowsVirtualMachineScaleSetPlanArgs{...}
//
type WindowsVirtualMachineScaleSetPlanInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetPlanOutput() WindowsVirtualMachineScaleSetPlanOutput
	ToWindowsVirtualMachineScaleSetPlanOutputWithContext(context.Context) WindowsVirtualMachineScaleSetPlanOutput
}

type WindowsVirtualMachineScaleSetPlanArgs struct {
	// The name of the Windows Virtual Machine Scale Set. Changing this forces a new resource to be created.
	Name    pulumi.StringInput `pulumi:"name"`
	Product pulumi.StringInput `pulumi:"product"`
	// Specifies the publisher of the image used to create the virtual machines.
	Publisher pulumi.StringInput `pulumi:"publisher"`
}

func (WindowsVirtualMachineScaleSetPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetPlan)(nil)).Elem()
}

func (i WindowsVirtualMachineScaleSetPlanArgs) ToWindowsVirtualMachineScaleSetPlanOutput() WindowsVirtualMachineScaleSetPlanOutput {
	return i.ToWindowsVirtualMachineScaleSetPlanOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetPlanArgs) ToWindowsVirtualMachineScaleSetPlanOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetPlanOutput)
}

func (i WindowsVirtualMachineScaleSetPlanArgs) ToWindowsVirtualMachineScaleSetPlanPtrOutput() WindowsVirtualMachineScaleSetPlanPtrOutput {
	return i.ToWindowsVirtualMachineScaleSetPlanPtrOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetPlanArgs) ToWindowsVirtualMachineScaleSetPlanPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetPlanOutput).ToWindowsVirtualMachineScaleSetPlanPtrOutputWithContext(ctx)
}

// WindowsVirtualMachineScaleSetPlanPtrInput is an input type that accepts WindowsVirtualMachineScaleSetPlanArgs, WindowsVirtualMachineScaleSetPlanPtr and WindowsVirtualMachineScaleSetPlanPtrOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetPlanPtrInput` via:
//
// 		 WindowsVirtualMachineScaleSetPlanArgs{...}
//
//  or:
//
// 		 nil
//
type WindowsVirtualMachineScaleSetPlanPtrInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetPlanPtrOutput() WindowsVirtualMachineScaleSetPlanPtrOutput
	ToWindowsVirtualMachineScaleSetPlanPtrOutputWithContext(context.Context) WindowsVirtualMachineScaleSetPlanPtrOutput
}

type windowsVirtualMachineScaleSetPlanPtrType WindowsVirtualMachineScaleSetPlanArgs

func WindowsVirtualMachineScaleSetPlanPtr(v *WindowsVirtualMachineScaleSetPlanArgs) WindowsVirtualMachineScaleSetPlanPtrInput {
	return (*windowsVirtualMachineScaleSetPlanPtrType)(v)
}

func (*windowsVirtualMachineScaleSetPlanPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineScaleSetPlan)(nil)).Elem()
}

func (i *windowsVirtualMachineScaleSetPlanPtrType) ToWindowsVirtualMachineScaleSetPlanPtrOutput() WindowsVirtualMachineScaleSetPlanPtrOutput {
	return i.ToWindowsVirtualMachineScaleSetPlanPtrOutputWithContext(context.Background())
}

func (i *windowsVirtualMachineScaleSetPlanPtrType) ToWindowsVirtualMachineScaleSetPlanPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetPlanPtrOutput)
}

type WindowsVirtualMachineScaleSetPlanOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetPlan)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetPlanOutput) ToWindowsVirtualMachineScaleSetPlanOutput() WindowsVirtualMachineScaleSetPlanOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetPlanOutput) ToWindowsVirtualMachineScaleSetPlanOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetPlanOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetPlanOutput) ToWindowsVirtualMachineScaleSetPlanPtrOutput() WindowsVirtualMachineScaleSetPlanPtrOutput {
	return o.ToWindowsVirtualMachineScaleSetPlanPtrOutputWithContext(context.Background())
}

func (o WindowsVirtualMachineScaleSetPlanOutput) ToWindowsVirtualMachineScaleSetPlanPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetPlanPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetPlan) *WindowsVirtualMachineScaleSetPlan {
		return &v
	}).(WindowsVirtualMachineScaleSetPlanPtrOutput)
}

// The name of the Windows Virtual Machine Scale Set. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineScaleSetPlanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetPlan) string { return v.Name }).(pulumi.StringOutput)
}

func (o WindowsVirtualMachineScaleSetPlanOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetPlan) string { return v.Product }).(pulumi.StringOutput)
}

// Specifies the publisher of the image used to create the virtual machines.
func (o WindowsVirtualMachineScaleSetPlanOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetPlan) string { return v.Publisher }).(pulumi.StringOutput)
}

type WindowsVirtualMachineScaleSetPlanPtrOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetPlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineScaleSetPlan)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetPlanPtrOutput) ToWindowsVirtualMachineScaleSetPlanPtrOutput() WindowsVirtualMachineScaleSetPlanPtrOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetPlanPtrOutput) ToWindowsVirtualMachineScaleSetPlanPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetPlanPtrOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetPlanPtrOutput) Elem() WindowsVirtualMachineScaleSetPlanOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetPlan) WindowsVirtualMachineScaleSetPlan { return *v }).(WindowsVirtualMachineScaleSetPlanOutput)
}

// The name of the Windows Virtual Machine Scale Set. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineScaleSetPlanPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetPlan) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o WindowsVirtualMachineScaleSetPlanPtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetPlan) *string {
		if v == nil {
			return nil
		}
		return &v.Product
	}).(pulumi.StringPtrOutput)
}

// Specifies the publisher of the image used to create the virtual machines.
func (o WindowsVirtualMachineScaleSetPlanPtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetPlan) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

type WindowsVirtualMachineScaleSetRollingUpgradePolicy struct {
	// The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. Changing this forces a new resource to be created.
	MaxBatchInstancePercent int `pulumi:"maxBatchInstancePercent"`
	// The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. Changing this forces a new resource to be created.
	MaxUnhealthyInstancePercent int `pulumi:"maxUnhealthyInstancePercent"`
	// The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. Changing this forces a new resource to be created.
	MaxUnhealthyUpgradedInstancePercent int `pulumi:"maxUnhealthyUpgradedInstancePercent"`
	// The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. Changing this forces a new resource to be created.
	PauseTimeBetweenBatches string `pulumi:"pauseTimeBetweenBatches"`
}

// WindowsVirtualMachineScaleSetRollingUpgradePolicyInput is an input type that accepts WindowsVirtualMachineScaleSetRollingUpgradePolicyArgs and WindowsVirtualMachineScaleSetRollingUpgradePolicyOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetRollingUpgradePolicyInput` via:
//
// 		 WindowsVirtualMachineScaleSetRollingUpgradePolicyArgs{...}
//
type WindowsVirtualMachineScaleSetRollingUpgradePolicyInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetRollingUpgradePolicyOutput() WindowsVirtualMachineScaleSetRollingUpgradePolicyOutput
	ToWindowsVirtualMachineScaleSetRollingUpgradePolicyOutputWithContext(context.Context) WindowsVirtualMachineScaleSetRollingUpgradePolicyOutput
}

type WindowsVirtualMachineScaleSetRollingUpgradePolicyArgs struct {
	// The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. Changing this forces a new resource to be created.
	MaxBatchInstancePercent pulumi.IntInput `pulumi:"maxBatchInstancePercent"`
	// The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. Changing this forces a new resource to be created.
	MaxUnhealthyInstancePercent pulumi.IntInput `pulumi:"maxUnhealthyInstancePercent"`
	// The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. Changing this forces a new resource to be created.
	MaxUnhealthyUpgradedInstancePercent pulumi.IntInput `pulumi:"maxUnhealthyUpgradedInstancePercent"`
	// The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. Changing this forces a new resource to be created.
	PauseTimeBetweenBatches pulumi.StringInput `pulumi:"pauseTimeBetweenBatches"`
}

func (WindowsVirtualMachineScaleSetRollingUpgradePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetRollingUpgradePolicy)(nil)).Elem()
}

func (i WindowsVirtualMachineScaleSetRollingUpgradePolicyArgs) ToWindowsVirtualMachineScaleSetRollingUpgradePolicyOutput() WindowsVirtualMachineScaleSetRollingUpgradePolicyOutput {
	return i.ToWindowsVirtualMachineScaleSetRollingUpgradePolicyOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetRollingUpgradePolicyArgs) ToWindowsVirtualMachineScaleSetRollingUpgradePolicyOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetRollingUpgradePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetRollingUpgradePolicyOutput)
}

func (i WindowsVirtualMachineScaleSetRollingUpgradePolicyArgs) ToWindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutput() WindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutput {
	return i.ToWindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetRollingUpgradePolicyArgs) ToWindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetRollingUpgradePolicyOutput).ToWindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutputWithContext(ctx)
}

// WindowsVirtualMachineScaleSetRollingUpgradePolicyPtrInput is an input type that accepts WindowsVirtualMachineScaleSetRollingUpgradePolicyArgs, WindowsVirtualMachineScaleSetRollingUpgradePolicyPtr and WindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetRollingUpgradePolicyPtrInput` via:
//
// 		 WindowsVirtualMachineScaleSetRollingUpgradePolicyArgs{...}
//
//  or:
//
// 		 nil
//
type WindowsVirtualMachineScaleSetRollingUpgradePolicyPtrInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutput() WindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutput
	ToWindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutputWithContext(context.Context) WindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutput
}

type windowsVirtualMachineScaleSetRollingUpgradePolicyPtrType WindowsVirtualMachineScaleSetRollingUpgradePolicyArgs

func WindowsVirtualMachineScaleSetRollingUpgradePolicyPtr(v *WindowsVirtualMachineScaleSetRollingUpgradePolicyArgs) WindowsVirtualMachineScaleSetRollingUpgradePolicyPtrInput {
	return (*windowsVirtualMachineScaleSetRollingUpgradePolicyPtrType)(v)
}

func (*windowsVirtualMachineScaleSetRollingUpgradePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineScaleSetRollingUpgradePolicy)(nil)).Elem()
}

func (i *windowsVirtualMachineScaleSetRollingUpgradePolicyPtrType) ToWindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutput() WindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutput {
	return i.ToWindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutputWithContext(context.Background())
}

func (i *windowsVirtualMachineScaleSetRollingUpgradePolicyPtrType) ToWindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutput)
}

type WindowsVirtualMachineScaleSetRollingUpgradePolicyOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetRollingUpgradePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetRollingUpgradePolicy)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetRollingUpgradePolicyOutput) ToWindowsVirtualMachineScaleSetRollingUpgradePolicyOutput() WindowsVirtualMachineScaleSetRollingUpgradePolicyOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetRollingUpgradePolicyOutput) ToWindowsVirtualMachineScaleSetRollingUpgradePolicyOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetRollingUpgradePolicyOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetRollingUpgradePolicyOutput) ToWindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutput() WindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutput {
	return o.ToWindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutputWithContext(context.Background())
}

func (o WindowsVirtualMachineScaleSetRollingUpgradePolicyOutput) ToWindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetRollingUpgradePolicy) *WindowsVirtualMachineScaleSetRollingUpgradePolicy {
		return &v
	}).(WindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutput)
}

// The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineScaleSetRollingUpgradePolicyOutput) MaxBatchInstancePercent() pulumi.IntOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetRollingUpgradePolicy) int { return v.MaxBatchInstancePercent }).(pulumi.IntOutput)
}

// The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineScaleSetRollingUpgradePolicyOutput) MaxUnhealthyInstancePercent() pulumi.IntOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetRollingUpgradePolicy) int { return v.MaxUnhealthyInstancePercent }).(pulumi.IntOutput)
}

// The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineScaleSetRollingUpgradePolicyOutput) MaxUnhealthyUpgradedInstancePercent() pulumi.IntOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetRollingUpgradePolicy) int {
		return v.MaxUnhealthyUpgradedInstancePercent
	}).(pulumi.IntOutput)
}

// The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineScaleSetRollingUpgradePolicyOutput) PauseTimeBetweenBatches() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetRollingUpgradePolicy) string { return v.PauseTimeBetweenBatches }).(pulumi.StringOutput)
}

type WindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineScaleSetRollingUpgradePolicy)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutput) ToWindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutput() WindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutput) ToWindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutput) Elem() WindowsVirtualMachineScaleSetRollingUpgradePolicyOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetRollingUpgradePolicy) WindowsVirtualMachineScaleSetRollingUpgradePolicy {
		return *v
	}).(WindowsVirtualMachineScaleSetRollingUpgradePolicyOutput)
}

// The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutput) MaxBatchInstancePercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetRollingUpgradePolicy) *int {
		if v == nil {
			return nil
		}
		return &v.MaxBatchInstancePercent
	}).(pulumi.IntPtrOutput)
}

// The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutput) MaxUnhealthyInstancePercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetRollingUpgradePolicy) *int {
		if v == nil {
			return nil
		}
		return &v.MaxUnhealthyInstancePercent
	}).(pulumi.IntPtrOutput)
}

// The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutput) MaxUnhealthyUpgradedInstancePercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetRollingUpgradePolicy) *int {
		if v == nil {
			return nil
		}
		return &v.MaxUnhealthyUpgradedInstancePercent
	}).(pulumi.IntPtrOutput)
}

// The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutput) PauseTimeBetweenBatches() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetRollingUpgradePolicy) *string {
		if v == nil {
			return nil
		}
		return &v.PauseTimeBetweenBatches
	}).(pulumi.StringPtrOutput)
}

type WindowsVirtualMachineScaleSetSecret struct {
	// One or more `certificate` blocks as defined above.
	Certificates []WindowsVirtualMachineScaleSetSecretCertificate `pulumi:"certificates"`
	// The ID of the Key Vault from which all Secrets should be sourced.
	KeyVaultId string `pulumi:"keyVaultId"`
}

// WindowsVirtualMachineScaleSetSecretInput is an input type that accepts WindowsVirtualMachineScaleSetSecretArgs and WindowsVirtualMachineScaleSetSecretOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetSecretInput` via:
//
// 		 WindowsVirtualMachineScaleSetSecretArgs{...}
//
type WindowsVirtualMachineScaleSetSecretInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetSecretOutput() WindowsVirtualMachineScaleSetSecretOutput
	ToWindowsVirtualMachineScaleSetSecretOutputWithContext(context.Context) WindowsVirtualMachineScaleSetSecretOutput
}

type WindowsVirtualMachineScaleSetSecretArgs struct {
	// One or more `certificate` blocks as defined above.
	Certificates WindowsVirtualMachineScaleSetSecretCertificateArrayInput `pulumi:"certificates"`
	// The ID of the Key Vault from which all Secrets should be sourced.
	KeyVaultId pulumi.StringInput `pulumi:"keyVaultId"`
}

func (WindowsVirtualMachineScaleSetSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetSecret)(nil)).Elem()
}

func (i WindowsVirtualMachineScaleSetSecretArgs) ToWindowsVirtualMachineScaleSetSecretOutput() WindowsVirtualMachineScaleSetSecretOutput {
	return i.ToWindowsVirtualMachineScaleSetSecretOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetSecretArgs) ToWindowsVirtualMachineScaleSetSecretOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetSecretOutput)
}

// WindowsVirtualMachineScaleSetSecretArrayInput is an input type that accepts WindowsVirtualMachineScaleSetSecretArray and WindowsVirtualMachineScaleSetSecretArrayOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetSecretArrayInput` via:
//
// 		 WindowsVirtualMachineScaleSetSecretArray{ WindowsVirtualMachineScaleSetSecretArgs{...} }
//
type WindowsVirtualMachineScaleSetSecretArrayInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetSecretArrayOutput() WindowsVirtualMachineScaleSetSecretArrayOutput
	ToWindowsVirtualMachineScaleSetSecretArrayOutputWithContext(context.Context) WindowsVirtualMachineScaleSetSecretArrayOutput
}

type WindowsVirtualMachineScaleSetSecretArray []WindowsVirtualMachineScaleSetSecretInput

func (WindowsVirtualMachineScaleSetSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WindowsVirtualMachineScaleSetSecret)(nil)).Elem()
}

func (i WindowsVirtualMachineScaleSetSecretArray) ToWindowsVirtualMachineScaleSetSecretArrayOutput() WindowsVirtualMachineScaleSetSecretArrayOutput {
	return i.ToWindowsVirtualMachineScaleSetSecretArrayOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetSecretArray) ToWindowsVirtualMachineScaleSetSecretArrayOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetSecretArrayOutput)
}

type WindowsVirtualMachineScaleSetSecretOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetSecret)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetSecretOutput) ToWindowsVirtualMachineScaleSetSecretOutput() WindowsVirtualMachineScaleSetSecretOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetSecretOutput) ToWindowsVirtualMachineScaleSetSecretOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetSecretOutput {
	return o
}

// One or more `certificate` blocks as defined above.
func (o WindowsVirtualMachineScaleSetSecretOutput) Certificates() WindowsVirtualMachineScaleSetSecretCertificateArrayOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetSecret) []WindowsVirtualMachineScaleSetSecretCertificate {
		return v.Certificates
	}).(WindowsVirtualMachineScaleSetSecretCertificateArrayOutput)
}

// The ID of the Key Vault from which all Secrets should be sourced.
func (o WindowsVirtualMachineScaleSetSecretOutput) KeyVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetSecret) string { return v.KeyVaultId }).(pulumi.StringOutput)
}

type WindowsVirtualMachineScaleSetSecretArrayOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WindowsVirtualMachineScaleSetSecret)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetSecretArrayOutput) ToWindowsVirtualMachineScaleSetSecretArrayOutput() WindowsVirtualMachineScaleSetSecretArrayOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetSecretArrayOutput) ToWindowsVirtualMachineScaleSetSecretArrayOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetSecretArrayOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetSecretArrayOutput) Index(i pulumi.IntInput) WindowsVirtualMachineScaleSetSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WindowsVirtualMachineScaleSetSecret {
		return vs[0].([]WindowsVirtualMachineScaleSetSecret)[vs[1].(int)]
	}).(WindowsVirtualMachineScaleSetSecretOutput)
}

type WindowsVirtualMachineScaleSetSecretCertificate struct {
	// The certificate store on the Virtual Machine where the certificate should be added.
	Store string `pulumi:"store"`
	// The Secret URL of a Key Vault Certificate.
	Url string `pulumi:"url"`
}

// WindowsVirtualMachineScaleSetSecretCertificateInput is an input type that accepts WindowsVirtualMachineScaleSetSecretCertificateArgs and WindowsVirtualMachineScaleSetSecretCertificateOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetSecretCertificateInput` via:
//
// 		 WindowsVirtualMachineScaleSetSecretCertificateArgs{...}
//
type WindowsVirtualMachineScaleSetSecretCertificateInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetSecretCertificateOutput() WindowsVirtualMachineScaleSetSecretCertificateOutput
	ToWindowsVirtualMachineScaleSetSecretCertificateOutputWithContext(context.Context) WindowsVirtualMachineScaleSetSecretCertificateOutput
}

type WindowsVirtualMachineScaleSetSecretCertificateArgs struct {
	// The certificate store on the Virtual Machine where the certificate should be added.
	Store pulumi.StringInput `pulumi:"store"`
	// The Secret URL of a Key Vault Certificate.
	Url pulumi.StringInput `pulumi:"url"`
}

func (WindowsVirtualMachineScaleSetSecretCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetSecretCertificate)(nil)).Elem()
}

func (i WindowsVirtualMachineScaleSetSecretCertificateArgs) ToWindowsVirtualMachineScaleSetSecretCertificateOutput() WindowsVirtualMachineScaleSetSecretCertificateOutput {
	return i.ToWindowsVirtualMachineScaleSetSecretCertificateOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetSecretCertificateArgs) ToWindowsVirtualMachineScaleSetSecretCertificateOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetSecretCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetSecretCertificateOutput)
}

// WindowsVirtualMachineScaleSetSecretCertificateArrayInput is an input type that accepts WindowsVirtualMachineScaleSetSecretCertificateArray and WindowsVirtualMachineScaleSetSecretCertificateArrayOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetSecretCertificateArrayInput` via:
//
// 		 WindowsVirtualMachineScaleSetSecretCertificateArray{ WindowsVirtualMachineScaleSetSecretCertificateArgs{...} }
//
type WindowsVirtualMachineScaleSetSecretCertificateArrayInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetSecretCertificateArrayOutput() WindowsVirtualMachineScaleSetSecretCertificateArrayOutput
	ToWindowsVirtualMachineScaleSetSecretCertificateArrayOutputWithContext(context.Context) WindowsVirtualMachineScaleSetSecretCertificateArrayOutput
}

type WindowsVirtualMachineScaleSetSecretCertificateArray []WindowsVirtualMachineScaleSetSecretCertificateInput

func (WindowsVirtualMachineScaleSetSecretCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WindowsVirtualMachineScaleSetSecretCertificate)(nil)).Elem()
}

func (i WindowsVirtualMachineScaleSetSecretCertificateArray) ToWindowsVirtualMachineScaleSetSecretCertificateArrayOutput() WindowsVirtualMachineScaleSetSecretCertificateArrayOutput {
	return i.ToWindowsVirtualMachineScaleSetSecretCertificateArrayOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetSecretCertificateArray) ToWindowsVirtualMachineScaleSetSecretCertificateArrayOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetSecretCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetSecretCertificateArrayOutput)
}

type WindowsVirtualMachineScaleSetSecretCertificateOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetSecretCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetSecretCertificate)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetSecretCertificateOutput) ToWindowsVirtualMachineScaleSetSecretCertificateOutput() WindowsVirtualMachineScaleSetSecretCertificateOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetSecretCertificateOutput) ToWindowsVirtualMachineScaleSetSecretCertificateOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetSecretCertificateOutput {
	return o
}

// The certificate store on the Virtual Machine where the certificate should be added.
func (o WindowsVirtualMachineScaleSetSecretCertificateOutput) Store() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetSecretCertificate) string { return v.Store }).(pulumi.StringOutput)
}

// The Secret URL of a Key Vault Certificate.
func (o WindowsVirtualMachineScaleSetSecretCertificateOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetSecretCertificate) string { return v.Url }).(pulumi.StringOutput)
}

type WindowsVirtualMachineScaleSetSecretCertificateArrayOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetSecretCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WindowsVirtualMachineScaleSetSecretCertificate)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetSecretCertificateArrayOutput) ToWindowsVirtualMachineScaleSetSecretCertificateArrayOutput() WindowsVirtualMachineScaleSetSecretCertificateArrayOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetSecretCertificateArrayOutput) ToWindowsVirtualMachineScaleSetSecretCertificateArrayOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetSecretCertificateArrayOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetSecretCertificateArrayOutput) Index(i pulumi.IntInput) WindowsVirtualMachineScaleSetSecretCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WindowsVirtualMachineScaleSetSecretCertificate {
		return vs[0].([]WindowsVirtualMachineScaleSetSecretCertificate)[vs[1].(int)]
	}).(WindowsVirtualMachineScaleSetSecretCertificateOutput)
}

type WindowsVirtualMachineScaleSetSourceImageReference struct {
	// Specifies the offer of the image used to create the virtual machines.
	Offer string `pulumi:"offer"`
	// Specifies the publisher of the image used to create the virtual machines.
	Publisher string `pulumi:"publisher"`
	// Specifies the SKU of the image used to create the virtual machines.
	Sku string `pulumi:"sku"`
	// Specifies the version of the image used to create the virtual machines.
	Version string `pulumi:"version"`
}

// WindowsVirtualMachineScaleSetSourceImageReferenceInput is an input type that accepts WindowsVirtualMachineScaleSetSourceImageReferenceArgs and WindowsVirtualMachineScaleSetSourceImageReferenceOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetSourceImageReferenceInput` via:
//
// 		 WindowsVirtualMachineScaleSetSourceImageReferenceArgs{...}
//
type WindowsVirtualMachineScaleSetSourceImageReferenceInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetSourceImageReferenceOutput() WindowsVirtualMachineScaleSetSourceImageReferenceOutput
	ToWindowsVirtualMachineScaleSetSourceImageReferenceOutputWithContext(context.Context) WindowsVirtualMachineScaleSetSourceImageReferenceOutput
}

type WindowsVirtualMachineScaleSetSourceImageReferenceArgs struct {
	// Specifies the offer of the image used to create the virtual machines.
	Offer pulumi.StringInput `pulumi:"offer"`
	// Specifies the publisher of the image used to create the virtual machines.
	Publisher pulumi.StringInput `pulumi:"publisher"`
	// Specifies the SKU of the image used to create the virtual machines.
	Sku pulumi.StringInput `pulumi:"sku"`
	// Specifies the version of the image used to create the virtual machines.
	Version pulumi.StringInput `pulumi:"version"`
}

func (WindowsVirtualMachineScaleSetSourceImageReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetSourceImageReference)(nil)).Elem()
}

func (i WindowsVirtualMachineScaleSetSourceImageReferenceArgs) ToWindowsVirtualMachineScaleSetSourceImageReferenceOutput() WindowsVirtualMachineScaleSetSourceImageReferenceOutput {
	return i.ToWindowsVirtualMachineScaleSetSourceImageReferenceOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetSourceImageReferenceArgs) ToWindowsVirtualMachineScaleSetSourceImageReferenceOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetSourceImageReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetSourceImageReferenceOutput)
}

func (i WindowsVirtualMachineScaleSetSourceImageReferenceArgs) ToWindowsVirtualMachineScaleSetSourceImageReferencePtrOutput() WindowsVirtualMachineScaleSetSourceImageReferencePtrOutput {
	return i.ToWindowsVirtualMachineScaleSetSourceImageReferencePtrOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetSourceImageReferenceArgs) ToWindowsVirtualMachineScaleSetSourceImageReferencePtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetSourceImageReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetSourceImageReferenceOutput).ToWindowsVirtualMachineScaleSetSourceImageReferencePtrOutputWithContext(ctx)
}

// WindowsVirtualMachineScaleSetSourceImageReferencePtrInput is an input type that accepts WindowsVirtualMachineScaleSetSourceImageReferenceArgs, WindowsVirtualMachineScaleSetSourceImageReferencePtr and WindowsVirtualMachineScaleSetSourceImageReferencePtrOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetSourceImageReferencePtrInput` via:
//
// 		 WindowsVirtualMachineScaleSetSourceImageReferenceArgs{...}
//
//  or:
//
// 		 nil
//
type WindowsVirtualMachineScaleSetSourceImageReferencePtrInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetSourceImageReferencePtrOutput() WindowsVirtualMachineScaleSetSourceImageReferencePtrOutput
	ToWindowsVirtualMachineScaleSetSourceImageReferencePtrOutputWithContext(context.Context) WindowsVirtualMachineScaleSetSourceImageReferencePtrOutput
}

type windowsVirtualMachineScaleSetSourceImageReferencePtrType WindowsVirtualMachineScaleSetSourceImageReferenceArgs

func WindowsVirtualMachineScaleSetSourceImageReferencePtr(v *WindowsVirtualMachineScaleSetSourceImageReferenceArgs) WindowsVirtualMachineScaleSetSourceImageReferencePtrInput {
	return (*windowsVirtualMachineScaleSetSourceImageReferencePtrType)(v)
}

func (*windowsVirtualMachineScaleSetSourceImageReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineScaleSetSourceImageReference)(nil)).Elem()
}

func (i *windowsVirtualMachineScaleSetSourceImageReferencePtrType) ToWindowsVirtualMachineScaleSetSourceImageReferencePtrOutput() WindowsVirtualMachineScaleSetSourceImageReferencePtrOutput {
	return i.ToWindowsVirtualMachineScaleSetSourceImageReferencePtrOutputWithContext(context.Background())
}

func (i *windowsVirtualMachineScaleSetSourceImageReferencePtrType) ToWindowsVirtualMachineScaleSetSourceImageReferencePtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetSourceImageReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetSourceImageReferencePtrOutput)
}

type WindowsVirtualMachineScaleSetSourceImageReferenceOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetSourceImageReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetSourceImageReference)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetSourceImageReferenceOutput) ToWindowsVirtualMachineScaleSetSourceImageReferenceOutput() WindowsVirtualMachineScaleSetSourceImageReferenceOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetSourceImageReferenceOutput) ToWindowsVirtualMachineScaleSetSourceImageReferenceOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetSourceImageReferenceOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetSourceImageReferenceOutput) ToWindowsVirtualMachineScaleSetSourceImageReferencePtrOutput() WindowsVirtualMachineScaleSetSourceImageReferencePtrOutput {
	return o.ToWindowsVirtualMachineScaleSetSourceImageReferencePtrOutputWithContext(context.Background())
}

func (o WindowsVirtualMachineScaleSetSourceImageReferenceOutput) ToWindowsVirtualMachineScaleSetSourceImageReferencePtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetSourceImageReferencePtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetSourceImageReference) *WindowsVirtualMachineScaleSetSourceImageReference {
		return &v
	}).(WindowsVirtualMachineScaleSetSourceImageReferencePtrOutput)
}

// Specifies the offer of the image used to create the virtual machines.
func (o WindowsVirtualMachineScaleSetSourceImageReferenceOutput) Offer() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetSourceImageReference) string { return v.Offer }).(pulumi.StringOutput)
}

// Specifies the publisher of the image used to create the virtual machines.
func (o WindowsVirtualMachineScaleSetSourceImageReferenceOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetSourceImageReference) string { return v.Publisher }).(pulumi.StringOutput)
}

// Specifies the SKU of the image used to create the virtual machines.
func (o WindowsVirtualMachineScaleSetSourceImageReferenceOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetSourceImageReference) string { return v.Sku }).(pulumi.StringOutput)
}

// Specifies the version of the image used to create the virtual machines.
func (o WindowsVirtualMachineScaleSetSourceImageReferenceOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetSourceImageReference) string { return v.Version }).(pulumi.StringOutput)
}

type WindowsVirtualMachineScaleSetSourceImageReferencePtrOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetSourceImageReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineScaleSetSourceImageReference)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetSourceImageReferencePtrOutput) ToWindowsVirtualMachineScaleSetSourceImageReferencePtrOutput() WindowsVirtualMachineScaleSetSourceImageReferencePtrOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetSourceImageReferencePtrOutput) ToWindowsVirtualMachineScaleSetSourceImageReferencePtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetSourceImageReferencePtrOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetSourceImageReferencePtrOutput) Elem() WindowsVirtualMachineScaleSetSourceImageReferenceOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetSourceImageReference) WindowsVirtualMachineScaleSetSourceImageReference {
		return *v
	}).(WindowsVirtualMachineScaleSetSourceImageReferenceOutput)
}

// Specifies the offer of the image used to create the virtual machines.
func (o WindowsVirtualMachineScaleSetSourceImageReferencePtrOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetSourceImageReference) *string {
		if v == nil {
			return nil
		}
		return &v.Offer
	}).(pulumi.StringPtrOutput)
}

// Specifies the publisher of the image used to create the virtual machines.
func (o WindowsVirtualMachineScaleSetSourceImageReferencePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetSourceImageReference) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Specifies the SKU of the image used to create the virtual machines.
func (o WindowsVirtualMachineScaleSetSourceImageReferencePtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetSourceImageReference) *string {
		if v == nil {
			return nil
		}
		return &v.Sku
	}).(pulumi.StringPtrOutput)
}

// Specifies the version of the image used to create the virtual machines.
func (o WindowsVirtualMachineScaleSetSourceImageReferencePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetSourceImageReference) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type WindowsVirtualMachineScaleSetTerminateNotification struct {
	// Should the terminate notification be enabled on this Virtual Machine Scale Set? Defaults to `false`.
	Enabled bool `pulumi:"enabled"`
	// Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format.
	Timeout *string `pulumi:"timeout"`
}

// WindowsVirtualMachineScaleSetTerminateNotificationInput is an input type that accepts WindowsVirtualMachineScaleSetTerminateNotificationArgs and WindowsVirtualMachineScaleSetTerminateNotificationOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetTerminateNotificationInput` via:
//
// 		 WindowsVirtualMachineScaleSetTerminateNotificationArgs{...}
//
type WindowsVirtualMachineScaleSetTerminateNotificationInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetTerminateNotificationOutput() WindowsVirtualMachineScaleSetTerminateNotificationOutput
	ToWindowsVirtualMachineScaleSetTerminateNotificationOutputWithContext(context.Context) WindowsVirtualMachineScaleSetTerminateNotificationOutput
}

type WindowsVirtualMachineScaleSetTerminateNotificationArgs struct {
	// Should the terminate notification be enabled on this Virtual Machine Scale Set? Defaults to `false`.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (WindowsVirtualMachineScaleSetTerminateNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetTerminateNotification)(nil)).Elem()
}

func (i WindowsVirtualMachineScaleSetTerminateNotificationArgs) ToWindowsVirtualMachineScaleSetTerminateNotificationOutput() WindowsVirtualMachineScaleSetTerminateNotificationOutput {
	return i.ToWindowsVirtualMachineScaleSetTerminateNotificationOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetTerminateNotificationArgs) ToWindowsVirtualMachineScaleSetTerminateNotificationOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetTerminateNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetTerminateNotificationOutput)
}

func (i WindowsVirtualMachineScaleSetTerminateNotificationArgs) ToWindowsVirtualMachineScaleSetTerminateNotificationPtrOutput() WindowsVirtualMachineScaleSetTerminateNotificationPtrOutput {
	return i.ToWindowsVirtualMachineScaleSetTerminateNotificationPtrOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetTerminateNotificationArgs) ToWindowsVirtualMachineScaleSetTerminateNotificationPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetTerminateNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetTerminateNotificationOutput).ToWindowsVirtualMachineScaleSetTerminateNotificationPtrOutputWithContext(ctx)
}

// WindowsVirtualMachineScaleSetTerminateNotificationPtrInput is an input type that accepts WindowsVirtualMachineScaleSetTerminateNotificationArgs, WindowsVirtualMachineScaleSetTerminateNotificationPtr and WindowsVirtualMachineScaleSetTerminateNotificationPtrOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetTerminateNotificationPtrInput` via:
//
// 		 WindowsVirtualMachineScaleSetTerminateNotificationArgs{...}
//
//  or:
//
// 		 nil
//
type WindowsVirtualMachineScaleSetTerminateNotificationPtrInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetTerminateNotificationPtrOutput() WindowsVirtualMachineScaleSetTerminateNotificationPtrOutput
	ToWindowsVirtualMachineScaleSetTerminateNotificationPtrOutputWithContext(context.Context) WindowsVirtualMachineScaleSetTerminateNotificationPtrOutput
}

type windowsVirtualMachineScaleSetTerminateNotificationPtrType WindowsVirtualMachineScaleSetTerminateNotificationArgs

func WindowsVirtualMachineScaleSetTerminateNotificationPtr(v *WindowsVirtualMachineScaleSetTerminateNotificationArgs) WindowsVirtualMachineScaleSetTerminateNotificationPtrInput {
	return (*windowsVirtualMachineScaleSetTerminateNotificationPtrType)(v)
}

func (*windowsVirtualMachineScaleSetTerminateNotificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineScaleSetTerminateNotification)(nil)).Elem()
}

func (i *windowsVirtualMachineScaleSetTerminateNotificationPtrType) ToWindowsVirtualMachineScaleSetTerminateNotificationPtrOutput() WindowsVirtualMachineScaleSetTerminateNotificationPtrOutput {
	return i.ToWindowsVirtualMachineScaleSetTerminateNotificationPtrOutputWithContext(context.Background())
}

func (i *windowsVirtualMachineScaleSetTerminateNotificationPtrType) ToWindowsVirtualMachineScaleSetTerminateNotificationPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetTerminateNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetTerminateNotificationPtrOutput)
}

type WindowsVirtualMachineScaleSetTerminateNotificationOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetTerminateNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetTerminateNotification)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetTerminateNotificationOutput) ToWindowsVirtualMachineScaleSetTerminateNotificationOutput() WindowsVirtualMachineScaleSetTerminateNotificationOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetTerminateNotificationOutput) ToWindowsVirtualMachineScaleSetTerminateNotificationOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetTerminateNotificationOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetTerminateNotificationOutput) ToWindowsVirtualMachineScaleSetTerminateNotificationPtrOutput() WindowsVirtualMachineScaleSetTerminateNotificationPtrOutput {
	return o.ToWindowsVirtualMachineScaleSetTerminateNotificationPtrOutputWithContext(context.Background())
}

func (o WindowsVirtualMachineScaleSetTerminateNotificationOutput) ToWindowsVirtualMachineScaleSetTerminateNotificationPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetTerminateNotificationPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetTerminateNotification) *WindowsVirtualMachineScaleSetTerminateNotification {
		return &v
	}).(WindowsVirtualMachineScaleSetTerminateNotificationPtrOutput)
}

// Should the terminate notification be enabled on this Virtual Machine Scale Set? Defaults to `false`.
func (o WindowsVirtualMachineScaleSetTerminateNotificationOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetTerminateNotification) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format.
func (o WindowsVirtualMachineScaleSetTerminateNotificationOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetTerminateNotification) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type WindowsVirtualMachineScaleSetTerminateNotificationPtrOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetTerminateNotificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineScaleSetTerminateNotification)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetTerminateNotificationPtrOutput) ToWindowsVirtualMachineScaleSetTerminateNotificationPtrOutput() WindowsVirtualMachineScaleSetTerminateNotificationPtrOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetTerminateNotificationPtrOutput) ToWindowsVirtualMachineScaleSetTerminateNotificationPtrOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetTerminateNotificationPtrOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetTerminateNotificationPtrOutput) Elem() WindowsVirtualMachineScaleSetTerminateNotificationOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetTerminateNotification) WindowsVirtualMachineScaleSetTerminateNotification {
		return *v
	}).(WindowsVirtualMachineScaleSetTerminateNotificationOutput)
}

// Should the terminate notification be enabled on this Virtual Machine Scale Set? Defaults to `false`.
func (o WindowsVirtualMachineScaleSetTerminateNotificationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetTerminateNotification) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format.
func (o WindowsVirtualMachineScaleSetTerminateNotificationPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineScaleSetTerminateNotification) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

type WindowsVirtualMachineScaleSetWinrmListener struct {
	// The Secret URL of a Key Vault Certificate, which must be specified when `protocol` is set to `Https`.
	CertificateUrl *string `pulumi:"certificateUrl"`
	// The Protocol of the WinRM Listener. Possible values are `Http` and `Https`.
	Protocol string `pulumi:"protocol"`
}

// WindowsVirtualMachineScaleSetWinrmListenerInput is an input type that accepts WindowsVirtualMachineScaleSetWinrmListenerArgs and WindowsVirtualMachineScaleSetWinrmListenerOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetWinrmListenerInput` via:
//
// 		 WindowsVirtualMachineScaleSetWinrmListenerArgs{...}
//
type WindowsVirtualMachineScaleSetWinrmListenerInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetWinrmListenerOutput() WindowsVirtualMachineScaleSetWinrmListenerOutput
	ToWindowsVirtualMachineScaleSetWinrmListenerOutputWithContext(context.Context) WindowsVirtualMachineScaleSetWinrmListenerOutput
}

type WindowsVirtualMachineScaleSetWinrmListenerArgs struct {
	// The Secret URL of a Key Vault Certificate, which must be specified when `protocol` is set to `Https`.
	CertificateUrl pulumi.StringPtrInput `pulumi:"certificateUrl"`
	// The Protocol of the WinRM Listener. Possible values are `Http` and `Https`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (WindowsVirtualMachineScaleSetWinrmListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetWinrmListener)(nil)).Elem()
}

func (i WindowsVirtualMachineScaleSetWinrmListenerArgs) ToWindowsVirtualMachineScaleSetWinrmListenerOutput() WindowsVirtualMachineScaleSetWinrmListenerOutput {
	return i.ToWindowsVirtualMachineScaleSetWinrmListenerOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetWinrmListenerArgs) ToWindowsVirtualMachineScaleSetWinrmListenerOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetWinrmListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetWinrmListenerOutput)
}

// WindowsVirtualMachineScaleSetWinrmListenerArrayInput is an input type that accepts WindowsVirtualMachineScaleSetWinrmListenerArray and WindowsVirtualMachineScaleSetWinrmListenerArrayOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineScaleSetWinrmListenerArrayInput` via:
//
// 		 WindowsVirtualMachineScaleSetWinrmListenerArray{ WindowsVirtualMachineScaleSetWinrmListenerArgs{...} }
//
type WindowsVirtualMachineScaleSetWinrmListenerArrayInput interface {
	pulumi.Input

	ToWindowsVirtualMachineScaleSetWinrmListenerArrayOutput() WindowsVirtualMachineScaleSetWinrmListenerArrayOutput
	ToWindowsVirtualMachineScaleSetWinrmListenerArrayOutputWithContext(context.Context) WindowsVirtualMachineScaleSetWinrmListenerArrayOutput
}

type WindowsVirtualMachineScaleSetWinrmListenerArray []WindowsVirtualMachineScaleSetWinrmListenerInput

func (WindowsVirtualMachineScaleSetWinrmListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WindowsVirtualMachineScaleSetWinrmListener)(nil)).Elem()
}

func (i WindowsVirtualMachineScaleSetWinrmListenerArray) ToWindowsVirtualMachineScaleSetWinrmListenerArrayOutput() WindowsVirtualMachineScaleSetWinrmListenerArrayOutput {
	return i.ToWindowsVirtualMachineScaleSetWinrmListenerArrayOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineScaleSetWinrmListenerArray) ToWindowsVirtualMachineScaleSetWinrmListenerArrayOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetWinrmListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineScaleSetWinrmListenerArrayOutput)
}

type WindowsVirtualMachineScaleSetWinrmListenerOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetWinrmListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineScaleSetWinrmListener)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetWinrmListenerOutput) ToWindowsVirtualMachineScaleSetWinrmListenerOutput() WindowsVirtualMachineScaleSetWinrmListenerOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetWinrmListenerOutput) ToWindowsVirtualMachineScaleSetWinrmListenerOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetWinrmListenerOutput {
	return o
}

// The Secret URL of a Key Vault Certificate, which must be specified when `protocol` is set to `Https`.
func (o WindowsVirtualMachineScaleSetWinrmListenerOutput) CertificateUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetWinrmListener) *string { return v.CertificateUrl }).(pulumi.StringPtrOutput)
}

// The Protocol of the WinRM Listener. Possible values are `Http` and `Https`.
func (o WindowsVirtualMachineScaleSetWinrmListenerOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineScaleSetWinrmListener) string { return v.Protocol }).(pulumi.StringOutput)
}

type WindowsVirtualMachineScaleSetWinrmListenerArrayOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineScaleSetWinrmListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WindowsVirtualMachineScaleSetWinrmListener)(nil)).Elem()
}

func (o WindowsVirtualMachineScaleSetWinrmListenerArrayOutput) ToWindowsVirtualMachineScaleSetWinrmListenerArrayOutput() WindowsVirtualMachineScaleSetWinrmListenerArrayOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetWinrmListenerArrayOutput) ToWindowsVirtualMachineScaleSetWinrmListenerArrayOutputWithContext(ctx context.Context) WindowsVirtualMachineScaleSetWinrmListenerArrayOutput {
	return o
}

func (o WindowsVirtualMachineScaleSetWinrmListenerArrayOutput) Index(i pulumi.IntInput) WindowsVirtualMachineScaleSetWinrmListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WindowsVirtualMachineScaleSetWinrmListener {
		return vs[0].([]WindowsVirtualMachineScaleSetWinrmListener)[vs[1].(int)]
	}).(WindowsVirtualMachineScaleSetWinrmListenerOutput)
}

type WindowsVirtualMachineSecret struct {
	// One or more `certificate` blocks as defined above.
	Certificates []WindowsVirtualMachineSecretCertificate `pulumi:"certificates"`
	// The ID of the Key Vault from which all Secrets should be sourced.
	KeyVaultId string `pulumi:"keyVaultId"`
}

// WindowsVirtualMachineSecretInput is an input type that accepts WindowsVirtualMachineSecretArgs and WindowsVirtualMachineSecretOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineSecretInput` via:
//
// 		 WindowsVirtualMachineSecretArgs{...}
//
type WindowsVirtualMachineSecretInput interface {
	pulumi.Input

	ToWindowsVirtualMachineSecretOutput() WindowsVirtualMachineSecretOutput
	ToWindowsVirtualMachineSecretOutputWithContext(context.Context) WindowsVirtualMachineSecretOutput
}

type WindowsVirtualMachineSecretArgs struct {
	// One or more `certificate` blocks as defined above.
	Certificates WindowsVirtualMachineSecretCertificateArrayInput `pulumi:"certificates"`
	// The ID of the Key Vault from which all Secrets should be sourced.
	KeyVaultId pulumi.StringInput `pulumi:"keyVaultId"`
}

func (WindowsVirtualMachineSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineSecret)(nil)).Elem()
}

func (i WindowsVirtualMachineSecretArgs) ToWindowsVirtualMachineSecretOutput() WindowsVirtualMachineSecretOutput {
	return i.ToWindowsVirtualMachineSecretOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineSecretArgs) ToWindowsVirtualMachineSecretOutputWithContext(ctx context.Context) WindowsVirtualMachineSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineSecretOutput)
}

// WindowsVirtualMachineSecretArrayInput is an input type that accepts WindowsVirtualMachineSecretArray and WindowsVirtualMachineSecretArrayOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineSecretArrayInput` via:
//
// 		 WindowsVirtualMachineSecretArray{ WindowsVirtualMachineSecretArgs{...} }
//
type WindowsVirtualMachineSecretArrayInput interface {
	pulumi.Input

	ToWindowsVirtualMachineSecretArrayOutput() WindowsVirtualMachineSecretArrayOutput
	ToWindowsVirtualMachineSecretArrayOutputWithContext(context.Context) WindowsVirtualMachineSecretArrayOutput
}

type WindowsVirtualMachineSecretArray []WindowsVirtualMachineSecretInput

func (WindowsVirtualMachineSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WindowsVirtualMachineSecret)(nil)).Elem()
}

func (i WindowsVirtualMachineSecretArray) ToWindowsVirtualMachineSecretArrayOutput() WindowsVirtualMachineSecretArrayOutput {
	return i.ToWindowsVirtualMachineSecretArrayOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineSecretArray) ToWindowsVirtualMachineSecretArrayOutputWithContext(ctx context.Context) WindowsVirtualMachineSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineSecretArrayOutput)
}

type WindowsVirtualMachineSecretOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineSecret)(nil)).Elem()
}

func (o WindowsVirtualMachineSecretOutput) ToWindowsVirtualMachineSecretOutput() WindowsVirtualMachineSecretOutput {
	return o
}

func (o WindowsVirtualMachineSecretOutput) ToWindowsVirtualMachineSecretOutputWithContext(ctx context.Context) WindowsVirtualMachineSecretOutput {
	return o
}

// One or more `certificate` blocks as defined above.
func (o WindowsVirtualMachineSecretOutput) Certificates() WindowsVirtualMachineSecretCertificateArrayOutput {
	return o.ApplyT(func(v WindowsVirtualMachineSecret) []WindowsVirtualMachineSecretCertificate { return v.Certificates }).(WindowsVirtualMachineSecretCertificateArrayOutput)
}

// The ID of the Key Vault from which all Secrets should be sourced.
func (o WindowsVirtualMachineSecretOutput) KeyVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineSecret) string { return v.KeyVaultId }).(pulumi.StringOutput)
}

type WindowsVirtualMachineSecretArrayOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WindowsVirtualMachineSecret)(nil)).Elem()
}

func (o WindowsVirtualMachineSecretArrayOutput) ToWindowsVirtualMachineSecretArrayOutput() WindowsVirtualMachineSecretArrayOutput {
	return o
}

func (o WindowsVirtualMachineSecretArrayOutput) ToWindowsVirtualMachineSecretArrayOutputWithContext(ctx context.Context) WindowsVirtualMachineSecretArrayOutput {
	return o
}

func (o WindowsVirtualMachineSecretArrayOutput) Index(i pulumi.IntInput) WindowsVirtualMachineSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WindowsVirtualMachineSecret {
		return vs[0].([]WindowsVirtualMachineSecret)[vs[1].(int)]
	}).(WindowsVirtualMachineSecretOutput)
}

type WindowsVirtualMachineSecretCertificate struct {
	// The certificate store on the Virtual Machine where the certificate should be added.
	Store string `pulumi:"store"`
	// The Secret URL of a Key Vault Certificate.
	Url string `pulumi:"url"`
}

// WindowsVirtualMachineSecretCertificateInput is an input type that accepts WindowsVirtualMachineSecretCertificateArgs and WindowsVirtualMachineSecretCertificateOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineSecretCertificateInput` via:
//
// 		 WindowsVirtualMachineSecretCertificateArgs{...}
//
type WindowsVirtualMachineSecretCertificateInput interface {
	pulumi.Input

	ToWindowsVirtualMachineSecretCertificateOutput() WindowsVirtualMachineSecretCertificateOutput
	ToWindowsVirtualMachineSecretCertificateOutputWithContext(context.Context) WindowsVirtualMachineSecretCertificateOutput
}

type WindowsVirtualMachineSecretCertificateArgs struct {
	// The certificate store on the Virtual Machine where the certificate should be added.
	Store pulumi.StringInput `pulumi:"store"`
	// The Secret URL of a Key Vault Certificate.
	Url pulumi.StringInput `pulumi:"url"`
}

func (WindowsVirtualMachineSecretCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineSecretCertificate)(nil)).Elem()
}

func (i WindowsVirtualMachineSecretCertificateArgs) ToWindowsVirtualMachineSecretCertificateOutput() WindowsVirtualMachineSecretCertificateOutput {
	return i.ToWindowsVirtualMachineSecretCertificateOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineSecretCertificateArgs) ToWindowsVirtualMachineSecretCertificateOutputWithContext(ctx context.Context) WindowsVirtualMachineSecretCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineSecretCertificateOutput)
}

// WindowsVirtualMachineSecretCertificateArrayInput is an input type that accepts WindowsVirtualMachineSecretCertificateArray and WindowsVirtualMachineSecretCertificateArrayOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineSecretCertificateArrayInput` via:
//
// 		 WindowsVirtualMachineSecretCertificateArray{ WindowsVirtualMachineSecretCertificateArgs{...} }
//
type WindowsVirtualMachineSecretCertificateArrayInput interface {
	pulumi.Input

	ToWindowsVirtualMachineSecretCertificateArrayOutput() WindowsVirtualMachineSecretCertificateArrayOutput
	ToWindowsVirtualMachineSecretCertificateArrayOutputWithContext(context.Context) WindowsVirtualMachineSecretCertificateArrayOutput
}

type WindowsVirtualMachineSecretCertificateArray []WindowsVirtualMachineSecretCertificateInput

func (WindowsVirtualMachineSecretCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WindowsVirtualMachineSecretCertificate)(nil)).Elem()
}

func (i WindowsVirtualMachineSecretCertificateArray) ToWindowsVirtualMachineSecretCertificateArrayOutput() WindowsVirtualMachineSecretCertificateArrayOutput {
	return i.ToWindowsVirtualMachineSecretCertificateArrayOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineSecretCertificateArray) ToWindowsVirtualMachineSecretCertificateArrayOutputWithContext(ctx context.Context) WindowsVirtualMachineSecretCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineSecretCertificateArrayOutput)
}

type WindowsVirtualMachineSecretCertificateOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineSecretCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineSecretCertificate)(nil)).Elem()
}

func (o WindowsVirtualMachineSecretCertificateOutput) ToWindowsVirtualMachineSecretCertificateOutput() WindowsVirtualMachineSecretCertificateOutput {
	return o
}

func (o WindowsVirtualMachineSecretCertificateOutput) ToWindowsVirtualMachineSecretCertificateOutputWithContext(ctx context.Context) WindowsVirtualMachineSecretCertificateOutput {
	return o
}

// The certificate store on the Virtual Machine where the certificate should be added.
func (o WindowsVirtualMachineSecretCertificateOutput) Store() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineSecretCertificate) string { return v.Store }).(pulumi.StringOutput)
}

// The Secret URL of a Key Vault Certificate.
func (o WindowsVirtualMachineSecretCertificateOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineSecretCertificate) string { return v.Url }).(pulumi.StringOutput)
}

type WindowsVirtualMachineSecretCertificateArrayOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineSecretCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WindowsVirtualMachineSecretCertificate)(nil)).Elem()
}

func (o WindowsVirtualMachineSecretCertificateArrayOutput) ToWindowsVirtualMachineSecretCertificateArrayOutput() WindowsVirtualMachineSecretCertificateArrayOutput {
	return o
}

func (o WindowsVirtualMachineSecretCertificateArrayOutput) ToWindowsVirtualMachineSecretCertificateArrayOutputWithContext(ctx context.Context) WindowsVirtualMachineSecretCertificateArrayOutput {
	return o
}

func (o WindowsVirtualMachineSecretCertificateArrayOutput) Index(i pulumi.IntInput) WindowsVirtualMachineSecretCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WindowsVirtualMachineSecretCertificate {
		return vs[0].([]WindowsVirtualMachineSecretCertificate)[vs[1].(int)]
	}).(WindowsVirtualMachineSecretCertificateOutput)
}

type WindowsVirtualMachineSourceImageReference struct {
	// (Optional) Specifies the offer of the image used to create the virtual machines.
	Offer string `pulumi:"offer"`
	// Specifies the Publisher of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
	Publisher string `pulumi:"publisher"`
	// (Optional) Specifies the SKU of the image used to create the virtual machines.
	Sku string `pulumi:"sku"`
	// (Optional) Specifies the version of the image used to create the virtual machines.
	Version string `pulumi:"version"`
}

// WindowsVirtualMachineSourceImageReferenceInput is an input type that accepts WindowsVirtualMachineSourceImageReferenceArgs and WindowsVirtualMachineSourceImageReferenceOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineSourceImageReferenceInput` via:
//
// 		 WindowsVirtualMachineSourceImageReferenceArgs{...}
//
type WindowsVirtualMachineSourceImageReferenceInput interface {
	pulumi.Input

	ToWindowsVirtualMachineSourceImageReferenceOutput() WindowsVirtualMachineSourceImageReferenceOutput
	ToWindowsVirtualMachineSourceImageReferenceOutputWithContext(context.Context) WindowsVirtualMachineSourceImageReferenceOutput
}

type WindowsVirtualMachineSourceImageReferenceArgs struct {
	// (Optional) Specifies the offer of the image used to create the virtual machines.
	Offer pulumi.StringInput `pulumi:"offer"`
	// Specifies the Publisher of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
	Publisher pulumi.StringInput `pulumi:"publisher"`
	// (Optional) Specifies the SKU of the image used to create the virtual machines.
	Sku pulumi.StringInput `pulumi:"sku"`
	// (Optional) Specifies the version of the image used to create the virtual machines.
	Version pulumi.StringInput `pulumi:"version"`
}

func (WindowsVirtualMachineSourceImageReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineSourceImageReference)(nil)).Elem()
}

func (i WindowsVirtualMachineSourceImageReferenceArgs) ToWindowsVirtualMachineSourceImageReferenceOutput() WindowsVirtualMachineSourceImageReferenceOutput {
	return i.ToWindowsVirtualMachineSourceImageReferenceOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineSourceImageReferenceArgs) ToWindowsVirtualMachineSourceImageReferenceOutputWithContext(ctx context.Context) WindowsVirtualMachineSourceImageReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineSourceImageReferenceOutput)
}

func (i WindowsVirtualMachineSourceImageReferenceArgs) ToWindowsVirtualMachineSourceImageReferencePtrOutput() WindowsVirtualMachineSourceImageReferencePtrOutput {
	return i.ToWindowsVirtualMachineSourceImageReferencePtrOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineSourceImageReferenceArgs) ToWindowsVirtualMachineSourceImageReferencePtrOutputWithContext(ctx context.Context) WindowsVirtualMachineSourceImageReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineSourceImageReferenceOutput).ToWindowsVirtualMachineSourceImageReferencePtrOutputWithContext(ctx)
}

// WindowsVirtualMachineSourceImageReferencePtrInput is an input type that accepts WindowsVirtualMachineSourceImageReferenceArgs, WindowsVirtualMachineSourceImageReferencePtr and WindowsVirtualMachineSourceImageReferencePtrOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineSourceImageReferencePtrInput` via:
//
// 		 WindowsVirtualMachineSourceImageReferenceArgs{...}
//
//  or:
//
// 		 nil
//
type WindowsVirtualMachineSourceImageReferencePtrInput interface {
	pulumi.Input

	ToWindowsVirtualMachineSourceImageReferencePtrOutput() WindowsVirtualMachineSourceImageReferencePtrOutput
	ToWindowsVirtualMachineSourceImageReferencePtrOutputWithContext(context.Context) WindowsVirtualMachineSourceImageReferencePtrOutput
}

type windowsVirtualMachineSourceImageReferencePtrType WindowsVirtualMachineSourceImageReferenceArgs

func WindowsVirtualMachineSourceImageReferencePtr(v *WindowsVirtualMachineSourceImageReferenceArgs) WindowsVirtualMachineSourceImageReferencePtrInput {
	return (*windowsVirtualMachineSourceImageReferencePtrType)(v)
}

func (*windowsVirtualMachineSourceImageReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineSourceImageReference)(nil)).Elem()
}

func (i *windowsVirtualMachineSourceImageReferencePtrType) ToWindowsVirtualMachineSourceImageReferencePtrOutput() WindowsVirtualMachineSourceImageReferencePtrOutput {
	return i.ToWindowsVirtualMachineSourceImageReferencePtrOutputWithContext(context.Background())
}

func (i *windowsVirtualMachineSourceImageReferencePtrType) ToWindowsVirtualMachineSourceImageReferencePtrOutputWithContext(ctx context.Context) WindowsVirtualMachineSourceImageReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineSourceImageReferencePtrOutput)
}

type WindowsVirtualMachineSourceImageReferenceOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineSourceImageReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineSourceImageReference)(nil)).Elem()
}

func (o WindowsVirtualMachineSourceImageReferenceOutput) ToWindowsVirtualMachineSourceImageReferenceOutput() WindowsVirtualMachineSourceImageReferenceOutput {
	return o
}

func (o WindowsVirtualMachineSourceImageReferenceOutput) ToWindowsVirtualMachineSourceImageReferenceOutputWithContext(ctx context.Context) WindowsVirtualMachineSourceImageReferenceOutput {
	return o
}

func (o WindowsVirtualMachineSourceImageReferenceOutput) ToWindowsVirtualMachineSourceImageReferencePtrOutput() WindowsVirtualMachineSourceImageReferencePtrOutput {
	return o.ToWindowsVirtualMachineSourceImageReferencePtrOutputWithContext(context.Background())
}

func (o WindowsVirtualMachineSourceImageReferenceOutput) ToWindowsVirtualMachineSourceImageReferencePtrOutputWithContext(ctx context.Context) WindowsVirtualMachineSourceImageReferencePtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineSourceImageReference) *WindowsVirtualMachineSourceImageReference {
		return &v
	}).(WindowsVirtualMachineSourceImageReferencePtrOutput)
}

// (Optional) Specifies the offer of the image used to create the virtual machines.
func (o WindowsVirtualMachineSourceImageReferenceOutput) Offer() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineSourceImageReference) string { return v.Offer }).(pulumi.StringOutput)
}

// Specifies the Publisher of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineSourceImageReferenceOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineSourceImageReference) string { return v.Publisher }).(pulumi.StringOutput)
}

// (Optional) Specifies the SKU of the image used to create the virtual machines.
func (o WindowsVirtualMachineSourceImageReferenceOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineSourceImageReference) string { return v.Sku }).(pulumi.StringOutput)
}

// (Optional) Specifies the version of the image used to create the virtual machines.
func (o WindowsVirtualMachineSourceImageReferenceOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineSourceImageReference) string { return v.Version }).(pulumi.StringOutput)
}

type WindowsVirtualMachineSourceImageReferencePtrOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineSourceImageReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsVirtualMachineSourceImageReference)(nil)).Elem()
}

func (o WindowsVirtualMachineSourceImageReferencePtrOutput) ToWindowsVirtualMachineSourceImageReferencePtrOutput() WindowsVirtualMachineSourceImageReferencePtrOutput {
	return o
}

func (o WindowsVirtualMachineSourceImageReferencePtrOutput) ToWindowsVirtualMachineSourceImageReferencePtrOutputWithContext(ctx context.Context) WindowsVirtualMachineSourceImageReferencePtrOutput {
	return o
}

func (o WindowsVirtualMachineSourceImageReferencePtrOutput) Elem() WindowsVirtualMachineSourceImageReferenceOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineSourceImageReference) WindowsVirtualMachineSourceImageReference {
		return *v
	}).(WindowsVirtualMachineSourceImageReferenceOutput)
}

// (Optional) Specifies the offer of the image used to create the virtual machines.
func (o WindowsVirtualMachineSourceImageReferencePtrOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineSourceImageReference) *string {
		if v == nil {
			return nil
		}
		return &v.Offer
	}).(pulumi.StringPtrOutput)
}

// Specifies the Publisher of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
func (o WindowsVirtualMachineSourceImageReferencePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineSourceImageReference) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

// (Optional) Specifies the SKU of the image used to create the virtual machines.
func (o WindowsVirtualMachineSourceImageReferencePtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineSourceImageReference) *string {
		if v == nil {
			return nil
		}
		return &v.Sku
	}).(pulumi.StringPtrOutput)
}

// (Optional) Specifies the version of the image used to create the virtual machines.
func (o WindowsVirtualMachineSourceImageReferencePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsVirtualMachineSourceImageReference) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type WindowsVirtualMachineWinrmListener struct {
	// The Secret URL of a Key Vault Certificate, which must be specified when `protocol` is set to `Https`.
	CertificateUrl *string `pulumi:"certificateUrl"`
	Protocol       string  `pulumi:"protocol"`
}

// WindowsVirtualMachineWinrmListenerInput is an input type that accepts WindowsVirtualMachineWinrmListenerArgs and WindowsVirtualMachineWinrmListenerOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineWinrmListenerInput` via:
//
// 		 WindowsVirtualMachineWinrmListenerArgs{...}
//
type WindowsVirtualMachineWinrmListenerInput interface {
	pulumi.Input

	ToWindowsVirtualMachineWinrmListenerOutput() WindowsVirtualMachineWinrmListenerOutput
	ToWindowsVirtualMachineWinrmListenerOutputWithContext(context.Context) WindowsVirtualMachineWinrmListenerOutput
}

type WindowsVirtualMachineWinrmListenerArgs struct {
	// The Secret URL of a Key Vault Certificate, which must be specified when `protocol` is set to `Https`.
	CertificateUrl pulumi.StringPtrInput `pulumi:"certificateUrl"`
	Protocol       pulumi.StringInput    `pulumi:"protocol"`
}

func (WindowsVirtualMachineWinrmListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineWinrmListener)(nil)).Elem()
}

func (i WindowsVirtualMachineWinrmListenerArgs) ToWindowsVirtualMachineWinrmListenerOutput() WindowsVirtualMachineWinrmListenerOutput {
	return i.ToWindowsVirtualMachineWinrmListenerOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineWinrmListenerArgs) ToWindowsVirtualMachineWinrmListenerOutputWithContext(ctx context.Context) WindowsVirtualMachineWinrmListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineWinrmListenerOutput)
}

// WindowsVirtualMachineWinrmListenerArrayInput is an input type that accepts WindowsVirtualMachineWinrmListenerArray and WindowsVirtualMachineWinrmListenerArrayOutput values.
// You can construct a concrete instance of `WindowsVirtualMachineWinrmListenerArrayInput` via:
//
// 		 WindowsVirtualMachineWinrmListenerArray{ WindowsVirtualMachineWinrmListenerArgs{...} }
//
type WindowsVirtualMachineWinrmListenerArrayInput interface {
	pulumi.Input

	ToWindowsVirtualMachineWinrmListenerArrayOutput() WindowsVirtualMachineWinrmListenerArrayOutput
	ToWindowsVirtualMachineWinrmListenerArrayOutputWithContext(context.Context) WindowsVirtualMachineWinrmListenerArrayOutput
}

type WindowsVirtualMachineWinrmListenerArray []WindowsVirtualMachineWinrmListenerInput

func (WindowsVirtualMachineWinrmListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WindowsVirtualMachineWinrmListener)(nil)).Elem()
}

func (i WindowsVirtualMachineWinrmListenerArray) ToWindowsVirtualMachineWinrmListenerArrayOutput() WindowsVirtualMachineWinrmListenerArrayOutput {
	return i.ToWindowsVirtualMachineWinrmListenerArrayOutputWithContext(context.Background())
}

func (i WindowsVirtualMachineWinrmListenerArray) ToWindowsVirtualMachineWinrmListenerArrayOutputWithContext(ctx context.Context) WindowsVirtualMachineWinrmListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsVirtualMachineWinrmListenerArrayOutput)
}

type WindowsVirtualMachineWinrmListenerOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineWinrmListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsVirtualMachineWinrmListener)(nil)).Elem()
}

func (o WindowsVirtualMachineWinrmListenerOutput) ToWindowsVirtualMachineWinrmListenerOutput() WindowsVirtualMachineWinrmListenerOutput {
	return o
}

func (o WindowsVirtualMachineWinrmListenerOutput) ToWindowsVirtualMachineWinrmListenerOutputWithContext(ctx context.Context) WindowsVirtualMachineWinrmListenerOutput {
	return o
}

// The Secret URL of a Key Vault Certificate, which must be specified when `protocol` is set to `Https`.
func (o WindowsVirtualMachineWinrmListenerOutput) CertificateUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsVirtualMachineWinrmListener) *string { return v.CertificateUrl }).(pulumi.StringPtrOutput)
}

func (o WindowsVirtualMachineWinrmListenerOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsVirtualMachineWinrmListener) string { return v.Protocol }).(pulumi.StringOutput)
}

type WindowsVirtualMachineWinrmListenerArrayOutput struct{ *pulumi.OutputState }

func (WindowsVirtualMachineWinrmListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WindowsVirtualMachineWinrmListener)(nil)).Elem()
}

func (o WindowsVirtualMachineWinrmListenerArrayOutput) ToWindowsVirtualMachineWinrmListenerArrayOutput() WindowsVirtualMachineWinrmListenerArrayOutput {
	return o
}

func (o WindowsVirtualMachineWinrmListenerArrayOutput) ToWindowsVirtualMachineWinrmListenerArrayOutputWithContext(ctx context.Context) WindowsVirtualMachineWinrmListenerArrayOutput {
	return o
}

func (o WindowsVirtualMachineWinrmListenerArrayOutput) Index(i pulumi.IntInput) WindowsVirtualMachineWinrmListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WindowsVirtualMachineWinrmListener {
		return vs[0].([]WindowsVirtualMachineWinrmListener)[vs[1].(int)]
	}).(WindowsVirtualMachineWinrmListenerOutput)
}

type GetImageDataDisk struct {
	// the URI in Azure storage of the blob used to create the image.
	BlobUri string `pulumi:"blobUri"`
	// the caching mode for the Data Disk, such as `ReadWrite`, `ReadOnly`, or `None`.
	Caching string `pulumi:"caching"`
	// the logical unit number of the data disk.
	Lun int `pulumi:"lun"`
	// the ID of the Managed Disk used as the Data Disk Image.
	ManagedDiskId string `pulumi:"managedDiskId"`
	// the size of this Data Disk in GB.
	SizeGb int `pulumi:"sizeGb"`
}

// GetImageDataDiskInput is an input type that accepts GetImageDataDiskArgs and GetImageDataDiskOutput values.
// You can construct a concrete instance of `GetImageDataDiskInput` via:
//
// 		 GetImageDataDiskArgs{...}
//
type GetImageDataDiskInput interface {
	pulumi.Input

	ToGetImageDataDiskOutput() GetImageDataDiskOutput
	ToGetImageDataDiskOutputWithContext(context.Context) GetImageDataDiskOutput
}

type GetImageDataDiskArgs struct {
	// the URI in Azure storage of the blob used to create the image.
	BlobUri pulumi.StringInput `pulumi:"blobUri"`
	// the caching mode for the Data Disk, such as `ReadWrite`, `ReadOnly`, or `None`.
	Caching pulumi.StringInput `pulumi:"caching"`
	// the logical unit number of the data disk.
	Lun pulumi.IntInput `pulumi:"lun"`
	// the ID of the Managed Disk used as the Data Disk Image.
	ManagedDiskId pulumi.StringInput `pulumi:"managedDiskId"`
	// the size of this Data Disk in GB.
	SizeGb pulumi.IntInput `pulumi:"sizeGb"`
}

func (GetImageDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageDataDisk)(nil)).Elem()
}

func (i GetImageDataDiskArgs) ToGetImageDataDiskOutput() GetImageDataDiskOutput {
	return i.ToGetImageDataDiskOutputWithContext(context.Background())
}

func (i GetImageDataDiskArgs) ToGetImageDataDiskOutputWithContext(ctx context.Context) GetImageDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageDataDiskOutput)
}

// GetImageDataDiskArrayInput is an input type that accepts GetImageDataDiskArray and GetImageDataDiskArrayOutput values.
// You can construct a concrete instance of `GetImageDataDiskArrayInput` via:
//
// 		 GetImageDataDiskArray{ GetImageDataDiskArgs{...} }
//
type GetImageDataDiskArrayInput interface {
	pulumi.Input

	ToGetImageDataDiskArrayOutput() GetImageDataDiskArrayOutput
	ToGetImageDataDiskArrayOutputWithContext(context.Context) GetImageDataDiskArrayOutput
}

type GetImageDataDiskArray []GetImageDataDiskInput

func (GetImageDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageDataDisk)(nil)).Elem()
}

func (i GetImageDataDiskArray) ToGetImageDataDiskArrayOutput() GetImageDataDiskArrayOutput {
	return i.ToGetImageDataDiskArrayOutputWithContext(context.Background())
}

func (i GetImageDataDiskArray) ToGetImageDataDiskArrayOutputWithContext(ctx context.Context) GetImageDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageDataDiskArrayOutput)
}

type GetImageDataDiskOutput struct{ *pulumi.OutputState }

func (GetImageDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageDataDisk)(nil)).Elem()
}

func (o GetImageDataDiskOutput) ToGetImageDataDiskOutput() GetImageDataDiskOutput {
	return o
}

func (o GetImageDataDiskOutput) ToGetImageDataDiskOutputWithContext(ctx context.Context) GetImageDataDiskOutput {
	return o
}

// the URI in Azure storage of the blob used to create the image.
func (o GetImageDataDiskOutput) BlobUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageDataDisk) string { return v.BlobUri }).(pulumi.StringOutput)
}

// the caching mode for the Data Disk, such as `ReadWrite`, `ReadOnly`, or `None`.
func (o GetImageDataDiskOutput) Caching() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageDataDisk) string { return v.Caching }).(pulumi.StringOutput)
}

// the logical unit number of the data disk.
func (o GetImageDataDiskOutput) Lun() pulumi.IntOutput {
	return o.ApplyT(func(v GetImageDataDisk) int { return v.Lun }).(pulumi.IntOutput)
}

// the ID of the Managed Disk used as the Data Disk Image.
func (o GetImageDataDiskOutput) ManagedDiskId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageDataDisk) string { return v.ManagedDiskId }).(pulumi.StringOutput)
}

// the size of this Data Disk in GB.
func (o GetImageDataDiskOutput) SizeGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetImageDataDisk) int { return v.SizeGb }).(pulumi.IntOutput)
}

type GetImageDataDiskArrayOutput struct{ *pulumi.OutputState }

func (GetImageDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageDataDisk)(nil)).Elem()
}

func (o GetImageDataDiskArrayOutput) ToGetImageDataDiskArrayOutput() GetImageDataDiskArrayOutput {
	return o
}

func (o GetImageDataDiskArrayOutput) ToGetImageDataDiskArrayOutputWithContext(ctx context.Context) GetImageDataDiskArrayOutput {
	return o
}

func (o GetImageDataDiskArrayOutput) Index(i pulumi.IntInput) GetImageDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageDataDisk {
		return vs[0].([]GetImageDataDisk)[vs[1].(int)]
	}).(GetImageDataDiskOutput)
}

type GetImageOsDisk struct {
	// the URI in Azure storage of the blob used to create the image.
	BlobUri string `pulumi:"blobUri"`
	// the caching mode for the Data Disk, such as `ReadWrite`, `ReadOnly`, or `None`.
	Caching string `pulumi:"caching"`
	// the ID of the Managed Disk used as the Data Disk Image.
	ManagedDiskId string `pulumi:"managedDiskId"`
	// the State of the OS used in the Image, such as `Generalized`.
	OsState string `pulumi:"osState"`
	// the type of Operating System used on the OS Disk. such as `Linux` or `Windows`.
	OsType string `pulumi:"osType"`
	// the size of this Data Disk in GB.
	SizeGb int `pulumi:"sizeGb"`
}

// GetImageOsDiskInput is an input type that accepts GetImageOsDiskArgs and GetImageOsDiskOutput values.
// You can construct a concrete instance of `GetImageOsDiskInput` via:
//
// 		 GetImageOsDiskArgs{...}
//
type GetImageOsDiskInput interface {
	pulumi.Input

	ToGetImageOsDiskOutput() GetImageOsDiskOutput
	ToGetImageOsDiskOutputWithContext(context.Context) GetImageOsDiskOutput
}

type GetImageOsDiskArgs struct {
	// the URI in Azure storage of the blob used to create the image.
	BlobUri pulumi.StringInput `pulumi:"blobUri"`
	// the caching mode for the Data Disk, such as `ReadWrite`, `ReadOnly`, or `None`.
	Caching pulumi.StringInput `pulumi:"caching"`
	// the ID of the Managed Disk used as the Data Disk Image.
	ManagedDiskId pulumi.StringInput `pulumi:"managedDiskId"`
	// the State of the OS used in the Image, such as `Generalized`.
	OsState pulumi.StringInput `pulumi:"osState"`
	// the type of Operating System used on the OS Disk. such as `Linux` or `Windows`.
	OsType pulumi.StringInput `pulumi:"osType"`
	// the size of this Data Disk in GB.
	SizeGb pulumi.IntInput `pulumi:"sizeGb"`
}

func (GetImageOsDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageOsDisk)(nil)).Elem()
}

func (i GetImageOsDiskArgs) ToGetImageOsDiskOutput() GetImageOsDiskOutput {
	return i.ToGetImageOsDiskOutputWithContext(context.Background())
}

func (i GetImageOsDiskArgs) ToGetImageOsDiskOutputWithContext(ctx context.Context) GetImageOsDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageOsDiskOutput)
}

// GetImageOsDiskArrayInput is an input type that accepts GetImageOsDiskArray and GetImageOsDiskArrayOutput values.
// You can construct a concrete instance of `GetImageOsDiskArrayInput` via:
//
// 		 GetImageOsDiskArray{ GetImageOsDiskArgs{...} }
//
type GetImageOsDiskArrayInput interface {
	pulumi.Input

	ToGetImageOsDiskArrayOutput() GetImageOsDiskArrayOutput
	ToGetImageOsDiskArrayOutputWithContext(context.Context) GetImageOsDiskArrayOutput
}

type GetImageOsDiskArray []GetImageOsDiskInput

func (GetImageOsDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageOsDisk)(nil)).Elem()
}

func (i GetImageOsDiskArray) ToGetImageOsDiskArrayOutput() GetImageOsDiskArrayOutput {
	return i.ToGetImageOsDiskArrayOutputWithContext(context.Background())
}

func (i GetImageOsDiskArray) ToGetImageOsDiskArrayOutputWithContext(ctx context.Context) GetImageOsDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageOsDiskArrayOutput)
}

type GetImageOsDiskOutput struct{ *pulumi.OutputState }

func (GetImageOsDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageOsDisk)(nil)).Elem()
}

func (o GetImageOsDiskOutput) ToGetImageOsDiskOutput() GetImageOsDiskOutput {
	return o
}

func (o GetImageOsDiskOutput) ToGetImageOsDiskOutputWithContext(ctx context.Context) GetImageOsDiskOutput {
	return o
}

// the URI in Azure storage of the blob used to create the image.
func (o GetImageOsDiskOutput) BlobUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageOsDisk) string { return v.BlobUri }).(pulumi.StringOutput)
}

// the caching mode for the Data Disk, such as `ReadWrite`, `ReadOnly`, or `None`.
func (o GetImageOsDiskOutput) Caching() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageOsDisk) string { return v.Caching }).(pulumi.StringOutput)
}

// the ID of the Managed Disk used as the Data Disk Image.
func (o GetImageOsDiskOutput) ManagedDiskId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageOsDisk) string { return v.ManagedDiskId }).(pulumi.StringOutput)
}

// the State of the OS used in the Image, such as `Generalized`.
func (o GetImageOsDiskOutput) OsState() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageOsDisk) string { return v.OsState }).(pulumi.StringOutput)
}

// the type of Operating System used on the OS Disk. such as `Linux` or `Windows`.
func (o GetImageOsDiskOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageOsDisk) string { return v.OsType }).(pulumi.StringOutput)
}

// the size of this Data Disk in GB.
func (o GetImageOsDiskOutput) SizeGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetImageOsDisk) int { return v.SizeGb }).(pulumi.IntOutput)
}

type GetImageOsDiskArrayOutput struct{ *pulumi.OutputState }

func (GetImageOsDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageOsDisk)(nil)).Elem()
}

func (o GetImageOsDiskArrayOutput) ToGetImageOsDiskArrayOutput() GetImageOsDiskArrayOutput {
	return o
}

func (o GetImageOsDiskArrayOutput) ToGetImageOsDiskArrayOutputWithContext(ctx context.Context) GetImageOsDiskArrayOutput {
	return o
}

func (o GetImageOsDiskArrayOutput) Index(i pulumi.IntInput) GetImageOsDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageOsDisk {
		return vs[0].([]GetImageOsDisk)[vs[1].(int)]
	}).(GetImageOsDiskOutput)
}

type GetSharedImageIdentifier struct {
	// The Offer Name for this Shared Image.
	Offer string `pulumi:"offer"`
	// The Publisher Name for this Gallery Image.
	Publisher string `pulumi:"publisher"`
	// The Name of the SKU for this Gallery Image.
	Sku string `pulumi:"sku"`
}

// GetSharedImageIdentifierInput is an input type that accepts GetSharedImageIdentifierArgs and GetSharedImageIdentifierOutput values.
// You can construct a concrete instance of `GetSharedImageIdentifierInput` via:
//
// 		 GetSharedImageIdentifierArgs{...}
//
type GetSharedImageIdentifierInput interface {
	pulumi.Input

	ToGetSharedImageIdentifierOutput() GetSharedImageIdentifierOutput
	ToGetSharedImageIdentifierOutputWithContext(context.Context) GetSharedImageIdentifierOutput
}

type GetSharedImageIdentifierArgs struct {
	// The Offer Name for this Shared Image.
	Offer pulumi.StringInput `pulumi:"offer"`
	// The Publisher Name for this Gallery Image.
	Publisher pulumi.StringInput `pulumi:"publisher"`
	// The Name of the SKU for this Gallery Image.
	Sku pulumi.StringInput `pulumi:"sku"`
}

func (GetSharedImageIdentifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSharedImageIdentifier)(nil)).Elem()
}

func (i GetSharedImageIdentifierArgs) ToGetSharedImageIdentifierOutput() GetSharedImageIdentifierOutput {
	return i.ToGetSharedImageIdentifierOutputWithContext(context.Background())
}

func (i GetSharedImageIdentifierArgs) ToGetSharedImageIdentifierOutputWithContext(ctx context.Context) GetSharedImageIdentifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSharedImageIdentifierOutput)
}

// GetSharedImageIdentifierArrayInput is an input type that accepts GetSharedImageIdentifierArray and GetSharedImageIdentifierArrayOutput values.
// You can construct a concrete instance of `GetSharedImageIdentifierArrayInput` via:
//
// 		 GetSharedImageIdentifierArray{ GetSharedImageIdentifierArgs{...} }
//
type GetSharedImageIdentifierArrayInput interface {
	pulumi.Input

	ToGetSharedImageIdentifierArrayOutput() GetSharedImageIdentifierArrayOutput
	ToGetSharedImageIdentifierArrayOutputWithContext(context.Context) GetSharedImageIdentifierArrayOutput
}

type GetSharedImageIdentifierArray []GetSharedImageIdentifierInput

func (GetSharedImageIdentifierArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSharedImageIdentifier)(nil)).Elem()
}

func (i GetSharedImageIdentifierArray) ToGetSharedImageIdentifierArrayOutput() GetSharedImageIdentifierArrayOutput {
	return i.ToGetSharedImageIdentifierArrayOutputWithContext(context.Background())
}

func (i GetSharedImageIdentifierArray) ToGetSharedImageIdentifierArrayOutputWithContext(ctx context.Context) GetSharedImageIdentifierArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSharedImageIdentifierArrayOutput)
}

type GetSharedImageIdentifierOutput struct{ *pulumi.OutputState }

func (GetSharedImageIdentifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSharedImageIdentifier)(nil)).Elem()
}

func (o GetSharedImageIdentifierOutput) ToGetSharedImageIdentifierOutput() GetSharedImageIdentifierOutput {
	return o
}

func (o GetSharedImageIdentifierOutput) ToGetSharedImageIdentifierOutputWithContext(ctx context.Context) GetSharedImageIdentifierOutput {
	return o
}

// The Offer Name for this Shared Image.
func (o GetSharedImageIdentifierOutput) Offer() pulumi.StringOutput {
	return o.ApplyT(func(v GetSharedImageIdentifier) string { return v.Offer }).(pulumi.StringOutput)
}

// The Publisher Name for this Gallery Image.
func (o GetSharedImageIdentifierOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v GetSharedImageIdentifier) string { return v.Publisher }).(pulumi.StringOutput)
}

// The Name of the SKU for this Gallery Image.
func (o GetSharedImageIdentifierOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v GetSharedImageIdentifier) string { return v.Sku }).(pulumi.StringOutput)
}

type GetSharedImageIdentifierArrayOutput struct{ *pulumi.OutputState }

func (GetSharedImageIdentifierArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSharedImageIdentifier)(nil)).Elem()
}

func (o GetSharedImageIdentifierArrayOutput) ToGetSharedImageIdentifierArrayOutput() GetSharedImageIdentifierArrayOutput {
	return o
}

func (o GetSharedImageIdentifierArrayOutput) ToGetSharedImageIdentifierArrayOutputWithContext(ctx context.Context) GetSharedImageIdentifierArrayOutput {
	return o
}

func (o GetSharedImageIdentifierArrayOutput) Index(i pulumi.IntInput) GetSharedImageIdentifierOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSharedImageIdentifier {
		return vs[0].([]GetSharedImageIdentifier)[vs[1].(int)]
	}).(GetSharedImageIdentifierOutput)
}

type GetSharedImageVersionTargetRegion struct {
	// The name of the Image Version.
	Name string `pulumi:"name"`
	// The number of replicas of the Image Version to be created per region.
	RegionalReplicaCount int `pulumi:"regionalReplicaCount"`
	// The storage account type for the image version.
	StorageAccountType string `pulumi:"storageAccountType"`
}

// GetSharedImageVersionTargetRegionInput is an input type that accepts GetSharedImageVersionTargetRegionArgs and GetSharedImageVersionTargetRegionOutput values.
// You can construct a concrete instance of `GetSharedImageVersionTargetRegionInput` via:
//
// 		 GetSharedImageVersionTargetRegionArgs{...}
//
type GetSharedImageVersionTargetRegionInput interface {
	pulumi.Input

	ToGetSharedImageVersionTargetRegionOutput() GetSharedImageVersionTargetRegionOutput
	ToGetSharedImageVersionTargetRegionOutputWithContext(context.Context) GetSharedImageVersionTargetRegionOutput
}

type GetSharedImageVersionTargetRegionArgs struct {
	// The name of the Image Version.
	Name pulumi.StringInput `pulumi:"name"`
	// The number of replicas of the Image Version to be created per region.
	RegionalReplicaCount pulumi.IntInput `pulumi:"regionalReplicaCount"`
	// The storage account type for the image version.
	StorageAccountType pulumi.StringInput `pulumi:"storageAccountType"`
}

func (GetSharedImageVersionTargetRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSharedImageVersionTargetRegion)(nil)).Elem()
}

func (i GetSharedImageVersionTargetRegionArgs) ToGetSharedImageVersionTargetRegionOutput() GetSharedImageVersionTargetRegionOutput {
	return i.ToGetSharedImageVersionTargetRegionOutputWithContext(context.Background())
}

func (i GetSharedImageVersionTargetRegionArgs) ToGetSharedImageVersionTargetRegionOutputWithContext(ctx context.Context) GetSharedImageVersionTargetRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSharedImageVersionTargetRegionOutput)
}

// GetSharedImageVersionTargetRegionArrayInput is an input type that accepts GetSharedImageVersionTargetRegionArray and GetSharedImageVersionTargetRegionArrayOutput values.
// You can construct a concrete instance of `GetSharedImageVersionTargetRegionArrayInput` via:
//
// 		 GetSharedImageVersionTargetRegionArray{ GetSharedImageVersionTargetRegionArgs{...} }
//
type GetSharedImageVersionTargetRegionArrayInput interface {
	pulumi.Input

	ToGetSharedImageVersionTargetRegionArrayOutput() GetSharedImageVersionTargetRegionArrayOutput
	ToGetSharedImageVersionTargetRegionArrayOutputWithContext(context.Context) GetSharedImageVersionTargetRegionArrayOutput
}

type GetSharedImageVersionTargetRegionArray []GetSharedImageVersionTargetRegionInput

func (GetSharedImageVersionTargetRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSharedImageVersionTargetRegion)(nil)).Elem()
}

func (i GetSharedImageVersionTargetRegionArray) ToGetSharedImageVersionTargetRegionArrayOutput() GetSharedImageVersionTargetRegionArrayOutput {
	return i.ToGetSharedImageVersionTargetRegionArrayOutputWithContext(context.Background())
}

func (i GetSharedImageVersionTargetRegionArray) ToGetSharedImageVersionTargetRegionArrayOutputWithContext(ctx context.Context) GetSharedImageVersionTargetRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSharedImageVersionTargetRegionArrayOutput)
}

type GetSharedImageVersionTargetRegionOutput struct{ *pulumi.OutputState }

func (GetSharedImageVersionTargetRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSharedImageVersionTargetRegion)(nil)).Elem()
}

func (o GetSharedImageVersionTargetRegionOutput) ToGetSharedImageVersionTargetRegionOutput() GetSharedImageVersionTargetRegionOutput {
	return o
}

func (o GetSharedImageVersionTargetRegionOutput) ToGetSharedImageVersionTargetRegionOutputWithContext(ctx context.Context) GetSharedImageVersionTargetRegionOutput {
	return o
}

// The name of the Image Version.
func (o GetSharedImageVersionTargetRegionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSharedImageVersionTargetRegion) string { return v.Name }).(pulumi.StringOutput)
}

// The number of replicas of the Image Version to be created per region.
func (o GetSharedImageVersionTargetRegionOutput) RegionalReplicaCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetSharedImageVersionTargetRegion) int { return v.RegionalReplicaCount }).(pulumi.IntOutput)
}

// The storage account type for the image version.
func (o GetSharedImageVersionTargetRegionOutput) StorageAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSharedImageVersionTargetRegion) string { return v.StorageAccountType }).(pulumi.StringOutput)
}

type GetSharedImageVersionTargetRegionArrayOutput struct{ *pulumi.OutputState }

func (GetSharedImageVersionTargetRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSharedImageVersionTargetRegion)(nil)).Elem()
}

func (o GetSharedImageVersionTargetRegionArrayOutput) ToGetSharedImageVersionTargetRegionArrayOutput() GetSharedImageVersionTargetRegionArrayOutput {
	return o
}

func (o GetSharedImageVersionTargetRegionArrayOutput) ToGetSharedImageVersionTargetRegionArrayOutputWithContext(ctx context.Context) GetSharedImageVersionTargetRegionArrayOutput {
	return o
}

func (o GetSharedImageVersionTargetRegionArrayOutput) Index(i pulumi.IntInput) GetSharedImageVersionTargetRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSharedImageVersionTargetRegion {
		return vs[0].([]GetSharedImageVersionTargetRegion)[vs[1].(int)]
	}).(GetSharedImageVersionTargetRegionOutput)
}

type GetSharedImageVersionsImage struct {
	// Is this Image Version excluded from the `latest` filter?
	ExcludeFromLatest bool `pulumi:"excludeFromLatest"`
	// The supported Azure location where the Shared Image Gallery exists.
	Location string `pulumi:"location"`
	// The ID of the Managed Image which was the source of this Shared Image Version.
	ManagedImageId string `pulumi:"managedImageId"`
	// The Azure Region in which this Image Version exists.
	Name string `pulumi:"name"`
	// A mapping of tags assigned to the Shared Image.
	Tags map[string]string `pulumi:"tags"`
	// One or more `targetRegion` blocks as documented below.
	TargetRegions []GetSharedImageVersionsImageTargetRegion `pulumi:"targetRegions"`
}

// GetSharedImageVersionsImageInput is an input type that accepts GetSharedImageVersionsImageArgs and GetSharedImageVersionsImageOutput values.
// You can construct a concrete instance of `GetSharedImageVersionsImageInput` via:
//
// 		 GetSharedImageVersionsImageArgs{...}
//
type GetSharedImageVersionsImageInput interface {
	pulumi.Input

	ToGetSharedImageVersionsImageOutput() GetSharedImageVersionsImageOutput
	ToGetSharedImageVersionsImageOutputWithContext(context.Context) GetSharedImageVersionsImageOutput
}

type GetSharedImageVersionsImageArgs struct {
	// Is this Image Version excluded from the `latest` filter?
	ExcludeFromLatest pulumi.BoolInput `pulumi:"excludeFromLatest"`
	// The supported Azure location where the Shared Image Gallery exists.
	Location pulumi.StringInput `pulumi:"location"`
	// The ID of the Managed Image which was the source of this Shared Image Version.
	ManagedImageId pulumi.StringInput `pulumi:"managedImageId"`
	// The Azure Region in which this Image Version exists.
	Name pulumi.StringInput `pulumi:"name"`
	// A mapping of tags assigned to the Shared Image.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// One or more `targetRegion` blocks as documented below.
	TargetRegions GetSharedImageVersionsImageTargetRegionArrayInput `pulumi:"targetRegions"`
}

func (GetSharedImageVersionsImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSharedImageVersionsImage)(nil)).Elem()
}

func (i GetSharedImageVersionsImageArgs) ToGetSharedImageVersionsImageOutput() GetSharedImageVersionsImageOutput {
	return i.ToGetSharedImageVersionsImageOutputWithContext(context.Background())
}

func (i GetSharedImageVersionsImageArgs) ToGetSharedImageVersionsImageOutputWithContext(ctx context.Context) GetSharedImageVersionsImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSharedImageVersionsImageOutput)
}

// GetSharedImageVersionsImageArrayInput is an input type that accepts GetSharedImageVersionsImageArray and GetSharedImageVersionsImageArrayOutput values.
// You can construct a concrete instance of `GetSharedImageVersionsImageArrayInput` via:
//
// 		 GetSharedImageVersionsImageArray{ GetSharedImageVersionsImageArgs{...} }
//
type GetSharedImageVersionsImageArrayInput interface {
	pulumi.Input

	ToGetSharedImageVersionsImageArrayOutput() GetSharedImageVersionsImageArrayOutput
	ToGetSharedImageVersionsImageArrayOutputWithContext(context.Context) GetSharedImageVersionsImageArrayOutput
}

type GetSharedImageVersionsImageArray []GetSharedImageVersionsImageInput

func (GetSharedImageVersionsImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSharedImageVersionsImage)(nil)).Elem()
}

func (i GetSharedImageVersionsImageArray) ToGetSharedImageVersionsImageArrayOutput() GetSharedImageVersionsImageArrayOutput {
	return i.ToGetSharedImageVersionsImageArrayOutputWithContext(context.Background())
}

func (i GetSharedImageVersionsImageArray) ToGetSharedImageVersionsImageArrayOutputWithContext(ctx context.Context) GetSharedImageVersionsImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSharedImageVersionsImageArrayOutput)
}

type GetSharedImageVersionsImageOutput struct{ *pulumi.OutputState }

func (GetSharedImageVersionsImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSharedImageVersionsImage)(nil)).Elem()
}

func (o GetSharedImageVersionsImageOutput) ToGetSharedImageVersionsImageOutput() GetSharedImageVersionsImageOutput {
	return o
}

func (o GetSharedImageVersionsImageOutput) ToGetSharedImageVersionsImageOutputWithContext(ctx context.Context) GetSharedImageVersionsImageOutput {
	return o
}

// Is this Image Version excluded from the `latest` filter?
func (o GetSharedImageVersionsImageOutput) ExcludeFromLatest() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSharedImageVersionsImage) bool { return v.ExcludeFromLatest }).(pulumi.BoolOutput)
}

// The supported Azure location where the Shared Image Gallery exists.
func (o GetSharedImageVersionsImageOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetSharedImageVersionsImage) string { return v.Location }).(pulumi.StringOutput)
}

// The ID of the Managed Image which was the source of this Shared Image Version.
func (o GetSharedImageVersionsImageOutput) ManagedImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSharedImageVersionsImage) string { return v.ManagedImageId }).(pulumi.StringOutput)
}

// The Azure Region in which this Image Version exists.
func (o GetSharedImageVersionsImageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSharedImageVersionsImage) string { return v.Name }).(pulumi.StringOutput)
}

// A mapping of tags assigned to the Shared Image.
func (o GetSharedImageVersionsImageOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSharedImageVersionsImage) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// One or more `targetRegion` blocks as documented below.
func (o GetSharedImageVersionsImageOutput) TargetRegions() GetSharedImageVersionsImageTargetRegionArrayOutput {
	return o.ApplyT(func(v GetSharedImageVersionsImage) []GetSharedImageVersionsImageTargetRegion { return v.TargetRegions }).(GetSharedImageVersionsImageTargetRegionArrayOutput)
}

type GetSharedImageVersionsImageArrayOutput struct{ *pulumi.OutputState }

func (GetSharedImageVersionsImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSharedImageVersionsImage)(nil)).Elem()
}

func (o GetSharedImageVersionsImageArrayOutput) ToGetSharedImageVersionsImageArrayOutput() GetSharedImageVersionsImageArrayOutput {
	return o
}

func (o GetSharedImageVersionsImageArrayOutput) ToGetSharedImageVersionsImageArrayOutputWithContext(ctx context.Context) GetSharedImageVersionsImageArrayOutput {
	return o
}

func (o GetSharedImageVersionsImageArrayOutput) Index(i pulumi.IntInput) GetSharedImageVersionsImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSharedImageVersionsImage {
		return vs[0].([]GetSharedImageVersionsImage)[vs[1].(int)]
	}).(GetSharedImageVersionsImageOutput)
}

type GetSharedImageVersionsImageTargetRegion struct {
	// The Azure Region in which this Image Version exists.
	Name string `pulumi:"name"`
	// The number of replicas of the Image Version to be created per region.
	RegionalReplicaCount int `pulumi:"regionalReplicaCount"`
	// The storage account type for the image version.
	StorageAccountType string `pulumi:"storageAccountType"`
}

// GetSharedImageVersionsImageTargetRegionInput is an input type that accepts GetSharedImageVersionsImageTargetRegionArgs and GetSharedImageVersionsImageTargetRegionOutput values.
// You can construct a concrete instance of `GetSharedImageVersionsImageTargetRegionInput` via:
//
// 		 GetSharedImageVersionsImageTargetRegionArgs{...}
//
type GetSharedImageVersionsImageTargetRegionInput interface {
	pulumi.Input

	ToGetSharedImageVersionsImageTargetRegionOutput() GetSharedImageVersionsImageTargetRegionOutput
	ToGetSharedImageVersionsImageTargetRegionOutputWithContext(context.Context) GetSharedImageVersionsImageTargetRegionOutput
}

type GetSharedImageVersionsImageTargetRegionArgs struct {
	// The Azure Region in which this Image Version exists.
	Name pulumi.StringInput `pulumi:"name"`
	// The number of replicas of the Image Version to be created per region.
	RegionalReplicaCount pulumi.IntInput `pulumi:"regionalReplicaCount"`
	// The storage account type for the image version.
	StorageAccountType pulumi.StringInput `pulumi:"storageAccountType"`
}

func (GetSharedImageVersionsImageTargetRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSharedImageVersionsImageTargetRegion)(nil)).Elem()
}

func (i GetSharedImageVersionsImageTargetRegionArgs) ToGetSharedImageVersionsImageTargetRegionOutput() GetSharedImageVersionsImageTargetRegionOutput {
	return i.ToGetSharedImageVersionsImageTargetRegionOutputWithContext(context.Background())
}

func (i GetSharedImageVersionsImageTargetRegionArgs) ToGetSharedImageVersionsImageTargetRegionOutputWithContext(ctx context.Context) GetSharedImageVersionsImageTargetRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSharedImageVersionsImageTargetRegionOutput)
}

// GetSharedImageVersionsImageTargetRegionArrayInput is an input type that accepts GetSharedImageVersionsImageTargetRegionArray and GetSharedImageVersionsImageTargetRegionArrayOutput values.
// You can construct a concrete instance of `GetSharedImageVersionsImageTargetRegionArrayInput` via:
//
// 		 GetSharedImageVersionsImageTargetRegionArray{ GetSharedImageVersionsImageTargetRegionArgs{...} }
//
type GetSharedImageVersionsImageTargetRegionArrayInput interface {
	pulumi.Input

	ToGetSharedImageVersionsImageTargetRegionArrayOutput() GetSharedImageVersionsImageTargetRegionArrayOutput
	ToGetSharedImageVersionsImageTargetRegionArrayOutputWithContext(context.Context) GetSharedImageVersionsImageTargetRegionArrayOutput
}

type GetSharedImageVersionsImageTargetRegionArray []GetSharedImageVersionsImageTargetRegionInput

func (GetSharedImageVersionsImageTargetRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSharedImageVersionsImageTargetRegion)(nil)).Elem()
}

func (i GetSharedImageVersionsImageTargetRegionArray) ToGetSharedImageVersionsImageTargetRegionArrayOutput() GetSharedImageVersionsImageTargetRegionArrayOutput {
	return i.ToGetSharedImageVersionsImageTargetRegionArrayOutputWithContext(context.Background())
}

func (i GetSharedImageVersionsImageTargetRegionArray) ToGetSharedImageVersionsImageTargetRegionArrayOutputWithContext(ctx context.Context) GetSharedImageVersionsImageTargetRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSharedImageVersionsImageTargetRegionArrayOutput)
}

type GetSharedImageVersionsImageTargetRegionOutput struct{ *pulumi.OutputState }

func (GetSharedImageVersionsImageTargetRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSharedImageVersionsImageTargetRegion)(nil)).Elem()
}

func (o GetSharedImageVersionsImageTargetRegionOutput) ToGetSharedImageVersionsImageTargetRegionOutput() GetSharedImageVersionsImageTargetRegionOutput {
	return o
}

func (o GetSharedImageVersionsImageTargetRegionOutput) ToGetSharedImageVersionsImageTargetRegionOutputWithContext(ctx context.Context) GetSharedImageVersionsImageTargetRegionOutput {
	return o
}

// The Azure Region in which this Image Version exists.
func (o GetSharedImageVersionsImageTargetRegionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSharedImageVersionsImageTargetRegion) string { return v.Name }).(pulumi.StringOutput)
}

// The number of replicas of the Image Version to be created per region.
func (o GetSharedImageVersionsImageTargetRegionOutput) RegionalReplicaCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetSharedImageVersionsImageTargetRegion) int { return v.RegionalReplicaCount }).(pulumi.IntOutput)
}

// The storage account type for the image version.
func (o GetSharedImageVersionsImageTargetRegionOutput) StorageAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSharedImageVersionsImageTargetRegion) string { return v.StorageAccountType }).(pulumi.StringOutput)
}

type GetSharedImageVersionsImageTargetRegionArrayOutput struct{ *pulumi.OutputState }

func (GetSharedImageVersionsImageTargetRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSharedImageVersionsImageTargetRegion)(nil)).Elem()
}

func (o GetSharedImageVersionsImageTargetRegionArrayOutput) ToGetSharedImageVersionsImageTargetRegionArrayOutput() GetSharedImageVersionsImageTargetRegionArrayOutput {
	return o
}

func (o GetSharedImageVersionsImageTargetRegionArrayOutput) ToGetSharedImageVersionsImageTargetRegionArrayOutputWithContext(ctx context.Context) GetSharedImageVersionsImageTargetRegionArrayOutput {
	return o
}

func (o GetSharedImageVersionsImageTargetRegionArrayOutput) Index(i pulumi.IntInput) GetSharedImageVersionsImageTargetRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSharedImageVersionsImageTargetRegion {
		return vs[0].([]GetSharedImageVersionsImageTargetRegion)[vs[1].(int)]
	}).(GetSharedImageVersionsImageTargetRegionOutput)
}

type GetSnapshotEncryptionSetting struct {
	DiskEncryptionKeys []GetSnapshotEncryptionSettingDiskEncryptionKey `pulumi:"diskEncryptionKeys"`
	Enabled            bool                                            `pulumi:"enabled"`
	KeyEncryptionKeys  []GetSnapshotEncryptionSettingKeyEncryptionKey  `pulumi:"keyEncryptionKeys"`
}

// GetSnapshotEncryptionSettingInput is an input type that accepts GetSnapshotEncryptionSettingArgs and GetSnapshotEncryptionSettingOutput values.
// You can construct a concrete instance of `GetSnapshotEncryptionSettingInput` via:
//
// 		 GetSnapshotEncryptionSettingArgs{...}
//
type GetSnapshotEncryptionSettingInput interface {
	pulumi.Input

	ToGetSnapshotEncryptionSettingOutput() GetSnapshotEncryptionSettingOutput
	ToGetSnapshotEncryptionSettingOutputWithContext(context.Context) GetSnapshotEncryptionSettingOutput
}

type GetSnapshotEncryptionSettingArgs struct {
	DiskEncryptionKeys GetSnapshotEncryptionSettingDiskEncryptionKeyArrayInput `pulumi:"diskEncryptionKeys"`
	Enabled            pulumi.BoolInput                                        `pulumi:"enabled"`
	KeyEncryptionKeys  GetSnapshotEncryptionSettingKeyEncryptionKeyArrayInput  `pulumi:"keyEncryptionKeys"`
}

func (GetSnapshotEncryptionSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotEncryptionSetting)(nil)).Elem()
}

func (i GetSnapshotEncryptionSettingArgs) ToGetSnapshotEncryptionSettingOutput() GetSnapshotEncryptionSettingOutput {
	return i.ToGetSnapshotEncryptionSettingOutputWithContext(context.Background())
}

func (i GetSnapshotEncryptionSettingArgs) ToGetSnapshotEncryptionSettingOutputWithContext(ctx context.Context) GetSnapshotEncryptionSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotEncryptionSettingOutput)
}

// GetSnapshotEncryptionSettingArrayInput is an input type that accepts GetSnapshotEncryptionSettingArray and GetSnapshotEncryptionSettingArrayOutput values.
// You can construct a concrete instance of `GetSnapshotEncryptionSettingArrayInput` via:
//
// 		 GetSnapshotEncryptionSettingArray{ GetSnapshotEncryptionSettingArgs{...} }
//
type GetSnapshotEncryptionSettingArrayInput interface {
	pulumi.Input

	ToGetSnapshotEncryptionSettingArrayOutput() GetSnapshotEncryptionSettingArrayOutput
	ToGetSnapshotEncryptionSettingArrayOutputWithContext(context.Context) GetSnapshotEncryptionSettingArrayOutput
}

type GetSnapshotEncryptionSettingArray []GetSnapshotEncryptionSettingInput

func (GetSnapshotEncryptionSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotEncryptionSetting)(nil)).Elem()
}

func (i GetSnapshotEncryptionSettingArray) ToGetSnapshotEncryptionSettingArrayOutput() GetSnapshotEncryptionSettingArrayOutput {
	return i.ToGetSnapshotEncryptionSettingArrayOutputWithContext(context.Background())
}

func (i GetSnapshotEncryptionSettingArray) ToGetSnapshotEncryptionSettingArrayOutputWithContext(ctx context.Context) GetSnapshotEncryptionSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotEncryptionSettingArrayOutput)
}

type GetSnapshotEncryptionSettingOutput struct{ *pulumi.OutputState }

func (GetSnapshotEncryptionSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotEncryptionSetting)(nil)).Elem()
}

func (o GetSnapshotEncryptionSettingOutput) ToGetSnapshotEncryptionSettingOutput() GetSnapshotEncryptionSettingOutput {
	return o
}

func (o GetSnapshotEncryptionSettingOutput) ToGetSnapshotEncryptionSettingOutputWithContext(ctx context.Context) GetSnapshotEncryptionSettingOutput {
	return o
}

func (o GetSnapshotEncryptionSettingOutput) DiskEncryptionKeys() GetSnapshotEncryptionSettingDiskEncryptionKeyArrayOutput {
	return o.ApplyT(func(v GetSnapshotEncryptionSetting) []GetSnapshotEncryptionSettingDiskEncryptionKey {
		return v.DiskEncryptionKeys
	}).(GetSnapshotEncryptionSettingDiskEncryptionKeyArrayOutput)
}

func (o GetSnapshotEncryptionSettingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSnapshotEncryptionSetting) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetSnapshotEncryptionSettingOutput) KeyEncryptionKeys() GetSnapshotEncryptionSettingKeyEncryptionKeyArrayOutput {
	return o.ApplyT(func(v GetSnapshotEncryptionSetting) []GetSnapshotEncryptionSettingKeyEncryptionKey {
		return v.KeyEncryptionKeys
	}).(GetSnapshotEncryptionSettingKeyEncryptionKeyArrayOutput)
}

type GetSnapshotEncryptionSettingArrayOutput struct{ *pulumi.OutputState }

func (GetSnapshotEncryptionSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotEncryptionSetting)(nil)).Elem()
}

func (o GetSnapshotEncryptionSettingArrayOutput) ToGetSnapshotEncryptionSettingArrayOutput() GetSnapshotEncryptionSettingArrayOutput {
	return o
}

func (o GetSnapshotEncryptionSettingArrayOutput) ToGetSnapshotEncryptionSettingArrayOutputWithContext(ctx context.Context) GetSnapshotEncryptionSettingArrayOutput {
	return o
}

func (o GetSnapshotEncryptionSettingArrayOutput) Index(i pulumi.IntInput) GetSnapshotEncryptionSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSnapshotEncryptionSetting {
		return vs[0].([]GetSnapshotEncryptionSetting)[vs[1].(int)]
	}).(GetSnapshotEncryptionSettingOutput)
}

type GetSnapshotEncryptionSettingDiskEncryptionKey struct {
	SecretUrl     string `pulumi:"secretUrl"`
	SourceVaultId string `pulumi:"sourceVaultId"`
}

// GetSnapshotEncryptionSettingDiskEncryptionKeyInput is an input type that accepts GetSnapshotEncryptionSettingDiskEncryptionKeyArgs and GetSnapshotEncryptionSettingDiskEncryptionKeyOutput values.
// You can construct a concrete instance of `GetSnapshotEncryptionSettingDiskEncryptionKeyInput` via:
//
// 		 GetSnapshotEncryptionSettingDiskEncryptionKeyArgs{...}
//
type GetSnapshotEncryptionSettingDiskEncryptionKeyInput interface {
	pulumi.Input

	ToGetSnapshotEncryptionSettingDiskEncryptionKeyOutput() GetSnapshotEncryptionSettingDiskEncryptionKeyOutput
	ToGetSnapshotEncryptionSettingDiskEncryptionKeyOutputWithContext(context.Context) GetSnapshotEncryptionSettingDiskEncryptionKeyOutput
}

type GetSnapshotEncryptionSettingDiskEncryptionKeyArgs struct {
	SecretUrl     pulumi.StringInput `pulumi:"secretUrl"`
	SourceVaultId pulumi.StringInput `pulumi:"sourceVaultId"`
}

func (GetSnapshotEncryptionSettingDiskEncryptionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotEncryptionSettingDiskEncryptionKey)(nil)).Elem()
}

func (i GetSnapshotEncryptionSettingDiskEncryptionKeyArgs) ToGetSnapshotEncryptionSettingDiskEncryptionKeyOutput() GetSnapshotEncryptionSettingDiskEncryptionKeyOutput {
	return i.ToGetSnapshotEncryptionSettingDiskEncryptionKeyOutputWithContext(context.Background())
}

func (i GetSnapshotEncryptionSettingDiskEncryptionKeyArgs) ToGetSnapshotEncryptionSettingDiskEncryptionKeyOutputWithContext(ctx context.Context) GetSnapshotEncryptionSettingDiskEncryptionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotEncryptionSettingDiskEncryptionKeyOutput)
}

// GetSnapshotEncryptionSettingDiskEncryptionKeyArrayInput is an input type that accepts GetSnapshotEncryptionSettingDiskEncryptionKeyArray and GetSnapshotEncryptionSettingDiskEncryptionKeyArrayOutput values.
// You can construct a concrete instance of `GetSnapshotEncryptionSettingDiskEncryptionKeyArrayInput` via:
//
// 		 GetSnapshotEncryptionSettingDiskEncryptionKeyArray{ GetSnapshotEncryptionSettingDiskEncryptionKeyArgs{...} }
//
type GetSnapshotEncryptionSettingDiskEncryptionKeyArrayInput interface {
	pulumi.Input

	ToGetSnapshotEncryptionSettingDiskEncryptionKeyArrayOutput() GetSnapshotEncryptionSettingDiskEncryptionKeyArrayOutput
	ToGetSnapshotEncryptionSettingDiskEncryptionKeyArrayOutputWithContext(context.Context) GetSnapshotEncryptionSettingDiskEncryptionKeyArrayOutput
}

type GetSnapshotEncryptionSettingDiskEncryptionKeyArray []GetSnapshotEncryptionSettingDiskEncryptionKeyInput

func (GetSnapshotEncryptionSettingDiskEncryptionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotEncryptionSettingDiskEncryptionKey)(nil)).Elem()
}

func (i GetSnapshotEncryptionSettingDiskEncryptionKeyArray) ToGetSnapshotEncryptionSettingDiskEncryptionKeyArrayOutput() GetSnapshotEncryptionSettingDiskEncryptionKeyArrayOutput {
	return i.ToGetSnapshotEncryptionSettingDiskEncryptionKeyArrayOutputWithContext(context.Background())
}

func (i GetSnapshotEncryptionSettingDiskEncryptionKeyArray) ToGetSnapshotEncryptionSettingDiskEncryptionKeyArrayOutputWithContext(ctx context.Context) GetSnapshotEncryptionSettingDiskEncryptionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotEncryptionSettingDiskEncryptionKeyArrayOutput)
}

type GetSnapshotEncryptionSettingDiskEncryptionKeyOutput struct{ *pulumi.OutputState }

func (GetSnapshotEncryptionSettingDiskEncryptionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotEncryptionSettingDiskEncryptionKey)(nil)).Elem()
}

func (o GetSnapshotEncryptionSettingDiskEncryptionKeyOutput) ToGetSnapshotEncryptionSettingDiskEncryptionKeyOutput() GetSnapshotEncryptionSettingDiskEncryptionKeyOutput {
	return o
}

func (o GetSnapshotEncryptionSettingDiskEncryptionKeyOutput) ToGetSnapshotEncryptionSettingDiskEncryptionKeyOutputWithContext(ctx context.Context) GetSnapshotEncryptionSettingDiskEncryptionKeyOutput {
	return o
}

func (o GetSnapshotEncryptionSettingDiskEncryptionKeyOutput) SecretUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotEncryptionSettingDiskEncryptionKey) string { return v.SecretUrl }).(pulumi.StringOutput)
}

func (o GetSnapshotEncryptionSettingDiskEncryptionKeyOutput) SourceVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotEncryptionSettingDiskEncryptionKey) string { return v.SourceVaultId }).(pulumi.StringOutput)
}

type GetSnapshotEncryptionSettingDiskEncryptionKeyArrayOutput struct{ *pulumi.OutputState }

func (GetSnapshotEncryptionSettingDiskEncryptionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotEncryptionSettingDiskEncryptionKey)(nil)).Elem()
}

func (o GetSnapshotEncryptionSettingDiskEncryptionKeyArrayOutput) ToGetSnapshotEncryptionSettingDiskEncryptionKeyArrayOutput() GetSnapshotEncryptionSettingDiskEncryptionKeyArrayOutput {
	return o
}

func (o GetSnapshotEncryptionSettingDiskEncryptionKeyArrayOutput) ToGetSnapshotEncryptionSettingDiskEncryptionKeyArrayOutputWithContext(ctx context.Context) GetSnapshotEncryptionSettingDiskEncryptionKeyArrayOutput {
	return o
}

func (o GetSnapshotEncryptionSettingDiskEncryptionKeyArrayOutput) Index(i pulumi.IntInput) GetSnapshotEncryptionSettingDiskEncryptionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSnapshotEncryptionSettingDiskEncryptionKey {
		return vs[0].([]GetSnapshotEncryptionSettingDiskEncryptionKey)[vs[1].(int)]
	}).(GetSnapshotEncryptionSettingDiskEncryptionKeyOutput)
}

type GetSnapshotEncryptionSettingKeyEncryptionKey struct {
	KeyUrl        string `pulumi:"keyUrl"`
	SourceVaultId string `pulumi:"sourceVaultId"`
}

// GetSnapshotEncryptionSettingKeyEncryptionKeyInput is an input type that accepts GetSnapshotEncryptionSettingKeyEncryptionKeyArgs and GetSnapshotEncryptionSettingKeyEncryptionKeyOutput values.
// You can construct a concrete instance of `GetSnapshotEncryptionSettingKeyEncryptionKeyInput` via:
//
// 		 GetSnapshotEncryptionSettingKeyEncryptionKeyArgs{...}
//
type GetSnapshotEncryptionSettingKeyEncryptionKeyInput interface {
	pulumi.Input

	ToGetSnapshotEncryptionSettingKeyEncryptionKeyOutput() GetSnapshotEncryptionSettingKeyEncryptionKeyOutput
	ToGetSnapshotEncryptionSettingKeyEncryptionKeyOutputWithContext(context.Context) GetSnapshotEncryptionSettingKeyEncryptionKeyOutput
}

type GetSnapshotEncryptionSettingKeyEncryptionKeyArgs struct {
	KeyUrl        pulumi.StringInput `pulumi:"keyUrl"`
	SourceVaultId pulumi.StringInput `pulumi:"sourceVaultId"`
}

func (GetSnapshotEncryptionSettingKeyEncryptionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotEncryptionSettingKeyEncryptionKey)(nil)).Elem()
}

func (i GetSnapshotEncryptionSettingKeyEncryptionKeyArgs) ToGetSnapshotEncryptionSettingKeyEncryptionKeyOutput() GetSnapshotEncryptionSettingKeyEncryptionKeyOutput {
	return i.ToGetSnapshotEncryptionSettingKeyEncryptionKeyOutputWithContext(context.Background())
}

func (i GetSnapshotEncryptionSettingKeyEncryptionKeyArgs) ToGetSnapshotEncryptionSettingKeyEncryptionKeyOutputWithContext(ctx context.Context) GetSnapshotEncryptionSettingKeyEncryptionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotEncryptionSettingKeyEncryptionKeyOutput)
}

// GetSnapshotEncryptionSettingKeyEncryptionKeyArrayInput is an input type that accepts GetSnapshotEncryptionSettingKeyEncryptionKeyArray and GetSnapshotEncryptionSettingKeyEncryptionKeyArrayOutput values.
// You can construct a concrete instance of `GetSnapshotEncryptionSettingKeyEncryptionKeyArrayInput` via:
//
// 		 GetSnapshotEncryptionSettingKeyEncryptionKeyArray{ GetSnapshotEncryptionSettingKeyEncryptionKeyArgs{...} }
//
type GetSnapshotEncryptionSettingKeyEncryptionKeyArrayInput interface {
	pulumi.Input

	ToGetSnapshotEncryptionSettingKeyEncryptionKeyArrayOutput() GetSnapshotEncryptionSettingKeyEncryptionKeyArrayOutput
	ToGetSnapshotEncryptionSettingKeyEncryptionKeyArrayOutputWithContext(context.Context) GetSnapshotEncryptionSettingKeyEncryptionKeyArrayOutput
}

type GetSnapshotEncryptionSettingKeyEncryptionKeyArray []GetSnapshotEncryptionSettingKeyEncryptionKeyInput

func (GetSnapshotEncryptionSettingKeyEncryptionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotEncryptionSettingKeyEncryptionKey)(nil)).Elem()
}

func (i GetSnapshotEncryptionSettingKeyEncryptionKeyArray) ToGetSnapshotEncryptionSettingKeyEncryptionKeyArrayOutput() GetSnapshotEncryptionSettingKeyEncryptionKeyArrayOutput {
	return i.ToGetSnapshotEncryptionSettingKeyEncryptionKeyArrayOutputWithContext(context.Background())
}

func (i GetSnapshotEncryptionSettingKeyEncryptionKeyArray) ToGetSnapshotEncryptionSettingKeyEncryptionKeyArrayOutputWithContext(ctx context.Context) GetSnapshotEncryptionSettingKeyEncryptionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSnapshotEncryptionSettingKeyEncryptionKeyArrayOutput)
}

type GetSnapshotEncryptionSettingKeyEncryptionKeyOutput struct{ *pulumi.OutputState }

func (GetSnapshotEncryptionSettingKeyEncryptionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSnapshotEncryptionSettingKeyEncryptionKey)(nil)).Elem()
}

func (o GetSnapshotEncryptionSettingKeyEncryptionKeyOutput) ToGetSnapshotEncryptionSettingKeyEncryptionKeyOutput() GetSnapshotEncryptionSettingKeyEncryptionKeyOutput {
	return o
}

func (o GetSnapshotEncryptionSettingKeyEncryptionKeyOutput) ToGetSnapshotEncryptionSettingKeyEncryptionKeyOutputWithContext(ctx context.Context) GetSnapshotEncryptionSettingKeyEncryptionKeyOutput {
	return o
}

func (o GetSnapshotEncryptionSettingKeyEncryptionKeyOutput) KeyUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotEncryptionSettingKeyEncryptionKey) string { return v.KeyUrl }).(pulumi.StringOutput)
}

func (o GetSnapshotEncryptionSettingKeyEncryptionKeyOutput) SourceVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSnapshotEncryptionSettingKeyEncryptionKey) string { return v.SourceVaultId }).(pulumi.StringOutput)
}

type GetSnapshotEncryptionSettingKeyEncryptionKeyArrayOutput struct{ *pulumi.OutputState }

func (GetSnapshotEncryptionSettingKeyEncryptionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSnapshotEncryptionSettingKeyEncryptionKey)(nil)).Elem()
}

func (o GetSnapshotEncryptionSettingKeyEncryptionKeyArrayOutput) ToGetSnapshotEncryptionSettingKeyEncryptionKeyArrayOutput() GetSnapshotEncryptionSettingKeyEncryptionKeyArrayOutput {
	return o
}

func (o GetSnapshotEncryptionSettingKeyEncryptionKeyArrayOutput) ToGetSnapshotEncryptionSettingKeyEncryptionKeyArrayOutputWithContext(ctx context.Context) GetSnapshotEncryptionSettingKeyEncryptionKeyArrayOutput {
	return o
}

func (o GetSnapshotEncryptionSettingKeyEncryptionKeyArrayOutput) Index(i pulumi.IntInput) GetSnapshotEncryptionSettingKeyEncryptionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSnapshotEncryptionSettingKeyEncryptionKey {
		return vs[0].([]GetSnapshotEncryptionSettingKeyEncryptionKey)[vs[1].(int)]
	}).(GetSnapshotEncryptionSettingKeyEncryptionKeyOutput)
}

type GetVirtualMachineIdentity struct {
	// The list of User Managed Identity ID's which are assigned to the Virtual Machine.
	IdentityIds []string `pulumi:"identityIds"`
	// The ID of the System Managed Service Principal assigned to the Virtual Machine.
	PrincipalId string `pulumi:"principalId"`
	// The ID of the Tenant of the System Managed Service Principal assigned to the Virtual Machine.
	TenantId string `pulumi:"tenantId"`
	// The identity type of the Managed Identity assigned to the Virtual Machine.
	Type string `pulumi:"type"`
}

// GetVirtualMachineIdentityInput is an input type that accepts GetVirtualMachineIdentityArgs and GetVirtualMachineIdentityOutput values.
// You can construct a concrete instance of `GetVirtualMachineIdentityInput` via:
//
// 		 GetVirtualMachineIdentityArgs{...}
//
type GetVirtualMachineIdentityInput interface {
	pulumi.Input

	ToGetVirtualMachineIdentityOutput() GetVirtualMachineIdentityOutput
	ToGetVirtualMachineIdentityOutputWithContext(context.Context) GetVirtualMachineIdentityOutput
}

type GetVirtualMachineIdentityArgs struct {
	// The list of User Managed Identity ID's which are assigned to the Virtual Machine.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The ID of the System Managed Service Principal assigned to the Virtual Machine.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The ID of the Tenant of the System Managed Service Principal assigned to the Virtual Machine.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The identity type of the Managed Identity assigned to the Virtual Machine.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetVirtualMachineIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualMachineIdentity)(nil)).Elem()
}

func (i GetVirtualMachineIdentityArgs) ToGetVirtualMachineIdentityOutput() GetVirtualMachineIdentityOutput {
	return i.ToGetVirtualMachineIdentityOutputWithContext(context.Background())
}

func (i GetVirtualMachineIdentityArgs) ToGetVirtualMachineIdentityOutputWithContext(ctx context.Context) GetVirtualMachineIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualMachineIdentityOutput)
}

// GetVirtualMachineIdentityArrayInput is an input type that accepts GetVirtualMachineIdentityArray and GetVirtualMachineIdentityArrayOutput values.
// You can construct a concrete instance of `GetVirtualMachineIdentityArrayInput` via:
//
// 		 GetVirtualMachineIdentityArray{ GetVirtualMachineIdentityArgs{...} }
//
type GetVirtualMachineIdentityArrayInput interface {
	pulumi.Input

	ToGetVirtualMachineIdentityArrayOutput() GetVirtualMachineIdentityArrayOutput
	ToGetVirtualMachineIdentityArrayOutputWithContext(context.Context) GetVirtualMachineIdentityArrayOutput
}

type GetVirtualMachineIdentityArray []GetVirtualMachineIdentityInput

func (GetVirtualMachineIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualMachineIdentity)(nil)).Elem()
}

func (i GetVirtualMachineIdentityArray) ToGetVirtualMachineIdentityArrayOutput() GetVirtualMachineIdentityArrayOutput {
	return i.ToGetVirtualMachineIdentityArrayOutputWithContext(context.Background())
}

func (i GetVirtualMachineIdentityArray) ToGetVirtualMachineIdentityArrayOutputWithContext(ctx context.Context) GetVirtualMachineIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualMachineIdentityArrayOutput)
}

type GetVirtualMachineIdentityOutput struct{ *pulumi.OutputState }

func (GetVirtualMachineIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualMachineIdentity)(nil)).Elem()
}

func (o GetVirtualMachineIdentityOutput) ToGetVirtualMachineIdentityOutput() GetVirtualMachineIdentityOutput {
	return o
}

func (o GetVirtualMachineIdentityOutput) ToGetVirtualMachineIdentityOutputWithContext(ctx context.Context) GetVirtualMachineIdentityOutput {
	return o
}

// The list of User Managed Identity ID's which are assigned to the Virtual Machine.
func (o GetVirtualMachineIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVirtualMachineIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The ID of the System Managed Service Principal assigned to the Virtual Machine.
func (o GetVirtualMachineIdentityOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualMachineIdentity) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The ID of the Tenant of the System Managed Service Principal assigned to the Virtual Machine.
func (o GetVirtualMachineIdentityOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualMachineIdentity) string { return v.TenantId }).(pulumi.StringOutput)
}

// The identity type of the Managed Identity assigned to the Virtual Machine.
func (o GetVirtualMachineIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualMachineIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type GetVirtualMachineIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualMachineIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualMachineIdentity)(nil)).Elem()
}

func (o GetVirtualMachineIdentityArrayOutput) ToGetVirtualMachineIdentityArrayOutput() GetVirtualMachineIdentityArrayOutput {
	return o
}

func (o GetVirtualMachineIdentityArrayOutput) ToGetVirtualMachineIdentityArrayOutputWithContext(ctx context.Context) GetVirtualMachineIdentityArrayOutput {
	return o
}

func (o GetVirtualMachineIdentityArrayOutput) Index(i pulumi.IntInput) GetVirtualMachineIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualMachineIdentity {
		return vs[0].([]GetVirtualMachineIdentity)[vs[1].(int)]
	}).(GetVirtualMachineIdentityOutput)
}

func init() {
	pulumi.RegisterOutputType(BastionHostIpConfigurationOutput{})
	pulumi.RegisterOutputType(BastionHostIpConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DiskEncryptionSetIdentityOutput{})
	pulumi.RegisterOutputType(DiskEncryptionSetIdentityPtrOutput{})
	pulumi.RegisterOutputType(ImageDataDiskOutput{})
	pulumi.RegisterOutputType(ImageDataDiskArrayOutput{})
	pulumi.RegisterOutputType(ImageOsDiskOutput{})
	pulumi.RegisterOutputType(ImageOsDiskPtrOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineAdditionalCapabilitiesOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineAdditionalCapabilitiesPtrOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineAdminSshKeyOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineAdminSshKeyArrayOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineBootDiagnosticsOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineBootDiagnosticsPtrOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineIdentityOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineIdentityPtrOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineOsDiskOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineOsDiskPtrOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineOsDiskDiffDiskSettingsOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineOsDiskDiffDiskSettingsPtrOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachinePlanOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachinePlanPtrOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetAdditionalCapabilitiesOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetAdminSshKeyOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetAdminSshKeyArrayOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetAutomaticInstanceRepairOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetBootDiagnosticsOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetBootDiagnosticsPtrOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetDataDiskOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetDataDiskArrayOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetIdentityOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetIdentityPtrOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetOsDiskOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetOsDiskPtrOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetPlanOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetPlanPtrOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetRollingUpgradePolicyOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetRollingUpgradePolicyPtrOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetSecretOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetSecretArrayOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetSecretCertificateOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetSecretCertificateArrayOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetSourceImageReferenceOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetSourceImageReferencePtrOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetTerminateNotificationOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineScaleSetTerminateNotificationPtrOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineSecretOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineSecretArrayOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineSecretCertificateOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineSecretCertificateArrayOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineSourceImageReferenceOutput{})
	pulumi.RegisterOutputType(LinuxVirtualMachineSourceImageReferencePtrOutput{})
	pulumi.RegisterOutputType(ManagedDiskEncryptionSettingsOutput{})
	pulumi.RegisterOutputType(ManagedDiskEncryptionSettingsPtrOutput{})
	pulumi.RegisterOutputType(ManagedDiskEncryptionSettingsDiskEncryptionKeyOutput{})
	pulumi.RegisterOutputType(ManagedDiskEncryptionSettingsDiskEncryptionKeyPtrOutput{})
	pulumi.RegisterOutputType(ManagedDiskEncryptionSettingsKeyEncryptionKeyOutput{})
	pulumi.RegisterOutputType(ManagedDiskEncryptionSettingsKeyEncryptionKeyPtrOutput{})
	pulumi.RegisterOutputType(ScaleSetBootDiagnosticsOutput{})
	pulumi.RegisterOutputType(ScaleSetBootDiagnosticsPtrOutput{})
	pulumi.RegisterOutputType(ScaleSetExtensionOutput{})
	pulumi.RegisterOutputType(ScaleSetExtensionArrayOutput{})
	pulumi.RegisterOutputType(ScaleSetIdentityOutput{})
	pulumi.RegisterOutputType(ScaleSetIdentityPtrOutput{})
	pulumi.RegisterOutputType(ScaleSetNetworkProfileOutput{})
	pulumi.RegisterOutputType(ScaleSetNetworkProfileArrayOutput{})
	pulumi.RegisterOutputType(ScaleSetNetworkProfileDnsSettingsOutput{})
	pulumi.RegisterOutputType(ScaleSetNetworkProfileDnsSettingsPtrOutput{})
	pulumi.RegisterOutputType(ScaleSetNetworkProfileIpConfigurationOutput{})
	pulumi.RegisterOutputType(ScaleSetNetworkProfileIpConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationOutput{})
	pulumi.RegisterOutputType(ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ScaleSetOsProfileOutput{})
	pulumi.RegisterOutputType(ScaleSetOsProfilePtrOutput{})
	pulumi.RegisterOutputType(ScaleSetOsProfileLinuxConfigOutput{})
	pulumi.RegisterOutputType(ScaleSetOsProfileLinuxConfigPtrOutput{})
	pulumi.RegisterOutputType(ScaleSetOsProfileLinuxConfigSshKeyOutput{})
	pulumi.RegisterOutputType(ScaleSetOsProfileLinuxConfigSshKeyArrayOutput{})
	pulumi.RegisterOutputType(ScaleSetOsProfileSecretOutput{})
	pulumi.RegisterOutputType(ScaleSetOsProfileSecretArrayOutput{})
	pulumi.RegisterOutputType(ScaleSetOsProfileSecretVaultCertificateOutput{})
	pulumi.RegisterOutputType(ScaleSetOsProfileSecretVaultCertificateArrayOutput{})
	pulumi.RegisterOutputType(ScaleSetOsProfileWindowsConfigOutput{})
	pulumi.RegisterOutputType(ScaleSetOsProfileWindowsConfigPtrOutput{})
	pulumi.RegisterOutputType(ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigOutput{})
	pulumi.RegisterOutputType(ScaleSetOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput{})
	pulumi.RegisterOutputType(ScaleSetOsProfileWindowsConfigWinrmOutput{})
	pulumi.RegisterOutputType(ScaleSetOsProfileWindowsConfigWinrmArrayOutput{})
	pulumi.RegisterOutputType(ScaleSetPlanOutput{})
	pulumi.RegisterOutputType(ScaleSetPlanPtrOutput{})
	pulumi.RegisterOutputType(ScaleSetRollingUpgradePolicyOutput{})
	pulumi.RegisterOutputType(ScaleSetRollingUpgradePolicyPtrOutput{})
	pulumi.RegisterOutputType(ScaleSetSkuOutput{})
	pulumi.RegisterOutputType(ScaleSetSkuPtrOutput{})
	pulumi.RegisterOutputType(ScaleSetStorageProfileDataDiskOutput{})
	pulumi.RegisterOutputType(ScaleSetStorageProfileDataDiskArrayOutput{})
	pulumi.RegisterOutputType(ScaleSetStorageProfileImageReferenceOutput{})
	pulumi.RegisterOutputType(ScaleSetStorageProfileImageReferencePtrOutput{})
	pulumi.RegisterOutputType(ScaleSetStorageProfileOsDiskOutput{})
	pulumi.RegisterOutputType(ScaleSetStorageProfileOsDiskPtrOutput{})
	pulumi.RegisterOutputType(SharedImageIdentifierOutput{})
	pulumi.RegisterOutputType(SharedImageIdentifierPtrOutput{})
	pulumi.RegisterOutputType(SharedImageVersionTargetRegionOutput{})
	pulumi.RegisterOutputType(SharedImageVersionTargetRegionArrayOutput{})
	pulumi.RegisterOutputType(SnapshotEncryptionSettingsOutput{})
	pulumi.RegisterOutputType(SnapshotEncryptionSettingsPtrOutput{})
	pulumi.RegisterOutputType(SnapshotEncryptionSettingsDiskEncryptionKeyOutput{})
	pulumi.RegisterOutputType(SnapshotEncryptionSettingsDiskEncryptionKeyPtrOutput{})
	pulumi.RegisterOutputType(SnapshotEncryptionSettingsKeyEncryptionKeyOutput{})
	pulumi.RegisterOutputType(SnapshotEncryptionSettingsKeyEncryptionKeyPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineAdditionalCapabilitiesOutput{})
	pulumi.RegisterOutputType(VirtualMachineAdditionalCapabilitiesPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineBootDiagnosticsOutput{})
	pulumi.RegisterOutputType(VirtualMachineBootDiagnosticsPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineIdentityOutput{})
	pulumi.RegisterOutputType(VirtualMachineIdentityPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineOsProfileOutput{})
	pulumi.RegisterOutputType(VirtualMachineOsProfilePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineOsProfileLinuxConfigOutput{})
	pulumi.RegisterOutputType(VirtualMachineOsProfileLinuxConfigPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineOsProfileLinuxConfigSshKeyOutput{})
	pulumi.RegisterOutputType(VirtualMachineOsProfileLinuxConfigSshKeyArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineOsProfileSecretOutput{})
	pulumi.RegisterOutputType(VirtualMachineOsProfileSecretArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineOsProfileSecretVaultCertificateOutput{})
	pulumi.RegisterOutputType(VirtualMachineOsProfileSecretVaultCertificateArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineOsProfileWindowsConfigOutput{})
	pulumi.RegisterOutputType(VirtualMachineOsProfileWindowsConfigPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigOutput{})
	pulumi.RegisterOutputType(VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfigArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineOsProfileWindowsConfigWinrmOutput{})
	pulumi.RegisterOutputType(VirtualMachineOsProfileWindowsConfigWinrmArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachinePlanOutput{})
	pulumi.RegisterOutputType(VirtualMachinePlanPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineStorageDataDiskOutput{})
	pulumi.RegisterOutputType(VirtualMachineStorageDataDiskArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineStorageImageReferenceOutput{})
	pulumi.RegisterOutputType(VirtualMachineStorageImageReferencePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineStorageOsDiskOutput{})
	pulumi.RegisterOutputType(VirtualMachineStorageOsDiskPtrOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineAdditionalCapabilitiesOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineAdditionalCapabilitiesPtrOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineAdditionalUnattendContentOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineAdditionalUnattendContentArrayOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineBootDiagnosticsOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineBootDiagnosticsPtrOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineIdentityOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineIdentityPtrOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineOsDiskOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineOsDiskPtrOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineOsDiskDiffDiskSettingsOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineOsDiskDiffDiskSettingsPtrOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachinePlanOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachinePlanPtrOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetAdditionalCapabilitiesOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetAdditionalCapabilitiesPtrOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetAdditionalUnattendContentOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetAdditionalUnattendContentArrayOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetAutomaticInstanceRepairOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetAutomaticInstanceRepairPtrOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicyPtrOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetBootDiagnosticsOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetBootDiagnosticsPtrOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetDataDiskOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetDataDiskArrayOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetIdentityOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetIdentityPtrOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationArrayOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArrayOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArrayOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetOsDiskOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetOsDiskPtrOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetOsDiskDiffDiskSettingsPtrOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetPlanOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetPlanPtrOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetRollingUpgradePolicyOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetRollingUpgradePolicyPtrOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetSecretOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetSecretArrayOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetSecretCertificateOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetSecretCertificateArrayOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetSourceImageReferenceOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetSourceImageReferencePtrOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetTerminateNotificationOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetTerminateNotificationPtrOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetWinrmListenerOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineScaleSetWinrmListenerArrayOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineSecretOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineSecretArrayOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineSecretCertificateOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineSecretCertificateArrayOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineSourceImageReferenceOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineSourceImageReferencePtrOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineWinrmListenerOutput{})
	pulumi.RegisterOutputType(WindowsVirtualMachineWinrmListenerArrayOutput{})
	pulumi.RegisterOutputType(GetImageDataDiskOutput{})
	pulumi.RegisterOutputType(GetImageDataDiskArrayOutput{})
	pulumi.RegisterOutputType(GetImageOsDiskOutput{})
	pulumi.RegisterOutputType(GetImageOsDiskArrayOutput{})
	pulumi.RegisterOutputType(GetSharedImageIdentifierOutput{})
	pulumi.RegisterOutputType(GetSharedImageIdentifierArrayOutput{})
	pulumi.RegisterOutputType(GetSharedImageVersionTargetRegionOutput{})
	pulumi.RegisterOutputType(GetSharedImageVersionTargetRegionArrayOutput{})
	pulumi.RegisterOutputType(GetSharedImageVersionsImageOutput{})
	pulumi.RegisterOutputType(GetSharedImageVersionsImageArrayOutput{})
	pulumi.RegisterOutputType(GetSharedImageVersionsImageTargetRegionOutput{})
	pulumi.RegisterOutputType(GetSharedImageVersionsImageTargetRegionArrayOutput{})
	pulumi.RegisterOutputType(GetSnapshotEncryptionSettingOutput{})
	pulumi.RegisterOutputType(GetSnapshotEncryptionSettingArrayOutput{})
	pulumi.RegisterOutputType(GetSnapshotEncryptionSettingDiskEncryptionKeyOutput{})
	pulumi.RegisterOutputType(GetSnapshotEncryptionSettingDiskEncryptionKeyArrayOutput{})
	pulumi.RegisterOutputType(GetSnapshotEncryptionSettingKeyEncryptionKeyOutput{})
	pulumi.RegisterOutputType(GetSnapshotEncryptionSettingKeyEncryptionKeyArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualMachineIdentityOutput{})
	pulumi.RegisterOutputType(GetVirtualMachineIdentityArrayOutput{})
}
