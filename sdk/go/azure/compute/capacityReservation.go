// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Capacity Reservation within a Capacity Reservation Group.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/compute"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleCapacityReservationGroup, err := compute.NewCapacityReservationGroup(ctx, "exampleCapacityReservationGroup", &compute.CapacityReservationGroupArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = compute.NewCapacityReservation(ctx, "exampleCapacityReservation", &compute.CapacityReservationArgs{
//				CapacityReservationGroupId: exampleCapacityReservationGroup.ID(),
//				Sku: &compute.CapacityReservationSkuArgs{
//					Name:     pulumi.String("Standard_D2s_v3"),
//					Capacity: pulumi.Int(1),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Capacity Reservations can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:compute/capacityReservation:CapacityReservation example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Compute/capacityReservationGroups/capacityReservationGroup1/capacityReservations/capacityReservation1
//
// ```
type CapacityReservation struct {
	pulumi.CustomResourceState

	// The ID of the Capacity Reservation Group where the Capacity Reservation exists. Changing this forces a new resource to be created.
	CapacityReservationGroupId pulumi.StringOutput `pulumi:"capacityReservationGroupId"`
	// Specifies the name of this Capacity Reservation. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// A `sku` block as defined below.
	Sku CapacityReservationSkuOutput `pulumi:"sku"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Specifies the Availability Zone for this Capacity Reservation. Changing this forces a new resource to be created.
	Zone pulumi.StringPtrOutput `pulumi:"zone"`
}

// NewCapacityReservation registers a new resource with the given unique name, arguments, and options.
func NewCapacityReservation(ctx *pulumi.Context,
	name string, args *CapacityReservationArgs, opts ...pulumi.ResourceOption) (*CapacityReservation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CapacityReservationGroupId == nil {
		return nil, errors.New("invalid value for required argument 'CapacityReservationGroupId'")
	}
	if args.Sku == nil {
		return nil, errors.New("invalid value for required argument 'Sku'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CapacityReservation
	err := ctx.RegisterResource("azure:compute/capacityReservation:CapacityReservation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCapacityReservation gets an existing CapacityReservation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCapacityReservation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CapacityReservationState, opts ...pulumi.ResourceOption) (*CapacityReservation, error) {
	var resource CapacityReservation
	err := ctx.ReadResource("azure:compute/capacityReservation:CapacityReservation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CapacityReservation resources.
type capacityReservationState struct {
	// The ID of the Capacity Reservation Group where the Capacity Reservation exists. Changing this forces a new resource to be created.
	CapacityReservationGroupId *string `pulumi:"capacityReservationGroupId"`
	// Specifies the name of this Capacity Reservation. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A `sku` block as defined below.
	Sku *CapacityReservationSku `pulumi:"sku"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the Availability Zone for this Capacity Reservation. Changing this forces a new resource to be created.
	Zone *string `pulumi:"zone"`
}

type CapacityReservationState struct {
	// The ID of the Capacity Reservation Group where the Capacity Reservation exists. Changing this forces a new resource to be created.
	CapacityReservationGroupId pulumi.StringPtrInput
	// Specifies the name of this Capacity Reservation. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A `sku` block as defined below.
	Sku CapacityReservationSkuPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// Specifies the Availability Zone for this Capacity Reservation. Changing this forces a new resource to be created.
	Zone pulumi.StringPtrInput
}

func (CapacityReservationState) ElementType() reflect.Type {
	return reflect.TypeOf((*capacityReservationState)(nil)).Elem()
}

type capacityReservationArgs struct {
	// The ID of the Capacity Reservation Group where the Capacity Reservation exists. Changing this forces a new resource to be created.
	CapacityReservationGroupId string `pulumi:"capacityReservationGroupId"`
	// Specifies the name of this Capacity Reservation. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A `sku` block as defined below.
	Sku CapacityReservationSku `pulumi:"sku"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the Availability Zone for this Capacity Reservation. Changing this forces a new resource to be created.
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a CapacityReservation resource.
type CapacityReservationArgs struct {
	// The ID of the Capacity Reservation Group where the Capacity Reservation exists. Changing this forces a new resource to be created.
	CapacityReservationGroupId pulumi.StringInput
	// Specifies the name of this Capacity Reservation. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A `sku` block as defined below.
	Sku CapacityReservationSkuInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// Specifies the Availability Zone for this Capacity Reservation. Changing this forces a new resource to be created.
	Zone pulumi.StringPtrInput
}

func (CapacityReservationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*capacityReservationArgs)(nil)).Elem()
}

type CapacityReservationInput interface {
	pulumi.Input

	ToCapacityReservationOutput() CapacityReservationOutput
	ToCapacityReservationOutputWithContext(ctx context.Context) CapacityReservationOutput
}

func (*CapacityReservation) ElementType() reflect.Type {
	return reflect.TypeOf((**CapacityReservation)(nil)).Elem()
}

func (i *CapacityReservation) ToCapacityReservationOutput() CapacityReservationOutput {
	return i.ToCapacityReservationOutputWithContext(context.Background())
}

func (i *CapacityReservation) ToCapacityReservationOutputWithContext(ctx context.Context) CapacityReservationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityReservationOutput)
}

// CapacityReservationArrayInput is an input type that accepts CapacityReservationArray and CapacityReservationArrayOutput values.
// You can construct a concrete instance of `CapacityReservationArrayInput` via:
//
//	CapacityReservationArray{ CapacityReservationArgs{...} }
type CapacityReservationArrayInput interface {
	pulumi.Input

	ToCapacityReservationArrayOutput() CapacityReservationArrayOutput
	ToCapacityReservationArrayOutputWithContext(context.Context) CapacityReservationArrayOutput
}

type CapacityReservationArray []CapacityReservationInput

func (CapacityReservationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CapacityReservation)(nil)).Elem()
}

func (i CapacityReservationArray) ToCapacityReservationArrayOutput() CapacityReservationArrayOutput {
	return i.ToCapacityReservationArrayOutputWithContext(context.Background())
}

func (i CapacityReservationArray) ToCapacityReservationArrayOutputWithContext(ctx context.Context) CapacityReservationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityReservationArrayOutput)
}

// CapacityReservationMapInput is an input type that accepts CapacityReservationMap and CapacityReservationMapOutput values.
// You can construct a concrete instance of `CapacityReservationMapInput` via:
//
//	CapacityReservationMap{ "key": CapacityReservationArgs{...} }
type CapacityReservationMapInput interface {
	pulumi.Input

	ToCapacityReservationMapOutput() CapacityReservationMapOutput
	ToCapacityReservationMapOutputWithContext(context.Context) CapacityReservationMapOutput
}

type CapacityReservationMap map[string]CapacityReservationInput

func (CapacityReservationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CapacityReservation)(nil)).Elem()
}

func (i CapacityReservationMap) ToCapacityReservationMapOutput() CapacityReservationMapOutput {
	return i.ToCapacityReservationMapOutputWithContext(context.Background())
}

func (i CapacityReservationMap) ToCapacityReservationMapOutputWithContext(ctx context.Context) CapacityReservationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityReservationMapOutput)
}

type CapacityReservationOutput struct{ *pulumi.OutputState }

func (CapacityReservationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CapacityReservation)(nil)).Elem()
}

func (o CapacityReservationOutput) ToCapacityReservationOutput() CapacityReservationOutput {
	return o
}

func (o CapacityReservationOutput) ToCapacityReservationOutputWithContext(ctx context.Context) CapacityReservationOutput {
	return o
}

// The ID of the Capacity Reservation Group where the Capacity Reservation exists. Changing this forces a new resource to be created.
func (o CapacityReservationOutput) CapacityReservationGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *CapacityReservation) pulumi.StringOutput { return v.CapacityReservationGroupId }).(pulumi.StringOutput)
}

// Specifies the name of this Capacity Reservation. Changing this forces a new resource to be created.
func (o CapacityReservationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CapacityReservation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A `sku` block as defined below.
func (o CapacityReservationOutput) Sku() CapacityReservationSkuOutput {
	return o.ApplyT(func(v *CapacityReservation) CapacityReservationSkuOutput { return v.Sku }).(CapacityReservationSkuOutput)
}

// A mapping of tags to assign to the resource.
func (o CapacityReservationOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CapacityReservation) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies the Availability Zone for this Capacity Reservation. Changing this forces a new resource to be created.
func (o CapacityReservationOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CapacityReservation) pulumi.StringPtrOutput { return v.Zone }).(pulumi.StringPtrOutput)
}

type CapacityReservationArrayOutput struct{ *pulumi.OutputState }

func (CapacityReservationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CapacityReservation)(nil)).Elem()
}

func (o CapacityReservationArrayOutput) ToCapacityReservationArrayOutput() CapacityReservationArrayOutput {
	return o
}

func (o CapacityReservationArrayOutput) ToCapacityReservationArrayOutputWithContext(ctx context.Context) CapacityReservationArrayOutput {
	return o
}

func (o CapacityReservationArrayOutput) Index(i pulumi.IntInput) CapacityReservationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CapacityReservation {
		return vs[0].([]*CapacityReservation)[vs[1].(int)]
	}).(CapacityReservationOutput)
}

type CapacityReservationMapOutput struct{ *pulumi.OutputState }

func (CapacityReservationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CapacityReservation)(nil)).Elem()
}

func (o CapacityReservationMapOutput) ToCapacityReservationMapOutput() CapacityReservationMapOutput {
	return o
}

func (o CapacityReservationMapOutput) ToCapacityReservationMapOutputWithContext(ctx context.Context) CapacityReservationMapOutput {
	return o
}

func (o CapacityReservationMapOutput) MapIndex(k pulumi.StringInput) CapacityReservationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CapacityReservation {
		return vs[0].(map[string]*CapacityReservation)[vs[1].(string)]
	}).(CapacityReservationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CapacityReservationInput)(nil)).Elem(), &CapacityReservation{})
	pulumi.RegisterInputType(reflect.TypeOf((*CapacityReservationArrayInput)(nil)).Elem(), CapacityReservationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CapacityReservationMapInput)(nil)).Elem(), CapacityReservationMap{})
	pulumi.RegisterOutputType(CapacityReservationOutput{})
	pulumi.RegisterOutputType(CapacityReservationArrayOutput{})
	pulumi.RegisterOutputType(CapacityReservationMapOutput{})
}
