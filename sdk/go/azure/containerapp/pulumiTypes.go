// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerapp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AppDapr struct {
	// The Dapr Application Identifier.
	AppId string `pulumi:"appId"`
	// The port which the application is listening on. This is the same as the `ingress` port.
	AppPort int `pulumi:"appPort"`
	// The protocol for the app. Possible values include `http` and `grpc`. Defaults to `http`.
	AppProtocol *string `pulumi:"appProtocol"`
}

// AppDaprInput is an input type that accepts AppDaprArgs and AppDaprOutput values.
// You can construct a concrete instance of `AppDaprInput` via:
//
//	AppDaprArgs{...}
type AppDaprInput interface {
	pulumi.Input

	ToAppDaprOutput() AppDaprOutput
	ToAppDaprOutputWithContext(context.Context) AppDaprOutput
}

type AppDaprArgs struct {
	// The Dapr Application Identifier.
	AppId pulumi.StringInput `pulumi:"appId"`
	// The port which the application is listening on. This is the same as the `ingress` port.
	AppPort pulumi.IntInput `pulumi:"appPort"`
	// The protocol for the app. Possible values include `http` and `grpc`. Defaults to `http`.
	AppProtocol pulumi.StringPtrInput `pulumi:"appProtocol"`
}

func (AppDaprArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppDapr)(nil)).Elem()
}

func (i AppDaprArgs) ToAppDaprOutput() AppDaprOutput {
	return i.ToAppDaprOutputWithContext(context.Background())
}

func (i AppDaprArgs) ToAppDaprOutputWithContext(ctx context.Context) AppDaprOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDaprOutput)
}

func (i AppDaprArgs) ToAppDaprPtrOutput() AppDaprPtrOutput {
	return i.ToAppDaprPtrOutputWithContext(context.Background())
}

func (i AppDaprArgs) ToAppDaprPtrOutputWithContext(ctx context.Context) AppDaprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDaprOutput).ToAppDaprPtrOutputWithContext(ctx)
}

// AppDaprPtrInput is an input type that accepts AppDaprArgs, AppDaprPtr and AppDaprPtrOutput values.
// You can construct a concrete instance of `AppDaprPtrInput` via:
//
//	        AppDaprArgs{...}
//
//	or:
//
//	        nil
type AppDaprPtrInput interface {
	pulumi.Input

	ToAppDaprPtrOutput() AppDaprPtrOutput
	ToAppDaprPtrOutputWithContext(context.Context) AppDaprPtrOutput
}

type appDaprPtrType AppDaprArgs

func AppDaprPtr(v *AppDaprArgs) AppDaprPtrInput {
	return (*appDaprPtrType)(v)
}

func (*appDaprPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppDapr)(nil)).Elem()
}

func (i *appDaprPtrType) ToAppDaprPtrOutput() AppDaprPtrOutput {
	return i.ToAppDaprPtrOutputWithContext(context.Background())
}

func (i *appDaprPtrType) ToAppDaprPtrOutputWithContext(ctx context.Context) AppDaprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDaprPtrOutput)
}

type AppDaprOutput struct{ *pulumi.OutputState }

func (AppDaprOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppDapr)(nil)).Elem()
}

func (o AppDaprOutput) ToAppDaprOutput() AppDaprOutput {
	return o
}

func (o AppDaprOutput) ToAppDaprOutputWithContext(ctx context.Context) AppDaprOutput {
	return o
}

func (o AppDaprOutput) ToAppDaprPtrOutput() AppDaprPtrOutput {
	return o.ToAppDaprPtrOutputWithContext(context.Background())
}

func (o AppDaprOutput) ToAppDaprPtrOutputWithContext(ctx context.Context) AppDaprPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppDapr) *AppDapr {
		return &v
	}).(AppDaprPtrOutput)
}

// The Dapr Application Identifier.
func (o AppDaprOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v AppDapr) string { return v.AppId }).(pulumi.StringOutput)
}

// The port which the application is listening on. This is the same as the `ingress` port.
func (o AppDaprOutput) AppPort() pulumi.IntOutput {
	return o.ApplyT(func(v AppDapr) int { return v.AppPort }).(pulumi.IntOutput)
}

// The protocol for the app. Possible values include `http` and `grpc`. Defaults to `http`.
func (o AppDaprOutput) AppProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppDapr) *string { return v.AppProtocol }).(pulumi.StringPtrOutput)
}

type AppDaprPtrOutput struct{ *pulumi.OutputState }

func (AppDaprPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppDapr)(nil)).Elem()
}

func (o AppDaprPtrOutput) ToAppDaprPtrOutput() AppDaprPtrOutput {
	return o
}

func (o AppDaprPtrOutput) ToAppDaprPtrOutputWithContext(ctx context.Context) AppDaprPtrOutput {
	return o
}

func (o AppDaprPtrOutput) Elem() AppDaprOutput {
	return o.ApplyT(func(v *AppDapr) AppDapr {
		if v != nil {
			return *v
		}
		var ret AppDapr
		return ret
	}).(AppDaprOutput)
}

// The Dapr Application Identifier.
func (o AppDaprPtrOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppDapr) *string {
		if v == nil {
			return nil
		}
		return &v.AppId
	}).(pulumi.StringPtrOutput)
}

// The port which the application is listening on. This is the same as the `ingress` port.
func (o AppDaprPtrOutput) AppPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppDapr) *int {
		if v == nil {
			return nil
		}
		return &v.AppPort
	}).(pulumi.IntPtrOutput)
}

// The protocol for the app. Possible values include `http` and `grpc`. Defaults to `http`.
func (o AppDaprPtrOutput) AppProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppDapr) *string {
		if v == nil {
			return nil
		}
		return v.AppProtocol
	}).(pulumi.StringPtrOutput)
}

type AppIdentity struct {
	// A list of one or more Resource IDs for User Assigned Managed identities to assign. Required when `type` is set to `UserAssigned`.
	IdentityIds []string `pulumi:"identityIds"`
	PrincipalId *string  `pulumi:"principalId"`
	TenantId    *string  `pulumi:"tenantId"`
	// The type of managed identity to assign. Possible values are `UserAssigned` and `SystemAssigned`
	Type string `pulumi:"type"`
}

// AppIdentityInput is an input type that accepts AppIdentityArgs and AppIdentityOutput values.
// You can construct a concrete instance of `AppIdentityInput` via:
//
//	AppIdentityArgs{...}
type AppIdentityInput interface {
	pulumi.Input

	ToAppIdentityOutput() AppIdentityOutput
	ToAppIdentityOutputWithContext(context.Context) AppIdentityOutput
}

type AppIdentityArgs struct {
	// A list of one or more Resource IDs for User Assigned Managed identities to assign. Required when `type` is set to `UserAssigned`.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	PrincipalId pulumi.StringPtrInput   `pulumi:"principalId"`
	TenantId    pulumi.StringPtrInput   `pulumi:"tenantId"`
	// The type of managed identity to assign. Possible values are `UserAssigned` and `SystemAssigned`
	Type pulumi.StringInput `pulumi:"type"`
}

func (AppIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppIdentity)(nil)).Elem()
}

func (i AppIdentityArgs) ToAppIdentityOutput() AppIdentityOutput {
	return i.ToAppIdentityOutputWithContext(context.Background())
}

func (i AppIdentityArgs) ToAppIdentityOutputWithContext(ctx context.Context) AppIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppIdentityOutput)
}

func (i AppIdentityArgs) ToAppIdentityPtrOutput() AppIdentityPtrOutput {
	return i.ToAppIdentityPtrOutputWithContext(context.Background())
}

func (i AppIdentityArgs) ToAppIdentityPtrOutputWithContext(ctx context.Context) AppIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppIdentityOutput).ToAppIdentityPtrOutputWithContext(ctx)
}

// AppIdentityPtrInput is an input type that accepts AppIdentityArgs, AppIdentityPtr and AppIdentityPtrOutput values.
// You can construct a concrete instance of `AppIdentityPtrInput` via:
//
//	        AppIdentityArgs{...}
//
//	or:
//
//	        nil
type AppIdentityPtrInput interface {
	pulumi.Input

	ToAppIdentityPtrOutput() AppIdentityPtrOutput
	ToAppIdentityPtrOutputWithContext(context.Context) AppIdentityPtrOutput
}

type appIdentityPtrType AppIdentityArgs

func AppIdentityPtr(v *AppIdentityArgs) AppIdentityPtrInput {
	return (*appIdentityPtrType)(v)
}

func (*appIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppIdentity)(nil)).Elem()
}

func (i *appIdentityPtrType) ToAppIdentityPtrOutput() AppIdentityPtrOutput {
	return i.ToAppIdentityPtrOutputWithContext(context.Background())
}

func (i *appIdentityPtrType) ToAppIdentityPtrOutputWithContext(ctx context.Context) AppIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppIdentityPtrOutput)
}

type AppIdentityOutput struct{ *pulumi.OutputState }

func (AppIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppIdentity)(nil)).Elem()
}

func (o AppIdentityOutput) ToAppIdentityOutput() AppIdentityOutput {
	return o
}

func (o AppIdentityOutput) ToAppIdentityOutputWithContext(ctx context.Context) AppIdentityOutput {
	return o
}

func (o AppIdentityOutput) ToAppIdentityPtrOutput() AppIdentityPtrOutput {
	return o.ToAppIdentityPtrOutputWithContext(context.Background())
}

func (o AppIdentityOutput) ToAppIdentityPtrOutputWithContext(ctx context.Context) AppIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppIdentity) *AppIdentity {
		return &v
	}).(AppIdentityPtrOutput)
}

// A list of one or more Resource IDs for User Assigned Managed identities to assign. Required when `type` is set to `UserAssigned`.
func (o AppIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

func (o AppIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

func (o AppIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The type of managed identity to assign. Possible values are `UserAssigned` and `SystemAssigned`
func (o AppIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AppIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type AppIdentityPtrOutput struct{ *pulumi.OutputState }

func (AppIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppIdentity)(nil)).Elem()
}

func (o AppIdentityPtrOutput) ToAppIdentityPtrOutput() AppIdentityPtrOutput {
	return o
}

func (o AppIdentityPtrOutput) ToAppIdentityPtrOutputWithContext(ctx context.Context) AppIdentityPtrOutput {
	return o
}

func (o AppIdentityPtrOutput) Elem() AppIdentityOutput {
	return o.ApplyT(func(v *AppIdentity) AppIdentity {
		if v != nil {
			return *v
		}
		var ret AppIdentity
		return ret
	}).(AppIdentityOutput)
}

// A list of one or more Resource IDs for User Assigned Managed identities to assign. Required when `type` is set to `UserAssigned`.
func (o AppIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

func (o AppIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

func (o AppIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of managed identity to assign. Possible values are `UserAssigned` and `SystemAssigned`
func (o AppIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type AppIngress struct {
	// Should this ingress allow insecure connections?
	AllowInsecureConnections *bool `pulumi:"allowInsecureConnections"`
	// One or more `customDomain` block as detailed below.
	CustomDomain *AppIngressCustomDomain `pulumi:"customDomain"`
	// Is this an external Ingress.
	ExternalEnabled *bool `pulumi:"externalEnabled"`
	// The FQDN of the ingress.
	Fqdn *string `pulumi:"fqdn"`
	// The target port on the container for the Ingress traffic.
	TargetPort int `pulumi:"targetPort"`
	// A `trafficWeight` block as detailed below.
	TrafficWeights []AppIngressTrafficWeight `pulumi:"trafficWeights"`
	// The transport method for the Ingress. Possible values include `auto`, `http`, and `http2`. Defaults to `auto`
	Transport *string `pulumi:"transport"`
}

// AppIngressInput is an input type that accepts AppIngressArgs and AppIngressOutput values.
// You can construct a concrete instance of `AppIngressInput` via:
//
//	AppIngressArgs{...}
type AppIngressInput interface {
	pulumi.Input

	ToAppIngressOutput() AppIngressOutput
	ToAppIngressOutputWithContext(context.Context) AppIngressOutput
}

type AppIngressArgs struct {
	// Should this ingress allow insecure connections?
	AllowInsecureConnections pulumi.BoolPtrInput `pulumi:"allowInsecureConnections"`
	// One or more `customDomain` block as detailed below.
	CustomDomain AppIngressCustomDomainPtrInput `pulumi:"customDomain"`
	// Is this an external Ingress.
	ExternalEnabled pulumi.BoolPtrInput `pulumi:"externalEnabled"`
	// The FQDN of the ingress.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// The target port on the container for the Ingress traffic.
	TargetPort pulumi.IntInput `pulumi:"targetPort"`
	// A `trafficWeight` block as detailed below.
	TrafficWeights AppIngressTrafficWeightArrayInput `pulumi:"trafficWeights"`
	// The transport method for the Ingress. Possible values include `auto`, `http`, and `http2`. Defaults to `auto`
	Transport pulumi.StringPtrInput `pulumi:"transport"`
}

func (AppIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppIngress)(nil)).Elem()
}

func (i AppIngressArgs) ToAppIngressOutput() AppIngressOutput {
	return i.ToAppIngressOutputWithContext(context.Background())
}

func (i AppIngressArgs) ToAppIngressOutputWithContext(ctx context.Context) AppIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppIngressOutput)
}

func (i AppIngressArgs) ToAppIngressPtrOutput() AppIngressPtrOutput {
	return i.ToAppIngressPtrOutputWithContext(context.Background())
}

func (i AppIngressArgs) ToAppIngressPtrOutputWithContext(ctx context.Context) AppIngressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppIngressOutput).ToAppIngressPtrOutputWithContext(ctx)
}

// AppIngressPtrInput is an input type that accepts AppIngressArgs, AppIngressPtr and AppIngressPtrOutput values.
// You can construct a concrete instance of `AppIngressPtrInput` via:
//
//	        AppIngressArgs{...}
//
//	or:
//
//	        nil
type AppIngressPtrInput interface {
	pulumi.Input

	ToAppIngressPtrOutput() AppIngressPtrOutput
	ToAppIngressPtrOutputWithContext(context.Context) AppIngressPtrOutput
}

type appIngressPtrType AppIngressArgs

func AppIngressPtr(v *AppIngressArgs) AppIngressPtrInput {
	return (*appIngressPtrType)(v)
}

func (*appIngressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppIngress)(nil)).Elem()
}

func (i *appIngressPtrType) ToAppIngressPtrOutput() AppIngressPtrOutput {
	return i.ToAppIngressPtrOutputWithContext(context.Background())
}

func (i *appIngressPtrType) ToAppIngressPtrOutputWithContext(ctx context.Context) AppIngressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppIngressPtrOutput)
}

type AppIngressOutput struct{ *pulumi.OutputState }

func (AppIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppIngress)(nil)).Elem()
}

func (o AppIngressOutput) ToAppIngressOutput() AppIngressOutput {
	return o
}

func (o AppIngressOutput) ToAppIngressOutputWithContext(ctx context.Context) AppIngressOutput {
	return o
}

func (o AppIngressOutput) ToAppIngressPtrOutput() AppIngressPtrOutput {
	return o.ToAppIngressPtrOutputWithContext(context.Background())
}

func (o AppIngressOutput) ToAppIngressPtrOutputWithContext(ctx context.Context) AppIngressPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppIngress) *AppIngress {
		return &v
	}).(AppIngressPtrOutput)
}

// Should this ingress allow insecure connections?
func (o AppIngressOutput) AllowInsecureConnections() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppIngress) *bool { return v.AllowInsecureConnections }).(pulumi.BoolPtrOutput)
}

// One or more `customDomain` block as detailed below.
func (o AppIngressOutput) CustomDomain() AppIngressCustomDomainPtrOutput {
	return o.ApplyT(func(v AppIngress) *AppIngressCustomDomain { return v.CustomDomain }).(AppIngressCustomDomainPtrOutput)
}

// Is this an external Ingress.
func (o AppIngressOutput) ExternalEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppIngress) *bool { return v.ExternalEnabled }).(pulumi.BoolPtrOutput)
}

// The FQDN of the ingress.
func (o AppIngressOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppIngress) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The target port on the container for the Ingress traffic.
func (o AppIngressOutput) TargetPort() pulumi.IntOutput {
	return o.ApplyT(func(v AppIngress) int { return v.TargetPort }).(pulumi.IntOutput)
}

// A `trafficWeight` block as detailed below.
func (o AppIngressOutput) TrafficWeights() AppIngressTrafficWeightArrayOutput {
	return o.ApplyT(func(v AppIngress) []AppIngressTrafficWeight { return v.TrafficWeights }).(AppIngressTrafficWeightArrayOutput)
}

// The transport method for the Ingress. Possible values include `auto`, `http`, and `http2`. Defaults to `auto`
func (o AppIngressOutput) Transport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppIngress) *string { return v.Transport }).(pulumi.StringPtrOutput)
}

type AppIngressPtrOutput struct{ *pulumi.OutputState }

func (AppIngressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppIngress)(nil)).Elem()
}

func (o AppIngressPtrOutput) ToAppIngressPtrOutput() AppIngressPtrOutput {
	return o
}

func (o AppIngressPtrOutput) ToAppIngressPtrOutputWithContext(ctx context.Context) AppIngressPtrOutput {
	return o
}

func (o AppIngressPtrOutput) Elem() AppIngressOutput {
	return o.ApplyT(func(v *AppIngress) AppIngress {
		if v != nil {
			return *v
		}
		var ret AppIngress
		return ret
	}).(AppIngressOutput)
}

// Should this ingress allow insecure connections?
func (o AppIngressPtrOutput) AllowInsecureConnections() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppIngress) *bool {
		if v == nil {
			return nil
		}
		return v.AllowInsecureConnections
	}).(pulumi.BoolPtrOutput)
}

// One or more `customDomain` block as detailed below.
func (o AppIngressPtrOutput) CustomDomain() AppIngressCustomDomainPtrOutput {
	return o.ApplyT(func(v *AppIngress) *AppIngressCustomDomain {
		if v == nil {
			return nil
		}
		return v.CustomDomain
	}).(AppIngressCustomDomainPtrOutput)
}

// Is this an external Ingress.
func (o AppIngressPtrOutput) ExternalEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppIngress) *bool {
		if v == nil {
			return nil
		}
		return v.ExternalEnabled
	}).(pulumi.BoolPtrOutput)
}

// The FQDN of the ingress.
func (o AppIngressPtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppIngress) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// The target port on the container for the Ingress traffic.
func (o AppIngressPtrOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppIngress) *int {
		if v == nil {
			return nil
		}
		return &v.TargetPort
	}).(pulumi.IntPtrOutput)
}

// A `trafficWeight` block as detailed below.
func (o AppIngressPtrOutput) TrafficWeights() AppIngressTrafficWeightArrayOutput {
	return o.ApplyT(func(v *AppIngress) []AppIngressTrafficWeight {
		if v == nil {
			return nil
		}
		return v.TrafficWeights
	}).(AppIngressTrafficWeightArrayOutput)
}

// The transport method for the Ingress. Possible values include `auto`, `http`, and `http2`. Defaults to `auto`
func (o AppIngressPtrOutput) Transport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppIngress) *string {
		if v == nil {
			return nil
		}
		return v.Transport
	}).(pulumi.StringPtrOutput)
}

type AppIngressCustomDomain struct {
	CertificateBindingType *string `pulumi:"certificateBindingType"`
	CertificateId          string  `pulumi:"certificateId"`
	// The name for this Container App. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
}

// AppIngressCustomDomainInput is an input type that accepts AppIngressCustomDomainArgs and AppIngressCustomDomainOutput values.
// You can construct a concrete instance of `AppIngressCustomDomainInput` via:
//
//	AppIngressCustomDomainArgs{...}
type AppIngressCustomDomainInput interface {
	pulumi.Input

	ToAppIngressCustomDomainOutput() AppIngressCustomDomainOutput
	ToAppIngressCustomDomainOutputWithContext(context.Context) AppIngressCustomDomainOutput
}

type AppIngressCustomDomainArgs struct {
	CertificateBindingType pulumi.StringPtrInput `pulumi:"certificateBindingType"`
	CertificateId          pulumi.StringInput    `pulumi:"certificateId"`
	// The name for this Container App. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
}

func (AppIngressCustomDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppIngressCustomDomain)(nil)).Elem()
}

func (i AppIngressCustomDomainArgs) ToAppIngressCustomDomainOutput() AppIngressCustomDomainOutput {
	return i.ToAppIngressCustomDomainOutputWithContext(context.Background())
}

func (i AppIngressCustomDomainArgs) ToAppIngressCustomDomainOutputWithContext(ctx context.Context) AppIngressCustomDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppIngressCustomDomainOutput)
}

func (i AppIngressCustomDomainArgs) ToAppIngressCustomDomainPtrOutput() AppIngressCustomDomainPtrOutput {
	return i.ToAppIngressCustomDomainPtrOutputWithContext(context.Background())
}

func (i AppIngressCustomDomainArgs) ToAppIngressCustomDomainPtrOutputWithContext(ctx context.Context) AppIngressCustomDomainPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppIngressCustomDomainOutput).ToAppIngressCustomDomainPtrOutputWithContext(ctx)
}

// AppIngressCustomDomainPtrInput is an input type that accepts AppIngressCustomDomainArgs, AppIngressCustomDomainPtr and AppIngressCustomDomainPtrOutput values.
// You can construct a concrete instance of `AppIngressCustomDomainPtrInput` via:
//
//	        AppIngressCustomDomainArgs{...}
//
//	or:
//
//	        nil
type AppIngressCustomDomainPtrInput interface {
	pulumi.Input

	ToAppIngressCustomDomainPtrOutput() AppIngressCustomDomainPtrOutput
	ToAppIngressCustomDomainPtrOutputWithContext(context.Context) AppIngressCustomDomainPtrOutput
}

type appIngressCustomDomainPtrType AppIngressCustomDomainArgs

func AppIngressCustomDomainPtr(v *AppIngressCustomDomainArgs) AppIngressCustomDomainPtrInput {
	return (*appIngressCustomDomainPtrType)(v)
}

func (*appIngressCustomDomainPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppIngressCustomDomain)(nil)).Elem()
}

func (i *appIngressCustomDomainPtrType) ToAppIngressCustomDomainPtrOutput() AppIngressCustomDomainPtrOutput {
	return i.ToAppIngressCustomDomainPtrOutputWithContext(context.Background())
}

func (i *appIngressCustomDomainPtrType) ToAppIngressCustomDomainPtrOutputWithContext(ctx context.Context) AppIngressCustomDomainPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppIngressCustomDomainPtrOutput)
}

type AppIngressCustomDomainOutput struct{ *pulumi.OutputState }

func (AppIngressCustomDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppIngressCustomDomain)(nil)).Elem()
}

func (o AppIngressCustomDomainOutput) ToAppIngressCustomDomainOutput() AppIngressCustomDomainOutput {
	return o
}

func (o AppIngressCustomDomainOutput) ToAppIngressCustomDomainOutputWithContext(ctx context.Context) AppIngressCustomDomainOutput {
	return o
}

func (o AppIngressCustomDomainOutput) ToAppIngressCustomDomainPtrOutput() AppIngressCustomDomainPtrOutput {
	return o.ToAppIngressCustomDomainPtrOutputWithContext(context.Background())
}

func (o AppIngressCustomDomainOutput) ToAppIngressCustomDomainPtrOutputWithContext(ctx context.Context) AppIngressCustomDomainPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppIngressCustomDomain) *AppIngressCustomDomain {
		return &v
	}).(AppIngressCustomDomainPtrOutput)
}

func (o AppIngressCustomDomainOutput) CertificateBindingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppIngressCustomDomain) *string { return v.CertificateBindingType }).(pulumi.StringPtrOutput)
}

func (o AppIngressCustomDomainOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v AppIngressCustomDomain) string { return v.CertificateId }).(pulumi.StringOutput)
}

// The name for this Container App. Changing this forces a new resource to be created.
func (o AppIngressCustomDomainOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppIngressCustomDomain) string { return v.Name }).(pulumi.StringOutput)
}

type AppIngressCustomDomainPtrOutput struct{ *pulumi.OutputState }

func (AppIngressCustomDomainPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppIngressCustomDomain)(nil)).Elem()
}

func (o AppIngressCustomDomainPtrOutput) ToAppIngressCustomDomainPtrOutput() AppIngressCustomDomainPtrOutput {
	return o
}

func (o AppIngressCustomDomainPtrOutput) ToAppIngressCustomDomainPtrOutputWithContext(ctx context.Context) AppIngressCustomDomainPtrOutput {
	return o
}

func (o AppIngressCustomDomainPtrOutput) Elem() AppIngressCustomDomainOutput {
	return o.ApplyT(func(v *AppIngressCustomDomain) AppIngressCustomDomain {
		if v != nil {
			return *v
		}
		var ret AppIngressCustomDomain
		return ret
	}).(AppIngressCustomDomainOutput)
}

func (o AppIngressCustomDomainPtrOutput) CertificateBindingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppIngressCustomDomain) *string {
		if v == nil {
			return nil
		}
		return v.CertificateBindingType
	}).(pulumi.StringPtrOutput)
}

func (o AppIngressCustomDomainPtrOutput) CertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppIngressCustomDomain) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateId
	}).(pulumi.StringPtrOutput)
}

// The name for this Container App. Changing this forces a new resource to be created.
func (o AppIngressCustomDomainPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppIngressCustomDomain) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type AppIngressTrafficWeight struct {
	// The label to apply to the revision as a name prefix for routing traffic.
	Label *string `pulumi:"label"`
	// This traffic Weight relates to the latest stable Container Revision.
	LatestRevision *bool `pulumi:"latestRevision"`
	// The percentage of traffic which should be sent this revision.
	Percentage int `pulumi:"percentage"`
	// The suffix string to which this `trafficWeight` applies.
	RevisionSuffix *string `pulumi:"revisionSuffix"`
}

// AppIngressTrafficWeightInput is an input type that accepts AppIngressTrafficWeightArgs and AppIngressTrafficWeightOutput values.
// You can construct a concrete instance of `AppIngressTrafficWeightInput` via:
//
//	AppIngressTrafficWeightArgs{...}
type AppIngressTrafficWeightInput interface {
	pulumi.Input

	ToAppIngressTrafficWeightOutput() AppIngressTrafficWeightOutput
	ToAppIngressTrafficWeightOutputWithContext(context.Context) AppIngressTrafficWeightOutput
}

type AppIngressTrafficWeightArgs struct {
	// The label to apply to the revision as a name prefix for routing traffic.
	Label pulumi.StringPtrInput `pulumi:"label"`
	// This traffic Weight relates to the latest stable Container Revision.
	LatestRevision pulumi.BoolPtrInput `pulumi:"latestRevision"`
	// The percentage of traffic which should be sent this revision.
	Percentage pulumi.IntInput `pulumi:"percentage"`
	// The suffix string to which this `trafficWeight` applies.
	RevisionSuffix pulumi.StringPtrInput `pulumi:"revisionSuffix"`
}

func (AppIngressTrafficWeightArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppIngressTrafficWeight)(nil)).Elem()
}

func (i AppIngressTrafficWeightArgs) ToAppIngressTrafficWeightOutput() AppIngressTrafficWeightOutput {
	return i.ToAppIngressTrafficWeightOutputWithContext(context.Background())
}

func (i AppIngressTrafficWeightArgs) ToAppIngressTrafficWeightOutputWithContext(ctx context.Context) AppIngressTrafficWeightOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppIngressTrafficWeightOutput)
}

// AppIngressTrafficWeightArrayInput is an input type that accepts AppIngressTrafficWeightArray and AppIngressTrafficWeightArrayOutput values.
// You can construct a concrete instance of `AppIngressTrafficWeightArrayInput` via:
//
//	AppIngressTrafficWeightArray{ AppIngressTrafficWeightArgs{...} }
type AppIngressTrafficWeightArrayInput interface {
	pulumi.Input

	ToAppIngressTrafficWeightArrayOutput() AppIngressTrafficWeightArrayOutput
	ToAppIngressTrafficWeightArrayOutputWithContext(context.Context) AppIngressTrafficWeightArrayOutput
}

type AppIngressTrafficWeightArray []AppIngressTrafficWeightInput

func (AppIngressTrafficWeightArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppIngressTrafficWeight)(nil)).Elem()
}

func (i AppIngressTrafficWeightArray) ToAppIngressTrafficWeightArrayOutput() AppIngressTrafficWeightArrayOutput {
	return i.ToAppIngressTrafficWeightArrayOutputWithContext(context.Background())
}

func (i AppIngressTrafficWeightArray) ToAppIngressTrafficWeightArrayOutputWithContext(ctx context.Context) AppIngressTrafficWeightArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppIngressTrafficWeightArrayOutput)
}

type AppIngressTrafficWeightOutput struct{ *pulumi.OutputState }

func (AppIngressTrafficWeightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppIngressTrafficWeight)(nil)).Elem()
}

func (o AppIngressTrafficWeightOutput) ToAppIngressTrafficWeightOutput() AppIngressTrafficWeightOutput {
	return o
}

func (o AppIngressTrafficWeightOutput) ToAppIngressTrafficWeightOutputWithContext(ctx context.Context) AppIngressTrafficWeightOutput {
	return o
}

// The label to apply to the revision as a name prefix for routing traffic.
func (o AppIngressTrafficWeightOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppIngressTrafficWeight) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// This traffic Weight relates to the latest stable Container Revision.
func (o AppIngressTrafficWeightOutput) LatestRevision() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppIngressTrafficWeight) *bool { return v.LatestRevision }).(pulumi.BoolPtrOutput)
}

// The percentage of traffic which should be sent this revision.
func (o AppIngressTrafficWeightOutput) Percentage() pulumi.IntOutput {
	return o.ApplyT(func(v AppIngressTrafficWeight) int { return v.Percentage }).(pulumi.IntOutput)
}

// The suffix string to which this `trafficWeight` applies.
func (o AppIngressTrafficWeightOutput) RevisionSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppIngressTrafficWeight) *string { return v.RevisionSuffix }).(pulumi.StringPtrOutput)
}

type AppIngressTrafficWeightArrayOutput struct{ *pulumi.OutputState }

func (AppIngressTrafficWeightArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppIngressTrafficWeight)(nil)).Elem()
}

func (o AppIngressTrafficWeightArrayOutput) ToAppIngressTrafficWeightArrayOutput() AppIngressTrafficWeightArrayOutput {
	return o
}

func (o AppIngressTrafficWeightArrayOutput) ToAppIngressTrafficWeightArrayOutputWithContext(ctx context.Context) AppIngressTrafficWeightArrayOutput {
	return o
}

func (o AppIngressTrafficWeightArrayOutput) Index(i pulumi.IntInput) AppIngressTrafficWeightOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppIngressTrafficWeight {
		return vs[0].([]AppIngressTrafficWeight)[vs[1].(int)]
	}).(AppIngressTrafficWeightOutput)
}

type AppRegistry struct {
	// Resource ID for the User Assigned Managed identity to use when pulling from the Container Registry.
	Identity *string `pulumi:"identity"`
	// The name of the Secret Reference containing the password value for this user on the Container Registry, `username` must also be supplied.
	PasswordSecretName *string `pulumi:"passwordSecretName"`
	// The hostname for the Container Registry.
	Server string `pulumi:"server"`
	// The username to use for this Container Registry, `passwordSecretName` must also be supplied..
	Username *string `pulumi:"username"`
}

// AppRegistryInput is an input type that accepts AppRegistryArgs and AppRegistryOutput values.
// You can construct a concrete instance of `AppRegistryInput` via:
//
//	AppRegistryArgs{...}
type AppRegistryInput interface {
	pulumi.Input

	ToAppRegistryOutput() AppRegistryOutput
	ToAppRegistryOutputWithContext(context.Context) AppRegistryOutput
}

type AppRegistryArgs struct {
	// Resource ID for the User Assigned Managed identity to use when pulling from the Container Registry.
	Identity pulumi.StringPtrInput `pulumi:"identity"`
	// The name of the Secret Reference containing the password value for this user on the Container Registry, `username` must also be supplied.
	PasswordSecretName pulumi.StringPtrInput `pulumi:"passwordSecretName"`
	// The hostname for the Container Registry.
	Server pulumi.StringInput `pulumi:"server"`
	// The username to use for this Container Registry, `passwordSecretName` must also be supplied..
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (AppRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppRegistry)(nil)).Elem()
}

func (i AppRegistryArgs) ToAppRegistryOutput() AppRegistryOutput {
	return i.ToAppRegistryOutputWithContext(context.Background())
}

func (i AppRegistryArgs) ToAppRegistryOutputWithContext(ctx context.Context) AppRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppRegistryOutput)
}

// AppRegistryArrayInput is an input type that accepts AppRegistryArray and AppRegistryArrayOutput values.
// You can construct a concrete instance of `AppRegistryArrayInput` via:
//
//	AppRegistryArray{ AppRegistryArgs{...} }
type AppRegistryArrayInput interface {
	pulumi.Input

	ToAppRegistryArrayOutput() AppRegistryArrayOutput
	ToAppRegistryArrayOutputWithContext(context.Context) AppRegistryArrayOutput
}

type AppRegistryArray []AppRegistryInput

func (AppRegistryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppRegistry)(nil)).Elem()
}

func (i AppRegistryArray) ToAppRegistryArrayOutput() AppRegistryArrayOutput {
	return i.ToAppRegistryArrayOutputWithContext(context.Background())
}

func (i AppRegistryArray) ToAppRegistryArrayOutputWithContext(ctx context.Context) AppRegistryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppRegistryArrayOutput)
}

type AppRegistryOutput struct{ *pulumi.OutputState }

func (AppRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppRegistry)(nil)).Elem()
}

func (o AppRegistryOutput) ToAppRegistryOutput() AppRegistryOutput {
	return o
}

func (o AppRegistryOutput) ToAppRegistryOutputWithContext(ctx context.Context) AppRegistryOutput {
	return o
}

// Resource ID for the User Assigned Managed identity to use when pulling from the Container Registry.
func (o AppRegistryOutput) Identity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppRegistry) *string { return v.Identity }).(pulumi.StringPtrOutput)
}

// The name of the Secret Reference containing the password value for this user on the Container Registry, `username` must also be supplied.
func (o AppRegistryOutput) PasswordSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppRegistry) *string { return v.PasswordSecretName }).(pulumi.StringPtrOutput)
}

// The hostname for the Container Registry.
func (o AppRegistryOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v AppRegistry) string { return v.Server }).(pulumi.StringOutput)
}

// The username to use for this Container Registry, `passwordSecretName` must also be supplied..
func (o AppRegistryOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppRegistry) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type AppRegistryArrayOutput struct{ *pulumi.OutputState }

func (AppRegistryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppRegistry)(nil)).Elem()
}

func (o AppRegistryArrayOutput) ToAppRegistryArrayOutput() AppRegistryArrayOutput {
	return o
}

func (o AppRegistryArrayOutput) ToAppRegistryArrayOutputWithContext(ctx context.Context) AppRegistryArrayOutput {
	return o
}

func (o AppRegistryArrayOutput) Index(i pulumi.IntInput) AppRegistryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppRegistry {
		return vs[0].([]AppRegistry)[vs[1].(int)]
	}).(AppRegistryOutput)
}

type AppSecret struct {
	// The Secret name.
	Name string `pulumi:"name"`
	// The value for this secret.
	Value string `pulumi:"value"`
}

// AppSecretInput is an input type that accepts AppSecretArgs and AppSecretOutput values.
// You can construct a concrete instance of `AppSecretInput` via:
//
//	AppSecretArgs{...}
type AppSecretInput interface {
	pulumi.Input

	ToAppSecretOutput() AppSecretOutput
	ToAppSecretOutputWithContext(context.Context) AppSecretOutput
}

type AppSecretArgs struct {
	// The Secret name.
	Name pulumi.StringInput `pulumi:"name"`
	// The value for this secret.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AppSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSecret)(nil)).Elem()
}

func (i AppSecretArgs) ToAppSecretOutput() AppSecretOutput {
	return i.ToAppSecretOutputWithContext(context.Background())
}

func (i AppSecretArgs) ToAppSecretOutputWithContext(ctx context.Context) AppSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecretOutput)
}

// AppSecretArrayInput is an input type that accepts AppSecretArray and AppSecretArrayOutput values.
// You can construct a concrete instance of `AppSecretArrayInput` via:
//
//	AppSecretArray{ AppSecretArgs{...} }
type AppSecretArrayInput interface {
	pulumi.Input

	ToAppSecretArrayOutput() AppSecretArrayOutput
	ToAppSecretArrayOutputWithContext(context.Context) AppSecretArrayOutput
}

type AppSecretArray []AppSecretInput

func (AppSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSecret)(nil)).Elem()
}

func (i AppSecretArray) ToAppSecretArrayOutput() AppSecretArrayOutput {
	return i.ToAppSecretArrayOutputWithContext(context.Background())
}

func (i AppSecretArray) ToAppSecretArrayOutputWithContext(ctx context.Context) AppSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecretArrayOutput)
}

type AppSecretOutput struct{ *pulumi.OutputState }

func (AppSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSecret)(nil)).Elem()
}

func (o AppSecretOutput) ToAppSecretOutput() AppSecretOutput {
	return o
}

func (o AppSecretOutput) ToAppSecretOutputWithContext(ctx context.Context) AppSecretOutput {
	return o
}

// The Secret name.
func (o AppSecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppSecret) string { return v.Name }).(pulumi.StringOutput)
}

// The value for this secret.
func (o AppSecretOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AppSecret) string { return v.Value }).(pulumi.StringOutput)
}

type AppSecretArrayOutput struct{ *pulumi.OutputState }

func (AppSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSecret)(nil)).Elem()
}

func (o AppSecretArrayOutput) ToAppSecretArrayOutput() AppSecretArrayOutput {
	return o
}

func (o AppSecretArrayOutput) ToAppSecretArrayOutputWithContext(ctx context.Context) AppSecretArrayOutput {
	return o
}

func (o AppSecretArrayOutput) Index(i pulumi.IntInput) AppSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSecret {
		return vs[0].([]AppSecret)[vs[1].(int)]
	}).(AppSecretOutput)
}

type AppTemplate struct {
	// One or more `container` blocks as detailed below.
	Containers []AppTemplateContainer `pulumi:"containers"`
	// The maximum number of replicas for this container.
	MaxReplicas *int `pulumi:"maxReplicas"`
	// The minimum number of replicas for this container.
	MinReplicas *int `pulumi:"minReplicas"`
	// The suffix for the revision. This value must be unique for the lifetime of the Resource. If omitted the service will use a hash function to create one.
	RevisionSuffix *string `pulumi:"revisionSuffix"`
	// A `volume` block as detailed below.
	Volumes []AppTemplateVolume `pulumi:"volumes"`
}

// AppTemplateInput is an input type that accepts AppTemplateArgs and AppTemplateOutput values.
// You can construct a concrete instance of `AppTemplateInput` via:
//
//	AppTemplateArgs{...}
type AppTemplateInput interface {
	pulumi.Input

	ToAppTemplateOutput() AppTemplateOutput
	ToAppTemplateOutputWithContext(context.Context) AppTemplateOutput
}

type AppTemplateArgs struct {
	// One or more `container` blocks as detailed below.
	Containers AppTemplateContainerArrayInput `pulumi:"containers"`
	// The maximum number of replicas for this container.
	MaxReplicas pulumi.IntPtrInput `pulumi:"maxReplicas"`
	// The minimum number of replicas for this container.
	MinReplicas pulumi.IntPtrInput `pulumi:"minReplicas"`
	// The suffix for the revision. This value must be unique for the lifetime of the Resource. If omitted the service will use a hash function to create one.
	RevisionSuffix pulumi.StringPtrInput `pulumi:"revisionSuffix"`
	// A `volume` block as detailed below.
	Volumes AppTemplateVolumeArrayInput `pulumi:"volumes"`
}

func (AppTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppTemplate)(nil)).Elem()
}

func (i AppTemplateArgs) ToAppTemplateOutput() AppTemplateOutput {
	return i.ToAppTemplateOutputWithContext(context.Background())
}

func (i AppTemplateArgs) ToAppTemplateOutputWithContext(ctx context.Context) AppTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppTemplateOutput)
}

func (i AppTemplateArgs) ToAppTemplatePtrOutput() AppTemplatePtrOutput {
	return i.ToAppTemplatePtrOutputWithContext(context.Background())
}

func (i AppTemplateArgs) ToAppTemplatePtrOutputWithContext(ctx context.Context) AppTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppTemplateOutput).ToAppTemplatePtrOutputWithContext(ctx)
}

// AppTemplatePtrInput is an input type that accepts AppTemplateArgs, AppTemplatePtr and AppTemplatePtrOutput values.
// You can construct a concrete instance of `AppTemplatePtrInput` via:
//
//	        AppTemplateArgs{...}
//
//	or:
//
//	        nil
type AppTemplatePtrInput interface {
	pulumi.Input

	ToAppTemplatePtrOutput() AppTemplatePtrOutput
	ToAppTemplatePtrOutputWithContext(context.Context) AppTemplatePtrOutput
}

type appTemplatePtrType AppTemplateArgs

func AppTemplatePtr(v *AppTemplateArgs) AppTemplatePtrInput {
	return (*appTemplatePtrType)(v)
}

func (*appTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppTemplate)(nil)).Elem()
}

func (i *appTemplatePtrType) ToAppTemplatePtrOutput() AppTemplatePtrOutput {
	return i.ToAppTemplatePtrOutputWithContext(context.Background())
}

func (i *appTemplatePtrType) ToAppTemplatePtrOutputWithContext(ctx context.Context) AppTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppTemplatePtrOutput)
}

type AppTemplateOutput struct{ *pulumi.OutputState }

func (AppTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppTemplate)(nil)).Elem()
}

func (o AppTemplateOutput) ToAppTemplateOutput() AppTemplateOutput {
	return o
}

func (o AppTemplateOutput) ToAppTemplateOutputWithContext(ctx context.Context) AppTemplateOutput {
	return o
}

func (o AppTemplateOutput) ToAppTemplatePtrOutput() AppTemplatePtrOutput {
	return o.ToAppTemplatePtrOutputWithContext(context.Background())
}

func (o AppTemplateOutput) ToAppTemplatePtrOutputWithContext(ctx context.Context) AppTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppTemplate) *AppTemplate {
		return &v
	}).(AppTemplatePtrOutput)
}

// One or more `container` blocks as detailed below.
func (o AppTemplateOutput) Containers() AppTemplateContainerArrayOutput {
	return o.ApplyT(func(v AppTemplate) []AppTemplateContainer { return v.Containers }).(AppTemplateContainerArrayOutput)
}

// The maximum number of replicas for this container.
func (o AppTemplateOutput) MaxReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppTemplate) *int { return v.MaxReplicas }).(pulumi.IntPtrOutput)
}

// The minimum number of replicas for this container.
func (o AppTemplateOutput) MinReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppTemplate) *int { return v.MinReplicas }).(pulumi.IntPtrOutput)
}

// The suffix for the revision. This value must be unique for the lifetime of the Resource. If omitted the service will use a hash function to create one.
func (o AppTemplateOutput) RevisionSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppTemplate) *string { return v.RevisionSuffix }).(pulumi.StringPtrOutput)
}

// A `volume` block as detailed below.
func (o AppTemplateOutput) Volumes() AppTemplateVolumeArrayOutput {
	return o.ApplyT(func(v AppTemplate) []AppTemplateVolume { return v.Volumes }).(AppTemplateVolumeArrayOutput)
}

type AppTemplatePtrOutput struct{ *pulumi.OutputState }

func (AppTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppTemplate)(nil)).Elem()
}

func (o AppTemplatePtrOutput) ToAppTemplatePtrOutput() AppTemplatePtrOutput {
	return o
}

func (o AppTemplatePtrOutput) ToAppTemplatePtrOutputWithContext(ctx context.Context) AppTemplatePtrOutput {
	return o
}

func (o AppTemplatePtrOutput) Elem() AppTemplateOutput {
	return o.ApplyT(func(v *AppTemplate) AppTemplate {
		if v != nil {
			return *v
		}
		var ret AppTemplate
		return ret
	}).(AppTemplateOutput)
}

// One or more `container` blocks as detailed below.
func (o AppTemplatePtrOutput) Containers() AppTemplateContainerArrayOutput {
	return o.ApplyT(func(v *AppTemplate) []AppTemplateContainer {
		if v == nil {
			return nil
		}
		return v.Containers
	}).(AppTemplateContainerArrayOutput)
}

// The maximum number of replicas for this container.
func (o AppTemplatePtrOutput) MaxReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppTemplate) *int {
		if v == nil {
			return nil
		}
		return v.MaxReplicas
	}).(pulumi.IntPtrOutput)
}

// The minimum number of replicas for this container.
func (o AppTemplatePtrOutput) MinReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppTemplate) *int {
		if v == nil {
			return nil
		}
		return v.MinReplicas
	}).(pulumi.IntPtrOutput)
}

// The suffix for the revision. This value must be unique for the lifetime of the Resource. If omitted the service will use a hash function to create one.
func (o AppTemplatePtrOutput) RevisionSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppTemplate) *string {
		if v == nil {
			return nil
		}
		return v.RevisionSuffix
	}).(pulumi.StringPtrOutput)
}

// A `volume` block as detailed below.
func (o AppTemplatePtrOutput) Volumes() AppTemplateVolumeArrayOutput {
	return o.ApplyT(func(v *AppTemplate) []AppTemplateVolume {
		if v == nil {
			return nil
		}
		return v.Volumes
	}).(AppTemplateVolumeArrayOutput)
}

type AppTemplateContainer struct {
	// A list of extra arguments to pass to the container.
	Args []string `pulumi:"args"`
	// A command to pass to the container to override the default. This is provided as a list of command line elements without spaces.
	Commands []string `pulumi:"commands"`
	// The amount of vCPU to allocate to the container. Possible values include `0.25`, `0.5`, `0.75`, `1.0`, `1.25`, `1.5`, `1.75`, and `2.0`.
	Cpu float64 `pulumi:"cpu"`
	// One or more `env` blocks as detailed below.
	Envs []AppTemplateContainerEnv `pulumi:"envs"`
	// The amount of ephemeral storage available to the Container App.
	EphemeralStorage *string `pulumi:"ephemeralStorage"`
	// The image to use to create the container.
	Image string `pulumi:"image"`
	// A `livenessProbe` block as detailed below.
	LivenessProbes []AppTemplateContainerLivenessProbe `pulumi:"livenessProbes"`
	// The amount of memory to allocate to the container. Possible values include `0.5Gi`, `1.0Gi`, `1.5Gi`, `2.0Gi`, `2.5Gi`, `3.0Gi`, `3.5Gi`, and `4.0Gi`.
	Memory string `pulumi:"memory"`
	// The name of the container
	Name string `pulumi:"name"`
	// A `readinessProbe` block as detailed below.
	ReadinessProbes []AppTemplateContainerReadinessProbe `pulumi:"readinessProbes"`
	// A `startupProbe` block as detailed below.
	StartupProbes []AppTemplateContainerStartupProbe `pulumi:"startupProbes"`
	// A `volumeMounts` block as detailed below.
	VolumeMounts []AppTemplateContainerVolumeMount `pulumi:"volumeMounts"`
}

// AppTemplateContainerInput is an input type that accepts AppTemplateContainerArgs and AppTemplateContainerOutput values.
// You can construct a concrete instance of `AppTemplateContainerInput` via:
//
//	AppTemplateContainerArgs{...}
type AppTemplateContainerInput interface {
	pulumi.Input

	ToAppTemplateContainerOutput() AppTemplateContainerOutput
	ToAppTemplateContainerOutputWithContext(context.Context) AppTemplateContainerOutput
}

type AppTemplateContainerArgs struct {
	// A list of extra arguments to pass to the container.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// A command to pass to the container to override the default. This is provided as a list of command line elements without spaces.
	Commands pulumi.StringArrayInput `pulumi:"commands"`
	// The amount of vCPU to allocate to the container. Possible values include `0.25`, `0.5`, `0.75`, `1.0`, `1.25`, `1.5`, `1.75`, and `2.0`.
	Cpu pulumi.Float64Input `pulumi:"cpu"`
	// One or more `env` blocks as detailed below.
	Envs AppTemplateContainerEnvArrayInput `pulumi:"envs"`
	// The amount of ephemeral storage available to the Container App.
	EphemeralStorage pulumi.StringPtrInput `pulumi:"ephemeralStorage"`
	// The image to use to create the container.
	Image pulumi.StringInput `pulumi:"image"`
	// A `livenessProbe` block as detailed below.
	LivenessProbes AppTemplateContainerLivenessProbeArrayInput `pulumi:"livenessProbes"`
	// The amount of memory to allocate to the container. Possible values include `0.5Gi`, `1.0Gi`, `1.5Gi`, `2.0Gi`, `2.5Gi`, `3.0Gi`, `3.5Gi`, and `4.0Gi`.
	Memory pulumi.StringInput `pulumi:"memory"`
	// The name of the container
	Name pulumi.StringInput `pulumi:"name"`
	// A `readinessProbe` block as detailed below.
	ReadinessProbes AppTemplateContainerReadinessProbeArrayInput `pulumi:"readinessProbes"`
	// A `startupProbe` block as detailed below.
	StartupProbes AppTemplateContainerStartupProbeArrayInput `pulumi:"startupProbes"`
	// A `volumeMounts` block as detailed below.
	VolumeMounts AppTemplateContainerVolumeMountArrayInput `pulumi:"volumeMounts"`
}

func (AppTemplateContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppTemplateContainer)(nil)).Elem()
}

func (i AppTemplateContainerArgs) ToAppTemplateContainerOutput() AppTemplateContainerOutput {
	return i.ToAppTemplateContainerOutputWithContext(context.Background())
}

func (i AppTemplateContainerArgs) ToAppTemplateContainerOutputWithContext(ctx context.Context) AppTemplateContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppTemplateContainerOutput)
}

// AppTemplateContainerArrayInput is an input type that accepts AppTemplateContainerArray and AppTemplateContainerArrayOutput values.
// You can construct a concrete instance of `AppTemplateContainerArrayInput` via:
//
//	AppTemplateContainerArray{ AppTemplateContainerArgs{...} }
type AppTemplateContainerArrayInput interface {
	pulumi.Input

	ToAppTemplateContainerArrayOutput() AppTemplateContainerArrayOutput
	ToAppTemplateContainerArrayOutputWithContext(context.Context) AppTemplateContainerArrayOutput
}

type AppTemplateContainerArray []AppTemplateContainerInput

func (AppTemplateContainerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppTemplateContainer)(nil)).Elem()
}

func (i AppTemplateContainerArray) ToAppTemplateContainerArrayOutput() AppTemplateContainerArrayOutput {
	return i.ToAppTemplateContainerArrayOutputWithContext(context.Background())
}

func (i AppTemplateContainerArray) ToAppTemplateContainerArrayOutputWithContext(ctx context.Context) AppTemplateContainerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppTemplateContainerArrayOutput)
}

type AppTemplateContainerOutput struct{ *pulumi.OutputState }

func (AppTemplateContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppTemplateContainer)(nil)).Elem()
}

func (o AppTemplateContainerOutput) ToAppTemplateContainerOutput() AppTemplateContainerOutput {
	return o
}

func (o AppTemplateContainerOutput) ToAppTemplateContainerOutputWithContext(ctx context.Context) AppTemplateContainerOutput {
	return o
}

// A list of extra arguments to pass to the container.
func (o AppTemplateContainerOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppTemplateContainer) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// A command to pass to the container to override the default. This is provided as a list of command line elements without spaces.
func (o AppTemplateContainerOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppTemplateContainer) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

// The amount of vCPU to allocate to the container. Possible values include `0.25`, `0.5`, `0.75`, `1.0`, `1.25`, `1.5`, `1.75`, and `2.0`.
func (o AppTemplateContainerOutput) Cpu() pulumi.Float64Output {
	return o.ApplyT(func(v AppTemplateContainer) float64 { return v.Cpu }).(pulumi.Float64Output)
}

// One or more `env` blocks as detailed below.
func (o AppTemplateContainerOutput) Envs() AppTemplateContainerEnvArrayOutput {
	return o.ApplyT(func(v AppTemplateContainer) []AppTemplateContainerEnv { return v.Envs }).(AppTemplateContainerEnvArrayOutput)
}

// The amount of ephemeral storage available to the Container App.
func (o AppTemplateContainerOutput) EphemeralStorage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppTemplateContainer) *string { return v.EphemeralStorage }).(pulumi.StringPtrOutput)
}

// The image to use to create the container.
func (o AppTemplateContainerOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v AppTemplateContainer) string { return v.Image }).(pulumi.StringOutput)
}

// A `livenessProbe` block as detailed below.
func (o AppTemplateContainerOutput) LivenessProbes() AppTemplateContainerLivenessProbeArrayOutput {
	return o.ApplyT(func(v AppTemplateContainer) []AppTemplateContainerLivenessProbe { return v.LivenessProbes }).(AppTemplateContainerLivenessProbeArrayOutput)
}

// The amount of memory to allocate to the container. Possible values include `0.5Gi`, `1.0Gi`, `1.5Gi`, `2.0Gi`, `2.5Gi`, `3.0Gi`, `3.5Gi`, and `4.0Gi`.
func (o AppTemplateContainerOutput) Memory() pulumi.StringOutput {
	return o.ApplyT(func(v AppTemplateContainer) string { return v.Memory }).(pulumi.StringOutput)
}

// The name of the container
func (o AppTemplateContainerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppTemplateContainer) string { return v.Name }).(pulumi.StringOutput)
}

// A `readinessProbe` block as detailed below.
func (o AppTemplateContainerOutput) ReadinessProbes() AppTemplateContainerReadinessProbeArrayOutput {
	return o.ApplyT(func(v AppTemplateContainer) []AppTemplateContainerReadinessProbe { return v.ReadinessProbes }).(AppTemplateContainerReadinessProbeArrayOutput)
}

// A `startupProbe` block as detailed below.
func (o AppTemplateContainerOutput) StartupProbes() AppTemplateContainerStartupProbeArrayOutput {
	return o.ApplyT(func(v AppTemplateContainer) []AppTemplateContainerStartupProbe { return v.StartupProbes }).(AppTemplateContainerStartupProbeArrayOutput)
}

// A `volumeMounts` block as detailed below.
func (o AppTemplateContainerOutput) VolumeMounts() AppTemplateContainerVolumeMountArrayOutput {
	return o.ApplyT(func(v AppTemplateContainer) []AppTemplateContainerVolumeMount { return v.VolumeMounts }).(AppTemplateContainerVolumeMountArrayOutput)
}

type AppTemplateContainerArrayOutput struct{ *pulumi.OutputState }

func (AppTemplateContainerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppTemplateContainer)(nil)).Elem()
}

func (o AppTemplateContainerArrayOutput) ToAppTemplateContainerArrayOutput() AppTemplateContainerArrayOutput {
	return o
}

func (o AppTemplateContainerArrayOutput) ToAppTemplateContainerArrayOutputWithContext(ctx context.Context) AppTemplateContainerArrayOutput {
	return o
}

func (o AppTemplateContainerArrayOutput) Index(i pulumi.IntInput) AppTemplateContainerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppTemplateContainer {
		return vs[0].([]AppTemplateContainer)[vs[1].(int)]
	}).(AppTemplateContainerOutput)
}

type AppTemplateContainerEnv struct {
	// The name of the environment variable for the container.
	Name string `pulumi:"name"`
	// The name of the secret that contains the value for this environment variable.
	SecretName *string `pulumi:"secretName"`
	// The value for this environment variable.
	Value *string `pulumi:"value"`
}

// AppTemplateContainerEnvInput is an input type that accepts AppTemplateContainerEnvArgs and AppTemplateContainerEnvOutput values.
// You can construct a concrete instance of `AppTemplateContainerEnvInput` via:
//
//	AppTemplateContainerEnvArgs{...}
type AppTemplateContainerEnvInput interface {
	pulumi.Input

	ToAppTemplateContainerEnvOutput() AppTemplateContainerEnvOutput
	ToAppTemplateContainerEnvOutputWithContext(context.Context) AppTemplateContainerEnvOutput
}

type AppTemplateContainerEnvArgs struct {
	// The name of the environment variable for the container.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the secret that contains the value for this environment variable.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
	// The value for this environment variable.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (AppTemplateContainerEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppTemplateContainerEnv)(nil)).Elem()
}

func (i AppTemplateContainerEnvArgs) ToAppTemplateContainerEnvOutput() AppTemplateContainerEnvOutput {
	return i.ToAppTemplateContainerEnvOutputWithContext(context.Background())
}

func (i AppTemplateContainerEnvArgs) ToAppTemplateContainerEnvOutputWithContext(ctx context.Context) AppTemplateContainerEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppTemplateContainerEnvOutput)
}

// AppTemplateContainerEnvArrayInput is an input type that accepts AppTemplateContainerEnvArray and AppTemplateContainerEnvArrayOutput values.
// You can construct a concrete instance of `AppTemplateContainerEnvArrayInput` via:
//
//	AppTemplateContainerEnvArray{ AppTemplateContainerEnvArgs{...} }
type AppTemplateContainerEnvArrayInput interface {
	pulumi.Input

	ToAppTemplateContainerEnvArrayOutput() AppTemplateContainerEnvArrayOutput
	ToAppTemplateContainerEnvArrayOutputWithContext(context.Context) AppTemplateContainerEnvArrayOutput
}

type AppTemplateContainerEnvArray []AppTemplateContainerEnvInput

func (AppTemplateContainerEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppTemplateContainerEnv)(nil)).Elem()
}

func (i AppTemplateContainerEnvArray) ToAppTemplateContainerEnvArrayOutput() AppTemplateContainerEnvArrayOutput {
	return i.ToAppTemplateContainerEnvArrayOutputWithContext(context.Background())
}

func (i AppTemplateContainerEnvArray) ToAppTemplateContainerEnvArrayOutputWithContext(ctx context.Context) AppTemplateContainerEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppTemplateContainerEnvArrayOutput)
}

type AppTemplateContainerEnvOutput struct{ *pulumi.OutputState }

func (AppTemplateContainerEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppTemplateContainerEnv)(nil)).Elem()
}

func (o AppTemplateContainerEnvOutput) ToAppTemplateContainerEnvOutput() AppTemplateContainerEnvOutput {
	return o
}

func (o AppTemplateContainerEnvOutput) ToAppTemplateContainerEnvOutputWithContext(ctx context.Context) AppTemplateContainerEnvOutput {
	return o
}

// The name of the environment variable for the container.
func (o AppTemplateContainerEnvOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppTemplateContainerEnv) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the secret that contains the value for this environment variable.
func (o AppTemplateContainerEnvOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppTemplateContainerEnv) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

// The value for this environment variable.
func (o AppTemplateContainerEnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppTemplateContainerEnv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AppTemplateContainerEnvArrayOutput struct{ *pulumi.OutputState }

func (AppTemplateContainerEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppTemplateContainerEnv)(nil)).Elem()
}

func (o AppTemplateContainerEnvArrayOutput) ToAppTemplateContainerEnvArrayOutput() AppTemplateContainerEnvArrayOutput {
	return o
}

func (o AppTemplateContainerEnvArrayOutput) ToAppTemplateContainerEnvArrayOutputWithContext(ctx context.Context) AppTemplateContainerEnvArrayOutput {
	return o
}

func (o AppTemplateContainerEnvArrayOutput) Index(i pulumi.IntInput) AppTemplateContainerEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppTemplateContainerEnv {
		return vs[0].([]AppTemplateContainerEnv)[vs[1].(int)]
	}).(AppTemplateContainerEnvOutput)
}

type AppTemplateContainerLivenessProbe struct {
	// The number of consecutive failures required to consider this probe as failed. Possible values are between `1` and `10`. Defaults to `3`.
	FailureCountThreshold *int `pulumi:"failureCountThreshold"`
	// A `header` block as detailed below.
	Headers []AppTemplateContainerLivenessProbeHeader `pulumi:"headers"`
	// The probe hostname. Defaults to the pod IP address. Setting a value for `Host` in `headers` can be used to override this for `HTTP` and `HTTPS` type probes.
	Host *string `pulumi:"host"`
	// The time in seconds to wait after the container has started before the probe is started.
	InitialDelay *int `pulumi:"initialDelay"`
	// (Optional) How often, in seconds, the probe should run. Possible values are in the range `1` - `240`. Defaults to `10`.
	IntervalSeconds *int `pulumi:"intervalSeconds"`
	// The URI to use with the `host` for http type probes. Not valid for `TCP` type probes. Defaults to `/`.
	Path *string `pulumi:"path"`
	// The port number on which to connect. Possible values are between `1` and `65535`.
	Port int `pulumi:"port"`
	// The time in seconds after the container is sent the termination signal before the process if forcibly killed.
	TerminationGracePeriodSeconds *int `pulumi:"terminationGracePeriodSeconds"`
	// Time in seconds after which the probe times out. Possible values are in the range `1` - `240`. Defaults to `1`.
	Timeout *int `pulumi:"timeout"`
	// Type of probe. Possible values are `TCP`, `HTTP`, and `HTTPS`.
	Transport string `pulumi:"transport"`
}

// AppTemplateContainerLivenessProbeInput is an input type that accepts AppTemplateContainerLivenessProbeArgs and AppTemplateContainerLivenessProbeOutput values.
// You can construct a concrete instance of `AppTemplateContainerLivenessProbeInput` via:
//
//	AppTemplateContainerLivenessProbeArgs{...}
type AppTemplateContainerLivenessProbeInput interface {
	pulumi.Input

	ToAppTemplateContainerLivenessProbeOutput() AppTemplateContainerLivenessProbeOutput
	ToAppTemplateContainerLivenessProbeOutputWithContext(context.Context) AppTemplateContainerLivenessProbeOutput
}

type AppTemplateContainerLivenessProbeArgs struct {
	// The number of consecutive failures required to consider this probe as failed. Possible values are between `1` and `10`. Defaults to `3`.
	FailureCountThreshold pulumi.IntPtrInput `pulumi:"failureCountThreshold"`
	// A `header` block as detailed below.
	Headers AppTemplateContainerLivenessProbeHeaderArrayInput `pulumi:"headers"`
	// The probe hostname. Defaults to the pod IP address. Setting a value for `Host` in `headers` can be used to override this for `HTTP` and `HTTPS` type probes.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The time in seconds to wait after the container has started before the probe is started.
	InitialDelay pulumi.IntPtrInput `pulumi:"initialDelay"`
	// (Optional) How often, in seconds, the probe should run. Possible values are in the range `1` - `240`. Defaults to `10`.
	IntervalSeconds pulumi.IntPtrInput `pulumi:"intervalSeconds"`
	// The URI to use with the `host` for http type probes. Not valid for `TCP` type probes. Defaults to `/`.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port number on which to connect. Possible values are between `1` and `65535`.
	Port pulumi.IntInput `pulumi:"port"`
	// The time in seconds after the container is sent the termination signal before the process if forcibly killed.
	TerminationGracePeriodSeconds pulumi.IntPtrInput `pulumi:"terminationGracePeriodSeconds"`
	// Time in seconds after which the probe times out. Possible values are in the range `1` - `240`. Defaults to `1`.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// Type of probe. Possible values are `TCP`, `HTTP`, and `HTTPS`.
	Transport pulumi.StringInput `pulumi:"transport"`
}

func (AppTemplateContainerLivenessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppTemplateContainerLivenessProbe)(nil)).Elem()
}

func (i AppTemplateContainerLivenessProbeArgs) ToAppTemplateContainerLivenessProbeOutput() AppTemplateContainerLivenessProbeOutput {
	return i.ToAppTemplateContainerLivenessProbeOutputWithContext(context.Background())
}

func (i AppTemplateContainerLivenessProbeArgs) ToAppTemplateContainerLivenessProbeOutputWithContext(ctx context.Context) AppTemplateContainerLivenessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppTemplateContainerLivenessProbeOutput)
}

// AppTemplateContainerLivenessProbeArrayInput is an input type that accepts AppTemplateContainerLivenessProbeArray and AppTemplateContainerLivenessProbeArrayOutput values.
// You can construct a concrete instance of `AppTemplateContainerLivenessProbeArrayInput` via:
//
//	AppTemplateContainerLivenessProbeArray{ AppTemplateContainerLivenessProbeArgs{...} }
type AppTemplateContainerLivenessProbeArrayInput interface {
	pulumi.Input

	ToAppTemplateContainerLivenessProbeArrayOutput() AppTemplateContainerLivenessProbeArrayOutput
	ToAppTemplateContainerLivenessProbeArrayOutputWithContext(context.Context) AppTemplateContainerLivenessProbeArrayOutput
}

type AppTemplateContainerLivenessProbeArray []AppTemplateContainerLivenessProbeInput

func (AppTemplateContainerLivenessProbeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppTemplateContainerLivenessProbe)(nil)).Elem()
}

func (i AppTemplateContainerLivenessProbeArray) ToAppTemplateContainerLivenessProbeArrayOutput() AppTemplateContainerLivenessProbeArrayOutput {
	return i.ToAppTemplateContainerLivenessProbeArrayOutputWithContext(context.Background())
}

func (i AppTemplateContainerLivenessProbeArray) ToAppTemplateContainerLivenessProbeArrayOutputWithContext(ctx context.Context) AppTemplateContainerLivenessProbeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppTemplateContainerLivenessProbeArrayOutput)
}

type AppTemplateContainerLivenessProbeOutput struct{ *pulumi.OutputState }

func (AppTemplateContainerLivenessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppTemplateContainerLivenessProbe)(nil)).Elem()
}

func (o AppTemplateContainerLivenessProbeOutput) ToAppTemplateContainerLivenessProbeOutput() AppTemplateContainerLivenessProbeOutput {
	return o
}

func (o AppTemplateContainerLivenessProbeOutput) ToAppTemplateContainerLivenessProbeOutputWithContext(ctx context.Context) AppTemplateContainerLivenessProbeOutput {
	return o
}

// The number of consecutive failures required to consider this probe as failed. Possible values are between `1` and `10`. Defaults to `3`.
func (o AppTemplateContainerLivenessProbeOutput) FailureCountThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppTemplateContainerLivenessProbe) *int { return v.FailureCountThreshold }).(pulumi.IntPtrOutput)
}

// A `header` block as detailed below.
func (o AppTemplateContainerLivenessProbeOutput) Headers() AppTemplateContainerLivenessProbeHeaderArrayOutput {
	return o.ApplyT(func(v AppTemplateContainerLivenessProbe) []AppTemplateContainerLivenessProbeHeader { return v.Headers }).(AppTemplateContainerLivenessProbeHeaderArrayOutput)
}

// The probe hostname. Defaults to the pod IP address. Setting a value for `Host` in `headers` can be used to override this for `HTTP` and `HTTPS` type probes.
func (o AppTemplateContainerLivenessProbeOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppTemplateContainerLivenessProbe) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The time in seconds to wait after the container has started before the probe is started.
func (o AppTemplateContainerLivenessProbeOutput) InitialDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppTemplateContainerLivenessProbe) *int { return v.InitialDelay }).(pulumi.IntPtrOutput)
}

// (Optional) How often, in seconds, the probe should run. Possible values are in the range `1` - `240`. Defaults to `10`.
func (o AppTemplateContainerLivenessProbeOutput) IntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppTemplateContainerLivenessProbe) *int { return v.IntervalSeconds }).(pulumi.IntPtrOutput)
}

// The URI to use with the `host` for http type probes. Not valid for `TCP` type probes. Defaults to `/`.
func (o AppTemplateContainerLivenessProbeOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppTemplateContainerLivenessProbe) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port number on which to connect. Possible values are between `1` and `65535`.
func (o AppTemplateContainerLivenessProbeOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v AppTemplateContainerLivenessProbe) int { return v.Port }).(pulumi.IntOutput)
}

// The time in seconds after the container is sent the termination signal before the process if forcibly killed.
func (o AppTemplateContainerLivenessProbeOutput) TerminationGracePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppTemplateContainerLivenessProbe) *int { return v.TerminationGracePeriodSeconds }).(pulumi.IntPtrOutput)
}

// Time in seconds after which the probe times out. Possible values are in the range `1` - `240`. Defaults to `1`.
func (o AppTemplateContainerLivenessProbeOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppTemplateContainerLivenessProbe) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// Type of probe. Possible values are `TCP`, `HTTP`, and `HTTPS`.
func (o AppTemplateContainerLivenessProbeOutput) Transport() pulumi.StringOutput {
	return o.ApplyT(func(v AppTemplateContainerLivenessProbe) string { return v.Transport }).(pulumi.StringOutput)
}

type AppTemplateContainerLivenessProbeArrayOutput struct{ *pulumi.OutputState }

func (AppTemplateContainerLivenessProbeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppTemplateContainerLivenessProbe)(nil)).Elem()
}

func (o AppTemplateContainerLivenessProbeArrayOutput) ToAppTemplateContainerLivenessProbeArrayOutput() AppTemplateContainerLivenessProbeArrayOutput {
	return o
}

func (o AppTemplateContainerLivenessProbeArrayOutput) ToAppTemplateContainerLivenessProbeArrayOutputWithContext(ctx context.Context) AppTemplateContainerLivenessProbeArrayOutput {
	return o
}

func (o AppTemplateContainerLivenessProbeArrayOutput) Index(i pulumi.IntInput) AppTemplateContainerLivenessProbeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppTemplateContainerLivenessProbe {
		return vs[0].([]AppTemplateContainerLivenessProbe)[vs[1].(int)]
	}).(AppTemplateContainerLivenessProbeOutput)
}

type AppTemplateContainerLivenessProbeHeader struct {
	// The HTTP Header Name.
	Name string `pulumi:"name"`
	// The HTTP Header value.
	Value string `pulumi:"value"`
}

// AppTemplateContainerLivenessProbeHeaderInput is an input type that accepts AppTemplateContainerLivenessProbeHeaderArgs and AppTemplateContainerLivenessProbeHeaderOutput values.
// You can construct a concrete instance of `AppTemplateContainerLivenessProbeHeaderInput` via:
//
//	AppTemplateContainerLivenessProbeHeaderArgs{...}
type AppTemplateContainerLivenessProbeHeaderInput interface {
	pulumi.Input

	ToAppTemplateContainerLivenessProbeHeaderOutput() AppTemplateContainerLivenessProbeHeaderOutput
	ToAppTemplateContainerLivenessProbeHeaderOutputWithContext(context.Context) AppTemplateContainerLivenessProbeHeaderOutput
}

type AppTemplateContainerLivenessProbeHeaderArgs struct {
	// The HTTP Header Name.
	Name pulumi.StringInput `pulumi:"name"`
	// The HTTP Header value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AppTemplateContainerLivenessProbeHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppTemplateContainerLivenessProbeHeader)(nil)).Elem()
}

func (i AppTemplateContainerLivenessProbeHeaderArgs) ToAppTemplateContainerLivenessProbeHeaderOutput() AppTemplateContainerLivenessProbeHeaderOutput {
	return i.ToAppTemplateContainerLivenessProbeHeaderOutputWithContext(context.Background())
}

func (i AppTemplateContainerLivenessProbeHeaderArgs) ToAppTemplateContainerLivenessProbeHeaderOutputWithContext(ctx context.Context) AppTemplateContainerLivenessProbeHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppTemplateContainerLivenessProbeHeaderOutput)
}

// AppTemplateContainerLivenessProbeHeaderArrayInput is an input type that accepts AppTemplateContainerLivenessProbeHeaderArray and AppTemplateContainerLivenessProbeHeaderArrayOutput values.
// You can construct a concrete instance of `AppTemplateContainerLivenessProbeHeaderArrayInput` via:
//
//	AppTemplateContainerLivenessProbeHeaderArray{ AppTemplateContainerLivenessProbeHeaderArgs{...} }
type AppTemplateContainerLivenessProbeHeaderArrayInput interface {
	pulumi.Input

	ToAppTemplateContainerLivenessProbeHeaderArrayOutput() AppTemplateContainerLivenessProbeHeaderArrayOutput
	ToAppTemplateContainerLivenessProbeHeaderArrayOutputWithContext(context.Context) AppTemplateContainerLivenessProbeHeaderArrayOutput
}

type AppTemplateContainerLivenessProbeHeaderArray []AppTemplateContainerLivenessProbeHeaderInput

func (AppTemplateContainerLivenessProbeHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppTemplateContainerLivenessProbeHeader)(nil)).Elem()
}

func (i AppTemplateContainerLivenessProbeHeaderArray) ToAppTemplateContainerLivenessProbeHeaderArrayOutput() AppTemplateContainerLivenessProbeHeaderArrayOutput {
	return i.ToAppTemplateContainerLivenessProbeHeaderArrayOutputWithContext(context.Background())
}

func (i AppTemplateContainerLivenessProbeHeaderArray) ToAppTemplateContainerLivenessProbeHeaderArrayOutputWithContext(ctx context.Context) AppTemplateContainerLivenessProbeHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppTemplateContainerLivenessProbeHeaderArrayOutput)
}

type AppTemplateContainerLivenessProbeHeaderOutput struct{ *pulumi.OutputState }

func (AppTemplateContainerLivenessProbeHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppTemplateContainerLivenessProbeHeader)(nil)).Elem()
}

func (o AppTemplateContainerLivenessProbeHeaderOutput) ToAppTemplateContainerLivenessProbeHeaderOutput() AppTemplateContainerLivenessProbeHeaderOutput {
	return o
}

func (o AppTemplateContainerLivenessProbeHeaderOutput) ToAppTemplateContainerLivenessProbeHeaderOutputWithContext(ctx context.Context) AppTemplateContainerLivenessProbeHeaderOutput {
	return o
}

// The HTTP Header Name.
func (o AppTemplateContainerLivenessProbeHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppTemplateContainerLivenessProbeHeader) string { return v.Name }).(pulumi.StringOutput)
}

// The HTTP Header value.
func (o AppTemplateContainerLivenessProbeHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AppTemplateContainerLivenessProbeHeader) string { return v.Value }).(pulumi.StringOutput)
}

type AppTemplateContainerLivenessProbeHeaderArrayOutput struct{ *pulumi.OutputState }

func (AppTemplateContainerLivenessProbeHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppTemplateContainerLivenessProbeHeader)(nil)).Elem()
}

func (o AppTemplateContainerLivenessProbeHeaderArrayOutput) ToAppTemplateContainerLivenessProbeHeaderArrayOutput() AppTemplateContainerLivenessProbeHeaderArrayOutput {
	return o
}

func (o AppTemplateContainerLivenessProbeHeaderArrayOutput) ToAppTemplateContainerLivenessProbeHeaderArrayOutputWithContext(ctx context.Context) AppTemplateContainerLivenessProbeHeaderArrayOutput {
	return o
}

func (o AppTemplateContainerLivenessProbeHeaderArrayOutput) Index(i pulumi.IntInput) AppTemplateContainerLivenessProbeHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppTemplateContainerLivenessProbeHeader {
		return vs[0].([]AppTemplateContainerLivenessProbeHeader)[vs[1].(int)]
	}).(AppTemplateContainerLivenessProbeHeaderOutput)
}

type AppTemplateContainerReadinessProbe struct {
	// The number of consecutive failures required to consider this probe as failed. Possible values are between `1` and `10`. Defaults to `3`.
	FailureCountThreshold *int `pulumi:"failureCountThreshold"`
	// A `header` block as detailed below.
	Headers []AppTemplateContainerReadinessProbeHeader `pulumi:"headers"`
	// The probe hostname. Defaults to the pod IP address. Setting a value for `Host` in `headers` can be used to override this for `HTTP` and `HTTPS` type probes.
	Host *string `pulumi:"host"`
	// How often, in seconds, the probe should run. Possible values are between `1` and `240`. Defaults to `10`
	IntervalSeconds *int `pulumi:"intervalSeconds"`
	// The URI to use for http type probes. Not valid for `TCP` type probes. Defaults to `/`.
	Path *string `pulumi:"path"`
	// The port number on which to connect. Possible values are between `1` and `65535`.
	Port int `pulumi:"port"`
	// The number of consecutive successful responses required to consider this probe as successful. Possible values are between `1` and `10`. Defaults to `3`.
	SuccessCountThreshold *int `pulumi:"successCountThreshold"`
	// Time in seconds after which the probe times out. Possible values are in the range `1` - `240`. Defaults to `1`.
	Timeout *int `pulumi:"timeout"`
	// Type of probe. Possible values are `TCP`, `HTTP`, and `HTTPS`.
	Transport string `pulumi:"transport"`
}

// AppTemplateContainerReadinessProbeInput is an input type that accepts AppTemplateContainerReadinessProbeArgs and AppTemplateContainerReadinessProbeOutput values.
// You can construct a concrete instance of `AppTemplateContainerReadinessProbeInput` via:
//
//	AppTemplateContainerReadinessProbeArgs{...}
type AppTemplateContainerReadinessProbeInput interface {
	pulumi.Input

	ToAppTemplateContainerReadinessProbeOutput() AppTemplateContainerReadinessProbeOutput
	ToAppTemplateContainerReadinessProbeOutputWithContext(context.Context) AppTemplateContainerReadinessProbeOutput
}

type AppTemplateContainerReadinessProbeArgs struct {
	// The number of consecutive failures required to consider this probe as failed. Possible values are between `1` and `10`. Defaults to `3`.
	FailureCountThreshold pulumi.IntPtrInput `pulumi:"failureCountThreshold"`
	// A `header` block as detailed below.
	Headers AppTemplateContainerReadinessProbeHeaderArrayInput `pulumi:"headers"`
	// The probe hostname. Defaults to the pod IP address. Setting a value for `Host` in `headers` can be used to override this for `HTTP` and `HTTPS` type probes.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// How often, in seconds, the probe should run. Possible values are between `1` and `240`. Defaults to `10`
	IntervalSeconds pulumi.IntPtrInput `pulumi:"intervalSeconds"`
	// The URI to use for http type probes. Not valid for `TCP` type probes. Defaults to `/`.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port number on which to connect. Possible values are between `1` and `65535`.
	Port pulumi.IntInput `pulumi:"port"`
	// The number of consecutive successful responses required to consider this probe as successful. Possible values are between `1` and `10`. Defaults to `3`.
	SuccessCountThreshold pulumi.IntPtrInput `pulumi:"successCountThreshold"`
	// Time in seconds after which the probe times out. Possible values are in the range `1` - `240`. Defaults to `1`.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// Type of probe. Possible values are `TCP`, `HTTP`, and `HTTPS`.
	Transport pulumi.StringInput `pulumi:"transport"`
}

func (AppTemplateContainerReadinessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppTemplateContainerReadinessProbe)(nil)).Elem()
}

func (i AppTemplateContainerReadinessProbeArgs) ToAppTemplateContainerReadinessProbeOutput() AppTemplateContainerReadinessProbeOutput {
	return i.ToAppTemplateContainerReadinessProbeOutputWithContext(context.Background())
}

func (i AppTemplateContainerReadinessProbeArgs) ToAppTemplateContainerReadinessProbeOutputWithContext(ctx context.Context) AppTemplateContainerReadinessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppTemplateContainerReadinessProbeOutput)
}

// AppTemplateContainerReadinessProbeArrayInput is an input type that accepts AppTemplateContainerReadinessProbeArray and AppTemplateContainerReadinessProbeArrayOutput values.
// You can construct a concrete instance of `AppTemplateContainerReadinessProbeArrayInput` via:
//
//	AppTemplateContainerReadinessProbeArray{ AppTemplateContainerReadinessProbeArgs{...} }
type AppTemplateContainerReadinessProbeArrayInput interface {
	pulumi.Input

	ToAppTemplateContainerReadinessProbeArrayOutput() AppTemplateContainerReadinessProbeArrayOutput
	ToAppTemplateContainerReadinessProbeArrayOutputWithContext(context.Context) AppTemplateContainerReadinessProbeArrayOutput
}

type AppTemplateContainerReadinessProbeArray []AppTemplateContainerReadinessProbeInput

func (AppTemplateContainerReadinessProbeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppTemplateContainerReadinessProbe)(nil)).Elem()
}

func (i AppTemplateContainerReadinessProbeArray) ToAppTemplateContainerReadinessProbeArrayOutput() AppTemplateContainerReadinessProbeArrayOutput {
	return i.ToAppTemplateContainerReadinessProbeArrayOutputWithContext(context.Background())
}

func (i AppTemplateContainerReadinessProbeArray) ToAppTemplateContainerReadinessProbeArrayOutputWithContext(ctx context.Context) AppTemplateContainerReadinessProbeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppTemplateContainerReadinessProbeArrayOutput)
}

type AppTemplateContainerReadinessProbeOutput struct{ *pulumi.OutputState }

func (AppTemplateContainerReadinessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppTemplateContainerReadinessProbe)(nil)).Elem()
}

func (o AppTemplateContainerReadinessProbeOutput) ToAppTemplateContainerReadinessProbeOutput() AppTemplateContainerReadinessProbeOutput {
	return o
}

func (o AppTemplateContainerReadinessProbeOutput) ToAppTemplateContainerReadinessProbeOutputWithContext(ctx context.Context) AppTemplateContainerReadinessProbeOutput {
	return o
}

// The number of consecutive failures required to consider this probe as failed. Possible values are between `1` and `10`. Defaults to `3`.
func (o AppTemplateContainerReadinessProbeOutput) FailureCountThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppTemplateContainerReadinessProbe) *int { return v.FailureCountThreshold }).(pulumi.IntPtrOutput)
}

// A `header` block as detailed below.
func (o AppTemplateContainerReadinessProbeOutput) Headers() AppTemplateContainerReadinessProbeHeaderArrayOutput {
	return o.ApplyT(func(v AppTemplateContainerReadinessProbe) []AppTemplateContainerReadinessProbeHeader {
		return v.Headers
	}).(AppTemplateContainerReadinessProbeHeaderArrayOutput)
}

// The probe hostname. Defaults to the pod IP address. Setting a value for `Host` in `headers` can be used to override this for `HTTP` and `HTTPS` type probes.
func (o AppTemplateContainerReadinessProbeOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppTemplateContainerReadinessProbe) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// How often, in seconds, the probe should run. Possible values are between `1` and `240`. Defaults to `10`
func (o AppTemplateContainerReadinessProbeOutput) IntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppTemplateContainerReadinessProbe) *int { return v.IntervalSeconds }).(pulumi.IntPtrOutput)
}

// The URI to use for http type probes. Not valid for `TCP` type probes. Defaults to `/`.
func (o AppTemplateContainerReadinessProbeOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppTemplateContainerReadinessProbe) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port number on which to connect. Possible values are between `1` and `65535`.
func (o AppTemplateContainerReadinessProbeOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v AppTemplateContainerReadinessProbe) int { return v.Port }).(pulumi.IntOutput)
}

// The number of consecutive successful responses required to consider this probe as successful. Possible values are between `1` and `10`. Defaults to `3`.
func (o AppTemplateContainerReadinessProbeOutput) SuccessCountThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppTemplateContainerReadinessProbe) *int { return v.SuccessCountThreshold }).(pulumi.IntPtrOutput)
}

// Time in seconds after which the probe times out. Possible values are in the range `1` - `240`. Defaults to `1`.
func (o AppTemplateContainerReadinessProbeOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppTemplateContainerReadinessProbe) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// Type of probe. Possible values are `TCP`, `HTTP`, and `HTTPS`.
func (o AppTemplateContainerReadinessProbeOutput) Transport() pulumi.StringOutput {
	return o.ApplyT(func(v AppTemplateContainerReadinessProbe) string { return v.Transport }).(pulumi.StringOutput)
}

type AppTemplateContainerReadinessProbeArrayOutput struct{ *pulumi.OutputState }

func (AppTemplateContainerReadinessProbeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppTemplateContainerReadinessProbe)(nil)).Elem()
}

func (o AppTemplateContainerReadinessProbeArrayOutput) ToAppTemplateContainerReadinessProbeArrayOutput() AppTemplateContainerReadinessProbeArrayOutput {
	return o
}

func (o AppTemplateContainerReadinessProbeArrayOutput) ToAppTemplateContainerReadinessProbeArrayOutputWithContext(ctx context.Context) AppTemplateContainerReadinessProbeArrayOutput {
	return o
}

func (o AppTemplateContainerReadinessProbeArrayOutput) Index(i pulumi.IntInput) AppTemplateContainerReadinessProbeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppTemplateContainerReadinessProbe {
		return vs[0].([]AppTemplateContainerReadinessProbe)[vs[1].(int)]
	}).(AppTemplateContainerReadinessProbeOutput)
}

type AppTemplateContainerReadinessProbeHeader struct {
	// The HTTP Header Name.
	Name string `pulumi:"name"`
	// The HTTP Header value.
	Value string `pulumi:"value"`
}

// AppTemplateContainerReadinessProbeHeaderInput is an input type that accepts AppTemplateContainerReadinessProbeHeaderArgs and AppTemplateContainerReadinessProbeHeaderOutput values.
// You can construct a concrete instance of `AppTemplateContainerReadinessProbeHeaderInput` via:
//
//	AppTemplateContainerReadinessProbeHeaderArgs{...}
type AppTemplateContainerReadinessProbeHeaderInput interface {
	pulumi.Input

	ToAppTemplateContainerReadinessProbeHeaderOutput() AppTemplateContainerReadinessProbeHeaderOutput
	ToAppTemplateContainerReadinessProbeHeaderOutputWithContext(context.Context) AppTemplateContainerReadinessProbeHeaderOutput
}

type AppTemplateContainerReadinessProbeHeaderArgs struct {
	// The HTTP Header Name.
	Name pulumi.StringInput `pulumi:"name"`
	// The HTTP Header value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AppTemplateContainerReadinessProbeHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppTemplateContainerReadinessProbeHeader)(nil)).Elem()
}

func (i AppTemplateContainerReadinessProbeHeaderArgs) ToAppTemplateContainerReadinessProbeHeaderOutput() AppTemplateContainerReadinessProbeHeaderOutput {
	return i.ToAppTemplateContainerReadinessProbeHeaderOutputWithContext(context.Background())
}

func (i AppTemplateContainerReadinessProbeHeaderArgs) ToAppTemplateContainerReadinessProbeHeaderOutputWithContext(ctx context.Context) AppTemplateContainerReadinessProbeHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppTemplateContainerReadinessProbeHeaderOutput)
}

// AppTemplateContainerReadinessProbeHeaderArrayInput is an input type that accepts AppTemplateContainerReadinessProbeHeaderArray and AppTemplateContainerReadinessProbeHeaderArrayOutput values.
// You can construct a concrete instance of `AppTemplateContainerReadinessProbeHeaderArrayInput` via:
//
//	AppTemplateContainerReadinessProbeHeaderArray{ AppTemplateContainerReadinessProbeHeaderArgs{...} }
type AppTemplateContainerReadinessProbeHeaderArrayInput interface {
	pulumi.Input

	ToAppTemplateContainerReadinessProbeHeaderArrayOutput() AppTemplateContainerReadinessProbeHeaderArrayOutput
	ToAppTemplateContainerReadinessProbeHeaderArrayOutputWithContext(context.Context) AppTemplateContainerReadinessProbeHeaderArrayOutput
}

type AppTemplateContainerReadinessProbeHeaderArray []AppTemplateContainerReadinessProbeHeaderInput

func (AppTemplateContainerReadinessProbeHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppTemplateContainerReadinessProbeHeader)(nil)).Elem()
}

func (i AppTemplateContainerReadinessProbeHeaderArray) ToAppTemplateContainerReadinessProbeHeaderArrayOutput() AppTemplateContainerReadinessProbeHeaderArrayOutput {
	return i.ToAppTemplateContainerReadinessProbeHeaderArrayOutputWithContext(context.Background())
}

func (i AppTemplateContainerReadinessProbeHeaderArray) ToAppTemplateContainerReadinessProbeHeaderArrayOutputWithContext(ctx context.Context) AppTemplateContainerReadinessProbeHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppTemplateContainerReadinessProbeHeaderArrayOutput)
}

type AppTemplateContainerReadinessProbeHeaderOutput struct{ *pulumi.OutputState }

func (AppTemplateContainerReadinessProbeHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppTemplateContainerReadinessProbeHeader)(nil)).Elem()
}

func (o AppTemplateContainerReadinessProbeHeaderOutput) ToAppTemplateContainerReadinessProbeHeaderOutput() AppTemplateContainerReadinessProbeHeaderOutput {
	return o
}

func (o AppTemplateContainerReadinessProbeHeaderOutput) ToAppTemplateContainerReadinessProbeHeaderOutputWithContext(ctx context.Context) AppTemplateContainerReadinessProbeHeaderOutput {
	return o
}

// The HTTP Header Name.
func (o AppTemplateContainerReadinessProbeHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppTemplateContainerReadinessProbeHeader) string { return v.Name }).(pulumi.StringOutput)
}

// The HTTP Header value.
func (o AppTemplateContainerReadinessProbeHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AppTemplateContainerReadinessProbeHeader) string { return v.Value }).(pulumi.StringOutput)
}

type AppTemplateContainerReadinessProbeHeaderArrayOutput struct{ *pulumi.OutputState }

func (AppTemplateContainerReadinessProbeHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppTemplateContainerReadinessProbeHeader)(nil)).Elem()
}

func (o AppTemplateContainerReadinessProbeHeaderArrayOutput) ToAppTemplateContainerReadinessProbeHeaderArrayOutput() AppTemplateContainerReadinessProbeHeaderArrayOutput {
	return o
}

func (o AppTemplateContainerReadinessProbeHeaderArrayOutput) ToAppTemplateContainerReadinessProbeHeaderArrayOutputWithContext(ctx context.Context) AppTemplateContainerReadinessProbeHeaderArrayOutput {
	return o
}

func (o AppTemplateContainerReadinessProbeHeaderArrayOutput) Index(i pulumi.IntInput) AppTemplateContainerReadinessProbeHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppTemplateContainerReadinessProbeHeader {
		return vs[0].([]AppTemplateContainerReadinessProbeHeader)[vs[1].(int)]
	}).(AppTemplateContainerReadinessProbeHeaderOutput)
}

type AppTemplateContainerStartupProbe struct {
	// The number of consecutive failures required to consider this probe as failed. Possible values are between `1` and `10`. Defaults to `3`.
	FailureCountThreshold *int `pulumi:"failureCountThreshold"`
	// A `header` block as detailed below.
	Headers []AppTemplateContainerStartupProbeHeader `pulumi:"headers"`
	// The value for the host header which should be sent with this probe. If unspecified, the IP Address of the Pod is used as the host header. Setting a value for `Host` in `headers` can be used to override this for `HTTP` and `HTTPS` type probes.
	Host *string `pulumi:"host"`
	// How often, in seconds, the probe should run. Possible values are between `1` and `240`. Defaults to `10`
	IntervalSeconds *int `pulumi:"intervalSeconds"`
	// The URI to use with the `host` for http type probes. Not valid for `TCP` type probes. Defaults to `/`.
	Path *string `pulumi:"path"`
	// The port number on which to connect. Possible values are between `1` and `65535`.
	Port int `pulumi:"port"`
	// The time in seconds after the container is sent the termination signal before the process if forcibly killed.
	TerminationGracePeriodSeconds *int `pulumi:"terminationGracePeriodSeconds"`
	// Time in seconds after which the probe times out. Possible values are in the range `1` - `240`. Defaults to `1`.
	Timeout *int `pulumi:"timeout"`
	// Type of probe. Possible values are `TCP`, `HTTP`, and `HTTPS`.
	Transport string `pulumi:"transport"`
}

// AppTemplateContainerStartupProbeInput is an input type that accepts AppTemplateContainerStartupProbeArgs and AppTemplateContainerStartupProbeOutput values.
// You can construct a concrete instance of `AppTemplateContainerStartupProbeInput` via:
//
//	AppTemplateContainerStartupProbeArgs{...}
type AppTemplateContainerStartupProbeInput interface {
	pulumi.Input

	ToAppTemplateContainerStartupProbeOutput() AppTemplateContainerStartupProbeOutput
	ToAppTemplateContainerStartupProbeOutputWithContext(context.Context) AppTemplateContainerStartupProbeOutput
}

type AppTemplateContainerStartupProbeArgs struct {
	// The number of consecutive failures required to consider this probe as failed. Possible values are between `1` and `10`. Defaults to `3`.
	FailureCountThreshold pulumi.IntPtrInput `pulumi:"failureCountThreshold"`
	// A `header` block as detailed below.
	Headers AppTemplateContainerStartupProbeHeaderArrayInput `pulumi:"headers"`
	// The value for the host header which should be sent with this probe. If unspecified, the IP Address of the Pod is used as the host header. Setting a value for `Host` in `headers` can be used to override this for `HTTP` and `HTTPS` type probes.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// How often, in seconds, the probe should run. Possible values are between `1` and `240`. Defaults to `10`
	IntervalSeconds pulumi.IntPtrInput `pulumi:"intervalSeconds"`
	// The URI to use with the `host` for http type probes. Not valid for `TCP` type probes. Defaults to `/`.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port number on which to connect. Possible values are between `1` and `65535`.
	Port pulumi.IntInput `pulumi:"port"`
	// The time in seconds after the container is sent the termination signal before the process if forcibly killed.
	TerminationGracePeriodSeconds pulumi.IntPtrInput `pulumi:"terminationGracePeriodSeconds"`
	// Time in seconds after which the probe times out. Possible values are in the range `1` - `240`. Defaults to `1`.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// Type of probe. Possible values are `TCP`, `HTTP`, and `HTTPS`.
	Transport pulumi.StringInput `pulumi:"transport"`
}

func (AppTemplateContainerStartupProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppTemplateContainerStartupProbe)(nil)).Elem()
}

func (i AppTemplateContainerStartupProbeArgs) ToAppTemplateContainerStartupProbeOutput() AppTemplateContainerStartupProbeOutput {
	return i.ToAppTemplateContainerStartupProbeOutputWithContext(context.Background())
}

func (i AppTemplateContainerStartupProbeArgs) ToAppTemplateContainerStartupProbeOutputWithContext(ctx context.Context) AppTemplateContainerStartupProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppTemplateContainerStartupProbeOutput)
}

// AppTemplateContainerStartupProbeArrayInput is an input type that accepts AppTemplateContainerStartupProbeArray and AppTemplateContainerStartupProbeArrayOutput values.
// You can construct a concrete instance of `AppTemplateContainerStartupProbeArrayInput` via:
//
//	AppTemplateContainerStartupProbeArray{ AppTemplateContainerStartupProbeArgs{...} }
type AppTemplateContainerStartupProbeArrayInput interface {
	pulumi.Input

	ToAppTemplateContainerStartupProbeArrayOutput() AppTemplateContainerStartupProbeArrayOutput
	ToAppTemplateContainerStartupProbeArrayOutputWithContext(context.Context) AppTemplateContainerStartupProbeArrayOutput
}

type AppTemplateContainerStartupProbeArray []AppTemplateContainerStartupProbeInput

func (AppTemplateContainerStartupProbeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppTemplateContainerStartupProbe)(nil)).Elem()
}

func (i AppTemplateContainerStartupProbeArray) ToAppTemplateContainerStartupProbeArrayOutput() AppTemplateContainerStartupProbeArrayOutput {
	return i.ToAppTemplateContainerStartupProbeArrayOutputWithContext(context.Background())
}

func (i AppTemplateContainerStartupProbeArray) ToAppTemplateContainerStartupProbeArrayOutputWithContext(ctx context.Context) AppTemplateContainerStartupProbeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppTemplateContainerStartupProbeArrayOutput)
}

type AppTemplateContainerStartupProbeOutput struct{ *pulumi.OutputState }

func (AppTemplateContainerStartupProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppTemplateContainerStartupProbe)(nil)).Elem()
}

func (o AppTemplateContainerStartupProbeOutput) ToAppTemplateContainerStartupProbeOutput() AppTemplateContainerStartupProbeOutput {
	return o
}

func (o AppTemplateContainerStartupProbeOutput) ToAppTemplateContainerStartupProbeOutputWithContext(ctx context.Context) AppTemplateContainerStartupProbeOutput {
	return o
}

// The number of consecutive failures required to consider this probe as failed. Possible values are between `1` and `10`. Defaults to `3`.
func (o AppTemplateContainerStartupProbeOutput) FailureCountThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppTemplateContainerStartupProbe) *int { return v.FailureCountThreshold }).(pulumi.IntPtrOutput)
}

// A `header` block as detailed below.
func (o AppTemplateContainerStartupProbeOutput) Headers() AppTemplateContainerStartupProbeHeaderArrayOutput {
	return o.ApplyT(func(v AppTemplateContainerStartupProbe) []AppTemplateContainerStartupProbeHeader { return v.Headers }).(AppTemplateContainerStartupProbeHeaderArrayOutput)
}

// The value for the host header which should be sent with this probe. If unspecified, the IP Address of the Pod is used as the host header. Setting a value for `Host` in `headers` can be used to override this for `HTTP` and `HTTPS` type probes.
func (o AppTemplateContainerStartupProbeOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppTemplateContainerStartupProbe) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// How often, in seconds, the probe should run. Possible values are between `1` and `240`. Defaults to `10`
func (o AppTemplateContainerStartupProbeOutput) IntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppTemplateContainerStartupProbe) *int { return v.IntervalSeconds }).(pulumi.IntPtrOutput)
}

// The URI to use with the `host` for http type probes. Not valid for `TCP` type probes. Defaults to `/`.
func (o AppTemplateContainerStartupProbeOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppTemplateContainerStartupProbe) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port number on which to connect. Possible values are between `1` and `65535`.
func (o AppTemplateContainerStartupProbeOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v AppTemplateContainerStartupProbe) int { return v.Port }).(pulumi.IntOutput)
}

// The time in seconds after the container is sent the termination signal before the process if forcibly killed.
func (o AppTemplateContainerStartupProbeOutput) TerminationGracePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppTemplateContainerStartupProbe) *int { return v.TerminationGracePeriodSeconds }).(pulumi.IntPtrOutput)
}

// Time in seconds after which the probe times out. Possible values are in the range `1` - `240`. Defaults to `1`.
func (o AppTemplateContainerStartupProbeOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppTemplateContainerStartupProbe) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// Type of probe. Possible values are `TCP`, `HTTP`, and `HTTPS`.
func (o AppTemplateContainerStartupProbeOutput) Transport() pulumi.StringOutput {
	return o.ApplyT(func(v AppTemplateContainerStartupProbe) string { return v.Transport }).(pulumi.StringOutput)
}

type AppTemplateContainerStartupProbeArrayOutput struct{ *pulumi.OutputState }

func (AppTemplateContainerStartupProbeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppTemplateContainerStartupProbe)(nil)).Elem()
}

func (o AppTemplateContainerStartupProbeArrayOutput) ToAppTemplateContainerStartupProbeArrayOutput() AppTemplateContainerStartupProbeArrayOutput {
	return o
}

func (o AppTemplateContainerStartupProbeArrayOutput) ToAppTemplateContainerStartupProbeArrayOutputWithContext(ctx context.Context) AppTemplateContainerStartupProbeArrayOutput {
	return o
}

func (o AppTemplateContainerStartupProbeArrayOutput) Index(i pulumi.IntInput) AppTemplateContainerStartupProbeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppTemplateContainerStartupProbe {
		return vs[0].([]AppTemplateContainerStartupProbe)[vs[1].(int)]
	}).(AppTemplateContainerStartupProbeOutput)
}

type AppTemplateContainerStartupProbeHeader struct {
	// The HTTP Header Name.
	Name string `pulumi:"name"`
	// The HTTP Header value.
	Value string `pulumi:"value"`
}

// AppTemplateContainerStartupProbeHeaderInput is an input type that accepts AppTemplateContainerStartupProbeHeaderArgs and AppTemplateContainerStartupProbeHeaderOutput values.
// You can construct a concrete instance of `AppTemplateContainerStartupProbeHeaderInput` via:
//
//	AppTemplateContainerStartupProbeHeaderArgs{...}
type AppTemplateContainerStartupProbeHeaderInput interface {
	pulumi.Input

	ToAppTemplateContainerStartupProbeHeaderOutput() AppTemplateContainerStartupProbeHeaderOutput
	ToAppTemplateContainerStartupProbeHeaderOutputWithContext(context.Context) AppTemplateContainerStartupProbeHeaderOutput
}

type AppTemplateContainerStartupProbeHeaderArgs struct {
	// The HTTP Header Name.
	Name pulumi.StringInput `pulumi:"name"`
	// The HTTP Header value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AppTemplateContainerStartupProbeHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppTemplateContainerStartupProbeHeader)(nil)).Elem()
}

func (i AppTemplateContainerStartupProbeHeaderArgs) ToAppTemplateContainerStartupProbeHeaderOutput() AppTemplateContainerStartupProbeHeaderOutput {
	return i.ToAppTemplateContainerStartupProbeHeaderOutputWithContext(context.Background())
}

func (i AppTemplateContainerStartupProbeHeaderArgs) ToAppTemplateContainerStartupProbeHeaderOutputWithContext(ctx context.Context) AppTemplateContainerStartupProbeHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppTemplateContainerStartupProbeHeaderOutput)
}

// AppTemplateContainerStartupProbeHeaderArrayInput is an input type that accepts AppTemplateContainerStartupProbeHeaderArray and AppTemplateContainerStartupProbeHeaderArrayOutput values.
// You can construct a concrete instance of `AppTemplateContainerStartupProbeHeaderArrayInput` via:
//
//	AppTemplateContainerStartupProbeHeaderArray{ AppTemplateContainerStartupProbeHeaderArgs{...} }
type AppTemplateContainerStartupProbeHeaderArrayInput interface {
	pulumi.Input

	ToAppTemplateContainerStartupProbeHeaderArrayOutput() AppTemplateContainerStartupProbeHeaderArrayOutput
	ToAppTemplateContainerStartupProbeHeaderArrayOutputWithContext(context.Context) AppTemplateContainerStartupProbeHeaderArrayOutput
}

type AppTemplateContainerStartupProbeHeaderArray []AppTemplateContainerStartupProbeHeaderInput

func (AppTemplateContainerStartupProbeHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppTemplateContainerStartupProbeHeader)(nil)).Elem()
}

func (i AppTemplateContainerStartupProbeHeaderArray) ToAppTemplateContainerStartupProbeHeaderArrayOutput() AppTemplateContainerStartupProbeHeaderArrayOutput {
	return i.ToAppTemplateContainerStartupProbeHeaderArrayOutputWithContext(context.Background())
}

func (i AppTemplateContainerStartupProbeHeaderArray) ToAppTemplateContainerStartupProbeHeaderArrayOutputWithContext(ctx context.Context) AppTemplateContainerStartupProbeHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppTemplateContainerStartupProbeHeaderArrayOutput)
}

type AppTemplateContainerStartupProbeHeaderOutput struct{ *pulumi.OutputState }

func (AppTemplateContainerStartupProbeHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppTemplateContainerStartupProbeHeader)(nil)).Elem()
}

func (o AppTemplateContainerStartupProbeHeaderOutput) ToAppTemplateContainerStartupProbeHeaderOutput() AppTemplateContainerStartupProbeHeaderOutput {
	return o
}

func (o AppTemplateContainerStartupProbeHeaderOutput) ToAppTemplateContainerStartupProbeHeaderOutputWithContext(ctx context.Context) AppTemplateContainerStartupProbeHeaderOutput {
	return o
}

// The HTTP Header Name.
func (o AppTemplateContainerStartupProbeHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppTemplateContainerStartupProbeHeader) string { return v.Name }).(pulumi.StringOutput)
}

// The HTTP Header value.
func (o AppTemplateContainerStartupProbeHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AppTemplateContainerStartupProbeHeader) string { return v.Value }).(pulumi.StringOutput)
}

type AppTemplateContainerStartupProbeHeaderArrayOutput struct{ *pulumi.OutputState }

func (AppTemplateContainerStartupProbeHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppTemplateContainerStartupProbeHeader)(nil)).Elem()
}

func (o AppTemplateContainerStartupProbeHeaderArrayOutput) ToAppTemplateContainerStartupProbeHeaderArrayOutput() AppTemplateContainerStartupProbeHeaderArrayOutput {
	return o
}

func (o AppTemplateContainerStartupProbeHeaderArrayOutput) ToAppTemplateContainerStartupProbeHeaderArrayOutputWithContext(ctx context.Context) AppTemplateContainerStartupProbeHeaderArrayOutput {
	return o
}

func (o AppTemplateContainerStartupProbeHeaderArrayOutput) Index(i pulumi.IntInput) AppTemplateContainerStartupProbeHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppTemplateContainerStartupProbeHeader {
		return vs[0].([]AppTemplateContainerStartupProbeHeader)[vs[1].(int)]
	}).(AppTemplateContainerStartupProbeHeaderOutput)
}

type AppTemplateContainerVolumeMount struct {
	// The name of the Volume to be mounted in the container.
	Name string `pulumi:"name"`
	// The path in the container at which to mount this volume.
	Path string `pulumi:"path"`
}

// AppTemplateContainerVolumeMountInput is an input type that accepts AppTemplateContainerVolumeMountArgs and AppTemplateContainerVolumeMountOutput values.
// You can construct a concrete instance of `AppTemplateContainerVolumeMountInput` via:
//
//	AppTemplateContainerVolumeMountArgs{...}
type AppTemplateContainerVolumeMountInput interface {
	pulumi.Input

	ToAppTemplateContainerVolumeMountOutput() AppTemplateContainerVolumeMountOutput
	ToAppTemplateContainerVolumeMountOutputWithContext(context.Context) AppTemplateContainerVolumeMountOutput
}

type AppTemplateContainerVolumeMountArgs struct {
	// The name of the Volume to be mounted in the container.
	Name pulumi.StringInput `pulumi:"name"`
	// The path in the container at which to mount this volume.
	Path pulumi.StringInput `pulumi:"path"`
}

func (AppTemplateContainerVolumeMountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppTemplateContainerVolumeMount)(nil)).Elem()
}

func (i AppTemplateContainerVolumeMountArgs) ToAppTemplateContainerVolumeMountOutput() AppTemplateContainerVolumeMountOutput {
	return i.ToAppTemplateContainerVolumeMountOutputWithContext(context.Background())
}

func (i AppTemplateContainerVolumeMountArgs) ToAppTemplateContainerVolumeMountOutputWithContext(ctx context.Context) AppTemplateContainerVolumeMountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppTemplateContainerVolumeMountOutput)
}

// AppTemplateContainerVolumeMountArrayInput is an input type that accepts AppTemplateContainerVolumeMountArray and AppTemplateContainerVolumeMountArrayOutput values.
// You can construct a concrete instance of `AppTemplateContainerVolumeMountArrayInput` via:
//
//	AppTemplateContainerVolumeMountArray{ AppTemplateContainerVolumeMountArgs{...} }
type AppTemplateContainerVolumeMountArrayInput interface {
	pulumi.Input

	ToAppTemplateContainerVolumeMountArrayOutput() AppTemplateContainerVolumeMountArrayOutput
	ToAppTemplateContainerVolumeMountArrayOutputWithContext(context.Context) AppTemplateContainerVolumeMountArrayOutput
}

type AppTemplateContainerVolumeMountArray []AppTemplateContainerVolumeMountInput

func (AppTemplateContainerVolumeMountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppTemplateContainerVolumeMount)(nil)).Elem()
}

func (i AppTemplateContainerVolumeMountArray) ToAppTemplateContainerVolumeMountArrayOutput() AppTemplateContainerVolumeMountArrayOutput {
	return i.ToAppTemplateContainerVolumeMountArrayOutputWithContext(context.Background())
}

func (i AppTemplateContainerVolumeMountArray) ToAppTemplateContainerVolumeMountArrayOutputWithContext(ctx context.Context) AppTemplateContainerVolumeMountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppTemplateContainerVolumeMountArrayOutput)
}

type AppTemplateContainerVolumeMountOutput struct{ *pulumi.OutputState }

func (AppTemplateContainerVolumeMountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppTemplateContainerVolumeMount)(nil)).Elem()
}

func (o AppTemplateContainerVolumeMountOutput) ToAppTemplateContainerVolumeMountOutput() AppTemplateContainerVolumeMountOutput {
	return o
}

func (o AppTemplateContainerVolumeMountOutput) ToAppTemplateContainerVolumeMountOutputWithContext(ctx context.Context) AppTemplateContainerVolumeMountOutput {
	return o
}

// The name of the Volume to be mounted in the container.
func (o AppTemplateContainerVolumeMountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppTemplateContainerVolumeMount) string { return v.Name }).(pulumi.StringOutput)
}

// The path in the container at which to mount this volume.
func (o AppTemplateContainerVolumeMountOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v AppTemplateContainerVolumeMount) string { return v.Path }).(pulumi.StringOutput)
}

type AppTemplateContainerVolumeMountArrayOutput struct{ *pulumi.OutputState }

func (AppTemplateContainerVolumeMountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppTemplateContainerVolumeMount)(nil)).Elem()
}

func (o AppTemplateContainerVolumeMountArrayOutput) ToAppTemplateContainerVolumeMountArrayOutput() AppTemplateContainerVolumeMountArrayOutput {
	return o
}

func (o AppTemplateContainerVolumeMountArrayOutput) ToAppTemplateContainerVolumeMountArrayOutputWithContext(ctx context.Context) AppTemplateContainerVolumeMountArrayOutput {
	return o
}

func (o AppTemplateContainerVolumeMountArrayOutput) Index(i pulumi.IntInput) AppTemplateContainerVolumeMountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppTemplateContainerVolumeMount {
		return vs[0].([]AppTemplateContainerVolumeMount)[vs[1].(int)]
	}).(AppTemplateContainerVolumeMountOutput)
}

type AppTemplateVolume struct {
	// The name of the volume.
	Name string `pulumi:"name"`
	// The name of the `AzureFile` storage.
	StorageName *string `pulumi:"storageName"`
	// The type of storage volume. Possible values include `AzureFile` and `EmptyDir`. Defaults to `EmptyDir`.
	StorageType *string `pulumi:"storageType"`
}

// AppTemplateVolumeInput is an input type that accepts AppTemplateVolumeArgs and AppTemplateVolumeOutput values.
// You can construct a concrete instance of `AppTemplateVolumeInput` via:
//
//	AppTemplateVolumeArgs{...}
type AppTemplateVolumeInput interface {
	pulumi.Input

	ToAppTemplateVolumeOutput() AppTemplateVolumeOutput
	ToAppTemplateVolumeOutputWithContext(context.Context) AppTemplateVolumeOutput
}

type AppTemplateVolumeArgs struct {
	// The name of the volume.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the `AzureFile` storage.
	StorageName pulumi.StringPtrInput `pulumi:"storageName"`
	// The type of storage volume. Possible values include `AzureFile` and `EmptyDir`. Defaults to `EmptyDir`.
	StorageType pulumi.StringPtrInput `pulumi:"storageType"`
}

func (AppTemplateVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppTemplateVolume)(nil)).Elem()
}

func (i AppTemplateVolumeArgs) ToAppTemplateVolumeOutput() AppTemplateVolumeOutput {
	return i.ToAppTemplateVolumeOutputWithContext(context.Background())
}

func (i AppTemplateVolumeArgs) ToAppTemplateVolumeOutputWithContext(ctx context.Context) AppTemplateVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppTemplateVolumeOutput)
}

// AppTemplateVolumeArrayInput is an input type that accepts AppTemplateVolumeArray and AppTemplateVolumeArrayOutput values.
// You can construct a concrete instance of `AppTemplateVolumeArrayInput` via:
//
//	AppTemplateVolumeArray{ AppTemplateVolumeArgs{...} }
type AppTemplateVolumeArrayInput interface {
	pulumi.Input

	ToAppTemplateVolumeArrayOutput() AppTemplateVolumeArrayOutput
	ToAppTemplateVolumeArrayOutputWithContext(context.Context) AppTemplateVolumeArrayOutput
}

type AppTemplateVolumeArray []AppTemplateVolumeInput

func (AppTemplateVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppTemplateVolume)(nil)).Elem()
}

func (i AppTemplateVolumeArray) ToAppTemplateVolumeArrayOutput() AppTemplateVolumeArrayOutput {
	return i.ToAppTemplateVolumeArrayOutputWithContext(context.Background())
}

func (i AppTemplateVolumeArray) ToAppTemplateVolumeArrayOutputWithContext(ctx context.Context) AppTemplateVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppTemplateVolumeArrayOutput)
}

type AppTemplateVolumeOutput struct{ *pulumi.OutputState }

func (AppTemplateVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppTemplateVolume)(nil)).Elem()
}

func (o AppTemplateVolumeOutput) ToAppTemplateVolumeOutput() AppTemplateVolumeOutput {
	return o
}

func (o AppTemplateVolumeOutput) ToAppTemplateVolumeOutputWithContext(ctx context.Context) AppTemplateVolumeOutput {
	return o
}

// The name of the volume.
func (o AppTemplateVolumeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppTemplateVolume) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the `AzureFile` storage.
func (o AppTemplateVolumeOutput) StorageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppTemplateVolume) *string { return v.StorageName }).(pulumi.StringPtrOutput)
}

// The type of storage volume. Possible values include `AzureFile` and `EmptyDir`. Defaults to `EmptyDir`.
func (o AppTemplateVolumeOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppTemplateVolume) *string { return v.StorageType }).(pulumi.StringPtrOutput)
}

type AppTemplateVolumeArrayOutput struct{ *pulumi.OutputState }

func (AppTemplateVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppTemplateVolume)(nil)).Elem()
}

func (o AppTemplateVolumeArrayOutput) ToAppTemplateVolumeArrayOutput() AppTemplateVolumeArrayOutput {
	return o
}

func (o AppTemplateVolumeArrayOutput) ToAppTemplateVolumeArrayOutputWithContext(ctx context.Context) AppTemplateVolumeArrayOutput {
	return o
}

func (o AppTemplateVolumeArrayOutput) Index(i pulumi.IntInput) AppTemplateVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppTemplateVolume {
		return vs[0].([]AppTemplateVolume)[vs[1].(int)]
	}).(AppTemplateVolumeOutput)
}

type EnvironmentDaprComponentMetadata struct {
	// The name of the Metadata configuration item.
	Name string `pulumi:"name"`
	// The name of a secret specified in the `secrets` block that contains the value for this metadata configuration item.
	SecretName *string `pulumi:"secretName"`
	// The value for this metadata configuration item.
	Value *string `pulumi:"value"`
}

// EnvironmentDaprComponentMetadataInput is an input type that accepts EnvironmentDaprComponentMetadataArgs and EnvironmentDaprComponentMetadataOutput values.
// You can construct a concrete instance of `EnvironmentDaprComponentMetadataInput` via:
//
//	EnvironmentDaprComponentMetadataArgs{...}
type EnvironmentDaprComponentMetadataInput interface {
	pulumi.Input

	ToEnvironmentDaprComponentMetadataOutput() EnvironmentDaprComponentMetadataOutput
	ToEnvironmentDaprComponentMetadataOutputWithContext(context.Context) EnvironmentDaprComponentMetadataOutput
}

type EnvironmentDaprComponentMetadataArgs struct {
	// The name of the Metadata configuration item.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of a secret specified in the `secrets` block that contains the value for this metadata configuration item.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
	// The value for this metadata configuration item.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (EnvironmentDaprComponentMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentDaprComponentMetadata)(nil)).Elem()
}

func (i EnvironmentDaprComponentMetadataArgs) ToEnvironmentDaprComponentMetadataOutput() EnvironmentDaprComponentMetadataOutput {
	return i.ToEnvironmentDaprComponentMetadataOutputWithContext(context.Background())
}

func (i EnvironmentDaprComponentMetadataArgs) ToEnvironmentDaprComponentMetadataOutputWithContext(ctx context.Context) EnvironmentDaprComponentMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentDaprComponentMetadataOutput)
}

// EnvironmentDaprComponentMetadataArrayInput is an input type that accepts EnvironmentDaprComponentMetadataArray and EnvironmentDaprComponentMetadataArrayOutput values.
// You can construct a concrete instance of `EnvironmentDaprComponentMetadataArrayInput` via:
//
//	EnvironmentDaprComponentMetadataArray{ EnvironmentDaprComponentMetadataArgs{...} }
type EnvironmentDaprComponentMetadataArrayInput interface {
	pulumi.Input

	ToEnvironmentDaprComponentMetadataArrayOutput() EnvironmentDaprComponentMetadataArrayOutput
	ToEnvironmentDaprComponentMetadataArrayOutputWithContext(context.Context) EnvironmentDaprComponentMetadataArrayOutput
}

type EnvironmentDaprComponentMetadataArray []EnvironmentDaprComponentMetadataInput

func (EnvironmentDaprComponentMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentDaprComponentMetadata)(nil)).Elem()
}

func (i EnvironmentDaprComponentMetadataArray) ToEnvironmentDaprComponentMetadataArrayOutput() EnvironmentDaprComponentMetadataArrayOutput {
	return i.ToEnvironmentDaprComponentMetadataArrayOutputWithContext(context.Background())
}

func (i EnvironmentDaprComponentMetadataArray) ToEnvironmentDaprComponentMetadataArrayOutputWithContext(ctx context.Context) EnvironmentDaprComponentMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentDaprComponentMetadataArrayOutput)
}

type EnvironmentDaprComponentMetadataOutput struct{ *pulumi.OutputState }

func (EnvironmentDaprComponentMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentDaprComponentMetadata)(nil)).Elem()
}

func (o EnvironmentDaprComponentMetadataOutput) ToEnvironmentDaprComponentMetadataOutput() EnvironmentDaprComponentMetadataOutput {
	return o
}

func (o EnvironmentDaprComponentMetadataOutput) ToEnvironmentDaprComponentMetadataOutputWithContext(ctx context.Context) EnvironmentDaprComponentMetadataOutput {
	return o
}

// The name of the Metadata configuration item.
func (o EnvironmentDaprComponentMetadataOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentDaprComponentMetadata) string { return v.Name }).(pulumi.StringOutput)
}

// The name of a secret specified in the `secrets` block that contains the value for this metadata configuration item.
func (o EnvironmentDaprComponentMetadataOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentDaprComponentMetadata) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

// The value for this metadata configuration item.
func (o EnvironmentDaprComponentMetadataOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentDaprComponentMetadata) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type EnvironmentDaprComponentMetadataArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentDaprComponentMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentDaprComponentMetadata)(nil)).Elem()
}

func (o EnvironmentDaprComponentMetadataArrayOutput) ToEnvironmentDaprComponentMetadataArrayOutput() EnvironmentDaprComponentMetadataArrayOutput {
	return o
}

func (o EnvironmentDaprComponentMetadataArrayOutput) ToEnvironmentDaprComponentMetadataArrayOutputWithContext(ctx context.Context) EnvironmentDaprComponentMetadataArrayOutput {
	return o
}

func (o EnvironmentDaprComponentMetadataArrayOutput) Index(i pulumi.IntInput) EnvironmentDaprComponentMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentDaprComponentMetadata {
		return vs[0].([]EnvironmentDaprComponentMetadata)[vs[1].(int)]
	}).(EnvironmentDaprComponentMetadataOutput)
}

type EnvironmentDaprComponentSecret struct {
	// The Secret name.
	Name string `pulumi:"name"`
	// The value for this secret.
	Value string `pulumi:"value"`
}

// EnvironmentDaprComponentSecretInput is an input type that accepts EnvironmentDaprComponentSecretArgs and EnvironmentDaprComponentSecretOutput values.
// You can construct a concrete instance of `EnvironmentDaprComponentSecretInput` via:
//
//	EnvironmentDaprComponentSecretArgs{...}
type EnvironmentDaprComponentSecretInput interface {
	pulumi.Input

	ToEnvironmentDaprComponentSecretOutput() EnvironmentDaprComponentSecretOutput
	ToEnvironmentDaprComponentSecretOutputWithContext(context.Context) EnvironmentDaprComponentSecretOutput
}

type EnvironmentDaprComponentSecretArgs struct {
	// The Secret name.
	Name pulumi.StringInput `pulumi:"name"`
	// The value for this secret.
	Value pulumi.StringInput `pulumi:"value"`
}

func (EnvironmentDaprComponentSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentDaprComponentSecret)(nil)).Elem()
}

func (i EnvironmentDaprComponentSecretArgs) ToEnvironmentDaprComponentSecretOutput() EnvironmentDaprComponentSecretOutput {
	return i.ToEnvironmentDaprComponentSecretOutputWithContext(context.Background())
}

func (i EnvironmentDaprComponentSecretArgs) ToEnvironmentDaprComponentSecretOutputWithContext(ctx context.Context) EnvironmentDaprComponentSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentDaprComponentSecretOutput)
}

// EnvironmentDaprComponentSecretArrayInput is an input type that accepts EnvironmentDaprComponentSecretArray and EnvironmentDaprComponentSecretArrayOutput values.
// You can construct a concrete instance of `EnvironmentDaprComponentSecretArrayInput` via:
//
//	EnvironmentDaprComponentSecretArray{ EnvironmentDaprComponentSecretArgs{...} }
type EnvironmentDaprComponentSecretArrayInput interface {
	pulumi.Input

	ToEnvironmentDaprComponentSecretArrayOutput() EnvironmentDaprComponentSecretArrayOutput
	ToEnvironmentDaprComponentSecretArrayOutputWithContext(context.Context) EnvironmentDaprComponentSecretArrayOutput
}

type EnvironmentDaprComponentSecretArray []EnvironmentDaprComponentSecretInput

func (EnvironmentDaprComponentSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentDaprComponentSecret)(nil)).Elem()
}

func (i EnvironmentDaprComponentSecretArray) ToEnvironmentDaprComponentSecretArrayOutput() EnvironmentDaprComponentSecretArrayOutput {
	return i.ToEnvironmentDaprComponentSecretArrayOutputWithContext(context.Background())
}

func (i EnvironmentDaprComponentSecretArray) ToEnvironmentDaprComponentSecretArrayOutputWithContext(ctx context.Context) EnvironmentDaprComponentSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentDaprComponentSecretArrayOutput)
}

type EnvironmentDaprComponentSecretOutput struct{ *pulumi.OutputState }

func (EnvironmentDaprComponentSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentDaprComponentSecret)(nil)).Elem()
}

func (o EnvironmentDaprComponentSecretOutput) ToEnvironmentDaprComponentSecretOutput() EnvironmentDaprComponentSecretOutput {
	return o
}

func (o EnvironmentDaprComponentSecretOutput) ToEnvironmentDaprComponentSecretOutputWithContext(ctx context.Context) EnvironmentDaprComponentSecretOutput {
	return o
}

// The Secret name.
func (o EnvironmentDaprComponentSecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentDaprComponentSecret) string { return v.Name }).(pulumi.StringOutput)
}

// The value for this secret.
func (o EnvironmentDaprComponentSecretOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentDaprComponentSecret) string { return v.Value }).(pulumi.StringOutput)
}

type EnvironmentDaprComponentSecretArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentDaprComponentSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentDaprComponentSecret)(nil)).Elem()
}

func (o EnvironmentDaprComponentSecretArrayOutput) ToEnvironmentDaprComponentSecretArrayOutput() EnvironmentDaprComponentSecretArrayOutput {
	return o
}

func (o EnvironmentDaprComponentSecretArrayOutput) ToEnvironmentDaprComponentSecretArrayOutputWithContext(ctx context.Context) EnvironmentDaprComponentSecretArrayOutput {
	return o
}

func (o EnvironmentDaprComponentSecretArrayOutput) Index(i pulumi.IntInput) EnvironmentDaprComponentSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentDaprComponentSecret {
		return vs[0].([]EnvironmentDaprComponentSecret)[vs[1].(int)]
	}).(EnvironmentDaprComponentSecretOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppDaprInput)(nil)).Elem(), AppDaprArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppDaprPtrInput)(nil)).Elem(), AppDaprArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppIdentityInput)(nil)).Elem(), AppIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppIdentityPtrInput)(nil)).Elem(), AppIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppIngressInput)(nil)).Elem(), AppIngressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppIngressPtrInput)(nil)).Elem(), AppIngressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppIngressCustomDomainInput)(nil)).Elem(), AppIngressCustomDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppIngressCustomDomainPtrInput)(nil)).Elem(), AppIngressCustomDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppIngressTrafficWeightInput)(nil)).Elem(), AppIngressTrafficWeightArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppIngressTrafficWeightArrayInput)(nil)).Elem(), AppIngressTrafficWeightArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppRegistryInput)(nil)).Elem(), AppRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppRegistryArrayInput)(nil)).Elem(), AppRegistryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecretInput)(nil)).Elem(), AppSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSecretArrayInput)(nil)).Elem(), AppSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppTemplateInput)(nil)).Elem(), AppTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppTemplatePtrInput)(nil)).Elem(), AppTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppTemplateContainerInput)(nil)).Elem(), AppTemplateContainerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppTemplateContainerArrayInput)(nil)).Elem(), AppTemplateContainerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppTemplateContainerEnvInput)(nil)).Elem(), AppTemplateContainerEnvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppTemplateContainerEnvArrayInput)(nil)).Elem(), AppTemplateContainerEnvArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppTemplateContainerLivenessProbeInput)(nil)).Elem(), AppTemplateContainerLivenessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppTemplateContainerLivenessProbeArrayInput)(nil)).Elem(), AppTemplateContainerLivenessProbeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppTemplateContainerLivenessProbeHeaderInput)(nil)).Elem(), AppTemplateContainerLivenessProbeHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppTemplateContainerLivenessProbeHeaderArrayInput)(nil)).Elem(), AppTemplateContainerLivenessProbeHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppTemplateContainerReadinessProbeInput)(nil)).Elem(), AppTemplateContainerReadinessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppTemplateContainerReadinessProbeArrayInput)(nil)).Elem(), AppTemplateContainerReadinessProbeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppTemplateContainerReadinessProbeHeaderInput)(nil)).Elem(), AppTemplateContainerReadinessProbeHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppTemplateContainerReadinessProbeHeaderArrayInput)(nil)).Elem(), AppTemplateContainerReadinessProbeHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppTemplateContainerStartupProbeInput)(nil)).Elem(), AppTemplateContainerStartupProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppTemplateContainerStartupProbeArrayInput)(nil)).Elem(), AppTemplateContainerStartupProbeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppTemplateContainerStartupProbeHeaderInput)(nil)).Elem(), AppTemplateContainerStartupProbeHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppTemplateContainerStartupProbeHeaderArrayInput)(nil)).Elem(), AppTemplateContainerStartupProbeHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppTemplateContainerVolumeMountInput)(nil)).Elem(), AppTemplateContainerVolumeMountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppTemplateContainerVolumeMountArrayInput)(nil)).Elem(), AppTemplateContainerVolumeMountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppTemplateVolumeInput)(nil)).Elem(), AppTemplateVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppTemplateVolumeArrayInput)(nil)).Elem(), AppTemplateVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentDaprComponentMetadataInput)(nil)).Elem(), EnvironmentDaprComponentMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentDaprComponentMetadataArrayInput)(nil)).Elem(), EnvironmentDaprComponentMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentDaprComponentSecretInput)(nil)).Elem(), EnvironmentDaprComponentSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentDaprComponentSecretArrayInput)(nil)).Elem(), EnvironmentDaprComponentSecretArray{})
	pulumi.RegisterOutputType(AppDaprOutput{})
	pulumi.RegisterOutputType(AppDaprPtrOutput{})
	pulumi.RegisterOutputType(AppIdentityOutput{})
	pulumi.RegisterOutputType(AppIdentityPtrOutput{})
	pulumi.RegisterOutputType(AppIngressOutput{})
	pulumi.RegisterOutputType(AppIngressPtrOutput{})
	pulumi.RegisterOutputType(AppIngressCustomDomainOutput{})
	pulumi.RegisterOutputType(AppIngressCustomDomainPtrOutput{})
	pulumi.RegisterOutputType(AppIngressTrafficWeightOutput{})
	pulumi.RegisterOutputType(AppIngressTrafficWeightArrayOutput{})
	pulumi.RegisterOutputType(AppRegistryOutput{})
	pulumi.RegisterOutputType(AppRegistryArrayOutput{})
	pulumi.RegisterOutputType(AppSecretOutput{})
	pulumi.RegisterOutputType(AppSecretArrayOutput{})
	pulumi.RegisterOutputType(AppTemplateOutput{})
	pulumi.RegisterOutputType(AppTemplatePtrOutput{})
	pulumi.RegisterOutputType(AppTemplateContainerOutput{})
	pulumi.RegisterOutputType(AppTemplateContainerArrayOutput{})
	pulumi.RegisterOutputType(AppTemplateContainerEnvOutput{})
	pulumi.RegisterOutputType(AppTemplateContainerEnvArrayOutput{})
	pulumi.RegisterOutputType(AppTemplateContainerLivenessProbeOutput{})
	pulumi.RegisterOutputType(AppTemplateContainerLivenessProbeArrayOutput{})
	pulumi.RegisterOutputType(AppTemplateContainerLivenessProbeHeaderOutput{})
	pulumi.RegisterOutputType(AppTemplateContainerLivenessProbeHeaderArrayOutput{})
	pulumi.RegisterOutputType(AppTemplateContainerReadinessProbeOutput{})
	pulumi.RegisterOutputType(AppTemplateContainerReadinessProbeArrayOutput{})
	pulumi.RegisterOutputType(AppTemplateContainerReadinessProbeHeaderOutput{})
	pulumi.RegisterOutputType(AppTemplateContainerReadinessProbeHeaderArrayOutput{})
	pulumi.RegisterOutputType(AppTemplateContainerStartupProbeOutput{})
	pulumi.RegisterOutputType(AppTemplateContainerStartupProbeArrayOutput{})
	pulumi.RegisterOutputType(AppTemplateContainerStartupProbeHeaderOutput{})
	pulumi.RegisterOutputType(AppTemplateContainerStartupProbeHeaderArrayOutput{})
	pulumi.RegisterOutputType(AppTemplateContainerVolumeMountOutput{})
	pulumi.RegisterOutputType(AppTemplateContainerVolumeMountArrayOutput{})
	pulumi.RegisterOutputType(AppTemplateVolumeOutput{})
	pulumi.RegisterOutputType(AppTemplateVolumeArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentDaprComponentMetadataOutput{})
	pulumi.RegisterOutputType(EnvironmentDaprComponentMetadataArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentDaprComponentSecretOutput{})
	pulumi.RegisterOutputType(EnvironmentDaprComponentSecretArrayOutput{})
}
