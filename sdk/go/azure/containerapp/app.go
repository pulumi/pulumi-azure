// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerapp

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Container App.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/containerapp"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/operationalinsights"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleAnalyticsWorkspace, err := operationalinsights.NewAnalyticsWorkspace(ctx, "exampleAnalyticsWorkspace", &operationalinsights.AnalyticsWorkspaceArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				Sku:               pulumi.String("PerGB2018"),
//				RetentionInDays:   pulumi.Int(30),
//			})
//			if err != nil {
//				return err
//			}
//			exampleEnvironment, err := containerapp.NewEnvironment(ctx, "exampleEnvironment", &containerapp.EnvironmentArgs{
//				Location:                exampleResourceGroup.Location,
//				ResourceGroupName:       exampleResourceGroup.Name,
//				LogAnalyticsWorkspaceId: exampleAnalyticsWorkspace.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = containerapp.NewApp(ctx, "exampleApp", &containerapp.AppArgs{
//				ContainerAppEnvironmentId: exampleEnvironment.ID(),
//				ResourceGroupName:         exampleResourceGroup.Name,
//				RevisionMode:              pulumi.String("Single"),
//				Template: &containerapp.AppTemplateArgs{
//					Containers: containerapp.AppTemplateContainerArray{
//						&containerapp.AppTemplateContainerArgs{
//							Name:   pulumi.String("examplecontainerapp"),
//							Image:  pulumi.String("mcr.microsoft.com/azuredocs/containerapps-helloworld:latest"),
//							Cpu:    pulumi.Float64(0.25),
//							Memory: pulumi.String("0.5Gi"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// A Container App can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:containerapp/app:App example "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.App/containerApps/myContainerApp"
//
// ```
type App struct {
	pulumi.CustomResourceState

	// The ID of the Container App Environment within which this Container App should exist. Changing this forces a new resource to be created.
	ContainerAppEnvironmentId pulumi.StringOutput `pulumi:"containerAppEnvironmentId"`
	// The ID of the Custom Domain Verification for this Container App.
	CustomDomainVerificationId pulumi.StringOutput `pulumi:"customDomainVerificationId"`
	// A `dapr` block as detailed below.
	Dapr AppDaprPtrOutput `pulumi:"dapr"`
	// An `identity` block as detailed below.
	Identity AppIdentityPtrOutput `pulumi:"identity"`
	// An `ingress` block as detailed below.
	Ingress AppIngressPtrOutput `pulumi:"ingress"`
	// The FQDN of the Latest Revision of the Container App.
	LatestRevisionFqdn pulumi.StringOutput `pulumi:"latestRevisionFqdn"`
	// The name of the latest Container Revision.
	LatestRevisionName pulumi.StringOutput `pulumi:"latestRevisionName"`
	// The location this Container App is deployed in. This is the same as the Environment in which it is deployed.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name for this Container App. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// A list of the Public IP Addresses which the Container App uses for outbound network access.
	OutboundIpAddresses pulumi.StringArrayOutput `pulumi:"outboundIpAddresses"`
	// A `registry` block as detailed below.
	Registries AppRegistryArrayOutput `pulumi:"registries"`
	// The name of the resource group in which the Container App Environment is to be created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The revisions operational mode for the Container App. Possible values include `Single` and `Multiple`. In `Single` mode, a single revision is in operation at any given time. In `Multiple` mode, more than one revision can be active at a time and can be configured with load distribution via the `trafficWeight` block in the `ingress` configuration.
	RevisionMode pulumi.StringOutput `pulumi:"revisionMode"`
	// One or more `secret` block as detailed below.
	Secrets AppSecretArrayOutput `pulumi:"secrets"`
	// A mapping of tags to assign to the Container App.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A `template` block as detailed below.
	Template AppTemplateOutput `pulumi:"template"`
}

// NewApp registers a new resource with the given unique name, arguments, and options.
func NewApp(ctx *pulumi.Context,
	name string, args *AppArgs, opts ...pulumi.ResourceOption) (*App, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ContainerAppEnvironmentId == nil {
		return nil, errors.New("invalid value for required argument 'ContainerAppEnvironmentId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.RevisionMode == nil {
		return nil, errors.New("invalid value for required argument 'RevisionMode'")
	}
	if args.Template == nil {
		return nil, errors.New("invalid value for required argument 'Template'")
	}
	if args.Secrets != nil {
		args.Secrets = pulumi.ToSecret(args.Secrets).(AppSecretArrayInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"customDomainVerificationId",
		"secrets",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource App
	err := ctx.RegisterResource("azure:containerapp/app:App", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApp gets an existing App resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppState, opts ...pulumi.ResourceOption) (*App, error) {
	var resource App
	err := ctx.ReadResource("azure:containerapp/app:App", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering App resources.
type appState struct {
	// The ID of the Container App Environment within which this Container App should exist. Changing this forces a new resource to be created.
	ContainerAppEnvironmentId *string `pulumi:"containerAppEnvironmentId"`
	// The ID of the Custom Domain Verification for this Container App.
	CustomDomainVerificationId *string `pulumi:"customDomainVerificationId"`
	// A `dapr` block as detailed below.
	Dapr *AppDapr `pulumi:"dapr"`
	// An `identity` block as detailed below.
	Identity *AppIdentity `pulumi:"identity"`
	// An `ingress` block as detailed below.
	Ingress *AppIngress `pulumi:"ingress"`
	// The FQDN of the Latest Revision of the Container App.
	LatestRevisionFqdn *string `pulumi:"latestRevisionFqdn"`
	// The name of the latest Container Revision.
	LatestRevisionName *string `pulumi:"latestRevisionName"`
	// The location this Container App is deployed in. This is the same as the Environment in which it is deployed.
	Location *string `pulumi:"location"`
	// The name for this Container App. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A list of the Public IP Addresses which the Container App uses for outbound network access.
	OutboundIpAddresses []string `pulumi:"outboundIpAddresses"`
	// A `registry` block as detailed below.
	Registries []AppRegistry `pulumi:"registries"`
	// The name of the resource group in which the Container App Environment is to be created. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The revisions operational mode for the Container App. Possible values include `Single` and `Multiple`. In `Single` mode, a single revision is in operation at any given time. In `Multiple` mode, more than one revision can be active at a time and can be configured with load distribution via the `trafficWeight` block in the `ingress` configuration.
	RevisionMode *string `pulumi:"revisionMode"`
	// One or more `secret` block as detailed below.
	Secrets []AppSecret `pulumi:"secrets"`
	// A mapping of tags to assign to the Container App.
	Tags map[string]string `pulumi:"tags"`
	// A `template` block as detailed below.
	Template *AppTemplate `pulumi:"template"`
}

type AppState struct {
	// The ID of the Container App Environment within which this Container App should exist. Changing this forces a new resource to be created.
	ContainerAppEnvironmentId pulumi.StringPtrInput
	// The ID of the Custom Domain Verification for this Container App.
	CustomDomainVerificationId pulumi.StringPtrInput
	// A `dapr` block as detailed below.
	Dapr AppDaprPtrInput
	// An `identity` block as detailed below.
	Identity AppIdentityPtrInput
	// An `ingress` block as detailed below.
	Ingress AppIngressPtrInput
	// The FQDN of the Latest Revision of the Container App.
	LatestRevisionFqdn pulumi.StringPtrInput
	// The name of the latest Container Revision.
	LatestRevisionName pulumi.StringPtrInput
	// The location this Container App is deployed in. This is the same as the Environment in which it is deployed.
	Location pulumi.StringPtrInput
	// The name for this Container App. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A list of the Public IP Addresses which the Container App uses for outbound network access.
	OutboundIpAddresses pulumi.StringArrayInput
	// A `registry` block as detailed below.
	Registries AppRegistryArrayInput
	// The name of the resource group in which the Container App Environment is to be created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The revisions operational mode for the Container App. Possible values include `Single` and `Multiple`. In `Single` mode, a single revision is in operation at any given time. In `Multiple` mode, more than one revision can be active at a time and can be configured with load distribution via the `trafficWeight` block in the `ingress` configuration.
	RevisionMode pulumi.StringPtrInput
	// One or more `secret` block as detailed below.
	Secrets AppSecretArrayInput
	// A mapping of tags to assign to the Container App.
	Tags pulumi.StringMapInput
	// A `template` block as detailed below.
	Template AppTemplatePtrInput
}

func (AppState) ElementType() reflect.Type {
	return reflect.TypeOf((*appState)(nil)).Elem()
}

type appArgs struct {
	// The ID of the Container App Environment within which this Container App should exist. Changing this forces a new resource to be created.
	ContainerAppEnvironmentId string `pulumi:"containerAppEnvironmentId"`
	// A `dapr` block as detailed below.
	Dapr *AppDapr `pulumi:"dapr"`
	// An `identity` block as detailed below.
	Identity *AppIdentity `pulumi:"identity"`
	// An `ingress` block as detailed below.
	Ingress *AppIngress `pulumi:"ingress"`
	// The name for this Container App. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A `registry` block as detailed below.
	Registries []AppRegistry `pulumi:"registries"`
	// The name of the resource group in which the Container App Environment is to be created. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The revisions operational mode for the Container App. Possible values include `Single` and `Multiple`. In `Single` mode, a single revision is in operation at any given time. In `Multiple` mode, more than one revision can be active at a time and can be configured with load distribution via the `trafficWeight` block in the `ingress` configuration.
	RevisionMode string `pulumi:"revisionMode"`
	// One or more `secret` block as detailed below.
	Secrets []AppSecret `pulumi:"secrets"`
	// A mapping of tags to assign to the Container App.
	Tags map[string]string `pulumi:"tags"`
	// A `template` block as detailed below.
	Template AppTemplate `pulumi:"template"`
}

// The set of arguments for constructing a App resource.
type AppArgs struct {
	// The ID of the Container App Environment within which this Container App should exist. Changing this forces a new resource to be created.
	ContainerAppEnvironmentId pulumi.StringInput
	// A `dapr` block as detailed below.
	Dapr AppDaprPtrInput
	// An `identity` block as detailed below.
	Identity AppIdentityPtrInput
	// An `ingress` block as detailed below.
	Ingress AppIngressPtrInput
	// The name for this Container App. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A `registry` block as detailed below.
	Registries AppRegistryArrayInput
	// The name of the resource group in which the Container App Environment is to be created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// The revisions operational mode for the Container App. Possible values include `Single` and `Multiple`. In `Single` mode, a single revision is in operation at any given time. In `Multiple` mode, more than one revision can be active at a time and can be configured with load distribution via the `trafficWeight` block in the `ingress` configuration.
	RevisionMode pulumi.StringInput
	// One or more `secret` block as detailed below.
	Secrets AppSecretArrayInput
	// A mapping of tags to assign to the Container App.
	Tags pulumi.StringMapInput
	// A `template` block as detailed below.
	Template AppTemplateInput
}

func (AppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appArgs)(nil)).Elem()
}

type AppInput interface {
	pulumi.Input

	ToAppOutput() AppOutput
	ToAppOutputWithContext(ctx context.Context) AppOutput
}

func (*App) ElementType() reflect.Type {
	return reflect.TypeOf((**App)(nil)).Elem()
}

func (i *App) ToAppOutput() AppOutput {
	return i.ToAppOutputWithContext(context.Background())
}

func (i *App) ToAppOutputWithContext(ctx context.Context) AppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppOutput)
}

// AppArrayInput is an input type that accepts AppArray and AppArrayOutput values.
// You can construct a concrete instance of `AppArrayInput` via:
//
//	AppArray{ AppArgs{...} }
type AppArrayInput interface {
	pulumi.Input

	ToAppArrayOutput() AppArrayOutput
	ToAppArrayOutputWithContext(context.Context) AppArrayOutput
}

type AppArray []AppInput

func (AppArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*App)(nil)).Elem()
}

func (i AppArray) ToAppArrayOutput() AppArrayOutput {
	return i.ToAppArrayOutputWithContext(context.Background())
}

func (i AppArray) ToAppArrayOutputWithContext(ctx context.Context) AppArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppArrayOutput)
}

// AppMapInput is an input type that accepts AppMap and AppMapOutput values.
// You can construct a concrete instance of `AppMapInput` via:
//
//	AppMap{ "key": AppArgs{...} }
type AppMapInput interface {
	pulumi.Input

	ToAppMapOutput() AppMapOutput
	ToAppMapOutputWithContext(context.Context) AppMapOutput
}

type AppMap map[string]AppInput

func (AppMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*App)(nil)).Elem()
}

func (i AppMap) ToAppMapOutput() AppMapOutput {
	return i.ToAppMapOutputWithContext(context.Background())
}

func (i AppMap) ToAppMapOutputWithContext(ctx context.Context) AppMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppMapOutput)
}

type AppOutput struct{ *pulumi.OutputState }

func (AppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**App)(nil)).Elem()
}

func (o AppOutput) ToAppOutput() AppOutput {
	return o
}

func (o AppOutput) ToAppOutputWithContext(ctx context.Context) AppOutput {
	return o
}

// The ID of the Container App Environment within which this Container App should exist. Changing this forces a new resource to be created.
func (o AppOutput) ContainerAppEnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *App) pulumi.StringOutput { return v.ContainerAppEnvironmentId }).(pulumi.StringOutput)
}

// The ID of the Custom Domain Verification for this Container App.
func (o AppOutput) CustomDomainVerificationId() pulumi.StringOutput {
	return o.ApplyT(func(v *App) pulumi.StringOutput { return v.CustomDomainVerificationId }).(pulumi.StringOutput)
}

// A `dapr` block as detailed below.
func (o AppOutput) Dapr() AppDaprPtrOutput {
	return o.ApplyT(func(v *App) AppDaprPtrOutput { return v.Dapr }).(AppDaprPtrOutput)
}

// An `identity` block as detailed below.
func (o AppOutput) Identity() AppIdentityPtrOutput {
	return o.ApplyT(func(v *App) AppIdentityPtrOutput { return v.Identity }).(AppIdentityPtrOutput)
}

// An `ingress` block as detailed below.
func (o AppOutput) Ingress() AppIngressPtrOutput {
	return o.ApplyT(func(v *App) AppIngressPtrOutput { return v.Ingress }).(AppIngressPtrOutput)
}

// The FQDN of the Latest Revision of the Container App.
func (o AppOutput) LatestRevisionFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v *App) pulumi.StringOutput { return v.LatestRevisionFqdn }).(pulumi.StringOutput)
}

// The name of the latest Container Revision.
func (o AppOutput) LatestRevisionName() pulumi.StringOutput {
	return o.ApplyT(func(v *App) pulumi.StringOutput { return v.LatestRevisionName }).(pulumi.StringOutput)
}

// The location this Container App is deployed in. This is the same as the Environment in which it is deployed.
func (o AppOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *App) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name for this Container App. Changing this forces a new resource to be created.
func (o AppOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *App) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A list of the Public IP Addresses which the Container App uses for outbound network access.
func (o AppOutput) OutboundIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *App) pulumi.StringArrayOutput { return v.OutboundIpAddresses }).(pulumi.StringArrayOutput)
}

// A `registry` block as detailed below.
func (o AppOutput) Registries() AppRegistryArrayOutput {
	return o.ApplyT(func(v *App) AppRegistryArrayOutput { return v.Registries }).(AppRegistryArrayOutput)
}

// The name of the resource group in which the Container App Environment is to be created. Changing this forces a new resource to be created.
func (o AppOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *App) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The revisions operational mode for the Container App. Possible values include `Single` and `Multiple`. In `Single` mode, a single revision is in operation at any given time. In `Multiple` mode, more than one revision can be active at a time and can be configured with load distribution via the `trafficWeight` block in the `ingress` configuration.
func (o AppOutput) RevisionMode() pulumi.StringOutput {
	return o.ApplyT(func(v *App) pulumi.StringOutput { return v.RevisionMode }).(pulumi.StringOutput)
}

// One or more `secret` block as detailed below.
func (o AppOutput) Secrets() AppSecretArrayOutput {
	return o.ApplyT(func(v *App) AppSecretArrayOutput { return v.Secrets }).(AppSecretArrayOutput)
}

// A mapping of tags to assign to the Container App.
func (o AppOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *App) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A `template` block as detailed below.
func (o AppOutput) Template() AppTemplateOutput {
	return o.ApplyT(func(v *App) AppTemplateOutput { return v.Template }).(AppTemplateOutput)
}

type AppArrayOutput struct{ *pulumi.OutputState }

func (AppArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*App)(nil)).Elem()
}

func (o AppArrayOutput) ToAppArrayOutput() AppArrayOutput {
	return o
}

func (o AppArrayOutput) ToAppArrayOutputWithContext(ctx context.Context) AppArrayOutput {
	return o
}

func (o AppArrayOutput) Index(i pulumi.IntInput) AppOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *App {
		return vs[0].([]*App)[vs[1].(int)]
	}).(AppOutput)
}

type AppMapOutput struct{ *pulumi.OutputState }

func (AppMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*App)(nil)).Elem()
}

func (o AppMapOutput) ToAppMapOutput() AppMapOutput {
	return o
}

func (o AppMapOutput) ToAppMapOutputWithContext(ctx context.Context) AppMapOutput {
	return o
}

func (o AppMapOutput) MapIndex(k pulumi.StringInput) AppOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *App {
		return vs[0].(map[string]*App)[vs[1].(string)]
	}).(AppOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppInput)(nil)).Elem(), &App{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppArrayInput)(nil)).Elem(), AppArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppMapInput)(nil)).Elem(), AppMap{})
	pulumi.RegisterOutputType(AppOutput{})
	pulumi.RegisterOutputType(AppArrayOutput{})
	pulumi.RegisterOutputType(AppMapOutput{})
}
