// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerapp

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Container App Environment Custom Domain Suffix.
//
// ## Import
//
// A Container App Environment Custom Domain Suffix can be imported using the `resource id` of its parent container ontainer App Environment , e.g.
//
// ```sh
// $ pulumi import azure:containerapp/environmentCustomDomain:EnvironmentCustomDomain example "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.App/managedEnvironments/myEnvironment"
// ```
type EnvironmentCustomDomain struct {
	pulumi.CustomResourceState

	// The bundle of Private Key and Certificate for the Custom DNS Suffix as a base64 encoded PFX or PEM.
	CertificateBlobBase64 pulumi.StringOutput `pulumi:"certificateBlobBase64"`
	// The password for the Certificate bundle.
	CertificatePassword pulumi.StringOutput `pulumi:"certificatePassword"`
	// The ID of the Container Apps Managed Environment. Changing this forces a new resource to be created.
	ContainerAppEnvironmentId pulumi.StringOutput `pulumi:"containerAppEnvironmentId"`
	// Custom DNS Suffix for the Container App Environment.
	DnsSuffix pulumi.StringOutput `pulumi:"dnsSuffix"`
}

// NewEnvironmentCustomDomain registers a new resource with the given unique name, arguments, and options.
func NewEnvironmentCustomDomain(ctx *pulumi.Context,
	name string, args *EnvironmentCustomDomainArgs, opts ...pulumi.ResourceOption) (*EnvironmentCustomDomain, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CertificateBlobBase64 == nil {
		return nil, errors.New("invalid value for required argument 'CertificateBlobBase64'")
	}
	if args.CertificatePassword == nil {
		return nil, errors.New("invalid value for required argument 'CertificatePassword'")
	}
	if args.ContainerAppEnvironmentId == nil {
		return nil, errors.New("invalid value for required argument 'ContainerAppEnvironmentId'")
	}
	if args.DnsSuffix == nil {
		return nil, errors.New("invalid value for required argument 'DnsSuffix'")
	}
	if args.CertificatePassword != nil {
		args.CertificatePassword = pulumi.ToSecret(args.CertificatePassword).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"certificatePassword",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EnvironmentCustomDomain
	err := ctx.RegisterResource("azure:containerapp/environmentCustomDomain:EnvironmentCustomDomain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnvironmentCustomDomain gets an existing EnvironmentCustomDomain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnvironmentCustomDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnvironmentCustomDomainState, opts ...pulumi.ResourceOption) (*EnvironmentCustomDomain, error) {
	var resource EnvironmentCustomDomain
	err := ctx.ReadResource("azure:containerapp/environmentCustomDomain:EnvironmentCustomDomain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EnvironmentCustomDomain resources.
type environmentCustomDomainState struct {
	// The bundle of Private Key and Certificate for the Custom DNS Suffix as a base64 encoded PFX or PEM.
	CertificateBlobBase64 *string `pulumi:"certificateBlobBase64"`
	// The password for the Certificate bundle.
	CertificatePassword *string `pulumi:"certificatePassword"`
	// The ID of the Container Apps Managed Environment. Changing this forces a new resource to be created.
	ContainerAppEnvironmentId *string `pulumi:"containerAppEnvironmentId"`
	// Custom DNS Suffix for the Container App Environment.
	DnsSuffix *string `pulumi:"dnsSuffix"`
}

type EnvironmentCustomDomainState struct {
	// The bundle of Private Key and Certificate for the Custom DNS Suffix as a base64 encoded PFX or PEM.
	CertificateBlobBase64 pulumi.StringPtrInput
	// The password for the Certificate bundle.
	CertificatePassword pulumi.StringPtrInput
	// The ID of the Container Apps Managed Environment. Changing this forces a new resource to be created.
	ContainerAppEnvironmentId pulumi.StringPtrInput
	// Custom DNS Suffix for the Container App Environment.
	DnsSuffix pulumi.StringPtrInput
}

func (EnvironmentCustomDomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentCustomDomainState)(nil)).Elem()
}

type environmentCustomDomainArgs struct {
	// The bundle of Private Key and Certificate for the Custom DNS Suffix as a base64 encoded PFX or PEM.
	CertificateBlobBase64 string `pulumi:"certificateBlobBase64"`
	// The password for the Certificate bundle.
	CertificatePassword string `pulumi:"certificatePassword"`
	// The ID of the Container Apps Managed Environment. Changing this forces a new resource to be created.
	ContainerAppEnvironmentId string `pulumi:"containerAppEnvironmentId"`
	// Custom DNS Suffix for the Container App Environment.
	DnsSuffix string `pulumi:"dnsSuffix"`
}

// The set of arguments for constructing a EnvironmentCustomDomain resource.
type EnvironmentCustomDomainArgs struct {
	// The bundle of Private Key and Certificate for the Custom DNS Suffix as a base64 encoded PFX or PEM.
	CertificateBlobBase64 pulumi.StringInput
	// The password for the Certificate bundle.
	CertificatePassword pulumi.StringInput
	// The ID of the Container Apps Managed Environment. Changing this forces a new resource to be created.
	ContainerAppEnvironmentId pulumi.StringInput
	// Custom DNS Suffix for the Container App Environment.
	DnsSuffix pulumi.StringInput
}

func (EnvironmentCustomDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentCustomDomainArgs)(nil)).Elem()
}

type EnvironmentCustomDomainInput interface {
	pulumi.Input

	ToEnvironmentCustomDomainOutput() EnvironmentCustomDomainOutput
	ToEnvironmentCustomDomainOutputWithContext(ctx context.Context) EnvironmentCustomDomainOutput
}

func (*EnvironmentCustomDomain) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentCustomDomain)(nil)).Elem()
}

func (i *EnvironmentCustomDomain) ToEnvironmentCustomDomainOutput() EnvironmentCustomDomainOutput {
	return i.ToEnvironmentCustomDomainOutputWithContext(context.Background())
}

func (i *EnvironmentCustomDomain) ToEnvironmentCustomDomainOutputWithContext(ctx context.Context) EnvironmentCustomDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentCustomDomainOutput)
}

// EnvironmentCustomDomainArrayInput is an input type that accepts EnvironmentCustomDomainArray and EnvironmentCustomDomainArrayOutput values.
// You can construct a concrete instance of `EnvironmentCustomDomainArrayInput` via:
//
//	EnvironmentCustomDomainArray{ EnvironmentCustomDomainArgs{...} }
type EnvironmentCustomDomainArrayInput interface {
	pulumi.Input

	ToEnvironmentCustomDomainArrayOutput() EnvironmentCustomDomainArrayOutput
	ToEnvironmentCustomDomainArrayOutputWithContext(context.Context) EnvironmentCustomDomainArrayOutput
}

type EnvironmentCustomDomainArray []EnvironmentCustomDomainInput

func (EnvironmentCustomDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EnvironmentCustomDomain)(nil)).Elem()
}

func (i EnvironmentCustomDomainArray) ToEnvironmentCustomDomainArrayOutput() EnvironmentCustomDomainArrayOutput {
	return i.ToEnvironmentCustomDomainArrayOutputWithContext(context.Background())
}

func (i EnvironmentCustomDomainArray) ToEnvironmentCustomDomainArrayOutputWithContext(ctx context.Context) EnvironmentCustomDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentCustomDomainArrayOutput)
}

// EnvironmentCustomDomainMapInput is an input type that accepts EnvironmentCustomDomainMap and EnvironmentCustomDomainMapOutput values.
// You can construct a concrete instance of `EnvironmentCustomDomainMapInput` via:
//
//	EnvironmentCustomDomainMap{ "key": EnvironmentCustomDomainArgs{...} }
type EnvironmentCustomDomainMapInput interface {
	pulumi.Input

	ToEnvironmentCustomDomainMapOutput() EnvironmentCustomDomainMapOutput
	ToEnvironmentCustomDomainMapOutputWithContext(context.Context) EnvironmentCustomDomainMapOutput
}

type EnvironmentCustomDomainMap map[string]EnvironmentCustomDomainInput

func (EnvironmentCustomDomainMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EnvironmentCustomDomain)(nil)).Elem()
}

func (i EnvironmentCustomDomainMap) ToEnvironmentCustomDomainMapOutput() EnvironmentCustomDomainMapOutput {
	return i.ToEnvironmentCustomDomainMapOutputWithContext(context.Background())
}

func (i EnvironmentCustomDomainMap) ToEnvironmentCustomDomainMapOutputWithContext(ctx context.Context) EnvironmentCustomDomainMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentCustomDomainMapOutput)
}

type EnvironmentCustomDomainOutput struct{ *pulumi.OutputState }

func (EnvironmentCustomDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentCustomDomain)(nil)).Elem()
}

func (o EnvironmentCustomDomainOutput) ToEnvironmentCustomDomainOutput() EnvironmentCustomDomainOutput {
	return o
}

func (o EnvironmentCustomDomainOutput) ToEnvironmentCustomDomainOutputWithContext(ctx context.Context) EnvironmentCustomDomainOutput {
	return o
}

// The bundle of Private Key and Certificate for the Custom DNS Suffix as a base64 encoded PFX or PEM.
func (o EnvironmentCustomDomainOutput) CertificateBlobBase64() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentCustomDomain) pulumi.StringOutput { return v.CertificateBlobBase64 }).(pulumi.StringOutput)
}

// The password for the Certificate bundle.
func (o EnvironmentCustomDomainOutput) CertificatePassword() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentCustomDomain) pulumi.StringOutput { return v.CertificatePassword }).(pulumi.StringOutput)
}

// The ID of the Container Apps Managed Environment. Changing this forces a new resource to be created.
func (o EnvironmentCustomDomainOutput) ContainerAppEnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentCustomDomain) pulumi.StringOutput { return v.ContainerAppEnvironmentId }).(pulumi.StringOutput)
}

// Custom DNS Suffix for the Container App Environment.
func (o EnvironmentCustomDomainOutput) DnsSuffix() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentCustomDomain) pulumi.StringOutput { return v.DnsSuffix }).(pulumi.StringOutput)
}

type EnvironmentCustomDomainArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentCustomDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EnvironmentCustomDomain)(nil)).Elem()
}

func (o EnvironmentCustomDomainArrayOutput) ToEnvironmentCustomDomainArrayOutput() EnvironmentCustomDomainArrayOutput {
	return o
}

func (o EnvironmentCustomDomainArrayOutput) ToEnvironmentCustomDomainArrayOutputWithContext(ctx context.Context) EnvironmentCustomDomainArrayOutput {
	return o
}

func (o EnvironmentCustomDomainArrayOutput) Index(i pulumi.IntInput) EnvironmentCustomDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EnvironmentCustomDomain {
		return vs[0].([]*EnvironmentCustomDomain)[vs[1].(int)]
	}).(EnvironmentCustomDomainOutput)
}

type EnvironmentCustomDomainMapOutput struct{ *pulumi.OutputState }

func (EnvironmentCustomDomainMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EnvironmentCustomDomain)(nil)).Elem()
}

func (o EnvironmentCustomDomainMapOutput) ToEnvironmentCustomDomainMapOutput() EnvironmentCustomDomainMapOutput {
	return o
}

func (o EnvironmentCustomDomainMapOutput) ToEnvironmentCustomDomainMapOutputWithContext(ctx context.Context) EnvironmentCustomDomainMapOutput {
	return o
}

func (o EnvironmentCustomDomainMapOutput) MapIndex(k pulumi.StringInput) EnvironmentCustomDomainOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EnvironmentCustomDomain {
		return vs[0].(map[string]*EnvironmentCustomDomain)[vs[1].(string)]
	}).(EnvironmentCustomDomainOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentCustomDomainInput)(nil)).Elem(), &EnvironmentCustomDomain{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentCustomDomainArrayInput)(nil)).Elem(), EnvironmentCustomDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentCustomDomainMapInput)(nil)).Elem(), EnvironmentCustomDomainMap{})
	pulumi.RegisterOutputType(EnvironmentCustomDomainOutput{})
	pulumi.RegisterOutputType(EnvironmentCustomDomainArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentCustomDomainMapOutput{})
}
