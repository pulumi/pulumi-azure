// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type FlexibleServerCustomerManagedKey struct {
	// The ID of the geo backup Key Vault Key. It can't cross region and need Customer Managed Key in same region as geo backup.
	GeoBackupKeyVaultKeyId *string `pulumi:"geoBackupKeyVaultKeyId"`
	// The geo backup user managed identity id for a Customer Managed Key. Should be added with `identityIds`. It can't cross region and need identity in same region as geo backup.
	//
	// > **Note:** `primaryUserAssignedIdentityId` or `geoBackupUserAssignedIdentityId` is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
	GeoBackupUserAssignedIdentityId *string `pulumi:"geoBackupUserAssignedIdentityId"`
	// The ID of the Key Vault Key.
	KeyVaultKeyId *string `pulumi:"keyVaultKeyId"`
	// The ID of the Managed HSM Key.
	ManagedHsmKeyId *string `pulumi:"managedHsmKeyId"`
	// Specifies the primary user managed identity id for a Customer Managed Key. Should be added with `identityIds`.
	PrimaryUserAssignedIdentityId *string `pulumi:"primaryUserAssignedIdentityId"`
}

// FlexibleServerCustomerManagedKeyInput is an input type that accepts FlexibleServerCustomerManagedKeyArgs and FlexibleServerCustomerManagedKeyOutput values.
// You can construct a concrete instance of `FlexibleServerCustomerManagedKeyInput` via:
//
//	FlexibleServerCustomerManagedKeyArgs{...}
type FlexibleServerCustomerManagedKeyInput interface {
	pulumi.Input

	ToFlexibleServerCustomerManagedKeyOutput() FlexibleServerCustomerManagedKeyOutput
	ToFlexibleServerCustomerManagedKeyOutputWithContext(context.Context) FlexibleServerCustomerManagedKeyOutput
}

type FlexibleServerCustomerManagedKeyArgs struct {
	// The ID of the geo backup Key Vault Key. It can't cross region and need Customer Managed Key in same region as geo backup.
	GeoBackupKeyVaultKeyId pulumi.StringPtrInput `pulumi:"geoBackupKeyVaultKeyId"`
	// The geo backup user managed identity id for a Customer Managed Key. Should be added with `identityIds`. It can't cross region and need identity in same region as geo backup.
	//
	// > **Note:** `primaryUserAssignedIdentityId` or `geoBackupUserAssignedIdentityId` is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
	GeoBackupUserAssignedIdentityId pulumi.StringPtrInput `pulumi:"geoBackupUserAssignedIdentityId"`
	// The ID of the Key Vault Key.
	KeyVaultKeyId pulumi.StringPtrInput `pulumi:"keyVaultKeyId"`
	// The ID of the Managed HSM Key.
	ManagedHsmKeyId pulumi.StringPtrInput `pulumi:"managedHsmKeyId"`
	// Specifies the primary user managed identity id for a Customer Managed Key. Should be added with `identityIds`.
	PrimaryUserAssignedIdentityId pulumi.StringPtrInput `pulumi:"primaryUserAssignedIdentityId"`
}

func (FlexibleServerCustomerManagedKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlexibleServerCustomerManagedKey)(nil)).Elem()
}

func (i FlexibleServerCustomerManagedKeyArgs) ToFlexibleServerCustomerManagedKeyOutput() FlexibleServerCustomerManagedKeyOutput {
	return i.ToFlexibleServerCustomerManagedKeyOutputWithContext(context.Background())
}

func (i FlexibleServerCustomerManagedKeyArgs) ToFlexibleServerCustomerManagedKeyOutputWithContext(ctx context.Context) FlexibleServerCustomerManagedKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlexibleServerCustomerManagedKeyOutput)
}

func (i FlexibleServerCustomerManagedKeyArgs) ToFlexibleServerCustomerManagedKeyPtrOutput() FlexibleServerCustomerManagedKeyPtrOutput {
	return i.ToFlexibleServerCustomerManagedKeyPtrOutputWithContext(context.Background())
}

func (i FlexibleServerCustomerManagedKeyArgs) ToFlexibleServerCustomerManagedKeyPtrOutputWithContext(ctx context.Context) FlexibleServerCustomerManagedKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlexibleServerCustomerManagedKeyOutput).ToFlexibleServerCustomerManagedKeyPtrOutputWithContext(ctx)
}

// FlexibleServerCustomerManagedKeyPtrInput is an input type that accepts FlexibleServerCustomerManagedKeyArgs, FlexibleServerCustomerManagedKeyPtr and FlexibleServerCustomerManagedKeyPtrOutput values.
// You can construct a concrete instance of `FlexibleServerCustomerManagedKeyPtrInput` via:
//
//	        FlexibleServerCustomerManagedKeyArgs{...}
//
//	or:
//
//	        nil
type FlexibleServerCustomerManagedKeyPtrInput interface {
	pulumi.Input

	ToFlexibleServerCustomerManagedKeyPtrOutput() FlexibleServerCustomerManagedKeyPtrOutput
	ToFlexibleServerCustomerManagedKeyPtrOutputWithContext(context.Context) FlexibleServerCustomerManagedKeyPtrOutput
}

type flexibleServerCustomerManagedKeyPtrType FlexibleServerCustomerManagedKeyArgs

func FlexibleServerCustomerManagedKeyPtr(v *FlexibleServerCustomerManagedKeyArgs) FlexibleServerCustomerManagedKeyPtrInput {
	return (*flexibleServerCustomerManagedKeyPtrType)(v)
}

func (*flexibleServerCustomerManagedKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlexibleServerCustomerManagedKey)(nil)).Elem()
}

func (i *flexibleServerCustomerManagedKeyPtrType) ToFlexibleServerCustomerManagedKeyPtrOutput() FlexibleServerCustomerManagedKeyPtrOutput {
	return i.ToFlexibleServerCustomerManagedKeyPtrOutputWithContext(context.Background())
}

func (i *flexibleServerCustomerManagedKeyPtrType) ToFlexibleServerCustomerManagedKeyPtrOutputWithContext(ctx context.Context) FlexibleServerCustomerManagedKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlexibleServerCustomerManagedKeyPtrOutput)
}

type FlexibleServerCustomerManagedKeyOutput struct{ *pulumi.OutputState }

func (FlexibleServerCustomerManagedKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlexibleServerCustomerManagedKey)(nil)).Elem()
}

func (o FlexibleServerCustomerManagedKeyOutput) ToFlexibleServerCustomerManagedKeyOutput() FlexibleServerCustomerManagedKeyOutput {
	return o
}

func (o FlexibleServerCustomerManagedKeyOutput) ToFlexibleServerCustomerManagedKeyOutputWithContext(ctx context.Context) FlexibleServerCustomerManagedKeyOutput {
	return o
}

func (o FlexibleServerCustomerManagedKeyOutput) ToFlexibleServerCustomerManagedKeyPtrOutput() FlexibleServerCustomerManagedKeyPtrOutput {
	return o.ToFlexibleServerCustomerManagedKeyPtrOutputWithContext(context.Background())
}

func (o FlexibleServerCustomerManagedKeyOutput) ToFlexibleServerCustomerManagedKeyPtrOutputWithContext(ctx context.Context) FlexibleServerCustomerManagedKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlexibleServerCustomerManagedKey) *FlexibleServerCustomerManagedKey {
		return &v
	}).(FlexibleServerCustomerManagedKeyPtrOutput)
}

// The ID of the geo backup Key Vault Key. It can't cross region and need Customer Managed Key in same region as geo backup.
func (o FlexibleServerCustomerManagedKeyOutput) GeoBackupKeyVaultKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlexibleServerCustomerManagedKey) *string { return v.GeoBackupKeyVaultKeyId }).(pulumi.StringPtrOutput)
}

// The geo backup user managed identity id for a Customer Managed Key. Should be added with `identityIds`. It can't cross region and need identity in same region as geo backup.
//
// > **Note:** `primaryUserAssignedIdentityId` or `geoBackupUserAssignedIdentityId` is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
func (o FlexibleServerCustomerManagedKeyOutput) GeoBackupUserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlexibleServerCustomerManagedKey) *string { return v.GeoBackupUserAssignedIdentityId }).(pulumi.StringPtrOutput)
}

// The ID of the Key Vault Key.
func (o FlexibleServerCustomerManagedKeyOutput) KeyVaultKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlexibleServerCustomerManagedKey) *string { return v.KeyVaultKeyId }).(pulumi.StringPtrOutput)
}

// The ID of the Managed HSM Key.
func (o FlexibleServerCustomerManagedKeyOutput) ManagedHsmKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlexibleServerCustomerManagedKey) *string { return v.ManagedHsmKeyId }).(pulumi.StringPtrOutput)
}

// Specifies the primary user managed identity id for a Customer Managed Key. Should be added with `identityIds`.
func (o FlexibleServerCustomerManagedKeyOutput) PrimaryUserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlexibleServerCustomerManagedKey) *string { return v.PrimaryUserAssignedIdentityId }).(pulumi.StringPtrOutput)
}

type FlexibleServerCustomerManagedKeyPtrOutput struct{ *pulumi.OutputState }

func (FlexibleServerCustomerManagedKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlexibleServerCustomerManagedKey)(nil)).Elem()
}

func (o FlexibleServerCustomerManagedKeyPtrOutput) ToFlexibleServerCustomerManagedKeyPtrOutput() FlexibleServerCustomerManagedKeyPtrOutput {
	return o
}

func (o FlexibleServerCustomerManagedKeyPtrOutput) ToFlexibleServerCustomerManagedKeyPtrOutputWithContext(ctx context.Context) FlexibleServerCustomerManagedKeyPtrOutput {
	return o
}

func (o FlexibleServerCustomerManagedKeyPtrOutput) Elem() FlexibleServerCustomerManagedKeyOutput {
	return o.ApplyT(func(v *FlexibleServerCustomerManagedKey) FlexibleServerCustomerManagedKey {
		if v != nil {
			return *v
		}
		var ret FlexibleServerCustomerManagedKey
		return ret
	}).(FlexibleServerCustomerManagedKeyOutput)
}

// The ID of the geo backup Key Vault Key. It can't cross region and need Customer Managed Key in same region as geo backup.
func (o FlexibleServerCustomerManagedKeyPtrOutput) GeoBackupKeyVaultKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlexibleServerCustomerManagedKey) *string {
		if v == nil {
			return nil
		}
		return v.GeoBackupKeyVaultKeyId
	}).(pulumi.StringPtrOutput)
}

// The geo backup user managed identity id for a Customer Managed Key. Should be added with `identityIds`. It can't cross region and need identity in same region as geo backup.
//
// > **Note:** `primaryUserAssignedIdentityId` or `geoBackupUserAssignedIdentityId` is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
func (o FlexibleServerCustomerManagedKeyPtrOutput) GeoBackupUserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlexibleServerCustomerManagedKey) *string {
		if v == nil {
			return nil
		}
		return v.GeoBackupUserAssignedIdentityId
	}).(pulumi.StringPtrOutput)
}

// The ID of the Key Vault Key.
func (o FlexibleServerCustomerManagedKeyPtrOutput) KeyVaultKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlexibleServerCustomerManagedKey) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultKeyId
	}).(pulumi.StringPtrOutput)
}

// The ID of the Managed HSM Key.
func (o FlexibleServerCustomerManagedKeyPtrOutput) ManagedHsmKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlexibleServerCustomerManagedKey) *string {
		if v == nil {
			return nil
		}
		return v.ManagedHsmKeyId
	}).(pulumi.StringPtrOutput)
}

// Specifies the primary user managed identity id for a Customer Managed Key. Should be added with `identityIds`.
func (o FlexibleServerCustomerManagedKeyPtrOutput) PrimaryUserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlexibleServerCustomerManagedKey) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryUserAssignedIdentityId
	}).(pulumi.StringPtrOutput)
}

type FlexibleServerHighAvailability struct {
	// The high availability mode for the MySQL Flexible Server. Possibles values are `SameZone` and `ZoneRedundant`.
	//
	// > **Note:** `storage[0].auto_grow_enabled` must be enabled when `highAvailability` is enabled. To change the `highAvailability` for a MySQL Flexible Server created with `highAvailability` disabled during creation, the resource has to be recreated.
	Mode                    string  `pulumi:"mode"`
	StandbyAvailabilityZone *string `pulumi:"standbyAvailabilityZone"`
}

// FlexibleServerHighAvailabilityInput is an input type that accepts FlexibleServerHighAvailabilityArgs and FlexibleServerHighAvailabilityOutput values.
// You can construct a concrete instance of `FlexibleServerHighAvailabilityInput` via:
//
//	FlexibleServerHighAvailabilityArgs{...}
type FlexibleServerHighAvailabilityInput interface {
	pulumi.Input

	ToFlexibleServerHighAvailabilityOutput() FlexibleServerHighAvailabilityOutput
	ToFlexibleServerHighAvailabilityOutputWithContext(context.Context) FlexibleServerHighAvailabilityOutput
}

type FlexibleServerHighAvailabilityArgs struct {
	// The high availability mode for the MySQL Flexible Server. Possibles values are `SameZone` and `ZoneRedundant`.
	//
	// > **Note:** `storage[0].auto_grow_enabled` must be enabled when `highAvailability` is enabled. To change the `highAvailability` for a MySQL Flexible Server created with `highAvailability` disabled during creation, the resource has to be recreated.
	Mode                    pulumi.StringInput    `pulumi:"mode"`
	StandbyAvailabilityZone pulumi.StringPtrInput `pulumi:"standbyAvailabilityZone"`
}

func (FlexibleServerHighAvailabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlexibleServerHighAvailability)(nil)).Elem()
}

func (i FlexibleServerHighAvailabilityArgs) ToFlexibleServerHighAvailabilityOutput() FlexibleServerHighAvailabilityOutput {
	return i.ToFlexibleServerHighAvailabilityOutputWithContext(context.Background())
}

func (i FlexibleServerHighAvailabilityArgs) ToFlexibleServerHighAvailabilityOutputWithContext(ctx context.Context) FlexibleServerHighAvailabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlexibleServerHighAvailabilityOutput)
}

func (i FlexibleServerHighAvailabilityArgs) ToFlexibleServerHighAvailabilityPtrOutput() FlexibleServerHighAvailabilityPtrOutput {
	return i.ToFlexibleServerHighAvailabilityPtrOutputWithContext(context.Background())
}

func (i FlexibleServerHighAvailabilityArgs) ToFlexibleServerHighAvailabilityPtrOutputWithContext(ctx context.Context) FlexibleServerHighAvailabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlexibleServerHighAvailabilityOutput).ToFlexibleServerHighAvailabilityPtrOutputWithContext(ctx)
}

// FlexibleServerHighAvailabilityPtrInput is an input type that accepts FlexibleServerHighAvailabilityArgs, FlexibleServerHighAvailabilityPtr and FlexibleServerHighAvailabilityPtrOutput values.
// You can construct a concrete instance of `FlexibleServerHighAvailabilityPtrInput` via:
//
//	        FlexibleServerHighAvailabilityArgs{...}
//
//	or:
//
//	        nil
type FlexibleServerHighAvailabilityPtrInput interface {
	pulumi.Input

	ToFlexibleServerHighAvailabilityPtrOutput() FlexibleServerHighAvailabilityPtrOutput
	ToFlexibleServerHighAvailabilityPtrOutputWithContext(context.Context) FlexibleServerHighAvailabilityPtrOutput
}

type flexibleServerHighAvailabilityPtrType FlexibleServerHighAvailabilityArgs

func FlexibleServerHighAvailabilityPtr(v *FlexibleServerHighAvailabilityArgs) FlexibleServerHighAvailabilityPtrInput {
	return (*flexibleServerHighAvailabilityPtrType)(v)
}

func (*flexibleServerHighAvailabilityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlexibleServerHighAvailability)(nil)).Elem()
}

func (i *flexibleServerHighAvailabilityPtrType) ToFlexibleServerHighAvailabilityPtrOutput() FlexibleServerHighAvailabilityPtrOutput {
	return i.ToFlexibleServerHighAvailabilityPtrOutputWithContext(context.Background())
}

func (i *flexibleServerHighAvailabilityPtrType) ToFlexibleServerHighAvailabilityPtrOutputWithContext(ctx context.Context) FlexibleServerHighAvailabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlexibleServerHighAvailabilityPtrOutput)
}

type FlexibleServerHighAvailabilityOutput struct{ *pulumi.OutputState }

func (FlexibleServerHighAvailabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlexibleServerHighAvailability)(nil)).Elem()
}

func (o FlexibleServerHighAvailabilityOutput) ToFlexibleServerHighAvailabilityOutput() FlexibleServerHighAvailabilityOutput {
	return o
}

func (o FlexibleServerHighAvailabilityOutput) ToFlexibleServerHighAvailabilityOutputWithContext(ctx context.Context) FlexibleServerHighAvailabilityOutput {
	return o
}

func (o FlexibleServerHighAvailabilityOutput) ToFlexibleServerHighAvailabilityPtrOutput() FlexibleServerHighAvailabilityPtrOutput {
	return o.ToFlexibleServerHighAvailabilityPtrOutputWithContext(context.Background())
}

func (o FlexibleServerHighAvailabilityOutput) ToFlexibleServerHighAvailabilityPtrOutputWithContext(ctx context.Context) FlexibleServerHighAvailabilityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlexibleServerHighAvailability) *FlexibleServerHighAvailability {
		return &v
	}).(FlexibleServerHighAvailabilityPtrOutput)
}

// The high availability mode for the MySQL Flexible Server. Possibles values are `SameZone` and `ZoneRedundant`.
//
// > **Note:** `storage[0].auto_grow_enabled` must be enabled when `highAvailability` is enabled. To change the `highAvailability` for a MySQL Flexible Server created with `highAvailability` disabled during creation, the resource has to be recreated.
func (o FlexibleServerHighAvailabilityOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v FlexibleServerHighAvailability) string { return v.Mode }).(pulumi.StringOutput)
}

func (o FlexibleServerHighAvailabilityOutput) StandbyAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlexibleServerHighAvailability) *string { return v.StandbyAvailabilityZone }).(pulumi.StringPtrOutput)
}

type FlexibleServerHighAvailabilityPtrOutput struct{ *pulumi.OutputState }

func (FlexibleServerHighAvailabilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlexibleServerHighAvailability)(nil)).Elem()
}

func (o FlexibleServerHighAvailabilityPtrOutput) ToFlexibleServerHighAvailabilityPtrOutput() FlexibleServerHighAvailabilityPtrOutput {
	return o
}

func (o FlexibleServerHighAvailabilityPtrOutput) ToFlexibleServerHighAvailabilityPtrOutputWithContext(ctx context.Context) FlexibleServerHighAvailabilityPtrOutput {
	return o
}

func (o FlexibleServerHighAvailabilityPtrOutput) Elem() FlexibleServerHighAvailabilityOutput {
	return o.ApplyT(func(v *FlexibleServerHighAvailability) FlexibleServerHighAvailability {
		if v != nil {
			return *v
		}
		var ret FlexibleServerHighAvailability
		return ret
	}).(FlexibleServerHighAvailabilityOutput)
}

// The high availability mode for the MySQL Flexible Server. Possibles values are `SameZone` and `ZoneRedundant`.
//
// > **Note:** `storage[0].auto_grow_enabled` must be enabled when `highAvailability` is enabled. To change the `highAvailability` for a MySQL Flexible Server created with `highAvailability` disabled during creation, the resource has to be recreated.
func (o FlexibleServerHighAvailabilityPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlexibleServerHighAvailability) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

func (o FlexibleServerHighAvailabilityPtrOutput) StandbyAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlexibleServerHighAvailability) *string {
		if v == nil {
			return nil
		}
		return v.StandbyAvailabilityZone
	}).(pulumi.StringPtrOutput)
}

type FlexibleServerIdentity struct {
	// A list of User Assigned Managed Identity IDs to be assigned to this MySQL Flexible Server.
	IdentityIds []string `pulumi:"identityIds"`
	// Specifies the type of Managed Service Identity that should be configured on this MySQL Flexible Server. The only possible value is `UserAssigned`.
	Type string `pulumi:"type"`
}

// FlexibleServerIdentityInput is an input type that accepts FlexibleServerIdentityArgs and FlexibleServerIdentityOutput values.
// You can construct a concrete instance of `FlexibleServerIdentityInput` via:
//
//	FlexibleServerIdentityArgs{...}
type FlexibleServerIdentityInput interface {
	pulumi.Input

	ToFlexibleServerIdentityOutput() FlexibleServerIdentityOutput
	ToFlexibleServerIdentityOutputWithContext(context.Context) FlexibleServerIdentityOutput
}

type FlexibleServerIdentityArgs struct {
	// A list of User Assigned Managed Identity IDs to be assigned to this MySQL Flexible Server.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// Specifies the type of Managed Service Identity that should be configured on this MySQL Flexible Server. The only possible value is `UserAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FlexibleServerIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlexibleServerIdentity)(nil)).Elem()
}

func (i FlexibleServerIdentityArgs) ToFlexibleServerIdentityOutput() FlexibleServerIdentityOutput {
	return i.ToFlexibleServerIdentityOutputWithContext(context.Background())
}

func (i FlexibleServerIdentityArgs) ToFlexibleServerIdentityOutputWithContext(ctx context.Context) FlexibleServerIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlexibleServerIdentityOutput)
}

func (i FlexibleServerIdentityArgs) ToFlexibleServerIdentityPtrOutput() FlexibleServerIdentityPtrOutput {
	return i.ToFlexibleServerIdentityPtrOutputWithContext(context.Background())
}

func (i FlexibleServerIdentityArgs) ToFlexibleServerIdentityPtrOutputWithContext(ctx context.Context) FlexibleServerIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlexibleServerIdentityOutput).ToFlexibleServerIdentityPtrOutputWithContext(ctx)
}

// FlexibleServerIdentityPtrInput is an input type that accepts FlexibleServerIdentityArgs, FlexibleServerIdentityPtr and FlexibleServerIdentityPtrOutput values.
// You can construct a concrete instance of `FlexibleServerIdentityPtrInput` via:
//
//	        FlexibleServerIdentityArgs{...}
//
//	or:
//
//	        nil
type FlexibleServerIdentityPtrInput interface {
	pulumi.Input

	ToFlexibleServerIdentityPtrOutput() FlexibleServerIdentityPtrOutput
	ToFlexibleServerIdentityPtrOutputWithContext(context.Context) FlexibleServerIdentityPtrOutput
}

type flexibleServerIdentityPtrType FlexibleServerIdentityArgs

func FlexibleServerIdentityPtr(v *FlexibleServerIdentityArgs) FlexibleServerIdentityPtrInput {
	return (*flexibleServerIdentityPtrType)(v)
}

func (*flexibleServerIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlexibleServerIdentity)(nil)).Elem()
}

func (i *flexibleServerIdentityPtrType) ToFlexibleServerIdentityPtrOutput() FlexibleServerIdentityPtrOutput {
	return i.ToFlexibleServerIdentityPtrOutputWithContext(context.Background())
}

func (i *flexibleServerIdentityPtrType) ToFlexibleServerIdentityPtrOutputWithContext(ctx context.Context) FlexibleServerIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlexibleServerIdentityPtrOutput)
}

type FlexibleServerIdentityOutput struct{ *pulumi.OutputState }

func (FlexibleServerIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlexibleServerIdentity)(nil)).Elem()
}

func (o FlexibleServerIdentityOutput) ToFlexibleServerIdentityOutput() FlexibleServerIdentityOutput {
	return o
}

func (o FlexibleServerIdentityOutput) ToFlexibleServerIdentityOutputWithContext(ctx context.Context) FlexibleServerIdentityOutput {
	return o
}

func (o FlexibleServerIdentityOutput) ToFlexibleServerIdentityPtrOutput() FlexibleServerIdentityPtrOutput {
	return o.ToFlexibleServerIdentityPtrOutputWithContext(context.Background())
}

func (o FlexibleServerIdentityOutput) ToFlexibleServerIdentityPtrOutputWithContext(ctx context.Context) FlexibleServerIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlexibleServerIdentity) *FlexibleServerIdentity {
		return &v
	}).(FlexibleServerIdentityPtrOutput)
}

// A list of User Assigned Managed Identity IDs to be assigned to this MySQL Flexible Server.
func (o FlexibleServerIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FlexibleServerIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this MySQL Flexible Server. The only possible value is `UserAssigned`.
func (o FlexibleServerIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FlexibleServerIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type FlexibleServerIdentityPtrOutput struct{ *pulumi.OutputState }

func (FlexibleServerIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlexibleServerIdentity)(nil)).Elem()
}

func (o FlexibleServerIdentityPtrOutput) ToFlexibleServerIdentityPtrOutput() FlexibleServerIdentityPtrOutput {
	return o
}

func (o FlexibleServerIdentityPtrOutput) ToFlexibleServerIdentityPtrOutputWithContext(ctx context.Context) FlexibleServerIdentityPtrOutput {
	return o
}

func (o FlexibleServerIdentityPtrOutput) Elem() FlexibleServerIdentityOutput {
	return o.ApplyT(func(v *FlexibleServerIdentity) FlexibleServerIdentity {
		if v != nil {
			return *v
		}
		var ret FlexibleServerIdentity
		return ret
	}).(FlexibleServerIdentityOutput)
}

// A list of User Assigned Managed Identity IDs to be assigned to this MySQL Flexible Server.
func (o FlexibleServerIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FlexibleServerIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this MySQL Flexible Server. The only possible value is `UserAssigned`.
func (o FlexibleServerIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlexibleServerIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type FlexibleServerMaintenanceWindow struct {
	// The day of week for maintenance window. Defaults to `0`.
	DayOfWeek *int `pulumi:"dayOfWeek"`
	// The start hour for maintenance window. Defaults to `0`.
	StartHour *int `pulumi:"startHour"`
	// The start minute for maintenance window. Defaults to `0`.
	StartMinute *int `pulumi:"startMinute"`
}

// FlexibleServerMaintenanceWindowInput is an input type that accepts FlexibleServerMaintenanceWindowArgs and FlexibleServerMaintenanceWindowOutput values.
// You can construct a concrete instance of `FlexibleServerMaintenanceWindowInput` via:
//
//	FlexibleServerMaintenanceWindowArgs{...}
type FlexibleServerMaintenanceWindowInput interface {
	pulumi.Input

	ToFlexibleServerMaintenanceWindowOutput() FlexibleServerMaintenanceWindowOutput
	ToFlexibleServerMaintenanceWindowOutputWithContext(context.Context) FlexibleServerMaintenanceWindowOutput
}

type FlexibleServerMaintenanceWindowArgs struct {
	// The day of week for maintenance window. Defaults to `0`.
	DayOfWeek pulumi.IntPtrInput `pulumi:"dayOfWeek"`
	// The start hour for maintenance window. Defaults to `0`.
	StartHour pulumi.IntPtrInput `pulumi:"startHour"`
	// The start minute for maintenance window. Defaults to `0`.
	StartMinute pulumi.IntPtrInput `pulumi:"startMinute"`
}

func (FlexibleServerMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlexibleServerMaintenanceWindow)(nil)).Elem()
}

func (i FlexibleServerMaintenanceWindowArgs) ToFlexibleServerMaintenanceWindowOutput() FlexibleServerMaintenanceWindowOutput {
	return i.ToFlexibleServerMaintenanceWindowOutputWithContext(context.Background())
}

func (i FlexibleServerMaintenanceWindowArgs) ToFlexibleServerMaintenanceWindowOutputWithContext(ctx context.Context) FlexibleServerMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlexibleServerMaintenanceWindowOutput)
}

func (i FlexibleServerMaintenanceWindowArgs) ToFlexibleServerMaintenanceWindowPtrOutput() FlexibleServerMaintenanceWindowPtrOutput {
	return i.ToFlexibleServerMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i FlexibleServerMaintenanceWindowArgs) ToFlexibleServerMaintenanceWindowPtrOutputWithContext(ctx context.Context) FlexibleServerMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlexibleServerMaintenanceWindowOutput).ToFlexibleServerMaintenanceWindowPtrOutputWithContext(ctx)
}

// FlexibleServerMaintenanceWindowPtrInput is an input type that accepts FlexibleServerMaintenanceWindowArgs, FlexibleServerMaintenanceWindowPtr and FlexibleServerMaintenanceWindowPtrOutput values.
// You can construct a concrete instance of `FlexibleServerMaintenanceWindowPtrInput` via:
//
//	        FlexibleServerMaintenanceWindowArgs{...}
//
//	or:
//
//	        nil
type FlexibleServerMaintenanceWindowPtrInput interface {
	pulumi.Input

	ToFlexibleServerMaintenanceWindowPtrOutput() FlexibleServerMaintenanceWindowPtrOutput
	ToFlexibleServerMaintenanceWindowPtrOutputWithContext(context.Context) FlexibleServerMaintenanceWindowPtrOutput
}

type flexibleServerMaintenanceWindowPtrType FlexibleServerMaintenanceWindowArgs

func FlexibleServerMaintenanceWindowPtr(v *FlexibleServerMaintenanceWindowArgs) FlexibleServerMaintenanceWindowPtrInput {
	return (*flexibleServerMaintenanceWindowPtrType)(v)
}

func (*flexibleServerMaintenanceWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlexibleServerMaintenanceWindow)(nil)).Elem()
}

func (i *flexibleServerMaintenanceWindowPtrType) ToFlexibleServerMaintenanceWindowPtrOutput() FlexibleServerMaintenanceWindowPtrOutput {
	return i.ToFlexibleServerMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i *flexibleServerMaintenanceWindowPtrType) ToFlexibleServerMaintenanceWindowPtrOutputWithContext(ctx context.Context) FlexibleServerMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlexibleServerMaintenanceWindowPtrOutput)
}

type FlexibleServerMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (FlexibleServerMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlexibleServerMaintenanceWindow)(nil)).Elem()
}

func (o FlexibleServerMaintenanceWindowOutput) ToFlexibleServerMaintenanceWindowOutput() FlexibleServerMaintenanceWindowOutput {
	return o
}

func (o FlexibleServerMaintenanceWindowOutput) ToFlexibleServerMaintenanceWindowOutputWithContext(ctx context.Context) FlexibleServerMaintenanceWindowOutput {
	return o
}

func (o FlexibleServerMaintenanceWindowOutput) ToFlexibleServerMaintenanceWindowPtrOutput() FlexibleServerMaintenanceWindowPtrOutput {
	return o.ToFlexibleServerMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (o FlexibleServerMaintenanceWindowOutput) ToFlexibleServerMaintenanceWindowPtrOutputWithContext(ctx context.Context) FlexibleServerMaintenanceWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlexibleServerMaintenanceWindow) *FlexibleServerMaintenanceWindow {
		return &v
	}).(FlexibleServerMaintenanceWindowPtrOutput)
}

// The day of week for maintenance window. Defaults to `0`.
func (o FlexibleServerMaintenanceWindowOutput) DayOfWeek() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FlexibleServerMaintenanceWindow) *int { return v.DayOfWeek }).(pulumi.IntPtrOutput)
}

// The start hour for maintenance window. Defaults to `0`.
func (o FlexibleServerMaintenanceWindowOutput) StartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FlexibleServerMaintenanceWindow) *int { return v.StartHour }).(pulumi.IntPtrOutput)
}

// The start minute for maintenance window. Defaults to `0`.
func (o FlexibleServerMaintenanceWindowOutput) StartMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FlexibleServerMaintenanceWindow) *int { return v.StartMinute }).(pulumi.IntPtrOutput)
}

type FlexibleServerMaintenanceWindowPtrOutput struct{ *pulumi.OutputState }

func (FlexibleServerMaintenanceWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlexibleServerMaintenanceWindow)(nil)).Elem()
}

func (o FlexibleServerMaintenanceWindowPtrOutput) ToFlexibleServerMaintenanceWindowPtrOutput() FlexibleServerMaintenanceWindowPtrOutput {
	return o
}

func (o FlexibleServerMaintenanceWindowPtrOutput) ToFlexibleServerMaintenanceWindowPtrOutputWithContext(ctx context.Context) FlexibleServerMaintenanceWindowPtrOutput {
	return o
}

func (o FlexibleServerMaintenanceWindowPtrOutput) Elem() FlexibleServerMaintenanceWindowOutput {
	return o.ApplyT(func(v *FlexibleServerMaintenanceWindow) FlexibleServerMaintenanceWindow {
		if v != nil {
			return *v
		}
		var ret FlexibleServerMaintenanceWindow
		return ret
	}).(FlexibleServerMaintenanceWindowOutput)
}

// The day of week for maintenance window. Defaults to `0`.
func (o FlexibleServerMaintenanceWindowPtrOutput) DayOfWeek() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FlexibleServerMaintenanceWindow) *int {
		if v == nil {
			return nil
		}
		return v.DayOfWeek
	}).(pulumi.IntPtrOutput)
}

// The start hour for maintenance window. Defaults to `0`.
func (o FlexibleServerMaintenanceWindowPtrOutput) StartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FlexibleServerMaintenanceWindow) *int {
		if v == nil {
			return nil
		}
		return v.StartHour
	}).(pulumi.IntPtrOutput)
}

// The start minute for maintenance window. Defaults to `0`.
func (o FlexibleServerMaintenanceWindowPtrOutput) StartMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FlexibleServerMaintenanceWindow) *int {
		if v == nil {
			return nil
		}
		return v.StartMinute
	}).(pulumi.IntPtrOutput)
}

type FlexibleServerStorage struct {
	// Should Storage Auto Grow be enabled? Defaults to `true`.
	AutoGrowEnabled *bool `pulumi:"autoGrowEnabled"`
	// Should IOPS be scaled automatically? If `true`, `iops` can not be set. Defaults to `false`.
	IoScalingEnabled *bool `pulumi:"ioScalingEnabled"`
	// The storage IOPS for the MySQL Flexible Server. Possible values are between `360` and `20000`.
	Iops *int `pulumi:"iops"`
	// Should Storage Log On Disk be enabled? Defaults to `false`.
	LogOnDiskEnabled *bool `pulumi:"logOnDiskEnabled"`
	// The max storage allowed for the MySQL Flexible Server. Possible values are between `20` and `16384`.
	//
	// > **Note:** Decreasing `sizeGb` forces a new resource to be created.
	SizeGb *int `pulumi:"sizeGb"`
}

// FlexibleServerStorageInput is an input type that accepts FlexibleServerStorageArgs and FlexibleServerStorageOutput values.
// You can construct a concrete instance of `FlexibleServerStorageInput` via:
//
//	FlexibleServerStorageArgs{...}
type FlexibleServerStorageInput interface {
	pulumi.Input

	ToFlexibleServerStorageOutput() FlexibleServerStorageOutput
	ToFlexibleServerStorageOutputWithContext(context.Context) FlexibleServerStorageOutput
}

type FlexibleServerStorageArgs struct {
	// Should Storage Auto Grow be enabled? Defaults to `true`.
	AutoGrowEnabled pulumi.BoolPtrInput `pulumi:"autoGrowEnabled"`
	// Should IOPS be scaled automatically? If `true`, `iops` can not be set. Defaults to `false`.
	IoScalingEnabled pulumi.BoolPtrInput `pulumi:"ioScalingEnabled"`
	// The storage IOPS for the MySQL Flexible Server. Possible values are between `360` and `20000`.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Should Storage Log On Disk be enabled? Defaults to `false`.
	LogOnDiskEnabled pulumi.BoolPtrInput `pulumi:"logOnDiskEnabled"`
	// The max storage allowed for the MySQL Flexible Server. Possible values are between `20` and `16384`.
	//
	// > **Note:** Decreasing `sizeGb` forces a new resource to be created.
	SizeGb pulumi.IntPtrInput `pulumi:"sizeGb"`
}

func (FlexibleServerStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlexibleServerStorage)(nil)).Elem()
}

func (i FlexibleServerStorageArgs) ToFlexibleServerStorageOutput() FlexibleServerStorageOutput {
	return i.ToFlexibleServerStorageOutputWithContext(context.Background())
}

func (i FlexibleServerStorageArgs) ToFlexibleServerStorageOutputWithContext(ctx context.Context) FlexibleServerStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlexibleServerStorageOutput)
}

func (i FlexibleServerStorageArgs) ToFlexibleServerStoragePtrOutput() FlexibleServerStoragePtrOutput {
	return i.ToFlexibleServerStoragePtrOutputWithContext(context.Background())
}

func (i FlexibleServerStorageArgs) ToFlexibleServerStoragePtrOutputWithContext(ctx context.Context) FlexibleServerStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlexibleServerStorageOutput).ToFlexibleServerStoragePtrOutputWithContext(ctx)
}

// FlexibleServerStoragePtrInput is an input type that accepts FlexibleServerStorageArgs, FlexibleServerStoragePtr and FlexibleServerStoragePtrOutput values.
// You can construct a concrete instance of `FlexibleServerStoragePtrInput` via:
//
//	        FlexibleServerStorageArgs{...}
//
//	or:
//
//	        nil
type FlexibleServerStoragePtrInput interface {
	pulumi.Input

	ToFlexibleServerStoragePtrOutput() FlexibleServerStoragePtrOutput
	ToFlexibleServerStoragePtrOutputWithContext(context.Context) FlexibleServerStoragePtrOutput
}

type flexibleServerStoragePtrType FlexibleServerStorageArgs

func FlexibleServerStoragePtr(v *FlexibleServerStorageArgs) FlexibleServerStoragePtrInput {
	return (*flexibleServerStoragePtrType)(v)
}

func (*flexibleServerStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlexibleServerStorage)(nil)).Elem()
}

func (i *flexibleServerStoragePtrType) ToFlexibleServerStoragePtrOutput() FlexibleServerStoragePtrOutput {
	return i.ToFlexibleServerStoragePtrOutputWithContext(context.Background())
}

func (i *flexibleServerStoragePtrType) ToFlexibleServerStoragePtrOutputWithContext(ctx context.Context) FlexibleServerStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlexibleServerStoragePtrOutput)
}

type FlexibleServerStorageOutput struct{ *pulumi.OutputState }

func (FlexibleServerStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlexibleServerStorage)(nil)).Elem()
}

func (o FlexibleServerStorageOutput) ToFlexibleServerStorageOutput() FlexibleServerStorageOutput {
	return o
}

func (o FlexibleServerStorageOutput) ToFlexibleServerStorageOutputWithContext(ctx context.Context) FlexibleServerStorageOutput {
	return o
}

func (o FlexibleServerStorageOutput) ToFlexibleServerStoragePtrOutput() FlexibleServerStoragePtrOutput {
	return o.ToFlexibleServerStoragePtrOutputWithContext(context.Background())
}

func (o FlexibleServerStorageOutput) ToFlexibleServerStoragePtrOutputWithContext(ctx context.Context) FlexibleServerStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlexibleServerStorage) *FlexibleServerStorage {
		return &v
	}).(FlexibleServerStoragePtrOutput)
}

// Should Storage Auto Grow be enabled? Defaults to `true`.
func (o FlexibleServerStorageOutput) AutoGrowEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FlexibleServerStorage) *bool { return v.AutoGrowEnabled }).(pulumi.BoolPtrOutput)
}

// Should IOPS be scaled automatically? If `true`, `iops` can not be set. Defaults to `false`.
func (o FlexibleServerStorageOutput) IoScalingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FlexibleServerStorage) *bool { return v.IoScalingEnabled }).(pulumi.BoolPtrOutput)
}

// The storage IOPS for the MySQL Flexible Server. Possible values are between `360` and `20000`.
func (o FlexibleServerStorageOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FlexibleServerStorage) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Should Storage Log On Disk be enabled? Defaults to `false`.
func (o FlexibleServerStorageOutput) LogOnDiskEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FlexibleServerStorage) *bool { return v.LogOnDiskEnabled }).(pulumi.BoolPtrOutput)
}

// The max storage allowed for the MySQL Flexible Server. Possible values are between `20` and `16384`.
//
// > **Note:** Decreasing `sizeGb` forces a new resource to be created.
func (o FlexibleServerStorageOutput) SizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FlexibleServerStorage) *int { return v.SizeGb }).(pulumi.IntPtrOutput)
}

type FlexibleServerStoragePtrOutput struct{ *pulumi.OutputState }

func (FlexibleServerStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlexibleServerStorage)(nil)).Elem()
}

func (o FlexibleServerStoragePtrOutput) ToFlexibleServerStoragePtrOutput() FlexibleServerStoragePtrOutput {
	return o
}

func (o FlexibleServerStoragePtrOutput) ToFlexibleServerStoragePtrOutputWithContext(ctx context.Context) FlexibleServerStoragePtrOutput {
	return o
}

func (o FlexibleServerStoragePtrOutput) Elem() FlexibleServerStorageOutput {
	return o.ApplyT(func(v *FlexibleServerStorage) FlexibleServerStorage {
		if v != nil {
			return *v
		}
		var ret FlexibleServerStorage
		return ret
	}).(FlexibleServerStorageOutput)
}

// Should Storage Auto Grow be enabled? Defaults to `true`.
func (o FlexibleServerStoragePtrOutput) AutoGrowEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlexibleServerStorage) *bool {
		if v == nil {
			return nil
		}
		return v.AutoGrowEnabled
	}).(pulumi.BoolPtrOutput)
}

// Should IOPS be scaled automatically? If `true`, `iops` can not be set. Defaults to `false`.
func (o FlexibleServerStoragePtrOutput) IoScalingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlexibleServerStorage) *bool {
		if v == nil {
			return nil
		}
		return v.IoScalingEnabled
	}).(pulumi.BoolPtrOutput)
}

// The storage IOPS for the MySQL Flexible Server. Possible values are between `360` and `20000`.
func (o FlexibleServerStoragePtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FlexibleServerStorage) *int {
		if v == nil {
			return nil
		}
		return v.Iops
	}).(pulumi.IntPtrOutput)
}

// Should Storage Log On Disk be enabled? Defaults to `false`.
func (o FlexibleServerStoragePtrOutput) LogOnDiskEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlexibleServerStorage) *bool {
		if v == nil {
			return nil
		}
		return v.LogOnDiskEnabled
	}).(pulumi.BoolPtrOutput)
}

// The max storage allowed for the MySQL Flexible Server. Possible values are between `20` and `16384`.
//
// > **Note:** Decreasing `sizeGb` forces a new resource to be created.
func (o FlexibleServerStoragePtrOutput) SizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FlexibleServerStorage) *int {
		if v == nil {
			return nil
		}
		return v.SizeGb
	}).(pulumi.IntPtrOutput)
}

type GetFlexibleServerHighAvailability struct {
	// The high availability mode of the MySQL Flexible Server.
	Mode string `pulumi:"mode"`
	// The availability zone of the standby Flexible Server.
	StandbyAvailabilityZone string `pulumi:"standbyAvailabilityZone"`
}

// GetFlexibleServerHighAvailabilityInput is an input type that accepts GetFlexibleServerHighAvailabilityArgs and GetFlexibleServerHighAvailabilityOutput values.
// You can construct a concrete instance of `GetFlexibleServerHighAvailabilityInput` via:
//
//	GetFlexibleServerHighAvailabilityArgs{...}
type GetFlexibleServerHighAvailabilityInput interface {
	pulumi.Input

	ToGetFlexibleServerHighAvailabilityOutput() GetFlexibleServerHighAvailabilityOutput
	ToGetFlexibleServerHighAvailabilityOutputWithContext(context.Context) GetFlexibleServerHighAvailabilityOutput
}

type GetFlexibleServerHighAvailabilityArgs struct {
	// The high availability mode of the MySQL Flexible Server.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The availability zone of the standby Flexible Server.
	StandbyAvailabilityZone pulumi.StringInput `pulumi:"standbyAvailabilityZone"`
}

func (GetFlexibleServerHighAvailabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlexibleServerHighAvailability)(nil)).Elem()
}

func (i GetFlexibleServerHighAvailabilityArgs) ToGetFlexibleServerHighAvailabilityOutput() GetFlexibleServerHighAvailabilityOutput {
	return i.ToGetFlexibleServerHighAvailabilityOutputWithContext(context.Background())
}

func (i GetFlexibleServerHighAvailabilityArgs) ToGetFlexibleServerHighAvailabilityOutputWithContext(ctx context.Context) GetFlexibleServerHighAvailabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlexibleServerHighAvailabilityOutput)
}

// GetFlexibleServerHighAvailabilityArrayInput is an input type that accepts GetFlexibleServerHighAvailabilityArray and GetFlexibleServerHighAvailabilityArrayOutput values.
// You can construct a concrete instance of `GetFlexibleServerHighAvailabilityArrayInput` via:
//
//	GetFlexibleServerHighAvailabilityArray{ GetFlexibleServerHighAvailabilityArgs{...} }
type GetFlexibleServerHighAvailabilityArrayInput interface {
	pulumi.Input

	ToGetFlexibleServerHighAvailabilityArrayOutput() GetFlexibleServerHighAvailabilityArrayOutput
	ToGetFlexibleServerHighAvailabilityArrayOutputWithContext(context.Context) GetFlexibleServerHighAvailabilityArrayOutput
}

type GetFlexibleServerHighAvailabilityArray []GetFlexibleServerHighAvailabilityInput

func (GetFlexibleServerHighAvailabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlexibleServerHighAvailability)(nil)).Elem()
}

func (i GetFlexibleServerHighAvailabilityArray) ToGetFlexibleServerHighAvailabilityArrayOutput() GetFlexibleServerHighAvailabilityArrayOutput {
	return i.ToGetFlexibleServerHighAvailabilityArrayOutputWithContext(context.Background())
}

func (i GetFlexibleServerHighAvailabilityArray) ToGetFlexibleServerHighAvailabilityArrayOutputWithContext(ctx context.Context) GetFlexibleServerHighAvailabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlexibleServerHighAvailabilityArrayOutput)
}

type GetFlexibleServerHighAvailabilityOutput struct{ *pulumi.OutputState }

func (GetFlexibleServerHighAvailabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlexibleServerHighAvailability)(nil)).Elem()
}

func (o GetFlexibleServerHighAvailabilityOutput) ToGetFlexibleServerHighAvailabilityOutput() GetFlexibleServerHighAvailabilityOutput {
	return o
}

func (o GetFlexibleServerHighAvailabilityOutput) ToGetFlexibleServerHighAvailabilityOutputWithContext(ctx context.Context) GetFlexibleServerHighAvailabilityOutput {
	return o
}

// The high availability mode of the MySQL Flexible Server.
func (o GetFlexibleServerHighAvailabilityOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleServerHighAvailability) string { return v.Mode }).(pulumi.StringOutput)
}

// The availability zone of the standby Flexible Server.
func (o GetFlexibleServerHighAvailabilityOutput) StandbyAvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlexibleServerHighAvailability) string { return v.StandbyAvailabilityZone }).(pulumi.StringOutput)
}

type GetFlexibleServerHighAvailabilityArrayOutput struct{ *pulumi.OutputState }

func (GetFlexibleServerHighAvailabilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlexibleServerHighAvailability)(nil)).Elem()
}

func (o GetFlexibleServerHighAvailabilityArrayOutput) ToGetFlexibleServerHighAvailabilityArrayOutput() GetFlexibleServerHighAvailabilityArrayOutput {
	return o
}

func (o GetFlexibleServerHighAvailabilityArrayOutput) ToGetFlexibleServerHighAvailabilityArrayOutputWithContext(ctx context.Context) GetFlexibleServerHighAvailabilityArrayOutput {
	return o
}

func (o GetFlexibleServerHighAvailabilityArrayOutput) Index(i pulumi.IntInput) GetFlexibleServerHighAvailabilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFlexibleServerHighAvailability {
		return vs[0].([]GetFlexibleServerHighAvailability)[vs[1].(int)]
	}).(GetFlexibleServerHighAvailabilityOutput)
}

type GetFlexibleServerMaintenanceWindow struct {
	// The day of week of the maintenance window.
	DayOfWeek int `pulumi:"dayOfWeek"`
	// The start hour of the maintenance window.
	StartHour int `pulumi:"startHour"`
	// The start minute of the maintenance window.
	StartMinute int `pulumi:"startMinute"`
}

// GetFlexibleServerMaintenanceWindowInput is an input type that accepts GetFlexibleServerMaintenanceWindowArgs and GetFlexibleServerMaintenanceWindowOutput values.
// You can construct a concrete instance of `GetFlexibleServerMaintenanceWindowInput` via:
//
//	GetFlexibleServerMaintenanceWindowArgs{...}
type GetFlexibleServerMaintenanceWindowInput interface {
	pulumi.Input

	ToGetFlexibleServerMaintenanceWindowOutput() GetFlexibleServerMaintenanceWindowOutput
	ToGetFlexibleServerMaintenanceWindowOutputWithContext(context.Context) GetFlexibleServerMaintenanceWindowOutput
}

type GetFlexibleServerMaintenanceWindowArgs struct {
	// The day of week of the maintenance window.
	DayOfWeek pulumi.IntInput `pulumi:"dayOfWeek"`
	// The start hour of the maintenance window.
	StartHour pulumi.IntInput `pulumi:"startHour"`
	// The start minute of the maintenance window.
	StartMinute pulumi.IntInput `pulumi:"startMinute"`
}

func (GetFlexibleServerMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlexibleServerMaintenanceWindow)(nil)).Elem()
}

func (i GetFlexibleServerMaintenanceWindowArgs) ToGetFlexibleServerMaintenanceWindowOutput() GetFlexibleServerMaintenanceWindowOutput {
	return i.ToGetFlexibleServerMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetFlexibleServerMaintenanceWindowArgs) ToGetFlexibleServerMaintenanceWindowOutputWithContext(ctx context.Context) GetFlexibleServerMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlexibleServerMaintenanceWindowOutput)
}

// GetFlexibleServerMaintenanceWindowArrayInput is an input type that accepts GetFlexibleServerMaintenanceWindowArray and GetFlexibleServerMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `GetFlexibleServerMaintenanceWindowArrayInput` via:
//
//	GetFlexibleServerMaintenanceWindowArray{ GetFlexibleServerMaintenanceWindowArgs{...} }
type GetFlexibleServerMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetFlexibleServerMaintenanceWindowArrayOutput() GetFlexibleServerMaintenanceWindowArrayOutput
	ToGetFlexibleServerMaintenanceWindowArrayOutputWithContext(context.Context) GetFlexibleServerMaintenanceWindowArrayOutput
}

type GetFlexibleServerMaintenanceWindowArray []GetFlexibleServerMaintenanceWindowInput

func (GetFlexibleServerMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlexibleServerMaintenanceWindow)(nil)).Elem()
}

func (i GetFlexibleServerMaintenanceWindowArray) ToGetFlexibleServerMaintenanceWindowArrayOutput() GetFlexibleServerMaintenanceWindowArrayOutput {
	return i.ToGetFlexibleServerMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetFlexibleServerMaintenanceWindowArray) ToGetFlexibleServerMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetFlexibleServerMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlexibleServerMaintenanceWindowArrayOutput)
}

type GetFlexibleServerMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetFlexibleServerMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlexibleServerMaintenanceWindow)(nil)).Elem()
}

func (o GetFlexibleServerMaintenanceWindowOutput) ToGetFlexibleServerMaintenanceWindowOutput() GetFlexibleServerMaintenanceWindowOutput {
	return o
}

func (o GetFlexibleServerMaintenanceWindowOutput) ToGetFlexibleServerMaintenanceWindowOutputWithContext(ctx context.Context) GetFlexibleServerMaintenanceWindowOutput {
	return o
}

// The day of week of the maintenance window.
func (o GetFlexibleServerMaintenanceWindowOutput) DayOfWeek() pulumi.IntOutput {
	return o.ApplyT(func(v GetFlexibleServerMaintenanceWindow) int { return v.DayOfWeek }).(pulumi.IntOutput)
}

// The start hour of the maintenance window.
func (o GetFlexibleServerMaintenanceWindowOutput) StartHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetFlexibleServerMaintenanceWindow) int { return v.StartHour }).(pulumi.IntOutput)
}

// The start minute of the maintenance window.
func (o GetFlexibleServerMaintenanceWindowOutput) StartMinute() pulumi.IntOutput {
	return o.ApplyT(func(v GetFlexibleServerMaintenanceWindow) int { return v.StartMinute }).(pulumi.IntOutput)
}

type GetFlexibleServerMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetFlexibleServerMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlexibleServerMaintenanceWindow)(nil)).Elem()
}

func (o GetFlexibleServerMaintenanceWindowArrayOutput) ToGetFlexibleServerMaintenanceWindowArrayOutput() GetFlexibleServerMaintenanceWindowArrayOutput {
	return o
}

func (o GetFlexibleServerMaintenanceWindowArrayOutput) ToGetFlexibleServerMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetFlexibleServerMaintenanceWindowArrayOutput {
	return o
}

func (o GetFlexibleServerMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetFlexibleServerMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFlexibleServerMaintenanceWindow {
		return vs[0].([]GetFlexibleServerMaintenanceWindow)[vs[1].(int)]
	}).(GetFlexibleServerMaintenanceWindowOutput)
}

type GetFlexibleServerStorage struct {
	// Is Storage Auto Grow enabled?
	AutoGrowEnabled bool `pulumi:"autoGrowEnabled"`
	// Should IOPS be scaled automatically?
	IoScalingEnabled bool `pulumi:"ioScalingEnabled"`
	// The storage IOPS of the MySQL Flexible Server.
	Iops int `pulumi:"iops"`
	// The max storage allowed for the MySQL Flexible Server.
	SizeGb int `pulumi:"sizeGb"`
}

// GetFlexibleServerStorageInput is an input type that accepts GetFlexibleServerStorageArgs and GetFlexibleServerStorageOutput values.
// You can construct a concrete instance of `GetFlexibleServerStorageInput` via:
//
//	GetFlexibleServerStorageArgs{...}
type GetFlexibleServerStorageInput interface {
	pulumi.Input

	ToGetFlexibleServerStorageOutput() GetFlexibleServerStorageOutput
	ToGetFlexibleServerStorageOutputWithContext(context.Context) GetFlexibleServerStorageOutput
}

type GetFlexibleServerStorageArgs struct {
	// Is Storage Auto Grow enabled?
	AutoGrowEnabled pulumi.BoolInput `pulumi:"autoGrowEnabled"`
	// Should IOPS be scaled automatically?
	IoScalingEnabled pulumi.BoolInput `pulumi:"ioScalingEnabled"`
	// The storage IOPS of the MySQL Flexible Server.
	Iops pulumi.IntInput `pulumi:"iops"`
	// The max storage allowed for the MySQL Flexible Server.
	SizeGb pulumi.IntInput `pulumi:"sizeGb"`
}

func (GetFlexibleServerStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlexibleServerStorage)(nil)).Elem()
}

func (i GetFlexibleServerStorageArgs) ToGetFlexibleServerStorageOutput() GetFlexibleServerStorageOutput {
	return i.ToGetFlexibleServerStorageOutputWithContext(context.Background())
}

func (i GetFlexibleServerStorageArgs) ToGetFlexibleServerStorageOutputWithContext(ctx context.Context) GetFlexibleServerStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlexibleServerStorageOutput)
}

// GetFlexibleServerStorageArrayInput is an input type that accepts GetFlexibleServerStorageArray and GetFlexibleServerStorageArrayOutput values.
// You can construct a concrete instance of `GetFlexibleServerStorageArrayInput` via:
//
//	GetFlexibleServerStorageArray{ GetFlexibleServerStorageArgs{...} }
type GetFlexibleServerStorageArrayInput interface {
	pulumi.Input

	ToGetFlexibleServerStorageArrayOutput() GetFlexibleServerStorageArrayOutput
	ToGetFlexibleServerStorageArrayOutputWithContext(context.Context) GetFlexibleServerStorageArrayOutput
}

type GetFlexibleServerStorageArray []GetFlexibleServerStorageInput

func (GetFlexibleServerStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlexibleServerStorage)(nil)).Elem()
}

func (i GetFlexibleServerStorageArray) ToGetFlexibleServerStorageArrayOutput() GetFlexibleServerStorageArrayOutput {
	return i.ToGetFlexibleServerStorageArrayOutputWithContext(context.Background())
}

func (i GetFlexibleServerStorageArray) ToGetFlexibleServerStorageArrayOutputWithContext(ctx context.Context) GetFlexibleServerStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlexibleServerStorageArrayOutput)
}

type GetFlexibleServerStorageOutput struct{ *pulumi.OutputState }

func (GetFlexibleServerStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlexibleServerStorage)(nil)).Elem()
}

func (o GetFlexibleServerStorageOutput) ToGetFlexibleServerStorageOutput() GetFlexibleServerStorageOutput {
	return o
}

func (o GetFlexibleServerStorageOutput) ToGetFlexibleServerStorageOutputWithContext(ctx context.Context) GetFlexibleServerStorageOutput {
	return o
}

// Is Storage Auto Grow enabled?
func (o GetFlexibleServerStorageOutput) AutoGrowEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFlexibleServerStorage) bool { return v.AutoGrowEnabled }).(pulumi.BoolOutput)
}

// Should IOPS be scaled automatically?
func (o GetFlexibleServerStorageOutput) IoScalingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFlexibleServerStorage) bool { return v.IoScalingEnabled }).(pulumi.BoolOutput)
}

// The storage IOPS of the MySQL Flexible Server.
func (o GetFlexibleServerStorageOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v GetFlexibleServerStorage) int { return v.Iops }).(pulumi.IntOutput)
}

// The max storage allowed for the MySQL Flexible Server.
func (o GetFlexibleServerStorageOutput) SizeGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetFlexibleServerStorage) int { return v.SizeGb }).(pulumi.IntOutput)
}

type GetFlexibleServerStorageArrayOutput struct{ *pulumi.OutputState }

func (GetFlexibleServerStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlexibleServerStorage)(nil)).Elem()
}

func (o GetFlexibleServerStorageArrayOutput) ToGetFlexibleServerStorageArrayOutput() GetFlexibleServerStorageArrayOutput {
	return o
}

func (o GetFlexibleServerStorageArrayOutput) ToGetFlexibleServerStorageArrayOutputWithContext(ctx context.Context) GetFlexibleServerStorageArrayOutput {
	return o
}

func (o GetFlexibleServerStorageArrayOutput) Index(i pulumi.IntInput) GetFlexibleServerStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFlexibleServerStorage {
		return vs[0].([]GetFlexibleServerStorage)[vs[1].(int)]
	}).(GetFlexibleServerStorageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FlexibleServerCustomerManagedKeyInput)(nil)).Elem(), FlexibleServerCustomerManagedKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlexibleServerCustomerManagedKeyPtrInput)(nil)).Elem(), FlexibleServerCustomerManagedKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlexibleServerHighAvailabilityInput)(nil)).Elem(), FlexibleServerHighAvailabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlexibleServerHighAvailabilityPtrInput)(nil)).Elem(), FlexibleServerHighAvailabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlexibleServerIdentityInput)(nil)).Elem(), FlexibleServerIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlexibleServerIdentityPtrInput)(nil)).Elem(), FlexibleServerIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlexibleServerMaintenanceWindowInput)(nil)).Elem(), FlexibleServerMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlexibleServerMaintenanceWindowPtrInput)(nil)).Elem(), FlexibleServerMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlexibleServerStorageInput)(nil)).Elem(), FlexibleServerStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlexibleServerStoragePtrInput)(nil)).Elem(), FlexibleServerStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlexibleServerHighAvailabilityInput)(nil)).Elem(), GetFlexibleServerHighAvailabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlexibleServerHighAvailabilityArrayInput)(nil)).Elem(), GetFlexibleServerHighAvailabilityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlexibleServerMaintenanceWindowInput)(nil)).Elem(), GetFlexibleServerMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlexibleServerMaintenanceWindowArrayInput)(nil)).Elem(), GetFlexibleServerMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlexibleServerStorageInput)(nil)).Elem(), GetFlexibleServerStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlexibleServerStorageArrayInput)(nil)).Elem(), GetFlexibleServerStorageArray{})
	pulumi.RegisterOutputType(FlexibleServerCustomerManagedKeyOutput{})
	pulumi.RegisterOutputType(FlexibleServerCustomerManagedKeyPtrOutput{})
	pulumi.RegisterOutputType(FlexibleServerHighAvailabilityOutput{})
	pulumi.RegisterOutputType(FlexibleServerHighAvailabilityPtrOutput{})
	pulumi.RegisterOutputType(FlexibleServerIdentityOutput{})
	pulumi.RegisterOutputType(FlexibleServerIdentityPtrOutput{})
	pulumi.RegisterOutputType(FlexibleServerMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(FlexibleServerMaintenanceWindowPtrOutput{})
	pulumi.RegisterOutputType(FlexibleServerStorageOutput{})
	pulumi.RegisterOutputType(FlexibleServerStoragePtrOutput{})
	pulumi.RegisterOutputType(GetFlexibleServerHighAvailabilityOutput{})
	pulumi.RegisterOutputType(GetFlexibleServerHighAvailabilityArrayOutput{})
	pulumi.RegisterOutputType(GetFlexibleServerMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetFlexibleServerMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetFlexibleServerStorageOutput{})
	pulumi.RegisterOutputType(GetFlexibleServerStorageArrayOutput{})
}
