// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lab

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Lab Service Lab.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/lab"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = lab.NewLab(ctx, "exampleLab", &lab.LabArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				Title:             pulumi.String("Test Title"),
//				Security: &lab.LabSecurityArgs{
//					OpenAccessEnabled: pulumi.Bool(false),
//				},
//				VirtualMachine: &lab.LabVirtualMachineArgs{
//					AdminUser: &lab.LabVirtualMachineAdminUserArgs{
//						Username: pulumi.String("testadmin"),
//						Password: pulumi.String("Password1234!"),
//					},
//					ImageReference: &lab.LabVirtualMachineImageReferenceArgs{
//						Publisher: pulumi.String("Canonical"),
//						Offer:     pulumi.String("0001-com-ubuntu-server-jammy"),
//						Sku:       pulumi.String("22_04-lts"),
//						Version:   pulumi.String("latest"),
//					},
//					Sku: &lab.LabVirtualMachineSkuArgs{
//						Name:     pulumi.String("Classic_Fsv2_2_4GB_128_S_SSD"),
//						Capacity: pulumi.Int(0),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Lab Service Labs can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:lab/lab:Lab example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.LabServices/labs/lab1
//
// ```
type Lab struct {
	pulumi.CustomResourceState

	// An `autoShutdown` block as defined below.
	AutoShutdown LabAutoShutdownPtrOutput `pulumi:"autoShutdown"`
	// A `connectionSetting` block as defined below.
	ConnectionSetting LabConnectionSettingPtrOutput `pulumi:"connectionSetting"`
	// The description of the Lab Service Lab.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The resource ID of the Lab Plan that is used during resource creation to provide defaults and acts as a permission container when creating a Lab Service Lab via `labs.azure.com`.
	LabPlanId pulumi.StringPtrOutput `pulumi:"labPlanId"`
	// The Azure Region where the Lab Service Lab should exist. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name which should be used for this Lab Service Lab. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// A `network` block as defined below.
	Network LabNetworkPtrOutput `pulumi:"network"`
	// The name of the Resource Group where the Lab Service Lab should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A `roster` block as defined below.
	Roster LabRosterPtrOutput `pulumi:"roster"`
	// A `security` block as defined below.
	Security LabSecurityOutput `pulumi:"security"`
	// A mapping of tags which should be assigned to the Lab Service Lab.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The title of the Lab Service Lab.
	Title pulumi.StringOutput `pulumi:"title"`
	// A `virtualMachine` block as defined below.
	VirtualMachine LabVirtualMachineOutput `pulumi:"virtualMachine"`
}

// NewLab registers a new resource with the given unique name, arguments, and options.
func NewLab(ctx *pulumi.Context,
	name string, args *LabArgs, opts ...pulumi.ResourceOption) (*Lab, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Security == nil {
		return nil, errors.New("invalid value for required argument 'Security'")
	}
	if args.Title == nil {
		return nil, errors.New("invalid value for required argument 'Title'")
	}
	if args.VirtualMachine == nil {
		return nil, errors.New("invalid value for required argument 'VirtualMachine'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Lab
	err := ctx.RegisterResource("azure:lab/lab:Lab", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLab gets an existing Lab resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLab(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LabState, opts ...pulumi.ResourceOption) (*Lab, error) {
	var resource Lab
	err := ctx.ReadResource("azure:lab/lab:Lab", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Lab resources.
type labState struct {
	// An `autoShutdown` block as defined below.
	AutoShutdown *LabAutoShutdown `pulumi:"autoShutdown"`
	// A `connectionSetting` block as defined below.
	ConnectionSetting *LabConnectionSetting `pulumi:"connectionSetting"`
	// The description of the Lab Service Lab.
	Description *string `pulumi:"description"`
	// The resource ID of the Lab Plan that is used during resource creation to provide defaults and acts as a permission container when creating a Lab Service Lab via `labs.azure.com`.
	LabPlanId *string `pulumi:"labPlanId"`
	// The Azure Region where the Lab Service Lab should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this Lab Service Lab. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A `network` block as defined below.
	Network *LabNetwork `pulumi:"network"`
	// The name of the Resource Group where the Lab Service Lab should exist. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A `roster` block as defined below.
	Roster *LabRoster `pulumi:"roster"`
	// A `security` block as defined below.
	Security *LabSecurity `pulumi:"security"`
	// A mapping of tags which should be assigned to the Lab Service Lab.
	Tags map[string]string `pulumi:"tags"`
	// The title of the Lab Service Lab.
	Title *string `pulumi:"title"`
	// A `virtualMachine` block as defined below.
	VirtualMachine *LabVirtualMachine `pulumi:"virtualMachine"`
}

type LabState struct {
	// An `autoShutdown` block as defined below.
	AutoShutdown LabAutoShutdownPtrInput
	// A `connectionSetting` block as defined below.
	ConnectionSetting LabConnectionSettingPtrInput
	// The description of the Lab Service Lab.
	Description pulumi.StringPtrInput
	// The resource ID of the Lab Plan that is used during resource creation to provide defaults and acts as a permission container when creating a Lab Service Lab via `labs.azure.com`.
	LabPlanId pulumi.StringPtrInput
	// The Azure Region where the Lab Service Lab should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this Lab Service Lab. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A `network` block as defined below.
	Network LabNetworkPtrInput
	// The name of the Resource Group where the Lab Service Lab should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// A `roster` block as defined below.
	Roster LabRosterPtrInput
	// A `security` block as defined below.
	Security LabSecurityPtrInput
	// A mapping of tags which should be assigned to the Lab Service Lab.
	Tags pulumi.StringMapInput
	// The title of the Lab Service Lab.
	Title pulumi.StringPtrInput
	// A `virtualMachine` block as defined below.
	VirtualMachine LabVirtualMachinePtrInput
}

func (LabState) ElementType() reflect.Type {
	return reflect.TypeOf((*labState)(nil)).Elem()
}

type labArgs struct {
	// An `autoShutdown` block as defined below.
	AutoShutdown *LabAutoShutdown `pulumi:"autoShutdown"`
	// A `connectionSetting` block as defined below.
	ConnectionSetting *LabConnectionSetting `pulumi:"connectionSetting"`
	// The description of the Lab Service Lab.
	Description *string `pulumi:"description"`
	// The resource ID of the Lab Plan that is used during resource creation to provide defaults and acts as a permission container when creating a Lab Service Lab via `labs.azure.com`.
	LabPlanId *string `pulumi:"labPlanId"`
	// The Azure Region where the Lab Service Lab should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this Lab Service Lab. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A `network` block as defined below.
	Network *LabNetwork `pulumi:"network"`
	// The name of the Resource Group where the Lab Service Lab should exist. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A `roster` block as defined below.
	Roster *LabRoster `pulumi:"roster"`
	// A `security` block as defined below.
	Security LabSecurity `pulumi:"security"`
	// A mapping of tags which should be assigned to the Lab Service Lab.
	Tags map[string]string `pulumi:"tags"`
	// The title of the Lab Service Lab.
	Title string `pulumi:"title"`
	// A `virtualMachine` block as defined below.
	VirtualMachine LabVirtualMachine `pulumi:"virtualMachine"`
}

// The set of arguments for constructing a Lab resource.
type LabArgs struct {
	// An `autoShutdown` block as defined below.
	AutoShutdown LabAutoShutdownPtrInput
	// A `connectionSetting` block as defined below.
	ConnectionSetting LabConnectionSettingPtrInput
	// The description of the Lab Service Lab.
	Description pulumi.StringPtrInput
	// The resource ID of the Lab Plan that is used during resource creation to provide defaults and acts as a permission container when creating a Lab Service Lab via `labs.azure.com`.
	LabPlanId pulumi.StringPtrInput
	// The Azure Region where the Lab Service Lab should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this Lab Service Lab. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A `network` block as defined below.
	Network LabNetworkPtrInput
	// The name of the Resource Group where the Lab Service Lab should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// A `roster` block as defined below.
	Roster LabRosterPtrInput
	// A `security` block as defined below.
	Security LabSecurityInput
	// A mapping of tags which should be assigned to the Lab Service Lab.
	Tags pulumi.StringMapInput
	// The title of the Lab Service Lab.
	Title pulumi.StringInput
	// A `virtualMachine` block as defined below.
	VirtualMachine LabVirtualMachineInput
}

func (LabArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*labArgs)(nil)).Elem()
}

type LabInput interface {
	pulumi.Input

	ToLabOutput() LabOutput
	ToLabOutputWithContext(ctx context.Context) LabOutput
}

func (*Lab) ElementType() reflect.Type {
	return reflect.TypeOf((**Lab)(nil)).Elem()
}

func (i *Lab) ToLabOutput() LabOutput {
	return i.ToLabOutputWithContext(context.Background())
}

func (i *Lab) ToLabOutputWithContext(ctx context.Context) LabOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabOutput)
}

// LabArrayInput is an input type that accepts LabArray and LabArrayOutput values.
// You can construct a concrete instance of `LabArrayInput` via:
//
//	LabArray{ LabArgs{...} }
type LabArrayInput interface {
	pulumi.Input

	ToLabArrayOutput() LabArrayOutput
	ToLabArrayOutputWithContext(context.Context) LabArrayOutput
}

type LabArray []LabInput

func (LabArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Lab)(nil)).Elem()
}

func (i LabArray) ToLabArrayOutput() LabArrayOutput {
	return i.ToLabArrayOutputWithContext(context.Background())
}

func (i LabArray) ToLabArrayOutputWithContext(ctx context.Context) LabArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabArrayOutput)
}

// LabMapInput is an input type that accepts LabMap and LabMapOutput values.
// You can construct a concrete instance of `LabMapInput` via:
//
//	LabMap{ "key": LabArgs{...} }
type LabMapInput interface {
	pulumi.Input

	ToLabMapOutput() LabMapOutput
	ToLabMapOutputWithContext(context.Context) LabMapOutput
}

type LabMap map[string]LabInput

func (LabMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Lab)(nil)).Elem()
}

func (i LabMap) ToLabMapOutput() LabMapOutput {
	return i.ToLabMapOutputWithContext(context.Background())
}

func (i LabMap) ToLabMapOutputWithContext(ctx context.Context) LabMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabMapOutput)
}

type LabOutput struct{ *pulumi.OutputState }

func (LabOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Lab)(nil)).Elem()
}

func (o LabOutput) ToLabOutput() LabOutput {
	return o
}

func (o LabOutput) ToLabOutputWithContext(ctx context.Context) LabOutput {
	return o
}

// An `autoShutdown` block as defined below.
func (o LabOutput) AutoShutdown() LabAutoShutdownPtrOutput {
	return o.ApplyT(func(v *Lab) LabAutoShutdownPtrOutput { return v.AutoShutdown }).(LabAutoShutdownPtrOutput)
}

// A `connectionSetting` block as defined below.
func (o LabOutput) ConnectionSetting() LabConnectionSettingPtrOutput {
	return o.ApplyT(func(v *Lab) LabConnectionSettingPtrOutput { return v.ConnectionSetting }).(LabConnectionSettingPtrOutput)
}

// The description of the Lab Service Lab.
func (o LabOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Lab) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The resource ID of the Lab Plan that is used during resource creation to provide defaults and acts as a permission container when creating a Lab Service Lab via `labs.azure.com`.
func (o LabOutput) LabPlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Lab) pulumi.StringPtrOutput { return v.LabPlanId }).(pulumi.StringPtrOutput)
}

// The Azure Region where the Lab Service Lab should exist. Changing this forces a new resource to be created.
func (o LabOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Lab) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name which should be used for this Lab Service Lab. Changing this forces a new resource to be created.
func (o LabOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Lab) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A `network` block as defined below.
func (o LabOutput) Network() LabNetworkPtrOutput {
	return o.ApplyT(func(v *Lab) LabNetworkPtrOutput { return v.Network }).(LabNetworkPtrOutput)
}

// The name of the Resource Group where the Lab Service Lab should exist. Changing this forces a new resource to be created.
func (o LabOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *Lab) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A `roster` block as defined below.
func (o LabOutput) Roster() LabRosterPtrOutput {
	return o.ApplyT(func(v *Lab) LabRosterPtrOutput { return v.Roster }).(LabRosterPtrOutput)
}

// A `security` block as defined below.
func (o LabOutput) Security() LabSecurityOutput {
	return o.ApplyT(func(v *Lab) LabSecurityOutput { return v.Security }).(LabSecurityOutput)
}

// A mapping of tags which should be assigned to the Lab Service Lab.
func (o LabOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Lab) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The title of the Lab Service Lab.
func (o LabOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v *Lab) pulumi.StringOutput { return v.Title }).(pulumi.StringOutput)
}

// A `virtualMachine` block as defined below.
func (o LabOutput) VirtualMachine() LabVirtualMachineOutput {
	return o.ApplyT(func(v *Lab) LabVirtualMachineOutput { return v.VirtualMachine }).(LabVirtualMachineOutput)
}

type LabArrayOutput struct{ *pulumi.OutputState }

func (LabArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Lab)(nil)).Elem()
}

func (o LabArrayOutput) ToLabArrayOutput() LabArrayOutput {
	return o
}

func (o LabArrayOutput) ToLabArrayOutputWithContext(ctx context.Context) LabArrayOutput {
	return o
}

func (o LabArrayOutput) Index(i pulumi.IntInput) LabOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Lab {
		return vs[0].([]*Lab)[vs[1].(int)]
	}).(LabOutput)
}

type LabMapOutput struct{ *pulumi.OutputState }

func (LabMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Lab)(nil)).Elem()
}

func (o LabMapOutput) ToLabMapOutput() LabMapOutput {
	return o
}

func (o LabMapOutput) ToLabMapOutputWithContext(ctx context.Context) LabMapOutput {
	return o
}

func (o LabMapOutput) MapIndex(k pulumi.StringInput) LabOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Lab {
		return vs[0].(map[string]*Lab)[vs[1].(string)]
	}).(LabOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LabInput)(nil)).Elem(), &Lab{})
	pulumi.RegisterInputType(reflect.TypeOf((*LabArrayInput)(nil)).Elem(), LabArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LabMapInput)(nil)).Elem(), LabMap{})
	pulumi.RegisterOutputType(LabOutput{})
	pulumi.RegisterOutputType(LabArrayOutput{})
	pulumi.RegisterOutputType(LabMapOutput{})
}
