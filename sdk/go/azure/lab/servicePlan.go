// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lab

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Lab Service Plan.
//
// > **Note:** Before using this resource, it's required to submit the request of registering the provider with Azure CLI `az provider register --namespace Microsoft.LabServices`.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/lab"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = lab.NewServicePlan(ctx, "exampleServicePlan", &lab.ServicePlanArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				AllowedRegions: pulumi.StringArray{
//					exampleResourceGroup.Location,
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Lab Service Plans can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:lab/servicePlan:ServicePlan example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.LabServices/labPlans/labPlan1
//
// ```
type ServicePlan struct {
	pulumi.CustomResourceState

	// The allowed regions for the lab creator to use when creating labs using this Lab Service Plan. The allowed region's count must be between `1` and `28`.
	AllowedRegions pulumi.StringArrayOutput `pulumi:"allowedRegions"`
	// A `defaultAutoShutdown` block as defined below.
	DefaultAutoShutdown ServicePlanDefaultAutoShutdownPtrOutput `pulumi:"defaultAutoShutdown"`
	// A `defaultConnection` block as defined below.
	DefaultConnection ServicePlanDefaultConnectionPtrOutput `pulumi:"defaultConnection"`
	// The resource ID of the Subnet for the Lab Service Plan network profile.
	DefaultNetworkSubnetId pulumi.StringPtrOutput `pulumi:"defaultNetworkSubnetId"`
	// The Azure Region where the Lab Service Plan should exist. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the Lab Service Plan. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the Resource Group where the Lab Service Plan should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The resource ID of the Shared Image Gallery attached to this Lab Service Plan. When saving a lab template virtual machine image it will be persisted in this gallery. The shared images from the gallery can be made available to use when creating new labs.
	//
	// > **NOTE:** The built-in `Azure Lab Services` Service Principal with role needs to be assigned to the Shared Image Gallery while using this property.
	SharedGalleryId pulumi.StringPtrOutput `pulumi:"sharedGalleryId"`
	// A `support` block as defined below.
	Support ServicePlanSupportPtrOutput `pulumi:"support"`
	// A mapping of tags which should be assigned to the Lab Service Plan.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewServicePlan registers a new resource with the given unique name, arguments, and options.
func NewServicePlan(ctx *pulumi.Context,
	name string, args *ServicePlanArgs, opts ...pulumi.ResourceOption) (*ServicePlan, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AllowedRegions == nil {
		return nil, errors.New("invalid value for required argument 'AllowedRegions'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServicePlan
	err := ctx.RegisterResource("azure:lab/servicePlan:ServicePlan", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServicePlan gets an existing ServicePlan resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServicePlan(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServicePlanState, opts ...pulumi.ResourceOption) (*ServicePlan, error) {
	var resource ServicePlan
	err := ctx.ReadResource("azure:lab/servicePlan:ServicePlan", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServicePlan resources.
type servicePlanState struct {
	// The allowed regions for the lab creator to use when creating labs using this Lab Service Plan. The allowed region's count must be between `1` and `28`.
	AllowedRegions []string `pulumi:"allowedRegions"`
	// A `defaultAutoShutdown` block as defined below.
	DefaultAutoShutdown *ServicePlanDefaultAutoShutdown `pulumi:"defaultAutoShutdown"`
	// A `defaultConnection` block as defined below.
	DefaultConnection *ServicePlanDefaultConnection `pulumi:"defaultConnection"`
	// The resource ID of the Subnet for the Lab Service Plan network profile.
	DefaultNetworkSubnetId *string `pulumi:"defaultNetworkSubnetId"`
	// The Azure Region where the Lab Service Plan should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The name of the Lab Service Plan. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group where the Lab Service Plan should exist. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The resource ID of the Shared Image Gallery attached to this Lab Service Plan. When saving a lab template virtual machine image it will be persisted in this gallery. The shared images from the gallery can be made available to use when creating new labs.
	//
	// > **NOTE:** The built-in `Azure Lab Services` Service Principal with role needs to be assigned to the Shared Image Gallery while using this property.
	SharedGalleryId *string `pulumi:"sharedGalleryId"`
	// A `support` block as defined below.
	Support *ServicePlanSupport `pulumi:"support"`
	// A mapping of tags which should be assigned to the Lab Service Plan.
	Tags map[string]string `pulumi:"tags"`
}

type ServicePlanState struct {
	// The allowed regions for the lab creator to use when creating labs using this Lab Service Plan. The allowed region's count must be between `1` and `28`.
	AllowedRegions pulumi.StringArrayInput
	// A `defaultAutoShutdown` block as defined below.
	DefaultAutoShutdown ServicePlanDefaultAutoShutdownPtrInput
	// A `defaultConnection` block as defined below.
	DefaultConnection ServicePlanDefaultConnectionPtrInput
	// The resource ID of the Subnet for the Lab Service Plan network profile.
	DefaultNetworkSubnetId pulumi.StringPtrInput
	// The Azure Region where the Lab Service Plan should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The name of the Lab Service Plan. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group where the Lab Service Plan should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The resource ID of the Shared Image Gallery attached to this Lab Service Plan. When saving a lab template virtual machine image it will be persisted in this gallery. The shared images from the gallery can be made available to use when creating new labs.
	//
	// > **NOTE:** The built-in `Azure Lab Services` Service Principal with role needs to be assigned to the Shared Image Gallery while using this property.
	SharedGalleryId pulumi.StringPtrInput
	// A `support` block as defined below.
	Support ServicePlanSupportPtrInput
	// A mapping of tags which should be assigned to the Lab Service Plan.
	Tags pulumi.StringMapInput
}

func (ServicePlanState) ElementType() reflect.Type {
	return reflect.TypeOf((*servicePlanState)(nil)).Elem()
}

type servicePlanArgs struct {
	// The allowed regions for the lab creator to use when creating labs using this Lab Service Plan. The allowed region's count must be between `1` and `28`.
	AllowedRegions []string `pulumi:"allowedRegions"`
	// A `defaultAutoShutdown` block as defined below.
	DefaultAutoShutdown *ServicePlanDefaultAutoShutdown `pulumi:"defaultAutoShutdown"`
	// A `defaultConnection` block as defined below.
	DefaultConnection *ServicePlanDefaultConnection `pulumi:"defaultConnection"`
	// The resource ID of the Subnet for the Lab Service Plan network profile.
	DefaultNetworkSubnetId *string `pulumi:"defaultNetworkSubnetId"`
	// The Azure Region where the Lab Service Plan should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The name of the Lab Service Plan. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group where the Lab Service Plan should exist. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The resource ID of the Shared Image Gallery attached to this Lab Service Plan. When saving a lab template virtual machine image it will be persisted in this gallery. The shared images from the gallery can be made available to use when creating new labs.
	//
	// > **NOTE:** The built-in `Azure Lab Services` Service Principal with role needs to be assigned to the Shared Image Gallery while using this property.
	SharedGalleryId *string `pulumi:"sharedGalleryId"`
	// A `support` block as defined below.
	Support *ServicePlanSupport `pulumi:"support"`
	// A mapping of tags which should be assigned to the Lab Service Plan.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ServicePlan resource.
type ServicePlanArgs struct {
	// The allowed regions for the lab creator to use when creating labs using this Lab Service Plan. The allowed region's count must be between `1` and `28`.
	AllowedRegions pulumi.StringArrayInput
	// A `defaultAutoShutdown` block as defined below.
	DefaultAutoShutdown ServicePlanDefaultAutoShutdownPtrInput
	// A `defaultConnection` block as defined below.
	DefaultConnection ServicePlanDefaultConnectionPtrInput
	// The resource ID of the Subnet for the Lab Service Plan network profile.
	DefaultNetworkSubnetId pulumi.StringPtrInput
	// The Azure Region where the Lab Service Plan should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The name of the Lab Service Plan. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group where the Lab Service Plan should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// The resource ID of the Shared Image Gallery attached to this Lab Service Plan. When saving a lab template virtual machine image it will be persisted in this gallery. The shared images from the gallery can be made available to use when creating new labs.
	//
	// > **NOTE:** The built-in `Azure Lab Services` Service Principal with role needs to be assigned to the Shared Image Gallery while using this property.
	SharedGalleryId pulumi.StringPtrInput
	// A `support` block as defined below.
	Support ServicePlanSupportPtrInput
	// A mapping of tags which should be assigned to the Lab Service Plan.
	Tags pulumi.StringMapInput
}

func (ServicePlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*servicePlanArgs)(nil)).Elem()
}

type ServicePlanInput interface {
	pulumi.Input

	ToServicePlanOutput() ServicePlanOutput
	ToServicePlanOutputWithContext(ctx context.Context) ServicePlanOutput
}

func (*ServicePlan) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePlan)(nil)).Elem()
}

func (i *ServicePlan) ToServicePlanOutput() ServicePlanOutput {
	return i.ToServicePlanOutputWithContext(context.Background())
}

func (i *ServicePlan) ToServicePlanOutputWithContext(ctx context.Context) ServicePlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePlanOutput)
}

// ServicePlanArrayInput is an input type that accepts ServicePlanArray and ServicePlanArrayOutput values.
// You can construct a concrete instance of `ServicePlanArrayInput` via:
//
//	ServicePlanArray{ ServicePlanArgs{...} }
type ServicePlanArrayInput interface {
	pulumi.Input

	ToServicePlanArrayOutput() ServicePlanArrayOutput
	ToServicePlanArrayOutputWithContext(context.Context) ServicePlanArrayOutput
}

type ServicePlanArray []ServicePlanInput

func (ServicePlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServicePlan)(nil)).Elem()
}

func (i ServicePlanArray) ToServicePlanArrayOutput() ServicePlanArrayOutput {
	return i.ToServicePlanArrayOutputWithContext(context.Background())
}

func (i ServicePlanArray) ToServicePlanArrayOutputWithContext(ctx context.Context) ServicePlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePlanArrayOutput)
}

// ServicePlanMapInput is an input type that accepts ServicePlanMap and ServicePlanMapOutput values.
// You can construct a concrete instance of `ServicePlanMapInput` via:
//
//	ServicePlanMap{ "key": ServicePlanArgs{...} }
type ServicePlanMapInput interface {
	pulumi.Input

	ToServicePlanMapOutput() ServicePlanMapOutput
	ToServicePlanMapOutputWithContext(context.Context) ServicePlanMapOutput
}

type ServicePlanMap map[string]ServicePlanInput

func (ServicePlanMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServicePlan)(nil)).Elem()
}

func (i ServicePlanMap) ToServicePlanMapOutput() ServicePlanMapOutput {
	return i.ToServicePlanMapOutputWithContext(context.Background())
}

func (i ServicePlanMap) ToServicePlanMapOutputWithContext(ctx context.Context) ServicePlanMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePlanMapOutput)
}

type ServicePlanOutput struct{ *pulumi.OutputState }

func (ServicePlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePlan)(nil)).Elem()
}

func (o ServicePlanOutput) ToServicePlanOutput() ServicePlanOutput {
	return o
}

func (o ServicePlanOutput) ToServicePlanOutputWithContext(ctx context.Context) ServicePlanOutput {
	return o
}

// The allowed regions for the lab creator to use when creating labs using this Lab Service Plan. The allowed region's count must be between `1` and `28`.
func (o ServicePlanOutput) AllowedRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServicePlan) pulumi.StringArrayOutput { return v.AllowedRegions }).(pulumi.StringArrayOutput)
}

// A `defaultAutoShutdown` block as defined below.
func (o ServicePlanOutput) DefaultAutoShutdown() ServicePlanDefaultAutoShutdownPtrOutput {
	return o.ApplyT(func(v *ServicePlan) ServicePlanDefaultAutoShutdownPtrOutput { return v.DefaultAutoShutdown }).(ServicePlanDefaultAutoShutdownPtrOutput)
}

// A `defaultConnection` block as defined below.
func (o ServicePlanOutput) DefaultConnection() ServicePlanDefaultConnectionPtrOutput {
	return o.ApplyT(func(v *ServicePlan) ServicePlanDefaultConnectionPtrOutput { return v.DefaultConnection }).(ServicePlanDefaultConnectionPtrOutput)
}

// The resource ID of the Subnet for the Lab Service Plan network profile.
func (o ServicePlanOutput) DefaultNetworkSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePlan) pulumi.StringPtrOutput { return v.DefaultNetworkSubnetId }).(pulumi.StringPtrOutput)
}

// The Azure Region where the Lab Service Plan should exist. Changing this forces a new resource to be created.
func (o ServicePlanOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ServicePlan) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the Lab Service Plan. Changing this forces a new resource to be created.
func (o ServicePlanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServicePlan) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the Resource Group where the Lab Service Plan should exist. Changing this forces a new resource to be created.
func (o ServicePlanOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *ServicePlan) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The resource ID of the Shared Image Gallery attached to this Lab Service Plan. When saving a lab template virtual machine image it will be persisted in this gallery. The shared images from the gallery can be made available to use when creating new labs.
//
// > **NOTE:** The built-in `Azure Lab Services` Service Principal with role needs to be assigned to the Shared Image Gallery while using this property.
func (o ServicePlanOutput) SharedGalleryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePlan) pulumi.StringPtrOutput { return v.SharedGalleryId }).(pulumi.StringPtrOutput)
}

// A `support` block as defined below.
func (o ServicePlanOutput) Support() ServicePlanSupportPtrOutput {
	return o.ApplyT(func(v *ServicePlan) ServicePlanSupportPtrOutput { return v.Support }).(ServicePlanSupportPtrOutput)
}

// A mapping of tags which should be assigned to the Lab Service Plan.
func (o ServicePlanOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServicePlan) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type ServicePlanArrayOutput struct{ *pulumi.OutputState }

func (ServicePlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServicePlan)(nil)).Elem()
}

func (o ServicePlanArrayOutput) ToServicePlanArrayOutput() ServicePlanArrayOutput {
	return o
}

func (o ServicePlanArrayOutput) ToServicePlanArrayOutputWithContext(ctx context.Context) ServicePlanArrayOutput {
	return o
}

func (o ServicePlanArrayOutput) Index(i pulumi.IntInput) ServicePlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServicePlan {
		return vs[0].([]*ServicePlan)[vs[1].(int)]
	}).(ServicePlanOutput)
}

type ServicePlanMapOutput struct{ *pulumi.OutputState }

func (ServicePlanMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServicePlan)(nil)).Elem()
}

func (o ServicePlanMapOutput) ToServicePlanMapOutput() ServicePlanMapOutput {
	return o
}

func (o ServicePlanMapOutput) ToServicePlanMapOutputWithContext(ctx context.Context) ServicePlanMapOutput {
	return o
}

func (o ServicePlanMapOutput) MapIndex(k pulumi.StringInput) ServicePlanOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServicePlan {
		return vs[0].(map[string]*ServicePlan)[vs[1].(string)]
	}).(ServicePlanOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePlanInput)(nil)).Elem(), &ServicePlan{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePlanArrayInput)(nil)).Elem(), ServicePlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePlanMapInput)(nil)).Elem(), ServicePlanMap{})
	pulumi.RegisterOutputType(ServicePlanOutput{})
	pulumi.RegisterOutputType(ServicePlanArrayOutput{})
	pulumi.RegisterOutputType(ServicePlanMapOutput{})
}
