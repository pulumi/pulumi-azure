// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Network Security Group.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/network"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		example, err := network.LookupNetworkSecurityGroup(ctx, &network.LookupNetworkSecurityGroupArgs{
// 			Name:              "example",
// 			ResourceGroupName: azurerm_resource_group.Example.Name,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("location", example.Location)
// 		return nil
// 	})
// }
// ```
func LookupNetworkSecurityGroup(ctx *pulumi.Context, args *LookupNetworkSecurityGroupArgs, opts ...pulumi.InvokeOption) (*LookupNetworkSecurityGroupResult, error) {
	var rv LookupNetworkSecurityGroupResult
	err := ctx.Invoke("azure:network/getNetworkSecurityGroup:getNetworkSecurityGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkSecurityGroup.
type LookupNetworkSecurityGroupArgs struct {
	// Specifies the Name of the Network Security Group.
	Name string `pulumi:"name"`
	// Specifies the Name of the Resource Group within which the Network Security Group exists
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getNetworkSecurityGroup.
type LookupNetworkSecurityGroupResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The supported Azure location where the resource exists.
	Location string `pulumi:"location"`
	// The name of the security rule.
	Name              string `pulumi:"name"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// One or more `securityRule` blocks as defined below.
	SecurityRules []GetNetworkSecurityGroupSecurityRule `pulumi:"securityRules"`
	// A mapping of tags assigned to the resource.
	Tags map[string]string `pulumi:"tags"`
}

func LookupNetworkSecurityGroupOutput(ctx *pulumi.Context, args LookupNetworkSecurityGroupOutputArgs, opts ...pulumi.InvokeOption) LookupNetworkSecurityGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNetworkSecurityGroupResult, error) {
			args := v.(LookupNetworkSecurityGroupArgs)
			r, err := LookupNetworkSecurityGroup(ctx, &args, opts...)
			return *r, err
		}).(LookupNetworkSecurityGroupResultOutput)
}

// A collection of arguments for invoking getNetworkSecurityGroup.
type LookupNetworkSecurityGroupOutputArgs struct {
	// Specifies the Name of the Network Security Group.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the Name of the Resource Group within which the Network Security Group exists
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupNetworkSecurityGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkSecurityGroupArgs)(nil)).Elem()
}

// A collection of values returned by getNetworkSecurityGroup.
type LookupNetworkSecurityGroupResultOutput struct{ *pulumi.OutputState }

func (LookupNetworkSecurityGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkSecurityGroupResult)(nil)).Elem()
}

func (o LookupNetworkSecurityGroupResultOutput) ToLookupNetworkSecurityGroupResultOutput() LookupNetworkSecurityGroupResultOutput {
	return o
}

func (o LookupNetworkSecurityGroupResultOutput) ToLookupNetworkSecurityGroupResultOutputWithContext(ctx context.Context) LookupNetworkSecurityGroupResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupNetworkSecurityGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkSecurityGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// The supported Azure location where the resource exists.
func (o LookupNetworkSecurityGroupResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkSecurityGroupResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the security rule.
func (o LookupNetworkSecurityGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkSecurityGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupNetworkSecurityGroupResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkSecurityGroupResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// One or more `securityRule` blocks as defined below.
func (o LookupNetworkSecurityGroupResultOutput) SecurityRules() GetNetworkSecurityGroupSecurityRuleArrayOutput {
	return o.ApplyT(func(v LookupNetworkSecurityGroupResult) []GetNetworkSecurityGroupSecurityRule { return v.SecurityRules }).(GetNetworkSecurityGroupSecurityRuleArrayOutput)
}

// A mapping of tags assigned to the resource.
func (o LookupNetworkSecurityGroupResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupNetworkSecurityGroupResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNetworkSecurityGroupResultOutput{})
}
