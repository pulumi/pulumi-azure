// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Network Manager Admin Rule.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			current, err := core.LookupSubscription(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			exampleNetworkManager, err := network.NewNetworkManager(ctx, "exampleNetworkManager", &network.NetworkManagerArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				Scope: &network.NetworkManagerScopeArgs{
//					SubscriptionIds: pulumi.StringArray{
//						*pulumi.String(current.Id),
//					},
//				},
//				ScopeAccesses: pulumi.StringArray{
//					pulumi.String("Connectivity"),
//					pulumi.String("SecurityAdmin"),
//				},
//				Description: pulumi.String("example network manager"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleNetworkManagerNetworkGroup, err := network.NewNetworkManagerNetworkGroup(ctx, "exampleNetworkManagerNetworkGroup", &network.NetworkManagerNetworkGroupArgs{
//				NetworkManagerId: exampleNetworkManager.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			exampleNetworkManagerSecurityAdminConfiguration, err := network.NewNetworkManagerSecurityAdminConfiguration(ctx, "exampleNetworkManagerSecurityAdminConfiguration", &network.NetworkManagerSecurityAdminConfigurationArgs{
//				NetworkManagerId: exampleNetworkManager.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			exampleNetworkManagerAdminRuleCollection, err := network.NewNetworkManagerAdminRuleCollection(ctx, "exampleNetworkManagerAdminRuleCollection", &network.NetworkManagerAdminRuleCollectionArgs{
//				SecurityAdminConfigurationId: exampleNetworkManagerSecurityAdminConfiguration.ID(),
//				NetworkGroupIds: pulumi.StringArray{
//					exampleNetworkManagerNetworkGroup.ID(),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = network.NewNetworkManagerAdminRule(ctx, "exampleNetworkManagerAdminRule", &network.NetworkManagerAdminRuleArgs{
//				AdminRuleCollectionId: exampleNetworkManagerAdminRuleCollection.ID(),
//				Action:                pulumi.String("Deny"),
//				Direction:             pulumi.String("Outbound"),
//				Priority:              pulumi.Int(1),
//				Protocol:              pulumi.String("Tcp"),
//				SourcePortRanges: pulumi.StringArray{
//					pulumi.String("80"),
//					pulumi.String("1024-65535"),
//				},
//				DestinationPortRanges: pulumi.StringArray{
//					pulumi.String("80"),
//				},
//				Sources: network.NetworkManagerAdminRuleSourceArray{
//					&network.NetworkManagerAdminRuleSourceArgs{
//						AddressPrefixType: pulumi.String("ServiceTag"),
//						AddressPrefix:     pulumi.String("Internet"),
//					},
//				},
//				Destinations: network.NetworkManagerAdminRuleDestinationArray{
//					&network.NetworkManagerAdminRuleDestinationArgs{
//						AddressPrefixType: pulumi.String("IPPrefix"),
//						AddressPrefix:     pulumi.String("10.1.0.1"),
//					},
//					&network.NetworkManagerAdminRuleDestinationArgs{
//						AddressPrefixType: pulumi.String("IPPrefix"),
//						AddressPrefix:     pulumi.String("10.0.0.0/24"),
//					},
//				},
//				Description: pulumi.String("example admin rule"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Network Manager Admin Rule can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:network/networkManagerAdminRule:NetworkManagerAdminRule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Network/networkManagers/networkManager1/securityAdminConfigurations/configuration1/ruleCollections/ruleCollection1/rules/rule1
//
// ```
type NetworkManagerAdminRule struct {
	pulumi.CustomResourceState

	// Specifies the action allowed for this Network Manager Admin Rule. Possible values are `Allow`, `AlwaysAllow`, and `Deny`.
	Action pulumi.StringOutput `pulumi:"action"`
	// Specifies the ID of the Network Manager Admin Rule Collection. Changing this forces a new Network Manager Admin Rule to be created.
	AdminRuleCollectionId pulumi.StringOutput `pulumi:"adminRuleCollectionId"`
	// A description of the Network Manager Admin Rule.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A list of string specifies the destination port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
	DestinationPortRanges pulumi.StringArrayOutput `pulumi:"destinationPortRanges"`
	// One or more `destination` blocks as defined below.
	Destinations NetworkManagerAdminRuleDestinationArrayOutput `pulumi:"destinations"`
	// Indicates if the traffic matched against the rule in inbound or outbound. Possible values are `Inbound` and `Outbound`.
	Direction pulumi.StringOutput `pulumi:"direction"`
	// Specifies the name which should be used for this Network Manager Admin Rule. Changing this forces a new Network Manager Admin Rule to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The priority of the rule. Possible values are integers between `1` and `4096`. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority pulumi.IntOutput `pulumi:"priority"`
	// Specifies which network protocol this Network Manager Admin Rule applies to. Possible values are `Ah`, `Any`, `Esp`, `Icmp`, `Tcp`, and `Udp`.
	Protocol pulumi.StringOutput `pulumi:"protocol"`
	// A list of string specifies the source port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
	SourcePortRanges pulumi.StringArrayOutput `pulumi:"sourcePortRanges"`
	// One or more `source` blocks as defined below.
	Sources NetworkManagerAdminRuleSourceArrayOutput `pulumi:"sources"`
}

// NewNetworkManagerAdminRule registers a new resource with the given unique name, arguments, and options.
func NewNetworkManagerAdminRule(ctx *pulumi.Context,
	name string, args *NetworkManagerAdminRuleArgs, opts ...pulumi.ResourceOption) (*NetworkManagerAdminRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Action == nil {
		return nil, errors.New("invalid value for required argument 'Action'")
	}
	if args.AdminRuleCollectionId == nil {
		return nil, errors.New("invalid value for required argument 'AdminRuleCollectionId'")
	}
	if args.Direction == nil {
		return nil, errors.New("invalid value for required argument 'Direction'")
	}
	if args.Priority == nil {
		return nil, errors.New("invalid value for required argument 'Priority'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkManagerAdminRule
	err := ctx.RegisterResource("azure:network/networkManagerAdminRule:NetworkManagerAdminRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkManagerAdminRule gets an existing NetworkManagerAdminRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkManagerAdminRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkManagerAdminRuleState, opts ...pulumi.ResourceOption) (*NetworkManagerAdminRule, error) {
	var resource NetworkManagerAdminRule
	err := ctx.ReadResource("azure:network/networkManagerAdminRule:NetworkManagerAdminRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkManagerAdminRule resources.
type networkManagerAdminRuleState struct {
	// Specifies the action allowed for this Network Manager Admin Rule. Possible values are `Allow`, `AlwaysAllow`, and `Deny`.
	Action *string `pulumi:"action"`
	// Specifies the ID of the Network Manager Admin Rule Collection. Changing this forces a new Network Manager Admin Rule to be created.
	AdminRuleCollectionId *string `pulumi:"adminRuleCollectionId"`
	// A description of the Network Manager Admin Rule.
	Description *string `pulumi:"description"`
	// A list of string specifies the destination port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// One or more `destination` blocks as defined below.
	Destinations []NetworkManagerAdminRuleDestination `pulumi:"destinations"`
	// Indicates if the traffic matched against the rule in inbound or outbound. Possible values are `Inbound` and `Outbound`.
	Direction *string `pulumi:"direction"`
	// Specifies the name which should be used for this Network Manager Admin Rule. Changing this forces a new Network Manager Admin Rule to be created.
	Name *string `pulumi:"name"`
	// The priority of the rule. Possible values are integers between `1` and `4096`. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority *int `pulumi:"priority"`
	// Specifies which network protocol this Network Manager Admin Rule applies to. Possible values are `Ah`, `Any`, `Esp`, `Icmp`, `Tcp`, and `Udp`.
	Protocol *string `pulumi:"protocol"`
	// A list of string specifies the source port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
	// One or more `source` blocks as defined below.
	Sources []NetworkManagerAdminRuleSource `pulumi:"sources"`
}

type NetworkManagerAdminRuleState struct {
	// Specifies the action allowed for this Network Manager Admin Rule. Possible values are `Allow`, `AlwaysAllow`, and `Deny`.
	Action pulumi.StringPtrInput
	// Specifies the ID of the Network Manager Admin Rule Collection. Changing this forces a new Network Manager Admin Rule to be created.
	AdminRuleCollectionId pulumi.StringPtrInput
	// A description of the Network Manager Admin Rule.
	Description pulumi.StringPtrInput
	// A list of string specifies the destination port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
	DestinationPortRanges pulumi.StringArrayInput
	// One or more `destination` blocks as defined below.
	Destinations NetworkManagerAdminRuleDestinationArrayInput
	// Indicates if the traffic matched against the rule in inbound or outbound. Possible values are `Inbound` and `Outbound`.
	Direction pulumi.StringPtrInput
	// Specifies the name which should be used for this Network Manager Admin Rule. Changing this forces a new Network Manager Admin Rule to be created.
	Name pulumi.StringPtrInput
	// The priority of the rule. Possible values are integers between `1` and `4096`. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority pulumi.IntPtrInput
	// Specifies which network protocol this Network Manager Admin Rule applies to. Possible values are `Ah`, `Any`, `Esp`, `Icmp`, `Tcp`, and `Udp`.
	Protocol pulumi.StringPtrInput
	// A list of string specifies the source port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
	SourcePortRanges pulumi.StringArrayInput
	// One or more `source` blocks as defined below.
	Sources NetworkManagerAdminRuleSourceArrayInput
}

func (NetworkManagerAdminRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkManagerAdminRuleState)(nil)).Elem()
}

type networkManagerAdminRuleArgs struct {
	// Specifies the action allowed for this Network Manager Admin Rule. Possible values are `Allow`, `AlwaysAllow`, and `Deny`.
	Action string `pulumi:"action"`
	// Specifies the ID of the Network Manager Admin Rule Collection. Changing this forces a new Network Manager Admin Rule to be created.
	AdminRuleCollectionId string `pulumi:"adminRuleCollectionId"`
	// A description of the Network Manager Admin Rule.
	Description *string `pulumi:"description"`
	// A list of string specifies the destination port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// One or more `destination` blocks as defined below.
	Destinations []NetworkManagerAdminRuleDestination `pulumi:"destinations"`
	// Indicates if the traffic matched against the rule in inbound or outbound. Possible values are `Inbound` and `Outbound`.
	Direction string `pulumi:"direction"`
	// Specifies the name which should be used for this Network Manager Admin Rule. Changing this forces a new Network Manager Admin Rule to be created.
	Name *string `pulumi:"name"`
	// The priority of the rule. Possible values are integers between `1` and `4096`. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority int `pulumi:"priority"`
	// Specifies which network protocol this Network Manager Admin Rule applies to. Possible values are `Ah`, `Any`, `Esp`, `Icmp`, `Tcp`, and `Udp`.
	Protocol string `pulumi:"protocol"`
	// A list of string specifies the source port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
	// One or more `source` blocks as defined below.
	Sources []NetworkManagerAdminRuleSource `pulumi:"sources"`
}

// The set of arguments for constructing a NetworkManagerAdminRule resource.
type NetworkManagerAdminRuleArgs struct {
	// Specifies the action allowed for this Network Manager Admin Rule. Possible values are `Allow`, `AlwaysAllow`, and `Deny`.
	Action pulumi.StringInput
	// Specifies the ID of the Network Manager Admin Rule Collection. Changing this forces a new Network Manager Admin Rule to be created.
	AdminRuleCollectionId pulumi.StringInput
	// A description of the Network Manager Admin Rule.
	Description pulumi.StringPtrInput
	// A list of string specifies the destination port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
	DestinationPortRanges pulumi.StringArrayInput
	// One or more `destination` blocks as defined below.
	Destinations NetworkManagerAdminRuleDestinationArrayInput
	// Indicates if the traffic matched against the rule in inbound or outbound. Possible values are `Inbound` and `Outbound`.
	Direction pulumi.StringInput
	// Specifies the name which should be used for this Network Manager Admin Rule. Changing this forces a new Network Manager Admin Rule to be created.
	Name pulumi.StringPtrInput
	// The priority of the rule. Possible values are integers between `1` and `4096`. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority pulumi.IntInput
	// Specifies which network protocol this Network Manager Admin Rule applies to. Possible values are `Ah`, `Any`, `Esp`, `Icmp`, `Tcp`, and `Udp`.
	Protocol pulumi.StringInput
	// A list of string specifies the source port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
	SourcePortRanges pulumi.StringArrayInput
	// One or more `source` blocks as defined below.
	Sources NetworkManagerAdminRuleSourceArrayInput
}

func (NetworkManagerAdminRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkManagerAdminRuleArgs)(nil)).Elem()
}

type NetworkManagerAdminRuleInput interface {
	pulumi.Input

	ToNetworkManagerAdminRuleOutput() NetworkManagerAdminRuleOutput
	ToNetworkManagerAdminRuleOutputWithContext(ctx context.Context) NetworkManagerAdminRuleOutput
}

func (*NetworkManagerAdminRule) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkManagerAdminRule)(nil)).Elem()
}

func (i *NetworkManagerAdminRule) ToNetworkManagerAdminRuleOutput() NetworkManagerAdminRuleOutput {
	return i.ToNetworkManagerAdminRuleOutputWithContext(context.Background())
}

func (i *NetworkManagerAdminRule) ToNetworkManagerAdminRuleOutputWithContext(ctx context.Context) NetworkManagerAdminRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerAdminRuleOutput)
}

// NetworkManagerAdminRuleArrayInput is an input type that accepts NetworkManagerAdminRuleArray and NetworkManagerAdminRuleArrayOutput values.
// You can construct a concrete instance of `NetworkManagerAdminRuleArrayInput` via:
//
//	NetworkManagerAdminRuleArray{ NetworkManagerAdminRuleArgs{...} }
type NetworkManagerAdminRuleArrayInput interface {
	pulumi.Input

	ToNetworkManagerAdminRuleArrayOutput() NetworkManagerAdminRuleArrayOutput
	ToNetworkManagerAdminRuleArrayOutputWithContext(context.Context) NetworkManagerAdminRuleArrayOutput
}

type NetworkManagerAdminRuleArray []NetworkManagerAdminRuleInput

func (NetworkManagerAdminRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkManagerAdminRule)(nil)).Elem()
}

func (i NetworkManagerAdminRuleArray) ToNetworkManagerAdminRuleArrayOutput() NetworkManagerAdminRuleArrayOutput {
	return i.ToNetworkManagerAdminRuleArrayOutputWithContext(context.Background())
}

func (i NetworkManagerAdminRuleArray) ToNetworkManagerAdminRuleArrayOutputWithContext(ctx context.Context) NetworkManagerAdminRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerAdminRuleArrayOutput)
}

// NetworkManagerAdminRuleMapInput is an input type that accepts NetworkManagerAdminRuleMap and NetworkManagerAdminRuleMapOutput values.
// You can construct a concrete instance of `NetworkManagerAdminRuleMapInput` via:
//
//	NetworkManagerAdminRuleMap{ "key": NetworkManagerAdminRuleArgs{...} }
type NetworkManagerAdminRuleMapInput interface {
	pulumi.Input

	ToNetworkManagerAdminRuleMapOutput() NetworkManagerAdminRuleMapOutput
	ToNetworkManagerAdminRuleMapOutputWithContext(context.Context) NetworkManagerAdminRuleMapOutput
}

type NetworkManagerAdminRuleMap map[string]NetworkManagerAdminRuleInput

func (NetworkManagerAdminRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkManagerAdminRule)(nil)).Elem()
}

func (i NetworkManagerAdminRuleMap) ToNetworkManagerAdminRuleMapOutput() NetworkManagerAdminRuleMapOutput {
	return i.ToNetworkManagerAdminRuleMapOutputWithContext(context.Background())
}

func (i NetworkManagerAdminRuleMap) ToNetworkManagerAdminRuleMapOutputWithContext(ctx context.Context) NetworkManagerAdminRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerAdminRuleMapOutput)
}

type NetworkManagerAdminRuleOutput struct{ *pulumi.OutputState }

func (NetworkManagerAdminRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkManagerAdminRule)(nil)).Elem()
}

func (o NetworkManagerAdminRuleOutput) ToNetworkManagerAdminRuleOutput() NetworkManagerAdminRuleOutput {
	return o
}

func (o NetworkManagerAdminRuleOutput) ToNetworkManagerAdminRuleOutputWithContext(ctx context.Context) NetworkManagerAdminRuleOutput {
	return o
}

// Specifies the action allowed for this Network Manager Admin Rule. Possible values are `Allow`, `AlwaysAllow`, and `Deny`.
func (o NetworkManagerAdminRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerAdminRule) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// Specifies the ID of the Network Manager Admin Rule Collection. Changing this forces a new Network Manager Admin Rule to be created.
func (o NetworkManagerAdminRuleOutput) AdminRuleCollectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerAdminRule) pulumi.StringOutput { return v.AdminRuleCollectionId }).(pulumi.StringOutput)
}

// A description of the Network Manager Admin Rule.
func (o NetworkManagerAdminRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkManagerAdminRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A list of string specifies the destination port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
func (o NetworkManagerAdminRuleOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkManagerAdminRule) pulumi.StringArrayOutput { return v.DestinationPortRanges }).(pulumi.StringArrayOutput)
}

// One or more `destination` blocks as defined below.
func (o NetworkManagerAdminRuleOutput) Destinations() NetworkManagerAdminRuleDestinationArrayOutput {
	return o.ApplyT(func(v *NetworkManagerAdminRule) NetworkManagerAdminRuleDestinationArrayOutput { return v.Destinations }).(NetworkManagerAdminRuleDestinationArrayOutput)
}

// Indicates if the traffic matched against the rule in inbound or outbound. Possible values are `Inbound` and `Outbound`.
func (o NetworkManagerAdminRuleOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerAdminRule) pulumi.StringOutput { return v.Direction }).(pulumi.StringOutput)
}

// Specifies the name which should be used for this Network Manager Admin Rule. Changing this forces a new Network Manager Admin Rule to be created.
func (o NetworkManagerAdminRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerAdminRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The priority of the rule. Possible values are integers between `1` and `4096`. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
func (o NetworkManagerAdminRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v *NetworkManagerAdminRule) pulumi.IntOutput { return v.Priority }).(pulumi.IntOutput)
}

// Specifies which network protocol this Network Manager Admin Rule applies to. Possible values are `Ah`, `Any`, `Esp`, `Icmp`, `Tcp`, and `Udp`.
func (o NetworkManagerAdminRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerAdminRule) pulumi.StringOutput { return v.Protocol }).(pulumi.StringOutput)
}

// A list of string specifies the source port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
func (o NetworkManagerAdminRuleOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkManagerAdminRule) pulumi.StringArrayOutput { return v.SourcePortRanges }).(pulumi.StringArrayOutput)
}

// One or more `source` blocks as defined below.
func (o NetworkManagerAdminRuleOutput) Sources() NetworkManagerAdminRuleSourceArrayOutput {
	return o.ApplyT(func(v *NetworkManagerAdminRule) NetworkManagerAdminRuleSourceArrayOutput { return v.Sources }).(NetworkManagerAdminRuleSourceArrayOutput)
}

type NetworkManagerAdminRuleArrayOutput struct{ *pulumi.OutputState }

func (NetworkManagerAdminRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkManagerAdminRule)(nil)).Elem()
}

func (o NetworkManagerAdminRuleArrayOutput) ToNetworkManagerAdminRuleArrayOutput() NetworkManagerAdminRuleArrayOutput {
	return o
}

func (o NetworkManagerAdminRuleArrayOutput) ToNetworkManagerAdminRuleArrayOutputWithContext(ctx context.Context) NetworkManagerAdminRuleArrayOutput {
	return o
}

func (o NetworkManagerAdminRuleArrayOutput) Index(i pulumi.IntInput) NetworkManagerAdminRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkManagerAdminRule {
		return vs[0].([]*NetworkManagerAdminRule)[vs[1].(int)]
	}).(NetworkManagerAdminRuleOutput)
}

type NetworkManagerAdminRuleMapOutput struct{ *pulumi.OutputState }

func (NetworkManagerAdminRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkManagerAdminRule)(nil)).Elem()
}

func (o NetworkManagerAdminRuleMapOutput) ToNetworkManagerAdminRuleMapOutput() NetworkManagerAdminRuleMapOutput {
	return o
}

func (o NetworkManagerAdminRuleMapOutput) ToNetworkManagerAdminRuleMapOutputWithContext(ctx context.Context) NetworkManagerAdminRuleMapOutput {
	return o
}

func (o NetworkManagerAdminRuleMapOutput) MapIndex(k pulumi.StringInput) NetworkManagerAdminRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkManagerAdminRule {
		return vs[0].(map[string]*NetworkManagerAdminRule)[vs[1].(string)]
	}).(NetworkManagerAdminRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerAdminRuleInput)(nil)).Elem(), &NetworkManagerAdminRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerAdminRuleArrayInput)(nil)).Elem(), NetworkManagerAdminRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerAdminRuleMapInput)(nil)).Elem(), NetworkManagerAdminRuleMap{})
	pulumi.RegisterOutputType(NetworkManagerAdminRuleOutput{})
	pulumi.RegisterOutputType(NetworkManagerAdminRuleArrayOutput{})
	pulumi.RegisterOutputType(NetworkManagerAdminRuleMapOutput{})
}
