// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package network

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Configures a Connection Monitor to monitor communication between a Virtual Machine and an endpoint using a Network Watcher.
// 
// > **NOTE:** This resource has been deprecated in favour of the `network.NetworkConnectionMonitor` resource and will be removed in the next major version of the AzureRM Provider. The new resource shares the same fields as this one, and information on migrating across can be found in this guide.
// 
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/connection_monitor.html.markdown.
type ConnectionMonitor struct {
	pulumi.CustomResourceState

	// Specifies whether the connection monitor will start automatically once created. Defaults to `true`. Changing this forces a new resource to be created.
	AutoStart pulumi.BoolPtrOutput `pulumi:"autoStart"`
	// A `destination` block as defined below.
	Destination ConnectionMonitorDestinationOutput `pulumi:"destination"`
	// Monitoring interval in seconds. Defaults to `60`.
	IntervalInSeconds pulumi.IntPtrOutput `pulumi:"intervalInSeconds"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the Connection Monitor. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the Network Watcher. Changing this forces a new resource to be created.
	NetworkWatcherName pulumi.StringOutput `pulumi:"networkWatcherName"`
	// The name of the resource group in which to create the Connection Monitor. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A `source` block as defined below.
	Source ConnectionMonitorSourceOutput `pulumi:"source"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewConnectionMonitor registers a new resource with the given unique name, arguments, and options.
func NewConnectionMonitor(ctx *pulumi.Context,
	name string, args *ConnectionMonitorArgs, opts ...pulumi.ResourceOption) (*ConnectionMonitor, error) {
	if args == nil || args.Destination == nil {
		return nil, errors.New("missing required argument 'Destination'")
	}
	if args == nil || args.NetworkWatcherName == nil {
		return nil, errors.New("missing required argument 'NetworkWatcherName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.Source == nil {
		return nil, errors.New("missing required argument 'Source'")
	}
	if args == nil {
		args = &ConnectionMonitorArgs{}
	}
	var resource ConnectionMonitor
	err := ctx.RegisterResource("azure:network/connectionMonitor:ConnectionMonitor", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnectionMonitor gets an existing ConnectionMonitor resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnectionMonitor(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConnectionMonitorState, opts ...pulumi.ResourceOption) (*ConnectionMonitor, error) {
	var resource ConnectionMonitor
	err := ctx.ReadResource("azure:network/connectionMonitor:ConnectionMonitor", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConnectionMonitor resources.
type connectionMonitorState struct {
	// Specifies whether the connection monitor will start automatically once created. Defaults to `true`. Changing this forces a new resource to be created.
	AutoStart *bool `pulumi:"autoStart"`
	// A `destination` block as defined below.
	Destination *ConnectionMonitorDestination `pulumi:"destination"`
	// Monitoring interval in seconds. Defaults to `60`.
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The name of the Connection Monitor. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Network Watcher. Changing this forces a new resource to be created.
	NetworkWatcherName *string `pulumi:"networkWatcherName"`
	// The name of the resource group in which to create the Connection Monitor. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A `source` block as defined below.
	Source *ConnectionMonitorSource `pulumi:"source"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

type ConnectionMonitorState struct {
	// Specifies whether the connection monitor will start automatically once created. Defaults to `true`. Changing this forces a new resource to be created.
	AutoStart pulumi.BoolPtrInput
	// A `destination` block as defined below.
	Destination ConnectionMonitorDestinationPtrInput
	// Monitoring interval in seconds. Defaults to `60`.
	IntervalInSeconds pulumi.IntPtrInput
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The name of the Connection Monitor. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Network Watcher. Changing this forces a new resource to be created.
	NetworkWatcherName pulumi.StringPtrInput
	// The name of the resource group in which to create the Connection Monitor. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// A `source` block as defined below.
	Source ConnectionMonitorSourcePtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
}

func (ConnectionMonitorState) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionMonitorState)(nil)).Elem()
}

type connectionMonitorArgs struct {
	// Specifies whether the connection monitor will start automatically once created. Defaults to `true`. Changing this forces a new resource to be created.
	AutoStart *bool `pulumi:"autoStart"`
	// A `destination` block as defined below.
	Destination ConnectionMonitorDestination `pulumi:"destination"`
	// Monitoring interval in seconds. Defaults to `60`.
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The name of the Connection Monitor. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Network Watcher. Changing this forces a new resource to be created.
	NetworkWatcherName string `pulumi:"networkWatcherName"`
	// The name of the resource group in which to create the Connection Monitor. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A `source` block as defined below.
	Source ConnectionMonitorSource `pulumi:"source"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ConnectionMonitor resource.
type ConnectionMonitorArgs struct {
	// Specifies whether the connection monitor will start automatically once created. Defaults to `true`. Changing this forces a new resource to be created.
	AutoStart pulumi.BoolPtrInput
	// A `destination` block as defined below.
	Destination ConnectionMonitorDestinationInput
	// Monitoring interval in seconds. Defaults to `60`.
	IntervalInSeconds pulumi.IntPtrInput
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The name of the Connection Monitor. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Network Watcher. Changing this forces a new resource to be created.
	NetworkWatcherName pulumi.StringInput
	// The name of the resource group in which to create the Connection Monitor. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// A `source` block as defined below.
	Source ConnectionMonitorSourceInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
}

func (ConnectionMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionMonitorArgs)(nil)).Elem()
}

