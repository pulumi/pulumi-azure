// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Network Manager Admin Rule Collection.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			current, err := core.LookupSubscription(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			exampleNetworkManager, err := network.NewNetworkManager(ctx, "exampleNetworkManager", &network.NetworkManagerArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				Scope: &network.NetworkManagerScopeArgs{
//					SubscriptionIds: pulumi.StringArray{
//						*pulumi.String(current.Id),
//					},
//				},
//				ScopeAccesses: pulumi.StringArray{
//					pulumi.String("Connectivity"),
//					pulumi.String("SecurityAdmin"),
//				},
//				Description: pulumi.String("example network manager"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleNetworkManagerNetworkGroup, err := network.NewNetworkManagerNetworkGroup(ctx, "exampleNetworkManagerNetworkGroup", &network.NetworkManagerNetworkGroupArgs{
//				NetworkManagerId: exampleNetworkManager.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			exampleNetworkManagerSecurityAdminConfiguration, err := network.NewNetworkManagerSecurityAdminConfiguration(ctx, "exampleNetworkManagerSecurityAdminConfiguration", &network.NetworkManagerSecurityAdminConfigurationArgs{
//				NetworkManagerId: exampleNetworkManager.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = network.NewNetworkManagerAdminRuleCollection(ctx, "exampleNetworkManagerAdminRuleCollection", &network.NetworkManagerAdminRuleCollectionArgs{
//				SecurityAdminConfigurationId: exampleNetworkManagerSecurityAdminConfiguration.ID(),
//				NetworkGroupIds: pulumi.StringArray{
//					exampleNetworkManagerNetworkGroup.ID(),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Network Manager Admin Rule Collection can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:network/networkManagerAdminRuleCollection:NetworkManagerAdminRuleCollection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Network/networkManagers/networkManager1/securityAdminConfigurations/configuration1/ruleCollections/ruleCollection1
//
// ```
type NetworkManagerAdminRuleCollection struct {
	pulumi.CustomResourceState

	// A description of the Network Manager Admin Rule Collection.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the name which should be used for this Network Manager Admin Rule Collection. Changing this forces a new Network Manager Admin Rule Collection to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// A list of Network Group ID which this Network Manager Admin Rule Collection applies to.
	NetworkGroupIds pulumi.StringArrayOutput `pulumi:"networkGroupIds"`
	// Specifies the ID of the Network Manager Security Admin Configuration. Changing this forces a new Network Manager Admin Rule Collection to be created.
	SecurityAdminConfigurationId pulumi.StringOutput `pulumi:"securityAdminConfigurationId"`
}

// NewNetworkManagerAdminRuleCollection registers a new resource with the given unique name, arguments, and options.
func NewNetworkManagerAdminRuleCollection(ctx *pulumi.Context,
	name string, args *NetworkManagerAdminRuleCollectionArgs, opts ...pulumi.ResourceOption) (*NetworkManagerAdminRuleCollection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkGroupIds == nil {
		return nil, errors.New("invalid value for required argument 'NetworkGroupIds'")
	}
	if args.SecurityAdminConfigurationId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityAdminConfigurationId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkManagerAdminRuleCollection
	err := ctx.RegisterResource("azure:network/networkManagerAdminRuleCollection:NetworkManagerAdminRuleCollection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkManagerAdminRuleCollection gets an existing NetworkManagerAdminRuleCollection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkManagerAdminRuleCollection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkManagerAdminRuleCollectionState, opts ...pulumi.ResourceOption) (*NetworkManagerAdminRuleCollection, error) {
	var resource NetworkManagerAdminRuleCollection
	err := ctx.ReadResource("azure:network/networkManagerAdminRuleCollection:NetworkManagerAdminRuleCollection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkManagerAdminRuleCollection resources.
type networkManagerAdminRuleCollectionState struct {
	// A description of the Network Manager Admin Rule Collection.
	Description *string `pulumi:"description"`
	// Specifies the name which should be used for this Network Manager Admin Rule Collection. Changing this forces a new Network Manager Admin Rule Collection to be created.
	Name *string `pulumi:"name"`
	// A list of Network Group ID which this Network Manager Admin Rule Collection applies to.
	NetworkGroupIds []string `pulumi:"networkGroupIds"`
	// Specifies the ID of the Network Manager Security Admin Configuration. Changing this forces a new Network Manager Admin Rule Collection to be created.
	SecurityAdminConfigurationId *string `pulumi:"securityAdminConfigurationId"`
}

type NetworkManagerAdminRuleCollectionState struct {
	// A description of the Network Manager Admin Rule Collection.
	Description pulumi.StringPtrInput
	// Specifies the name which should be used for this Network Manager Admin Rule Collection. Changing this forces a new Network Manager Admin Rule Collection to be created.
	Name pulumi.StringPtrInput
	// A list of Network Group ID which this Network Manager Admin Rule Collection applies to.
	NetworkGroupIds pulumi.StringArrayInput
	// Specifies the ID of the Network Manager Security Admin Configuration. Changing this forces a new Network Manager Admin Rule Collection to be created.
	SecurityAdminConfigurationId pulumi.StringPtrInput
}

func (NetworkManagerAdminRuleCollectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkManagerAdminRuleCollectionState)(nil)).Elem()
}

type networkManagerAdminRuleCollectionArgs struct {
	// A description of the Network Manager Admin Rule Collection.
	Description *string `pulumi:"description"`
	// Specifies the name which should be used for this Network Manager Admin Rule Collection. Changing this forces a new Network Manager Admin Rule Collection to be created.
	Name *string `pulumi:"name"`
	// A list of Network Group ID which this Network Manager Admin Rule Collection applies to.
	NetworkGroupIds []string `pulumi:"networkGroupIds"`
	// Specifies the ID of the Network Manager Security Admin Configuration. Changing this forces a new Network Manager Admin Rule Collection to be created.
	SecurityAdminConfigurationId string `pulumi:"securityAdminConfigurationId"`
}

// The set of arguments for constructing a NetworkManagerAdminRuleCollection resource.
type NetworkManagerAdminRuleCollectionArgs struct {
	// A description of the Network Manager Admin Rule Collection.
	Description pulumi.StringPtrInput
	// Specifies the name which should be used for this Network Manager Admin Rule Collection. Changing this forces a new Network Manager Admin Rule Collection to be created.
	Name pulumi.StringPtrInput
	// A list of Network Group ID which this Network Manager Admin Rule Collection applies to.
	NetworkGroupIds pulumi.StringArrayInput
	// Specifies the ID of the Network Manager Security Admin Configuration. Changing this forces a new Network Manager Admin Rule Collection to be created.
	SecurityAdminConfigurationId pulumi.StringInput
}

func (NetworkManagerAdminRuleCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkManagerAdminRuleCollectionArgs)(nil)).Elem()
}

type NetworkManagerAdminRuleCollectionInput interface {
	pulumi.Input

	ToNetworkManagerAdminRuleCollectionOutput() NetworkManagerAdminRuleCollectionOutput
	ToNetworkManagerAdminRuleCollectionOutputWithContext(ctx context.Context) NetworkManagerAdminRuleCollectionOutput
}

func (*NetworkManagerAdminRuleCollection) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkManagerAdminRuleCollection)(nil)).Elem()
}

func (i *NetworkManagerAdminRuleCollection) ToNetworkManagerAdminRuleCollectionOutput() NetworkManagerAdminRuleCollectionOutput {
	return i.ToNetworkManagerAdminRuleCollectionOutputWithContext(context.Background())
}

func (i *NetworkManagerAdminRuleCollection) ToNetworkManagerAdminRuleCollectionOutputWithContext(ctx context.Context) NetworkManagerAdminRuleCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerAdminRuleCollectionOutput)
}

// NetworkManagerAdminRuleCollectionArrayInput is an input type that accepts NetworkManagerAdminRuleCollectionArray and NetworkManagerAdminRuleCollectionArrayOutput values.
// You can construct a concrete instance of `NetworkManagerAdminRuleCollectionArrayInput` via:
//
//	NetworkManagerAdminRuleCollectionArray{ NetworkManagerAdminRuleCollectionArgs{...} }
type NetworkManagerAdminRuleCollectionArrayInput interface {
	pulumi.Input

	ToNetworkManagerAdminRuleCollectionArrayOutput() NetworkManagerAdminRuleCollectionArrayOutput
	ToNetworkManagerAdminRuleCollectionArrayOutputWithContext(context.Context) NetworkManagerAdminRuleCollectionArrayOutput
}

type NetworkManagerAdminRuleCollectionArray []NetworkManagerAdminRuleCollectionInput

func (NetworkManagerAdminRuleCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkManagerAdminRuleCollection)(nil)).Elem()
}

func (i NetworkManagerAdminRuleCollectionArray) ToNetworkManagerAdminRuleCollectionArrayOutput() NetworkManagerAdminRuleCollectionArrayOutput {
	return i.ToNetworkManagerAdminRuleCollectionArrayOutputWithContext(context.Background())
}

func (i NetworkManagerAdminRuleCollectionArray) ToNetworkManagerAdminRuleCollectionArrayOutputWithContext(ctx context.Context) NetworkManagerAdminRuleCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerAdminRuleCollectionArrayOutput)
}

// NetworkManagerAdminRuleCollectionMapInput is an input type that accepts NetworkManagerAdminRuleCollectionMap and NetworkManagerAdminRuleCollectionMapOutput values.
// You can construct a concrete instance of `NetworkManagerAdminRuleCollectionMapInput` via:
//
//	NetworkManagerAdminRuleCollectionMap{ "key": NetworkManagerAdminRuleCollectionArgs{...} }
type NetworkManagerAdminRuleCollectionMapInput interface {
	pulumi.Input

	ToNetworkManagerAdminRuleCollectionMapOutput() NetworkManagerAdminRuleCollectionMapOutput
	ToNetworkManagerAdminRuleCollectionMapOutputWithContext(context.Context) NetworkManagerAdminRuleCollectionMapOutput
}

type NetworkManagerAdminRuleCollectionMap map[string]NetworkManagerAdminRuleCollectionInput

func (NetworkManagerAdminRuleCollectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkManagerAdminRuleCollection)(nil)).Elem()
}

func (i NetworkManagerAdminRuleCollectionMap) ToNetworkManagerAdminRuleCollectionMapOutput() NetworkManagerAdminRuleCollectionMapOutput {
	return i.ToNetworkManagerAdminRuleCollectionMapOutputWithContext(context.Background())
}

func (i NetworkManagerAdminRuleCollectionMap) ToNetworkManagerAdminRuleCollectionMapOutputWithContext(ctx context.Context) NetworkManagerAdminRuleCollectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerAdminRuleCollectionMapOutput)
}

type NetworkManagerAdminRuleCollectionOutput struct{ *pulumi.OutputState }

func (NetworkManagerAdminRuleCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkManagerAdminRuleCollection)(nil)).Elem()
}

func (o NetworkManagerAdminRuleCollectionOutput) ToNetworkManagerAdminRuleCollectionOutput() NetworkManagerAdminRuleCollectionOutput {
	return o
}

func (o NetworkManagerAdminRuleCollectionOutput) ToNetworkManagerAdminRuleCollectionOutputWithContext(ctx context.Context) NetworkManagerAdminRuleCollectionOutput {
	return o
}

// A description of the Network Manager Admin Rule Collection.
func (o NetworkManagerAdminRuleCollectionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkManagerAdminRuleCollection) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the name which should be used for this Network Manager Admin Rule Collection. Changing this forces a new Network Manager Admin Rule Collection to be created.
func (o NetworkManagerAdminRuleCollectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerAdminRuleCollection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A list of Network Group ID which this Network Manager Admin Rule Collection applies to.
func (o NetworkManagerAdminRuleCollectionOutput) NetworkGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkManagerAdminRuleCollection) pulumi.StringArrayOutput { return v.NetworkGroupIds }).(pulumi.StringArrayOutput)
}

// Specifies the ID of the Network Manager Security Admin Configuration. Changing this forces a new Network Manager Admin Rule Collection to be created.
func (o NetworkManagerAdminRuleCollectionOutput) SecurityAdminConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerAdminRuleCollection) pulumi.StringOutput { return v.SecurityAdminConfigurationId }).(pulumi.StringOutput)
}

type NetworkManagerAdminRuleCollectionArrayOutput struct{ *pulumi.OutputState }

func (NetworkManagerAdminRuleCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkManagerAdminRuleCollection)(nil)).Elem()
}

func (o NetworkManagerAdminRuleCollectionArrayOutput) ToNetworkManagerAdminRuleCollectionArrayOutput() NetworkManagerAdminRuleCollectionArrayOutput {
	return o
}

func (o NetworkManagerAdminRuleCollectionArrayOutput) ToNetworkManagerAdminRuleCollectionArrayOutputWithContext(ctx context.Context) NetworkManagerAdminRuleCollectionArrayOutput {
	return o
}

func (o NetworkManagerAdminRuleCollectionArrayOutput) Index(i pulumi.IntInput) NetworkManagerAdminRuleCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkManagerAdminRuleCollection {
		return vs[0].([]*NetworkManagerAdminRuleCollection)[vs[1].(int)]
	}).(NetworkManagerAdminRuleCollectionOutput)
}

type NetworkManagerAdminRuleCollectionMapOutput struct{ *pulumi.OutputState }

func (NetworkManagerAdminRuleCollectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkManagerAdminRuleCollection)(nil)).Elem()
}

func (o NetworkManagerAdminRuleCollectionMapOutput) ToNetworkManagerAdminRuleCollectionMapOutput() NetworkManagerAdminRuleCollectionMapOutput {
	return o
}

func (o NetworkManagerAdminRuleCollectionMapOutput) ToNetworkManagerAdminRuleCollectionMapOutputWithContext(ctx context.Context) NetworkManagerAdminRuleCollectionMapOutput {
	return o
}

func (o NetworkManagerAdminRuleCollectionMapOutput) MapIndex(k pulumi.StringInput) NetworkManagerAdminRuleCollectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkManagerAdminRuleCollection {
		return vs[0].(map[string]*NetworkManagerAdminRuleCollection)[vs[1].(string)]
	}).(NetworkManagerAdminRuleCollectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerAdminRuleCollectionInput)(nil)).Elem(), &NetworkManagerAdminRuleCollection{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerAdminRuleCollectionArrayInput)(nil)).Elem(), NetworkManagerAdminRuleCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerAdminRuleCollectionMapInput)(nil)).Elem(), NetworkManagerAdminRuleCollectionMap{})
	pulumi.RegisterOutputType(NetworkManagerAdminRuleCollectionOutput{})
	pulumi.RegisterOutputType(NetworkManagerAdminRuleCollectionArrayOutput{})
	pulumi.RegisterOutputType(NetworkManagerAdminRuleCollectionMapOutput{})
}
