// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Network Manager Network Group.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			current, err := core.LookupSubscription(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			exampleNetworkManager, err := network.NewNetworkManager(ctx, "exampleNetworkManager", &network.NetworkManagerArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				Scope: &network.NetworkManagerScopeArgs{
//					SubscriptionIds: pulumi.StringArray{
//						*pulumi.String(current.Id),
//					},
//				},
//				ScopeAccesses: pulumi.StringArray{
//					pulumi.String("Connectivity"),
//					pulumi.String("SecurityAdmin"),
//				},
//				Description: pulumi.String("example network manager"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = network.NewNetworkManagerNetworkGroup(ctx, "exampleNetworkManagerNetworkGroup", &network.NetworkManagerNetworkGroupArgs{
//				NetworkManagerId: exampleNetworkManager.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Network Manager Network Group can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:network/networkManagerNetworkGroup:NetworkManagerNetworkGroup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Network/networkManagers/networkManager1/networkGroups/networkGroup1
//
// ```
type NetworkManagerNetworkGroup struct {
	pulumi.CustomResourceState

	// A description of the Network Manager Network Group.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the name which should be used for this Network Manager Network Group. Changing this forces a new Network Manager Network Group to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the ID of the Network Manager. Changing this forces a new Network Manager Network Group to be created.
	NetworkManagerId pulumi.StringOutput `pulumi:"networkManagerId"`
}

// NewNetworkManagerNetworkGroup registers a new resource with the given unique name, arguments, and options.
func NewNetworkManagerNetworkGroup(ctx *pulumi.Context,
	name string, args *NetworkManagerNetworkGroupArgs, opts ...pulumi.ResourceOption) (*NetworkManagerNetworkGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkManagerId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkManagerId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkManagerNetworkGroup
	err := ctx.RegisterResource("azure:network/networkManagerNetworkGroup:NetworkManagerNetworkGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkManagerNetworkGroup gets an existing NetworkManagerNetworkGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkManagerNetworkGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkManagerNetworkGroupState, opts ...pulumi.ResourceOption) (*NetworkManagerNetworkGroup, error) {
	var resource NetworkManagerNetworkGroup
	err := ctx.ReadResource("azure:network/networkManagerNetworkGroup:NetworkManagerNetworkGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkManagerNetworkGroup resources.
type networkManagerNetworkGroupState struct {
	// A description of the Network Manager Network Group.
	Description *string `pulumi:"description"`
	// Specifies the name which should be used for this Network Manager Network Group. Changing this forces a new Network Manager Network Group to be created.
	Name *string `pulumi:"name"`
	// Specifies the ID of the Network Manager. Changing this forces a new Network Manager Network Group to be created.
	NetworkManagerId *string `pulumi:"networkManagerId"`
}

type NetworkManagerNetworkGroupState struct {
	// A description of the Network Manager Network Group.
	Description pulumi.StringPtrInput
	// Specifies the name which should be used for this Network Manager Network Group. Changing this forces a new Network Manager Network Group to be created.
	Name pulumi.StringPtrInput
	// Specifies the ID of the Network Manager. Changing this forces a new Network Manager Network Group to be created.
	NetworkManagerId pulumi.StringPtrInput
}

func (NetworkManagerNetworkGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkManagerNetworkGroupState)(nil)).Elem()
}

type networkManagerNetworkGroupArgs struct {
	// A description of the Network Manager Network Group.
	Description *string `pulumi:"description"`
	// Specifies the name which should be used for this Network Manager Network Group. Changing this forces a new Network Manager Network Group to be created.
	Name *string `pulumi:"name"`
	// Specifies the ID of the Network Manager. Changing this forces a new Network Manager Network Group to be created.
	NetworkManagerId string `pulumi:"networkManagerId"`
}

// The set of arguments for constructing a NetworkManagerNetworkGroup resource.
type NetworkManagerNetworkGroupArgs struct {
	// A description of the Network Manager Network Group.
	Description pulumi.StringPtrInput
	// Specifies the name which should be used for this Network Manager Network Group. Changing this forces a new Network Manager Network Group to be created.
	Name pulumi.StringPtrInput
	// Specifies the ID of the Network Manager. Changing this forces a new Network Manager Network Group to be created.
	NetworkManagerId pulumi.StringInput
}

func (NetworkManagerNetworkGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkManagerNetworkGroupArgs)(nil)).Elem()
}

type NetworkManagerNetworkGroupInput interface {
	pulumi.Input

	ToNetworkManagerNetworkGroupOutput() NetworkManagerNetworkGroupOutput
	ToNetworkManagerNetworkGroupOutputWithContext(ctx context.Context) NetworkManagerNetworkGroupOutput
}

func (*NetworkManagerNetworkGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkManagerNetworkGroup)(nil)).Elem()
}

func (i *NetworkManagerNetworkGroup) ToNetworkManagerNetworkGroupOutput() NetworkManagerNetworkGroupOutput {
	return i.ToNetworkManagerNetworkGroupOutputWithContext(context.Background())
}

func (i *NetworkManagerNetworkGroup) ToNetworkManagerNetworkGroupOutputWithContext(ctx context.Context) NetworkManagerNetworkGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerNetworkGroupOutput)
}

// NetworkManagerNetworkGroupArrayInput is an input type that accepts NetworkManagerNetworkGroupArray and NetworkManagerNetworkGroupArrayOutput values.
// You can construct a concrete instance of `NetworkManagerNetworkGroupArrayInput` via:
//
//	NetworkManagerNetworkGroupArray{ NetworkManagerNetworkGroupArgs{...} }
type NetworkManagerNetworkGroupArrayInput interface {
	pulumi.Input

	ToNetworkManagerNetworkGroupArrayOutput() NetworkManagerNetworkGroupArrayOutput
	ToNetworkManagerNetworkGroupArrayOutputWithContext(context.Context) NetworkManagerNetworkGroupArrayOutput
}

type NetworkManagerNetworkGroupArray []NetworkManagerNetworkGroupInput

func (NetworkManagerNetworkGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkManagerNetworkGroup)(nil)).Elem()
}

func (i NetworkManagerNetworkGroupArray) ToNetworkManagerNetworkGroupArrayOutput() NetworkManagerNetworkGroupArrayOutput {
	return i.ToNetworkManagerNetworkGroupArrayOutputWithContext(context.Background())
}

func (i NetworkManagerNetworkGroupArray) ToNetworkManagerNetworkGroupArrayOutputWithContext(ctx context.Context) NetworkManagerNetworkGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerNetworkGroupArrayOutput)
}

// NetworkManagerNetworkGroupMapInput is an input type that accepts NetworkManagerNetworkGroupMap and NetworkManagerNetworkGroupMapOutput values.
// You can construct a concrete instance of `NetworkManagerNetworkGroupMapInput` via:
//
//	NetworkManagerNetworkGroupMap{ "key": NetworkManagerNetworkGroupArgs{...} }
type NetworkManagerNetworkGroupMapInput interface {
	pulumi.Input

	ToNetworkManagerNetworkGroupMapOutput() NetworkManagerNetworkGroupMapOutput
	ToNetworkManagerNetworkGroupMapOutputWithContext(context.Context) NetworkManagerNetworkGroupMapOutput
}

type NetworkManagerNetworkGroupMap map[string]NetworkManagerNetworkGroupInput

func (NetworkManagerNetworkGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkManagerNetworkGroup)(nil)).Elem()
}

func (i NetworkManagerNetworkGroupMap) ToNetworkManagerNetworkGroupMapOutput() NetworkManagerNetworkGroupMapOutput {
	return i.ToNetworkManagerNetworkGroupMapOutputWithContext(context.Background())
}

func (i NetworkManagerNetworkGroupMap) ToNetworkManagerNetworkGroupMapOutputWithContext(ctx context.Context) NetworkManagerNetworkGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerNetworkGroupMapOutput)
}

type NetworkManagerNetworkGroupOutput struct{ *pulumi.OutputState }

func (NetworkManagerNetworkGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkManagerNetworkGroup)(nil)).Elem()
}

func (o NetworkManagerNetworkGroupOutput) ToNetworkManagerNetworkGroupOutput() NetworkManagerNetworkGroupOutput {
	return o
}

func (o NetworkManagerNetworkGroupOutput) ToNetworkManagerNetworkGroupOutputWithContext(ctx context.Context) NetworkManagerNetworkGroupOutput {
	return o
}

// A description of the Network Manager Network Group.
func (o NetworkManagerNetworkGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkManagerNetworkGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the name which should be used for this Network Manager Network Group. Changing this forces a new Network Manager Network Group to be created.
func (o NetworkManagerNetworkGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerNetworkGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the ID of the Network Manager. Changing this forces a new Network Manager Network Group to be created.
func (o NetworkManagerNetworkGroupOutput) NetworkManagerId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerNetworkGroup) pulumi.StringOutput { return v.NetworkManagerId }).(pulumi.StringOutput)
}

type NetworkManagerNetworkGroupArrayOutput struct{ *pulumi.OutputState }

func (NetworkManagerNetworkGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkManagerNetworkGroup)(nil)).Elem()
}

func (o NetworkManagerNetworkGroupArrayOutput) ToNetworkManagerNetworkGroupArrayOutput() NetworkManagerNetworkGroupArrayOutput {
	return o
}

func (o NetworkManagerNetworkGroupArrayOutput) ToNetworkManagerNetworkGroupArrayOutputWithContext(ctx context.Context) NetworkManagerNetworkGroupArrayOutput {
	return o
}

func (o NetworkManagerNetworkGroupArrayOutput) Index(i pulumi.IntInput) NetworkManagerNetworkGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkManagerNetworkGroup {
		return vs[0].([]*NetworkManagerNetworkGroup)[vs[1].(int)]
	}).(NetworkManagerNetworkGroupOutput)
}

type NetworkManagerNetworkGroupMapOutput struct{ *pulumi.OutputState }

func (NetworkManagerNetworkGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkManagerNetworkGroup)(nil)).Elem()
}

func (o NetworkManagerNetworkGroupMapOutput) ToNetworkManagerNetworkGroupMapOutput() NetworkManagerNetworkGroupMapOutput {
	return o
}

func (o NetworkManagerNetworkGroupMapOutput) ToNetworkManagerNetworkGroupMapOutputWithContext(ctx context.Context) NetworkManagerNetworkGroupMapOutput {
	return o
}

func (o NetworkManagerNetworkGroupMapOutput) MapIndex(k pulumi.StringInput) NetworkManagerNetworkGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkManagerNetworkGroup {
		return vs[0].(map[string]*NetworkManagerNetworkGroup)[vs[1].(string)]
	}).(NetworkManagerNetworkGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerNetworkGroupInput)(nil)).Elem(), &NetworkManagerNetworkGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerNetworkGroupArrayInput)(nil)).Elem(), NetworkManagerNetworkGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerNetworkGroupMapInput)(nil)).Elem(), NetworkManagerNetworkGroupMap{})
	pulumi.RegisterOutputType(NetworkManagerNetworkGroupOutput{})
	pulumi.RegisterOutputType(NetworkManagerNetworkGroupArrayOutput{})
	pulumi.RegisterOutputType(NetworkManagerNetworkGroupMapOutput{})
}
