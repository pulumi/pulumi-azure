// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a VPN Server Configuration Policy Group.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleVpnServerConfiguration, err := network.NewVpnServerConfiguration(ctx, "exampleVpnServerConfiguration", &network.VpnServerConfigurationArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				VpnAuthenticationTypes: pulumi.StringArray{
//					pulumi.String("Radius"),
//				},
//				Radius: &network.VpnServerConfigurationRadiusArgs{
//					Servers: network.VpnServerConfigurationRadiusServerArray{
//						&network.VpnServerConfigurationRadiusServerArgs{
//							Address: pulumi.String("10.105.1.1"),
//							Secret:  pulumi.String("vindicators-the-return-of-worldender"),
//							Score:   pulumi.Int(15),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = network.NewVpnServerConfigurationPolicyGroup(ctx, "exampleVpnServerConfigurationPolicyGroup", &network.VpnServerConfigurationPolicyGroupArgs{
//				VpnServerConfigurationId: exampleVpnServerConfiguration.ID(),
//				Policies: network.VpnServerConfigurationPolicyGroupPolicyArray{
//					&network.VpnServerConfigurationPolicyGroupPolicyArgs{
//						Name:  pulumi.String("policy1"),
//						Type:  pulumi.String("RadiusAzureGroupId"),
//						Value: pulumi.String("6ad1bd08"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// VPN Server Configuration Policy Groups can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:network/vpnServerConfigurationPolicyGroup:VpnServerConfigurationPolicyGroup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.Network/vpnServerConfigurations/serverConfiguration1/configurationPolicyGroups/configurationPolicyGroup1
//
// ```
type VpnServerConfigurationPolicyGroup struct {
	pulumi.CustomResourceState

	// Is this a default VPN Server Configuration Policy Group? Defaults to `false`. Changing this forces a new resource to be created.
	IsDefault pulumi.BoolPtrOutput `pulumi:"isDefault"`
	// The Name which should be used for this VPN Server Configuration Policy Group. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// One or more `policy` blocks as documented below.
	Policies VpnServerConfigurationPolicyGroupPolicyArrayOutput `pulumi:"policies"`
	// The priority of this VPN Server Configuration Policy Group. Defaults to `0`.
	Priority pulumi.IntPtrOutput `pulumi:"priority"`
	// The ID of the VPN Server Configuration that the VPN Server Configuration Policy Group belongs to. Changing this forces a new resource to be created.
	VpnServerConfigurationId pulumi.StringOutput `pulumi:"vpnServerConfigurationId"`
}

// NewVpnServerConfigurationPolicyGroup registers a new resource with the given unique name, arguments, and options.
func NewVpnServerConfigurationPolicyGroup(ctx *pulumi.Context,
	name string, args *VpnServerConfigurationPolicyGroupArgs, opts ...pulumi.ResourceOption) (*VpnServerConfigurationPolicyGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Policies == nil {
		return nil, errors.New("invalid value for required argument 'Policies'")
	}
	if args.VpnServerConfigurationId == nil {
		return nil, errors.New("invalid value for required argument 'VpnServerConfigurationId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpnServerConfigurationPolicyGroup
	err := ctx.RegisterResource("azure:network/vpnServerConfigurationPolicyGroup:VpnServerConfigurationPolicyGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpnServerConfigurationPolicyGroup gets an existing VpnServerConfigurationPolicyGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpnServerConfigurationPolicyGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpnServerConfigurationPolicyGroupState, opts ...pulumi.ResourceOption) (*VpnServerConfigurationPolicyGroup, error) {
	var resource VpnServerConfigurationPolicyGroup
	err := ctx.ReadResource("azure:network/vpnServerConfigurationPolicyGroup:VpnServerConfigurationPolicyGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpnServerConfigurationPolicyGroup resources.
type vpnServerConfigurationPolicyGroupState struct {
	// Is this a default VPN Server Configuration Policy Group? Defaults to `false`. Changing this forces a new resource to be created.
	IsDefault *bool `pulumi:"isDefault"`
	// The Name which should be used for this VPN Server Configuration Policy Group. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// One or more `policy` blocks as documented below.
	Policies []VpnServerConfigurationPolicyGroupPolicy `pulumi:"policies"`
	// The priority of this VPN Server Configuration Policy Group. Defaults to `0`.
	Priority *int `pulumi:"priority"`
	// The ID of the VPN Server Configuration that the VPN Server Configuration Policy Group belongs to. Changing this forces a new resource to be created.
	VpnServerConfigurationId *string `pulumi:"vpnServerConfigurationId"`
}

type VpnServerConfigurationPolicyGroupState struct {
	// Is this a default VPN Server Configuration Policy Group? Defaults to `false`. Changing this forces a new resource to be created.
	IsDefault pulumi.BoolPtrInput
	// The Name which should be used for this VPN Server Configuration Policy Group. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// One or more `policy` blocks as documented below.
	Policies VpnServerConfigurationPolicyGroupPolicyArrayInput
	// The priority of this VPN Server Configuration Policy Group. Defaults to `0`.
	Priority pulumi.IntPtrInput
	// The ID of the VPN Server Configuration that the VPN Server Configuration Policy Group belongs to. Changing this forces a new resource to be created.
	VpnServerConfigurationId pulumi.StringPtrInput
}

func (VpnServerConfigurationPolicyGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnServerConfigurationPolicyGroupState)(nil)).Elem()
}

type vpnServerConfigurationPolicyGroupArgs struct {
	// Is this a default VPN Server Configuration Policy Group? Defaults to `false`. Changing this forces a new resource to be created.
	IsDefault *bool `pulumi:"isDefault"`
	// The Name which should be used for this VPN Server Configuration Policy Group. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// One or more `policy` blocks as documented below.
	Policies []VpnServerConfigurationPolicyGroupPolicy `pulumi:"policies"`
	// The priority of this VPN Server Configuration Policy Group. Defaults to `0`.
	Priority *int `pulumi:"priority"`
	// The ID of the VPN Server Configuration that the VPN Server Configuration Policy Group belongs to. Changing this forces a new resource to be created.
	VpnServerConfigurationId string `pulumi:"vpnServerConfigurationId"`
}

// The set of arguments for constructing a VpnServerConfigurationPolicyGroup resource.
type VpnServerConfigurationPolicyGroupArgs struct {
	// Is this a default VPN Server Configuration Policy Group? Defaults to `false`. Changing this forces a new resource to be created.
	IsDefault pulumi.BoolPtrInput
	// The Name which should be used for this VPN Server Configuration Policy Group. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// One or more `policy` blocks as documented below.
	Policies VpnServerConfigurationPolicyGroupPolicyArrayInput
	// The priority of this VPN Server Configuration Policy Group. Defaults to `0`.
	Priority pulumi.IntPtrInput
	// The ID of the VPN Server Configuration that the VPN Server Configuration Policy Group belongs to. Changing this forces a new resource to be created.
	VpnServerConfigurationId pulumi.StringInput
}

func (VpnServerConfigurationPolicyGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnServerConfigurationPolicyGroupArgs)(nil)).Elem()
}

type VpnServerConfigurationPolicyGroupInput interface {
	pulumi.Input

	ToVpnServerConfigurationPolicyGroupOutput() VpnServerConfigurationPolicyGroupOutput
	ToVpnServerConfigurationPolicyGroupOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupOutput
}

func (*VpnServerConfigurationPolicyGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnServerConfigurationPolicyGroup)(nil)).Elem()
}

func (i *VpnServerConfigurationPolicyGroup) ToVpnServerConfigurationPolicyGroupOutput() VpnServerConfigurationPolicyGroupOutput {
	return i.ToVpnServerConfigurationPolicyGroupOutputWithContext(context.Background())
}

func (i *VpnServerConfigurationPolicyGroup) ToVpnServerConfigurationPolicyGroupOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationPolicyGroupOutput)
}

// VpnServerConfigurationPolicyGroupArrayInput is an input type that accepts VpnServerConfigurationPolicyGroupArray and VpnServerConfigurationPolicyGroupArrayOutput values.
// You can construct a concrete instance of `VpnServerConfigurationPolicyGroupArrayInput` via:
//
//	VpnServerConfigurationPolicyGroupArray{ VpnServerConfigurationPolicyGroupArgs{...} }
type VpnServerConfigurationPolicyGroupArrayInput interface {
	pulumi.Input

	ToVpnServerConfigurationPolicyGroupArrayOutput() VpnServerConfigurationPolicyGroupArrayOutput
	ToVpnServerConfigurationPolicyGroupArrayOutputWithContext(context.Context) VpnServerConfigurationPolicyGroupArrayOutput
}

type VpnServerConfigurationPolicyGroupArray []VpnServerConfigurationPolicyGroupInput

func (VpnServerConfigurationPolicyGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnServerConfigurationPolicyGroup)(nil)).Elem()
}

func (i VpnServerConfigurationPolicyGroupArray) ToVpnServerConfigurationPolicyGroupArrayOutput() VpnServerConfigurationPolicyGroupArrayOutput {
	return i.ToVpnServerConfigurationPolicyGroupArrayOutputWithContext(context.Background())
}

func (i VpnServerConfigurationPolicyGroupArray) ToVpnServerConfigurationPolicyGroupArrayOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationPolicyGroupArrayOutput)
}

// VpnServerConfigurationPolicyGroupMapInput is an input type that accepts VpnServerConfigurationPolicyGroupMap and VpnServerConfigurationPolicyGroupMapOutput values.
// You can construct a concrete instance of `VpnServerConfigurationPolicyGroupMapInput` via:
//
//	VpnServerConfigurationPolicyGroupMap{ "key": VpnServerConfigurationPolicyGroupArgs{...} }
type VpnServerConfigurationPolicyGroupMapInput interface {
	pulumi.Input

	ToVpnServerConfigurationPolicyGroupMapOutput() VpnServerConfigurationPolicyGroupMapOutput
	ToVpnServerConfigurationPolicyGroupMapOutputWithContext(context.Context) VpnServerConfigurationPolicyGroupMapOutput
}

type VpnServerConfigurationPolicyGroupMap map[string]VpnServerConfigurationPolicyGroupInput

func (VpnServerConfigurationPolicyGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnServerConfigurationPolicyGroup)(nil)).Elem()
}

func (i VpnServerConfigurationPolicyGroupMap) ToVpnServerConfigurationPolicyGroupMapOutput() VpnServerConfigurationPolicyGroupMapOutput {
	return i.ToVpnServerConfigurationPolicyGroupMapOutputWithContext(context.Background())
}

func (i VpnServerConfigurationPolicyGroupMap) ToVpnServerConfigurationPolicyGroupMapOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationPolicyGroupMapOutput)
}

type VpnServerConfigurationPolicyGroupOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationPolicyGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnServerConfigurationPolicyGroup)(nil)).Elem()
}

func (o VpnServerConfigurationPolicyGroupOutput) ToVpnServerConfigurationPolicyGroupOutput() VpnServerConfigurationPolicyGroupOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupOutput) ToVpnServerConfigurationPolicyGroupOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupOutput {
	return o
}

// Is this a default VPN Server Configuration Policy Group? Defaults to `false`. Changing this forces a new resource to be created.
func (o VpnServerConfigurationPolicyGroupOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnServerConfigurationPolicyGroup) pulumi.BoolPtrOutput { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// The Name which should be used for this VPN Server Configuration Policy Group. Changing this forces a new resource to be created.
func (o VpnServerConfigurationPolicyGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnServerConfigurationPolicyGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// One or more `policy` blocks as documented below.
func (o VpnServerConfigurationPolicyGroupOutput) Policies() VpnServerConfigurationPolicyGroupPolicyArrayOutput {
	return o.ApplyT(func(v *VpnServerConfigurationPolicyGroup) VpnServerConfigurationPolicyGroupPolicyArrayOutput {
		return v.Policies
	}).(VpnServerConfigurationPolicyGroupPolicyArrayOutput)
}

// The priority of this VPN Server Configuration Policy Group. Defaults to `0`.
func (o VpnServerConfigurationPolicyGroupOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnServerConfigurationPolicyGroup) pulumi.IntPtrOutput { return v.Priority }).(pulumi.IntPtrOutput)
}

// The ID of the VPN Server Configuration that the VPN Server Configuration Policy Group belongs to. Changing this forces a new resource to be created.
func (o VpnServerConfigurationPolicyGroupOutput) VpnServerConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnServerConfigurationPolicyGroup) pulumi.StringOutput { return v.VpnServerConfigurationId }).(pulumi.StringOutput)
}

type VpnServerConfigurationPolicyGroupArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationPolicyGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnServerConfigurationPolicyGroup)(nil)).Elem()
}

func (o VpnServerConfigurationPolicyGroupArrayOutput) ToVpnServerConfigurationPolicyGroupArrayOutput() VpnServerConfigurationPolicyGroupArrayOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupArrayOutput) ToVpnServerConfigurationPolicyGroupArrayOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupArrayOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupArrayOutput) Index(i pulumi.IntInput) VpnServerConfigurationPolicyGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpnServerConfigurationPolicyGroup {
		return vs[0].([]*VpnServerConfigurationPolicyGroup)[vs[1].(int)]
	}).(VpnServerConfigurationPolicyGroupOutput)
}

type VpnServerConfigurationPolicyGroupMapOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationPolicyGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnServerConfigurationPolicyGroup)(nil)).Elem()
}

func (o VpnServerConfigurationPolicyGroupMapOutput) ToVpnServerConfigurationPolicyGroupMapOutput() VpnServerConfigurationPolicyGroupMapOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupMapOutput) ToVpnServerConfigurationPolicyGroupMapOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupMapOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupMapOutput) MapIndex(k pulumi.StringInput) VpnServerConfigurationPolicyGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpnServerConfigurationPolicyGroup {
		return vs[0].(map[string]*VpnServerConfigurationPolicyGroup)[vs[1].(string)]
	}).(VpnServerConfigurationPolicyGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpnServerConfigurationPolicyGroupInput)(nil)).Elem(), &VpnServerConfigurationPolicyGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnServerConfigurationPolicyGroupArrayInput)(nil)).Elem(), VpnServerConfigurationPolicyGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnServerConfigurationPolicyGroupMapInput)(nil)).Elem(), VpnServerConfigurationPolicyGroupMap{})
	pulumi.RegisterOutputType(VpnServerConfigurationPolicyGroupOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationPolicyGroupArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationPolicyGroupMapOutput{})
}
