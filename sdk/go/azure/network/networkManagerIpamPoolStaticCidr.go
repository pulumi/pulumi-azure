// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Network Manager IPAM Pool Static CIDR.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resources"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			current, err := core.LookupSubscription(ctx, &core.LookupSubscriptionArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			exampleNetworkManager, err := network.NewNetworkManager(ctx, "example", &network.NetworkManagerArgs{
//				Name:              pulumi.String("example-nm"),
//				ResourceGroupName: example.Name,
//				Location:          example.Location,
//				Scope: &network.NetworkManagerScopeArgs{
//					SubscriptionIds: pulumi.StringArray{
//						pulumi.String(current.Id),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleNetworkManagerIpamPool, err := network.NewNetworkManagerIpamPool(ctx, "example", &network.NetworkManagerIpamPoolArgs{
//				Name:             pulumi.String("example-ipampool"),
//				NetworkManagerId: exampleNetworkManager.ID(),
//				Location:         example.Location,
//				DisplayName:      pulumi.String("ipampool1"),
//				AddressPrefixes: pulumi.StringArray{
//					pulumi.String("10.0.0.0/24"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = network.NewNetworkManagerIpamPoolStaticCidr(ctx, "example", &network.NetworkManagerIpamPoolStaticCidrArgs{
//				Name:       pulumi.String("example-ipsc"),
//				IpamPoolId: exampleNetworkManagerIpamPool.ID(),
//				AddressPrefixes: pulumi.StringArray{
//					pulumi.String("10.0.0.0/26"),
//					pulumi.String("10.0.0.128/27"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This resource uses the following Azure API Providers:
//
// * `Microsoft.Network` - 2024-05-01
//
// ## Import
//
// Network Manager IPAM Pool Static CIDRs can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:network/networkManagerIpamPoolStaticCidr:NetworkManagerIpamPoolStaticCidr example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/networkManagers/manager1/ipamPools/pool1/staticCidrs/cidr1
// ```
type NetworkManagerIpamPoolStaticCidr struct {
	pulumi.CustomResourceState

	// Specifies a list of IPv4 or IPv6 IP address prefixes which will be allocated to the Static CIDR.
	//
	// > **Note:** Exactly one of `addressPrefixes` or `numberOfIpAddressesToAllocate` must be specified.
	AddressPrefixes pulumi.StringArrayOutput `pulumi:"addressPrefixes"`
	// The ID of the Network Manager IP Address Management (IPAM) Pool. Changing this forces a new Network Manager IPAM Pool Static CIDR to be created.
	IpamPoolId pulumi.StringOutput `pulumi:"ipamPoolId"`
	// The name which should be used for this Network Manager IPAM Pool Static CIDR. Changing this forces a new Network Manager IPAM Pool Static CIDR to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The number of IP addresses to allocate to the Static CIDR. The value must be a string representing a positive integer which is a positive power of 2, e.g., `"16"`.
	//
	// > **Note:** Exactly one of `addressPrefixes` or `numberOfIpAddressesToAllocate` must be specified.
	NumberOfIpAddressesToAllocate pulumi.StringPtrOutput `pulumi:"numberOfIpAddressesToAllocate"`
}

// NewNetworkManagerIpamPoolStaticCidr registers a new resource with the given unique name, arguments, and options.
func NewNetworkManagerIpamPoolStaticCidr(ctx *pulumi.Context,
	name string, args *NetworkManagerIpamPoolStaticCidrArgs, opts ...pulumi.ResourceOption) (*NetworkManagerIpamPoolStaticCidr, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IpamPoolId == nil {
		return nil, errors.New("invalid value for required argument 'IpamPoolId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkManagerIpamPoolStaticCidr
	err := ctx.RegisterResource("azure:network/networkManagerIpamPoolStaticCidr:NetworkManagerIpamPoolStaticCidr", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkManagerIpamPoolStaticCidr gets an existing NetworkManagerIpamPoolStaticCidr resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkManagerIpamPoolStaticCidr(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkManagerIpamPoolStaticCidrState, opts ...pulumi.ResourceOption) (*NetworkManagerIpamPoolStaticCidr, error) {
	var resource NetworkManagerIpamPoolStaticCidr
	err := ctx.ReadResource("azure:network/networkManagerIpamPoolStaticCidr:NetworkManagerIpamPoolStaticCidr", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkManagerIpamPoolStaticCidr resources.
type networkManagerIpamPoolStaticCidrState struct {
	// Specifies a list of IPv4 or IPv6 IP address prefixes which will be allocated to the Static CIDR.
	//
	// > **Note:** Exactly one of `addressPrefixes` or `numberOfIpAddressesToAllocate` must be specified.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// The ID of the Network Manager IP Address Management (IPAM) Pool. Changing this forces a new Network Manager IPAM Pool Static CIDR to be created.
	IpamPoolId *string `pulumi:"ipamPoolId"`
	// The name which should be used for this Network Manager IPAM Pool Static CIDR. Changing this forces a new Network Manager IPAM Pool Static CIDR to be created.
	Name *string `pulumi:"name"`
	// The number of IP addresses to allocate to the Static CIDR. The value must be a string representing a positive integer which is a positive power of 2, e.g., `"16"`.
	//
	// > **Note:** Exactly one of `addressPrefixes` or `numberOfIpAddressesToAllocate` must be specified.
	NumberOfIpAddressesToAllocate *string `pulumi:"numberOfIpAddressesToAllocate"`
}

type NetworkManagerIpamPoolStaticCidrState struct {
	// Specifies a list of IPv4 or IPv6 IP address prefixes which will be allocated to the Static CIDR.
	//
	// > **Note:** Exactly one of `addressPrefixes` or `numberOfIpAddressesToAllocate` must be specified.
	AddressPrefixes pulumi.StringArrayInput
	// The ID of the Network Manager IP Address Management (IPAM) Pool. Changing this forces a new Network Manager IPAM Pool Static CIDR to be created.
	IpamPoolId pulumi.StringPtrInput
	// The name which should be used for this Network Manager IPAM Pool Static CIDR. Changing this forces a new Network Manager IPAM Pool Static CIDR to be created.
	Name pulumi.StringPtrInput
	// The number of IP addresses to allocate to the Static CIDR. The value must be a string representing a positive integer which is a positive power of 2, e.g., `"16"`.
	//
	// > **Note:** Exactly one of `addressPrefixes` or `numberOfIpAddressesToAllocate` must be specified.
	NumberOfIpAddressesToAllocate pulumi.StringPtrInput
}

func (NetworkManagerIpamPoolStaticCidrState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkManagerIpamPoolStaticCidrState)(nil)).Elem()
}

type networkManagerIpamPoolStaticCidrArgs struct {
	// Specifies a list of IPv4 or IPv6 IP address prefixes which will be allocated to the Static CIDR.
	//
	// > **Note:** Exactly one of `addressPrefixes` or `numberOfIpAddressesToAllocate` must be specified.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// The ID of the Network Manager IP Address Management (IPAM) Pool. Changing this forces a new Network Manager IPAM Pool Static CIDR to be created.
	IpamPoolId string `pulumi:"ipamPoolId"`
	// The name which should be used for this Network Manager IPAM Pool Static CIDR. Changing this forces a new Network Manager IPAM Pool Static CIDR to be created.
	Name *string `pulumi:"name"`
	// The number of IP addresses to allocate to the Static CIDR. The value must be a string representing a positive integer which is a positive power of 2, e.g., `"16"`.
	//
	// > **Note:** Exactly one of `addressPrefixes` or `numberOfIpAddressesToAllocate` must be specified.
	NumberOfIpAddressesToAllocate *string `pulumi:"numberOfIpAddressesToAllocate"`
}

// The set of arguments for constructing a NetworkManagerIpamPoolStaticCidr resource.
type NetworkManagerIpamPoolStaticCidrArgs struct {
	// Specifies a list of IPv4 or IPv6 IP address prefixes which will be allocated to the Static CIDR.
	//
	// > **Note:** Exactly one of `addressPrefixes` or `numberOfIpAddressesToAllocate` must be specified.
	AddressPrefixes pulumi.StringArrayInput
	// The ID of the Network Manager IP Address Management (IPAM) Pool. Changing this forces a new Network Manager IPAM Pool Static CIDR to be created.
	IpamPoolId pulumi.StringInput
	// The name which should be used for this Network Manager IPAM Pool Static CIDR. Changing this forces a new Network Manager IPAM Pool Static CIDR to be created.
	Name pulumi.StringPtrInput
	// The number of IP addresses to allocate to the Static CIDR. The value must be a string representing a positive integer which is a positive power of 2, e.g., `"16"`.
	//
	// > **Note:** Exactly one of `addressPrefixes` or `numberOfIpAddressesToAllocate` must be specified.
	NumberOfIpAddressesToAllocate pulumi.StringPtrInput
}

func (NetworkManagerIpamPoolStaticCidrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkManagerIpamPoolStaticCidrArgs)(nil)).Elem()
}

type NetworkManagerIpamPoolStaticCidrInput interface {
	pulumi.Input

	ToNetworkManagerIpamPoolStaticCidrOutput() NetworkManagerIpamPoolStaticCidrOutput
	ToNetworkManagerIpamPoolStaticCidrOutputWithContext(ctx context.Context) NetworkManagerIpamPoolStaticCidrOutput
}

func (*NetworkManagerIpamPoolStaticCidr) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkManagerIpamPoolStaticCidr)(nil)).Elem()
}

func (i *NetworkManagerIpamPoolStaticCidr) ToNetworkManagerIpamPoolStaticCidrOutput() NetworkManagerIpamPoolStaticCidrOutput {
	return i.ToNetworkManagerIpamPoolStaticCidrOutputWithContext(context.Background())
}

func (i *NetworkManagerIpamPoolStaticCidr) ToNetworkManagerIpamPoolStaticCidrOutputWithContext(ctx context.Context) NetworkManagerIpamPoolStaticCidrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerIpamPoolStaticCidrOutput)
}

// NetworkManagerIpamPoolStaticCidrArrayInput is an input type that accepts NetworkManagerIpamPoolStaticCidrArray and NetworkManagerIpamPoolStaticCidrArrayOutput values.
// You can construct a concrete instance of `NetworkManagerIpamPoolStaticCidrArrayInput` via:
//
//	NetworkManagerIpamPoolStaticCidrArray{ NetworkManagerIpamPoolStaticCidrArgs{...} }
type NetworkManagerIpamPoolStaticCidrArrayInput interface {
	pulumi.Input

	ToNetworkManagerIpamPoolStaticCidrArrayOutput() NetworkManagerIpamPoolStaticCidrArrayOutput
	ToNetworkManagerIpamPoolStaticCidrArrayOutputWithContext(context.Context) NetworkManagerIpamPoolStaticCidrArrayOutput
}

type NetworkManagerIpamPoolStaticCidrArray []NetworkManagerIpamPoolStaticCidrInput

func (NetworkManagerIpamPoolStaticCidrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkManagerIpamPoolStaticCidr)(nil)).Elem()
}

func (i NetworkManagerIpamPoolStaticCidrArray) ToNetworkManagerIpamPoolStaticCidrArrayOutput() NetworkManagerIpamPoolStaticCidrArrayOutput {
	return i.ToNetworkManagerIpamPoolStaticCidrArrayOutputWithContext(context.Background())
}

func (i NetworkManagerIpamPoolStaticCidrArray) ToNetworkManagerIpamPoolStaticCidrArrayOutputWithContext(ctx context.Context) NetworkManagerIpamPoolStaticCidrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerIpamPoolStaticCidrArrayOutput)
}

// NetworkManagerIpamPoolStaticCidrMapInput is an input type that accepts NetworkManagerIpamPoolStaticCidrMap and NetworkManagerIpamPoolStaticCidrMapOutput values.
// You can construct a concrete instance of `NetworkManagerIpamPoolStaticCidrMapInput` via:
//
//	NetworkManagerIpamPoolStaticCidrMap{ "key": NetworkManagerIpamPoolStaticCidrArgs{...} }
type NetworkManagerIpamPoolStaticCidrMapInput interface {
	pulumi.Input

	ToNetworkManagerIpamPoolStaticCidrMapOutput() NetworkManagerIpamPoolStaticCidrMapOutput
	ToNetworkManagerIpamPoolStaticCidrMapOutputWithContext(context.Context) NetworkManagerIpamPoolStaticCidrMapOutput
}

type NetworkManagerIpamPoolStaticCidrMap map[string]NetworkManagerIpamPoolStaticCidrInput

func (NetworkManagerIpamPoolStaticCidrMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkManagerIpamPoolStaticCidr)(nil)).Elem()
}

func (i NetworkManagerIpamPoolStaticCidrMap) ToNetworkManagerIpamPoolStaticCidrMapOutput() NetworkManagerIpamPoolStaticCidrMapOutput {
	return i.ToNetworkManagerIpamPoolStaticCidrMapOutputWithContext(context.Background())
}

func (i NetworkManagerIpamPoolStaticCidrMap) ToNetworkManagerIpamPoolStaticCidrMapOutputWithContext(ctx context.Context) NetworkManagerIpamPoolStaticCidrMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerIpamPoolStaticCidrMapOutput)
}

type NetworkManagerIpamPoolStaticCidrOutput struct{ *pulumi.OutputState }

func (NetworkManagerIpamPoolStaticCidrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkManagerIpamPoolStaticCidr)(nil)).Elem()
}

func (o NetworkManagerIpamPoolStaticCidrOutput) ToNetworkManagerIpamPoolStaticCidrOutput() NetworkManagerIpamPoolStaticCidrOutput {
	return o
}

func (o NetworkManagerIpamPoolStaticCidrOutput) ToNetworkManagerIpamPoolStaticCidrOutputWithContext(ctx context.Context) NetworkManagerIpamPoolStaticCidrOutput {
	return o
}

// Specifies a list of IPv4 or IPv6 IP address prefixes which will be allocated to the Static CIDR.
//
// > **Note:** Exactly one of `addressPrefixes` or `numberOfIpAddressesToAllocate` must be specified.
func (o NetworkManagerIpamPoolStaticCidrOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkManagerIpamPoolStaticCidr) pulumi.StringArrayOutput { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// The ID of the Network Manager IP Address Management (IPAM) Pool. Changing this forces a new Network Manager IPAM Pool Static CIDR to be created.
func (o NetworkManagerIpamPoolStaticCidrOutput) IpamPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerIpamPoolStaticCidr) pulumi.StringOutput { return v.IpamPoolId }).(pulumi.StringOutput)
}

// The name which should be used for this Network Manager IPAM Pool Static CIDR. Changing this forces a new Network Manager IPAM Pool Static CIDR to be created.
func (o NetworkManagerIpamPoolStaticCidrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerIpamPoolStaticCidr) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The number of IP addresses to allocate to the Static CIDR. The value must be a string representing a positive integer which is a positive power of 2, e.g., `"16"`.
//
// > **Note:** Exactly one of `addressPrefixes` or `numberOfIpAddressesToAllocate` must be specified.
func (o NetworkManagerIpamPoolStaticCidrOutput) NumberOfIpAddressesToAllocate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkManagerIpamPoolStaticCidr) pulumi.StringPtrOutput {
		return v.NumberOfIpAddressesToAllocate
	}).(pulumi.StringPtrOutput)
}

type NetworkManagerIpamPoolStaticCidrArrayOutput struct{ *pulumi.OutputState }

func (NetworkManagerIpamPoolStaticCidrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkManagerIpamPoolStaticCidr)(nil)).Elem()
}

func (o NetworkManagerIpamPoolStaticCidrArrayOutput) ToNetworkManagerIpamPoolStaticCidrArrayOutput() NetworkManagerIpamPoolStaticCidrArrayOutput {
	return o
}

func (o NetworkManagerIpamPoolStaticCidrArrayOutput) ToNetworkManagerIpamPoolStaticCidrArrayOutputWithContext(ctx context.Context) NetworkManagerIpamPoolStaticCidrArrayOutput {
	return o
}

func (o NetworkManagerIpamPoolStaticCidrArrayOutput) Index(i pulumi.IntInput) NetworkManagerIpamPoolStaticCidrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkManagerIpamPoolStaticCidr {
		return vs[0].([]*NetworkManagerIpamPoolStaticCidr)[vs[1].(int)]
	}).(NetworkManagerIpamPoolStaticCidrOutput)
}

type NetworkManagerIpamPoolStaticCidrMapOutput struct{ *pulumi.OutputState }

func (NetworkManagerIpamPoolStaticCidrMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkManagerIpamPoolStaticCidr)(nil)).Elem()
}

func (o NetworkManagerIpamPoolStaticCidrMapOutput) ToNetworkManagerIpamPoolStaticCidrMapOutput() NetworkManagerIpamPoolStaticCidrMapOutput {
	return o
}

func (o NetworkManagerIpamPoolStaticCidrMapOutput) ToNetworkManagerIpamPoolStaticCidrMapOutputWithContext(ctx context.Context) NetworkManagerIpamPoolStaticCidrMapOutput {
	return o
}

func (o NetworkManagerIpamPoolStaticCidrMapOutput) MapIndex(k pulumi.StringInput) NetworkManagerIpamPoolStaticCidrOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkManagerIpamPoolStaticCidr {
		return vs[0].(map[string]*NetworkManagerIpamPoolStaticCidr)[vs[1].(string)]
	}).(NetworkManagerIpamPoolStaticCidrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerIpamPoolStaticCidrInput)(nil)).Elem(), &NetworkManagerIpamPoolStaticCidr{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerIpamPoolStaticCidrArrayInput)(nil)).Elem(), NetworkManagerIpamPoolStaticCidrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerIpamPoolStaticCidrMapInput)(nil)).Elem(), NetworkManagerIpamPoolStaticCidrMap{})
	pulumi.RegisterOutputType(NetworkManagerIpamPoolStaticCidrOutput{})
	pulumi.RegisterOutputType(NetworkManagerIpamPoolStaticCidrArrayOutput{})
	pulumi.RegisterOutputType(NetworkManagerIpamPoolStaticCidrMapOutput{})
}
