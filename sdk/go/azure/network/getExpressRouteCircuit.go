// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing ExpressRoute circuit.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/network"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		example, err := network.LookupExpressRouteCircuit(ctx, &network.LookupExpressRouteCircuitArgs{
// 			ResourceGroupName: azurerm_resource_group.Example.Name,
// 			Name:              azurerm_express_route_circuit.Example.Name,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("expressRouteCircuitId", example.Id)
// 		ctx.Export("serviceKey", example.ServiceKey)
// 		return nil
// 	})
// }
// ```
func LookupExpressRouteCircuit(ctx *pulumi.Context, args *LookupExpressRouteCircuitArgs, opts ...pulumi.InvokeOption) (*LookupExpressRouteCircuitResult, error) {
	var rv LookupExpressRouteCircuitResult
	err := ctx.Invoke("azure:network/getExpressRouteCircuit:getExpressRouteCircuit", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getExpressRouteCircuit.
type LookupExpressRouteCircuitArgs struct {
	// The name of the ExpressRoute circuit.
	Name string `pulumi:"name"`
	// The Name of the Resource Group where the ExpressRoute circuit exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getExpressRouteCircuit.
type LookupExpressRouteCircuitResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Azure location where the ExpressRoute circuit exists
	Location string `pulumi:"location"`
	Name     string `pulumi:"name"`
	// A `peerings` block for the ExpressRoute circuit as documented below
	Peerings          []GetExpressRouteCircuitPeeringType `pulumi:"peerings"`
	ResourceGroupName string                              `pulumi:"resourceGroupName"`
	// The string needed by the service provider to provision the ExpressRoute circuit.
	ServiceKey string `pulumi:"serviceKey"`
	// A `serviceProviderProperties` block for the ExpressRoute circuit as documented below
	ServiceProviderProperties []GetExpressRouteCircuitServiceProviderProperty `pulumi:"serviceProviderProperties"`
	// The ExpressRoute circuit provisioning state from your chosen service provider. Possible values are "NotProvisioned", "Provisioning", "Provisioned", and "Deprovisioning".
	ServiceProviderProvisioningState string `pulumi:"serviceProviderProvisioningState"`
	// A `sku` block for the ExpressRoute circuit as documented below.
	Sku GetExpressRouteCircuitSku `pulumi:"sku"`
}
