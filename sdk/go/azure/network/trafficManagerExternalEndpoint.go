// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an External Endpoint within a Traffic Manager Profile.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleTrafficManagerProfile, err := network.NewTrafficManagerProfile(ctx, "exampleTrafficManagerProfile", &network.TrafficManagerProfileArgs{
//				ResourceGroupName:    exampleResourceGroup.Name,
//				TrafficRoutingMethod: pulumi.String("Weighted"),
//				DnsConfig: &network.TrafficManagerProfileDnsConfigArgs{
//					RelativeName: pulumi.String("example-profile"),
//					Ttl:          pulumi.Int(100),
//				},
//				MonitorConfig: &network.TrafficManagerProfileMonitorConfigArgs{
//					Protocol:                  pulumi.String("HTTP"),
//					Port:                      pulumi.Int(80),
//					Path:                      pulumi.String("/"),
//					IntervalInSeconds:         pulumi.Int(30),
//					TimeoutInSeconds:          pulumi.Int(9),
//					ToleratedNumberOfFailures: pulumi.Int(3),
//				},
//				Tags: pulumi.StringMap{
//					"environment": pulumi.String("Production"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = network.NewTrafficManagerExternalEndpoint(ctx, "exampleTrafficManagerExternalEndpoint", &network.TrafficManagerExternalEndpointArgs{
//				ProfileId: exampleTrafficManagerProfile.ID(),
//				Weight:    pulumi.Int(100),
//				Target:    pulumi.String("www.example.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// External Endpoints can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:network/trafficManagerExternalEndpoint:TrafficManagerExternalEndpoint example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example-group/providers/Microsoft.Network/trafficManagerProfiles/example-profile/ExternalEndpoints/example-endpoint
//
// ```
type TrafficManagerExternalEndpoint struct {
	pulumi.CustomResourceState

	// One or more `customHeader` blocks as defined below.
	CustomHeaders TrafficManagerExternalEndpointCustomHeaderArrayOutput `pulumi:"customHeaders"`
	// Is the endpoint enabled? Defaults to `true`.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Specifies the Azure location of the Endpoint, this must be specified for Profiles using the `Performance` routing method.
	EndpointLocation pulumi.StringOutput `pulumi:"endpointLocation"`
	// A list of Geographic Regions used to distribute traffic, such as `WORLD`, `UK` or `DE`. The same location can't be specified in two endpoints. [See the Geographic Hierarchies documentation for more information](https://docs.microsoft.com/rest/api/trafficmanager/geographichierarchies/getdefault).
	GeoMappings pulumi.StringArrayOutput `pulumi:"geoMappings"`
	// The name of the External Endpoint. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the priority of this Endpoint, this must be specified for Profiles using the `Priority` traffic routing method. Supports values between 1 and 1000, with no Endpoints sharing the same value. If omitted the value will be computed in order of creation.
	Priority pulumi.IntOutput `pulumi:"priority"`
	// The ID of the Traffic Manager Profile that this External Endpoint should be created within. Changing this forces a new resource to be created.
	ProfileId pulumi.StringOutput `pulumi:"profileId"`
	// One or more `subnet` blocks as defined below. Changing this forces a new resource to be created.
	Subnets TrafficManagerExternalEndpointSubnetArrayOutput `pulumi:"subnets"`
	// The FQDN DNS name of the target.
	Target pulumi.StringOutput `pulumi:"target"`
	// Specifies how much traffic should be distributed to this endpoint, this must be specified for Profiles using the Weighted traffic routing method. Valid values are between `1` and `1000`.
	Weight pulumi.IntOutput `pulumi:"weight"`
}

// NewTrafficManagerExternalEndpoint registers a new resource with the given unique name, arguments, and options.
func NewTrafficManagerExternalEndpoint(ctx *pulumi.Context,
	name string, args *TrafficManagerExternalEndpointArgs, opts ...pulumi.ResourceOption) (*TrafficManagerExternalEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProfileId == nil {
		return nil, errors.New("invalid value for required argument 'ProfileId'")
	}
	if args.Target == nil {
		return nil, errors.New("invalid value for required argument 'Target'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TrafficManagerExternalEndpoint
	err := ctx.RegisterResource("azure:network/trafficManagerExternalEndpoint:TrafficManagerExternalEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTrafficManagerExternalEndpoint gets an existing TrafficManagerExternalEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTrafficManagerExternalEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TrafficManagerExternalEndpointState, opts ...pulumi.ResourceOption) (*TrafficManagerExternalEndpoint, error) {
	var resource TrafficManagerExternalEndpoint
	err := ctx.ReadResource("azure:network/trafficManagerExternalEndpoint:TrafficManagerExternalEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TrafficManagerExternalEndpoint resources.
type trafficManagerExternalEndpointState struct {
	// One or more `customHeader` blocks as defined below.
	CustomHeaders []TrafficManagerExternalEndpointCustomHeader `pulumi:"customHeaders"`
	// Is the endpoint enabled? Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// Specifies the Azure location of the Endpoint, this must be specified for Profiles using the `Performance` routing method.
	EndpointLocation *string `pulumi:"endpointLocation"`
	// A list of Geographic Regions used to distribute traffic, such as `WORLD`, `UK` or `DE`. The same location can't be specified in two endpoints. [See the Geographic Hierarchies documentation for more information](https://docs.microsoft.com/rest/api/trafficmanager/geographichierarchies/getdefault).
	GeoMappings []string `pulumi:"geoMappings"`
	// The name of the External Endpoint. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the priority of this Endpoint, this must be specified for Profiles using the `Priority` traffic routing method. Supports values between 1 and 1000, with no Endpoints sharing the same value. If omitted the value will be computed in order of creation.
	Priority *int `pulumi:"priority"`
	// The ID of the Traffic Manager Profile that this External Endpoint should be created within. Changing this forces a new resource to be created.
	ProfileId *string `pulumi:"profileId"`
	// One or more `subnet` blocks as defined below. Changing this forces a new resource to be created.
	Subnets []TrafficManagerExternalEndpointSubnet `pulumi:"subnets"`
	// The FQDN DNS name of the target.
	Target *string `pulumi:"target"`
	// Specifies how much traffic should be distributed to this endpoint, this must be specified for Profiles using the Weighted traffic routing method. Valid values are between `1` and `1000`.
	Weight *int `pulumi:"weight"`
}

type TrafficManagerExternalEndpointState struct {
	// One or more `customHeader` blocks as defined below.
	CustomHeaders TrafficManagerExternalEndpointCustomHeaderArrayInput
	// Is the endpoint enabled? Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	// Specifies the Azure location of the Endpoint, this must be specified for Profiles using the `Performance` routing method.
	EndpointLocation pulumi.StringPtrInput
	// A list of Geographic Regions used to distribute traffic, such as `WORLD`, `UK` or `DE`. The same location can't be specified in two endpoints. [See the Geographic Hierarchies documentation for more information](https://docs.microsoft.com/rest/api/trafficmanager/geographichierarchies/getdefault).
	GeoMappings pulumi.StringArrayInput
	// The name of the External Endpoint. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the priority of this Endpoint, this must be specified for Profiles using the `Priority` traffic routing method. Supports values between 1 and 1000, with no Endpoints sharing the same value. If omitted the value will be computed in order of creation.
	Priority pulumi.IntPtrInput
	// The ID of the Traffic Manager Profile that this External Endpoint should be created within. Changing this forces a new resource to be created.
	ProfileId pulumi.StringPtrInput
	// One or more `subnet` blocks as defined below. Changing this forces a new resource to be created.
	Subnets TrafficManagerExternalEndpointSubnetArrayInput
	// The FQDN DNS name of the target.
	Target pulumi.StringPtrInput
	// Specifies how much traffic should be distributed to this endpoint, this must be specified for Profiles using the Weighted traffic routing method. Valid values are between `1` and `1000`.
	Weight pulumi.IntPtrInput
}

func (TrafficManagerExternalEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*trafficManagerExternalEndpointState)(nil)).Elem()
}

type trafficManagerExternalEndpointArgs struct {
	// One or more `customHeader` blocks as defined below.
	CustomHeaders []TrafficManagerExternalEndpointCustomHeader `pulumi:"customHeaders"`
	// Is the endpoint enabled? Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// Specifies the Azure location of the Endpoint, this must be specified for Profiles using the `Performance` routing method.
	EndpointLocation *string `pulumi:"endpointLocation"`
	// A list of Geographic Regions used to distribute traffic, such as `WORLD`, `UK` or `DE`. The same location can't be specified in two endpoints. [See the Geographic Hierarchies documentation for more information](https://docs.microsoft.com/rest/api/trafficmanager/geographichierarchies/getdefault).
	GeoMappings []string `pulumi:"geoMappings"`
	// The name of the External Endpoint. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the priority of this Endpoint, this must be specified for Profiles using the `Priority` traffic routing method. Supports values between 1 and 1000, with no Endpoints sharing the same value. If omitted the value will be computed in order of creation.
	Priority *int `pulumi:"priority"`
	// The ID of the Traffic Manager Profile that this External Endpoint should be created within. Changing this forces a new resource to be created.
	ProfileId string `pulumi:"profileId"`
	// One or more `subnet` blocks as defined below. Changing this forces a new resource to be created.
	Subnets []TrafficManagerExternalEndpointSubnet `pulumi:"subnets"`
	// The FQDN DNS name of the target.
	Target string `pulumi:"target"`
	// Specifies how much traffic should be distributed to this endpoint, this must be specified for Profiles using the Weighted traffic routing method. Valid values are between `1` and `1000`.
	Weight *int `pulumi:"weight"`
}

// The set of arguments for constructing a TrafficManagerExternalEndpoint resource.
type TrafficManagerExternalEndpointArgs struct {
	// One or more `customHeader` blocks as defined below.
	CustomHeaders TrafficManagerExternalEndpointCustomHeaderArrayInput
	// Is the endpoint enabled? Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	// Specifies the Azure location of the Endpoint, this must be specified for Profiles using the `Performance` routing method.
	EndpointLocation pulumi.StringPtrInput
	// A list of Geographic Regions used to distribute traffic, such as `WORLD`, `UK` or `DE`. The same location can't be specified in two endpoints. [See the Geographic Hierarchies documentation for more information](https://docs.microsoft.com/rest/api/trafficmanager/geographichierarchies/getdefault).
	GeoMappings pulumi.StringArrayInput
	// The name of the External Endpoint. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the priority of this Endpoint, this must be specified for Profiles using the `Priority` traffic routing method. Supports values between 1 and 1000, with no Endpoints sharing the same value. If omitted the value will be computed in order of creation.
	Priority pulumi.IntPtrInput
	// The ID of the Traffic Manager Profile that this External Endpoint should be created within. Changing this forces a new resource to be created.
	ProfileId pulumi.StringInput
	// One or more `subnet` blocks as defined below. Changing this forces a new resource to be created.
	Subnets TrafficManagerExternalEndpointSubnetArrayInput
	// The FQDN DNS name of the target.
	Target pulumi.StringInput
	// Specifies how much traffic should be distributed to this endpoint, this must be specified for Profiles using the Weighted traffic routing method. Valid values are between `1` and `1000`.
	Weight pulumi.IntPtrInput
}

func (TrafficManagerExternalEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*trafficManagerExternalEndpointArgs)(nil)).Elem()
}

type TrafficManagerExternalEndpointInput interface {
	pulumi.Input

	ToTrafficManagerExternalEndpointOutput() TrafficManagerExternalEndpointOutput
	ToTrafficManagerExternalEndpointOutputWithContext(ctx context.Context) TrafficManagerExternalEndpointOutput
}

func (*TrafficManagerExternalEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficManagerExternalEndpoint)(nil)).Elem()
}

func (i *TrafficManagerExternalEndpoint) ToTrafficManagerExternalEndpointOutput() TrafficManagerExternalEndpointOutput {
	return i.ToTrafficManagerExternalEndpointOutputWithContext(context.Background())
}

func (i *TrafficManagerExternalEndpoint) ToTrafficManagerExternalEndpointOutputWithContext(ctx context.Context) TrafficManagerExternalEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficManagerExternalEndpointOutput)
}

// TrafficManagerExternalEndpointArrayInput is an input type that accepts TrafficManagerExternalEndpointArray and TrafficManagerExternalEndpointArrayOutput values.
// You can construct a concrete instance of `TrafficManagerExternalEndpointArrayInput` via:
//
//	TrafficManagerExternalEndpointArray{ TrafficManagerExternalEndpointArgs{...} }
type TrafficManagerExternalEndpointArrayInput interface {
	pulumi.Input

	ToTrafficManagerExternalEndpointArrayOutput() TrafficManagerExternalEndpointArrayOutput
	ToTrafficManagerExternalEndpointArrayOutputWithContext(context.Context) TrafficManagerExternalEndpointArrayOutput
}

type TrafficManagerExternalEndpointArray []TrafficManagerExternalEndpointInput

func (TrafficManagerExternalEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TrafficManagerExternalEndpoint)(nil)).Elem()
}

func (i TrafficManagerExternalEndpointArray) ToTrafficManagerExternalEndpointArrayOutput() TrafficManagerExternalEndpointArrayOutput {
	return i.ToTrafficManagerExternalEndpointArrayOutputWithContext(context.Background())
}

func (i TrafficManagerExternalEndpointArray) ToTrafficManagerExternalEndpointArrayOutputWithContext(ctx context.Context) TrafficManagerExternalEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficManagerExternalEndpointArrayOutput)
}

// TrafficManagerExternalEndpointMapInput is an input type that accepts TrafficManagerExternalEndpointMap and TrafficManagerExternalEndpointMapOutput values.
// You can construct a concrete instance of `TrafficManagerExternalEndpointMapInput` via:
//
//	TrafficManagerExternalEndpointMap{ "key": TrafficManagerExternalEndpointArgs{...} }
type TrafficManagerExternalEndpointMapInput interface {
	pulumi.Input

	ToTrafficManagerExternalEndpointMapOutput() TrafficManagerExternalEndpointMapOutput
	ToTrafficManagerExternalEndpointMapOutputWithContext(context.Context) TrafficManagerExternalEndpointMapOutput
}

type TrafficManagerExternalEndpointMap map[string]TrafficManagerExternalEndpointInput

func (TrafficManagerExternalEndpointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TrafficManagerExternalEndpoint)(nil)).Elem()
}

func (i TrafficManagerExternalEndpointMap) ToTrafficManagerExternalEndpointMapOutput() TrafficManagerExternalEndpointMapOutput {
	return i.ToTrafficManagerExternalEndpointMapOutputWithContext(context.Background())
}

func (i TrafficManagerExternalEndpointMap) ToTrafficManagerExternalEndpointMapOutputWithContext(ctx context.Context) TrafficManagerExternalEndpointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficManagerExternalEndpointMapOutput)
}

type TrafficManagerExternalEndpointOutput struct{ *pulumi.OutputState }

func (TrafficManagerExternalEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficManagerExternalEndpoint)(nil)).Elem()
}

func (o TrafficManagerExternalEndpointOutput) ToTrafficManagerExternalEndpointOutput() TrafficManagerExternalEndpointOutput {
	return o
}

func (o TrafficManagerExternalEndpointOutput) ToTrafficManagerExternalEndpointOutputWithContext(ctx context.Context) TrafficManagerExternalEndpointOutput {
	return o
}

// One or more `customHeader` blocks as defined below.
func (o TrafficManagerExternalEndpointOutput) CustomHeaders() TrafficManagerExternalEndpointCustomHeaderArrayOutput {
	return o.ApplyT(func(v *TrafficManagerExternalEndpoint) TrafficManagerExternalEndpointCustomHeaderArrayOutput {
		return v.CustomHeaders
	}).(TrafficManagerExternalEndpointCustomHeaderArrayOutput)
}

// Is the endpoint enabled? Defaults to `true`.
func (o TrafficManagerExternalEndpointOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TrafficManagerExternalEndpoint) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Specifies the Azure location of the Endpoint, this must be specified for Profiles using the `Performance` routing method.
func (o TrafficManagerExternalEndpointOutput) EndpointLocation() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficManagerExternalEndpoint) pulumi.StringOutput { return v.EndpointLocation }).(pulumi.StringOutput)
}

// A list of Geographic Regions used to distribute traffic, such as `WORLD`, `UK` or `DE`. The same location can't be specified in two endpoints. [See the Geographic Hierarchies documentation for more information](https://docs.microsoft.com/rest/api/trafficmanager/geographichierarchies/getdefault).
func (o TrafficManagerExternalEndpointOutput) GeoMappings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TrafficManagerExternalEndpoint) pulumi.StringArrayOutput { return v.GeoMappings }).(pulumi.StringArrayOutput)
}

// The name of the External Endpoint. Changing this forces a new resource to be created.
func (o TrafficManagerExternalEndpointOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficManagerExternalEndpoint) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the priority of this Endpoint, this must be specified for Profiles using the `Priority` traffic routing method. Supports values between 1 and 1000, with no Endpoints sharing the same value. If omitted the value will be computed in order of creation.
func (o TrafficManagerExternalEndpointOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v *TrafficManagerExternalEndpoint) pulumi.IntOutput { return v.Priority }).(pulumi.IntOutput)
}

// The ID of the Traffic Manager Profile that this External Endpoint should be created within. Changing this forces a new resource to be created.
func (o TrafficManagerExternalEndpointOutput) ProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficManagerExternalEndpoint) pulumi.StringOutput { return v.ProfileId }).(pulumi.StringOutput)
}

// One or more `subnet` blocks as defined below. Changing this forces a new resource to be created.
func (o TrafficManagerExternalEndpointOutput) Subnets() TrafficManagerExternalEndpointSubnetArrayOutput {
	return o.ApplyT(func(v *TrafficManagerExternalEndpoint) TrafficManagerExternalEndpointSubnetArrayOutput {
		return v.Subnets
	}).(TrafficManagerExternalEndpointSubnetArrayOutput)
}

// The FQDN DNS name of the target.
func (o TrafficManagerExternalEndpointOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficManagerExternalEndpoint) pulumi.StringOutput { return v.Target }).(pulumi.StringOutput)
}

// Specifies how much traffic should be distributed to this endpoint, this must be specified for Profiles using the Weighted traffic routing method. Valid values are between `1` and `1000`.
func (o TrafficManagerExternalEndpointOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v *TrafficManagerExternalEndpoint) pulumi.IntOutput { return v.Weight }).(pulumi.IntOutput)
}

type TrafficManagerExternalEndpointArrayOutput struct{ *pulumi.OutputState }

func (TrafficManagerExternalEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TrafficManagerExternalEndpoint)(nil)).Elem()
}

func (o TrafficManagerExternalEndpointArrayOutput) ToTrafficManagerExternalEndpointArrayOutput() TrafficManagerExternalEndpointArrayOutput {
	return o
}

func (o TrafficManagerExternalEndpointArrayOutput) ToTrafficManagerExternalEndpointArrayOutputWithContext(ctx context.Context) TrafficManagerExternalEndpointArrayOutput {
	return o
}

func (o TrafficManagerExternalEndpointArrayOutput) Index(i pulumi.IntInput) TrafficManagerExternalEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TrafficManagerExternalEndpoint {
		return vs[0].([]*TrafficManagerExternalEndpoint)[vs[1].(int)]
	}).(TrafficManagerExternalEndpointOutput)
}

type TrafficManagerExternalEndpointMapOutput struct{ *pulumi.OutputState }

func (TrafficManagerExternalEndpointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TrafficManagerExternalEndpoint)(nil)).Elem()
}

func (o TrafficManagerExternalEndpointMapOutput) ToTrafficManagerExternalEndpointMapOutput() TrafficManagerExternalEndpointMapOutput {
	return o
}

func (o TrafficManagerExternalEndpointMapOutput) ToTrafficManagerExternalEndpointMapOutputWithContext(ctx context.Context) TrafficManagerExternalEndpointMapOutput {
	return o
}

func (o TrafficManagerExternalEndpointMapOutput) MapIndex(k pulumi.StringInput) TrafficManagerExternalEndpointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TrafficManagerExternalEndpoint {
		return vs[0].(map[string]*TrafficManagerExternalEndpoint)[vs[1].(string)]
	}).(TrafficManagerExternalEndpointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficManagerExternalEndpointInput)(nil)).Elem(), &TrafficManagerExternalEndpoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficManagerExternalEndpointArrayInput)(nil)).Elem(), TrafficManagerExternalEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficManagerExternalEndpointMapInput)(nil)).Elem(), TrafficManagerExternalEndpointMap{})
	pulumi.RegisterOutputType(TrafficManagerExternalEndpointOutput{})
	pulumi.RegisterOutputType(TrafficManagerExternalEndpointArrayOutput{})
	pulumi.RegisterOutputType(TrafficManagerExternalEndpointMapOutput{})
}
