// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages a Network Rule Collection within an Azure Firewall.
//
// ## Import
//
// Azure Firewall Network Rule Collections can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:network/firewallNetworkRuleCollection:FirewallNetworkRuleCollection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/azureFirewalls/myfirewall/networkRuleCollections/mycollection
//
// ```
type FirewallNetworkRuleCollection struct {
	pulumi.CustomResourceState

	// Specifies the action the rule will apply to matching traffic. Possible values are `Allow` and `Deny`.
	Action pulumi.StringOutput `pulumi:"action"`
	// Specifies the name of the Firewall in which the Network Rule Collection should be created. Changing this forces a new resource to be created.
	AzureFirewallName pulumi.StringOutput `pulumi:"azureFirewallName"`
	// Specifies the name of the Network Rule Collection which must be unique within the Firewall. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the priority of the rule collection. Possible values are between `100` - `65000`.
	Priority pulumi.IntOutput `pulumi:"priority"`
	// Specifies the name of the Resource Group in which the Firewall exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// One or more `rule` blocks as defined below.
	Rules FirewallNetworkRuleCollectionRuleArrayOutput `pulumi:"rules"`
}

// NewFirewallNetworkRuleCollection registers a new resource with the given unique name, arguments, and options.
func NewFirewallNetworkRuleCollection(ctx *pulumi.Context,
	name string, args *FirewallNetworkRuleCollectionArgs, opts ...pulumi.ResourceOption) (*FirewallNetworkRuleCollection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Action == nil {
		return nil, errors.New("invalid value for required argument 'Action'")
	}
	if args.AzureFirewallName == nil {
		return nil, errors.New("invalid value for required argument 'AzureFirewallName'")
	}
	if args.Priority == nil {
		return nil, errors.New("invalid value for required argument 'Priority'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Rules == nil {
		return nil, errors.New("invalid value for required argument 'Rules'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallNetworkRuleCollection
	err := ctx.RegisterResource("azure:network/firewallNetworkRuleCollection:FirewallNetworkRuleCollection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallNetworkRuleCollection gets an existing FirewallNetworkRuleCollection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallNetworkRuleCollection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallNetworkRuleCollectionState, opts ...pulumi.ResourceOption) (*FirewallNetworkRuleCollection, error) {
	var resource FirewallNetworkRuleCollection
	err := ctx.ReadResource("azure:network/firewallNetworkRuleCollection:FirewallNetworkRuleCollection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallNetworkRuleCollection resources.
type firewallNetworkRuleCollectionState struct {
	// Specifies the action the rule will apply to matching traffic. Possible values are `Allow` and `Deny`.
	Action *string `pulumi:"action"`
	// Specifies the name of the Firewall in which the Network Rule Collection should be created. Changing this forces a new resource to be created.
	AzureFirewallName *string `pulumi:"azureFirewallName"`
	// Specifies the name of the Network Rule Collection which must be unique within the Firewall. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the priority of the rule collection. Possible values are between `100` - `65000`.
	Priority *int `pulumi:"priority"`
	// Specifies the name of the Resource Group in which the Firewall exists. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// One or more `rule` blocks as defined below.
	Rules []FirewallNetworkRuleCollectionRule `pulumi:"rules"`
}

type FirewallNetworkRuleCollectionState struct {
	// Specifies the action the rule will apply to matching traffic. Possible values are `Allow` and `Deny`.
	Action pulumi.StringPtrInput
	// Specifies the name of the Firewall in which the Network Rule Collection should be created. Changing this forces a new resource to be created.
	AzureFirewallName pulumi.StringPtrInput
	// Specifies the name of the Network Rule Collection which must be unique within the Firewall. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the priority of the rule collection. Possible values are between `100` - `65000`.
	Priority pulumi.IntPtrInput
	// Specifies the name of the Resource Group in which the Firewall exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// One or more `rule` blocks as defined below.
	Rules FirewallNetworkRuleCollectionRuleArrayInput
}

func (FirewallNetworkRuleCollectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallNetworkRuleCollectionState)(nil)).Elem()
}

type firewallNetworkRuleCollectionArgs struct {
	// Specifies the action the rule will apply to matching traffic. Possible values are `Allow` and `Deny`.
	Action string `pulumi:"action"`
	// Specifies the name of the Firewall in which the Network Rule Collection should be created. Changing this forces a new resource to be created.
	AzureFirewallName string `pulumi:"azureFirewallName"`
	// Specifies the name of the Network Rule Collection which must be unique within the Firewall. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the priority of the rule collection. Possible values are between `100` - `65000`.
	Priority int `pulumi:"priority"`
	// Specifies the name of the Resource Group in which the Firewall exists. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// One or more `rule` blocks as defined below.
	Rules []FirewallNetworkRuleCollectionRule `pulumi:"rules"`
}

// The set of arguments for constructing a FirewallNetworkRuleCollection resource.
type FirewallNetworkRuleCollectionArgs struct {
	// Specifies the action the rule will apply to matching traffic. Possible values are `Allow` and `Deny`.
	Action pulumi.StringInput
	// Specifies the name of the Firewall in which the Network Rule Collection should be created. Changing this forces a new resource to be created.
	AzureFirewallName pulumi.StringInput
	// Specifies the name of the Network Rule Collection which must be unique within the Firewall. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the priority of the rule collection. Possible values are between `100` - `65000`.
	Priority pulumi.IntInput
	// Specifies the name of the Resource Group in which the Firewall exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// One or more `rule` blocks as defined below.
	Rules FirewallNetworkRuleCollectionRuleArrayInput
}

func (FirewallNetworkRuleCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallNetworkRuleCollectionArgs)(nil)).Elem()
}

type FirewallNetworkRuleCollectionInput interface {
	pulumi.Input

	ToFirewallNetworkRuleCollectionOutput() FirewallNetworkRuleCollectionOutput
	ToFirewallNetworkRuleCollectionOutputWithContext(ctx context.Context) FirewallNetworkRuleCollectionOutput
}

func (*FirewallNetworkRuleCollection) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallNetworkRuleCollection)(nil)).Elem()
}

func (i *FirewallNetworkRuleCollection) ToFirewallNetworkRuleCollectionOutput() FirewallNetworkRuleCollectionOutput {
	return i.ToFirewallNetworkRuleCollectionOutputWithContext(context.Background())
}

func (i *FirewallNetworkRuleCollection) ToFirewallNetworkRuleCollectionOutputWithContext(ctx context.Context) FirewallNetworkRuleCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallNetworkRuleCollectionOutput)
}

func (i *FirewallNetworkRuleCollection) ToOutput(ctx context.Context) pulumix.Output[*FirewallNetworkRuleCollection] {
	return pulumix.Output[*FirewallNetworkRuleCollection]{
		OutputState: i.ToFirewallNetworkRuleCollectionOutputWithContext(ctx).OutputState,
	}
}

// FirewallNetworkRuleCollectionArrayInput is an input type that accepts FirewallNetworkRuleCollectionArray and FirewallNetworkRuleCollectionArrayOutput values.
// You can construct a concrete instance of `FirewallNetworkRuleCollectionArrayInput` via:
//
//	FirewallNetworkRuleCollectionArray{ FirewallNetworkRuleCollectionArgs{...} }
type FirewallNetworkRuleCollectionArrayInput interface {
	pulumi.Input

	ToFirewallNetworkRuleCollectionArrayOutput() FirewallNetworkRuleCollectionArrayOutput
	ToFirewallNetworkRuleCollectionArrayOutputWithContext(context.Context) FirewallNetworkRuleCollectionArrayOutput
}

type FirewallNetworkRuleCollectionArray []FirewallNetworkRuleCollectionInput

func (FirewallNetworkRuleCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallNetworkRuleCollection)(nil)).Elem()
}

func (i FirewallNetworkRuleCollectionArray) ToFirewallNetworkRuleCollectionArrayOutput() FirewallNetworkRuleCollectionArrayOutput {
	return i.ToFirewallNetworkRuleCollectionArrayOutputWithContext(context.Background())
}

func (i FirewallNetworkRuleCollectionArray) ToFirewallNetworkRuleCollectionArrayOutputWithContext(ctx context.Context) FirewallNetworkRuleCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallNetworkRuleCollectionArrayOutput)
}

func (i FirewallNetworkRuleCollectionArray) ToOutput(ctx context.Context) pulumix.Output[[]*FirewallNetworkRuleCollection] {
	return pulumix.Output[[]*FirewallNetworkRuleCollection]{
		OutputState: i.ToFirewallNetworkRuleCollectionArrayOutputWithContext(ctx).OutputState,
	}
}

// FirewallNetworkRuleCollectionMapInput is an input type that accepts FirewallNetworkRuleCollectionMap and FirewallNetworkRuleCollectionMapOutput values.
// You can construct a concrete instance of `FirewallNetworkRuleCollectionMapInput` via:
//
//	FirewallNetworkRuleCollectionMap{ "key": FirewallNetworkRuleCollectionArgs{...} }
type FirewallNetworkRuleCollectionMapInput interface {
	pulumi.Input

	ToFirewallNetworkRuleCollectionMapOutput() FirewallNetworkRuleCollectionMapOutput
	ToFirewallNetworkRuleCollectionMapOutputWithContext(context.Context) FirewallNetworkRuleCollectionMapOutput
}

type FirewallNetworkRuleCollectionMap map[string]FirewallNetworkRuleCollectionInput

func (FirewallNetworkRuleCollectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallNetworkRuleCollection)(nil)).Elem()
}

func (i FirewallNetworkRuleCollectionMap) ToFirewallNetworkRuleCollectionMapOutput() FirewallNetworkRuleCollectionMapOutput {
	return i.ToFirewallNetworkRuleCollectionMapOutputWithContext(context.Background())
}

func (i FirewallNetworkRuleCollectionMap) ToFirewallNetworkRuleCollectionMapOutputWithContext(ctx context.Context) FirewallNetworkRuleCollectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallNetworkRuleCollectionMapOutput)
}

func (i FirewallNetworkRuleCollectionMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*FirewallNetworkRuleCollection] {
	return pulumix.Output[map[string]*FirewallNetworkRuleCollection]{
		OutputState: i.ToFirewallNetworkRuleCollectionMapOutputWithContext(ctx).OutputState,
	}
}

type FirewallNetworkRuleCollectionOutput struct{ *pulumi.OutputState }

func (FirewallNetworkRuleCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallNetworkRuleCollection)(nil)).Elem()
}

func (o FirewallNetworkRuleCollectionOutput) ToFirewallNetworkRuleCollectionOutput() FirewallNetworkRuleCollectionOutput {
	return o
}

func (o FirewallNetworkRuleCollectionOutput) ToFirewallNetworkRuleCollectionOutputWithContext(ctx context.Context) FirewallNetworkRuleCollectionOutput {
	return o
}

func (o FirewallNetworkRuleCollectionOutput) ToOutput(ctx context.Context) pulumix.Output[*FirewallNetworkRuleCollection] {
	return pulumix.Output[*FirewallNetworkRuleCollection]{
		OutputState: o.OutputState,
	}
}

// Specifies the action the rule will apply to matching traffic. Possible values are `Allow` and `Deny`.
func (o FirewallNetworkRuleCollectionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallNetworkRuleCollection) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// Specifies the name of the Firewall in which the Network Rule Collection should be created. Changing this forces a new resource to be created.
func (o FirewallNetworkRuleCollectionOutput) AzureFirewallName() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallNetworkRuleCollection) pulumi.StringOutput { return v.AzureFirewallName }).(pulumi.StringOutput)
}

// Specifies the name of the Network Rule Collection which must be unique within the Firewall. Changing this forces a new resource to be created.
func (o FirewallNetworkRuleCollectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallNetworkRuleCollection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the priority of the rule collection. Possible values are between `100` - `65000`.
func (o FirewallNetworkRuleCollectionOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v *FirewallNetworkRuleCollection) pulumi.IntOutput { return v.Priority }).(pulumi.IntOutput)
}

// Specifies the name of the Resource Group in which the Firewall exists. Changing this forces a new resource to be created.
func (o FirewallNetworkRuleCollectionOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallNetworkRuleCollection) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// One or more `rule` blocks as defined below.
func (o FirewallNetworkRuleCollectionOutput) Rules() FirewallNetworkRuleCollectionRuleArrayOutput {
	return o.ApplyT(func(v *FirewallNetworkRuleCollection) FirewallNetworkRuleCollectionRuleArrayOutput { return v.Rules }).(FirewallNetworkRuleCollectionRuleArrayOutput)
}

type FirewallNetworkRuleCollectionArrayOutput struct{ *pulumi.OutputState }

func (FirewallNetworkRuleCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallNetworkRuleCollection)(nil)).Elem()
}

func (o FirewallNetworkRuleCollectionArrayOutput) ToFirewallNetworkRuleCollectionArrayOutput() FirewallNetworkRuleCollectionArrayOutput {
	return o
}

func (o FirewallNetworkRuleCollectionArrayOutput) ToFirewallNetworkRuleCollectionArrayOutputWithContext(ctx context.Context) FirewallNetworkRuleCollectionArrayOutput {
	return o
}

func (o FirewallNetworkRuleCollectionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*FirewallNetworkRuleCollection] {
	return pulumix.Output[[]*FirewallNetworkRuleCollection]{
		OutputState: o.OutputState,
	}
}

func (o FirewallNetworkRuleCollectionArrayOutput) Index(i pulumi.IntInput) FirewallNetworkRuleCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallNetworkRuleCollection {
		return vs[0].([]*FirewallNetworkRuleCollection)[vs[1].(int)]
	}).(FirewallNetworkRuleCollectionOutput)
}

type FirewallNetworkRuleCollectionMapOutput struct{ *pulumi.OutputState }

func (FirewallNetworkRuleCollectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallNetworkRuleCollection)(nil)).Elem()
}

func (o FirewallNetworkRuleCollectionMapOutput) ToFirewallNetworkRuleCollectionMapOutput() FirewallNetworkRuleCollectionMapOutput {
	return o
}

func (o FirewallNetworkRuleCollectionMapOutput) ToFirewallNetworkRuleCollectionMapOutputWithContext(ctx context.Context) FirewallNetworkRuleCollectionMapOutput {
	return o
}

func (o FirewallNetworkRuleCollectionMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*FirewallNetworkRuleCollection] {
	return pulumix.Output[map[string]*FirewallNetworkRuleCollection]{
		OutputState: o.OutputState,
	}
}

func (o FirewallNetworkRuleCollectionMapOutput) MapIndex(k pulumi.StringInput) FirewallNetworkRuleCollectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallNetworkRuleCollection {
		return vs[0].(map[string]*FirewallNetworkRuleCollection)[vs[1].(string)]
	}).(FirewallNetworkRuleCollectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallNetworkRuleCollectionInput)(nil)).Elem(), &FirewallNetworkRuleCollection{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallNetworkRuleCollectionArrayInput)(nil)).Elem(), FirewallNetworkRuleCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallNetworkRuleCollectionMapInput)(nil)).Elem(), FirewallNetworkRuleCollectionMap{})
	pulumi.RegisterOutputType(FirewallNetworkRuleCollectionOutput{})
	pulumi.RegisterOutputType(FirewallNetworkRuleCollectionArrayOutput{})
	pulumi.RegisterOutputType(FirewallNetworkRuleCollectionMapOutput{})
}
