// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Network Function Azure Traffic Collector.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/networkfunction"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West US"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = networkfunction.NewAzureTrafficCollector(ctx, "exampleAzureTrafficCollector", &networkfunction.AzureTrafficCollectorArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          pulumi.String("West US"),
//				Tags: pulumi.StringMap{
//					"key": pulumi.String("value"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Network Function Azure Traffic Collector can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:network/functionAzureTrafficController:FunctionAzureTrafficController example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.NetworkFunction/azureTrafficCollectors/azureTrafficCollector1
//
// ```
//
// Deprecated: azure.network/functionazuretrafficcontroller.FunctionAzureTrafficController has been deprecated in favor of azure.networkfunction/azuretrafficcollector.AzureTrafficCollector
type FunctionAzureTrafficController struct {
	pulumi.CustomResourceState

	// The list of Resource IDs of collector policies.
	CollectorPolicyIds pulumi.StringArrayOutput `pulumi:"collectorPolicyIds"`
	// Specifies the Azure Region where the Network Function Azure Traffic Collector should exist. Changing this forces a new Network Function Azure Traffic Collector to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// Specifies the name which should be used for this Network Function Azure Traffic Collector. Changing this forces a new Network Function Azure Traffic Collector to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the name of the Resource Group where the Network Function Azure Traffic Collector should exist. Changing this forces a new Network Function Azure Traffic Collector to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A mapping of tags which should be assigned to the Network Function Azure Traffic Collector.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The Resource ID of virtual hub.
	VirtualHubIds pulumi.StringArrayOutput `pulumi:"virtualHubIds"`
}

// NewFunctionAzureTrafficController registers a new resource with the given unique name, arguments, and options.
func NewFunctionAzureTrafficController(ctx *pulumi.Context,
	name string, args *FunctionAzureTrafficControllerArgs, opts ...pulumi.ResourceOption) (*FunctionAzureTrafficController, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FunctionAzureTrafficController
	err := ctx.RegisterResource("azure:network/functionAzureTrafficController:FunctionAzureTrafficController", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFunctionAzureTrafficController gets an existing FunctionAzureTrafficController resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFunctionAzureTrafficController(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FunctionAzureTrafficControllerState, opts ...pulumi.ResourceOption) (*FunctionAzureTrafficController, error) {
	var resource FunctionAzureTrafficController
	err := ctx.ReadResource("azure:network/functionAzureTrafficController:FunctionAzureTrafficController", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FunctionAzureTrafficController resources.
type functionAzureTrafficControllerState struct {
	// The list of Resource IDs of collector policies.
	CollectorPolicyIds []string `pulumi:"collectorPolicyIds"`
	// Specifies the Azure Region where the Network Function Azure Traffic Collector should exist. Changing this forces a new Network Function Azure Traffic Collector to be created.
	Location *string `pulumi:"location"`
	// Specifies the name which should be used for this Network Function Azure Traffic Collector. Changing this forces a new Network Function Azure Traffic Collector to be created.
	Name *string `pulumi:"name"`
	// Specifies the name of the Resource Group where the Network Function Azure Traffic Collector should exist. Changing this forces a new Network Function Azure Traffic Collector to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A mapping of tags which should be assigned to the Network Function Azure Traffic Collector.
	Tags map[string]string `pulumi:"tags"`
	// The Resource ID of virtual hub.
	VirtualHubIds []string `pulumi:"virtualHubIds"`
}

type FunctionAzureTrafficControllerState struct {
	// The list of Resource IDs of collector policies.
	CollectorPolicyIds pulumi.StringArrayInput
	// Specifies the Azure Region where the Network Function Azure Traffic Collector should exist. Changing this forces a new Network Function Azure Traffic Collector to be created.
	Location pulumi.StringPtrInput
	// Specifies the name which should be used for this Network Function Azure Traffic Collector. Changing this forces a new Network Function Azure Traffic Collector to be created.
	Name pulumi.StringPtrInput
	// Specifies the name of the Resource Group where the Network Function Azure Traffic Collector should exist. Changing this forces a new Network Function Azure Traffic Collector to be created.
	ResourceGroupName pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Network Function Azure Traffic Collector.
	Tags pulumi.StringMapInput
	// The Resource ID of virtual hub.
	VirtualHubIds pulumi.StringArrayInput
}

func (FunctionAzureTrafficControllerState) ElementType() reflect.Type {
	return reflect.TypeOf((*functionAzureTrafficControllerState)(nil)).Elem()
}

type functionAzureTrafficControllerArgs struct {
	// Specifies the Azure Region where the Network Function Azure Traffic Collector should exist. Changing this forces a new Network Function Azure Traffic Collector to be created.
	Location *string `pulumi:"location"`
	// Specifies the name which should be used for this Network Function Azure Traffic Collector. Changing this forces a new Network Function Azure Traffic Collector to be created.
	Name *string `pulumi:"name"`
	// Specifies the name of the Resource Group where the Network Function Azure Traffic Collector should exist. Changing this forces a new Network Function Azure Traffic Collector to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A mapping of tags which should be assigned to the Network Function Azure Traffic Collector.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a FunctionAzureTrafficController resource.
type FunctionAzureTrafficControllerArgs struct {
	// Specifies the Azure Region where the Network Function Azure Traffic Collector should exist. Changing this forces a new Network Function Azure Traffic Collector to be created.
	Location pulumi.StringPtrInput
	// Specifies the name which should be used for this Network Function Azure Traffic Collector. Changing this forces a new Network Function Azure Traffic Collector to be created.
	Name pulumi.StringPtrInput
	// Specifies the name of the Resource Group where the Network Function Azure Traffic Collector should exist. Changing this forces a new Network Function Azure Traffic Collector to be created.
	ResourceGroupName pulumi.StringInput
	// A mapping of tags which should be assigned to the Network Function Azure Traffic Collector.
	Tags pulumi.StringMapInput
}

func (FunctionAzureTrafficControllerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*functionAzureTrafficControllerArgs)(nil)).Elem()
}

type FunctionAzureTrafficControllerInput interface {
	pulumi.Input

	ToFunctionAzureTrafficControllerOutput() FunctionAzureTrafficControllerOutput
	ToFunctionAzureTrafficControllerOutputWithContext(ctx context.Context) FunctionAzureTrafficControllerOutput
}

func (*FunctionAzureTrafficController) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAzureTrafficController)(nil)).Elem()
}

func (i *FunctionAzureTrafficController) ToFunctionAzureTrafficControllerOutput() FunctionAzureTrafficControllerOutput {
	return i.ToFunctionAzureTrafficControllerOutputWithContext(context.Background())
}

func (i *FunctionAzureTrafficController) ToFunctionAzureTrafficControllerOutputWithContext(ctx context.Context) FunctionAzureTrafficControllerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAzureTrafficControllerOutput)
}

// FunctionAzureTrafficControllerArrayInput is an input type that accepts FunctionAzureTrafficControllerArray and FunctionAzureTrafficControllerArrayOutput values.
// You can construct a concrete instance of `FunctionAzureTrafficControllerArrayInput` via:
//
//	FunctionAzureTrafficControllerArray{ FunctionAzureTrafficControllerArgs{...} }
type FunctionAzureTrafficControllerArrayInput interface {
	pulumi.Input

	ToFunctionAzureTrafficControllerArrayOutput() FunctionAzureTrafficControllerArrayOutput
	ToFunctionAzureTrafficControllerArrayOutputWithContext(context.Context) FunctionAzureTrafficControllerArrayOutput
}

type FunctionAzureTrafficControllerArray []FunctionAzureTrafficControllerInput

func (FunctionAzureTrafficControllerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FunctionAzureTrafficController)(nil)).Elem()
}

func (i FunctionAzureTrafficControllerArray) ToFunctionAzureTrafficControllerArrayOutput() FunctionAzureTrafficControllerArrayOutput {
	return i.ToFunctionAzureTrafficControllerArrayOutputWithContext(context.Background())
}

func (i FunctionAzureTrafficControllerArray) ToFunctionAzureTrafficControllerArrayOutputWithContext(ctx context.Context) FunctionAzureTrafficControllerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAzureTrafficControllerArrayOutput)
}

// FunctionAzureTrafficControllerMapInput is an input type that accepts FunctionAzureTrafficControllerMap and FunctionAzureTrafficControllerMapOutput values.
// You can construct a concrete instance of `FunctionAzureTrafficControllerMapInput` via:
//
//	FunctionAzureTrafficControllerMap{ "key": FunctionAzureTrafficControllerArgs{...} }
type FunctionAzureTrafficControllerMapInput interface {
	pulumi.Input

	ToFunctionAzureTrafficControllerMapOutput() FunctionAzureTrafficControllerMapOutput
	ToFunctionAzureTrafficControllerMapOutputWithContext(context.Context) FunctionAzureTrafficControllerMapOutput
}

type FunctionAzureTrafficControllerMap map[string]FunctionAzureTrafficControllerInput

func (FunctionAzureTrafficControllerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FunctionAzureTrafficController)(nil)).Elem()
}

func (i FunctionAzureTrafficControllerMap) ToFunctionAzureTrafficControllerMapOutput() FunctionAzureTrafficControllerMapOutput {
	return i.ToFunctionAzureTrafficControllerMapOutputWithContext(context.Background())
}

func (i FunctionAzureTrafficControllerMap) ToFunctionAzureTrafficControllerMapOutputWithContext(ctx context.Context) FunctionAzureTrafficControllerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionAzureTrafficControllerMapOutput)
}

type FunctionAzureTrafficControllerOutput struct{ *pulumi.OutputState }

func (FunctionAzureTrafficControllerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionAzureTrafficController)(nil)).Elem()
}

func (o FunctionAzureTrafficControllerOutput) ToFunctionAzureTrafficControllerOutput() FunctionAzureTrafficControllerOutput {
	return o
}

func (o FunctionAzureTrafficControllerOutput) ToFunctionAzureTrafficControllerOutputWithContext(ctx context.Context) FunctionAzureTrafficControllerOutput {
	return o
}

// The list of Resource IDs of collector policies.
func (o FunctionAzureTrafficControllerOutput) CollectorPolicyIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionAzureTrafficController) pulumi.StringArrayOutput { return v.CollectorPolicyIds }).(pulumi.StringArrayOutput)
}

// Specifies the Azure Region where the Network Function Azure Traffic Collector should exist. Changing this forces a new Network Function Azure Traffic Collector to be created.
func (o FunctionAzureTrafficControllerOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *FunctionAzureTrafficController) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Specifies the name which should be used for this Network Function Azure Traffic Collector. Changing this forces a new Network Function Azure Traffic Collector to be created.
func (o FunctionAzureTrafficControllerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FunctionAzureTrafficController) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the name of the Resource Group where the Network Function Azure Traffic Collector should exist. Changing this forces a new Network Function Azure Traffic Collector to be created.
func (o FunctionAzureTrafficControllerOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *FunctionAzureTrafficController) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A mapping of tags which should be assigned to the Network Function Azure Traffic Collector.
func (o FunctionAzureTrafficControllerOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FunctionAzureTrafficController) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The Resource ID of virtual hub.
func (o FunctionAzureTrafficControllerOutput) VirtualHubIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionAzureTrafficController) pulumi.StringArrayOutput { return v.VirtualHubIds }).(pulumi.StringArrayOutput)
}

type FunctionAzureTrafficControllerArrayOutput struct{ *pulumi.OutputState }

func (FunctionAzureTrafficControllerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FunctionAzureTrafficController)(nil)).Elem()
}

func (o FunctionAzureTrafficControllerArrayOutput) ToFunctionAzureTrafficControllerArrayOutput() FunctionAzureTrafficControllerArrayOutput {
	return o
}

func (o FunctionAzureTrafficControllerArrayOutput) ToFunctionAzureTrafficControllerArrayOutputWithContext(ctx context.Context) FunctionAzureTrafficControllerArrayOutput {
	return o
}

func (o FunctionAzureTrafficControllerArrayOutput) Index(i pulumi.IntInput) FunctionAzureTrafficControllerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FunctionAzureTrafficController {
		return vs[0].([]*FunctionAzureTrafficController)[vs[1].(int)]
	}).(FunctionAzureTrafficControllerOutput)
}

type FunctionAzureTrafficControllerMapOutput struct{ *pulumi.OutputState }

func (FunctionAzureTrafficControllerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FunctionAzureTrafficController)(nil)).Elem()
}

func (o FunctionAzureTrafficControllerMapOutput) ToFunctionAzureTrafficControllerMapOutput() FunctionAzureTrafficControllerMapOutput {
	return o
}

func (o FunctionAzureTrafficControllerMapOutput) ToFunctionAzureTrafficControllerMapOutputWithContext(ctx context.Context) FunctionAzureTrafficControllerMapOutput {
	return o
}

func (o FunctionAzureTrafficControllerMapOutput) MapIndex(k pulumi.StringInput) FunctionAzureTrafficControllerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FunctionAzureTrafficController {
		return vs[0].(map[string]*FunctionAzureTrafficController)[vs[1].(string)]
	}).(FunctionAzureTrafficControllerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionAzureTrafficControllerInput)(nil)).Elem(), &FunctionAzureTrafficController{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionAzureTrafficControllerArrayInput)(nil)).Elem(), FunctionAzureTrafficControllerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionAzureTrafficControllerMapInput)(nil)).Elem(), FunctionAzureTrafficControllerMap{})
	pulumi.RegisterOutputType(FunctionAzureTrafficControllerOutput{})
	pulumi.RegisterOutputType(FunctionAzureTrafficControllerArrayOutput{})
	pulumi.RegisterOutputType(FunctionAzureTrafficControllerMapOutput{})
}
