// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access the ID of a specified Traffic Manager Geographical Location within the Geographical Hierarchy.
//
// ## Example Usage
// ### World)
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/network"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		example, err := network.GetTrafficManager(ctx, &network.GetTrafficManagerArgs{
// 			Name: "World",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("locationCode", example.Id)
// 		return nil
// 	})
// }
// ```
func GetTrafficManager(ctx *pulumi.Context, args *GetTrafficManagerArgs, opts ...pulumi.InvokeOption) (*GetTrafficManagerResult, error) {
	var rv GetTrafficManagerResult
	err := ctx.Invoke("azure:network/getTrafficManager:getTrafficManager", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTrafficManager.
type GetTrafficManagerArgs struct {
	// Specifies the name of the Location, for example `World`, `Europe` or `Germany`.
	Name string `pulumi:"name"`
}

// A collection of values returned by getTrafficManager.
type GetTrafficManagerResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}
