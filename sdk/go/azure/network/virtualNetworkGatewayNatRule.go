// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Virtual Network Gateway Nat Rule.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resources"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "example", &network.VirtualNetworkArgs{
//				Name:              pulumi.String("example-vnet"),
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				AddressSpaces: pulumi.StringArray{
//					pulumi.String("10.0.0.0/16"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleSubnet, err := network.NewSubnet(ctx, "example", &network.SubnetArgs{
//				Name:               pulumi.String("GatewaySubnet"),
//				ResourceGroupName:  exampleResourceGroup.Name,
//				VirtualNetworkName: exampleVirtualNetwork.Name,
//				AddressPrefixes: pulumi.StringArray{
//					pulumi.String("10.0.1.0/24"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			examplePublicIp, err := network.NewPublicIp(ctx, "example", &network.PublicIpArgs{
//				Name:              pulumi.String("example-pip"),
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				AllocationMethod:  pulumi.String("Dynamic"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleVirtualNetworkGateway, err := network.NewVirtualNetworkGateway(ctx, "example", &network.VirtualNetworkGatewayArgs{
//				Name:              pulumi.String("example-vnetgw"),
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				Type:              pulumi.String("Vpn"),
//				VpnType:           pulumi.String("RouteBased"),
//				Sku:               pulumi.String("Basic"),
//				IpConfigurations: network.VirtualNetworkGatewayIpConfigurationArray{
//					&network.VirtualNetworkGatewayIpConfigurationArgs{
//						PublicIpAddressId:          examplePublicIp.ID(),
//						PrivateIpAddressAllocation: pulumi.String("Dynamic"),
//						SubnetId:                   exampleSubnet.ID(),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			example := network.LookupVirtualNetworkGatewayOutput(ctx, network.GetVirtualNetworkGatewayOutputArgs{
//				Name:              exampleVirtualNetworkGateway.Name,
//				ResourceGroupName: exampleVirtualNetworkGateway.ResourceGroupName,
//			}, nil)
//			_, err = network.NewVirtualNetworkGatewayNatRule(ctx, "example", &network.VirtualNetworkGatewayNatRuleArgs{
//				Name:              pulumi.String("example-vnetgwnatrule"),
//				ResourceGroupName: exampleResourceGroup.Name,
//				VirtualNetworkGatewayId: example.ApplyT(func(example network.GetVirtualNetworkGatewayResult) (*string, error) {
//					return &example.Id, nil
//				}).(pulumi.StringPtrOutput),
//				Mode: pulumi.String("EgressSnat"),
//				Type: pulumi.String("Dynamic"),
//				IpConfigurationId: example.ApplyT(func(example network.GetVirtualNetworkGatewayResult) (*string, error) {
//					return &example.IpConfigurations[0].Id, nil
//				}).(pulumi.StringPtrOutput),
//				ExternalMappings: network.VirtualNetworkGatewayNatRuleExternalMappingArray{
//					&network.VirtualNetworkGatewayNatRuleExternalMappingArgs{
//						AddressSpace: pulumi.String("10.2.0.0/26"),
//						PortRange:    pulumi.String("200"),
//					},
//				},
//				InternalMappings: network.VirtualNetworkGatewayNatRuleInternalMappingArray{
//					&network.VirtualNetworkGatewayNatRuleInternalMappingArgs{
//						AddressSpace: pulumi.String("10.4.0.0/26"),
//						PortRange:    pulumi.String("400"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Virtual Network Gateway Nat Rules can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:network/virtualNetworkGatewayNatRule:VirtualNetworkGatewayNatRule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.Network/virtualNetworkGateways/gw1/natRules/rule1
// ```
type VirtualNetworkGatewayNatRule struct {
	pulumi.CustomResourceState

	// One or more `externalMapping` blocks as documented below.
	ExternalMappings VirtualNetworkGatewayNatRuleExternalMappingArrayOutput `pulumi:"externalMappings"`
	// One or more `internalMapping` blocks as documented below.
	InternalMappings VirtualNetworkGatewayNatRuleInternalMappingArrayOutput `pulumi:"internalMappings"`
	// The ID of the IP Configuration this Virtual Network Gateway Nat Rule applies to.
	IpConfigurationId pulumi.StringPtrOutput `pulumi:"ipConfigurationId"`
	// The source Nat direction of the Virtual Network Gateway Nat. Possible values are `EgressSnat` and `IngressSnat`. Defaults to `EgressSnat`. Changing this forces a new resource to be created.
	Mode pulumi.StringPtrOutput `pulumi:"mode"`
	// The name which should be used for this Virtual Network Gateway Nat Rule. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Name of the Resource Group in which this Virtual Network Gateway Nat Rule should be created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The type of the Virtual Network Gateway Nat Rule. Possible values are `Dynamic` and `Static`. Defaults to `Static`. Changing this forces a new resource to be created.
	Type pulumi.StringPtrOutput `pulumi:"type"`
	// The ID of the Virtual Network Gateway that this Virtual Network Gateway Nat Rule belongs to. Changing this forces a new resource to be created.
	VirtualNetworkGatewayId pulumi.StringOutput `pulumi:"virtualNetworkGatewayId"`
}

// NewVirtualNetworkGatewayNatRule registers a new resource with the given unique name, arguments, and options.
func NewVirtualNetworkGatewayNatRule(ctx *pulumi.Context,
	name string, args *VirtualNetworkGatewayNatRuleArgs, opts ...pulumi.ResourceOption) (*VirtualNetworkGatewayNatRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ExternalMappings == nil {
		return nil, errors.New("invalid value for required argument 'ExternalMappings'")
	}
	if args.InternalMappings == nil {
		return nil, errors.New("invalid value for required argument 'InternalMappings'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.VirtualNetworkGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'VirtualNetworkGatewayId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VirtualNetworkGatewayNatRule
	err := ctx.RegisterResource("azure:network/virtualNetworkGatewayNatRule:VirtualNetworkGatewayNatRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVirtualNetworkGatewayNatRule gets an existing VirtualNetworkGatewayNatRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVirtualNetworkGatewayNatRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VirtualNetworkGatewayNatRuleState, opts ...pulumi.ResourceOption) (*VirtualNetworkGatewayNatRule, error) {
	var resource VirtualNetworkGatewayNatRule
	err := ctx.ReadResource("azure:network/virtualNetworkGatewayNatRule:VirtualNetworkGatewayNatRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VirtualNetworkGatewayNatRule resources.
type virtualNetworkGatewayNatRuleState struct {
	// One or more `externalMapping` blocks as documented below.
	ExternalMappings []VirtualNetworkGatewayNatRuleExternalMapping `pulumi:"externalMappings"`
	// One or more `internalMapping` blocks as documented below.
	InternalMappings []VirtualNetworkGatewayNatRuleInternalMapping `pulumi:"internalMappings"`
	// The ID of the IP Configuration this Virtual Network Gateway Nat Rule applies to.
	IpConfigurationId *string `pulumi:"ipConfigurationId"`
	// The source Nat direction of the Virtual Network Gateway Nat. Possible values are `EgressSnat` and `IngressSnat`. Defaults to `EgressSnat`. Changing this forces a new resource to be created.
	Mode *string `pulumi:"mode"`
	// The name which should be used for this Virtual Network Gateway Nat Rule. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The Name of the Resource Group in which this Virtual Network Gateway Nat Rule should be created. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The type of the Virtual Network Gateway Nat Rule. Possible values are `Dynamic` and `Static`. Defaults to `Static`. Changing this forces a new resource to be created.
	Type *string `pulumi:"type"`
	// The ID of the Virtual Network Gateway that this Virtual Network Gateway Nat Rule belongs to. Changing this forces a new resource to be created.
	VirtualNetworkGatewayId *string `pulumi:"virtualNetworkGatewayId"`
}

type VirtualNetworkGatewayNatRuleState struct {
	// One or more `externalMapping` blocks as documented below.
	ExternalMappings VirtualNetworkGatewayNatRuleExternalMappingArrayInput
	// One or more `internalMapping` blocks as documented below.
	InternalMappings VirtualNetworkGatewayNatRuleInternalMappingArrayInput
	// The ID of the IP Configuration this Virtual Network Gateway Nat Rule applies to.
	IpConfigurationId pulumi.StringPtrInput
	// The source Nat direction of the Virtual Network Gateway Nat. Possible values are `EgressSnat` and `IngressSnat`. Defaults to `EgressSnat`. Changing this forces a new resource to be created.
	Mode pulumi.StringPtrInput
	// The name which should be used for this Virtual Network Gateway Nat Rule. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The Name of the Resource Group in which this Virtual Network Gateway Nat Rule should be created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The type of the Virtual Network Gateway Nat Rule. Possible values are `Dynamic` and `Static`. Defaults to `Static`. Changing this forces a new resource to be created.
	Type pulumi.StringPtrInput
	// The ID of the Virtual Network Gateway that this Virtual Network Gateway Nat Rule belongs to. Changing this forces a new resource to be created.
	VirtualNetworkGatewayId pulumi.StringPtrInput
}

func (VirtualNetworkGatewayNatRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualNetworkGatewayNatRuleState)(nil)).Elem()
}

type virtualNetworkGatewayNatRuleArgs struct {
	// One or more `externalMapping` blocks as documented below.
	ExternalMappings []VirtualNetworkGatewayNatRuleExternalMapping `pulumi:"externalMappings"`
	// One or more `internalMapping` blocks as documented below.
	InternalMappings []VirtualNetworkGatewayNatRuleInternalMapping `pulumi:"internalMappings"`
	// The ID of the IP Configuration this Virtual Network Gateway Nat Rule applies to.
	IpConfigurationId *string `pulumi:"ipConfigurationId"`
	// The source Nat direction of the Virtual Network Gateway Nat. Possible values are `EgressSnat` and `IngressSnat`. Defaults to `EgressSnat`. Changing this forces a new resource to be created.
	Mode *string `pulumi:"mode"`
	// The name which should be used for this Virtual Network Gateway Nat Rule. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The Name of the Resource Group in which this Virtual Network Gateway Nat Rule should be created. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The type of the Virtual Network Gateway Nat Rule. Possible values are `Dynamic` and `Static`. Defaults to `Static`. Changing this forces a new resource to be created.
	Type *string `pulumi:"type"`
	// The ID of the Virtual Network Gateway that this Virtual Network Gateway Nat Rule belongs to. Changing this forces a new resource to be created.
	VirtualNetworkGatewayId string `pulumi:"virtualNetworkGatewayId"`
}

// The set of arguments for constructing a VirtualNetworkGatewayNatRule resource.
type VirtualNetworkGatewayNatRuleArgs struct {
	// One or more `externalMapping` blocks as documented below.
	ExternalMappings VirtualNetworkGatewayNatRuleExternalMappingArrayInput
	// One or more `internalMapping` blocks as documented below.
	InternalMappings VirtualNetworkGatewayNatRuleInternalMappingArrayInput
	// The ID of the IP Configuration this Virtual Network Gateway Nat Rule applies to.
	IpConfigurationId pulumi.StringPtrInput
	// The source Nat direction of the Virtual Network Gateway Nat. Possible values are `EgressSnat` and `IngressSnat`. Defaults to `EgressSnat`. Changing this forces a new resource to be created.
	Mode pulumi.StringPtrInput
	// The name which should be used for this Virtual Network Gateway Nat Rule. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The Name of the Resource Group in which this Virtual Network Gateway Nat Rule should be created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// The type of the Virtual Network Gateway Nat Rule. Possible values are `Dynamic` and `Static`. Defaults to `Static`. Changing this forces a new resource to be created.
	Type pulumi.StringPtrInput
	// The ID of the Virtual Network Gateway that this Virtual Network Gateway Nat Rule belongs to. Changing this forces a new resource to be created.
	VirtualNetworkGatewayId pulumi.StringInput
}

func (VirtualNetworkGatewayNatRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualNetworkGatewayNatRuleArgs)(nil)).Elem()
}

type VirtualNetworkGatewayNatRuleInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayNatRuleOutput() VirtualNetworkGatewayNatRuleOutput
	ToVirtualNetworkGatewayNatRuleOutputWithContext(ctx context.Context) VirtualNetworkGatewayNatRuleOutput
}

func (*VirtualNetworkGatewayNatRule) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayNatRule)(nil)).Elem()
}

func (i *VirtualNetworkGatewayNatRule) ToVirtualNetworkGatewayNatRuleOutput() VirtualNetworkGatewayNatRuleOutput {
	return i.ToVirtualNetworkGatewayNatRuleOutputWithContext(context.Background())
}

func (i *VirtualNetworkGatewayNatRule) ToVirtualNetworkGatewayNatRuleOutputWithContext(ctx context.Context) VirtualNetworkGatewayNatRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayNatRuleOutput)
}

// VirtualNetworkGatewayNatRuleArrayInput is an input type that accepts VirtualNetworkGatewayNatRuleArray and VirtualNetworkGatewayNatRuleArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayNatRuleArrayInput` via:
//
//	VirtualNetworkGatewayNatRuleArray{ VirtualNetworkGatewayNatRuleArgs{...} }
type VirtualNetworkGatewayNatRuleArrayInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayNatRuleArrayOutput() VirtualNetworkGatewayNatRuleArrayOutput
	ToVirtualNetworkGatewayNatRuleArrayOutputWithContext(context.Context) VirtualNetworkGatewayNatRuleArrayOutput
}

type VirtualNetworkGatewayNatRuleArray []VirtualNetworkGatewayNatRuleInput

func (VirtualNetworkGatewayNatRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VirtualNetworkGatewayNatRule)(nil)).Elem()
}

func (i VirtualNetworkGatewayNatRuleArray) ToVirtualNetworkGatewayNatRuleArrayOutput() VirtualNetworkGatewayNatRuleArrayOutput {
	return i.ToVirtualNetworkGatewayNatRuleArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayNatRuleArray) ToVirtualNetworkGatewayNatRuleArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayNatRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayNatRuleArrayOutput)
}

// VirtualNetworkGatewayNatRuleMapInput is an input type that accepts VirtualNetworkGatewayNatRuleMap and VirtualNetworkGatewayNatRuleMapOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayNatRuleMapInput` via:
//
//	VirtualNetworkGatewayNatRuleMap{ "key": VirtualNetworkGatewayNatRuleArgs{...} }
type VirtualNetworkGatewayNatRuleMapInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayNatRuleMapOutput() VirtualNetworkGatewayNatRuleMapOutput
	ToVirtualNetworkGatewayNatRuleMapOutputWithContext(context.Context) VirtualNetworkGatewayNatRuleMapOutput
}

type VirtualNetworkGatewayNatRuleMap map[string]VirtualNetworkGatewayNatRuleInput

func (VirtualNetworkGatewayNatRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VirtualNetworkGatewayNatRule)(nil)).Elem()
}

func (i VirtualNetworkGatewayNatRuleMap) ToVirtualNetworkGatewayNatRuleMapOutput() VirtualNetworkGatewayNatRuleMapOutput {
	return i.ToVirtualNetworkGatewayNatRuleMapOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayNatRuleMap) ToVirtualNetworkGatewayNatRuleMapOutputWithContext(ctx context.Context) VirtualNetworkGatewayNatRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayNatRuleMapOutput)
}

type VirtualNetworkGatewayNatRuleOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayNatRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayNatRule)(nil)).Elem()
}

func (o VirtualNetworkGatewayNatRuleOutput) ToVirtualNetworkGatewayNatRuleOutput() VirtualNetworkGatewayNatRuleOutput {
	return o
}

func (o VirtualNetworkGatewayNatRuleOutput) ToVirtualNetworkGatewayNatRuleOutputWithContext(ctx context.Context) VirtualNetworkGatewayNatRuleOutput {
	return o
}

// One or more `externalMapping` blocks as documented below.
func (o VirtualNetworkGatewayNatRuleOutput) ExternalMappings() VirtualNetworkGatewayNatRuleExternalMappingArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayNatRule) VirtualNetworkGatewayNatRuleExternalMappingArrayOutput {
		return v.ExternalMappings
	}).(VirtualNetworkGatewayNatRuleExternalMappingArrayOutput)
}

// One or more `internalMapping` blocks as documented below.
func (o VirtualNetworkGatewayNatRuleOutput) InternalMappings() VirtualNetworkGatewayNatRuleInternalMappingArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayNatRule) VirtualNetworkGatewayNatRuleInternalMappingArrayOutput {
		return v.InternalMappings
	}).(VirtualNetworkGatewayNatRuleInternalMappingArrayOutput)
}

// The ID of the IP Configuration this Virtual Network Gateway Nat Rule applies to.
func (o VirtualNetworkGatewayNatRuleOutput) IpConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayNatRule) pulumi.StringPtrOutput { return v.IpConfigurationId }).(pulumi.StringPtrOutput)
}

// The source Nat direction of the Virtual Network Gateway Nat. Possible values are `EgressSnat` and `IngressSnat`. Defaults to `EgressSnat`. Changing this forces a new resource to be created.
func (o VirtualNetworkGatewayNatRuleOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayNatRule) pulumi.StringPtrOutput { return v.Mode }).(pulumi.StringPtrOutput)
}

// The name which should be used for this Virtual Network Gateway Nat Rule. Changing this forces a new resource to be created.
func (o VirtualNetworkGatewayNatRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayNatRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Name of the Resource Group in which this Virtual Network Gateway Nat Rule should be created. Changing this forces a new resource to be created.
func (o VirtualNetworkGatewayNatRuleOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayNatRule) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The type of the Virtual Network Gateway Nat Rule. Possible values are `Dynamic` and `Static`. Defaults to `Static`. Changing this forces a new resource to be created.
func (o VirtualNetworkGatewayNatRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayNatRule) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

// The ID of the Virtual Network Gateway that this Virtual Network Gateway Nat Rule belongs to. Changing this forces a new resource to be created.
func (o VirtualNetworkGatewayNatRuleOutput) VirtualNetworkGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayNatRule) pulumi.StringOutput { return v.VirtualNetworkGatewayId }).(pulumi.StringOutput)
}

type VirtualNetworkGatewayNatRuleArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayNatRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VirtualNetworkGatewayNatRule)(nil)).Elem()
}

func (o VirtualNetworkGatewayNatRuleArrayOutput) ToVirtualNetworkGatewayNatRuleArrayOutput() VirtualNetworkGatewayNatRuleArrayOutput {
	return o
}

func (o VirtualNetworkGatewayNatRuleArrayOutput) ToVirtualNetworkGatewayNatRuleArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayNatRuleArrayOutput {
	return o
}

func (o VirtualNetworkGatewayNatRuleArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayNatRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VirtualNetworkGatewayNatRule {
		return vs[0].([]*VirtualNetworkGatewayNatRule)[vs[1].(int)]
	}).(VirtualNetworkGatewayNatRuleOutput)
}

type VirtualNetworkGatewayNatRuleMapOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayNatRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VirtualNetworkGatewayNatRule)(nil)).Elem()
}

func (o VirtualNetworkGatewayNatRuleMapOutput) ToVirtualNetworkGatewayNatRuleMapOutput() VirtualNetworkGatewayNatRuleMapOutput {
	return o
}

func (o VirtualNetworkGatewayNatRuleMapOutput) ToVirtualNetworkGatewayNatRuleMapOutputWithContext(ctx context.Context) VirtualNetworkGatewayNatRuleMapOutput {
	return o
}

func (o VirtualNetworkGatewayNatRuleMapOutput) MapIndex(k pulumi.StringInput) VirtualNetworkGatewayNatRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VirtualNetworkGatewayNatRule {
		return vs[0].(map[string]*VirtualNetworkGatewayNatRule)[vs[1].(string)]
	}).(VirtualNetworkGatewayNatRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayNatRuleInput)(nil)).Elem(), &VirtualNetworkGatewayNatRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayNatRuleArrayInput)(nil)).Elem(), VirtualNetworkGatewayNatRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayNatRuleMapInput)(nil)).Elem(), VirtualNetworkGatewayNatRuleMap{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayNatRuleOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayNatRuleArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayNatRuleMapOutput{})
}
