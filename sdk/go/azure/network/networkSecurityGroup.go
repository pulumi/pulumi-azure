// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a network security group that contains a list of network security rules.  Network security groups enable inbound or outbound traffic to be enabled or denied.
// 
// > **NOTE on Network Security Groups and Network Security Rules:** This provider currently
// provides both a standalone Network Security Rule resource, and allows for Network Security Rules to be defined in-line within the Network Security Group resource.
// At this time you cannot use a Network Security Group with in-line Network Security Rules in conjunction with any Network Security Rule resources. Doing so will cause a conflict of rule settings and will overwrite rules.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/network_security_group.html.markdown.
type NetworkSecurityGroup struct {
	s *pulumi.ResourceState
}

// NewNetworkSecurityGroup registers a new resource with the given unique name, arguments, and options.
func NewNetworkSecurityGroup(ctx *pulumi.Context,
	name string, args *NetworkSecurityGroupArgs, opts ...pulumi.ResourceOpt) (*NetworkSecurityGroup, error) {
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["location"] = nil
		inputs["name"] = nil
		inputs["resourceGroupName"] = nil
		inputs["securityRules"] = nil
		inputs["tags"] = nil
	} else {
		inputs["location"] = args.Location
		inputs["name"] = args.Name
		inputs["resourceGroupName"] = args.ResourceGroupName
		inputs["securityRules"] = args.SecurityRules
		inputs["tags"] = args.Tags
	}
	s, err := ctx.RegisterResource("azure:network/networkSecurityGroup:NetworkSecurityGroup", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &NetworkSecurityGroup{s: s}, nil
}

// GetNetworkSecurityGroup gets an existing NetworkSecurityGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkSecurityGroup(ctx *pulumi.Context,
	name string, id pulumi.ID, state *NetworkSecurityGroupState, opts ...pulumi.ResourceOpt) (*NetworkSecurityGroup, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["location"] = state.Location
		inputs["name"] = state.Name
		inputs["resourceGroupName"] = state.ResourceGroupName
		inputs["securityRules"] = state.SecurityRules
		inputs["tags"] = state.Tags
	}
	s, err := ctx.ReadResource("azure:network/networkSecurityGroup:NetworkSecurityGroup", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &NetworkSecurityGroup{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *NetworkSecurityGroup) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *NetworkSecurityGroup) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
func (r *NetworkSecurityGroup) Location() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["location"])
}

// The name of the security rule.
func (r *NetworkSecurityGroup) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// The name of the resource group in which to create the network security group. Changing this forces a new resource to be created.
func (r *NetworkSecurityGroup) ResourceGroupName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["resourceGroupName"])
}

// [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing security rules, as defined below.
func (r *NetworkSecurityGroup) SecurityRules() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["securityRules"])
}

// A mapping of tags to assign to the resource.
func (r *NetworkSecurityGroup) Tags() *pulumi.MapOutput {
	return (*pulumi.MapOutput)(r.s.State["tags"])
}

// Input properties used for looking up and filtering NetworkSecurityGroup resources.
type NetworkSecurityGroupState struct {
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location interface{}
	// The name of the security rule.
	Name interface{}
	// The name of the resource group in which to create the network security group. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing security rules, as defined below.
	SecurityRules interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
}

// The set of arguments for constructing a NetworkSecurityGroup resource.
type NetworkSecurityGroupArgs struct {
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location interface{}
	// The name of the security rule.
	Name interface{}
	// The name of the resource group in which to create the network security group. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing security rules, as defined below.
	SecurityRules interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
}
