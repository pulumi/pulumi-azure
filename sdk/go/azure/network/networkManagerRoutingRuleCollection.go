// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resources"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			current, err := core.LookupSubscription(ctx, &core.LookupSubscriptionArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			exampleNetworkManager, err := network.NewNetworkManager(ctx, "example", &network.NetworkManagerArgs{
//				Name:              pulumi.String("example-network-manager"),
//				Location:          example.Location,
//				ResourceGroupName: example.Name,
//				Scope: &network.NetworkManagerScopeArgs{
//					SubscriptionIds: pulumi.StringArray{
//						pulumi.String(current.Id),
//					},
//				},
//				ScopeAccesses: pulumi.StringArray{
//					pulumi.String("Routing"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = network.NewNetworkManagerNetworkGroup(ctx, "example", &network.NetworkManagerNetworkGroupArgs{
//				Name:             pulumi.String("example-network-group"),
//				NetworkManagerId: exampleNetworkManager.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			exampleNetworkManagerRoutingConfiguration, err := network.NewNetworkManagerRoutingConfiguration(ctx, "example", &network.NetworkManagerRoutingConfigurationArgs{
//				Name:             pulumi.String("example-routing-configuration"),
//				NetworkManagerId: exampleNetworkManager.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = network.NewNetworkManagerRoutingRuleCollection(ctx, "example", &network.NetworkManagerRoutingRuleCollectionArgs{
//				Name:                   pulumi.String("example-routing-rule-collection"),
//				RoutingConfigurationId: exampleNetworkManagerRoutingConfiguration.ID(),
//				NetworkGroupIds: pulumi.StringArray{
//					pulumi.String("azurerm_network_manager_network_group.example.id"),
//				},
//				Description: pulumi.String("example routing rule collection"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This resource uses the following Azure API Providers:
//
// * `Microsoft.Network` - 2024-05-01
//
// ## Import
//
// Network Manager Routing Rule Collections can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:network/networkManagerRoutingRuleCollection:NetworkManagerRoutingRuleCollection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/networkManagers/manager1/routingConfigurations/conf1/ruleCollections/collection1
// ```
type NetworkManagerRoutingRuleCollection struct {
	pulumi.CustomResourceState

	// Whether to enable the BGP route propagation. Defaults to `false`.
	BgpRoutePropagationEnabled pulumi.BoolPtrOutput `pulumi:"bgpRoutePropagationEnabled"`
	// The description of the Network Manager Routing Rule Collection.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name which should be used for this Network Manager Routing Rule Collection. Changing this forces a new Network Manager Routing Rule Collection to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// A list of Network Group IDs which this Network Manager Routing Rule Collection applies to.
	NetworkGroupIds pulumi.StringArrayOutput `pulumi:"networkGroupIds"`
	// The ID of the Network Manager Routing Configuration. Changing this forces a new Network Manager Routing Rule Collection to be created.
	RoutingConfigurationId pulumi.StringOutput `pulumi:"routingConfigurationId"`
}

// NewNetworkManagerRoutingRuleCollection registers a new resource with the given unique name, arguments, and options.
func NewNetworkManagerRoutingRuleCollection(ctx *pulumi.Context,
	name string, args *NetworkManagerRoutingRuleCollectionArgs, opts ...pulumi.ResourceOption) (*NetworkManagerRoutingRuleCollection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkGroupIds == nil {
		return nil, errors.New("invalid value for required argument 'NetworkGroupIds'")
	}
	if args.RoutingConfigurationId == nil {
		return nil, errors.New("invalid value for required argument 'RoutingConfigurationId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkManagerRoutingRuleCollection
	err := ctx.RegisterResource("azure:network/networkManagerRoutingRuleCollection:NetworkManagerRoutingRuleCollection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkManagerRoutingRuleCollection gets an existing NetworkManagerRoutingRuleCollection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkManagerRoutingRuleCollection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkManagerRoutingRuleCollectionState, opts ...pulumi.ResourceOption) (*NetworkManagerRoutingRuleCollection, error) {
	var resource NetworkManagerRoutingRuleCollection
	err := ctx.ReadResource("azure:network/networkManagerRoutingRuleCollection:NetworkManagerRoutingRuleCollection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkManagerRoutingRuleCollection resources.
type networkManagerRoutingRuleCollectionState struct {
	// Whether to enable the BGP route propagation. Defaults to `false`.
	BgpRoutePropagationEnabled *bool `pulumi:"bgpRoutePropagationEnabled"`
	// The description of the Network Manager Routing Rule Collection.
	Description *string `pulumi:"description"`
	// The name which should be used for this Network Manager Routing Rule Collection. Changing this forces a new Network Manager Routing Rule Collection to be created.
	Name *string `pulumi:"name"`
	// A list of Network Group IDs which this Network Manager Routing Rule Collection applies to.
	NetworkGroupIds []string `pulumi:"networkGroupIds"`
	// The ID of the Network Manager Routing Configuration. Changing this forces a new Network Manager Routing Rule Collection to be created.
	RoutingConfigurationId *string `pulumi:"routingConfigurationId"`
}

type NetworkManagerRoutingRuleCollectionState struct {
	// Whether to enable the BGP route propagation. Defaults to `false`.
	BgpRoutePropagationEnabled pulumi.BoolPtrInput
	// The description of the Network Manager Routing Rule Collection.
	Description pulumi.StringPtrInput
	// The name which should be used for this Network Manager Routing Rule Collection. Changing this forces a new Network Manager Routing Rule Collection to be created.
	Name pulumi.StringPtrInput
	// A list of Network Group IDs which this Network Manager Routing Rule Collection applies to.
	NetworkGroupIds pulumi.StringArrayInput
	// The ID of the Network Manager Routing Configuration. Changing this forces a new Network Manager Routing Rule Collection to be created.
	RoutingConfigurationId pulumi.StringPtrInput
}

func (NetworkManagerRoutingRuleCollectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkManagerRoutingRuleCollectionState)(nil)).Elem()
}

type networkManagerRoutingRuleCollectionArgs struct {
	// Whether to enable the BGP route propagation. Defaults to `false`.
	BgpRoutePropagationEnabled *bool `pulumi:"bgpRoutePropagationEnabled"`
	// The description of the Network Manager Routing Rule Collection.
	Description *string `pulumi:"description"`
	// The name which should be used for this Network Manager Routing Rule Collection. Changing this forces a new Network Manager Routing Rule Collection to be created.
	Name *string `pulumi:"name"`
	// A list of Network Group IDs which this Network Manager Routing Rule Collection applies to.
	NetworkGroupIds []string `pulumi:"networkGroupIds"`
	// The ID of the Network Manager Routing Configuration. Changing this forces a new Network Manager Routing Rule Collection to be created.
	RoutingConfigurationId string `pulumi:"routingConfigurationId"`
}

// The set of arguments for constructing a NetworkManagerRoutingRuleCollection resource.
type NetworkManagerRoutingRuleCollectionArgs struct {
	// Whether to enable the BGP route propagation. Defaults to `false`.
	BgpRoutePropagationEnabled pulumi.BoolPtrInput
	// The description of the Network Manager Routing Rule Collection.
	Description pulumi.StringPtrInput
	// The name which should be used for this Network Manager Routing Rule Collection. Changing this forces a new Network Manager Routing Rule Collection to be created.
	Name pulumi.StringPtrInput
	// A list of Network Group IDs which this Network Manager Routing Rule Collection applies to.
	NetworkGroupIds pulumi.StringArrayInput
	// The ID of the Network Manager Routing Configuration. Changing this forces a new Network Manager Routing Rule Collection to be created.
	RoutingConfigurationId pulumi.StringInput
}

func (NetworkManagerRoutingRuleCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkManagerRoutingRuleCollectionArgs)(nil)).Elem()
}

type NetworkManagerRoutingRuleCollectionInput interface {
	pulumi.Input

	ToNetworkManagerRoutingRuleCollectionOutput() NetworkManagerRoutingRuleCollectionOutput
	ToNetworkManagerRoutingRuleCollectionOutputWithContext(ctx context.Context) NetworkManagerRoutingRuleCollectionOutput
}

func (*NetworkManagerRoutingRuleCollection) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkManagerRoutingRuleCollection)(nil)).Elem()
}

func (i *NetworkManagerRoutingRuleCollection) ToNetworkManagerRoutingRuleCollectionOutput() NetworkManagerRoutingRuleCollectionOutput {
	return i.ToNetworkManagerRoutingRuleCollectionOutputWithContext(context.Background())
}

func (i *NetworkManagerRoutingRuleCollection) ToNetworkManagerRoutingRuleCollectionOutputWithContext(ctx context.Context) NetworkManagerRoutingRuleCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerRoutingRuleCollectionOutput)
}

// NetworkManagerRoutingRuleCollectionArrayInput is an input type that accepts NetworkManagerRoutingRuleCollectionArray and NetworkManagerRoutingRuleCollectionArrayOutput values.
// You can construct a concrete instance of `NetworkManagerRoutingRuleCollectionArrayInput` via:
//
//	NetworkManagerRoutingRuleCollectionArray{ NetworkManagerRoutingRuleCollectionArgs{...} }
type NetworkManagerRoutingRuleCollectionArrayInput interface {
	pulumi.Input

	ToNetworkManagerRoutingRuleCollectionArrayOutput() NetworkManagerRoutingRuleCollectionArrayOutput
	ToNetworkManagerRoutingRuleCollectionArrayOutputWithContext(context.Context) NetworkManagerRoutingRuleCollectionArrayOutput
}

type NetworkManagerRoutingRuleCollectionArray []NetworkManagerRoutingRuleCollectionInput

func (NetworkManagerRoutingRuleCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkManagerRoutingRuleCollection)(nil)).Elem()
}

func (i NetworkManagerRoutingRuleCollectionArray) ToNetworkManagerRoutingRuleCollectionArrayOutput() NetworkManagerRoutingRuleCollectionArrayOutput {
	return i.ToNetworkManagerRoutingRuleCollectionArrayOutputWithContext(context.Background())
}

func (i NetworkManagerRoutingRuleCollectionArray) ToNetworkManagerRoutingRuleCollectionArrayOutputWithContext(ctx context.Context) NetworkManagerRoutingRuleCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerRoutingRuleCollectionArrayOutput)
}

// NetworkManagerRoutingRuleCollectionMapInput is an input type that accepts NetworkManagerRoutingRuleCollectionMap and NetworkManagerRoutingRuleCollectionMapOutput values.
// You can construct a concrete instance of `NetworkManagerRoutingRuleCollectionMapInput` via:
//
//	NetworkManagerRoutingRuleCollectionMap{ "key": NetworkManagerRoutingRuleCollectionArgs{...} }
type NetworkManagerRoutingRuleCollectionMapInput interface {
	pulumi.Input

	ToNetworkManagerRoutingRuleCollectionMapOutput() NetworkManagerRoutingRuleCollectionMapOutput
	ToNetworkManagerRoutingRuleCollectionMapOutputWithContext(context.Context) NetworkManagerRoutingRuleCollectionMapOutput
}

type NetworkManagerRoutingRuleCollectionMap map[string]NetworkManagerRoutingRuleCollectionInput

func (NetworkManagerRoutingRuleCollectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkManagerRoutingRuleCollection)(nil)).Elem()
}

func (i NetworkManagerRoutingRuleCollectionMap) ToNetworkManagerRoutingRuleCollectionMapOutput() NetworkManagerRoutingRuleCollectionMapOutput {
	return i.ToNetworkManagerRoutingRuleCollectionMapOutputWithContext(context.Background())
}

func (i NetworkManagerRoutingRuleCollectionMap) ToNetworkManagerRoutingRuleCollectionMapOutputWithContext(ctx context.Context) NetworkManagerRoutingRuleCollectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerRoutingRuleCollectionMapOutput)
}

type NetworkManagerRoutingRuleCollectionOutput struct{ *pulumi.OutputState }

func (NetworkManagerRoutingRuleCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkManagerRoutingRuleCollection)(nil)).Elem()
}

func (o NetworkManagerRoutingRuleCollectionOutput) ToNetworkManagerRoutingRuleCollectionOutput() NetworkManagerRoutingRuleCollectionOutput {
	return o
}

func (o NetworkManagerRoutingRuleCollectionOutput) ToNetworkManagerRoutingRuleCollectionOutputWithContext(ctx context.Context) NetworkManagerRoutingRuleCollectionOutput {
	return o
}

// Whether to enable the BGP route propagation. Defaults to `false`.
func (o NetworkManagerRoutingRuleCollectionOutput) BgpRoutePropagationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkManagerRoutingRuleCollection) pulumi.BoolPtrOutput { return v.BgpRoutePropagationEnabled }).(pulumi.BoolPtrOutput)
}

// The description of the Network Manager Routing Rule Collection.
func (o NetworkManagerRoutingRuleCollectionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkManagerRoutingRuleCollection) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The name which should be used for this Network Manager Routing Rule Collection. Changing this forces a new Network Manager Routing Rule Collection to be created.
func (o NetworkManagerRoutingRuleCollectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerRoutingRuleCollection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A list of Network Group IDs which this Network Manager Routing Rule Collection applies to.
func (o NetworkManagerRoutingRuleCollectionOutput) NetworkGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkManagerRoutingRuleCollection) pulumi.StringArrayOutput { return v.NetworkGroupIds }).(pulumi.StringArrayOutput)
}

// The ID of the Network Manager Routing Configuration. Changing this forces a new Network Manager Routing Rule Collection to be created.
func (o NetworkManagerRoutingRuleCollectionOutput) RoutingConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerRoutingRuleCollection) pulumi.StringOutput { return v.RoutingConfigurationId }).(pulumi.StringOutput)
}

type NetworkManagerRoutingRuleCollectionArrayOutput struct{ *pulumi.OutputState }

func (NetworkManagerRoutingRuleCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkManagerRoutingRuleCollection)(nil)).Elem()
}

func (o NetworkManagerRoutingRuleCollectionArrayOutput) ToNetworkManagerRoutingRuleCollectionArrayOutput() NetworkManagerRoutingRuleCollectionArrayOutput {
	return o
}

func (o NetworkManagerRoutingRuleCollectionArrayOutput) ToNetworkManagerRoutingRuleCollectionArrayOutputWithContext(ctx context.Context) NetworkManagerRoutingRuleCollectionArrayOutput {
	return o
}

func (o NetworkManagerRoutingRuleCollectionArrayOutput) Index(i pulumi.IntInput) NetworkManagerRoutingRuleCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkManagerRoutingRuleCollection {
		return vs[0].([]*NetworkManagerRoutingRuleCollection)[vs[1].(int)]
	}).(NetworkManagerRoutingRuleCollectionOutput)
}

type NetworkManagerRoutingRuleCollectionMapOutput struct{ *pulumi.OutputState }

func (NetworkManagerRoutingRuleCollectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkManagerRoutingRuleCollection)(nil)).Elem()
}

func (o NetworkManagerRoutingRuleCollectionMapOutput) ToNetworkManagerRoutingRuleCollectionMapOutput() NetworkManagerRoutingRuleCollectionMapOutput {
	return o
}

func (o NetworkManagerRoutingRuleCollectionMapOutput) ToNetworkManagerRoutingRuleCollectionMapOutputWithContext(ctx context.Context) NetworkManagerRoutingRuleCollectionMapOutput {
	return o
}

func (o NetworkManagerRoutingRuleCollectionMapOutput) MapIndex(k pulumi.StringInput) NetworkManagerRoutingRuleCollectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkManagerRoutingRuleCollection {
		return vs[0].(map[string]*NetworkManagerRoutingRuleCollection)[vs[1].(string)]
	}).(NetworkManagerRoutingRuleCollectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerRoutingRuleCollectionInput)(nil)).Elem(), &NetworkManagerRoutingRuleCollection{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerRoutingRuleCollectionArrayInput)(nil)).Elem(), NetworkManagerRoutingRuleCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerRoutingRuleCollectionMapInput)(nil)).Elem(), NetworkManagerRoutingRuleCollectionMap{})
	pulumi.RegisterOutputType(NetworkManagerRoutingRuleCollectionOutput{})
	pulumi.RegisterOutputType(NetworkManagerRoutingRuleCollectionArrayOutput{})
	pulumi.RegisterOutputType(NetworkManagerRoutingRuleCollectionMapOutput{})
}
