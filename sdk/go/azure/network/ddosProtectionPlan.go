// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an AzureNetwork DDoS Protection Plan.
//
// > **NOTE** Azure only allows `one` DDoS Protection Plan per region.
//
// > **NOTE** The DDoS Protection Plan is a [high-cost service](https://azure.microsoft.com/en-us/pricing/details/ddos-protection/#pricing). Please keep this in mind while testing and learning.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = network.NewDdosProtectionPlan(ctx, "exampleDdosProtectionPlan", &network.DdosProtectionPlanArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Azure DDoS Protection Plan can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:network/ddosProtectionPlan:DdosProtectionPlan example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/ddosProtectionPlans/testddospplan
//
// ```
type DdosProtectionPlan struct {
	pulumi.CustomResourceState

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// Specifies the name of the Network DDoS Protection Plan. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the resource group in which to create the resource. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A list of Virtual Network IDs associated with the DDoS Protection Plan.
	VirtualNetworkIds pulumi.StringArrayOutput `pulumi:"virtualNetworkIds"`
}

// NewDdosProtectionPlan registers a new resource with the given unique name, arguments, and options.
func NewDdosProtectionPlan(ctx *pulumi.Context,
	name string, args *DdosProtectionPlanArgs, opts ...pulumi.ResourceOption) (*DdosProtectionPlan, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DdosProtectionPlan
	err := ctx.RegisterResource("azure:network/ddosProtectionPlan:DdosProtectionPlan", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDdosProtectionPlan gets an existing DdosProtectionPlan resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDdosProtectionPlan(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DdosProtectionPlanState, opts ...pulumi.ResourceOption) (*DdosProtectionPlan, error) {
	var resource DdosProtectionPlan
	err := ctx.ReadResource("azure:network/ddosProtectionPlan:DdosProtectionPlan", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DdosProtectionPlan resources.
type ddosProtectionPlanState struct {
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of the Network DDoS Protection Plan. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the resource group in which to create the resource. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// A list of Virtual Network IDs associated with the DDoS Protection Plan.
	VirtualNetworkIds []string `pulumi:"virtualNetworkIds"`
}

type DdosProtectionPlanState struct {
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of the Network DDoS Protection Plan. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the resource group in which to create the resource. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// A list of Virtual Network IDs associated with the DDoS Protection Plan.
	VirtualNetworkIds pulumi.StringArrayInput
}

func (DdosProtectionPlanState) ElementType() reflect.Type {
	return reflect.TypeOf((*ddosProtectionPlanState)(nil)).Elem()
}

type ddosProtectionPlanArgs struct {
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of the Network DDoS Protection Plan. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the resource group in which to create the resource. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a DdosProtectionPlan resource.
type DdosProtectionPlanArgs struct {
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of the Network DDoS Protection Plan. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the resource group in which to create the resource. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
}

func (DdosProtectionPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ddosProtectionPlanArgs)(nil)).Elem()
}

type DdosProtectionPlanInput interface {
	pulumi.Input

	ToDdosProtectionPlanOutput() DdosProtectionPlanOutput
	ToDdosProtectionPlanOutputWithContext(ctx context.Context) DdosProtectionPlanOutput
}

func (*DdosProtectionPlan) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosProtectionPlan)(nil)).Elem()
}

func (i *DdosProtectionPlan) ToDdosProtectionPlanOutput() DdosProtectionPlanOutput {
	return i.ToDdosProtectionPlanOutputWithContext(context.Background())
}

func (i *DdosProtectionPlan) ToDdosProtectionPlanOutputWithContext(ctx context.Context) DdosProtectionPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosProtectionPlanOutput)
}

// DdosProtectionPlanArrayInput is an input type that accepts DdosProtectionPlanArray and DdosProtectionPlanArrayOutput values.
// You can construct a concrete instance of `DdosProtectionPlanArrayInput` via:
//
//	DdosProtectionPlanArray{ DdosProtectionPlanArgs{...} }
type DdosProtectionPlanArrayInput interface {
	pulumi.Input

	ToDdosProtectionPlanArrayOutput() DdosProtectionPlanArrayOutput
	ToDdosProtectionPlanArrayOutputWithContext(context.Context) DdosProtectionPlanArrayOutput
}

type DdosProtectionPlanArray []DdosProtectionPlanInput

func (DdosProtectionPlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DdosProtectionPlan)(nil)).Elem()
}

func (i DdosProtectionPlanArray) ToDdosProtectionPlanArrayOutput() DdosProtectionPlanArrayOutput {
	return i.ToDdosProtectionPlanArrayOutputWithContext(context.Background())
}

func (i DdosProtectionPlanArray) ToDdosProtectionPlanArrayOutputWithContext(ctx context.Context) DdosProtectionPlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosProtectionPlanArrayOutput)
}

// DdosProtectionPlanMapInput is an input type that accepts DdosProtectionPlanMap and DdosProtectionPlanMapOutput values.
// You can construct a concrete instance of `DdosProtectionPlanMapInput` via:
//
//	DdosProtectionPlanMap{ "key": DdosProtectionPlanArgs{...} }
type DdosProtectionPlanMapInput interface {
	pulumi.Input

	ToDdosProtectionPlanMapOutput() DdosProtectionPlanMapOutput
	ToDdosProtectionPlanMapOutputWithContext(context.Context) DdosProtectionPlanMapOutput
}

type DdosProtectionPlanMap map[string]DdosProtectionPlanInput

func (DdosProtectionPlanMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DdosProtectionPlan)(nil)).Elem()
}

func (i DdosProtectionPlanMap) ToDdosProtectionPlanMapOutput() DdosProtectionPlanMapOutput {
	return i.ToDdosProtectionPlanMapOutputWithContext(context.Background())
}

func (i DdosProtectionPlanMap) ToDdosProtectionPlanMapOutputWithContext(ctx context.Context) DdosProtectionPlanMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosProtectionPlanMapOutput)
}

type DdosProtectionPlanOutput struct{ *pulumi.OutputState }

func (DdosProtectionPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosProtectionPlan)(nil)).Elem()
}

func (o DdosProtectionPlanOutput) ToDdosProtectionPlanOutput() DdosProtectionPlanOutput {
	return o
}

func (o DdosProtectionPlanOutput) ToDdosProtectionPlanOutputWithContext(ctx context.Context) DdosProtectionPlanOutput {
	return o
}

// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
func (o DdosProtectionPlanOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DdosProtectionPlan) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Specifies the name of the Network DDoS Protection Plan. Changing this forces a new resource to be created.
func (o DdosProtectionPlanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DdosProtectionPlan) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the resource group in which to create the resource. Changing this forces a new resource to be created.
func (o DdosProtectionPlanOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *DdosProtectionPlan) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
func (o DdosProtectionPlanOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DdosProtectionPlan) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A list of Virtual Network IDs associated with the DDoS Protection Plan.
func (o DdosProtectionPlanOutput) VirtualNetworkIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DdosProtectionPlan) pulumi.StringArrayOutput { return v.VirtualNetworkIds }).(pulumi.StringArrayOutput)
}

type DdosProtectionPlanArrayOutput struct{ *pulumi.OutputState }

func (DdosProtectionPlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DdosProtectionPlan)(nil)).Elem()
}

func (o DdosProtectionPlanArrayOutput) ToDdosProtectionPlanArrayOutput() DdosProtectionPlanArrayOutput {
	return o
}

func (o DdosProtectionPlanArrayOutput) ToDdosProtectionPlanArrayOutputWithContext(ctx context.Context) DdosProtectionPlanArrayOutput {
	return o
}

func (o DdosProtectionPlanArrayOutput) Index(i pulumi.IntInput) DdosProtectionPlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DdosProtectionPlan {
		return vs[0].([]*DdosProtectionPlan)[vs[1].(int)]
	}).(DdosProtectionPlanOutput)
}

type DdosProtectionPlanMapOutput struct{ *pulumi.OutputState }

func (DdosProtectionPlanMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DdosProtectionPlan)(nil)).Elem()
}

func (o DdosProtectionPlanMapOutput) ToDdosProtectionPlanMapOutput() DdosProtectionPlanMapOutput {
	return o
}

func (o DdosProtectionPlanMapOutput) ToDdosProtectionPlanMapOutputWithContext(ctx context.Context) DdosProtectionPlanMapOutput {
	return o
}

func (o DdosProtectionPlanMapOutput) MapIndex(k pulumi.StringInput) DdosProtectionPlanOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DdosProtectionPlan {
		return vs[0].(map[string]*DdosProtectionPlan)[vs[1].(string)]
	}).(DdosProtectionPlanOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DdosProtectionPlanInput)(nil)).Elem(), &DdosProtectionPlan{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosProtectionPlanArrayInput)(nil)).Elem(), DdosProtectionPlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdosProtectionPlanMapInput)(nil)).Elem(), DdosProtectionPlanMap{})
	pulumi.RegisterOutputType(DdosProtectionPlanOutput{})
	pulumi.RegisterOutputType(DdosProtectionPlanArrayOutput{})
	pulumi.RegisterOutputType(DdosProtectionPlanMapOutput{})
}
