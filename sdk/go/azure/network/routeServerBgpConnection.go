// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Bgp Connection for a Route Server
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "exampleVirtualNetwork", &network.VirtualNetworkArgs{
//				AddressSpaces: pulumi.StringArray{
//					pulumi.String("10.0.0.0/16"),
//				},
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				Tags: pulumi.StringMap{
//					"environment": pulumi.String("Production"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleSubnet, err := network.NewSubnet(ctx, "exampleSubnet", &network.SubnetArgs{
//				VirtualNetworkName: exampleVirtualNetwork.Name,
//				ResourceGroupName:  exampleResourceGroup.Name,
//				AddressPrefixes: pulumi.StringArray{
//					pulumi.String("10.0.1.0/24"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			examplePublicIp, err := network.NewPublicIp(ctx, "examplePublicIp", &network.PublicIpArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				AllocationMethod:  pulumi.String("Static"),
//				Sku:               pulumi.String("Standard"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleRouteServer, err := network.NewRouteServer(ctx, "exampleRouteServer", &network.RouteServerArgs{
//				ResourceGroupName:            exampleResourceGroup.Name,
//				Location:                     exampleResourceGroup.Location,
//				Sku:                          pulumi.String("Standard"),
//				PublicIpAddressId:            examplePublicIp.ID(),
//				SubnetId:                     exampleSubnet.ID(),
//				BranchToBranchTrafficEnabled: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = network.NewRouteServerBgpConnection(ctx, "exampleRouteServerBgpConnection", &network.RouteServerBgpConnectionArgs{
//				RouteServerId: exampleRouteServer.ID(),
//				PeerAsn:       pulumi.Int(65501),
//				PeerIp:        pulumi.String("169.254.21.5"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Route Server Bgp Connections can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:network/routeServerBgpConnection:RouteServerBgpConnection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/virtualHubs/routeServer1/bgpConnections/connection1
//
// ```
type RouteServerBgpConnection struct {
	pulumi.CustomResourceState

	// The name which should be used for this Route Server Bgp Connection. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The peer autonomous system number for the Route Server Bgp Connection. Changing this forces a new resource to be created.
	PeerAsn pulumi.IntOutput `pulumi:"peerAsn"`
	// The peer ip address for the Route Server Bgp Connection. Changing this forces a new resource to be created.
	PeerIp pulumi.StringOutput `pulumi:"peerIp"`
	// The ID of the Route Server within which this Bgp connection should be created. Changing this forces a new resource to be created.
	RouteServerId pulumi.StringOutput `pulumi:"routeServerId"`
}

// NewRouteServerBgpConnection registers a new resource with the given unique name, arguments, and options.
func NewRouteServerBgpConnection(ctx *pulumi.Context,
	name string, args *RouteServerBgpConnectionArgs, opts ...pulumi.ResourceOption) (*RouteServerBgpConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PeerAsn == nil {
		return nil, errors.New("invalid value for required argument 'PeerAsn'")
	}
	if args.PeerIp == nil {
		return nil, errors.New("invalid value for required argument 'PeerIp'")
	}
	if args.RouteServerId == nil {
		return nil, errors.New("invalid value for required argument 'RouteServerId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RouteServerBgpConnection
	err := ctx.RegisterResource("azure:network/routeServerBgpConnection:RouteServerBgpConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRouteServerBgpConnection gets an existing RouteServerBgpConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouteServerBgpConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouteServerBgpConnectionState, opts ...pulumi.ResourceOption) (*RouteServerBgpConnection, error) {
	var resource RouteServerBgpConnection
	err := ctx.ReadResource("azure:network/routeServerBgpConnection:RouteServerBgpConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RouteServerBgpConnection resources.
type routeServerBgpConnectionState struct {
	// The name which should be used for this Route Server Bgp Connection. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The peer autonomous system number for the Route Server Bgp Connection. Changing this forces a new resource to be created.
	PeerAsn *int `pulumi:"peerAsn"`
	// The peer ip address for the Route Server Bgp Connection. Changing this forces a new resource to be created.
	PeerIp *string `pulumi:"peerIp"`
	// The ID of the Route Server within which this Bgp connection should be created. Changing this forces a new resource to be created.
	RouteServerId *string `pulumi:"routeServerId"`
}

type RouteServerBgpConnectionState struct {
	// The name which should be used for this Route Server Bgp Connection. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The peer autonomous system number for the Route Server Bgp Connection. Changing this forces a new resource to be created.
	PeerAsn pulumi.IntPtrInput
	// The peer ip address for the Route Server Bgp Connection. Changing this forces a new resource to be created.
	PeerIp pulumi.StringPtrInput
	// The ID of the Route Server within which this Bgp connection should be created. Changing this forces a new resource to be created.
	RouteServerId pulumi.StringPtrInput
}

func (RouteServerBgpConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*routeServerBgpConnectionState)(nil)).Elem()
}

type routeServerBgpConnectionArgs struct {
	// The name which should be used for this Route Server Bgp Connection. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The peer autonomous system number for the Route Server Bgp Connection. Changing this forces a new resource to be created.
	PeerAsn int `pulumi:"peerAsn"`
	// The peer ip address for the Route Server Bgp Connection. Changing this forces a new resource to be created.
	PeerIp string `pulumi:"peerIp"`
	// The ID of the Route Server within which this Bgp connection should be created. Changing this forces a new resource to be created.
	RouteServerId string `pulumi:"routeServerId"`
}

// The set of arguments for constructing a RouteServerBgpConnection resource.
type RouteServerBgpConnectionArgs struct {
	// The name which should be used for this Route Server Bgp Connection. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The peer autonomous system number for the Route Server Bgp Connection. Changing this forces a new resource to be created.
	PeerAsn pulumi.IntInput
	// The peer ip address for the Route Server Bgp Connection. Changing this forces a new resource to be created.
	PeerIp pulumi.StringInput
	// The ID of the Route Server within which this Bgp connection should be created. Changing this forces a new resource to be created.
	RouteServerId pulumi.StringInput
}

func (RouteServerBgpConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routeServerBgpConnectionArgs)(nil)).Elem()
}

type RouteServerBgpConnectionInput interface {
	pulumi.Input

	ToRouteServerBgpConnectionOutput() RouteServerBgpConnectionOutput
	ToRouteServerBgpConnectionOutputWithContext(ctx context.Context) RouteServerBgpConnectionOutput
}

func (*RouteServerBgpConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteServerBgpConnection)(nil)).Elem()
}

func (i *RouteServerBgpConnection) ToRouteServerBgpConnectionOutput() RouteServerBgpConnectionOutput {
	return i.ToRouteServerBgpConnectionOutputWithContext(context.Background())
}

func (i *RouteServerBgpConnection) ToRouteServerBgpConnectionOutputWithContext(ctx context.Context) RouteServerBgpConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteServerBgpConnectionOutput)
}

// RouteServerBgpConnectionArrayInput is an input type that accepts RouteServerBgpConnectionArray and RouteServerBgpConnectionArrayOutput values.
// You can construct a concrete instance of `RouteServerBgpConnectionArrayInput` via:
//
//	RouteServerBgpConnectionArray{ RouteServerBgpConnectionArgs{...} }
type RouteServerBgpConnectionArrayInput interface {
	pulumi.Input

	ToRouteServerBgpConnectionArrayOutput() RouteServerBgpConnectionArrayOutput
	ToRouteServerBgpConnectionArrayOutputWithContext(context.Context) RouteServerBgpConnectionArrayOutput
}

type RouteServerBgpConnectionArray []RouteServerBgpConnectionInput

func (RouteServerBgpConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouteServerBgpConnection)(nil)).Elem()
}

func (i RouteServerBgpConnectionArray) ToRouteServerBgpConnectionArrayOutput() RouteServerBgpConnectionArrayOutput {
	return i.ToRouteServerBgpConnectionArrayOutputWithContext(context.Background())
}

func (i RouteServerBgpConnectionArray) ToRouteServerBgpConnectionArrayOutputWithContext(ctx context.Context) RouteServerBgpConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteServerBgpConnectionArrayOutput)
}

// RouteServerBgpConnectionMapInput is an input type that accepts RouteServerBgpConnectionMap and RouteServerBgpConnectionMapOutput values.
// You can construct a concrete instance of `RouteServerBgpConnectionMapInput` via:
//
//	RouteServerBgpConnectionMap{ "key": RouteServerBgpConnectionArgs{...} }
type RouteServerBgpConnectionMapInput interface {
	pulumi.Input

	ToRouteServerBgpConnectionMapOutput() RouteServerBgpConnectionMapOutput
	ToRouteServerBgpConnectionMapOutputWithContext(context.Context) RouteServerBgpConnectionMapOutput
}

type RouteServerBgpConnectionMap map[string]RouteServerBgpConnectionInput

func (RouteServerBgpConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouteServerBgpConnection)(nil)).Elem()
}

func (i RouteServerBgpConnectionMap) ToRouteServerBgpConnectionMapOutput() RouteServerBgpConnectionMapOutput {
	return i.ToRouteServerBgpConnectionMapOutputWithContext(context.Background())
}

func (i RouteServerBgpConnectionMap) ToRouteServerBgpConnectionMapOutputWithContext(ctx context.Context) RouteServerBgpConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteServerBgpConnectionMapOutput)
}

type RouteServerBgpConnectionOutput struct{ *pulumi.OutputState }

func (RouteServerBgpConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteServerBgpConnection)(nil)).Elem()
}

func (o RouteServerBgpConnectionOutput) ToRouteServerBgpConnectionOutput() RouteServerBgpConnectionOutput {
	return o
}

func (o RouteServerBgpConnectionOutput) ToRouteServerBgpConnectionOutputWithContext(ctx context.Context) RouteServerBgpConnectionOutput {
	return o
}

// The name which should be used for this Route Server Bgp Connection. Changing this forces a new resource to be created.
func (o RouteServerBgpConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RouteServerBgpConnection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The peer autonomous system number for the Route Server Bgp Connection. Changing this forces a new resource to be created.
func (o RouteServerBgpConnectionOutput) PeerAsn() pulumi.IntOutput {
	return o.ApplyT(func(v *RouteServerBgpConnection) pulumi.IntOutput { return v.PeerAsn }).(pulumi.IntOutput)
}

// The peer ip address for the Route Server Bgp Connection. Changing this forces a new resource to be created.
func (o RouteServerBgpConnectionOutput) PeerIp() pulumi.StringOutput {
	return o.ApplyT(func(v *RouteServerBgpConnection) pulumi.StringOutput { return v.PeerIp }).(pulumi.StringOutput)
}

// The ID of the Route Server within which this Bgp connection should be created. Changing this forces a new resource to be created.
func (o RouteServerBgpConnectionOutput) RouteServerId() pulumi.StringOutput {
	return o.ApplyT(func(v *RouteServerBgpConnection) pulumi.StringOutput { return v.RouteServerId }).(pulumi.StringOutput)
}

type RouteServerBgpConnectionArrayOutput struct{ *pulumi.OutputState }

func (RouteServerBgpConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouteServerBgpConnection)(nil)).Elem()
}

func (o RouteServerBgpConnectionArrayOutput) ToRouteServerBgpConnectionArrayOutput() RouteServerBgpConnectionArrayOutput {
	return o
}

func (o RouteServerBgpConnectionArrayOutput) ToRouteServerBgpConnectionArrayOutputWithContext(ctx context.Context) RouteServerBgpConnectionArrayOutput {
	return o
}

func (o RouteServerBgpConnectionArrayOutput) Index(i pulumi.IntInput) RouteServerBgpConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RouteServerBgpConnection {
		return vs[0].([]*RouteServerBgpConnection)[vs[1].(int)]
	}).(RouteServerBgpConnectionOutput)
}

type RouteServerBgpConnectionMapOutput struct{ *pulumi.OutputState }

func (RouteServerBgpConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouteServerBgpConnection)(nil)).Elem()
}

func (o RouteServerBgpConnectionMapOutput) ToRouteServerBgpConnectionMapOutput() RouteServerBgpConnectionMapOutput {
	return o
}

func (o RouteServerBgpConnectionMapOutput) ToRouteServerBgpConnectionMapOutputWithContext(ctx context.Context) RouteServerBgpConnectionMapOutput {
	return o
}

func (o RouteServerBgpConnectionMapOutput) MapIndex(k pulumi.StringInput) RouteServerBgpConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RouteServerBgpConnection {
		return vs[0].(map[string]*RouteServerBgpConnection)[vs[1].(string)]
	}).(RouteServerBgpConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RouteServerBgpConnectionInput)(nil)).Elem(), &RouteServerBgpConnection{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteServerBgpConnectionArrayInput)(nil)).Elem(), RouteServerBgpConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteServerBgpConnectionMapInput)(nil)).Elem(), RouteServerBgpConnectionMap{})
	pulumi.RegisterOutputType(RouteServerBgpConnectionOutput{})
	pulumi.RegisterOutputType(RouteServerBgpConnectionArrayOutput{})
	pulumi.RegisterOutputType(RouteServerBgpConnectionMapOutput{})
}
