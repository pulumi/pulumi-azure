// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about a Network Manager Network Group.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resources"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			current, err := core.LookupSubscription(ctx, &core.LookupSubscriptionArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			exampleNetworkManager, err := network.NewNetworkManager(ctx, "example", &network.NetworkManagerArgs{
//				Name:              pulumi.String("example-network-manager"),
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				Scope: &network.NetworkManagerScopeArgs{
//					SubscriptionIds: pulumi.StringArray{
//						pulumi.String(current.Id),
//					},
//				},
//				ScopeAccesses: pulumi.StringArray{
//					pulumi.String("Connectivity"),
//					pulumi.String("SecurityAdmin"),
//				},
//				Description: pulumi.String("example network manager"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleNetworkManagerNetworkGroup, err := network.NewNetworkManagerNetworkGroup(ctx, "example", &network.NetworkManagerNetworkGroupArgs{
//				Name:             pulumi.String("example-group"),
//				NetworkManagerId: exampleNetworkManager.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_ = network.LookupNetworkManagerNetworkGroupOutput(ctx, network.GetNetworkManagerNetworkGroupOutputArgs{
//				Name:             exampleNetworkManagerNetworkGroup.Name,
//				NetworkManagerId: exampleNetworkManager.ID(),
//			}, nil)
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This data source uses the following Azure API Providers:
//
// * `Microsoft.Network`: 2024-05-01
func LookupNetworkManagerNetworkGroup(ctx *pulumi.Context, args *LookupNetworkManagerNetworkGroupArgs, opts ...pulumi.InvokeOption) (*LookupNetworkManagerNetworkGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNetworkManagerNetworkGroupResult
	err := ctx.Invoke("azure:network/getNetworkManagerNetworkGroup:getNetworkManagerNetworkGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkManagerNetworkGroup.
type LookupNetworkManagerNetworkGroupArgs struct {
	// Specifies the name of the Network Manager Network Group.
	Name string `pulumi:"name"`
	// Specifies the ID of the Network Manager.
	NetworkManagerId string `pulumi:"networkManagerId"`
}

// A collection of values returned by getNetworkManagerNetworkGroup.
type LookupNetworkManagerNetworkGroupResult struct {
	// A description of the Network Manager Network Group.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id               string `pulumi:"id"`
	Name             string `pulumi:"name"`
	NetworkManagerId string `pulumi:"networkManagerId"`
}

func LookupNetworkManagerNetworkGroupOutput(ctx *pulumi.Context, args LookupNetworkManagerNetworkGroupOutputArgs, opts ...pulumi.InvokeOption) LookupNetworkManagerNetworkGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNetworkManagerNetworkGroupResultOutput, error) {
			args := v.(LookupNetworkManagerNetworkGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure:network/getNetworkManagerNetworkGroup:getNetworkManagerNetworkGroup", args, LookupNetworkManagerNetworkGroupResultOutput{}, options).(LookupNetworkManagerNetworkGroupResultOutput), nil
		}).(LookupNetworkManagerNetworkGroupResultOutput)
}

// A collection of arguments for invoking getNetworkManagerNetworkGroup.
type LookupNetworkManagerNetworkGroupOutputArgs struct {
	// Specifies the name of the Network Manager Network Group.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the ID of the Network Manager.
	NetworkManagerId pulumi.StringInput `pulumi:"networkManagerId"`
}

func (LookupNetworkManagerNetworkGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkManagerNetworkGroupArgs)(nil)).Elem()
}

// A collection of values returned by getNetworkManagerNetworkGroup.
type LookupNetworkManagerNetworkGroupResultOutput struct{ *pulumi.OutputState }

func (LookupNetworkManagerNetworkGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkManagerNetworkGroupResult)(nil)).Elem()
}

func (o LookupNetworkManagerNetworkGroupResultOutput) ToLookupNetworkManagerNetworkGroupResultOutput() LookupNetworkManagerNetworkGroupResultOutput {
	return o
}

func (o LookupNetworkManagerNetworkGroupResultOutput) ToLookupNetworkManagerNetworkGroupResultOutputWithContext(ctx context.Context) LookupNetworkManagerNetworkGroupResultOutput {
	return o
}

// A description of the Network Manager Network Group.
func (o LookupNetworkManagerNetworkGroupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkManagerNetworkGroupResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupNetworkManagerNetworkGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkManagerNetworkGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupNetworkManagerNetworkGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkManagerNetworkGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupNetworkManagerNetworkGroupResultOutput) NetworkManagerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkManagerNetworkGroupResult) string { return v.NetworkManagerId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNetworkManagerNetworkGroupResultOutput{})
}
