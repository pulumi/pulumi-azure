// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ApplicationGatewayAuthenticationCertificate struct {
	// The contents of the Authentication Certificate which should be used.
	Data string `pulumi:"data"`
	// The ID of the Rewrite Rule Set
	Id *string `pulumi:"id"`
	// The Name of the Authentication Certificate to use.
	Name string `pulumi:"name"`
}

// ApplicationGatewayAuthenticationCertificateInput is an input type that accepts ApplicationGatewayAuthenticationCertificateArgs and ApplicationGatewayAuthenticationCertificateOutput values.
// You can construct a concrete instance of `ApplicationGatewayAuthenticationCertificateInput` via:
//
//	ApplicationGatewayAuthenticationCertificateArgs{...}
type ApplicationGatewayAuthenticationCertificateInput interface {
	pulumi.Input

	ToApplicationGatewayAuthenticationCertificateOutput() ApplicationGatewayAuthenticationCertificateOutput
	ToApplicationGatewayAuthenticationCertificateOutputWithContext(context.Context) ApplicationGatewayAuthenticationCertificateOutput
}

type ApplicationGatewayAuthenticationCertificateArgs struct {
	// The contents of the Authentication Certificate which should be used.
	Data pulumi.StringInput `pulumi:"data"`
	// The ID of the Rewrite Rule Set
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Name of the Authentication Certificate to use.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ApplicationGatewayAuthenticationCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAuthenticationCertificate)(nil)).Elem()
}

func (i ApplicationGatewayAuthenticationCertificateArgs) ToApplicationGatewayAuthenticationCertificateOutput() ApplicationGatewayAuthenticationCertificateOutput {
	return i.ToApplicationGatewayAuthenticationCertificateOutputWithContext(context.Background())
}

func (i ApplicationGatewayAuthenticationCertificateArgs) ToApplicationGatewayAuthenticationCertificateOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAuthenticationCertificateOutput)
}

// ApplicationGatewayAuthenticationCertificateArrayInput is an input type that accepts ApplicationGatewayAuthenticationCertificateArray and ApplicationGatewayAuthenticationCertificateArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayAuthenticationCertificateArrayInput` via:
//
//	ApplicationGatewayAuthenticationCertificateArray{ ApplicationGatewayAuthenticationCertificateArgs{...} }
type ApplicationGatewayAuthenticationCertificateArrayInput interface {
	pulumi.Input

	ToApplicationGatewayAuthenticationCertificateArrayOutput() ApplicationGatewayAuthenticationCertificateArrayOutput
	ToApplicationGatewayAuthenticationCertificateArrayOutputWithContext(context.Context) ApplicationGatewayAuthenticationCertificateArrayOutput
}

type ApplicationGatewayAuthenticationCertificateArray []ApplicationGatewayAuthenticationCertificateInput

func (ApplicationGatewayAuthenticationCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayAuthenticationCertificate)(nil)).Elem()
}

func (i ApplicationGatewayAuthenticationCertificateArray) ToApplicationGatewayAuthenticationCertificateArrayOutput() ApplicationGatewayAuthenticationCertificateArrayOutput {
	return i.ToApplicationGatewayAuthenticationCertificateArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayAuthenticationCertificateArray) ToApplicationGatewayAuthenticationCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAuthenticationCertificateArrayOutput)
}

type ApplicationGatewayAuthenticationCertificateOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAuthenticationCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAuthenticationCertificate)(nil)).Elem()
}

func (o ApplicationGatewayAuthenticationCertificateOutput) ToApplicationGatewayAuthenticationCertificateOutput() ApplicationGatewayAuthenticationCertificateOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificateOutput) ToApplicationGatewayAuthenticationCertificateOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateOutput {
	return o
}

// The contents of the Authentication Certificate which should be used.
func (o ApplicationGatewayAuthenticationCertificateOutput) Data() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificate) string { return v.Data }).(pulumi.StringOutput)
}

// The ID of the Rewrite Rule Set
func (o ApplicationGatewayAuthenticationCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Name of the Authentication Certificate to use.
func (o ApplicationGatewayAuthenticationCertificateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificate) string { return v.Name }).(pulumi.StringOutput)
}

type ApplicationGatewayAuthenticationCertificateArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAuthenticationCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayAuthenticationCertificate)(nil)).Elem()
}

func (o ApplicationGatewayAuthenticationCertificateArrayOutput) ToApplicationGatewayAuthenticationCertificateArrayOutput() ApplicationGatewayAuthenticationCertificateArrayOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificateArrayOutput) ToApplicationGatewayAuthenticationCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateArrayOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificateArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayAuthenticationCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayAuthenticationCertificate {
		return vs[0].([]ApplicationGatewayAuthenticationCertificate)[vs[1].(int)]
	}).(ApplicationGatewayAuthenticationCertificateOutput)
}

type ApplicationGatewayAutoscaleConfiguration struct {
	// Maximum capacity for autoscaling. Accepted values are in the range `2` to `125`.
	MaxCapacity *int `pulumi:"maxCapacity"`
	// Minimum capacity for autoscaling. Accepted values are in the range `0` to `100`.
	MinCapacity int `pulumi:"minCapacity"`
}

// ApplicationGatewayAutoscaleConfigurationInput is an input type that accepts ApplicationGatewayAutoscaleConfigurationArgs and ApplicationGatewayAutoscaleConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayAutoscaleConfigurationInput` via:
//
//	ApplicationGatewayAutoscaleConfigurationArgs{...}
type ApplicationGatewayAutoscaleConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayAutoscaleConfigurationOutput() ApplicationGatewayAutoscaleConfigurationOutput
	ToApplicationGatewayAutoscaleConfigurationOutputWithContext(context.Context) ApplicationGatewayAutoscaleConfigurationOutput
}

type ApplicationGatewayAutoscaleConfigurationArgs struct {
	// Maximum capacity for autoscaling. Accepted values are in the range `2` to `125`.
	MaxCapacity pulumi.IntPtrInput `pulumi:"maxCapacity"`
	// Minimum capacity for autoscaling. Accepted values are in the range `0` to `100`.
	MinCapacity pulumi.IntInput `pulumi:"minCapacity"`
}

func (ApplicationGatewayAutoscaleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAutoscaleConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayAutoscaleConfigurationArgs) ToApplicationGatewayAutoscaleConfigurationOutput() ApplicationGatewayAutoscaleConfigurationOutput {
	return i.ToApplicationGatewayAutoscaleConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayAutoscaleConfigurationArgs) ToApplicationGatewayAutoscaleConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleConfigurationOutput)
}

func (i ApplicationGatewayAutoscaleConfigurationArgs) ToApplicationGatewayAutoscaleConfigurationPtrOutput() ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return i.ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayAutoscaleConfigurationArgs) ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleConfigurationOutput).ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(ctx)
}

// ApplicationGatewayAutoscaleConfigurationPtrInput is an input type that accepts ApplicationGatewayAutoscaleConfigurationArgs, ApplicationGatewayAutoscaleConfigurationPtr and ApplicationGatewayAutoscaleConfigurationPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayAutoscaleConfigurationPtrInput` via:
//
//	        ApplicationGatewayAutoscaleConfigurationArgs{...}
//
//	or:
//
//	        nil
type ApplicationGatewayAutoscaleConfigurationPtrInput interface {
	pulumi.Input

	ToApplicationGatewayAutoscaleConfigurationPtrOutput() ApplicationGatewayAutoscaleConfigurationPtrOutput
	ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(context.Context) ApplicationGatewayAutoscaleConfigurationPtrOutput
}

type applicationGatewayAutoscaleConfigurationPtrType ApplicationGatewayAutoscaleConfigurationArgs

func ApplicationGatewayAutoscaleConfigurationPtr(v *ApplicationGatewayAutoscaleConfigurationArgs) ApplicationGatewayAutoscaleConfigurationPtrInput {
	return (*applicationGatewayAutoscaleConfigurationPtrType)(v)
}

func (*applicationGatewayAutoscaleConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayAutoscaleConfiguration)(nil)).Elem()
}

func (i *applicationGatewayAutoscaleConfigurationPtrType) ToApplicationGatewayAutoscaleConfigurationPtrOutput() ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return i.ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayAutoscaleConfigurationPtrType) ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleConfigurationPtrOutput)
}

type ApplicationGatewayAutoscaleConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAutoscaleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAutoscaleConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayAutoscaleConfigurationOutput) ToApplicationGatewayAutoscaleConfigurationOutput() ApplicationGatewayAutoscaleConfigurationOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationOutput) ToApplicationGatewayAutoscaleConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationOutput) ToApplicationGatewayAutoscaleConfigurationPtrOutput() ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return o.ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayAutoscaleConfigurationOutput) ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationGatewayAutoscaleConfiguration) *ApplicationGatewayAutoscaleConfiguration {
		return &v
	}).(ApplicationGatewayAutoscaleConfigurationPtrOutput)
}

// Maximum capacity for autoscaling. Accepted values are in the range `2` to `125`.
func (o ApplicationGatewayAutoscaleConfigurationOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAutoscaleConfiguration) *int { return v.MaxCapacity }).(pulumi.IntPtrOutput)
}

// Minimum capacity for autoscaling. Accepted values are in the range `0` to `100`.
func (o ApplicationGatewayAutoscaleConfigurationOutput) MinCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationGatewayAutoscaleConfiguration) int { return v.MinCapacity }).(pulumi.IntOutput)
}

type ApplicationGatewayAutoscaleConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAutoscaleConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayAutoscaleConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayAutoscaleConfigurationPtrOutput) ToApplicationGatewayAutoscaleConfigurationPtrOutput() ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationPtrOutput) ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationPtrOutput) Elem() ApplicationGatewayAutoscaleConfigurationOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleConfiguration) ApplicationGatewayAutoscaleConfiguration {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewayAutoscaleConfiguration
		return ret
	}).(ApplicationGatewayAutoscaleConfigurationOutput)
}

// Maximum capacity for autoscaling. Accepted values are in the range `2` to `125`.
func (o ApplicationGatewayAutoscaleConfigurationPtrOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxCapacity
	}).(pulumi.IntPtrOutput)
}

// Minimum capacity for autoscaling. Accepted values are in the range `0` to `100`.
func (o ApplicationGatewayAutoscaleConfigurationPtrOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.MinCapacity
	}).(pulumi.IntPtrOutput)
}

type ApplicationGatewayBackendAddressPool struct {
	// A list of FQDN's which should be part of the Backend Address Pool.
	Fqdns []string `pulumi:"fqdns"`
	// The ID of the Rewrite Rule Set
	Id *string `pulumi:"id"`
	// A list of IP Addresses which should be part of the Backend Address Pool.
	IpAddresses []string `pulumi:"ipAddresses"`
	// The name of the Backend Address Pool.
	Name string `pulumi:"name"`
}

// ApplicationGatewayBackendAddressPoolInput is an input type that accepts ApplicationGatewayBackendAddressPoolArgs and ApplicationGatewayBackendAddressPoolOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressPoolInput` via:
//
//	ApplicationGatewayBackendAddressPoolArgs{...}
type ApplicationGatewayBackendAddressPoolInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressPoolOutput() ApplicationGatewayBackendAddressPoolOutput
	ToApplicationGatewayBackendAddressPoolOutputWithContext(context.Context) ApplicationGatewayBackendAddressPoolOutput
}

type ApplicationGatewayBackendAddressPoolArgs struct {
	// A list of FQDN's which should be part of the Backend Address Pool.
	Fqdns pulumi.StringArrayInput `pulumi:"fqdns"`
	// The ID of the Rewrite Rule Set
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A list of IP Addresses which should be part of the Backend Address Pool.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
	// The name of the Backend Address Pool.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ApplicationGatewayBackendAddressPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressPool)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressPoolArgs) ToApplicationGatewayBackendAddressPoolOutput() ApplicationGatewayBackendAddressPoolOutput {
	return i.ToApplicationGatewayBackendAddressPoolOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressPoolArgs) ToApplicationGatewayBackendAddressPoolOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressPoolOutput)
}

// ApplicationGatewayBackendAddressPoolArrayInput is an input type that accepts ApplicationGatewayBackendAddressPoolArray and ApplicationGatewayBackendAddressPoolArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressPoolArrayInput` via:
//
//	ApplicationGatewayBackendAddressPoolArray{ ApplicationGatewayBackendAddressPoolArgs{...} }
type ApplicationGatewayBackendAddressPoolArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressPoolArrayOutput() ApplicationGatewayBackendAddressPoolArrayOutput
	ToApplicationGatewayBackendAddressPoolArrayOutputWithContext(context.Context) ApplicationGatewayBackendAddressPoolArrayOutput
}

type ApplicationGatewayBackendAddressPoolArray []ApplicationGatewayBackendAddressPoolInput

func (ApplicationGatewayBackendAddressPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressPool)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressPoolArray) ToApplicationGatewayBackendAddressPoolArrayOutput() ApplicationGatewayBackendAddressPoolArrayOutput {
	return i.ToApplicationGatewayBackendAddressPoolArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressPoolArray) ToApplicationGatewayBackendAddressPoolArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressPoolArrayOutput)
}

type ApplicationGatewayBackendAddressPoolOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressPool)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolOutput) ToApplicationGatewayBackendAddressPoolOutput() ApplicationGatewayBackendAddressPoolOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolOutput) ToApplicationGatewayBackendAddressPoolOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolOutput {
	return o
}

// A list of FQDN's which should be part of the Backend Address Pool.
func (o ApplicationGatewayBackendAddressPoolOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPool) []string { return v.Fqdns }).(pulumi.StringArrayOutput)
}

// The ID of the Rewrite Rule Set
func (o ApplicationGatewayBackendAddressPoolOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPool) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A list of IP Addresses which should be part of the Backend Address Pool.
func (o ApplicationGatewayBackendAddressPoolOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPool) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

// The name of the Backend Address Pool.
func (o ApplicationGatewayBackendAddressPoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPool) string { return v.Name }).(pulumi.StringOutput)
}

type ApplicationGatewayBackendAddressPoolArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressPool)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolArrayOutput) ToApplicationGatewayBackendAddressPoolArrayOutput() ApplicationGatewayBackendAddressPoolArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolArrayOutput) ToApplicationGatewayBackendAddressPoolArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendAddressPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendAddressPool {
		return vs[0].([]ApplicationGatewayBackendAddressPool)[vs[1].(int)]
	}).(ApplicationGatewayBackendAddressPoolOutput)
}

type ApplicationGatewayBackendHttpSetting struct {
	// The name of the affinity cookie.
	AffinityCookieName *string `pulumi:"affinityCookieName"`
	// One or more `authenticationCertificateBackend` blocks as defined below.
	AuthenticationCertificates []ApplicationGatewayBackendHttpSettingAuthenticationCertificate `pulumi:"authenticationCertificates"`
	// A `connectionDraining` block as defined below.
	ConnectionDraining *ApplicationGatewayBackendHttpSettingConnectionDraining `pulumi:"connectionDraining"`
	// Is Cookie-Based Affinity enabled? Possible values are `Enabled` and `Disabled`.
	CookieBasedAffinity string `pulumi:"cookieBasedAffinity"`
	// Host header to be sent to the backend servers. Cannot be set if `pickHostNameFromBackendAddress` is set to `true`.
	HostName *string `pulumi:"hostName"`
	// The ID of the Rewrite Rule Set
	Id *string `pulumi:"id"`
	// The name of the Backend HTTP Settings Collection.
	Name string `pulumi:"name"`
	// The Path which should be used as a prefix for all HTTP requests.
	Path *string `pulumi:"path"`
	// Whether host header should be picked from the host name of the backend server. Defaults to `false`.
	PickHostNameFromBackendAddress *bool `pulumi:"pickHostNameFromBackendAddress"`
	// The port which should be used for this Backend HTTP Settings Collection.
	Port int `pulumi:"port"`
	// The ID of the associated Probe.
	ProbeId *string `pulumi:"probeId"`
	// The name of an associated HTTP Probe.
	ProbeName *string `pulumi:"probeName"`
	// The Protocol which should be used. Possible values are `Http` and `Https`.
	Protocol string `pulumi:"protocol"`
	// The request timeout in seconds, which must be between 1 and 86400 seconds. Defaults to `30`.
	RequestTimeout *int `pulumi:"requestTimeout"`
	// A list of `trustedRootCertificate` names.
	TrustedRootCertificateNames []string `pulumi:"trustedRootCertificateNames"`
}

// ApplicationGatewayBackendHttpSettingInput is an input type that accepts ApplicationGatewayBackendHttpSettingArgs and ApplicationGatewayBackendHttpSettingOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingInput` via:
//
//	ApplicationGatewayBackendHttpSettingArgs{...}
type ApplicationGatewayBackendHttpSettingInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingOutput() ApplicationGatewayBackendHttpSettingOutput
	ToApplicationGatewayBackendHttpSettingOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingOutput
}

type ApplicationGatewayBackendHttpSettingArgs struct {
	// The name of the affinity cookie.
	AffinityCookieName pulumi.StringPtrInput `pulumi:"affinityCookieName"`
	// One or more `authenticationCertificateBackend` blocks as defined below.
	AuthenticationCertificates ApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayInput `pulumi:"authenticationCertificates"`
	// A `connectionDraining` block as defined below.
	ConnectionDraining ApplicationGatewayBackendHttpSettingConnectionDrainingPtrInput `pulumi:"connectionDraining"`
	// Is Cookie-Based Affinity enabled? Possible values are `Enabled` and `Disabled`.
	CookieBasedAffinity pulumi.StringInput `pulumi:"cookieBasedAffinity"`
	// Host header to be sent to the backend servers. Cannot be set if `pickHostNameFromBackendAddress` is set to `true`.
	HostName pulumi.StringPtrInput `pulumi:"hostName"`
	// The ID of the Rewrite Rule Set
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the Backend HTTP Settings Collection.
	Name pulumi.StringInput `pulumi:"name"`
	// The Path which should be used as a prefix for all HTTP requests.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Whether host header should be picked from the host name of the backend server. Defaults to `false`.
	PickHostNameFromBackendAddress pulumi.BoolPtrInput `pulumi:"pickHostNameFromBackendAddress"`
	// The port which should be used for this Backend HTTP Settings Collection.
	Port pulumi.IntInput `pulumi:"port"`
	// The ID of the associated Probe.
	ProbeId pulumi.StringPtrInput `pulumi:"probeId"`
	// The name of an associated HTTP Probe.
	ProbeName pulumi.StringPtrInput `pulumi:"probeName"`
	// The Protocol which should be used. Possible values are `Http` and `Https`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The request timeout in seconds, which must be between 1 and 86400 seconds. Defaults to `30`.
	RequestTimeout pulumi.IntPtrInput `pulumi:"requestTimeout"`
	// A list of `trustedRootCertificate` names.
	TrustedRootCertificateNames pulumi.StringArrayInput `pulumi:"trustedRootCertificateNames"`
}

func (ApplicationGatewayBackendHttpSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSetting)(nil)).Elem()
}

func (i ApplicationGatewayBackendHttpSettingArgs) ToApplicationGatewayBackendHttpSettingOutput() ApplicationGatewayBackendHttpSettingOutput {
	return i.ToApplicationGatewayBackendHttpSettingOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingArgs) ToApplicationGatewayBackendHttpSettingOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingOutput)
}

// ApplicationGatewayBackendHttpSettingArrayInput is an input type that accepts ApplicationGatewayBackendHttpSettingArray and ApplicationGatewayBackendHttpSettingArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingArrayInput` via:
//
//	ApplicationGatewayBackendHttpSettingArray{ ApplicationGatewayBackendHttpSettingArgs{...} }
type ApplicationGatewayBackendHttpSettingArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingArrayOutput() ApplicationGatewayBackendHttpSettingArrayOutput
	ToApplicationGatewayBackendHttpSettingArrayOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingArrayOutput
}

type ApplicationGatewayBackendHttpSettingArray []ApplicationGatewayBackendHttpSettingInput

func (ApplicationGatewayBackendHttpSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendHttpSetting)(nil)).Elem()
}

func (i ApplicationGatewayBackendHttpSettingArray) ToApplicationGatewayBackendHttpSettingArrayOutput() ApplicationGatewayBackendHttpSettingArrayOutput {
	return i.ToApplicationGatewayBackendHttpSettingArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingArray) ToApplicationGatewayBackendHttpSettingArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingArrayOutput)
}

type ApplicationGatewayBackendHttpSettingOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSetting)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingOutput) ToApplicationGatewayBackendHttpSettingOutput() ApplicationGatewayBackendHttpSettingOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingOutput) ToApplicationGatewayBackendHttpSettingOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingOutput {
	return o
}

// The name of the affinity cookie.
func (o ApplicationGatewayBackendHttpSettingOutput) AffinityCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSetting) *string { return v.AffinityCookieName }).(pulumi.StringPtrOutput)
}

// One or more `authenticationCertificateBackend` blocks as defined below.
func (o ApplicationGatewayBackendHttpSettingOutput) AuthenticationCertificates() ApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSetting) []ApplicationGatewayBackendHttpSettingAuthenticationCertificate {
		return v.AuthenticationCertificates
	}).(ApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput)
}

// A `connectionDraining` block as defined below.
func (o ApplicationGatewayBackendHttpSettingOutput) ConnectionDraining() ApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSetting) *ApplicationGatewayBackendHttpSettingConnectionDraining {
		return v.ConnectionDraining
	}).(ApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutput)
}

// Is Cookie-Based Affinity enabled? Possible values are `Enabled` and `Disabled`.
func (o ApplicationGatewayBackendHttpSettingOutput) CookieBasedAffinity() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSetting) string { return v.CookieBasedAffinity }).(pulumi.StringOutput)
}

// Host header to be sent to the backend servers. Cannot be set if `pickHostNameFromBackendAddress` is set to `true`.
func (o ApplicationGatewayBackendHttpSettingOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSetting) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// The ID of the Rewrite Rule Set
func (o ApplicationGatewayBackendHttpSettingOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSetting) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the Backend HTTP Settings Collection.
func (o ApplicationGatewayBackendHttpSettingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSetting) string { return v.Name }).(pulumi.StringOutput)
}

// The Path which should be used as a prefix for all HTTP requests.
func (o ApplicationGatewayBackendHttpSettingOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSetting) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Whether host header should be picked from the host name of the backend server. Defaults to `false`.
func (o ApplicationGatewayBackendHttpSettingOutput) PickHostNameFromBackendAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSetting) *bool { return v.PickHostNameFromBackendAddress }).(pulumi.BoolPtrOutput)
}

// The port which should be used for this Backend HTTP Settings Collection.
func (o ApplicationGatewayBackendHttpSettingOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSetting) int { return v.Port }).(pulumi.IntOutput)
}

// The ID of the associated Probe.
func (o ApplicationGatewayBackendHttpSettingOutput) ProbeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSetting) *string { return v.ProbeId }).(pulumi.StringPtrOutput)
}

// The name of an associated HTTP Probe.
func (o ApplicationGatewayBackendHttpSettingOutput) ProbeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSetting) *string { return v.ProbeName }).(pulumi.StringPtrOutput)
}

// The Protocol which should be used. Possible values are `Http` and `Https`.
func (o ApplicationGatewayBackendHttpSettingOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSetting) string { return v.Protocol }).(pulumi.StringOutput)
}

// The request timeout in seconds, which must be between 1 and 86400 seconds. Defaults to `30`.
func (o ApplicationGatewayBackendHttpSettingOutput) RequestTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSetting) *int { return v.RequestTimeout }).(pulumi.IntPtrOutput)
}

// A list of `trustedRootCertificate` names.
func (o ApplicationGatewayBackendHttpSettingOutput) TrustedRootCertificateNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSetting) []string { return v.TrustedRootCertificateNames }).(pulumi.StringArrayOutput)
}

type ApplicationGatewayBackendHttpSettingArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendHttpSetting)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingArrayOutput) ToApplicationGatewayBackendHttpSettingArrayOutput() ApplicationGatewayBackendHttpSettingArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingArrayOutput) ToApplicationGatewayBackendHttpSettingArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendHttpSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendHttpSetting {
		return vs[0].([]ApplicationGatewayBackendHttpSetting)[vs[1].(int)]
	}).(ApplicationGatewayBackendHttpSettingOutput)
}

type ApplicationGatewayBackendHttpSettingAuthenticationCertificate struct {
	// The ID of the Rewrite Rule Set
	Id *string `pulumi:"id"`
	// The Name of the Authentication Certificate to use.
	Name string `pulumi:"name"`
}

// ApplicationGatewayBackendHttpSettingAuthenticationCertificateInput is an input type that accepts ApplicationGatewayBackendHttpSettingAuthenticationCertificateArgs and ApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingAuthenticationCertificateInput` via:
//
//	ApplicationGatewayBackendHttpSettingAuthenticationCertificateArgs{...}
type ApplicationGatewayBackendHttpSettingAuthenticationCertificateInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput() ApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput
	ToApplicationGatewayBackendHttpSettingAuthenticationCertificateOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput
}

type ApplicationGatewayBackendHttpSettingAuthenticationCertificateArgs struct {
	// The ID of the Rewrite Rule Set
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Name of the Authentication Certificate to use.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ApplicationGatewayBackendHttpSettingAuthenticationCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSettingAuthenticationCertificate)(nil)).Elem()
}

func (i ApplicationGatewayBackendHttpSettingAuthenticationCertificateArgs) ToApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput() ApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput {
	return i.ToApplicationGatewayBackendHttpSettingAuthenticationCertificateOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingAuthenticationCertificateArgs) ToApplicationGatewayBackendHttpSettingAuthenticationCertificateOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput)
}

// ApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayInput is an input type that accepts ApplicationGatewayBackendHttpSettingAuthenticationCertificateArray and ApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayInput` via:
//
//	ApplicationGatewayBackendHttpSettingAuthenticationCertificateArray{ ApplicationGatewayBackendHttpSettingAuthenticationCertificateArgs{...} }
type ApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput() ApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput
	ToApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput
}

type ApplicationGatewayBackendHttpSettingAuthenticationCertificateArray []ApplicationGatewayBackendHttpSettingAuthenticationCertificateInput

func (ApplicationGatewayBackendHttpSettingAuthenticationCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendHttpSettingAuthenticationCertificate)(nil)).Elem()
}

func (i ApplicationGatewayBackendHttpSettingAuthenticationCertificateArray) ToApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput() ApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput {
	return i.ToApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingAuthenticationCertificateArray) ToApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput)
}

type ApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSettingAuthenticationCertificate)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput) ToApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput() ApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput) ToApplicationGatewayBackendHttpSettingAuthenticationCertificateOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput {
	return o
}

// The ID of the Rewrite Rule Set
func (o ApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingAuthenticationCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Name of the Authentication Certificate to use.
func (o ApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingAuthenticationCertificate) string { return v.Name }).(pulumi.StringOutput)
}

type ApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendHttpSettingAuthenticationCertificate)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput) ToApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput() ApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput) ToApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendHttpSettingAuthenticationCertificate {
		return vs[0].([]ApplicationGatewayBackendHttpSettingAuthenticationCertificate)[vs[1].(int)]
	}).(ApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput)
}

type ApplicationGatewayBackendHttpSettingConnectionDraining struct {
	// The number of seconds connection draining is active. Acceptable values are from `1` second to `3600` seconds.
	DrainTimeoutSec int `pulumi:"drainTimeoutSec"`
	// If connection draining is enabled or not.
	Enabled bool `pulumi:"enabled"`
}

// ApplicationGatewayBackendHttpSettingConnectionDrainingInput is an input type that accepts ApplicationGatewayBackendHttpSettingConnectionDrainingArgs and ApplicationGatewayBackendHttpSettingConnectionDrainingOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingConnectionDrainingInput` via:
//
//	ApplicationGatewayBackendHttpSettingConnectionDrainingArgs{...}
type ApplicationGatewayBackendHttpSettingConnectionDrainingInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingConnectionDrainingOutput() ApplicationGatewayBackendHttpSettingConnectionDrainingOutput
	ToApplicationGatewayBackendHttpSettingConnectionDrainingOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingConnectionDrainingOutput
}

type ApplicationGatewayBackendHttpSettingConnectionDrainingArgs struct {
	// The number of seconds connection draining is active. Acceptable values are from `1` second to `3600` seconds.
	DrainTimeoutSec pulumi.IntInput `pulumi:"drainTimeoutSec"`
	// If connection draining is enabled or not.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ApplicationGatewayBackendHttpSettingConnectionDrainingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSettingConnectionDraining)(nil)).Elem()
}

func (i ApplicationGatewayBackendHttpSettingConnectionDrainingArgs) ToApplicationGatewayBackendHttpSettingConnectionDrainingOutput() ApplicationGatewayBackendHttpSettingConnectionDrainingOutput {
	return i.ToApplicationGatewayBackendHttpSettingConnectionDrainingOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingConnectionDrainingArgs) ToApplicationGatewayBackendHttpSettingConnectionDrainingOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingConnectionDrainingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingConnectionDrainingOutput)
}

func (i ApplicationGatewayBackendHttpSettingConnectionDrainingArgs) ToApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutput() ApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutput {
	return i.ToApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingConnectionDrainingArgs) ToApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingConnectionDrainingOutput).ToApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutputWithContext(ctx)
}

// ApplicationGatewayBackendHttpSettingConnectionDrainingPtrInput is an input type that accepts ApplicationGatewayBackendHttpSettingConnectionDrainingArgs, ApplicationGatewayBackendHttpSettingConnectionDrainingPtr and ApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingConnectionDrainingPtrInput` via:
//
//	        ApplicationGatewayBackendHttpSettingConnectionDrainingArgs{...}
//
//	or:
//
//	        nil
type ApplicationGatewayBackendHttpSettingConnectionDrainingPtrInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutput() ApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutput
	ToApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutput
}

type applicationGatewayBackendHttpSettingConnectionDrainingPtrType ApplicationGatewayBackendHttpSettingConnectionDrainingArgs

func ApplicationGatewayBackendHttpSettingConnectionDrainingPtr(v *ApplicationGatewayBackendHttpSettingConnectionDrainingArgs) ApplicationGatewayBackendHttpSettingConnectionDrainingPtrInput {
	return (*applicationGatewayBackendHttpSettingConnectionDrainingPtrType)(v)
}

func (*applicationGatewayBackendHttpSettingConnectionDrainingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayBackendHttpSettingConnectionDraining)(nil)).Elem()
}

func (i *applicationGatewayBackendHttpSettingConnectionDrainingPtrType) ToApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutput() ApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutput {
	return i.ToApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayBackendHttpSettingConnectionDrainingPtrType) ToApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutput)
}

type ApplicationGatewayBackendHttpSettingConnectionDrainingOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingConnectionDrainingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSettingConnectionDraining)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingConnectionDrainingOutput) ToApplicationGatewayBackendHttpSettingConnectionDrainingOutput() ApplicationGatewayBackendHttpSettingConnectionDrainingOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingConnectionDrainingOutput) ToApplicationGatewayBackendHttpSettingConnectionDrainingOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingConnectionDrainingOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingConnectionDrainingOutput) ToApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutput() ApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutput {
	return o.ToApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayBackendHttpSettingConnectionDrainingOutput) ToApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationGatewayBackendHttpSettingConnectionDraining) *ApplicationGatewayBackendHttpSettingConnectionDraining {
		return &v
	}).(ApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutput)
}

// The number of seconds connection draining is active. Acceptable values are from `1` second to `3600` seconds.
func (o ApplicationGatewayBackendHttpSettingConnectionDrainingOutput) DrainTimeoutSec() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingConnectionDraining) int { return v.DrainTimeoutSec }).(pulumi.IntOutput)
}

// If connection draining is enabled or not.
func (o ApplicationGatewayBackendHttpSettingConnectionDrainingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingConnectionDraining) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayBackendHttpSettingConnectionDraining)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutput) ToApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutput() ApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutput) ToApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutput) Elem() ApplicationGatewayBackendHttpSettingConnectionDrainingOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingConnectionDraining) ApplicationGatewayBackendHttpSettingConnectionDraining {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewayBackendHttpSettingConnectionDraining
		return ret
	}).(ApplicationGatewayBackendHttpSettingConnectionDrainingOutput)
}

// The number of seconds connection draining is active. Acceptable values are from `1` second to `3600` seconds.
func (o ApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutput) DrainTimeoutSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingConnectionDraining) *int {
		if v == nil {
			return nil
		}
		return &v.DrainTimeoutSec
	}).(pulumi.IntPtrOutput)
}

// If connection draining is enabled or not.
func (o ApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingConnectionDraining) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ApplicationGatewayCustomErrorConfiguration struct {
	// Error page URL of the application gateway customer error.
	CustomErrorPageUrl string `pulumi:"customErrorPageUrl"`
	// The ID of the Rewrite Rule Set
	Id *string `pulumi:"id"`
	// Status code of the application gateway customer error. Possible values are `HttpStatus403` and `HttpStatus502`
	StatusCode string `pulumi:"statusCode"`
}

// ApplicationGatewayCustomErrorConfigurationInput is an input type that accepts ApplicationGatewayCustomErrorConfigurationArgs and ApplicationGatewayCustomErrorConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayCustomErrorConfigurationInput` via:
//
//	ApplicationGatewayCustomErrorConfigurationArgs{...}
type ApplicationGatewayCustomErrorConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayCustomErrorConfigurationOutput() ApplicationGatewayCustomErrorConfigurationOutput
	ToApplicationGatewayCustomErrorConfigurationOutputWithContext(context.Context) ApplicationGatewayCustomErrorConfigurationOutput
}

type ApplicationGatewayCustomErrorConfigurationArgs struct {
	// Error page URL of the application gateway customer error.
	CustomErrorPageUrl pulumi.StringInput `pulumi:"customErrorPageUrl"`
	// The ID of the Rewrite Rule Set
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Status code of the application gateway customer error. Possible values are `HttpStatus403` and `HttpStatus502`
	StatusCode pulumi.StringInput `pulumi:"statusCode"`
}

func (ApplicationGatewayCustomErrorConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayCustomErrorConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayCustomErrorConfigurationArgs) ToApplicationGatewayCustomErrorConfigurationOutput() ApplicationGatewayCustomErrorConfigurationOutput {
	return i.ToApplicationGatewayCustomErrorConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayCustomErrorConfigurationArgs) ToApplicationGatewayCustomErrorConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayCustomErrorConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayCustomErrorConfigurationOutput)
}

// ApplicationGatewayCustomErrorConfigurationArrayInput is an input type that accepts ApplicationGatewayCustomErrorConfigurationArray and ApplicationGatewayCustomErrorConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayCustomErrorConfigurationArrayInput` via:
//
//	ApplicationGatewayCustomErrorConfigurationArray{ ApplicationGatewayCustomErrorConfigurationArgs{...} }
type ApplicationGatewayCustomErrorConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayCustomErrorConfigurationArrayOutput() ApplicationGatewayCustomErrorConfigurationArrayOutput
	ToApplicationGatewayCustomErrorConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayCustomErrorConfigurationArrayOutput
}

type ApplicationGatewayCustomErrorConfigurationArray []ApplicationGatewayCustomErrorConfigurationInput

func (ApplicationGatewayCustomErrorConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayCustomErrorConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayCustomErrorConfigurationArray) ToApplicationGatewayCustomErrorConfigurationArrayOutput() ApplicationGatewayCustomErrorConfigurationArrayOutput {
	return i.ToApplicationGatewayCustomErrorConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayCustomErrorConfigurationArray) ToApplicationGatewayCustomErrorConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayCustomErrorConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayCustomErrorConfigurationArrayOutput)
}

type ApplicationGatewayCustomErrorConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayCustomErrorConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayCustomErrorConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayCustomErrorConfigurationOutput) ToApplicationGatewayCustomErrorConfigurationOutput() ApplicationGatewayCustomErrorConfigurationOutput {
	return o
}

func (o ApplicationGatewayCustomErrorConfigurationOutput) ToApplicationGatewayCustomErrorConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayCustomErrorConfigurationOutput {
	return o
}

// Error page URL of the application gateway customer error.
func (o ApplicationGatewayCustomErrorConfigurationOutput) CustomErrorPageUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayCustomErrorConfiguration) string { return v.CustomErrorPageUrl }).(pulumi.StringOutput)
}

// The ID of the Rewrite Rule Set
func (o ApplicationGatewayCustomErrorConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayCustomErrorConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Status code of the application gateway customer error. Possible values are `HttpStatus403` and `HttpStatus502`
func (o ApplicationGatewayCustomErrorConfigurationOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayCustomErrorConfiguration) string { return v.StatusCode }).(pulumi.StringOutput)
}

type ApplicationGatewayCustomErrorConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayCustomErrorConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayCustomErrorConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayCustomErrorConfigurationArrayOutput) ToApplicationGatewayCustomErrorConfigurationArrayOutput() ApplicationGatewayCustomErrorConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayCustomErrorConfigurationArrayOutput) ToApplicationGatewayCustomErrorConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayCustomErrorConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayCustomErrorConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayCustomErrorConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayCustomErrorConfiguration {
		return vs[0].([]ApplicationGatewayCustomErrorConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayCustomErrorConfigurationOutput)
}

type ApplicationGatewayFrontendIpConfiguration struct {
	// The ID of the Rewrite Rule Set
	Id *string `pulumi:"id"`
	// The name of the Frontend IP Configuration.
	Name string `pulumi:"name"`
	// The Private IP Address to use for the Application Gateway.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// The Allocation Method for the Private IP Address. Possible values are `Dynamic` and `Static`. Defaults to `Dynamic`.
	PrivateIpAddressAllocation *string `pulumi:"privateIpAddressAllocation"`
	// The ID of the associated private link configuration.
	PrivateLinkConfigurationId *string `pulumi:"privateLinkConfigurationId"`
	// The name of the private link configuration to use for this frontend IP configuration.
	PrivateLinkConfigurationName *string `pulumi:"privateLinkConfigurationName"`
	// The ID of a Public IP Address which the Application Gateway should use. The allocation method for the Public IP Address depends on the `sku` of this Application Gateway. Please refer to the [Azure documentation for public IP addresses](https://docs.microsoft.com/azure/virtual-network/public-ip-addresses#application-gateways) for details.
	PublicIpAddressId *string `pulumi:"publicIpAddressId"`
	// The ID of the Subnet.
	SubnetId *string `pulumi:"subnetId"`
}

// ApplicationGatewayFrontendIpConfigurationInput is an input type that accepts ApplicationGatewayFrontendIpConfigurationArgs and ApplicationGatewayFrontendIpConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendIpConfigurationInput` via:
//
//	ApplicationGatewayFrontendIpConfigurationArgs{...}
type ApplicationGatewayFrontendIpConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendIpConfigurationOutput() ApplicationGatewayFrontendIpConfigurationOutput
	ToApplicationGatewayFrontendIpConfigurationOutputWithContext(context.Context) ApplicationGatewayFrontendIpConfigurationOutput
}

type ApplicationGatewayFrontendIpConfigurationArgs struct {
	// The ID of the Rewrite Rule Set
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the Frontend IP Configuration.
	Name pulumi.StringInput `pulumi:"name"`
	// The Private IP Address to use for the Application Gateway.
	PrivateIpAddress pulumi.StringPtrInput `pulumi:"privateIpAddress"`
	// The Allocation Method for the Private IP Address. Possible values are `Dynamic` and `Static`. Defaults to `Dynamic`.
	PrivateIpAddressAllocation pulumi.StringPtrInput `pulumi:"privateIpAddressAllocation"`
	// The ID of the associated private link configuration.
	PrivateLinkConfigurationId pulumi.StringPtrInput `pulumi:"privateLinkConfigurationId"`
	// The name of the private link configuration to use for this frontend IP configuration.
	PrivateLinkConfigurationName pulumi.StringPtrInput `pulumi:"privateLinkConfigurationName"`
	// The ID of a Public IP Address which the Application Gateway should use. The allocation method for the Public IP Address depends on the `sku` of this Application Gateway. Please refer to the [Azure documentation for public IP addresses](https://docs.microsoft.com/azure/virtual-network/public-ip-addresses#application-gateways) for details.
	PublicIpAddressId pulumi.StringPtrInput `pulumi:"publicIpAddressId"`
	// The ID of the Subnet.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (ApplicationGatewayFrontendIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendIpConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayFrontendIpConfigurationArgs) ToApplicationGatewayFrontendIpConfigurationOutput() ApplicationGatewayFrontendIpConfigurationOutput {
	return i.ToApplicationGatewayFrontendIpConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendIpConfigurationArgs) ToApplicationGatewayFrontendIpConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendIpConfigurationOutput)
}

// ApplicationGatewayFrontendIpConfigurationArrayInput is an input type that accepts ApplicationGatewayFrontendIpConfigurationArray and ApplicationGatewayFrontendIpConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendIpConfigurationArrayInput` via:
//
//	ApplicationGatewayFrontendIpConfigurationArray{ ApplicationGatewayFrontendIpConfigurationArgs{...} }
type ApplicationGatewayFrontendIpConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendIpConfigurationArrayOutput() ApplicationGatewayFrontendIpConfigurationArrayOutput
	ToApplicationGatewayFrontendIpConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayFrontendIpConfigurationArrayOutput
}

type ApplicationGatewayFrontendIpConfigurationArray []ApplicationGatewayFrontendIpConfigurationInput

func (ApplicationGatewayFrontendIpConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendIpConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayFrontendIpConfigurationArray) ToApplicationGatewayFrontendIpConfigurationArrayOutput() ApplicationGatewayFrontendIpConfigurationArrayOutput {
	return i.ToApplicationGatewayFrontendIpConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendIpConfigurationArray) ToApplicationGatewayFrontendIpConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIpConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendIpConfigurationArrayOutput)
}

type ApplicationGatewayFrontendIpConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendIpConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayFrontendIpConfigurationOutput) ToApplicationGatewayFrontendIpConfigurationOutput() ApplicationGatewayFrontendIpConfigurationOutput {
	return o
}

func (o ApplicationGatewayFrontendIpConfigurationOutput) ToApplicationGatewayFrontendIpConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIpConfigurationOutput {
	return o
}

// The ID of the Rewrite Rule Set
func (o ApplicationGatewayFrontendIpConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIpConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the Frontend IP Configuration.
func (o ApplicationGatewayFrontendIpConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIpConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// The Private IP Address to use for the Application Gateway.
func (o ApplicationGatewayFrontendIpConfigurationOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIpConfiguration) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

// The Allocation Method for the Private IP Address. Possible values are `Dynamic` and `Static`. Defaults to `Dynamic`.
func (o ApplicationGatewayFrontendIpConfigurationOutput) PrivateIpAddressAllocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIpConfiguration) *string { return v.PrivateIpAddressAllocation }).(pulumi.StringPtrOutput)
}

// The ID of the associated private link configuration.
func (o ApplicationGatewayFrontendIpConfigurationOutput) PrivateLinkConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIpConfiguration) *string { return v.PrivateLinkConfigurationId }).(pulumi.StringPtrOutput)
}

// The name of the private link configuration to use for this frontend IP configuration.
func (o ApplicationGatewayFrontendIpConfigurationOutput) PrivateLinkConfigurationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIpConfiguration) *string { return v.PrivateLinkConfigurationName }).(pulumi.StringPtrOutput)
}

// The ID of a Public IP Address which the Application Gateway should use. The allocation method for the Public IP Address depends on the `sku` of this Application Gateway. Please refer to the [Azure documentation for public IP addresses](https://docs.microsoft.com/azure/virtual-network/public-ip-addresses#application-gateways) for details.
func (o ApplicationGatewayFrontendIpConfigurationOutput) PublicIpAddressId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIpConfiguration) *string { return v.PublicIpAddressId }).(pulumi.StringPtrOutput)
}

// The ID of the Subnet.
func (o ApplicationGatewayFrontendIpConfigurationOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIpConfiguration) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayFrontendIpConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendIpConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendIpConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayFrontendIpConfigurationArrayOutput) ToApplicationGatewayFrontendIpConfigurationArrayOutput() ApplicationGatewayFrontendIpConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendIpConfigurationArrayOutput) ToApplicationGatewayFrontendIpConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIpConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendIpConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFrontendIpConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFrontendIpConfiguration {
		return vs[0].([]ApplicationGatewayFrontendIpConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayFrontendIpConfigurationOutput)
}

type ApplicationGatewayFrontendPort struct {
	// The ID of the Rewrite Rule Set
	Id *string `pulumi:"id"`
	// The name of the Frontend Port.
	Name string `pulumi:"name"`
	// The port used for this Frontend Port.
	Port int `pulumi:"port"`
}

// ApplicationGatewayFrontendPortInput is an input type that accepts ApplicationGatewayFrontendPortArgs and ApplicationGatewayFrontendPortOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendPortInput` via:
//
//	ApplicationGatewayFrontendPortArgs{...}
type ApplicationGatewayFrontendPortInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendPortOutput() ApplicationGatewayFrontendPortOutput
	ToApplicationGatewayFrontendPortOutputWithContext(context.Context) ApplicationGatewayFrontendPortOutput
}

type ApplicationGatewayFrontendPortArgs struct {
	// The ID of the Rewrite Rule Set
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the Frontend Port.
	Name pulumi.StringInput `pulumi:"name"`
	// The port used for this Frontend Port.
	Port pulumi.IntInput `pulumi:"port"`
}

func (ApplicationGatewayFrontendPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendPort)(nil)).Elem()
}

func (i ApplicationGatewayFrontendPortArgs) ToApplicationGatewayFrontendPortOutput() ApplicationGatewayFrontendPortOutput {
	return i.ToApplicationGatewayFrontendPortOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendPortArgs) ToApplicationGatewayFrontendPortOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendPortOutput)
}

// ApplicationGatewayFrontendPortArrayInput is an input type that accepts ApplicationGatewayFrontendPortArray and ApplicationGatewayFrontendPortArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendPortArrayInput` via:
//
//	ApplicationGatewayFrontendPortArray{ ApplicationGatewayFrontendPortArgs{...} }
type ApplicationGatewayFrontendPortArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendPortArrayOutput() ApplicationGatewayFrontendPortArrayOutput
	ToApplicationGatewayFrontendPortArrayOutputWithContext(context.Context) ApplicationGatewayFrontendPortArrayOutput
}

type ApplicationGatewayFrontendPortArray []ApplicationGatewayFrontendPortInput

func (ApplicationGatewayFrontendPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendPort)(nil)).Elem()
}

func (i ApplicationGatewayFrontendPortArray) ToApplicationGatewayFrontendPortArrayOutput() ApplicationGatewayFrontendPortArrayOutput {
	return i.ToApplicationGatewayFrontendPortArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendPortArray) ToApplicationGatewayFrontendPortArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendPortArrayOutput)
}

type ApplicationGatewayFrontendPortOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendPort)(nil)).Elem()
}

func (o ApplicationGatewayFrontendPortOutput) ToApplicationGatewayFrontendPortOutput() ApplicationGatewayFrontendPortOutput {
	return o
}

func (o ApplicationGatewayFrontendPortOutput) ToApplicationGatewayFrontendPortOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortOutput {
	return o
}

// The ID of the Rewrite Rule Set
func (o ApplicationGatewayFrontendPortOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPort) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the Frontend Port.
func (o ApplicationGatewayFrontendPortOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPort) string { return v.Name }).(pulumi.StringOutput)
}

// The port used for this Frontend Port.
func (o ApplicationGatewayFrontendPortOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPort) int { return v.Port }).(pulumi.IntOutput)
}

type ApplicationGatewayFrontendPortArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendPort)(nil)).Elem()
}

func (o ApplicationGatewayFrontendPortArrayOutput) ToApplicationGatewayFrontendPortArrayOutput() ApplicationGatewayFrontendPortArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendPortArrayOutput) ToApplicationGatewayFrontendPortArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendPortArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFrontendPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFrontendPort {
		return vs[0].([]ApplicationGatewayFrontendPort)[vs[1].(int)]
	}).(ApplicationGatewayFrontendPortOutput)
}

type ApplicationGatewayGatewayIpConfiguration struct {
	// The ID of the Rewrite Rule Set
	Id *string `pulumi:"id"`
	// The Name of this Gateway IP Configuration.
	Name string `pulumi:"name"`
	// The ID of the Subnet which the Application Gateway should be connected to.
	SubnetId string `pulumi:"subnetId"`
}

// ApplicationGatewayGatewayIpConfigurationInput is an input type that accepts ApplicationGatewayGatewayIpConfigurationArgs and ApplicationGatewayGatewayIpConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayGatewayIpConfigurationInput` via:
//
//	ApplicationGatewayGatewayIpConfigurationArgs{...}
type ApplicationGatewayGatewayIpConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayGatewayIpConfigurationOutput() ApplicationGatewayGatewayIpConfigurationOutput
	ToApplicationGatewayGatewayIpConfigurationOutputWithContext(context.Context) ApplicationGatewayGatewayIpConfigurationOutput
}

type ApplicationGatewayGatewayIpConfigurationArgs struct {
	// The ID of the Rewrite Rule Set
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Name of this Gateway IP Configuration.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the Subnet which the Application Gateway should be connected to.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (ApplicationGatewayGatewayIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayGatewayIpConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayGatewayIpConfigurationArgs) ToApplicationGatewayGatewayIpConfigurationOutput() ApplicationGatewayGatewayIpConfigurationOutput {
	return i.ToApplicationGatewayGatewayIpConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayGatewayIpConfigurationArgs) ToApplicationGatewayGatewayIpConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayGatewayIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayGatewayIpConfigurationOutput)
}

// ApplicationGatewayGatewayIpConfigurationArrayInput is an input type that accepts ApplicationGatewayGatewayIpConfigurationArray and ApplicationGatewayGatewayIpConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayGatewayIpConfigurationArrayInput` via:
//
//	ApplicationGatewayGatewayIpConfigurationArray{ ApplicationGatewayGatewayIpConfigurationArgs{...} }
type ApplicationGatewayGatewayIpConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayGatewayIpConfigurationArrayOutput() ApplicationGatewayGatewayIpConfigurationArrayOutput
	ToApplicationGatewayGatewayIpConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayGatewayIpConfigurationArrayOutput
}

type ApplicationGatewayGatewayIpConfigurationArray []ApplicationGatewayGatewayIpConfigurationInput

func (ApplicationGatewayGatewayIpConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayGatewayIpConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayGatewayIpConfigurationArray) ToApplicationGatewayGatewayIpConfigurationArrayOutput() ApplicationGatewayGatewayIpConfigurationArrayOutput {
	return i.ToApplicationGatewayGatewayIpConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayGatewayIpConfigurationArray) ToApplicationGatewayGatewayIpConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayGatewayIpConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayGatewayIpConfigurationArrayOutput)
}

type ApplicationGatewayGatewayIpConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayGatewayIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayGatewayIpConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayGatewayIpConfigurationOutput) ToApplicationGatewayGatewayIpConfigurationOutput() ApplicationGatewayGatewayIpConfigurationOutput {
	return o
}

func (o ApplicationGatewayGatewayIpConfigurationOutput) ToApplicationGatewayGatewayIpConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayGatewayIpConfigurationOutput {
	return o
}

// The ID of the Rewrite Rule Set
func (o ApplicationGatewayGatewayIpConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayGatewayIpConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Name of this Gateway IP Configuration.
func (o ApplicationGatewayGatewayIpConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayGatewayIpConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the Subnet which the Application Gateway should be connected to.
func (o ApplicationGatewayGatewayIpConfigurationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayGatewayIpConfiguration) string { return v.SubnetId }).(pulumi.StringOutput)
}

type ApplicationGatewayGatewayIpConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayGatewayIpConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayGatewayIpConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayGatewayIpConfigurationArrayOutput) ToApplicationGatewayGatewayIpConfigurationArrayOutput() ApplicationGatewayGatewayIpConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayGatewayIpConfigurationArrayOutput) ToApplicationGatewayGatewayIpConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayGatewayIpConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayGatewayIpConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayGatewayIpConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayGatewayIpConfiguration {
		return vs[0].([]ApplicationGatewayGatewayIpConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayGatewayIpConfigurationOutput)
}

type ApplicationGatewayGlobal struct {
	// Whether Application Gateway's Request buffer is enabled.
	RequestBufferingEnabled bool `pulumi:"requestBufferingEnabled"`
	// Whether Application Gateway's Response buffer is enabled.
	ResponseBufferingEnabled bool `pulumi:"responseBufferingEnabled"`
}

// ApplicationGatewayGlobalInput is an input type that accepts ApplicationGatewayGlobalArgs and ApplicationGatewayGlobalOutput values.
// You can construct a concrete instance of `ApplicationGatewayGlobalInput` via:
//
//	ApplicationGatewayGlobalArgs{...}
type ApplicationGatewayGlobalInput interface {
	pulumi.Input

	ToApplicationGatewayGlobalOutput() ApplicationGatewayGlobalOutput
	ToApplicationGatewayGlobalOutputWithContext(context.Context) ApplicationGatewayGlobalOutput
}

type ApplicationGatewayGlobalArgs struct {
	// Whether Application Gateway's Request buffer is enabled.
	RequestBufferingEnabled pulumi.BoolInput `pulumi:"requestBufferingEnabled"`
	// Whether Application Gateway's Response buffer is enabled.
	ResponseBufferingEnabled pulumi.BoolInput `pulumi:"responseBufferingEnabled"`
}

func (ApplicationGatewayGlobalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayGlobal)(nil)).Elem()
}

func (i ApplicationGatewayGlobalArgs) ToApplicationGatewayGlobalOutput() ApplicationGatewayGlobalOutput {
	return i.ToApplicationGatewayGlobalOutputWithContext(context.Background())
}

func (i ApplicationGatewayGlobalArgs) ToApplicationGatewayGlobalOutputWithContext(ctx context.Context) ApplicationGatewayGlobalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayGlobalOutput)
}

func (i ApplicationGatewayGlobalArgs) ToApplicationGatewayGlobalPtrOutput() ApplicationGatewayGlobalPtrOutput {
	return i.ToApplicationGatewayGlobalPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayGlobalArgs) ToApplicationGatewayGlobalPtrOutputWithContext(ctx context.Context) ApplicationGatewayGlobalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayGlobalOutput).ToApplicationGatewayGlobalPtrOutputWithContext(ctx)
}

// ApplicationGatewayGlobalPtrInput is an input type that accepts ApplicationGatewayGlobalArgs, ApplicationGatewayGlobalPtr and ApplicationGatewayGlobalPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayGlobalPtrInput` via:
//
//	        ApplicationGatewayGlobalArgs{...}
//
//	or:
//
//	        nil
type ApplicationGatewayGlobalPtrInput interface {
	pulumi.Input

	ToApplicationGatewayGlobalPtrOutput() ApplicationGatewayGlobalPtrOutput
	ToApplicationGatewayGlobalPtrOutputWithContext(context.Context) ApplicationGatewayGlobalPtrOutput
}

type applicationGatewayGlobalPtrType ApplicationGatewayGlobalArgs

func ApplicationGatewayGlobalPtr(v *ApplicationGatewayGlobalArgs) ApplicationGatewayGlobalPtrInput {
	return (*applicationGatewayGlobalPtrType)(v)
}

func (*applicationGatewayGlobalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayGlobal)(nil)).Elem()
}

func (i *applicationGatewayGlobalPtrType) ToApplicationGatewayGlobalPtrOutput() ApplicationGatewayGlobalPtrOutput {
	return i.ToApplicationGatewayGlobalPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayGlobalPtrType) ToApplicationGatewayGlobalPtrOutputWithContext(ctx context.Context) ApplicationGatewayGlobalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayGlobalPtrOutput)
}

type ApplicationGatewayGlobalOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayGlobalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayGlobal)(nil)).Elem()
}

func (o ApplicationGatewayGlobalOutput) ToApplicationGatewayGlobalOutput() ApplicationGatewayGlobalOutput {
	return o
}

func (o ApplicationGatewayGlobalOutput) ToApplicationGatewayGlobalOutputWithContext(ctx context.Context) ApplicationGatewayGlobalOutput {
	return o
}

func (o ApplicationGatewayGlobalOutput) ToApplicationGatewayGlobalPtrOutput() ApplicationGatewayGlobalPtrOutput {
	return o.ToApplicationGatewayGlobalPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayGlobalOutput) ToApplicationGatewayGlobalPtrOutputWithContext(ctx context.Context) ApplicationGatewayGlobalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationGatewayGlobal) *ApplicationGatewayGlobal {
		return &v
	}).(ApplicationGatewayGlobalPtrOutput)
}

// Whether Application Gateway's Request buffer is enabled.
func (o ApplicationGatewayGlobalOutput) RequestBufferingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationGatewayGlobal) bool { return v.RequestBufferingEnabled }).(pulumi.BoolOutput)
}

// Whether Application Gateway's Response buffer is enabled.
func (o ApplicationGatewayGlobalOutput) ResponseBufferingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationGatewayGlobal) bool { return v.ResponseBufferingEnabled }).(pulumi.BoolOutput)
}

type ApplicationGatewayGlobalPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayGlobalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayGlobal)(nil)).Elem()
}

func (o ApplicationGatewayGlobalPtrOutput) ToApplicationGatewayGlobalPtrOutput() ApplicationGatewayGlobalPtrOutput {
	return o
}

func (o ApplicationGatewayGlobalPtrOutput) ToApplicationGatewayGlobalPtrOutputWithContext(ctx context.Context) ApplicationGatewayGlobalPtrOutput {
	return o
}

func (o ApplicationGatewayGlobalPtrOutput) Elem() ApplicationGatewayGlobalOutput {
	return o.ApplyT(func(v *ApplicationGatewayGlobal) ApplicationGatewayGlobal {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewayGlobal
		return ret
	}).(ApplicationGatewayGlobalOutput)
}

// Whether Application Gateway's Request buffer is enabled.
func (o ApplicationGatewayGlobalPtrOutput) RequestBufferingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayGlobal) *bool {
		if v == nil {
			return nil
		}
		return &v.RequestBufferingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Whether Application Gateway's Response buffer is enabled.
func (o ApplicationGatewayGlobalPtrOutput) ResponseBufferingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayGlobal) *bool {
		if v == nil {
			return nil
		}
		return &v.ResponseBufferingEnabled
	}).(pulumi.BoolPtrOutput)
}

type ApplicationGatewayHttpListener struct {
	// One or more `customErrorConfiguration` blocks as defined below.
	CustomErrorConfigurations []ApplicationGatewayHttpListenerCustomErrorConfiguration `pulumi:"customErrorConfigurations"`
	// The ID of the Web Application Firewall Policy which should be used for this HTTP Listener.
	FirewallPolicyId *string `pulumi:"firewallPolicyId"`
	// The ID of the associated Frontend Configuration.
	FrontendIpConfigurationId *string `pulumi:"frontendIpConfigurationId"`
	// The Name of the Frontend IP Configuration used for this HTTP Listener.
	FrontendIpConfigurationName string `pulumi:"frontendIpConfigurationName"`
	// The ID of the associated Frontend Port.
	FrontendPortId *string `pulumi:"frontendPortId"`
	// The Name of the Frontend Port use for this HTTP Listener.
	FrontendPortName string `pulumi:"frontendPortName"`
	// The Hostname which should be used for this HTTP Listener. Setting this value changes Listener Type to 'Multi site'.
	HostName *string `pulumi:"hostName"`
	// A list of Hostname(s) should be used for this HTTP Listener. It allows special wildcard characters.
	//
	// > **NOTE** The `hostNames` and `hostName` are mutually exclusive and cannot both be set.
	HostNames []string `pulumi:"hostNames"`
	// The ID of the Rewrite Rule Set
	Id *string `pulumi:"id"`
	// The Name of the HTTP Listener.
	Name string `pulumi:"name"`
	// The Protocol to use for this HTTP Listener. Possible values are `Http` and `Https`.
	Protocol string `pulumi:"protocol"`
	// Should Server Name Indication be Required? Defaults to `false`.
	RequireSni *bool `pulumi:"requireSni"`
	// The ID of the associated SSL Certificate.
	SslCertificateId *string `pulumi:"sslCertificateId"`
	// The name of the associated SSL Certificate which should be used for this HTTP Listener.
	SslCertificateName *string `pulumi:"sslCertificateName"`
	// The ID of the associated SSL Profile.
	SslProfileId *string `pulumi:"sslProfileId"`
	// The name of the associated SSL Profile which should be used for this HTTP Listener.
	SslProfileName *string `pulumi:"sslProfileName"`
}

// ApplicationGatewayHttpListenerInput is an input type that accepts ApplicationGatewayHttpListenerArgs and ApplicationGatewayHttpListenerOutput values.
// You can construct a concrete instance of `ApplicationGatewayHttpListenerInput` via:
//
//	ApplicationGatewayHttpListenerArgs{...}
type ApplicationGatewayHttpListenerInput interface {
	pulumi.Input

	ToApplicationGatewayHttpListenerOutput() ApplicationGatewayHttpListenerOutput
	ToApplicationGatewayHttpListenerOutputWithContext(context.Context) ApplicationGatewayHttpListenerOutput
}

type ApplicationGatewayHttpListenerArgs struct {
	// One or more `customErrorConfiguration` blocks as defined below.
	CustomErrorConfigurations ApplicationGatewayHttpListenerCustomErrorConfigurationArrayInput `pulumi:"customErrorConfigurations"`
	// The ID of the Web Application Firewall Policy which should be used for this HTTP Listener.
	FirewallPolicyId pulumi.StringPtrInput `pulumi:"firewallPolicyId"`
	// The ID of the associated Frontend Configuration.
	FrontendIpConfigurationId pulumi.StringPtrInput `pulumi:"frontendIpConfigurationId"`
	// The Name of the Frontend IP Configuration used for this HTTP Listener.
	FrontendIpConfigurationName pulumi.StringInput `pulumi:"frontendIpConfigurationName"`
	// The ID of the associated Frontend Port.
	FrontendPortId pulumi.StringPtrInput `pulumi:"frontendPortId"`
	// The Name of the Frontend Port use for this HTTP Listener.
	FrontendPortName pulumi.StringInput `pulumi:"frontendPortName"`
	// The Hostname which should be used for this HTTP Listener. Setting this value changes Listener Type to 'Multi site'.
	HostName pulumi.StringPtrInput `pulumi:"hostName"`
	// A list of Hostname(s) should be used for this HTTP Listener. It allows special wildcard characters.
	//
	// > **NOTE** The `hostNames` and `hostName` are mutually exclusive and cannot both be set.
	HostNames pulumi.StringArrayInput `pulumi:"hostNames"`
	// The ID of the Rewrite Rule Set
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Name of the HTTP Listener.
	Name pulumi.StringInput `pulumi:"name"`
	// The Protocol to use for this HTTP Listener. Possible values are `Http` and `Https`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Should Server Name Indication be Required? Defaults to `false`.
	RequireSni pulumi.BoolPtrInput `pulumi:"requireSni"`
	// The ID of the associated SSL Certificate.
	SslCertificateId pulumi.StringPtrInput `pulumi:"sslCertificateId"`
	// The name of the associated SSL Certificate which should be used for this HTTP Listener.
	SslCertificateName pulumi.StringPtrInput `pulumi:"sslCertificateName"`
	// The ID of the associated SSL Profile.
	SslProfileId pulumi.StringPtrInput `pulumi:"sslProfileId"`
	// The name of the associated SSL Profile which should be used for this HTTP Listener.
	SslProfileName pulumi.StringPtrInput `pulumi:"sslProfileName"`
}

func (ApplicationGatewayHttpListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHttpListener)(nil)).Elem()
}

func (i ApplicationGatewayHttpListenerArgs) ToApplicationGatewayHttpListenerOutput() ApplicationGatewayHttpListenerOutput {
	return i.ToApplicationGatewayHttpListenerOutputWithContext(context.Background())
}

func (i ApplicationGatewayHttpListenerArgs) ToApplicationGatewayHttpListenerOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerOutput)
}

// ApplicationGatewayHttpListenerArrayInput is an input type that accepts ApplicationGatewayHttpListenerArray and ApplicationGatewayHttpListenerArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayHttpListenerArrayInput` via:
//
//	ApplicationGatewayHttpListenerArray{ ApplicationGatewayHttpListenerArgs{...} }
type ApplicationGatewayHttpListenerArrayInput interface {
	pulumi.Input

	ToApplicationGatewayHttpListenerArrayOutput() ApplicationGatewayHttpListenerArrayOutput
	ToApplicationGatewayHttpListenerArrayOutputWithContext(context.Context) ApplicationGatewayHttpListenerArrayOutput
}

type ApplicationGatewayHttpListenerArray []ApplicationGatewayHttpListenerInput

func (ApplicationGatewayHttpListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHttpListener)(nil)).Elem()
}

func (i ApplicationGatewayHttpListenerArray) ToApplicationGatewayHttpListenerArrayOutput() ApplicationGatewayHttpListenerArrayOutput {
	return i.ToApplicationGatewayHttpListenerArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayHttpListenerArray) ToApplicationGatewayHttpListenerArrayOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerArrayOutput)
}

type ApplicationGatewayHttpListenerOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHttpListener)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerOutput) ToApplicationGatewayHttpListenerOutput() ApplicationGatewayHttpListenerOutput {
	return o
}

func (o ApplicationGatewayHttpListenerOutput) ToApplicationGatewayHttpListenerOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerOutput {
	return o
}

// One or more `customErrorConfiguration` blocks as defined below.
func (o ApplicationGatewayHttpListenerOutput) CustomErrorConfigurations() ApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) []ApplicationGatewayHttpListenerCustomErrorConfiguration {
		return v.CustomErrorConfigurations
	}).(ApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput)
}

// The ID of the Web Application Firewall Policy which should be used for this HTTP Listener.
func (o ApplicationGatewayHttpListenerOutput) FirewallPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.FirewallPolicyId }).(pulumi.StringPtrOutput)
}

// The ID of the associated Frontend Configuration.
func (o ApplicationGatewayHttpListenerOutput) FrontendIpConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.FrontendIpConfigurationId }).(pulumi.StringPtrOutput)
}

// The Name of the Frontend IP Configuration used for this HTTP Listener.
func (o ApplicationGatewayHttpListenerOutput) FrontendIpConfigurationName() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) string { return v.FrontendIpConfigurationName }).(pulumi.StringOutput)
}

// The ID of the associated Frontend Port.
func (o ApplicationGatewayHttpListenerOutput) FrontendPortId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.FrontendPortId }).(pulumi.StringPtrOutput)
}

// The Name of the Frontend Port use for this HTTP Listener.
func (o ApplicationGatewayHttpListenerOutput) FrontendPortName() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) string { return v.FrontendPortName }).(pulumi.StringOutput)
}

// The Hostname which should be used for this HTTP Listener. Setting this value changes Listener Type to 'Multi site'.
func (o ApplicationGatewayHttpListenerOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// A list of Hostname(s) should be used for this HTTP Listener. It allows special wildcard characters.
//
// > **NOTE** The `hostNames` and `hostName` are mutually exclusive and cannot both be set.
func (o ApplicationGatewayHttpListenerOutput) HostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) []string { return v.HostNames }).(pulumi.StringArrayOutput)
}

// The ID of the Rewrite Rule Set
func (o ApplicationGatewayHttpListenerOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Name of the HTTP Listener.
func (o ApplicationGatewayHttpListenerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) string { return v.Name }).(pulumi.StringOutput)
}

// The Protocol to use for this HTTP Listener. Possible values are `Http` and `Https`.
func (o ApplicationGatewayHttpListenerOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) string { return v.Protocol }).(pulumi.StringOutput)
}

// Should Server Name Indication be Required? Defaults to `false`.
func (o ApplicationGatewayHttpListenerOutput) RequireSni() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *bool { return v.RequireSni }).(pulumi.BoolPtrOutput)
}

// The ID of the associated SSL Certificate.
func (o ApplicationGatewayHttpListenerOutput) SslCertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.SslCertificateId }).(pulumi.StringPtrOutput)
}

// The name of the associated SSL Certificate which should be used for this HTTP Listener.
func (o ApplicationGatewayHttpListenerOutput) SslCertificateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.SslCertificateName }).(pulumi.StringPtrOutput)
}

// The ID of the associated SSL Profile.
func (o ApplicationGatewayHttpListenerOutput) SslProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.SslProfileId }).(pulumi.StringPtrOutput)
}

// The name of the associated SSL Profile which should be used for this HTTP Listener.
func (o ApplicationGatewayHttpListenerOutput) SslProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.SslProfileName }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayHttpListenerArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHttpListener)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerArrayOutput) ToApplicationGatewayHttpListenerArrayOutput() ApplicationGatewayHttpListenerArrayOutput {
	return o
}

func (o ApplicationGatewayHttpListenerArrayOutput) ToApplicationGatewayHttpListenerArrayOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerArrayOutput {
	return o
}

func (o ApplicationGatewayHttpListenerArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayHttpListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayHttpListener {
		return vs[0].([]ApplicationGatewayHttpListener)[vs[1].(int)]
	}).(ApplicationGatewayHttpListenerOutput)
}

type ApplicationGatewayHttpListenerCustomErrorConfiguration struct {
	// Error page URL of the application gateway customer error.
	CustomErrorPageUrl string `pulumi:"customErrorPageUrl"`
	// The ID of the Rewrite Rule Set
	Id *string `pulumi:"id"`
	// Status code of the application gateway customer error. Possible values are `HttpStatus403` and `HttpStatus502`
	StatusCode string `pulumi:"statusCode"`
}

// ApplicationGatewayHttpListenerCustomErrorConfigurationInput is an input type that accepts ApplicationGatewayHttpListenerCustomErrorConfigurationArgs and ApplicationGatewayHttpListenerCustomErrorConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayHttpListenerCustomErrorConfigurationInput` via:
//
//	ApplicationGatewayHttpListenerCustomErrorConfigurationArgs{...}
type ApplicationGatewayHttpListenerCustomErrorConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayHttpListenerCustomErrorConfigurationOutput() ApplicationGatewayHttpListenerCustomErrorConfigurationOutput
	ToApplicationGatewayHttpListenerCustomErrorConfigurationOutputWithContext(context.Context) ApplicationGatewayHttpListenerCustomErrorConfigurationOutput
}

type ApplicationGatewayHttpListenerCustomErrorConfigurationArgs struct {
	// Error page URL of the application gateway customer error.
	CustomErrorPageUrl pulumi.StringInput `pulumi:"customErrorPageUrl"`
	// The ID of the Rewrite Rule Set
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Status code of the application gateway customer error. Possible values are `HttpStatus403` and `HttpStatus502`
	StatusCode pulumi.StringInput `pulumi:"statusCode"`
}

func (ApplicationGatewayHttpListenerCustomErrorConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHttpListenerCustomErrorConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayHttpListenerCustomErrorConfigurationArgs) ToApplicationGatewayHttpListenerCustomErrorConfigurationOutput() ApplicationGatewayHttpListenerCustomErrorConfigurationOutput {
	return i.ToApplicationGatewayHttpListenerCustomErrorConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayHttpListenerCustomErrorConfigurationArgs) ToApplicationGatewayHttpListenerCustomErrorConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerCustomErrorConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerCustomErrorConfigurationOutput)
}

// ApplicationGatewayHttpListenerCustomErrorConfigurationArrayInput is an input type that accepts ApplicationGatewayHttpListenerCustomErrorConfigurationArray and ApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayHttpListenerCustomErrorConfigurationArrayInput` via:
//
//	ApplicationGatewayHttpListenerCustomErrorConfigurationArray{ ApplicationGatewayHttpListenerCustomErrorConfigurationArgs{...} }
type ApplicationGatewayHttpListenerCustomErrorConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput() ApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput
	ToApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput
}

type ApplicationGatewayHttpListenerCustomErrorConfigurationArray []ApplicationGatewayHttpListenerCustomErrorConfigurationInput

func (ApplicationGatewayHttpListenerCustomErrorConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHttpListenerCustomErrorConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayHttpListenerCustomErrorConfigurationArray) ToApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput() ApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput {
	return i.ToApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayHttpListenerCustomErrorConfigurationArray) ToApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput)
}

type ApplicationGatewayHttpListenerCustomErrorConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerCustomErrorConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHttpListenerCustomErrorConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerCustomErrorConfigurationOutput) ToApplicationGatewayHttpListenerCustomErrorConfigurationOutput() ApplicationGatewayHttpListenerCustomErrorConfigurationOutput {
	return o
}

func (o ApplicationGatewayHttpListenerCustomErrorConfigurationOutput) ToApplicationGatewayHttpListenerCustomErrorConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerCustomErrorConfigurationOutput {
	return o
}

// Error page URL of the application gateway customer error.
func (o ApplicationGatewayHttpListenerCustomErrorConfigurationOutput) CustomErrorPageUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerCustomErrorConfiguration) string { return v.CustomErrorPageUrl }).(pulumi.StringOutput)
}

// The ID of the Rewrite Rule Set
func (o ApplicationGatewayHttpListenerCustomErrorConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerCustomErrorConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Status code of the application gateway customer error. Possible values are `HttpStatus403` and `HttpStatus502`
func (o ApplicationGatewayHttpListenerCustomErrorConfigurationOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerCustomErrorConfiguration) string { return v.StatusCode }).(pulumi.StringOutput)
}

type ApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHttpListenerCustomErrorConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput) ToApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput() ApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput) ToApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayHttpListenerCustomErrorConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayHttpListenerCustomErrorConfiguration {
		return vs[0].([]ApplicationGatewayHttpListenerCustomErrorConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayHttpListenerCustomErrorConfigurationOutput)
}

type ApplicationGatewayIdentity struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Application Gateway.
	IdentityIds []string `pulumi:"identityIds"`
	// Specifies the type of Managed Service Identity that should be configured on this Application Gateway. Only possible value is `UserAssigned`.
	Type string `pulumi:"type"`
}

// ApplicationGatewayIdentityInput is an input type that accepts ApplicationGatewayIdentityArgs and ApplicationGatewayIdentityOutput values.
// You can construct a concrete instance of `ApplicationGatewayIdentityInput` via:
//
//	ApplicationGatewayIdentityArgs{...}
type ApplicationGatewayIdentityInput interface {
	pulumi.Input

	ToApplicationGatewayIdentityOutput() ApplicationGatewayIdentityOutput
	ToApplicationGatewayIdentityOutputWithContext(context.Context) ApplicationGatewayIdentityOutput
}

type ApplicationGatewayIdentityArgs struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Application Gateway.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// Specifies the type of Managed Service Identity that should be configured on this Application Gateway. Only possible value is `UserAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationGatewayIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIdentity)(nil)).Elem()
}

func (i ApplicationGatewayIdentityArgs) ToApplicationGatewayIdentityOutput() ApplicationGatewayIdentityOutput {
	return i.ToApplicationGatewayIdentityOutputWithContext(context.Background())
}

func (i ApplicationGatewayIdentityArgs) ToApplicationGatewayIdentityOutputWithContext(ctx context.Context) ApplicationGatewayIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIdentityOutput)
}

func (i ApplicationGatewayIdentityArgs) ToApplicationGatewayIdentityPtrOutput() ApplicationGatewayIdentityPtrOutput {
	return i.ToApplicationGatewayIdentityPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayIdentityArgs) ToApplicationGatewayIdentityPtrOutputWithContext(ctx context.Context) ApplicationGatewayIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIdentityOutput).ToApplicationGatewayIdentityPtrOutputWithContext(ctx)
}

// ApplicationGatewayIdentityPtrInput is an input type that accepts ApplicationGatewayIdentityArgs, ApplicationGatewayIdentityPtr and ApplicationGatewayIdentityPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayIdentityPtrInput` via:
//
//	        ApplicationGatewayIdentityArgs{...}
//
//	or:
//
//	        nil
type ApplicationGatewayIdentityPtrInput interface {
	pulumi.Input

	ToApplicationGatewayIdentityPtrOutput() ApplicationGatewayIdentityPtrOutput
	ToApplicationGatewayIdentityPtrOutputWithContext(context.Context) ApplicationGatewayIdentityPtrOutput
}

type applicationGatewayIdentityPtrType ApplicationGatewayIdentityArgs

func ApplicationGatewayIdentityPtr(v *ApplicationGatewayIdentityArgs) ApplicationGatewayIdentityPtrInput {
	return (*applicationGatewayIdentityPtrType)(v)
}

func (*applicationGatewayIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayIdentity)(nil)).Elem()
}

func (i *applicationGatewayIdentityPtrType) ToApplicationGatewayIdentityPtrOutput() ApplicationGatewayIdentityPtrOutput {
	return i.ToApplicationGatewayIdentityPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayIdentityPtrType) ToApplicationGatewayIdentityPtrOutputWithContext(ctx context.Context) ApplicationGatewayIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIdentityPtrOutput)
}

type ApplicationGatewayIdentityOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIdentity)(nil)).Elem()
}

func (o ApplicationGatewayIdentityOutput) ToApplicationGatewayIdentityOutput() ApplicationGatewayIdentityOutput {
	return o
}

func (o ApplicationGatewayIdentityOutput) ToApplicationGatewayIdentityOutputWithContext(ctx context.Context) ApplicationGatewayIdentityOutput {
	return o
}

func (o ApplicationGatewayIdentityOutput) ToApplicationGatewayIdentityPtrOutput() ApplicationGatewayIdentityPtrOutput {
	return o.ToApplicationGatewayIdentityPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayIdentityOutput) ToApplicationGatewayIdentityPtrOutputWithContext(ctx context.Context) ApplicationGatewayIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationGatewayIdentity) *ApplicationGatewayIdentity {
		return &v
	}).(ApplicationGatewayIdentityPtrOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Application Gateway.
func (o ApplicationGatewayIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Application Gateway. Only possible value is `UserAssigned`.
func (o ApplicationGatewayIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayIdentityPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayIdentity)(nil)).Elem()
}

func (o ApplicationGatewayIdentityPtrOutput) ToApplicationGatewayIdentityPtrOutput() ApplicationGatewayIdentityPtrOutput {
	return o
}

func (o ApplicationGatewayIdentityPtrOutput) ToApplicationGatewayIdentityPtrOutputWithContext(ctx context.Context) ApplicationGatewayIdentityPtrOutput {
	return o
}

func (o ApplicationGatewayIdentityPtrOutput) Elem() ApplicationGatewayIdentityOutput {
	return o.ApplyT(func(v *ApplicationGatewayIdentity) ApplicationGatewayIdentity {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewayIdentity
		return ret
	}).(ApplicationGatewayIdentityOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Application Gateway.
func (o ApplicationGatewayIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Application Gateway. Only possible value is `UserAssigned`.
func (o ApplicationGatewayIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ApplicationGatewayPrivateEndpointConnection struct {
	// The ID of the Rewrite Rule Set
	Id *string `pulumi:"id"`
	// The name of the Application Gateway. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
}

// ApplicationGatewayPrivateEndpointConnectionInput is an input type that accepts ApplicationGatewayPrivateEndpointConnectionArgs and ApplicationGatewayPrivateEndpointConnectionOutput values.
// You can construct a concrete instance of `ApplicationGatewayPrivateEndpointConnectionInput` via:
//
//	ApplicationGatewayPrivateEndpointConnectionArgs{...}
type ApplicationGatewayPrivateEndpointConnectionInput interface {
	pulumi.Input

	ToApplicationGatewayPrivateEndpointConnectionOutput() ApplicationGatewayPrivateEndpointConnectionOutput
	ToApplicationGatewayPrivateEndpointConnectionOutputWithContext(context.Context) ApplicationGatewayPrivateEndpointConnectionOutput
}

type ApplicationGatewayPrivateEndpointConnectionArgs struct {
	// The ID of the Rewrite Rule Set
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the Application Gateway. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ApplicationGatewayPrivateEndpointConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPrivateEndpointConnection)(nil)).Elem()
}

func (i ApplicationGatewayPrivateEndpointConnectionArgs) ToApplicationGatewayPrivateEndpointConnectionOutput() ApplicationGatewayPrivateEndpointConnectionOutput {
	return i.ToApplicationGatewayPrivateEndpointConnectionOutputWithContext(context.Background())
}

func (i ApplicationGatewayPrivateEndpointConnectionArgs) ToApplicationGatewayPrivateEndpointConnectionOutputWithContext(ctx context.Context) ApplicationGatewayPrivateEndpointConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPrivateEndpointConnectionOutput)
}

// ApplicationGatewayPrivateEndpointConnectionArrayInput is an input type that accepts ApplicationGatewayPrivateEndpointConnectionArray and ApplicationGatewayPrivateEndpointConnectionArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayPrivateEndpointConnectionArrayInput` via:
//
//	ApplicationGatewayPrivateEndpointConnectionArray{ ApplicationGatewayPrivateEndpointConnectionArgs{...} }
type ApplicationGatewayPrivateEndpointConnectionArrayInput interface {
	pulumi.Input

	ToApplicationGatewayPrivateEndpointConnectionArrayOutput() ApplicationGatewayPrivateEndpointConnectionArrayOutput
	ToApplicationGatewayPrivateEndpointConnectionArrayOutputWithContext(context.Context) ApplicationGatewayPrivateEndpointConnectionArrayOutput
}

type ApplicationGatewayPrivateEndpointConnectionArray []ApplicationGatewayPrivateEndpointConnectionInput

func (ApplicationGatewayPrivateEndpointConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPrivateEndpointConnection)(nil)).Elem()
}

func (i ApplicationGatewayPrivateEndpointConnectionArray) ToApplicationGatewayPrivateEndpointConnectionArrayOutput() ApplicationGatewayPrivateEndpointConnectionArrayOutput {
	return i.ToApplicationGatewayPrivateEndpointConnectionArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayPrivateEndpointConnectionArray) ToApplicationGatewayPrivateEndpointConnectionArrayOutputWithContext(ctx context.Context) ApplicationGatewayPrivateEndpointConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPrivateEndpointConnectionArrayOutput)
}

type ApplicationGatewayPrivateEndpointConnectionOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPrivateEndpointConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPrivateEndpointConnection)(nil)).Elem()
}

func (o ApplicationGatewayPrivateEndpointConnectionOutput) ToApplicationGatewayPrivateEndpointConnectionOutput() ApplicationGatewayPrivateEndpointConnectionOutput {
	return o
}

func (o ApplicationGatewayPrivateEndpointConnectionOutput) ToApplicationGatewayPrivateEndpointConnectionOutputWithContext(ctx context.Context) ApplicationGatewayPrivateEndpointConnectionOutput {
	return o
}

// The ID of the Rewrite Rule Set
func (o ApplicationGatewayPrivateEndpointConnectionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateEndpointConnection) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the Application Gateway. Changing this forces a new resource to be created.
func (o ApplicationGatewayPrivateEndpointConnectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateEndpointConnection) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayPrivateEndpointConnectionArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPrivateEndpointConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPrivateEndpointConnection)(nil)).Elem()
}

func (o ApplicationGatewayPrivateEndpointConnectionArrayOutput) ToApplicationGatewayPrivateEndpointConnectionArrayOutput() ApplicationGatewayPrivateEndpointConnectionArrayOutput {
	return o
}

func (o ApplicationGatewayPrivateEndpointConnectionArrayOutput) ToApplicationGatewayPrivateEndpointConnectionArrayOutputWithContext(ctx context.Context) ApplicationGatewayPrivateEndpointConnectionArrayOutput {
	return o
}

func (o ApplicationGatewayPrivateEndpointConnectionArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayPrivateEndpointConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayPrivateEndpointConnection {
		return vs[0].([]ApplicationGatewayPrivateEndpointConnection)[vs[1].(int)]
	}).(ApplicationGatewayPrivateEndpointConnectionOutput)
}

type ApplicationGatewayPrivateLinkConfiguration struct {
	// The ID of the Rewrite Rule Set
	Id *string `pulumi:"id"`
	// One or more `ipConfiguration` blocks as defined below.
	//
	// > **Please Note**: The `AllowApplicationGatewayPrivateLink` feature must be registered on the subscription before enabling private link
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	IpConfigurations []ApplicationGatewayPrivateLinkConfigurationIpConfiguration `pulumi:"ipConfigurations"`
	// The name of the private link configuration.
	Name string `pulumi:"name"`
}

// ApplicationGatewayPrivateLinkConfigurationInput is an input type that accepts ApplicationGatewayPrivateLinkConfigurationArgs and ApplicationGatewayPrivateLinkConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayPrivateLinkConfigurationInput` via:
//
//	ApplicationGatewayPrivateLinkConfigurationArgs{...}
type ApplicationGatewayPrivateLinkConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayPrivateLinkConfigurationOutput() ApplicationGatewayPrivateLinkConfigurationOutput
	ToApplicationGatewayPrivateLinkConfigurationOutputWithContext(context.Context) ApplicationGatewayPrivateLinkConfigurationOutput
}

type ApplicationGatewayPrivateLinkConfigurationArgs struct {
	// The ID of the Rewrite Rule Set
	Id pulumi.StringPtrInput `pulumi:"id"`
	// One or more `ipConfiguration` blocks as defined below.
	//
	// > **Please Note**: The `AllowApplicationGatewayPrivateLink` feature must be registered on the subscription before enabling private link
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	IpConfigurations ApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayInput `pulumi:"ipConfigurations"`
	// The name of the private link configuration.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ApplicationGatewayPrivateLinkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPrivateLinkConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayPrivateLinkConfigurationArgs) ToApplicationGatewayPrivateLinkConfigurationOutput() ApplicationGatewayPrivateLinkConfigurationOutput {
	return i.ToApplicationGatewayPrivateLinkConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayPrivateLinkConfigurationArgs) ToApplicationGatewayPrivateLinkConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPrivateLinkConfigurationOutput)
}

// ApplicationGatewayPrivateLinkConfigurationArrayInput is an input type that accepts ApplicationGatewayPrivateLinkConfigurationArray and ApplicationGatewayPrivateLinkConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayPrivateLinkConfigurationArrayInput` via:
//
//	ApplicationGatewayPrivateLinkConfigurationArray{ ApplicationGatewayPrivateLinkConfigurationArgs{...} }
type ApplicationGatewayPrivateLinkConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayPrivateLinkConfigurationArrayOutput() ApplicationGatewayPrivateLinkConfigurationArrayOutput
	ToApplicationGatewayPrivateLinkConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayPrivateLinkConfigurationArrayOutput
}

type ApplicationGatewayPrivateLinkConfigurationArray []ApplicationGatewayPrivateLinkConfigurationInput

func (ApplicationGatewayPrivateLinkConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPrivateLinkConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayPrivateLinkConfigurationArray) ToApplicationGatewayPrivateLinkConfigurationArrayOutput() ApplicationGatewayPrivateLinkConfigurationArrayOutput {
	return i.ToApplicationGatewayPrivateLinkConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayPrivateLinkConfigurationArray) ToApplicationGatewayPrivateLinkConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPrivateLinkConfigurationArrayOutput)
}

type ApplicationGatewayPrivateLinkConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPrivateLinkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPrivateLinkConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayPrivateLinkConfigurationOutput) ToApplicationGatewayPrivateLinkConfigurationOutput() ApplicationGatewayPrivateLinkConfigurationOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkConfigurationOutput) ToApplicationGatewayPrivateLinkConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkConfigurationOutput {
	return o
}

// The ID of the Rewrite Rule Set
func (o ApplicationGatewayPrivateLinkConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// One or more `ipConfiguration` blocks as defined below.
//
// > **Please Note**: The `AllowApplicationGatewayPrivateLink` feature must be registered on the subscription before enabling private link
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			return nil
//		})
//	}
//
// ```
func (o ApplicationGatewayPrivateLinkConfigurationOutput) IpConfigurations() ApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkConfiguration) []ApplicationGatewayPrivateLinkConfigurationIpConfiguration {
		return v.IpConfigurations
	}).(ApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput)
}

// The name of the private link configuration.
func (o ApplicationGatewayPrivateLinkConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

type ApplicationGatewayPrivateLinkConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPrivateLinkConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPrivateLinkConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayPrivateLinkConfigurationArrayOutput) ToApplicationGatewayPrivateLinkConfigurationArrayOutput() ApplicationGatewayPrivateLinkConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkConfigurationArrayOutput) ToApplicationGatewayPrivateLinkConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayPrivateLinkConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayPrivateLinkConfiguration {
		return vs[0].([]ApplicationGatewayPrivateLinkConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayPrivateLinkConfigurationOutput)
}

type ApplicationGatewayPrivateLinkConfigurationIpConfiguration struct {
	// The name of the IP configuration.
	Name string `pulumi:"name"`
	// Is this the Primary IP Configuration?
	Primary bool `pulumi:"primary"`
	// The Static IP Address which should be used.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// The allocation method used for the Private IP Address. Possible values are `Dynamic` and `Static`.
	PrivateIpAddressAllocation string `pulumi:"privateIpAddressAllocation"`
	// The ID of the subnet the private link configuration should connect to.
	SubnetId string `pulumi:"subnetId"`
}

// ApplicationGatewayPrivateLinkConfigurationIpConfigurationInput is an input type that accepts ApplicationGatewayPrivateLinkConfigurationIpConfigurationArgs and ApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayPrivateLinkConfigurationIpConfigurationInput` via:
//
//	ApplicationGatewayPrivateLinkConfigurationIpConfigurationArgs{...}
type ApplicationGatewayPrivateLinkConfigurationIpConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput() ApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput
	ToApplicationGatewayPrivateLinkConfigurationIpConfigurationOutputWithContext(context.Context) ApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput
}

type ApplicationGatewayPrivateLinkConfigurationIpConfigurationArgs struct {
	// The name of the IP configuration.
	Name pulumi.StringInput `pulumi:"name"`
	// Is this the Primary IP Configuration?
	Primary pulumi.BoolInput `pulumi:"primary"`
	// The Static IP Address which should be used.
	PrivateIpAddress pulumi.StringPtrInput `pulumi:"privateIpAddress"`
	// The allocation method used for the Private IP Address. Possible values are `Dynamic` and `Static`.
	PrivateIpAddressAllocation pulumi.StringInput `pulumi:"privateIpAddressAllocation"`
	// The ID of the subnet the private link configuration should connect to.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (ApplicationGatewayPrivateLinkConfigurationIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPrivateLinkConfigurationIpConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayPrivateLinkConfigurationIpConfigurationArgs) ToApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput() ApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput {
	return i.ToApplicationGatewayPrivateLinkConfigurationIpConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayPrivateLinkConfigurationIpConfigurationArgs) ToApplicationGatewayPrivateLinkConfigurationIpConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput)
}

// ApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayInput is an input type that accepts ApplicationGatewayPrivateLinkConfigurationIpConfigurationArray and ApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayInput` via:
//
//	ApplicationGatewayPrivateLinkConfigurationIpConfigurationArray{ ApplicationGatewayPrivateLinkConfigurationIpConfigurationArgs{...} }
type ApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput() ApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput
	ToApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput
}

type ApplicationGatewayPrivateLinkConfigurationIpConfigurationArray []ApplicationGatewayPrivateLinkConfigurationIpConfigurationInput

func (ApplicationGatewayPrivateLinkConfigurationIpConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPrivateLinkConfigurationIpConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayPrivateLinkConfigurationIpConfigurationArray) ToApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput() ApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput {
	return i.ToApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayPrivateLinkConfigurationIpConfigurationArray) ToApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput)
}

type ApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPrivateLinkConfigurationIpConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput) ToApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput() ApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput) ToApplicationGatewayPrivateLinkConfigurationIpConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput {
	return o
}

// The name of the IP configuration.
func (o ApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkConfigurationIpConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// Is this the Primary IP Configuration?
func (o ApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput) Primary() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkConfigurationIpConfiguration) bool { return v.Primary }).(pulumi.BoolOutput)
}

// The Static IP Address which should be used.
func (o ApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkConfigurationIpConfiguration) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

// The allocation method used for the Private IP Address. Possible values are `Dynamic` and `Static`.
func (o ApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput) PrivateIpAddressAllocation() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkConfigurationIpConfiguration) string {
		return v.PrivateIpAddressAllocation
	}).(pulumi.StringOutput)
}

// The ID of the subnet the private link configuration should connect to.
func (o ApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkConfigurationIpConfiguration) string { return v.SubnetId }).(pulumi.StringOutput)
}

type ApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPrivateLinkConfigurationIpConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput) ToApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput() ApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput) ToApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayPrivateLinkConfigurationIpConfiguration {
		return vs[0].([]ApplicationGatewayPrivateLinkConfigurationIpConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput)
}

type ApplicationGatewayProbe struct {
	// The Hostname used for this Probe. If the Application Gateway is configured for a single site, by default the Host name should be specified as `127.0.0.1`, unless otherwise configured in custom probe. Cannot be set if `pickHostNameFromBackendHttpSettings` is set to `true`.
	Host *string `pulumi:"host"`
	// The ID of the Rewrite Rule Set
	Id *string `pulumi:"id"`
	// The Interval between two consecutive probes in seconds. Possible values range from 1 second to a maximum of 86,400 seconds.
	Interval int `pulumi:"interval"`
	// A `match` block as defined above.
	Match *ApplicationGatewayProbeMatch `pulumi:"match"`
	// The minimum number of servers that are always marked as healthy. Defaults to `0`.
	MinimumServers *int `pulumi:"minimumServers"`
	// The Name of the Probe.
	Name string `pulumi:"name"`
	// The Path used for this Probe.
	Path string `pulumi:"path"`
	// Whether the host header should be picked from the backend HTTP settings. Defaults to `false`.
	PickHostNameFromBackendHttpSettings *bool `pulumi:"pickHostNameFromBackendHttpSettings"`
	// Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from HTTP settings will be used. This property is valid for Standard_v2 and WAF_v2 only.
	Port *int `pulumi:"port"`
	// The Protocol used for this Probe. Possible values are `Http` and `Https`.
	Protocol string `pulumi:"protocol"`
	// The Timeout used for this Probe, which indicates when a probe becomes unhealthy. Possible values range from 1 second to a maximum of 86,400 seconds.
	Timeout int `pulumi:"timeout"`
	// The Unhealthy Threshold for this Probe, which indicates the amount of retries which should be attempted before a node is deemed unhealthy. Possible values are from 1 to 20.
	UnhealthyThreshold int `pulumi:"unhealthyThreshold"`
}

// ApplicationGatewayProbeInput is an input type that accepts ApplicationGatewayProbeArgs and ApplicationGatewayProbeOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeInput` via:
//
//	ApplicationGatewayProbeArgs{...}
type ApplicationGatewayProbeInput interface {
	pulumi.Input

	ToApplicationGatewayProbeOutput() ApplicationGatewayProbeOutput
	ToApplicationGatewayProbeOutputWithContext(context.Context) ApplicationGatewayProbeOutput
}

type ApplicationGatewayProbeArgs struct {
	// The Hostname used for this Probe. If the Application Gateway is configured for a single site, by default the Host name should be specified as `127.0.0.1`, unless otherwise configured in custom probe. Cannot be set if `pickHostNameFromBackendHttpSettings` is set to `true`.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The ID of the Rewrite Rule Set
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Interval between two consecutive probes in seconds. Possible values range from 1 second to a maximum of 86,400 seconds.
	Interval pulumi.IntInput `pulumi:"interval"`
	// A `match` block as defined above.
	Match ApplicationGatewayProbeMatchPtrInput `pulumi:"match"`
	// The minimum number of servers that are always marked as healthy. Defaults to `0`.
	MinimumServers pulumi.IntPtrInput `pulumi:"minimumServers"`
	// The Name of the Probe.
	Name pulumi.StringInput `pulumi:"name"`
	// The Path used for this Probe.
	Path pulumi.StringInput `pulumi:"path"`
	// Whether the host header should be picked from the backend HTTP settings. Defaults to `false`.
	PickHostNameFromBackendHttpSettings pulumi.BoolPtrInput `pulumi:"pickHostNameFromBackendHttpSettings"`
	// Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from HTTP settings will be used. This property is valid for Standard_v2 and WAF_v2 only.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The Protocol used for this Probe. Possible values are `Http` and `Https`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The Timeout used for this Probe, which indicates when a probe becomes unhealthy. Possible values range from 1 second to a maximum of 86,400 seconds.
	Timeout pulumi.IntInput `pulumi:"timeout"`
	// The Unhealthy Threshold for this Probe, which indicates the amount of retries which should be attempted before a node is deemed unhealthy. Possible values are from 1 to 20.
	UnhealthyThreshold pulumi.IntInput `pulumi:"unhealthyThreshold"`
}

func (ApplicationGatewayProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbe)(nil)).Elem()
}

func (i ApplicationGatewayProbeArgs) ToApplicationGatewayProbeOutput() ApplicationGatewayProbeOutput {
	return i.ToApplicationGatewayProbeOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeArgs) ToApplicationGatewayProbeOutputWithContext(ctx context.Context) ApplicationGatewayProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeOutput)
}

// ApplicationGatewayProbeArrayInput is an input type that accepts ApplicationGatewayProbeArray and ApplicationGatewayProbeArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeArrayInput` via:
//
//	ApplicationGatewayProbeArray{ ApplicationGatewayProbeArgs{...} }
type ApplicationGatewayProbeArrayInput interface {
	pulumi.Input

	ToApplicationGatewayProbeArrayOutput() ApplicationGatewayProbeArrayOutput
	ToApplicationGatewayProbeArrayOutputWithContext(context.Context) ApplicationGatewayProbeArrayOutput
}

type ApplicationGatewayProbeArray []ApplicationGatewayProbeInput

func (ApplicationGatewayProbeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayProbe)(nil)).Elem()
}

func (i ApplicationGatewayProbeArray) ToApplicationGatewayProbeArrayOutput() ApplicationGatewayProbeArrayOutput {
	return i.ToApplicationGatewayProbeArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeArray) ToApplicationGatewayProbeArrayOutputWithContext(ctx context.Context) ApplicationGatewayProbeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeArrayOutput)
}

type ApplicationGatewayProbeOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbe)(nil)).Elem()
}

func (o ApplicationGatewayProbeOutput) ToApplicationGatewayProbeOutput() ApplicationGatewayProbeOutput {
	return o
}

func (o ApplicationGatewayProbeOutput) ToApplicationGatewayProbeOutputWithContext(ctx context.Context) ApplicationGatewayProbeOutput {
	return o
}

// The Hostname used for this Probe. If the Application Gateway is configured for a single site, by default the Host name should be specified as `127.0.0.1`, unless otherwise configured in custom probe. Cannot be set if `pickHostNameFromBackendHttpSettings` is set to `true`.
func (o ApplicationGatewayProbeOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The ID of the Rewrite Rule Set
func (o ApplicationGatewayProbeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Interval between two consecutive probes in seconds. Possible values range from 1 second to a maximum of 86,400 seconds.
func (o ApplicationGatewayProbeOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) int { return v.Interval }).(pulumi.IntOutput)
}

// A `match` block as defined above.
func (o ApplicationGatewayProbeOutput) Match() ApplicationGatewayProbeMatchPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *ApplicationGatewayProbeMatch { return v.Match }).(ApplicationGatewayProbeMatchPtrOutput)
}

// The minimum number of servers that are always marked as healthy. Defaults to `0`.
func (o ApplicationGatewayProbeOutput) MinimumServers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *int { return v.MinimumServers }).(pulumi.IntPtrOutput)
}

// The Name of the Probe.
func (o ApplicationGatewayProbeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) string { return v.Name }).(pulumi.StringOutput)
}

// The Path used for this Probe.
func (o ApplicationGatewayProbeOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) string { return v.Path }).(pulumi.StringOutput)
}

// Whether the host header should be picked from the backend HTTP settings. Defaults to `false`.
func (o ApplicationGatewayProbeOutput) PickHostNameFromBackendHttpSettings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *bool { return v.PickHostNameFromBackendHttpSettings }).(pulumi.BoolPtrOutput)
}

// Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from HTTP settings will be used. This property is valid for Standard_v2 and WAF_v2 only.
func (o ApplicationGatewayProbeOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The Protocol used for this Probe. Possible values are `Http` and `Https`.
func (o ApplicationGatewayProbeOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) string { return v.Protocol }).(pulumi.StringOutput)
}

// The Timeout used for this Probe, which indicates when a probe becomes unhealthy. Possible values range from 1 second to a maximum of 86,400 seconds.
func (o ApplicationGatewayProbeOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) int { return v.Timeout }).(pulumi.IntOutput)
}

// The Unhealthy Threshold for this Probe, which indicates the amount of retries which should be attempted before a node is deemed unhealthy. Possible values are from 1 to 20.
func (o ApplicationGatewayProbeOutput) UnhealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) int { return v.UnhealthyThreshold }).(pulumi.IntOutput)
}

type ApplicationGatewayProbeArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayProbe)(nil)).Elem()
}

func (o ApplicationGatewayProbeArrayOutput) ToApplicationGatewayProbeArrayOutput() ApplicationGatewayProbeArrayOutput {
	return o
}

func (o ApplicationGatewayProbeArrayOutput) ToApplicationGatewayProbeArrayOutputWithContext(ctx context.Context) ApplicationGatewayProbeArrayOutput {
	return o
}

func (o ApplicationGatewayProbeArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayProbeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayProbe {
		return vs[0].([]ApplicationGatewayProbe)[vs[1].(int)]
	}).(ApplicationGatewayProbeOutput)
}

type ApplicationGatewayProbeMatch struct {
	// A snippet from the Response Body which must be present in the Response.
	Body *string `pulumi:"body"`
	// A list of allowed status codes for this Health Probe.
	StatusCodes []string `pulumi:"statusCodes"`
}

// ApplicationGatewayProbeMatchInput is an input type that accepts ApplicationGatewayProbeMatchArgs and ApplicationGatewayProbeMatchOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeMatchInput` via:
//
//	ApplicationGatewayProbeMatchArgs{...}
type ApplicationGatewayProbeMatchInput interface {
	pulumi.Input

	ToApplicationGatewayProbeMatchOutput() ApplicationGatewayProbeMatchOutput
	ToApplicationGatewayProbeMatchOutputWithContext(context.Context) ApplicationGatewayProbeMatchOutput
}

type ApplicationGatewayProbeMatchArgs struct {
	// A snippet from the Response Body which must be present in the Response.
	Body pulumi.StringPtrInput `pulumi:"body"`
	// A list of allowed status codes for this Health Probe.
	StatusCodes pulumi.StringArrayInput `pulumi:"statusCodes"`
}

func (ApplicationGatewayProbeMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbeMatch)(nil)).Elem()
}

func (i ApplicationGatewayProbeMatchArgs) ToApplicationGatewayProbeMatchOutput() ApplicationGatewayProbeMatchOutput {
	return i.ToApplicationGatewayProbeMatchOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeMatchArgs) ToApplicationGatewayProbeMatchOutputWithContext(ctx context.Context) ApplicationGatewayProbeMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeMatchOutput)
}

func (i ApplicationGatewayProbeMatchArgs) ToApplicationGatewayProbeMatchPtrOutput() ApplicationGatewayProbeMatchPtrOutput {
	return i.ToApplicationGatewayProbeMatchPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeMatchArgs) ToApplicationGatewayProbeMatchPtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeMatchOutput).ToApplicationGatewayProbeMatchPtrOutputWithContext(ctx)
}

// ApplicationGatewayProbeMatchPtrInput is an input type that accepts ApplicationGatewayProbeMatchArgs, ApplicationGatewayProbeMatchPtr and ApplicationGatewayProbeMatchPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeMatchPtrInput` via:
//
//	        ApplicationGatewayProbeMatchArgs{...}
//
//	or:
//
//	        nil
type ApplicationGatewayProbeMatchPtrInput interface {
	pulumi.Input

	ToApplicationGatewayProbeMatchPtrOutput() ApplicationGatewayProbeMatchPtrOutput
	ToApplicationGatewayProbeMatchPtrOutputWithContext(context.Context) ApplicationGatewayProbeMatchPtrOutput
}

type applicationGatewayProbeMatchPtrType ApplicationGatewayProbeMatchArgs

func ApplicationGatewayProbeMatchPtr(v *ApplicationGatewayProbeMatchArgs) ApplicationGatewayProbeMatchPtrInput {
	return (*applicationGatewayProbeMatchPtrType)(v)
}

func (*applicationGatewayProbeMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayProbeMatch)(nil)).Elem()
}

func (i *applicationGatewayProbeMatchPtrType) ToApplicationGatewayProbeMatchPtrOutput() ApplicationGatewayProbeMatchPtrOutput {
	return i.ToApplicationGatewayProbeMatchPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayProbeMatchPtrType) ToApplicationGatewayProbeMatchPtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeMatchPtrOutput)
}

type ApplicationGatewayProbeMatchOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbeMatch)(nil)).Elem()
}

func (o ApplicationGatewayProbeMatchOutput) ToApplicationGatewayProbeMatchOutput() ApplicationGatewayProbeMatchOutput {
	return o
}

func (o ApplicationGatewayProbeMatchOutput) ToApplicationGatewayProbeMatchOutputWithContext(ctx context.Context) ApplicationGatewayProbeMatchOutput {
	return o
}

func (o ApplicationGatewayProbeMatchOutput) ToApplicationGatewayProbeMatchPtrOutput() ApplicationGatewayProbeMatchPtrOutput {
	return o.ToApplicationGatewayProbeMatchPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayProbeMatchOutput) ToApplicationGatewayProbeMatchPtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationGatewayProbeMatch) *ApplicationGatewayProbeMatch {
		return &v
	}).(ApplicationGatewayProbeMatchPtrOutput)
}

// A snippet from the Response Body which must be present in the Response.
func (o ApplicationGatewayProbeMatchOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeMatch) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// A list of allowed status codes for this Health Probe.
func (o ApplicationGatewayProbeMatchOutput) StatusCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeMatch) []string { return v.StatusCodes }).(pulumi.StringArrayOutput)
}

type ApplicationGatewayProbeMatchPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayProbeMatch)(nil)).Elem()
}

func (o ApplicationGatewayProbeMatchPtrOutput) ToApplicationGatewayProbeMatchPtrOutput() ApplicationGatewayProbeMatchPtrOutput {
	return o
}

func (o ApplicationGatewayProbeMatchPtrOutput) ToApplicationGatewayProbeMatchPtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeMatchPtrOutput {
	return o
}

func (o ApplicationGatewayProbeMatchPtrOutput) Elem() ApplicationGatewayProbeMatchOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbeMatch) ApplicationGatewayProbeMatch {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewayProbeMatch
		return ret
	}).(ApplicationGatewayProbeMatchOutput)
}

// A snippet from the Response Body which must be present in the Response.
func (o ApplicationGatewayProbeMatchPtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbeMatch) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// A list of allowed status codes for this Health Probe.
func (o ApplicationGatewayProbeMatchPtrOutput) StatusCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbeMatch) []string {
		if v == nil {
			return nil
		}
		return v.StatusCodes
	}).(pulumi.StringArrayOutput)
}

type ApplicationGatewayRedirectConfiguration struct {
	// The ID of the Rewrite Rule Set
	Id *string `pulumi:"id"`
	// Whether to include the path in the redirected URL. Defaults to `false`
	IncludePath *bool `pulumi:"includePath"`
	// Whether to include the query string in the redirected URL. Default to `false`
	IncludeQueryString *bool `pulumi:"includeQueryString"`
	// Unique name of the redirect configuration block
	Name string `pulumi:"name"`
	// The type of redirect. Possible values are `Permanent`, `Temporary`, `Found` and `SeeOther`
	RedirectType     string  `pulumi:"redirectType"`
	TargetListenerId *string `pulumi:"targetListenerId"`
	// The name of the listener to redirect to. Cannot be set if `targetUrl` is set.
	TargetListenerName *string `pulumi:"targetListenerName"`
	// The URL to redirect the request to. Cannot be set if `targetListenerName` is set.
	TargetUrl *string `pulumi:"targetUrl"`
}

// ApplicationGatewayRedirectConfigurationInput is an input type that accepts ApplicationGatewayRedirectConfigurationArgs and ApplicationGatewayRedirectConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayRedirectConfigurationInput` via:
//
//	ApplicationGatewayRedirectConfigurationArgs{...}
type ApplicationGatewayRedirectConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayRedirectConfigurationOutput() ApplicationGatewayRedirectConfigurationOutput
	ToApplicationGatewayRedirectConfigurationOutputWithContext(context.Context) ApplicationGatewayRedirectConfigurationOutput
}

type ApplicationGatewayRedirectConfigurationArgs struct {
	// The ID of the Rewrite Rule Set
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Whether to include the path in the redirected URL. Defaults to `false`
	IncludePath pulumi.BoolPtrInput `pulumi:"includePath"`
	// Whether to include the query string in the redirected URL. Default to `false`
	IncludeQueryString pulumi.BoolPtrInput `pulumi:"includeQueryString"`
	// Unique name of the redirect configuration block
	Name pulumi.StringInput `pulumi:"name"`
	// The type of redirect. Possible values are `Permanent`, `Temporary`, `Found` and `SeeOther`
	RedirectType     pulumi.StringInput    `pulumi:"redirectType"`
	TargetListenerId pulumi.StringPtrInput `pulumi:"targetListenerId"`
	// The name of the listener to redirect to. Cannot be set if `targetUrl` is set.
	TargetListenerName pulumi.StringPtrInput `pulumi:"targetListenerName"`
	// The URL to redirect the request to. Cannot be set if `targetListenerName` is set.
	TargetUrl pulumi.StringPtrInput `pulumi:"targetUrl"`
}

func (ApplicationGatewayRedirectConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRedirectConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayRedirectConfigurationArgs) ToApplicationGatewayRedirectConfigurationOutput() ApplicationGatewayRedirectConfigurationOutput {
	return i.ToApplicationGatewayRedirectConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayRedirectConfigurationArgs) ToApplicationGatewayRedirectConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRedirectConfigurationOutput)
}

// ApplicationGatewayRedirectConfigurationArrayInput is an input type that accepts ApplicationGatewayRedirectConfigurationArray and ApplicationGatewayRedirectConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRedirectConfigurationArrayInput` via:
//
//	ApplicationGatewayRedirectConfigurationArray{ ApplicationGatewayRedirectConfigurationArgs{...} }
type ApplicationGatewayRedirectConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRedirectConfigurationArrayOutput() ApplicationGatewayRedirectConfigurationArrayOutput
	ToApplicationGatewayRedirectConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayRedirectConfigurationArrayOutput
}

type ApplicationGatewayRedirectConfigurationArray []ApplicationGatewayRedirectConfigurationInput

func (ApplicationGatewayRedirectConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRedirectConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayRedirectConfigurationArray) ToApplicationGatewayRedirectConfigurationArrayOutput() ApplicationGatewayRedirectConfigurationArrayOutput {
	return i.ToApplicationGatewayRedirectConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRedirectConfigurationArray) ToApplicationGatewayRedirectConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRedirectConfigurationArrayOutput)
}

type ApplicationGatewayRedirectConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRedirectConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRedirectConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayRedirectConfigurationOutput) ToApplicationGatewayRedirectConfigurationOutput() ApplicationGatewayRedirectConfigurationOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationOutput) ToApplicationGatewayRedirectConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationOutput {
	return o
}

// The ID of the Rewrite Rule Set
func (o ApplicationGatewayRedirectConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Whether to include the path in the redirected URL. Defaults to `false`
func (o ApplicationGatewayRedirectConfigurationOutput) IncludePath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *bool { return v.IncludePath }).(pulumi.BoolPtrOutput)
}

// Whether to include the query string in the redirected URL. Default to `false`
func (o ApplicationGatewayRedirectConfigurationOutput) IncludeQueryString() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *bool { return v.IncludeQueryString }).(pulumi.BoolPtrOutput)
}

// Unique name of the redirect configuration block
func (o ApplicationGatewayRedirectConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// The type of redirect. Possible values are `Permanent`, `Temporary`, `Found` and `SeeOther`
func (o ApplicationGatewayRedirectConfigurationOutput) RedirectType() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) string { return v.RedirectType }).(pulumi.StringOutput)
}

func (o ApplicationGatewayRedirectConfigurationOutput) TargetListenerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *string { return v.TargetListenerId }).(pulumi.StringPtrOutput)
}

// The name of the listener to redirect to. Cannot be set if `targetUrl` is set.
func (o ApplicationGatewayRedirectConfigurationOutput) TargetListenerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *string { return v.TargetListenerName }).(pulumi.StringPtrOutput)
}

// The URL to redirect the request to. Cannot be set if `targetListenerName` is set.
func (o ApplicationGatewayRedirectConfigurationOutput) TargetUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *string { return v.TargetUrl }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayRedirectConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRedirectConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRedirectConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayRedirectConfigurationArrayOutput) ToApplicationGatewayRedirectConfigurationArrayOutput() ApplicationGatewayRedirectConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationArrayOutput) ToApplicationGatewayRedirectConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRedirectConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRedirectConfiguration {
		return vs[0].([]ApplicationGatewayRedirectConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayRedirectConfigurationOutput)
}

type ApplicationGatewayRequestRoutingRule struct {
	// The ID of the associated Backend Address Pool.
	BackendAddressPoolId *string `pulumi:"backendAddressPoolId"`
	// The Name of the Backend Address Pool which should be used for this Routing Rule. Cannot be set if `redirectConfigurationName` is set.
	BackendAddressPoolName *string `pulumi:"backendAddressPoolName"`
	// The ID of the associated Backend HTTP Settings Configuration.
	BackendHttpSettingsId *string `pulumi:"backendHttpSettingsId"`
	// The Name of the Backend HTTP Settings Collection which should be used for this Routing Rule. Cannot be set if `redirectConfigurationName` is set.
	BackendHttpSettingsName *string `pulumi:"backendHttpSettingsName"`
	// The ID of the associated HTTP Listener.
	HttpListenerId *string `pulumi:"httpListenerId"`
	// The Name of the HTTP Listener which should be used for this Routing Rule.
	HttpListenerName string `pulumi:"httpListenerName"`
	// The ID of the Rewrite Rule Set
	Id *string `pulumi:"id"`
	// The Name of this Request Routing Rule.
	Name string `pulumi:"name"`
	// Rule evaluation order can be dictated by specifying an integer value from `1` to `20000` with `1` being the highest priority and `20000` being the lowest priority.
	//
	// > **NOTE:** `priority` is required when `sku.0.tier` is set to `*_v2`.
	Priority *int `pulumi:"priority"`
	// The ID of the associated Redirect Configuration.
	RedirectConfigurationId *string `pulumi:"redirectConfigurationId"`
	// The Name of the Redirect Configuration which should be used for this Routing Rule. Cannot be set if either `backendAddressPoolName` or `backendHttpSettingsName` is set.
	RedirectConfigurationName *string `pulumi:"redirectConfigurationName"`
	// The ID of the associated Rewrite Rule Set.
	RewriteRuleSetId *string `pulumi:"rewriteRuleSetId"`
	// The Name of the Rewrite Rule Set which should be used for this Routing Rule. Only valid for v2 SKUs.
	//
	// > **NOTE:** `backendAddressPoolName`, `backendHttpSettingsName`, `redirectConfigurationName`, and `rewriteRuleSetName` are applicable only when `ruleType` is `Basic`.
	RewriteRuleSetName *string `pulumi:"rewriteRuleSetName"`
	// The Type of Routing that should be used for this Rule. Possible values are `Basic` and `PathBasedRouting`.
	RuleType string `pulumi:"ruleType"`
	// The ID of the associated URL Path Map.
	UrlPathMapId *string `pulumi:"urlPathMapId"`
	// The Name of the URL Path Map which should be associated with this Routing Rule.
	UrlPathMapName *string `pulumi:"urlPathMapName"`
}

// ApplicationGatewayRequestRoutingRuleInput is an input type that accepts ApplicationGatewayRequestRoutingRuleArgs and ApplicationGatewayRequestRoutingRuleOutput values.
// You can construct a concrete instance of `ApplicationGatewayRequestRoutingRuleInput` via:
//
//	ApplicationGatewayRequestRoutingRuleArgs{...}
type ApplicationGatewayRequestRoutingRuleInput interface {
	pulumi.Input

	ToApplicationGatewayRequestRoutingRuleOutput() ApplicationGatewayRequestRoutingRuleOutput
	ToApplicationGatewayRequestRoutingRuleOutputWithContext(context.Context) ApplicationGatewayRequestRoutingRuleOutput
}

type ApplicationGatewayRequestRoutingRuleArgs struct {
	// The ID of the associated Backend Address Pool.
	BackendAddressPoolId pulumi.StringPtrInput `pulumi:"backendAddressPoolId"`
	// The Name of the Backend Address Pool which should be used for this Routing Rule. Cannot be set if `redirectConfigurationName` is set.
	BackendAddressPoolName pulumi.StringPtrInput `pulumi:"backendAddressPoolName"`
	// The ID of the associated Backend HTTP Settings Configuration.
	BackendHttpSettingsId pulumi.StringPtrInput `pulumi:"backendHttpSettingsId"`
	// The Name of the Backend HTTP Settings Collection which should be used for this Routing Rule. Cannot be set if `redirectConfigurationName` is set.
	BackendHttpSettingsName pulumi.StringPtrInput `pulumi:"backendHttpSettingsName"`
	// The ID of the associated HTTP Listener.
	HttpListenerId pulumi.StringPtrInput `pulumi:"httpListenerId"`
	// The Name of the HTTP Listener which should be used for this Routing Rule.
	HttpListenerName pulumi.StringInput `pulumi:"httpListenerName"`
	// The ID of the Rewrite Rule Set
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Name of this Request Routing Rule.
	Name pulumi.StringInput `pulumi:"name"`
	// Rule evaluation order can be dictated by specifying an integer value from `1` to `20000` with `1` being the highest priority and `20000` being the lowest priority.
	//
	// > **NOTE:** `priority` is required when `sku.0.tier` is set to `*_v2`.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The ID of the associated Redirect Configuration.
	RedirectConfigurationId pulumi.StringPtrInput `pulumi:"redirectConfigurationId"`
	// The Name of the Redirect Configuration which should be used for this Routing Rule. Cannot be set if either `backendAddressPoolName` or `backendHttpSettingsName` is set.
	RedirectConfigurationName pulumi.StringPtrInput `pulumi:"redirectConfigurationName"`
	// The ID of the associated Rewrite Rule Set.
	RewriteRuleSetId pulumi.StringPtrInput `pulumi:"rewriteRuleSetId"`
	// The Name of the Rewrite Rule Set which should be used for this Routing Rule. Only valid for v2 SKUs.
	//
	// > **NOTE:** `backendAddressPoolName`, `backendHttpSettingsName`, `redirectConfigurationName`, and `rewriteRuleSetName` are applicable only when `ruleType` is `Basic`.
	RewriteRuleSetName pulumi.StringPtrInput `pulumi:"rewriteRuleSetName"`
	// The Type of Routing that should be used for this Rule. Possible values are `Basic` and `PathBasedRouting`.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
	// The ID of the associated URL Path Map.
	UrlPathMapId pulumi.StringPtrInput `pulumi:"urlPathMapId"`
	// The Name of the URL Path Map which should be associated with this Routing Rule.
	UrlPathMapName pulumi.StringPtrInput `pulumi:"urlPathMapName"`
}

func (ApplicationGatewayRequestRoutingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRequestRoutingRule)(nil)).Elem()
}

func (i ApplicationGatewayRequestRoutingRuleArgs) ToApplicationGatewayRequestRoutingRuleOutput() ApplicationGatewayRequestRoutingRuleOutput {
	return i.ToApplicationGatewayRequestRoutingRuleOutputWithContext(context.Background())
}

func (i ApplicationGatewayRequestRoutingRuleArgs) ToApplicationGatewayRequestRoutingRuleOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRequestRoutingRuleOutput)
}

// ApplicationGatewayRequestRoutingRuleArrayInput is an input type that accepts ApplicationGatewayRequestRoutingRuleArray and ApplicationGatewayRequestRoutingRuleArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRequestRoutingRuleArrayInput` via:
//
//	ApplicationGatewayRequestRoutingRuleArray{ ApplicationGatewayRequestRoutingRuleArgs{...} }
type ApplicationGatewayRequestRoutingRuleArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRequestRoutingRuleArrayOutput() ApplicationGatewayRequestRoutingRuleArrayOutput
	ToApplicationGatewayRequestRoutingRuleArrayOutputWithContext(context.Context) ApplicationGatewayRequestRoutingRuleArrayOutput
}

type ApplicationGatewayRequestRoutingRuleArray []ApplicationGatewayRequestRoutingRuleInput

func (ApplicationGatewayRequestRoutingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRequestRoutingRule)(nil)).Elem()
}

func (i ApplicationGatewayRequestRoutingRuleArray) ToApplicationGatewayRequestRoutingRuleArrayOutput() ApplicationGatewayRequestRoutingRuleArrayOutput {
	return i.ToApplicationGatewayRequestRoutingRuleArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRequestRoutingRuleArray) ToApplicationGatewayRequestRoutingRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRequestRoutingRuleArrayOutput)
}

type ApplicationGatewayRequestRoutingRuleOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRequestRoutingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRequestRoutingRule)(nil)).Elem()
}

func (o ApplicationGatewayRequestRoutingRuleOutput) ToApplicationGatewayRequestRoutingRuleOutput() ApplicationGatewayRequestRoutingRuleOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleOutput) ToApplicationGatewayRequestRoutingRuleOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleOutput {
	return o
}

// The ID of the associated Backend Address Pool.
func (o ApplicationGatewayRequestRoutingRuleOutput) BackendAddressPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.BackendAddressPoolId }).(pulumi.StringPtrOutput)
}

// The Name of the Backend Address Pool which should be used for this Routing Rule. Cannot be set if `redirectConfigurationName` is set.
func (o ApplicationGatewayRequestRoutingRuleOutput) BackendAddressPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.BackendAddressPoolName }).(pulumi.StringPtrOutput)
}

// The ID of the associated Backend HTTP Settings Configuration.
func (o ApplicationGatewayRequestRoutingRuleOutput) BackendHttpSettingsId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.BackendHttpSettingsId }).(pulumi.StringPtrOutput)
}

// The Name of the Backend HTTP Settings Collection which should be used for this Routing Rule. Cannot be set if `redirectConfigurationName` is set.
func (o ApplicationGatewayRequestRoutingRuleOutput) BackendHttpSettingsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.BackendHttpSettingsName }).(pulumi.StringPtrOutput)
}

// The ID of the associated HTTP Listener.
func (o ApplicationGatewayRequestRoutingRuleOutput) HttpListenerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.HttpListenerId }).(pulumi.StringPtrOutput)
}

// The Name of the HTTP Listener which should be used for this Routing Rule.
func (o ApplicationGatewayRequestRoutingRuleOutput) HttpListenerName() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) string { return v.HttpListenerName }).(pulumi.StringOutput)
}

// The ID of the Rewrite Rule Set
func (o ApplicationGatewayRequestRoutingRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Name of this Request Routing Rule.
func (o ApplicationGatewayRequestRoutingRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) string { return v.Name }).(pulumi.StringOutput)
}

// Rule evaluation order can be dictated by specifying an integer value from `1` to `20000` with `1` being the highest priority and `20000` being the lowest priority.
//
// > **NOTE:** `priority` is required when `sku.0.tier` is set to `*_v2`.
func (o ApplicationGatewayRequestRoutingRuleOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The ID of the associated Redirect Configuration.
func (o ApplicationGatewayRequestRoutingRuleOutput) RedirectConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.RedirectConfigurationId }).(pulumi.StringPtrOutput)
}

// The Name of the Redirect Configuration which should be used for this Routing Rule. Cannot be set if either `backendAddressPoolName` or `backendHttpSettingsName` is set.
func (o ApplicationGatewayRequestRoutingRuleOutput) RedirectConfigurationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.RedirectConfigurationName }).(pulumi.StringPtrOutput)
}

// The ID of the associated Rewrite Rule Set.
func (o ApplicationGatewayRequestRoutingRuleOutput) RewriteRuleSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.RewriteRuleSetId }).(pulumi.StringPtrOutput)
}

// The Name of the Rewrite Rule Set which should be used for this Routing Rule. Only valid for v2 SKUs.
//
// > **NOTE:** `backendAddressPoolName`, `backendHttpSettingsName`, `redirectConfigurationName`, and `rewriteRuleSetName` are applicable only when `ruleType` is `Basic`.
func (o ApplicationGatewayRequestRoutingRuleOutput) RewriteRuleSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.RewriteRuleSetName }).(pulumi.StringPtrOutput)
}

// The Type of Routing that should be used for this Rule. Possible values are `Basic` and `PathBasedRouting`.
func (o ApplicationGatewayRequestRoutingRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) string { return v.RuleType }).(pulumi.StringOutput)
}

// The ID of the associated URL Path Map.
func (o ApplicationGatewayRequestRoutingRuleOutput) UrlPathMapId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.UrlPathMapId }).(pulumi.StringPtrOutput)
}

// The Name of the URL Path Map which should be associated with this Routing Rule.
func (o ApplicationGatewayRequestRoutingRuleOutput) UrlPathMapName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.UrlPathMapName }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayRequestRoutingRuleArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRequestRoutingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRequestRoutingRule)(nil)).Elem()
}

func (o ApplicationGatewayRequestRoutingRuleArrayOutput) ToApplicationGatewayRequestRoutingRuleArrayOutput() ApplicationGatewayRequestRoutingRuleArrayOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleArrayOutput) ToApplicationGatewayRequestRoutingRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleArrayOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRequestRoutingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRequestRoutingRule {
		return vs[0].([]ApplicationGatewayRequestRoutingRule)[vs[1].(int)]
	}).(ApplicationGatewayRequestRoutingRuleOutput)
}

type ApplicationGatewayRewriteRuleSet struct {
	// The ID of the Rewrite Rule Set
	Id *string `pulumi:"id"`
	// Unique name of the rewrite rule set block
	Name string `pulumi:"name"`
	// One or more `rewriteRule` blocks as defined below.
	RewriteRules []ApplicationGatewayRewriteRuleSetRewriteRule `pulumi:"rewriteRules"`
}

// ApplicationGatewayRewriteRuleSetInput is an input type that accepts ApplicationGatewayRewriteRuleSetArgs and ApplicationGatewayRewriteRuleSetOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleSetInput` via:
//
//	ApplicationGatewayRewriteRuleSetArgs{...}
type ApplicationGatewayRewriteRuleSetInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleSetOutput() ApplicationGatewayRewriteRuleSetOutput
	ToApplicationGatewayRewriteRuleSetOutputWithContext(context.Context) ApplicationGatewayRewriteRuleSetOutput
}

type ApplicationGatewayRewriteRuleSetArgs struct {
	// The ID of the Rewrite Rule Set
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Unique name of the rewrite rule set block
	Name pulumi.StringInput `pulumi:"name"`
	// One or more `rewriteRule` blocks as defined below.
	RewriteRules ApplicationGatewayRewriteRuleSetRewriteRuleArrayInput `pulumi:"rewriteRules"`
}

func (ApplicationGatewayRewriteRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleSet)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleSetArgs) ToApplicationGatewayRewriteRuleSetOutput() ApplicationGatewayRewriteRuleSetOutput {
	return i.ToApplicationGatewayRewriteRuleSetOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleSetArgs) ToApplicationGatewayRewriteRuleSetOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleSetOutput)
}

// ApplicationGatewayRewriteRuleSetArrayInput is an input type that accepts ApplicationGatewayRewriteRuleSetArray and ApplicationGatewayRewriteRuleSetArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleSetArrayInput` via:
//
//	ApplicationGatewayRewriteRuleSetArray{ ApplicationGatewayRewriteRuleSetArgs{...} }
type ApplicationGatewayRewriteRuleSetArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleSetArrayOutput() ApplicationGatewayRewriteRuleSetArrayOutput
	ToApplicationGatewayRewriteRuleSetArrayOutputWithContext(context.Context) ApplicationGatewayRewriteRuleSetArrayOutput
}

type ApplicationGatewayRewriteRuleSetArray []ApplicationGatewayRewriteRuleSetInput

func (ApplicationGatewayRewriteRuleSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleSet)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleSetArray) ToApplicationGatewayRewriteRuleSetArrayOutput() ApplicationGatewayRewriteRuleSetArrayOutput {
	return i.ToApplicationGatewayRewriteRuleSetArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleSetArray) ToApplicationGatewayRewriteRuleSetArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleSetArrayOutput)
}

type ApplicationGatewayRewriteRuleSetOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleSet)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleSetOutput) ToApplicationGatewayRewriteRuleSetOutput() ApplicationGatewayRewriteRuleSetOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetOutput) ToApplicationGatewayRewriteRuleSetOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetOutput {
	return o
}

// The ID of the Rewrite Rule Set
func (o ApplicationGatewayRewriteRuleSetOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSet) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Unique name of the rewrite rule set block
func (o ApplicationGatewayRewriteRuleSetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSet) string { return v.Name }).(pulumi.StringOutput)
}

// One or more `rewriteRule` blocks as defined below.
func (o ApplicationGatewayRewriteRuleSetOutput) RewriteRules() ApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSet) []ApplicationGatewayRewriteRuleSetRewriteRule {
		return v.RewriteRules
	}).(ApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput)
}

type ApplicationGatewayRewriteRuleSetArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleSet)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleSetArrayOutput) ToApplicationGatewayRewriteRuleSetArrayOutput() ApplicationGatewayRewriteRuleSetArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetArrayOutput) ToApplicationGatewayRewriteRuleSetArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRewriteRuleSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRewriteRuleSet {
		return vs[0].([]ApplicationGatewayRewriteRuleSet)[vs[1].(int)]
	}).(ApplicationGatewayRewriteRuleSetOutput)
}

type ApplicationGatewayRewriteRuleSetRewriteRule struct {
	// One or more `condition` blocks as defined above.
	Conditions []ApplicationGatewayRewriteRuleSetRewriteRuleCondition `pulumi:"conditions"`
	// Unique name of the rewrite rule block
	Name string `pulumi:"name"`
	// One or more `requestHeaderConfiguration` blocks as defined above.
	RequestHeaderConfigurations []ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration `pulumi:"requestHeaderConfigurations"`
	// One or more `responseHeaderConfiguration` blocks as defined above.
	ResponseHeaderConfigurations []ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration `pulumi:"responseHeaderConfigurations"`
	// Rule sequence of the rewrite rule that determines the order of execution in a set.
	RuleSequence int `pulumi:"ruleSequence"`
	// One `url` block as defined below
	Url *ApplicationGatewayRewriteRuleSetRewriteRuleUrl `pulumi:"url"`
}

// ApplicationGatewayRewriteRuleSetRewriteRuleInput is an input type that accepts ApplicationGatewayRewriteRuleSetRewriteRuleArgs and ApplicationGatewayRewriteRuleSetRewriteRuleOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleSetRewriteRuleInput` via:
//
//	ApplicationGatewayRewriteRuleSetRewriteRuleArgs{...}
type ApplicationGatewayRewriteRuleSetRewriteRuleInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleSetRewriteRuleOutput() ApplicationGatewayRewriteRuleSetRewriteRuleOutput
	ToApplicationGatewayRewriteRuleSetRewriteRuleOutputWithContext(context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleOutput
}

type ApplicationGatewayRewriteRuleSetRewriteRuleArgs struct {
	// One or more `condition` blocks as defined above.
	Conditions ApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayInput `pulumi:"conditions"`
	// Unique name of the rewrite rule block
	Name pulumi.StringInput `pulumi:"name"`
	// One or more `requestHeaderConfiguration` blocks as defined above.
	RequestHeaderConfigurations ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayInput `pulumi:"requestHeaderConfigurations"`
	// One or more `responseHeaderConfiguration` blocks as defined above.
	ResponseHeaderConfigurations ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayInput `pulumi:"responseHeaderConfigurations"`
	// Rule sequence of the rewrite rule that determines the order of execution in a set.
	RuleSequence pulumi.IntInput `pulumi:"ruleSequence"`
	// One `url` block as defined below
	Url ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrInput `pulumi:"url"`
}

func (ApplicationGatewayRewriteRuleSetRewriteRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleSetRewriteRule)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleSetRewriteRuleArgs) ToApplicationGatewayRewriteRuleSetRewriteRuleOutput() ApplicationGatewayRewriteRuleSetRewriteRuleOutput {
	return i.ToApplicationGatewayRewriteRuleSetRewriteRuleOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleSetRewriteRuleArgs) ToApplicationGatewayRewriteRuleSetRewriteRuleOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleSetRewriteRuleOutput)
}

// ApplicationGatewayRewriteRuleSetRewriteRuleArrayInput is an input type that accepts ApplicationGatewayRewriteRuleSetRewriteRuleArray and ApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleSetRewriteRuleArrayInput` via:
//
//	ApplicationGatewayRewriteRuleSetRewriteRuleArray{ ApplicationGatewayRewriteRuleSetRewriteRuleArgs{...} }
type ApplicationGatewayRewriteRuleSetRewriteRuleArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput() ApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput
	ToApplicationGatewayRewriteRuleSetRewriteRuleArrayOutputWithContext(context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput
}

type ApplicationGatewayRewriteRuleSetRewriteRuleArray []ApplicationGatewayRewriteRuleSetRewriteRuleInput

func (ApplicationGatewayRewriteRuleSetRewriteRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleSetRewriteRule)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleSetRewriteRuleArray) ToApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput() ApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput {
	return i.ToApplicationGatewayRewriteRuleSetRewriteRuleArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleSetRewriteRuleArray) ToApplicationGatewayRewriteRuleSetRewriteRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput)
}

type ApplicationGatewayRewriteRuleSetRewriteRuleOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleSetRewriteRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleSetRewriteRule)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleSetRewriteRuleOutput) ToApplicationGatewayRewriteRuleSetRewriteRuleOutput() ApplicationGatewayRewriteRuleSetRewriteRuleOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetRewriteRuleOutput) ToApplicationGatewayRewriteRuleSetRewriteRuleOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleOutput {
	return o
}

// One or more `condition` blocks as defined above.
func (o ApplicationGatewayRewriteRuleSetRewriteRuleOutput) Conditions() ApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetRewriteRule) []ApplicationGatewayRewriteRuleSetRewriteRuleCondition {
		return v.Conditions
	}).(ApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput)
}

// Unique name of the rewrite rule block
func (o ApplicationGatewayRewriteRuleSetRewriteRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetRewriteRule) string { return v.Name }).(pulumi.StringOutput)
}

// One or more `requestHeaderConfiguration` blocks as defined above.
func (o ApplicationGatewayRewriteRuleSetRewriteRuleOutput) RequestHeaderConfigurations() ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetRewriteRule) []ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration {
		return v.RequestHeaderConfigurations
	}).(ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput)
}

// One or more `responseHeaderConfiguration` blocks as defined above.
func (o ApplicationGatewayRewriteRuleSetRewriteRuleOutput) ResponseHeaderConfigurations() ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetRewriteRule) []ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration {
		return v.ResponseHeaderConfigurations
	}).(ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput)
}

// Rule sequence of the rewrite rule that determines the order of execution in a set.
func (o ApplicationGatewayRewriteRuleSetRewriteRuleOutput) RuleSequence() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetRewriteRule) int { return v.RuleSequence }).(pulumi.IntOutput)
}

// One `url` block as defined below
func (o ApplicationGatewayRewriteRuleSetRewriteRuleOutput) Url() ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetRewriteRule) *ApplicationGatewayRewriteRuleSetRewriteRuleUrl {
		return v.Url
	}).(ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput)
}

type ApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleSetRewriteRule)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput) ToApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput() ApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput) ToApplicationGatewayRewriteRuleSetRewriteRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRewriteRuleSetRewriteRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRewriteRuleSetRewriteRule {
		return vs[0].([]ApplicationGatewayRewriteRuleSetRewriteRule)[vs[1].(int)]
	}).(ApplicationGatewayRewriteRuleSetRewriteRuleOutput)
}

type ApplicationGatewayRewriteRuleSetRewriteRuleCondition struct {
	// Perform a case in-sensitive comparison. Defaults to `false`
	IgnoreCase *bool `pulumi:"ignoreCase"`
	// Negate the result of the condition evaluation. Defaults to `false`
	Negate *bool `pulumi:"negate"`
	// The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.
	Pattern string `pulumi:"pattern"`
	// The [variable](https://docs.microsoft.com/azure/application-gateway/rewrite-http-headers#server-variables) of the condition.
	Variable string `pulumi:"variable"`
}

// ApplicationGatewayRewriteRuleSetRewriteRuleConditionInput is an input type that accepts ApplicationGatewayRewriteRuleSetRewriteRuleConditionArgs and ApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleSetRewriteRuleConditionInput` via:
//
//	ApplicationGatewayRewriteRuleSetRewriteRuleConditionArgs{...}
type ApplicationGatewayRewriteRuleSetRewriteRuleConditionInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput() ApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput
	ToApplicationGatewayRewriteRuleSetRewriteRuleConditionOutputWithContext(context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput
}

type ApplicationGatewayRewriteRuleSetRewriteRuleConditionArgs struct {
	// Perform a case in-sensitive comparison. Defaults to `false`
	IgnoreCase pulumi.BoolPtrInput `pulumi:"ignoreCase"`
	// Negate the result of the condition evaluation. Defaults to `false`
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.
	Pattern pulumi.StringInput `pulumi:"pattern"`
	// The [variable](https://docs.microsoft.com/azure/application-gateway/rewrite-http-headers#server-variables) of the condition.
	Variable pulumi.StringInput `pulumi:"variable"`
}

func (ApplicationGatewayRewriteRuleSetRewriteRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleSetRewriteRuleCondition)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleSetRewriteRuleConditionArgs) ToApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput() ApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput {
	return i.ToApplicationGatewayRewriteRuleSetRewriteRuleConditionOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleSetRewriteRuleConditionArgs) ToApplicationGatewayRewriteRuleSetRewriteRuleConditionOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput)
}

// ApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayInput is an input type that accepts ApplicationGatewayRewriteRuleSetRewriteRuleConditionArray and ApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayInput` via:
//
//	ApplicationGatewayRewriteRuleSetRewriteRuleConditionArray{ ApplicationGatewayRewriteRuleSetRewriteRuleConditionArgs{...} }
type ApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput() ApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput
	ToApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutputWithContext(context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput
}

type ApplicationGatewayRewriteRuleSetRewriteRuleConditionArray []ApplicationGatewayRewriteRuleSetRewriteRuleConditionInput

func (ApplicationGatewayRewriteRuleSetRewriteRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleSetRewriteRuleCondition)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleSetRewriteRuleConditionArray) ToApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput() ApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput {
	return i.ToApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleSetRewriteRuleConditionArray) ToApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput)
}

type ApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleSetRewriteRuleCondition)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput) ToApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput() ApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput) ToApplicationGatewayRewriteRuleSetRewriteRuleConditionOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput {
	return o
}

// Perform a case in-sensitive comparison. Defaults to `false`
func (o ApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetRewriteRuleCondition) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

// Negate the result of the condition evaluation. Defaults to `false`
func (o ApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetRewriteRuleCondition) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.
func (o ApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput) Pattern() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetRewriteRuleCondition) string { return v.Pattern }).(pulumi.StringOutput)
}

// The [variable](https://docs.microsoft.com/azure/application-gateway/rewrite-http-headers#server-variables) of the condition.
func (o ApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput) Variable() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetRewriteRuleCondition) string { return v.Variable }).(pulumi.StringOutput)
}

type ApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleSetRewriteRuleCondition)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput) ToApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput() ApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput) ToApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRewriteRuleSetRewriteRuleCondition {
		return vs[0].([]ApplicationGatewayRewriteRuleSetRewriteRuleCondition)[vs[1].(int)]
	}).(ApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput)
}

type ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration struct {
	// Header name of the header configuration.
	HeaderName string `pulumi:"headerName"`
	// Header value of the header configuration. To delete a request header set this property to an empty string.
	HeaderValue string `pulumi:"headerValue"`
}

// ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationInput is an input type that accepts ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArgs and ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationInput` via:
//
//	ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArgs{...}
type ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput() ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput
	ToApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutputWithContext(context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput
}

type ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArgs struct {
	// Header name of the header configuration.
	HeaderName pulumi.StringInput `pulumi:"headerName"`
	// Header value of the header configuration. To delete a request header set this property to an empty string.
	HeaderValue pulumi.StringInput `pulumi:"headerValue"`
}

func (ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArgs) ToApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput() ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput {
	return i.ToApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArgs) ToApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput)
}

// ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayInput is an input type that accepts ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArray and ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayInput` via:
//
//	ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArray{ ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArgs{...} }
type ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput() ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput
	ToApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput
}

type ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArray []ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationInput

func (ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArray) ToApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput() ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput {
	return i.ToApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArray) ToApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput)
}

type ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput) ToApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput() ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput) ToApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput {
	return o
}

// Header name of the header configuration.
func (o ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration) string {
		return v.HeaderName
	}).(pulumi.StringOutput)
}

// Header value of the header configuration. To delete a request header set this property to an empty string.
func (o ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput) HeaderValue() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration) string {
		return v.HeaderValue
	}).(pulumi.StringOutput)
}

type ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput) ToApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput() ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput) ToApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration {
		return vs[0].([]ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput)
}

type ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration struct {
	// Header name of the header configuration.
	HeaderName string `pulumi:"headerName"`
	// Header value of the header configuration. To delete a response header set this property to an empty string.
	HeaderValue string `pulumi:"headerValue"`
}

// ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationInput is an input type that accepts ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArgs and ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationInput` via:
//
//	ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArgs{...}
type ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput() ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput
	ToApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutputWithContext(context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput
}

type ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArgs struct {
	// Header name of the header configuration.
	HeaderName pulumi.StringInput `pulumi:"headerName"`
	// Header value of the header configuration. To delete a response header set this property to an empty string.
	HeaderValue pulumi.StringInput `pulumi:"headerValue"`
}

func (ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArgs) ToApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput() ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput {
	return i.ToApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArgs) ToApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput)
}

// ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayInput is an input type that accepts ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArray and ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayInput` via:
//
//	ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArray{ ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArgs{...} }
type ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput() ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput
	ToApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput
}

type ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArray []ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationInput

func (ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArray) ToApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput() ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput {
	return i.ToApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArray) ToApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput)
}

type ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput) ToApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput() ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput) ToApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput {
	return o
}

// Header name of the header configuration.
func (o ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration) string {
		return v.HeaderName
	}).(pulumi.StringOutput)
}

// Header value of the header configuration. To delete a response header set this property to an empty string.
func (o ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput) HeaderValue() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration) string {
		return v.HeaderValue
	}).(pulumi.StringOutput)
}

type ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput) ToApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput() ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput) ToApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration {
		return vs[0].([]ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput)
}

type ApplicationGatewayRewriteRuleSetRewriteRuleUrl struct {
	// The components used to rewrite the URL. Possible values are `pathOnly` and `queryStringOnly` to limit the rewrite to the URL Path or URL Query String only.
	//
	// > **Note:** One or both of `path` and `queryString` must be specified. If one of these is not specified, it means the value will be empty. If you only want to rewrite `path` or `queryString`, use `components`.
	Components *string `pulumi:"components"`
	// The URL path to rewrite.
	Path *string `pulumi:"path"`
	// The query string to rewrite.
	QueryString *string `pulumi:"queryString"`
	// Whether the URL path map should be reevaluated after this rewrite has been applied. [More info on rewrite configuration](https://docs.microsoft.com/azure/application-gateway/rewrite-http-headers-url#rewrite-configuration)
	Reroute *bool `pulumi:"reroute"`
}

// ApplicationGatewayRewriteRuleSetRewriteRuleUrlInput is an input type that accepts ApplicationGatewayRewriteRuleSetRewriteRuleUrlArgs and ApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleSetRewriteRuleUrlInput` via:
//
//	ApplicationGatewayRewriteRuleSetRewriteRuleUrlArgs{...}
type ApplicationGatewayRewriteRuleSetRewriteRuleUrlInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput() ApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput
	ToApplicationGatewayRewriteRuleSetRewriteRuleUrlOutputWithContext(context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput
}

type ApplicationGatewayRewriteRuleSetRewriteRuleUrlArgs struct {
	// The components used to rewrite the URL. Possible values are `pathOnly` and `queryStringOnly` to limit the rewrite to the URL Path or URL Query String only.
	//
	// > **Note:** One or both of `path` and `queryString` must be specified. If one of these is not specified, it means the value will be empty. If you only want to rewrite `path` or `queryString`, use `components`.
	Components pulumi.StringPtrInput `pulumi:"components"`
	// The URL path to rewrite.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The query string to rewrite.
	QueryString pulumi.StringPtrInput `pulumi:"queryString"`
	// Whether the URL path map should be reevaluated after this rewrite has been applied. [More info on rewrite configuration](https://docs.microsoft.com/azure/application-gateway/rewrite-http-headers-url#rewrite-configuration)
	Reroute pulumi.BoolPtrInput `pulumi:"reroute"`
}

func (ApplicationGatewayRewriteRuleSetRewriteRuleUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleSetRewriteRuleUrl)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleSetRewriteRuleUrlArgs) ToApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput() ApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput {
	return i.ToApplicationGatewayRewriteRuleSetRewriteRuleUrlOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleSetRewriteRuleUrlArgs) ToApplicationGatewayRewriteRuleSetRewriteRuleUrlOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput)
}

func (i ApplicationGatewayRewriteRuleSetRewriteRuleUrlArgs) ToApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput() ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput {
	return i.ToApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleSetRewriteRuleUrlArgs) ToApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput).ToApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutputWithContext(ctx)
}

// ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrInput is an input type that accepts ApplicationGatewayRewriteRuleSetRewriteRuleUrlArgs, ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtr and ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrInput` via:
//
//	        ApplicationGatewayRewriteRuleSetRewriteRuleUrlArgs{...}
//
//	or:
//
//	        nil
type ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput() ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput
	ToApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutputWithContext(context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput
}

type applicationGatewayRewriteRuleSetRewriteRuleUrlPtrType ApplicationGatewayRewriteRuleSetRewriteRuleUrlArgs

func ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtr(v *ApplicationGatewayRewriteRuleSetRewriteRuleUrlArgs) ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrInput {
	return (*applicationGatewayRewriteRuleSetRewriteRuleUrlPtrType)(v)
}

func (*applicationGatewayRewriteRuleSetRewriteRuleUrlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayRewriteRuleSetRewriteRuleUrl)(nil)).Elem()
}

func (i *applicationGatewayRewriteRuleSetRewriteRuleUrlPtrType) ToApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput() ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput {
	return i.ToApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayRewriteRuleSetRewriteRuleUrlPtrType) ToApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput)
}

type ApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleSetRewriteRuleUrl)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput) ToApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput() ApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput) ToApplicationGatewayRewriteRuleSetRewriteRuleUrlOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput) ToApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput() ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput {
	return o.ToApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput) ToApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationGatewayRewriteRuleSetRewriteRuleUrl) *ApplicationGatewayRewriteRuleSetRewriteRuleUrl {
		return &v
	}).(ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput)
}

// The components used to rewrite the URL. Possible values are `pathOnly` and `queryStringOnly` to limit the rewrite to the URL Path or URL Query String only.
//
// > **Note:** One or both of `path` and `queryString` must be specified. If one of these is not specified, it means the value will be empty. If you only want to rewrite `path` or `queryString`, use `components`.
func (o ApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput) Components() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetRewriteRuleUrl) *string { return v.Components }).(pulumi.StringPtrOutput)
}

// The URL path to rewrite.
func (o ApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetRewriteRuleUrl) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The query string to rewrite.
func (o ApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput) QueryString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetRewriteRuleUrl) *string { return v.QueryString }).(pulumi.StringPtrOutput)
}

// Whether the URL path map should be reevaluated after this rewrite has been applied. [More info on rewrite configuration](https://docs.microsoft.com/azure/application-gateway/rewrite-http-headers-url#rewrite-configuration)
func (o ApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput) Reroute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetRewriteRuleUrl) *bool { return v.Reroute }).(pulumi.BoolPtrOutput)
}

type ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayRewriteRuleSetRewriteRuleUrl)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput) ToApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput() ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput) ToApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput) Elem() ApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleSetRewriteRuleUrl) ApplicationGatewayRewriteRuleSetRewriteRuleUrl {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewayRewriteRuleSetRewriteRuleUrl
		return ret
	}).(ApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput)
}

// The components used to rewrite the URL. Possible values are `pathOnly` and `queryStringOnly` to limit the rewrite to the URL Path or URL Query String only.
//
// > **Note:** One or both of `path` and `queryString` must be specified. If one of these is not specified, it means the value will be empty. If you only want to rewrite `path` or `queryString`, use `components`.
func (o ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput) Components() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleSetRewriteRuleUrl) *string {
		if v == nil {
			return nil
		}
		return v.Components
	}).(pulumi.StringPtrOutput)
}

// The URL path to rewrite.
func (o ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleSetRewriteRuleUrl) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The query string to rewrite.
func (o ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput) QueryString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleSetRewriteRuleUrl) *string {
		if v == nil {
			return nil
		}
		return v.QueryString
	}).(pulumi.StringPtrOutput)
}

// Whether the URL path map should be reevaluated after this rewrite has been applied. [More info on rewrite configuration](https://docs.microsoft.com/azure/application-gateway/rewrite-http-headers-url#rewrite-configuration)
func (o ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput) Reroute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleSetRewriteRuleUrl) *bool {
		if v == nil {
			return nil
		}
		return v.Reroute
	}).(pulumi.BoolPtrOutput)
}

type ApplicationGatewaySku struct {
	// The Capacity of the SKU to use for this Application Gateway. When using a V1 SKU this value must be between `1` and `32`, and `1` to `125` for a V2 SKU. This property is optional if `autoscaleConfiguration` is set.
	Capacity *int `pulumi:"capacity"`
	// The Name of the SKU to use for this Application Gateway. Possible values are `Standard_Small`, `Standard_Medium`, `Standard_Large`, `Standard_v2`, `WAF_Medium`, `WAF_Large`, and `WAF_v2`.
	Name string `pulumi:"name"`
	// The Tier of the SKU to use for this Application Gateway. Possible values are `Standard`, `Standard_v2`, `WAF` and `WAF_v2`.
	//
	// !> **NOTE:** The `Standard` and `WAF` SKU have been deprecated in favour of the `Standard_v2` and `WAF_v2` SKU. Please see the [Azure documentation](https://aka.ms/V1retirement) for more details.
	Tier string `pulumi:"tier"`
}

// ApplicationGatewaySkuInput is an input type that accepts ApplicationGatewaySkuArgs and ApplicationGatewaySkuOutput values.
// You can construct a concrete instance of `ApplicationGatewaySkuInput` via:
//
//	ApplicationGatewaySkuArgs{...}
type ApplicationGatewaySkuInput interface {
	pulumi.Input

	ToApplicationGatewaySkuOutput() ApplicationGatewaySkuOutput
	ToApplicationGatewaySkuOutputWithContext(context.Context) ApplicationGatewaySkuOutput
}

type ApplicationGatewaySkuArgs struct {
	// The Capacity of the SKU to use for this Application Gateway. When using a V1 SKU this value must be between `1` and `32`, and `1` to `125` for a V2 SKU. This property is optional if `autoscaleConfiguration` is set.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// The Name of the SKU to use for this Application Gateway. Possible values are `Standard_Small`, `Standard_Medium`, `Standard_Large`, `Standard_v2`, `WAF_Medium`, `WAF_Large`, and `WAF_v2`.
	Name pulumi.StringInput `pulumi:"name"`
	// The Tier of the SKU to use for this Application Gateway. Possible values are `Standard`, `Standard_v2`, `WAF` and `WAF_v2`.
	//
	// !> **NOTE:** The `Standard` and `WAF` SKU have been deprecated in favour of the `Standard_v2` and `WAF_v2` SKU. Please see the [Azure documentation](https://aka.ms/V1retirement) for more details.
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (ApplicationGatewaySkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySku)(nil)).Elem()
}

func (i ApplicationGatewaySkuArgs) ToApplicationGatewaySkuOutput() ApplicationGatewaySkuOutput {
	return i.ToApplicationGatewaySkuOutputWithContext(context.Background())
}

func (i ApplicationGatewaySkuArgs) ToApplicationGatewaySkuOutputWithContext(ctx context.Context) ApplicationGatewaySkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuOutput)
}

func (i ApplicationGatewaySkuArgs) ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput {
	return i.ToApplicationGatewaySkuPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewaySkuArgs) ToApplicationGatewaySkuPtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuOutput).ToApplicationGatewaySkuPtrOutputWithContext(ctx)
}

// ApplicationGatewaySkuPtrInput is an input type that accepts ApplicationGatewaySkuArgs, ApplicationGatewaySkuPtr and ApplicationGatewaySkuPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewaySkuPtrInput` via:
//
//	        ApplicationGatewaySkuArgs{...}
//
//	or:
//
//	        nil
type ApplicationGatewaySkuPtrInput interface {
	pulumi.Input

	ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput
	ToApplicationGatewaySkuPtrOutputWithContext(context.Context) ApplicationGatewaySkuPtrOutput
}

type applicationGatewaySkuPtrType ApplicationGatewaySkuArgs

func ApplicationGatewaySkuPtr(v *ApplicationGatewaySkuArgs) ApplicationGatewaySkuPtrInput {
	return (*applicationGatewaySkuPtrType)(v)
}

func (*applicationGatewaySkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySku)(nil)).Elem()
}

func (i *applicationGatewaySkuPtrType) ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput {
	return i.ToApplicationGatewaySkuPtrOutputWithContext(context.Background())
}

func (i *applicationGatewaySkuPtrType) ToApplicationGatewaySkuPtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuPtrOutput)
}

type ApplicationGatewaySkuOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySku)(nil)).Elem()
}

func (o ApplicationGatewaySkuOutput) ToApplicationGatewaySkuOutput() ApplicationGatewaySkuOutput {
	return o
}

func (o ApplicationGatewaySkuOutput) ToApplicationGatewaySkuOutputWithContext(ctx context.Context) ApplicationGatewaySkuOutput {
	return o
}

func (o ApplicationGatewaySkuOutput) ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput {
	return o.ToApplicationGatewaySkuPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewaySkuOutput) ToApplicationGatewaySkuPtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationGatewaySku) *ApplicationGatewaySku {
		return &v
	}).(ApplicationGatewaySkuPtrOutput)
}

// The Capacity of the SKU to use for this Application Gateway. When using a V1 SKU this value must be between `1` and `32`, and `1` to `125` for a V2 SKU. This property is optional if `autoscaleConfiguration` is set.
func (o ApplicationGatewaySkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// The Name of the SKU to use for this Application Gateway. Possible values are `Standard_Small`, `Standard_Medium`, `Standard_Large`, `Standard_v2`, `WAF_Medium`, `WAF_Large`, and `WAF_v2`.
func (o ApplicationGatewaySkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewaySku) string { return v.Name }).(pulumi.StringOutput)
}

// The Tier of the SKU to use for this Application Gateway. Possible values are `Standard`, `Standard_v2`, `WAF` and `WAF_v2`.
//
// !> **NOTE:** The `Standard` and `WAF` SKU have been deprecated in favour of the `Standard_v2` and `WAF_v2` SKU. Please see the [Azure documentation](https://aka.ms/V1retirement) for more details.
func (o ApplicationGatewaySkuOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewaySku) string { return v.Tier }).(pulumi.StringOutput)
}

type ApplicationGatewaySkuPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySku)(nil)).Elem()
}

func (o ApplicationGatewaySkuPtrOutput) ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput {
	return o
}

func (o ApplicationGatewaySkuPtrOutput) ToApplicationGatewaySkuPtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuPtrOutput {
	return o
}

func (o ApplicationGatewaySkuPtrOutput) Elem() ApplicationGatewaySkuOutput {
	return o.ApplyT(func(v *ApplicationGatewaySku) ApplicationGatewaySku {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewaySku
		return ret
	}).(ApplicationGatewaySkuOutput)
}

// The Capacity of the SKU to use for this Application Gateway. When using a V1 SKU this value must be between `1` and `32`, and `1` to `125` for a V2 SKU. This property is optional if `autoscaleConfiguration` is set.
func (o ApplicationGatewaySkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// The Name of the SKU to use for this Application Gateway. Possible values are `Standard_Small`, `Standard_Medium`, `Standard_Large`, `Standard_v2`, `WAF_Medium`, `WAF_Large`, and `WAF_v2`.
func (o ApplicationGatewaySkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The Tier of the SKU to use for this Application Gateway. Possible values are `Standard`, `Standard_v2`, `WAF` and `WAF_v2`.
//
// !> **NOTE:** The `Standard` and `WAF` SKU have been deprecated in favour of the `Standard_v2` and `WAF_v2` SKU. Please see the [Azure documentation](https://aka.ms/V1retirement) for more details.
func (o ApplicationGatewaySkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySku) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySslCertificate struct {
	// The base64-encoded PFX certificate data. Required if `keyVaultSecretId` is not set.
	//
	// > **NOTE:** When specifying a file, use `data = filebase64("path/to/file")` to encode the contents of that file.
	Data *string `pulumi:"data"`
	// The ID of the Rewrite Rule Set
	Id *string `pulumi:"id"`
	// The Secret ID of (base-64 encoded unencrypted pfx) the `Secret` or `Certificate` object stored in Azure KeyVault. You need to enable soft delete for Key Vault to use this feature. Required if `data` is not set.
	//
	// > **NOTE:** TLS termination with Key Vault certificates is limited to the [v2 SKUs](https://docs.microsoft.com/azure/application-gateway/key-vault-certs).
	//
	// > **NOTE:** For TLS termination with Key Vault certificates to work properly existing user-assigned managed identity, which Application Gateway uses to retrieve certificates from Key Vault, should be defined via `identity` block. Additionally, access policies in the Key Vault to allow the identity to be granted *get* access to the secret should be defined.
	KeyVaultSecretId *string `pulumi:"keyVaultSecretId"`
	// The Name of the SSL certificate that is unique within this Application Gateway
	Name string `pulumi:"name"`
	// Password for the pfx file specified in data. Required if `data` is set.
	Password *string `pulumi:"password"`
	// The Public Certificate Data associated with the SSL Certificate.
	PublicCertData *string `pulumi:"publicCertData"`
}

// ApplicationGatewaySslCertificateInput is an input type that accepts ApplicationGatewaySslCertificateArgs and ApplicationGatewaySslCertificateOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslCertificateInput` via:
//
//	ApplicationGatewaySslCertificateArgs{...}
type ApplicationGatewaySslCertificateInput interface {
	pulumi.Input

	ToApplicationGatewaySslCertificateOutput() ApplicationGatewaySslCertificateOutput
	ToApplicationGatewaySslCertificateOutputWithContext(context.Context) ApplicationGatewaySslCertificateOutput
}

type ApplicationGatewaySslCertificateArgs struct {
	// The base64-encoded PFX certificate data. Required if `keyVaultSecretId` is not set.
	//
	// > **NOTE:** When specifying a file, use `data = filebase64("path/to/file")` to encode the contents of that file.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// The ID of the Rewrite Rule Set
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Secret ID of (base-64 encoded unencrypted pfx) the `Secret` or `Certificate` object stored in Azure KeyVault. You need to enable soft delete for Key Vault to use this feature. Required if `data` is not set.
	//
	// > **NOTE:** TLS termination with Key Vault certificates is limited to the [v2 SKUs](https://docs.microsoft.com/azure/application-gateway/key-vault-certs).
	//
	// > **NOTE:** For TLS termination with Key Vault certificates to work properly existing user-assigned managed identity, which Application Gateway uses to retrieve certificates from Key Vault, should be defined via `identity` block. Additionally, access policies in the Key Vault to allow the identity to be granted *get* access to the secret should be defined.
	KeyVaultSecretId pulumi.StringPtrInput `pulumi:"keyVaultSecretId"`
	// The Name of the SSL certificate that is unique within this Application Gateway
	Name pulumi.StringInput `pulumi:"name"`
	// Password for the pfx file specified in data. Required if `data` is set.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The Public Certificate Data associated with the SSL Certificate.
	PublicCertData pulumi.StringPtrInput `pulumi:"publicCertData"`
}

func (ApplicationGatewaySslCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslCertificate)(nil)).Elem()
}

func (i ApplicationGatewaySslCertificateArgs) ToApplicationGatewaySslCertificateOutput() ApplicationGatewaySslCertificateOutput {
	return i.ToApplicationGatewaySslCertificateOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslCertificateArgs) ToApplicationGatewaySslCertificateOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslCertificateOutput)
}

// ApplicationGatewaySslCertificateArrayInput is an input type that accepts ApplicationGatewaySslCertificateArray and ApplicationGatewaySslCertificateArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslCertificateArrayInput` via:
//
//	ApplicationGatewaySslCertificateArray{ ApplicationGatewaySslCertificateArgs{...} }
type ApplicationGatewaySslCertificateArrayInput interface {
	pulumi.Input

	ToApplicationGatewaySslCertificateArrayOutput() ApplicationGatewaySslCertificateArrayOutput
	ToApplicationGatewaySslCertificateArrayOutputWithContext(context.Context) ApplicationGatewaySslCertificateArrayOutput
}

type ApplicationGatewaySslCertificateArray []ApplicationGatewaySslCertificateInput

func (ApplicationGatewaySslCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslCertificate)(nil)).Elem()
}

func (i ApplicationGatewaySslCertificateArray) ToApplicationGatewaySslCertificateArrayOutput() ApplicationGatewaySslCertificateArrayOutput {
	return i.ToApplicationGatewaySslCertificateArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslCertificateArray) ToApplicationGatewaySslCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslCertificateArrayOutput)
}

type ApplicationGatewaySslCertificateOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslCertificate)(nil)).Elem()
}

func (o ApplicationGatewaySslCertificateOutput) ToApplicationGatewaySslCertificateOutput() ApplicationGatewaySslCertificateOutput {
	return o
}

func (o ApplicationGatewaySslCertificateOutput) ToApplicationGatewaySslCertificateOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateOutput {
	return o
}

// The base64-encoded PFX certificate data. Required if `keyVaultSecretId` is not set.
//
// > **NOTE:** When specifying a file, use `data = filebase64("path/to/file")` to encode the contents of that file.
func (o ApplicationGatewaySslCertificateOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// The ID of the Rewrite Rule Set
func (o ApplicationGatewaySslCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Secret ID of (base-64 encoded unencrypted pfx) the `Secret` or `Certificate` object stored in Azure KeyVault. You need to enable soft delete for Key Vault to use this feature. Required if `data` is not set.
//
// > **NOTE:** TLS termination with Key Vault certificates is limited to the [v2 SKUs](https://docs.microsoft.com/azure/application-gateway/key-vault-certs).
//
// > **NOTE:** For TLS termination with Key Vault certificates to work properly existing user-assigned managed identity, which Application Gateway uses to retrieve certificates from Key Vault, should be defined via `identity` block. Additionally, access policies in the Key Vault to allow the identity to be granted *get* access to the secret should be defined.
func (o ApplicationGatewaySslCertificateOutput) KeyVaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.KeyVaultSecretId }).(pulumi.StringPtrOutput)
}

// The Name of the SSL certificate that is unique within this Application Gateway
func (o ApplicationGatewaySslCertificateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) string { return v.Name }).(pulumi.StringOutput)
}

// Password for the pfx file specified in data. Required if `data` is set.
func (o ApplicationGatewaySslCertificateOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The Public Certificate Data associated with the SSL Certificate.
func (o ApplicationGatewaySslCertificateOutput) PublicCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.PublicCertData }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySslCertificateArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslCertificate)(nil)).Elem()
}

func (o ApplicationGatewaySslCertificateArrayOutput) ToApplicationGatewaySslCertificateArrayOutput() ApplicationGatewaySslCertificateArrayOutput {
	return o
}

func (o ApplicationGatewaySslCertificateArrayOutput) ToApplicationGatewaySslCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateArrayOutput {
	return o
}

func (o ApplicationGatewaySslCertificateArrayOutput) Index(i pulumi.IntInput) ApplicationGatewaySslCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewaySslCertificate {
		return vs[0].([]ApplicationGatewaySslCertificate)[vs[1].(int)]
	}).(ApplicationGatewaySslCertificateOutput)
}

type ApplicationGatewaySslPolicy struct {
	// A List of accepted cipher suites. Possible values are: `TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA`, `TLS_DHE_DSS_WITH_AES_128_CBC_SHA`, `TLS_DHE_DSS_WITH_AES_128_CBC_SHA256`, `TLS_DHE_DSS_WITH_AES_256_CBC_SHA`, `TLS_DHE_DSS_WITH_AES_256_CBC_SHA256`, `TLS_DHE_RSA_WITH_AES_128_CBC_SHA`, `TLS_DHE_RSA_WITH_AES_128_GCM_SHA256`, `TLS_DHE_RSA_WITH_AES_256_CBC_SHA`, `TLS_DHE_RSA_WITH_AES_256_GCM_SHA384`, `TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA`, `TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256`, `TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256`, `TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA`, `TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384`, `TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384`, `TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA`, `TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256`, `TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256`, `TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA`, `TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384`, `TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384`, `TLS_RSA_WITH_3DES_EDE_CBC_SHA`, `TLS_RSA_WITH_AES_128_CBC_SHA`, `TLS_RSA_WITH_AES_128_CBC_SHA256`, `TLS_RSA_WITH_AES_128_GCM_SHA256`, `TLS_RSA_WITH_AES_256_CBC_SHA`, `TLS_RSA_WITH_AES_256_CBC_SHA256` and `TLS_RSA_WITH_AES_256_GCM_SHA384`.
	CipherSuites []string `pulumi:"cipherSuites"`
	// A list of SSL Protocols which should be disabled on this Application Gateway. Possible values are `TLSv1_0`, `TLSv1_1`, `TLSv1_2` and `TLSv1_3`.
	//
	// > **NOTE:** `disabledProtocols` cannot be set when `policyName` or `policyType` are set.
	DisabledProtocols []string `pulumi:"disabledProtocols"`
	// The minimal TLS version. Possible values are `TLSv1_0`, `TLSv1_1`, `TLSv1_2` and `TLSv1_3`.
	MinProtocolVersion *string `pulumi:"minProtocolVersion"`
	// The Name of the Policy e.g. AppGwSslPolicy20170401S. Required if `policyType` is set to `Predefined`. Possible values can change over time and are published here <https://docs.microsoft.com/azure/application-gateway/application-gateway-ssl-policy-overview>. Not compatible with `disabledProtocols`.
	PolicyName *string `pulumi:"policyName"`
	// The Type of the Policy. Possible values are `Predefined`, `Custom` and `CustomV2`.
	//
	// > **NOTE:** `policyType` is Required when `policyName` is set - cannot be set if `disabledProtocols` is set.
	PolicyType *string `pulumi:"policyType"`
}

// ApplicationGatewaySslPolicyInput is an input type that accepts ApplicationGatewaySslPolicyArgs and ApplicationGatewaySslPolicyOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslPolicyInput` via:
//
//	ApplicationGatewaySslPolicyArgs{...}
type ApplicationGatewaySslPolicyInput interface {
	pulumi.Input

	ToApplicationGatewaySslPolicyOutput() ApplicationGatewaySslPolicyOutput
	ToApplicationGatewaySslPolicyOutputWithContext(context.Context) ApplicationGatewaySslPolicyOutput
}

type ApplicationGatewaySslPolicyArgs struct {
	// A List of accepted cipher suites. Possible values are: `TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA`, `TLS_DHE_DSS_WITH_AES_128_CBC_SHA`, `TLS_DHE_DSS_WITH_AES_128_CBC_SHA256`, `TLS_DHE_DSS_WITH_AES_256_CBC_SHA`, `TLS_DHE_DSS_WITH_AES_256_CBC_SHA256`, `TLS_DHE_RSA_WITH_AES_128_CBC_SHA`, `TLS_DHE_RSA_WITH_AES_128_GCM_SHA256`, `TLS_DHE_RSA_WITH_AES_256_CBC_SHA`, `TLS_DHE_RSA_WITH_AES_256_GCM_SHA384`, `TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA`, `TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256`, `TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256`, `TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA`, `TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384`, `TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384`, `TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA`, `TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256`, `TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256`, `TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA`, `TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384`, `TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384`, `TLS_RSA_WITH_3DES_EDE_CBC_SHA`, `TLS_RSA_WITH_AES_128_CBC_SHA`, `TLS_RSA_WITH_AES_128_CBC_SHA256`, `TLS_RSA_WITH_AES_128_GCM_SHA256`, `TLS_RSA_WITH_AES_256_CBC_SHA`, `TLS_RSA_WITH_AES_256_CBC_SHA256` and `TLS_RSA_WITH_AES_256_GCM_SHA384`.
	CipherSuites pulumi.StringArrayInput `pulumi:"cipherSuites"`
	// A list of SSL Protocols which should be disabled on this Application Gateway. Possible values are `TLSv1_0`, `TLSv1_1`, `TLSv1_2` and `TLSv1_3`.
	//
	// > **NOTE:** `disabledProtocols` cannot be set when `policyName` or `policyType` are set.
	DisabledProtocols pulumi.StringArrayInput `pulumi:"disabledProtocols"`
	// The minimal TLS version. Possible values are `TLSv1_0`, `TLSv1_1`, `TLSv1_2` and `TLSv1_3`.
	MinProtocolVersion pulumi.StringPtrInput `pulumi:"minProtocolVersion"`
	// The Name of the Policy e.g. AppGwSslPolicy20170401S. Required if `policyType` is set to `Predefined`. Possible values can change over time and are published here <https://docs.microsoft.com/azure/application-gateway/application-gateway-ssl-policy-overview>. Not compatible with `disabledProtocols`.
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// The Type of the Policy. Possible values are `Predefined`, `Custom` and `CustomV2`.
	//
	// > **NOTE:** `policyType` is Required when `policyName` is set - cannot be set if `disabledProtocols` is set.
	PolicyType pulumi.StringPtrInput `pulumi:"policyType"`
}

func (ApplicationGatewaySslPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslPolicy)(nil)).Elem()
}

func (i ApplicationGatewaySslPolicyArgs) ToApplicationGatewaySslPolicyOutput() ApplicationGatewaySslPolicyOutput {
	return i.ToApplicationGatewaySslPolicyOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslPolicyArgs) ToApplicationGatewaySslPolicyOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslPolicyOutput)
}

func (i ApplicationGatewaySslPolicyArgs) ToApplicationGatewaySslPolicyPtrOutput() ApplicationGatewaySslPolicyPtrOutput {
	return i.ToApplicationGatewaySslPolicyPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslPolicyArgs) ToApplicationGatewaySslPolicyPtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslPolicyOutput).ToApplicationGatewaySslPolicyPtrOutputWithContext(ctx)
}

// ApplicationGatewaySslPolicyPtrInput is an input type that accepts ApplicationGatewaySslPolicyArgs, ApplicationGatewaySslPolicyPtr and ApplicationGatewaySslPolicyPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslPolicyPtrInput` via:
//
//	        ApplicationGatewaySslPolicyArgs{...}
//
//	or:
//
//	        nil
type ApplicationGatewaySslPolicyPtrInput interface {
	pulumi.Input

	ToApplicationGatewaySslPolicyPtrOutput() ApplicationGatewaySslPolicyPtrOutput
	ToApplicationGatewaySslPolicyPtrOutputWithContext(context.Context) ApplicationGatewaySslPolicyPtrOutput
}

type applicationGatewaySslPolicyPtrType ApplicationGatewaySslPolicyArgs

func ApplicationGatewaySslPolicyPtr(v *ApplicationGatewaySslPolicyArgs) ApplicationGatewaySslPolicyPtrInput {
	return (*applicationGatewaySslPolicyPtrType)(v)
}

func (*applicationGatewaySslPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySslPolicy)(nil)).Elem()
}

func (i *applicationGatewaySslPolicyPtrType) ToApplicationGatewaySslPolicyPtrOutput() ApplicationGatewaySslPolicyPtrOutput {
	return i.ToApplicationGatewaySslPolicyPtrOutputWithContext(context.Background())
}

func (i *applicationGatewaySslPolicyPtrType) ToApplicationGatewaySslPolicyPtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslPolicyPtrOutput)
}

type ApplicationGatewaySslPolicyOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslPolicy)(nil)).Elem()
}

func (o ApplicationGatewaySslPolicyOutput) ToApplicationGatewaySslPolicyOutput() ApplicationGatewaySslPolicyOutput {
	return o
}

func (o ApplicationGatewaySslPolicyOutput) ToApplicationGatewaySslPolicyOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyOutput {
	return o
}

func (o ApplicationGatewaySslPolicyOutput) ToApplicationGatewaySslPolicyPtrOutput() ApplicationGatewaySslPolicyPtrOutput {
	return o.ToApplicationGatewaySslPolicyPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewaySslPolicyOutput) ToApplicationGatewaySslPolicyPtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationGatewaySslPolicy) *ApplicationGatewaySslPolicy {
		return &v
	}).(ApplicationGatewaySslPolicyPtrOutput)
}

// A List of accepted cipher suites. Possible values are: `TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA`, `TLS_DHE_DSS_WITH_AES_128_CBC_SHA`, `TLS_DHE_DSS_WITH_AES_128_CBC_SHA256`, `TLS_DHE_DSS_WITH_AES_256_CBC_SHA`, `TLS_DHE_DSS_WITH_AES_256_CBC_SHA256`, `TLS_DHE_RSA_WITH_AES_128_CBC_SHA`, `TLS_DHE_RSA_WITH_AES_128_GCM_SHA256`, `TLS_DHE_RSA_WITH_AES_256_CBC_SHA`, `TLS_DHE_RSA_WITH_AES_256_GCM_SHA384`, `TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA`, `TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256`, `TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256`, `TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA`, `TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384`, `TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384`, `TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA`, `TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256`, `TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256`, `TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA`, `TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384`, `TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384`, `TLS_RSA_WITH_3DES_EDE_CBC_SHA`, `TLS_RSA_WITH_AES_128_CBC_SHA`, `TLS_RSA_WITH_AES_128_CBC_SHA256`, `TLS_RSA_WITH_AES_128_GCM_SHA256`, `TLS_RSA_WITH_AES_256_CBC_SHA`, `TLS_RSA_WITH_AES_256_CBC_SHA256` and `TLS_RSA_WITH_AES_256_GCM_SHA384`.
func (o ApplicationGatewaySslPolicyOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicy) []string { return v.CipherSuites }).(pulumi.StringArrayOutput)
}

// A list of SSL Protocols which should be disabled on this Application Gateway. Possible values are `TLSv1_0`, `TLSv1_1`, `TLSv1_2` and `TLSv1_3`.
//
// > **NOTE:** `disabledProtocols` cannot be set when `policyName` or `policyType` are set.
func (o ApplicationGatewaySslPolicyOutput) DisabledProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicy) []string { return v.DisabledProtocols }).(pulumi.StringArrayOutput)
}

// The minimal TLS version. Possible values are `TLSv1_0`, `TLSv1_1`, `TLSv1_2` and `TLSv1_3`.
func (o ApplicationGatewaySslPolicyOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicy) *string { return v.MinProtocolVersion }).(pulumi.StringPtrOutput)
}

// The Name of the Policy e.g. AppGwSslPolicy20170401S. Required if `policyType` is set to `Predefined`. Possible values can change over time and are published here <https://docs.microsoft.com/azure/application-gateway/application-gateway-ssl-policy-overview>. Not compatible with `disabledProtocols`.
func (o ApplicationGatewaySslPolicyOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicy) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// The Type of the Policy. Possible values are `Predefined`, `Custom` and `CustomV2`.
//
// > **NOTE:** `policyType` is Required when `policyName` is set - cannot be set if `disabledProtocols` is set.
func (o ApplicationGatewaySslPolicyOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicy) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySslPolicyPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySslPolicy)(nil)).Elem()
}

func (o ApplicationGatewaySslPolicyPtrOutput) ToApplicationGatewaySslPolicyPtrOutput() ApplicationGatewaySslPolicyPtrOutput {
	return o
}

func (o ApplicationGatewaySslPolicyPtrOutput) ToApplicationGatewaySslPolicyPtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyPtrOutput {
	return o
}

func (o ApplicationGatewaySslPolicyPtrOutput) Elem() ApplicationGatewaySslPolicyOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) ApplicationGatewaySslPolicy {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewaySslPolicy
		return ret
	}).(ApplicationGatewaySslPolicyOutput)
}

// A List of accepted cipher suites. Possible values are: `TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA`, `TLS_DHE_DSS_WITH_AES_128_CBC_SHA`, `TLS_DHE_DSS_WITH_AES_128_CBC_SHA256`, `TLS_DHE_DSS_WITH_AES_256_CBC_SHA`, `TLS_DHE_DSS_WITH_AES_256_CBC_SHA256`, `TLS_DHE_RSA_WITH_AES_128_CBC_SHA`, `TLS_DHE_RSA_WITH_AES_128_GCM_SHA256`, `TLS_DHE_RSA_WITH_AES_256_CBC_SHA`, `TLS_DHE_RSA_WITH_AES_256_GCM_SHA384`, `TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA`, `TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256`, `TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256`, `TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA`, `TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384`, `TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384`, `TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA`, `TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256`, `TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256`, `TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA`, `TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384`, `TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384`, `TLS_RSA_WITH_3DES_EDE_CBC_SHA`, `TLS_RSA_WITH_AES_128_CBC_SHA`, `TLS_RSA_WITH_AES_128_CBC_SHA256`, `TLS_RSA_WITH_AES_128_GCM_SHA256`, `TLS_RSA_WITH_AES_256_CBC_SHA`, `TLS_RSA_WITH_AES_256_CBC_SHA256` and `TLS_RSA_WITH_AES_256_GCM_SHA384`.
func (o ApplicationGatewaySslPolicyPtrOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) []string {
		if v == nil {
			return nil
		}
		return v.CipherSuites
	}).(pulumi.StringArrayOutput)
}

// A list of SSL Protocols which should be disabled on this Application Gateway. Possible values are `TLSv1_0`, `TLSv1_1`, `TLSv1_2` and `TLSv1_3`.
//
// > **NOTE:** `disabledProtocols` cannot be set when `policyName` or `policyType` are set.
func (o ApplicationGatewaySslPolicyPtrOutput) DisabledProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) []string {
		if v == nil {
			return nil
		}
		return v.DisabledProtocols
	}).(pulumi.StringArrayOutput)
}

// The minimal TLS version. Possible values are `TLSv1_0`, `TLSv1_1`, `TLSv1_2` and `TLSv1_3`.
func (o ApplicationGatewaySslPolicyPtrOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) *string {
		if v == nil {
			return nil
		}
		return v.MinProtocolVersion
	}).(pulumi.StringPtrOutput)
}

// The Name of the Policy e.g. AppGwSslPolicy20170401S. Required if `policyType` is set to `Predefined`. Possible values can change over time and are published here <https://docs.microsoft.com/azure/application-gateway/application-gateway-ssl-policy-overview>. Not compatible with `disabledProtocols`.
func (o ApplicationGatewaySslPolicyPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// The Type of the Policy. Possible values are `Predefined`, `Custom` and `CustomV2`.
//
// > **NOTE:** `policyType` is Required when `policyName` is set - cannot be set if `disabledProtocols` is set.
func (o ApplicationGatewaySslPolicyPtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) *string {
		if v == nil {
			return nil
		}
		return v.PolicyType
	}).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySslProfile struct {
	// The ID of the Rewrite Rule Set
	Id *string `pulumi:"id"`
	// The name of the SSL Profile that is unique within this Application Gateway.
	Name string `pulumi:"name"`
	// a `sslPolicy` block as defined below.
	SslPolicy *ApplicationGatewaySslProfileSslPolicy `pulumi:"sslPolicy"`
	// The name of the Trusted Client Certificate that will be used to authenticate requests from clients.
	TrustedClientCertificateNames []string `pulumi:"trustedClientCertificateNames"`
	// Should client certificate issuer DN be verified? Defaults to `false`.
	VerifyClientCertIssuerDn *bool `pulumi:"verifyClientCertIssuerDn"`
	// Specify the method to check client certificate revocation status. Possible value is `OCSP`.
	VerifyClientCertificateRevocation *string `pulumi:"verifyClientCertificateRevocation"`
}

// ApplicationGatewaySslProfileInput is an input type that accepts ApplicationGatewaySslProfileArgs and ApplicationGatewaySslProfileOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslProfileInput` via:
//
//	ApplicationGatewaySslProfileArgs{...}
type ApplicationGatewaySslProfileInput interface {
	pulumi.Input

	ToApplicationGatewaySslProfileOutput() ApplicationGatewaySslProfileOutput
	ToApplicationGatewaySslProfileOutputWithContext(context.Context) ApplicationGatewaySslProfileOutput
}

type ApplicationGatewaySslProfileArgs struct {
	// The ID of the Rewrite Rule Set
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the SSL Profile that is unique within this Application Gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// a `sslPolicy` block as defined below.
	SslPolicy ApplicationGatewaySslProfileSslPolicyPtrInput `pulumi:"sslPolicy"`
	// The name of the Trusted Client Certificate that will be used to authenticate requests from clients.
	TrustedClientCertificateNames pulumi.StringArrayInput `pulumi:"trustedClientCertificateNames"`
	// Should client certificate issuer DN be verified? Defaults to `false`.
	VerifyClientCertIssuerDn pulumi.BoolPtrInput `pulumi:"verifyClientCertIssuerDn"`
	// Specify the method to check client certificate revocation status. Possible value is `OCSP`.
	VerifyClientCertificateRevocation pulumi.StringPtrInput `pulumi:"verifyClientCertificateRevocation"`
}

func (ApplicationGatewaySslProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslProfile)(nil)).Elem()
}

func (i ApplicationGatewaySslProfileArgs) ToApplicationGatewaySslProfileOutput() ApplicationGatewaySslProfileOutput {
	return i.ToApplicationGatewaySslProfileOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslProfileArgs) ToApplicationGatewaySslProfileOutputWithContext(ctx context.Context) ApplicationGatewaySslProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslProfileOutput)
}

// ApplicationGatewaySslProfileArrayInput is an input type that accepts ApplicationGatewaySslProfileArray and ApplicationGatewaySslProfileArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslProfileArrayInput` via:
//
//	ApplicationGatewaySslProfileArray{ ApplicationGatewaySslProfileArgs{...} }
type ApplicationGatewaySslProfileArrayInput interface {
	pulumi.Input

	ToApplicationGatewaySslProfileArrayOutput() ApplicationGatewaySslProfileArrayOutput
	ToApplicationGatewaySslProfileArrayOutputWithContext(context.Context) ApplicationGatewaySslProfileArrayOutput
}

type ApplicationGatewaySslProfileArray []ApplicationGatewaySslProfileInput

func (ApplicationGatewaySslProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslProfile)(nil)).Elem()
}

func (i ApplicationGatewaySslProfileArray) ToApplicationGatewaySslProfileArrayOutput() ApplicationGatewaySslProfileArrayOutput {
	return i.ToApplicationGatewaySslProfileArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslProfileArray) ToApplicationGatewaySslProfileArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslProfileArrayOutput)
}

type ApplicationGatewaySslProfileOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslProfile)(nil)).Elem()
}

func (o ApplicationGatewaySslProfileOutput) ToApplicationGatewaySslProfileOutput() ApplicationGatewaySslProfileOutput {
	return o
}

func (o ApplicationGatewaySslProfileOutput) ToApplicationGatewaySslProfileOutputWithContext(ctx context.Context) ApplicationGatewaySslProfileOutput {
	return o
}

// The ID of the Rewrite Rule Set
func (o ApplicationGatewaySslProfileOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfile) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the SSL Profile that is unique within this Application Gateway.
func (o ApplicationGatewaySslProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfile) string { return v.Name }).(pulumi.StringOutput)
}

// a `sslPolicy` block as defined below.
func (o ApplicationGatewaySslProfileOutput) SslPolicy() ApplicationGatewaySslProfileSslPolicyPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfile) *ApplicationGatewaySslProfileSslPolicy { return v.SslPolicy }).(ApplicationGatewaySslProfileSslPolicyPtrOutput)
}

// The name of the Trusted Client Certificate that will be used to authenticate requests from clients.
func (o ApplicationGatewaySslProfileOutput) TrustedClientCertificateNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfile) []string { return v.TrustedClientCertificateNames }).(pulumi.StringArrayOutput)
}

// Should client certificate issuer DN be verified? Defaults to `false`.
func (o ApplicationGatewaySslProfileOutput) VerifyClientCertIssuerDn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfile) *bool { return v.VerifyClientCertIssuerDn }).(pulumi.BoolPtrOutput)
}

// Specify the method to check client certificate revocation status. Possible value is `OCSP`.
func (o ApplicationGatewaySslProfileOutput) VerifyClientCertificateRevocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfile) *string { return v.VerifyClientCertificateRevocation }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySslProfileArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslProfile)(nil)).Elem()
}

func (o ApplicationGatewaySslProfileArrayOutput) ToApplicationGatewaySslProfileArrayOutput() ApplicationGatewaySslProfileArrayOutput {
	return o
}

func (o ApplicationGatewaySslProfileArrayOutput) ToApplicationGatewaySslProfileArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslProfileArrayOutput {
	return o
}

func (o ApplicationGatewaySslProfileArrayOutput) Index(i pulumi.IntInput) ApplicationGatewaySslProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewaySslProfile {
		return vs[0].([]ApplicationGatewaySslProfile)[vs[1].(int)]
	}).(ApplicationGatewaySslProfileOutput)
}

type ApplicationGatewaySslProfileSslPolicy struct {
	// A List of accepted cipher suites. Possible values are: `TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA`, `TLS_DHE_DSS_WITH_AES_128_CBC_SHA`, `TLS_DHE_DSS_WITH_AES_128_CBC_SHA256`, `TLS_DHE_DSS_WITH_AES_256_CBC_SHA`, `TLS_DHE_DSS_WITH_AES_256_CBC_SHA256`, `TLS_DHE_RSA_WITH_AES_128_CBC_SHA`, `TLS_DHE_RSA_WITH_AES_128_GCM_SHA256`, `TLS_DHE_RSA_WITH_AES_256_CBC_SHA`, `TLS_DHE_RSA_WITH_AES_256_GCM_SHA384`, `TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA`, `TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256`, `TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256`, `TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA`, `TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384`, `TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384`, `TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA`, `TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256`, `TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256`, `TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA`, `TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384`, `TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384`, `TLS_RSA_WITH_3DES_EDE_CBC_SHA`, `TLS_RSA_WITH_AES_128_CBC_SHA`, `TLS_RSA_WITH_AES_128_CBC_SHA256`, `TLS_RSA_WITH_AES_128_GCM_SHA256`, `TLS_RSA_WITH_AES_256_CBC_SHA`, `TLS_RSA_WITH_AES_256_CBC_SHA256` and `TLS_RSA_WITH_AES_256_GCM_SHA384`.
	CipherSuites []string `pulumi:"cipherSuites"`
	// A list of SSL Protocols which should be disabled on this Application Gateway. Possible values are `TLSv1_0`, `TLSv1_1`, `TLSv1_2` and `TLSv1_3`.
	//
	// > **NOTE:** `disabledProtocols` cannot be set when `policyName` or `policyType` are set.
	DisabledProtocols []string `pulumi:"disabledProtocols"`
	// The minimal TLS version. Possible values are `TLSv1_0`, `TLSv1_1`, `TLSv1_2` and `TLSv1_3`.
	MinProtocolVersion *string `pulumi:"minProtocolVersion"`
	// The Name of the Policy e.g. AppGwSslPolicy20170401S. Required if `policyType` is set to `Predefined`. Possible values can change over time and are published here <https://docs.microsoft.com/azure/application-gateway/application-gateway-ssl-policy-overview>. Not compatible with `disabledProtocols`.
	PolicyName *string `pulumi:"policyName"`
	// The Type of the Policy. Possible values are `Predefined`, `Custom` and `CustomV2`.
	//
	// > **NOTE:** `policyType` is Required when `policyName` is set - cannot be set if `disabledProtocols` is set.
	PolicyType *string `pulumi:"policyType"`
}

// ApplicationGatewaySslProfileSslPolicyInput is an input type that accepts ApplicationGatewaySslProfileSslPolicyArgs and ApplicationGatewaySslProfileSslPolicyOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslProfileSslPolicyInput` via:
//
//	ApplicationGatewaySslProfileSslPolicyArgs{...}
type ApplicationGatewaySslProfileSslPolicyInput interface {
	pulumi.Input

	ToApplicationGatewaySslProfileSslPolicyOutput() ApplicationGatewaySslProfileSslPolicyOutput
	ToApplicationGatewaySslProfileSslPolicyOutputWithContext(context.Context) ApplicationGatewaySslProfileSslPolicyOutput
}

type ApplicationGatewaySslProfileSslPolicyArgs struct {
	// A List of accepted cipher suites. Possible values are: `TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA`, `TLS_DHE_DSS_WITH_AES_128_CBC_SHA`, `TLS_DHE_DSS_WITH_AES_128_CBC_SHA256`, `TLS_DHE_DSS_WITH_AES_256_CBC_SHA`, `TLS_DHE_DSS_WITH_AES_256_CBC_SHA256`, `TLS_DHE_RSA_WITH_AES_128_CBC_SHA`, `TLS_DHE_RSA_WITH_AES_128_GCM_SHA256`, `TLS_DHE_RSA_WITH_AES_256_CBC_SHA`, `TLS_DHE_RSA_WITH_AES_256_GCM_SHA384`, `TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA`, `TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256`, `TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256`, `TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA`, `TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384`, `TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384`, `TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA`, `TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256`, `TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256`, `TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA`, `TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384`, `TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384`, `TLS_RSA_WITH_3DES_EDE_CBC_SHA`, `TLS_RSA_WITH_AES_128_CBC_SHA`, `TLS_RSA_WITH_AES_128_CBC_SHA256`, `TLS_RSA_WITH_AES_128_GCM_SHA256`, `TLS_RSA_WITH_AES_256_CBC_SHA`, `TLS_RSA_WITH_AES_256_CBC_SHA256` and `TLS_RSA_WITH_AES_256_GCM_SHA384`.
	CipherSuites pulumi.StringArrayInput `pulumi:"cipherSuites"`
	// A list of SSL Protocols which should be disabled on this Application Gateway. Possible values are `TLSv1_0`, `TLSv1_1`, `TLSv1_2` and `TLSv1_3`.
	//
	// > **NOTE:** `disabledProtocols` cannot be set when `policyName` or `policyType` are set.
	DisabledProtocols pulumi.StringArrayInput `pulumi:"disabledProtocols"`
	// The minimal TLS version. Possible values are `TLSv1_0`, `TLSv1_1`, `TLSv1_2` and `TLSv1_3`.
	MinProtocolVersion pulumi.StringPtrInput `pulumi:"minProtocolVersion"`
	// The Name of the Policy e.g. AppGwSslPolicy20170401S. Required if `policyType` is set to `Predefined`. Possible values can change over time and are published here <https://docs.microsoft.com/azure/application-gateway/application-gateway-ssl-policy-overview>. Not compatible with `disabledProtocols`.
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// The Type of the Policy. Possible values are `Predefined`, `Custom` and `CustomV2`.
	//
	// > **NOTE:** `policyType` is Required when `policyName` is set - cannot be set if `disabledProtocols` is set.
	PolicyType pulumi.StringPtrInput `pulumi:"policyType"`
}

func (ApplicationGatewaySslProfileSslPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslProfileSslPolicy)(nil)).Elem()
}

func (i ApplicationGatewaySslProfileSslPolicyArgs) ToApplicationGatewaySslProfileSslPolicyOutput() ApplicationGatewaySslProfileSslPolicyOutput {
	return i.ToApplicationGatewaySslProfileSslPolicyOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslProfileSslPolicyArgs) ToApplicationGatewaySslProfileSslPolicyOutputWithContext(ctx context.Context) ApplicationGatewaySslProfileSslPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslProfileSslPolicyOutput)
}

func (i ApplicationGatewaySslProfileSslPolicyArgs) ToApplicationGatewaySslProfileSslPolicyPtrOutput() ApplicationGatewaySslProfileSslPolicyPtrOutput {
	return i.ToApplicationGatewaySslProfileSslPolicyPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslProfileSslPolicyArgs) ToApplicationGatewaySslProfileSslPolicyPtrOutputWithContext(ctx context.Context) ApplicationGatewaySslProfileSslPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslProfileSslPolicyOutput).ToApplicationGatewaySslProfileSslPolicyPtrOutputWithContext(ctx)
}

// ApplicationGatewaySslProfileSslPolicyPtrInput is an input type that accepts ApplicationGatewaySslProfileSslPolicyArgs, ApplicationGatewaySslProfileSslPolicyPtr and ApplicationGatewaySslProfileSslPolicyPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslProfileSslPolicyPtrInput` via:
//
//	        ApplicationGatewaySslProfileSslPolicyArgs{...}
//
//	or:
//
//	        nil
type ApplicationGatewaySslProfileSslPolicyPtrInput interface {
	pulumi.Input

	ToApplicationGatewaySslProfileSslPolicyPtrOutput() ApplicationGatewaySslProfileSslPolicyPtrOutput
	ToApplicationGatewaySslProfileSslPolicyPtrOutputWithContext(context.Context) ApplicationGatewaySslProfileSslPolicyPtrOutput
}

type applicationGatewaySslProfileSslPolicyPtrType ApplicationGatewaySslProfileSslPolicyArgs

func ApplicationGatewaySslProfileSslPolicyPtr(v *ApplicationGatewaySslProfileSslPolicyArgs) ApplicationGatewaySslProfileSslPolicyPtrInput {
	return (*applicationGatewaySslProfileSslPolicyPtrType)(v)
}

func (*applicationGatewaySslProfileSslPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySslProfileSslPolicy)(nil)).Elem()
}

func (i *applicationGatewaySslProfileSslPolicyPtrType) ToApplicationGatewaySslProfileSslPolicyPtrOutput() ApplicationGatewaySslProfileSslPolicyPtrOutput {
	return i.ToApplicationGatewaySslProfileSslPolicyPtrOutputWithContext(context.Background())
}

func (i *applicationGatewaySslProfileSslPolicyPtrType) ToApplicationGatewaySslProfileSslPolicyPtrOutputWithContext(ctx context.Context) ApplicationGatewaySslProfileSslPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslProfileSslPolicyPtrOutput)
}

type ApplicationGatewaySslProfileSslPolicyOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslProfileSslPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslProfileSslPolicy)(nil)).Elem()
}

func (o ApplicationGatewaySslProfileSslPolicyOutput) ToApplicationGatewaySslProfileSslPolicyOutput() ApplicationGatewaySslProfileSslPolicyOutput {
	return o
}

func (o ApplicationGatewaySslProfileSslPolicyOutput) ToApplicationGatewaySslProfileSslPolicyOutputWithContext(ctx context.Context) ApplicationGatewaySslProfileSslPolicyOutput {
	return o
}

func (o ApplicationGatewaySslProfileSslPolicyOutput) ToApplicationGatewaySslProfileSslPolicyPtrOutput() ApplicationGatewaySslProfileSslPolicyPtrOutput {
	return o.ToApplicationGatewaySslProfileSslPolicyPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewaySslProfileSslPolicyOutput) ToApplicationGatewaySslProfileSslPolicyPtrOutputWithContext(ctx context.Context) ApplicationGatewaySslProfileSslPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationGatewaySslProfileSslPolicy) *ApplicationGatewaySslProfileSslPolicy {
		return &v
	}).(ApplicationGatewaySslProfileSslPolicyPtrOutput)
}

// A List of accepted cipher suites. Possible values are: `TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA`, `TLS_DHE_DSS_WITH_AES_128_CBC_SHA`, `TLS_DHE_DSS_WITH_AES_128_CBC_SHA256`, `TLS_DHE_DSS_WITH_AES_256_CBC_SHA`, `TLS_DHE_DSS_WITH_AES_256_CBC_SHA256`, `TLS_DHE_RSA_WITH_AES_128_CBC_SHA`, `TLS_DHE_RSA_WITH_AES_128_GCM_SHA256`, `TLS_DHE_RSA_WITH_AES_256_CBC_SHA`, `TLS_DHE_RSA_WITH_AES_256_GCM_SHA384`, `TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA`, `TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256`, `TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256`, `TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA`, `TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384`, `TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384`, `TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA`, `TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256`, `TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256`, `TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA`, `TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384`, `TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384`, `TLS_RSA_WITH_3DES_EDE_CBC_SHA`, `TLS_RSA_WITH_AES_128_CBC_SHA`, `TLS_RSA_WITH_AES_128_CBC_SHA256`, `TLS_RSA_WITH_AES_128_GCM_SHA256`, `TLS_RSA_WITH_AES_256_CBC_SHA`, `TLS_RSA_WITH_AES_256_CBC_SHA256` and `TLS_RSA_WITH_AES_256_GCM_SHA384`.
func (o ApplicationGatewaySslProfileSslPolicyOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfileSslPolicy) []string { return v.CipherSuites }).(pulumi.StringArrayOutput)
}

// A list of SSL Protocols which should be disabled on this Application Gateway. Possible values are `TLSv1_0`, `TLSv1_1`, `TLSv1_2` and `TLSv1_3`.
//
// > **NOTE:** `disabledProtocols` cannot be set when `policyName` or `policyType` are set.
func (o ApplicationGatewaySslProfileSslPolicyOutput) DisabledProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfileSslPolicy) []string { return v.DisabledProtocols }).(pulumi.StringArrayOutput)
}

// The minimal TLS version. Possible values are `TLSv1_0`, `TLSv1_1`, `TLSv1_2` and `TLSv1_3`.
func (o ApplicationGatewaySslProfileSslPolicyOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfileSslPolicy) *string { return v.MinProtocolVersion }).(pulumi.StringPtrOutput)
}

// The Name of the Policy e.g. AppGwSslPolicy20170401S. Required if `policyType` is set to `Predefined`. Possible values can change over time and are published here <https://docs.microsoft.com/azure/application-gateway/application-gateway-ssl-policy-overview>. Not compatible with `disabledProtocols`.
func (o ApplicationGatewaySslProfileSslPolicyOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfileSslPolicy) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// The Type of the Policy. Possible values are `Predefined`, `Custom` and `CustomV2`.
//
// > **NOTE:** `policyType` is Required when `policyName` is set - cannot be set if `disabledProtocols` is set.
func (o ApplicationGatewaySslProfileSslPolicyOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfileSslPolicy) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySslProfileSslPolicyPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslProfileSslPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySslProfileSslPolicy)(nil)).Elem()
}

func (o ApplicationGatewaySslProfileSslPolicyPtrOutput) ToApplicationGatewaySslProfileSslPolicyPtrOutput() ApplicationGatewaySslProfileSslPolicyPtrOutput {
	return o
}

func (o ApplicationGatewaySslProfileSslPolicyPtrOutput) ToApplicationGatewaySslProfileSslPolicyPtrOutputWithContext(ctx context.Context) ApplicationGatewaySslProfileSslPolicyPtrOutput {
	return o
}

func (o ApplicationGatewaySslProfileSslPolicyPtrOutput) Elem() ApplicationGatewaySslProfileSslPolicyOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslProfileSslPolicy) ApplicationGatewaySslProfileSslPolicy {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewaySslProfileSslPolicy
		return ret
	}).(ApplicationGatewaySslProfileSslPolicyOutput)
}

// A List of accepted cipher suites. Possible values are: `TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA`, `TLS_DHE_DSS_WITH_AES_128_CBC_SHA`, `TLS_DHE_DSS_WITH_AES_128_CBC_SHA256`, `TLS_DHE_DSS_WITH_AES_256_CBC_SHA`, `TLS_DHE_DSS_WITH_AES_256_CBC_SHA256`, `TLS_DHE_RSA_WITH_AES_128_CBC_SHA`, `TLS_DHE_RSA_WITH_AES_128_GCM_SHA256`, `TLS_DHE_RSA_WITH_AES_256_CBC_SHA`, `TLS_DHE_RSA_WITH_AES_256_GCM_SHA384`, `TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA`, `TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256`, `TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256`, `TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA`, `TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384`, `TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384`, `TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA`, `TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256`, `TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256`, `TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA`, `TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384`, `TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384`, `TLS_RSA_WITH_3DES_EDE_CBC_SHA`, `TLS_RSA_WITH_AES_128_CBC_SHA`, `TLS_RSA_WITH_AES_128_CBC_SHA256`, `TLS_RSA_WITH_AES_128_GCM_SHA256`, `TLS_RSA_WITH_AES_256_CBC_SHA`, `TLS_RSA_WITH_AES_256_CBC_SHA256` and `TLS_RSA_WITH_AES_256_GCM_SHA384`.
func (o ApplicationGatewaySslProfileSslPolicyPtrOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslProfileSslPolicy) []string {
		if v == nil {
			return nil
		}
		return v.CipherSuites
	}).(pulumi.StringArrayOutput)
}

// A list of SSL Protocols which should be disabled on this Application Gateway. Possible values are `TLSv1_0`, `TLSv1_1`, `TLSv1_2` and `TLSv1_3`.
//
// > **NOTE:** `disabledProtocols` cannot be set when `policyName` or `policyType` are set.
func (o ApplicationGatewaySslProfileSslPolicyPtrOutput) DisabledProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslProfileSslPolicy) []string {
		if v == nil {
			return nil
		}
		return v.DisabledProtocols
	}).(pulumi.StringArrayOutput)
}

// The minimal TLS version. Possible values are `TLSv1_0`, `TLSv1_1`, `TLSv1_2` and `TLSv1_3`.
func (o ApplicationGatewaySslProfileSslPolicyPtrOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslProfileSslPolicy) *string {
		if v == nil {
			return nil
		}
		return v.MinProtocolVersion
	}).(pulumi.StringPtrOutput)
}

// The Name of the Policy e.g. AppGwSslPolicy20170401S. Required if `policyType` is set to `Predefined`. Possible values can change over time and are published here <https://docs.microsoft.com/azure/application-gateway/application-gateway-ssl-policy-overview>. Not compatible with `disabledProtocols`.
func (o ApplicationGatewaySslProfileSslPolicyPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslProfileSslPolicy) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// The Type of the Policy. Possible values are `Predefined`, `Custom` and `CustomV2`.
//
// > **NOTE:** `policyType` is Required when `policyName` is set - cannot be set if `disabledProtocols` is set.
func (o ApplicationGatewaySslProfileSslPolicyPtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslProfileSslPolicy) *string {
		if v == nil {
			return nil
		}
		return v.PolicyType
	}).(pulumi.StringPtrOutput)
}

type ApplicationGatewayTrustedClientCertificate struct {
	// The base-64 encoded certificate.
	Data string `pulumi:"data"`
	// The ID of the Rewrite Rule Set
	Id *string `pulumi:"id"`
	// The name of the Trusted Client Certificate that is unique within this Application Gateway.
	Name string `pulumi:"name"`
}

// ApplicationGatewayTrustedClientCertificateInput is an input type that accepts ApplicationGatewayTrustedClientCertificateArgs and ApplicationGatewayTrustedClientCertificateOutput values.
// You can construct a concrete instance of `ApplicationGatewayTrustedClientCertificateInput` via:
//
//	ApplicationGatewayTrustedClientCertificateArgs{...}
type ApplicationGatewayTrustedClientCertificateInput interface {
	pulumi.Input

	ToApplicationGatewayTrustedClientCertificateOutput() ApplicationGatewayTrustedClientCertificateOutput
	ToApplicationGatewayTrustedClientCertificateOutputWithContext(context.Context) ApplicationGatewayTrustedClientCertificateOutput
}

type ApplicationGatewayTrustedClientCertificateArgs struct {
	// The base-64 encoded certificate.
	Data pulumi.StringInput `pulumi:"data"`
	// The ID of the Rewrite Rule Set
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the Trusted Client Certificate that is unique within this Application Gateway.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ApplicationGatewayTrustedClientCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayTrustedClientCertificate)(nil)).Elem()
}

func (i ApplicationGatewayTrustedClientCertificateArgs) ToApplicationGatewayTrustedClientCertificateOutput() ApplicationGatewayTrustedClientCertificateOutput {
	return i.ToApplicationGatewayTrustedClientCertificateOutputWithContext(context.Background())
}

func (i ApplicationGatewayTrustedClientCertificateArgs) ToApplicationGatewayTrustedClientCertificateOutputWithContext(ctx context.Context) ApplicationGatewayTrustedClientCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayTrustedClientCertificateOutput)
}

// ApplicationGatewayTrustedClientCertificateArrayInput is an input type that accepts ApplicationGatewayTrustedClientCertificateArray and ApplicationGatewayTrustedClientCertificateArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayTrustedClientCertificateArrayInput` via:
//
//	ApplicationGatewayTrustedClientCertificateArray{ ApplicationGatewayTrustedClientCertificateArgs{...} }
type ApplicationGatewayTrustedClientCertificateArrayInput interface {
	pulumi.Input

	ToApplicationGatewayTrustedClientCertificateArrayOutput() ApplicationGatewayTrustedClientCertificateArrayOutput
	ToApplicationGatewayTrustedClientCertificateArrayOutputWithContext(context.Context) ApplicationGatewayTrustedClientCertificateArrayOutput
}

type ApplicationGatewayTrustedClientCertificateArray []ApplicationGatewayTrustedClientCertificateInput

func (ApplicationGatewayTrustedClientCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayTrustedClientCertificate)(nil)).Elem()
}

func (i ApplicationGatewayTrustedClientCertificateArray) ToApplicationGatewayTrustedClientCertificateArrayOutput() ApplicationGatewayTrustedClientCertificateArrayOutput {
	return i.ToApplicationGatewayTrustedClientCertificateArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayTrustedClientCertificateArray) ToApplicationGatewayTrustedClientCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewayTrustedClientCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayTrustedClientCertificateArrayOutput)
}

type ApplicationGatewayTrustedClientCertificateOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayTrustedClientCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayTrustedClientCertificate)(nil)).Elem()
}

func (o ApplicationGatewayTrustedClientCertificateOutput) ToApplicationGatewayTrustedClientCertificateOutput() ApplicationGatewayTrustedClientCertificateOutput {
	return o
}

func (o ApplicationGatewayTrustedClientCertificateOutput) ToApplicationGatewayTrustedClientCertificateOutputWithContext(ctx context.Context) ApplicationGatewayTrustedClientCertificateOutput {
	return o
}

// The base-64 encoded certificate.
func (o ApplicationGatewayTrustedClientCertificateOutput) Data() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedClientCertificate) string { return v.Data }).(pulumi.StringOutput)
}

// The ID of the Rewrite Rule Set
func (o ApplicationGatewayTrustedClientCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedClientCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the Trusted Client Certificate that is unique within this Application Gateway.
func (o ApplicationGatewayTrustedClientCertificateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedClientCertificate) string { return v.Name }).(pulumi.StringOutput)
}

type ApplicationGatewayTrustedClientCertificateArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayTrustedClientCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayTrustedClientCertificate)(nil)).Elem()
}

func (o ApplicationGatewayTrustedClientCertificateArrayOutput) ToApplicationGatewayTrustedClientCertificateArrayOutput() ApplicationGatewayTrustedClientCertificateArrayOutput {
	return o
}

func (o ApplicationGatewayTrustedClientCertificateArrayOutput) ToApplicationGatewayTrustedClientCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewayTrustedClientCertificateArrayOutput {
	return o
}

func (o ApplicationGatewayTrustedClientCertificateArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayTrustedClientCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayTrustedClientCertificate {
		return vs[0].([]ApplicationGatewayTrustedClientCertificate)[vs[1].(int)]
	}).(ApplicationGatewayTrustedClientCertificateOutput)
}

type ApplicationGatewayTrustedRootCertificate struct {
	// The contents of the Trusted Root Certificate which should be used. Required if `keyVaultSecretId` is not set.
	Data *string `pulumi:"data"`
	// The ID of the Rewrite Rule Set
	Id *string `pulumi:"id"`
	// The Secret ID of (base-64 encoded unencrypted pfx) `Secret` or `Certificate` object stored in Azure KeyVault. You need to enable soft delete for the Key Vault to use this feature. Required if `data` is not set.
	//
	// > **NOTE:** TLS termination with Key Vault certificates is limited to the [v2 SKUs](https://docs.microsoft.com/azure/application-gateway/key-vault-certs).
	//
	// > **NOTE:** For TLS termination with Key Vault certificates to work properly existing user-assigned managed identity, which Application Gateway uses to retrieve certificates from Key Vault, should be defined via `identity` block. Additionally, access policies in the Key Vault to allow the identity to be granted *get* access to the secret should be defined.
	KeyVaultSecretId *string `pulumi:"keyVaultSecretId"`
	// The Name of the Trusted Root Certificate to use.
	Name string `pulumi:"name"`
}

// ApplicationGatewayTrustedRootCertificateInput is an input type that accepts ApplicationGatewayTrustedRootCertificateArgs and ApplicationGatewayTrustedRootCertificateOutput values.
// You can construct a concrete instance of `ApplicationGatewayTrustedRootCertificateInput` via:
//
//	ApplicationGatewayTrustedRootCertificateArgs{...}
type ApplicationGatewayTrustedRootCertificateInput interface {
	pulumi.Input

	ToApplicationGatewayTrustedRootCertificateOutput() ApplicationGatewayTrustedRootCertificateOutput
	ToApplicationGatewayTrustedRootCertificateOutputWithContext(context.Context) ApplicationGatewayTrustedRootCertificateOutput
}

type ApplicationGatewayTrustedRootCertificateArgs struct {
	// The contents of the Trusted Root Certificate which should be used. Required if `keyVaultSecretId` is not set.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// The ID of the Rewrite Rule Set
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Secret ID of (base-64 encoded unencrypted pfx) `Secret` or `Certificate` object stored in Azure KeyVault. You need to enable soft delete for the Key Vault to use this feature. Required if `data` is not set.
	//
	// > **NOTE:** TLS termination with Key Vault certificates is limited to the [v2 SKUs](https://docs.microsoft.com/azure/application-gateway/key-vault-certs).
	//
	// > **NOTE:** For TLS termination with Key Vault certificates to work properly existing user-assigned managed identity, which Application Gateway uses to retrieve certificates from Key Vault, should be defined via `identity` block. Additionally, access policies in the Key Vault to allow the identity to be granted *get* access to the secret should be defined.
	KeyVaultSecretId pulumi.StringPtrInput `pulumi:"keyVaultSecretId"`
	// The Name of the Trusted Root Certificate to use.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ApplicationGatewayTrustedRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayTrustedRootCertificate)(nil)).Elem()
}

func (i ApplicationGatewayTrustedRootCertificateArgs) ToApplicationGatewayTrustedRootCertificateOutput() ApplicationGatewayTrustedRootCertificateOutput {
	return i.ToApplicationGatewayTrustedRootCertificateOutputWithContext(context.Background())
}

func (i ApplicationGatewayTrustedRootCertificateArgs) ToApplicationGatewayTrustedRootCertificateOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayTrustedRootCertificateOutput)
}

// ApplicationGatewayTrustedRootCertificateArrayInput is an input type that accepts ApplicationGatewayTrustedRootCertificateArray and ApplicationGatewayTrustedRootCertificateArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayTrustedRootCertificateArrayInput` via:
//
//	ApplicationGatewayTrustedRootCertificateArray{ ApplicationGatewayTrustedRootCertificateArgs{...} }
type ApplicationGatewayTrustedRootCertificateArrayInput interface {
	pulumi.Input

	ToApplicationGatewayTrustedRootCertificateArrayOutput() ApplicationGatewayTrustedRootCertificateArrayOutput
	ToApplicationGatewayTrustedRootCertificateArrayOutputWithContext(context.Context) ApplicationGatewayTrustedRootCertificateArrayOutput
}

type ApplicationGatewayTrustedRootCertificateArray []ApplicationGatewayTrustedRootCertificateInput

func (ApplicationGatewayTrustedRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayTrustedRootCertificate)(nil)).Elem()
}

func (i ApplicationGatewayTrustedRootCertificateArray) ToApplicationGatewayTrustedRootCertificateArrayOutput() ApplicationGatewayTrustedRootCertificateArrayOutput {
	return i.ToApplicationGatewayTrustedRootCertificateArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayTrustedRootCertificateArray) ToApplicationGatewayTrustedRootCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayTrustedRootCertificateArrayOutput)
}

type ApplicationGatewayTrustedRootCertificateOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayTrustedRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayTrustedRootCertificate)(nil)).Elem()
}

func (o ApplicationGatewayTrustedRootCertificateOutput) ToApplicationGatewayTrustedRootCertificateOutput() ApplicationGatewayTrustedRootCertificateOutput {
	return o
}

func (o ApplicationGatewayTrustedRootCertificateOutput) ToApplicationGatewayTrustedRootCertificateOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificateOutput {
	return o
}

// The contents of the Trusted Root Certificate which should be used. Required if `keyVaultSecretId` is not set.
func (o ApplicationGatewayTrustedRootCertificateOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificate) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// The ID of the Rewrite Rule Set
func (o ApplicationGatewayTrustedRootCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Secret ID of (base-64 encoded unencrypted pfx) `Secret` or `Certificate` object stored in Azure KeyVault. You need to enable soft delete for the Key Vault to use this feature. Required if `data` is not set.
//
// > **NOTE:** TLS termination with Key Vault certificates is limited to the [v2 SKUs](https://docs.microsoft.com/azure/application-gateway/key-vault-certs).
//
// > **NOTE:** For TLS termination with Key Vault certificates to work properly existing user-assigned managed identity, which Application Gateway uses to retrieve certificates from Key Vault, should be defined via `identity` block. Additionally, access policies in the Key Vault to allow the identity to be granted *get* access to the secret should be defined.
func (o ApplicationGatewayTrustedRootCertificateOutput) KeyVaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificate) *string { return v.KeyVaultSecretId }).(pulumi.StringPtrOutput)
}

// The Name of the Trusted Root Certificate to use.
func (o ApplicationGatewayTrustedRootCertificateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificate) string { return v.Name }).(pulumi.StringOutput)
}

type ApplicationGatewayTrustedRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayTrustedRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayTrustedRootCertificate)(nil)).Elem()
}

func (o ApplicationGatewayTrustedRootCertificateArrayOutput) ToApplicationGatewayTrustedRootCertificateArrayOutput() ApplicationGatewayTrustedRootCertificateArrayOutput {
	return o
}

func (o ApplicationGatewayTrustedRootCertificateArrayOutput) ToApplicationGatewayTrustedRootCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificateArrayOutput {
	return o
}

func (o ApplicationGatewayTrustedRootCertificateArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayTrustedRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayTrustedRootCertificate {
		return vs[0].([]ApplicationGatewayTrustedRootCertificate)[vs[1].(int)]
	}).(ApplicationGatewayTrustedRootCertificateOutput)
}

type ApplicationGatewayUrlPathMap struct {
	// The ID of the Default Backend Address Pool.
	DefaultBackendAddressPoolId *string `pulumi:"defaultBackendAddressPoolId"`
	// The Name of the Default Backend Address Pool which should be used for this URL Path Map. Cannot be set if `defaultRedirectConfigurationName` is set.
	DefaultBackendAddressPoolName *string `pulumi:"defaultBackendAddressPoolName"`
	// The ID of the Default Backend HTTP Settings Collection.
	DefaultBackendHttpSettingsId *string `pulumi:"defaultBackendHttpSettingsId"`
	// The Name of the Default Backend HTTP Settings Collection which should be used for this URL Path Map. Cannot be set if `defaultRedirectConfigurationName` is set.
	DefaultBackendHttpSettingsName *string `pulumi:"defaultBackendHttpSettingsName"`
	// The ID of the Default Redirect Configuration.
	DefaultRedirectConfigurationId *string `pulumi:"defaultRedirectConfigurationId"`
	// The Name of the Default Redirect Configuration which should be used for this URL Path Map. Cannot be set if either `defaultBackendAddressPoolName` or `defaultBackendHttpSettingsName` is set.
	//
	// > **NOTE:** Both `defaultBackendAddressPoolName` and `defaultBackendHttpSettingsName` or `defaultRedirectConfigurationName` should be specified.
	DefaultRedirectConfigurationName *string `pulumi:"defaultRedirectConfigurationName"`
	DefaultRewriteRuleSetId          *string `pulumi:"defaultRewriteRuleSetId"`
	// The Name of the Default Rewrite Rule Set which should be used for this URL Path Map. Only valid for v2 SKUs.
	DefaultRewriteRuleSetName *string `pulumi:"defaultRewriteRuleSetName"`
	// The ID of the Rewrite Rule Set
	Id *string `pulumi:"id"`
	// The Name of the URL Path Map.
	Name string `pulumi:"name"`
	// One or more `pathRule` blocks as defined above.
	PathRules []ApplicationGatewayUrlPathMapPathRule `pulumi:"pathRules"`
}

// ApplicationGatewayUrlPathMapInput is an input type that accepts ApplicationGatewayUrlPathMap and ApplicationGatewayUrlPathMapOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlPathMapInput` via:
//
//	ApplicationGatewayUrlPathMap{ "key": ApplicationGatewayUrlPathArgs{...} }
type ApplicationGatewayUrlPathMapInput interface {
	pulumi.Input

	ToApplicationGatewayUrlPathMapOutput() ApplicationGatewayUrlPathMapOutput
	ToApplicationGatewayUrlPathMapOutputWithContext(context.Context) ApplicationGatewayUrlPathMapOutput
}

type ApplicationGatewayUrlPathMapArgs struct {
	// The ID of the Default Backend Address Pool.
	DefaultBackendAddressPoolId pulumi.StringPtrInput `pulumi:"defaultBackendAddressPoolId"`
	// The Name of the Default Backend Address Pool which should be used for this URL Path Map. Cannot be set if `defaultRedirectConfigurationName` is set.
	DefaultBackendAddressPoolName pulumi.StringPtrInput `pulumi:"defaultBackendAddressPoolName"`
	// The ID of the Default Backend HTTP Settings Collection.
	DefaultBackendHttpSettingsId pulumi.StringPtrInput `pulumi:"defaultBackendHttpSettingsId"`
	// The Name of the Default Backend HTTP Settings Collection which should be used for this URL Path Map. Cannot be set if `defaultRedirectConfigurationName` is set.
	DefaultBackendHttpSettingsName pulumi.StringPtrInput `pulumi:"defaultBackendHttpSettingsName"`
	// The ID of the Default Redirect Configuration.
	DefaultRedirectConfigurationId pulumi.StringPtrInput `pulumi:"defaultRedirectConfigurationId"`
	// The Name of the Default Redirect Configuration which should be used for this URL Path Map. Cannot be set if either `defaultBackendAddressPoolName` or `defaultBackendHttpSettingsName` is set.
	//
	// > **NOTE:** Both `defaultBackendAddressPoolName` and `defaultBackendHttpSettingsName` or `defaultRedirectConfigurationName` should be specified.
	DefaultRedirectConfigurationName pulumi.StringPtrInput `pulumi:"defaultRedirectConfigurationName"`
	DefaultRewriteRuleSetId          pulumi.StringPtrInput `pulumi:"defaultRewriteRuleSetId"`
	// The Name of the Default Rewrite Rule Set which should be used for this URL Path Map. Only valid for v2 SKUs.
	DefaultRewriteRuleSetName pulumi.StringPtrInput `pulumi:"defaultRewriteRuleSetName"`
	// The ID of the Rewrite Rule Set
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Name of the URL Path Map.
	Name pulumi.StringInput `pulumi:"name"`
	// One or more `pathRule` blocks as defined above.
	PathRules ApplicationGatewayUrlPathMapPathRuleArrayInput `pulumi:"pathRules"`
}

func (ApplicationGatewayUrlPathMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlPathMap)(nil)).Elem()
}

func (i ApplicationGatewayUrlPathMapArgs) ToApplicationGatewayUrlPathMapOutput() ApplicationGatewayUrlPathMapOutput {
	return i.ToApplicationGatewayUrlPathMapOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlPathMapArgs) ToApplicationGatewayUrlPathMapOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapOutput)
}

// ApplicationGatewayUrlPathMapArrayInput is an input type that accepts ApplicationGatewayUrlPathMapArray and ApplicationGatewayUrlPathMapArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlPathMapArrayInput` via:
//
//	ApplicationGatewayUrlPathMapArray{ ApplicationGatewayUrlPathMapArgs{...} }
type ApplicationGatewayUrlPathMapArrayInput interface {
	pulumi.Input

	ToApplicationGatewayUrlPathMapArrayOutput() ApplicationGatewayUrlPathMapArrayOutput
	ToApplicationGatewayUrlPathMapArrayOutputWithContext(context.Context) ApplicationGatewayUrlPathMapArrayOutput
}

type ApplicationGatewayUrlPathMapArray []ApplicationGatewayUrlPathMapInput

func (ApplicationGatewayUrlPathMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayUrlPathMap)(nil)).Elem()
}

func (i ApplicationGatewayUrlPathMapArray) ToApplicationGatewayUrlPathMapArrayOutput() ApplicationGatewayUrlPathMapArrayOutput {
	return i.ToApplicationGatewayUrlPathMapArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlPathMapArray) ToApplicationGatewayUrlPathMapArrayOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapArrayOutput)
}

type ApplicationGatewayUrlPathMapOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlPathMap)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapOutput) ToApplicationGatewayUrlPathMapOutput() ApplicationGatewayUrlPathMapOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapOutput) ToApplicationGatewayUrlPathMapOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapOutput {
	return o
}

// The ID of the Default Backend Address Pool.
func (o ApplicationGatewayUrlPathMapOutput) DefaultBackendAddressPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *string { return v.DefaultBackendAddressPoolId }).(pulumi.StringPtrOutput)
}

// The Name of the Default Backend Address Pool which should be used for this URL Path Map. Cannot be set if `defaultRedirectConfigurationName` is set.
func (o ApplicationGatewayUrlPathMapOutput) DefaultBackendAddressPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *string { return v.DefaultBackendAddressPoolName }).(pulumi.StringPtrOutput)
}

// The ID of the Default Backend HTTP Settings Collection.
func (o ApplicationGatewayUrlPathMapOutput) DefaultBackendHttpSettingsId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *string { return v.DefaultBackendHttpSettingsId }).(pulumi.StringPtrOutput)
}

// The Name of the Default Backend HTTP Settings Collection which should be used for this URL Path Map. Cannot be set if `defaultRedirectConfigurationName` is set.
func (o ApplicationGatewayUrlPathMapOutput) DefaultBackendHttpSettingsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *string { return v.DefaultBackendHttpSettingsName }).(pulumi.StringPtrOutput)
}

// The ID of the Default Redirect Configuration.
func (o ApplicationGatewayUrlPathMapOutput) DefaultRedirectConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *string { return v.DefaultRedirectConfigurationId }).(pulumi.StringPtrOutput)
}

// The Name of the Default Redirect Configuration which should be used for this URL Path Map. Cannot be set if either `defaultBackendAddressPoolName` or `defaultBackendHttpSettingsName` is set.
//
// > **NOTE:** Both `defaultBackendAddressPoolName` and `defaultBackendHttpSettingsName` or `defaultRedirectConfigurationName` should be specified.
func (o ApplicationGatewayUrlPathMapOutput) DefaultRedirectConfigurationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *string { return v.DefaultRedirectConfigurationName }).(pulumi.StringPtrOutput)
}

func (o ApplicationGatewayUrlPathMapOutput) DefaultRewriteRuleSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *string { return v.DefaultRewriteRuleSetId }).(pulumi.StringPtrOutput)
}

// The Name of the Default Rewrite Rule Set which should be used for this URL Path Map. Only valid for v2 SKUs.
func (o ApplicationGatewayUrlPathMapOutput) DefaultRewriteRuleSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *string { return v.DefaultRewriteRuleSetName }).(pulumi.StringPtrOutput)
}

// The ID of the Rewrite Rule Set
func (o ApplicationGatewayUrlPathMapOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Name of the URL Path Map.
func (o ApplicationGatewayUrlPathMapOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) string { return v.Name }).(pulumi.StringOutput)
}

// One or more `pathRule` blocks as defined above.
func (o ApplicationGatewayUrlPathMapOutput) PathRules() ApplicationGatewayUrlPathMapPathRuleArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) []ApplicationGatewayUrlPathMapPathRule { return v.PathRules }).(ApplicationGatewayUrlPathMapPathRuleArrayOutput)
}

type ApplicationGatewayUrlPathMapArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayUrlPathMap)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapArrayOutput) ToApplicationGatewayUrlPathMapArrayOutput() ApplicationGatewayUrlPathMapArrayOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapArrayOutput) ToApplicationGatewayUrlPathMapArrayOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapArrayOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayUrlPathMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayUrlPathMap {
		return vs[0].([]ApplicationGatewayUrlPathMap)[vs[1].(int)]
	}).(ApplicationGatewayUrlPathMapOutput)
}

type ApplicationGatewayUrlPathMapPathRule struct {
	// The ID of the associated Backend Address Pool.
	BackendAddressPoolId *string `pulumi:"backendAddressPoolId"`
	// The Name of the Backend Address Pool to use for this Path Rule. Cannot be set if `redirectConfigurationName` is set.
	BackendAddressPoolName *string `pulumi:"backendAddressPoolName"`
	// The ID of the associated Backend HTTP Settings Configuration.
	BackendHttpSettingsId *string `pulumi:"backendHttpSettingsId"`
	// The Name of the Backend HTTP Settings Collection to use for this Path Rule. Cannot be set if `redirectConfigurationName` is set.
	BackendHttpSettingsName *string `pulumi:"backendHttpSettingsName"`
	// The ID of the Web Application Firewall Policy which should be used as an HTTP Listener.
	FirewallPolicyId *string `pulumi:"firewallPolicyId"`
	// The ID of the Rewrite Rule Set
	Id *string `pulumi:"id"`
	// The Name of the Path Rule.
	Name string `pulumi:"name"`
	// A list of Paths used in this Path Rule.
	Paths []string `pulumi:"paths"`
	// The ID of the associated Redirect Configuration.
	RedirectConfigurationId *string `pulumi:"redirectConfigurationId"`
	// The Name of a Redirect Configuration to use for this Path Rule. Cannot be set if `backendAddressPoolName` or `backendHttpSettingsName` is set.
	RedirectConfigurationName *string `pulumi:"redirectConfigurationName"`
	// The ID of the associated Rewrite Rule Set.
	RewriteRuleSetId *string `pulumi:"rewriteRuleSetId"`
	// The Name of the Rewrite Rule Set which should be used for this URL Path Map. Only valid for v2 SKUs.
	RewriteRuleSetName *string `pulumi:"rewriteRuleSetName"`
}

// ApplicationGatewayUrlPathMapPathRuleInput is an input type that accepts ApplicationGatewayUrlPathMapPathRuleArgs and ApplicationGatewayUrlPathMapPathRuleOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlPathMapPathRuleInput` via:
//
//	ApplicationGatewayUrlPathMapPathRuleArgs{...}
type ApplicationGatewayUrlPathMapPathRuleInput interface {
	pulumi.Input

	ToApplicationGatewayUrlPathMapPathRuleOutput() ApplicationGatewayUrlPathMapPathRuleOutput
	ToApplicationGatewayUrlPathMapPathRuleOutputWithContext(context.Context) ApplicationGatewayUrlPathMapPathRuleOutput
}

type ApplicationGatewayUrlPathMapPathRuleArgs struct {
	// The ID of the associated Backend Address Pool.
	BackendAddressPoolId pulumi.StringPtrInput `pulumi:"backendAddressPoolId"`
	// The Name of the Backend Address Pool to use for this Path Rule. Cannot be set if `redirectConfigurationName` is set.
	BackendAddressPoolName pulumi.StringPtrInput `pulumi:"backendAddressPoolName"`
	// The ID of the associated Backend HTTP Settings Configuration.
	BackendHttpSettingsId pulumi.StringPtrInput `pulumi:"backendHttpSettingsId"`
	// The Name of the Backend HTTP Settings Collection to use for this Path Rule. Cannot be set if `redirectConfigurationName` is set.
	BackendHttpSettingsName pulumi.StringPtrInput `pulumi:"backendHttpSettingsName"`
	// The ID of the Web Application Firewall Policy which should be used as an HTTP Listener.
	FirewallPolicyId pulumi.StringPtrInput `pulumi:"firewallPolicyId"`
	// The ID of the Rewrite Rule Set
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Name of the Path Rule.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of Paths used in this Path Rule.
	Paths pulumi.StringArrayInput `pulumi:"paths"`
	// The ID of the associated Redirect Configuration.
	RedirectConfigurationId pulumi.StringPtrInput `pulumi:"redirectConfigurationId"`
	// The Name of a Redirect Configuration to use for this Path Rule. Cannot be set if `backendAddressPoolName` or `backendHttpSettingsName` is set.
	RedirectConfigurationName pulumi.StringPtrInput `pulumi:"redirectConfigurationName"`
	// The ID of the associated Rewrite Rule Set.
	RewriteRuleSetId pulumi.StringPtrInput `pulumi:"rewriteRuleSetId"`
	// The Name of the Rewrite Rule Set which should be used for this URL Path Map. Only valid for v2 SKUs.
	RewriteRuleSetName pulumi.StringPtrInput `pulumi:"rewriteRuleSetName"`
}

func (ApplicationGatewayUrlPathMapPathRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlPathMapPathRule)(nil)).Elem()
}

func (i ApplicationGatewayUrlPathMapPathRuleArgs) ToApplicationGatewayUrlPathMapPathRuleOutput() ApplicationGatewayUrlPathMapPathRuleOutput {
	return i.ToApplicationGatewayUrlPathMapPathRuleOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlPathMapPathRuleArgs) ToApplicationGatewayUrlPathMapPathRuleOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapPathRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapPathRuleOutput)
}

// ApplicationGatewayUrlPathMapPathRuleArrayInput is an input type that accepts ApplicationGatewayUrlPathMapPathRuleArray and ApplicationGatewayUrlPathMapPathRuleArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlPathMapPathRuleArrayInput` via:
//
//	ApplicationGatewayUrlPathMapPathRuleArray{ ApplicationGatewayUrlPathMapPathRuleArgs{...} }
type ApplicationGatewayUrlPathMapPathRuleArrayInput interface {
	pulumi.Input

	ToApplicationGatewayUrlPathMapPathRuleArrayOutput() ApplicationGatewayUrlPathMapPathRuleArrayOutput
	ToApplicationGatewayUrlPathMapPathRuleArrayOutputWithContext(context.Context) ApplicationGatewayUrlPathMapPathRuleArrayOutput
}

type ApplicationGatewayUrlPathMapPathRuleArray []ApplicationGatewayUrlPathMapPathRuleInput

func (ApplicationGatewayUrlPathMapPathRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayUrlPathMapPathRule)(nil)).Elem()
}

func (i ApplicationGatewayUrlPathMapPathRuleArray) ToApplicationGatewayUrlPathMapPathRuleArrayOutput() ApplicationGatewayUrlPathMapPathRuleArrayOutput {
	return i.ToApplicationGatewayUrlPathMapPathRuleArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlPathMapPathRuleArray) ToApplicationGatewayUrlPathMapPathRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapPathRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapPathRuleArrayOutput)
}

type ApplicationGatewayUrlPathMapPathRuleOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapPathRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlPathMapPathRule)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapPathRuleOutput) ToApplicationGatewayUrlPathMapPathRuleOutput() ApplicationGatewayUrlPathMapPathRuleOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapPathRuleOutput) ToApplicationGatewayUrlPathMapPathRuleOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapPathRuleOutput {
	return o
}

// The ID of the associated Backend Address Pool.
func (o ApplicationGatewayUrlPathMapPathRuleOutput) BackendAddressPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapPathRule) *string { return v.BackendAddressPoolId }).(pulumi.StringPtrOutput)
}

// The Name of the Backend Address Pool to use for this Path Rule. Cannot be set if `redirectConfigurationName` is set.
func (o ApplicationGatewayUrlPathMapPathRuleOutput) BackendAddressPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapPathRule) *string { return v.BackendAddressPoolName }).(pulumi.StringPtrOutput)
}

// The ID of the associated Backend HTTP Settings Configuration.
func (o ApplicationGatewayUrlPathMapPathRuleOutput) BackendHttpSettingsId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapPathRule) *string { return v.BackendHttpSettingsId }).(pulumi.StringPtrOutput)
}

// The Name of the Backend HTTP Settings Collection to use for this Path Rule. Cannot be set if `redirectConfigurationName` is set.
func (o ApplicationGatewayUrlPathMapPathRuleOutput) BackendHttpSettingsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapPathRule) *string { return v.BackendHttpSettingsName }).(pulumi.StringPtrOutput)
}

// The ID of the Web Application Firewall Policy which should be used as an HTTP Listener.
func (o ApplicationGatewayUrlPathMapPathRuleOutput) FirewallPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapPathRule) *string { return v.FirewallPolicyId }).(pulumi.StringPtrOutput)
}

// The ID of the Rewrite Rule Set
func (o ApplicationGatewayUrlPathMapPathRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapPathRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Name of the Path Rule.
func (o ApplicationGatewayUrlPathMapPathRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapPathRule) string { return v.Name }).(pulumi.StringOutput)
}

// A list of Paths used in this Path Rule.
func (o ApplicationGatewayUrlPathMapPathRuleOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapPathRule) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

// The ID of the associated Redirect Configuration.
func (o ApplicationGatewayUrlPathMapPathRuleOutput) RedirectConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapPathRule) *string { return v.RedirectConfigurationId }).(pulumi.StringPtrOutput)
}

// The Name of a Redirect Configuration to use for this Path Rule. Cannot be set if `backendAddressPoolName` or `backendHttpSettingsName` is set.
func (o ApplicationGatewayUrlPathMapPathRuleOutput) RedirectConfigurationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapPathRule) *string { return v.RedirectConfigurationName }).(pulumi.StringPtrOutput)
}

// The ID of the associated Rewrite Rule Set.
func (o ApplicationGatewayUrlPathMapPathRuleOutput) RewriteRuleSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapPathRule) *string { return v.RewriteRuleSetId }).(pulumi.StringPtrOutput)
}

// The Name of the Rewrite Rule Set which should be used for this URL Path Map. Only valid for v2 SKUs.
func (o ApplicationGatewayUrlPathMapPathRuleOutput) RewriteRuleSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapPathRule) *string { return v.RewriteRuleSetName }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayUrlPathMapPathRuleArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapPathRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayUrlPathMapPathRule)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapPathRuleArrayOutput) ToApplicationGatewayUrlPathMapPathRuleArrayOutput() ApplicationGatewayUrlPathMapPathRuleArrayOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapPathRuleArrayOutput) ToApplicationGatewayUrlPathMapPathRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapPathRuleArrayOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapPathRuleArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayUrlPathMapPathRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayUrlPathMapPathRule {
		return vs[0].([]ApplicationGatewayUrlPathMapPathRule)[vs[1].(int)]
	}).(ApplicationGatewayUrlPathMapPathRuleOutput)
}

type ApplicationGatewayWafConfiguration struct {
	// One or more `disabledRuleGroup` blocks as defined below.
	DisabledRuleGroups []ApplicationGatewayWafConfigurationDisabledRuleGroup `pulumi:"disabledRuleGroups"`
	// Is the Web Application Firewall enabled?
	Enabled bool `pulumi:"enabled"`
	// One or more `exclusion` blocks as defined below.
	Exclusions []ApplicationGatewayWafConfigurationExclusion `pulumi:"exclusions"`
	// The File Upload Limit in MB. Accepted values are in the range `1`MB to `750`MB for the `WAF_v2` SKU, and `1`MB to `500`MB for all other SKUs. Defaults to `100`MB.
	FileUploadLimitMb *int `pulumi:"fileUploadLimitMb"`
	// The Web Application Firewall Mode. Possible values are `Detection` and `Prevention`.
	FirewallMode string `pulumi:"firewallMode"`
	// The Maximum Request Body Size in KB. Accepted values are in the range `1`KB to `128`KB. Defaults to `128`KB.
	MaxRequestBodySizeKb *int `pulumi:"maxRequestBodySizeKb"`
	// Is Request Body Inspection enabled? Defaults to `true`.
	RequestBodyCheck *bool `pulumi:"requestBodyCheck"`
	// The Type of the Rule Set used for this Web Application Firewall. Possible values are `OWASP`, `Microsoft_BotManagerRuleSet` and `Microsoft_DefaultRuleSet`. Defaults to `OWASP`.
	RuleSetType *string `pulumi:"ruleSetType"`
	// The Version of the Rule Set used for this Web Application Firewall. Possible values are `0.1`, `1.0`, `2.1`, `2.2.9`, `3.0`, `3.1` and `3.2`.
	RuleSetVersion string `pulumi:"ruleSetVersion"`
}

// ApplicationGatewayWafConfigurationInput is an input type that accepts ApplicationGatewayWafConfigurationArgs and ApplicationGatewayWafConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayWafConfigurationInput` via:
//
//	ApplicationGatewayWafConfigurationArgs{...}
type ApplicationGatewayWafConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayWafConfigurationOutput() ApplicationGatewayWafConfigurationOutput
	ToApplicationGatewayWafConfigurationOutputWithContext(context.Context) ApplicationGatewayWafConfigurationOutput
}

type ApplicationGatewayWafConfigurationArgs struct {
	// One or more `disabledRuleGroup` blocks as defined below.
	DisabledRuleGroups ApplicationGatewayWafConfigurationDisabledRuleGroupArrayInput `pulumi:"disabledRuleGroups"`
	// Is the Web Application Firewall enabled?
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// One or more `exclusion` blocks as defined below.
	Exclusions ApplicationGatewayWafConfigurationExclusionArrayInput `pulumi:"exclusions"`
	// The File Upload Limit in MB. Accepted values are in the range `1`MB to `750`MB for the `WAF_v2` SKU, and `1`MB to `500`MB for all other SKUs. Defaults to `100`MB.
	FileUploadLimitMb pulumi.IntPtrInput `pulumi:"fileUploadLimitMb"`
	// The Web Application Firewall Mode. Possible values are `Detection` and `Prevention`.
	FirewallMode pulumi.StringInput `pulumi:"firewallMode"`
	// The Maximum Request Body Size in KB. Accepted values are in the range `1`KB to `128`KB. Defaults to `128`KB.
	MaxRequestBodySizeKb pulumi.IntPtrInput `pulumi:"maxRequestBodySizeKb"`
	// Is Request Body Inspection enabled? Defaults to `true`.
	RequestBodyCheck pulumi.BoolPtrInput `pulumi:"requestBodyCheck"`
	// The Type of the Rule Set used for this Web Application Firewall. Possible values are `OWASP`, `Microsoft_BotManagerRuleSet` and `Microsoft_DefaultRuleSet`. Defaults to `OWASP`.
	RuleSetType pulumi.StringPtrInput `pulumi:"ruleSetType"`
	// The Version of the Rule Set used for this Web Application Firewall. Possible values are `0.1`, `1.0`, `2.1`, `2.2.9`, `3.0`, `3.1` and `3.2`.
	RuleSetVersion pulumi.StringInput `pulumi:"ruleSetVersion"`
}

func (ApplicationGatewayWafConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayWafConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayWafConfigurationArgs) ToApplicationGatewayWafConfigurationOutput() ApplicationGatewayWafConfigurationOutput {
	return i.ToApplicationGatewayWafConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayWafConfigurationArgs) ToApplicationGatewayWafConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayWafConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayWafConfigurationOutput)
}

func (i ApplicationGatewayWafConfigurationArgs) ToApplicationGatewayWafConfigurationPtrOutput() ApplicationGatewayWafConfigurationPtrOutput {
	return i.ToApplicationGatewayWafConfigurationPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayWafConfigurationArgs) ToApplicationGatewayWafConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayWafConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayWafConfigurationOutput).ToApplicationGatewayWafConfigurationPtrOutputWithContext(ctx)
}

// ApplicationGatewayWafConfigurationPtrInput is an input type that accepts ApplicationGatewayWafConfigurationArgs, ApplicationGatewayWafConfigurationPtr and ApplicationGatewayWafConfigurationPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayWafConfigurationPtrInput` via:
//
//	        ApplicationGatewayWafConfigurationArgs{...}
//
//	or:
//
//	        nil
type ApplicationGatewayWafConfigurationPtrInput interface {
	pulumi.Input

	ToApplicationGatewayWafConfigurationPtrOutput() ApplicationGatewayWafConfigurationPtrOutput
	ToApplicationGatewayWafConfigurationPtrOutputWithContext(context.Context) ApplicationGatewayWafConfigurationPtrOutput
}

type applicationGatewayWafConfigurationPtrType ApplicationGatewayWafConfigurationArgs

func ApplicationGatewayWafConfigurationPtr(v *ApplicationGatewayWafConfigurationArgs) ApplicationGatewayWafConfigurationPtrInput {
	return (*applicationGatewayWafConfigurationPtrType)(v)
}

func (*applicationGatewayWafConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayWafConfiguration)(nil)).Elem()
}

func (i *applicationGatewayWafConfigurationPtrType) ToApplicationGatewayWafConfigurationPtrOutput() ApplicationGatewayWafConfigurationPtrOutput {
	return i.ToApplicationGatewayWafConfigurationPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayWafConfigurationPtrType) ToApplicationGatewayWafConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayWafConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayWafConfigurationPtrOutput)
}

type ApplicationGatewayWafConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayWafConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayWafConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayWafConfigurationOutput) ToApplicationGatewayWafConfigurationOutput() ApplicationGatewayWafConfigurationOutput {
	return o
}

func (o ApplicationGatewayWafConfigurationOutput) ToApplicationGatewayWafConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayWafConfigurationOutput {
	return o
}

func (o ApplicationGatewayWafConfigurationOutput) ToApplicationGatewayWafConfigurationPtrOutput() ApplicationGatewayWafConfigurationPtrOutput {
	return o.ToApplicationGatewayWafConfigurationPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayWafConfigurationOutput) ToApplicationGatewayWafConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayWafConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationGatewayWafConfiguration) *ApplicationGatewayWafConfiguration {
		return &v
	}).(ApplicationGatewayWafConfigurationPtrOutput)
}

// One or more `disabledRuleGroup` blocks as defined below.
func (o ApplicationGatewayWafConfigurationOutput) DisabledRuleGroups() ApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayWafConfiguration) []ApplicationGatewayWafConfigurationDisabledRuleGroup {
		return v.DisabledRuleGroups
	}).(ApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput)
}

// Is the Web Application Firewall enabled?
func (o ApplicationGatewayWafConfigurationOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationGatewayWafConfiguration) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// One or more `exclusion` blocks as defined below.
func (o ApplicationGatewayWafConfigurationOutput) Exclusions() ApplicationGatewayWafConfigurationExclusionArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayWafConfiguration) []ApplicationGatewayWafConfigurationExclusion {
		return v.Exclusions
	}).(ApplicationGatewayWafConfigurationExclusionArrayOutput)
}

// The File Upload Limit in MB. Accepted values are in the range `1`MB to `750`MB for the `WAF_v2` SKU, and `1`MB to `500`MB for all other SKUs. Defaults to `100`MB.
func (o ApplicationGatewayWafConfigurationOutput) FileUploadLimitMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWafConfiguration) *int { return v.FileUploadLimitMb }).(pulumi.IntPtrOutput)
}

// The Web Application Firewall Mode. Possible values are `Detection` and `Prevention`.
func (o ApplicationGatewayWafConfigurationOutput) FirewallMode() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayWafConfiguration) string { return v.FirewallMode }).(pulumi.StringOutput)
}

// The Maximum Request Body Size in KB. Accepted values are in the range `1`KB to `128`KB. Defaults to `128`KB.
func (o ApplicationGatewayWafConfigurationOutput) MaxRequestBodySizeKb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWafConfiguration) *int { return v.MaxRequestBodySizeKb }).(pulumi.IntPtrOutput)
}

// Is Request Body Inspection enabled? Defaults to `true`.
func (o ApplicationGatewayWafConfigurationOutput) RequestBodyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWafConfiguration) *bool { return v.RequestBodyCheck }).(pulumi.BoolPtrOutput)
}

// The Type of the Rule Set used for this Web Application Firewall. Possible values are `OWASP`, `Microsoft_BotManagerRuleSet` and `Microsoft_DefaultRuleSet`. Defaults to `OWASP`.
func (o ApplicationGatewayWafConfigurationOutput) RuleSetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWafConfiguration) *string { return v.RuleSetType }).(pulumi.StringPtrOutput)
}

// The Version of the Rule Set used for this Web Application Firewall. Possible values are `0.1`, `1.0`, `2.1`, `2.2.9`, `3.0`, `3.1` and `3.2`.
func (o ApplicationGatewayWafConfigurationOutput) RuleSetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayWafConfiguration) string { return v.RuleSetVersion }).(pulumi.StringOutput)
}

type ApplicationGatewayWafConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayWafConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayWafConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayWafConfigurationPtrOutput) ToApplicationGatewayWafConfigurationPtrOutput() ApplicationGatewayWafConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayWafConfigurationPtrOutput) ToApplicationGatewayWafConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayWafConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayWafConfigurationPtrOutput) Elem() ApplicationGatewayWafConfigurationOutput {
	return o.ApplyT(func(v *ApplicationGatewayWafConfiguration) ApplicationGatewayWafConfiguration {
		if v != nil {
			return *v
		}
		var ret ApplicationGatewayWafConfiguration
		return ret
	}).(ApplicationGatewayWafConfigurationOutput)
}

// One or more `disabledRuleGroup` blocks as defined below.
func (o ApplicationGatewayWafConfigurationPtrOutput) DisabledRuleGroups() ApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayWafConfiguration) []ApplicationGatewayWafConfigurationDisabledRuleGroup {
		if v == nil {
			return nil
		}
		return v.DisabledRuleGroups
	}).(ApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput)
}

// Is the Web Application Firewall enabled?
func (o ApplicationGatewayWafConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWafConfiguration) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// One or more `exclusion` blocks as defined below.
func (o ApplicationGatewayWafConfigurationPtrOutput) Exclusions() ApplicationGatewayWafConfigurationExclusionArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayWafConfiguration) []ApplicationGatewayWafConfigurationExclusion {
		if v == nil {
			return nil
		}
		return v.Exclusions
	}).(ApplicationGatewayWafConfigurationExclusionArrayOutput)
}

// The File Upload Limit in MB. Accepted values are in the range `1`MB to `750`MB for the `WAF_v2` SKU, and `1`MB to `500`MB for all other SKUs. Defaults to `100`MB.
func (o ApplicationGatewayWafConfigurationPtrOutput) FileUploadLimitMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWafConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.FileUploadLimitMb
	}).(pulumi.IntPtrOutput)
}

// The Web Application Firewall Mode. Possible values are `Detection` and `Prevention`.
func (o ApplicationGatewayWafConfigurationPtrOutput) FirewallMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWafConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.FirewallMode
	}).(pulumi.StringPtrOutput)
}

// The Maximum Request Body Size in KB. Accepted values are in the range `1`KB to `128`KB. Defaults to `128`KB.
func (o ApplicationGatewayWafConfigurationPtrOutput) MaxRequestBodySizeKb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWafConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestBodySizeKb
	}).(pulumi.IntPtrOutput)
}

// Is Request Body Inspection enabled? Defaults to `true`.
func (o ApplicationGatewayWafConfigurationPtrOutput) RequestBodyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWafConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.RequestBodyCheck
	}).(pulumi.BoolPtrOutput)
}

// The Type of the Rule Set used for this Web Application Firewall. Possible values are `OWASP`, `Microsoft_BotManagerRuleSet` and `Microsoft_DefaultRuleSet`. Defaults to `OWASP`.
func (o ApplicationGatewayWafConfigurationPtrOutput) RuleSetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWafConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RuleSetType
	}).(pulumi.StringPtrOutput)
}

// The Version of the Rule Set used for this Web Application Firewall. Possible values are `0.1`, `1.0`, `2.1`, `2.2.9`, `3.0`, `3.1` and `3.2`.
func (o ApplicationGatewayWafConfigurationPtrOutput) RuleSetVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWafConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RuleSetVersion
	}).(pulumi.StringPtrOutput)
}

type ApplicationGatewayWafConfigurationDisabledRuleGroup struct {
	// The rule group where specific rules should be disabled. Possible values are `BadBots`, `crs20ProtocolViolations`, `crs21ProtocolAnomalies`, `crs23RequestLimits`, `crs30HttpPolicy`, `crs35BadRobots`, `crs40GenericAttacks`, `crs41SqlInjectionAttacks`, `crs41XssAttacks`, `crs42TightSecurity`, `crs45Trojans`, `crs49InboundBlocking`, `General`, `GoodBots`, `KnownBadBots`, `Known-CVEs`, `REQUEST-911-METHOD-ENFORCEMENT`, `REQUEST-913-SCANNER-DETECTION`, `REQUEST-920-PROTOCOL-ENFORCEMENT`, `REQUEST-921-PROTOCOL-ATTACK`, `REQUEST-930-APPLICATION-ATTACK-LFI`, `REQUEST-931-APPLICATION-ATTACK-RFI`, `REQUEST-932-APPLICATION-ATTACK-RCE`, `REQUEST-933-APPLICATION-ATTACK-PHP`, `REQUEST-941-APPLICATION-ATTACK-XSS`, `REQUEST-942-APPLICATION-ATTACK-SQLI`, `REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION`, `REQUEST-944-APPLICATION-ATTACK-JAVA`, `UnknownBots`, `METHOD-ENFORCEMENT`, `PROTOCOL-ENFORCEMENT`, `PROTOCOL-ATTACK`, `LFI`, `RFI`, `RCE`, `PHP`, `NODEJS`, `XSS`, `SQLI`, `FIX`, `JAVA`, `MS-ThreatIntel-WebShells`, `MS-ThreatIntel-AppSec`, `MS-ThreatIntel-SQLI` and `MS-ThreatIntel-CVEs`.
	RuleGroupName string `pulumi:"ruleGroupName"`
	// A list of rules which should be disabled in that group. Disables all rules in the specified group if `rules` is not specified.
	Rules []int `pulumi:"rules"`
}

// ApplicationGatewayWafConfigurationDisabledRuleGroupInput is an input type that accepts ApplicationGatewayWafConfigurationDisabledRuleGroupArgs and ApplicationGatewayWafConfigurationDisabledRuleGroupOutput values.
// You can construct a concrete instance of `ApplicationGatewayWafConfigurationDisabledRuleGroupInput` via:
//
//	ApplicationGatewayWafConfigurationDisabledRuleGroupArgs{...}
type ApplicationGatewayWafConfigurationDisabledRuleGroupInput interface {
	pulumi.Input

	ToApplicationGatewayWafConfigurationDisabledRuleGroupOutput() ApplicationGatewayWafConfigurationDisabledRuleGroupOutput
	ToApplicationGatewayWafConfigurationDisabledRuleGroupOutputWithContext(context.Context) ApplicationGatewayWafConfigurationDisabledRuleGroupOutput
}

type ApplicationGatewayWafConfigurationDisabledRuleGroupArgs struct {
	// The rule group where specific rules should be disabled. Possible values are `BadBots`, `crs20ProtocolViolations`, `crs21ProtocolAnomalies`, `crs23RequestLimits`, `crs30HttpPolicy`, `crs35BadRobots`, `crs40GenericAttacks`, `crs41SqlInjectionAttacks`, `crs41XssAttacks`, `crs42TightSecurity`, `crs45Trojans`, `crs49InboundBlocking`, `General`, `GoodBots`, `KnownBadBots`, `Known-CVEs`, `REQUEST-911-METHOD-ENFORCEMENT`, `REQUEST-913-SCANNER-DETECTION`, `REQUEST-920-PROTOCOL-ENFORCEMENT`, `REQUEST-921-PROTOCOL-ATTACK`, `REQUEST-930-APPLICATION-ATTACK-LFI`, `REQUEST-931-APPLICATION-ATTACK-RFI`, `REQUEST-932-APPLICATION-ATTACK-RCE`, `REQUEST-933-APPLICATION-ATTACK-PHP`, `REQUEST-941-APPLICATION-ATTACK-XSS`, `REQUEST-942-APPLICATION-ATTACK-SQLI`, `REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION`, `REQUEST-944-APPLICATION-ATTACK-JAVA`, `UnknownBots`, `METHOD-ENFORCEMENT`, `PROTOCOL-ENFORCEMENT`, `PROTOCOL-ATTACK`, `LFI`, `RFI`, `RCE`, `PHP`, `NODEJS`, `XSS`, `SQLI`, `FIX`, `JAVA`, `MS-ThreatIntel-WebShells`, `MS-ThreatIntel-AppSec`, `MS-ThreatIntel-SQLI` and `MS-ThreatIntel-CVEs`.
	RuleGroupName pulumi.StringInput `pulumi:"ruleGroupName"`
	// A list of rules which should be disabled in that group. Disables all rules in the specified group if `rules` is not specified.
	Rules pulumi.IntArrayInput `pulumi:"rules"`
}

func (ApplicationGatewayWafConfigurationDisabledRuleGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayWafConfigurationDisabledRuleGroup)(nil)).Elem()
}

func (i ApplicationGatewayWafConfigurationDisabledRuleGroupArgs) ToApplicationGatewayWafConfigurationDisabledRuleGroupOutput() ApplicationGatewayWafConfigurationDisabledRuleGroupOutput {
	return i.ToApplicationGatewayWafConfigurationDisabledRuleGroupOutputWithContext(context.Background())
}

func (i ApplicationGatewayWafConfigurationDisabledRuleGroupArgs) ToApplicationGatewayWafConfigurationDisabledRuleGroupOutputWithContext(ctx context.Context) ApplicationGatewayWafConfigurationDisabledRuleGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayWafConfigurationDisabledRuleGroupOutput)
}

// ApplicationGatewayWafConfigurationDisabledRuleGroupArrayInput is an input type that accepts ApplicationGatewayWafConfigurationDisabledRuleGroupArray and ApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayWafConfigurationDisabledRuleGroupArrayInput` via:
//
//	ApplicationGatewayWafConfigurationDisabledRuleGroupArray{ ApplicationGatewayWafConfigurationDisabledRuleGroupArgs{...} }
type ApplicationGatewayWafConfigurationDisabledRuleGroupArrayInput interface {
	pulumi.Input

	ToApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput() ApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput
	ToApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutputWithContext(context.Context) ApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput
}

type ApplicationGatewayWafConfigurationDisabledRuleGroupArray []ApplicationGatewayWafConfigurationDisabledRuleGroupInput

func (ApplicationGatewayWafConfigurationDisabledRuleGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayWafConfigurationDisabledRuleGroup)(nil)).Elem()
}

func (i ApplicationGatewayWafConfigurationDisabledRuleGroupArray) ToApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput() ApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput {
	return i.ToApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayWafConfigurationDisabledRuleGroupArray) ToApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutputWithContext(ctx context.Context) ApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput)
}

type ApplicationGatewayWafConfigurationDisabledRuleGroupOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayWafConfigurationDisabledRuleGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayWafConfigurationDisabledRuleGroup)(nil)).Elem()
}

func (o ApplicationGatewayWafConfigurationDisabledRuleGroupOutput) ToApplicationGatewayWafConfigurationDisabledRuleGroupOutput() ApplicationGatewayWafConfigurationDisabledRuleGroupOutput {
	return o
}

func (o ApplicationGatewayWafConfigurationDisabledRuleGroupOutput) ToApplicationGatewayWafConfigurationDisabledRuleGroupOutputWithContext(ctx context.Context) ApplicationGatewayWafConfigurationDisabledRuleGroupOutput {
	return o
}

// The rule group where specific rules should be disabled. Possible values are `BadBots`, `crs20ProtocolViolations`, `crs21ProtocolAnomalies`, `crs23RequestLimits`, `crs30HttpPolicy`, `crs35BadRobots`, `crs40GenericAttacks`, `crs41SqlInjectionAttacks`, `crs41XssAttacks`, `crs42TightSecurity`, `crs45Trojans`, `crs49InboundBlocking`, `General`, `GoodBots`, `KnownBadBots`, `Known-CVEs`, `REQUEST-911-METHOD-ENFORCEMENT`, `REQUEST-913-SCANNER-DETECTION`, `REQUEST-920-PROTOCOL-ENFORCEMENT`, `REQUEST-921-PROTOCOL-ATTACK`, `REQUEST-930-APPLICATION-ATTACK-LFI`, `REQUEST-931-APPLICATION-ATTACK-RFI`, `REQUEST-932-APPLICATION-ATTACK-RCE`, `REQUEST-933-APPLICATION-ATTACK-PHP`, `REQUEST-941-APPLICATION-ATTACK-XSS`, `REQUEST-942-APPLICATION-ATTACK-SQLI`, `REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION`, `REQUEST-944-APPLICATION-ATTACK-JAVA`, `UnknownBots`, `METHOD-ENFORCEMENT`, `PROTOCOL-ENFORCEMENT`, `PROTOCOL-ATTACK`, `LFI`, `RFI`, `RCE`, `PHP`, `NODEJS`, `XSS`, `SQLI`, `FIX`, `JAVA`, `MS-ThreatIntel-WebShells`, `MS-ThreatIntel-AppSec`, `MS-ThreatIntel-SQLI` and `MS-ThreatIntel-CVEs`.
func (o ApplicationGatewayWafConfigurationDisabledRuleGroupOutput) RuleGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayWafConfigurationDisabledRuleGroup) string { return v.RuleGroupName }).(pulumi.StringOutput)
}

// A list of rules which should be disabled in that group. Disables all rules in the specified group if `rules` is not specified.
func (o ApplicationGatewayWafConfigurationDisabledRuleGroupOutput) Rules() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayWafConfigurationDisabledRuleGroup) []int { return v.Rules }).(pulumi.IntArrayOutput)
}

type ApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayWafConfigurationDisabledRuleGroup)(nil)).Elem()
}

func (o ApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput) ToApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput() ApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput {
	return o
}

func (o ApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput) ToApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutputWithContext(ctx context.Context) ApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput {
	return o
}

func (o ApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayWafConfigurationDisabledRuleGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayWafConfigurationDisabledRuleGroup {
		return vs[0].([]ApplicationGatewayWafConfigurationDisabledRuleGroup)[vs[1].(int)]
	}).(ApplicationGatewayWafConfigurationDisabledRuleGroupOutput)
}

type ApplicationGatewayWafConfigurationExclusion struct {
	// Match variable of the exclusion rule to exclude header, cookie or GET arguments. Possible values are `RequestArgKeys`, `RequestArgNames`, `RequestArgValues`, `RequestCookieKeys`, `RequestCookieNames`, `RequestCookieValues`, `RequestHeaderKeys`, `RequestHeaderNames` and `RequestHeaderValues`
	MatchVariable string `pulumi:"matchVariable"`
	// String value which will be used for the filter operation. If empty will exclude all traffic on this `matchVariable`
	Selector *string `pulumi:"selector"`
	// Operator which will be used to search in the variable content. Possible values are `Contains`, `EndsWith`, `Equals`, `EqualsAny` and `StartsWith`. If empty will exclude all traffic on this `matchVariable`
	SelectorMatchOperator *string `pulumi:"selectorMatchOperator"`
}

// ApplicationGatewayWafConfigurationExclusionInput is an input type that accepts ApplicationGatewayWafConfigurationExclusionArgs and ApplicationGatewayWafConfigurationExclusionOutput values.
// You can construct a concrete instance of `ApplicationGatewayWafConfigurationExclusionInput` via:
//
//	ApplicationGatewayWafConfigurationExclusionArgs{...}
type ApplicationGatewayWafConfigurationExclusionInput interface {
	pulumi.Input

	ToApplicationGatewayWafConfigurationExclusionOutput() ApplicationGatewayWafConfigurationExclusionOutput
	ToApplicationGatewayWafConfigurationExclusionOutputWithContext(context.Context) ApplicationGatewayWafConfigurationExclusionOutput
}

type ApplicationGatewayWafConfigurationExclusionArgs struct {
	// Match variable of the exclusion rule to exclude header, cookie or GET arguments. Possible values are `RequestArgKeys`, `RequestArgNames`, `RequestArgValues`, `RequestCookieKeys`, `RequestCookieNames`, `RequestCookieValues`, `RequestHeaderKeys`, `RequestHeaderNames` and `RequestHeaderValues`
	MatchVariable pulumi.StringInput `pulumi:"matchVariable"`
	// String value which will be used for the filter operation. If empty will exclude all traffic on this `matchVariable`
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// Operator which will be used to search in the variable content. Possible values are `Contains`, `EndsWith`, `Equals`, `EqualsAny` and `StartsWith`. If empty will exclude all traffic on this `matchVariable`
	SelectorMatchOperator pulumi.StringPtrInput `pulumi:"selectorMatchOperator"`
}

func (ApplicationGatewayWafConfigurationExclusionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayWafConfigurationExclusion)(nil)).Elem()
}

func (i ApplicationGatewayWafConfigurationExclusionArgs) ToApplicationGatewayWafConfigurationExclusionOutput() ApplicationGatewayWafConfigurationExclusionOutput {
	return i.ToApplicationGatewayWafConfigurationExclusionOutputWithContext(context.Background())
}

func (i ApplicationGatewayWafConfigurationExclusionArgs) ToApplicationGatewayWafConfigurationExclusionOutputWithContext(ctx context.Context) ApplicationGatewayWafConfigurationExclusionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayWafConfigurationExclusionOutput)
}

// ApplicationGatewayWafConfigurationExclusionArrayInput is an input type that accepts ApplicationGatewayWafConfigurationExclusionArray and ApplicationGatewayWafConfigurationExclusionArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayWafConfigurationExclusionArrayInput` via:
//
//	ApplicationGatewayWafConfigurationExclusionArray{ ApplicationGatewayWafConfigurationExclusionArgs{...} }
type ApplicationGatewayWafConfigurationExclusionArrayInput interface {
	pulumi.Input

	ToApplicationGatewayWafConfigurationExclusionArrayOutput() ApplicationGatewayWafConfigurationExclusionArrayOutput
	ToApplicationGatewayWafConfigurationExclusionArrayOutputWithContext(context.Context) ApplicationGatewayWafConfigurationExclusionArrayOutput
}

type ApplicationGatewayWafConfigurationExclusionArray []ApplicationGatewayWafConfigurationExclusionInput

func (ApplicationGatewayWafConfigurationExclusionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayWafConfigurationExclusion)(nil)).Elem()
}

func (i ApplicationGatewayWafConfigurationExclusionArray) ToApplicationGatewayWafConfigurationExclusionArrayOutput() ApplicationGatewayWafConfigurationExclusionArrayOutput {
	return i.ToApplicationGatewayWafConfigurationExclusionArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayWafConfigurationExclusionArray) ToApplicationGatewayWafConfigurationExclusionArrayOutputWithContext(ctx context.Context) ApplicationGatewayWafConfigurationExclusionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayWafConfigurationExclusionArrayOutput)
}

type ApplicationGatewayWafConfigurationExclusionOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayWafConfigurationExclusionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayWafConfigurationExclusion)(nil)).Elem()
}

func (o ApplicationGatewayWafConfigurationExclusionOutput) ToApplicationGatewayWafConfigurationExclusionOutput() ApplicationGatewayWafConfigurationExclusionOutput {
	return o
}

func (o ApplicationGatewayWafConfigurationExclusionOutput) ToApplicationGatewayWafConfigurationExclusionOutputWithContext(ctx context.Context) ApplicationGatewayWafConfigurationExclusionOutput {
	return o
}

// Match variable of the exclusion rule to exclude header, cookie or GET arguments. Possible values are `RequestArgKeys`, `RequestArgNames`, `RequestArgValues`, `RequestCookieKeys`, `RequestCookieNames`, `RequestCookieValues`, `RequestHeaderKeys`, `RequestHeaderNames` and `RequestHeaderValues`
func (o ApplicationGatewayWafConfigurationExclusionOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayWafConfigurationExclusion) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// String value which will be used for the filter operation. If empty will exclude all traffic on this `matchVariable`
func (o ApplicationGatewayWafConfigurationExclusionOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWafConfigurationExclusion) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// Operator which will be used to search in the variable content. Possible values are `Contains`, `EndsWith`, `Equals`, `EqualsAny` and `StartsWith`. If empty will exclude all traffic on this `matchVariable`
func (o ApplicationGatewayWafConfigurationExclusionOutput) SelectorMatchOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWafConfigurationExclusion) *string { return v.SelectorMatchOperator }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayWafConfigurationExclusionArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayWafConfigurationExclusionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayWafConfigurationExclusion)(nil)).Elem()
}

func (o ApplicationGatewayWafConfigurationExclusionArrayOutput) ToApplicationGatewayWafConfigurationExclusionArrayOutput() ApplicationGatewayWafConfigurationExclusionArrayOutput {
	return o
}

func (o ApplicationGatewayWafConfigurationExclusionArrayOutput) ToApplicationGatewayWafConfigurationExclusionArrayOutputWithContext(ctx context.Context) ApplicationGatewayWafConfigurationExclusionArrayOutput {
	return o
}

func (o ApplicationGatewayWafConfigurationExclusionArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayWafConfigurationExclusionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayWafConfigurationExclusion {
		return vs[0].([]ApplicationGatewayWafConfigurationExclusion)[vs[1].(int)]
	}).(ApplicationGatewayWafConfigurationExclusionOutput)
}

type ExpressRouteCircuitPeeringIpv6 struct {
	// A boolean value indicating whether the IPv6 peering is enabled. Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// A `microsoftPeering` block as defined below.
	MicrosoftPeering *ExpressRouteCircuitPeeringIpv6MicrosoftPeering `pulumi:"microsoftPeering"`
	// A subnet for the primary link.
	PrimaryPeerAddressPrefix string `pulumi:"primaryPeerAddressPrefix"`
	// The ID of the Route Filter. Only available when `peeringType` is set to `MicrosoftPeering`.
	//
	// > **NOTE:** `ipv6` can be specified when `peeringType` is `MicrosoftPeering` or `AzurePrivatePeering`
	RouteFilterId *string `pulumi:"routeFilterId"`
	// A subnet for the secondary link.
	SecondaryPeerAddressPrefix string `pulumi:"secondaryPeerAddressPrefix"`
}

// ExpressRouteCircuitPeeringIpv6Input is an input type that accepts ExpressRouteCircuitPeeringIpv6Args and ExpressRouteCircuitPeeringIpv6Output values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringIpv6Input` via:
//
//	ExpressRouteCircuitPeeringIpv6Args{...}
type ExpressRouteCircuitPeeringIpv6Input interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringIpv6Output() ExpressRouteCircuitPeeringIpv6Output
	ToExpressRouteCircuitPeeringIpv6OutputWithContext(context.Context) ExpressRouteCircuitPeeringIpv6Output
}

type ExpressRouteCircuitPeeringIpv6Args struct {
	// A boolean value indicating whether the IPv6 peering is enabled. Defaults to `true`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// A `microsoftPeering` block as defined below.
	MicrosoftPeering ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrInput `pulumi:"microsoftPeering"`
	// A subnet for the primary link.
	PrimaryPeerAddressPrefix pulumi.StringInput `pulumi:"primaryPeerAddressPrefix"`
	// The ID of the Route Filter. Only available when `peeringType` is set to `MicrosoftPeering`.
	//
	// > **NOTE:** `ipv6` can be specified when `peeringType` is `MicrosoftPeering` or `AzurePrivatePeering`
	RouteFilterId pulumi.StringPtrInput `pulumi:"routeFilterId"`
	// A subnet for the secondary link.
	SecondaryPeerAddressPrefix pulumi.StringInput `pulumi:"secondaryPeerAddressPrefix"`
}

func (ExpressRouteCircuitPeeringIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringIpv6)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringIpv6Args) ToExpressRouteCircuitPeeringIpv6Output() ExpressRouteCircuitPeeringIpv6Output {
	return i.ToExpressRouteCircuitPeeringIpv6OutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringIpv6Args) ToExpressRouteCircuitPeeringIpv6OutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringIpv6Output)
}

func (i ExpressRouteCircuitPeeringIpv6Args) ToExpressRouteCircuitPeeringIpv6PtrOutput() ExpressRouteCircuitPeeringIpv6PtrOutput {
	return i.ToExpressRouteCircuitPeeringIpv6PtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringIpv6Args) ToExpressRouteCircuitPeeringIpv6PtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIpv6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringIpv6Output).ToExpressRouteCircuitPeeringIpv6PtrOutputWithContext(ctx)
}

// ExpressRouteCircuitPeeringIpv6PtrInput is an input type that accepts ExpressRouteCircuitPeeringIpv6Args, ExpressRouteCircuitPeeringIpv6Ptr and ExpressRouteCircuitPeeringIpv6PtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringIpv6PtrInput` via:
//
//	        ExpressRouteCircuitPeeringIpv6Args{...}
//
//	or:
//
//	        nil
type ExpressRouteCircuitPeeringIpv6PtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringIpv6PtrOutput() ExpressRouteCircuitPeeringIpv6PtrOutput
	ToExpressRouteCircuitPeeringIpv6PtrOutputWithContext(context.Context) ExpressRouteCircuitPeeringIpv6PtrOutput
}

type expressRouteCircuitPeeringIpv6PtrType ExpressRouteCircuitPeeringIpv6Args

func ExpressRouteCircuitPeeringIpv6Ptr(v *ExpressRouteCircuitPeeringIpv6Args) ExpressRouteCircuitPeeringIpv6PtrInput {
	return (*expressRouteCircuitPeeringIpv6PtrType)(v)
}

func (*expressRouteCircuitPeeringIpv6PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringIpv6)(nil)).Elem()
}

func (i *expressRouteCircuitPeeringIpv6PtrType) ToExpressRouteCircuitPeeringIpv6PtrOutput() ExpressRouteCircuitPeeringIpv6PtrOutput {
	return i.ToExpressRouteCircuitPeeringIpv6PtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitPeeringIpv6PtrType) ToExpressRouteCircuitPeeringIpv6PtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIpv6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringIpv6PtrOutput)
}

type ExpressRouteCircuitPeeringIpv6Output struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringIpv6)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringIpv6Output) ToExpressRouteCircuitPeeringIpv6Output() ExpressRouteCircuitPeeringIpv6Output {
	return o
}

func (o ExpressRouteCircuitPeeringIpv6Output) ToExpressRouteCircuitPeeringIpv6OutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIpv6Output {
	return o
}

func (o ExpressRouteCircuitPeeringIpv6Output) ToExpressRouteCircuitPeeringIpv6PtrOutput() ExpressRouteCircuitPeeringIpv6PtrOutput {
	return o.ToExpressRouteCircuitPeeringIpv6PtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitPeeringIpv6Output) ToExpressRouteCircuitPeeringIpv6PtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIpv6PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExpressRouteCircuitPeeringIpv6) *ExpressRouteCircuitPeeringIpv6 {
		return &v
	}).(ExpressRouteCircuitPeeringIpv6PtrOutput)
}

// A boolean value indicating whether the IPv6 peering is enabled. Defaults to `true`.
func (o ExpressRouteCircuitPeeringIpv6Output) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringIpv6) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// A `microsoftPeering` block as defined below.
func (o ExpressRouteCircuitPeeringIpv6Output) MicrosoftPeering() ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringIpv6) *ExpressRouteCircuitPeeringIpv6MicrosoftPeering {
		return v.MicrosoftPeering
	}).(ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput)
}

// A subnet for the primary link.
func (o ExpressRouteCircuitPeeringIpv6Output) PrimaryPeerAddressPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringIpv6) string { return v.PrimaryPeerAddressPrefix }).(pulumi.StringOutput)
}

// The ID of the Route Filter. Only available when `peeringType` is set to `MicrosoftPeering`.
//
// > **NOTE:** `ipv6` can be specified when `peeringType` is `MicrosoftPeering` or `AzurePrivatePeering`
func (o ExpressRouteCircuitPeeringIpv6Output) RouteFilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringIpv6) *string { return v.RouteFilterId }).(pulumi.StringPtrOutput)
}

// A subnet for the secondary link.
func (o ExpressRouteCircuitPeeringIpv6Output) SecondaryPeerAddressPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringIpv6) string { return v.SecondaryPeerAddressPrefix }).(pulumi.StringOutput)
}

type ExpressRouteCircuitPeeringIpv6PtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringIpv6PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringIpv6)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringIpv6PtrOutput) ToExpressRouteCircuitPeeringIpv6PtrOutput() ExpressRouteCircuitPeeringIpv6PtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringIpv6PtrOutput) ToExpressRouteCircuitPeeringIpv6PtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIpv6PtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringIpv6PtrOutput) Elem() ExpressRouteCircuitPeeringIpv6Output {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringIpv6) ExpressRouteCircuitPeeringIpv6 {
		if v != nil {
			return *v
		}
		var ret ExpressRouteCircuitPeeringIpv6
		return ret
	}).(ExpressRouteCircuitPeeringIpv6Output)
}

// A boolean value indicating whether the IPv6 peering is enabled. Defaults to `true`.
func (o ExpressRouteCircuitPeeringIpv6PtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringIpv6) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// A `microsoftPeering` block as defined below.
func (o ExpressRouteCircuitPeeringIpv6PtrOutput) MicrosoftPeering() ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringIpv6) *ExpressRouteCircuitPeeringIpv6MicrosoftPeering {
		if v == nil {
			return nil
		}
		return v.MicrosoftPeering
	}).(ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput)
}

// A subnet for the primary link.
func (o ExpressRouteCircuitPeeringIpv6PtrOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringIpv6) *string {
		if v == nil {
			return nil
		}
		return &v.PrimaryPeerAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The ID of the Route Filter. Only available when `peeringType` is set to `MicrosoftPeering`.
//
// > **NOTE:** `ipv6` can be specified when `peeringType` is `MicrosoftPeering` or `AzurePrivatePeering`
func (o ExpressRouteCircuitPeeringIpv6PtrOutput) RouteFilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringIpv6) *string {
		if v == nil {
			return nil
		}
		return v.RouteFilterId
	}).(pulumi.StringPtrOutput)
}

// A subnet for the secondary link.
func (o ExpressRouteCircuitPeeringIpv6PtrOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringIpv6) *string {
		if v == nil {
			return nil
		}
		return &v.SecondaryPeerAddressPrefix
	}).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitPeeringIpv6MicrosoftPeering struct {
	// The communities of Bgp Peering specified for microsoft peering.
	AdvertisedCommunities []string `pulumi:"advertisedCommunities"`
	// A list of Advertised Public Prefixes.
	AdvertisedPublicPrefixes []string `pulumi:"advertisedPublicPrefixes"`
	// The CustomerASN of the peering. Defaults to `0`.
	CustomerAsn *int `pulumi:"customerAsn"`
	// The Routing Registry against which the AS number and prefixes are registered. For example: `ARIN`, `RIPE`, `AFRINIC` etc. Defaults to `NONE`.
	RoutingRegistryName *string `pulumi:"routingRegistryName"`
}

// ExpressRouteCircuitPeeringIpv6MicrosoftPeeringInput is an input type that accepts ExpressRouteCircuitPeeringIpv6MicrosoftPeeringArgs and ExpressRouteCircuitPeeringIpv6MicrosoftPeeringOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringIpv6MicrosoftPeeringInput` via:
//
//	ExpressRouteCircuitPeeringIpv6MicrosoftPeeringArgs{...}
type ExpressRouteCircuitPeeringIpv6MicrosoftPeeringInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringIpv6MicrosoftPeeringOutput() ExpressRouteCircuitPeeringIpv6MicrosoftPeeringOutput
	ToExpressRouteCircuitPeeringIpv6MicrosoftPeeringOutputWithContext(context.Context) ExpressRouteCircuitPeeringIpv6MicrosoftPeeringOutput
}

type ExpressRouteCircuitPeeringIpv6MicrosoftPeeringArgs struct {
	// The communities of Bgp Peering specified for microsoft peering.
	AdvertisedCommunities pulumi.StringArrayInput `pulumi:"advertisedCommunities"`
	// A list of Advertised Public Prefixes.
	AdvertisedPublicPrefixes pulumi.StringArrayInput `pulumi:"advertisedPublicPrefixes"`
	// The CustomerASN of the peering. Defaults to `0`.
	CustomerAsn pulumi.IntPtrInput `pulumi:"customerAsn"`
	// The Routing Registry against which the AS number and prefixes are registered. For example: `ARIN`, `RIPE`, `AFRINIC` etc. Defaults to `NONE`.
	RoutingRegistryName pulumi.StringPtrInput `pulumi:"routingRegistryName"`
}

func (ExpressRouteCircuitPeeringIpv6MicrosoftPeeringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringIpv6MicrosoftPeering)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringIpv6MicrosoftPeeringArgs) ToExpressRouteCircuitPeeringIpv6MicrosoftPeeringOutput() ExpressRouteCircuitPeeringIpv6MicrosoftPeeringOutput {
	return i.ToExpressRouteCircuitPeeringIpv6MicrosoftPeeringOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringIpv6MicrosoftPeeringArgs) ToExpressRouteCircuitPeeringIpv6MicrosoftPeeringOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIpv6MicrosoftPeeringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringIpv6MicrosoftPeeringOutput)
}

func (i ExpressRouteCircuitPeeringIpv6MicrosoftPeeringArgs) ToExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput() ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput {
	return i.ToExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringIpv6MicrosoftPeeringArgs) ToExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringIpv6MicrosoftPeeringOutput).ToExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutputWithContext(ctx)
}

// ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrInput is an input type that accepts ExpressRouteCircuitPeeringIpv6MicrosoftPeeringArgs, ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtr and ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrInput` via:
//
//	        ExpressRouteCircuitPeeringIpv6MicrosoftPeeringArgs{...}
//
//	or:
//
//	        nil
type ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput() ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput
	ToExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutputWithContext(context.Context) ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput
}

type expressRouteCircuitPeeringIpv6MicrosoftPeeringPtrType ExpressRouteCircuitPeeringIpv6MicrosoftPeeringArgs

func ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtr(v *ExpressRouteCircuitPeeringIpv6MicrosoftPeeringArgs) ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrInput {
	return (*expressRouteCircuitPeeringIpv6MicrosoftPeeringPtrType)(v)
}

func (*expressRouteCircuitPeeringIpv6MicrosoftPeeringPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringIpv6MicrosoftPeering)(nil)).Elem()
}

func (i *expressRouteCircuitPeeringIpv6MicrosoftPeeringPtrType) ToExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput() ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput {
	return i.ToExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitPeeringIpv6MicrosoftPeeringPtrType) ToExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput)
}

type ExpressRouteCircuitPeeringIpv6MicrosoftPeeringOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringIpv6MicrosoftPeeringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringIpv6MicrosoftPeering)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringIpv6MicrosoftPeeringOutput) ToExpressRouteCircuitPeeringIpv6MicrosoftPeeringOutput() ExpressRouteCircuitPeeringIpv6MicrosoftPeeringOutput {
	return o
}

func (o ExpressRouteCircuitPeeringIpv6MicrosoftPeeringOutput) ToExpressRouteCircuitPeeringIpv6MicrosoftPeeringOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIpv6MicrosoftPeeringOutput {
	return o
}

func (o ExpressRouteCircuitPeeringIpv6MicrosoftPeeringOutput) ToExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput() ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput {
	return o.ToExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitPeeringIpv6MicrosoftPeeringOutput) ToExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExpressRouteCircuitPeeringIpv6MicrosoftPeering) *ExpressRouteCircuitPeeringIpv6MicrosoftPeering {
		return &v
	}).(ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput)
}

// The communities of Bgp Peering specified for microsoft peering.
func (o ExpressRouteCircuitPeeringIpv6MicrosoftPeeringOutput) AdvertisedCommunities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringIpv6MicrosoftPeering) []string { return v.AdvertisedCommunities }).(pulumi.StringArrayOutput)
}

// A list of Advertised Public Prefixes.
func (o ExpressRouteCircuitPeeringIpv6MicrosoftPeeringOutput) AdvertisedPublicPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringIpv6MicrosoftPeering) []string { return v.AdvertisedPublicPrefixes }).(pulumi.StringArrayOutput)
}

// The CustomerASN of the peering. Defaults to `0`.
func (o ExpressRouteCircuitPeeringIpv6MicrosoftPeeringOutput) CustomerAsn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringIpv6MicrosoftPeering) *int { return v.CustomerAsn }).(pulumi.IntPtrOutput)
}

// The Routing Registry against which the AS number and prefixes are registered. For example: `ARIN`, `RIPE`, `AFRINIC` etc. Defaults to `NONE`.
func (o ExpressRouteCircuitPeeringIpv6MicrosoftPeeringOutput) RoutingRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringIpv6MicrosoftPeering) *string { return v.RoutingRegistryName }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringIpv6MicrosoftPeering)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput) ToExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput() ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput) ToExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput) Elem() ExpressRouteCircuitPeeringIpv6MicrosoftPeeringOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringIpv6MicrosoftPeering) ExpressRouteCircuitPeeringIpv6MicrosoftPeering {
		if v != nil {
			return *v
		}
		var ret ExpressRouteCircuitPeeringIpv6MicrosoftPeering
		return ret
	}).(ExpressRouteCircuitPeeringIpv6MicrosoftPeeringOutput)
}

// The communities of Bgp Peering specified for microsoft peering.
func (o ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput) AdvertisedCommunities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringIpv6MicrosoftPeering) []string {
		if v == nil {
			return nil
		}
		return v.AdvertisedCommunities
	}).(pulumi.StringArrayOutput)
}

// A list of Advertised Public Prefixes.
func (o ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput) AdvertisedPublicPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringIpv6MicrosoftPeering) []string {
		if v == nil {
			return nil
		}
		return v.AdvertisedPublicPrefixes
	}).(pulumi.StringArrayOutput)
}

// The CustomerASN of the peering. Defaults to `0`.
func (o ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput) CustomerAsn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringIpv6MicrosoftPeering) *int {
		if v == nil {
			return nil
		}
		return v.CustomerAsn
	}).(pulumi.IntPtrOutput)
}

// The Routing Registry against which the AS number and prefixes are registered. For example: `ARIN`, `RIPE`, `AFRINIC` etc. Defaults to `NONE`.
func (o ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput) RoutingRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringIpv6MicrosoftPeering) *string {
		if v == nil {
			return nil
		}
		return v.RoutingRegistryName
	}).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitPeeringMicrosoftPeeringConfig struct {
	// The communities of Bgp Peering specified for microsoft peering.
	AdvertisedCommunities []string `pulumi:"advertisedCommunities"`
	// A list of Advertised Public Prefixes.
	AdvertisedPublicPrefixes []string `pulumi:"advertisedPublicPrefixes"`
	// The CustomerASN of the peering. Defaults to `0`.
	CustomerAsn *int `pulumi:"customerAsn"`
	// The Routing Registry against which the AS number and prefixes are registered. For example: `ARIN`, `RIPE`, `AFRINIC` etc. Defaults to `NONE`.
	RoutingRegistryName *string `pulumi:"routingRegistryName"`
}

// ExpressRouteCircuitPeeringMicrosoftPeeringConfigInput is an input type that accepts ExpressRouteCircuitPeeringMicrosoftPeeringConfigArgs and ExpressRouteCircuitPeeringMicrosoftPeeringConfigOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringMicrosoftPeeringConfigInput` via:
//
//	ExpressRouteCircuitPeeringMicrosoftPeeringConfigArgs{...}
type ExpressRouteCircuitPeeringMicrosoftPeeringConfigInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringMicrosoftPeeringConfigOutput() ExpressRouteCircuitPeeringMicrosoftPeeringConfigOutput
	ToExpressRouteCircuitPeeringMicrosoftPeeringConfigOutputWithContext(context.Context) ExpressRouteCircuitPeeringMicrosoftPeeringConfigOutput
}

type ExpressRouteCircuitPeeringMicrosoftPeeringConfigArgs struct {
	// The communities of Bgp Peering specified for microsoft peering.
	AdvertisedCommunities pulumi.StringArrayInput `pulumi:"advertisedCommunities"`
	// A list of Advertised Public Prefixes.
	AdvertisedPublicPrefixes pulumi.StringArrayInput `pulumi:"advertisedPublicPrefixes"`
	// The CustomerASN of the peering. Defaults to `0`.
	CustomerAsn pulumi.IntPtrInput `pulumi:"customerAsn"`
	// The Routing Registry against which the AS number and prefixes are registered. For example: `ARIN`, `RIPE`, `AFRINIC` etc. Defaults to `NONE`.
	RoutingRegistryName pulumi.StringPtrInput `pulumi:"routingRegistryName"`
}

func (ExpressRouteCircuitPeeringMicrosoftPeeringConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringMicrosoftPeeringConfig)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringMicrosoftPeeringConfigArgs) ToExpressRouteCircuitPeeringMicrosoftPeeringConfigOutput() ExpressRouteCircuitPeeringMicrosoftPeeringConfigOutput {
	return i.ToExpressRouteCircuitPeeringMicrosoftPeeringConfigOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringMicrosoftPeeringConfigArgs) ToExpressRouteCircuitPeeringMicrosoftPeeringConfigOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringMicrosoftPeeringConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringMicrosoftPeeringConfigOutput)
}

func (i ExpressRouteCircuitPeeringMicrosoftPeeringConfigArgs) ToExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutput() ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutput {
	return i.ToExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringMicrosoftPeeringConfigArgs) ToExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringMicrosoftPeeringConfigOutput).ToExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutputWithContext(ctx)
}

// ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrInput is an input type that accepts ExpressRouteCircuitPeeringMicrosoftPeeringConfigArgs, ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtr and ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrInput` via:
//
//	        ExpressRouteCircuitPeeringMicrosoftPeeringConfigArgs{...}
//
//	or:
//
//	        nil
type ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutput() ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutput
	ToExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutputWithContext(context.Context) ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutput
}

type expressRouteCircuitPeeringMicrosoftPeeringConfigPtrType ExpressRouteCircuitPeeringMicrosoftPeeringConfigArgs

func ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtr(v *ExpressRouteCircuitPeeringMicrosoftPeeringConfigArgs) ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrInput {
	return (*expressRouteCircuitPeeringMicrosoftPeeringConfigPtrType)(v)
}

func (*expressRouteCircuitPeeringMicrosoftPeeringConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringMicrosoftPeeringConfig)(nil)).Elem()
}

func (i *expressRouteCircuitPeeringMicrosoftPeeringConfigPtrType) ToExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutput() ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutput {
	return i.ToExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitPeeringMicrosoftPeeringConfigPtrType) ToExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutput)
}

type ExpressRouteCircuitPeeringMicrosoftPeeringConfigOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringMicrosoftPeeringConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringMicrosoftPeeringConfig)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringMicrosoftPeeringConfigOutput) ToExpressRouteCircuitPeeringMicrosoftPeeringConfigOutput() ExpressRouteCircuitPeeringMicrosoftPeeringConfigOutput {
	return o
}

func (o ExpressRouteCircuitPeeringMicrosoftPeeringConfigOutput) ToExpressRouteCircuitPeeringMicrosoftPeeringConfigOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringMicrosoftPeeringConfigOutput {
	return o
}

func (o ExpressRouteCircuitPeeringMicrosoftPeeringConfigOutput) ToExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutput() ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutput {
	return o.ToExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitPeeringMicrosoftPeeringConfigOutput) ToExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExpressRouteCircuitPeeringMicrosoftPeeringConfig) *ExpressRouteCircuitPeeringMicrosoftPeeringConfig {
		return &v
	}).(ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutput)
}

// The communities of Bgp Peering specified for microsoft peering.
func (o ExpressRouteCircuitPeeringMicrosoftPeeringConfigOutput) AdvertisedCommunities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringMicrosoftPeeringConfig) []string { return v.AdvertisedCommunities }).(pulumi.StringArrayOutput)
}

// A list of Advertised Public Prefixes.
func (o ExpressRouteCircuitPeeringMicrosoftPeeringConfigOutput) AdvertisedPublicPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringMicrosoftPeeringConfig) []string { return v.AdvertisedPublicPrefixes }).(pulumi.StringArrayOutput)
}

// The CustomerASN of the peering. Defaults to `0`.
func (o ExpressRouteCircuitPeeringMicrosoftPeeringConfigOutput) CustomerAsn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringMicrosoftPeeringConfig) *int { return v.CustomerAsn }).(pulumi.IntPtrOutput)
}

// The Routing Registry against which the AS number and prefixes are registered. For example: `ARIN`, `RIPE`, `AFRINIC` etc. Defaults to `NONE`.
func (o ExpressRouteCircuitPeeringMicrosoftPeeringConfigOutput) RoutingRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringMicrosoftPeeringConfig) *string { return v.RoutingRegistryName }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringMicrosoftPeeringConfig)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutput) ToExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutput() ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutput) ToExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutput) Elem() ExpressRouteCircuitPeeringMicrosoftPeeringConfigOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringMicrosoftPeeringConfig) ExpressRouteCircuitPeeringMicrosoftPeeringConfig {
		if v != nil {
			return *v
		}
		var ret ExpressRouteCircuitPeeringMicrosoftPeeringConfig
		return ret
	}).(ExpressRouteCircuitPeeringMicrosoftPeeringConfigOutput)
}

// The communities of Bgp Peering specified for microsoft peering.
func (o ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutput) AdvertisedCommunities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringMicrosoftPeeringConfig) []string {
		if v == nil {
			return nil
		}
		return v.AdvertisedCommunities
	}).(pulumi.StringArrayOutput)
}

// A list of Advertised Public Prefixes.
func (o ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutput) AdvertisedPublicPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringMicrosoftPeeringConfig) []string {
		if v == nil {
			return nil
		}
		return v.AdvertisedPublicPrefixes
	}).(pulumi.StringArrayOutput)
}

// The CustomerASN of the peering. Defaults to `0`.
func (o ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutput) CustomerAsn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringMicrosoftPeeringConfig) *int {
		if v == nil {
			return nil
		}
		return v.CustomerAsn
	}).(pulumi.IntPtrOutput)
}

// The Routing Registry against which the AS number and prefixes are registered. For example: `ARIN`, `RIPE`, `AFRINIC` etc. Defaults to `NONE`.
func (o ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutput) RoutingRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringMicrosoftPeeringConfig) *string {
		if v == nil {
			return nil
		}
		return v.RoutingRegistryName
	}).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitSku struct {
	// The billing mode for bandwidth. Possible values are `MeteredData` or `UnlimitedData`.
	//
	// > **NOTE:** You can migrate from `MeteredData` to `UnlimitedData`, but not the other way around.
	Family string `pulumi:"family"`
	// The service tier. Possible values are `Basic`, `Local`, `Standard` or `Premium`.
	Tier string `pulumi:"tier"`
}

// ExpressRouteCircuitSkuInput is an input type that accepts ExpressRouteCircuitSkuArgs and ExpressRouteCircuitSkuOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitSkuInput` via:
//
//	ExpressRouteCircuitSkuArgs{...}
type ExpressRouteCircuitSkuInput interface {
	pulumi.Input

	ToExpressRouteCircuitSkuOutput() ExpressRouteCircuitSkuOutput
	ToExpressRouteCircuitSkuOutputWithContext(context.Context) ExpressRouteCircuitSkuOutput
}

type ExpressRouteCircuitSkuArgs struct {
	// The billing mode for bandwidth. Possible values are `MeteredData` or `UnlimitedData`.
	//
	// > **NOTE:** You can migrate from `MeteredData` to `UnlimitedData`, but not the other way around.
	Family pulumi.StringInput `pulumi:"family"`
	// The service tier. Possible values are `Basic`, `Local`, `Standard` or `Premium`.
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (ExpressRouteCircuitSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitSku)(nil)).Elem()
}

func (i ExpressRouteCircuitSkuArgs) ToExpressRouteCircuitSkuOutput() ExpressRouteCircuitSkuOutput {
	return i.ToExpressRouteCircuitSkuOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitSkuArgs) ToExpressRouteCircuitSkuOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuOutput)
}

func (i ExpressRouteCircuitSkuArgs) ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput {
	return i.ToExpressRouteCircuitSkuPtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitSkuArgs) ToExpressRouteCircuitSkuPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuOutput).ToExpressRouteCircuitSkuPtrOutputWithContext(ctx)
}

// ExpressRouteCircuitSkuPtrInput is an input type that accepts ExpressRouteCircuitSkuArgs, ExpressRouteCircuitSkuPtr and ExpressRouteCircuitSkuPtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitSkuPtrInput` via:
//
//	        ExpressRouteCircuitSkuArgs{...}
//
//	or:
//
//	        nil
type ExpressRouteCircuitSkuPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput
	ToExpressRouteCircuitSkuPtrOutputWithContext(context.Context) ExpressRouteCircuitSkuPtrOutput
}

type expressRouteCircuitSkuPtrType ExpressRouteCircuitSkuArgs

func ExpressRouteCircuitSkuPtr(v *ExpressRouteCircuitSkuArgs) ExpressRouteCircuitSkuPtrInput {
	return (*expressRouteCircuitSkuPtrType)(v)
}

func (*expressRouteCircuitSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitSku)(nil)).Elem()
}

func (i *expressRouteCircuitSkuPtrType) ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput {
	return i.ToExpressRouteCircuitSkuPtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitSkuPtrType) ToExpressRouteCircuitSkuPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuPtrOutput)
}

type ExpressRouteCircuitSkuOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitSku)(nil)).Elem()
}

func (o ExpressRouteCircuitSkuOutput) ToExpressRouteCircuitSkuOutput() ExpressRouteCircuitSkuOutput {
	return o
}

func (o ExpressRouteCircuitSkuOutput) ToExpressRouteCircuitSkuOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuOutput {
	return o
}

func (o ExpressRouteCircuitSkuOutput) ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput {
	return o.ToExpressRouteCircuitSkuPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitSkuOutput) ToExpressRouteCircuitSkuPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExpressRouteCircuitSku) *ExpressRouteCircuitSku {
		return &v
	}).(ExpressRouteCircuitSkuPtrOutput)
}

// The billing mode for bandwidth. Possible values are `MeteredData` or `UnlimitedData`.
//
// > **NOTE:** You can migrate from `MeteredData` to `UnlimitedData`, but not the other way around.
func (o ExpressRouteCircuitSkuOutput) Family() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSku) string { return v.Family }).(pulumi.StringOutput)
}

// The service tier. Possible values are `Basic`, `Local`, `Standard` or `Premium`.
func (o ExpressRouteCircuitSkuOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSku) string { return v.Tier }).(pulumi.StringOutput)
}

type ExpressRouteCircuitSkuPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitSku)(nil)).Elem()
}

func (o ExpressRouteCircuitSkuPtrOutput) ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput {
	return o
}

func (o ExpressRouteCircuitSkuPtrOutput) ToExpressRouteCircuitSkuPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuPtrOutput {
	return o
}

func (o ExpressRouteCircuitSkuPtrOutput) Elem() ExpressRouteCircuitSkuOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSku) ExpressRouteCircuitSku {
		if v != nil {
			return *v
		}
		var ret ExpressRouteCircuitSku
		return ret
	}).(ExpressRouteCircuitSkuOutput)
}

// The billing mode for bandwidth. Possible values are `MeteredData` or `UnlimitedData`.
//
// > **NOTE:** You can migrate from `MeteredData` to `UnlimitedData`, but not the other way around.
func (o ExpressRouteCircuitSkuPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSku) *string {
		if v == nil {
			return nil
		}
		return &v.Family
	}).(pulumi.StringPtrOutput)
}

// The service tier. Possible values are `Basic`, `Local`, `Standard` or `Premium`.
func (o ExpressRouteCircuitSkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSku) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

type ExpressRouteConnectionRouting struct {
	// The ID of the Virtual Hub Route Table associated with this Express Route Connection.
	AssociatedRouteTableId *string `pulumi:"associatedRouteTableId"`
	// The ID of the Route Map associated with this Express Route Connection for inbound routes.
	InboundRouteMapId *string `pulumi:"inboundRouteMapId"`
	// The ID of the Route Map associated with this Express Route Connection for outbound routes.
	OutboundRouteMapId *string `pulumi:"outboundRouteMapId"`
	// A `propagatedRouteTable` block as defined below.
	PropagatedRouteTable *ExpressRouteConnectionRoutingPropagatedRouteTable `pulumi:"propagatedRouteTable"`
}

// ExpressRouteConnectionRoutingInput is an input type that accepts ExpressRouteConnectionRoutingArgs and ExpressRouteConnectionRoutingOutput values.
// You can construct a concrete instance of `ExpressRouteConnectionRoutingInput` via:
//
//	ExpressRouteConnectionRoutingArgs{...}
type ExpressRouteConnectionRoutingInput interface {
	pulumi.Input

	ToExpressRouteConnectionRoutingOutput() ExpressRouteConnectionRoutingOutput
	ToExpressRouteConnectionRoutingOutputWithContext(context.Context) ExpressRouteConnectionRoutingOutput
}

type ExpressRouteConnectionRoutingArgs struct {
	// The ID of the Virtual Hub Route Table associated with this Express Route Connection.
	AssociatedRouteTableId pulumi.StringPtrInput `pulumi:"associatedRouteTableId"`
	// The ID of the Route Map associated with this Express Route Connection for inbound routes.
	InboundRouteMapId pulumi.StringPtrInput `pulumi:"inboundRouteMapId"`
	// The ID of the Route Map associated with this Express Route Connection for outbound routes.
	OutboundRouteMapId pulumi.StringPtrInput `pulumi:"outboundRouteMapId"`
	// A `propagatedRouteTable` block as defined below.
	PropagatedRouteTable ExpressRouteConnectionRoutingPropagatedRouteTablePtrInput `pulumi:"propagatedRouteTable"`
}

func (ExpressRouteConnectionRoutingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteConnectionRouting)(nil)).Elem()
}

func (i ExpressRouteConnectionRoutingArgs) ToExpressRouteConnectionRoutingOutput() ExpressRouteConnectionRoutingOutput {
	return i.ToExpressRouteConnectionRoutingOutputWithContext(context.Background())
}

func (i ExpressRouteConnectionRoutingArgs) ToExpressRouteConnectionRoutingOutputWithContext(ctx context.Context) ExpressRouteConnectionRoutingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionRoutingOutput)
}

func (i ExpressRouteConnectionRoutingArgs) ToExpressRouteConnectionRoutingPtrOutput() ExpressRouteConnectionRoutingPtrOutput {
	return i.ToExpressRouteConnectionRoutingPtrOutputWithContext(context.Background())
}

func (i ExpressRouteConnectionRoutingArgs) ToExpressRouteConnectionRoutingPtrOutputWithContext(ctx context.Context) ExpressRouteConnectionRoutingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionRoutingOutput).ToExpressRouteConnectionRoutingPtrOutputWithContext(ctx)
}

// ExpressRouteConnectionRoutingPtrInput is an input type that accepts ExpressRouteConnectionRoutingArgs, ExpressRouteConnectionRoutingPtr and ExpressRouteConnectionRoutingPtrOutput values.
// You can construct a concrete instance of `ExpressRouteConnectionRoutingPtrInput` via:
//
//	        ExpressRouteConnectionRoutingArgs{...}
//
//	or:
//
//	        nil
type ExpressRouteConnectionRoutingPtrInput interface {
	pulumi.Input

	ToExpressRouteConnectionRoutingPtrOutput() ExpressRouteConnectionRoutingPtrOutput
	ToExpressRouteConnectionRoutingPtrOutputWithContext(context.Context) ExpressRouteConnectionRoutingPtrOutput
}

type expressRouteConnectionRoutingPtrType ExpressRouteConnectionRoutingArgs

func ExpressRouteConnectionRoutingPtr(v *ExpressRouteConnectionRoutingArgs) ExpressRouteConnectionRoutingPtrInput {
	return (*expressRouteConnectionRoutingPtrType)(v)
}

func (*expressRouteConnectionRoutingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteConnectionRouting)(nil)).Elem()
}

func (i *expressRouteConnectionRoutingPtrType) ToExpressRouteConnectionRoutingPtrOutput() ExpressRouteConnectionRoutingPtrOutput {
	return i.ToExpressRouteConnectionRoutingPtrOutputWithContext(context.Background())
}

func (i *expressRouteConnectionRoutingPtrType) ToExpressRouteConnectionRoutingPtrOutputWithContext(ctx context.Context) ExpressRouteConnectionRoutingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionRoutingPtrOutput)
}

type ExpressRouteConnectionRoutingOutput struct{ *pulumi.OutputState }

func (ExpressRouteConnectionRoutingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteConnectionRouting)(nil)).Elem()
}

func (o ExpressRouteConnectionRoutingOutput) ToExpressRouteConnectionRoutingOutput() ExpressRouteConnectionRoutingOutput {
	return o
}

func (o ExpressRouteConnectionRoutingOutput) ToExpressRouteConnectionRoutingOutputWithContext(ctx context.Context) ExpressRouteConnectionRoutingOutput {
	return o
}

func (o ExpressRouteConnectionRoutingOutput) ToExpressRouteConnectionRoutingPtrOutput() ExpressRouteConnectionRoutingPtrOutput {
	return o.ToExpressRouteConnectionRoutingPtrOutputWithContext(context.Background())
}

func (o ExpressRouteConnectionRoutingOutput) ToExpressRouteConnectionRoutingPtrOutputWithContext(ctx context.Context) ExpressRouteConnectionRoutingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExpressRouteConnectionRouting) *ExpressRouteConnectionRouting {
		return &v
	}).(ExpressRouteConnectionRoutingPtrOutput)
}

// The ID of the Virtual Hub Route Table associated with this Express Route Connection.
func (o ExpressRouteConnectionRoutingOutput) AssociatedRouteTableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionRouting) *string { return v.AssociatedRouteTableId }).(pulumi.StringPtrOutput)
}

// The ID of the Route Map associated with this Express Route Connection for inbound routes.
func (o ExpressRouteConnectionRoutingOutput) InboundRouteMapId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionRouting) *string { return v.InboundRouteMapId }).(pulumi.StringPtrOutput)
}

// The ID of the Route Map associated with this Express Route Connection for outbound routes.
func (o ExpressRouteConnectionRoutingOutput) OutboundRouteMapId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionRouting) *string { return v.OutboundRouteMapId }).(pulumi.StringPtrOutput)
}

// A `propagatedRouteTable` block as defined below.
func (o ExpressRouteConnectionRoutingOutput) PropagatedRouteTable() ExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionRouting) *ExpressRouteConnectionRoutingPropagatedRouteTable {
		return v.PropagatedRouteTable
	}).(ExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput)
}

type ExpressRouteConnectionRoutingPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteConnectionRoutingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteConnectionRouting)(nil)).Elem()
}

func (o ExpressRouteConnectionRoutingPtrOutput) ToExpressRouteConnectionRoutingPtrOutput() ExpressRouteConnectionRoutingPtrOutput {
	return o
}

func (o ExpressRouteConnectionRoutingPtrOutput) ToExpressRouteConnectionRoutingPtrOutputWithContext(ctx context.Context) ExpressRouteConnectionRoutingPtrOutput {
	return o
}

func (o ExpressRouteConnectionRoutingPtrOutput) Elem() ExpressRouteConnectionRoutingOutput {
	return o.ApplyT(func(v *ExpressRouteConnectionRouting) ExpressRouteConnectionRouting {
		if v != nil {
			return *v
		}
		var ret ExpressRouteConnectionRouting
		return ret
	}).(ExpressRouteConnectionRoutingOutput)
}

// The ID of the Virtual Hub Route Table associated with this Express Route Connection.
func (o ExpressRouteConnectionRoutingPtrOutput) AssociatedRouteTableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteConnectionRouting) *string {
		if v == nil {
			return nil
		}
		return v.AssociatedRouteTableId
	}).(pulumi.StringPtrOutput)
}

// The ID of the Route Map associated with this Express Route Connection for inbound routes.
func (o ExpressRouteConnectionRoutingPtrOutput) InboundRouteMapId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteConnectionRouting) *string {
		if v == nil {
			return nil
		}
		return v.InboundRouteMapId
	}).(pulumi.StringPtrOutput)
}

// The ID of the Route Map associated with this Express Route Connection for outbound routes.
func (o ExpressRouteConnectionRoutingPtrOutput) OutboundRouteMapId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteConnectionRouting) *string {
		if v == nil {
			return nil
		}
		return v.OutboundRouteMapId
	}).(pulumi.StringPtrOutput)
}

// A `propagatedRouteTable` block as defined below.
func (o ExpressRouteConnectionRoutingPtrOutput) PropagatedRouteTable() ExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput {
	return o.ApplyT(func(v *ExpressRouteConnectionRouting) *ExpressRouteConnectionRoutingPropagatedRouteTable {
		if v == nil {
			return nil
		}
		return v.PropagatedRouteTable
	}).(ExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput)
}

type ExpressRouteConnectionRoutingPropagatedRouteTable struct {
	// The list of labels to logically group route tables.
	Labels []string `pulumi:"labels"`
	// A list of IDs of the Virtual Hub Route Table to propagate routes from Express Route Connection to the route table.
	RouteTableIds []string `pulumi:"routeTableIds"`
}

// ExpressRouteConnectionRoutingPropagatedRouteTableInput is an input type that accepts ExpressRouteConnectionRoutingPropagatedRouteTableArgs and ExpressRouteConnectionRoutingPropagatedRouteTableOutput values.
// You can construct a concrete instance of `ExpressRouteConnectionRoutingPropagatedRouteTableInput` via:
//
//	ExpressRouteConnectionRoutingPropagatedRouteTableArgs{...}
type ExpressRouteConnectionRoutingPropagatedRouteTableInput interface {
	pulumi.Input

	ToExpressRouteConnectionRoutingPropagatedRouteTableOutput() ExpressRouteConnectionRoutingPropagatedRouteTableOutput
	ToExpressRouteConnectionRoutingPropagatedRouteTableOutputWithContext(context.Context) ExpressRouteConnectionRoutingPropagatedRouteTableOutput
}

type ExpressRouteConnectionRoutingPropagatedRouteTableArgs struct {
	// The list of labels to logically group route tables.
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// A list of IDs of the Virtual Hub Route Table to propagate routes from Express Route Connection to the route table.
	RouteTableIds pulumi.StringArrayInput `pulumi:"routeTableIds"`
}

func (ExpressRouteConnectionRoutingPropagatedRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteConnectionRoutingPropagatedRouteTable)(nil)).Elem()
}

func (i ExpressRouteConnectionRoutingPropagatedRouteTableArgs) ToExpressRouteConnectionRoutingPropagatedRouteTableOutput() ExpressRouteConnectionRoutingPropagatedRouteTableOutput {
	return i.ToExpressRouteConnectionRoutingPropagatedRouteTableOutputWithContext(context.Background())
}

func (i ExpressRouteConnectionRoutingPropagatedRouteTableArgs) ToExpressRouteConnectionRoutingPropagatedRouteTableOutputWithContext(ctx context.Context) ExpressRouteConnectionRoutingPropagatedRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionRoutingPropagatedRouteTableOutput)
}

func (i ExpressRouteConnectionRoutingPropagatedRouteTableArgs) ToExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput() ExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput {
	return i.ToExpressRouteConnectionRoutingPropagatedRouteTablePtrOutputWithContext(context.Background())
}

func (i ExpressRouteConnectionRoutingPropagatedRouteTableArgs) ToExpressRouteConnectionRoutingPropagatedRouteTablePtrOutputWithContext(ctx context.Context) ExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionRoutingPropagatedRouteTableOutput).ToExpressRouteConnectionRoutingPropagatedRouteTablePtrOutputWithContext(ctx)
}

// ExpressRouteConnectionRoutingPropagatedRouteTablePtrInput is an input type that accepts ExpressRouteConnectionRoutingPropagatedRouteTableArgs, ExpressRouteConnectionRoutingPropagatedRouteTablePtr and ExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput values.
// You can construct a concrete instance of `ExpressRouteConnectionRoutingPropagatedRouteTablePtrInput` via:
//
//	        ExpressRouteConnectionRoutingPropagatedRouteTableArgs{...}
//
//	or:
//
//	        nil
type ExpressRouteConnectionRoutingPropagatedRouteTablePtrInput interface {
	pulumi.Input

	ToExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput() ExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput
	ToExpressRouteConnectionRoutingPropagatedRouteTablePtrOutputWithContext(context.Context) ExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput
}

type expressRouteConnectionRoutingPropagatedRouteTablePtrType ExpressRouteConnectionRoutingPropagatedRouteTableArgs

func ExpressRouteConnectionRoutingPropagatedRouteTablePtr(v *ExpressRouteConnectionRoutingPropagatedRouteTableArgs) ExpressRouteConnectionRoutingPropagatedRouteTablePtrInput {
	return (*expressRouteConnectionRoutingPropagatedRouteTablePtrType)(v)
}

func (*expressRouteConnectionRoutingPropagatedRouteTablePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteConnectionRoutingPropagatedRouteTable)(nil)).Elem()
}

func (i *expressRouteConnectionRoutingPropagatedRouteTablePtrType) ToExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput() ExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput {
	return i.ToExpressRouteConnectionRoutingPropagatedRouteTablePtrOutputWithContext(context.Background())
}

func (i *expressRouteConnectionRoutingPropagatedRouteTablePtrType) ToExpressRouteConnectionRoutingPropagatedRouteTablePtrOutputWithContext(ctx context.Context) ExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput)
}

type ExpressRouteConnectionRoutingPropagatedRouteTableOutput struct{ *pulumi.OutputState }

func (ExpressRouteConnectionRoutingPropagatedRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteConnectionRoutingPropagatedRouteTable)(nil)).Elem()
}

func (o ExpressRouteConnectionRoutingPropagatedRouteTableOutput) ToExpressRouteConnectionRoutingPropagatedRouteTableOutput() ExpressRouteConnectionRoutingPropagatedRouteTableOutput {
	return o
}

func (o ExpressRouteConnectionRoutingPropagatedRouteTableOutput) ToExpressRouteConnectionRoutingPropagatedRouteTableOutputWithContext(ctx context.Context) ExpressRouteConnectionRoutingPropagatedRouteTableOutput {
	return o
}

func (o ExpressRouteConnectionRoutingPropagatedRouteTableOutput) ToExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput() ExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput {
	return o.ToExpressRouteConnectionRoutingPropagatedRouteTablePtrOutputWithContext(context.Background())
}

func (o ExpressRouteConnectionRoutingPropagatedRouteTableOutput) ToExpressRouteConnectionRoutingPropagatedRouteTablePtrOutputWithContext(ctx context.Context) ExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExpressRouteConnectionRoutingPropagatedRouteTable) *ExpressRouteConnectionRoutingPropagatedRouteTable {
		return &v
	}).(ExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput)
}

// The list of labels to logically group route tables.
func (o ExpressRouteConnectionRoutingPropagatedRouteTableOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExpressRouteConnectionRoutingPropagatedRouteTable) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// A list of IDs of the Virtual Hub Route Table to propagate routes from Express Route Connection to the route table.
func (o ExpressRouteConnectionRoutingPropagatedRouteTableOutput) RouteTableIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExpressRouteConnectionRoutingPropagatedRouteTable) []string { return v.RouteTableIds }).(pulumi.StringArrayOutput)
}

type ExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteConnectionRoutingPropagatedRouteTable)(nil)).Elem()
}

func (o ExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput) ToExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput() ExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput {
	return o
}

func (o ExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput) ToExpressRouteConnectionRoutingPropagatedRouteTablePtrOutputWithContext(ctx context.Context) ExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput {
	return o
}

func (o ExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput) Elem() ExpressRouteConnectionRoutingPropagatedRouteTableOutput {
	return o.ApplyT(func(v *ExpressRouteConnectionRoutingPropagatedRouteTable) ExpressRouteConnectionRoutingPropagatedRouteTable {
		if v != nil {
			return *v
		}
		var ret ExpressRouteConnectionRoutingPropagatedRouteTable
		return ret
	}).(ExpressRouteConnectionRoutingPropagatedRouteTableOutput)
}

// The list of labels to logically group route tables.
func (o ExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExpressRouteConnectionRoutingPropagatedRouteTable) []string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringArrayOutput)
}

// A list of IDs of the Virtual Hub Route Table to propagate routes from Express Route Connection to the route table.
func (o ExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput) RouteTableIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExpressRouteConnectionRoutingPropagatedRouteTable) []string {
		if v == nil {
			return nil
		}
		return v.RouteTableIds
	}).(pulumi.StringArrayOutput)
}

type ExpressRoutePortIdentity struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Express Route Port.
	IdentityIds []string `pulumi:"identityIds"`
	// Specifies the type of Managed Service Identity that should be configured on this Express Route Port. Only possible value is `UserAssigned`.
	Type string `pulumi:"type"`
}

// ExpressRoutePortIdentityInput is an input type that accepts ExpressRoutePortIdentityArgs and ExpressRoutePortIdentityOutput values.
// You can construct a concrete instance of `ExpressRoutePortIdentityInput` via:
//
//	ExpressRoutePortIdentityArgs{...}
type ExpressRoutePortIdentityInput interface {
	pulumi.Input

	ToExpressRoutePortIdentityOutput() ExpressRoutePortIdentityOutput
	ToExpressRoutePortIdentityOutputWithContext(context.Context) ExpressRoutePortIdentityOutput
}

type ExpressRoutePortIdentityArgs struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Express Route Port.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// Specifies the type of Managed Service Identity that should be configured on this Express Route Port. Only possible value is `UserAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ExpressRoutePortIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRoutePortIdentity)(nil)).Elem()
}

func (i ExpressRoutePortIdentityArgs) ToExpressRoutePortIdentityOutput() ExpressRoutePortIdentityOutput {
	return i.ToExpressRoutePortIdentityOutputWithContext(context.Background())
}

func (i ExpressRoutePortIdentityArgs) ToExpressRoutePortIdentityOutputWithContext(ctx context.Context) ExpressRoutePortIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRoutePortIdentityOutput)
}

func (i ExpressRoutePortIdentityArgs) ToExpressRoutePortIdentityPtrOutput() ExpressRoutePortIdentityPtrOutput {
	return i.ToExpressRoutePortIdentityPtrOutputWithContext(context.Background())
}

func (i ExpressRoutePortIdentityArgs) ToExpressRoutePortIdentityPtrOutputWithContext(ctx context.Context) ExpressRoutePortIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRoutePortIdentityOutput).ToExpressRoutePortIdentityPtrOutputWithContext(ctx)
}

// ExpressRoutePortIdentityPtrInput is an input type that accepts ExpressRoutePortIdentityArgs, ExpressRoutePortIdentityPtr and ExpressRoutePortIdentityPtrOutput values.
// You can construct a concrete instance of `ExpressRoutePortIdentityPtrInput` via:
//
//	        ExpressRoutePortIdentityArgs{...}
//
//	or:
//
//	        nil
type ExpressRoutePortIdentityPtrInput interface {
	pulumi.Input

	ToExpressRoutePortIdentityPtrOutput() ExpressRoutePortIdentityPtrOutput
	ToExpressRoutePortIdentityPtrOutputWithContext(context.Context) ExpressRoutePortIdentityPtrOutput
}

type expressRoutePortIdentityPtrType ExpressRoutePortIdentityArgs

func ExpressRoutePortIdentityPtr(v *ExpressRoutePortIdentityArgs) ExpressRoutePortIdentityPtrInput {
	return (*expressRoutePortIdentityPtrType)(v)
}

func (*expressRoutePortIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRoutePortIdentity)(nil)).Elem()
}

func (i *expressRoutePortIdentityPtrType) ToExpressRoutePortIdentityPtrOutput() ExpressRoutePortIdentityPtrOutput {
	return i.ToExpressRoutePortIdentityPtrOutputWithContext(context.Background())
}

func (i *expressRoutePortIdentityPtrType) ToExpressRoutePortIdentityPtrOutputWithContext(ctx context.Context) ExpressRoutePortIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRoutePortIdentityPtrOutput)
}

type ExpressRoutePortIdentityOutput struct{ *pulumi.OutputState }

func (ExpressRoutePortIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRoutePortIdentity)(nil)).Elem()
}

func (o ExpressRoutePortIdentityOutput) ToExpressRoutePortIdentityOutput() ExpressRoutePortIdentityOutput {
	return o
}

func (o ExpressRoutePortIdentityOutput) ToExpressRoutePortIdentityOutputWithContext(ctx context.Context) ExpressRoutePortIdentityOutput {
	return o
}

func (o ExpressRoutePortIdentityOutput) ToExpressRoutePortIdentityPtrOutput() ExpressRoutePortIdentityPtrOutput {
	return o.ToExpressRoutePortIdentityPtrOutputWithContext(context.Background())
}

func (o ExpressRoutePortIdentityOutput) ToExpressRoutePortIdentityPtrOutputWithContext(ctx context.Context) ExpressRoutePortIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExpressRoutePortIdentity) *ExpressRoutePortIdentity {
		return &v
	}).(ExpressRoutePortIdentityPtrOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Express Route Port.
func (o ExpressRoutePortIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExpressRoutePortIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Express Route Port. Only possible value is `UserAssigned`.
func (o ExpressRoutePortIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRoutePortIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type ExpressRoutePortIdentityPtrOutput struct{ *pulumi.OutputState }

func (ExpressRoutePortIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRoutePortIdentity)(nil)).Elem()
}

func (o ExpressRoutePortIdentityPtrOutput) ToExpressRoutePortIdentityPtrOutput() ExpressRoutePortIdentityPtrOutput {
	return o
}

func (o ExpressRoutePortIdentityPtrOutput) ToExpressRoutePortIdentityPtrOutputWithContext(ctx context.Context) ExpressRoutePortIdentityPtrOutput {
	return o
}

func (o ExpressRoutePortIdentityPtrOutput) Elem() ExpressRoutePortIdentityOutput {
	return o.ApplyT(func(v *ExpressRoutePortIdentity) ExpressRoutePortIdentity {
		if v != nil {
			return *v
		}
		var ret ExpressRoutePortIdentity
		return ret
	}).(ExpressRoutePortIdentityOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Express Route Port.
func (o ExpressRoutePortIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExpressRoutePortIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Express Route Port. Only possible value is `UserAssigned`.
func (o ExpressRoutePortIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ExpressRoutePortLink1 struct {
	// Whether enable administration state on the Express Route Port Link? Defaults to `false`.
	AdminEnabled *bool `pulumi:"adminEnabled"`
	// The connector type of the Express Route Port Link.
	ConnectorType *string `pulumi:"connectorType"`
	// The ID of this Express Route Port Link.
	Id *string `pulumi:"id"`
	// The interface name of the Azure router associated with the Express Route Port Link.
	InterfaceName *string `pulumi:"interfaceName"`
	// The ID of the Key Vault Secret that contains the Mac security CAK key for this Express Route Port Link.
	MacsecCakKeyvaultSecretId *string `pulumi:"macsecCakKeyvaultSecretId"`
	// The MACSec cipher used for this Express Route Port Link. Possible values are `GcmAes128` and `GcmAes256`. Defaults to `GcmAes128`.
	MacsecCipher *string `pulumi:"macsecCipher"`
	// The ID of the Key Vault Secret that contains the MACSec CKN key for this Express Route Port Link.
	MacsecCknKeyvaultSecretId *string `pulumi:"macsecCknKeyvaultSecretId"`
	// Should Secure Channel Identifier on the Express Route Port Link be enabled? Defaults to `false`.
	//
	// > **NOTE** `macsecCknKeyvaultSecretId` and `macsecCakKeyvaultSecretId` should be used together with `identity`, so that the Express Route Port instance have the right permission to access the Key Vault.
	MacsecSciEnabled *bool `pulumi:"macsecSciEnabled"`
	// The ID that maps from the Express Route Port Link to the patch panel port.
	PatchPanelId *string `pulumi:"patchPanelId"`
	// The ID that maps from the patch panel port to the rack.
	RackId *string `pulumi:"rackId"`
	// The name of the Azure router associated with the Express Route Port Link.
	RouterName *string `pulumi:"routerName"`
}

// ExpressRoutePortLink1Input is an input type that accepts ExpressRoutePortLink1Args and ExpressRoutePortLink1Output values.
// You can construct a concrete instance of `ExpressRoutePortLink1Input` via:
//
//	ExpressRoutePortLink1Args{...}
type ExpressRoutePortLink1Input interface {
	pulumi.Input

	ToExpressRoutePortLink1Output() ExpressRoutePortLink1Output
	ToExpressRoutePortLink1OutputWithContext(context.Context) ExpressRoutePortLink1Output
}

type ExpressRoutePortLink1Args struct {
	// Whether enable administration state on the Express Route Port Link? Defaults to `false`.
	AdminEnabled pulumi.BoolPtrInput `pulumi:"adminEnabled"`
	// The connector type of the Express Route Port Link.
	ConnectorType pulumi.StringPtrInput `pulumi:"connectorType"`
	// The ID of this Express Route Port Link.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The interface name of the Azure router associated with the Express Route Port Link.
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
	// The ID of the Key Vault Secret that contains the Mac security CAK key for this Express Route Port Link.
	MacsecCakKeyvaultSecretId pulumi.StringPtrInput `pulumi:"macsecCakKeyvaultSecretId"`
	// The MACSec cipher used for this Express Route Port Link. Possible values are `GcmAes128` and `GcmAes256`. Defaults to `GcmAes128`.
	MacsecCipher pulumi.StringPtrInput `pulumi:"macsecCipher"`
	// The ID of the Key Vault Secret that contains the MACSec CKN key for this Express Route Port Link.
	MacsecCknKeyvaultSecretId pulumi.StringPtrInput `pulumi:"macsecCknKeyvaultSecretId"`
	// Should Secure Channel Identifier on the Express Route Port Link be enabled? Defaults to `false`.
	//
	// > **NOTE** `macsecCknKeyvaultSecretId` and `macsecCakKeyvaultSecretId` should be used together with `identity`, so that the Express Route Port instance have the right permission to access the Key Vault.
	MacsecSciEnabled pulumi.BoolPtrInput `pulumi:"macsecSciEnabled"`
	// The ID that maps from the Express Route Port Link to the patch panel port.
	PatchPanelId pulumi.StringPtrInput `pulumi:"patchPanelId"`
	// The ID that maps from the patch panel port to the rack.
	RackId pulumi.StringPtrInput `pulumi:"rackId"`
	// The name of the Azure router associated with the Express Route Port Link.
	RouterName pulumi.StringPtrInput `pulumi:"routerName"`
}

func (ExpressRoutePortLink1Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRoutePortLink1)(nil)).Elem()
}

func (i ExpressRoutePortLink1Args) ToExpressRoutePortLink1Output() ExpressRoutePortLink1Output {
	return i.ToExpressRoutePortLink1OutputWithContext(context.Background())
}

func (i ExpressRoutePortLink1Args) ToExpressRoutePortLink1OutputWithContext(ctx context.Context) ExpressRoutePortLink1Output {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRoutePortLink1Output)
}

func (i ExpressRoutePortLink1Args) ToExpressRoutePortLink1PtrOutput() ExpressRoutePortLink1PtrOutput {
	return i.ToExpressRoutePortLink1PtrOutputWithContext(context.Background())
}

func (i ExpressRoutePortLink1Args) ToExpressRoutePortLink1PtrOutputWithContext(ctx context.Context) ExpressRoutePortLink1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRoutePortLink1Output).ToExpressRoutePortLink1PtrOutputWithContext(ctx)
}

// ExpressRoutePortLink1PtrInput is an input type that accepts ExpressRoutePortLink1Args, ExpressRoutePortLink1Ptr and ExpressRoutePortLink1PtrOutput values.
// You can construct a concrete instance of `ExpressRoutePortLink1PtrInput` via:
//
//	        ExpressRoutePortLink1Args{...}
//
//	or:
//
//	        nil
type ExpressRoutePortLink1PtrInput interface {
	pulumi.Input

	ToExpressRoutePortLink1PtrOutput() ExpressRoutePortLink1PtrOutput
	ToExpressRoutePortLink1PtrOutputWithContext(context.Context) ExpressRoutePortLink1PtrOutput
}

type expressRoutePortLink1PtrType ExpressRoutePortLink1Args

func ExpressRoutePortLink1Ptr(v *ExpressRoutePortLink1Args) ExpressRoutePortLink1PtrInput {
	return (*expressRoutePortLink1PtrType)(v)
}

func (*expressRoutePortLink1PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRoutePortLink1)(nil)).Elem()
}

func (i *expressRoutePortLink1PtrType) ToExpressRoutePortLink1PtrOutput() ExpressRoutePortLink1PtrOutput {
	return i.ToExpressRoutePortLink1PtrOutputWithContext(context.Background())
}

func (i *expressRoutePortLink1PtrType) ToExpressRoutePortLink1PtrOutputWithContext(ctx context.Context) ExpressRoutePortLink1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRoutePortLink1PtrOutput)
}

type ExpressRoutePortLink1Output struct{ *pulumi.OutputState }

func (ExpressRoutePortLink1Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRoutePortLink1)(nil)).Elem()
}

func (o ExpressRoutePortLink1Output) ToExpressRoutePortLink1Output() ExpressRoutePortLink1Output {
	return o
}

func (o ExpressRoutePortLink1Output) ToExpressRoutePortLink1OutputWithContext(ctx context.Context) ExpressRoutePortLink1Output {
	return o
}

func (o ExpressRoutePortLink1Output) ToExpressRoutePortLink1PtrOutput() ExpressRoutePortLink1PtrOutput {
	return o.ToExpressRoutePortLink1PtrOutputWithContext(context.Background())
}

func (o ExpressRoutePortLink1Output) ToExpressRoutePortLink1PtrOutputWithContext(ctx context.Context) ExpressRoutePortLink1PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExpressRoutePortLink1) *ExpressRoutePortLink1 {
		return &v
	}).(ExpressRoutePortLink1PtrOutput)
}

// Whether enable administration state on the Express Route Port Link? Defaults to `false`.
func (o ExpressRoutePortLink1Output) AdminEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortLink1) *bool { return v.AdminEnabled }).(pulumi.BoolPtrOutput)
}

// The connector type of the Express Route Port Link.
func (o ExpressRoutePortLink1Output) ConnectorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortLink1) *string { return v.ConnectorType }).(pulumi.StringPtrOutput)
}

// The ID of this Express Route Port Link.
func (o ExpressRoutePortLink1Output) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortLink1) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The interface name of the Azure router associated with the Express Route Port Link.
func (o ExpressRoutePortLink1Output) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortLink1) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

// The ID of the Key Vault Secret that contains the Mac security CAK key for this Express Route Port Link.
func (o ExpressRoutePortLink1Output) MacsecCakKeyvaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortLink1) *string { return v.MacsecCakKeyvaultSecretId }).(pulumi.StringPtrOutput)
}

// The MACSec cipher used for this Express Route Port Link. Possible values are `GcmAes128` and `GcmAes256`. Defaults to `GcmAes128`.
func (o ExpressRoutePortLink1Output) MacsecCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortLink1) *string { return v.MacsecCipher }).(pulumi.StringPtrOutput)
}

// The ID of the Key Vault Secret that contains the MACSec CKN key for this Express Route Port Link.
func (o ExpressRoutePortLink1Output) MacsecCknKeyvaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortLink1) *string { return v.MacsecCknKeyvaultSecretId }).(pulumi.StringPtrOutput)
}

// Should Secure Channel Identifier on the Express Route Port Link be enabled? Defaults to `false`.
//
// > **NOTE** `macsecCknKeyvaultSecretId` and `macsecCakKeyvaultSecretId` should be used together with `identity`, so that the Express Route Port instance have the right permission to access the Key Vault.
func (o ExpressRoutePortLink1Output) MacsecSciEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortLink1) *bool { return v.MacsecSciEnabled }).(pulumi.BoolPtrOutput)
}

// The ID that maps from the Express Route Port Link to the patch panel port.
func (o ExpressRoutePortLink1Output) PatchPanelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortLink1) *string { return v.PatchPanelId }).(pulumi.StringPtrOutput)
}

// The ID that maps from the patch panel port to the rack.
func (o ExpressRoutePortLink1Output) RackId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortLink1) *string { return v.RackId }).(pulumi.StringPtrOutput)
}

// The name of the Azure router associated with the Express Route Port Link.
func (o ExpressRoutePortLink1Output) RouterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortLink1) *string { return v.RouterName }).(pulumi.StringPtrOutput)
}

type ExpressRoutePortLink1PtrOutput struct{ *pulumi.OutputState }

func (ExpressRoutePortLink1PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRoutePortLink1)(nil)).Elem()
}

func (o ExpressRoutePortLink1PtrOutput) ToExpressRoutePortLink1PtrOutput() ExpressRoutePortLink1PtrOutput {
	return o
}

func (o ExpressRoutePortLink1PtrOutput) ToExpressRoutePortLink1PtrOutputWithContext(ctx context.Context) ExpressRoutePortLink1PtrOutput {
	return o
}

func (o ExpressRoutePortLink1PtrOutput) Elem() ExpressRoutePortLink1Output {
	return o.ApplyT(func(v *ExpressRoutePortLink1) ExpressRoutePortLink1 {
		if v != nil {
			return *v
		}
		var ret ExpressRoutePortLink1
		return ret
	}).(ExpressRoutePortLink1Output)
}

// Whether enable administration state on the Express Route Port Link? Defaults to `false`.
func (o ExpressRoutePortLink1PtrOutput) AdminEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortLink1) *bool {
		if v == nil {
			return nil
		}
		return v.AdminEnabled
	}).(pulumi.BoolPtrOutput)
}

// The connector type of the Express Route Port Link.
func (o ExpressRoutePortLink1PtrOutput) ConnectorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortLink1) *string {
		if v == nil {
			return nil
		}
		return v.ConnectorType
	}).(pulumi.StringPtrOutput)
}

// The ID of this Express Route Port Link.
func (o ExpressRoutePortLink1PtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortLink1) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The interface name of the Azure router associated with the Express Route Port Link.
func (o ExpressRoutePortLink1PtrOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortLink1) *string {
		if v == nil {
			return nil
		}
		return v.InterfaceName
	}).(pulumi.StringPtrOutput)
}

// The ID of the Key Vault Secret that contains the Mac security CAK key for this Express Route Port Link.
func (o ExpressRoutePortLink1PtrOutput) MacsecCakKeyvaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortLink1) *string {
		if v == nil {
			return nil
		}
		return v.MacsecCakKeyvaultSecretId
	}).(pulumi.StringPtrOutput)
}

// The MACSec cipher used for this Express Route Port Link. Possible values are `GcmAes128` and `GcmAes256`. Defaults to `GcmAes128`.
func (o ExpressRoutePortLink1PtrOutput) MacsecCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortLink1) *string {
		if v == nil {
			return nil
		}
		return v.MacsecCipher
	}).(pulumi.StringPtrOutput)
}

// The ID of the Key Vault Secret that contains the MACSec CKN key for this Express Route Port Link.
func (o ExpressRoutePortLink1PtrOutput) MacsecCknKeyvaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortLink1) *string {
		if v == nil {
			return nil
		}
		return v.MacsecCknKeyvaultSecretId
	}).(pulumi.StringPtrOutput)
}

// Should Secure Channel Identifier on the Express Route Port Link be enabled? Defaults to `false`.
//
// > **NOTE** `macsecCknKeyvaultSecretId` and `macsecCakKeyvaultSecretId` should be used together with `identity`, so that the Express Route Port instance have the right permission to access the Key Vault.
func (o ExpressRoutePortLink1PtrOutput) MacsecSciEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortLink1) *bool {
		if v == nil {
			return nil
		}
		return v.MacsecSciEnabled
	}).(pulumi.BoolPtrOutput)
}

// The ID that maps from the Express Route Port Link to the patch panel port.
func (o ExpressRoutePortLink1PtrOutput) PatchPanelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortLink1) *string {
		if v == nil {
			return nil
		}
		return v.PatchPanelId
	}).(pulumi.StringPtrOutput)
}

// The ID that maps from the patch panel port to the rack.
func (o ExpressRoutePortLink1PtrOutput) RackId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortLink1) *string {
		if v == nil {
			return nil
		}
		return v.RackId
	}).(pulumi.StringPtrOutput)
}

// The name of the Azure router associated with the Express Route Port Link.
func (o ExpressRoutePortLink1PtrOutput) RouterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortLink1) *string {
		if v == nil {
			return nil
		}
		return v.RouterName
	}).(pulumi.StringPtrOutput)
}

type ExpressRoutePortLink2 struct {
	// Whether enable administration state on the Express Route Port Link? Defaults to `false`.
	AdminEnabled *bool `pulumi:"adminEnabled"`
	// The connector type of the Express Route Port Link.
	ConnectorType *string `pulumi:"connectorType"`
	// The ID of this Express Route Port Link.
	Id *string `pulumi:"id"`
	// The interface name of the Azure router associated with the Express Route Port Link.
	InterfaceName *string `pulumi:"interfaceName"`
	// The ID of the Key Vault Secret that contains the Mac security CAK key for this Express Route Port Link.
	MacsecCakKeyvaultSecretId *string `pulumi:"macsecCakKeyvaultSecretId"`
	// The MACSec cipher used for this Express Route Port Link. Possible values are `GcmAes128` and `GcmAes256`. Defaults to `GcmAes128`.
	MacsecCipher *string `pulumi:"macsecCipher"`
	// The ID of the Key Vault Secret that contains the MACSec CKN key for this Express Route Port Link.
	MacsecCknKeyvaultSecretId *string `pulumi:"macsecCknKeyvaultSecretId"`
	// Should Secure Channel Identifier on the Express Route Port Link be enabled? Defaults to `false`.
	//
	// > **NOTE** `macsecCknKeyvaultSecretId` and `macsecCakKeyvaultSecretId` should be used together with `identity`, so that the Express Route Port instance have the right permission to access the Key Vault.
	MacsecSciEnabled *bool `pulumi:"macsecSciEnabled"`
	// The ID that maps from the Express Route Port Link to the patch panel port.
	PatchPanelId *string `pulumi:"patchPanelId"`
	// The ID that maps from the patch panel port to the rack.
	RackId *string `pulumi:"rackId"`
	// The name of the Azure router associated with the Express Route Port Link.
	RouterName *string `pulumi:"routerName"`
}

// ExpressRoutePortLink2Input is an input type that accepts ExpressRoutePortLink2Args and ExpressRoutePortLink2Output values.
// You can construct a concrete instance of `ExpressRoutePortLink2Input` via:
//
//	ExpressRoutePortLink2Args{...}
type ExpressRoutePortLink2Input interface {
	pulumi.Input

	ToExpressRoutePortLink2Output() ExpressRoutePortLink2Output
	ToExpressRoutePortLink2OutputWithContext(context.Context) ExpressRoutePortLink2Output
}

type ExpressRoutePortLink2Args struct {
	// Whether enable administration state on the Express Route Port Link? Defaults to `false`.
	AdminEnabled pulumi.BoolPtrInput `pulumi:"adminEnabled"`
	// The connector type of the Express Route Port Link.
	ConnectorType pulumi.StringPtrInput `pulumi:"connectorType"`
	// The ID of this Express Route Port Link.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The interface name of the Azure router associated with the Express Route Port Link.
	InterfaceName pulumi.StringPtrInput `pulumi:"interfaceName"`
	// The ID of the Key Vault Secret that contains the Mac security CAK key for this Express Route Port Link.
	MacsecCakKeyvaultSecretId pulumi.StringPtrInput `pulumi:"macsecCakKeyvaultSecretId"`
	// The MACSec cipher used for this Express Route Port Link. Possible values are `GcmAes128` and `GcmAes256`. Defaults to `GcmAes128`.
	MacsecCipher pulumi.StringPtrInput `pulumi:"macsecCipher"`
	// The ID of the Key Vault Secret that contains the MACSec CKN key for this Express Route Port Link.
	MacsecCknKeyvaultSecretId pulumi.StringPtrInput `pulumi:"macsecCknKeyvaultSecretId"`
	// Should Secure Channel Identifier on the Express Route Port Link be enabled? Defaults to `false`.
	//
	// > **NOTE** `macsecCknKeyvaultSecretId` and `macsecCakKeyvaultSecretId` should be used together with `identity`, so that the Express Route Port instance have the right permission to access the Key Vault.
	MacsecSciEnabled pulumi.BoolPtrInput `pulumi:"macsecSciEnabled"`
	// The ID that maps from the Express Route Port Link to the patch panel port.
	PatchPanelId pulumi.StringPtrInput `pulumi:"patchPanelId"`
	// The ID that maps from the patch panel port to the rack.
	RackId pulumi.StringPtrInput `pulumi:"rackId"`
	// The name of the Azure router associated with the Express Route Port Link.
	RouterName pulumi.StringPtrInput `pulumi:"routerName"`
}

func (ExpressRoutePortLink2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRoutePortLink2)(nil)).Elem()
}

func (i ExpressRoutePortLink2Args) ToExpressRoutePortLink2Output() ExpressRoutePortLink2Output {
	return i.ToExpressRoutePortLink2OutputWithContext(context.Background())
}

func (i ExpressRoutePortLink2Args) ToExpressRoutePortLink2OutputWithContext(ctx context.Context) ExpressRoutePortLink2Output {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRoutePortLink2Output)
}

func (i ExpressRoutePortLink2Args) ToExpressRoutePortLink2PtrOutput() ExpressRoutePortLink2PtrOutput {
	return i.ToExpressRoutePortLink2PtrOutputWithContext(context.Background())
}

func (i ExpressRoutePortLink2Args) ToExpressRoutePortLink2PtrOutputWithContext(ctx context.Context) ExpressRoutePortLink2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRoutePortLink2Output).ToExpressRoutePortLink2PtrOutputWithContext(ctx)
}

// ExpressRoutePortLink2PtrInput is an input type that accepts ExpressRoutePortLink2Args, ExpressRoutePortLink2Ptr and ExpressRoutePortLink2PtrOutput values.
// You can construct a concrete instance of `ExpressRoutePortLink2PtrInput` via:
//
//	        ExpressRoutePortLink2Args{...}
//
//	or:
//
//	        nil
type ExpressRoutePortLink2PtrInput interface {
	pulumi.Input

	ToExpressRoutePortLink2PtrOutput() ExpressRoutePortLink2PtrOutput
	ToExpressRoutePortLink2PtrOutputWithContext(context.Context) ExpressRoutePortLink2PtrOutput
}

type expressRoutePortLink2PtrType ExpressRoutePortLink2Args

func ExpressRoutePortLink2Ptr(v *ExpressRoutePortLink2Args) ExpressRoutePortLink2PtrInput {
	return (*expressRoutePortLink2PtrType)(v)
}

func (*expressRoutePortLink2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRoutePortLink2)(nil)).Elem()
}

func (i *expressRoutePortLink2PtrType) ToExpressRoutePortLink2PtrOutput() ExpressRoutePortLink2PtrOutput {
	return i.ToExpressRoutePortLink2PtrOutputWithContext(context.Background())
}

func (i *expressRoutePortLink2PtrType) ToExpressRoutePortLink2PtrOutputWithContext(ctx context.Context) ExpressRoutePortLink2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRoutePortLink2PtrOutput)
}

type ExpressRoutePortLink2Output struct{ *pulumi.OutputState }

func (ExpressRoutePortLink2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRoutePortLink2)(nil)).Elem()
}

func (o ExpressRoutePortLink2Output) ToExpressRoutePortLink2Output() ExpressRoutePortLink2Output {
	return o
}

func (o ExpressRoutePortLink2Output) ToExpressRoutePortLink2OutputWithContext(ctx context.Context) ExpressRoutePortLink2Output {
	return o
}

func (o ExpressRoutePortLink2Output) ToExpressRoutePortLink2PtrOutput() ExpressRoutePortLink2PtrOutput {
	return o.ToExpressRoutePortLink2PtrOutputWithContext(context.Background())
}

func (o ExpressRoutePortLink2Output) ToExpressRoutePortLink2PtrOutputWithContext(ctx context.Context) ExpressRoutePortLink2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExpressRoutePortLink2) *ExpressRoutePortLink2 {
		return &v
	}).(ExpressRoutePortLink2PtrOutput)
}

// Whether enable administration state on the Express Route Port Link? Defaults to `false`.
func (o ExpressRoutePortLink2Output) AdminEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortLink2) *bool { return v.AdminEnabled }).(pulumi.BoolPtrOutput)
}

// The connector type of the Express Route Port Link.
func (o ExpressRoutePortLink2Output) ConnectorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortLink2) *string { return v.ConnectorType }).(pulumi.StringPtrOutput)
}

// The ID of this Express Route Port Link.
func (o ExpressRoutePortLink2Output) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortLink2) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The interface name of the Azure router associated with the Express Route Port Link.
func (o ExpressRoutePortLink2Output) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortLink2) *string { return v.InterfaceName }).(pulumi.StringPtrOutput)
}

// The ID of the Key Vault Secret that contains the Mac security CAK key for this Express Route Port Link.
func (o ExpressRoutePortLink2Output) MacsecCakKeyvaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortLink2) *string { return v.MacsecCakKeyvaultSecretId }).(pulumi.StringPtrOutput)
}

// The MACSec cipher used for this Express Route Port Link. Possible values are `GcmAes128` and `GcmAes256`. Defaults to `GcmAes128`.
func (o ExpressRoutePortLink2Output) MacsecCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortLink2) *string { return v.MacsecCipher }).(pulumi.StringPtrOutput)
}

// The ID of the Key Vault Secret that contains the MACSec CKN key for this Express Route Port Link.
func (o ExpressRoutePortLink2Output) MacsecCknKeyvaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortLink2) *string { return v.MacsecCknKeyvaultSecretId }).(pulumi.StringPtrOutput)
}

// Should Secure Channel Identifier on the Express Route Port Link be enabled? Defaults to `false`.
//
// > **NOTE** `macsecCknKeyvaultSecretId` and `macsecCakKeyvaultSecretId` should be used together with `identity`, so that the Express Route Port instance have the right permission to access the Key Vault.
func (o ExpressRoutePortLink2Output) MacsecSciEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortLink2) *bool { return v.MacsecSciEnabled }).(pulumi.BoolPtrOutput)
}

// The ID that maps from the Express Route Port Link to the patch panel port.
func (o ExpressRoutePortLink2Output) PatchPanelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortLink2) *string { return v.PatchPanelId }).(pulumi.StringPtrOutput)
}

// The ID that maps from the patch panel port to the rack.
func (o ExpressRoutePortLink2Output) RackId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortLink2) *string { return v.RackId }).(pulumi.StringPtrOutput)
}

// The name of the Azure router associated with the Express Route Port Link.
func (o ExpressRoutePortLink2Output) RouterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRoutePortLink2) *string { return v.RouterName }).(pulumi.StringPtrOutput)
}

type ExpressRoutePortLink2PtrOutput struct{ *pulumi.OutputState }

func (ExpressRoutePortLink2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRoutePortLink2)(nil)).Elem()
}

func (o ExpressRoutePortLink2PtrOutput) ToExpressRoutePortLink2PtrOutput() ExpressRoutePortLink2PtrOutput {
	return o
}

func (o ExpressRoutePortLink2PtrOutput) ToExpressRoutePortLink2PtrOutputWithContext(ctx context.Context) ExpressRoutePortLink2PtrOutput {
	return o
}

func (o ExpressRoutePortLink2PtrOutput) Elem() ExpressRoutePortLink2Output {
	return o.ApplyT(func(v *ExpressRoutePortLink2) ExpressRoutePortLink2 {
		if v != nil {
			return *v
		}
		var ret ExpressRoutePortLink2
		return ret
	}).(ExpressRoutePortLink2Output)
}

// Whether enable administration state on the Express Route Port Link? Defaults to `false`.
func (o ExpressRoutePortLink2PtrOutput) AdminEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortLink2) *bool {
		if v == nil {
			return nil
		}
		return v.AdminEnabled
	}).(pulumi.BoolPtrOutput)
}

// The connector type of the Express Route Port Link.
func (o ExpressRoutePortLink2PtrOutput) ConnectorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortLink2) *string {
		if v == nil {
			return nil
		}
		return v.ConnectorType
	}).(pulumi.StringPtrOutput)
}

// The ID of this Express Route Port Link.
func (o ExpressRoutePortLink2PtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortLink2) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The interface name of the Azure router associated with the Express Route Port Link.
func (o ExpressRoutePortLink2PtrOutput) InterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortLink2) *string {
		if v == nil {
			return nil
		}
		return v.InterfaceName
	}).(pulumi.StringPtrOutput)
}

// The ID of the Key Vault Secret that contains the Mac security CAK key for this Express Route Port Link.
func (o ExpressRoutePortLink2PtrOutput) MacsecCakKeyvaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortLink2) *string {
		if v == nil {
			return nil
		}
		return v.MacsecCakKeyvaultSecretId
	}).(pulumi.StringPtrOutput)
}

// The MACSec cipher used for this Express Route Port Link. Possible values are `GcmAes128` and `GcmAes256`. Defaults to `GcmAes128`.
func (o ExpressRoutePortLink2PtrOutput) MacsecCipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortLink2) *string {
		if v == nil {
			return nil
		}
		return v.MacsecCipher
	}).(pulumi.StringPtrOutput)
}

// The ID of the Key Vault Secret that contains the MACSec CKN key for this Express Route Port Link.
func (o ExpressRoutePortLink2PtrOutput) MacsecCknKeyvaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortLink2) *string {
		if v == nil {
			return nil
		}
		return v.MacsecCknKeyvaultSecretId
	}).(pulumi.StringPtrOutput)
}

// Should Secure Channel Identifier on the Express Route Port Link be enabled? Defaults to `false`.
//
// > **NOTE** `macsecCknKeyvaultSecretId` and `macsecCakKeyvaultSecretId` should be used together with `identity`, so that the Express Route Port instance have the right permission to access the Key Vault.
func (o ExpressRoutePortLink2PtrOutput) MacsecSciEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortLink2) *bool {
		if v == nil {
			return nil
		}
		return v.MacsecSciEnabled
	}).(pulumi.BoolPtrOutput)
}

// The ID that maps from the Express Route Port Link to the patch panel port.
func (o ExpressRoutePortLink2PtrOutput) PatchPanelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortLink2) *string {
		if v == nil {
			return nil
		}
		return v.PatchPanelId
	}).(pulumi.StringPtrOutput)
}

// The ID that maps from the patch panel port to the rack.
func (o ExpressRoutePortLink2PtrOutput) RackId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortLink2) *string {
		if v == nil {
			return nil
		}
		return v.RackId
	}).(pulumi.StringPtrOutput)
}

// The name of the Azure router associated with the Express Route Port Link.
func (o ExpressRoutePortLink2PtrOutput) RouterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRoutePortLink2) *string {
		if v == nil {
			return nil
		}
		return v.RouterName
	}).(pulumi.StringPtrOutput)
}

type FirewallApplicationRuleCollectionRule struct {
	// Specifies a description for the rule.
	Description *string `pulumi:"description"`
	// A list of FQDN tags. Possible values are `AppServiceEnvironment`, `AzureBackup`, `AzureKubernetesService`, `HDInsight`, `MicrosoftActiveProtectionService`, `WindowsDiagnostics`, `WindowsUpdate` and `WindowsVirtualDesktop`.
	FqdnTags []string `pulumi:"fqdnTags"`
	// Specifies the name of the rule.
	Name string `pulumi:"name"`
	// One or more `protocol` blocks as defined below.
	Protocols []FirewallApplicationRuleCollectionRuleProtocol `pulumi:"protocols"`
	// A list of source IP addresses and/or IP ranges.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// A list of source IP Group IDs for the rule.
	//
	// > **NOTE** At least one of `sourceAddresses` and `sourceIpGroups` must be specified for a rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
	// A list of FQDNs.
	TargetFqdns []string `pulumi:"targetFqdns"`
}

// FirewallApplicationRuleCollectionRuleInput is an input type that accepts FirewallApplicationRuleCollectionRuleArgs and FirewallApplicationRuleCollectionRuleOutput values.
// You can construct a concrete instance of `FirewallApplicationRuleCollectionRuleInput` via:
//
//	FirewallApplicationRuleCollectionRuleArgs{...}
type FirewallApplicationRuleCollectionRuleInput interface {
	pulumi.Input

	ToFirewallApplicationRuleCollectionRuleOutput() FirewallApplicationRuleCollectionRuleOutput
	ToFirewallApplicationRuleCollectionRuleOutputWithContext(context.Context) FirewallApplicationRuleCollectionRuleOutput
}

type FirewallApplicationRuleCollectionRuleArgs struct {
	// Specifies a description for the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A list of FQDN tags. Possible values are `AppServiceEnvironment`, `AzureBackup`, `AzureKubernetesService`, `HDInsight`, `MicrosoftActiveProtectionService`, `WindowsDiagnostics`, `WindowsUpdate` and `WindowsVirtualDesktop`.
	FqdnTags pulumi.StringArrayInput `pulumi:"fqdnTags"`
	// Specifies the name of the rule.
	Name pulumi.StringInput `pulumi:"name"`
	// One or more `protocol` blocks as defined below.
	Protocols FirewallApplicationRuleCollectionRuleProtocolArrayInput `pulumi:"protocols"`
	// A list of source IP addresses and/or IP ranges.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// A list of source IP Group IDs for the rule.
	//
	// > **NOTE** At least one of `sourceAddresses` and `sourceIpGroups` must be specified for a rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
	// A list of FQDNs.
	TargetFqdns pulumi.StringArrayInput `pulumi:"targetFqdns"`
}

func (FirewallApplicationRuleCollectionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallApplicationRuleCollectionRule)(nil)).Elem()
}

func (i FirewallApplicationRuleCollectionRuleArgs) ToFirewallApplicationRuleCollectionRuleOutput() FirewallApplicationRuleCollectionRuleOutput {
	return i.ToFirewallApplicationRuleCollectionRuleOutputWithContext(context.Background())
}

func (i FirewallApplicationRuleCollectionRuleArgs) ToFirewallApplicationRuleCollectionRuleOutputWithContext(ctx context.Context) FirewallApplicationRuleCollectionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallApplicationRuleCollectionRuleOutput)
}

// FirewallApplicationRuleCollectionRuleArrayInput is an input type that accepts FirewallApplicationRuleCollectionRuleArray and FirewallApplicationRuleCollectionRuleArrayOutput values.
// You can construct a concrete instance of `FirewallApplicationRuleCollectionRuleArrayInput` via:
//
//	FirewallApplicationRuleCollectionRuleArray{ FirewallApplicationRuleCollectionRuleArgs{...} }
type FirewallApplicationRuleCollectionRuleArrayInput interface {
	pulumi.Input

	ToFirewallApplicationRuleCollectionRuleArrayOutput() FirewallApplicationRuleCollectionRuleArrayOutput
	ToFirewallApplicationRuleCollectionRuleArrayOutputWithContext(context.Context) FirewallApplicationRuleCollectionRuleArrayOutput
}

type FirewallApplicationRuleCollectionRuleArray []FirewallApplicationRuleCollectionRuleInput

func (FirewallApplicationRuleCollectionRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallApplicationRuleCollectionRule)(nil)).Elem()
}

func (i FirewallApplicationRuleCollectionRuleArray) ToFirewallApplicationRuleCollectionRuleArrayOutput() FirewallApplicationRuleCollectionRuleArrayOutput {
	return i.ToFirewallApplicationRuleCollectionRuleArrayOutputWithContext(context.Background())
}

func (i FirewallApplicationRuleCollectionRuleArray) ToFirewallApplicationRuleCollectionRuleArrayOutputWithContext(ctx context.Context) FirewallApplicationRuleCollectionRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallApplicationRuleCollectionRuleArrayOutput)
}

type FirewallApplicationRuleCollectionRuleOutput struct{ *pulumi.OutputState }

func (FirewallApplicationRuleCollectionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallApplicationRuleCollectionRule)(nil)).Elem()
}

func (o FirewallApplicationRuleCollectionRuleOutput) ToFirewallApplicationRuleCollectionRuleOutput() FirewallApplicationRuleCollectionRuleOutput {
	return o
}

func (o FirewallApplicationRuleCollectionRuleOutput) ToFirewallApplicationRuleCollectionRuleOutputWithContext(ctx context.Context) FirewallApplicationRuleCollectionRuleOutput {
	return o
}

// Specifies a description for the rule.
func (o FirewallApplicationRuleCollectionRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallApplicationRuleCollectionRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A list of FQDN tags. Possible values are `AppServiceEnvironment`, `AzureBackup`, `AzureKubernetesService`, `HDInsight`, `MicrosoftActiveProtectionService`, `WindowsDiagnostics`, `WindowsUpdate` and `WindowsVirtualDesktop`.
func (o FirewallApplicationRuleCollectionRuleOutput) FqdnTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallApplicationRuleCollectionRule) []string { return v.FqdnTags }).(pulumi.StringArrayOutput)
}

// Specifies the name of the rule.
func (o FirewallApplicationRuleCollectionRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallApplicationRuleCollectionRule) string { return v.Name }).(pulumi.StringOutput)
}

// One or more `protocol` blocks as defined below.
func (o FirewallApplicationRuleCollectionRuleOutput) Protocols() FirewallApplicationRuleCollectionRuleProtocolArrayOutput {
	return o.ApplyT(func(v FirewallApplicationRuleCollectionRule) []FirewallApplicationRuleCollectionRuleProtocol {
		return v.Protocols
	}).(FirewallApplicationRuleCollectionRuleProtocolArrayOutput)
}

// A list of source IP addresses and/or IP ranges.
func (o FirewallApplicationRuleCollectionRuleOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallApplicationRuleCollectionRule) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// A list of source IP Group IDs for the rule.
//
// > **NOTE** At least one of `sourceAddresses` and `sourceIpGroups` must be specified for a rule.
func (o FirewallApplicationRuleCollectionRuleOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallApplicationRuleCollectionRule) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// A list of FQDNs.
func (o FirewallApplicationRuleCollectionRuleOutput) TargetFqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallApplicationRuleCollectionRule) []string { return v.TargetFqdns }).(pulumi.StringArrayOutput)
}

type FirewallApplicationRuleCollectionRuleArrayOutput struct{ *pulumi.OutputState }

func (FirewallApplicationRuleCollectionRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallApplicationRuleCollectionRule)(nil)).Elem()
}

func (o FirewallApplicationRuleCollectionRuleArrayOutput) ToFirewallApplicationRuleCollectionRuleArrayOutput() FirewallApplicationRuleCollectionRuleArrayOutput {
	return o
}

func (o FirewallApplicationRuleCollectionRuleArrayOutput) ToFirewallApplicationRuleCollectionRuleArrayOutputWithContext(ctx context.Context) FirewallApplicationRuleCollectionRuleArrayOutput {
	return o
}

func (o FirewallApplicationRuleCollectionRuleArrayOutput) Index(i pulumi.IntInput) FirewallApplicationRuleCollectionRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallApplicationRuleCollectionRule {
		return vs[0].([]FirewallApplicationRuleCollectionRule)[vs[1].(int)]
	}).(FirewallApplicationRuleCollectionRuleOutput)
}

type FirewallApplicationRuleCollectionRuleProtocol struct {
	// Specify a port for the connection.
	Port int `pulumi:"port"`
	// Specifies the type of connection. Possible values are `Http`, `Https` and `Mssql`.
	Type string `pulumi:"type"`
}

// FirewallApplicationRuleCollectionRuleProtocolInput is an input type that accepts FirewallApplicationRuleCollectionRuleProtocolArgs and FirewallApplicationRuleCollectionRuleProtocolOutput values.
// You can construct a concrete instance of `FirewallApplicationRuleCollectionRuleProtocolInput` via:
//
//	FirewallApplicationRuleCollectionRuleProtocolArgs{...}
type FirewallApplicationRuleCollectionRuleProtocolInput interface {
	pulumi.Input

	ToFirewallApplicationRuleCollectionRuleProtocolOutput() FirewallApplicationRuleCollectionRuleProtocolOutput
	ToFirewallApplicationRuleCollectionRuleProtocolOutputWithContext(context.Context) FirewallApplicationRuleCollectionRuleProtocolOutput
}

type FirewallApplicationRuleCollectionRuleProtocolArgs struct {
	// Specify a port for the connection.
	Port pulumi.IntInput `pulumi:"port"`
	// Specifies the type of connection. Possible values are `Http`, `Https` and `Mssql`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FirewallApplicationRuleCollectionRuleProtocolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallApplicationRuleCollectionRuleProtocol)(nil)).Elem()
}

func (i FirewallApplicationRuleCollectionRuleProtocolArgs) ToFirewallApplicationRuleCollectionRuleProtocolOutput() FirewallApplicationRuleCollectionRuleProtocolOutput {
	return i.ToFirewallApplicationRuleCollectionRuleProtocolOutputWithContext(context.Background())
}

func (i FirewallApplicationRuleCollectionRuleProtocolArgs) ToFirewallApplicationRuleCollectionRuleProtocolOutputWithContext(ctx context.Context) FirewallApplicationRuleCollectionRuleProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallApplicationRuleCollectionRuleProtocolOutput)
}

// FirewallApplicationRuleCollectionRuleProtocolArrayInput is an input type that accepts FirewallApplicationRuleCollectionRuleProtocolArray and FirewallApplicationRuleCollectionRuleProtocolArrayOutput values.
// You can construct a concrete instance of `FirewallApplicationRuleCollectionRuleProtocolArrayInput` via:
//
//	FirewallApplicationRuleCollectionRuleProtocolArray{ FirewallApplicationRuleCollectionRuleProtocolArgs{...} }
type FirewallApplicationRuleCollectionRuleProtocolArrayInput interface {
	pulumi.Input

	ToFirewallApplicationRuleCollectionRuleProtocolArrayOutput() FirewallApplicationRuleCollectionRuleProtocolArrayOutput
	ToFirewallApplicationRuleCollectionRuleProtocolArrayOutputWithContext(context.Context) FirewallApplicationRuleCollectionRuleProtocolArrayOutput
}

type FirewallApplicationRuleCollectionRuleProtocolArray []FirewallApplicationRuleCollectionRuleProtocolInput

func (FirewallApplicationRuleCollectionRuleProtocolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallApplicationRuleCollectionRuleProtocol)(nil)).Elem()
}

func (i FirewallApplicationRuleCollectionRuleProtocolArray) ToFirewallApplicationRuleCollectionRuleProtocolArrayOutput() FirewallApplicationRuleCollectionRuleProtocolArrayOutput {
	return i.ToFirewallApplicationRuleCollectionRuleProtocolArrayOutputWithContext(context.Background())
}

func (i FirewallApplicationRuleCollectionRuleProtocolArray) ToFirewallApplicationRuleCollectionRuleProtocolArrayOutputWithContext(ctx context.Context) FirewallApplicationRuleCollectionRuleProtocolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallApplicationRuleCollectionRuleProtocolArrayOutput)
}

type FirewallApplicationRuleCollectionRuleProtocolOutput struct{ *pulumi.OutputState }

func (FirewallApplicationRuleCollectionRuleProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallApplicationRuleCollectionRuleProtocol)(nil)).Elem()
}

func (o FirewallApplicationRuleCollectionRuleProtocolOutput) ToFirewallApplicationRuleCollectionRuleProtocolOutput() FirewallApplicationRuleCollectionRuleProtocolOutput {
	return o
}

func (o FirewallApplicationRuleCollectionRuleProtocolOutput) ToFirewallApplicationRuleCollectionRuleProtocolOutputWithContext(ctx context.Context) FirewallApplicationRuleCollectionRuleProtocolOutput {
	return o
}

// Specify a port for the connection.
func (o FirewallApplicationRuleCollectionRuleProtocolOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v FirewallApplicationRuleCollectionRuleProtocol) int { return v.Port }).(pulumi.IntOutput)
}

// Specifies the type of connection. Possible values are `Http`, `Https` and `Mssql`.
func (o FirewallApplicationRuleCollectionRuleProtocolOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallApplicationRuleCollectionRuleProtocol) string { return v.Type }).(pulumi.StringOutput)
}

type FirewallApplicationRuleCollectionRuleProtocolArrayOutput struct{ *pulumi.OutputState }

func (FirewallApplicationRuleCollectionRuleProtocolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallApplicationRuleCollectionRuleProtocol)(nil)).Elem()
}

func (o FirewallApplicationRuleCollectionRuleProtocolArrayOutput) ToFirewallApplicationRuleCollectionRuleProtocolArrayOutput() FirewallApplicationRuleCollectionRuleProtocolArrayOutput {
	return o
}

func (o FirewallApplicationRuleCollectionRuleProtocolArrayOutput) ToFirewallApplicationRuleCollectionRuleProtocolArrayOutputWithContext(ctx context.Context) FirewallApplicationRuleCollectionRuleProtocolArrayOutput {
	return o
}

func (o FirewallApplicationRuleCollectionRuleProtocolArrayOutput) Index(i pulumi.IntInput) FirewallApplicationRuleCollectionRuleProtocolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallApplicationRuleCollectionRuleProtocol {
		return vs[0].([]FirewallApplicationRuleCollectionRuleProtocol)[vs[1].(int)]
	}).(FirewallApplicationRuleCollectionRuleProtocolOutput)
}

type FirewallIpConfiguration struct {
	// Specifies the name of the IP Configuration.
	Name string `pulumi:"name"`
	// The private IP address associated with the Firewall.
	PrivateIpAddress  *string `pulumi:"privateIpAddress"`
	PublicIpAddressId *string `pulumi:"publicIpAddressId"`
	// Reference to the subnet associated with the IP Configuration. Changing this forces a new resource to be created.
	//
	// > **NOTE** The Subnet used for the Firewall must have the name `AzureFirewallSubnet` and the subnet mask must be at least a `/26`.
	//
	// > **NOTE** At least one and only one `ipConfiguration` block may contain a `subnetId`.
	SubnetId *string `pulumi:"subnetId"`
}

// FirewallIpConfigurationInput is an input type that accepts FirewallIpConfigurationArgs and FirewallIpConfigurationOutput values.
// You can construct a concrete instance of `FirewallIpConfigurationInput` via:
//
//	FirewallIpConfigurationArgs{...}
type FirewallIpConfigurationInput interface {
	pulumi.Input

	ToFirewallIpConfigurationOutput() FirewallIpConfigurationOutput
	ToFirewallIpConfigurationOutputWithContext(context.Context) FirewallIpConfigurationOutput
}

type FirewallIpConfigurationArgs struct {
	// Specifies the name of the IP Configuration.
	Name pulumi.StringInput `pulumi:"name"`
	// The private IP address associated with the Firewall.
	PrivateIpAddress  pulumi.StringPtrInput `pulumi:"privateIpAddress"`
	PublicIpAddressId pulumi.StringPtrInput `pulumi:"publicIpAddressId"`
	// Reference to the subnet associated with the IP Configuration. Changing this forces a new resource to be created.
	//
	// > **NOTE** The Subnet used for the Firewall must have the name `AzureFirewallSubnet` and the subnet mask must be at least a `/26`.
	//
	// > **NOTE** At least one and only one `ipConfiguration` block may contain a `subnetId`.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (FirewallIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallIpConfiguration)(nil)).Elem()
}

func (i FirewallIpConfigurationArgs) ToFirewallIpConfigurationOutput() FirewallIpConfigurationOutput {
	return i.ToFirewallIpConfigurationOutputWithContext(context.Background())
}

func (i FirewallIpConfigurationArgs) ToFirewallIpConfigurationOutputWithContext(ctx context.Context) FirewallIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallIpConfigurationOutput)
}

// FirewallIpConfigurationArrayInput is an input type that accepts FirewallIpConfigurationArray and FirewallIpConfigurationArrayOutput values.
// You can construct a concrete instance of `FirewallIpConfigurationArrayInput` via:
//
//	FirewallIpConfigurationArray{ FirewallIpConfigurationArgs{...} }
type FirewallIpConfigurationArrayInput interface {
	pulumi.Input

	ToFirewallIpConfigurationArrayOutput() FirewallIpConfigurationArrayOutput
	ToFirewallIpConfigurationArrayOutputWithContext(context.Context) FirewallIpConfigurationArrayOutput
}

type FirewallIpConfigurationArray []FirewallIpConfigurationInput

func (FirewallIpConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallIpConfiguration)(nil)).Elem()
}

func (i FirewallIpConfigurationArray) ToFirewallIpConfigurationArrayOutput() FirewallIpConfigurationArrayOutput {
	return i.ToFirewallIpConfigurationArrayOutputWithContext(context.Background())
}

func (i FirewallIpConfigurationArray) ToFirewallIpConfigurationArrayOutputWithContext(ctx context.Context) FirewallIpConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallIpConfigurationArrayOutput)
}

type FirewallIpConfigurationOutput struct{ *pulumi.OutputState }

func (FirewallIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallIpConfiguration)(nil)).Elem()
}

func (o FirewallIpConfigurationOutput) ToFirewallIpConfigurationOutput() FirewallIpConfigurationOutput {
	return o
}

func (o FirewallIpConfigurationOutput) ToFirewallIpConfigurationOutputWithContext(ctx context.Context) FirewallIpConfigurationOutput {
	return o
}

// Specifies the name of the IP Configuration.
func (o FirewallIpConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallIpConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// The private IP address associated with the Firewall.
func (o FirewallIpConfigurationOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallIpConfiguration) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

func (o FirewallIpConfigurationOutput) PublicIpAddressId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallIpConfiguration) *string { return v.PublicIpAddressId }).(pulumi.StringPtrOutput)
}

// Reference to the subnet associated with the IP Configuration. Changing this forces a new resource to be created.
//
// > **NOTE** The Subnet used for the Firewall must have the name `AzureFirewallSubnet` and the subnet mask must be at least a `/26`.
//
// > **NOTE** At least one and only one `ipConfiguration` block may contain a `subnetId`.
func (o FirewallIpConfigurationOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallIpConfiguration) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type FirewallIpConfigurationArrayOutput struct{ *pulumi.OutputState }

func (FirewallIpConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallIpConfiguration)(nil)).Elem()
}

func (o FirewallIpConfigurationArrayOutput) ToFirewallIpConfigurationArrayOutput() FirewallIpConfigurationArrayOutput {
	return o
}

func (o FirewallIpConfigurationArrayOutput) ToFirewallIpConfigurationArrayOutputWithContext(ctx context.Context) FirewallIpConfigurationArrayOutput {
	return o
}

func (o FirewallIpConfigurationArrayOutput) Index(i pulumi.IntInput) FirewallIpConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallIpConfiguration {
		return vs[0].([]FirewallIpConfiguration)[vs[1].(int)]
	}).(FirewallIpConfigurationOutput)
}

type FirewallManagementIpConfiguration struct {
	// Specifies the name of the IP Configuration.
	Name string `pulumi:"name"`
	// The private IP address associated with the Firewall.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// The ID of the Public IP Address associated with the firewall.
	//
	// > **NOTE** The Public IP must have a `Static` allocation and `Standard` SKU.
	PublicIpAddressId string `pulumi:"publicIpAddressId"`
	// Reference to the subnet associated with the IP Configuration. Changing this forces a new resource to be created.
	//
	// > **NOTE** The Management Subnet used for the Firewall must have the name `AzureFirewallManagementSubnet` and the subnet mask must be at least a `/26`.
	SubnetId string `pulumi:"subnetId"`
}

// FirewallManagementIpConfigurationInput is an input type that accepts FirewallManagementIpConfigurationArgs and FirewallManagementIpConfigurationOutput values.
// You can construct a concrete instance of `FirewallManagementIpConfigurationInput` via:
//
//	FirewallManagementIpConfigurationArgs{...}
type FirewallManagementIpConfigurationInput interface {
	pulumi.Input

	ToFirewallManagementIpConfigurationOutput() FirewallManagementIpConfigurationOutput
	ToFirewallManagementIpConfigurationOutputWithContext(context.Context) FirewallManagementIpConfigurationOutput
}

type FirewallManagementIpConfigurationArgs struct {
	// Specifies the name of the IP Configuration.
	Name pulumi.StringInput `pulumi:"name"`
	// The private IP address associated with the Firewall.
	PrivateIpAddress pulumi.StringPtrInput `pulumi:"privateIpAddress"`
	// The ID of the Public IP Address associated with the firewall.
	//
	// > **NOTE** The Public IP must have a `Static` allocation and `Standard` SKU.
	PublicIpAddressId pulumi.StringInput `pulumi:"publicIpAddressId"`
	// Reference to the subnet associated with the IP Configuration. Changing this forces a new resource to be created.
	//
	// > **NOTE** The Management Subnet used for the Firewall must have the name `AzureFirewallManagementSubnet` and the subnet mask must be at least a `/26`.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (FirewallManagementIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallManagementIpConfiguration)(nil)).Elem()
}

func (i FirewallManagementIpConfigurationArgs) ToFirewallManagementIpConfigurationOutput() FirewallManagementIpConfigurationOutput {
	return i.ToFirewallManagementIpConfigurationOutputWithContext(context.Background())
}

func (i FirewallManagementIpConfigurationArgs) ToFirewallManagementIpConfigurationOutputWithContext(ctx context.Context) FirewallManagementIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallManagementIpConfigurationOutput)
}

func (i FirewallManagementIpConfigurationArgs) ToFirewallManagementIpConfigurationPtrOutput() FirewallManagementIpConfigurationPtrOutput {
	return i.ToFirewallManagementIpConfigurationPtrOutputWithContext(context.Background())
}

func (i FirewallManagementIpConfigurationArgs) ToFirewallManagementIpConfigurationPtrOutputWithContext(ctx context.Context) FirewallManagementIpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallManagementIpConfigurationOutput).ToFirewallManagementIpConfigurationPtrOutputWithContext(ctx)
}

// FirewallManagementIpConfigurationPtrInput is an input type that accepts FirewallManagementIpConfigurationArgs, FirewallManagementIpConfigurationPtr and FirewallManagementIpConfigurationPtrOutput values.
// You can construct a concrete instance of `FirewallManagementIpConfigurationPtrInput` via:
//
//	        FirewallManagementIpConfigurationArgs{...}
//
//	or:
//
//	        nil
type FirewallManagementIpConfigurationPtrInput interface {
	pulumi.Input

	ToFirewallManagementIpConfigurationPtrOutput() FirewallManagementIpConfigurationPtrOutput
	ToFirewallManagementIpConfigurationPtrOutputWithContext(context.Context) FirewallManagementIpConfigurationPtrOutput
}

type firewallManagementIpConfigurationPtrType FirewallManagementIpConfigurationArgs

func FirewallManagementIpConfigurationPtr(v *FirewallManagementIpConfigurationArgs) FirewallManagementIpConfigurationPtrInput {
	return (*firewallManagementIpConfigurationPtrType)(v)
}

func (*firewallManagementIpConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallManagementIpConfiguration)(nil)).Elem()
}

func (i *firewallManagementIpConfigurationPtrType) ToFirewallManagementIpConfigurationPtrOutput() FirewallManagementIpConfigurationPtrOutput {
	return i.ToFirewallManagementIpConfigurationPtrOutputWithContext(context.Background())
}

func (i *firewallManagementIpConfigurationPtrType) ToFirewallManagementIpConfigurationPtrOutputWithContext(ctx context.Context) FirewallManagementIpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallManagementIpConfigurationPtrOutput)
}

type FirewallManagementIpConfigurationOutput struct{ *pulumi.OutputState }

func (FirewallManagementIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallManagementIpConfiguration)(nil)).Elem()
}

func (o FirewallManagementIpConfigurationOutput) ToFirewallManagementIpConfigurationOutput() FirewallManagementIpConfigurationOutput {
	return o
}

func (o FirewallManagementIpConfigurationOutput) ToFirewallManagementIpConfigurationOutputWithContext(ctx context.Context) FirewallManagementIpConfigurationOutput {
	return o
}

func (o FirewallManagementIpConfigurationOutput) ToFirewallManagementIpConfigurationPtrOutput() FirewallManagementIpConfigurationPtrOutput {
	return o.ToFirewallManagementIpConfigurationPtrOutputWithContext(context.Background())
}

func (o FirewallManagementIpConfigurationOutput) ToFirewallManagementIpConfigurationPtrOutputWithContext(ctx context.Context) FirewallManagementIpConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallManagementIpConfiguration) *FirewallManagementIpConfiguration {
		return &v
	}).(FirewallManagementIpConfigurationPtrOutput)
}

// Specifies the name of the IP Configuration.
func (o FirewallManagementIpConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallManagementIpConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// The private IP address associated with the Firewall.
func (o FirewallManagementIpConfigurationOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallManagementIpConfiguration) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

// The ID of the Public IP Address associated with the firewall.
//
// > **NOTE** The Public IP must have a `Static` allocation and `Standard` SKU.
func (o FirewallManagementIpConfigurationOutput) PublicIpAddressId() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallManagementIpConfiguration) string { return v.PublicIpAddressId }).(pulumi.StringOutput)
}

// Reference to the subnet associated with the IP Configuration. Changing this forces a new resource to be created.
//
// > **NOTE** The Management Subnet used for the Firewall must have the name `AzureFirewallManagementSubnet` and the subnet mask must be at least a `/26`.
func (o FirewallManagementIpConfigurationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallManagementIpConfiguration) string { return v.SubnetId }).(pulumi.StringOutput)
}

type FirewallManagementIpConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirewallManagementIpConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallManagementIpConfiguration)(nil)).Elem()
}

func (o FirewallManagementIpConfigurationPtrOutput) ToFirewallManagementIpConfigurationPtrOutput() FirewallManagementIpConfigurationPtrOutput {
	return o
}

func (o FirewallManagementIpConfigurationPtrOutput) ToFirewallManagementIpConfigurationPtrOutputWithContext(ctx context.Context) FirewallManagementIpConfigurationPtrOutput {
	return o
}

func (o FirewallManagementIpConfigurationPtrOutput) Elem() FirewallManagementIpConfigurationOutput {
	return o.ApplyT(func(v *FirewallManagementIpConfiguration) FirewallManagementIpConfiguration {
		if v != nil {
			return *v
		}
		var ret FirewallManagementIpConfiguration
		return ret
	}).(FirewallManagementIpConfigurationOutput)
}

// Specifies the name of the IP Configuration.
func (o FirewallManagementIpConfigurationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallManagementIpConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The private IP address associated with the Firewall.
func (o FirewallManagementIpConfigurationPtrOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallManagementIpConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIpAddress
	}).(pulumi.StringPtrOutput)
}

// The ID of the Public IP Address associated with the firewall.
//
// > **NOTE** The Public IP must have a `Static` allocation and `Standard` SKU.
func (o FirewallManagementIpConfigurationPtrOutput) PublicIpAddressId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallManagementIpConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.PublicIpAddressId
	}).(pulumi.StringPtrOutput)
}

// Reference to the subnet associated with the IP Configuration. Changing this forces a new resource to be created.
//
// > **NOTE** The Management Subnet used for the Firewall must have the name `AzureFirewallManagementSubnet` and the subnet mask must be at least a `/26`.
func (o FirewallManagementIpConfigurationPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallManagementIpConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.SubnetId
	}).(pulumi.StringPtrOutput)
}

type FirewallNatRuleCollectionRule struct {
	// Specifies a description for the rule.
	Description *string `pulumi:"description"`
	// A list of destination IP addresses and/or IP ranges.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// A list of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Specifies the name of the rule.
	Name string `pulumi:"name"`
	// A list of protocols. Possible values are `Any`, `ICMP`, `TCP` and `UDP`. If `action` is `Dnat`, protocols can only be `TCP` and `UDP`.
	Protocols []string `pulumi:"protocols"`
	// A list of source IP addresses and/or IP ranges.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// A list of source IP Group IDs for the rule.
	//
	// > **NOTE** At least one of `sourceAddresses` and `sourceIpGroups` must be specified for a rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
	// The address of the service behind the Firewall.
	TranslatedAddress string `pulumi:"translatedAddress"`
	// The port of the service behind the Firewall.
	TranslatedPort string `pulumi:"translatedPort"`
}

// FirewallNatRuleCollectionRuleInput is an input type that accepts FirewallNatRuleCollectionRuleArgs and FirewallNatRuleCollectionRuleOutput values.
// You can construct a concrete instance of `FirewallNatRuleCollectionRuleInput` via:
//
//	FirewallNatRuleCollectionRuleArgs{...}
type FirewallNatRuleCollectionRuleInput interface {
	pulumi.Input

	ToFirewallNatRuleCollectionRuleOutput() FirewallNatRuleCollectionRuleOutput
	ToFirewallNatRuleCollectionRuleOutputWithContext(context.Context) FirewallNatRuleCollectionRuleOutput
}

type FirewallNatRuleCollectionRuleArgs struct {
	// Specifies a description for the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A list of destination IP addresses and/or IP ranges.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// A list of destination ports.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// Specifies the name of the rule.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of protocols. Possible values are `Any`, `ICMP`, `TCP` and `UDP`. If `action` is `Dnat`, protocols can only be `TCP` and `UDP`.
	Protocols pulumi.StringArrayInput `pulumi:"protocols"`
	// A list of source IP addresses and/or IP ranges.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// A list of source IP Group IDs for the rule.
	//
	// > **NOTE** At least one of `sourceAddresses` and `sourceIpGroups` must be specified for a rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
	// The address of the service behind the Firewall.
	TranslatedAddress pulumi.StringInput `pulumi:"translatedAddress"`
	// The port of the service behind the Firewall.
	TranslatedPort pulumi.StringInput `pulumi:"translatedPort"`
}

func (FirewallNatRuleCollectionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallNatRuleCollectionRule)(nil)).Elem()
}

func (i FirewallNatRuleCollectionRuleArgs) ToFirewallNatRuleCollectionRuleOutput() FirewallNatRuleCollectionRuleOutput {
	return i.ToFirewallNatRuleCollectionRuleOutputWithContext(context.Background())
}

func (i FirewallNatRuleCollectionRuleArgs) ToFirewallNatRuleCollectionRuleOutputWithContext(ctx context.Context) FirewallNatRuleCollectionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallNatRuleCollectionRuleOutput)
}

// FirewallNatRuleCollectionRuleArrayInput is an input type that accepts FirewallNatRuleCollectionRuleArray and FirewallNatRuleCollectionRuleArrayOutput values.
// You can construct a concrete instance of `FirewallNatRuleCollectionRuleArrayInput` via:
//
//	FirewallNatRuleCollectionRuleArray{ FirewallNatRuleCollectionRuleArgs{...} }
type FirewallNatRuleCollectionRuleArrayInput interface {
	pulumi.Input

	ToFirewallNatRuleCollectionRuleArrayOutput() FirewallNatRuleCollectionRuleArrayOutput
	ToFirewallNatRuleCollectionRuleArrayOutputWithContext(context.Context) FirewallNatRuleCollectionRuleArrayOutput
}

type FirewallNatRuleCollectionRuleArray []FirewallNatRuleCollectionRuleInput

func (FirewallNatRuleCollectionRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallNatRuleCollectionRule)(nil)).Elem()
}

func (i FirewallNatRuleCollectionRuleArray) ToFirewallNatRuleCollectionRuleArrayOutput() FirewallNatRuleCollectionRuleArrayOutput {
	return i.ToFirewallNatRuleCollectionRuleArrayOutputWithContext(context.Background())
}

func (i FirewallNatRuleCollectionRuleArray) ToFirewallNatRuleCollectionRuleArrayOutputWithContext(ctx context.Context) FirewallNatRuleCollectionRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallNatRuleCollectionRuleArrayOutput)
}

type FirewallNatRuleCollectionRuleOutput struct{ *pulumi.OutputState }

func (FirewallNatRuleCollectionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallNatRuleCollectionRule)(nil)).Elem()
}

func (o FirewallNatRuleCollectionRuleOutput) ToFirewallNatRuleCollectionRuleOutput() FirewallNatRuleCollectionRuleOutput {
	return o
}

func (o FirewallNatRuleCollectionRuleOutput) ToFirewallNatRuleCollectionRuleOutputWithContext(ctx context.Context) FirewallNatRuleCollectionRuleOutput {
	return o
}

// Specifies a description for the rule.
func (o FirewallNatRuleCollectionRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallNatRuleCollectionRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A list of destination IP addresses and/or IP ranges.
func (o FirewallNatRuleCollectionRuleOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallNatRuleCollectionRule) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// A list of destination ports.
func (o FirewallNatRuleCollectionRuleOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallNatRuleCollectionRule) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Specifies the name of the rule.
func (o FirewallNatRuleCollectionRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallNatRuleCollectionRule) string { return v.Name }).(pulumi.StringOutput)
}

// A list of protocols. Possible values are `Any`, `ICMP`, `TCP` and `UDP`. If `action` is `Dnat`, protocols can only be `TCP` and `UDP`.
func (o FirewallNatRuleCollectionRuleOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallNatRuleCollectionRule) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

// A list of source IP addresses and/or IP ranges.
func (o FirewallNatRuleCollectionRuleOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallNatRuleCollectionRule) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// A list of source IP Group IDs for the rule.
//
// > **NOTE** At least one of `sourceAddresses` and `sourceIpGroups` must be specified for a rule.
func (o FirewallNatRuleCollectionRuleOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallNatRuleCollectionRule) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// The address of the service behind the Firewall.
func (o FirewallNatRuleCollectionRuleOutput) TranslatedAddress() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallNatRuleCollectionRule) string { return v.TranslatedAddress }).(pulumi.StringOutput)
}

// The port of the service behind the Firewall.
func (o FirewallNatRuleCollectionRuleOutput) TranslatedPort() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallNatRuleCollectionRule) string { return v.TranslatedPort }).(pulumi.StringOutput)
}

type FirewallNatRuleCollectionRuleArrayOutput struct{ *pulumi.OutputState }

func (FirewallNatRuleCollectionRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallNatRuleCollectionRule)(nil)).Elem()
}

func (o FirewallNatRuleCollectionRuleArrayOutput) ToFirewallNatRuleCollectionRuleArrayOutput() FirewallNatRuleCollectionRuleArrayOutput {
	return o
}

func (o FirewallNatRuleCollectionRuleArrayOutput) ToFirewallNatRuleCollectionRuleArrayOutputWithContext(ctx context.Context) FirewallNatRuleCollectionRuleArrayOutput {
	return o
}

func (o FirewallNatRuleCollectionRuleArrayOutput) Index(i pulumi.IntInput) FirewallNatRuleCollectionRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallNatRuleCollectionRule {
		return vs[0].([]FirewallNatRuleCollectionRule)[vs[1].(int)]
	}).(FirewallNatRuleCollectionRuleOutput)
}

type FirewallNetworkRuleCollectionRule struct {
	// Specifies a description for the rule.
	Description *string `pulumi:"description"`
	// Either a list of destination IP addresses and/or IP ranges, or a list of destination [Service Tags](https://docs.microsoft.com/azure/virtual-network/service-tags-overview#available-service-tags).
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// A list of destination FQDNS for the rule.
	//
	// > **NOTE** [You must enable DNS Proxy to use FQDNs in your network rules](https://docs.microsoft.com/azure/firewall/fqdn-filtering-network-rules).
	//
	// > **NOTE** At least one of `destinationAddresses`, `destinationIpGroups` and `destinationFqdns` must be specified for a rule.
	DestinationFqdns []string `pulumi:"destinationFqdns"`
	// A list of destination IP Group IDs for the rule.
	DestinationIpGroups []string `pulumi:"destinationIpGroups"`
	// A list of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Specifies the name of the rule.
	Name string `pulumi:"name"`
	// A list of protocols. Possible values are `Any`, `ICMP`, `TCP` and `UDP`.
	Protocols []string `pulumi:"protocols"`
	// A list of source IP addresses and/or IP ranges.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// A list of IP Group IDs for the rule.
	//
	// > **NOTE** At least one of `sourceAddresses` and `sourceIpGroups` must be specified for a rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
}

// FirewallNetworkRuleCollectionRuleInput is an input type that accepts FirewallNetworkRuleCollectionRuleArgs and FirewallNetworkRuleCollectionRuleOutput values.
// You can construct a concrete instance of `FirewallNetworkRuleCollectionRuleInput` via:
//
//	FirewallNetworkRuleCollectionRuleArgs{...}
type FirewallNetworkRuleCollectionRuleInput interface {
	pulumi.Input

	ToFirewallNetworkRuleCollectionRuleOutput() FirewallNetworkRuleCollectionRuleOutput
	ToFirewallNetworkRuleCollectionRuleOutputWithContext(context.Context) FirewallNetworkRuleCollectionRuleOutput
}

type FirewallNetworkRuleCollectionRuleArgs struct {
	// Specifies a description for the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Either a list of destination IP addresses and/or IP ranges, or a list of destination [Service Tags](https://docs.microsoft.com/azure/virtual-network/service-tags-overview#available-service-tags).
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// A list of destination FQDNS for the rule.
	//
	// > **NOTE** [You must enable DNS Proxy to use FQDNs in your network rules](https://docs.microsoft.com/azure/firewall/fqdn-filtering-network-rules).
	//
	// > **NOTE** At least one of `destinationAddresses`, `destinationIpGroups` and `destinationFqdns` must be specified for a rule.
	DestinationFqdns pulumi.StringArrayInput `pulumi:"destinationFqdns"`
	// A list of destination IP Group IDs for the rule.
	DestinationIpGroups pulumi.StringArrayInput `pulumi:"destinationIpGroups"`
	// A list of destination ports.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// Specifies the name of the rule.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of protocols. Possible values are `Any`, `ICMP`, `TCP` and `UDP`.
	Protocols pulumi.StringArrayInput `pulumi:"protocols"`
	// A list of source IP addresses and/or IP ranges.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// A list of IP Group IDs for the rule.
	//
	// > **NOTE** At least one of `sourceAddresses` and `sourceIpGroups` must be specified for a rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
}

func (FirewallNetworkRuleCollectionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallNetworkRuleCollectionRule)(nil)).Elem()
}

func (i FirewallNetworkRuleCollectionRuleArgs) ToFirewallNetworkRuleCollectionRuleOutput() FirewallNetworkRuleCollectionRuleOutput {
	return i.ToFirewallNetworkRuleCollectionRuleOutputWithContext(context.Background())
}

func (i FirewallNetworkRuleCollectionRuleArgs) ToFirewallNetworkRuleCollectionRuleOutputWithContext(ctx context.Context) FirewallNetworkRuleCollectionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallNetworkRuleCollectionRuleOutput)
}

// FirewallNetworkRuleCollectionRuleArrayInput is an input type that accepts FirewallNetworkRuleCollectionRuleArray and FirewallNetworkRuleCollectionRuleArrayOutput values.
// You can construct a concrete instance of `FirewallNetworkRuleCollectionRuleArrayInput` via:
//
//	FirewallNetworkRuleCollectionRuleArray{ FirewallNetworkRuleCollectionRuleArgs{...} }
type FirewallNetworkRuleCollectionRuleArrayInput interface {
	pulumi.Input

	ToFirewallNetworkRuleCollectionRuleArrayOutput() FirewallNetworkRuleCollectionRuleArrayOutput
	ToFirewallNetworkRuleCollectionRuleArrayOutputWithContext(context.Context) FirewallNetworkRuleCollectionRuleArrayOutput
}

type FirewallNetworkRuleCollectionRuleArray []FirewallNetworkRuleCollectionRuleInput

func (FirewallNetworkRuleCollectionRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallNetworkRuleCollectionRule)(nil)).Elem()
}

func (i FirewallNetworkRuleCollectionRuleArray) ToFirewallNetworkRuleCollectionRuleArrayOutput() FirewallNetworkRuleCollectionRuleArrayOutput {
	return i.ToFirewallNetworkRuleCollectionRuleArrayOutputWithContext(context.Background())
}

func (i FirewallNetworkRuleCollectionRuleArray) ToFirewallNetworkRuleCollectionRuleArrayOutputWithContext(ctx context.Context) FirewallNetworkRuleCollectionRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallNetworkRuleCollectionRuleArrayOutput)
}

type FirewallNetworkRuleCollectionRuleOutput struct{ *pulumi.OutputState }

func (FirewallNetworkRuleCollectionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallNetworkRuleCollectionRule)(nil)).Elem()
}

func (o FirewallNetworkRuleCollectionRuleOutput) ToFirewallNetworkRuleCollectionRuleOutput() FirewallNetworkRuleCollectionRuleOutput {
	return o
}

func (o FirewallNetworkRuleCollectionRuleOutput) ToFirewallNetworkRuleCollectionRuleOutputWithContext(ctx context.Context) FirewallNetworkRuleCollectionRuleOutput {
	return o
}

// Specifies a description for the rule.
func (o FirewallNetworkRuleCollectionRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallNetworkRuleCollectionRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Either a list of destination IP addresses and/or IP ranges, or a list of destination [Service Tags](https://docs.microsoft.com/azure/virtual-network/service-tags-overview#available-service-tags).
func (o FirewallNetworkRuleCollectionRuleOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallNetworkRuleCollectionRule) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// A list of destination FQDNS for the rule.
//
// > **NOTE** [You must enable DNS Proxy to use FQDNs in your network rules](https://docs.microsoft.com/azure/firewall/fqdn-filtering-network-rules).
//
// > **NOTE** At least one of `destinationAddresses`, `destinationIpGroups` and `destinationFqdns` must be specified for a rule.
func (o FirewallNetworkRuleCollectionRuleOutput) DestinationFqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallNetworkRuleCollectionRule) []string { return v.DestinationFqdns }).(pulumi.StringArrayOutput)
}

// A list of destination IP Group IDs for the rule.
func (o FirewallNetworkRuleCollectionRuleOutput) DestinationIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallNetworkRuleCollectionRule) []string { return v.DestinationIpGroups }).(pulumi.StringArrayOutput)
}

// A list of destination ports.
func (o FirewallNetworkRuleCollectionRuleOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallNetworkRuleCollectionRule) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Specifies the name of the rule.
func (o FirewallNetworkRuleCollectionRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallNetworkRuleCollectionRule) string { return v.Name }).(pulumi.StringOutput)
}

// A list of protocols. Possible values are `Any`, `ICMP`, `TCP` and `UDP`.
func (o FirewallNetworkRuleCollectionRuleOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallNetworkRuleCollectionRule) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

// A list of source IP addresses and/or IP ranges.
func (o FirewallNetworkRuleCollectionRuleOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallNetworkRuleCollectionRule) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// A list of IP Group IDs for the rule.
//
// > **NOTE** At least one of `sourceAddresses` and `sourceIpGroups` must be specified for a rule.
func (o FirewallNetworkRuleCollectionRuleOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallNetworkRuleCollectionRule) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

type FirewallNetworkRuleCollectionRuleArrayOutput struct{ *pulumi.OutputState }

func (FirewallNetworkRuleCollectionRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallNetworkRuleCollectionRule)(nil)).Elem()
}

func (o FirewallNetworkRuleCollectionRuleArrayOutput) ToFirewallNetworkRuleCollectionRuleArrayOutput() FirewallNetworkRuleCollectionRuleArrayOutput {
	return o
}

func (o FirewallNetworkRuleCollectionRuleArrayOutput) ToFirewallNetworkRuleCollectionRuleArrayOutputWithContext(ctx context.Context) FirewallNetworkRuleCollectionRuleArrayOutput {
	return o
}

func (o FirewallNetworkRuleCollectionRuleArrayOutput) Index(i pulumi.IntInput) FirewallNetworkRuleCollectionRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallNetworkRuleCollectionRule {
		return vs[0].([]FirewallNetworkRuleCollectionRule)[vs[1].(int)]
	}).(FirewallNetworkRuleCollectionRuleOutput)
}

type FirewallPolicyDns struct {
	// Whether to enable DNS proxy on Firewalls attached to this Firewall Policy? Defaults to `false`.
	ProxyEnabled *bool `pulumi:"proxyEnabled"`
	// A list of custom DNS servers' IP addresses.
	Servers []string `pulumi:"servers"`
}

// FirewallPolicyDnsInput is an input type that accepts FirewallPolicyDnsArgs and FirewallPolicyDnsOutput values.
// You can construct a concrete instance of `FirewallPolicyDnsInput` via:
//
//	FirewallPolicyDnsArgs{...}
type FirewallPolicyDnsInput interface {
	pulumi.Input

	ToFirewallPolicyDnsOutput() FirewallPolicyDnsOutput
	ToFirewallPolicyDnsOutputWithContext(context.Context) FirewallPolicyDnsOutput
}

type FirewallPolicyDnsArgs struct {
	// Whether to enable DNS proxy on Firewalls attached to this Firewall Policy? Defaults to `false`.
	ProxyEnabled pulumi.BoolPtrInput `pulumi:"proxyEnabled"`
	// A list of custom DNS servers' IP addresses.
	Servers pulumi.StringArrayInput `pulumi:"servers"`
}

func (FirewallPolicyDnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyDns)(nil)).Elem()
}

func (i FirewallPolicyDnsArgs) ToFirewallPolicyDnsOutput() FirewallPolicyDnsOutput {
	return i.ToFirewallPolicyDnsOutputWithContext(context.Background())
}

func (i FirewallPolicyDnsArgs) ToFirewallPolicyDnsOutputWithContext(ctx context.Context) FirewallPolicyDnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyDnsOutput)
}

func (i FirewallPolicyDnsArgs) ToFirewallPolicyDnsPtrOutput() FirewallPolicyDnsPtrOutput {
	return i.ToFirewallPolicyDnsPtrOutputWithContext(context.Background())
}

func (i FirewallPolicyDnsArgs) ToFirewallPolicyDnsPtrOutputWithContext(ctx context.Context) FirewallPolicyDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyDnsOutput).ToFirewallPolicyDnsPtrOutputWithContext(ctx)
}

// FirewallPolicyDnsPtrInput is an input type that accepts FirewallPolicyDnsArgs, FirewallPolicyDnsPtr and FirewallPolicyDnsPtrOutput values.
// You can construct a concrete instance of `FirewallPolicyDnsPtrInput` via:
//
//	        FirewallPolicyDnsArgs{...}
//
//	or:
//
//	        nil
type FirewallPolicyDnsPtrInput interface {
	pulumi.Input

	ToFirewallPolicyDnsPtrOutput() FirewallPolicyDnsPtrOutput
	ToFirewallPolicyDnsPtrOutputWithContext(context.Context) FirewallPolicyDnsPtrOutput
}

type firewallPolicyDnsPtrType FirewallPolicyDnsArgs

func FirewallPolicyDnsPtr(v *FirewallPolicyDnsArgs) FirewallPolicyDnsPtrInput {
	return (*firewallPolicyDnsPtrType)(v)
}

func (*firewallPolicyDnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyDns)(nil)).Elem()
}

func (i *firewallPolicyDnsPtrType) ToFirewallPolicyDnsPtrOutput() FirewallPolicyDnsPtrOutput {
	return i.ToFirewallPolicyDnsPtrOutputWithContext(context.Background())
}

func (i *firewallPolicyDnsPtrType) ToFirewallPolicyDnsPtrOutputWithContext(ctx context.Context) FirewallPolicyDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyDnsPtrOutput)
}

type FirewallPolicyDnsOutput struct{ *pulumi.OutputState }

func (FirewallPolicyDnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyDns)(nil)).Elem()
}

func (o FirewallPolicyDnsOutput) ToFirewallPolicyDnsOutput() FirewallPolicyDnsOutput {
	return o
}

func (o FirewallPolicyDnsOutput) ToFirewallPolicyDnsOutputWithContext(ctx context.Context) FirewallPolicyDnsOutput {
	return o
}

func (o FirewallPolicyDnsOutput) ToFirewallPolicyDnsPtrOutput() FirewallPolicyDnsPtrOutput {
	return o.ToFirewallPolicyDnsPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyDnsOutput) ToFirewallPolicyDnsPtrOutputWithContext(ctx context.Context) FirewallPolicyDnsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallPolicyDns) *FirewallPolicyDns {
		return &v
	}).(FirewallPolicyDnsPtrOutput)
}

// Whether to enable DNS proxy on Firewalls attached to this Firewall Policy? Defaults to `false`.
func (o FirewallPolicyDnsOutput) ProxyEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallPolicyDns) *bool { return v.ProxyEnabled }).(pulumi.BoolPtrOutput)
}

// A list of custom DNS servers' IP addresses.
func (o FirewallPolicyDnsOutput) Servers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyDns) []string { return v.Servers }).(pulumi.StringArrayOutput)
}

type FirewallPolicyDnsPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyDnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyDns)(nil)).Elem()
}

func (o FirewallPolicyDnsPtrOutput) ToFirewallPolicyDnsPtrOutput() FirewallPolicyDnsPtrOutput {
	return o
}

func (o FirewallPolicyDnsPtrOutput) ToFirewallPolicyDnsPtrOutputWithContext(ctx context.Context) FirewallPolicyDnsPtrOutput {
	return o
}

func (o FirewallPolicyDnsPtrOutput) Elem() FirewallPolicyDnsOutput {
	return o.ApplyT(func(v *FirewallPolicyDns) FirewallPolicyDns {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyDns
		return ret
	}).(FirewallPolicyDnsOutput)
}

// Whether to enable DNS proxy on Firewalls attached to this Firewall Policy? Defaults to `false`.
func (o FirewallPolicyDnsPtrOutput) ProxyEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyDns) *bool {
		if v == nil {
			return nil
		}
		return v.ProxyEnabled
	}).(pulumi.BoolPtrOutput)
}

// A list of custom DNS servers' IP addresses.
func (o FirewallPolicyDnsPtrOutput) Servers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyDns) []string {
		if v == nil {
			return nil
		}
		return v.Servers
	}).(pulumi.StringArrayOutput)
}

type FirewallPolicyExplicitProxy struct {
	// Whether the pac file port and url need to be provided.
	EnablePacFile *bool `pulumi:"enablePacFile"`
	// Whether the explicit proxy is enabled for this Firewall Policy.
	Enabled *bool `pulumi:"enabled"`
	// The port number for explicit http protocol.
	HttpPort *int `pulumi:"httpPort"`
	// The port number for explicit proxy https protocol.
	HttpsPort *int `pulumi:"httpsPort"`
	// Specifies a SAS URL for PAC file.
	PacFile *string `pulumi:"pacFile"`
	// Specifies a port number for firewall to serve PAC file.
	PacFilePort *int `pulumi:"pacFilePort"`
}

// FirewallPolicyExplicitProxyInput is an input type that accepts FirewallPolicyExplicitProxyArgs and FirewallPolicyExplicitProxyOutput values.
// You can construct a concrete instance of `FirewallPolicyExplicitProxyInput` via:
//
//	FirewallPolicyExplicitProxyArgs{...}
type FirewallPolicyExplicitProxyInput interface {
	pulumi.Input

	ToFirewallPolicyExplicitProxyOutput() FirewallPolicyExplicitProxyOutput
	ToFirewallPolicyExplicitProxyOutputWithContext(context.Context) FirewallPolicyExplicitProxyOutput
}

type FirewallPolicyExplicitProxyArgs struct {
	// Whether the pac file port and url need to be provided.
	EnablePacFile pulumi.BoolPtrInput `pulumi:"enablePacFile"`
	// Whether the explicit proxy is enabled for this Firewall Policy.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The port number for explicit http protocol.
	HttpPort pulumi.IntPtrInput `pulumi:"httpPort"`
	// The port number for explicit proxy https protocol.
	HttpsPort pulumi.IntPtrInput `pulumi:"httpsPort"`
	// Specifies a SAS URL for PAC file.
	PacFile pulumi.StringPtrInput `pulumi:"pacFile"`
	// Specifies a port number for firewall to serve PAC file.
	PacFilePort pulumi.IntPtrInput `pulumi:"pacFilePort"`
}

func (FirewallPolicyExplicitProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyExplicitProxy)(nil)).Elem()
}

func (i FirewallPolicyExplicitProxyArgs) ToFirewallPolicyExplicitProxyOutput() FirewallPolicyExplicitProxyOutput {
	return i.ToFirewallPolicyExplicitProxyOutputWithContext(context.Background())
}

func (i FirewallPolicyExplicitProxyArgs) ToFirewallPolicyExplicitProxyOutputWithContext(ctx context.Context) FirewallPolicyExplicitProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyExplicitProxyOutput)
}

func (i FirewallPolicyExplicitProxyArgs) ToFirewallPolicyExplicitProxyPtrOutput() FirewallPolicyExplicitProxyPtrOutput {
	return i.ToFirewallPolicyExplicitProxyPtrOutputWithContext(context.Background())
}

func (i FirewallPolicyExplicitProxyArgs) ToFirewallPolicyExplicitProxyPtrOutputWithContext(ctx context.Context) FirewallPolicyExplicitProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyExplicitProxyOutput).ToFirewallPolicyExplicitProxyPtrOutputWithContext(ctx)
}

// FirewallPolicyExplicitProxyPtrInput is an input type that accepts FirewallPolicyExplicitProxyArgs, FirewallPolicyExplicitProxyPtr and FirewallPolicyExplicitProxyPtrOutput values.
// You can construct a concrete instance of `FirewallPolicyExplicitProxyPtrInput` via:
//
//	        FirewallPolicyExplicitProxyArgs{...}
//
//	or:
//
//	        nil
type FirewallPolicyExplicitProxyPtrInput interface {
	pulumi.Input

	ToFirewallPolicyExplicitProxyPtrOutput() FirewallPolicyExplicitProxyPtrOutput
	ToFirewallPolicyExplicitProxyPtrOutputWithContext(context.Context) FirewallPolicyExplicitProxyPtrOutput
}

type firewallPolicyExplicitProxyPtrType FirewallPolicyExplicitProxyArgs

func FirewallPolicyExplicitProxyPtr(v *FirewallPolicyExplicitProxyArgs) FirewallPolicyExplicitProxyPtrInput {
	return (*firewallPolicyExplicitProxyPtrType)(v)
}

func (*firewallPolicyExplicitProxyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyExplicitProxy)(nil)).Elem()
}

func (i *firewallPolicyExplicitProxyPtrType) ToFirewallPolicyExplicitProxyPtrOutput() FirewallPolicyExplicitProxyPtrOutput {
	return i.ToFirewallPolicyExplicitProxyPtrOutputWithContext(context.Background())
}

func (i *firewallPolicyExplicitProxyPtrType) ToFirewallPolicyExplicitProxyPtrOutputWithContext(ctx context.Context) FirewallPolicyExplicitProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyExplicitProxyPtrOutput)
}

type FirewallPolicyExplicitProxyOutput struct{ *pulumi.OutputState }

func (FirewallPolicyExplicitProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyExplicitProxy)(nil)).Elem()
}

func (o FirewallPolicyExplicitProxyOutput) ToFirewallPolicyExplicitProxyOutput() FirewallPolicyExplicitProxyOutput {
	return o
}

func (o FirewallPolicyExplicitProxyOutput) ToFirewallPolicyExplicitProxyOutputWithContext(ctx context.Context) FirewallPolicyExplicitProxyOutput {
	return o
}

func (o FirewallPolicyExplicitProxyOutput) ToFirewallPolicyExplicitProxyPtrOutput() FirewallPolicyExplicitProxyPtrOutput {
	return o.ToFirewallPolicyExplicitProxyPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyExplicitProxyOutput) ToFirewallPolicyExplicitProxyPtrOutputWithContext(ctx context.Context) FirewallPolicyExplicitProxyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallPolicyExplicitProxy) *FirewallPolicyExplicitProxy {
		return &v
	}).(FirewallPolicyExplicitProxyPtrOutput)
}

// Whether the pac file port and url need to be provided.
func (o FirewallPolicyExplicitProxyOutput) EnablePacFile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallPolicyExplicitProxy) *bool { return v.EnablePacFile }).(pulumi.BoolPtrOutput)
}

// Whether the explicit proxy is enabled for this Firewall Policy.
func (o FirewallPolicyExplicitProxyOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallPolicyExplicitProxy) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The port number for explicit http protocol.
func (o FirewallPolicyExplicitProxyOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyExplicitProxy) *int { return v.HttpPort }).(pulumi.IntPtrOutput)
}

// The port number for explicit proxy https protocol.
func (o FirewallPolicyExplicitProxyOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyExplicitProxy) *int { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

// Specifies a SAS URL for PAC file.
func (o FirewallPolicyExplicitProxyOutput) PacFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyExplicitProxy) *string { return v.PacFile }).(pulumi.StringPtrOutput)
}

// Specifies a port number for firewall to serve PAC file.
func (o FirewallPolicyExplicitProxyOutput) PacFilePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyExplicitProxy) *int { return v.PacFilePort }).(pulumi.IntPtrOutput)
}

type FirewallPolicyExplicitProxyPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyExplicitProxyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyExplicitProxy)(nil)).Elem()
}

func (o FirewallPolicyExplicitProxyPtrOutput) ToFirewallPolicyExplicitProxyPtrOutput() FirewallPolicyExplicitProxyPtrOutput {
	return o
}

func (o FirewallPolicyExplicitProxyPtrOutput) ToFirewallPolicyExplicitProxyPtrOutputWithContext(ctx context.Context) FirewallPolicyExplicitProxyPtrOutput {
	return o
}

func (o FirewallPolicyExplicitProxyPtrOutput) Elem() FirewallPolicyExplicitProxyOutput {
	return o.ApplyT(func(v *FirewallPolicyExplicitProxy) FirewallPolicyExplicitProxy {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyExplicitProxy
		return ret
	}).(FirewallPolicyExplicitProxyOutput)
}

// Whether the pac file port and url need to be provided.
func (o FirewallPolicyExplicitProxyPtrOutput) EnablePacFile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyExplicitProxy) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePacFile
	}).(pulumi.BoolPtrOutput)
}

// Whether the explicit proxy is enabled for this Firewall Policy.
func (o FirewallPolicyExplicitProxyPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyExplicitProxy) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The port number for explicit http protocol.
func (o FirewallPolicyExplicitProxyPtrOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyExplicitProxy) *int {
		if v == nil {
			return nil
		}
		return v.HttpPort
	}).(pulumi.IntPtrOutput)
}

// The port number for explicit proxy https protocol.
func (o FirewallPolicyExplicitProxyPtrOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyExplicitProxy) *int {
		if v == nil {
			return nil
		}
		return v.HttpsPort
	}).(pulumi.IntPtrOutput)
}

// Specifies a SAS URL for PAC file.
func (o FirewallPolicyExplicitProxyPtrOutput) PacFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyExplicitProxy) *string {
		if v == nil {
			return nil
		}
		return v.PacFile
	}).(pulumi.StringPtrOutput)
}

// Specifies a port number for firewall to serve PAC file.
func (o FirewallPolicyExplicitProxyPtrOutput) PacFilePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyExplicitProxy) *int {
		if v == nil {
			return nil
		}
		return v.PacFilePort
	}).(pulumi.IntPtrOutput)
}

type FirewallPolicyIdentity struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Firewall Policy.
	IdentityIds []string `pulumi:"identityIds"`
	PrincipalId *string  `pulumi:"principalId"`
	TenantId    *string  `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this Firewall Policy. Only possible value is `UserAssigned`.
	Type string `pulumi:"type"`
}

// FirewallPolicyIdentityInput is an input type that accepts FirewallPolicyIdentityArgs and FirewallPolicyIdentityOutput values.
// You can construct a concrete instance of `FirewallPolicyIdentityInput` via:
//
//	FirewallPolicyIdentityArgs{...}
type FirewallPolicyIdentityInput interface {
	pulumi.Input

	ToFirewallPolicyIdentityOutput() FirewallPolicyIdentityOutput
	ToFirewallPolicyIdentityOutputWithContext(context.Context) FirewallPolicyIdentityOutput
}

type FirewallPolicyIdentityArgs struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Firewall Policy.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	PrincipalId pulumi.StringPtrInput   `pulumi:"principalId"`
	TenantId    pulumi.StringPtrInput   `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this Firewall Policy. Only possible value is `UserAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FirewallPolicyIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIdentity)(nil)).Elem()
}

func (i FirewallPolicyIdentityArgs) ToFirewallPolicyIdentityOutput() FirewallPolicyIdentityOutput {
	return i.ToFirewallPolicyIdentityOutputWithContext(context.Background())
}

func (i FirewallPolicyIdentityArgs) ToFirewallPolicyIdentityOutputWithContext(ctx context.Context) FirewallPolicyIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIdentityOutput)
}

func (i FirewallPolicyIdentityArgs) ToFirewallPolicyIdentityPtrOutput() FirewallPolicyIdentityPtrOutput {
	return i.ToFirewallPolicyIdentityPtrOutputWithContext(context.Background())
}

func (i FirewallPolicyIdentityArgs) ToFirewallPolicyIdentityPtrOutputWithContext(ctx context.Context) FirewallPolicyIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIdentityOutput).ToFirewallPolicyIdentityPtrOutputWithContext(ctx)
}

// FirewallPolicyIdentityPtrInput is an input type that accepts FirewallPolicyIdentityArgs, FirewallPolicyIdentityPtr and FirewallPolicyIdentityPtrOutput values.
// You can construct a concrete instance of `FirewallPolicyIdentityPtrInput` via:
//
//	        FirewallPolicyIdentityArgs{...}
//
//	or:
//
//	        nil
type FirewallPolicyIdentityPtrInput interface {
	pulumi.Input

	ToFirewallPolicyIdentityPtrOutput() FirewallPolicyIdentityPtrOutput
	ToFirewallPolicyIdentityPtrOutputWithContext(context.Context) FirewallPolicyIdentityPtrOutput
}

type firewallPolicyIdentityPtrType FirewallPolicyIdentityArgs

func FirewallPolicyIdentityPtr(v *FirewallPolicyIdentityArgs) FirewallPolicyIdentityPtrInput {
	return (*firewallPolicyIdentityPtrType)(v)
}

func (*firewallPolicyIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyIdentity)(nil)).Elem()
}

func (i *firewallPolicyIdentityPtrType) ToFirewallPolicyIdentityPtrOutput() FirewallPolicyIdentityPtrOutput {
	return i.ToFirewallPolicyIdentityPtrOutputWithContext(context.Background())
}

func (i *firewallPolicyIdentityPtrType) ToFirewallPolicyIdentityPtrOutputWithContext(ctx context.Context) FirewallPolicyIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIdentityPtrOutput)
}

type FirewallPolicyIdentityOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIdentity)(nil)).Elem()
}

func (o FirewallPolicyIdentityOutput) ToFirewallPolicyIdentityOutput() FirewallPolicyIdentityOutput {
	return o
}

func (o FirewallPolicyIdentityOutput) ToFirewallPolicyIdentityOutputWithContext(ctx context.Context) FirewallPolicyIdentityOutput {
	return o
}

func (o FirewallPolicyIdentityOutput) ToFirewallPolicyIdentityPtrOutput() FirewallPolicyIdentityPtrOutput {
	return o.ToFirewallPolicyIdentityPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyIdentityOutput) ToFirewallPolicyIdentityPtrOutputWithContext(ctx context.Context) FirewallPolicyIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallPolicyIdentity) *FirewallPolicyIdentity {
		return &v
	}).(FirewallPolicyIdentityPtrOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Firewall Policy.
func (o FirewallPolicyIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

func (o FirewallPolicyIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

func (o FirewallPolicyIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Firewall Policy. Only possible value is `UserAssigned`.
func (o FirewallPolicyIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type FirewallPolicyIdentityPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyIdentity)(nil)).Elem()
}

func (o FirewallPolicyIdentityPtrOutput) ToFirewallPolicyIdentityPtrOutput() FirewallPolicyIdentityPtrOutput {
	return o
}

func (o FirewallPolicyIdentityPtrOutput) ToFirewallPolicyIdentityPtrOutputWithContext(ctx context.Context) FirewallPolicyIdentityPtrOutput {
	return o
}

func (o FirewallPolicyIdentityPtrOutput) Elem() FirewallPolicyIdentityOutput {
	return o.ApplyT(func(v *FirewallPolicyIdentity) FirewallPolicyIdentity {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyIdentity
		return ret
	}).(FirewallPolicyIdentityOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Firewall Policy.
func (o FirewallPolicyIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

func (o FirewallPolicyIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

func (o FirewallPolicyIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Firewall Policy. Only possible value is `UserAssigned`.
func (o FirewallPolicyIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type FirewallPolicyInsights struct {
	// The ID of the default Log Analytics Workspace that the Firewalls associated with this Firewall Policy will send their logs to, when there is no location matches in the `logAnalyticsWorkspace`.
	DefaultLogAnalyticsWorkspaceId string `pulumi:"defaultLogAnalyticsWorkspaceId"`
	// Whether the insights functionality is enabled for this Firewall Policy.
	Enabled bool `pulumi:"enabled"`
	// A list of `logAnalyticsWorkspace` block as defined below.
	LogAnalyticsWorkspaces []FirewallPolicyInsightsLogAnalyticsWorkspace `pulumi:"logAnalyticsWorkspaces"`
	// The log retention period in days.
	RetentionInDays *int `pulumi:"retentionInDays"`
}

// FirewallPolicyInsightsInput is an input type that accepts FirewallPolicyInsightsArgs and FirewallPolicyInsightsOutput values.
// You can construct a concrete instance of `FirewallPolicyInsightsInput` via:
//
//	FirewallPolicyInsightsArgs{...}
type FirewallPolicyInsightsInput interface {
	pulumi.Input

	ToFirewallPolicyInsightsOutput() FirewallPolicyInsightsOutput
	ToFirewallPolicyInsightsOutputWithContext(context.Context) FirewallPolicyInsightsOutput
}

type FirewallPolicyInsightsArgs struct {
	// The ID of the default Log Analytics Workspace that the Firewalls associated with this Firewall Policy will send their logs to, when there is no location matches in the `logAnalyticsWorkspace`.
	DefaultLogAnalyticsWorkspaceId pulumi.StringInput `pulumi:"defaultLogAnalyticsWorkspaceId"`
	// Whether the insights functionality is enabled for this Firewall Policy.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// A list of `logAnalyticsWorkspace` block as defined below.
	LogAnalyticsWorkspaces FirewallPolicyInsightsLogAnalyticsWorkspaceArrayInput `pulumi:"logAnalyticsWorkspaces"`
	// The log retention period in days.
	RetentionInDays pulumi.IntPtrInput `pulumi:"retentionInDays"`
}

func (FirewallPolicyInsightsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInsights)(nil)).Elem()
}

func (i FirewallPolicyInsightsArgs) ToFirewallPolicyInsightsOutput() FirewallPolicyInsightsOutput {
	return i.ToFirewallPolicyInsightsOutputWithContext(context.Background())
}

func (i FirewallPolicyInsightsArgs) ToFirewallPolicyInsightsOutputWithContext(ctx context.Context) FirewallPolicyInsightsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInsightsOutput)
}

func (i FirewallPolicyInsightsArgs) ToFirewallPolicyInsightsPtrOutput() FirewallPolicyInsightsPtrOutput {
	return i.ToFirewallPolicyInsightsPtrOutputWithContext(context.Background())
}

func (i FirewallPolicyInsightsArgs) ToFirewallPolicyInsightsPtrOutputWithContext(ctx context.Context) FirewallPolicyInsightsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInsightsOutput).ToFirewallPolicyInsightsPtrOutputWithContext(ctx)
}

// FirewallPolicyInsightsPtrInput is an input type that accepts FirewallPolicyInsightsArgs, FirewallPolicyInsightsPtr and FirewallPolicyInsightsPtrOutput values.
// You can construct a concrete instance of `FirewallPolicyInsightsPtrInput` via:
//
//	        FirewallPolicyInsightsArgs{...}
//
//	or:
//
//	        nil
type FirewallPolicyInsightsPtrInput interface {
	pulumi.Input

	ToFirewallPolicyInsightsPtrOutput() FirewallPolicyInsightsPtrOutput
	ToFirewallPolicyInsightsPtrOutputWithContext(context.Context) FirewallPolicyInsightsPtrOutput
}

type firewallPolicyInsightsPtrType FirewallPolicyInsightsArgs

func FirewallPolicyInsightsPtr(v *FirewallPolicyInsightsArgs) FirewallPolicyInsightsPtrInput {
	return (*firewallPolicyInsightsPtrType)(v)
}

func (*firewallPolicyInsightsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyInsights)(nil)).Elem()
}

func (i *firewallPolicyInsightsPtrType) ToFirewallPolicyInsightsPtrOutput() FirewallPolicyInsightsPtrOutput {
	return i.ToFirewallPolicyInsightsPtrOutputWithContext(context.Background())
}

func (i *firewallPolicyInsightsPtrType) ToFirewallPolicyInsightsPtrOutputWithContext(ctx context.Context) FirewallPolicyInsightsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInsightsPtrOutput)
}

type FirewallPolicyInsightsOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInsightsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInsights)(nil)).Elem()
}

func (o FirewallPolicyInsightsOutput) ToFirewallPolicyInsightsOutput() FirewallPolicyInsightsOutput {
	return o
}

func (o FirewallPolicyInsightsOutput) ToFirewallPolicyInsightsOutputWithContext(ctx context.Context) FirewallPolicyInsightsOutput {
	return o
}

func (o FirewallPolicyInsightsOutput) ToFirewallPolicyInsightsPtrOutput() FirewallPolicyInsightsPtrOutput {
	return o.ToFirewallPolicyInsightsPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyInsightsOutput) ToFirewallPolicyInsightsPtrOutputWithContext(ctx context.Context) FirewallPolicyInsightsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallPolicyInsights) *FirewallPolicyInsights {
		return &v
	}).(FirewallPolicyInsightsPtrOutput)
}

// The ID of the default Log Analytics Workspace that the Firewalls associated with this Firewall Policy will send their logs to, when there is no location matches in the `logAnalyticsWorkspace`.
func (o FirewallPolicyInsightsOutput) DefaultLogAnalyticsWorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyInsights) string { return v.DefaultLogAnalyticsWorkspaceId }).(pulumi.StringOutput)
}

// Whether the insights functionality is enabled for this Firewall Policy.
func (o FirewallPolicyInsightsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v FirewallPolicyInsights) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// A list of `logAnalyticsWorkspace` block as defined below.
func (o FirewallPolicyInsightsOutput) LogAnalyticsWorkspaces() FirewallPolicyInsightsLogAnalyticsWorkspaceArrayOutput {
	return o.ApplyT(func(v FirewallPolicyInsights) []FirewallPolicyInsightsLogAnalyticsWorkspace {
		return v.LogAnalyticsWorkspaces
	}).(FirewallPolicyInsightsLogAnalyticsWorkspaceArrayOutput)
}

// The log retention period in days.
func (o FirewallPolicyInsightsOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyInsights) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

type FirewallPolicyInsightsPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInsightsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyInsights)(nil)).Elem()
}

func (o FirewallPolicyInsightsPtrOutput) ToFirewallPolicyInsightsPtrOutput() FirewallPolicyInsightsPtrOutput {
	return o
}

func (o FirewallPolicyInsightsPtrOutput) ToFirewallPolicyInsightsPtrOutputWithContext(ctx context.Context) FirewallPolicyInsightsPtrOutput {
	return o
}

func (o FirewallPolicyInsightsPtrOutput) Elem() FirewallPolicyInsightsOutput {
	return o.ApplyT(func(v *FirewallPolicyInsights) FirewallPolicyInsights {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyInsights
		return ret
	}).(FirewallPolicyInsightsOutput)
}

// The ID of the default Log Analytics Workspace that the Firewalls associated with this Firewall Policy will send their logs to, when there is no location matches in the `logAnalyticsWorkspace`.
func (o FirewallPolicyInsightsPtrOutput) DefaultLogAnalyticsWorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyInsights) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultLogAnalyticsWorkspaceId
	}).(pulumi.StringPtrOutput)
}

// Whether the insights functionality is enabled for this Firewall Policy.
func (o FirewallPolicyInsightsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyInsights) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// A list of `logAnalyticsWorkspace` block as defined below.
func (o FirewallPolicyInsightsPtrOutput) LogAnalyticsWorkspaces() FirewallPolicyInsightsLogAnalyticsWorkspaceArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyInsights) []FirewallPolicyInsightsLogAnalyticsWorkspace {
		if v == nil {
			return nil
		}
		return v.LogAnalyticsWorkspaces
	}).(FirewallPolicyInsightsLogAnalyticsWorkspaceArrayOutput)
}

// The log retention period in days.
func (o FirewallPolicyInsightsPtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyInsights) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

type FirewallPolicyInsightsLogAnalyticsWorkspace struct {
	// The location of the Firewalls, that when matches this Log Analytics Workspace will be used to consume their logs.
	FirewallLocation string `pulumi:"firewallLocation"`
	// The ID of the Log Analytics Workspace that the Firewalls associated with this Firewall Policy will send their logs to when their locations match the `firewallLocation`.
	Id string `pulumi:"id"`
}

// FirewallPolicyInsightsLogAnalyticsWorkspaceInput is an input type that accepts FirewallPolicyInsightsLogAnalyticsWorkspaceArgs and FirewallPolicyInsightsLogAnalyticsWorkspaceOutput values.
// You can construct a concrete instance of `FirewallPolicyInsightsLogAnalyticsWorkspaceInput` via:
//
//	FirewallPolicyInsightsLogAnalyticsWorkspaceArgs{...}
type FirewallPolicyInsightsLogAnalyticsWorkspaceInput interface {
	pulumi.Input

	ToFirewallPolicyInsightsLogAnalyticsWorkspaceOutput() FirewallPolicyInsightsLogAnalyticsWorkspaceOutput
	ToFirewallPolicyInsightsLogAnalyticsWorkspaceOutputWithContext(context.Context) FirewallPolicyInsightsLogAnalyticsWorkspaceOutput
}

type FirewallPolicyInsightsLogAnalyticsWorkspaceArgs struct {
	// The location of the Firewalls, that when matches this Log Analytics Workspace will be used to consume their logs.
	FirewallLocation pulumi.StringInput `pulumi:"firewallLocation"`
	// The ID of the Log Analytics Workspace that the Firewalls associated with this Firewall Policy will send their logs to when their locations match the `firewallLocation`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (FirewallPolicyInsightsLogAnalyticsWorkspaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInsightsLogAnalyticsWorkspace)(nil)).Elem()
}

func (i FirewallPolicyInsightsLogAnalyticsWorkspaceArgs) ToFirewallPolicyInsightsLogAnalyticsWorkspaceOutput() FirewallPolicyInsightsLogAnalyticsWorkspaceOutput {
	return i.ToFirewallPolicyInsightsLogAnalyticsWorkspaceOutputWithContext(context.Background())
}

func (i FirewallPolicyInsightsLogAnalyticsWorkspaceArgs) ToFirewallPolicyInsightsLogAnalyticsWorkspaceOutputWithContext(ctx context.Context) FirewallPolicyInsightsLogAnalyticsWorkspaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInsightsLogAnalyticsWorkspaceOutput)
}

// FirewallPolicyInsightsLogAnalyticsWorkspaceArrayInput is an input type that accepts FirewallPolicyInsightsLogAnalyticsWorkspaceArray and FirewallPolicyInsightsLogAnalyticsWorkspaceArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyInsightsLogAnalyticsWorkspaceArrayInput` via:
//
//	FirewallPolicyInsightsLogAnalyticsWorkspaceArray{ FirewallPolicyInsightsLogAnalyticsWorkspaceArgs{...} }
type FirewallPolicyInsightsLogAnalyticsWorkspaceArrayInput interface {
	pulumi.Input

	ToFirewallPolicyInsightsLogAnalyticsWorkspaceArrayOutput() FirewallPolicyInsightsLogAnalyticsWorkspaceArrayOutput
	ToFirewallPolicyInsightsLogAnalyticsWorkspaceArrayOutputWithContext(context.Context) FirewallPolicyInsightsLogAnalyticsWorkspaceArrayOutput
}

type FirewallPolicyInsightsLogAnalyticsWorkspaceArray []FirewallPolicyInsightsLogAnalyticsWorkspaceInput

func (FirewallPolicyInsightsLogAnalyticsWorkspaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInsightsLogAnalyticsWorkspace)(nil)).Elem()
}

func (i FirewallPolicyInsightsLogAnalyticsWorkspaceArray) ToFirewallPolicyInsightsLogAnalyticsWorkspaceArrayOutput() FirewallPolicyInsightsLogAnalyticsWorkspaceArrayOutput {
	return i.ToFirewallPolicyInsightsLogAnalyticsWorkspaceArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyInsightsLogAnalyticsWorkspaceArray) ToFirewallPolicyInsightsLogAnalyticsWorkspaceArrayOutputWithContext(ctx context.Context) FirewallPolicyInsightsLogAnalyticsWorkspaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyInsightsLogAnalyticsWorkspaceArrayOutput)
}

type FirewallPolicyInsightsLogAnalyticsWorkspaceOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInsightsLogAnalyticsWorkspaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyInsightsLogAnalyticsWorkspace)(nil)).Elem()
}

func (o FirewallPolicyInsightsLogAnalyticsWorkspaceOutput) ToFirewallPolicyInsightsLogAnalyticsWorkspaceOutput() FirewallPolicyInsightsLogAnalyticsWorkspaceOutput {
	return o
}

func (o FirewallPolicyInsightsLogAnalyticsWorkspaceOutput) ToFirewallPolicyInsightsLogAnalyticsWorkspaceOutputWithContext(ctx context.Context) FirewallPolicyInsightsLogAnalyticsWorkspaceOutput {
	return o
}

// The location of the Firewalls, that when matches this Log Analytics Workspace will be used to consume their logs.
func (o FirewallPolicyInsightsLogAnalyticsWorkspaceOutput) FirewallLocation() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyInsightsLogAnalyticsWorkspace) string { return v.FirewallLocation }).(pulumi.StringOutput)
}

// The ID of the Log Analytics Workspace that the Firewalls associated with this Firewall Policy will send their logs to when their locations match the `firewallLocation`.
func (o FirewallPolicyInsightsLogAnalyticsWorkspaceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyInsightsLogAnalyticsWorkspace) string { return v.Id }).(pulumi.StringOutput)
}

type FirewallPolicyInsightsLogAnalyticsWorkspaceArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyInsightsLogAnalyticsWorkspaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyInsightsLogAnalyticsWorkspace)(nil)).Elem()
}

func (o FirewallPolicyInsightsLogAnalyticsWorkspaceArrayOutput) ToFirewallPolicyInsightsLogAnalyticsWorkspaceArrayOutput() FirewallPolicyInsightsLogAnalyticsWorkspaceArrayOutput {
	return o
}

func (o FirewallPolicyInsightsLogAnalyticsWorkspaceArrayOutput) ToFirewallPolicyInsightsLogAnalyticsWorkspaceArrayOutputWithContext(ctx context.Context) FirewallPolicyInsightsLogAnalyticsWorkspaceArrayOutput {
	return o
}

func (o FirewallPolicyInsightsLogAnalyticsWorkspaceArrayOutput) Index(i pulumi.IntInput) FirewallPolicyInsightsLogAnalyticsWorkspaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyInsightsLogAnalyticsWorkspace {
		return vs[0].([]FirewallPolicyInsightsLogAnalyticsWorkspace)[vs[1].(int)]
	}).(FirewallPolicyInsightsLogAnalyticsWorkspaceOutput)
}

type FirewallPolicyIntrusionDetection struct {
	// In which mode you want to run intrusion detection: `Off`, `Alert` or `Deny`.
	Mode *string `pulumi:"mode"`
	// A list of Private IP address ranges to identify traffic direction. By default, only ranges defined by IANA RFC 1918 are considered private IP addresses.
	PrivateRanges []string `pulumi:"privateRanges"`
	// One or more `signatureOverrides` blocks as defined below.
	SignatureOverrides []FirewallPolicyIntrusionDetectionSignatureOverride `pulumi:"signatureOverrides"`
	// One or more `trafficBypass` blocks as defined below.
	TrafficBypasses []FirewallPolicyIntrusionDetectionTrafficBypass `pulumi:"trafficBypasses"`
}

// FirewallPolicyIntrusionDetectionInput is an input type that accepts FirewallPolicyIntrusionDetectionArgs and FirewallPolicyIntrusionDetectionOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionInput` via:
//
//	FirewallPolicyIntrusionDetectionArgs{...}
type FirewallPolicyIntrusionDetectionInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionOutput() FirewallPolicyIntrusionDetectionOutput
	ToFirewallPolicyIntrusionDetectionOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionOutput
}

type FirewallPolicyIntrusionDetectionArgs struct {
	// In which mode you want to run intrusion detection: `Off`, `Alert` or `Deny`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// A list of Private IP address ranges to identify traffic direction. By default, only ranges defined by IANA RFC 1918 are considered private IP addresses.
	PrivateRanges pulumi.StringArrayInput `pulumi:"privateRanges"`
	// One or more `signatureOverrides` blocks as defined below.
	SignatureOverrides FirewallPolicyIntrusionDetectionSignatureOverrideArrayInput `pulumi:"signatureOverrides"`
	// One or more `trafficBypass` blocks as defined below.
	TrafficBypasses FirewallPolicyIntrusionDetectionTrafficBypassArrayInput `pulumi:"trafficBypasses"`
}

func (FirewallPolicyIntrusionDetectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetection)(nil)).Elem()
}

func (i FirewallPolicyIntrusionDetectionArgs) ToFirewallPolicyIntrusionDetectionOutput() FirewallPolicyIntrusionDetectionOutput {
	return i.ToFirewallPolicyIntrusionDetectionOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionArgs) ToFirewallPolicyIntrusionDetectionOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionOutput)
}

func (i FirewallPolicyIntrusionDetectionArgs) ToFirewallPolicyIntrusionDetectionPtrOutput() FirewallPolicyIntrusionDetectionPtrOutput {
	return i.ToFirewallPolicyIntrusionDetectionPtrOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionArgs) ToFirewallPolicyIntrusionDetectionPtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionOutput).ToFirewallPolicyIntrusionDetectionPtrOutputWithContext(ctx)
}

// FirewallPolicyIntrusionDetectionPtrInput is an input type that accepts FirewallPolicyIntrusionDetectionArgs, FirewallPolicyIntrusionDetectionPtr and FirewallPolicyIntrusionDetectionPtrOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionPtrInput` via:
//
//	        FirewallPolicyIntrusionDetectionArgs{...}
//
//	or:
//
//	        nil
type FirewallPolicyIntrusionDetectionPtrInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionPtrOutput() FirewallPolicyIntrusionDetectionPtrOutput
	ToFirewallPolicyIntrusionDetectionPtrOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionPtrOutput
}

type firewallPolicyIntrusionDetectionPtrType FirewallPolicyIntrusionDetectionArgs

func FirewallPolicyIntrusionDetectionPtr(v *FirewallPolicyIntrusionDetectionArgs) FirewallPolicyIntrusionDetectionPtrInput {
	return (*firewallPolicyIntrusionDetectionPtrType)(v)
}

func (*firewallPolicyIntrusionDetectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyIntrusionDetection)(nil)).Elem()
}

func (i *firewallPolicyIntrusionDetectionPtrType) ToFirewallPolicyIntrusionDetectionPtrOutput() FirewallPolicyIntrusionDetectionPtrOutput {
	return i.ToFirewallPolicyIntrusionDetectionPtrOutputWithContext(context.Background())
}

func (i *firewallPolicyIntrusionDetectionPtrType) ToFirewallPolicyIntrusionDetectionPtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionPtrOutput)
}

type FirewallPolicyIntrusionDetectionOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetection)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionOutput) ToFirewallPolicyIntrusionDetectionOutput() FirewallPolicyIntrusionDetectionOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionOutput) ToFirewallPolicyIntrusionDetectionOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionOutput) ToFirewallPolicyIntrusionDetectionPtrOutput() FirewallPolicyIntrusionDetectionPtrOutput {
	return o.ToFirewallPolicyIntrusionDetectionPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyIntrusionDetectionOutput) ToFirewallPolicyIntrusionDetectionPtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallPolicyIntrusionDetection) *FirewallPolicyIntrusionDetection {
		return &v
	}).(FirewallPolicyIntrusionDetectionPtrOutput)
}

// In which mode you want to run intrusion detection: `Off`, `Alert` or `Deny`.
func (o FirewallPolicyIntrusionDetectionOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetection) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// A list of Private IP address ranges to identify traffic direction. By default, only ranges defined by IANA RFC 1918 are considered private IP addresses.
func (o FirewallPolicyIntrusionDetectionOutput) PrivateRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetection) []string { return v.PrivateRanges }).(pulumi.StringArrayOutput)
}

// One or more `signatureOverrides` blocks as defined below.
func (o FirewallPolicyIntrusionDetectionOutput) SignatureOverrides() FirewallPolicyIntrusionDetectionSignatureOverrideArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetection) []FirewallPolicyIntrusionDetectionSignatureOverride {
		return v.SignatureOverrides
	}).(FirewallPolicyIntrusionDetectionSignatureOverrideArrayOutput)
}

// One or more `trafficBypass` blocks as defined below.
func (o FirewallPolicyIntrusionDetectionOutput) TrafficBypasses() FirewallPolicyIntrusionDetectionTrafficBypassArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetection) []FirewallPolicyIntrusionDetectionTrafficBypass {
		return v.TrafficBypasses
	}).(FirewallPolicyIntrusionDetectionTrafficBypassArrayOutput)
}

type FirewallPolicyIntrusionDetectionPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyIntrusionDetection)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionPtrOutput) ToFirewallPolicyIntrusionDetectionPtrOutput() FirewallPolicyIntrusionDetectionPtrOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionPtrOutput) ToFirewallPolicyIntrusionDetectionPtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionPtrOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionPtrOutput) Elem() FirewallPolicyIntrusionDetectionOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetection) FirewallPolicyIntrusionDetection {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyIntrusionDetection
		return ret
	}).(FirewallPolicyIntrusionDetectionOutput)
}

// In which mode you want to run intrusion detection: `Off`, `Alert` or `Deny`.
func (o FirewallPolicyIntrusionDetectionPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetection) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// A list of Private IP address ranges to identify traffic direction. By default, only ranges defined by IANA RFC 1918 are considered private IP addresses.
func (o FirewallPolicyIntrusionDetectionPtrOutput) PrivateRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetection) []string {
		if v == nil {
			return nil
		}
		return v.PrivateRanges
	}).(pulumi.StringArrayOutput)
}

// One or more `signatureOverrides` blocks as defined below.
func (o FirewallPolicyIntrusionDetectionPtrOutput) SignatureOverrides() FirewallPolicyIntrusionDetectionSignatureOverrideArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetection) []FirewallPolicyIntrusionDetectionSignatureOverride {
		if v == nil {
			return nil
		}
		return v.SignatureOverrides
	}).(FirewallPolicyIntrusionDetectionSignatureOverrideArrayOutput)
}

// One or more `trafficBypass` blocks as defined below.
func (o FirewallPolicyIntrusionDetectionPtrOutput) TrafficBypasses() FirewallPolicyIntrusionDetectionTrafficBypassArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetection) []FirewallPolicyIntrusionDetectionTrafficBypass {
		if v == nil {
			return nil
		}
		return v.TrafficBypasses
	}).(FirewallPolicyIntrusionDetectionTrafficBypassArrayOutput)
}

type FirewallPolicyIntrusionDetectionSignatureOverride struct {
	// 12-digit number (id) which identifies your signature.
	Id *string `pulumi:"id"`
	// state can be any of `Off`, `Alert` or `Deny`.
	State *string `pulumi:"state"`
}

// FirewallPolicyIntrusionDetectionSignatureOverrideInput is an input type that accepts FirewallPolicyIntrusionDetectionSignatureOverrideArgs and FirewallPolicyIntrusionDetectionSignatureOverrideOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionSignatureOverrideInput` via:
//
//	FirewallPolicyIntrusionDetectionSignatureOverrideArgs{...}
type FirewallPolicyIntrusionDetectionSignatureOverrideInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionSignatureOverrideOutput() FirewallPolicyIntrusionDetectionSignatureOverrideOutput
	ToFirewallPolicyIntrusionDetectionSignatureOverrideOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionSignatureOverrideOutput
}

type FirewallPolicyIntrusionDetectionSignatureOverrideArgs struct {
	// 12-digit number (id) which identifies your signature.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// state can be any of `Off`, `Alert` or `Deny`.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (FirewallPolicyIntrusionDetectionSignatureOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetectionSignatureOverride)(nil)).Elem()
}

func (i FirewallPolicyIntrusionDetectionSignatureOverrideArgs) ToFirewallPolicyIntrusionDetectionSignatureOverrideOutput() FirewallPolicyIntrusionDetectionSignatureOverrideOutput {
	return i.ToFirewallPolicyIntrusionDetectionSignatureOverrideOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionSignatureOverrideArgs) ToFirewallPolicyIntrusionDetectionSignatureOverrideOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionSignatureOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionSignatureOverrideOutput)
}

// FirewallPolicyIntrusionDetectionSignatureOverrideArrayInput is an input type that accepts FirewallPolicyIntrusionDetectionSignatureOverrideArray and FirewallPolicyIntrusionDetectionSignatureOverrideArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionSignatureOverrideArrayInput` via:
//
//	FirewallPolicyIntrusionDetectionSignatureOverrideArray{ FirewallPolicyIntrusionDetectionSignatureOverrideArgs{...} }
type FirewallPolicyIntrusionDetectionSignatureOverrideArrayInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionSignatureOverrideArrayOutput() FirewallPolicyIntrusionDetectionSignatureOverrideArrayOutput
	ToFirewallPolicyIntrusionDetectionSignatureOverrideArrayOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionSignatureOverrideArrayOutput
}

type FirewallPolicyIntrusionDetectionSignatureOverrideArray []FirewallPolicyIntrusionDetectionSignatureOverrideInput

func (FirewallPolicyIntrusionDetectionSignatureOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyIntrusionDetectionSignatureOverride)(nil)).Elem()
}

func (i FirewallPolicyIntrusionDetectionSignatureOverrideArray) ToFirewallPolicyIntrusionDetectionSignatureOverrideArrayOutput() FirewallPolicyIntrusionDetectionSignatureOverrideArrayOutput {
	return i.ToFirewallPolicyIntrusionDetectionSignatureOverrideArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionSignatureOverrideArray) ToFirewallPolicyIntrusionDetectionSignatureOverrideArrayOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionSignatureOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionSignatureOverrideArrayOutput)
}

type FirewallPolicyIntrusionDetectionSignatureOverrideOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionSignatureOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetectionSignatureOverride)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionSignatureOverrideOutput) ToFirewallPolicyIntrusionDetectionSignatureOverrideOutput() FirewallPolicyIntrusionDetectionSignatureOverrideOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionSignatureOverrideOutput) ToFirewallPolicyIntrusionDetectionSignatureOverrideOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionSignatureOverrideOutput {
	return o
}

// 12-digit number (id) which identifies your signature.
func (o FirewallPolicyIntrusionDetectionSignatureOverrideOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionSignatureOverride) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// state can be any of `Off`, `Alert` or `Deny`.
func (o FirewallPolicyIntrusionDetectionSignatureOverrideOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionSignatureOverride) *string { return v.State }).(pulumi.StringPtrOutput)
}

type FirewallPolicyIntrusionDetectionSignatureOverrideArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionSignatureOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyIntrusionDetectionSignatureOverride)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionSignatureOverrideArrayOutput) ToFirewallPolicyIntrusionDetectionSignatureOverrideArrayOutput() FirewallPolicyIntrusionDetectionSignatureOverrideArrayOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionSignatureOverrideArrayOutput) ToFirewallPolicyIntrusionDetectionSignatureOverrideArrayOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionSignatureOverrideArrayOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionSignatureOverrideArrayOutput) Index(i pulumi.IntInput) FirewallPolicyIntrusionDetectionSignatureOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyIntrusionDetectionSignatureOverride {
		return vs[0].([]FirewallPolicyIntrusionDetectionSignatureOverride)[vs[1].(int)]
	}).(FirewallPolicyIntrusionDetectionSignatureOverrideOutput)
}

type FirewallPolicyIntrusionDetectionTrafficBypass struct {
	// The description for this bypass traffic setting.
	Description *string `pulumi:"description"`
	// Specifies a list of destination IP addresses that shall be bypassed by intrusion detection.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// Specifies a list of destination IP groups that shall be bypassed by intrusion detection.
	DestinationIpGroups []string `pulumi:"destinationIpGroups"`
	// Specifies a list of destination IP ports that shall be bypassed by intrusion detection.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// The name which should be used for this bypass traffic setting.
	Name string `pulumi:"name"`
	// The protocols any of `ANY`, `TCP`, `ICMP`, `UDP` that shall be bypassed by intrusion detection.
	Protocol string `pulumi:"protocol"`
	// Specifies a list of source addresses that shall be bypassed by intrusion detection.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// Specifies a list of source IP groups that shall be bypassed by intrusion detection.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
}

// FirewallPolicyIntrusionDetectionTrafficBypassInput is an input type that accepts FirewallPolicyIntrusionDetectionTrafficBypassArgs and FirewallPolicyIntrusionDetectionTrafficBypassOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionTrafficBypassInput` via:
//
//	FirewallPolicyIntrusionDetectionTrafficBypassArgs{...}
type FirewallPolicyIntrusionDetectionTrafficBypassInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionTrafficBypassOutput() FirewallPolicyIntrusionDetectionTrafficBypassOutput
	ToFirewallPolicyIntrusionDetectionTrafficBypassOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionTrafficBypassOutput
}

type FirewallPolicyIntrusionDetectionTrafficBypassArgs struct {
	// The description for this bypass traffic setting.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies a list of destination IP addresses that shall be bypassed by intrusion detection.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// Specifies a list of destination IP groups that shall be bypassed by intrusion detection.
	DestinationIpGroups pulumi.StringArrayInput `pulumi:"destinationIpGroups"`
	// Specifies a list of destination IP ports that shall be bypassed by intrusion detection.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// The name which should be used for this bypass traffic setting.
	Name pulumi.StringInput `pulumi:"name"`
	// The protocols any of `ANY`, `TCP`, `ICMP`, `UDP` that shall be bypassed by intrusion detection.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Specifies a list of source addresses that shall be bypassed by intrusion detection.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// Specifies a list of source IP groups that shall be bypassed by intrusion detection.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
}

func (FirewallPolicyIntrusionDetectionTrafficBypassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetectionTrafficBypass)(nil)).Elem()
}

func (i FirewallPolicyIntrusionDetectionTrafficBypassArgs) ToFirewallPolicyIntrusionDetectionTrafficBypassOutput() FirewallPolicyIntrusionDetectionTrafficBypassOutput {
	return i.ToFirewallPolicyIntrusionDetectionTrafficBypassOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionTrafficBypassArgs) ToFirewallPolicyIntrusionDetectionTrafficBypassOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionTrafficBypassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionTrafficBypassOutput)
}

// FirewallPolicyIntrusionDetectionTrafficBypassArrayInput is an input type that accepts FirewallPolicyIntrusionDetectionTrafficBypassArray and FirewallPolicyIntrusionDetectionTrafficBypassArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionTrafficBypassArrayInput` via:
//
//	FirewallPolicyIntrusionDetectionTrafficBypassArray{ FirewallPolicyIntrusionDetectionTrafficBypassArgs{...} }
type FirewallPolicyIntrusionDetectionTrafficBypassArrayInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionTrafficBypassArrayOutput() FirewallPolicyIntrusionDetectionTrafficBypassArrayOutput
	ToFirewallPolicyIntrusionDetectionTrafficBypassArrayOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionTrafficBypassArrayOutput
}

type FirewallPolicyIntrusionDetectionTrafficBypassArray []FirewallPolicyIntrusionDetectionTrafficBypassInput

func (FirewallPolicyIntrusionDetectionTrafficBypassArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyIntrusionDetectionTrafficBypass)(nil)).Elem()
}

func (i FirewallPolicyIntrusionDetectionTrafficBypassArray) ToFirewallPolicyIntrusionDetectionTrafficBypassArrayOutput() FirewallPolicyIntrusionDetectionTrafficBypassArrayOutput {
	return i.ToFirewallPolicyIntrusionDetectionTrafficBypassArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionTrafficBypassArray) ToFirewallPolicyIntrusionDetectionTrafficBypassArrayOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionTrafficBypassArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionTrafficBypassArrayOutput)
}

type FirewallPolicyIntrusionDetectionTrafficBypassOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionTrafficBypassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetectionTrafficBypass)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionTrafficBypassOutput) ToFirewallPolicyIntrusionDetectionTrafficBypassOutput() FirewallPolicyIntrusionDetectionTrafficBypassOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionTrafficBypassOutput) ToFirewallPolicyIntrusionDetectionTrafficBypassOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionTrafficBypassOutput {
	return o
}

// The description for this bypass traffic setting.
func (o FirewallPolicyIntrusionDetectionTrafficBypassOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionTrafficBypass) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies a list of destination IP addresses that shall be bypassed by intrusion detection.
func (o FirewallPolicyIntrusionDetectionTrafficBypassOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionTrafficBypass) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// Specifies a list of destination IP groups that shall be bypassed by intrusion detection.
func (o FirewallPolicyIntrusionDetectionTrafficBypassOutput) DestinationIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionTrafficBypass) []string { return v.DestinationIpGroups }).(pulumi.StringArrayOutput)
}

// Specifies a list of destination IP ports that shall be bypassed by intrusion detection.
func (o FirewallPolicyIntrusionDetectionTrafficBypassOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionTrafficBypass) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// The name which should be used for this bypass traffic setting.
func (o FirewallPolicyIntrusionDetectionTrafficBypassOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionTrafficBypass) string { return v.Name }).(pulumi.StringOutput)
}

// The protocols any of `ANY`, `TCP`, `ICMP`, `UDP` that shall be bypassed by intrusion detection.
func (o FirewallPolicyIntrusionDetectionTrafficBypassOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionTrafficBypass) string { return v.Protocol }).(pulumi.StringOutput)
}

// Specifies a list of source addresses that shall be bypassed by intrusion detection.
func (o FirewallPolicyIntrusionDetectionTrafficBypassOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionTrafficBypass) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// Specifies a list of source IP groups that shall be bypassed by intrusion detection.
func (o FirewallPolicyIntrusionDetectionTrafficBypassOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionTrafficBypass) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

type FirewallPolicyIntrusionDetectionTrafficBypassArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionTrafficBypassArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyIntrusionDetectionTrafficBypass)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionTrafficBypassArrayOutput) ToFirewallPolicyIntrusionDetectionTrafficBypassArrayOutput() FirewallPolicyIntrusionDetectionTrafficBypassArrayOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionTrafficBypassArrayOutput) ToFirewallPolicyIntrusionDetectionTrafficBypassArrayOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionTrafficBypassArrayOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionTrafficBypassArrayOutput) Index(i pulumi.IntInput) FirewallPolicyIntrusionDetectionTrafficBypassOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyIntrusionDetectionTrafficBypass {
		return vs[0].([]FirewallPolicyIntrusionDetectionTrafficBypass)[vs[1].(int)]
	}).(FirewallPolicyIntrusionDetectionTrafficBypassOutput)
}

type FirewallPolicyRuleCollectionGroupApplicationRuleCollection struct {
	// The action to take for the application rules in this collection. Possible values are `Allow` and `Deny`.
	Action string `pulumi:"action"`
	// The name which should be used for this application rule collection.
	Name string `pulumi:"name"`
	// The priority of the application rule collection. The range is `100` - `65000`.
	Priority int `pulumi:"priority"`
	// One or more `applicationRule` blocks as defined below.
	Rules []FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRule `pulumi:"rules"`
}

// FirewallPolicyRuleCollectionGroupApplicationRuleCollectionInput is an input type that accepts FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArgs and FirewallPolicyRuleCollectionGroupApplicationRuleCollectionOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleCollectionGroupApplicationRuleCollectionInput` via:
//
//	FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArgs{...}
type FirewallPolicyRuleCollectionGroupApplicationRuleCollectionInput interface {
	pulumi.Input

	ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionOutput() FirewallPolicyRuleCollectionGroupApplicationRuleCollectionOutput
	ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionOutputWithContext(context.Context) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionOutput
}

type FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArgs struct {
	// The action to take for the application rules in this collection. Possible values are `Allow` and `Deny`.
	Action pulumi.StringInput `pulumi:"action"`
	// The name which should be used for this application rule collection.
	Name pulumi.StringInput `pulumi:"name"`
	// The priority of the application rule collection. The range is `100` - `65000`.
	Priority pulumi.IntInput `pulumi:"priority"`
	// One or more `applicationRule` blocks as defined below.
	Rules FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArrayInput `pulumi:"rules"`
}

func (FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleCollectionGroupApplicationRuleCollection)(nil)).Elem()
}

func (i FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArgs) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionOutput() FirewallPolicyRuleCollectionGroupApplicationRuleCollectionOutput {
	return i.ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionOutputWithContext(context.Background())
}

func (i FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArgs) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRuleCollectionGroupApplicationRuleCollectionOutput)
}

// FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArrayInput is an input type that accepts FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArray and FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArrayInput` via:
//
//	FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArray{ FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArgs{...} }
type FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArrayInput interface {
	pulumi.Input

	ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionArrayOutput() FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArrayOutput
	ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionArrayOutputWithContext(context.Context) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArrayOutput
}

type FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArray []FirewallPolicyRuleCollectionGroupApplicationRuleCollectionInput

func (FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleCollectionGroupApplicationRuleCollection)(nil)).Elem()
}

func (i FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArray) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionArrayOutput() FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArrayOutput {
	return i.ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArray) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArrayOutput)
}

type FirewallPolicyRuleCollectionGroupApplicationRuleCollectionOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleCollectionGroupApplicationRuleCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleCollectionGroupApplicationRuleCollection)(nil)).Elem()
}

func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionOutput) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionOutput() FirewallPolicyRuleCollectionGroupApplicationRuleCollectionOutput {
	return o
}

func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionOutput) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionOutput {
	return o
}

// The action to take for the application rules in this collection. Possible values are `Allow` and `Deny`.
func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupApplicationRuleCollection) string { return v.Action }).(pulumi.StringOutput)
}

// The name which should be used for this application rule collection.
func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupApplicationRuleCollection) string { return v.Name }).(pulumi.StringOutput)
}

// The priority of the application rule collection. The range is `100` - `65000`.
func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupApplicationRuleCollection) int { return v.Priority }).(pulumi.IntOutput)
}

// One or more `applicationRule` blocks as defined below.
func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionOutput) Rules() FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArrayOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupApplicationRuleCollection) []FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRule {
		return v.Rules
	}).(FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArrayOutput)
}

type FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleCollectionGroupApplicationRuleCollection)(nil)).Elem()
}

func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArrayOutput) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionArrayOutput() FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArrayOutput {
	return o
}

func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArrayOutput) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArrayOutput {
	return o
}

func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArrayOutput) Index(i pulumi.IntInput) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyRuleCollectionGroupApplicationRuleCollection {
		return vs[0].([]FirewallPolicyRuleCollectionGroupApplicationRuleCollection)[vs[1].(int)]
	}).(FirewallPolicyRuleCollectionGroupApplicationRuleCollectionOutput)
}

type FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRule struct {
	// The description which should be used for this rule.
	Description *string `pulumi:"description"`
	// Specifies a list of destination IP addresses (including CIDR, IP range and `*`).
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// Specifies a list of destination FQDN tags.
	DestinationFqdnTags []string `pulumi:"destinationFqdnTags"`
	// Specifies a list of destination FQDNs. Conflicts with `destinationUrls`.
	DestinationFqdns []string `pulumi:"destinationFqdns"`
	// Specifies a list of destination URLs for which policy should hold. Needs Premium SKU for Firewall Policy. Conflicts with `destinationFqdns`.
	DestinationUrls []string `pulumi:"destinationUrls"`
	// Specifies a list of HTTP/HTTPS headers to insert. One or more `httpHeaders` blocks as defined below.
	HttpHeaders []FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeader `pulumi:"httpHeaders"`
	// The name which should be used for this Firewall Policy Rule Collection Group. Changing this forces a new Firewall Policy Rule Collection Group to be created.
	Name string `pulumi:"name"`
	// One or more `protocols` blocks as defined below.
	Protocols []FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocol `pulumi:"protocols"`
	// Specifies a list of source IP addresses (including CIDR, IP range and `*`).
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// Specifies a list of source IP groups.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
	// Boolean specifying if TLS shall be terminated (true) or not (false). Must be `true` when using `destinationUrls`. Needs Premium SKU for Firewall Policy.
	TerminateTls *bool `pulumi:"terminateTls"`
	// Specifies a list of web categories to which access is denied or allowed depending on the value of `action` above. Needs Premium SKU for Firewall Policy.
	WebCategories []string `pulumi:"webCategories"`
}

// FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleInput is an input type that accepts FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArgs and FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleInput` via:
//
//	FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArgs{...}
type FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleInput interface {
	pulumi.Input

	ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput() FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput
	ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutputWithContext(context.Context) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput
}

type FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArgs struct {
	// The description which should be used for this rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies a list of destination IP addresses (including CIDR, IP range and `*`).
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// Specifies a list of destination FQDN tags.
	DestinationFqdnTags pulumi.StringArrayInput `pulumi:"destinationFqdnTags"`
	// Specifies a list of destination FQDNs. Conflicts with `destinationUrls`.
	DestinationFqdns pulumi.StringArrayInput `pulumi:"destinationFqdns"`
	// Specifies a list of destination URLs for which policy should hold. Needs Premium SKU for Firewall Policy. Conflicts with `destinationFqdns`.
	DestinationUrls pulumi.StringArrayInput `pulumi:"destinationUrls"`
	// Specifies a list of HTTP/HTTPS headers to insert. One or more `httpHeaders` blocks as defined below.
	HttpHeaders FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArrayInput `pulumi:"httpHeaders"`
	// The name which should be used for this Firewall Policy Rule Collection Group. Changing this forces a new Firewall Policy Rule Collection Group to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// One or more `protocols` blocks as defined below.
	Protocols FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArrayInput `pulumi:"protocols"`
	// Specifies a list of source IP addresses (including CIDR, IP range and `*`).
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// Specifies a list of source IP groups.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
	// Boolean specifying if TLS shall be terminated (true) or not (false). Must be `true` when using `destinationUrls`. Needs Premium SKU for Firewall Policy.
	TerminateTls pulumi.BoolPtrInput `pulumi:"terminateTls"`
	// Specifies a list of web categories to which access is denied or allowed depending on the value of `action` above. Needs Premium SKU for Firewall Policy.
	WebCategories pulumi.StringArrayInput `pulumi:"webCategories"`
}

func (FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRule)(nil)).Elem()
}

func (i FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArgs) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput() FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput {
	return i.ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutputWithContext(context.Background())
}

func (i FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArgs) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput)
}

// FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArrayInput is an input type that accepts FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArray and FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArrayInput` via:
//
//	FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArray{ FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArgs{...} }
type FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArrayInput interface {
	pulumi.Input

	ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArrayOutput() FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArrayOutput
	ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArrayOutputWithContext(context.Context) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArrayOutput
}

type FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArray []FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleInput

func (FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRule)(nil)).Elem()
}

func (i FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArray) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArrayOutput() FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArrayOutput {
	return i.ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArray) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArrayOutput)
}

type FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRule)(nil)).Elem()
}

func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput() FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput {
	return o
}

func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput {
	return o
}

// The description which should be used for this rule.
func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies a list of destination IP addresses (including CIDR, IP range and `*`).
func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRule) []string {
		return v.DestinationAddresses
	}).(pulumi.StringArrayOutput)
}

// Specifies a list of destination FQDN tags.
func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput) DestinationFqdnTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRule) []string {
		return v.DestinationFqdnTags
	}).(pulumi.StringArrayOutput)
}

// Specifies a list of destination FQDNs. Conflicts with `destinationUrls`.
func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput) DestinationFqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRule) []string {
		return v.DestinationFqdns
	}).(pulumi.StringArrayOutput)
}

// Specifies a list of destination URLs for which policy should hold. Needs Premium SKU for Firewall Policy. Conflicts with `destinationFqdns`.
func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput) DestinationUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRule) []string {
		return v.DestinationUrls
	}).(pulumi.StringArrayOutput)
}

// Specifies a list of HTTP/HTTPS headers to insert. One or more `httpHeaders` blocks as defined below.
func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput) HttpHeaders() FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArrayOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRule) []FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeader {
		return v.HttpHeaders
	}).(FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArrayOutput)
}

// The name which should be used for this Firewall Policy Rule Collection Group. Changing this forces a new Firewall Policy Rule Collection Group to be created.
func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRule) string { return v.Name }).(pulumi.StringOutput)
}

// One or more `protocols` blocks as defined below.
func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput) Protocols() FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArrayOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRule) []FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocol {
		return v.Protocols
	}).(FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArrayOutput)
}

// Specifies a list of source IP addresses (including CIDR, IP range and `*`).
func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRule) []string {
		return v.SourceAddresses
	}).(pulumi.StringArrayOutput)
}

// Specifies a list of source IP groups.
func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRule) []string {
		return v.SourceIpGroups
	}).(pulumi.StringArrayOutput)
}

// Boolean specifying if TLS shall be terminated (true) or not (false). Must be `true` when using `destinationUrls`. Needs Premium SKU for Firewall Policy.
func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput) TerminateTls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRule) *bool { return v.TerminateTls }).(pulumi.BoolPtrOutput)
}

// Specifies a list of web categories to which access is denied or allowed depending on the value of `action` above. Needs Premium SKU for Firewall Policy.
func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput) WebCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRule) []string {
		return v.WebCategories
	}).(pulumi.StringArrayOutput)
}

type FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRule)(nil)).Elem()
}

func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArrayOutput) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArrayOutput() FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArrayOutput {
	return o
}

func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArrayOutput) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArrayOutput {
	return o
}

func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArrayOutput) Index(i pulumi.IntInput) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRule {
		return vs[0].([]FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRule)[vs[1].(int)]
	}).(FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput)
}

type FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeader struct {
	// Specifies the name of the header.
	Name string `pulumi:"name"`
	// Specifies the value of the value.
	Value string `pulumi:"value"`
}

// FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderInput is an input type that accepts FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArgs and FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderInput` via:
//
//	FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArgs{...}
type FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderInput interface {
	pulumi.Input

	ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderOutput() FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderOutput
	ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderOutputWithContext(context.Context) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderOutput
}

type FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArgs struct {
	// Specifies the name of the header.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the value of the value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeader)(nil)).Elem()
}

func (i FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArgs) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderOutput() FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderOutput {
	return i.ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderOutputWithContext(context.Background())
}

func (i FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArgs) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderOutput)
}

// FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArrayInput is an input type that accepts FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArray and FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArrayInput` via:
//
//	FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArray{ FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArgs{...} }
type FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArrayInput interface {
	pulumi.Input

	ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArrayOutput() FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArrayOutput
	ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArrayOutputWithContext(context.Context) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArrayOutput
}

type FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArray []FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderInput

func (FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeader)(nil)).Elem()
}

func (i FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArray) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArrayOutput() FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArrayOutput {
	return i.ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArray) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArrayOutput)
}

type FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeader)(nil)).Elem()
}

func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderOutput) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderOutput() FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderOutput {
	return o
}

func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderOutput) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderOutput {
	return o
}

// Specifies the name of the header.
func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeader) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the value of the value.
func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeader) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeader)(nil)).Elem()
}

func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArrayOutput) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArrayOutput() FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArrayOutput {
	return o
}

func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArrayOutput) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArrayOutput {
	return o
}

func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArrayOutput) Index(i pulumi.IntInput) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeader {
		return vs[0].([]FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeader)[vs[1].(int)]
	}).(FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderOutput)
}

type FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocol struct {
	// Port number of the protocol. Range is 0-64000.
	Port int `pulumi:"port"`
	// Protocol type. Possible values are `Http` and `Https`.
	Type string `pulumi:"type"`
}

// FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolInput is an input type that accepts FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArgs and FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolInput` via:
//
//	FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArgs{...}
type FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolInput interface {
	pulumi.Input

	ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolOutput() FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolOutput
	ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolOutputWithContext(context.Context) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolOutput
}

type FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArgs struct {
	// Port number of the protocol. Range is 0-64000.
	Port pulumi.IntInput `pulumi:"port"`
	// Protocol type. Possible values are `Http` and `Https`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocol)(nil)).Elem()
}

func (i FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArgs) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolOutput() FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolOutput {
	return i.ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolOutputWithContext(context.Background())
}

func (i FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArgs) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolOutput)
}

// FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArrayInput is an input type that accepts FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArray and FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArrayInput` via:
//
//	FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArray{ FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArgs{...} }
type FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArrayInput interface {
	pulumi.Input

	ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArrayOutput() FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArrayOutput
	ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArrayOutputWithContext(context.Context) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArrayOutput
}

type FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArray []FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolInput

func (FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocol)(nil)).Elem()
}

func (i FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArray) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArrayOutput() FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArrayOutput {
	return i.ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArray) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArrayOutput)
}

type FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocol)(nil)).Elem()
}

func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolOutput) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolOutput() FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolOutput {
	return o
}

func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolOutput) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolOutput {
	return o
}

// Port number of the protocol. Range is 0-64000.
func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocol) int { return v.Port }).(pulumi.IntOutput)
}

// Protocol type. Possible values are `Http` and `Https`.
func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocol) string { return v.Type }).(pulumi.StringOutput)
}

type FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocol)(nil)).Elem()
}

func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArrayOutput) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArrayOutput() FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArrayOutput {
	return o
}

func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArrayOutput) ToFirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArrayOutput {
	return o
}

func (o FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArrayOutput) Index(i pulumi.IntInput) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocol {
		return vs[0].([]FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocol)[vs[1].(int)]
	}).(FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolOutput)
}

type FirewallPolicyRuleCollectionGroupNatRuleCollection struct {
	// The action to take for the NAT rules in this collection. Currently, the only possible value is `Dnat`.
	Action string `pulumi:"action"`
	// The name which should be used for this NAT rule collection.
	Name string `pulumi:"name"`
	// The priority of the NAT rule collection. The range is `100` - `65000`.
	Priority int `pulumi:"priority"`
	// A `natRule` block as defined below.
	Rules []FirewallPolicyRuleCollectionGroupNatRuleCollectionRule `pulumi:"rules"`
}

// FirewallPolicyRuleCollectionGroupNatRuleCollectionInput is an input type that accepts FirewallPolicyRuleCollectionGroupNatRuleCollectionArgs and FirewallPolicyRuleCollectionGroupNatRuleCollectionOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleCollectionGroupNatRuleCollectionInput` via:
//
//	FirewallPolicyRuleCollectionGroupNatRuleCollectionArgs{...}
type FirewallPolicyRuleCollectionGroupNatRuleCollectionInput interface {
	pulumi.Input

	ToFirewallPolicyRuleCollectionGroupNatRuleCollectionOutput() FirewallPolicyRuleCollectionGroupNatRuleCollectionOutput
	ToFirewallPolicyRuleCollectionGroupNatRuleCollectionOutputWithContext(context.Context) FirewallPolicyRuleCollectionGroupNatRuleCollectionOutput
}

type FirewallPolicyRuleCollectionGroupNatRuleCollectionArgs struct {
	// The action to take for the NAT rules in this collection. Currently, the only possible value is `Dnat`.
	Action pulumi.StringInput `pulumi:"action"`
	// The name which should be used for this NAT rule collection.
	Name pulumi.StringInput `pulumi:"name"`
	// The priority of the NAT rule collection. The range is `100` - `65000`.
	Priority pulumi.IntInput `pulumi:"priority"`
	// A `natRule` block as defined below.
	Rules FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArrayInput `pulumi:"rules"`
}

func (FirewallPolicyRuleCollectionGroupNatRuleCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleCollectionGroupNatRuleCollection)(nil)).Elem()
}

func (i FirewallPolicyRuleCollectionGroupNatRuleCollectionArgs) ToFirewallPolicyRuleCollectionGroupNatRuleCollectionOutput() FirewallPolicyRuleCollectionGroupNatRuleCollectionOutput {
	return i.ToFirewallPolicyRuleCollectionGroupNatRuleCollectionOutputWithContext(context.Background())
}

func (i FirewallPolicyRuleCollectionGroupNatRuleCollectionArgs) ToFirewallPolicyRuleCollectionGroupNatRuleCollectionOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupNatRuleCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRuleCollectionGroupNatRuleCollectionOutput)
}

// FirewallPolicyRuleCollectionGroupNatRuleCollectionArrayInput is an input type that accepts FirewallPolicyRuleCollectionGroupNatRuleCollectionArray and FirewallPolicyRuleCollectionGroupNatRuleCollectionArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleCollectionGroupNatRuleCollectionArrayInput` via:
//
//	FirewallPolicyRuleCollectionGroupNatRuleCollectionArray{ FirewallPolicyRuleCollectionGroupNatRuleCollectionArgs{...} }
type FirewallPolicyRuleCollectionGroupNatRuleCollectionArrayInput interface {
	pulumi.Input

	ToFirewallPolicyRuleCollectionGroupNatRuleCollectionArrayOutput() FirewallPolicyRuleCollectionGroupNatRuleCollectionArrayOutput
	ToFirewallPolicyRuleCollectionGroupNatRuleCollectionArrayOutputWithContext(context.Context) FirewallPolicyRuleCollectionGroupNatRuleCollectionArrayOutput
}

type FirewallPolicyRuleCollectionGroupNatRuleCollectionArray []FirewallPolicyRuleCollectionGroupNatRuleCollectionInput

func (FirewallPolicyRuleCollectionGroupNatRuleCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleCollectionGroupNatRuleCollection)(nil)).Elem()
}

func (i FirewallPolicyRuleCollectionGroupNatRuleCollectionArray) ToFirewallPolicyRuleCollectionGroupNatRuleCollectionArrayOutput() FirewallPolicyRuleCollectionGroupNatRuleCollectionArrayOutput {
	return i.ToFirewallPolicyRuleCollectionGroupNatRuleCollectionArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyRuleCollectionGroupNatRuleCollectionArray) ToFirewallPolicyRuleCollectionGroupNatRuleCollectionArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupNatRuleCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRuleCollectionGroupNatRuleCollectionArrayOutput)
}

type FirewallPolicyRuleCollectionGroupNatRuleCollectionOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleCollectionGroupNatRuleCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleCollectionGroupNatRuleCollection)(nil)).Elem()
}

func (o FirewallPolicyRuleCollectionGroupNatRuleCollectionOutput) ToFirewallPolicyRuleCollectionGroupNatRuleCollectionOutput() FirewallPolicyRuleCollectionGroupNatRuleCollectionOutput {
	return o
}

func (o FirewallPolicyRuleCollectionGroupNatRuleCollectionOutput) ToFirewallPolicyRuleCollectionGroupNatRuleCollectionOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupNatRuleCollectionOutput {
	return o
}

// The action to take for the NAT rules in this collection. Currently, the only possible value is `Dnat`.
func (o FirewallPolicyRuleCollectionGroupNatRuleCollectionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupNatRuleCollection) string { return v.Action }).(pulumi.StringOutput)
}

// The name which should be used for this NAT rule collection.
func (o FirewallPolicyRuleCollectionGroupNatRuleCollectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupNatRuleCollection) string { return v.Name }).(pulumi.StringOutput)
}

// The priority of the NAT rule collection. The range is `100` - `65000`.
func (o FirewallPolicyRuleCollectionGroupNatRuleCollectionOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupNatRuleCollection) int { return v.Priority }).(pulumi.IntOutput)
}

// A `natRule` block as defined below.
func (o FirewallPolicyRuleCollectionGroupNatRuleCollectionOutput) Rules() FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArrayOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupNatRuleCollection) []FirewallPolicyRuleCollectionGroupNatRuleCollectionRule {
		return v.Rules
	}).(FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArrayOutput)
}

type FirewallPolicyRuleCollectionGroupNatRuleCollectionArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleCollectionGroupNatRuleCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleCollectionGroupNatRuleCollection)(nil)).Elem()
}

func (o FirewallPolicyRuleCollectionGroupNatRuleCollectionArrayOutput) ToFirewallPolicyRuleCollectionGroupNatRuleCollectionArrayOutput() FirewallPolicyRuleCollectionGroupNatRuleCollectionArrayOutput {
	return o
}

func (o FirewallPolicyRuleCollectionGroupNatRuleCollectionArrayOutput) ToFirewallPolicyRuleCollectionGroupNatRuleCollectionArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupNatRuleCollectionArrayOutput {
	return o
}

func (o FirewallPolicyRuleCollectionGroupNatRuleCollectionArrayOutput) Index(i pulumi.IntInput) FirewallPolicyRuleCollectionGroupNatRuleCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyRuleCollectionGroupNatRuleCollection {
		return vs[0].([]FirewallPolicyRuleCollectionGroupNatRuleCollection)[vs[1].(int)]
	}).(FirewallPolicyRuleCollectionGroupNatRuleCollectionOutput)
}

type FirewallPolicyRuleCollectionGroupNatRuleCollectionRule struct {
	// The description which should be used for this rule.
	Description *string `pulumi:"description"`
	// The destination IP address (including CIDR).
	DestinationAddress *string `pulumi:"destinationAddress"`
	// Specifies a list of destination ports. Only one destination port is supported in a NAT rule.
	DestinationPorts *string `pulumi:"destinationPorts"`
	// The name which should be used for this Firewall Policy Rule Collection Group. Changing this forces a new Firewall Policy Rule Collection Group to be created.
	Name string `pulumi:"name"`
	// One or more `protocols` blocks as defined below.
	Protocols []string `pulumi:"protocols"`
	// Specifies a list of source IP addresses (including CIDR, IP range and `*`).
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// Specifies a list of source IP groups.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
	// Specifies the translated address.
	TranslatedAddress *string `pulumi:"translatedAddress"`
	// Specifies the translated FQDN.
	//
	// > **NOTE:** Exactly one of `translatedAddress` and `translatedFqdn` should be set.
	TranslatedFqdn *string `pulumi:"translatedFqdn"`
	// Specifies the translated port.
	TranslatedPort int `pulumi:"translatedPort"`
}

// FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleInput is an input type that accepts FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArgs and FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleInput` via:
//
//	FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArgs{...}
type FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleInput interface {
	pulumi.Input

	ToFirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutput() FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutput
	ToFirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutputWithContext(context.Context) FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutput
}

type FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArgs struct {
	// The description which should be used for this rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The destination IP address (including CIDR).
	DestinationAddress pulumi.StringPtrInput `pulumi:"destinationAddress"`
	// Specifies a list of destination ports. Only one destination port is supported in a NAT rule.
	DestinationPorts pulumi.StringPtrInput `pulumi:"destinationPorts"`
	// The name which should be used for this Firewall Policy Rule Collection Group. Changing this forces a new Firewall Policy Rule Collection Group to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// One or more `protocols` blocks as defined below.
	Protocols pulumi.StringArrayInput `pulumi:"protocols"`
	// Specifies a list of source IP addresses (including CIDR, IP range and `*`).
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// Specifies a list of source IP groups.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
	// Specifies the translated address.
	TranslatedAddress pulumi.StringPtrInput `pulumi:"translatedAddress"`
	// Specifies the translated FQDN.
	//
	// > **NOTE:** Exactly one of `translatedAddress` and `translatedFqdn` should be set.
	TranslatedFqdn pulumi.StringPtrInput `pulumi:"translatedFqdn"`
	// Specifies the translated port.
	TranslatedPort pulumi.IntInput `pulumi:"translatedPort"`
}

func (FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleCollectionGroupNatRuleCollectionRule)(nil)).Elem()
}

func (i FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArgs) ToFirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutput() FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutput {
	return i.ToFirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutputWithContext(context.Background())
}

func (i FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArgs) ToFirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutput)
}

// FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArrayInput is an input type that accepts FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArray and FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArrayInput` via:
//
//	FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArray{ FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArgs{...} }
type FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArrayInput interface {
	pulumi.Input

	ToFirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArrayOutput() FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArrayOutput
	ToFirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArrayOutputWithContext(context.Context) FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArrayOutput
}

type FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArray []FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleInput

func (FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleCollectionGroupNatRuleCollectionRule)(nil)).Elem()
}

func (i FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArray) ToFirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArrayOutput() FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArrayOutput {
	return i.ToFirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArray) ToFirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArrayOutput)
}

type FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleCollectionGroupNatRuleCollectionRule)(nil)).Elem()
}

func (o FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutput) ToFirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutput() FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutput {
	return o
}

func (o FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutput) ToFirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutput {
	return o
}

// The description which should be used for this rule.
func (o FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupNatRuleCollectionRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination IP address (including CIDR).
func (o FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutput) DestinationAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupNatRuleCollectionRule) *string { return v.DestinationAddress }).(pulumi.StringPtrOutput)
}

// Specifies a list of destination ports. Only one destination port is supported in a NAT rule.
func (o FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutput) DestinationPorts() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupNatRuleCollectionRule) *string { return v.DestinationPorts }).(pulumi.StringPtrOutput)
}

// The name which should be used for this Firewall Policy Rule Collection Group. Changing this forces a new Firewall Policy Rule Collection Group to be created.
func (o FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupNatRuleCollectionRule) string { return v.Name }).(pulumi.StringOutput)
}

// One or more `protocols` blocks as defined below.
func (o FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupNatRuleCollectionRule) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

// Specifies a list of source IP addresses (including CIDR, IP range and `*`).
func (o FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupNatRuleCollectionRule) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// Specifies a list of source IP groups.
func (o FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupNatRuleCollectionRule) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// Specifies the translated address.
func (o FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutput) TranslatedAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupNatRuleCollectionRule) *string { return v.TranslatedAddress }).(pulumi.StringPtrOutput)
}

// Specifies the translated FQDN.
//
// > **NOTE:** Exactly one of `translatedAddress` and `translatedFqdn` should be set.
func (o FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutput) TranslatedFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupNatRuleCollectionRule) *string { return v.TranslatedFqdn }).(pulumi.StringPtrOutput)
}

// Specifies the translated port.
func (o FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutput) TranslatedPort() pulumi.IntOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupNatRuleCollectionRule) int { return v.TranslatedPort }).(pulumi.IntOutput)
}

type FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleCollectionGroupNatRuleCollectionRule)(nil)).Elem()
}

func (o FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArrayOutput) ToFirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArrayOutput() FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArrayOutput {
	return o
}

func (o FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArrayOutput) ToFirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArrayOutput {
	return o
}

func (o FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArrayOutput) Index(i pulumi.IntInput) FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyRuleCollectionGroupNatRuleCollectionRule {
		return vs[0].([]FirewallPolicyRuleCollectionGroupNatRuleCollectionRule)[vs[1].(int)]
	}).(FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutput)
}

type FirewallPolicyRuleCollectionGroupNetworkRuleCollection struct {
	// The action to take for the network rules in this collection. Possible values are `Allow` and `Deny`.
	Action string `pulumi:"action"`
	// The name which should be used for this network rule collection.
	Name string `pulumi:"name"`
	// The priority of the network rule collection. The range is `100` - `65000`.
	Priority int `pulumi:"priority"`
	// One or more `networkRule` blocks as defined below.
	Rules []FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRule `pulumi:"rules"`
}

// FirewallPolicyRuleCollectionGroupNetworkRuleCollectionInput is an input type that accepts FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArgs and FirewallPolicyRuleCollectionGroupNetworkRuleCollectionOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleCollectionGroupNetworkRuleCollectionInput` via:
//
//	FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArgs{...}
type FirewallPolicyRuleCollectionGroupNetworkRuleCollectionInput interface {
	pulumi.Input

	ToFirewallPolicyRuleCollectionGroupNetworkRuleCollectionOutput() FirewallPolicyRuleCollectionGroupNetworkRuleCollectionOutput
	ToFirewallPolicyRuleCollectionGroupNetworkRuleCollectionOutputWithContext(context.Context) FirewallPolicyRuleCollectionGroupNetworkRuleCollectionOutput
}

type FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArgs struct {
	// The action to take for the network rules in this collection. Possible values are `Allow` and `Deny`.
	Action pulumi.StringInput `pulumi:"action"`
	// The name which should be used for this network rule collection.
	Name pulumi.StringInput `pulumi:"name"`
	// The priority of the network rule collection. The range is `100` - `65000`.
	Priority pulumi.IntInput `pulumi:"priority"`
	// One or more `networkRule` blocks as defined below.
	Rules FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArrayInput `pulumi:"rules"`
}

func (FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleCollectionGroupNetworkRuleCollection)(nil)).Elem()
}

func (i FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArgs) ToFirewallPolicyRuleCollectionGroupNetworkRuleCollectionOutput() FirewallPolicyRuleCollectionGroupNetworkRuleCollectionOutput {
	return i.ToFirewallPolicyRuleCollectionGroupNetworkRuleCollectionOutputWithContext(context.Background())
}

func (i FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArgs) ToFirewallPolicyRuleCollectionGroupNetworkRuleCollectionOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupNetworkRuleCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRuleCollectionGroupNetworkRuleCollectionOutput)
}

// FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArrayInput is an input type that accepts FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArray and FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArrayInput` via:
//
//	FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArray{ FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArgs{...} }
type FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArrayInput interface {
	pulumi.Input

	ToFirewallPolicyRuleCollectionGroupNetworkRuleCollectionArrayOutput() FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArrayOutput
	ToFirewallPolicyRuleCollectionGroupNetworkRuleCollectionArrayOutputWithContext(context.Context) FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArrayOutput
}

type FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArray []FirewallPolicyRuleCollectionGroupNetworkRuleCollectionInput

func (FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleCollectionGroupNetworkRuleCollection)(nil)).Elem()
}

func (i FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArray) ToFirewallPolicyRuleCollectionGroupNetworkRuleCollectionArrayOutput() FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArrayOutput {
	return i.ToFirewallPolicyRuleCollectionGroupNetworkRuleCollectionArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArray) ToFirewallPolicyRuleCollectionGroupNetworkRuleCollectionArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArrayOutput)
}

type FirewallPolicyRuleCollectionGroupNetworkRuleCollectionOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleCollectionGroupNetworkRuleCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleCollectionGroupNetworkRuleCollection)(nil)).Elem()
}

func (o FirewallPolicyRuleCollectionGroupNetworkRuleCollectionOutput) ToFirewallPolicyRuleCollectionGroupNetworkRuleCollectionOutput() FirewallPolicyRuleCollectionGroupNetworkRuleCollectionOutput {
	return o
}

func (o FirewallPolicyRuleCollectionGroupNetworkRuleCollectionOutput) ToFirewallPolicyRuleCollectionGroupNetworkRuleCollectionOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupNetworkRuleCollectionOutput {
	return o
}

// The action to take for the network rules in this collection. Possible values are `Allow` and `Deny`.
func (o FirewallPolicyRuleCollectionGroupNetworkRuleCollectionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupNetworkRuleCollection) string { return v.Action }).(pulumi.StringOutput)
}

// The name which should be used for this network rule collection.
func (o FirewallPolicyRuleCollectionGroupNetworkRuleCollectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupNetworkRuleCollection) string { return v.Name }).(pulumi.StringOutput)
}

// The priority of the network rule collection. The range is `100` - `65000`.
func (o FirewallPolicyRuleCollectionGroupNetworkRuleCollectionOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupNetworkRuleCollection) int { return v.Priority }).(pulumi.IntOutput)
}

// One or more `networkRule` blocks as defined below.
func (o FirewallPolicyRuleCollectionGroupNetworkRuleCollectionOutput) Rules() FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArrayOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupNetworkRuleCollection) []FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRule {
		return v.Rules
	}).(FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArrayOutput)
}

type FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleCollectionGroupNetworkRuleCollection)(nil)).Elem()
}

func (o FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArrayOutput) ToFirewallPolicyRuleCollectionGroupNetworkRuleCollectionArrayOutput() FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArrayOutput {
	return o
}

func (o FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArrayOutput) ToFirewallPolicyRuleCollectionGroupNetworkRuleCollectionArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArrayOutput {
	return o
}

func (o FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArrayOutput) Index(i pulumi.IntInput) FirewallPolicyRuleCollectionGroupNetworkRuleCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyRuleCollectionGroupNetworkRuleCollection {
		return vs[0].([]FirewallPolicyRuleCollectionGroupNetworkRuleCollection)[vs[1].(int)]
	}).(FirewallPolicyRuleCollectionGroupNetworkRuleCollectionOutput)
}

type FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRule struct {
	// The description which should be used for this rule.
	Description *string `pulumi:"description"`
	// Specifies a list of destination IP addresses (including CIDR, IP range and `*`).
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// Specifies a list of destination FQDNs. Conflicts with `destinationUrls`.
	DestinationFqdns []string `pulumi:"destinationFqdns"`
	// Specifies a list of destination IP groups.
	DestinationIpGroups []string `pulumi:"destinationIpGroups"`
	// Specifies a list of destination ports. Only one destination port is supported in a NAT rule.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// The name which should be used for this Firewall Policy Rule Collection Group. Changing this forces a new Firewall Policy Rule Collection Group to be created.
	Name string `pulumi:"name"`
	// One or more `protocols` blocks as defined below.
	Protocols []string `pulumi:"protocols"`
	// Specifies a list of source IP addresses (including CIDR, IP range and `*`).
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// Specifies a list of source IP groups.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
}

// FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleInput is an input type that accepts FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArgs and FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleInput` via:
//
//	FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArgs{...}
type FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleInput interface {
	pulumi.Input

	ToFirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutput() FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutput
	ToFirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutputWithContext(context.Context) FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutput
}

type FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArgs struct {
	// The description which should be used for this rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies a list of destination IP addresses (including CIDR, IP range and `*`).
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// Specifies a list of destination FQDNs. Conflicts with `destinationUrls`.
	DestinationFqdns pulumi.StringArrayInput `pulumi:"destinationFqdns"`
	// Specifies a list of destination IP groups.
	DestinationIpGroups pulumi.StringArrayInput `pulumi:"destinationIpGroups"`
	// Specifies a list of destination ports. Only one destination port is supported in a NAT rule.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// The name which should be used for this Firewall Policy Rule Collection Group. Changing this forces a new Firewall Policy Rule Collection Group to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// One or more `protocols` blocks as defined below.
	Protocols pulumi.StringArrayInput `pulumi:"protocols"`
	// Specifies a list of source IP addresses (including CIDR, IP range and `*`).
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// Specifies a list of source IP groups.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
}

func (FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRule)(nil)).Elem()
}

func (i FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArgs) ToFirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutput() FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutput {
	return i.ToFirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutputWithContext(context.Background())
}

func (i FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArgs) ToFirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutput)
}

// FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArrayInput is an input type that accepts FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArray and FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArrayInput` via:
//
//	FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArray{ FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArgs{...} }
type FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArrayInput interface {
	pulumi.Input

	ToFirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArrayOutput() FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArrayOutput
	ToFirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArrayOutputWithContext(context.Context) FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArrayOutput
}

type FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArray []FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleInput

func (FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRule)(nil)).Elem()
}

func (i FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArray) ToFirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArrayOutput() FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArrayOutput {
	return i.ToFirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArray) ToFirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArrayOutput)
}

type FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRule)(nil)).Elem()
}

func (o FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutput) ToFirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutput() FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutput {
	return o
}

func (o FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutput) ToFirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutput {
	return o
}

// The description which should be used for this rule.
func (o FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies a list of destination IP addresses (including CIDR, IP range and `*`).
func (o FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRule) []string {
		return v.DestinationAddresses
	}).(pulumi.StringArrayOutput)
}

// Specifies a list of destination FQDNs. Conflicts with `destinationUrls`.
func (o FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutput) DestinationFqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRule) []string { return v.DestinationFqdns }).(pulumi.StringArrayOutput)
}

// Specifies a list of destination IP groups.
func (o FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutput) DestinationIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRule) []string {
		return v.DestinationIpGroups
	}).(pulumi.StringArrayOutput)
}

// Specifies a list of destination ports. Only one destination port is supported in a NAT rule.
func (o FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRule) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// The name which should be used for this Firewall Policy Rule Collection Group. Changing this forces a new Firewall Policy Rule Collection Group to be created.
func (o FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRule) string { return v.Name }).(pulumi.StringOutput)
}

// One or more `protocols` blocks as defined below.
func (o FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRule) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

// Specifies a list of source IP addresses (including CIDR, IP range and `*`).
func (o FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRule) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// Specifies a list of source IP groups.
func (o FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRule) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

type FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRule)(nil)).Elem()
}

func (o FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArrayOutput) ToFirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArrayOutput() FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArrayOutput {
	return o
}

func (o FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArrayOutput) ToFirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArrayOutput {
	return o
}

func (o FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArrayOutput) Index(i pulumi.IntInput) FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRule {
		return vs[0].([]FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRule)[vs[1].(int)]
	}).(FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutput)
}

type FirewallPolicyThreatIntelligenceAllowlist struct {
	// A list of FQDNs that will be skipped for threat detection.
	Fqdns []string `pulumi:"fqdns"`
	// A list of IP addresses or CIDR ranges that will be skipped for threat detection.
	IpAddresses []string `pulumi:"ipAddresses"`
}

// FirewallPolicyThreatIntelligenceAllowlistInput is an input type that accepts FirewallPolicyThreatIntelligenceAllowlistArgs and FirewallPolicyThreatIntelligenceAllowlistOutput values.
// You can construct a concrete instance of `FirewallPolicyThreatIntelligenceAllowlistInput` via:
//
//	FirewallPolicyThreatIntelligenceAllowlistArgs{...}
type FirewallPolicyThreatIntelligenceAllowlistInput interface {
	pulumi.Input

	ToFirewallPolicyThreatIntelligenceAllowlistOutput() FirewallPolicyThreatIntelligenceAllowlistOutput
	ToFirewallPolicyThreatIntelligenceAllowlistOutputWithContext(context.Context) FirewallPolicyThreatIntelligenceAllowlistOutput
}

type FirewallPolicyThreatIntelligenceAllowlistArgs struct {
	// A list of FQDNs that will be skipped for threat detection.
	Fqdns pulumi.StringArrayInput `pulumi:"fqdns"`
	// A list of IP addresses or CIDR ranges that will be skipped for threat detection.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (FirewallPolicyThreatIntelligenceAllowlistArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyThreatIntelligenceAllowlist)(nil)).Elem()
}

func (i FirewallPolicyThreatIntelligenceAllowlistArgs) ToFirewallPolicyThreatIntelligenceAllowlistOutput() FirewallPolicyThreatIntelligenceAllowlistOutput {
	return i.ToFirewallPolicyThreatIntelligenceAllowlistOutputWithContext(context.Background())
}

func (i FirewallPolicyThreatIntelligenceAllowlistArgs) ToFirewallPolicyThreatIntelligenceAllowlistOutputWithContext(ctx context.Context) FirewallPolicyThreatIntelligenceAllowlistOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyThreatIntelligenceAllowlistOutput)
}

func (i FirewallPolicyThreatIntelligenceAllowlistArgs) ToFirewallPolicyThreatIntelligenceAllowlistPtrOutput() FirewallPolicyThreatIntelligenceAllowlistPtrOutput {
	return i.ToFirewallPolicyThreatIntelligenceAllowlistPtrOutputWithContext(context.Background())
}

func (i FirewallPolicyThreatIntelligenceAllowlistArgs) ToFirewallPolicyThreatIntelligenceAllowlistPtrOutputWithContext(ctx context.Context) FirewallPolicyThreatIntelligenceAllowlistPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyThreatIntelligenceAllowlistOutput).ToFirewallPolicyThreatIntelligenceAllowlistPtrOutputWithContext(ctx)
}

// FirewallPolicyThreatIntelligenceAllowlistPtrInput is an input type that accepts FirewallPolicyThreatIntelligenceAllowlistArgs, FirewallPolicyThreatIntelligenceAllowlistPtr and FirewallPolicyThreatIntelligenceAllowlistPtrOutput values.
// You can construct a concrete instance of `FirewallPolicyThreatIntelligenceAllowlistPtrInput` via:
//
//	        FirewallPolicyThreatIntelligenceAllowlistArgs{...}
//
//	or:
//
//	        nil
type FirewallPolicyThreatIntelligenceAllowlistPtrInput interface {
	pulumi.Input

	ToFirewallPolicyThreatIntelligenceAllowlistPtrOutput() FirewallPolicyThreatIntelligenceAllowlistPtrOutput
	ToFirewallPolicyThreatIntelligenceAllowlistPtrOutputWithContext(context.Context) FirewallPolicyThreatIntelligenceAllowlistPtrOutput
}

type firewallPolicyThreatIntelligenceAllowlistPtrType FirewallPolicyThreatIntelligenceAllowlistArgs

func FirewallPolicyThreatIntelligenceAllowlistPtr(v *FirewallPolicyThreatIntelligenceAllowlistArgs) FirewallPolicyThreatIntelligenceAllowlistPtrInput {
	return (*firewallPolicyThreatIntelligenceAllowlistPtrType)(v)
}

func (*firewallPolicyThreatIntelligenceAllowlistPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyThreatIntelligenceAllowlist)(nil)).Elem()
}

func (i *firewallPolicyThreatIntelligenceAllowlistPtrType) ToFirewallPolicyThreatIntelligenceAllowlistPtrOutput() FirewallPolicyThreatIntelligenceAllowlistPtrOutput {
	return i.ToFirewallPolicyThreatIntelligenceAllowlistPtrOutputWithContext(context.Background())
}

func (i *firewallPolicyThreatIntelligenceAllowlistPtrType) ToFirewallPolicyThreatIntelligenceAllowlistPtrOutputWithContext(ctx context.Context) FirewallPolicyThreatIntelligenceAllowlistPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyThreatIntelligenceAllowlistPtrOutput)
}

type FirewallPolicyThreatIntelligenceAllowlistOutput struct{ *pulumi.OutputState }

func (FirewallPolicyThreatIntelligenceAllowlistOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyThreatIntelligenceAllowlist)(nil)).Elem()
}

func (o FirewallPolicyThreatIntelligenceAllowlistOutput) ToFirewallPolicyThreatIntelligenceAllowlistOutput() FirewallPolicyThreatIntelligenceAllowlistOutput {
	return o
}

func (o FirewallPolicyThreatIntelligenceAllowlistOutput) ToFirewallPolicyThreatIntelligenceAllowlistOutputWithContext(ctx context.Context) FirewallPolicyThreatIntelligenceAllowlistOutput {
	return o
}

func (o FirewallPolicyThreatIntelligenceAllowlistOutput) ToFirewallPolicyThreatIntelligenceAllowlistPtrOutput() FirewallPolicyThreatIntelligenceAllowlistPtrOutput {
	return o.ToFirewallPolicyThreatIntelligenceAllowlistPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyThreatIntelligenceAllowlistOutput) ToFirewallPolicyThreatIntelligenceAllowlistPtrOutputWithContext(ctx context.Context) FirewallPolicyThreatIntelligenceAllowlistPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallPolicyThreatIntelligenceAllowlist) *FirewallPolicyThreatIntelligenceAllowlist {
		return &v
	}).(FirewallPolicyThreatIntelligenceAllowlistPtrOutput)
}

// A list of FQDNs that will be skipped for threat detection.
func (o FirewallPolicyThreatIntelligenceAllowlistOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyThreatIntelligenceAllowlist) []string { return v.Fqdns }).(pulumi.StringArrayOutput)
}

// A list of IP addresses or CIDR ranges that will be skipped for threat detection.
func (o FirewallPolicyThreatIntelligenceAllowlistOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyThreatIntelligenceAllowlist) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type FirewallPolicyThreatIntelligenceAllowlistPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyThreatIntelligenceAllowlistPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyThreatIntelligenceAllowlist)(nil)).Elem()
}

func (o FirewallPolicyThreatIntelligenceAllowlistPtrOutput) ToFirewallPolicyThreatIntelligenceAllowlistPtrOutput() FirewallPolicyThreatIntelligenceAllowlistPtrOutput {
	return o
}

func (o FirewallPolicyThreatIntelligenceAllowlistPtrOutput) ToFirewallPolicyThreatIntelligenceAllowlistPtrOutputWithContext(ctx context.Context) FirewallPolicyThreatIntelligenceAllowlistPtrOutput {
	return o
}

func (o FirewallPolicyThreatIntelligenceAllowlistPtrOutput) Elem() FirewallPolicyThreatIntelligenceAllowlistOutput {
	return o.ApplyT(func(v *FirewallPolicyThreatIntelligenceAllowlist) FirewallPolicyThreatIntelligenceAllowlist {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyThreatIntelligenceAllowlist
		return ret
	}).(FirewallPolicyThreatIntelligenceAllowlistOutput)
}

// A list of FQDNs that will be skipped for threat detection.
func (o FirewallPolicyThreatIntelligenceAllowlistPtrOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyThreatIntelligenceAllowlist) []string {
		if v == nil {
			return nil
		}
		return v.Fqdns
	}).(pulumi.StringArrayOutput)
}

// A list of IP addresses or CIDR ranges that will be skipped for threat detection.
func (o FirewallPolicyThreatIntelligenceAllowlistPtrOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyThreatIntelligenceAllowlist) []string {
		if v == nil {
			return nil
		}
		return v.IpAddresses
	}).(pulumi.StringArrayOutput)
}

type FirewallPolicyTlsCertificate struct {
	// The ID of the Key Vault, where the secret or certificate is stored.
	KeyVaultSecretId string `pulumi:"keyVaultSecretId"`
	// The name of the certificate.
	Name string `pulumi:"name"`
}

// FirewallPolicyTlsCertificateInput is an input type that accepts FirewallPolicyTlsCertificateArgs and FirewallPolicyTlsCertificateOutput values.
// You can construct a concrete instance of `FirewallPolicyTlsCertificateInput` via:
//
//	FirewallPolicyTlsCertificateArgs{...}
type FirewallPolicyTlsCertificateInput interface {
	pulumi.Input

	ToFirewallPolicyTlsCertificateOutput() FirewallPolicyTlsCertificateOutput
	ToFirewallPolicyTlsCertificateOutputWithContext(context.Context) FirewallPolicyTlsCertificateOutput
}

type FirewallPolicyTlsCertificateArgs struct {
	// The ID of the Key Vault, where the secret or certificate is stored.
	KeyVaultSecretId pulumi.StringInput `pulumi:"keyVaultSecretId"`
	// The name of the certificate.
	Name pulumi.StringInput `pulumi:"name"`
}

func (FirewallPolicyTlsCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyTlsCertificate)(nil)).Elem()
}

func (i FirewallPolicyTlsCertificateArgs) ToFirewallPolicyTlsCertificateOutput() FirewallPolicyTlsCertificateOutput {
	return i.ToFirewallPolicyTlsCertificateOutputWithContext(context.Background())
}

func (i FirewallPolicyTlsCertificateArgs) ToFirewallPolicyTlsCertificateOutputWithContext(ctx context.Context) FirewallPolicyTlsCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyTlsCertificateOutput)
}

func (i FirewallPolicyTlsCertificateArgs) ToFirewallPolicyTlsCertificatePtrOutput() FirewallPolicyTlsCertificatePtrOutput {
	return i.ToFirewallPolicyTlsCertificatePtrOutputWithContext(context.Background())
}

func (i FirewallPolicyTlsCertificateArgs) ToFirewallPolicyTlsCertificatePtrOutputWithContext(ctx context.Context) FirewallPolicyTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyTlsCertificateOutput).ToFirewallPolicyTlsCertificatePtrOutputWithContext(ctx)
}

// FirewallPolicyTlsCertificatePtrInput is an input type that accepts FirewallPolicyTlsCertificateArgs, FirewallPolicyTlsCertificatePtr and FirewallPolicyTlsCertificatePtrOutput values.
// You can construct a concrete instance of `FirewallPolicyTlsCertificatePtrInput` via:
//
//	        FirewallPolicyTlsCertificateArgs{...}
//
//	or:
//
//	        nil
type FirewallPolicyTlsCertificatePtrInput interface {
	pulumi.Input

	ToFirewallPolicyTlsCertificatePtrOutput() FirewallPolicyTlsCertificatePtrOutput
	ToFirewallPolicyTlsCertificatePtrOutputWithContext(context.Context) FirewallPolicyTlsCertificatePtrOutput
}

type firewallPolicyTlsCertificatePtrType FirewallPolicyTlsCertificateArgs

func FirewallPolicyTlsCertificatePtr(v *FirewallPolicyTlsCertificateArgs) FirewallPolicyTlsCertificatePtrInput {
	return (*firewallPolicyTlsCertificatePtrType)(v)
}

func (*firewallPolicyTlsCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyTlsCertificate)(nil)).Elem()
}

func (i *firewallPolicyTlsCertificatePtrType) ToFirewallPolicyTlsCertificatePtrOutput() FirewallPolicyTlsCertificatePtrOutput {
	return i.ToFirewallPolicyTlsCertificatePtrOutputWithContext(context.Background())
}

func (i *firewallPolicyTlsCertificatePtrType) ToFirewallPolicyTlsCertificatePtrOutputWithContext(ctx context.Context) FirewallPolicyTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyTlsCertificatePtrOutput)
}

type FirewallPolicyTlsCertificateOutput struct{ *pulumi.OutputState }

func (FirewallPolicyTlsCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyTlsCertificate)(nil)).Elem()
}

func (o FirewallPolicyTlsCertificateOutput) ToFirewallPolicyTlsCertificateOutput() FirewallPolicyTlsCertificateOutput {
	return o
}

func (o FirewallPolicyTlsCertificateOutput) ToFirewallPolicyTlsCertificateOutputWithContext(ctx context.Context) FirewallPolicyTlsCertificateOutput {
	return o
}

func (o FirewallPolicyTlsCertificateOutput) ToFirewallPolicyTlsCertificatePtrOutput() FirewallPolicyTlsCertificatePtrOutput {
	return o.ToFirewallPolicyTlsCertificatePtrOutputWithContext(context.Background())
}

func (o FirewallPolicyTlsCertificateOutput) ToFirewallPolicyTlsCertificatePtrOutputWithContext(ctx context.Context) FirewallPolicyTlsCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallPolicyTlsCertificate) *FirewallPolicyTlsCertificate {
		return &v
	}).(FirewallPolicyTlsCertificatePtrOutput)
}

// The ID of the Key Vault, where the secret or certificate is stored.
func (o FirewallPolicyTlsCertificateOutput) KeyVaultSecretId() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyTlsCertificate) string { return v.KeyVaultSecretId }).(pulumi.StringOutput)
}

// The name of the certificate.
func (o FirewallPolicyTlsCertificateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyTlsCertificate) string { return v.Name }).(pulumi.StringOutput)
}

type FirewallPolicyTlsCertificatePtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyTlsCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyTlsCertificate)(nil)).Elem()
}

func (o FirewallPolicyTlsCertificatePtrOutput) ToFirewallPolicyTlsCertificatePtrOutput() FirewallPolicyTlsCertificatePtrOutput {
	return o
}

func (o FirewallPolicyTlsCertificatePtrOutput) ToFirewallPolicyTlsCertificatePtrOutputWithContext(ctx context.Context) FirewallPolicyTlsCertificatePtrOutput {
	return o
}

func (o FirewallPolicyTlsCertificatePtrOutput) Elem() FirewallPolicyTlsCertificateOutput {
	return o.ApplyT(func(v *FirewallPolicyTlsCertificate) FirewallPolicyTlsCertificate {
		if v != nil {
			return *v
		}
		var ret FirewallPolicyTlsCertificate
		return ret
	}).(FirewallPolicyTlsCertificateOutput)
}

// The ID of the Key Vault, where the secret or certificate is stored.
func (o FirewallPolicyTlsCertificatePtrOutput) KeyVaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyTlsCertificate) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVaultSecretId
	}).(pulumi.StringPtrOutput)
}

// The name of the certificate.
func (o FirewallPolicyTlsCertificatePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyTlsCertificate) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type FirewallVirtualHub struct {
	// The private IP address associated with the Firewall.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// The list of public IP addresses associated with the Firewall.
	PublicIpAddresses []string `pulumi:"publicIpAddresses"`
	// Specifies the number of public IPs to assign to the Firewall. Defaults to `1`.
	PublicIpCount *int `pulumi:"publicIpCount"`
	// Specifies the ID of the Virtual Hub where the Firewall resides in.
	VirtualHubId string `pulumi:"virtualHubId"`
}

// FirewallVirtualHubInput is an input type that accepts FirewallVirtualHubArgs and FirewallVirtualHubOutput values.
// You can construct a concrete instance of `FirewallVirtualHubInput` via:
//
//	FirewallVirtualHubArgs{...}
type FirewallVirtualHubInput interface {
	pulumi.Input

	ToFirewallVirtualHubOutput() FirewallVirtualHubOutput
	ToFirewallVirtualHubOutputWithContext(context.Context) FirewallVirtualHubOutput
}

type FirewallVirtualHubArgs struct {
	// The private IP address associated with the Firewall.
	PrivateIpAddress pulumi.StringPtrInput `pulumi:"privateIpAddress"`
	// The list of public IP addresses associated with the Firewall.
	PublicIpAddresses pulumi.StringArrayInput `pulumi:"publicIpAddresses"`
	// Specifies the number of public IPs to assign to the Firewall. Defaults to `1`.
	PublicIpCount pulumi.IntPtrInput `pulumi:"publicIpCount"`
	// Specifies the ID of the Virtual Hub where the Firewall resides in.
	VirtualHubId pulumi.StringInput `pulumi:"virtualHubId"`
}

func (FirewallVirtualHubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVirtualHub)(nil)).Elem()
}

func (i FirewallVirtualHubArgs) ToFirewallVirtualHubOutput() FirewallVirtualHubOutput {
	return i.ToFirewallVirtualHubOutputWithContext(context.Background())
}

func (i FirewallVirtualHubArgs) ToFirewallVirtualHubOutputWithContext(ctx context.Context) FirewallVirtualHubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVirtualHubOutput)
}

func (i FirewallVirtualHubArgs) ToFirewallVirtualHubPtrOutput() FirewallVirtualHubPtrOutput {
	return i.ToFirewallVirtualHubPtrOutputWithContext(context.Background())
}

func (i FirewallVirtualHubArgs) ToFirewallVirtualHubPtrOutputWithContext(ctx context.Context) FirewallVirtualHubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVirtualHubOutput).ToFirewallVirtualHubPtrOutputWithContext(ctx)
}

// FirewallVirtualHubPtrInput is an input type that accepts FirewallVirtualHubArgs, FirewallVirtualHubPtr and FirewallVirtualHubPtrOutput values.
// You can construct a concrete instance of `FirewallVirtualHubPtrInput` via:
//
//	        FirewallVirtualHubArgs{...}
//
//	or:
//
//	        nil
type FirewallVirtualHubPtrInput interface {
	pulumi.Input

	ToFirewallVirtualHubPtrOutput() FirewallVirtualHubPtrOutput
	ToFirewallVirtualHubPtrOutputWithContext(context.Context) FirewallVirtualHubPtrOutput
}

type firewallVirtualHubPtrType FirewallVirtualHubArgs

func FirewallVirtualHubPtr(v *FirewallVirtualHubArgs) FirewallVirtualHubPtrInput {
	return (*firewallVirtualHubPtrType)(v)
}

func (*firewallVirtualHubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallVirtualHub)(nil)).Elem()
}

func (i *firewallVirtualHubPtrType) ToFirewallVirtualHubPtrOutput() FirewallVirtualHubPtrOutput {
	return i.ToFirewallVirtualHubPtrOutputWithContext(context.Background())
}

func (i *firewallVirtualHubPtrType) ToFirewallVirtualHubPtrOutputWithContext(ctx context.Context) FirewallVirtualHubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallVirtualHubPtrOutput)
}

type FirewallVirtualHubOutput struct{ *pulumi.OutputState }

func (FirewallVirtualHubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallVirtualHub)(nil)).Elem()
}

func (o FirewallVirtualHubOutput) ToFirewallVirtualHubOutput() FirewallVirtualHubOutput {
	return o
}

func (o FirewallVirtualHubOutput) ToFirewallVirtualHubOutputWithContext(ctx context.Context) FirewallVirtualHubOutput {
	return o
}

func (o FirewallVirtualHubOutput) ToFirewallVirtualHubPtrOutput() FirewallVirtualHubPtrOutput {
	return o.ToFirewallVirtualHubPtrOutputWithContext(context.Background())
}

func (o FirewallVirtualHubOutput) ToFirewallVirtualHubPtrOutputWithContext(ctx context.Context) FirewallVirtualHubPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallVirtualHub) *FirewallVirtualHub {
		return &v
	}).(FirewallVirtualHubPtrOutput)
}

// The private IP address associated with the Firewall.
func (o FirewallVirtualHubOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallVirtualHub) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

// The list of public IP addresses associated with the Firewall.
func (o FirewallVirtualHubOutput) PublicIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallVirtualHub) []string { return v.PublicIpAddresses }).(pulumi.StringArrayOutput)
}

// Specifies the number of public IPs to assign to the Firewall. Defaults to `1`.
func (o FirewallVirtualHubOutput) PublicIpCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallVirtualHub) *int { return v.PublicIpCount }).(pulumi.IntPtrOutput)
}

// Specifies the ID of the Virtual Hub where the Firewall resides in.
func (o FirewallVirtualHubOutput) VirtualHubId() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallVirtualHub) string { return v.VirtualHubId }).(pulumi.StringOutput)
}

type FirewallVirtualHubPtrOutput struct{ *pulumi.OutputState }

func (FirewallVirtualHubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallVirtualHub)(nil)).Elem()
}

func (o FirewallVirtualHubPtrOutput) ToFirewallVirtualHubPtrOutput() FirewallVirtualHubPtrOutput {
	return o
}

func (o FirewallVirtualHubPtrOutput) ToFirewallVirtualHubPtrOutputWithContext(ctx context.Context) FirewallVirtualHubPtrOutput {
	return o
}

func (o FirewallVirtualHubPtrOutput) Elem() FirewallVirtualHubOutput {
	return o.ApplyT(func(v *FirewallVirtualHub) FirewallVirtualHub {
		if v != nil {
			return *v
		}
		var ret FirewallVirtualHub
		return ret
	}).(FirewallVirtualHubOutput)
}

// The private IP address associated with the Firewall.
func (o FirewallVirtualHubPtrOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallVirtualHub) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIpAddress
	}).(pulumi.StringPtrOutput)
}

// The list of public IP addresses associated with the Firewall.
func (o FirewallVirtualHubPtrOutput) PublicIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallVirtualHub) []string {
		if v == nil {
			return nil
		}
		return v.PublicIpAddresses
	}).(pulumi.StringArrayOutput)
}

// Specifies the number of public IPs to assign to the Firewall. Defaults to `1`.
func (o FirewallVirtualHubPtrOutput) PublicIpCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallVirtualHub) *int {
		if v == nil {
			return nil
		}
		return v.PublicIpCount
	}).(pulumi.IntPtrOutput)
}

// Specifies the ID of the Virtual Hub where the Firewall resides in.
func (o FirewallVirtualHubPtrOutput) VirtualHubId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallVirtualHub) *string {
		if v == nil {
			return nil
		}
		return &v.VirtualHubId
	}).(pulumi.StringPtrOutput)
}

type LocalNetworkGatewayBgpSettings struct {
	// The BGP speaker's ASN.
	Asn int `pulumi:"asn"`
	// The BGP peering address and BGP identifier of this BGP speaker.
	BgpPeeringAddress string `pulumi:"bgpPeeringAddress"`
	// The weight added to routes learned from this BGP speaker.
	PeerWeight *int `pulumi:"peerWeight"`
}

// LocalNetworkGatewayBgpSettingsInput is an input type that accepts LocalNetworkGatewayBgpSettingsArgs and LocalNetworkGatewayBgpSettingsOutput values.
// You can construct a concrete instance of `LocalNetworkGatewayBgpSettingsInput` via:
//
//	LocalNetworkGatewayBgpSettingsArgs{...}
type LocalNetworkGatewayBgpSettingsInput interface {
	pulumi.Input

	ToLocalNetworkGatewayBgpSettingsOutput() LocalNetworkGatewayBgpSettingsOutput
	ToLocalNetworkGatewayBgpSettingsOutputWithContext(context.Context) LocalNetworkGatewayBgpSettingsOutput
}

type LocalNetworkGatewayBgpSettingsArgs struct {
	// The BGP speaker's ASN.
	Asn pulumi.IntInput `pulumi:"asn"`
	// The BGP peering address and BGP identifier of this BGP speaker.
	BgpPeeringAddress pulumi.StringInput `pulumi:"bgpPeeringAddress"`
	// The weight added to routes learned from this BGP speaker.
	PeerWeight pulumi.IntPtrInput `pulumi:"peerWeight"`
}

func (LocalNetworkGatewayBgpSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalNetworkGatewayBgpSettings)(nil)).Elem()
}

func (i LocalNetworkGatewayBgpSettingsArgs) ToLocalNetworkGatewayBgpSettingsOutput() LocalNetworkGatewayBgpSettingsOutput {
	return i.ToLocalNetworkGatewayBgpSettingsOutputWithContext(context.Background())
}

func (i LocalNetworkGatewayBgpSettingsArgs) ToLocalNetworkGatewayBgpSettingsOutputWithContext(ctx context.Context) LocalNetworkGatewayBgpSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayBgpSettingsOutput)
}

func (i LocalNetworkGatewayBgpSettingsArgs) ToLocalNetworkGatewayBgpSettingsPtrOutput() LocalNetworkGatewayBgpSettingsPtrOutput {
	return i.ToLocalNetworkGatewayBgpSettingsPtrOutputWithContext(context.Background())
}

func (i LocalNetworkGatewayBgpSettingsArgs) ToLocalNetworkGatewayBgpSettingsPtrOutputWithContext(ctx context.Context) LocalNetworkGatewayBgpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayBgpSettingsOutput).ToLocalNetworkGatewayBgpSettingsPtrOutputWithContext(ctx)
}

// LocalNetworkGatewayBgpSettingsPtrInput is an input type that accepts LocalNetworkGatewayBgpSettingsArgs, LocalNetworkGatewayBgpSettingsPtr and LocalNetworkGatewayBgpSettingsPtrOutput values.
// You can construct a concrete instance of `LocalNetworkGatewayBgpSettingsPtrInput` via:
//
//	        LocalNetworkGatewayBgpSettingsArgs{...}
//
//	or:
//
//	        nil
type LocalNetworkGatewayBgpSettingsPtrInput interface {
	pulumi.Input

	ToLocalNetworkGatewayBgpSettingsPtrOutput() LocalNetworkGatewayBgpSettingsPtrOutput
	ToLocalNetworkGatewayBgpSettingsPtrOutputWithContext(context.Context) LocalNetworkGatewayBgpSettingsPtrOutput
}

type localNetworkGatewayBgpSettingsPtrType LocalNetworkGatewayBgpSettingsArgs

func LocalNetworkGatewayBgpSettingsPtr(v *LocalNetworkGatewayBgpSettingsArgs) LocalNetworkGatewayBgpSettingsPtrInput {
	return (*localNetworkGatewayBgpSettingsPtrType)(v)
}

func (*localNetworkGatewayBgpSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalNetworkGatewayBgpSettings)(nil)).Elem()
}

func (i *localNetworkGatewayBgpSettingsPtrType) ToLocalNetworkGatewayBgpSettingsPtrOutput() LocalNetworkGatewayBgpSettingsPtrOutput {
	return i.ToLocalNetworkGatewayBgpSettingsPtrOutputWithContext(context.Background())
}

func (i *localNetworkGatewayBgpSettingsPtrType) ToLocalNetworkGatewayBgpSettingsPtrOutputWithContext(ctx context.Context) LocalNetworkGatewayBgpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayBgpSettingsPtrOutput)
}

type LocalNetworkGatewayBgpSettingsOutput struct{ *pulumi.OutputState }

func (LocalNetworkGatewayBgpSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalNetworkGatewayBgpSettings)(nil)).Elem()
}

func (o LocalNetworkGatewayBgpSettingsOutput) ToLocalNetworkGatewayBgpSettingsOutput() LocalNetworkGatewayBgpSettingsOutput {
	return o
}

func (o LocalNetworkGatewayBgpSettingsOutput) ToLocalNetworkGatewayBgpSettingsOutputWithContext(ctx context.Context) LocalNetworkGatewayBgpSettingsOutput {
	return o
}

func (o LocalNetworkGatewayBgpSettingsOutput) ToLocalNetworkGatewayBgpSettingsPtrOutput() LocalNetworkGatewayBgpSettingsPtrOutput {
	return o.ToLocalNetworkGatewayBgpSettingsPtrOutputWithContext(context.Background())
}

func (o LocalNetworkGatewayBgpSettingsOutput) ToLocalNetworkGatewayBgpSettingsPtrOutputWithContext(ctx context.Context) LocalNetworkGatewayBgpSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LocalNetworkGatewayBgpSettings) *LocalNetworkGatewayBgpSettings {
		return &v
	}).(LocalNetworkGatewayBgpSettingsPtrOutput)
}

// The BGP speaker's ASN.
func (o LocalNetworkGatewayBgpSettingsOutput) Asn() pulumi.IntOutput {
	return o.ApplyT(func(v LocalNetworkGatewayBgpSettings) int { return v.Asn }).(pulumi.IntOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o LocalNetworkGatewayBgpSettingsOutput) BgpPeeringAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LocalNetworkGatewayBgpSettings) string { return v.BgpPeeringAddress }).(pulumi.StringOutput)
}

// The weight added to routes learned from this BGP speaker.
func (o LocalNetworkGatewayBgpSettingsOutput) PeerWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayBgpSettings) *int { return v.PeerWeight }).(pulumi.IntPtrOutput)
}

type LocalNetworkGatewayBgpSettingsPtrOutput struct{ *pulumi.OutputState }

func (LocalNetworkGatewayBgpSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalNetworkGatewayBgpSettings)(nil)).Elem()
}

func (o LocalNetworkGatewayBgpSettingsPtrOutput) ToLocalNetworkGatewayBgpSettingsPtrOutput() LocalNetworkGatewayBgpSettingsPtrOutput {
	return o
}

func (o LocalNetworkGatewayBgpSettingsPtrOutput) ToLocalNetworkGatewayBgpSettingsPtrOutputWithContext(ctx context.Context) LocalNetworkGatewayBgpSettingsPtrOutput {
	return o
}

func (o LocalNetworkGatewayBgpSettingsPtrOutput) Elem() LocalNetworkGatewayBgpSettingsOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayBgpSettings) LocalNetworkGatewayBgpSettings {
		if v != nil {
			return *v
		}
		var ret LocalNetworkGatewayBgpSettings
		return ret
	}).(LocalNetworkGatewayBgpSettingsOutput)
}

// The BGP speaker's ASN.
func (o LocalNetworkGatewayBgpSettingsPtrOutput) Asn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayBgpSettings) *int {
		if v == nil {
			return nil
		}
		return &v.Asn
	}).(pulumi.IntPtrOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o LocalNetworkGatewayBgpSettingsPtrOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayBgpSettings) *string {
		if v == nil {
			return nil
		}
		return &v.BgpPeeringAddress
	}).(pulumi.StringPtrOutput)
}

// The weight added to routes learned from this BGP speaker.
func (o LocalNetworkGatewayBgpSettingsPtrOutput) PeerWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayBgpSettings) *int {
		if v == nil {
			return nil
		}
		return v.PeerWeight
	}).(pulumi.IntPtrOutput)
}

type NetworkConnectionMonitorEndpoint struct {
	// The IP address or domain name of the Network Connection Monitor endpoint.
	Address *string `pulumi:"address"`
	// The test coverage for the Network Connection Monitor endpoint. Possible values are `AboveAverage`, `Average`, `BelowAverage`, `Default`, `Full` and `Low`.
	CoverageLevel *string `pulumi:"coverageLevel"`
	// A list of IPv4/IPv6 subnet masks or IPv4/IPv6 IP addresses to be excluded to the Network Connection Monitor endpoint.
	ExcludedIpAddresses []string `pulumi:"excludedIpAddresses"`
	// A `filter` block as defined below.
	Filter *NetworkConnectionMonitorEndpointFilter `pulumi:"filter"`
	// A list of IPv4/IPv6 subnet masks or IPv4/IPv6 IP addresses to be included to the Network Connection Monitor endpoint.
	IncludedIpAddresses []string `pulumi:"includedIpAddresses"`
	// The name of the endpoint for the Network Connection Monitor .
	Name string `pulumi:"name"`
	// The resource ID which is used as the endpoint by the Network Connection Monitor.
	TargetResourceId *string `pulumi:"targetResourceId"`
	// The endpoint type of the Network Connection Monitor. Possible values are `AzureSubnet`, `AzureVM`, `AzureVNet`, `ExternalAddress`, `MMAWorkspaceMachine` and `MMAWorkspaceNetwork`.
	TargetResourceType *string `pulumi:"targetResourceType"`
}

// NetworkConnectionMonitorEndpointInput is an input type that accepts NetworkConnectionMonitorEndpointArgs and NetworkConnectionMonitorEndpointOutput values.
// You can construct a concrete instance of `NetworkConnectionMonitorEndpointInput` via:
//
//	NetworkConnectionMonitorEndpointArgs{...}
type NetworkConnectionMonitorEndpointInput interface {
	pulumi.Input

	ToNetworkConnectionMonitorEndpointOutput() NetworkConnectionMonitorEndpointOutput
	ToNetworkConnectionMonitorEndpointOutputWithContext(context.Context) NetworkConnectionMonitorEndpointOutput
}

type NetworkConnectionMonitorEndpointArgs struct {
	// The IP address or domain name of the Network Connection Monitor endpoint.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The test coverage for the Network Connection Monitor endpoint. Possible values are `AboveAverage`, `Average`, `BelowAverage`, `Default`, `Full` and `Low`.
	CoverageLevel pulumi.StringPtrInput `pulumi:"coverageLevel"`
	// A list of IPv4/IPv6 subnet masks or IPv4/IPv6 IP addresses to be excluded to the Network Connection Monitor endpoint.
	ExcludedIpAddresses pulumi.StringArrayInput `pulumi:"excludedIpAddresses"`
	// A `filter` block as defined below.
	Filter NetworkConnectionMonitorEndpointFilterPtrInput `pulumi:"filter"`
	// A list of IPv4/IPv6 subnet masks or IPv4/IPv6 IP addresses to be included to the Network Connection Monitor endpoint.
	IncludedIpAddresses pulumi.StringArrayInput `pulumi:"includedIpAddresses"`
	// The name of the endpoint for the Network Connection Monitor .
	Name pulumi.StringInput `pulumi:"name"`
	// The resource ID which is used as the endpoint by the Network Connection Monitor.
	TargetResourceId pulumi.StringPtrInput `pulumi:"targetResourceId"`
	// The endpoint type of the Network Connection Monitor. Possible values are `AzureSubnet`, `AzureVM`, `AzureVNet`, `ExternalAddress`, `MMAWorkspaceMachine` and `MMAWorkspaceNetwork`.
	TargetResourceType pulumi.StringPtrInput `pulumi:"targetResourceType"`
}

func (NetworkConnectionMonitorEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConnectionMonitorEndpoint)(nil)).Elem()
}

func (i NetworkConnectionMonitorEndpointArgs) ToNetworkConnectionMonitorEndpointOutput() NetworkConnectionMonitorEndpointOutput {
	return i.ToNetworkConnectionMonitorEndpointOutputWithContext(context.Background())
}

func (i NetworkConnectionMonitorEndpointArgs) ToNetworkConnectionMonitorEndpointOutputWithContext(ctx context.Context) NetworkConnectionMonitorEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectionMonitorEndpointOutput)
}

// NetworkConnectionMonitorEndpointArrayInput is an input type that accepts NetworkConnectionMonitorEndpointArray and NetworkConnectionMonitorEndpointArrayOutput values.
// You can construct a concrete instance of `NetworkConnectionMonitorEndpointArrayInput` via:
//
//	NetworkConnectionMonitorEndpointArray{ NetworkConnectionMonitorEndpointArgs{...} }
type NetworkConnectionMonitorEndpointArrayInput interface {
	pulumi.Input

	ToNetworkConnectionMonitorEndpointArrayOutput() NetworkConnectionMonitorEndpointArrayOutput
	ToNetworkConnectionMonitorEndpointArrayOutputWithContext(context.Context) NetworkConnectionMonitorEndpointArrayOutput
}

type NetworkConnectionMonitorEndpointArray []NetworkConnectionMonitorEndpointInput

func (NetworkConnectionMonitorEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkConnectionMonitorEndpoint)(nil)).Elem()
}

func (i NetworkConnectionMonitorEndpointArray) ToNetworkConnectionMonitorEndpointArrayOutput() NetworkConnectionMonitorEndpointArrayOutput {
	return i.ToNetworkConnectionMonitorEndpointArrayOutputWithContext(context.Background())
}

func (i NetworkConnectionMonitorEndpointArray) ToNetworkConnectionMonitorEndpointArrayOutputWithContext(ctx context.Context) NetworkConnectionMonitorEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectionMonitorEndpointArrayOutput)
}

type NetworkConnectionMonitorEndpointOutput struct{ *pulumi.OutputState }

func (NetworkConnectionMonitorEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConnectionMonitorEndpoint)(nil)).Elem()
}

func (o NetworkConnectionMonitorEndpointOutput) ToNetworkConnectionMonitorEndpointOutput() NetworkConnectionMonitorEndpointOutput {
	return o
}

func (o NetworkConnectionMonitorEndpointOutput) ToNetworkConnectionMonitorEndpointOutputWithContext(ctx context.Context) NetworkConnectionMonitorEndpointOutput {
	return o
}

// The IP address or domain name of the Network Connection Monitor endpoint.
func (o NetworkConnectionMonitorEndpointOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorEndpoint) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The test coverage for the Network Connection Monitor endpoint. Possible values are `AboveAverage`, `Average`, `BelowAverage`, `Default`, `Full` and `Low`.
func (o NetworkConnectionMonitorEndpointOutput) CoverageLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorEndpoint) *string { return v.CoverageLevel }).(pulumi.StringPtrOutput)
}

// A list of IPv4/IPv6 subnet masks or IPv4/IPv6 IP addresses to be excluded to the Network Connection Monitor endpoint.
func (o NetworkConnectionMonitorEndpointOutput) ExcludedIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorEndpoint) []string { return v.ExcludedIpAddresses }).(pulumi.StringArrayOutput)
}

// A `filter` block as defined below.
func (o NetworkConnectionMonitorEndpointOutput) Filter() NetworkConnectionMonitorEndpointFilterPtrOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorEndpoint) *NetworkConnectionMonitorEndpointFilter { return v.Filter }).(NetworkConnectionMonitorEndpointFilterPtrOutput)
}

// A list of IPv4/IPv6 subnet masks or IPv4/IPv6 IP addresses to be included to the Network Connection Monitor endpoint.
func (o NetworkConnectionMonitorEndpointOutput) IncludedIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorEndpoint) []string { return v.IncludedIpAddresses }).(pulumi.StringArrayOutput)
}

// The name of the endpoint for the Network Connection Monitor .
func (o NetworkConnectionMonitorEndpointOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorEndpoint) string { return v.Name }).(pulumi.StringOutput)
}

// The resource ID which is used as the endpoint by the Network Connection Monitor.
func (o NetworkConnectionMonitorEndpointOutput) TargetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorEndpoint) *string { return v.TargetResourceId }).(pulumi.StringPtrOutput)
}

// The endpoint type of the Network Connection Monitor. Possible values are `AzureSubnet`, `AzureVM`, `AzureVNet`, `ExternalAddress`, `MMAWorkspaceMachine` and `MMAWorkspaceNetwork`.
func (o NetworkConnectionMonitorEndpointOutput) TargetResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorEndpoint) *string { return v.TargetResourceType }).(pulumi.StringPtrOutput)
}

type NetworkConnectionMonitorEndpointArrayOutput struct{ *pulumi.OutputState }

func (NetworkConnectionMonitorEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkConnectionMonitorEndpoint)(nil)).Elem()
}

func (o NetworkConnectionMonitorEndpointArrayOutput) ToNetworkConnectionMonitorEndpointArrayOutput() NetworkConnectionMonitorEndpointArrayOutput {
	return o
}

func (o NetworkConnectionMonitorEndpointArrayOutput) ToNetworkConnectionMonitorEndpointArrayOutputWithContext(ctx context.Context) NetworkConnectionMonitorEndpointArrayOutput {
	return o
}

func (o NetworkConnectionMonitorEndpointArrayOutput) Index(i pulumi.IntInput) NetworkConnectionMonitorEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkConnectionMonitorEndpoint {
		return vs[0].([]NetworkConnectionMonitorEndpoint)[vs[1].(int)]
	}).(NetworkConnectionMonitorEndpointOutput)
}

type NetworkConnectionMonitorEndpointFilter struct {
	// A `item` block as defined below.
	Items []NetworkConnectionMonitorEndpointFilterItem `pulumi:"items"`
	// The behaviour type of this endpoint filter. Currently the only allowed value is `Include`. Defaults to `Include`.
	Type *string `pulumi:"type"`
}

// NetworkConnectionMonitorEndpointFilterInput is an input type that accepts NetworkConnectionMonitorEndpointFilterArgs and NetworkConnectionMonitorEndpointFilterOutput values.
// You can construct a concrete instance of `NetworkConnectionMonitorEndpointFilterInput` via:
//
//	NetworkConnectionMonitorEndpointFilterArgs{...}
type NetworkConnectionMonitorEndpointFilterInput interface {
	pulumi.Input

	ToNetworkConnectionMonitorEndpointFilterOutput() NetworkConnectionMonitorEndpointFilterOutput
	ToNetworkConnectionMonitorEndpointFilterOutputWithContext(context.Context) NetworkConnectionMonitorEndpointFilterOutput
}

type NetworkConnectionMonitorEndpointFilterArgs struct {
	// A `item` block as defined below.
	Items NetworkConnectionMonitorEndpointFilterItemArrayInput `pulumi:"items"`
	// The behaviour type of this endpoint filter. Currently the only allowed value is `Include`. Defaults to `Include`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NetworkConnectionMonitorEndpointFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConnectionMonitorEndpointFilter)(nil)).Elem()
}

func (i NetworkConnectionMonitorEndpointFilterArgs) ToNetworkConnectionMonitorEndpointFilterOutput() NetworkConnectionMonitorEndpointFilterOutput {
	return i.ToNetworkConnectionMonitorEndpointFilterOutputWithContext(context.Background())
}

func (i NetworkConnectionMonitorEndpointFilterArgs) ToNetworkConnectionMonitorEndpointFilterOutputWithContext(ctx context.Context) NetworkConnectionMonitorEndpointFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectionMonitorEndpointFilterOutput)
}

func (i NetworkConnectionMonitorEndpointFilterArgs) ToNetworkConnectionMonitorEndpointFilterPtrOutput() NetworkConnectionMonitorEndpointFilterPtrOutput {
	return i.ToNetworkConnectionMonitorEndpointFilterPtrOutputWithContext(context.Background())
}

func (i NetworkConnectionMonitorEndpointFilterArgs) ToNetworkConnectionMonitorEndpointFilterPtrOutputWithContext(ctx context.Context) NetworkConnectionMonitorEndpointFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectionMonitorEndpointFilterOutput).ToNetworkConnectionMonitorEndpointFilterPtrOutputWithContext(ctx)
}

// NetworkConnectionMonitorEndpointFilterPtrInput is an input type that accepts NetworkConnectionMonitorEndpointFilterArgs, NetworkConnectionMonitorEndpointFilterPtr and NetworkConnectionMonitorEndpointFilterPtrOutput values.
// You can construct a concrete instance of `NetworkConnectionMonitorEndpointFilterPtrInput` via:
//
//	        NetworkConnectionMonitorEndpointFilterArgs{...}
//
//	or:
//
//	        nil
type NetworkConnectionMonitorEndpointFilterPtrInput interface {
	pulumi.Input

	ToNetworkConnectionMonitorEndpointFilterPtrOutput() NetworkConnectionMonitorEndpointFilterPtrOutput
	ToNetworkConnectionMonitorEndpointFilterPtrOutputWithContext(context.Context) NetworkConnectionMonitorEndpointFilterPtrOutput
}

type networkConnectionMonitorEndpointFilterPtrType NetworkConnectionMonitorEndpointFilterArgs

func NetworkConnectionMonitorEndpointFilterPtr(v *NetworkConnectionMonitorEndpointFilterArgs) NetworkConnectionMonitorEndpointFilterPtrInput {
	return (*networkConnectionMonitorEndpointFilterPtrType)(v)
}

func (*networkConnectionMonitorEndpointFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkConnectionMonitorEndpointFilter)(nil)).Elem()
}

func (i *networkConnectionMonitorEndpointFilterPtrType) ToNetworkConnectionMonitorEndpointFilterPtrOutput() NetworkConnectionMonitorEndpointFilterPtrOutput {
	return i.ToNetworkConnectionMonitorEndpointFilterPtrOutputWithContext(context.Background())
}

func (i *networkConnectionMonitorEndpointFilterPtrType) ToNetworkConnectionMonitorEndpointFilterPtrOutputWithContext(ctx context.Context) NetworkConnectionMonitorEndpointFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectionMonitorEndpointFilterPtrOutput)
}

type NetworkConnectionMonitorEndpointFilterOutput struct{ *pulumi.OutputState }

func (NetworkConnectionMonitorEndpointFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConnectionMonitorEndpointFilter)(nil)).Elem()
}

func (o NetworkConnectionMonitorEndpointFilterOutput) ToNetworkConnectionMonitorEndpointFilterOutput() NetworkConnectionMonitorEndpointFilterOutput {
	return o
}

func (o NetworkConnectionMonitorEndpointFilterOutput) ToNetworkConnectionMonitorEndpointFilterOutputWithContext(ctx context.Context) NetworkConnectionMonitorEndpointFilterOutput {
	return o
}

func (o NetworkConnectionMonitorEndpointFilterOutput) ToNetworkConnectionMonitorEndpointFilterPtrOutput() NetworkConnectionMonitorEndpointFilterPtrOutput {
	return o.ToNetworkConnectionMonitorEndpointFilterPtrOutputWithContext(context.Background())
}

func (o NetworkConnectionMonitorEndpointFilterOutput) ToNetworkConnectionMonitorEndpointFilterPtrOutputWithContext(ctx context.Context) NetworkConnectionMonitorEndpointFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkConnectionMonitorEndpointFilter) *NetworkConnectionMonitorEndpointFilter {
		return &v
	}).(NetworkConnectionMonitorEndpointFilterPtrOutput)
}

// A `item` block as defined below.
func (o NetworkConnectionMonitorEndpointFilterOutput) Items() NetworkConnectionMonitorEndpointFilterItemArrayOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorEndpointFilter) []NetworkConnectionMonitorEndpointFilterItem {
		return v.Items
	}).(NetworkConnectionMonitorEndpointFilterItemArrayOutput)
}

// The behaviour type of this endpoint filter. Currently the only allowed value is `Include`. Defaults to `Include`.
func (o NetworkConnectionMonitorEndpointFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorEndpointFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NetworkConnectionMonitorEndpointFilterPtrOutput struct{ *pulumi.OutputState }

func (NetworkConnectionMonitorEndpointFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkConnectionMonitorEndpointFilter)(nil)).Elem()
}

func (o NetworkConnectionMonitorEndpointFilterPtrOutput) ToNetworkConnectionMonitorEndpointFilterPtrOutput() NetworkConnectionMonitorEndpointFilterPtrOutput {
	return o
}

func (o NetworkConnectionMonitorEndpointFilterPtrOutput) ToNetworkConnectionMonitorEndpointFilterPtrOutputWithContext(ctx context.Context) NetworkConnectionMonitorEndpointFilterPtrOutput {
	return o
}

func (o NetworkConnectionMonitorEndpointFilterPtrOutput) Elem() NetworkConnectionMonitorEndpointFilterOutput {
	return o.ApplyT(func(v *NetworkConnectionMonitorEndpointFilter) NetworkConnectionMonitorEndpointFilter {
		if v != nil {
			return *v
		}
		var ret NetworkConnectionMonitorEndpointFilter
		return ret
	}).(NetworkConnectionMonitorEndpointFilterOutput)
}

// A `item` block as defined below.
func (o NetworkConnectionMonitorEndpointFilterPtrOutput) Items() NetworkConnectionMonitorEndpointFilterItemArrayOutput {
	return o.ApplyT(func(v *NetworkConnectionMonitorEndpointFilter) []NetworkConnectionMonitorEndpointFilterItem {
		if v == nil {
			return nil
		}
		return v.Items
	}).(NetworkConnectionMonitorEndpointFilterItemArrayOutput)
}

// The behaviour type of this endpoint filter. Currently the only allowed value is `Include`. Defaults to `Include`.
func (o NetworkConnectionMonitorEndpointFilterPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkConnectionMonitorEndpointFilter) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type NetworkConnectionMonitorEndpointFilterItem struct {
	// The address of the filter item.
	Address *string `pulumi:"address"`
	// The type of items included in the filter. Possible values are `AgentAddress`. Defaults to `AgentAddress`.
	Type *string `pulumi:"type"`
}

// NetworkConnectionMonitorEndpointFilterItemInput is an input type that accepts NetworkConnectionMonitorEndpointFilterItemArgs and NetworkConnectionMonitorEndpointFilterItemOutput values.
// You can construct a concrete instance of `NetworkConnectionMonitorEndpointFilterItemInput` via:
//
//	NetworkConnectionMonitorEndpointFilterItemArgs{...}
type NetworkConnectionMonitorEndpointFilterItemInput interface {
	pulumi.Input

	ToNetworkConnectionMonitorEndpointFilterItemOutput() NetworkConnectionMonitorEndpointFilterItemOutput
	ToNetworkConnectionMonitorEndpointFilterItemOutputWithContext(context.Context) NetworkConnectionMonitorEndpointFilterItemOutput
}

type NetworkConnectionMonitorEndpointFilterItemArgs struct {
	// The address of the filter item.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The type of items included in the filter. Possible values are `AgentAddress`. Defaults to `AgentAddress`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (NetworkConnectionMonitorEndpointFilterItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConnectionMonitorEndpointFilterItem)(nil)).Elem()
}

func (i NetworkConnectionMonitorEndpointFilterItemArgs) ToNetworkConnectionMonitorEndpointFilterItemOutput() NetworkConnectionMonitorEndpointFilterItemOutput {
	return i.ToNetworkConnectionMonitorEndpointFilterItemOutputWithContext(context.Background())
}

func (i NetworkConnectionMonitorEndpointFilterItemArgs) ToNetworkConnectionMonitorEndpointFilterItemOutputWithContext(ctx context.Context) NetworkConnectionMonitorEndpointFilterItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectionMonitorEndpointFilterItemOutput)
}

// NetworkConnectionMonitorEndpointFilterItemArrayInput is an input type that accepts NetworkConnectionMonitorEndpointFilterItemArray and NetworkConnectionMonitorEndpointFilterItemArrayOutput values.
// You can construct a concrete instance of `NetworkConnectionMonitorEndpointFilterItemArrayInput` via:
//
//	NetworkConnectionMonitorEndpointFilterItemArray{ NetworkConnectionMonitorEndpointFilterItemArgs{...} }
type NetworkConnectionMonitorEndpointFilterItemArrayInput interface {
	pulumi.Input

	ToNetworkConnectionMonitorEndpointFilterItemArrayOutput() NetworkConnectionMonitorEndpointFilterItemArrayOutput
	ToNetworkConnectionMonitorEndpointFilterItemArrayOutputWithContext(context.Context) NetworkConnectionMonitorEndpointFilterItemArrayOutput
}

type NetworkConnectionMonitorEndpointFilterItemArray []NetworkConnectionMonitorEndpointFilterItemInput

func (NetworkConnectionMonitorEndpointFilterItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkConnectionMonitorEndpointFilterItem)(nil)).Elem()
}

func (i NetworkConnectionMonitorEndpointFilterItemArray) ToNetworkConnectionMonitorEndpointFilterItemArrayOutput() NetworkConnectionMonitorEndpointFilterItemArrayOutput {
	return i.ToNetworkConnectionMonitorEndpointFilterItemArrayOutputWithContext(context.Background())
}

func (i NetworkConnectionMonitorEndpointFilterItemArray) ToNetworkConnectionMonitorEndpointFilterItemArrayOutputWithContext(ctx context.Context) NetworkConnectionMonitorEndpointFilterItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectionMonitorEndpointFilterItemArrayOutput)
}

type NetworkConnectionMonitorEndpointFilterItemOutput struct{ *pulumi.OutputState }

func (NetworkConnectionMonitorEndpointFilterItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConnectionMonitorEndpointFilterItem)(nil)).Elem()
}

func (o NetworkConnectionMonitorEndpointFilterItemOutput) ToNetworkConnectionMonitorEndpointFilterItemOutput() NetworkConnectionMonitorEndpointFilterItemOutput {
	return o
}

func (o NetworkConnectionMonitorEndpointFilterItemOutput) ToNetworkConnectionMonitorEndpointFilterItemOutputWithContext(ctx context.Context) NetworkConnectionMonitorEndpointFilterItemOutput {
	return o
}

// The address of the filter item.
func (o NetworkConnectionMonitorEndpointFilterItemOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorEndpointFilterItem) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The type of items included in the filter. Possible values are `AgentAddress`. Defaults to `AgentAddress`.
func (o NetworkConnectionMonitorEndpointFilterItemOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorEndpointFilterItem) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type NetworkConnectionMonitorEndpointFilterItemArrayOutput struct{ *pulumi.OutputState }

func (NetworkConnectionMonitorEndpointFilterItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkConnectionMonitorEndpointFilterItem)(nil)).Elem()
}

func (o NetworkConnectionMonitorEndpointFilterItemArrayOutput) ToNetworkConnectionMonitorEndpointFilterItemArrayOutput() NetworkConnectionMonitorEndpointFilterItemArrayOutput {
	return o
}

func (o NetworkConnectionMonitorEndpointFilterItemArrayOutput) ToNetworkConnectionMonitorEndpointFilterItemArrayOutputWithContext(ctx context.Context) NetworkConnectionMonitorEndpointFilterItemArrayOutput {
	return o
}

func (o NetworkConnectionMonitorEndpointFilterItemArrayOutput) Index(i pulumi.IntInput) NetworkConnectionMonitorEndpointFilterItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkConnectionMonitorEndpointFilterItem {
		return vs[0].([]NetworkConnectionMonitorEndpointFilterItem)[vs[1].(int)]
	}).(NetworkConnectionMonitorEndpointFilterItemOutput)
}

type NetworkConnectionMonitorTestConfiguration struct {
	// A `httpConfiguration` block as defined below.
	HttpConfiguration *NetworkConnectionMonitorTestConfigurationHttpConfiguration `pulumi:"httpConfiguration"`
	// A `icmpConfiguration` block as defined below.
	IcmpConfiguration *NetworkConnectionMonitorTestConfigurationIcmpConfiguration `pulumi:"icmpConfiguration"`
	// The name of test configuration for the Network Connection Monitor.
	Name string `pulumi:"name"`
	// The preferred IP version which is used in the test evaluation. Possible values are `IPv4` and `IPv6`.
	PreferredIpVersion *string `pulumi:"preferredIpVersion"`
	// The protocol used to evaluate tests. Possible values are `Tcp`, `Http` and `Icmp`.
	Protocol string `pulumi:"protocol"`
	// A `successThreshold` block as defined below.
	SuccessThreshold *NetworkConnectionMonitorTestConfigurationSuccessThreshold `pulumi:"successThreshold"`
	// A `tcpConfiguration` block as defined below.
	TcpConfiguration *NetworkConnectionMonitorTestConfigurationTcpConfiguration `pulumi:"tcpConfiguration"`
	// The time interval in seconds at which the test evaluation will happen. Defaults to `60`.
	TestFrequencyInSeconds *int `pulumi:"testFrequencyInSeconds"`
}

// NetworkConnectionMonitorTestConfigurationInput is an input type that accepts NetworkConnectionMonitorTestConfigurationArgs and NetworkConnectionMonitorTestConfigurationOutput values.
// You can construct a concrete instance of `NetworkConnectionMonitorTestConfigurationInput` via:
//
//	NetworkConnectionMonitorTestConfigurationArgs{...}
type NetworkConnectionMonitorTestConfigurationInput interface {
	pulumi.Input

	ToNetworkConnectionMonitorTestConfigurationOutput() NetworkConnectionMonitorTestConfigurationOutput
	ToNetworkConnectionMonitorTestConfigurationOutputWithContext(context.Context) NetworkConnectionMonitorTestConfigurationOutput
}

type NetworkConnectionMonitorTestConfigurationArgs struct {
	// A `httpConfiguration` block as defined below.
	HttpConfiguration NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrInput `pulumi:"httpConfiguration"`
	// A `icmpConfiguration` block as defined below.
	IcmpConfiguration NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrInput `pulumi:"icmpConfiguration"`
	// The name of test configuration for the Network Connection Monitor.
	Name pulumi.StringInput `pulumi:"name"`
	// The preferred IP version which is used in the test evaluation. Possible values are `IPv4` and `IPv6`.
	PreferredIpVersion pulumi.StringPtrInput `pulumi:"preferredIpVersion"`
	// The protocol used to evaluate tests. Possible values are `Tcp`, `Http` and `Icmp`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// A `successThreshold` block as defined below.
	SuccessThreshold NetworkConnectionMonitorTestConfigurationSuccessThresholdPtrInput `pulumi:"successThreshold"`
	// A `tcpConfiguration` block as defined below.
	TcpConfiguration NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrInput `pulumi:"tcpConfiguration"`
	// The time interval in seconds at which the test evaluation will happen. Defaults to `60`.
	TestFrequencyInSeconds pulumi.IntPtrInput `pulumi:"testFrequencyInSeconds"`
}

func (NetworkConnectionMonitorTestConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConnectionMonitorTestConfiguration)(nil)).Elem()
}

func (i NetworkConnectionMonitorTestConfigurationArgs) ToNetworkConnectionMonitorTestConfigurationOutput() NetworkConnectionMonitorTestConfigurationOutput {
	return i.ToNetworkConnectionMonitorTestConfigurationOutputWithContext(context.Background())
}

func (i NetworkConnectionMonitorTestConfigurationArgs) ToNetworkConnectionMonitorTestConfigurationOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectionMonitorTestConfigurationOutput)
}

// NetworkConnectionMonitorTestConfigurationArrayInput is an input type that accepts NetworkConnectionMonitorTestConfigurationArray and NetworkConnectionMonitorTestConfigurationArrayOutput values.
// You can construct a concrete instance of `NetworkConnectionMonitorTestConfigurationArrayInput` via:
//
//	NetworkConnectionMonitorTestConfigurationArray{ NetworkConnectionMonitorTestConfigurationArgs{...} }
type NetworkConnectionMonitorTestConfigurationArrayInput interface {
	pulumi.Input

	ToNetworkConnectionMonitorTestConfigurationArrayOutput() NetworkConnectionMonitorTestConfigurationArrayOutput
	ToNetworkConnectionMonitorTestConfigurationArrayOutputWithContext(context.Context) NetworkConnectionMonitorTestConfigurationArrayOutput
}

type NetworkConnectionMonitorTestConfigurationArray []NetworkConnectionMonitorTestConfigurationInput

func (NetworkConnectionMonitorTestConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkConnectionMonitorTestConfiguration)(nil)).Elem()
}

func (i NetworkConnectionMonitorTestConfigurationArray) ToNetworkConnectionMonitorTestConfigurationArrayOutput() NetworkConnectionMonitorTestConfigurationArrayOutput {
	return i.ToNetworkConnectionMonitorTestConfigurationArrayOutputWithContext(context.Background())
}

func (i NetworkConnectionMonitorTestConfigurationArray) ToNetworkConnectionMonitorTestConfigurationArrayOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectionMonitorTestConfigurationArrayOutput)
}

type NetworkConnectionMonitorTestConfigurationOutput struct{ *pulumi.OutputState }

func (NetworkConnectionMonitorTestConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConnectionMonitorTestConfiguration)(nil)).Elem()
}

func (o NetworkConnectionMonitorTestConfigurationOutput) ToNetworkConnectionMonitorTestConfigurationOutput() NetworkConnectionMonitorTestConfigurationOutput {
	return o
}

func (o NetworkConnectionMonitorTestConfigurationOutput) ToNetworkConnectionMonitorTestConfigurationOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationOutput {
	return o
}

// A `httpConfiguration` block as defined below.
func (o NetworkConnectionMonitorTestConfigurationOutput) HttpConfiguration() NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorTestConfiguration) *NetworkConnectionMonitorTestConfigurationHttpConfiguration {
		return v.HttpConfiguration
	}).(NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput)
}

// A `icmpConfiguration` block as defined below.
func (o NetworkConnectionMonitorTestConfigurationOutput) IcmpConfiguration() NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorTestConfiguration) *NetworkConnectionMonitorTestConfigurationIcmpConfiguration {
		return v.IcmpConfiguration
	}).(NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutput)
}

// The name of test configuration for the Network Connection Monitor.
func (o NetworkConnectionMonitorTestConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorTestConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// The preferred IP version which is used in the test evaluation. Possible values are `IPv4` and `IPv6`.
func (o NetworkConnectionMonitorTestConfigurationOutput) PreferredIpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorTestConfiguration) *string { return v.PreferredIpVersion }).(pulumi.StringPtrOutput)
}

// The protocol used to evaluate tests. Possible values are `Tcp`, `Http` and `Icmp`.
func (o NetworkConnectionMonitorTestConfigurationOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorTestConfiguration) string { return v.Protocol }).(pulumi.StringOutput)
}

// A `successThreshold` block as defined below.
func (o NetworkConnectionMonitorTestConfigurationOutput) SuccessThreshold() NetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorTestConfiguration) *NetworkConnectionMonitorTestConfigurationSuccessThreshold {
		return v.SuccessThreshold
	}).(NetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutput)
}

// A `tcpConfiguration` block as defined below.
func (o NetworkConnectionMonitorTestConfigurationOutput) TcpConfiguration() NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorTestConfiguration) *NetworkConnectionMonitorTestConfigurationTcpConfiguration {
		return v.TcpConfiguration
	}).(NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutput)
}

// The time interval in seconds at which the test evaluation will happen. Defaults to `60`.
func (o NetworkConnectionMonitorTestConfigurationOutput) TestFrequencyInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorTestConfiguration) *int { return v.TestFrequencyInSeconds }).(pulumi.IntPtrOutput)
}

type NetworkConnectionMonitorTestConfigurationArrayOutput struct{ *pulumi.OutputState }

func (NetworkConnectionMonitorTestConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkConnectionMonitorTestConfiguration)(nil)).Elem()
}

func (o NetworkConnectionMonitorTestConfigurationArrayOutput) ToNetworkConnectionMonitorTestConfigurationArrayOutput() NetworkConnectionMonitorTestConfigurationArrayOutput {
	return o
}

func (o NetworkConnectionMonitorTestConfigurationArrayOutput) ToNetworkConnectionMonitorTestConfigurationArrayOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationArrayOutput {
	return o
}

func (o NetworkConnectionMonitorTestConfigurationArrayOutput) Index(i pulumi.IntInput) NetworkConnectionMonitorTestConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkConnectionMonitorTestConfiguration {
		return vs[0].([]NetworkConnectionMonitorTestConfiguration)[vs[1].(int)]
	}).(NetworkConnectionMonitorTestConfigurationOutput)
}

type NetworkConnectionMonitorTestConfigurationHttpConfiguration struct {
	// The HTTP method for the HTTP request. Possible values are `Get` and `Post`. Defaults to `Get`.
	Method *string `pulumi:"method"`
	// The path component of the URI. It only accepts the absolute path.
	Path *string `pulumi:"path"`
	// The port for the HTTP connection.
	Port *int `pulumi:"port"`
	// Should HTTPS be preferred over HTTP in cases where the choice is not explicit? Defaults to `false`.
	PreferHttps *bool `pulumi:"preferHttps"`
	// A `requestHeader` block as defined below.
	RequestHeaders []NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeader `pulumi:"requestHeaders"`
	// The HTTP status codes to consider successful. For instance, `2xx`, `301-304` and `418`.
	ValidStatusCodeRanges []string `pulumi:"validStatusCodeRanges"`
}

// NetworkConnectionMonitorTestConfigurationHttpConfigurationInput is an input type that accepts NetworkConnectionMonitorTestConfigurationHttpConfigurationArgs and NetworkConnectionMonitorTestConfigurationHttpConfigurationOutput values.
// You can construct a concrete instance of `NetworkConnectionMonitorTestConfigurationHttpConfigurationInput` via:
//
//	NetworkConnectionMonitorTestConfigurationHttpConfigurationArgs{...}
type NetworkConnectionMonitorTestConfigurationHttpConfigurationInput interface {
	pulumi.Input

	ToNetworkConnectionMonitorTestConfigurationHttpConfigurationOutput() NetworkConnectionMonitorTestConfigurationHttpConfigurationOutput
	ToNetworkConnectionMonitorTestConfigurationHttpConfigurationOutputWithContext(context.Context) NetworkConnectionMonitorTestConfigurationHttpConfigurationOutput
}

type NetworkConnectionMonitorTestConfigurationHttpConfigurationArgs struct {
	// The HTTP method for the HTTP request. Possible values are `Get` and `Post`. Defaults to `Get`.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// The path component of the URI. It only accepts the absolute path.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port for the HTTP connection.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Should HTTPS be preferred over HTTP in cases where the choice is not explicit? Defaults to `false`.
	PreferHttps pulumi.BoolPtrInput `pulumi:"preferHttps"`
	// A `requestHeader` block as defined below.
	RequestHeaders NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayInput `pulumi:"requestHeaders"`
	// The HTTP status codes to consider successful. For instance, `2xx`, `301-304` and `418`.
	ValidStatusCodeRanges pulumi.StringArrayInput `pulumi:"validStatusCodeRanges"`
}

func (NetworkConnectionMonitorTestConfigurationHttpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConnectionMonitorTestConfigurationHttpConfiguration)(nil)).Elem()
}

func (i NetworkConnectionMonitorTestConfigurationHttpConfigurationArgs) ToNetworkConnectionMonitorTestConfigurationHttpConfigurationOutput() NetworkConnectionMonitorTestConfigurationHttpConfigurationOutput {
	return i.ToNetworkConnectionMonitorTestConfigurationHttpConfigurationOutputWithContext(context.Background())
}

func (i NetworkConnectionMonitorTestConfigurationHttpConfigurationArgs) ToNetworkConnectionMonitorTestConfigurationHttpConfigurationOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationHttpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectionMonitorTestConfigurationHttpConfigurationOutput)
}

func (i NetworkConnectionMonitorTestConfigurationHttpConfigurationArgs) ToNetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput() NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput {
	return i.ToNetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutputWithContext(context.Background())
}

func (i NetworkConnectionMonitorTestConfigurationHttpConfigurationArgs) ToNetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectionMonitorTestConfigurationHttpConfigurationOutput).ToNetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutputWithContext(ctx)
}

// NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrInput is an input type that accepts NetworkConnectionMonitorTestConfigurationHttpConfigurationArgs, NetworkConnectionMonitorTestConfigurationHttpConfigurationPtr and NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput values.
// You can construct a concrete instance of `NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrInput` via:
//
//	        NetworkConnectionMonitorTestConfigurationHttpConfigurationArgs{...}
//
//	or:
//
//	        nil
type NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrInput interface {
	pulumi.Input

	ToNetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput() NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput
	ToNetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutputWithContext(context.Context) NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput
}

type networkConnectionMonitorTestConfigurationHttpConfigurationPtrType NetworkConnectionMonitorTestConfigurationHttpConfigurationArgs

func NetworkConnectionMonitorTestConfigurationHttpConfigurationPtr(v *NetworkConnectionMonitorTestConfigurationHttpConfigurationArgs) NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrInput {
	return (*networkConnectionMonitorTestConfigurationHttpConfigurationPtrType)(v)
}

func (*networkConnectionMonitorTestConfigurationHttpConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkConnectionMonitorTestConfigurationHttpConfiguration)(nil)).Elem()
}

func (i *networkConnectionMonitorTestConfigurationHttpConfigurationPtrType) ToNetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput() NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput {
	return i.ToNetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutputWithContext(context.Background())
}

func (i *networkConnectionMonitorTestConfigurationHttpConfigurationPtrType) ToNetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput)
}

type NetworkConnectionMonitorTestConfigurationHttpConfigurationOutput struct{ *pulumi.OutputState }

func (NetworkConnectionMonitorTestConfigurationHttpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConnectionMonitorTestConfigurationHttpConfiguration)(nil)).Elem()
}

func (o NetworkConnectionMonitorTestConfigurationHttpConfigurationOutput) ToNetworkConnectionMonitorTestConfigurationHttpConfigurationOutput() NetworkConnectionMonitorTestConfigurationHttpConfigurationOutput {
	return o
}

func (o NetworkConnectionMonitorTestConfigurationHttpConfigurationOutput) ToNetworkConnectionMonitorTestConfigurationHttpConfigurationOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationHttpConfigurationOutput {
	return o
}

func (o NetworkConnectionMonitorTestConfigurationHttpConfigurationOutput) ToNetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput() NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput {
	return o.ToNetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutputWithContext(context.Background())
}

func (o NetworkConnectionMonitorTestConfigurationHttpConfigurationOutput) ToNetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkConnectionMonitorTestConfigurationHttpConfiguration) *NetworkConnectionMonitorTestConfigurationHttpConfiguration {
		return &v
	}).(NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput)
}

// The HTTP method for the HTTP request. Possible values are `Get` and `Post`. Defaults to `Get`.
func (o NetworkConnectionMonitorTestConfigurationHttpConfigurationOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorTestConfigurationHttpConfiguration) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// The path component of the URI. It only accepts the absolute path.
func (o NetworkConnectionMonitorTestConfigurationHttpConfigurationOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorTestConfigurationHttpConfiguration) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port for the HTTP connection.
func (o NetworkConnectionMonitorTestConfigurationHttpConfigurationOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorTestConfigurationHttpConfiguration) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Should HTTPS be preferred over HTTP in cases where the choice is not explicit? Defaults to `false`.
func (o NetworkConnectionMonitorTestConfigurationHttpConfigurationOutput) PreferHttps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorTestConfigurationHttpConfiguration) *bool { return v.PreferHttps }).(pulumi.BoolPtrOutput)
}

// A `requestHeader` block as defined below.
func (o NetworkConnectionMonitorTestConfigurationHttpConfigurationOutput) RequestHeaders() NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorTestConfigurationHttpConfiguration) []NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeader {
		return v.RequestHeaders
	}).(NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayOutput)
}

// The HTTP status codes to consider successful. For instance, `2xx`, `301-304` and `418`.
func (o NetworkConnectionMonitorTestConfigurationHttpConfigurationOutput) ValidStatusCodeRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorTestConfigurationHttpConfiguration) []string {
		return v.ValidStatusCodeRanges
	}).(pulumi.StringArrayOutput)
}

type NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput struct{ *pulumi.OutputState }

func (NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkConnectionMonitorTestConfigurationHttpConfiguration)(nil)).Elem()
}

func (o NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput) ToNetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput() NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput {
	return o
}

func (o NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput) ToNetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput {
	return o
}

func (o NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput) Elem() NetworkConnectionMonitorTestConfigurationHttpConfigurationOutput {
	return o.ApplyT(func(v *NetworkConnectionMonitorTestConfigurationHttpConfiguration) NetworkConnectionMonitorTestConfigurationHttpConfiguration {
		if v != nil {
			return *v
		}
		var ret NetworkConnectionMonitorTestConfigurationHttpConfiguration
		return ret
	}).(NetworkConnectionMonitorTestConfigurationHttpConfigurationOutput)
}

// The HTTP method for the HTTP request. Possible values are `Get` and `Post`. Defaults to `Get`.
func (o NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkConnectionMonitorTestConfigurationHttpConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// The path component of the URI. It only accepts the absolute path.
func (o NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkConnectionMonitorTestConfigurationHttpConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The port for the HTTP connection.
func (o NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkConnectionMonitorTestConfigurationHttpConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Should HTTPS be preferred over HTTP in cases where the choice is not explicit? Defaults to `false`.
func (o NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput) PreferHttps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkConnectionMonitorTestConfigurationHttpConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.PreferHttps
	}).(pulumi.BoolPtrOutput)
}

// A `requestHeader` block as defined below.
func (o NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput) RequestHeaders() NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayOutput {
	return o.ApplyT(func(v *NetworkConnectionMonitorTestConfigurationHttpConfiguration) []NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeader {
		if v == nil {
			return nil
		}
		return v.RequestHeaders
	}).(NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayOutput)
}

// The HTTP status codes to consider successful. For instance, `2xx`, `301-304` and `418`.
func (o NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput) ValidStatusCodeRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkConnectionMonitorTestConfigurationHttpConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.ValidStatusCodeRanges
	}).(pulumi.StringArrayOutput)
}

type NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeader struct {
	// The name of the HTTP header.
	Name string `pulumi:"name"`
	// The value of the HTTP header.
	Value string `pulumi:"value"`
}

// NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderInput is an input type that accepts NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArgs and NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderOutput values.
// You can construct a concrete instance of `NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderInput` via:
//
//	NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArgs{...}
type NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderInput interface {
	pulumi.Input

	ToNetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderOutput() NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderOutput
	ToNetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderOutputWithContext(context.Context) NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderOutput
}

type NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArgs struct {
	// The name of the HTTP header.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the HTTP header.
	Value pulumi.StringInput `pulumi:"value"`
}

func (NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeader)(nil)).Elem()
}

func (i NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArgs) ToNetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderOutput() NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderOutput {
	return i.ToNetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderOutputWithContext(context.Background())
}

func (i NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArgs) ToNetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderOutput)
}

// NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayInput is an input type that accepts NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArray and NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayOutput values.
// You can construct a concrete instance of `NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayInput` via:
//
//	NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArray{ NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArgs{...} }
type NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayInput interface {
	pulumi.Input

	ToNetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayOutput() NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayOutput
	ToNetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayOutputWithContext(context.Context) NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayOutput
}

type NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArray []NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderInput

func (NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeader)(nil)).Elem()
}

func (i NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArray) ToNetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayOutput() NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayOutput {
	return i.ToNetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayOutputWithContext(context.Background())
}

func (i NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArray) ToNetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayOutput)
}

type NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderOutput struct{ *pulumi.OutputState }

func (NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeader)(nil)).Elem()
}

func (o NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderOutput) ToNetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderOutput() NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderOutput {
	return o
}

func (o NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderOutput) ToNetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderOutput {
	return o
}

// The name of the HTTP header.
func (o NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeader) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the HTTP header.
func (o NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeader) string { return v.Value }).(pulumi.StringOutput)
}

type NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayOutput struct{ *pulumi.OutputState }

func (NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeader)(nil)).Elem()
}

func (o NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayOutput) ToNetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayOutput() NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayOutput {
	return o
}

func (o NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayOutput) ToNetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayOutput {
	return o
}

func (o NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayOutput) Index(i pulumi.IntInput) NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeader {
		return vs[0].([]NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeader)[vs[1].(int)]
	}).(NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderOutput)
}

type NetworkConnectionMonitorTestConfigurationIcmpConfiguration struct {
	// Should path evaluation with trace route be enabled? Defaults to `true`.
	TraceRouteEnabled *bool `pulumi:"traceRouteEnabled"`
}

// NetworkConnectionMonitorTestConfigurationIcmpConfigurationInput is an input type that accepts NetworkConnectionMonitorTestConfigurationIcmpConfigurationArgs and NetworkConnectionMonitorTestConfigurationIcmpConfigurationOutput values.
// You can construct a concrete instance of `NetworkConnectionMonitorTestConfigurationIcmpConfigurationInput` via:
//
//	NetworkConnectionMonitorTestConfigurationIcmpConfigurationArgs{...}
type NetworkConnectionMonitorTestConfigurationIcmpConfigurationInput interface {
	pulumi.Input

	ToNetworkConnectionMonitorTestConfigurationIcmpConfigurationOutput() NetworkConnectionMonitorTestConfigurationIcmpConfigurationOutput
	ToNetworkConnectionMonitorTestConfigurationIcmpConfigurationOutputWithContext(context.Context) NetworkConnectionMonitorTestConfigurationIcmpConfigurationOutput
}

type NetworkConnectionMonitorTestConfigurationIcmpConfigurationArgs struct {
	// Should path evaluation with trace route be enabled? Defaults to `true`.
	TraceRouteEnabled pulumi.BoolPtrInput `pulumi:"traceRouteEnabled"`
}

func (NetworkConnectionMonitorTestConfigurationIcmpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConnectionMonitorTestConfigurationIcmpConfiguration)(nil)).Elem()
}

func (i NetworkConnectionMonitorTestConfigurationIcmpConfigurationArgs) ToNetworkConnectionMonitorTestConfigurationIcmpConfigurationOutput() NetworkConnectionMonitorTestConfigurationIcmpConfigurationOutput {
	return i.ToNetworkConnectionMonitorTestConfigurationIcmpConfigurationOutputWithContext(context.Background())
}

func (i NetworkConnectionMonitorTestConfigurationIcmpConfigurationArgs) ToNetworkConnectionMonitorTestConfigurationIcmpConfigurationOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationIcmpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectionMonitorTestConfigurationIcmpConfigurationOutput)
}

func (i NetworkConnectionMonitorTestConfigurationIcmpConfigurationArgs) ToNetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutput() NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutput {
	return i.ToNetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutputWithContext(context.Background())
}

func (i NetworkConnectionMonitorTestConfigurationIcmpConfigurationArgs) ToNetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectionMonitorTestConfigurationIcmpConfigurationOutput).ToNetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutputWithContext(ctx)
}

// NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrInput is an input type that accepts NetworkConnectionMonitorTestConfigurationIcmpConfigurationArgs, NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtr and NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutput values.
// You can construct a concrete instance of `NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrInput` via:
//
//	        NetworkConnectionMonitorTestConfigurationIcmpConfigurationArgs{...}
//
//	or:
//
//	        nil
type NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrInput interface {
	pulumi.Input

	ToNetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutput() NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutput
	ToNetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutputWithContext(context.Context) NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutput
}

type networkConnectionMonitorTestConfigurationIcmpConfigurationPtrType NetworkConnectionMonitorTestConfigurationIcmpConfigurationArgs

func NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtr(v *NetworkConnectionMonitorTestConfigurationIcmpConfigurationArgs) NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrInput {
	return (*networkConnectionMonitorTestConfigurationIcmpConfigurationPtrType)(v)
}

func (*networkConnectionMonitorTestConfigurationIcmpConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkConnectionMonitorTestConfigurationIcmpConfiguration)(nil)).Elem()
}

func (i *networkConnectionMonitorTestConfigurationIcmpConfigurationPtrType) ToNetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutput() NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutput {
	return i.ToNetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutputWithContext(context.Background())
}

func (i *networkConnectionMonitorTestConfigurationIcmpConfigurationPtrType) ToNetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutput)
}

type NetworkConnectionMonitorTestConfigurationIcmpConfigurationOutput struct{ *pulumi.OutputState }

func (NetworkConnectionMonitorTestConfigurationIcmpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConnectionMonitorTestConfigurationIcmpConfiguration)(nil)).Elem()
}

func (o NetworkConnectionMonitorTestConfigurationIcmpConfigurationOutput) ToNetworkConnectionMonitorTestConfigurationIcmpConfigurationOutput() NetworkConnectionMonitorTestConfigurationIcmpConfigurationOutput {
	return o
}

func (o NetworkConnectionMonitorTestConfigurationIcmpConfigurationOutput) ToNetworkConnectionMonitorTestConfigurationIcmpConfigurationOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationIcmpConfigurationOutput {
	return o
}

func (o NetworkConnectionMonitorTestConfigurationIcmpConfigurationOutput) ToNetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutput() NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutput {
	return o.ToNetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutputWithContext(context.Background())
}

func (o NetworkConnectionMonitorTestConfigurationIcmpConfigurationOutput) ToNetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkConnectionMonitorTestConfigurationIcmpConfiguration) *NetworkConnectionMonitorTestConfigurationIcmpConfiguration {
		return &v
	}).(NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutput)
}

// Should path evaluation with trace route be enabled? Defaults to `true`.
func (o NetworkConnectionMonitorTestConfigurationIcmpConfigurationOutput) TraceRouteEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorTestConfigurationIcmpConfiguration) *bool { return v.TraceRouteEnabled }).(pulumi.BoolPtrOutput)
}

type NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutput struct{ *pulumi.OutputState }

func (NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkConnectionMonitorTestConfigurationIcmpConfiguration)(nil)).Elem()
}

func (o NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutput) ToNetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutput() NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutput {
	return o
}

func (o NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutput) ToNetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutput {
	return o
}

func (o NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutput) Elem() NetworkConnectionMonitorTestConfigurationIcmpConfigurationOutput {
	return o.ApplyT(func(v *NetworkConnectionMonitorTestConfigurationIcmpConfiguration) NetworkConnectionMonitorTestConfigurationIcmpConfiguration {
		if v != nil {
			return *v
		}
		var ret NetworkConnectionMonitorTestConfigurationIcmpConfiguration
		return ret
	}).(NetworkConnectionMonitorTestConfigurationIcmpConfigurationOutput)
}

// Should path evaluation with trace route be enabled? Defaults to `true`.
func (o NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutput) TraceRouteEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkConnectionMonitorTestConfigurationIcmpConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.TraceRouteEnabled
	}).(pulumi.BoolPtrOutput)
}

type NetworkConnectionMonitorTestConfigurationSuccessThreshold struct {
	// The maximum percentage of failed checks permitted for a test to be successful.
	ChecksFailedPercent *int `pulumi:"checksFailedPercent"`
	// The maximum round-trip time in milliseconds permitted for a test to be successful.
	RoundTripTimeMs *float64 `pulumi:"roundTripTimeMs"`
}

// NetworkConnectionMonitorTestConfigurationSuccessThresholdInput is an input type that accepts NetworkConnectionMonitorTestConfigurationSuccessThresholdArgs and NetworkConnectionMonitorTestConfigurationSuccessThresholdOutput values.
// You can construct a concrete instance of `NetworkConnectionMonitorTestConfigurationSuccessThresholdInput` via:
//
//	NetworkConnectionMonitorTestConfigurationSuccessThresholdArgs{...}
type NetworkConnectionMonitorTestConfigurationSuccessThresholdInput interface {
	pulumi.Input

	ToNetworkConnectionMonitorTestConfigurationSuccessThresholdOutput() NetworkConnectionMonitorTestConfigurationSuccessThresholdOutput
	ToNetworkConnectionMonitorTestConfigurationSuccessThresholdOutputWithContext(context.Context) NetworkConnectionMonitorTestConfigurationSuccessThresholdOutput
}

type NetworkConnectionMonitorTestConfigurationSuccessThresholdArgs struct {
	// The maximum percentage of failed checks permitted for a test to be successful.
	ChecksFailedPercent pulumi.IntPtrInput `pulumi:"checksFailedPercent"`
	// The maximum round-trip time in milliseconds permitted for a test to be successful.
	RoundTripTimeMs pulumi.Float64PtrInput `pulumi:"roundTripTimeMs"`
}

func (NetworkConnectionMonitorTestConfigurationSuccessThresholdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConnectionMonitorTestConfigurationSuccessThreshold)(nil)).Elem()
}

func (i NetworkConnectionMonitorTestConfigurationSuccessThresholdArgs) ToNetworkConnectionMonitorTestConfigurationSuccessThresholdOutput() NetworkConnectionMonitorTestConfigurationSuccessThresholdOutput {
	return i.ToNetworkConnectionMonitorTestConfigurationSuccessThresholdOutputWithContext(context.Background())
}

func (i NetworkConnectionMonitorTestConfigurationSuccessThresholdArgs) ToNetworkConnectionMonitorTestConfigurationSuccessThresholdOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationSuccessThresholdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectionMonitorTestConfigurationSuccessThresholdOutput)
}

func (i NetworkConnectionMonitorTestConfigurationSuccessThresholdArgs) ToNetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutput() NetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutput {
	return i.ToNetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutputWithContext(context.Background())
}

func (i NetworkConnectionMonitorTestConfigurationSuccessThresholdArgs) ToNetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectionMonitorTestConfigurationSuccessThresholdOutput).ToNetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutputWithContext(ctx)
}

// NetworkConnectionMonitorTestConfigurationSuccessThresholdPtrInput is an input type that accepts NetworkConnectionMonitorTestConfigurationSuccessThresholdArgs, NetworkConnectionMonitorTestConfigurationSuccessThresholdPtr and NetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutput values.
// You can construct a concrete instance of `NetworkConnectionMonitorTestConfigurationSuccessThresholdPtrInput` via:
//
//	        NetworkConnectionMonitorTestConfigurationSuccessThresholdArgs{...}
//
//	or:
//
//	        nil
type NetworkConnectionMonitorTestConfigurationSuccessThresholdPtrInput interface {
	pulumi.Input

	ToNetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutput() NetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutput
	ToNetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutputWithContext(context.Context) NetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutput
}

type networkConnectionMonitorTestConfigurationSuccessThresholdPtrType NetworkConnectionMonitorTestConfigurationSuccessThresholdArgs

func NetworkConnectionMonitorTestConfigurationSuccessThresholdPtr(v *NetworkConnectionMonitorTestConfigurationSuccessThresholdArgs) NetworkConnectionMonitorTestConfigurationSuccessThresholdPtrInput {
	return (*networkConnectionMonitorTestConfigurationSuccessThresholdPtrType)(v)
}

func (*networkConnectionMonitorTestConfigurationSuccessThresholdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkConnectionMonitorTestConfigurationSuccessThreshold)(nil)).Elem()
}

func (i *networkConnectionMonitorTestConfigurationSuccessThresholdPtrType) ToNetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutput() NetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutput {
	return i.ToNetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutputWithContext(context.Background())
}

func (i *networkConnectionMonitorTestConfigurationSuccessThresholdPtrType) ToNetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutput)
}

type NetworkConnectionMonitorTestConfigurationSuccessThresholdOutput struct{ *pulumi.OutputState }

func (NetworkConnectionMonitorTestConfigurationSuccessThresholdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConnectionMonitorTestConfigurationSuccessThreshold)(nil)).Elem()
}

func (o NetworkConnectionMonitorTestConfigurationSuccessThresholdOutput) ToNetworkConnectionMonitorTestConfigurationSuccessThresholdOutput() NetworkConnectionMonitorTestConfigurationSuccessThresholdOutput {
	return o
}

func (o NetworkConnectionMonitorTestConfigurationSuccessThresholdOutput) ToNetworkConnectionMonitorTestConfigurationSuccessThresholdOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationSuccessThresholdOutput {
	return o
}

func (o NetworkConnectionMonitorTestConfigurationSuccessThresholdOutput) ToNetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutput() NetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutput {
	return o.ToNetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutputWithContext(context.Background())
}

func (o NetworkConnectionMonitorTestConfigurationSuccessThresholdOutput) ToNetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkConnectionMonitorTestConfigurationSuccessThreshold) *NetworkConnectionMonitorTestConfigurationSuccessThreshold {
		return &v
	}).(NetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutput)
}

// The maximum percentage of failed checks permitted for a test to be successful.
func (o NetworkConnectionMonitorTestConfigurationSuccessThresholdOutput) ChecksFailedPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorTestConfigurationSuccessThreshold) *int { return v.ChecksFailedPercent }).(pulumi.IntPtrOutput)
}

// The maximum round-trip time in milliseconds permitted for a test to be successful.
func (o NetworkConnectionMonitorTestConfigurationSuccessThresholdOutput) RoundTripTimeMs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorTestConfigurationSuccessThreshold) *float64 { return v.RoundTripTimeMs }).(pulumi.Float64PtrOutput)
}

type NetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutput struct{ *pulumi.OutputState }

func (NetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkConnectionMonitorTestConfigurationSuccessThreshold)(nil)).Elem()
}

func (o NetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutput) ToNetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutput() NetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutput {
	return o
}

func (o NetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutput) ToNetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutput {
	return o
}

func (o NetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutput) Elem() NetworkConnectionMonitorTestConfigurationSuccessThresholdOutput {
	return o.ApplyT(func(v *NetworkConnectionMonitorTestConfigurationSuccessThreshold) NetworkConnectionMonitorTestConfigurationSuccessThreshold {
		if v != nil {
			return *v
		}
		var ret NetworkConnectionMonitorTestConfigurationSuccessThreshold
		return ret
	}).(NetworkConnectionMonitorTestConfigurationSuccessThresholdOutput)
}

// The maximum percentage of failed checks permitted for a test to be successful.
func (o NetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutput) ChecksFailedPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkConnectionMonitorTestConfigurationSuccessThreshold) *int {
		if v == nil {
			return nil
		}
		return v.ChecksFailedPercent
	}).(pulumi.IntPtrOutput)
}

// The maximum round-trip time in milliseconds permitted for a test to be successful.
func (o NetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutput) RoundTripTimeMs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *NetworkConnectionMonitorTestConfigurationSuccessThreshold) *float64 {
		if v == nil {
			return nil
		}
		return v.RoundTripTimeMs
	}).(pulumi.Float64PtrOutput)
}

type NetworkConnectionMonitorTestConfigurationTcpConfiguration struct {
	// The destination port behavior for the TCP connection. Possible values are `None` and `ListenIfAvailable`.
	DestinationPortBehavior *string `pulumi:"destinationPortBehavior"`
	// The port for the TCP connection.
	Port int `pulumi:"port"`
	// Should path evaluation with trace route be enabled? Defaults to `true`.
	TraceRouteEnabled *bool `pulumi:"traceRouteEnabled"`
}

// NetworkConnectionMonitorTestConfigurationTcpConfigurationInput is an input type that accepts NetworkConnectionMonitorTestConfigurationTcpConfigurationArgs and NetworkConnectionMonitorTestConfigurationTcpConfigurationOutput values.
// You can construct a concrete instance of `NetworkConnectionMonitorTestConfigurationTcpConfigurationInput` via:
//
//	NetworkConnectionMonitorTestConfigurationTcpConfigurationArgs{...}
type NetworkConnectionMonitorTestConfigurationTcpConfigurationInput interface {
	pulumi.Input

	ToNetworkConnectionMonitorTestConfigurationTcpConfigurationOutput() NetworkConnectionMonitorTestConfigurationTcpConfigurationOutput
	ToNetworkConnectionMonitorTestConfigurationTcpConfigurationOutputWithContext(context.Context) NetworkConnectionMonitorTestConfigurationTcpConfigurationOutput
}

type NetworkConnectionMonitorTestConfigurationTcpConfigurationArgs struct {
	// The destination port behavior for the TCP connection. Possible values are `None` and `ListenIfAvailable`.
	DestinationPortBehavior pulumi.StringPtrInput `pulumi:"destinationPortBehavior"`
	// The port for the TCP connection.
	Port pulumi.IntInput `pulumi:"port"`
	// Should path evaluation with trace route be enabled? Defaults to `true`.
	TraceRouteEnabled pulumi.BoolPtrInput `pulumi:"traceRouteEnabled"`
}

func (NetworkConnectionMonitorTestConfigurationTcpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConnectionMonitorTestConfigurationTcpConfiguration)(nil)).Elem()
}

func (i NetworkConnectionMonitorTestConfigurationTcpConfigurationArgs) ToNetworkConnectionMonitorTestConfigurationTcpConfigurationOutput() NetworkConnectionMonitorTestConfigurationTcpConfigurationOutput {
	return i.ToNetworkConnectionMonitorTestConfigurationTcpConfigurationOutputWithContext(context.Background())
}

func (i NetworkConnectionMonitorTestConfigurationTcpConfigurationArgs) ToNetworkConnectionMonitorTestConfigurationTcpConfigurationOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationTcpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectionMonitorTestConfigurationTcpConfigurationOutput)
}

func (i NetworkConnectionMonitorTestConfigurationTcpConfigurationArgs) ToNetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutput() NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutput {
	return i.ToNetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutputWithContext(context.Background())
}

func (i NetworkConnectionMonitorTestConfigurationTcpConfigurationArgs) ToNetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectionMonitorTestConfigurationTcpConfigurationOutput).ToNetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutputWithContext(ctx)
}

// NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrInput is an input type that accepts NetworkConnectionMonitorTestConfigurationTcpConfigurationArgs, NetworkConnectionMonitorTestConfigurationTcpConfigurationPtr and NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutput values.
// You can construct a concrete instance of `NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrInput` via:
//
//	        NetworkConnectionMonitorTestConfigurationTcpConfigurationArgs{...}
//
//	or:
//
//	        nil
type NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrInput interface {
	pulumi.Input

	ToNetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutput() NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutput
	ToNetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutputWithContext(context.Context) NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutput
}

type networkConnectionMonitorTestConfigurationTcpConfigurationPtrType NetworkConnectionMonitorTestConfigurationTcpConfigurationArgs

func NetworkConnectionMonitorTestConfigurationTcpConfigurationPtr(v *NetworkConnectionMonitorTestConfigurationTcpConfigurationArgs) NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrInput {
	return (*networkConnectionMonitorTestConfigurationTcpConfigurationPtrType)(v)
}

func (*networkConnectionMonitorTestConfigurationTcpConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkConnectionMonitorTestConfigurationTcpConfiguration)(nil)).Elem()
}

func (i *networkConnectionMonitorTestConfigurationTcpConfigurationPtrType) ToNetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutput() NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutput {
	return i.ToNetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutputWithContext(context.Background())
}

func (i *networkConnectionMonitorTestConfigurationTcpConfigurationPtrType) ToNetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutput)
}

type NetworkConnectionMonitorTestConfigurationTcpConfigurationOutput struct{ *pulumi.OutputState }

func (NetworkConnectionMonitorTestConfigurationTcpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConnectionMonitorTestConfigurationTcpConfiguration)(nil)).Elem()
}

func (o NetworkConnectionMonitorTestConfigurationTcpConfigurationOutput) ToNetworkConnectionMonitorTestConfigurationTcpConfigurationOutput() NetworkConnectionMonitorTestConfigurationTcpConfigurationOutput {
	return o
}

func (o NetworkConnectionMonitorTestConfigurationTcpConfigurationOutput) ToNetworkConnectionMonitorTestConfigurationTcpConfigurationOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationTcpConfigurationOutput {
	return o
}

func (o NetworkConnectionMonitorTestConfigurationTcpConfigurationOutput) ToNetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutput() NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutput {
	return o.ToNetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutputWithContext(context.Background())
}

func (o NetworkConnectionMonitorTestConfigurationTcpConfigurationOutput) ToNetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkConnectionMonitorTestConfigurationTcpConfiguration) *NetworkConnectionMonitorTestConfigurationTcpConfiguration {
		return &v
	}).(NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutput)
}

// The destination port behavior for the TCP connection. Possible values are `None` and `ListenIfAvailable`.
func (o NetworkConnectionMonitorTestConfigurationTcpConfigurationOutput) DestinationPortBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorTestConfigurationTcpConfiguration) *string {
		return v.DestinationPortBehavior
	}).(pulumi.StringPtrOutput)
}

// The port for the TCP connection.
func (o NetworkConnectionMonitorTestConfigurationTcpConfigurationOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorTestConfigurationTcpConfiguration) int { return v.Port }).(pulumi.IntOutput)
}

// Should path evaluation with trace route be enabled? Defaults to `true`.
func (o NetworkConnectionMonitorTestConfigurationTcpConfigurationOutput) TraceRouteEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorTestConfigurationTcpConfiguration) *bool { return v.TraceRouteEnabled }).(pulumi.BoolPtrOutput)
}

type NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutput struct{ *pulumi.OutputState }

func (NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkConnectionMonitorTestConfigurationTcpConfiguration)(nil)).Elem()
}

func (o NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutput) ToNetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutput() NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutput {
	return o
}

func (o NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutput) ToNetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutput {
	return o
}

func (o NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutput) Elem() NetworkConnectionMonitorTestConfigurationTcpConfigurationOutput {
	return o.ApplyT(func(v *NetworkConnectionMonitorTestConfigurationTcpConfiguration) NetworkConnectionMonitorTestConfigurationTcpConfiguration {
		if v != nil {
			return *v
		}
		var ret NetworkConnectionMonitorTestConfigurationTcpConfiguration
		return ret
	}).(NetworkConnectionMonitorTestConfigurationTcpConfigurationOutput)
}

// The destination port behavior for the TCP connection. Possible values are `None` and `ListenIfAvailable`.
func (o NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutput) DestinationPortBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkConnectionMonitorTestConfigurationTcpConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DestinationPortBehavior
	}).(pulumi.StringPtrOutput)
}

// The port for the TCP connection.
func (o NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkConnectionMonitorTestConfigurationTcpConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// Should path evaluation with trace route be enabled? Defaults to `true`.
func (o NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutput) TraceRouteEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkConnectionMonitorTestConfigurationTcpConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.TraceRouteEnabled
	}).(pulumi.BoolPtrOutput)
}

type NetworkConnectionMonitorTestGroup struct {
	// A list of destination endpoint names.
	DestinationEndpoints []string `pulumi:"destinationEndpoints"`
	// Should the test group be enabled? Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// The name of the test group for the Network Connection Monitor.
	Name string `pulumi:"name"`
	// A list of source endpoint names.
	SourceEndpoints []string `pulumi:"sourceEndpoints"`
	// A list of test configuration names.
	TestConfigurationNames []string `pulumi:"testConfigurationNames"`
}

// NetworkConnectionMonitorTestGroupInput is an input type that accepts NetworkConnectionMonitorTestGroupArgs and NetworkConnectionMonitorTestGroupOutput values.
// You can construct a concrete instance of `NetworkConnectionMonitorTestGroupInput` via:
//
//	NetworkConnectionMonitorTestGroupArgs{...}
type NetworkConnectionMonitorTestGroupInput interface {
	pulumi.Input

	ToNetworkConnectionMonitorTestGroupOutput() NetworkConnectionMonitorTestGroupOutput
	ToNetworkConnectionMonitorTestGroupOutputWithContext(context.Context) NetworkConnectionMonitorTestGroupOutput
}

type NetworkConnectionMonitorTestGroupArgs struct {
	// A list of destination endpoint names.
	DestinationEndpoints pulumi.StringArrayInput `pulumi:"destinationEndpoints"`
	// Should the test group be enabled? Defaults to `true`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The name of the test group for the Network Connection Monitor.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of source endpoint names.
	SourceEndpoints pulumi.StringArrayInput `pulumi:"sourceEndpoints"`
	// A list of test configuration names.
	TestConfigurationNames pulumi.StringArrayInput `pulumi:"testConfigurationNames"`
}

func (NetworkConnectionMonitorTestGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConnectionMonitorTestGroup)(nil)).Elem()
}

func (i NetworkConnectionMonitorTestGroupArgs) ToNetworkConnectionMonitorTestGroupOutput() NetworkConnectionMonitorTestGroupOutput {
	return i.ToNetworkConnectionMonitorTestGroupOutputWithContext(context.Background())
}

func (i NetworkConnectionMonitorTestGroupArgs) ToNetworkConnectionMonitorTestGroupOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectionMonitorTestGroupOutput)
}

// NetworkConnectionMonitorTestGroupArrayInput is an input type that accepts NetworkConnectionMonitorTestGroupArray and NetworkConnectionMonitorTestGroupArrayOutput values.
// You can construct a concrete instance of `NetworkConnectionMonitorTestGroupArrayInput` via:
//
//	NetworkConnectionMonitorTestGroupArray{ NetworkConnectionMonitorTestGroupArgs{...} }
type NetworkConnectionMonitorTestGroupArrayInput interface {
	pulumi.Input

	ToNetworkConnectionMonitorTestGroupArrayOutput() NetworkConnectionMonitorTestGroupArrayOutput
	ToNetworkConnectionMonitorTestGroupArrayOutputWithContext(context.Context) NetworkConnectionMonitorTestGroupArrayOutput
}

type NetworkConnectionMonitorTestGroupArray []NetworkConnectionMonitorTestGroupInput

func (NetworkConnectionMonitorTestGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkConnectionMonitorTestGroup)(nil)).Elem()
}

func (i NetworkConnectionMonitorTestGroupArray) ToNetworkConnectionMonitorTestGroupArrayOutput() NetworkConnectionMonitorTestGroupArrayOutput {
	return i.ToNetworkConnectionMonitorTestGroupArrayOutputWithContext(context.Background())
}

func (i NetworkConnectionMonitorTestGroupArray) ToNetworkConnectionMonitorTestGroupArrayOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectionMonitorTestGroupArrayOutput)
}

type NetworkConnectionMonitorTestGroupOutput struct{ *pulumi.OutputState }

func (NetworkConnectionMonitorTestGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConnectionMonitorTestGroup)(nil)).Elem()
}

func (o NetworkConnectionMonitorTestGroupOutput) ToNetworkConnectionMonitorTestGroupOutput() NetworkConnectionMonitorTestGroupOutput {
	return o
}

func (o NetworkConnectionMonitorTestGroupOutput) ToNetworkConnectionMonitorTestGroupOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestGroupOutput {
	return o
}

// A list of destination endpoint names.
func (o NetworkConnectionMonitorTestGroupOutput) DestinationEndpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorTestGroup) []string { return v.DestinationEndpoints }).(pulumi.StringArrayOutput)
}

// Should the test group be enabled? Defaults to `true`.
func (o NetworkConnectionMonitorTestGroupOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorTestGroup) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The name of the test group for the Network Connection Monitor.
func (o NetworkConnectionMonitorTestGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorTestGroup) string { return v.Name }).(pulumi.StringOutput)
}

// A list of source endpoint names.
func (o NetworkConnectionMonitorTestGroupOutput) SourceEndpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorTestGroup) []string { return v.SourceEndpoints }).(pulumi.StringArrayOutput)
}

// A list of test configuration names.
func (o NetworkConnectionMonitorTestGroupOutput) TestConfigurationNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkConnectionMonitorTestGroup) []string { return v.TestConfigurationNames }).(pulumi.StringArrayOutput)
}

type NetworkConnectionMonitorTestGroupArrayOutput struct{ *pulumi.OutputState }

func (NetworkConnectionMonitorTestGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkConnectionMonitorTestGroup)(nil)).Elem()
}

func (o NetworkConnectionMonitorTestGroupArrayOutput) ToNetworkConnectionMonitorTestGroupArrayOutput() NetworkConnectionMonitorTestGroupArrayOutput {
	return o
}

func (o NetworkConnectionMonitorTestGroupArrayOutput) ToNetworkConnectionMonitorTestGroupArrayOutputWithContext(ctx context.Context) NetworkConnectionMonitorTestGroupArrayOutput {
	return o
}

func (o NetworkConnectionMonitorTestGroupArrayOutput) Index(i pulumi.IntInput) NetworkConnectionMonitorTestGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkConnectionMonitorTestGroup {
		return vs[0].([]NetworkConnectionMonitorTestGroup)[vs[1].(int)]
	}).(NetworkConnectionMonitorTestGroupOutput)
}

type NetworkInterfaceIpConfiguration struct {
	// The Frontend IP Configuration ID of a Gateway SKU Load Balancer.
	GatewayLoadBalancerFrontendIpConfigurationId *string `pulumi:"gatewayLoadBalancerFrontendIpConfigurationId"`
	// A name used for this IP Configuration.
	Name string `pulumi:"name"`
	// Is this the Primary IP Configuration? Must be `true` for the first `ipConfiguration` when multiple are specified. Defaults to `false`.
	Primary *bool `pulumi:"primary"`
	// The Static IP Address which should be used.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// The allocation method used for the Private IP Address. Possible values are `Dynamic` and `Static`.
	//
	// > **Note:** `Dynamic` means "An IP is automatically assigned during creation of this Network Interface"; `Static` means "User supplied IP address will be used"
	PrivateIpAddressAllocation string `pulumi:"privateIpAddressAllocation"`
	// The IP Version to use. Possible values are `IPv4` or `IPv6`. Defaults to `IPv4`.
	PrivateIpAddressVersion *string `pulumi:"privateIpAddressVersion"`
	// Reference to a Public IP Address to associate with this NIC
	PublicIpAddressId *string `pulumi:"publicIpAddressId"`
	// The ID of the Subnet where this Network Interface should be located in.
	//
	// > **Note:** This is required when `privateIpAddressVersion` is set to `IPv4`.
	SubnetId *string `pulumi:"subnetId"`
}

// NetworkInterfaceIpConfigurationInput is an input type that accepts NetworkInterfaceIpConfigurationArgs and NetworkInterfaceIpConfigurationOutput values.
// You can construct a concrete instance of `NetworkInterfaceIpConfigurationInput` via:
//
//	NetworkInterfaceIpConfigurationArgs{...}
type NetworkInterfaceIpConfigurationInput interface {
	pulumi.Input

	ToNetworkInterfaceIpConfigurationOutput() NetworkInterfaceIpConfigurationOutput
	ToNetworkInterfaceIpConfigurationOutputWithContext(context.Context) NetworkInterfaceIpConfigurationOutput
}

type NetworkInterfaceIpConfigurationArgs struct {
	// The Frontend IP Configuration ID of a Gateway SKU Load Balancer.
	GatewayLoadBalancerFrontendIpConfigurationId pulumi.StringPtrInput `pulumi:"gatewayLoadBalancerFrontendIpConfigurationId"`
	// A name used for this IP Configuration.
	Name pulumi.StringInput `pulumi:"name"`
	// Is this the Primary IP Configuration? Must be `true` for the first `ipConfiguration` when multiple are specified. Defaults to `false`.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// The Static IP Address which should be used.
	PrivateIpAddress pulumi.StringPtrInput `pulumi:"privateIpAddress"`
	// The allocation method used for the Private IP Address. Possible values are `Dynamic` and `Static`.
	//
	// > **Note:** `Dynamic` means "An IP is automatically assigned during creation of this Network Interface"; `Static` means "User supplied IP address will be used"
	PrivateIpAddressAllocation pulumi.StringInput `pulumi:"privateIpAddressAllocation"`
	// The IP Version to use. Possible values are `IPv4` or `IPv6`. Defaults to `IPv4`.
	PrivateIpAddressVersion pulumi.StringPtrInput `pulumi:"privateIpAddressVersion"`
	// Reference to a Public IP Address to associate with this NIC
	PublicIpAddressId pulumi.StringPtrInput `pulumi:"publicIpAddressId"`
	// The ID of the Subnet where this Network Interface should be located in.
	//
	// > **Note:** This is required when `privateIpAddressVersion` is set to `IPv4`.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (NetworkInterfaceIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIpConfiguration)(nil)).Elem()
}

func (i NetworkInterfaceIpConfigurationArgs) ToNetworkInterfaceIpConfigurationOutput() NetworkInterfaceIpConfigurationOutput {
	return i.ToNetworkInterfaceIpConfigurationOutputWithContext(context.Background())
}

func (i NetworkInterfaceIpConfigurationArgs) ToNetworkInterfaceIpConfigurationOutputWithContext(ctx context.Context) NetworkInterfaceIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIpConfigurationOutput)
}

// NetworkInterfaceIpConfigurationArrayInput is an input type that accepts NetworkInterfaceIpConfigurationArray and NetworkInterfaceIpConfigurationArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceIpConfigurationArrayInput` via:
//
//	NetworkInterfaceIpConfigurationArray{ NetworkInterfaceIpConfigurationArgs{...} }
type NetworkInterfaceIpConfigurationArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceIpConfigurationArrayOutput() NetworkInterfaceIpConfigurationArrayOutput
	ToNetworkInterfaceIpConfigurationArrayOutputWithContext(context.Context) NetworkInterfaceIpConfigurationArrayOutput
}

type NetworkInterfaceIpConfigurationArray []NetworkInterfaceIpConfigurationInput

func (NetworkInterfaceIpConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceIpConfiguration)(nil)).Elem()
}

func (i NetworkInterfaceIpConfigurationArray) ToNetworkInterfaceIpConfigurationArrayOutput() NetworkInterfaceIpConfigurationArrayOutput {
	return i.ToNetworkInterfaceIpConfigurationArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceIpConfigurationArray) ToNetworkInterfaceIpConfigurationArrayOutputWithContext(ctx context.Context) NetworkInterfaceIpConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIpConfigurationArrayOutput)
}

type NetworkInterfaceIpConfigurationOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIpConfiguration)(nil)).Elem()
}

func (o NetworkInterfaceIpConfigurationOutput) ToNetworkInterfaceIpConfigurationOutput() NetworkInterfaceIpConfigurationOutput {
	return o
}

func (o NetworkInterfaceIpConfigurationOutput) ToNetworkInterfaceIpConfigurationOutputWithContext(ctx context.Context) NetworkInterfaceIpConfigurationOutput {
	return o
}

// The Frontend IP Configuration ID of a Gateway SKU Load Balancer.
func (o NetworkInterfaceIpConfigurationOutput) GatewayLoadBalancerFrontendIpConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIpConfiguration) *string { return v.GatewayLoadBalancerFrontendIpConfigurationId }).(pulumi.StringPtrOutput)
}

// A name used for this IP Configuration.
func (o NetworkInterfaceIpConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceIpConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// Is this the Primary IP Configuration? Must be `true` for the first `ipConfiguration` when multiple are specified. Defaults to `false`.
func (o NetworkInterfaceIpConfigurationOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIpConfiguration) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// The Static IP Address which should be used.
func (o NetworkInterfaceIpConfigurationOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIpConfiguration) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

// The allocation method used for the Private IP Address. Possible values are `Dynamic` and `Static`.
//
// > **Note:** `Dynamic` means "An IP is automatically assigned during creation of this Network Interface"; `Static` means "User supplied IP address will be used"
func (o NetworkInterfaceIpConfigurationOutput) PrivateIpAddressAllocation() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceIpConfiguration) string { return v.PrivateIpAddressAllocation }).(pulumi.StringOutput)
}

// The IP Version to use. Possible values are `IPv4` or `IPv6`. Defaults to `IPv4`.
func (o NetworkInterfaceIpConfigurationOutput) PrivateIpAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIpConfiguration) *string { return v.PrivateIpAddressVersion }).(pulumi.StringPtrOutput)
}

// Reference to a Public IP Address to associate with this NIC
func (o NetworkInterfaceIpConfigurationOutput) PublicIpAddressId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIpConfiguration) *string { return v.PublicIpAddressId }).(pulumi.StringPtrOutput)
}

// The ID of the Subnet where this Network Interface should be located in.
//
// > **Note:** This is required when `privateIpAddressVersion` is set to `IPv4`.
func (o NetworkInterfaceIpConfigurationOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIpConfiguration) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type NetworkInterfaceIpConfigurationArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIpConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceIpConfiguration)(nil)).Elem()
}

func (o NetworkInterfaceIpConfigurationArrayOutput) ToNetworkInterfaceIpConfigurationArrayOutput() NetworkInterfaceIpConfigurationArrayOutput {
	return o
}

func (o NetworkInterfaceIpConfigurationArrayOutput) ToNetworkInterfaceIpConfigurationArrayOutputWithContext(ctx context.Context) NetworkInterfaceIpConfigurationArrayOutput {
	return o
}

func (o NetworkInterfaceIpConfigurationArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceIpConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceIpConfiguration {
		return vs[0].([]NetworkInterfaceIpConfiguration)[vs[1].(int)]
	}).(NetworkInterfaceIpConfigurationOutput)
}

type NetworkManagerAdminRuleDestination struct {
	// Specifies the address prefix.
	AddressPrefix string `pulumi:"addressPrefix"`
	// Specifies the address prefix type. Possible values are `IPPrefix` and `ServiceTag`. For more information, please see [this document](https://learn.microsoft.com/en-us/azure/virtual-network-manager/concept-security-admins#source-and-destination-types).
	AddressPrefixType string `pulumi:"addressPrefixType"`
}

// NetworkManagerAdminRuleDestinationInput is an input type that accepts NetworkManagerAdminRuleDestinationArgs and NetworkManagerAdminRuleDestinationOutput values.
// You can construct a concrete instance of `NetworkManagerAdminRuleDestinationInput` via:
//
//	NetworkManagerAdminRuleDestinationArgs{...}
type NetworkManagerAdminRuleDestinationInput interface {
	pulumi.Input

	ToNetworkManagerAdminRuleDestinationOutput() NetworkManagerAdminRuleDestinationOutput
	ToNetworkManagerAdminRuleDestinationOutputWithContext(context.Context) NetworkManagerAdminRuleDestinationOutput
}

type NetworkManagerAdminRuleDestinationArgs struct {
	// Specifies the address prefix.
	AddressPrefix pulumi.StringInput `pulumi:"addressPrefix"`
	// Specifies the address prefix type. Possible values are `IPPrefix` and `ServiceTag`. For more information, please see [this document](https://learn.microsoft.com/en-us/azure/virtual-network-manager/concept-security-admins#source-and-destination-types).
	AddressPrefixType pulumi.StringInput `pulumi:"addressPrefixType"`
}

func (NetworkManagerAdminRuleDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkManagerAdminRuleDestination)(nil)).Elem()
}

func (i NetworkManagerAdminRuleDestinationArgs) ToNetworkManagerAdminRuleDestinationOutput() NetworkManagerAdminRuleDestinationOutput {
	return i.ToNetworkManagerAdminRuleDestinationOutputWithContext(context.Background())
}

func (i NetworkManagerAdminRuleDestinationArgs) ToNetworkManagerAdminRuleDestinationOutputWithContext(ctx context.Context) NetworkManagerAdminRuleDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerAdminRuleDestinationOutput)
}

// NetworkManagerAdminRuleDestinationArrayInput is an input type that accepts NetworkManagerAdminRuleDestinationArray and NetworkManagerAdminRuleDestinationArrayOutput values.
// You can construct a concrete instance of `NetworkManagerAdminRuleDestinationArrayInput` via:
//
//	NetworkManagerAdminRuleDestinationArray{ NetworkManagerAdminRuleDestinationArgs{...} }
type NetworkManagerAdminRuleDestinationArrayInput interface {
	pulumi.Input

	ToNetworkManagerAdminRuleDestinationArrayOutput() NetworkManagerAdminRuleDestinationArrayOutput
	ToNetworkManagerAdminRuleDestinationArrayOutputWithContext(context.Context) NetworkManagerAdminRuleDestinationArrayOutput
}

type NetworkManagerAdminRuleDestinationArray []NetworkManagerAdminRuleDestinationInput

func (NetworkManagerAdminRuleDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkManagerAdminRuleDestination)(nil)).Elem()
}

func (i NetworkManagerAdminRuleDestinationArray) ToNetworkManagerAdminRuleDestinationArrayOutput() NetworkManagerAdminRuleDestinationArrayOutput {
	return i.ToNetworkManagerAdminRuleDestinationArrayOutputWithContext(context.Background())
}

func (i NetworkManagerAdminRuleDestinationArray) ToNetworkManagerAdminRuleDestinationArrayOutputWithContext(ctx context.Context) NetworkManagerAdminRuleDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerAdminRuleDestinationArrayOutput)
}

type NetworkManagerAdminRuleDestinationOutput struct{ *pulumi.OutputState }

func (NetworkManagerAdminRuleDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkManagerAdminRuleDestination)(nil)).Elem()
}

func (o NetworkManagerAdminRuleDestinationOutput) ToNetworkManagerAdminRuleDestinationOutput() NetworkManagerAdminRuleDestinationOutput {
	return o
}

func (o NetworkManagerAdminRuleDestinationOutput) ToNetworkManagerAdminRuleDestinationOutputWithContext(ctx context.Context) NetworkManagerAdminRuleDestinationOutput {
	return o
}

// Specifies the address prefix.
func (o NetworkManagerAdminRuleDestinationOutput) AddressPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkManagerAdminRuleDestination) string { return v.AddressPrefix }).(pulumi.StringOutput)
}

// Specifies the address prefix type. Possible values are `IPPrefix` and `ServiceTag`. For more information, please see [this document](https://learn.microsoft.com/en-us/azure/virtual-network-manager/concept-security-admins#source-and-destination-types).
func (o NetworkManagerAdminRuleDestinationOutput) AddressPrefixType() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkManagerAdminRuleDestination) string { return v.AddressPrefixType }).(pulumi.StringOutput)
}

type NetworkManagerAdminRuleDestinationArrayOutput struct{ *pulumi.OutputState }

func (NetworkManagerAdminRuleDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkManagerAdminRuleDestination)(nil)).Elem()
}

func (o NetworkManagerAdminRuleDestinationArrayOutput) ToNetworkManagerAdminRuleDestinationArrayOutput() NetworkManagerAdminRuleDestinationArrayOutput {
	return o
}

func (o NetworkManagerAdminRuleDestinationArrayOutput) ToNetworkManagerAdminRuleDestinationArrayOutputWithContext(ctx context.Context) NetworkManagerAdminRuleDestinationArrayOutput {
	return o
}

func (o NetworkManagerAdminRuleDestinationArrayOutput) Index(i pulumi.IntInput) NetworkManagerAdminRuleDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkManagerAdminRuleDestination {
		return vs[0].([]NetworkManagerAdminRuleDestination)[vs[1].(int)]
	}).(NetworkManagerAdminRuleDestinationOutput)
}

type NetworkManagerAdminRuleSource struct {
	// Specifies the address prefix.
	AddressPrefix string `pulumi:"addressPrefix"`
	// Specifies the address prefix type. Possible values are `IPPrefix` and `ServiceTag`. For more information, please see [this document](https://learn.microsoft.com/en-us/azure/virtual-network-manager/concept-security-admins#source-and-destination-types).
	AddressPrefixType string `pulumi:"addressPrefixType"`
}

// NetworkManagerAdminRuleSourceInput is an input type that accepts NetworkManagerAdminRuleSourceArgs and NetworkManagerAdminRuleSourceOutput values.
// You can construct a concrete instance of `NetworkManagerAdminRuleSourceInput` via:
//
//	NetworkManagerAdminRuleSourceArgs{...}
type NetworkManagerAdminRuleSourceInput interface {
	pulumi.Input

	ToNetworkManagerAdminRuleSourceOutput() NetworkManagerAdminRuleSourceOutput
	ToNetworkManagerAdminRuleSourceOutputWithContext(context.Context) NetworkManagerAdminRuleSourceOutput
}

type NetworkManagerAdminRuleSourceArgs struct {
	// Specifies the address prefix.
	AddressPrefix pulumi.StringInput `pulumi:"addressPrefix"`
	// Specifies the address prefix type. Possible values are `IPPrefix` and `ServiceTag`. For more information, please see [this document](https://learn.microsoft.com/en-us/azure/virtual-network-manager/concept-security-admins#source-and-destination-types).
	AddressPrefixType pulumi.StringInput `pulumi:"addressPrefixType"`
}

func (NetworkManagerAdminRuleSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkManagerAdminRuleSource)(nil)).Elem()
}

func (i NetworkManagerAdminRuleSourceArgs) ToNetworkManagerAdminRuleSourceOutput() NetworkManagerAdminRuleSourceOutput {
	return i.ToNetworkManagerAdminRuleSourceOutputWithContext(context.Background())
}

func (i NetworkManagerAdminRuleSourceArgs) ToNetworkManagerAdminRuleSourceOutputWithContext(ctx context.Context) NetworkManagerAdminRuleSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerAdminRuleSourceOutput)
}

// NetworkManagerAdminRuleSourceArrayInput is an input type that accepts NetworkManagerAdminRuleSourceArray and NetworkManagerAdminRuleSourceArrayOutput values.
// You can construct a concrete instance of `NetworkManagerAdminRuleSourceArrayInput` via:
//
//	NetworkManagerAdminRuleSourceArray{ NetworkManagerAdminRuleSourceArgs{...} }
type NetworkManagerAdminRuleSourceArrayInput interface {
	pulumi.Input

	ToNetworkManagerAdminRuleSourceArrayOutput() NetworkManagerAdminRuleSourceArrayOutput
	ToNetworkManagerAdminRuleSourceArrayOutputWithContext(context.Context) NetworkManagerAdminRuleSourceArrayOutput
}

type NetworkManagerAdminRuleSourceArray []NetworkManagerAdminRuleSourceInput

func (NetworkManagerAdminRuleSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkManagerAdminRuleSource)(nil)).Elem()
}

func (i NetworkManagerAdminRuleSourceArray) ToNetworkManagerAdminRuleSourceArrayOutput() NetworkManagerAdminRuleSourceArrayOutput {
	return i.ToNetworkManagerAdminRuleSourceArrayOutputWithContext(context.Background())
}

func (i NetworkManagerAdminRuleSourceArray) ToNetworkManagerAdminRuleSourceArrayOutputWithContext(ctx context.Context) NetworkManagerAdminRuleSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerAdminRuleSourceArrayOutput)
}

type NetworkManagerAdminRuleSourceOutput struct{ *pulumi.OutputState }

func (NetworkManagerAdminRuleSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkManagerAdminRuleSource)(nil)).Elem()
}

func (o NetworkManagerAdminRuleSourceOutput) ToNetworkManagerAdminRuleSourceOutput() NetworkManagerAdminRuleSourceOutput {
	return o
}

func (o NetworkManagerAdminRuleSourceOutput) ToNetworkManagerAdminRuleSourceOutputWithContext(ctx context.Context) NetworkManagerAdminRuleSourceOutput {
	return o
}

// Specifies the address prefix.
func (o NetworkManagerAdminRuleSourceOutput) AddressPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkManagerAdminRuleSource) string { return v.AddressPrefix }).(pulumi.StringOutput)
}

// Specifies the address prefix type. Possible values are `IPPrefix` and `ServiceTag`. For more information, please see [this document](https://learn.microsoft.com/en-us/azure/virtual-network-manager/concept-security-admins#source-and-destination-types).
func (o NetworkManagerAdminRuleSourceOutput) AddressPrefixType() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkManagerAdminRuleSource) string { return v.AddressPrefixType }).(pulumi.StringOutput)
}

type NetworkManagerAdminRuleSourceArrayOutput struct{ *pulumi.OutputState }

func (NetworkManagerAdminRuleSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkManagerAdminRuleSource)(nil)).Elem()
}

func (o NetworkManagerAdminRuleSourceArrayOutput) ToNetworkManagerAdminRuleSourceArrayOutput() NetworkManagerAdminRuleSourceArrayOutput {
	return o
}

func (o NetworkManagerAdminRuleSourceArrayOutput) ToNetworkManagerAdminRuleSourceArrayOutputWithContext(ctx context.Context) NetworkManagerAdminRuleSourceArrayOutput {
	return o
}

func (o NetworkManagerAdminRuleSourceArrayOutput) Index(i pulumi.IntInput) NetworkManagerAdminRuleSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkManagerAdminRuleSource {
		return vs[0].([]NetworkManagerAdminRuleSource)[vs[1].(int)]
	}).(NetworkManagerAdminRuleSourceOutput)
}

type NetworkManagerConnectivityConfigurationAppliesToGroup struct {
	// Indicates whether to global mesh is supported for this group. Possible values are `true` and `false`.
	//
	// > **NOTE:** A group can be global only if the `groupConnectivity` is `DirectlyConnected`.
	GlobalMeshEnabled *bool `pulumi:"globalMeshEnabled"`
	// Specifies the group connectivity type. Possible values are `None` and `DirectlyConnected`.
	GroupConnectivity string `pulumi:"groupConnectivity"`
	// Specifies the resource ID of Network Group which the configuration applies to.
	NetworkGroupId string `pulumi:"networkGroupId"`
	// Indicates whether the hub gateway is used. Possible values are `true` and `false`.
	UseHubGateway *bool `pulumi:"useHubGateway"`
}

// NetworkManagerConnectivityConfigurationAppliesToGroupInput is an input type that accepts NetworkManagerConnectivityConfigurationAppliesToGroupArgs and NetworkManagerConnectivityConfigurationAppliesToGroupOutput values.
// You can construct a concrete instance of `NetworkManagerConnectivityConfigurationAppliesToGroupInput` via:
//
//	NetworkManagerConnectivityConfigurationAppliesToGroupArgs{...}
type NetworkManagerConnectivityConfigurationAppliesToGroupInput interface {
	pulumi.Input

	ToNetworkManagerConnectivityConfigurationAppliesToGroupOutput() NetworkManagerConnectivityConfigurationAppliesToGroupOutput
	ToNetworkManagerConnectivityConfigurationAppliesToGroupOutputWithContext(context.Context) NetworkManagerConnectivityConfigurationAppliesToGroupOutput
}

type NetworkManagerConnectivityConfigurationAppliesToGroupArgs struct {
	// Indicates whether to global mesh is supported for this group. Possible values are `true` and `false`.
	//
	// > **NOTE:** A group can be global only if the `groupConnectivity` is `DirectlyConnected`.
	GlobalMeshEnabled pulumi.BoolPtrInput `pulumi:"globalMeshEnabled"`
	// Specifies the group connectivity type. Possible values are `None` and `DirectlyConnected`.
	GroupConnectivity pulumi.StringInput `pulumi:"groupConnectivity"`
	// Specifies the resource ID of Network Group which the configuration applies to.
	NetworkGroupId pulumi.StringInput `pulumi:"networkGroupId"`
	// Indicates whether the hub gateway is used. Possible values are `true` and `false`.
	UseHubGateway pulumi.BoolPtrInput `pulumi:"useHubGateway"`
}

func (NetworkManagerConnectivityConfigurationAppliesToGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkManagerConnectivityConfigurationAppliesToGroup)(nil)).Elem()
}

func (i NetworkManagerConnectivityConfigurationAppliesToGroupArgs) ToNetworkManagerConnectivityConfigurationAppliesToGroupOutput() NetworkManagerConnectivityConfigurationAppliesToGroupOutput {
	return i.ToNetworkManagerConnectivityConfigurationAppliesToGroupOutputWithContext(context.Background())
}

func (i NetworkManagerConnectivityConfigurationAppliesToGroupArgs) ToNetworkManagerConnectivityConfigurationAppliesToGroupOutputWithContext(ctx context.Context) NetworkManagerConnectivityConfigurationAppliesToGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerConnectivityConfigurationAppliesToGroupOutput)
}

// NetworkManagerConnectivityConfigurationAppliesToGroupArrayInput is an input type that accepts NetworkManagerConnectivityConfigurationAppliesToGroupArray and NetworkManagerConnectivityConfigurationAppliesToGroupArrayOutput values.
// You can construct a concrete instance of `NetworkManagerConnectivityConfigurationAppliesToGroupArrayInput` via:
//
//	NetworkManagerConnectivityConfigurationAppliesToGroupArray{ NetworkManagerConnectivityConfigurationAppliesToGroupArgs{...} }
type NetworkManagerConnectivityConfigurationAppliesToGroupArrayInput interface {
	pulumi.Input

	ToNetworkManagerConnectivityConfigurationAppliesToGroupArrayOutput() NetworkManagerConnectivityConfigurationAppliesToGroupArrayOutput
	ToNetworkManagerConnectivityConfigurationAppliesToGroupArrayOutputWithContext(context.Context) NetworkManagerConnectivityConfigurationAppliesToGroupArrayOutput
}

type NetworkManagerConnectivityConfigurationAppliesToGroupArray []NetworkManagerConnectivityConfigurationAppliesToGroupInput

func (NetworkManagerConnectivityConfigurationAppliesToGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkManagerConnectivityConfigurationAppliesToGroup)(nil)).Elem()
}

func (i NetworkManagerConnectivityConfigurationAppliesToGroupArray) ToNetworkManagerConnectivityConfigurationAppliesToGroupArrayOutput() NetworkManagerConnectivityConfigurationAppliesToGroupArrayOutput {
	return i.ToNetworkManagerConnectivityConfigurationAppliesToGroupArrayOutputWithContext(context.Background())
}

func (i NetworkManagerConnectivityConfigurationAppliesToGroupArray) ToNetworkManagerConnectivityConfigurationAppliesToGroupArrayOutputWithContext(ctx context.Context) NetworkManagerConnectivityConfigurationAppliesToGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerConnectivityConfigurationAppliesToGroupArrayOutput)
}

type NetworkManagerConnectivityConfigurationAppliesToGroupOutput struct{ *pulumi.OutputState }

func (NetworkManagerConnectivityConfigurationAppliesToGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkManagerConnectivityConfigurationAppliesToGroup)(nil)).Elem()
}

func (o NetworkManagerConnectivityConfigurationAppliesToGroupOutput) ToNetworkManagerConnectivityConfigurationAppliesToGroupOutput() NetworkManagerConnectivityConfigurationAppliesToGroupOutput {
	return o
}

func (o NetworkManagerConnectivityConfigurationAppliesToGroupOutput) ToNetworkManagerConnectivityConfigurationAppliesToGroupOutputWithContext(ctx context.Context) NetworkManagerConnectivityConfigurationAppliesToGroupOutput {
	return o
}

// Indicates whether to global mesh is supported for this group. Possible values are `true` and `false`.
//
// > **NOTE:** A group can be global only if the `groupConnectivity` is `DirectlyConnected`.
func (o NetworkManagerConnectivityConfigurationAppliesToGroupOutput) GlobalMeshEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkManagerConnectivityConfigurationAppliesToGroup) *bool { return v.GlobalMeshEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies the group connectivity type. Possible values are `None` and `DirectlyConnected`.
func (o NetworkManagerConnectivityConfigurationAppliesToGroupOutput) GroupConnectivity() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkManagerConnectivityConfigurationAppliesToGroup) string { return v.GroupConnectivity }).(pulumi.StringOutput)
}

// Specifies the resource ID of Network Group which the configuration applies to.
func (o NetworkManagerConnectivityConfigurationAppliesToGroupOutput) NetworkGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkManagerConnectivityConfigurationAppliesToGroup) string { return v.NetworkGroupId }).(pulumi.StringOutput)
}

// Indicates whether the hub gateway is used. Possible values are `true` and `false`.
func (o NetworkManagerConnectivityConfigurationAppliesToGroupOutput) UseHubGateway() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkManagerConnectivityConfigurationAppliesToGroup) *bool { return v.UseHubGateway }).(pulumi.BoolPtrOutput)
}

type NetworkManagerConnectivityConfigurationAppliesToGroupArrayOutput struct{ *pulumi.OutputState }

func (NetworkManagerConnectivityConfigurationAppliesToGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkManagerConnectivityConfigurationAppliesToGroup)(nil)).Elem()
}

func (o NetworkManagerConnectivityConfigurationAppliesToGroupArrayOutput) ToNetworkManagerConnectivityConfigurationAppliesToGroupArrayOutput() NetworkManagerConnectivityConfigurationAppliesToGroupArrayOutput {
	return o
}

func (o NetworkManagerConnectivityConfigurationAppliesToGroupArrayOutput) ToNetworkManagerConnectivityConfigurationAppliesToGroupArrayOutputWithContext(ctx context.Context) NetworkManagerConnectivityConfigurationAppliesToGroupArrayOutput {
	return o
}

func (o NetworkManagerConnectivityConfigurationAppliesToGroupArrayOutput) Index(i pulumi.IntInput) NetworkManagerConnectivityConfigurationAppliesToGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkManagerConnectivityConfigurationAppliesToGroup {
		return vs[0].([]NetworkManagerConnectivityConfigurationAppliesToGroup)[vs[1].(int)]
	}).(NetworkManagerConnectivityConfigurationAppliesToGroupOutput)
}

type NetworkManagerConnectivityConfigurationHub struct {
	// Specifies the resource ID used as hub in Hub And Spoke topology.
	ResourceId string `pulumi:"resourceId"`
	// Specifies the resource Type used as hub in Hub And Spoke topology.
	ResourceType string `pulumi:"resourceType"`
}

// NetworkManagerConnectivityConfigurationHubInput is an input type that accepts NetworkManagerConnectivityConfigurationHubArgs and NetworkManagerConnectivityConfigurationHubOutput values.
// You can construct a concrete instance of `NetworkManagerConnectivityConfigurationHubInput` via:
//
//	NetworkManagerConnectivityConfigurationHubArgs{...}
type NetworkManagerConnectivityConfigurationHubInput interface {
	pulumi.Input

	ToNetworkManagerConnectivityConfigurationHubOutput() NetworkManagerConnectivityConfigurationHubOutput
	ToNetworkManagerConnectivityConfigurationHubOutputWithContext(context.Context) NetworkManagerConnectivityConfigurationHubOutput
}

type NetworkManagerConnectivityConfigurationHubArgs struct {
	// Specifies the resource ID used as hub in Hub And Spoke topology.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// Specifies the resource Type used as hub in Hub And Spoke topology.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (NetworkManagerConnectivityConfigurationHubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkManagerConnectivityConfigurationHub)(nil)).Elem()
}

func (i NetworkManagerConnectivityConfigurationHubArgs) ToNetworkManagerConnectivityConfigurationHubOutput() NetworkManagerConnectivityConfigurationHubOutput {
	return i.ToNetworkManagerConnectivityConfigurationHubOutputWithContext(context.Background())
}

func (i NetworkManagerConnectivityConfigurationHubArgs) ToNetworkManagerConnectivityConfigurationHubOutputWithContext(ctx context.Context) NetworkManagerConnectivityConfigurationHubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerConnectivityConfigurationHubOutput)
}

func (i NetworkManagerConnectivityConfigurationHubArgs) ToNetworkManagerConnectivityConfigurationHubPtrOutput() NetworkManagerConnectivityConfigurationHubPtrOutput {
	return i.ToNetworkManagerConnectivityConfigurationHubPtrOutputWithContext(context.Background())
}

func (i NetworkManagerConnectivityConfigurationHubArgs) ToNetworkManagerConnectivityConfigurationHubPtrOutputWithContext(ctx context.Context) NetworkManagerConnectivityConfigurationHubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerConnectivityConfigurationHubOutput).ToNetworkManagerConnectivityConfigurationHubPtrOutputWithContext(ctx)
}

// NetworkManagerConnectivityConfigurationHubPtrInput is an input type that accepts NetworkManagerConnectivityConfigurationHubArgs, NetworkManagerConnectivityConfigurationHubPtr and NetworkManagerConnectivityConfigurationHubPtrOutput values.
// You can construct a concrete instance of `NetworkManagerConnectivityConfigurationHubPtrInput` via:
//
//	        NetworkManagerConnectivityConfigurationHubArgs{...}
//
//	or:
//
//	        nil
type NetworkManagerConnectivityConfigurationHubPtrInput interface {
	pulumi.Input

	ToNetworkManagerConnectivityConfigurationHubPtrOutput() NetworkManagerConnectivityConfigurationHubPtrOutput
	ToNetworkManagerConnectivityConfigurationHubPtrOutputWithContext(context.Context) NetworkManagerConnectivityConfigurationHubPtrOutput
}

type networkManagerConnectivityConfigurationHubPtrType NetworkManagerConnectivityConfigurationHubArgs

func NetworkManagerConnectivityConfigurationHubPtr(v *NetworkManagerConnectivityConfigurationHubArgs) NetworkManagerConnectivityConfigurationHubPtrInput {
	return (*networkManagerConnectivityConfigurationHubPtrType)(v)
}

func (*networkManagerConnectivityConfigurationHubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkManagerConnectivityConfigurationHub)(nil)).Elem()
}

func (i *networkManagerConnectivityConfigurationHubPtrType) ToNetworkManagerConnectivityConfigurationHubPtrOutput() NetworkManagerConnectivityConfigurationHubPtrOutput {
	return i.ToNetworkManagerConnectivityConfigurationHubPtrOutputWithContext(context.Background())
}

func (i *networkManagerConnectivityConfigurationHubPtrType) ToNetworkManagerConnectivityConfigurationHubPtrOutputWithContext(ctx context.Context) NetworkManagerConnectivityConfigurationHubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerConnectivityConfigurationHubPtrOutput)
}

type NetworkManagerConnectivityConfigurationHubOutput struct{ *pulumi.OutputState }

func (NetworkManagerConnectivityConfigurationHubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkManagerConnectivityConfigurationHub)(nil)).Elem()
}

func (o NetworkManagerConnectivityConfigurationHubOutput) ToNetworkManagerConnectivityConfigurationHubOutput() NetworkManagerConnectivityConfigurationHubOutput {
	return o
}

func (o NetworkManagerConnectivityConfigurationHubOutput) ToNetworkManagerConnectivityConfigurationHubOutputWithContext(ctx context.Context) NetworkManagerConnectivityConfigurationHubOutput {
	return o
}

func (o NetworkManagerConnectivityConfigurationHubOutput) ToNetworkManagerConnectivityConfigurationHubPtrOutput() NetworkManagerConnectivityConfigurationHubPtrOutput {
	return o.ToNetworkManagerConnectivityConfigurationHubPtrOutputWithContext(context.Background())
}

func (o NetworkManagerConnectivityConfigurationHubOutput) ToNetworkManagerConnectivityConfigurationHubPtrOutputWithContext(ctx context.Context) NetworkManagerConnectivityConfigurationHubPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkManagerConnectivityConfigurationHub) *NetworkManagerConnectivityConfigurationHub {
		return &v
	}).(NetworkManagerConnectivityConfigurationHubPtrOutput)
}

// Specifies the resource ID used as hub in Hub And Spoke topology.
func (o NetworkManagerConnectivityConfigurationHubOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkManagerConnectivityConfigurationHub) string { return v.ResourceId }).(pulumi.StringOutput)
}

// Specifies the resource Type used as hub in Hub And Spoke topology.
func (o NetworkManagerConnectivityConfigurationHubOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkManagerConnectivityConfigurationHub) string { return v.ResourceType }).(pulumi.StringOutput)
}

type NetworkManagerConnectivityConfigurationHubPtrOutput struct{ *pulumi.OutputState }

func (NetworkManagerConnectivityConfigurationHubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkManagerConnectivityConfigurationHub)(nil)).Elem()
}

func (o NetworkManagerConnectivityConfigurationHubPtrOutput) ToNetworkManagerConnectivityConfigurationHubPtrOutput() NetworkManagerConnectivityConfigurationHubPtrOutput {
	return o
}

func (o NetworkManagerConnectivityConfigurationHubPtrOutput) ToNetworkManagerConnectivityConfigurationHubPtrOutputWithContext(ctx context.Context) NetworkManagerConnectivityConfigurationHubPtrOutput {
	return o
}

func (o NetworkManagerConnectivityConfigurationHubPtrOutput) Elem() NetworkManagerConnectivityConfigurationHubOutput {
	return o.ApplyT(func(v *NetworkManagerConnectivityConfigurationHub) NetworkManagerConnectivityConfigurationHub {
		if v != nil {
			return *v
		}
		var ret NetworkManagerConnectivityConfigurationHub
		return ret
	}).(NetworkManagerConnectivityConfigurationHubOutput)
}

// Specifies the resource ID used as hub in Hub And Spoke topology.
func (o NetworkManagerConnectivityConfigurationHubPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkManagerConnectivityConfigurationHub) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Specifies the resource Type used as hub in Hub And Spoke topology.
func (o NetworkManagerConnectivityConfigurationHubPtrOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkManagerConnectivityConfigurationHub) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceType
	}).(pulumi.StringPtrOutput)
}

type NetworkManagerCrossTenantScope struct {
	// List of management groups.
	ManagementGroups []string `pulumi:"managementGroups"`
	// List of subscriptions.
	Subscriptions []string `pulumi:"subscriptions"`
	// Tenant ID.
	TenantId *string `pulumi:"tenantId"`
}

// NetworkManagerCrossTenantScopeInput is an input type that accepts NetworkManagerCrossTenantScopeArgs and NetworkManagerCrossTenantScopeOutput values.
// You can construct a concrete instance of `NetworkManagerCrossTenantScopeInput` via:
//
//	NetworkManagerCrossTenantScopeArgs{...}
type NetworkManagerCrossTenantScopeInput interface {
	pulumi.Input

	ToNetworkManagerCrossTenantScopeOutput() NetworkManagerCrossTenantScopeOutput
	ToNetworkManagerCrossTenantScopeOutputWithContext(context.Context) NetworkManagerCrossTenantScopeOutput
}

type NetworkManagerCrossTenantScopeArgs struct {
	// List of management groups.
	ManagementGroups pulumi.StringArrayInput `pulumi:"managementGroups"`
	// List of subscriptions.
	Subscriptions pulumi.StringArrayInput `pulumi:"subscriptions"`
	// Tenant ID.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (NetworkManagerCrossTenantScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkManagerCrossTenantScope)(nil)).Elem()
}

func (i NetworkManagerCrossTenantScopeArgs) ToNetworkManagerCrossTenantScopeOutput() NetworkManagerCrossTenantScopeOutput {
	return i.ToNetworkManagerCrossTenantScopeOutputWithContext(context.Background())
}

func (i NetworkManagerCrossTenantScopeArgs) ToNetworkManagerCrossTenantScopeOutputWithContext(ctx context.Context) NetworkManagerCrossTenantScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerCrossTenantScopeOutput)
}

// NetworkManagerCrossTenantScopeArrayInput is an input type that accepts NetworkManagerCrossTenantScopeArray and NetworkManagerCrossTenantScopeArrayOutput values.
// You can construct a concrete instance of `NetworkManagerCrossTenantScopeArrayInput` via:
//
//	NetworkManagerCrossTenantScopeArray{ NetworkManagerCrossTenantScopeArgs{...} }
type NetworkManagerCrossTenantScopeArrayInput interface {
	pulumi.Input

	ToNetworkManagerCrossTenantScopeArrayOutput() NetworkManagerCrossTenantScopeArrayOutput
	ToNetworkManagerCrossTenantScopeArrayOutputWithContext(context.Context) NetworkManagerCrossTenantScopeArrayOutput
}

type NetworkManagerCrossTenantScopeArray []NetworkManagerCrossTenantScopeInput

func (NetworkManagerCrossTenantScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkManagerCrossTenantScope)(nil)).Elem()
}

func (i NetworkManagerCrossTenantScopeArray) ToNetworkManagerCrossTenantScopeArrayOutput() NetworkManagerCrossTenantScopeArrayOutput {
	return i.ToNetworkManagerCrossTenantScopeArrayOutputWithContext(context.Background())
}

func (i NetworkManagerCrossTenantScopeArray) ToNetworkManagerCrossTenantScopeArrayOutputWithContext(ctx context.Context) NetworkManagerCrossTenantScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerCrossTenantScopeArrayOutput)
}

type NetworkManagerCrossTenantScopeOutput struct{ *pulumi.OutputState }

func (NetworkManagerCrossTenantScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkManagerCrossTenantScope)(nil)).Elem()
}

func (o NetworkManagerCrossTenantScopeOutput) ToNetworkManagerCrossTenantScopeOutput() NetworkManagerCrossTenantScopeOutput {
	return o
}

func (o NetworkManagerCrossTenantScopeOutput) ToNetworkManagerCrossTenantScopeOutputWithContext(ctx context.Context) NetworkManagerCrossTenantScopeOutput {
	return o
}

// List of management groups.
func (o NetworkManagerCrossTenantScopeOutput) ManagementGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkManagerCrossTenantScope) []string { return v.ManagementGroups }).(pulumi.StringArrayOutput)
}

// List of subscriptions.
func (o NetworkManagerCrossTenantScopeOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkManagerCrossTenantScope) []string { return v.Subscriptions }).(pulumi.StringArrayOutput)
}

// Tenant ID.
func (o NetworkManagerCrossTenantScopeOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkManagerCrossTenantScope) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type NetworkManagerCrossTenantScopeArrayOutput struct{ *pulumi.OutputState }

func (NetworkManagerCrossTenantScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkManagerCrossTenantScope)(nil)).Elem()
}

func (o NetworkManagerCrossTenantScopeArrayOutput) ToNetworkManagerCrossTenantScopeArrayOutput() NetworkManagerCrossTenantScopeArrayOutput {
	return o
}

func (o NetworkManagerCrossTenantScopeArrayOutput) ToNetworkManagerCrossTenantScopeArrayOutputWithContext(ctx context.Context) NetworkManagerCrossTenantScopeArrayOutput {
	return o
}

func (o NetworkManagerCrossTenantScopeArrayOutput) Index(i pulumi.IntInput) NetworkManagerCrossTenantScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkManagerCrossTenantScope {
		return vs[0].([]NetworkManagerCrossTenantScope)[vs[1].(int)]
	}).(NetworkManagerCrossTenantScopeOutput)
}

type NetworkManagerScope struct {
	// A list of management group IDs.
	//
	// > **NOTE:** When specifying a scope at the management group level, you need to register the `Microsoft.Network` at the management group scope before deploying a Network Manager, more information can be found in the [Azure document](https://learn.microsoft.com/en-us/azure/virtual-network-manager/concept-network-manager-scope#scope).
	ManagementGroupIds []string `pulumi:"managementGroupIds"`
	// A list of subscription IDs.
	SubscriptionIds []string `pulumi:"subscriptionIds"`
}

// NetworkManagerScopeInput is an input type that accepts NetworkManagerScopeArgs and NetworkManagerScopeOutput values.
// You can construct a concrete instance of `NetworkManagerScopeInput` via:
//
//	NetworkManagerScopeArgs{...}
type NetworkManagerScopeInput interface {
	pulumi.Input

	ToNetworkManagerScopeOutput() NetworkManagerScopeOutput
	ToNetworkManagerScopeOutputWithContext(context.Context) NetworkManagerScopeOutput
}

type NetworkManagerScopeArgs struct {
	// A list of management group IDs.
	//
	// > **NOTE:** When specifying a scope at the management group level, you need to register the `Microsoft.Network` at the management group scope before deploying a Network Manager, more information can be found in the [Azure document](https://learn.microsoft.com/en-us/azure/virtual-network-manager/concept-network-manager-scope#scope).
	ManagementGroupIds pulumi.StringArrayInput `pulumi:"managementGroupIds"`
	// A list of subscription IDs.
	SubscriptionIds pulumi.StringArrayInput `pulumi:"subscriptionIds"`
}

func (NetworkManagerScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkManagerScope)(nil)).Elem()
}

func (i NetworkManagerScopeArgs) ToNetworkManagerScopeOutput() NetworkManagerScopeOutput {
	return i.ToNetworkManagerScopeOutputWithContext(context.Background())
}

func (i NetworkManagerScopeArgs) ToNetworkManagerScopeOutputWithContext(ctx context.Context) NetworkManagerScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerScopeOutput)
}

func (i NetworkManagerScopeArgs) ToNetworkManagerScopePtrOutput() NetworkManagerScopePtrOutput {
	return i.ToNetworkManagerScopePtrOutputWithContext(context.Background())
}

func (i NetworkManagerScopeArgs) ToNetworkManagerScopePtrOutputWithContext(ctx context.Context) NetworkManagerScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerScopeOutput).ToNetworkManagerScopePtrOutputWithContext(ctx)
}

// NetworkManagerScopePtrInput is an input type that accepts NetworkManagerScopeArgs, NetworkManagerScopePtr and NetworkManagerScopePtrOutput values.
// You can construct a concrete instance of `NetworkManagerScopePtrInput` via:
//
//	        NetworkManagerScopeArgs{...}
//
//	or:
//
//	        nil
type NetworkManagerScopePtrInput interface {
	pulumi.Input

	ToNetworkManagerScopePtrOutput() NetworkManagerScopePtrOutput
	ToNetworkManagerScopePtrOutputWithContext(context.Context) NetworkManagerScopePtrOutput
}

type networkManagerScopePtrType NetworkManagerScopeArgs

func NetworkManagerScopePtr(v *NetworkManagerScopeArgs) NetworkManagerScopePtrInput {
	return (*networkManagerScopePtrType)(v)
}

func (*networkManagerScopePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkManagerScope)(nil)).Elem()
}

func (i *networkManagerScopePtrType) ToNetworkManagerScopePtrOutput() NetworkManagerScopePtrOutput {
	return i.ToNetworkManagerScopePtrOutputWithContext(context.Background())
}

func (i *networkManagerScopePtrType) ToNetworkManagerScopePtrOutputWithContext(ctx context.Context) NetworkManagerScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerScopePtrOutput)
}

type NetworkManagerScopeOutput struct{ *pulumi.OutputState }

func (NetworkManagerScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkManagerScope)(nil)).Elem()
}

func (o NetworkManagerScopeOutput) ToNetworkManagerScopeOutput() NetworkManagerScopeOutput {
	return o
}

func (o NetworkManagerScopeOutput) ToNetworkManagerScopeOutputWithContext(ctx context.Context) NetworkManagerScopeOutput {
	return o
}

func (o NetworkManagerScopeOutput) ToNetworkManagerScopePtrOutput() NetworkManagerScopePtrOutput {
	return o.ToNetworkManagerScopePtrOutputWithContext(context.Background())
}

func (o NetworkManagerScopeOutput) ToNetworkManagerScopePtrOutputWithContext(ctx context.Context) NetworkManagerScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkManagerScope) *NetworkManagerScope {
		return &v
	}).(NetworkManagerScopePtrOutput)
}

// A list of management group IDs.
//
// > **NOTE:** When specifying a scope at the management group level, you need to register the `Microsoft.Network` at the management group scope before deploying a Network Manager, more information can be found in the [Azure document](https://learn.microsoft.com/en-us/azure/virtual-network-manager/concept-network-manager-scope#scope).
func (o NetworkManagerScopeOutput) ManagementGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkManagerScope) []string { return v.ManagementGroupIds }).(pulumi.StringArrayOutput)
}

// A list of subscription IDs.
func (o NetworkManagerScopeOutput) SubscriptionIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkManagerScope) []string { return v.SubscriptionIds }).(pulumi.StringArrayOutput)
}

type NetworkManagerScopePtrOutput struct{ *pulumi.OutputState }

func (NetworkManagerScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkManagerScope)(nil)).Elem()
}

func (o NetworkManagerScopePtrOutput) ToNetworkManagerScopePtrOutput() NetworkManagerScopePtrOutput {
	return o
}

func (o NetworkManagerScopePtrOutput) ToNetworkManagerScopePtrOutputWithContext(ctx context.Context) NetworkManagerScopePtrOutput {
	return o
}

func (o NetworkManagerScopePtrOutput) Elem() NetworkManagerScopeOutput {
	return o.ApplyT(func(v *NetworkManagerScope) NetworkManagerScope {
		if v != nil {
			return *v
		}
		var ret NetworkManagerScope
		return ret
	}).(NetworkManagerScopeOutput)
}

// A list of management group IDs.
//
// > **NOTE:** When specifying a scope at the management group level, you need to register the `Microsoft.Network` at the management group scope before deploying a Network Manager, more information can be found in the [Azure document](https://learn.microsoft.com/en-us/azure/virtual-network-manager/concept-network-manager-scope#scope).
func (o NetworkManagerScopePtrOutput) ManagementGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkManagerScope) []string {
		if v == nil {
			return nil
		}
		return v.ManagementGroupIds
	}).(pulumi.StringArrayOutput)
}

// A list of subscription IDs.
func (o NetworkManagerScopePtrOutput) SubscriptionIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkManagerScope) []string {
		if v == nil {
			return nil
		}
		return v.SubscriptionIds
	}).(pulumi.StringArrayOutput)
}

type NetworkPacketCaptureFilter struct {
	// The local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Changing this forces a new resource to be created.
	LocalIpAddress *string `pulumi:"localIpAddress"`
	// The local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Changing this forces a new resource to be created.
	LocalPort *string `pulumi:"localPort"`
	// The Protocol to be filtered on. Possible values include `Any`, `TCP` and `UDP`. Changing this forces a new resource to be created.
	Protocol string `pulumi:"protocol"`
	// The remote IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported.. Changing this forces a new resource to be created.
	RemoteIpAddress *string `pulumi:"remoteIpAddress"`
	// The remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Changing this forces a new resource to be created.
	RemotePort *string `pulumi:"remotePort"`
}

// NetworkPacketCaptureFilterInput is an input type that accepts NetworkPacketCaptureFilterArgs and NetworkPacketCaptureFilterOutput values.
// You can construct a concrete instance of `NetworkPacketCaptureFilterInput` via:
//
//	NetworkPacketCaptureFilterArgs{...}
type NetworkPacketCaptureFilterInput interface {
	pulumi.Input

	ToNetworkPacketCaptureFilterOutput() NetworkPacketCaptureFilterOutput
	ToNetworkPacketCaptureFilterOutputWithContext(context.Context) NetworkPacketCaptureFilterOutput
}

type NetworkPacketCaptureFilterArgs struct {
	// The local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Changing this forces a new resource to be created.
	LocalIpAddress pulumi.StringPtrInput `pulumi:"localIpAddress"`
	// The local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Changing this forces a new resource to be created.
	LocalPort pulumi.StringPtrInput `pulumi:"localPort"`
	// The Protocol to be filtered on. Possible values include `Any`, `TCP` and `UDP`. Changing this forces a new resource to be created.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The remote IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported.. Changing this forces a new resource to be created.
	RemoteIpAddress pulumi.StringPtrInput `pulumi:"remoteIpAddress"`
	// The remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Changing this forces a new resource to be created.
	RemotePort pulumi.StringPtrInput `pulumi:"remotePort"`
}

func (NetworkPacketCaptureFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPacketCaptureFilter)(nil)).Elem()
}

func (i NetworkPacketCaptureFilterArgs) ToNetworkPacketCaptureFilterOutput() NetworkPacketCaptureFilterOutput {
	return i.ToNetworkPacketCaptureFilterOutputWithContext(context.Background())
}

func (i NetworkPacketCaptureFilterArgs) ToNetworkPacketCaptureFilterOutputWithContext(ctx context.Context) NetworkPacketCaptureFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPacketCaptureFilterOutput)
}

// NetworkPacketCaptureFilterArrayInput is an input type that accepts NetworkPacketCaptureFilterArray and NetworkPacketCaptureFilterArrayOutput values.
// You can construct a concrete instance of `NetworkPacketCaptureFilterArrayInput` via:
//
//	NetworkPacketCaptureFilterArray{ NetworkPacketCaptureFilterArgs{...} }
type NetworkPacketCaptureFilterArrayInput interface {
	pulumi.Input

	ToNetworkPacketCaptureFilterArrayOutput() NetworkPacketCaptureFilterArrayOutput
	ToNetworkPacketCaptureFilterArrayOutputWithContext(context.Context) NetworkPacketCaptureFilterArrayOutput
}

type NetworkPacketCaptureFilterArray []NetworkPacketCaptureFilterInput

func (NetworkPacketCaptureFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkPacketCaptureFilter)(nil)).Elem()
}

func (i NetworkPacketCaptureFilterArray) ToNetworkPacketCaptureFilterArrayOutput() NetworkPacketCaptureFilterArrayOutput {
	return i.ToNetworkPacketCaptureFilterArrayOutputWithContext(context.Background())
}

func (i NetworkPacketCaptureFilterArray) ToNetworkPacketCaptureFilterArrayOutputWithContext(ctx context.Context) NetworkPacketCaptureFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPacketCaptureFilterArrayOutput)
}

type NetworkPacketCaptureFilterOutput struct{ *pulumi.OutputState }

func (NetworkPacketCaptureFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPacketCaptureFilter)(nil)).Elem()
}

func (o NetworkPacketCaptureFilterOutput) ToNetworkPacketCaptureFilterOutput() NetworkPacketCaptureFilterOutput {
	return o
}

func (o NetworkPacketCaptureFilterOutput) ToNetworkPacketCaptureFilterOutputWithContext(ctx context.Context) NetworkPacketCaptureFilterOutput {
	return o
}

// The local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Changing this forces a new resource to be created.
func (o NetworkPacketCaptureFilterOutput) LocalIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkPacketCaptureFilter) *string { return v.LocalIpAddress }).(pulumi.StringPtrOutput)
}

// The local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Changing this forces a new resource to be created.
func (o NetworkPacketCaptureFilterOutput) LocalPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkPacketCaptureFilter) *string { return v.LocalPort }).(pulumi.StringPtrOutput)
}

// The Protocol to be filtered on. Possible values include `Any`, `TCP` and `UDP`. Changing this forces a new resource to be created.
func (o NetworkPacketCaptureFilterOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkPacketCaptureFilter) string { return v.Protocol }).(pulumi.StringOutput)
}

// The remote IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported.. Changing this forces a new resource to be created.
func (o NetworkPacketCaptureFilterOutput) RemoteIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkPacketCaptureFilter) *string { return v.RemoteIpAddress }).(pulumi.StringPtrOutput)
}

// The remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Changing this forces a new resource to be created.
func (o NetworkPacketCaptureFilterOutput) RemotePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkPacketCaptureFilter) *string { return v.RemotePort }).(pulumi.StringPtrOutput)
}

type NetworkPacketCaptureFilterArrayOutput struct{ *pulumi.OutputState }

func (NetworkPacketCaptureFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkPacketCaptureFilter)(nil)).Elem()
}

func (o NetworkPacketCaptureFilterArrayOutput) ToNetworkPacketCaptureFilterArrayOutput() NetworkPacketCaptureFilterArrayOutput {
	return o
}

func (o NetworkPacketCaptureFilterArrayOutput) ToNetworkPacketCaptureFilterArrayOutputWithContext(ctx context.Context) NetworkPacketCaptureFilterArrayOutput {
	return o
}

func (o NetworkPacketCaptureFilterArrayOutput) Index(i pulumi.IntInput) NetworkPacketCaptureFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkPacketCaptureFilter {
		return vs[0].([]NetworkPacketCaptureFilter)[vs[1].(int)]
	}).(NetworkPacketCaptureFilterOutput)
}

type NetworkPacketCaptureStorageLocation struct {
	// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For Linux virtual machine it must start with `/var/captures`.
	FilePath *string `pulumi:"filePath"`
	// The ID of the storage account to save the packet capture session
	//
	// > **NOTE:** At least one of `filePath` or `storageAccountId` must be specified.
	StorageAccountId *string `pulumi:"storageAccountId"`
	// The URI of the storage path to save the packet capture.
	StoragePath *string `pulumi:"storagePath"`
}

// NetworkPacketCaptureStorageLocationInput is an input type that accepts NetworkPacketCaptureStorageLocationArgs and NetworkPacketCaptureStorageLocationOutput values.
// You can construct a concrete instance of `NetworkPacketCaptureStorageLocationInput` via:
//
//	NetworkPacketCaptureStorageLocationArgs{...}
type NetworkPacketCaptureStorageLocationInput interface {
	pulumi.Input

	ToNetworkPacketCaptureStorageLocationOutput() NetworkPacketCaptureStorageLocationOutput
	ToNetworkPacketCaptureStorageLocationOutputWithContext(context.Context) NetworkPacketCaptureStorageLocationOutput
}

type NetworkPacketCaptureStorageLocationArgs struct {
	// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For Linux virtual machine it must start with `/var/captures`.
	FilePath pulumi.StringPtrInput `pulumi:"filePath"`
	// The ID of the storage account to save the packet capture session
	//
	// > **NOTE:** At least one of `filePath` or `storageAccountId` must be specified.
	StorageAccountId pulumi.StringPtrInput `pulumi:"storageAccountId"`
	// The URI of the storage path to save the packet capture.
	StoragePath pulumi.StringPtrInput `pulumi:"storagePath"`
}

func (NetworkPacketCaptureStorageLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPacketCaptureStorageLocation)(nil)).Elem()
}

func (i NetworkPacketCaptureStorageLocationArgs) ToNetworkPacketCaptureStorageLocationOutput() NetworkPacketCaptureStorageLocationOutput {
	return i.ToNetworkPacketCaptureStorageLocationOutputWithContext(context.Background())
}

func (i NetworkPacketCaptureStorageLocationArgs) ToNetworkPacketCaptureStorageLocationOutputWithContext(ctx context.Context) NetworkPacketCaptureStorageLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPacketCaptureStorageLocationOutput)
}

func (i NetworkPacketCaptureStorageLocationArgs) ToNetworkPacketCaptureStorageLocationPtrOutput() NetworkPacketCaptureStorageLocationPtrOutput {
	return i.ToNetworkPacketCaptureStorageLocationPtrOutputWithContext(context.Background())
}

func (i NetworkPacketCaptureStorageLocationArgs) ToNetworkPacketCaptureStorageLocationPtrOutputWithContext(ctx context.Context) NetworkPacketCaptureStorageLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPacketCaptureStorageLocationOutput).ToNetworkPacketCaptureStorageLocationPtrOutputWithContext(ctx)
}

// NetworkPacketCaptureStorageLocationPtrInput is an input type that accepts NetworkPacketCaptureStorageLocationArgs, NetworkPacketCaptureStorageLocationPtr and NetworkPacketCaptureStorageLocationPtrOutput values.
// You can construct a concrete instance of `NetworkPacketCaptureStorageLocationPtrInput` via:
//
//	        NetworkPacketCaptureStorageLocationArgs{...}
//
//	or:
//
//	        nil
type NetworkPacketCaptureStorageLocationPtrInput interface {
	pulumi.Input

	ToNetworkPacketCaptureStorageLocationPtrOutput() NetworkPacketCaptureStorageLocationPtrOutput
	ToNetworkPacketCaptureStorageLocationPtrOutputWithContext(context.Context) NetworkPacketCaptureStorageLocationPtrOutput
}

type networkPacketCaptureStorageLocationPtrType NetworkPacketCaptureStorageLocationArgs

func NetworkPacketCaptureStorageLocationPtr(v *NetworkPacketCaptureStorageLocationArgs) NetworkPacketCaptureStorageLocationPtrInput {
	return (*networkPacketCaptureStorageLocationPtrType)(v)
}

func (*networkPacketCaptureStorageLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPacketCaptureStorageLocation)(nil)).Elem()
}

func (i *networkPacketCaptureStorageLocationPtrType) ToNetworkPacketCaptureStorageLocationPtrOutput() NetworkPacketCaptureStorageLocationPtrOutput {
	return i.ToNetworkPacketCaptureStorageLocationPtrOutputWithContext(context.Background())
}

func (i *networkPacketCaptureStorageLocationPtrType) ToNetworkPacketCaptureStorageLocationPtrOutputWithContext(ctx context.Context) NetworkPacketCaptureStorageLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPacketCaptureStorageLocationPtrOutput)
}

type NetworkPacketCaptureStorageLocationOutput struct{ *pulumi.OutputState }

func (NetworkPacketCaptureStorageLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPacketCaptureStorageLocation)(nil)).Elem()
}

func (o NetworkPacketCaptureStorageLocationOutput) ToNetworkPacketCaptureStorageLocationOutput() NetworkPacketCaptureStorageLocationOutput {
	return o
}

func (o NetworkPacketCaptureStorageLocationOutput) ToNetworkPacketCaptureStorageLocationOutputWithContext(ctx context.Context) NetworkPacketCaptureStorageLocationOutput {
	return o
}

func (o NetworkPacketCaptureStorageLocationOutput) ToNetworkPacketCaptureStorageLocationPtrOutput() NetworkPacketCaptureStorageLocationPtrOutput {
	return o.ToNetworkPacketCaptureStorageLocationPtrOutputWithContext(context.Background())
}

func (o NetworkPacketCaptureStorageLocationOutput) ToNetworkPacketCaptureStorageLocationPtrOutputWithContext(ctx context.Context) NetworkPacketCaptureStorageLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkPacketCaptureStorageLocation) *NetworkPacketCaptureStorageLocation {
		return &v
	}).(NetworkPacketCaptureStorageLocationPtrOutput)
}

// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For Linux virtual machine it must start with `/var/captures`.
func (o NetworkPacketCaptureStorageLocationOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkPacketCaptureStorageLocation) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

// The ID of the storage account to save the packet capture session
//
// > **NOTE:** At least one of `filePath` or `storageAccountId` must be specified.
func (o NetworkPacketCaptureStorageLocationOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkPacketCaptureStorageLocation) *string { return v.StorageAccountId }).(pulumi.StringPtrOutput)
}

// The URI of the storage path to save the packet capture.
func (o NetworkPacketCaptureStorageLocationOutput) StoragePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkPacketCaptureStorageLocation) *string { return v.StoragePath }).(pulumi.StringPtrOutput)
}

type NetworkPacketCaptureStorageLocationPtrOutput struct{ *pulumi.OutputState }

func (NetworkPacketCaptureStorageLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPacketCaptureStorageLocation)(nil)).Elem()
}

func (o NetworkPacketCaptureStorageLocationPtrOutput) ToNetworkPacketCaptureStorageLocationPtrOutput() NetworkPacketCaptureStorageLocationPtrOutput {
	return o
}

func (o NetworkPacketCaptureStorageLocationPtrOutput) ToNetworkPacketCaptureStorageLocationPtrOutputWithContext(ctx context.Context) NetworkPacketCaptureStorageLocationPtrOutput {
	return o
}

func (o NetworkPacketCaptureStorageLocationPtrOutput) Elem() NetworkPacketCaptureStorageLocationOutput {
	return o.ApplyT(func(v *NetworkPacketCaptureStorageLocation) NetworkPacketCaptureStorageLocation {
		if v != nil {
			return *v
		}
		var ret NetworkPacketCaptureStorageLocation
		return ret
	}).(NetworkPacketCaptureStorageLocationOutput)
}

// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For Linux virtual machine it must start with `/var/captures`.
func (o NetworkPacketCaptureStorageLocationPtrOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkPacketCaptureStorageLocation) *string {
		if v == nil {
			return nil
		}
		return v.FilePath
	}).(pulumi.StringPtrOutput)
}

// The ID of the storage account to save the packet capture session
//
// > **NOTE:** At least one of `filePath` or `storageAccountId` must be specified.
func (o NetworkPacketCaptureStorageLocationPtrOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkPacketCaptureStorageLocation) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountId
	}).(pulumi.StringPtrOutput)
}

// The URI of the storage path to save the packet capture.
func (o NetworkPacketCaptureStorageLocationPtrOutput) StoragePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkPacketCaptureStorageLocation) *string {
		if v == nil {
			return nil
		}
		return v.StoragePath
	}).(pulumi.StringPtrOutput)
}

type NetworkSecurityGroupSecurityRule struct {
	// Specifies whether network traffic is allowed or denied. Possible values are `Allow` and `Deny`.
	Access string `pulumi:"access"`
	// A description for this rule. Restricted to 140 characters.
	Description *string `pulumi:"description"`
	// CIDR or destination IP range or * to match any IP. Tags such as `VirtualNetwork`, `AzureLoadBalancer` and `Internet` can also be used. This is required if `destinationAddressPrefixes` is not specified.
	DestinationAddressPrefix *string `pulumi:"destinationAddressPrefix"`
	// List of destination address prefixes. Tags may not be used. This is required if `destinationAddressPrefix` is not specified.
	DestinationAddressPrefixes []string `pulumi:"destinationAddressPrefixes"`
	// A List of destination Application Security Group IDs
	DestinationApplicationSecurityGroupIds []string `pulumi:"destinationApplicationSecurityGroupIds"`
	// Destination Port or Range. Integer or range between `0` and `65535` or `*` to match any. This is required if `destinationPortRanges` is not specified.
	DestinationPortRange *string `pulumi:"destinationPortRange"`
	// List of destination ports or port ranges. This is required if `destinationPortRange` is not specified.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are `Inbound` and `Outbound`.
	Direction string `pulumi:"direction"`
	// The name of the security rule.
	Name string `pulumi:"name"`
	// Specifies the priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority int `pulumi:"priority"`
	// Network protocol this rule applies to. Possible values include `Tcp`, `Udp`, `Icmp`, `Esp`, `Ah` or `*` (which matches all).
	Protocol string `pulumi:"protocol"`
	// CIDR or source IP range or * to match any IP. Tags such as `VirtualNetwork`, `AzureLoadBalancer` and `Internet` can also be used. This is required if `sourceAddressPrefixes` is not specified.
	SourceAddressPrefix *string `pulumi:"sourceAddressPrefix"`
	// List of source address prefixes. Tags may not be used. This is required if `sourceAddressPrefix` is not specified.
	SourceAddressPrefixes []string `pulumi:"sourceAddressPrefixes"`
	// A List of source Application Security Group IDs
	SourceApplicationSecurityGroupIds []string `pulumi:"sourceApplicationSecurityGroupIds"`
	// Source Port or Range. Integer or range between `0` and `65535` or `*` to match any. This is required if `sourcePortRanges` is not specified.
	SourcePortRange *string `pulumi:"sourcePortRange"`
	// List of source ports or port ranges. This is required if `sourcePortRange` is not specified.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
}

// NetworkSecurityGroupSecurityRuleInput is an input type that accepts NetworkSecurityGroupSecurityRuleArgs and NetworkSecurityGroupSecurityRuleOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupSecurityRuleInput` via:
//
//	NetworkSecurityGroupSecurityRuleArgs{...}
type NetworkSecurityGroupSecurityRuleInput interface {
	pulumi.Input

	ToNetworkSecurityGroupSecurityRuleOutput() NetworkSecurityGroupSecurityRuleOutput
	ToNetworkSecurityGroupSecurityRuleOutputWithContext(context.Context) NetworkSecurityGroupSecurityRuleOutput
}

type NetworkSecurityGroupSecurityRuleArgs struct {
	// Specifies whether network traffic is allowed or denied. Possible values are `Allow` and `Deny`.
	Access pulumi.StringInput `pulumi:"access"`
	// A description for this rule. Restricted to 140 characters.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// CIDR or destination IP range or * to match any IP. Tags such as `VirtualNetwork`, `AzureLoadBalancer` and `Internet` can also be used. This is required if `destinationAddressPrefixes` is not specified.
	DestinationAddressPrefix pulumi.StringPtrInput `pulumi:"destinationAddressPrefix"`
	// List of destination address prefixes. Tags may not be used. This is required if `destinationAddressPrefix` is not specified.
	DestinationAddressPrefixes pulumi.StringArrayInput `pulumi:"destinationAddressPrefixes"`
	// A List of destination Application Security Group IDs
	DestinationApplicationSecurityGroupIds pulumi.StringArrayInput `pulumi:"destinationApplicationSecurityGroupIds"`
	// Destination Port or Range. Integer or range between `0` and `65535` or `*` to match any. This is required if `destinationPortRanges` is not specified.
	DestinationPortRange pulumi.StringPtrInput `pulumi:"destinationPortRange"`
	// List of destination ports or port ranges. This is required if `destinationPortRange` is not specified.
	DestinationPortRanges pulumi.StringArrayInput `pulumi:"destinationPortRanges"`
	// The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are `Inbound` and `Outbound`.
	Direction pulumi.StringInput `pulumi:"direction"`
	// The name of the security rule.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Network protocol this rule applies to. Possible values include `Tcp`, `Udp`, `Icmp`, `Esp`, `Ah` or `*` (which matches all).
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// CIDR or source IP range or * to match any IP. Tags such as `VirtualNetwork`, `AzureLoadBalancer` and `Internet` can also be used. This is required if `sourceAddressPrefixes` is not specified.
	SourceAddressPrefix pulumi.StringPtrInput `pulumi:"sourceAddressPrefix"`
	// List of source address prefixes. Tags may not be used. This is required if `sourceAddressPrefix` is not specified.
	SourceAddressPrefixes pulumi.StringArrayInput `pulumi:"sourceAddressPrefixes"`
	// A List of source Application Security Group IDs
	SourceApplicationSecurityGroupIds pulumi.StringArrayInput `pulumi:"sourceApplicationSecurityGroupIds"`
	// Source Port or Range. Integer or range between `0` and `65535` or `*` to match any. This is required if `sourcePortRanges` is not specified.
	SourcePortRange pulumi.StringPtrInput `pulumi:"sourcePortRange"`
	// List of source ports or port ranges. This is required if `sourcePortRange` is not specified.
	SourcePortRanges pulumi.StringArrayInput `pulumi:"sourcePortRanges"`
}

func (NetworkSecurityGroupSecurityRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupSecurityRule)(nil)).Elem()
}

func (i NetworkSecurityGroupSecurityRuleArgs) ToNetworkSecurityGroupSecurityRuleOutput() NetworkSecurityGroupSecurityRuleOutput {
	return i.ToNetworkSecurityGroupSecurityRuleOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupSecurityRuleArgs) ToNetworkSecurityGroupSecurityRuleOutputWithContext(ctx context.Context) NetworkSecurityGroupSecurityRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupSecurityRuleOutput)
}

// NetworkSecurityGroupSecurityRuleArrayInput is an input type that accepts NetworkSecurityGroupSecurityRuleArray and NetworkSecurityGroupSecurityRuleArrayOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupSecurityRuleArrayInput` via:
//
//	NetworkSecurityGroupSecurityRuleArray{ NetworkSecurityGroupSecurityRuleArgs{...} }
type NetworkSecurityGroupSecurityRuleArrayInput interface {
	pulumi.Input

	ToNetworkSecurityGroupSecurityRuleArrayOutput() NetworkSecurityGroupSecurityRuleArrayOutput
	ToNetworkSecurityGroupSecurityRuleArrayOutputWithContext(context.Context) NetworkSecurityGroupSecurityRuleArrayOutput
}

type NetworkSecurityGroupSecurityRuleArray []NetworkSecurityGroupSecurityRuleInput

func (NetworkSecurityGroupSecurityRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityGroupSecurityRule)(nil)).Elem()
}

func (i NetworkSecurityGroupSecurityRuleArray) ToNetworkSecurityGroupSecurityRuleArrayOutput() NetworkSecurityGroupSecurityRuleArrayOutput {
	return i.ToNetworkSecurityGroupSecurityRuleArrayOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupSecurityRuleArray) ToNetworkSecurityGroupSecurityRuleArrayOutputWithContext(ctx context.Context) NetworkSecurityGroupSecurityRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupSecurityRuleArrayOutput)
}

type NetworkSecurityGroupSecurityRuleOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupSecurityRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupSecurityRule)(nil)).Elem()
}

func (o NetworkSecurityGroupSecurityRuleOutput) ToNetworkSecurityGroupSecurityRuleOutput() NetworkSecurityGroupSecurityRuleOutput {
	return o
}

func (o NetworkSecurityGroupSecurityRuleOutput) ToNetworkSecurityGroupSecurityRuleOutputWithContext(ctx context.Context) NetworkSecurityGroupSecurityRuleOutput {
	return o
}

// Specifies whether network traffic is allowed or denied. Possible values are `Allow` and `Deny`.
func (o NetworkSecurityGroupSecurityRuleOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupSecurityRule) string { return v.Access }).(pulumi.StringOutput)
}

// A description for this rule. Restricted to 140 characters.
func (o NetworkSecurityGroupSecurityRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupSecurityRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// CIDR or destination IP range or * to match any IP. Tags such as `VirtualNetwork`, `AzureLoadBalancer` and `Internet` can also be used. This is required if `destinationAddressPrefixes` is not specified.
func (o NetworkSecurityGroupSecurityRuleOutput) DestinationAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupSecurityRule) *string { return v.DestinationAddressPrefix }).(pulumi.StringPtrOutput)
}

// List of destination address prefixes. Tags may not be used. This is required if `destinationAddressPrefix` is not specified.
func (o NetworkSecurityGroupSecurityRuleOutput) DestinationAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupSecurityRule) []string { return v.DestinationAddressPrefixes }).(pulumi.StringArrayOutput)
}

// A List of destination Application Security Group IDs
func (o NetworkSecurityGroupSecurityRuleOutput) DestinationApplicationSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupSecurityRule) []string { return v.DestinationApplicationSecurityGroupIds }).(pulumi.StringArrayOutput)
}

// Destination Port or Range. Integer or range between `0` and `65535` or `*` to match any. This is required if `destinationPortRanges` is not specified.
func (o NetworkSecurityGroupSecurityRuleOutput) DestinationPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupSecurityRule) *string { return v.DestinationPortRange }).(pulumi.StringPtrOutput)
}

// List of destination ports or port ranges. This is required if `destinationPortRange` is not specified.
func (o NetworkSecurityGroupSecurityRuleOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupSecurityRule) []string { return v.DestinationPortRanges }).(pulumi.StringArrayOutput)
}

// The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are `Inbound` and `Outbound`.
func (o NetworkSecurityGroupSecurityRuleOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupSecurityRule) string { return v.Direction }).(pulumi.StringOutput)
}

// The name of the security rule.
func (o NetworkSecurityGroupSecurityRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupSecurityRule) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
func (o NetworkSecurityGroupSecurityRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkSecurityGroupSecurityRule) int { return v.Priority }).(pulumi.IntOutput)
}

// Network protocol this rule applies to. Possible values include `Tcp`, `Udp`, `Icmp`, `Esp`, `Ah` or `*` (which matches all).
func (o NetworkSecurityGroupSecurityRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupSecurityRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// CIDR or source IP range or * to match any IP. Tags such as `VirtualNetwork`, `AzureLoadBalancer` and `Internet` can also be used. This is required if `sourceAddressPrefixes` is not specified.
func (o NetworkSecurityGroupSecurityRuleOutput) SourceAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupSecurityRule) *string { return v.SourceAddressPrefix }).(pulumi.StringPtrOutput)
}

// List of source address prefixes. Tags may not be used. This is required if `sourceAddressPrefix` is not specified.
func (o NetworkSecurityGroupSecurityRuleOutput) SourceAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupSecurityRule) []string { return v.SourceAddressPrefixes }).(pulumi.StringArrayOutput)
}

// A List of source Application Security Group IDs
func (o NetworkSecurityGroupSecurityRuleOutput) SourceApplicationSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupSecurityRule) []string { return v.SourceApplicationSecurityGroupIds }).(pulumi.StringArrayOutput)
}

// Source Port or Range. Integer or range between `0` and `65535` or `*` to match any. This is required if `sourcePortRanges` is not specified.
func (o NetworkSecurityGroupSecurityRuleOutput) SourcePortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupSecurityRule) *string { return v.SourcePortRange }).(pulumi.StringPtrOutput)
}

// List of source ports or port ranges. This is required if `sourcePortRange` is not specified.
func (o NetworkSecurityGroupSecurityRuleOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupSecurityRule) []string { return v.SourcePortRanges }).(pulumi.StringArrayOutput)
}

type NetworkSecurityGroupSecurityRuleArrayOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupSecurityRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSecurityGroupSecurityRule)(nil)).Elem()
}

func (o NetworkSecurityGroupSecurityRuleArrayOutput) ToNetworkSecurityGroupSecurityRuleArrayOutput() NetworkSecurityGroupSecurityRuleArrayOutput {
	return o
}

func (o NetworkSecurityGroupSecurityRuleArrayOutput) ToNetworkSecurityGroupSecurityRuleArrayOutputWithContext(ctx context.Context) NetworkSecurityGroupSecurityRuleArrayOutput {
	return o
}

func (o NetworkSecurityGroupSecurityRuleArrayOutput) Index(i pulumi.IntInput) NetworkSecurityGroupSecurityRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSecurityGroupSecurityRule {
		return vs[0].([]NetworkSecurityGroupSecurityRule)[vs[1].(int)]
	}).(NetworkSecurityGroupSecurityRuleOutput)
}

type NetworkWatcherFlowLogRetentionPolicy struct {
	// The number of days to retain flow log records.
	Days int `pulumi:"days"`
	// Boolean flag to enable/disable retention.
	Enabled bool `pulumi:"enabled"`
}

// NetworkWatcherFlowLogRetentionPolicyInput is an input type that accepts NetworkWatcherFlowLogRetentionPolicyArgs and NetworkWatcherFlowLogRetentionPolicyOutput values.
// You can construct a concrete instance of `NetworkWatcherFlowLogRetentionPolicyInput` via:
//
//	NetworkWatcherFlowLogRetentionPolicyArgs{...}
type NetworkWatcherFlowLogRetentionPolicyInput interface {
	pulumi.Input

	ToNetworkWatcherFlowLogRetentionPolicyOutput() NetworkWatcherFlowLogRetentionPolicyOutput
	ToNetworkWatcherFlowLogRetentionPolicyOutputWithContext(context.Context) NetworkWatcherFlowLogRetentionPolicyOutput
}

type NetworkWatcherFlowLogRetentionPolicyArgs struct {
	// The number of days to retain flow log records.
	Days pulumi.IntInput `pulumi:"days"`
	// Boolean flag to enable/disable retention.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (NetworkWatcherFlowLogRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkWatcherFlowLogRetentionPolicy)(nil)).Elem()
}

func (i NetworkWatcherFlowLogRetentionPolicyArgs) ToNetworkWatcherFlowLogRetentionPolicyOutput() NetworkWatcherFlowLogRetentionPolicyOutput {
	return i.ToNetworkWatcherFlowLogRetentionPolicyOutputWithContext(context.Background())
}

func (i NetworkWatcherFlowLogRetentionPolicyArgs) ToNetworkWatcherFlowLogRetentionPolicyOutputWithContext(ctx context.Context) NetworkWatcherFlowLogRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkWatcherFlowLogRetentionPolicyOutput)
}

func (i NetworkWatcherFlowLogRetentionPolicyArgs) ToNetworkWatcherFlowLogRetentionPolicyPtrOutput() NetworkWatcherFlowLogRetentionPolicyPtrOutput {
	return i.ToNetworkWatcherFlowLogRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i NetworkWatcherFlowLogRetentionPolicyArgs) ToNetworkWatcherFlowLogRetentionPolicyPtrOutputWithContext(ctx context.Context) NetworkWatcherFlowLogRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkWatcherFlowLogRetentionPolicyOutput).ToNetworkWatcherFlowLogRetentionPolicyPtrOutputWithContext(ctx)
}

// NetworkWatcherFlowLogRetentionPolicyPtrInput is an input type that accepts NetworkWatcherFlowLogRetentionPolicyArgs, NetworkWatcherFlowLogRetentionPolicyPtr and NetworkWatcherFlowLogRetentionPolicyPtrOutput values.
// You can construct a concrete instance of `NetworkWatcherFlowLogRetentionPolicyPtrInput` via:
//
//	        NetworkWatcherFlowLogRetentionPolicyArgs{...}
//
//	or:
//
//	        nil
type NetworkWatcherFlowLogRetentionPolicyPtrInput interface {
	pulumi.Input

	ToNetworkWatcherFlowLogRetentionPolicyPtrOutput() NetworkWatcherFlowLogRetentionPolicyPtrOutput
	ToNetworkWatcherFlowLogRetentionPolicyPtrOutputWithContext(context.Context) NetworkWatcherFlowLogRetentionPolicyPtrOutput
}

type networkWatcherFlowLogRetentionPolicyPtrType NetworkWatcherFlowLogRetentionPolicyArgs

func NetworkWatcherFlowLogRetentionPolicyPtr(v *NetworkWatcherFlowLogRetentionPolicyArgs) NetworkWatcherFlowLogRetentionPolicyPtrInput {
	return (*networkWatcherFlowLogRetentionPolicyPtrType)(v)
}

func (*networkWatcherFlowLogRetentionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkWatcherFlowLogRetentionPolicy)(nil)).Elem()
}

func (i *networkWatcherFlowLogRetentionPolicyPtrType) ToNetworkWatcherFlowLogRetentionPolicyPtrOutput() NetworkWatcherFlowLogRetentionPolicyPtrOutput {
	return i.ToNetworkWatcherFlowLogRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i *networkWatcherFlowLogRetentionPolicyPtrType) ToNetworkWatcherFlowLogRetentionPolicyPtrOutputWithContext(ctx context.Context) NetworkWatcherFlowLogRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkWatcherFlowLogRetentionPolicyPtrOutput)
}

type NetworkWatcherFlowLogRetentionPolicyOutput struct{ *pulumi.OutputState }

func (NetworkWatcherFlowLogRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkWatcherFlowLogRetentionPolicy)(nil)).Elem()
}

func (o NetworkWatcherFlowLogRetentionPolicyOutput) ToNetworkWatcherFlowLogRetentionPolicyOutput() NetworkWatcherFlowLogRetentionPolicyOutput {
	return o
}

func (o NetworkWatcherFlowLogRetentionPolicyOutput) ToNetworkWatcherFlowLogRetentionPolicyOutputWithContext(ctx context.Context) NetworkWatcherFlowLogRetentionPolicyOutput {
	return o
}

func (o NetworkWatcherFlowLogRetentionPolicyOutput) ToNetworkWatcherFlowLogRetentionPolicyPtrOutput() NetworkWatcherFlowLogRetentionPolicyPtrOutput {
	return o.ToNetworkWatcherFlowLogRetentionPolicyPtrOutputWithContext(context.Background())
}

func (o NetworkWatcherFlowLogRetentionPolicyOutput) ToNetworkWatcherFlowLogRetentionPolicyPtrOutputWithContext(ctx context.Context) NetworkWatcherFlowLogRetentionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkWatcherFlowLogRetentionPolicy) *NetworkWatcherFlowLogRetentionPolicy {
		return &v
	}).(NetworkWatcherFlowLogRetentionPolicyPtrOutput)
}

// The number of days to retain flow log records.
func (o NetworkWatcherFlowLogRetentionPolicyOutput) Days() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkWatcherFlowLogRetentionPolicy) int { return v.Days }).(pulumi.IntOutput)
}

// Boolean flag to enable/disable retention.
func (o NetworkWatcherFlowLogRetentionPolicyOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NetworkWatcherFlowLogRetentionPolicy) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type NetworkWatcherFlowLogRetentionPolicyPtrOutput struct{ *pulumi.OutputState }

func (NetworkWatcherFlowLogRetentionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkWatcherFlowLogRetentionPolicy)(nil)).Elem()
}

func (o NetworkWatcherFlowLogRetentionPolicyPtrOutput) ToNetworkWatcherFlowLogRetentionPolicyPtrOutput() NetworkWatcherFlowLogRetentionPolicyPtrOutput {
	return o
}

func (o NetworkWatcherFlowLogRetentionPolicyPtrOutput) ToNetworkWatcherFlowLogRetentionPolicyPtrOutputWithContext(ctx context.Context) NetworkWatcherFlowLogRetentionPolicyPtrOutput {
	return o
}

func (o NetworkWatcherFlowLogRetentionPolicyPtrOutput) Elem() NetworkWatcherFlowLogRetentionPolicyOutput {
	return o.ApplyT(func(v *NetworkWatcherFlowLogRetentionPolicy) NetworkWatcherFlowLogRetentionPolicy {
		if v != nil {
			return *v
		}
		var ret NetworkWatcherFlowLogRetentionPolicy
		return ret
	}).(NetworkWatcherFlowLogRetentionPolicyOutput)
}

// The number of days to retain flow log records.
func (o NetworkWatcherFlowLogRetentionPolicyPtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkWatcherFlowLogRetentionPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.Days
	}).(pulumi.IntPtrOutput)
}

// Boolean flag to enable/disable retention.
func (o NetworkWatcherFlowLogRetentionPolicyPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkWatcherFlowLogRetentionPolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type NetworkWatcherFlowLogTrafficAnalytics struct {
	// Boolean flag to enable/disable traffic analytics.
	Enabled bool `pulumi:"enabled"`
	// How frequently service should do flow analytics in minutes. Defaults to `60`.
	IntervalInMinutes *int `pulumi:"intervalInMinutes"`
	// The resource GUID of the attached workspace.
	WorkspaceId string `pulumi:"workspaceId"`
	// The location of the attached workspace.
	WorkspaceRegion string `pulumi:"workspaceRegion"`
	// The resource ID of the attached workspace.
	WorkspaceResourceId string `pulumi:"workspaceResourceId"`
}

// NetworkWatcherFlowLogTrafficAnalyticsInput is an input type that accepts NetworkWatcherFlowLogTrafficAnalyticsArgs and NetworkWatcherFlowLogTrafficAnalyticsOutput values.
// You can construct a concrete instance of `NetworkWatcherFlowLogTrafficAnalyticsInput` via:
//
//	NetworkWatcherFlowLogTrafficAnalyticsArgs{...}
type NetworkWatcherFlowLogTrafficAnalyticsInput interface {
	pulumi.Input

	ToNetworkWatcherFlowLogTrafficAnalyticsOutput() NetworkWatcherFlowLogTrafficAnalyticsOutput
	ToNetworkWatcherFlowLogTrafficAnalyticsOutputWithContext(context.Context) NetworkWatcherFlowLogTrafficAnalyticsOutput
}

type NetworkWatcherFlowLogTrafficAnalyticsArgs struct {
	// Boolean flag to enable/disable traffic analytics.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// How frequently service should do flow analytics in minutes. Defaults to `60`.
	IntervalInMinutes pulumi.IntPtrInput `pulumi:"intervalInMinutes"`
	// The resource GUID of the attached workspace.
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
	// The location of the attached workspace.
	WorkspaceRegion pulumi.StringInput `pulumi:"workspaceRegion"`
	// The resource ID of the attached workspace.
	WorkspaceResourceId pulumi.StringInput `pulumi:"workspaceResourceId"`
}

func (NetworkWatcherFlowLogTrafficAnalyticsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkWatcherFlowLogTrafficAnalytics)(nil)).Elem()
}

func (i NetworkWatcherFlowLogTrafficAnalyticsArgs) ToNetworkWatcherFlowLogTrafficAnalyticsOutput() NetworkWatcherFlowLogTrafficAnalyticsOutput {
	return i.ToNetworkWatcherFlowLogTrafficAnalyticsOutputWithContext(context.Background())
}

func (i NetworkWatcherFlowLogTrafficAnalyticsArgs) ToNetworkWatcherFlowLogTrafficAnalyticsOutputWithContext(ctx context.Context) NetworkWatcherFlowLogTrafficAnalyticsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkWatcherFlowLogTrafficAnalyticsOutput)
}

func (i NetworkWatcherFlowLogTrafficAnalyticsArgs) ToNetworkWatcherFlowLogTrafficAnalyticsPtrOutput() NetworkWatcherFlowLogTrafficAnalyticsPtrOutput {
	return i.ToNetworkWatcherFlowLogTrafficAnalyticsPtrOutputWithContext(context.Background())
}

func (i NetworkWatcherFlowLogTrafficAnalyticsArgs) ToNetworkWatcherFlowLogTrafficAnalyticsPtrOutputWithContext(ctx context.Context) NetworkWatcherFlowLogTrafficAnalyticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkWatcherFlowLogTrafficAnalyticsOutput).ToNetworkWatcherFlowLogTrafficAnalyticsPtrOutputWithContext(ctx)
}

// NetworkWatcherFlowLogTrafficAnalyticsPtrInput is an input type that accepts NetworkWatcherFlowLogTrafficAnalyticsArgs, NetworkWatcherFlowLogTrafficAnalyticsPtr and NetworkWatcherFlowLogTrafficAnalyticsPtrOutput values.
// You can construct a concrete instance of `NetworkWatcherFlowLogTrafficAnalyticsPtrInput` via:
//
//	        NetworkWatcherFlowLogTrafficAnalyticsArgs{...}
//
//	or:
//
//	        nil
type NetworkWatcherFlowLogTrafficAnalyticsPtrInput interface {
	pulumi.Input

	ToNetworkWatcherFlowLogTrafficAnalyticsPtrOutput() NetworkWatcherFlowLogTrafficAnalyticsPtrOutput
	ToNetworkWatcherFlowLogTrafficAnalyticsPtrOutputWithContext(context.Context) NetworkWatcherFlowLogTrafficAnalyticsPtrOutput
}

type networkWatcherFlowLogTrafficAnalyticsPtrType NetworkWatcherFlowLogTrafficAnalyticsArgs

func NetworkWatcherFlowLogTrafficAnalyticsPtr(v *NetworkWatcherFlowLogTrafficAnalyticsArgs) NetworkWatcherFlowLogTrafficAnalyticsPtrInput {
	return (*networkWatcherFlowLogTrafficAnalyticsPtrType)(v)
}

func (*networkWatcherFlowLogTrafficAnalyticsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkWatcherFlowLogTrafficAnalytics)(nil)).Elem()
}

func (i *networkWatcherFlowLogTrafficAnalyticsPtrType) ToNetworkWatcherFlowLogTrafficAnalyticsPtrOutput() NetworkWatcherFlowLogTrafficAnalyticsPtrOutput {
	return i.ToNetworkWatcherFlowLogTrafficAnalyticsPtrOutputWithContext(context.Background())
}

func (i *networkWatcherFlowLogTrafficAnalyticsPtrType) ToNetworkWatcherFlowLogTrafficAnalyticsPtrOutputWithContext(ctx context.Context) NetworkWatcherFlowLogTrafficAnalyticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkWatcherFlowLogTrafficAnalyticsPtrOutput)
}

type NetworkWatcherFlowLogTrafficAnalyticsOutput struct{ *pulumi.OutputState }

func (NetworkWatcherFlowLogTrafficAnalyticsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkWatcherFlowLogTrafficAnalytics)(nil)).Elem()
}

func (o NetworkWatcherFlowLogTrafficAnalyticsOutput) ToNetworkWatcherFlowLogTrafficAnalyticsOutput() NetworkWatcherFlowLogTrafficAnalyticsOutput {
	return o
}

func (o NetworkWatcherFlowLogTrafficAnalyticsOutput) ToNetworkWatcherFlowLogTrafficAnalyticsOutputWithContext(ctx context.Context) NetworkWatcherFlowLogTrafficAnalyticsOutput {
	return o
}

func (o NetworkWatcherFlowLogTrafficAnalyticsOutput) ToNetworkWatcherFlowLogTrafficAnalyticsPtrOutput() NetworkWatcherFlowLogTrafficAnalyticsPtrOutput {
	return o.ToNetworkWatcherFlowLogTrafficAnalyticsPtrOutputWithContext(context.Background())
}

func (o NetworkWatcherFlowLogTrafficAnalyticsOutput) ToNetworkWatcherFlowLogTrafficAnalyticsPtrOutputWithContext(ctx context.Context) NetworkWatcherFlowLogTrafficAnalyticsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkWatcherFlowLogTrafficAnalytics) *NetworkWatcherFlowLogTrafficAnalytics {
		return &v
	}).(NetworkWatcherFlowLogTrafficAnalyticsPtrOutput)
}

// Boolean flag to enable/disable traffic analytics.
func (o NetworkWatcherFlowLogTrafficAnalyticsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NetworkWatcherFlowLogTrafficAnalytics) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// How frequently service should do flow analytics in minutes. Defaults to `60`.
func (o NetworkWatcherFlowLogTrafficAnalyticsOutput) IntervalInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkWatcherFlowLogTrafficAnalytics) *int { return v.IntervalInMinutes }).(pulumi.IntPtrOutput)
}

// The resource GUID of the attached workspace.
func (o NetworkWatcherFlowLogTrafficAnalyticsOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkWatcherFlowLogTrafficAnalytics) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

// The location of the attached workspace.
func (o NetworkWatcherFlowLogTrafficAnalyticsOutput) WorkspaceRegion() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkWatcherFlowLogTrafficAnalytics) string { return v.WorkspaceRegion }).(pulumi.StringOutput)
}

// The resource ID of the attached workspace.
func (o NetworkWatcherFlowLogTrafficAnalyticsOutput) WorkspaceResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkWatcherFlowLogTrafficAnalytics) string { return v.WorkspaceResourceId }).(pulumi.StringOutput)
}

type NetworkWatcherFlowLogTrafficAnalyticsPtrOutput struct{ *pulumi.OutputState }

func (NetworkWatcherFlowLogTrafficAnalyticsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkWatcherFlowLogTrafficAnalytics)(nil)).Elem()
}

func (o NetworkWatcherFlowLogTrafficAnalyticsPtrOutput) ToNetworkWatcherFlowLogTrafficAnalyticsPtrOutput() NetworkWatcherFlowLogTrafficAnalyticsPtrOutput {
	return o
}

func (o NetworkWatcherFlowLogTrafficAnalyticsPtrOutput) ToNetworkWatcherFlowLogTrafficAnalyticsPtrOutputWithContext(ctx context.Context) NetworkWatcherFlowLogTrafficAnalyticsPtrOutput {
	return o
}

func (o NetworkWatcherFlowLogTrafficAnalyticsPtrOutput) Elem() NetworkWatcherFlowLogTrafficAnalyticsOutput {
	return o.ApplyT(func(v *NetworkWatcherFlowLogTrafficAnalytics) NetworkWatcherFlowLogTrafficAnalytics {
		if v != nil {
			return *v
		}
		var ret NetworkWatcherFlowLogTrafficAnalytics
		return ret
	}).(NetworkWatcherFlowLogTrafficAnalyticsOutput)
}

// Boolean flag to enable/disable traffic analytics.
func (o NetworkWatcherFlowLogTrafficAnalyticsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkWatcherFlowLogTrafficAnalytics) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// How frequently service should do flow analytics in minutes. Defaults to `60`.
func (o NetworkWatcherFlowLogTrafficAnalyticsPtrOutput) IntervalInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkWatcherFlowLogTrafficAnalytics) *int {
		if v == nil {
			return nil
		}
		return v.IntervalInMinutes
	}).(pulumi.IntPtrOutput)
}

// The resource GUID of the attached workspace.
func (o NetworkWatcherFlowLogTrafficAnalyticsPtrOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkWatcherFlowLogTrafficAnalytics) *string {
		if v == nil {
			return nil
		}
		return &v.WorkspaceId
	}).(pulumi.StringPtrOutput)
}

// The location of the attached workspace.
func (o NetworkWatcherFlowLogTrafficAnalyticsPtrOutput) WorkspaceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkWatcherFlowLogTrafficAnalytics) *string {
		if v == nil {
			return nil
		}
		return &v.WorkspaceRegion
	}).(pulumi.StringPtrOutput)
}

// The resource ID of the attached workspace.
func (o NetworkWatcherFlowLogTrafficAnalyticsPtrOutput) WorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkWatcherFlowLogTrafficAnalytics) *string {
		if v == nil {
			return nil
		}
		return &v.WorkspaceResourceId
	}).(pulumi.StringPtrOutput)
}

type PointToPointVpnGatewayConnectionConfiguration struct {
	// Should Internet Security be enabled to secure internet traffic? Changing this forces a new resource to be created. Defaults to `false`.
	InternetSecurityEnabled *bool `pulumi:"internetSecurityEnabled"`
	// The Name which should be used for this Connection Configuration.
	Name string `pulumi:"name"`
	// A `route` block as defined below.
	Route *PointToPointVpnGatewayConnectionConfigurationRoute `pulumi:"route"`
	// A `vpnClientAddressPool` block as defined below.
	VpnClientAddressPool PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPool `pulumi:"vpnClientAddressPool"`
}

// PointToPointVpnGatewayConnectionConfigurationInput is an input type that accepts PointToPointVpnGatewayConnectionConfigurationArgs and PointToPointVpnGatewayConnectionConfigurationOutput values.
// You can construct a concrete instance of `PointToPointVpnGatewayConnectionConfigurationInput` via:
//
//	PointToPointVpnGatewayConnectionConfigurationArgs{...}
type PointToPointVpnGatewayConnectionConfigurationInput interface {
	pulumi.Input

	ToPointToPointVpnGatewayConnectionConfigurationOutput() PointToPointVpnGatewayConnectionConfigurationOutput
	ToPointToPointVpnGatewayConnectionConfigurationOutputWithContext(context.Context) PointToPointVpnGatewayConnectionConfigurationOutput
}

type PointToPointVpnGatewayConnectionConfigurationArgs struct {
	// Should Internet Security be enabled to secure internet traffic? Changing this forces a new resource to be created. Defaults to `false`.
	InternetSecurityEnabled pulumi.BoolPtrInput `pulumi:"internetSecurityEnabled"`
	// The Name which should be used for this Connection Configuration.
	Name pulumi.StringInput `pulumi:"name"`
	// A `route` block as defined below.
	Route PointToPointVpnGatewayConnectionConfigurationRoutePtrInput `pulumi:"route"`
	// A `vpnClientAddressPool` block as defined below.
	VpnClientAddressPool PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolInput `pulumi:"vpnClientAddressPool"`
}

func (PointToPointVpnGatewayConnectionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PointToPointVpnGatewayConnectionConfiguration)(nil)).Elem()
}

func (i PointToPointVpnGatewayConnectionConfigurationArgs) ToPointToPointVpnGatewayConnectionConfigurationOutput() PointToPointVpnGatewayConnectionConfigurationOutput {
	return i.ToPointToPointVpnGatewayConnectionConfigurationOutputWithContext(context.Background())
}

func (i PointToPointVpnGatewayConnectionConfigurationArgs) ToPointToPointVpnGatewayConnectionConfigurationOutputWithContext(ctx context.Context) PointToPointVpnGatewayConnectionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PointToPointVpnGatewayConnectionConfigurationOutput)
}

func (i PointToPointVpnGatewayConnectionConfigurationArgs) ToPointToPointVpnGatewayConnectionConfigurationPtrOutput() PointToPointVpnGatewayConnectionConfigurationPtrOutput {
	return i.ToPointToPointVpnGatewayConnectionConfigurationPtrOutputWithContext(context.Background())
}

func (i PointToPointVpnGatewayConnectionConfigurationArgs) ToPointToPointVpnGatewayConnectionConfigurationPtrOutputWithContext(ctx context.Context) PointToPointVpnGatewayConnectionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PointToPointVpnGatewayConnectionConfigurationOutput).ToPointToPointVpnGatewayConnectionConfigurationPtrOutputWithContext(ctx)
}

// PointToPointVpnGatewayConnectionConfigurationPtrInput is an input type that accepts PointToPointVpnGatewayConnectionConfigurationArgs, PointToPointVpnGatewayConnectionConfigurationPtr and PointToPointVpnGatewayConnectionConfigurationPtrOutput values.
// You can construct a concrete instance of `PointToPointVpnGatewayConnectionConfigurationPtrInput` via:
//
//	        PointToPointVpnGatewayConnectionConfigurationArgs{...}
//
//	or:
//
//	        nil
type PointToPointVpnGatewayConnectionConfigurationPtrInput interface {
	pulumi.Input

	ToPointToPointVpnGatewayConnectionConfigurationPtrOutput() PointToPointVpnGatewayConnectionConfigurationPtrOutput
	ToPointToPointVpnGatewayConnectionConfigurationPtrOutputWithContext(context.Context) PointToPointVpnGatewayConnectionConfigurationPtrOutput
}

type pointToPointVpnGatewayConnectionConfigurationPtrType PointToPointVpnGatewayConnectionConfigurationArgs

func PointToPointVpnGatewayConnectionConfigurationPtr(v *PointToPointVpnGatewayConnectionConfigurationArgs) PointToPointVpnGatewayConnectionConfigurationPtrInput {
	return (*pointToPointVpnGatewayConnectionConfigurationPtrType)(v)
}

func (*pointToPointVpnGatewayConnectionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PointToPointVpnGatewayConnectionConfiguration)(nil)).Elem()
}

func (i *pointToPointVpnGatewayConnectionConfigurationPtrType) ToPointToPointVpnGatewayConnectionConfigurationPtrOutput() PointToPointVpnGatewayConnectionConfigurationPtrOutput {
	return i.ToPointToPointVpnGatewayConnectionConfigurationPtrOutputWithContext(context.Background())
}

func (i *pointToPointVpnGatewayConnectionConfigurationPtrType) ToPointToPointVpnGatewayConnectionConfigurationPtrOutputWithContext(ctx context.Context) PointToPointVpnGatewayConnectionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PointToPointVpnGatewayConnectionConfigurationPtrOutput)
}

type PointToPointVpnGatewayConnectionConfigurationOutput struct{ *pulumi.OutputState }

func (PointToPointVpnGatewayConnectionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PointToPointVpnGatewayConnectionConfiguration)(nil)).Elem()
}

func (o PointToPointVpnGatewayConnectionConfigurationOutput) ToPointToPointVpnGatewayConnectionConfigurationOutput() PointToPointVpnGatewayConnectionConfigurationOutput {
	return o
}

func (o PointToPointVpnGatewayConnectionConfigurationOutput) ToPointToPointVpnGatewayConnectionConfigurationOutputWithContext(ctx context.Context) PointToPointVpnGatewayConnectionConfigurationOutput {
	return o
}

func (o PointToPointVpnGatewayConnectionConfigurationOutput) ToPointToPointVpnGatewayConnectionConfigurationPtrOutput() PointToPointVpnGatewayConnectionConfigurationPtrOutput {
	return o.ToPointToPointVpnGatewayConnectionConfigurationPtrOutputWithContext(context.Background())
}

func (o PointToPointVpnGatewayConnectionConfigurationOutput) ToPointToPointVpnGatewayConnectionConfigurationPtrOutputWithContext(ctx context.Context) PointToPointVpnGatewayConnectionConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PointToPointVpnGatewayConnectionConfiguration) *PointToPointVpnGatewayConnectionConfiguration {
		return &v
	}).(PointToPointVpnGatewayConnectionConfigurationPtrOutput)
}

// Should Internet Security be enabled to secure internet traffic? Changing this forces a new resource to be created. Defaults to `false`.
func (o PointToPointVpnGatewayConnectionConfigurationOutput) InternetSecurityEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PointToPointVpnGatewayConnectionConfiguration) *bool { return v.InternetSecurityEnabled }).(pulumi.BoolPtrOutput)
}

// The Name which should be used for this Connection Configuration.
func (o PointToPointVpnGatewayConnectionConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PointToPointVpnGatewayConnectionConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// A `route` block as defined below.
func (o PointToPointVpnGatewayConnectionConfigurationOutput) Route() PointToPointVpnGatewayConnectionConfigurationRoutePtrOutput {
	return o.ApplyT(func(v PointToPointVpnGatewayConnectionConfiguration) *PointToPointVpnGatewayConnectionConfigurationRoute {
		return v.Route
	}).(PointToPointVpnGatewayConnectionConfigurationRoutePtrOutput)
}

// A `vpnClientAddressPool` block as defined below.
func (o PointToPointVpnGatewayConnectionConfigurationOutput) VpnClientAddressPool() PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolOutput {
	return o.ApplyT(func(v PointToPointVpnGatewayConnectionConfiguration) PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPool {
		return v.VpnClientAddressPool
	}).(PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolOutput)
}

type PointToPointVpnGatewayConnectionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (PointToPointVpnGatewayConnectionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PointToPointVpnGatewayConnectionConfiguration)(nil)).Elem()
}

func (o PointToPointVpnGatewayConnectionConfigurationPtrOutput) ToPointToPointVpnGatewayConnectionConfigurationPtrOutput() PointToPointVpnGatewayConnectionConfigurationPtrOutput {
	return o
}

func (o PointToPointVpnGatewayConnectionConfigurationPtrOutput) ToPointToPointVpnGatewayConnectionConfigurationPtrOutputWithContext(ctx context.Context) PointToPointVpnGatewayConnectionConfigurationPtrOutput {
	return o
}

func (o PointToPointVpnGatewayConnectionConfigurationPtrOutput) Elem() PointToPointVpnGatewayConnectionConfigurationOutput {
	return o.ApplyT(func(v *PointToPointVpnGatewayConnectionConfiguration) PointToPointVpnGatewayConnectionConfiguration {
		if v != nil {
			return *v
		}
		var ret PointToPointVpnGatewayConnectionConfiguration
		return ret
	}).(PointToPointVpnGatewayConnectionConfigurationOutput)
}

// Should Internet Security be enabled to secure internet traffic? Changing this forces a new resource to be created. Defaults to `false`.
func (o PointToPointVpnGatewayConnectionConfigurationPtrOutput) InternetSecurityEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PointToPointVpnGatewayConnectionConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.InternetSecurityEnabled
	}).(pulumi.BoolPtrOutput)
}

// The Name which should be used for this Connection Configuration.
func (o PointToPointVpnGatewayConnectionConfigurationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PointToPointVpnGatewayConnectionConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A `route` block as defined below.
func (o PointToPointVpnGatewayConnectionConfigurationPtrOutput) Route() PointToPointVpnGatewayConnectionConfigurationRoutePtrOutput {
	return o.ApplyT(func(v *PointToPointVpnGatewayConnectionConfiguration) *PointToPointVpnGatewayConnectionConfigurationRoute {
		if v == nil {
			return nil
		}
		return v.Route
	}).(PointToPointVpnGatewayConnectionConfigurationRoutePtrOutput)
}

// A `vpnClientAddressPool` block as defined below.
func (o PointToPointVpnGatewayConnectionConfigurationPtrOutput) VpnClientAddressPool() PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutput {
	return o.ApplyT(func(v *PointToPointVpnGatewayConnectionConfiguration) *PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPool {
		if v == nil {
			return nil
		}
		return &v.VpnClientAddressPool
	}).(PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutput)
}

type PointToPointVpnGatewayConnectionConfigurationRoute struct {
	// The Virtual Hub Route Table resource id associated with this Routing Configuration.
	AssociatedRouteTableId string `pulumi:"associatedRouteTableId"`
	// The resource ID of the Route Map associated with this Routing Configuration for inbound learned routes.
	InboundRouteMapId *string `pulumi:"inboundRouteMapId"`
	// The resource ID of the Route Map associated with this Routing Configuration for outbound advertised routes.
	OutboundRouteMapId *string `pulumi:"outboundRouteMapId"`
	// A `propagatedRouteTable` block as defined below.
	PropagatedRouteTable *PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTable `pulumi:"propagatedRouteTable"`
}

// PointToPointVpnGatewayConnectionConfigurationRouteInput is an input type that accepts PointToPointVpnGatewayConnectionConfigurationRouteArgs and PointToPointVpnGatewayConnectionConfigurationRouteOutput values.
// You can construct a concrete instance of `PointToPointVpnGatewayConnectionConfigurationRouteInput` via:
//
//	PointToPointVpnGatewayConnectionConfigurationRouteArgs{...}
type PointToPointVpnGatewayConnectionConfigurationRouteInput interface {
	pulumi.Input

	ToPointToPointVpnGatewayConnectionConfigurationRouteOutput() PointToPointVpnGatewayConnectionConfigurationRouteOutput
	ToPointToPointVpnGatewayConnectionConfigurationRouteOutputWithContext(context.Context) PointToPointVpnGatewayConnectionConfigurationRouteOutput
}

type PointToPointVpnGatewayConnectionConfigurationRouteArgs struct {
	// The Virtual Hub Route Table resource id associated with this Routing Configuration.
	AssociatedRouteTableId pulumi.StringInput `pulumi:"associatedRouteTableId"`
	// The resource ID of the Route Map associated with this Routing Configuration for inbound learned routes.
	InboundRouteMapId pulumi.StringPtrInput `pulumi:"inboundRouteMapId"`
	// The resource ID of the Route Map associated with this Routing Configuration for outbound advertised routes.
	OutboundRouteMapId pulumi.StringPtrInput `pulumi:"outboundRouteMapId"`
	// A `propagatedRouteTable` block as defined below.
	PropagatedRouteTable PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrInput `pulumi:"propagatedRouteTable"`
}

func (PointToPointVpnGatewayConnectionConfigurationRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PointToPointVpnGatewayConnectionConfigurationRoute)(nil)).Elem()
}

func (i PointToPointVpnGatewayConnectionConfigurationRouteArgs) ToPointToPointVpnGatewayConnectionConfigurationRouteOutput() PointToPointVpnGatewayConnectionConfigurationRouteOutput {
	return i.ToPointToPointVpnGatewayConnectionConfigurationRouteOutputWithContext(context.Background())
}

func (i PointToPointVpnGatewayConnectionConfigurationRouteArgs) ToPointToPointVpnGatewayConnectionConfigurationRouteOutputWithContext(ctx context.Context) PointToPointVpnGatewayConnectionConfigurationRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PointToPointVpnGatewayConnectionConfigurationRouteOutput)
}

func (i PointToPointVpnGatewayConnectionConfigurationRouteArgs) ToPointToPointVpnGatewayConnectionConfigurationRoutePtrOutput() PointToPointVpnGatewayConnectionConfigurationRoutePtrOutput {
	return i.ToPointToPointVpnGatewayConnectionConfigurationRoutePtrOutputWithContext(context.Background())
}

func (i PointToPointVpnGatewayConnectionConfigurationRouteArgs) ToPointToPointVpnGatewayConnectionConfigurationRoutePtrOutputWithContext(ctx context.Context) PointToPointVpnGatewayConnectionConfigurationRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PointToPointVpnGatewayConnectionConfigurationRouteOutput).ToPointToPointVpnGatewayConnectionConfigurationRoutePtrOutputWithContext(ctx)
}

// PointToPointVpnGatewayConnectionConfigurationRoutePtrInput is an input type that accepts PointToPointVpnGatewayConnectionConfigurationRouteArgs, PointToPointVpnGatewayConnectionConfigurationRoutePtr and PointToPointVpnGatewayConnectionConfigurationRoutePtrOutput values.
// You can construct a concrete instance of `PointToPointVpnGatewayConnectionConfigurationRoutePtrInput` via:
//
//	        PointToPointVpnGatewayConnectionConfigurationRouteArgs{...}
//
//	or:
//
//	        nil
type PointToPointVpnGatewayConnectionConfigurationRoutePtrInput interface {
	pulumi.Input

	ToPointToPointVpnGatewayConnectionConfigurationRoutePtrOutput() PointToPointVpnGatewayConnectionConfigurationRoutePtrOutput
	ToPointToPointVpnGatewayConnectionConfigurationRoutePtrOutputWithContext(context.Context) PointToPointVpnGatewayConnectionConfigurationRoutePtrOutput
}

type pointToPointVpnGatewayConnectionConfigurationRoutePtrType PointToPointVpnGatewayConnectionConfigurationRouteArgs

func PointToPointVpnGatewayConnectionConfigurationRoutePtr(v *PointToPointVpnGatewayConnectionConfigurationRouteArgs) PointToPointVpnGatewayConnectionConfigurationRoutePtrInput {
	return (*pointToPointVpnGatewayConnectionConfigurationRoutePtrType)(v)
}

func (*pointToPointVpnGatewayConnectionConfigurationRoutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PointToPointVpnGatewayConnectionConfigurationRoute)(nil)).Elem()
}

func (i *pointToPointVpnGatewayConnectionConfigurationRoutePtrType) ToPointToPointVpnGatewayConnectionConfigurationRoutePtrOutput() PointToPointVpnGatewayConnectionConfigurationRoutePtrOutput {
	return i.ToPointToPointVpnGatewayConnectionConfigurationRoutePtrOutputWithContext(context.Background())
}

func (i *pointToPointVpnGatewayConnectionConfigurationRoutePtrType) ToPointToPointVpnGatewayConnectionConfigurationRoutePtrOutputWithContext(ctx context.Context) PointToPointVpnGatewayConnectionConfigurationRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PointToPointVpnGatewayConnectionConfigurationRoutePtrOutput)
}

type PointToPointVpnGatewayConnectionConfigurationRouteOutput struct{ *pulumi.OutputState }

func (PointToPointVpnGatewayConnectionConfigurationRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PointToPointVpnGatewayConnectionConfigurationRoute)(nil)).Elem()
}

func (o PointToPointVpnGatewayConnectionConfigurationRouteOutput) ToPointToPointVpnGatewayConnectionConfigurationRouteOutput() PointToPointVpnGatewayConnectionConfigurationRouteOutput {
	return o
}

func (o PointToPointVpnGatewayConnectionConfigurationRouteOutput) ToPointToPointVpnGatewayConnectionConfigurationRouteOutputWithContext(ctx context.Context) PointToPointVpnGatewayConnectionConfigurationRouteOutput {
	return o
}

func (o PointToPointVpnGatewayConnectionConfigurationRouteOutput) ToPointToPointVpnGatewayConnectionConfigurationRoutePtrOutput() PointToPointVpnGatewayConnectionConfigurationRoutePtrOutput {
	return o.ToPointToPointVpnGatewayConnectionConfigurationRoutePtrOutputWithContext(context.Background())
}

func (o PointToPointVpnGatewayConnectionConfigurationRouteOutput) ToPointToPointVpnGatewayConnectionConfigurationRoutePtrOutputWithContext(ctx context.Context) PointToPointVpnGatewayConnectionConfigurationRoutePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PointToPointVpnGatewayConnectionConfigurationRoute) *PointToPointVpnGatewayConnectionConfigurationRoute {
		return &v
	}).(PointToPointVpnGatewayConnectionConfigurationRoutePtrOutput)
}

// The Virtual Hub Route Table resource id associated with this Routing Configuration.
func (o PointToPointVpnGatewayConnectionConfigurationRouteOutput) AssociatedRouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v PointToPointVpnGatewayConnectionConfigurationRoute) string { return v.AssociatedRouteTableId }).(pulumi.StringOutput)
}

// The resource ID of the Route Map associated with this Routing Configuration for inbound learned routes.
func (o PointToPointVpnGatewayConnectionConfigurationRouteOutput) InboundRouteMapId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PointToPointVpnGatewayConnectionConfigurationRoute) *string { return v.InboundRouteMapId }).(pulumi.StringPtrOutput)
}

// The resource ID of the Route Map associated with this Routing Configuration for outbound advertised routes.
func (o PointToPointVpnGatewayConnectionConfigurationRouteOutput) OutboundRouteMapId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PointToPointVpnGatewayConnectionConfigurationRoute) *string { return v.OutboundRouteMapId }).(pulumi.StringPtrOutput)
}

// A `propagatedRouteTable` block as defined below.
func (o PointToPointVpnGatewayConnectionConfigurationRouteOutput) PropagatedRouteTable() PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput {
	return o.ApplyT(func(v PointToPointVpnGatewayConnectionConfigurationRoute) *PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTable {
		return v.PropagatedRouteTable
	}).(PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput)
}

type PointToPointVpnGatewayConnectionConfigurationRoutePtrOutput struct{ *pulumi.OutputState }

func (PointToPointVpnGatewayConnectionConfigurationRoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PointToPointVpnGatewayConnectionConfigurationRoute)(nil)).Elem()
}

func (o PointToPointVpnGatewayConnectionConfigurationRoutePtrOutput) ToPointToPointVpnGatewayConnectionConfigurationRoutePtrOutput() PointToPointVpnGatewayConnectionConfigurationRoutePtrOutput {
	return o
}

func (o PointToPointVpnGatewayConnectionConfigurationRoutePtrOutput) ToPointToPointVpnGatewayConnectionConfigurationRoutePtrOutputWithContext(ctx context.Context) PointToPointVpnGatewayConnectionConfigurationRoutePtrOutput {
	return o
}

func (o PointToPointVpnGatewayConnectionConfigurationRoutePtrOutput) Elem() PointToPointVpnGatewayConnectionConfigurationRouteOutput {
	return o.ApplyT(func(v *PointToPointVpnGatewayConnectionConfigurationRoute) PointToPointVpnGatewayConnectionConfigurationRoute {
		if v != nil {
			return *v
		}
		var ret PointToPointVpnGatewayConnectionConfigurationRoute
		return ret
	}).(PointToPointVpnGatewayConnectionConfigurationRouteOutput)
}

// The Virtual Hub Route Table resource id associated with this Routing Configuration.
func (o PointToPointVpnGatewayConnectionConfigurationRoutePtrOutput) AssociatedRouteTableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PointToPointVpnGatewayConnectionConfigurationRoute) *string {
		if v == nil {
			return nil
		}
		return &v.AssociatedRouteTableId
	}).(pulumi.StringPtrOutput)
}

// The resource ID of the Route Map associated with this Routing Configuration for inbound learned routes.
func (o PointToPointVpnGatewayConnectionConfigurationRoutePtrOutput) InboundRouteMapId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PointToPointVpnGatewayConnectionConfigurationRoute) *string {
		if v == nil {
			return nil
		}
		return v.InboundRouteMapId
	}).(pulumi.StringPtrOutput)
}

// The resource ID of the Route Map associated with this Routing Configuration for outbound advertised routes.
func (o PointToPointVpnGatewayConnectionConfigurationRoutePtrOutput) OutboundRouteMapId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PointToPointVpnGatewayConnectionConfigurationRoute) *string {
		if v == nil {
			return nil
		}
		return v.OutboundRouteMapId
	}).(pulumi.StringPtrOutput)
}

// A `propagatedRouteTable` block as defined below.
func (o PointToPointVpnGatewayConnectionConfigurationRoutePtrOutput) PropagatedRouteTable() PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput {
	return o.ApplyT(func(v *PointToPointVpnGatewayConnectionConfigurationRoute) *PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTable {
		if v == nil {
			return nil
		}
		return v.PropagatedRouteTable
	}).(PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput)
}

type PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTable struct {
	// The list of Virtual Hub Route Table resource id which the routes will be propagated to.
	Ids []string `pulumi:"ids"`
	// The list of labels to logically group Virtual Hub Route Tables which the routes will be propagated to.
	Labels []string `pulumi:"labels"`
}

// PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableInput is an input type that accepts PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableArgs and PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableOutput values.
// You can construct a concrete instance of `PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableInput` via:
//
//	PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableArgs{...}
type PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableInput interface {
	pulumi.Input

	ToPointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableOutput() PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableOutput
	ToPointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableOutputWithContext(context.Context) PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableOutput
}

type PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableArgs struct {
	// The list of Virtual Hub Route Table resource id which the routes will be propagated to.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// The list of labels to logically group Virtual Hub Route Tables which the routes will be propagated to.
	Labels pulumi.StringArrayInput `pulumi:"labels"`
}

func (PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTable)(nil)).Elem()
}

func (i PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableArgs) ToPointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableOutput() PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableOutput {
	return i.ToPointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableOutputWithContext(context.Background())
}

func (i PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableArgs) ToPointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableOutputWithContext(ctx context.Context) PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableOutput)
}

func (i PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableArgs) ToPointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput() PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput {
	return i.ToPointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutputWithContext(context.Background())
}

func (i PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableArgs) ToPointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutputWithContext(ctx context.Context) PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableOutput).ToPointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutputWithContext(ctx)
}

// PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrInput is an input type that accepts PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableArgs, PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtr and PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput values.
// You can construct a concrete instance of `PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrInput` via:
//
//	        PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableArgs{...}
//
//	or:
//
//	        nil
type PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrInput interface {
	pulumi.Input

	ToPointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput() PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput
	ToPointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutputWithContext(context.Context) PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput
}

type pointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrType PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableArgs

func PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtr(v *PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableArgs) PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrInput {
	return (*pointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrType)(v)
}

func (*pointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTable)(nil)).Elem()
}

func (i *pointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrType) ToPointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput() PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput {
	return i.ToPointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutputWithContext(context.Background())
}

func (i *pointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrType) ToPointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutputWithContext(ctx context.Context) PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput)
}

type PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableOutput struct{ *pulumi.OutputState }

func (PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTable)(nil)).Elem()
}

func (o PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableOutput) ToPointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableOutput() PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableOutput {
	return o
}

func (o PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableOutput) ToPointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableOutputWithContext(ctx context.Context) PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableOutput {
	return o
}

func (o PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableOutput) ToPointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput() PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput {
	return o.ToPointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutputWithContext(context.Background())
}

func (o PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableOutput) ToPointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutputWithContext(ctx context.Context) PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTable) *PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTable {
		return &v
	}).(PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput)
}

// The list of Virtual Hub Route Table resource id which the routes will be propagated to.
func (o PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTable) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// The list of labels to logically group Virtual Hub Route Tables which the routes will be propagated to.
func (o PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTable) []string {
		return v.Labels
	}).(pulumi.StringArrayOutput)
}

type PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput struct{ *pulumi.OutputState }

func (PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTable)(nil)).Elem()
}

func (o PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput) ToPointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput() PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput {
	return o
}

func (o PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput) ToPointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutputWithContext(ctx context.Context) PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput {
	return o
}

func (o PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput) Elem() PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableOutput {
	return o.ApplyT(func(v *PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTable) PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTable {
		if v != nil {
			return *v
		}
		var ret PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTable
		return ret
	}).(PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableOutput)
}

// The list of Virtual Hub Route Table resource id which the routes will be propagated to.
func (o PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTable) []string {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.StringArrayOutput)
}

// The list of labels to logically group Virtual Hub Route Tables which the routes will be propagated to.
func (o PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTable) []string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringArrayOutput)
}

type PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPool struct {
	// A list of CIDR Ranges which should be used as Address Prefixes.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
}

// PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolInput is an input type that accepts PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolArgs and PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolOutput values.
// You can construct a concrete instance of `PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolInput` via:
//
//	PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolArgs{...}
type PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolInput interface {
	pulumi.Input

	ToPointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolOutput() PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolOutput
	ToPointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolOutputWithContext(context.Context) PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolOutput
}

type PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolArgs struct {
	// A list of CIDR Ranges which should be used as Address Prefixes.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
}

func (PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPool)(nil)).Elem()
}

func (i PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolArgs) ToPointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolOutput() PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolOutput {
	return i.ToPointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolOutputWithContext(context.Background())
}

func (i PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolArgs) ToPointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolOutputWithContext(ctx context.Context) PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolOutput)
}

func (i PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolArgs) ToPointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutput() PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutput {
	return i.ToPointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutputWithContext(context.Background())
}

func (i PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolArgs) ToPointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutputWithContext(ctx context.Context) PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolOutput).ToPointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutputWithContext(ctx)
}

// PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrInput is an input type that accepts PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolArgs, PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtr and PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutput values.
// You can construct a concrete instance of `PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrInput` via:
//
//	        PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolArgs{...}
//
//	or:
//
//	        nil
type PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrInput interface {
	pulumi.Input

	ToPointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutput() PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutput
	ToPointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutputWithContext(context.Context) PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutput
}

type pointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrType PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolArgs

func PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtr(v *PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolArgs) PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrInput {
	return (*pointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrType)(v)
}

func (*pointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPool)(nil)).Elem()
}

func (i *pointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrType) ToPointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutput() PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutput {
	return i.ToPointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutputWithContext(context.Background())
}

func (i *pointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrType) ToPointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutputWithContext(ctx context.Context) PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutput)
}

type PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolOutput struct{ *pulumi.OutputState }

func (PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPool)(nil)).Elem()
}

func (o PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolOutput) ToPointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolOutput() PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolOutput {
	return o
}

func (o PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolOutput) ToPointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolOutputWithContext(ctx context.Context) PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolOutput {
	return o
}

func (o PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolOutput) ToPointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutput() PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutput {
	return o.ToPointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutputWithContext(context.Background())
}

func (o PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolOutput) ToPointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutputWithContext(ctx context.Context) PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPool) *PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPool {
		return &v
	}).(PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutput)
}

// A list of CIDR Ranges which should be used as Address Prefixes.
func (o PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPool) []string {
		return v.AddressPrefixes
	}).(pulumi.StringArrayOutput)
}

type PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutput struct{ *pulumi.OutputState }

func (PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPool)(nil)).Elem()
}

func (o PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutput) ToPointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutput() PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutput {
	return o
}

func (o PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutput) ToPointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutputWithContext(ctx context.Context) PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutput {
	return o
}

func (o PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutput) Elem() PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolOutput {
	return o.ApplyT(func(v *PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPool) PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPool {
		if v != nil {
			return *v
		}
		var ret PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPool
		return ret
	}).(PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolOutput)
}

// A list of CIDR Ranges which should be used as Address Prefixes.
func (o PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPool) []string {
		if v == nil {
			return nil
		}
		return v.AddressPrefixes
	}).(pulumi.StringArrayOutput)
}

type ProfileContainerNetworkInterface struct {
	// One or more `ipConfiguration` blocks as documented below.
	IpConfigurations []ProfileContainerNetworkInterfaceIpConfiguration `pulumi:"ipConfigurations"`
	// Specifies the name of the IP Configuration.
	Name string `pulumi:"name"`
}

// ProfileContainerNetworkInterfaceInput is an input type that accepts ProfileContainerNetworkInterfaceArgs and ProfileContainerNetworkInterfaceOutput values.
// You can construct a concrete instance of `ProfileContainerNetworkInterfaceInput` via:
//
//	ProfileContainerNetworkInterfaceArgs{...}
type ProfileContainerNetworkInterfaceInput interface {
	pulumi.Input

	ToProfileContainerNetworkInterfaceOutput() ProfileContainerNetworkInterfaceOutput
	ToProfileContainerNetworkInterfaceOutputWithContext(context.Context) ProfileContainerNetworkInterfaceOutput
}

type ProfileContainerNetworkInterfaceArgs struct {
	// One or more `ipConfiguration` blocks as documented below.
	IpConfigurations ProfileContainerNetworkInterfaceIpConfigurationArrayInput `pulumi:"ipConfigurations"`
	// Specifies the name of the IP Configuration.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ProfileContainerNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileContainerNetworkInterface)(nil)).Elem()
}

func (i ProfileContainerNetworkInterfaceArgs) ToProfileContainerNetworkInterfaceOutput() ProfileContainerNetworkInterfaceOutput {
	return i.ToProfileContainerNetworkInterfaceOutputWithContext(context.Background())
}

func (i ProfileContainerNetworkInterfaceArgs) ToProfileContainerNetworkInterfaceOutputWithContext(ctx context.Context) ProfileContainerNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileContainerNetworkInterfaceOutput)
}

func (i ProfileContainerNetworkInterfaceArgs) ToProfileContainerNetworkInterfacePtrOutput() ProfileContainerNetworkInterfacePtrOutput {
	return i.ToProfileContainerNetworkInterfacePtrOutputWithContext(context.Background())
}

func (i ProfileContainerNetworkInterfaceArgs) ToProfileContainerNetworkInterfacePtrOutputWithContext(ctx context.Context) ProfileContainerNetworkInterfacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileContainerNetworkInterfaceOutput).ToProfileContainerNetworkInterfacePtrOutputWithContext(ctx)
}

// ProfileContainerNetworkInterfacePtrInput is an input type that accepts ProfileContainerNetworkInterfaceArgs, ProfileContainerNetworkInterfacePtr and ProfileContainerNetworkInterfacePtrOutput values.
// You can construct a concrete instance of `ProfileContainerNetworkInterfacePtrInput` via:
//
//	        ProfileContainerNetworkInterfaceArgs{...}
//
//	or:
//
//	        nil
type ProfileContainerNetworkInterfacePtrInput interface {
	pulumi.Input

	ToProfileContainerNetworkInterfacePtrOutput() ProfileContainerNetworkInterfacePtrOutput
	ToProfileContainerNetworkInterfacePtrOutputWithContext(context.Context) ProfileContainerNetworkInterfacePtrOutput
}

type profileContainerNetworkInterfacePtrType ProfileContainerNetworkInterfaceArgs

func ProfileContainerNetworkInterfacePtr(v *ProfileContainerNetworkInterfaceArgs) ProfileContainerNetworkInterfacePtrInput {
	return (*profileContainerNetworkInterfacePtrType)(v)
}

func (*profileContainerNetworkInterfacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileContainerNetworkInterface)(nil)).Elem()
}

func (i *profileContainerNetworkInterfacePtrType) ToProfileContainerNetworkInterfacePtrOutput() ProfileContainerNetworkInterfacePtrOutput {
	return i.ToProfileContainerNetworkInterfacePtrOutputWithContext(context.Background())
}

func (i *profileContainerNetworkInterfacePtrType) ToProfileContainerNetworkInterfacePtrOutputWithContext(ctx context.Context) ProfileContainerNetworkInterfacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileContainerNetworkInterfacePtrOutput)
}

type ProfileContainerNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (ProfileContainerNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileContainerNetworkInterface)(nil)).Elem()
}

func (o ProfileContainerNetworkInterfaceOutput) ToProfileContainerNetworkInterfaceOutput() ProfileContainerNetworkInterfaceOutput {
	return o
}

func (o ProfileContainerNetworkInterfaceOutput) ToProfileContainerNetworkInterfaceOutputWithContext(ctx context.Context) ProfileContainerNetworkInterfaceOutput {
	return o
}

func (o ProfileContainerNetworkInterfaceOutput) ToProfileContainerNetworkInterfacePtrOutput() ProfileContainerNetworkInterfacePtrOutput {
	return o.ToProfileContainerNetworkInterfacePtrOutputWithContext(context.Background())
}

func (o ProfileContainerNetworkInterfaceOutput) ToProfileContainerNetworkInterfacePtrOutputWithContext(ctx context.Context) ProfileContainerNetworkInterfacePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileContainerNetworkInterface) *ProfileContainerNetworkInterface {
		return &v
	}).(ProfileContainerNetworkInterfacePtrOutput)
}

// One or more `ipConfiguration` blocks as documented below.
func (o ProfileContainerNetworkInterfaceOutput) IpConfigurations() ProfileContainerNetworkInterfaceIpConfigurationArrayOutput {
	return o.ApplyT(func(v ProfileContainerNetworkInterface) []ProfileContainerNetworkInterfaceIpConfiguration {
		return v.IpConfigurations
	}).(ProfileContainerNetworkInterfaceIpConfigurationArrayOutput)
}

// Specifies the name of the IP Configuration.
func (o ProfileContainerNetworkInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProfileContainerNetworkInterface) string { return v.Name }).(pulumi.StringOutput)
}

type ProfileContainerNetworkInterfacePtrOutput struct{ *pulumi.OutputState }

func (ProfileContainerNetworkInterfacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileContainerNetworkInterface)(nil)).Elem()
}

func (o ProfileContainerNetworkInterfacePtrOutput) ToProfileContainerNetworkInterfacePtrOutput() ProfileContainerNetworkInterfacePtrOutput {
	return o
}

func (o ProfileContainerNetworkInterfacePtrOutput) ToProfileContainerNetworkInterfacePtrOutputWithContext(ctx context.Context) ProfileContainerNetworkInterfacePtrOutput {
	return o
}

func (o ProfileContainerNetworkInterfacePtrOutput) Elem() ProfileContainerNetworkInterfaceOutput {
	return o.ApplyT(func(v *ProfileContainerNetworkInterface) ProfileContainerNetworkInterface {
		if v != nil {
			return *v
		}
		var ret ProfileContainerNetworkInterface
		return ret
	}).(ProfileContainerNetworkInterfaceOutput)
}

// One or more `ipConfiguration` blocks as documented below.
func (o ProfileContainerNetworkInterfacePtrOutput) IpConfigurations() ProfileContainerNetworkInterfaceIpConfigurationArrayOutput {
	return o.ApplyT(func(v *ProfileContainerNetworkInterface) []ProfileContainerNetworkInterfaceIpConfiguration {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(ProfileContainerNetworkInterfaceIpConfigurationArrayOutput)
}

// Specifies the name of the IP Configuration.
func (o ProfileContainerNetworkInterfacePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileContainerNetworkInterface) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type ProfileContainerNetworkInterfaceIpConfiguration struct {
	// Specifies the name of the IP Configuration.
	Name string `pulumi:"name"`
	// Reference to the subnet associated with the IP Configuration.
	SubnetId string `pulumi:"subnetId"`
}

// ProfileContainerNetworkInterfaceIpConfigurationInput is an input type that accepts ProfileContainerNetworkInterfaceIpConfigurationArgs and ProfileContainerNetworkInterfaceIpConfigurationOutput values.
// You can construct a concrete instance of `ProfileContainerNetworkInterfaceIpConfigurationInput` via:
//
//	ProfileContainerNetworkInterfaceIpConfigurationArgs{...}
type ProfileContainerNetworkInterfaceIpConfigurationInput interface {
	pulumi.Input

	ToProfileContainerNetworkInterfaceIpConfigurationOutput() ProfileContainerNetworkInterfaceIpConfigurationOutput
	ToProfileContainerNetworkInterfaceIpConfigurationOutputWithContext(context.Context) ProfileContainerNetworkInterfaceIpConfigurationOutput
}

type ProfileContainerNetworkInterfaceIpConfigurationArgs struct {
	// Specifies the name of the IP Configuration.
	Name pulumi.StringInput `pulumi:"name"`
	// Reference to the subnet associated with the IP Configuration.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (ProfileContainerNetworkInterfaceIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileContainerNetworkInterfaceIpConfiguration)(nil)).Elem()
}

func (i ProfileContainerNetworkInterfaceIpConfigurationArgs) ToProfileContainerNetworkInterfaceIpConfigurationOutput() ProfileContainerNetworkInterfaceIpConfigurationOutput {
	return i.ToProfileContainerNetworkInterfaceIpConfigurationOutputWithContext(context.Background())
}

func (i ProfileContainerNetworkInterfaceIpConfigurationArgs) ToProfileContainerNetworkInterfaceIpConfigurationOutputWithContext(ctx context.Context) ProfileContainerNetworkInterfaceIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileContainerNetworkInterfaceIpConfigurationOutput)
}

// ProfileContainerNetworkInterfaceIpConfigurationArrayInput is an input type that accepts ProfileContainerNetworkInterfaceIpConfigurationArray and ProfileContainerNetworkInterfaceIpConfigurationArrayOutput values.
// You can construct a concrete instance of `ProfileContainerNetworkInterfaceIpConfigurationArrayInput` via:
//
//	ProfileContainerNetworkInterfaceIpConfigurationArray{ ProfileContainerNetworkInterfaceIpConfigurationArgs{...} }
type ProfileContainerNetworkInterfaceIpConfigurationArrayInput interface {
	pulumi.Input

	ToProfileContainerNetworkInterfaceIpConfigurationArrayOutput() ProfileContainerNetworkInterfaceIpConfigurationArrayOutput
	ToProfileContainerNetworkInterfaceIpConfigurationArrayOutputWithContext(context.Context) ProfileContainerNetworkInterfaceIpConfigurationArrayOutput
}

type ProfileContainerNetworkInterfaceIpConfigurationArray []ProfileContainerNetworkInterfaceIpConfigurationInput

func (ProfileContainerNetworkInterfaceIpConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileContainerNetworkInterfaceIpConfiguration)(nil)).Elem()
}

func (i ProfileContainerNetworkInterfaceIpConfigurationArray) ToProfileContainerNetworkInterfaceIpConfigurationArrayOutput() ProfileContainerNetworkInterfaceIpConfigurationArrayOutput {
	return i.ToProfileContainerNetworkInterfaceIpConfigurationArrayOutputWithContext(context.Background())
}

func (i ProfileContainerNetworkInterfaceIpConfigurationArray) ToProfileContainerNetworkInterfaceIpConfigurationArrayOutputWithContext(ctx context.Context) ProfileContainerNetworkInterfaceIpConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileContainerNetworkInterfaceIpConfigurationArrayOutput)
}

type ProfileContainerNetworkInterfaceIpConfigurationOutput struct{ *pulumi.OutputState }

func (ProfileContainerNetworkInterfaceIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileContainerNetworkInterfaceIpConfiguration)(nil)).Elem()
}

func (o ProfileContainerNetworkInterfaceIpConfigurationOutput) ToProfileContainerNetworkInterfaceIpConfigurationOutput() ProfileContainerNetworkInterfaceIpConfigurationOutput {
	return o
}

func (o ProfileContainerNetworkInterfaceIpConfigurationOutput) ToProfileContainerNetworkInterfaceIpConfigurationOutputWithContext(ctx context.Context) ProfileContainerNetworkInterfaceIpConfigurationOutput {
	return o
}

// Specifies the name of the IP Configuration.
func (o ProfileContainerNetworkInterfaceIpConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProfileContainerNetworkInterfaceIpConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// Reference to the subnet associated with the IP Configuration.
func (o ProfileContainerNetworkInterfaceIpConfigurationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v ProfileContainerNetworkInterfaceIpConfiguration) string { return v.SubnetId }).(pulumi.StringOutput)
}

type ProfileContainerNetworkInterfaceIpConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ProfileContainerNetworkInterfaceIpConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileContainerNetworkInterfaceIpConfiguration)(nil)).Elem()
}

func (o ProfileContainerNetworkInterfaceIpConfigurationArrayOutput) ToProfileContainerNetworkInterfaceIpConfigurationArrayOutput() ProfileContainerNetworkInterfaceIpConfigurationArrayOutput {
	return o
}

func (o ProfileContainerNetworkInterfaceIpConfigurationArrayOutput) ToProfileContainerNetworkInterfaceIpConfigurationArrayOutputWithContext(ctx context.Context) ProfileContainerNetworkInterfaceIpConfigurationArrayOutput {
	return o
}

func (o ProfileContainerNetworkInterfaceIpConfigurationArrayOutput) Index(i pulumi.IntInput) ProfileContainerNetworkInterfaceIpConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProfileContainerNetworkInterfaceIpConfiguration {
		return vs[0].([]ProfileContainerNetworkInterfaceIpConfiguration)[vs[1].(int)]
	}).(ProfileContainerNetworkInterfaceIpConfigurationOutput)
}

type RouteFilterRule struct {
	// The access type of the rule. The only possible value is `Allow`.
	Access string `pulumi:"access"`
	// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].
	Communities []string `pulumi:"communities"`
	// The name of the route filter rule.
	Name string `pulumi:"name"`
	// The rule type of the rule. The only possible value is `Community`.
	RuleType string `pulumi:"ruleType"`
}

// RouteFilterRuleInput is an input type that accepts RouteFilterRuleArgs and RouteFilterRuleOutput values.
// You can construct a concrete instance of `RouteFilterRuleInput` via:
//
//	RouteFilterRuleArgs{...}
type RouteFilterRuleInput interface {
	pulumi.Input

	ToRouteFilterRuleOutput() RouteFilterRuleOutput
	ToRouteFilterRuleOutputWithContext(context.Context) RouteFilterRuleOutput
}

type RouteFilterRuleArgs struct {
	// The access type of the rule. The only possible value is `Allow`.
	Access pulumi.StringInput `pulumi:"access"`
	// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].
	Communities pulumi.StringArrayInput `pulumi:"communities"`
	// The name of the route filter rule.
	Name pulumi.StringInput `pulumi:"name"`
	// The rule type of the rule. The only possible value is `Community`.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
}

func (RouteFilterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterRule)(nil)).Elem()
}

func (i RouteFilterRuleArgs) ToRouteFilterRuleOutput() RouteFilterRuleOutput {
	return i.ToRouteFilterRuleOutputWithContext(context.Background())
}

func (i RouteFilterRuleArgs) ToRouteFilterRuleOutputWithContext(ctx context.Context) RouteFilterRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterRuleOutput)
}

func (i RouteFilterRuleArgs) ToRouteFilterRulePtrOutput() RouteFilterRulePtrOutput {
	return i.ToRouteFilterRulePtrOutputWithContext(context.Background())
}

func (i RouteFilterRuleArgs) ToRouteFilterRulePtrOutputWithContext(ctx context.Context) RouteFilterRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterRuleOutput).ToRouteFilterRulePtrOutputWithContext(ctx)
}

// RouteFilterRulePtrInput is an input type that accepts RouteFilterRuleArgs, RouteFilterRulePtr and RouteFilterRulePtrOutput values.
// You can construct a concrete instance of `RouteFilterRulePtrInput` via:
//
//	        RouteFilterRuleArgs{...}
//
//	or:
//
//	        nil
type RouteFilterRulePtrInput interface {
	pulumi.Input

	ToRouteFilterRulePtrOutput() RouteFilterRulePtrOutput
	ToRouteFilterRulePtrOutputWithContext(context.Context) RouteFilterRulePtrOutput
}

type routeFilterRulePtrType RouteFilterRuleArgs

func RouteFilterRulePtr(v *RouteFilterRuleArgs) RouteFilterRulePtrInput {
	return (*routeFilterRulePtrType)(v)
}

func (*routeFilterRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteFilterRule)(nil)).Elem()
}

func (i *routeFilterRulePtrType) ToRouteFilterRulePtrOutput() RouteFilterRulePtrOutput {
	return i.ToRouteFilterRulePtrOutputWithContext(context.Background())
}

func (i *routeFilterRulePtrType) ToRouteFilterRulePtrOutputWithContext(ctx context.Context) RouteFilterRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterRulePtrOutput)
}

type RouteFilterRuleOutput struct{ *pulumi.OutputState }

func (RouteFilterRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterRule)(nil)).Elem()
}

func (o RouteFilterRuleOutput) ToRouteFilterRuleOutput() RouteFilterRuleOutput {
	return o
}

func (o RouteFilterRuleOutput) ToRouteFilterRuleOutputWithContext(ctx context.Context) RouteFilterRuleOutput {
	return o
}

func (o RouteFilterRuleOutput) ToRouteFilterRulePtrOutput() RouteFilterRulePtrOutput {
	return o.ToRouteFilterRulePtrOutputWithContext(context.Background())
}

func (o RouteFilterRuleOutput) ToRouteFilterRulePtrOutputWithContext(ctx context.Context) RouteFilterRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteFilterRule) *RouteFilterRule {
		return &v
	}).(RouteFilterRulePtrOutput)
}

// The access type of the rule. The only possible value is `Allow`.
func (o RouteFilterRuleOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRule) string { return v.Access }).(pulumi.StringOutput)
}

// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].
func (o RouteFilterRuleOutput) Communities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteFilterRule) []string { return v.Communities }).(pulumi.StringArrayOutput)
}

// The name of the route filter rule.
func (o RouteFilterRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRule) string { return v.Name }).(pulumi.StringOutput)
}

// The rule type of the rule. The only possible value is `Community`.
func (o RouteFilterRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRule) string { return v.RuleType }).(pulumi.StringOutput)
}

type RouteFilterRulePtrOutput struct{ *pulumi.OutputState }

func (RouteFilterRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteFilterRule)(nil)).Elem()
}

func (o RouteFilterRulePtrOutput) ToRouteFilterRulePtrOutput() RouteFilterRulePtrOutput {
	return o
}

func (o RouteFilterRulePtrOutput) ToRouteFilterRulePtrOutputWithContext(ctx context.Context) RouteFilterRulePtrOutput {
	return o
}

func (o RouteFilterRulePtrOutput) Elem() RouteFilterRuleOutput {
	return o.ApplyT(func(v *RouteFilterRule) RouteFilterRule {
		if v != nil {
			return *v
		}
		var ret RouteFilterRule
		return ret
	}).(RouteFilterRuleOutput)
}

// The access type of the rule. The only possible value is `Allow`.
func (o RouteFilterRulePtrOutput) Access() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteFilterRule) *string {
		if v == nil {
			return nil
		}
		return &v.Access
	}).(pulumi.StringPtrOutput)
}

// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].
func (o RouteFilterRulePtrOutput) Communities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RouteFilterRule) []string {
		if v == nil {
			return nil
		}
		return v.Communities
	}).(pulumi.StringArrayOutput)
}

// The name of the route filter rule.
func (o RouteFilterRulePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteFilterRule) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The rule type of the rule. The only possible value is `Community`.
func (o RouteFilterRulePtrOutput) RuleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteFilterRule) *string {
		if v == nil {
			return nil
		}
		return &v.RuleType
	}).(pulumi.StringPtrOutput)
}

type RouteMapRule struct {
	// An `action` block as defined below.
	Actions []RouteMapRuleAction `pulumi:"actions"`
	// A `matchCriterion` block as defined below.
	MatchCriterions []RouteMapRuleMatchCriterion `pulumi:"matchCriterions"`
	// The unique name for the rule.
	Name string `pulumi:"name"`
	// The next step after the rule is evaluated. Possible values are `Continue`, `Terminate` and `Unknown`. Defaults to `Unknown`.
	NextStepIfMatched *string `pulumi:"nextStepIfMatched"`
}

// RouteMapRuleInput is an input type that accepts RouteMapRuleArgs and RouteMapRuleOutput values.
// You can construct a concrete instance of `RouteMapRuleInput` via:
//
//	RouteMapRuleArgs{...}
type RouteMapRuleInput interface {
	pulumi.Input

	ToRouteMapRuleOutput() RouteMapRuleOutput
	ToRouteMapRuleOutputWithContext(context.Context) RouteMapRuleOutput
}

type RouteMapRuleArgs struct {
	// An `action` block as defined below.
	Actions RouteMapRuleActionArrayInput `pulumi:"actions"`
	// A `matchCriterion` block as defined below.
	MatchCriterions RouteMapRuleMatchCriterionArrayInput `pulumi:"matchCriterions"`
	// The unique name for the rule.
	Name pulumi.StringInput `pulumi:"name"`
	// The next step after the rule is evaluated. Possible values are `Continue`, `Terminate` and `Unknown`. Defaults to `Unknown`.
	NextStepIfMatched pulumi.StringPtrInput `pulumi:"nextStepIfMatched"`
}

func (RouteMapRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteMapRule)(nil)).Elem()
}

func (i RouteMapRuleArgs) ToRouteMapRuleOutput() RouteMapRuleOutput {
	return i.ToRouteMapRuleOutputWithContext(context.Background())
}

func (i RouteMapRuleArgs) ToRouteMapRuleOutputWithContext(ctx context.Context) RouteMapRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteMapRuleOutput)
}

// RouteMapRuleArrayInput is an input type that accepts RouteMapRuleArray and RouteMapRuleArrayOutput values.
// You can construct a concrete instance of `RouteMapRuleArrayInput` via:
//
//	RouteMapRuleArray{ RouteMapRuleArgs{...} }
type RouteMapRuleArrayInput interface {
	pulumi.Input

	ToRouteMapRuleArrayOutput() RouteMapRuleArrayOutput
	ToRouteMapRuleArrayOutputWithContext(context.Context) RouteMapRuleArrayOutput
}

type RouteMapRuleArray []RouteMapRuleInput

func (RouteMapRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteMapRule)(nil)).Elem()
}

func (i RouteMapRuleArray) ToRouteMapRuleArrayOutput() RouteMapRuleArrayOutput {
	return i.ToRouteMapRuleArrayOutputWithContext(context.Background())
}

func (i RouteMapRuleArray) ToRouteMapRuleArrayOutputWithContext(ctx context.Context) RouteMapRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteMapRuleArrayOutput)
}

type RouteMapRuleOutput struct{ *pulumi.OutputState }

func (RouteMapRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteMapRule)(nil)).Elem()
}

func (o RouteMapRuleOutput) ToRouteMapRuleOutput() RouteMapRuleOutput {
	return o
}

func (o RouteMapRuleOutput) ToRouteMapRuleOutputWithContext(ctx context.Context) RouteMapRuleOutput {
	return o
}

// An `action` block as defined below.
func (o RouteMapRuleOutput) Actions() RouteMapRuleActionArrayOutput {
	return o.ApplyT(func(v RouteMapRule) []RouteMapRuleAction { return v.Actions }).(RouteMapRuleActionArrayOutput)
}

// A `matchCriterion` block as defined below.
func (o RouteMapRuleOutput) MatchCriterions() RouteMapRuleMatchCriterionArrayOutput {
	return o.ApplyT(func(v RouteMapRule) []RouteMapRuleMatchCriterion { return v.MatchCriterions }).(RouteMapRuleMatchCriterionArrayOutput)
}

// The unique name for the rule.
func (o RouteMapRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteMapRule) string { return v.Name }).(pulumi.StringOutput)
}

// The next step after the rule is evaluated. Possible values are `Continue`, `Terminate` and `Unknown`. Defaults to `Unknown`.
func (o RouteMapRuleOutput) NextStepIfMatched() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteMapRule) *string { return v.NextStepIfMatched }).(pulumi.StringPtrOutput)
}

type RouteMapRuleArrayOutput struct{ *pulumi.OutputState }

func (RouteMapRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteMapRule)(nil)).Elem()
}

func (o RouteMapRuleArrayOutput) ToRouteMapRuleArrayOutput() RouteMapRuleArrayOutput {
	return o
}

func (o RouteMapRuleArrayOutput) ToRouteMapRuleArrayOutputWithContext(ctx context.Context) RouteMapRuleArrayOutput {
	return o
}

func (o RouteMapRuleArrayOutput) Index(i pulumi.IntInput) RouteMapRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteMapRule {
		return vs[0].([]RouteMapRule)[vs[1].(int)]
	}).(RouteMapRuleOutput)
}

type RouteMapRuleAction struct {
	// A `parameter` block as defined below.
	Parameters []RouteMapRuleActionParameter `pulumi:"parameters"`
	// The type of the action to be taken. Possible values are `Add`, `Drop`, `Remove`, `Replace` and `Unknown`.
	Type string `pulumi:"type"`
}

// RouteMapRuleActionInput is an input type that accepts RouteMapRuleActionArgs and RouteMapRuleActionOutput values.
// You can construct a concrete instance of `RouteMapRuleActionInput` via:
//
//	RouteMapRuleActionArgs{...}
type RouteMapRuleActionInput interface {
	pulumi.Input

	ToRouteMapRuleActionOutput() RouteMapRuleActionOutput
	ToRouteMapRuleActionOutputWithContext(context.Context) RouteMapRuleActionOutput
}

type RouteMapRuleActionArgs struct {
	// A `parameter` block as defined below.
	Parameters RouteMapRuleActionParameterArrayInput `pulumi:"parameters"`
	// The type of the action to be taken. Possible values are `Add`, `Drop`, `Remove`, `Replace` and `Unknown`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RouteMapRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteMapRuleAction)(nil)).Elem()
}

func (i RouteMapRuleActionArgs) ToRouteMapRuleActionOutput() RouteMapRuleActionOutput {
	return i.ToRouteMapRuleActionOutputWithContext(context.Background())
}

func (i RouteMapRuleActionArgs) ToRouteMapRuleActionOutputWithContext(ctx context.Context) RouteMapRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteMapRuleActionOutput)
}

// RouteMapRuleActionArrayInput is an input type that accepts RouteMapRuleActionArray and RouteMapRuleActionArrayOutput values.
// You can construct a concrete instance of `RouteMapRuleActionArrayInput` via:
//
//	RouteMapRuleActionArray{ RouteMapRuleActionArgs{...} }
type RouteMapRuleActionArrayInput interface {
	pulumi.Input

	ToRouteMapRuleActionArrayOutput() RouteMapRuleActionArrayOutput
	ToRouteMapRuleActionArrayOutputWithContext(context.Context) RouteMapRuleActionArrayOutput
}

type RouteMapRuleActionArray []RouteMapRuleActionInput

func (RouteMapRuleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteMapRuleAction)(nil)).Elem()
}

func (i RouteMapRuleActionArray) ToRouteMapRuleActionArrayOutput() RouteMapRuleActionArrayOutput {
	return i.ToRouteMapRuleActionArrayOutputWithContext(context.Background())
}

func (i RouteMapRuleActionArray) ToRouteMapRuleActionArrayOutputWithContext(ctx context.Context) RouteMapRuleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteMapRuleActionArrayOutput)
}

type RouteMapRuleActionOutput struct{ *pulumi.OutputState }

func (RouteMapRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteMapRuleAction)(nil)).Elem()
}

func (o RouteMapRuleActionOutput) ToRouteMapRuleActionOutput() RouteMapRuleActionOutput {
	return o
}

func (o RouteMapRuleActionOutput) ToRouteMapRuleActionOutputWithContext(ctx context.Context) RouteMapRuleActionOutput {
	return o
}

// A `parameter` block as defined below.
func (o RouteMapRuleActionOutput) Parameters() RouteMapRuleActionParameterArrayOutput {
	return o.ApplyT(func(v RouteMapRuleAction) []RouteMapRuleActionParameter { return v.Parameters }).(RouteMapRuleActionParameterArrayOutput)
}

// The type of the action to be taken. Possible values are `Add`, `Drop`, `Remove`, `Replace` and `Unknown`.
func (o RouteMapRuleActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RouteMapRuleAction) string { return v.Type }).(pulumi.StringOutput)
}

type RouteMapRuleActionArrayOutput struct{ *pulumi.OutputState }

func (RouteMapRuleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteMapRuleAction)(nil)).Elem()
}

func (o RouteMapRuleActionArrayOutput) ToRouteMapRuleActionArrayOutput() RouteMapRuleActionArrayOutput {
	return o
}

func (o RouteMapRuleActionArrayOutput) ToRouteMapRuleActionArrayOutputWithContext(ctx context.Context) RouteMapRuleActionArrayOutput {
	return o
}

func (o RouteMapRuleActionArrayOutput) Index(i pulumi.IntInput) RouteMapRuleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteMapRuleAction {
		return vs[0].([]RouteMapRuleAction)[vs[1].(int)]
	}).(RouteMapRuleActionOutput)
}

type RouteMapRuleActionParameter struct {
	// A list of AS paths.
	AsPaths []string `pulumi:"asPaths"`
	// A list of BGP communities.
	Communities []string `pulumi:"communities"`
	// A list of route prefixes.
	RoutePrefixes []string `pulumi:"routePrefixes"`
}

// RouteMapRuleActionParameterInput is an input type that accepts RouteMapRuleActionParameterArgs and RouteMapRuleActionParameterOutput values.
// You can construct a concrete instance of `RouteMapRuleActionParameterInput` via:
//
//	RouteMapRuleActionParameterArgs{...}
type RouteMapRuleActionParameterInput interface {
	pulumi.Input

	ToRouteMapRuleActionParameterOutput() RouteMapRuleActionParameterOutput
	ToRouteMapRuleActionParameterOutputWithContext(context.Context) RouteMapRuleActionParameterOutput
}

type RouteMapRuleActionParameterArgs struct {
	// A list of AS paths.
	AsPaths pulumi.StringArrayInput `pulumi:"asPaths"`
	// A list of BGP communities.
	Communities pulumi.StringArrayInput `pulumi:"communities"`
	// A list of route prefixes.
	RoutePrefixes pulumi.StringArrayInput `pulumi:"routePrefixes"`
}

func (RouteMapRuleActionParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteMapRuleActionParameter)(nil)).Elem()
}

func (i RouteMapRuleActionParameterArgs) ToRouteMapRuleActionParameterOutput() RouteMapRuleActionParameterOutput {
	return i.ToRouteMapRuleActionParameterOutputWithContext(context.Background())
}

func (i RouteMapRuleActionParameterArgs) ToRouteMapRuleActionParameterOutputWithContext(ctx context.Context) RouteMapRuleActionParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteMapRuleActionParameterOutput)
}

// RouteMapRuleActionParameterArrayInput is an input type that accepts RouteMapRuleActionParameterArray and RouteMapRuleActionParameterArrayOutput values.
// You can construct a concrete instance of `RouteMapRuleActionParameterArrayInput` via:
//
//	RouteMapRuleActionParameterArray{ RouteMapRuleActionParameterArgs{...} }
type RouteMapRuleActionParameterArrayInput interface {
	pulumi.Input

	ToRouteMapRuleActionParameterArrayOutput() RouteMapRuleActionParameterArrayOutput
	ToRouteMapRuleActionParameterArrayOutputWithContext(context.Context) RouteMapRuleActionParameterArrayOutput
}

type RouteMapRuleActionParameterArray []RouteMapRuleActionParameterInput

func (RouteMapRuleActionParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteMapRuleActionParameter)(nil)).Elem()
}

func (i RouteMapRuleActionParameterArray) ToRouteMapRuleActionParameterArrayOutput() RouteMapRuleActionParameterArrayOutput {
	return i.ToRouteMapRuleActionParameterArrayOutputWithContext(context.Background())
}

func (i RouteMapRuleActionParameterArray) ToRouteMapRuleActionParameterArrayOutputWithContext(ctx context.Context) RouteMapRuleActionParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteMapRuleActionParameterArrayOutput)
}

type RouteMapRuleActionParameterOutput struct{ *pulumi.OutputState }

func (RouteMapRuleActionParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteMapRuleActionParameter)(nil)).Elem()
}

func (o RouteMapRuleActionParameterOutput) ToRouteMapRuleActionParameterOutput() RouteMapRuleActionParameterOutput {
	return o
}

func (o RouteMapRuleActionParameterOutput) ToRouteMapRuleActionParameterOutputWithContext(ctx context.Context) RouteMapRuleActionParameterOutput {
	return o
}

// A list of AS paths.
func (o RouteMapRuleActionParameterOutput) AsPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteMapRuleActionParameter) []string { return v.AsPaths }).(pulumi.StringArrayOutput)
}

// A list of BGP communities.
func (o RouteMapRuleActionParameterOutput) Communities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteMapRuleActionParameter) []string { return v.Communities }).(pulumi.StringArrayOutput)
}

// A list of route prefixes.
func (o RouteMapRuleActionParameterOutput) RoutePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteMapRuleActionParameter) []string { return v.RoutePrefixes }).(pulumi.StringArrayOutput)
}

type RouteMapRuleActionParameterArrayOutput struct{ *pulumi.OutputState }

func (RouteMapRuleActionParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteMapRuleActionParameter)(nil)).Elem()
}

func (o RouteMapRuleActionParameterArrayOutput) ToRouteMapRuleActionParameterArrayOutput() RouteMapRuleActionParameterArrayOutput {
	return o
}

func (o RouteMapRuleActionParameterArrayOutput) ToRouteMapRuleActionParameterArrayOutputWithContext(ctx context.Context) RouteMapRuleActionParameterArrayOutput {
	return o
}

func (o RouteMapRuleActionParameterArrayOutput) Index(i pulumi.IntInput) RouteMapRuleActionParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteMapRuleActionParameter {
		return vs[0].([]RouteMapRuleActionParameter)[vs[1].(int)]
	}).(RouteMapRuleActionParameterOutput)
}

type RouteMapRuleMatchCriterion struct {
	// A list of AS paths which this criterion matches.
	AsPaths []string `pulumi:"asPaths"`
	// A list of BGP communities which this criterion matches.
	Communities []string `pulumi:"communities"`
	// The match condition to apply the rule of the Route Map. Possible values are `Contains`, `Equals`, `NotContains`, `NotEquals` and `Unknown`.
	MatchCondition string `pulumi:"matchCondition"`
	// A list of route prefixes which this criterion matches.
	RoutePrefixes []string `pulumi:"routePrefixes"`
}

// RouteMapRuleMatchCriterionInput is an input type that accepts RouteMapRuleMatchCriterionArgs and RouteMapRuleMatchCriterionOutput values.
// You can construct a concrete instance of `RouteMapRuleMatchCriterionInput` via:
//
//	RouteMapRuleMatchCriterionArgs{...}
type RouteMapRuleMatchCriterionInput interface {
	pulumi.Input

	ToRouteMapRuleMatchCriterionOutput() RouteMapRuleMatchCriterionOutput
	ToRouteMapRuleMatchCriterionOutputWithContext(context.Context) RouteMapRuleMatchCriterionOutput
}

type RouteMapRuleMatchCriterionArgs struct {
	// A list of AS paths which this criterion matches.
	AsPaths pulumi.StringArrayInput `pulumi:"asPaths"`
	// A list of BGP communities which this criterion matches.
	Communities pulumi.StringArrayInput `pulumi:"communities"`
	// The match condition to apply the rule of the Route Map. Possible values are `Contains`, `Equals`, `NotContains`, `NotEquals` and `Unknown`.
	MatchCondition pulumi.StringInput `pulumi:"matchCondition"`
	// A list of route prefixes which this criterion matches.
	RoutePrefixes pulumi.StringArrayInput `pulumi:"routePrefixes"`
}

func (RouteMapRuleMatchCriterionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteMapRuleMatchCriterion)(nil)).Elem()
}

func (i RouteMapRuleMatchCriterionArgs) ToRouteMapRuleMatchCriterionOutput() RouteMapRuleMatchCriterionOutput {
	return i.ToRouteMapRuleMatchCriterionOutputWithContext(context.Background())
}

func (i RouteMapRuleMatchCriterionArgs) ToRouteMapRuleMatchCriterionOutputWithContext(ctx context.Context) RouteMapRuleMatchCriterionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteMapRuleMatchCriterionOutput)
}

// RouteMapRuleMatchCriterionArrayInput is an input type that accepts RouteMapRuleMatchCriterionArray and RouteMapRuleMatchCriterionArrayOutput values.
// You can construct a concrete instance of `RouteMapRuleMatchCriterionArrayInput` via:
//
//	RouteMapRuleMatchCriterionArray{ RouteMapRuleMatchCriterionArgs{...} }
type RouteMapRuleMatchCriterionArrayInput interface {
	pulumi.Input

	ToRouteMapRuleMatchCriterionArrayOutput() RouteMapRuleMatchCriterionArrayOutput
	ToRouteMapRuleMatchCriterionArrayOutputWithContext(context.Context) RouteMapRuleMatchCriterionArrayOutput
}

type RouteMapRuleMatchCriterionArray []RouteMapRuleMatchCriterionInput

func (RouteMapRuleMatchCriterionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteMapRuleMatchCriterion)(nil)).Elem()
}

func (i RouteMapRuleMatchCriterionArray) ToRouteMapRuleMatchCriterionArrayOutput() RouteMapRuleMatchCriterionArrayOutput {
	return i.ToRouteMapRuleMatchCriterionArrayOutputWithContext(context.Background())
}

func (i RouteMapRuleMatchCriterionArray) ToRouteMapRuleMatchCriterionArrayOutputWithContext(ctx context.Context) RouteMapRuleMatchCriterionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteMapRuleMatchCriterionArrayOutput)
}

type RouteMapRuleMatchCriterionOutput struct{ *pulumi.OutputState }

func (RouteMapRuleMatchCriterionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteMapRuleMatchCriterion)(nil)).Elem()
}

func (o RouteMapRuleMatchCriterionOutput) ToRouteMapRuleMatchCriterionOutput() RouteMapRuleMatchCriterionOutput {
	return o
}

func (o RouteMapRuleMatchCriterionOutput) ToRouteMapRuleMatchCriterionOutputWithContext(ctx context.Context) RouteMapRuleMatchCriterionOutput {
	return o
}

// A list of AS paths which this criterion matches.
func (o RouteMapRuleMatchCriterionOutput) AsPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteMapRuleMatchCriterion) []string { return v.AsPaths }).(pulumi.StringArrayOutput)
}

// A list of BGP communities which this criterion matches.
func (o RouteMapRuleMatchCriterionOutput) Communities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteMapRuleMatchCriterion) []string { return v.Communities }).(pulumi.StringArrayOutput)
}

// The match condition to apply the rule of the Route Map. Possible values are `Contains`, `Equals`, `NotContains`, `NotEquals` and `Unknown`.
func (o RouteMapRuleMatchCriterionOutput) MatchCondition() pulumi.StringOutput {
	return o.ApplyT(func(v RouteMapRuleMatchCriterion) string { return v.MatchCondition }).(pulumi.StringOutput)
}

// A list of route prefixes which this criterion matches.
func (o RouteMapRuleMatchCriterionOutput) RoutePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteMapRuleMatchCriterion) []string { return v.RoutePrefixes }).(pulumi.StringArrayOutput)
}

type RouteMapRuleMatchCriterionArrayOutput struct{ *pulumi.OutputState }

func (RouteMapRuleMatchCriterionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteMapRuleMatchCriterion)(nil)).Elem()
}

func (o RouteMapRuleMatchCriterionArrayOutput) ToRouteMapRuleMatchCriterionArrayOutput() RouteMapRuleMatchCriterionArrayOutput {
	return o
}

func (o RouteMapRuleMatchCriterionArrayOutput) ToRouteMapRuleMatchCriterionArrayOutputWithContext(ctx context.Context) RouteMapRuleMatchCriterionArrayOutput {
	return o
}

func (o RouteMapRuleMatchCriterionArrayOutput) Index(i pulumi.IntInput) RouteMapRuleMatchCriterionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteMapRuleMatchCriterion {
		return vs[0].([]RouteMapRuleMatchCriterion)[vs[1].(int)]
	}).(RouteMapRuleMatchCriterionOutput)
}

type RouteTableRoute struct {
	// The destination to which the route applies. Can be CIDR (such as `10.1.0.0/16`) or [Azure Service Tag](https://docs.microsoft.com/azure/virtual-network/service-tags-overview) (such as `ApiManagement`, `AzureBackup` or `AzureMonitor`) format.
	AddressPrefix string `pulumi:"addressPrefix"`
	// The name of the route.
	Name string `pulumi:"name"`
	// Contains the IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is `VirtualAppliance`.
	NextHopInIpAddress *string `pulumi:"nextHopInIpAddress"`
	// The type of Azure hop the packet should be sent to. Possible values are `VirtualNetworkGateway`, `VnetLocal`, `Internet`, `VirtualAppliance` and `None`.
	NextHopType string `pulumi:"nextHopType"`
}

// RouteTableRouteInput is an input type that accepts RouteTableRouteArgs and RouteTableRouteOutput values.
// You can construct a concrete instance of `RouteTableRouteInput` via:
//
//	RouteTableRouteArgs{...}
type RouteTableRouteInput interface {
	pulumi.Input

	ToRouteTableRouteOutput() RouteTableRouteOutput
	ToRouteTableRouteOutputWithContext(context.Context) RouteTableRouteOutput
}

type RouteTableRouteArgs struct {
	// The destination to which the route applies. Can be CIDR (such as `10.1.0.0/16`) or [Azure Service Tag](https://docs.microsoft.com/azure/virtual-network/service-tags-overview) (such as `ApiManagement`, `AzureBackup` or `AzureMonitor`) format.
	AddressPrefix pulumi.StringInput `pulumi:"addressPrefix"`
	// The name of the route.
	Name pulumi.StringInput `pulumi:"name"`
	// Contains the IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is `VirtualAppliance`.
	NextHopInIpAddress pulumi.StringPtrInput `pulumi:"nextHopInIpAddress"`
	// The type of Azure hop the packet should be sent to. Possible values are `VirtualNetworkGateway`, `VnetLocal`, `Internet`, `VirtualAppliance` and `None`.
	NextHopType pulumi.StringInput `pulumi:"nextHopType"`
}

func (RouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableRoute)(nil)).Elem()
}

func (i RouteTableRouteArgs) ToRouteTableRouteOutput() RouteTableRouteOutput {
	return i.ToRouteTableRouteOutputWithContext(context.Background())
}

func (i RouteTableRouteArgs) ToRouteTableRouteOutputWithContext(ctx context.Context) RouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableRouteOutput)
}

// RouteTableRouteArrayInput is an input type that accepts RouteTableRouteArray and RouteTableRouteArrayOutput values.
// You can construct a concrete instance of `RouteTableRouteArrayInput` via:
//
//	RouteTableRouteArray{ RouteTableRouteArgs{...} }
type RouteTableRouteArrayInput interface {
	pulumi.Input

	ToRouteTableRouteArrayOutput() RouteTableRouteArrayOutput
	ToRouteTableRouteArrayOutputWithContext(context.Context) RouteTableRouteArrayOutput
}

type RouteTableRouteArray []RouteTableRouteInput

func (RouteTableRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableRoute)(nil)).Elem()
}

func (i RouteTableRouteArray) ToRouteTableRouteArrayOutput() RouteTableRouteArrayOutput {
	return i.ToRouteTableRouteArrayOutputWithContext(context.Background())
}

func (i RouteTableRouteArray) ToRouteTableRouteArrayOutputWithContext(ctx context.Context) RouteTableRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableRouteArrayOutput)
}

type RouteTableRouteOutput struct{ *pulumi.OutputState }

func (RouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableRoute)(nil)).Elem()
}

func (o RouteTableRouteOutput) ToRouteTableRouteOutput() RouteTableRouteOutput {
	return o
}

func (o RouteTableRouteOutput) ToRouteTableRouteOutputWithContext(ctx context.Context) RouteTableRouteOutput {
	return o
}

// The destination to which the route applies. Can be CIDR (such as `10.1.0.0/16`) or [Azure Service Tag](https://docs.microsoft.com/azure/virtual-network/service-tags-overview) (such as `ApiManagement`, `AzureBackup` or `AzureMonitor`) format.
func (o RouteTableRouteOutput) AddressPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableRoute) string { return v.AddressPrefix }).(pulumi.StringOutput)
}

// The name of the route.
func (o RouteTableRouteOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableRoute) string { return v.Name }).(pulumi.StringOutput)
}

// Contains the IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is `VirtualAppliance`.
func (o RouteTableRouteOutput) NextHopInIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRoute) *string { return v.NextHopInIpAddress }).(pulumi.StringPtrOutput)
}

// The type of Azure hop the packet should be sent to. Possible values are `VirtualNetworkGateway`, `VnetLocal`, `Internet`, `VirtualAppliance` and `None`.
func (o RouteTableRouteOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableRoute) string { return v.NextHopType }).(pulumi.StringOutput)
}

type RouteTableRouteArrayOutput struct{ *pulumi.OutputState }

func (RouteTableRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableRoute)(nil)).Elem()
}

func (o RouteTableRouteArrayOutput) ToRouteTableRouteArrayOutput() RouteTableRouteArrayOutput {
	return o
}

func (o RouteTableRouteArrayOutput) ToRouteTableRouteArrayOutputWithContext(ctx context.Context) RouteTableRouteArrayOutput {
	return o
}

func (o RouteTableRouteArrayOutput) Index(i pulumi.IntInput) RouteTableRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTableRoute {
		return vs[0].([]RouteTableRoute)[vs[1].(int)]
	}).(RouteTableRouteOutput)
}

type RoutingIntentRoutingPolicy struct {
	// A list of destinations which this routing policy is applicable to. Possible values are `Internet` and `PrivateTraffic`.
	Destinations []string `pulumi:"destinations"`
	// The unique name for the routing policy.
	Name string `pulumi:"name"`
	// The resource ID of the next hop on which this routing policy is applicable to.
	NextHop string `pulumi:"nextHop"`
}

// RoutingIntentRoutingPolicyInput is an input type that accepts RoutingIntentRoutingPolicyArgs and RoutingIntentRoutingPolicyOutput values.
// You can construct a concrete instance of `RoutingIntentRoutingPolicyInput` via:
//
//	RoutingIntentRoutingPolicyArgs{...}
type RoutingIntentRoutingPolicyInput interface {
	pulumi.Input

	ToRoutingIntentRoutingPolicyOutput() RoutingIntentRoutingPolicyOutput
	ToRoutingIntentRoutingPolicyOutputWithContext(context.Context) RoutingIntentRoutingPolicyOutput
}

type RoutingIntentRoutingPolicyArgs struct {
	// A list of destinations which this routing policy is applicable to. Possible values are `Internet` and `PrivateTraffic`.
	Destinations pulumi.StringArrayInput `pulumi:"destinations"`
	// The unique name for the routing policy.
	Name pulumi.StringInput `pulumi:"name"`
	// The resource ID of the next hop on which this routing policy is applicable to.
	NextHop pulumi.StringInput `pulumi:"nextHop"`
}

func (RoutingIntentRoutingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingIntentRoutingPolicy)(nil)).Elem()
}

func (i RoutingIntentRoutingPolicyArgs) ToRoutingIntentRoutingPolicyOutput() RoutingIntentRoutingPolicyOutput {
	return i.ToRoutingIntentRoutingPolicyOutputWithContext(context.Background())
}

func (i RoutingIntentRoutingPolicyArgs) ToRoutingIntentRoutingPolicyOutputWithContext(ctx context.Context) RoutingIntentRoutingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingIntentRoutingPolicyOutput)
}

// RoutingIntentRoutingPolicyArrayInput is an input type that accepts RoutingIntentRoutingPolicyArray and RoutingIntentRoutingPolicyArrayOutput values.
// You can construct a concrete instance of `RoutingIntentRoutingPolicyArrayInput` via:
//
//	RoutingIntentRoutingPolicyArray{ RoutingIntentRoutingPolicyArgs{...} }
type RoutingIntentRoutingPolicyArrayInput interface {
	pulumi.Input

	ToRoutingIntentRoutingPolicyArrayOutput() RoutingIntentRoutingPolicyArrayOutput
	ToRoutingIntentRoutingPolicyArrayOutputWithContext(context.Context) RoutingIntentRoutingPolicyArrayOutput
}

type RoutingIntentRoutingPolicyArray []RoutingIntentRoutingPolicyInput

func (RoutingIntentRoutingPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingIntentRoutingPolicy)(nil)).Elem()
}

func (i RoutingIntentRoutingPolicyArray) ToRoutingIntentRoutingPolicyArrayOutput() RoutingIntentRoutingPolicyArrayOutput {
	return i.ToRoutingIntentRoutingPolicyArrayOutputWithContext(context.Background())
}

func (i RoutingIntentRoutingPolicyArray) ToRoutingIntentRoutingPolicyArrayOutputWithContext(ctx context.Context) RoutingIntentRoutingPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingIntentRoutingPolicyArrayOutput)
}

type RoutingIntentRoutingPolicyOutput struct{ *pulumi.OutputState }

func (RoutingIntentRoutingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingIntentRoutingPolicy)(nil)).Elem()
}

func (o RoutingIntentRoutingPolicyOutput) ToRoutingIntentRoutingPolicyOutput() RoutingIntentRoutingPolicyOutput {
	return o
}

func (o RoutingIntentRoutingPolicyOutput) ToRoutingIntentRoutingPolicyOutputWithContext(ctx context.Context) RoutingIntentRoutingPolicyOutput {
	return o
}

// A list of destinations which this routing policy is applicable to. Possible values are `Internet` and `PrivateTraffic`.
func (o RoutingIntentRoutingPolicyOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoutingIntentRoutingPolicy) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

// The unique name for the routing policy.
func (o RoutingIntentRoutingPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingIntentRoutingPolicy) string { return v.Name }).(pulumi.StringOutput)
}

// The resource ID of the next hop on which this routing policy is applicable to.
func (o RoutingIntentRoutingPolicyOutput) NextHop() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingIntentRoutingPolicy) string { return v.NextHop }).(pulumi.StringOutput)
}

type RoutingIntentRoutingPolicyArrayOutput struct{ *pulumi.OutputState }

func (RoutingIntentRoutingPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingIntentRoutingPolicy)(nil)).Elem()
}

func (o RoutingIntentRoutingPolicyArrayOutput) ToRoutingIntentRoutingPolicyArrayOutput() RoutingIntentRoutingPolicyArrayOutput {
	return o
}

func (o RoutingIntentRoutingPolicyArrayOutput) ToRoutingIntentRoutingPolicyArrayOutputWithContext(ctx context.Context) RoutingIntentRoutingPolicyArrayOutput {
	return o
}

func (o RoutingIntentRoutingPolicyArrayOutput) Index(i pulumi.IntInput) RoutingIntentRoutingPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingIntentRoutingPolicy {
		return vs[0].([]RoutingIntentRoutingPolicy)[vs[1].(int)]
	}).(RoutingIntentRoutingPolicyOutput)
}

type SubnetDelegation struct {
	// A name for this delegation.
	Name string `pulumi:"name"`
	// A `serviceDelegation` block as defined below.
	ServiceDelegation SubnetDelegationServiceDelegation `pulumi:"serviceDelegation"`
}

// SubnetDelegationInput is an input type that accepts SubnetDelegationArgs and SubnetDelegationOutput values.
// You can construct a concrete instance of `SubnetDelegationInput` via:
//
//	SubnetDelegationArgs{...}
type SubnetDelegationInput interface {
	pulumi.Input

	ToSubnetDelegationOutput() SubnetDelegationOutput
	ToSubnetDelegationOutputWithContext(context.Context) SubnetDelegationOutput
}

type SubnetDelegationArgs struct {
	// A name for this delegation.
	Name pulumi.StringInput `pulumi:"name"`
	// A `serviceDelegation` block as defined below.
	ServiceDelegation SubnetDelegationServiceDelegationInput `pulumi:"serviceDelegation"`
}

func (SubnetDelegationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetDelegation)(nil)).Elem()
}

func (i SubnetDelegationArgs) ToSubnetDelegationOutput() SubnetDelegationOutput {
	return i.ToSubnetDelegationOutputWithContext(context.Background())
}

func (i SubnetDelegationArgs) ToSubnetDelegationOutputWithContext(ctx context.Context) SubnetDelegationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetDelegationOutput)
}

// SubnetDelegationArrayInput is an input type that accepts SubnetDelegationArray and SubnetDelegationArrayOutput values.
// You can construct a concrete instance of `SubnetDelegationArrayInput` via:
//
//	SubnetDelegationArray{ SubnetDelegationArgs{...} }
type SubnetDelegationArrayInput interface {
	pulumi.Input

	ToSubnetDelegationArrayOutput() SubnetDelegationArrayOutput
	ToSubnetDelegationArrayOutputWithContext(context.Context) SubnetDelegationArrayOutput
}

type SubnetDelegationArray []SubnetDelegationInput

func (SubnetDelegationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetDelegation)(nil)).Elem()
}

func (i SubnetDelegationArray) ToSubnetDelegationArrayOutput() SubnetDelegationArrayOutput {
	return i.ToSubnetDelegationArrayOutputWithContext(context.Background())
}

func (i SubnetDelegationArray) ToSubnetDelegationArrayOutputWithContext(ctx context.Context) SubnetDelegationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetDelegationArrayOutput)
}

type SubnetDelegationOutput struct{ *pulumi.OutputState }

func (SubnetDelegationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetDelegation)(nil)).Elem()
}

func (o SubnetDelegationOutput) ToSubnetDelegationOutput() SubnetDelegationOutput {
	return o
}

func (o SubnetDelegationOutput) ToSubnetDelegationOutputWithContext(ctx context.Context) SubnetDelegationOutput {
	return o
}

// A name for this delegation.
func (o SubnetDelegationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetDelegation) string { return v.Name }).(pulumi.StringOutput)
}

// A `serviceDelegation` block as defined below.
func (o SubnetDelegationOutput) ServiceDelegation() SubnetDelegationServiceDelegationOutput {
	return o.ApplyT(func(v SubnetDelegation) SubnetDelegationServiceDelegation { return v.ServiceDelegation }).(SubnetDelegationServiceDelegationOutput)
}

type SubnetDelegationArrayOutput struct{ *pulumi.OutputState }

func (SubnetDelegationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetDelegation)(nil)).Elem()
}

func (o SubnetDelegationArrayOutput) ToSubnetDelegationArrayOutput() SubnetDelegationArrayOutput {
	return o
}

func (o SubnetDelegationArrayOutput) ToSubnetDelegationArrayOutputWithContext(ctx context.Context) SubnetDelegationArrayOutput {
	return o
}

func (o SubnetDelegationArrayOutput) Index(i pulumi.IntInput) SubnetDelegationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetDelegation {
		return vs[0].([]SubnetDelegation)[vs[1].(int)]
	}).(SubnetDelegationOutput)
}

type SubnetDelegationServiceDelegation struct {
	// A list of Actions which should be delegated. This list is specific to the service to delegate to. Possible values are `Microsoft.Network/networkinterfaces/*`, `Microsoft.Network/publicIPAddresses/join/action`, `Microsoft.Network/publicIPAddresses/read`, `Microsoft.Network/virtualNetworks/read`, `Microsoft.Network/virtualNetworks/subnets/action`, `Microsoft.Network/virtualNetworks/subnets/join/action`, `Microsoft.Network/virtualNetworks/subnets/prepareNetworkPolicies/action`, and `Microsoft.Network/virtualNetworks/subnets/unprepareNetworkPolicies/action`.
	//
	// > **NOTE:** Azure may add default actions depending on the service delegation name and they can't be changed.
	Actions []string `pulumi:"actions"`
	// The name of service to delegate to. Possible values are `GitHub.Network/networkSettings`, `Microsoft.ApiManagement/service`, `Microsoft.Apollo/npu`, `Microsoft.App/environments`, `Microsoft.App/testClients`, `Microsoft.AVS/PrivateClouds`, `Microsoft.AzureCosmosDB/clusters`, `Microsoft.BareMetal/AzureHostedService`, `Microsoft.BareMetal/AzureHPC`, `Microsoft.BareMetal/AzurePaymentHSM`, `Microsoft.BareMetal/AzureVMware`, `Microsoft.BareMetal/CrayServers`, `Microsoft.BareMetal/MonitoringServers`, `Microsoft.Batch/batchAccounts`, `Microsoft.CloudTest/hostedpools`, `Microsoft.CloudTest/images`, `Microsoft.CloudTest/pools`, `Microsoft.Codespaces/plans`, `Microsoft.ContainerInstance/containerGroups`, `Microsoft.ContainerService/managedClusters`, `Microsoft.ContainerService/TestClients`, `Microsoft.Databricks/workspaces`, `Microsoft.DBforMySQL/flexibleServers`, `Microsoft.DBforMySQL/servers`, `Microsoft.DBforMySQL/serversv2`, `Microsoft.DBforPostgreSQL/flexibleServers`, `Microsoft.DBforPostgreSQL/serversv2`, `Microsoft.DBforPostgreSQL/singleServers`, `Microsoft.DelegatedNetwork/controller`, `Microsoft.DevCenter/networkConnection`, `Microsoft.DocumentDB/cassandraClusters`, `Microsoft.Fidalgo/networkSettings`, `Microsoft.HardwareSecurityModules/dedicatedHSMs`, `Microsoft.Kusto/clusters`, `Microsoft.LabServices/labplans`, `Microsoft.Logic/integrationServiceEnvironments`, `Microsoft.MachineLearningServices/workspaces`, `Microsoft.Netapp/volumes`, `Microsoft.Network/dnsResolvers`, `Microsoft.Network/managedResolvers`, `Microsoft.Network/fpgaNetworkInterfaces`, `Microsoft.Network/networkWatchers.`, `Microsoft.Network/virtualNetworkGateways`, `Microsoft.Orbital/orbitalGateways`, `Microsoft.PowerPlatform/enterprisePolicies`, `Microsoft.PowerPlatform/vnetaccesslinks`, `Microsoft.ServiceFabricMesh/networks`, `Microsoft.ServiceNetworking/trafficControllers`, `Microsoft.Singularity/accounts/networks`, `Microsoft.Singularity/accounts/npu`, `Microsoft.Sql/managedInstances`, `Microsoft.Sql/managedInstancesOnebox`, `Microsoft.Sql/managedInstancesStage`, `Microsoft.Sql/managedInstancesTest`, `Microsoft.Sql/servers`, `Microsoft.StoragePool/diskPools`, `Microsoft.StreamAnalytics/streamingJobs`, `Microsoft.Synapse/workspaces`, `Microsoft.Web/hostingEnvironments`, `Microsoft.Web/serverFarms`, `NGINX.NGINXPLUS/nginxDeployments`, `PaloAltoNetworks.Cloudngfw/firewalls` and `Qumulo.Storage/fileSystems`.
	Name string `pulumi:"name"`
}

// SubnetDelegationServiceDelegationInput is an input type that accepts SubnetDelegationServiceDelegationArgs and SubnetDelegationServiceDelegationOutput values.
// You can construct a concrete instance of `SubnetDelegationServiceDelegationInput` via:
//
//	SubnetDelegationServiceDelegationArgs{...}
type SubnetDelegationServiceDelegationInput interface {
	pulumi.Input

	ToSubnetDelegationServiceDelegationOutput() SubnetDelegationServiceDelegationOutput
	ToSubnetDelegationServiceDelegationOutputWithContext(context.Context) SubnetDelegationServiceDelegationOutput
}

type SubnetDelegationServiceDelegationArgs struct {
	// A list of Actions which should be delegated. This list is specific to the service to delegate to. Possible values are `Microsoft.Network/networkinterfaces/*`, `Microsoft.Network/publicIPAddresses/join/action`, `Microsoft.Network/publicIPAddresses/read`, `Microsoft.Network/virtualNetworks/read`, `Microsoft.Network/virtualNetworks/subnets/action`, `Microsoft.Network/virtualNetworks/subnets/join/action`, `Microsoft.Network/virtualNetworks/subnets/prepareNetworkPolicies/action`, and `Microsoft.Network/virtualNetworks/subnets/unprepareNetworkPolicies/action`.
	//
	// > **NOTE:** Azure may add default actions depending on the service delegation name and they can't be changed.
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// The name of service to delegate to. Possible values are `GitHub.Network/networkSettings`, `Microsoft.ApiManagement/service`, `Microsoft.Apollo/npu`, `Microsoft.App/environments`, `Microsoft.App/testClients`, `Microsoft.AVS/PrivateClouds`, `Microsoft.AzureCosmosDB/clusters`, `Microsoft.BareMetal/AzureHostedService`, `Microsoft.BareMetal/AzureHPC`, `Microsoft.BareMetal/AzurePaymentHSM`, `Microsoft.BareMetal/AzureVMware`, `Microsoft.BareMetal/CrayServers`, `Microsoft.BareMetal/MonitoringServers`, `Microsoft.Batch/batchAccounts`, `Microsoft.CloudTest/hostedpools`, `Microsoft.CloudTest/images`, `Microsoft.CloudTest/pools`, `Microsoft.Codespaces/plans`, `Microsoft.ContainerInstance/containerGroups`, `Microsoft.ContainerService/managedClusters`, `Microsoft.ContainerService/TestClients`, `Microsoft.Databricks/workspaces`, `Microsoft.DBforMySQL/flexibleServers`, `Microsoft.DBforMySQL/servers`, `Microsoft.DBforMySQL/serversv2`, `Microsoft.DBforPostgreSQL/flexibleServers`, `Microsoft.DBforPostgreSQL/serversv2`, `Microsoft.DBforPostgreSQL/singleServers`, `Microsoft.DelegatedNetwork/controller`, `Microsoft.DevCenter/networkConnection`, `Microsoft.DocumentDB/cassandraClusters`, `Microsoft.Fidalgo/networkSettings`, `Microsoft.HardwareSecurityModules/dedicatedHSMs`, `Microsoft.Kusto/clusters`, `Microsoft.LabServices/labplans`, `Microsoft.Logic/integrationServiceEnvironments`, `Microsoft.MachineLearningServices/workspaces`, `Microsoft.Netapp/volumes`, `Microsoft.Network/dnsResolvers`, `Microsoft.Network/managedResolvers`, `Microsoft.Network/fpgaNetworkInterfaces`, `Microsoft.Network/networkWatchers.`, `Microsoft.Network/virtualNetworkGateways`, `Microsoft.Orbital/orbitalGateways`, `Microsoft.PowerPlatform/enterprisePolicies`, `Microsoft.PowerPlatform/vnetaccesslinks`, `Microsoft.ServiceFabricMesh/networks`, `Microsoft.ServiceNetworking/trafficControllers`, `Microsoft.Singularity/accounts/networks`, `Microsoft.Singularity/accounts/npu`, `Microsoft.Sql/managedInstances`, `Microsoft.Sql/managedInstancesOnebox`, `Microsoft.Sql/managedInstancesStage`, `Microsoft.Sql/managedInstancesTest`, `Microsoft.Sql/servers`, `Microsoft.StoragePool/diskPools`, `Microsoft.StreamAnalytics/streamingJobs`, `Microsoft.Synapse/workspaces`, `Microsoft.Web/hostingEnvironments`, `Microsoft.Web/serverFarms`, `NGINX.NGINXPLUS/nginxDeployments`, `PaloAltoNetworks.Cloudngfw/firewalls` and `Qumulo.Storage/fileSystems`.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SubnetDelegationServiceDelegationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetDelegationServiceDelegation)(nil)).Elem()
}

func (i SubnetDelegationServiceDelegationArgs) ToSubnetDelegationServiceDelegationOutput() SubnetDelegationServiceDelegationOutput {
	return i.ToSubnetDelegationServiceDelegationOutputWithContext(context.Background())
}

func (i SubnetDelegationServiceDelegationArgs) ToSubnetDelegationServiceDelegationOutputWithContext(ctx context.Context) SubnetDelegationServiceDelegationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetDelegationServiceDelegationOutput)
}

type SubnetDelegationServiceDelegationOutput struct{ *pulumi.OutputState }

func (SubnetDelegationServiceDelegationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetDelegationServiceDelegation)(nil)).Elem()
}

func (o SubnetDelegationServiceDelegationOutput) ToSubnetDelegationServiceDelegationOutput() SubnetDelegationServiceDelegationOutput {
	return o
}

func (o SubnetDelegationServiceDelegationOutput) ToSubnetDelegationServiceDelegationOutputWithContext(ctx context.Context) SubnetDelegationServiceDelegationOutput {
	return o
}

// A list of Actions which should be delegated. This list is specific to the service to delegate to. Possible values are `Microsoft.Network/networkinterfaces/*`, `Microsoft.Network/publicIPAddresses/join/action`, `Microsoft.Network/publicIPAddresses/read`, `Microsoft.Network/virtualNetworks/read`, `Microsoft.Network/virtualNetworks/subnets/action`, `Microsoft.Network/virtualNetworks/subnets/join/action`, `Microsoft.Network/virtualNetworks/subnets/prepareNetworkPolicies/action`, and `Microsoft.Network/virtualNetworks/subnets/unprepareNetworkPolicies/action`.
//
// > **NOTE:** Azure may add default actions depending on the service delegation name and they can't be changed.
func (o SubnetDelegationServiceDelegationOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubnetDelegationServiceDelegation) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// The name of service to delegate to. Possible values are `GitHub.Network/networkSettings`, `Microsoft.ApiManagement/service`, `Microsoft.Apollo/npu`, `Microsoft.App/environments`, `Microsoft.App/testClients`, `Microsoft.AVS/PrivateClouds`, `Microsoft.AzureCosmosDB/clusters`, `Microsoft.BareMetal/AzureHostedService`, `Microsoft.BareMetal/AzureHPC`, `Microsoft.BareMetal/AzurePaymentHSM`, `Microsoft.BareMetal/AzureVMware`, `Microsoft.BareMetal/CrayServers`, `Microsoft.BareMetal/MonitoringServers`, `Microsoft.Batch/batchAccounts`, `Microsoft.CloudTest/hostedpools`, `Microsoft.CloudTest/images`, `Microsoft.CloudTest/pools`, `Microsoft.Codespaces/plans`, `Microsoft.ContainerInstance/containerGroups`, `Microsoft.ContainerService/managedClusters`, `Microsoft.ContainerService/TestClients`, `Microsoft.Databricks/workspaces`, `Microsoft.DBforMySQL/flexibleServers`, `Microsoft.DBforMySQL/servers`, `Microsoft.DBforMySQL/serversv2`, `Microsoft.DBforPostgreSQL/flexibleServers`, `Microsoft.DBforPostgreSQL/serversv2`, `Microsoft.DBforPostgreSQL/singleServers`, `Microsoft.DelegatedNetwork/controller`, `Microsoft.DevCenter/networkConnection`, `Microsoft.DocumentDB/cassandraClusters`, `Microsoft.Fidalgo/networkSettings`, `Microsoft.HardwareSecurityModules/dedicatedHSMs`, `Microsoft.Kusto/clusters`, `Microsoft.LabServices/labplans`, `Microsoft.Logic/integrationServiceEnvironments`, `Microsoft.MachineLearningServices/workspaces`, `Microsoft.Netapp/volumes`, `Microsoft.Network/dnsResolvers`, `Microsoft.Network/managedResolvers`, `Microsoft.Network/fpgaNetworkInterfaces`, `Microsoft.Network/networkWatchers.`, `Microsoft.Network/virtualNetworkGateways`, `Microsoft.Orbital/orbitalGateways`, `Microsoft.PowerPlatform/enterprisePolicies`, `Microsoft.PowerPlatform/vnetaccesslinks`, `Microsoft.ServiceFabricMesh/networks`, `Microsoft.ServiceNetworking/trafficControllers`, `Microsoft.Singularity/accounts/networks`, `Microsoft.Singularity/accounts/npu`, `Microsoft.Sql/managedInstances`, `Microsoft.Sql/managedInstancesOnebox`, `Microsoft.Sql/managedInstancesStage`, `Microsoft.Sql/managedInstancesTest`, `Microsoft.Sql/servers`, `Microsoft.StoragePool/diskPools`, `Microsoft.StreamAnalytics/streamingJobs`, `Microsoft.Synapse/workspaces`, `Microsoft.Web/hostingEnvironments`, `Microsoft.Web/serverFarms`, `NGINX.NGINXPLUS/nginxDeployments`, `PaloAltoNetworks.Cloudngfw/firewalls` and `Qumulo.Storage/fileSystems`.
func (o SubnetDelegationServiceDelegationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetDelegationServiceDelegation) string { return v.Name }).(pulumi.StringOutput)
}

type SubnetServiceEndpointStoragePolicyDefinition struct {
	// The description of this Subnet Service Endpoint Storage Policy Definition.
	Description *string `pulumi:"description"`
	// The name which should be used for this Subnet Service Endpoint Storage Policy Definition.
	Name string `pulumi:"name"`
	// The type of service resources. Valid values are `Microsoft.Storage` or `Global`. When the `serviceResources` property contains resource IDs, this property must be `Microsoft.Storage`. When the `serviceResources` property contains Aliases, this property must be `Global`. Defaults to `Microsoft.Storage`.
	Service *string `pulumi:"service"`
	// Specifies a list of resources or aliases that this Subnet Service Endpoint Storage Policy Definition applies to.
	//
	// > **NOTE** The `serviceResources` property must contain either Aliases or Resource IDs, but not both.
	ServiceResources []string `pulumi:"serviceResources"`
}

// SubnetServiceEndpointStoragePolicyDefinitionInput is an input type that accepts SubnetServiceEndpointStoragePolicyDefinitionArgs and SubnetServiceEndpointStoragePolicyDefinitionOutput values.
// You can construct a concrete instance of `SubnetServiceEndpointStoragePolicyDefinitionInput` via:
//
//	SubnetServiceEndpointStoragePolicyDefinitionArgs{...}
type SubnetServiceEndpointStoragePolicyDefinitionInput interface {
	pulumi.Input

	ToSubnetServiceEndpointStoragePolicyDefinitionOutput() SubnetServiceEndpointStoragePolicyDefinitionOutput
	ToSubnetServiceEndpointStoragePolicyDefinitionOutputWithContext(context.Context) SubnetServiceEndpointStoragePolicyDefinitionOutput
}

type SubnetServiceEndpointStoragePolicyDefinitionArgs struct {
	// The description of this Subnet Service Endpoint Storage Policy Definition.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name which should be used for this Subnet Service Endpoint Storage Policy Definition.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of service resources. Valid values are `Microsoft.Storage` or `Global`. When the `serviceResources` property contains resource IDs, this property must be `Microsoft.Storage`. When the `serviceResources` property contains Aliases, this property must be `Global`. Defaults to `Microsoft.Storage`.
	Service pulumi.StringPtrInput `pulumi:"service"`
	// Specifies a list of resources or aliases that this Subnet Service Endpoint Storage Policy Definition applies to.
	//
	// > **NOTE** The `serviceResources` property must contain either Aliases or Resource IDs, but not both.
	ServiceResources pulumi.StringArrayInput `pulumi:"serviceResources"`
}

func (SubnetServiceEndpointStoragePolicyDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetServiceEndpointStoragePolicyDefinition)(nil)).Elem()
}

func (i SubnetServiceEndpointStoragePolicyDefinitionArgs) ToSubnetServiceEndpointStoragePolicyDefinitionOutput() SubnetServiceEndpointStoragePolicyDefinitionOutput {
	return i.ToSubnetServiceEndpointStoragePolicyDefinitionOutputWithContext(context.Background())
}

func (i SubnetServiceEndpointStoragePolicyDefinitionArgs) ToSubnetServiceEndpointStoragePolicyDefinitionOutputWithContext(ctx context.Context) SubnetServiceEndpointStoragePolicyDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetServiceEndpointStoragePolicyDefinitionOutput)
}

func (i SubnetServiceEndpointStoragePolicyDefinitionArgs) ToSubnetServiceEndpointStoragePolicyDefinitionPtrOutput() SubnetServiceEndpointStoragePolicyDefinitionPtrOutput {
	return i.ToSubnetServiceEndpointStoragePolicyDefinitionPtrOutputWithContext(context.Background())
}

func (i SubnetServiceEndpointStoragePolicyDefinitionArgs) ToSubnetServiceEndpointStoragePolicyDefinitionPtrOutputWithContext(ctx context.Context) SubnetServiceEndpointStoragePolicyDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetServiceEndpointStoragePolicyDefinitionOutput).ToSubnetServiceEndpointStoragePolicyDefinitionPtrOutputWithContext(ctx)
}

// SubnetServiceEndpointStoragePolicyDefinitionPtrInput is an input type that accepts SubnetServiceEndpointStoragePolicyDefinitionArgs, SubnetServiceEndpointStoragePolicyDefinitionPtr and SubnetServiceEndpointStoragePolicyDefinitionPtrOutput values.
// You can construct a concrete instance of `SubnetServiceEndpointStoragePolicyDefinitionPtrInput` via:
//
//	        SubnetServiceEndpointStoragePolicyDefinitionArgs{...}
//
//	or:
//
//	        nil
type SubnetServiceEndpointStoragePolicyDefinitionPtrInput interface {
	pulumi.Input

	ToSubnetServiceEndpointStoragePolicyDefinitionPtrOutput() SubnetServiceEndpointStoragePolicyDefinitionPtrOutput
	ToSubnetServiceEndpointStoragePolicyDefinitionPtrOutputWithContext(context.Context) SubnetServiceEndpointStoragePolicyDefinitionPtrOutput
}

type subnetServiceEndpointStoragePolicyDefinitionPtrType SubnetServiceEndpointStoragePolicyDefinitionArgs

func SubnetServiceEndpointStoragePolicyDefinitionPtr(v *SubnetServiceEndpointStoragePolicyDefinitionArgs) SubnetServiceEndpointStoragePolicyDefinitionPtrInput {
	return (*subnetServiceEndpointStoragePolicyDefinitionPtrType)(v)
}

func (*subnetServiceEndpointStoragePolicyDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetServiceEndpointStoragePolicyDefinition)(nil)).Elem()
}

func (i *subnetServiceEndpointStoragePolicyDefinitionPtrType) ToSubnetServiceEndpointStoragePolicyDefinitionPtrOutput() SubnetServiceEndpointStoragePolicyDefinitionPtrOutput {
	return i.ToSubnetServiceEndpointStoragePolicyDefinitionPtrOutputWithContext(context.Background())
}

func (i *subnetServiceEndpointStoragePolicyDefinitionPtrType) ToSubnetServiceEndpointStoragePolicyDefinitionPtrOutputWithContext(ctx context.Context) SubnetServiceEndpointStoragePolicyDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetServiceEndpointStoragePolicyDefinitionPtrOutput)
}

type SubnetServiceEndpointStoragePolicyDefinitionOutput struct{ *pulumi.OutputState }

func (SubnetServiceEndpointStoragePolicyDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetServiceEndpointStoragePolicyDefinition)(nil)).Elem()
}

func (o SubnetServiceEndpointStoragePolicyDefinitionOutput) ToSubnetServiceEndpointStoragePolicyDefinitionOutput() SubnetServiceEndpointStoragePolicyDefinitionOutput {
	return o
}

func (o SubnetServiceEndpointStoragePolicyDefinitionOutput) ToSubnetServiceEndpointStoragePolicyDefinitionOutputWithContext(ctx context.Context) SubnetServiceEndpointStoragePolicyDefinitionOutput {
	return o
}

func (o SubnetServiceEndpointStoragePolicyDefinitionOutput) ToSubnetServiceEndpointStoragePolicyDefinitionPtrOutput() SubnetServiceEndpointStoragePolicyDefinitionPtrOutput {
	return o.ToSubnetServiceEndpointStoragePolicyDefinitionPtrOutputWithContext(context.Background())
}

func (o SubnetServiceEndpointStoragePolicyDefinitionOutput) ToSubnetServiceEndpointStoragePolicyDefinitionPtrOutputWithContext(ctx context.Context) SubnetServiceEndpointStoragePolicyDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubnetServiceEndpointStoragePolicyDefinition) *SubnetServiceEndpointStoragePolicyDefinition {
		return &v
	}).(SubnetServiceEndpointStoragePolicyDefinitionPtrOutput)
}

// The description of this Subnet Service Endpoint Storage Policy Definition.
func (o SubnetServiceEndpointStoragePolicyDefinitionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetServiceEndpointStoragePolicyDefinition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name which should be used for this Subnet Service Endpoint Storage Policy Definition.
func (o SubnetServiceEndpointStoragePolicyDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetServiceEndpointStoragePolicyDefinition) string { return v.Name }).(pulumi.StringOutput)
}

// The type of service resources. Valid values are `Microsoft.Storage` or `Global`. When the `serviceResources` property contains resource IDs, this property must be `Microsoft.Storage`. When the `serviceResources` property contains Aliases, this property must be `Global`. Defaults to `Microsoft.Storage`.
func (o SubnetServiceEndpointStoragePolicyDefinitionOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetServiceEndpointStoragePolicyDefinition) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// Specifies a list of resources or aliases that this Subnet Service Endpoint Storage Policy Definition applies to.
//
// > **NOTE** The `serviceResources` property must contain either Aliases or Resource IDs, but not both.
func (o SubnetServiceEndpointStoragePolicyDefinitionOutput) ServiceResources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubnetServiceEndpointStoragePolicyDefinition) []string { return v.ServiceResources }).(pulumi.StringArrayOutput)
}

type SubnetServiceEndpointStoragePolicyDefinitionPtrOutput struct{ *pulumi.OutputState }

func (SubnetServiceEndpointStoragePolicyDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetServiceEndpointStoragePolicyDefinition)(nil)).Elem()
}

func (o SubnetServiceEndpointStoragePolicyDefinitionPtrOutput) ToSubnetServiceEndpointStoragePolicyDefinitionPtrOutput() SubnetServiceEndpointStoragePolicyDefinitionPtrOutput {
	return o
}

func (o SubnetServiceEndpointStoragePolicyDefinitionPtrOutput) ToSubnetServiceEndpointStoragePolicyDefinitionPtrOutputWithContext(ctx context.Context) SubnetServiceEndpointStoragePolicyDefinitionPtrOutput {
	return o
}

func (o SubnetServiceEndpointStoragePolicyDefinitionPtrOutput) Elem() SubnetServiceEndpointStoragePolicyDefinitionOutput {
	return o.ApplyT(func(v *SubnetServiceEndpointStoragePolicyDefinition) SubnetServiceEndpointStoragePolicyDefinition {
		if v != nil {
			return *v
		}
		var ret SubnetServiceEndpointStoragePolicyDefinition
		return ret
	}).(SubnetServiceEndpointStoragePolicyDefinitionOutput)
}

// The description of this Subnet Service Endpoint Storage Policy Definition.
func (o SubnetServiceEndpointStoragePolicyDefinitionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetServiceEndpointStoragePolicyDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The name which should be used for this Subnet Service Endpoint Storage Policy Definition.
func (o SubnetServiceEndpointStoragePolicyDefinitionPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetServiceEndpointStoragePolicyDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of service resources. Valid values are `Microsoft.Storage` or `Global`. When the `serviceResources` property contains resource IDs, this property must be `Microsoft.Storage`. When the `serviceResources` property contains Aliases, this property must be `Global`. Defaults to `Microsoft.Storage`.
func (o SubnetServiceEndpointStoragePolicyDefinitionPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetServiceEndpointStoragePolicyDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

// Specifies a list of resources or aliases that this Subnet Service Endpoint Storage Policy Definition applies to.
//
// > **NOTE** The `serviceResources` property must contain either Aliases or Resource IDs, but not both.
func (o SubnetServiceEndpointStoragePolicyDefinitionPtrOutput) ServiceResources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SubnetServiceEndpointStoragePolicyDefinition) []string {
		if v == nil {
			return nil
		}
		return v.ServiceResources
	}).(pulumi.StringArrayOutput)
}

type TrafficManagerAzureEndpointCustomHeader struct {
	// The name of the custom header.
	Name string `pulumi:"name"`
	// The value of custom header. Applicable for HTTP and HTTPS protocol.
	Value string `pulumi:"value"`
}

// TrafficManagerAzureEndpointCustomHeaderInput is an input type that accepts TrafficManagerAzureEndpointCustomHeaderArgs and TrafficManagerAzureEndpointCustomHeaderOutput values.
// You can construct a concrete instance of `TrafficManagerAzureEndpointCustomHeaderInput` via:
//
//	TrafficManagerAzureEndpointCustomHeaderArgs{...}
type TrafficManagerAzureEndpointCustomHeaderInput interface {
	pulumi.Input

	ToTrafficManagerAzureEndpointCustomHeaderOutput() TrafficManagerAzureEndpointCustomHeaderOutput
	ToTrafficManagerAzureEndpointCustomHeaderOutputWithContext(context.Context) TrafficManagerAzureEndpointCustomHeaderOutput
}

type TrafficManagerAzureEndpointCustomHeaderArgs struct {
	// The name of the custom header.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of custom header. Applicable for HTTP and HTTPS protocol.
	Value pulumi.StringInput `pulumi:"value"`
}

func (TrafficManagerAzureEndpointCustomHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficManagerAzureEndpointCustomHeader)(nil)).Elem()
}

func (i TrafficManagerAzureEndpointCustomHeaderArgs) ToTrafficManagerAzureEndpointCustomHeaderOutput() TrafficManagerAzureEndpointCustomHeaderOutput {
	return i.ToTrafficManagerAzureEndpointCustomHeaderOutputWithContext(context.Background())
}

func (i TrafficManagerAzureEndpointCustomHeaderArgs) ToTrafficManagerAzureEndpointCustomHeaderOutputWithContext(ctx context.Context) TrafficManagerAzureEndpointCustomHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficManagerAzureEndpointCustomHeaderOutput)
}

// TrafficManagerAzureEndpointCustomHeaderArrayInput is an input type that accepts TrafficManagerAzureEndpointCustomHeaderArray and TrafficManagerAzureEndpointCustomHeaderArrayOutput values.
// You can construct a concrete instance of `TrafficManagerAzureEndpointCustomHeaderArrayInput` via:
//
//	TrafficManagerAzureEndpointCustomHeaderArray{ TrafficManagerAzureEndpointCustomHeaderArgs{...} }
type TrafficManagerAzureEndpointCustomHeaderArrayInput interface {
	pulumi.Input

	ToTrafficManagerAzureEndpointCustomHeaderArrayOutput() TrafficManagerAzureEndpointCustomHeaderArrayOutput
	ToTrafficManagerAzureEndpointCustomHeaderArrayOutputWithContext(context.Context) TrafficManagerAzureEndpointCustomHeaderArrayOutput
}

type TrafficManagerAzureEndpointCustomHeaderArray []TrafficManagerAzureEndpointCustomHeaderInput

func (TrafficManagerAzureEndpointCustomHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficManagerAzureEndpointCustomHeader)(nil)).Elem()
}

func (i TrafficManagerAzureEndpointCustomHeaderArray) ToTrafficManagerAzureEndpointCustomHeaderArrayOutput() TrafficManagerAzureEndpointCustomHeaderArrayOutput {
	return i.ToTrafficManagerAzureEndpointCustomHeaderArrayOutputWithContext(context.Background())
}

func (i TrafficManagerAzureEndpointCustomHeaderArray) ToTrafficManagerAzureEndpointCustomHeaderArrayOutputWithContext(ctx context.Context) TrafficManagerAzureEndpointCustomHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficManagerAzureEndpointCustomHeaderArrayOutput)
}

type TrafficManagerAzureEndpointCustomHeaderOutput struct{ *pulumi.OutputState }

func (TrafficManagerAzureEndpointCustomHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficManagerAzureEndpointCustomHeader)(nil)).Elem()
}

func (o TrafficManagerAzureEndpointCustomHeaderOutput) ToTrafficManagerAzureEndpointCustomHeaderOutput() TrafficManagerAzureEndpointCustomHeaderOutput {
	return o
}

func (o TrafficManagerAzureEndpointCustomHeaderOutput) ToTrafficManagerAzureEndpointCustomHeaderOutputWithContext(ctx context.Context) TrafficManagerAzureEndpointCustomHeaderOutput {
	return o
}

// The name of the custom header.
func (o TrafficManagerAzureEndpointCustomHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficManagerAzureEndpointCustomHeader) string { return v.Name }).(pulumi.StringOutput)
}

// The value of custom header. Applicable for HTTP and HTTPS protocol.
func (o TrafficManagerAzureEndpointCustomHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficManagerAzureEndpointCustomHeader) string { return v.Value }).(pulumi.StringOutput)
}

type TrafficManagerAzureEndpointCustomHeaderArrayOutput struct{ *pulumi.OutputState }

func (TrafficManagerAzureEndpointCustomHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficManagerAzureEndpointCustomHeader)(nil)).Elem()
}

func (o TrafficManagerAzureEndpointCustomHeaderArrayOutput) ToTrafficManagerAzureEndpointCustomHeaderArrayOutput() TrafficManagerAzureEndpointCustomHeaderArrayOutput {
	return o
}

func (o TrafficManagerAzureEndpointCustomHeaderArrayOutput) ToTrafficManagerAzureEndpointCustomHeaderArrayOutputWithContext(ctx context.Context) TrafficManagerAzureEndpointCustomHeaderArrayOutput {
	return o
}

func (o TrafficManagerAzureEndpointCustomHeaderArrayOutput) Index(i pulumi.IntInput) TrafficManagerAzureEndpointCustomHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficManagerAzureEndpointCustomHeader {
		return vs[0].([]TrafficManagerAzureEndpointCustomHeader)[vs[1].(int)]
	}).(TrafficManagerAzureEndpointCustomHeaderOutput)
}

type TrafficManagerAzureEndpointSubnet struct {
	// The first IP Address in this subnet.
	First string `pulumi:"first"`
	// The last IP Address in this subnet.
	Last *string `pulumi:"last"`
	// The block size (number of leading bits in the subnet mask).
	Scope *int `pulumi:"scope"`
}

// TrafficManagerAzureEndpointSubnetInput is an input type that accepts TrafficManagerAzureEndpointSubnetArgs and TrafficManagerAzureEndpointSubnetOutput values.
// You can construct a concrete instance of `TrafficManagerAzureEndpointSubnetInput` via:
//
//	TrafficManagerAzureEndpointSubnetArgs{...}
type TrafficManagerAzureEndpointSubnetInput interface {
	pulumi.Input

	ToTrafficManagerAzureEndpointSubnetOutput() TrafficManagerAzureEndpointSubnetOutput
	ToTrafficManagerAzureEndpointSubnetOutputWithContext(context.Context) TrafficManagerAzureEndpointSubnetOutput
}

type TrafficManagerAzureEndpointSubnetArgs struct {
	// The first IP Address in this subnet.
	First pulumi.StringInput `pulumi:"first"`
	// The last IP Address in this subnet.
	Last pulumi.StringPtrInput `pulumi:"last"`
	// The block size (number of leading bits in the subnet mask).
	Scope pulumi.IntPtrInput `pulumi:"scope"`
}

func (TrafficManagerAzureEndpointSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficManagerAzureEndpointSubnet)(nil)).Elem()
}

func (i TrafficManagerAzureEndpointSubnetArgs) ToTrafficManagerAzureEndpointSubnetOutput() TrafficManagerAzureEndpointSubnetOutput {
	return i.ToTrafficManagerAzureEndpointSubnetOutputWithContext(context.Background())
}

func (i TrafficManagerAzureEndpointSubnetArgs) ToTrafficManagerAzureEndpointSubnetOutputWithContext(ctx context.Context) TrafficManagerAzureEndpointSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficManagerAzureEndpointSubnetOutput)
}

// TrafficManagerAzureEndpointSubnetArrayInput is an input type that accepts TrafficManagerAzureEndpointSubnetArray and TrafficManagerAzureEndpointSubnetArrayOutput values.
// You can construct a concrete instance of `TrafficManagerAzureEndpointSubnetArrayInput` via:
//
//	TrafficManagerAzureEndpointSubnetArray{ TrafficManagerAzureEndpointSubnetArgs{...} }
type TrafficManagerAzureEndpointSubnetArrayInput interface {
	pulumi.Input

	ToTrafficManagerAzureEndpointSubnetArrayOutput() TrafficManagerAzureEndpointSubnetArrayOutput
	ToTrafficManagerAzureEndpointSubnetArrayOutputWithContext(context.Context) TrafficManagerAzureEndpointSubnetArrayOutput
}

type TrafficManagerAzureEndpointSubnetArray []TrafficManagerAzureEndpointSubnetInput

func (TrafficManagerAzureEndpointSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficManagerAzureEndpointSubnet)(nil)).Elem()
}

func (i TrafficManagerAzureEndpointSubnetArray) ToTrafficManagerAzureEndpointSubnetArrayOutput() TrafficManagerAzureEndpointSubnetArrayOutput {
	return i.ToTrafficManagerAzureEndpointSubnetArrayOutputWithContext(context.Background())
}

func (i TrafficManagerAzureEndpointSubnetArray) ToTrafficManagerAzureEndpointSubnetArrayOutputWithContext(ctx context.Context) TrafficManagerAzureEndpointSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficManagerAzureEndpointSubnetArrayOutput)
}

type TrafficManagerAzureEndpointSubnetOutput struct{ *pulumi.OutputState }

func (TrafficManagerAzureEndpointSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficManagerAzureEndpointSubnet)(nil)).Elem()
}

func (o TrafficManagerAzureEndpointSubnetOutput) ToTrafficManagerAzureEndpointSubnetOutput() TrafficManagerAzureEndpointSubnetOutput {
	return o
}

func (o TrafficManagerAzureEndpointSubnetOutput) ToTrafficManagerAzureEndpointSubnetOutputWithContext(ctx context.Context) TrafficManagerAzureEndpointSubnetOutput {
	return o
}

// The first IP Address in this subnet.
func (o TrafficManagerAzureEndpointSubnetOutput) First() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficManagerAzureEndpointSubnet) string { return v.First }).(pulumi.StringOutput)
}

// The last IP Address in this subnet.
func (o TrafficManagerAzureEndpointSubnetOutput) Last() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficManagerAzureEndpointSubnet) *string { return v.Last }).(pulumi.StringPtrOutput)
}

// The block size (number of leading bits in the subnet mask).
func (o TrafficManagerAzureEndpointSubnetOutput) Scope() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficManagerAzureEndpointSubnet) *int { return v.Scope }).(pulumi.IntPtrOutput)
}

type TrafficManagerAzureEndpointSubnetArrayOutput struct{ *pulumi.OutputState }

func (TrafficManagerAzureEndpointSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficManagerAzureEndpointSubnet)(nil)).Elem()
}

func (o TrafficManagerAzureEndpointSubnetArrayOutput) ToTrafficManagerAzureEndpointSubnetArrayOutput() TrafficManagerAzureEndpointSubnetArrayOutput {
	return o
}

func (o TrafficManagerAzureEndpointSubnetArrayOutput) ToTrafficManagerAzureEndpointSubnetArrayOutputWithContext(ctx context.Context) TrafficManagerAzureEndpointSubnetArrayOutput {
	return o
}

func (o TrafficManagerAzureEndpointSubnetArrayOutput) Index(i pulumi.IntInput) TrafficManagerAzureEndpointSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficManagerAzureEndpointSubnet {
		return vs[0].([]TrafficManagerAzureEndpointSubnet)[vs[1].(int)]
	}).(TrafficManagerAzureEndpointSubnetOutput)
}

type TrafficManagerExternalEndpointCustomHeader struct {
	// The name of the custom header.
	Name string `pulumi:"name"`
	// The value of custom header. Applicable for HTTP and HTTPS protocol.
	Value string `pulumi:"value"`
}

// TrafficManagerExternalEndpointCustomHeaderInput is an input type that accepts TrafficManagerExternalEndpointCustomHeaderArgs and TrafficManagerExternalEndpointCustomHeaderOutput values.
// You can construct a concrete instance of `TrafficManagerExternalEndpointCustomHeaderInput` via:
//
//	TrafficManagerExternalEndpointCustomHeaderArgs{...}
type TrafficManagerExternalEndpointCustomHeaderInput interface {
	pulumi.Input

	ToTrafficManagerExternalEndpointCustomHeaderOutput() TrafficManagerExternalEndpointCustomHeaderOutput
	ToTrafficManagerExternalEndpointCustomHeaderOutputWithContext(context.Context) TrafficManagerExternalEndpointCustomHeaderOutput
}

type TrafficManagerExternalEndpointCustomHeaderArgs struct {
	// The name of the custom header.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of custom header. Applicable for HTTP and HTTPS protocol.
	Value pulumi.StringInput `pulumi:"value"`
}

func (TrafficManagerExternalEndpointCustomHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficManagerExternalEndpointCustomHeader)(nil)).Elem()
}

func (i TrafficManagerExternalEndpointCustomHeaderArgs) ToTrafficManagerExternalEndpointCustomHeaderOutput() TrafficManagerExternalEndpointCustomHeaderOutput {
	return i.ToTrafficManagerExternalEndpointCustomHeaderOutputWithContext(context.Background())
}

func (i TrafficManagerExternalEndpointCustomHeaderArgs) ToTrafficManagerExternalEndpointCustomHeaderOutputWithContext(ctx context.Context) TrafficManagerExternalEndpointCustomHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficManagerExternalEndpointCustomHeaderOutput)
}

// TrafficManagerExternalEndpointCustomHeaderArrayInput is an input type that accepts TrafficManagerExternalEndpointCustomHeaderArray and TrafficManagerExternalEndpointCustomHeaderArrayOutput values.
// You can construct a concrete instance of `TrafficManagerExternalEndpointCustomHeaderArrayInput` via:
//
//	TrafficManagerExternalEndpointCustomHeaderArray{ TrafficManagerExternalEndpointCustomHeaderArgs{...} }
type TrafficManagerExternalEndpointCustomHeaderArrayInput interface {
	pulumi.Input

	ToTrafficManagerExternalEndpointCustomHeaderArrayOutput() TrafficManagerExternalEndpointCustomHeaderArrayOutput
	ToTrafficManagerExternalEndpointCustomHeaderArrayOutputWithContext(context.Context) TrafficManagerExternalEndpointCustomHeaderArrayOutput
}

type TrafficManagerExternalEndpointCustomHeaderArray []TrafficManagerExternalEndpointCustomHeaderInput

func (TrafficManagerExternalEndpointCustomHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficManagerExternalEndpointCustomHeader)(nil)).Elem()
}

func (i TrafficManagerExternalEndpointCustomHeaderArray) ToTrafficManagerExternalEndpointCustomHeaderArrayOutput() TrafficManagerExternalEndpointCustomHeaderArrayOutput {
	return i.ToTrafficManagerExternalEndpointCustomHeaderArrayOutputWithContext(context.Background())
}

func (i TrafficManagerExternalEndpointCustomHeaderArray) ToTrafficManagerExternalEndpointCustomHeaderArrayOutputWithContext(ctx context.Context) TrafficManagerExternalEndpointCustomHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficManagerExternalEndpointCustomHeaderArrayOutput)
}

type TrafficManagerExternalEndpointCustomHeaderOutput struct{ *pulumi.OutputState }

func (TrafficManagerExternalEndpointCustomHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficManagerExternalEndpointCustomHeader)(nil)).Elem()
}

func (o TrafficManagerExternalEndpointCustomHeaderOutput) ToTrafficManagerExternalEndpointCustomHeaderOutput() TrafficManagerExternalEndpointCustomHeaderOutput {
	return o
}

func (o TrafficManagerExternalEndpointCustomHeaderOutput) ToTrafficManagerExternalEndpointCustomHeaderOutputWithContext(ctx context.Context) TrafficManagerExternalEndpointCustomHeaderOutput {
	return o
}

// The name of the custom header.
func (o TrafficManagerExternalEndpointCustomHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficManagerExternalEndpointCustomHeader) string { return v.Name }).(pulumi.StringOutput)
}

// The value of custom header. Applicable for HTTP and HTTPS protocol.
func (o TrafficManagerExternalEndpointCustomHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficManagerExternalEndpointCustomHeader) string { return v.Value }).(pulumi.StringOutput)
}

type TrafficManagerExternalEndpointCustomHeaderArrayOutput struct{ *pulumi.OutputState }

func (TrafficManagerExternalEndpointCustomHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficManagerExternalEndpointCustomHeader)(nil)).Elem()
}

func (o TrafficManagerExternalEndpointCustomHeaderArrayOutput) ToTrafficManagerExternalEndpointCustomHeaderArrayOutput() TrafficManagerExternalEndpointCustomHeaderArrayOutput {
	return o
}

func (o TrafficManagerExternalEndpointCustomHeaderArrayOutput) ToTrafficManagerExternalEndpointCustomHeaderArrayOutputWithContext(ctx context.Context) TrafficManagerExternalEndpointCustomHeaderArrayOutput {
	return o
}

func (o TrafficManagerExternalEndpointCustomHeaderArrayOutput) Index(i pulumi.IntInput) TrafficManagerExternalEndpointCustomHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficManagerExternalEndpointCustomHeader {
		return vs[0].([]TrafficManagerExternalEndpointCustomHeader)[vs[1].(int)]
	}).(TrafficManagerExternalEndpointCustomHeaderOutput)
}

type TrafficManagerExternalEndpointSubnet struct {
	// The first IP Address in this subnet.
	First string `pulumi:"first"`
	// The last IP Address in this subnet.
	Last *string `pulumi:"last"`
	// The block size (number of leading bits in the subnet mask).
	Scope *int `pulumi:"scope"`
}

// TrafficManagerExternalEndpointSubnetInput is an input type that accepts TrafficManagerExternalEndpointSubnetArgs and TrafficManagerExternalEndpointSubnetOutput values.
// You can construct a concrete instance of `TrafficManagerExternalEndpointSubnetInput` via:
//
//	TrafficManagerExternalEndpointSubnetArgs{...}
type TrafficManagerExternalEndpointSubnetInput interface {
	pulumi.Input

	ToTrafficManagerExternalEndpointSubnetOutput() TrafficManagerExternalEndpointSubnetOutput
	ToTrafficManagerExternalEndpointSubnetOutputWithContext(context.Context) TrafficManagerExternalEndpointSubnetOutput
}

type TrafficManagerExternalEndpointSubnetArgs struct {
	// The first IP Address in this subnet.
	First pulumi.StringInput `pulumi:"first"`
	// The last IP Address in this subnet.
	Last pulumi.StringPtrInput `pulumi:"last"`
	// The block size (number of leading bits in the subnet mask).
	Scope pulumi.IntPtrInput `pulumi:"scope"`
}

func (TrafficManagerExternalEndpointSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficManagerExternalEndpointSubnet)(nil)).Elem()
}

func (i TrafficManagerExternalEndpointSubnetArgs) ToTrafficManagerExternalEndpointSubnetOutput() TrafficManagerExternalEndpointSubnetOutput {
	return i.ToTrafficManagerExternalEndpointSubnetOutputWithContext(context.Background())
}

func (i TrafficManagerExternalEndpointSubnetArgs) ToTrafficManagerExternalEndpointSubnetOutputWithContext(ctx context.Context) TrafficManagerExternalEndpointSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficManagerExternalEndpointSubnetOutput)
}

// TrafficManagerExternalEndpointSubnetArrayInput is an input type that accepts TrafficManagerExternalEndpointSubnetArray and TrafficManagerExternalEndpointSubnetArrayOutput values.
// You can construct a concrete instance of `TrafficManagerExternalEndpointSubnetArrayInput` via:
//
//	TrafficManagerExternalEndpointSubnetArray{ TrafficManagerExternalEndpointSubnetArgs{...} }
type TrafficManagerExternalEndpointSubnetArrayInput interface {
	pulumi.Input

	ToTrafficManagerExternalEndpointSubnetArrayOutput() TrafficManagerExternalEndpointSubnetArrayOutput
	ToTrafficManagerExternalEndpointSubnetArrayOutputWithContext(context.Context) TrafficManagerExternalEndpointSubnetArrayOutput
}

type TrafficManagerExternalEndpointSubnetArray []TrafficManagerExternalEndpointSubnetInput

func (TrafficManagerExternalEndpointSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficManagerExternalEndpointSubnet)(nil)).Elem()
}

func (i TrafficManagerExternalEndpointSubnetArray) ToTrafficManagerExternalEndpointSubnetArrayOutput() TrafficManagerExternalEndpointSubnetArrayOutput {
	return i.ToTrafficManagerExternalEndpointSubnetArrayOutputWithContext(context.Background())
}

func (i TrafficManagerExternalEndpointSubnetArray) ToTrafficManagerExternalEndpointSubnetArrayOutputWithContext(ctx context.Context) TrafficManagerExternalEndpointSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficManagerExternalEndpointSubnetArrayOutput)
}

type TrafficManagerExternalEndpointSubnetOutput struct{ *pulumi.OutputState }

func (TrafficManagerExternalEndpointSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficManagerExternalEndpointSubnet)(nil)).Elem()
}

func (o TrafficManagerExternalEndpointSubnetOutput) ToTrafficManagerExternalEndpointSubnetOutput() TrafficManagerExternalEndpointSubnetOutput {
	return o
}

func (o TrafficManagerExternalEndpointSubnetOutput) ToTrafficManagerExternalEndpointSubnetOutputWithContext(ctx context.Context) TrafficManagerExternalEndpointSubnetOutput {
	return o
}

// The first IP Address in this subnet.
func (o TrafficManagerExternalEndpointSubnetOutput) First() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficManagerExternalEndpointSubnet) string { return v.First }).(pulumi.StringOutput)
}

// The last IP Address in this subnet.
func (o TrafficManagerExternalEndpointSubnetOutput) Last() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficManagerExternalEndpointSubnet) *string { return v.Last }).(pulumi.StringPtrOutput)
}

// The block size (number of leading bits in the subnet mask).
func (o TrafficManagerExternalEndpointSubnetOutput) Scope() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficManagerExternalEndpointSubnet) *int { return v.Scope }).(pulumi.IntPtrOutput)
}

type TrafficManagerExternalEndpointSubnetArrayOutput struct{ *pulumi.OutputState }

func (TrafficManagerExternalEndpointSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficManagerExternalEndpointSubnet)(nil)).Elem()
}

func (o TrafficManagerExternalEndpointSubnetArrayOutput) ToTrafficManagerExternalEndpointSubnetArrayOutput() TrafficManagerExternalEndpointSubnetArrayOutput {
	return o
}

func (o TrafficManagerExternalEndpointSubnetArrayOutput) ToTrafficManagerExternalEndpointSubnetArrayOutputWithContext(ctx context.Context) TrafficManagerExternalEndpointSubnetArrayOutput {
	return o
}

func (o TrafficManagerExternalEndpointSubnetArrayOutput) Index(i pulumi.IntInput) TrafficManagerExternalEndpointSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficManagerExternalEndpointSubnet {
		return vs[0].([]TrafficManagerExternalEndpointSubnet)[vs[1].(int)]
	}).(TrafficManagerExternalEndpointSubnetOutput)
}

type TrafficManagerNestedEndpointCustomHeader struct {
	// The name of the custom header.
	Name string `pulumi:"name"`
	// The value of custom header. Applicable for HTTP and HTTPS protocol.
	Value string `pulumi:"value"`
}

// TrafficManagerNestedEndpointCustomHeaderInput is an input type that accepts TrafficManagerNestedEndpointCustomHeaderArgs and TrafficManagerNestedEndpointCustomHeaderOutput values.
// You can construct a concrete instance of `TrafficManagerNestedEndpointCustomHeaderInput` via:
//
//	TrafficManagerNestedEndpointCustomHeaderArgs{...}
type TrafficManagerNestedEndpointCustomHeaderInput interface {
	pulumi.Input

	ToTrafficManagerNestedEndpointCustomHeaderOutput() TrafficManagerNestedEndpointCustomHeaderOutput
	ToTrafficManagerNestedEndpointCustomHeaderOutputWithContext(context.Context) TrafficManagerNestedEndpointCustomHeaderOutput
}

type TrafficManagerNestedEndpointCustomHeaderArgs struct {
	// The name of the custom header.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of custom header. Applicable for HTTP and HTTPS protocol.
	Value pulumi.StringInput `pulumi:"value"`
}

func (TrafficManagerNestedEndpointCustomHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficManagerNestedEndpointCustomHeader)(nil)).Elem()
}

func (i TrafficManagerNestedEndpointCustomHeaderArgs) ToTrafficManagerNestedEndpointCustomHeaderOutput() TrafficManagerNestedEndpointCustomHeaderOutput {
	return i.ToTrafficManagerNestedEndpointCustomHeaderOutputWithContext(context.Background())
}

func (i TrafficManagerNestedEndpointCustomHeaderArgs) ToTrafficManagerNestedEndpointCustomHeaderOutputWithContext(ctx context.Context) TrafficManagerNestedEndpointCustomHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficManagerNestedEndpointCustomHeaderOutput)
}

// TrafficManagerNestedEndpointCustomHeaderArrayInput is an input type that accepts TrafficManagerNestedEndpointCustomHeaderArray and TrafficManagerNestedEndpointCustomHeaderArrayOutput values.
// You can construct a concrete instance of `TrafficManagerNestedEndpointCustomHeaderArrayInput` via:
//
//	TrafficManagerNestedEndpointCustomHeaderArray{ TrafficManagerNestedEndpointCustomHeaderArgs{...} }
type TrafficManagerNestedEndpointCustomHeaderArrayInput interface {
	pulumi.Input

	ToTrafficManagerNestedEndpointCustomHeaderArrayOutput() TrafficManagerNestedEndpointCustomHeaderArrayOutput
	ToTrafficManagerNestedEndpointCustomHeaderArrayOutputWithContext(context.Context) TrafficManagerNestedEndpointCustomHeaderArrayOutput
}

type TrafficManagerNestedEndpointCustomHeaderArray []TrafficManagerNestedEndpointCustomHeaderInput

func (TrafficManagerNestedEndpointCustomHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficManagerNestedEndpointCustomHeader)(nil)).Elem()
}

func (i TrafficManagerNestedEndpointCustomHeaderArray) ToTrafficManagerNestedEndpointCustomHeaderArrayOutput() TrafficManagerNestedEndpointCustomHeaderArrayOutput {
	return i.ToTrafficManagerNestedEndpointCustomHeaderArrayOutputWithContext(context.Background())
}

func (i TrafficManagerNestedEndpointCustomHeaderArray) ToTrafficManagerNestedEndpointCustomHeaderArrayOutputWithContext(ctx context.Context) TrafficManagerNestedEndpointCustomHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficManagerNestedEndpointCustomHeaderArrayOutput)
}

type TrafficManagerNestedEndpointCustomHeaderOutput struct{ *pulumi.OutputState }

func (TrafficManagerNestedEndpointCustomHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficManagerNestedEndpointCustomHeader)(nil)).Elem()
}

func (o TrafficManagerNestedEndpointCustomHeaderOutput) ToTrafficManagerNestedEndpointCustomHeaderOutput() TrafficManagerNestedEndpointCustomHeaderOutput {
	return o
}

func (o TrafficManagerNestedEndpointCustomHeaderOutput) ToTrafficManagerNestedEndpointCustomHeaderOutputWithContext(ctx context.Context) TrafficManagerNestedEndpointCustomHeaderOutput {
	return o
}

// The name of the custom header.
func (o TrafficManagerNestedEndpointCustomHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficManagerNestedEndpointCustomHeader) string { return v.Name }).(pulumi.StringOutput)
}

// The value of custom header. Applicable for HTTP and HTTPS protocol.
func (o TrafficManagerNestedEndpointCustomHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficManagerNestedEndpointCustomHeader) string { return v.Value }).(pulumi.StringOutput)
}

type TrafficManagerNestedEndpointCustomHeaderArrayOutput struct{ *pulumi.OutputState }

func (TrafficManagerNestedEndpointCustomHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficManagerNestedEndpointCustomHeader)(nil)).Elem()
}

func (o TrafficManagerNestedEndpointCustomHeaderArrayOutput) ToTrafficManagerNestedEndpointCustomHeaderArrayOutput() TrafficManagerNestedEndpointCustomHeaderArrayOutput {
	return o
}

func (o TrafficManagerNestedEndpointCustomHeaderArrayOutput) ToTrafficManagerNestedEndpointCustomHeaderArrayOutputWithContext(ctx context.Context) TrafficManagerNestedEndpointCustomHeaderArrayOutput {
	return o
}

func (o TrafficManagerNestedEndpointCustomHeaderArrayOutput) Index(i pulumi.IntInput) TrafficManagerNestedEndpointCustomHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficManagerNestedEndpointCustomHeader {
		return vs[0].([]TrafficManagerNestedEndpointCustomHeader)[vs[1].(int)]
	}).(TrafficManagerNestedEndpointCustomHeaderOutput)
}

type TrafficManagerNestedEndpointSubnet struct {
	// The first IP Address in this subnet.
	First string `pulumi:"first"`
	// The last IP Address in this subnet.
	Last *string `pulumi:"last"`
	// The block size (number of leading bits in the subnet mask).
	Scope *int `pulumi:"scope"`
}

// TrafficManagerNestedEndpointSubnetInput is an input type that accepts TrafficManagerNestedEndpointSubnetArgs and TrafficManagerNestedEndpointSubnetOutput values.
// You can construct a concrete instance of `TrafficManagerNestedEndpointSubnetInput` via:
//
//	TrafficManagerNestedEndpointSubnetArgs{...}
type TrafficManagerNestedEndpointSubnetInput interface {
	pulumi.Input

	ToTrafficManagerNestedEndpointSubnetOutput() TrafficManagerNestedEndpointSubnetOutput
	ToTrafficManagerNestedEndpointSubnetOutputWithContext(context.Context) TrafficManagerNestedEndpointSubnetOutput
}

type TrafficManagerNestedEndpointSubnetArgs struct {
	// The first IP Address in this subnet.
	First pulumi.StringInput `pulumi:"first"`
	// The last IP Address in this subnet.
	Last pulumi.StringPtrInput `pulumi:"last"`
	// The block size (number of leading bits in the subnet mask).
	Scope pulumi.IntPtrInput `pulumi:"scope"`
}

func (TrafficManagerNestedEndpointSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficManagerNestedEndpointSubnet)(nil)).Elem()
}

func (i TrafficManagerNestedEndpointSubnetArgs) ToTrafficManagerNestedEndpointSubnetOutput() TrafficManagerNestedEndpointSubnetOutput {
	return i.ToTrafficManagerNestedEndpointSubnetOutputWithContext(context.Background())
}

func (i TrafficManagerNestedEndpointSubnetArgs) ToTrafficManagerNestedEndpointSubnetOutputWithContext(ctx context.Context) TrafficManagerNestedEndpointSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficManagerNestedEndpointSubnetOutput)
}

// TrafficManagerNestedEndpointSubnetArrayInput is an input type that accepts TrafficManagerNestedEndpointSubnetArray and TrafficManagerNestedEndpointSubnetArrayOutput values.
// You can construct a concrete instance of `TrafficManagerNestedEndpointSubnetArrayInput` via:
//
//	TrafficManagerNestedEndpointSubnetArray{ TrafficManagerNestedEndpointSubnetArgs{...} }
type TrafficManagerNestedEndpointSubnetArrayInput interface {
	pulumi.Input

	ToTrafficManagerNestedEndpointSubnetArrayOutput() TrafficManagerNestedEndpointSubnetArrayOutput
	ToTrafficManagerNestedEndpointSubnetArrayOutputWithContext(context.Context) TrafficManagerNestedEndpointSubnetArrayOutput
}

type TrafficManagerNestedEndpointSubnetArray []TrafficManagerNestedEndpointSubnetInput

func (TrafficManagerNestedEndpointSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficManagerNestedEndpointSubnet)(nil)).Elem()
}

func (i TrafficManagerNestedEndpointSubnetArray) ToTrafficManagerNestedEndpointSubnetArrayOutput() TrafficManagerNestedEndpointSubnetArrayOutput {
	return i.ToTrafficManagerNestedEndpointSubnetArrayOutputWithContext(context.Background())
}

func (i TrafficManagerNestedEndpointSubnetArray) ToTrafficManagerNestedEndpointSubnetArrayOutputWithContext(ctx context.Context) TrafficManagerNestedEndpointSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficManagerNestedEndpointSubnetArrayOutput)
}

type TrafficManagerNestedEndpointSubnetOutput struct{ *pulumi.OutputState }

func (TrafficManagerNestedEndpointSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficManagerNestedEndpointSubnet)(nil)).Elem()
}

func (o TrafficManagerNestedEndpointSubnetOutput) ToTrafficManagerNestedEndpointSubnetOutput() TrafficManagerNestedEndpointSubnetOutput {
	return o
}

func (o TrafficManagerNestedEndpointSubnetOutput) ToTrafficManagerNestedEndpointSubnetOutputWithContext(ctx context.Context) TrafficManagerNestedEndpointSubnetOutput {
	return o
}

// The first IP Address in this subnet.
func (o TrafficManagerNestedEndpointSubnetOutput) First() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficManagerNestedEndpointSubnet) string { return v.First }).(pulumi.StringOutput)
}

// The last IP Address in this subnet.
func (o TrafficManagerNestedEndpointSubnetOutput) Last() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficManagerNestedEndpointSubnet) *string { return v.Last }).(pulumi.StringPtrOutput)
}

// The block size (number of leading bits in the subnet mask).
func (o TrafficManagerNestedEndpointSubnetOutput) Scope() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficManagerNestedEndpointSubnet) *int { return v.Scope }).(pulumi.IntPtrOutput)
}

type TrafficManagerNestedEndpointSubnetArrayOutput struct{ *pulumi.OutputState }

func (TrafficManagerNestedEndpointSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficManagerNestedEndpointSubnet)(nil)).Elem()
}

func (o TrafficManagerNestedEndpointSubnetArrayOutput) ToTrafficManagerNestedEndpointSubnetArrayOutput() TrafficManagerNestedEndpointSubnetArrayOutput {
	return o
}

func (o TrafficManagerNestedEndpointSubnetArrayOutput) ToTrafficManagerNestedEndpointSubnetArrayOutputWithContext(ctx context.Context) TrafficManagerNestedEndpointSubnetArrayOutput {
	return o
}

func (o TrafficManagerNestedEndpointSubnetArrayOutput) Index(i pulumi.IntInput) TrafficManagerNestedEndpointSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficManagerNestedEndpointSubnet {
		return vs[0].([]TrafficManagerNestedEndpointSubnet)[vs[1].(int)]
	}).(TrafficManagerNestedEndpointSubnetOutput)
}

type TrafficManagerProfileDnsConfig struct {
	// The relative domain name, this is combined with the domain name used by Traffic Manager to form the FQDN which is exported as documented below. Changing this forces a new resource to be created.
	RelativeName string `pulumi:"relativeName"`
	// The TTL value of the Profile used by Local DNS resolvers and clients.
	Ttl int `pulumi:"ttl"`
}

// TrafficManagerProfileDnsConfigInput is an input type that accepts TrafficManagerProfileDnsConfigArgs and TrafficManagerProfileDnsConfigOutput values.
// You can construct a concrete instance of `TrafficManagerProfileDnsConfigInput` via:
//
//	TrafficManagerProfileDnsConfigArgs{...}
type TrafficManagerProfileDnsConfigInput interface {
	pulumi.Input

	ToTrafficManagerProfileDnsConfigOutput() TrafficManagerProfileDnsConfigOutput
	ToTrafficManagerProfileDnsConfigOutputWithContext(context.Context) TrafficManagerProfileDnsConfigOutput
}

type TrafficManagerProfileDnsConfigArgs struct {
	// The relative domain name, this is combined with the domain name used by Traffic Manager to form the FQDN which is exported as documented below. Changing this forces a new resource to be created.
	RelativeName pulumi.StringInput `pulumi:"relativeName"`
	// The TTL value of the Profile used by Local DNS resolvers and clients.
	Ttl pulumi.IntInput `pulumi:"ttl"`
}

func (TrafficManagerProfileDnsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficManagerProfileDnsConfig)(nil)).Elem()
}

func (i TrafficManagerProfileDnsConfigArgs) ToTrafficManagerProfileDnsConfigOutput() TrafficManagerProfileDnsConfigOutput {
	return i.ToTrafficManagerProfileDnsConfigOutputWithContext(context.Background())
}

func (i TrafficManagerProfileDnsConfigArgs) ToTrafficManagerProfileDnsConfigOutputWithContext(ctx context.Context) TrafficManagerProfileDnsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficManagerProfileDnsConfigOutput)
}

func (i TrafficManagerProfileDnsConfigArgs) ToTrafficManagerProfileDnsConfigPtrOutput() TrafficManagerProfileDnsConfigPtrOutput {
	return i.ToTrafficManagerProfileDnsConfigPtrOutputWithContext(context.Background())
}

func (i TrafficManagerProfileDnsConfigArgs) ToTrafficManagerProfileDnsConfigPtrOutputWithContext(ctx context.Context) TrafficManagerProfileDnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficManagerProfileDnsConfigOutput).ToTrafficManagerProfileDnsConfigPtrOutputWithContext(ctx)
}

// TrafficManagerProfileDnsConfigPtrInput is an input type that accepts TrafficManagerProfileDnsConfigArgs, TrafficManagerProfileDnsConfigPtr and TrafficManagerProfileDnsConfigPtrOutput values.
// You can construct a concrete instance of `TrafficManagerProfileDnsConfigPtrInput` via:
//
//	        TrafficManagerProfileDnsConfigArgs{...}
//
//	or:
//
//	        nil
type TrafficManagerProfileDnsConfigPtrInput interface {
	pulumi.Input

	ToTrafficManagerProfileDnsConfigPtrOutput() TrafficManagerProfileDnsConfigPtrOutput
	ToTrafficManagerProfileDnsConfigPtrOutputWithContext(context.Context) TrafficManagerProfileDnsConfigPtrOutput
}

type trafficManagerProfileDnsConfigPtrType TrafficManagerProfileDnsConfigArgs

func TrafficManagerProfileDnsConfigPtr(v *TrafficManagerProfileDnsConfigArgs) TrafficManagerProfileDnsConfigPtrInput {
	return (*trafficManagerProfileDnsConfigPtrType)(v)
}

func (*trafficManagerProfileDnsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficManagerProfileDnsConfig)(nil)).Elem()
}

func (i *trafficManagerProfileDnsConfigPtrType) ToTrafficManagerProfileDnsConfigPtrOutput() TrafficManagerProfileDnsConfigPtrOutput {
	return i.ToTrafficManagerProfileDnsConfigPtrOutputWithContext(context.Background())
}

func (i *trafficManagerProfileDnsConfigPtrType) ToTrafficManagerProfileDnsConfigPtrOutputWithContext(ctx context.Context) TrafficManagerProfileDnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficManagerProfileDnsConfigPtrOutput)
}

type TrafficManagerProfileDnsConfigOutput struct{ *pulumi.OutputState }

func (TrafficManagerProfileDnsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficManagerProfileDnsConfig)(nil)).Elem()
}

func (o TrafficManagerProfileDnsConfigOutput) ToTrafficManagerProfileDnsConfigOutput() TrafficManagerProfileDnsConfigOutput {
	return o
}

func (o TrafficManagerProfileDnsConfigOutput) ToTrafficManagerProfileDnsConfigOutputWithContext(ctx context.Context) TrafficManagerProfileDnsConfigOutput {
	return o
}

func (o TrafficManagerProfileDnsConfigOutput) ToTrafficManagerProfileDnsConfigPtrOutput() TrafficManagerProfileDnsConfigPtrOutput {
	return o.ToTrafficManagerProfileDnsConfigPtrOutputWithContext(context.Background())
}

func (o TrafficManagerProfileDnsConfigOutput) ToTrafficManagerProfileDnsConfigPtrOutputWithContext(ctx context.Context) TrafficManagerProfileDnsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TrafficManagerProfileDnsConfig) *TrafficManagerProfileDnsConfig {
		return &v
	}).(TrafficManagerProfileDnsConfigPtrOutput)
}

// The relative domain name, this is combined with the domain name used by Traffic Manager to form the FQDN which is exported as documented below. Changing this forces a new resource to be created.
func (o TrafficManagerProfileDnsConfigOutput) RelativeName() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficManagerProfileDnsConfig) string { return v.RelativeName }).(pulumi.StringOutput)
}

// The TTL value of the Profile used by Local DNS resolvers and clients.
func (o TrafficManagerProfileDnsConfigOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v TrafficManagerProfileDnsConfig) int { return v.Ttl }).(pulumi.IntOutput)
}

type TrafficManagerProfileDnsConfigPtrOutput struct{ *pulumi.OutputState }

func (TrafficManagerProfileDnsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficManagerProfileDnsConfig)(nil)).Elem()
}

func (o TrafficManagerProfileDnsConfigPtrOutput) ToTrafficManagerProfileDnsConfigPtrOutput() TrafficManagerProfileDnsConfigPtrOutput {
	return o
}

func (o TrafficManagerProfileDnsConfigPtrOutput) ToTrafficManagerProfileDnsConfigPtrOutputWithContext(ctx context.Context) TrafficManagerProfileDnsConfigPtrOutput {
	return o
}

func (o TrafficManagerProfileDnsConfigPtrOutput) Elem() TrafficManagerProfileDnsConfigOutput {
	return o.ApplyT(func(v *TrafficManagerProfileDnsConfig) TrafficManagerProfileDnsConfig {
		if v != nil {
			return *v
		}
		var ret TrafficManagerProfileDnsConfig
		return ret
	}).(TrafficManagerProfileDnsConfigOutput)
}

// The relative domain name, this is combined with the domain name used by Traffic Manager to form the FQDN which is exported as documented below. Changing this forces a new resource to be created.
func (o TrafficManagerProfileDnsConfigPtrOutput) RelativeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficManagerProfileDnsConfig) *string {
		if v == nil {
			return nil
		}
		return &v.RelativeName
	}).(pulumi.StringPtrOutput)
}

// The TTL value of the Profile used by Local DNS resolvers and clients.
func (o TrafficManagerProfileDnsConfigPtrOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TrafficManagerProfileDnsConfig) *int {
		if v == nil {
			return nil
		}
		return &v.Ttl
	}).(pulumi.IntPtrOutput)
}

type TrafficManagerProfileMonitorConfig struct {
	// One or more `customHeader` blocks as defined below.
	CustomHeaders []TrafficManagerProfileMonitorConfigCustomHeader `pulumi:"customHeaders"`
	// A list of status code ranges in the format of `100-101`.
	ExpectedStatusCodeRanges []string `pulumi:"expectedStatusCodeRanges"`
	// The interval used to check the endpoint health from a Traffic Manager probing agent. You can specify two values here: `30` (normal probing) and `10` (fast probing). The default value is `30`.
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// The path used by the monitoring checks. Required when `protocol` is set to `HTTP` or `HTTPS` - cannot be set when `protocol` is set to `TCP`.
	Path *string `pulumi:"path"`
	// The port number used by the monitoring checks.
	Port int `pulumi:"port"`
	// The protocol used by the monitoring checks, supported values are `HTTP`, `HTTPS` and `TCP`.
	Protocol string `pulumi:"protocol"`
	// The amount of time the Traffic Manager probing agent should wait before considering that check a failure when a health check probe is sent to the endpoint. If `intervalInSeconds` is set to `30`, then `timeoutInSeconds` can be between `5` and `10`. The default value is `10`. If `intervalInSeconds` is set to `10`, then valid values are between `5` and `9` and `timeoutInSeconds` is required.
	TimeoutInSeconds *int `pulumi:"timeoutInSeconds"`
	// The number of failures a Traffic Manager probing agent tolerates before marking that endpoint as unhealthy. Valid values are between `0` and `9`. The default value is `3`
	ToleratedNumberOfFailures *int `pulumi:"toleratedNumberOfFailures"`
}

// TrafficManagerProfileMonitorConfigInput is an input type that accepts TrafficManagerProfileMonitorConfigArgs and TrafficManagerProfileMonitorConfigOutput values.
// You can construct a concrete instance of `TrafficManagerProfileMonitorConfigInput` via:
//
//	TrafficManagerProfileMonitorConfigArgs{...}
type TrafficManagerProfileMonitorConfigInput interface {
	pulumi.Input

	ToTrafficManagerProfileMonitorConfigOutput() TrafficManagerProfileMonitorConfigOutput
	ToTrafficManagerProfileMonitorConfigOutputWithContext(context.Context) TrafficManagerProfileMonitorConfigOutput
}

type TrafficManagerProfileMonitorConfigArgs struct {
	// One or more `customHeader` blocks as defined below.
	CustomHeaders TrafficManagerProfileMonitorConfigCustomHeaderArrayInput `pulumi:"customHeaders"`
	// A list of status code ranges in the format of `100-101`.
	ExpectedStatusCodeRanges pulumi.StringArrayInput `pulumi:"expectedStatusCodeRanges"`
	// The interval used to check the endpoint health from a Traffic Manager probing agent. You can specify two values here: `30` (normal probing) and `10` (fast probing). The default value is `30`.
	IntervalInSeconds pulumi.IntPtrInput `pulumi:"intervalInSeconds"`
	// The path used by the monitoring checks. Required when `protocol` is set to `HTTP` or `HTTPS` - cannot be set when `protocol` is set to `TCP`.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port number used by the monitoring checks.
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol used by the monitoring checks, supported values are `HTTP`, `HTTPS` and `TCP`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The amount of time the Traffic Manager probing agent should wait before considering that check a failure when a health check probe is sent to the endpoint. If `intervalInSeconds` is set to `30`, then `timeoutInSeconds` can be between `5` and `10`. The default value is `10`. If `intervalInSeconds` is set to `10`, then valid values are between `5` and `9` and `timeoutInSeconds` is required.
	TimeoutInSeconds pulumi.IntPtrInput `pulumi:"timeoutInSeconds"`
	// The number of failures a Traffic Manager probing agent tolerates before marking that endpoint as unhealthy. Valid values are between `0` and `9`. The default value is `3`
	ToleratedNumberOfFailures pulumi.IntPtrInput `pulumi:"toleratedNumberOfFailures"`
}

func (TrafficManagerProfileMonitorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficManagerProfileMonitorConfig)(nil)).Elem()
}

func (i TrafficManagerProfileMonitorConfigArgs) ToTrafficManagerProfileMonitorConfigOutput() TrafficManagerProfileMonitorConfigOutput {
	return i.ToTrafficManagerProfileMonitorConfigOutputWithContext(context.Background())
}

func (i TrafficManagerProfileMonitorConfigArgs) ToTrafficManagerProfileMonitorConfigOutputWithContext(ctx context.Context) TrafficManagerProfileMonitorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficManagerProfileMonitorConfigOutput)
}

func (i TrafficManagerProfileMonitorConfigArgs) ToTrafficManagerProfileMonitorConfigPtrOutput() TrafficManagerProfileMonitorConfigPtrOutput {
	return i.ToTrafficManagerProfileMonitorConfigPtrOutputWithContext(context.Background())
}

func (i TrafficManagerProfileMonitorConfigArgs) ToTrafficManagerProfileMonitorConfigPtrOutputWithContext(ctx context.Context) TrafficManagerProfileMonitorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficManagerProfileMonitorConfigOutput).ToTrafficManagerProfileMonitorConfigPtrOutputWithContext(ctx)
}

// TrafficManagerProfileMonitorConfigPtrInput is an input type that accepts TrafficManagerProfileMonitorConfigArgs, TrafficManagerProfileMonitorConfigPtr and TrafficManagerProfileMonitorConfigPtrOutput values.
// You can construct a concrete instance of `TrafficManagerProfileMonitorConfigPtrInput` via:
//
//	        TrafficManagerProfileMonitorConfigArgs{...}
//
//	or:
//
//	        nil
type TrafficManagerProfileMonitorConfigPtrInput interface {
	pulumi.Input

	ToTrafficManagerProfileMonitorConfigPtrOutput() TrafficManagerProfileMonitorConfigPtrOutput
	ToTrafficManagerProfileMonitorConfigPtrOutputWithContext(context.Context) TrafficManagerProfileMonitorConfigPtrOutput
}

type trafficManagerProfileMonitorConfigPtrType TrafficManagerProfileMonitorConfigArgs

func TrafficManagerProfileMonitorConfigPtr(v *TrafficManagerProfileMonitorConfigArgs) TrafficManagerProfileMonitorConfigPtrInput {
	return (*trafficManagerProfileMonitorConfigPtrType)(v)
}

func (*trafficManagerProfileMonitorConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficManagerProfileMonitorConfig)(nil)).Elem()
}

func (i *trafficManagerProfileMonitorConfigPtrType) ToTrafficManagerProfileMonitorConfigPtrOutput() TrafficManagerProfileMonitorConfigPtrOutput {
	return i.ToTrafficManagerProfileMonitorConfigPtrOutputWithContext(context.Background())
}

func (i *trafficManagerProfileMonitorConfigPtrType) ToTrafficManagerProfileMonitorConfigPtrOutputWithContext(ctx context.Context) TrafficManagerProfileMonitorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficManagerProfileMonitorConfigPtrOutput)
}

type TrafficManagerProfileMonitorConfigOutput struct{ *pulumi.OutputState }

func (TrafficManagerProfileMonitorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficManagerProfileMonitorConfig)(nil)).Elem()
}

func (o TrafficManagerProfileMonitorConfigOutput) ToTrafficManagerProfileMonitorConfigOutput() TrafficManagerProfileMonitorConfigOutput {
	return o
}

func (o TrafficManagerProfileMonitorConfigOutput) ToTrafficManagerProfileMonitorConfigOutputWithContext(ctx context.Context) TrafficManagerProfileMonitorConfigOutput {
	return o
}

func (o TrafficManagerProfileMonitorConfigOutput) ToTrafficManagerProfileMonitorConfigPtrOutput() TrafficManagerProfileMonitorConfigPtrOutput {
	return o.ToTrafficManagerProfileMonitorConfigPtrOutputWithContext(context.Background())
}

func (o TrafficManagerProfileMonitorConfigOutput) ToTrafficManagerProfileMonitorConfigPtrOutputWithContext(ctx context.Context) TrafficManagerProfileMonitorConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TrafficManagerProfileMonitorConfig) *TrafficManagerProfileMonitorConfig {
		return &v
	}).(TrafficManagerProfileMonitorConfigPtrOutput)
}

// One or more `customHeader` blocks as defined below.
func (o TrafficManagerProfileMonitorConfigOutput) CustomHeaders() TrafficManagerProfileMonitorConfigCustomHeaderArrayOutput {
	return o.ApplyT(func(v TrafficManagerProfileMonitorConfig) []TrafficManagerProfileMonitorConfigCustomHeader {
		return v.CustomHeaders
	}).(TrafficManagerProfileMonitorConfigCustomHeaderArrayOutput)
}

// A list of status code ranges in the format of `100-101`.
func (o TrafficManagerProfileMonitorConfigOutput) ExpectedStatusCodeRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TrafficManagerProfileMonitorConfig) []string { return v.ExpectedStatusCodeRanges }).(pulumi.StringArrayOutput)
}

// The interval used to check the endpoint health from a Traffic Manager probing agent. You can specify two values here: `30` (normal probing) and `10` (fast probing). The default value is `30`.
func (o TrafficManagerProfileMonitorConfigOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficManagerProfileMonitorConfig) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The path used by the monitoring checks. Required when `protocol` is set to `HTTP` or `HTTPS` - cannot be set when `protocol` is set to `TCP`.
func (o TrafficManagerProfileMonitorConfigOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficManagerProfileMonitorConfig) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port number used by the monitoring checks.
func (o TrafficManagerProfileMonitorConfigOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v TrafficManagerProfileMonitorConfig) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol used by the monitoring checks, supported values are `HTTP`, `HTTPS` and `TCP`.
func (o TrafficManagerProfileMonitorConfigOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficManagerProfileMonitorConfig) string { return v.Protocol }).(pulumi.StringOutput)
}

// The amount of time the Traffic Manager probing agent should wait before considering that check a failure when a health check probe is sent to the endpoint. If `intervalInSeconds` is set to `30`, then `timeoutInSeconds` can be between `5` and `10`. The default value is `10`. If `intervalInSeconds` is set to `10`, then valid values are between `5` and `9` and `timeoutInSeconds` is required.
func (o TrafficManagerProfileMonitorConfigOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficManagerProfileMonitorConfig) *int { return v.TimeoutInSeconds }).(pulumi.IntPtrOutput)
}

// The number of failures a Traffic Manager probing agent tolerates before marking that endpoint as unhealthy. Valid values are between `0` and `9`. The default value is `3`
func (o TrafficManagerProfileMonitorConfigOutput) ToleratedNumberOfFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficManagerProfileMonitorConfig) *int { return v.ToleratedNumberOfFailures }).(pulumi.IntPtrOutput)
}

type TrafficManagerProfileMonitorConfigPtrOutput struct{ *pulumi.OutputState }

func (TrafficManagerProfileMonitorConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficManagerProfileMonitorConfig)(nil)).Elem()
}

func (o TrafficManagerProfileMonitorConfigPtrOutput) ToTrafficManagerProfileMonitorConfigPtrOutput() TrafficManagerProfileMonitorConfigPtrOutput {
	return o
}

func (o TrafficManagerProfileMonitorConfigPtrOutput) ToTrafficManagerProfileMonitorConfigPtrOutputWithContext(ctx context.Context) TrafficManagerProfileMonitorConfigPtrOutput {
	return o
}

func (o TrafficManagerProfileMonitorConfigPtrOutput) Elem() TrafficManagerProfileMonitorConfigOutput {
	return o.ApplyT(func(v *TrafficManagerProfileMonitorConfig) TrafficManagerProfileMonitorConfig {
		if v != nil {
			return *v
		}
		var ret TrafficManagerProfileMonitorConfig
		return ret
	}).(TrafficManagerProfileMonitorConfigOutput)
}

// One or more `customHeader` blocks as defined below.
func (o TrafficManagerProfileMonitorConfigPtrOutput) CustomHeaders() TrafficManagerProfileMonitorConfigCustomHeaderArrayOutput {
	return o.ApplyT(func(v *TrafficManagerProfileMonitorConfig) []TrafficManagerProfileMonitorConfigCustomHeader {
		if v == nil {
			return nil
		}
		return v.CustomHeaders
	}).(TrafficManagerProfileMonitorConfigCustomHeaderArrayOutput)
}

// A list of status code ranges in the format of `100-101`.
func (o TrafficManagerProfileMonitorConfigPtrOutput) ExpectedStatusCodeRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TrafficManagerProfileMonitorConfig) []string {
		if v == nil {
			return nil
		}
		return v.ExpectedStatusCodeRanges
	}).(pulumi.StringArrayOutput)
}

// The interval used to check the endpoint health from a Traffic Manager probing agent. You can specify two values here: `30` (normal probing) and `10` (fast probing). The default value is `30`.
func (o TrafficManagerProfileMonitorConfigPtrOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TrafficManagerProfileMonitorConfig) *int {
		if v == nil {
			return nil
		}
		return v.IntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// The path used by the monitoring checks. Required when `protocol` is set to `HTTP` or `HTTPS` - cannot be set when `protocol` is set to `TCP`.
func (o TrafficManagerProfileMonitorConfigPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficManagerProfileMonitorConfig) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The port number used by the monitoring checks.
func (o TrafficManagerProfileMonitorConfigPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TrafficManagerProfileMonitorConfig) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// The protocol used by the monitoring checks, supported values are `HTTP`, `HTTPS` and `TCP`.
func (o TrafficManagerProfileMonitorConfigPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficManagerProfileMonitorConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

// The amount of time the Traffic Manager probing agent should wait before considering that check a failure when a health check probe is sent to the endpoint. If `intervalInSeconds` is set to `30`, then `timeoutInSeconds` can be between `5` and `10`. The default value is `10`. If `intervalInSeconds` is set to `10`, then valid values are between `5` and `9` and `timeoutInSeconds` is required.
func (o TrafficManagerProfileMonitorConfigPtrOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TrafficManagerProfileMonitorConfig) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

// The number of failures a Traffic Manager probing agent tolerates before marking that endpoint as unhealthy. Valid values are between `0` and `9`. The default value is `3`
func (o TrafficManagerProfileMonitorConfigPtrOutput) ToleratedNumberOfFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TrafficManagerProfileMonitorConfig) *int {
		if v == nil {
			return nil
		}
		return v.ToleratedNumberOfFailures
	}).(pulumi.IntPtrOutput)
}

type TrafficManagerProfileMonitorConfigCustomHeader struct {
	// The name of the custom header.
	Name string `pulumi:"name"`
	// The value of custom header. Applicable for HTTP and HTTPS protocol.
	Value string `pulumi:"value"`
}

// TrafficManagerProfileMonitorConfigCustomHeaderInput is an input type that accepts TrafficManagerProfileMonitorConfigCustomHeaderArgs and TrafficManagerProfileMonitorConfigCustomHeaderOutput values.
// You can construct a concrete instance of `TrafficManagerProfileMonitorConfigCustomHeaderInput` via:
//
//	TrafficManagerProfileMonitorConfigCustomHeaderArgs{...}
type TrafficManagerProfileMonitorConfigCustomHeaderInput interface {
	pulumi.Input

	ToTrafficManagerProfileMonitorConfigCustomHeaderOutput() TrafficManagerProfileMonitorConfigCustomHeaderOutput
	ToTrafficManagerProfileMonitorConfigCustomHeaderOutputWithContext(context.Context) TrafficManagerProfileMonitorConfigCustomHeaderOutput
}

type TrafficManagerProfileMonitorConfigCustomHeaderArgs struct {
	// The name of the custom header.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of custom header. Applicable for HTTP and HTTPS protocol.
	Value pulumi.StringInput `pulumi:"value"`
}

func (TrafficManagerProfileMonitorConfigCustomHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficManagerProfileMonitorConfigCustomHeader)(nil)).Elem()
}

func (i TrafficManagerProfileMonitorConfigCustomHeaderArgs) ToTrafficManagerProfileMonitorConfigCustomHeaderOutput() TrafficManagerProfileMonitorConfigCustomHeaderOutput {
	return i.ToTrafficManagerProfileMonitorConfigCustomHeaderOutputWithContext(context.Background())
}

func (i TrafficManagerProfileMonitorConfigCustomHeaderArgs) ToTrafficManagerProfileMonitorConfigCustomHeaderOutputWithContext(ctx context.Context) TrafficManagerProfileMonitorConfigCustomHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficManagerProfileMonitorConfigCustomHeaderOutput)
}

// TrafficManagerProfileMonitorConfigCustomHeaderArrayInput is an input type that accepts TrafficManagerProfileMonitorConfigCustomHeaderArray and TrafficManagerProfileMonitorConfigCustomHeaderArrayOutput values.
// You can construct a concrete instance of `TrafficManagerProfileMonitorConfigCustomHeaderArrayInput` via:
//
//	TrafficManagerProfileMonitorConfigCustomHeaderArray{ TrafficManagerProfileMonitorConfigCustomHeaderArgs{...} }
type TrafficManagerProfileMonitorConfigCustomHeaderArrayInput interface {
	pulumi.Input

	ToTrafficManagerProfileMonitorConfigCustomHeaderArrayOutput() TrafficManagerProfileMonitorConfigCustomHeaderArrayOutput
	ToTrafficManagerProfileMonitorConfigCustomHeaderArrayOutputWithContext(context.Context) TrafficManagerProfileMonitorConfigCustomHeaderArrayOutput
}

type TrafficManagerProfileMonitorConfigCustomHeaderArray []TrafficManagerProfileMonitorConfigCustomHeaderInput

func (TrafficManagerProfileMonitorConfigCustomHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficManagerProfileMonitorConfigCustomHeader)(nil)).Elem()
}

func (i TrafficManagerProfileMonitorConfigCustomHeaderArray) ToTrafficManagerProfileMonitorConfigCustomHeaderArrayOutput() TrafficManagerProfileMonitorConfigCustomHeaderArrayOutput {
	return i.ToTrafficManagerProfileMonitorConfigCustomHeaderArrayOutputWithContext(context.Background())
}

func (i TrafficManagerProfileMonitorConfigCustomHeaderArray) ToTrafficManagerProfileMonitorConfigCustomHeaderArrayOutputWithContext(ctx context.Context) TrafficManagerProfileMonitorConfigCustomHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficManagerProfileMonitorConfigCustomHeaderArrayOutput)
}

type TrafficManagerProfileMonitorConfigCustomHeaderOutput struct{ *pulumi.OutputState }

func (TrafficManagerProfileMonitorConfigCustomHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficManagerProfileMonitorConfigCustomHeader)(nil)).Elem()
}

func (o TrafficManagerProfileMonitorConfigCustomHeaderOutput) ToTrafficManagerProfileMonitorConfigCustomHeaderOutput() TrafficManagerProfileMonitorConfigCustomHeaderOutput {
	return o
}

func (o TrafficManagerProfileMonitorConfigCustomHeaderOutput) ToTrafficManagerProfileMonitorConfigCustomHeaderOutputWithContext(ctx context.Context) TrafficManagerProfileMonitorConfigCustomHeaderOutput {
	return o
}

// The name of the custom header.
func (o TrafficManagerProfileMonitorConfigCustomHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficManagerProfileMonitorConfigCustomHeader) string { return v.Name }).(pulumi.StringOutput)
}

// The value of custom header. Applicable for HTTP and HTTPS protocol.
func (o TrafficManagerProfileMonitorConfigCustomHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficManagerProfileMonitorConfigCustomHeader) string { return v.Value }).(pulumi.StringOutput)
}

type TrafficManagerProfileMonitorConfigCustomHeaderArrayOutput struct{ *pulumi.OutputState }

func (TrafficManagerProfileMonitorConfigCustomHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficManagerProfileMonitorConfigCustomHeader)(nil)).Elem()
}

func (o TrafficManagerProfileMonitorConfigCustomHeaderArrayOutput) ToTrafficManagerProfileMonitorConfigCustomHeaderArrayOutput() TrafficManagerProfileMonitorConfigCustomHeaderArrayOutput {
	return o
}

func (o TrafficManagerProfileMonitorConfigCustomHeaderArrayOutput) ToTrafficManagerProfileMonitorConfigCustomHeaderArrayOutputWithContext(ctx context.Context) TrafficManagerProfileMonitorConfigCustomHeaderArrayOutput {
	return o
}

func (o TrafficManagerProfileMonitorConfigCustomHeaderArrayOutput) Index(i pulumi.IntInput) TrafficManagerProfileMonitorConfigCustomHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficManagerProfileMonitorConfigCustomHeader {
		return vs[0].([]TrafficManagerProfileMonitorConfigCustomHeader)[vs[1].(int)]
	}).(TrafficManagerProfileMonitorConfigCustomHeaderOutput)
}

type VirtualHubConnectionRouting struct {
	// The ID of the route table associated with this Virtual Hub connection.
	AssociatedRouteTableId *string `pulumi:"associatedRouteTableId"`
	// The resource ID of the Route Map associated with this Routing Configuration for inbound learned routes.
	InboundRouteMapId *string `pulumi:"inboundRouteMapId"`
	// The resource ID of the Route Map associated with this Routing Configuration for outbound advertised routes.
	OutboundRouteMapId *string `pulumi:"outboundRouteMapId"`
	// A `propagatedRouteTable` block as defined below.
	PropagatedRouteTable *VirtualHubConnectionRoutingPropagatedRouteTable `pulumi:"propagatedRouteTable"`
	// The static VNet local route override criteria that is used to determine whether NVA in spoke VNet is bypassed for traffic with destination in spoke VNet. Possible values are `Contains` and `Equal`. Defaults to `Contains`. Changing this forces a new resource to be created.
	StaticVnetLocalRouteOverrideCriteria *string `pulumi:"staticVnetLocalRouteOverrideCriteria"`
	// A `staticVnetRoute` block as defined below.
	StaticVnetRoutes []VirtualHubConnectionRoutingStaticVnetRoute `pulumi:"staticVnetRoutes"`
}

// VirtualHubConnectionRoutingInput is an input type that accepts VirtualHubConnectionRoutingArgs and VirtualHubConnectionRoutingOutput values.
// You can construct a concrete instance of `VirtualHubConnectionRoutingInput` via:
//
//	VirtualHubConnectionRoutingArgs{...}
type VirtualHubConnectionRoutingInput interface {
	pulumi.Input

	ToVirtualHubConnectionRoutingOutput() VirtualHubConnectionRoutingOutput
	ToVirtualHubConnectionRoutingOutputWithContext(context.Context) VirtualHubConnectionRoutingOutput
}

type VirtualHubConnectionRoutingArgs struct {
	// The ID of the route table associated with this Virtual Hub connection.
	AssociatedRouteTableId pulumi.StringPtrInput `pulumi:"associatedRouteTableId"`
	// The resource ID of the Route Map associated with this Routing Configuration for inbound learned routes.
	InboundRouteMapId pulumi.StringPtrInput `pulumi:"inboundRouteMapId"`
	// The resource ID of the Route Map associated with this Routing Configuration for outbound advertised routes.
	OutboundRouteMapId pulumi.StringPtrInput `pulumi:"outboundRouteMapId"`
	// A `propagatedRouteTable` block as defined below.
	PropagatedRouteTable VirtualHubConnectionRoutingPropagatedRouteTablePtrInput `pulumi:"propagatedRouteTable"`
	// The static VNet local route override criteria that is used to determine whether NVA in spoke VNet is bypassed for traffic with destination in spoke VNet. Possible values are `Contains` and `Equal`. Defaults to `Contains`. Changing this forces a new resource to be created.
	StaticVnetLocalRouteOverrideCriteria pulumi.StringPtrInput `pulumi:"staticVnetLocalRouteOverrideCriteria"`
	// A `staticVnetRoute` block as defined below.
	StaticVnetRoutes VirtualHubConnectionRoutingStaticVnetRouteArrayInput `pulumi:"staticVnetRoutes"`
}

func (VirtualHubConnectionRoutingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubConnectionRouting)(nil)).Elem()
}

func (i VirtualHubConnectionRoutingArgs) ToVirtualHubConnectionRoutingOutput() VirtualHubConnectionRoutingOutput {
	return i.ToVirtualHubConnectionRoutingOutputWithContext(context.Background())
}

func (i VirtualHubConnectionRoutingArgs) ToVirtualHubConnectionRoutingOutputWithContext(ctx context.Context) VirtualHubConnectionRoutingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubConnectionRoutingOutput)
}

func (i VirtualHubConnectionRoutingArgs) ToVirtualHubConnectionRoutingPtrOutput() VirtualHubConnectionRoutingPtrOutput {
	return i.ToVirtualHubConnectionRoutingPtrOutputWithContext(context.Background())
}

func (i VirtualHubConnectionRoutingArgs) ToVirtualHubConnectionRoutingPtrOutputWithContext(ctx context.Context) VirtualHubConnectionRoutingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubConnectionRoutingOutput).ToVirtualHubConnectionRoutingPtrOutputWithContext(ctx)
}

// VirtualHubConnectionRoutingPtrInput is an input type that accepts VirtualHubConnectionRoutingArgs, VirtualHubConnectionRoutingPtr and VirtualHubConnectionRoutingPtrOutput values.
// You can construct a concrete instance of `VirtualHubConnectionRoutingPtrInput` via:
//
//	        VirtualHubConnectionRoutingArgs{...}
//
//	or:
//
//	        nil
type VirtualHubConnectionRoutingPtrInput interface {
	pulumi.Input

	ToVirtualHubConnectionRoutingPtrOutput() VirtualHubConnectionRoutingPtrOutput
	ToVirtualHubConnectionRoutingPtrOutputWithContext(context.Context) VirtualHubConnectionRoutingPtrOutput
}

type virtualHubConnectionRoutingPtrType VirtualHubConnectionRoutingArgs

func VirtualHubConnectionRoutingPtr(v *VirtualHubConnectionRoutingArgs) VirtualHubConnectionRoutingPtrInput {
	return (*virtualHubConnectionRoutingPtrType)(v)
}

func (*virtualHubConnectionRoutingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubConnectionRouting)(nil)).Elem()
}

func (i *virtualHubConnectionRoutingPtrType) ToVirtualHubConnectionRoutingPtrOutput() VirtualHubConnectionRoutingPtrOutput {
	return i.ToVirtualHubConnectionRoutingPtrOutputWithContext(context.Background())
}

func (i *virtualHubConnectionRoutingPtrType) ToVirtualHubConnectionRoutingPtrOutputWithContext(ctx context.Context) VirtualHubConnectionRoutingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubConnectionRoutingPtrOutput)
}

type VirtualHubConnectionRoutingOutput struct{ *pulumi.OutputState }

func (VirtualHubConnectionRoutingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubConnectionRouting)(nil)).Elem()
}

func (o VirtualHubConnectionRoutingOutput) ToVirtualHubConnectionRoutingOutput() VirtualHubConnectionRoutingOutput {
	return o
}

func (o VirtualHubConnectionRoutingOutput) ToVirtualHubConnectionRoutingOutputWithContext(ctx context.Context) VirtualHubConnectionRoutingOutput {
	return o
}

func (o VirtualHubConnectionRoutingOutput) ToVirtualHubConnectionRoutingPtrOutput() VirtualHubConnectionRoutingPtrOutput {
	return o.ToVirtualHubConnectionRoutingPtrOutputWithContext(context.Background())
}

func (o VirtualHubConnectionRoutingOutput) ToVirtualHubConnectionRoutingPtrOutputWithContext(ctx context.Context) VirtualHubConnectionRoutingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualHubConnectionRouting) *VirtualHubConnectionRouting {
		return &v
	}).(VirtualHubConnectionRoutingPtrOutput)
}

// The ID of the route table associated with this Virtual Hub connection.
func (o VirtualHubConnectionRoutingOutput) AssociatedRouteTableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubConnectionRouting) *string { return v.AssociatedRouteTableId }).(pulumi.StringPtrOutput)
}

// The resource ID of the Route Map associated with this Routing Configuration for inbound learned routes.
func (o VirtualHubConnectionRoutingOutput) InboundRouteMapId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubConnectionRouting) *string { return v.InboundRouteMapId }).(pulumi.StringPtrOutput)
}

// The resource ID of the Route Map associated with this Routing Configuration for outbound advertised routes.
func (o VirtualHubConnectionRoutingOutput) OutboundRouteMapId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubConnectionRouting) *string { return v.OutboundRouteMapId }).(pulumi.StringPtrOutput)
}

// A `propagatedRouteTable` block as defined below.
func (o VirtualHubConnectionRoutingOutput) PropagatedRouteTable() VirtualHubConnectionRoutingPropagatedRouteTablePtrOutput {
	return o.ApplyT(func(v VirtualHubConnectionRouting) *VirtualHubConnectionRoutingPropagatedRouteTable {
		return v.PropagatedRouteTable
	}).(VirtualHubConnectionRoutingPropagatedRouteTablePtrOutput)
}

// The static VNet local route override criteria that is used to determine whether NVA in spoke VNet is bypassed for traffic with destination in spoke VNet. Possible values are `Contains` and `Equal`. Defaults to `Contains`. Changing this forces a new resource to be created.
func (o VirtualHubConnectionRoutingOutput) StaticVnetLocalRouteOverrideCriteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubConnectionRouting) *string { return v.StaticVnetLocalRouteOverrideCriteria }).(pulumi.StringPtrOutput)
}

// A `staticVnetRoute` block as defined below.
func (o VirtualHubConnectionRoutingOutput) StaticVnetRoutes() VirtualHubConnectionRoutingStaticVnetRouteArrayOutput {
	return o.ApplyT(func(v VirtualHubConnectionRouting) []VirtualHubConnectionRoutingStaticVnetRoute {
		return v.StaticVnetRoutes
	}).(VirtualHubConnectionRoutingStaticVnetRouteArrayOutput)
}

type VirtualHubConnectionRoutingPtrOutput struct{ *pulumi.OutputState }

func (VirtualHubConnectionRoutingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubConnectionRouting)(nil)).Elem()
}

func (o VirtualHubConnectionRoutingPtrOutput) ToVirtualHubConnectionRoutingPtrOutput() VirtualHubConnectionRoutingPtrOutput {
	return o
}

func (o VirtualHubConnectionRoutingPtrOutput) ToVirtualHubConnectionRoutingPtrOutputWithContext(ctx context.Context) VirtualHubConnectionRoutingPtrOutput {
	return o
}

func (o VirtualHubConnectionRoutingPtrOutput) Elem() VirtualHubConnectionRoutingOutput {
	return o.ApplyT(func(v *VirtualHubConnectionRouting) VirtualHubConnectionRouting {
		if v != nil {
			return *v
		}
		var ret VirtualHubConnectionRouting
		return ret
	}).(VirtualHubConnectionRoutingOutput)
}

// The ID of the route table associated with this Virtual Hub connection.
func (o VirtualHubConnectionRoutingPtrOutput) AssociatedRouteTableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualHubConnectionRouting) *string {
		if v == nil {
			return nil
		}
		return v.AssociatedRouteTableId
	}).(pulumi.StringPtrOutput)
}

// The resource ID of the Route Map associated with this Routing Configuration for inbound learned routes.
func (o VirtualHubConnectionRoutingPtrOutput) InboundRouteMapId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualHubConnectionRouting) *string {
		if v == nil {
			return nil
		}
		return v.InboundRouteMapId
	}).(pulumi.StringPtrOutput)
}

// The resource ID of the Route Map associated with this Routing Configuration for outbound advertised routes.
func (o VirtualHubConnectionRoutingPtrOutput) OutboundRouteMapId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualHubConnectionRouting) *string {
		if v == nil {
			return nil
		}
		return v.OutboundRouteMapId
	}).(pulumi.StringPtrOutput)
}

// A `propagatedRouteTable` block as defined below.
func (o VirtualHubConnectionRoutingPtrOutput) PropagatedRouteTable() VirtualHubConnectionRoutingPropagatedRouteTablePtrOutput {
	return o.ApplyT(func(v *VirtualHubConnectionRouting) *VirtualHubConnectionRoutingPropagatedRouteTable {
		if v == nil {
			return nil
		}
		return v.PropagatedRouteTable
	}).(VirtualHubConnectionRoutingPropagatedRouteTablePtrOutput)
}

// The static VNet local route override criteria that is used to determine whether NVA in spoke VNet is bypassed for traffic with destination in spoke VNet. Possible values are `Contains` and `Equal`. Defaults to `Contains`. Changing this forces a new resource to be created.
func (o VirtualHubConnectionRoutingPtrOutput) StaticVnetLocalRouteOverrideCriteria() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualHubConnectionRouting) *string {
		if v == nil {
			return nil
		}
		return v.StaticVnetLocalRouteOverrideCriteria
	}).(pulumi.StringPtrOutput)
}

// A `staticVnetRoute` block as defined below.
func (o VirtualHubConnectionRoutingPtrOutput) StaticVnetRoutes() VirtualHubConnectionRoutingStaticVnetRouteArrayOutput {
	return o.ApplyT(func(v *VirtualHubConnectionRouting) []VirtualHubConnectionRoutingStaticVnetRoute {
		if v == nil {
			return nil
		}
		return v.StaticVnetRoutes
	}).(VirtualHubConnectionRoutingStaticVnetRouteArrayOutput)
}

type VirtualHubConnectionRoutingPropagatedRouteTable struct {
	// The list of labels to assign to this route table.
	Labels []string `pulumi:"labels"`
	// A list of Route Table IDs to associated with this Virtual Hub Connection.
	RouteTableIds []string `pulumi:"routeTableIds"`
}

// VirtualHubConnectionRoutingPropagatedRouteTableInput is an input type that accepts VirtualHubConnectionRoutingPropagatedRouteTableArgs and VirtualHubConnectionRoutingPropagatedRouteTableOutput values.
// You can construct a concrete instance of `VirtualHubConnectionRoutingPropagatedRouteTableInput` via:
//
//	VirtualHubConnectionRoutingPropagatedRouteTableArgs{...}
type VirtualHubConnectionRoutingPropagatedRouteTableInput interface {
	pulumi.Input

	ToVirtualHubConnectionRoutingPropagatedRouteTableOutput() VirtualHubConnectionRoutingPropagatedRouteTableOutput
	ToVirtualHubConnectionRoutingPropagatedRouteTableOutputWithContext(context.Context) VirtualHubConnectionRoutingPropagatedRouteTableOutput
}

type VirtualHubConnectionRoutingPropagatedRouteTableArgs struct {
	// The list of labels to assign to this route table.
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// A list of Route Table IDs to associated with this Virtual Hub Connection.
	RouteTableIds pulumi.StringArrayInput `pulumi:"routeTableIds"`
}

func (VirtualHubConnectionRoutingPropagatedRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubConnectionRoutingPropagatedRouteTable)(nil)).Elem()
}

func (i VirtualHubConnectionRoutingPropagatedRouteTableArgs) ToVirtualHubConnectionRoutingPropagatedRouteTableOutput() VirtualHubConnectionRoutingPropagatedRouteTableOutput {
	return i.ToVirtualHubConnectionRoutingPropagatedRouteTableOutputWithContext(context.Background())
}

func (i VirtualHubConnectionRoutingPropagatedRouteTableArgs) ToVirtualHubConnectionRoutingPropagatedRouteTableOutputWithContext(ctx context.Context) VirtualHubConnectionRoutingPropagatedRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubConnectionRoutingPropagatedRouteTableOutput)
}

func (i VirtualHubConnectionRoutingPropagatedRouteTableArgs) ToVirtualHubConnectionRoutingPropagatedRouteTablePtrOutput() VirtualHubConnectionRoutingPropagatedRouteTablePtrOutput {
	return i.ToVirtualHubConnectionRoutingPropagatedRouteTablePtrOutputWithContext(context.Background())
}

func (i VirtualHubConnectionRoutingPropagatedRouteTableArgs) ToVirtualHubConnectionRoutingPropagatedRouteTablePtrOutputWithContext(ctx context.Context) VirtualHubConnectionRoutingPropagatedRouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubConnectionRoutingPropagatedRouteTableOutput).ToVirtualHubConnectionRoutingPropagatedRouteTablePtrOutputWithContext(ctx)
}

// VirtualHubConnectionRoutingPropagatedRouteTablePtrInput is an input type that accepts VirtualHubConnectionRoutingPropagatedRouteTableArgs, VirtualHubConnectionRoutingPropagatedRouteTablePtr and VirtualHubConnectionRoutingPropagatedRouteTablePtrOutput values.
// You can construct a concrete instance of `VirtualHubConnectionRoutingPropagatedRouteTablePtrInput` via:
//
//	        VirtualHubConnectionRoutingPropagatedRouteTableArgs{...}
//
//	or:
//
//	        nil
type VirtualHubConnectionRoutingPropagatedRouteTablePtrInput interface {
	pulumi.Input

	ToVirtualHubConnectionRoutingPropagatedRouteTablePtrOutput() VirtualHubConnectionRoutingPropagatedRouteTablePtrOutput
	ToVirtualHubConnectionRoutingPropagatedRouteTablePtrOutputWithContext(context.Context) VirtualHubConnectionRoutingPropagatedRouteTablePtrOutput
}

type virtualHubConnectionRoutingPropagatedRouteTablePtrType VirtualHubConnectionRoutingPropagatedRouteTableArgs

func VirtualHubConnectionRoutingPropagatedRouteTablePtr(v *VirtualHubConnectionRoutingPropagatedRouteTableArgs) VirtualHubConnectionRoutingPropagatedRouteTablePtrInput {
	return (*virtualHubConnectionRoutingPropagatedRouteTablePtrType)(v)
}

func (*virtualHubConnectionRoutingPropagatedRouteTablePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubConnectionRoutingPropagatedRouteTable)(nil)).Elem()
}

func (i *virtualHubConnectionRoutingPropagatedRouteTablePtrType) ToVirtualHubConnectionRoutingPropagatedRouteTablePtrOutput() VirtualHubConnectionRoutingPropagatedRouteTablePtrOutput {
	return i.ToVirtualHubConnectionRoutingPropagatedRouteTablePtrOutputWithContext(context.Background())
}

func (i *virtualHubConnectionRoutingPropagatedRouteTablePtrType) ToVirtualHubConnectionRoutingPropagatedRouteTablePtrOutputWithContext(ctx context.Context) VirtualHubConnectionRoutingPropagatedRouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubConnectionRoutingPropagatedRouteTablePtrOutput)
}

type VirtualHubConnectionRoutingPropagatedRouteTableOutput struct{ *pulumi.OutputState }

func (VirtualHubConnectionRoutingPropagatedRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubConnectionRoutingPropagatedRouteTable)(nil)).Elem()
}

func (o VirtualHubConnectionRoutingPropagatedRouteTableOutput) ToVirtualHubConnectionRoutingPropagatedRouteTableOutput() VirtualHubConnectionRoutingPropagatedRouteTableOutput {
	return o
}

func (o VirtualHubConnectionRoutingPropagatedRouteTableOutput) ToVirtualHubConnectionRoutingPropagatedRouteTableOutputWithContext(ctx context.Context) VirtualHubConnectionRoutingPropagatedRouteTableOutput {
	return o
}

func (o VirtualHubConnectionRoutingPropagatedRouteTableOutput) ToVirtualHubConnectionRoutingPropagatedRouteTablePtrOutput() VirtualHubConnectionRoutingPropagatedRouteTablePtrOutput {
	return o.ToVirtualHubConnectionRoutingPropagatedRouteTablePtrOutputWithContext(context.Background())
}

func (o VirtualHubConnectionRoutingPropagatedRouteTableOutput) ToVirtualHubConnectionRoutingPropagatedRouteTablePtrOutputWithContext(ctx context.Context) VirtualHubConnectionRoutingPropagatedRouteTablePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualHubConnectionRoutingPropagatedRouteTable) *VirtualHubConnectionRoutingPropagatedRouteTable {
		return &v
	}).(VirtualHubConnectionRoutingPropagatedRouteTablePtrOutput)
}

// The list of labels to assign to this route table.
func (o VirtualHubConnectionRoutingPropagatedRouteTableOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubConnectionRoutingPropagatedRouteTable) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// A list of Route Table IDs to associated with this Virtual Hub Connection.
func (o VirtualHubConnectionRoutingPropagatedRouteTableOutput) RouteTableIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubConnectionRoutingPropagatedRouteTable) []string { return v.RouteTableIds }).(pulumi.StringArrayOutput)
}

type VirtualHubConnectionRoutingPropagatedRouteTablePtrOutput struct{ *pulumi.OutputState }

func (VirtualHubConnectionRoutingPropagatedRouteTablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubConnectionRoutingPropagatedRouteTable)(nil)).Elem()
}

func (o VirtualHubConnectionRoutingPropagatedRouteTablePtrOutput) ToVirtualHubConnectionRoutingPropagatedRouteTablePtrOutput() VirtualHubConnectionRoutingPropagatedRouteTablePtrOutput {
	return o
}

func (o VirtualHubConnectionRoutingPropagatedRouteTablePtrOutput) ToVirtualHubConnectionRoutingPropagatedRouteTablePtrOutputWithContext(ctx context.Context) VirtualHubConnectionRoutingPropagatedRouteTablePtrOutput {
	return o
}

func (o VirtualHubConnectionRoutingPropagatedRouteTablePtrOutput) Elem() VirtualHubConnectionRoutingPropagatedRouteTableOutput {
	return o.ApplyT(func(v *VirtualHubConnectionRoutingPropagatedRouteTable) VirtualHubConnectionRoutingPropagatedRouteTable {
		if v != nil {
			return *v
		}
		var ret VirtualHubConnectionRoutingPropagatedRouteTable
		return ret
	}).(VirtualHubConnectionRoutingPropagatedRouteTableOutput)
}

// The list of labels to assign to this route table.
func (o VirtualHubConnectionRoutingPropagatedRouteTablePtrOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualHubConnectionRoutingPropagatedRouteTable) []string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringArrayOutput)
}

// A list of Route Table IDs to associated with this Virtual Hub Connection.
func (o VirtualHubConnectionRoutingPropagatedRouteTablePtrOutput) RouteTableIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualHubConnectionRoutingPropagatedRouteTable) []string {
		if v == nil {
			return nil
		}
		return v.RouteTableIds
	}).(pulumi.StringArrayOutput)
}

type VirtualHubConnectionRoutingStaticVnetRoute struct {
	// A list of CIDR Ranges which should be used as Address Prefixes.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// The name which should be used for this Static Route.
	Name *string `pulumi:"name"`
	// The IP Address which should be used for the Next Hop.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
}

// VirtualHubConnectionRoutingStaticVnetRouteInput is an input type that accepts VirtualHubConnectionRoutingStaticVnetRouteArgs and VirtualHubConnectionRoutingStaticVnetRouteOutput values.
// You can construct a concrete instance of `VirtualHubConnectionRoutingStaticVnetRouteInput` via:
//
//	VirtualHubConnectionRoutingStaticVnetRouteArgs{...}
type VirtualHubConnectionRoutingStaticVnetRouteInput interface {
	pulumi.Input

	ToVirtualHubConnectionRoutingStaticVnetRouteOutput() VirtualHubConnectionRoutingStaticVnetRouteOutput
	ToVirtualHubConnectionRoutingStaticVnetRouteOutputWithContext(context.Context) VirtualHubConnectionRoutingStaticVnetRouteOutput
}

type VirtualHubConnectionRoutingStaticVnetRouteArgs struct {
	// A list of CIDR Ranges which should be used as Address Prefixes.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
	// The name which should be used for this Static Route.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The IP Address which should be used for the Next Hop.
	NextHopIpAddress pulumi.StringPtrInput `pulumi:"nextHopIpAddress"`
}

func (VirtualHubConnectionRoutingStaticVnetRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubConnectionRoutingStaticVnetRoute)(nil)).Elem()
}

func (i VirtualHubConnectionRoutingStaticVnetRouteArgs) ToVirtualHubConnectionRoutingStaticVnetRouteOutput() VirtualHubConnectionRoutingStaticVnetRouteOutput {
	return i.ToVirtualHubConnectionRoutingStaticVnetRouteOutputWithContext(context.Background())
}

func (i VirtualHubConnectionRoutingStaticVnetRouteArgs) ToVirtualHubConnectionRoutingStaticVnetRouteOutputWithContext(ctx context.Context) VirtualHubConnectionRoutingStaticVnetRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubConnectionRoutingStaticVnetRouteOutput)
}

// VirtualHubConnectionRoutingStaticVnetRouteArrayInput is an input type that accepts VirtualHubConnectionRoutingStaticVnetRouteArray and VirtualHubConnectionRoutingStaticVnetRouteArrayOutput values.
// You can construct a concrete instance of `VirtualHubConnectionRoutingStaticVnetRouteArrayInput` via:
//
//	VirtualHubConnectionRoutingStaticVnetRouteArray{ VirtualHubConnectionRoutingStaticVnetRouteArgs{...} }
type VirtualHubConnectionRoutingStaticVnetRouteArrayInput interface {
	pulumi.Input

	ToVirtualHubConnectionRoutingStaticVnetRouteArrayOutput() VirtualHubConnectionRoutingStaticVnetRouteArrayOutput
	ToVirtualHubConnectionRoutingStaticVnetRouteArrayOutputWithContext(context.Context) VirtualHubConnectionRoutingStaticVnetRouteArrayOutput
}

type VirtualHubConnectionRoutingStaticVnetRouteArray []VirtualHubConnectionRoutingStaticVnetRouteInput

func (VirtualHubConnectionRoutingStaticVnetRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubConnectionRoutingStaticVnetRoute)(nil)).Elem()
}

func (i VirtualHubConnectionRoutingStaticVnetRouteArray) ToVirtualHubConnectionRoutingStaticVnetRouteArrayOutput() VirtualHubConnectionRoutingStaticVnetRouteArrayOutput {
	return i.ToVirtualHubConnectionRoutingStaticVnetRouteArrayOutputWithContext(context.Background())
}

func (i VirtualHubConnectionRoutingStaticVnetRouteArray) ToVirtualHubConnectionRoutingStaticVnetRouteArrayOutputWithContext(ctx context.Context) VirtualHubConnectionRoutingStaticVnetRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubConnectionRoutingStaticVnetRouteArrayOutput)
}

type VirtualHubConnectionRoutingStaticVnetRouteOutput struct{ *pulumi.OutputState }

func (VirtualHubConnectionRoutingStaticVnetRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubConnectionRoutingStaticVnetRoute)(nil)).Elem()
}

func (o VirtualHubConnectionRoutingStaticVnetRouteOutput) ToVirtualHubConnectionRoutingStaticVnetRouteOutput() VirtualHubConnectionRoutingStaticVnetRouteOutput {
	return o
}

func (o VirtualHubConnectionRoutingStaticVnetRouteOutput) ToVirtualHubConnectionRoutingStaticVnetRouteOutputWithContext(ctx context.Context) VirtualHubConnectionRoutingStaticVnetRouteOutput {
	return o
}

// A list of CIDR Ranges which should be used as Address Prefixes.
func (o VirtualHubConnectionRoutingStaticVnetRouteOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubConnectionRoutingStaticVnetRoute) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// The name which should be used for this Static Route.
func (o VirtualHubConnectionRoutingStaticVnetRouteOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubConnectionRoutingStaticVnetRoute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The IP Address which should be used for the Next Hop.
func (o VirtualHubConnectionRoutingStaticVnetRouteOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubConnectionRoutingStaticVnetRoute) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

type VirtualHubConnectionRoutingStaticVnetRouteArrayOutput struct{ *pulumi.OutputState }

func (VirtualHubConnectionRoutingStaticVnetRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubConnectionRoutingStaticVnetRoute)(nil)).Elem()
}

func (o VirtualHubConnectionRoutingStaticVnetRouteArrayOutput) ToVirtualHubConnectionRoutingStaticVnetRouteArrayOutput() VirtualHubConnectionRoutingStaticVnetRouteArrayOutput {
	return o
}

func (o VirtualHubConnectionRoutingStaticVnetRouteArrayOutput) ToVirtualHubConnectionRoutingStaticVnetRouteArrayOutputWithContext(ctx context.Context) VirtualHubConnectionRoutingStaticVnetRouteArrayOutput {
	return o
}

func (o VirtualHubConnectionRoutingStaticVnetRouteArrayOutput) Index(i pulumi.IntInput) VirtualHubConnectionRoutingStaticVnetRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHubConnectionRoutingStaticVnetRoute {
		return vs[0].([]VirtualHubConnectionRoutingStaticVnetRoute)[vs[1].(int)]
	}).(VirtualHubConnectionRoutingStaticVnetRouteOutput)
}

type VirtualHubRoute struct {
	// A list of Address Prefixes.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// The IP Address that Packets should be forwarded to as the Next Hop.
	NextHopIpAddress string `pulumi:"nextHopIpAddress"`
}

// VirtualHubRouteInput is an input type that accepts VirtualHubRouteArgs and VirtualHubRouteOutput values.
// You can construct a concrete instance of `VirtualHubRouteInput` via:
//
//	VirtualHubRouteArgs{...}
type VirtualHubRouteInput interface {
	pulumi.Input

	ToVirtualHubRouteOutput() VirtualHubRouteOutput
	ToVirtualHubRouteOutputWithContext(context.Context) VirtualHubRouteOutput
}

type VirtualHubRouteArgs struct {
	// A list of Address Prefixes.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
	// The IP Address that Packets should be forwarded to as the Next Hop.
	NextHopIpAddress pulumi.StringInput `pulumi:"nextHopIpAddress"`
}

func (VirtualHubRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRoute)(nil)).Elem()
}

func (i VirtualHubRouteArgs) ToVirtualHubRouteOutput() VirtualHubRouteOutput {
	return i.ToVirtualHubRouteOutputWithContext(context.Background())
}

func (i VirtualHubRouteArgs) ToVirtualHubRouteOutputWithContext(ctx context.Context) VirtualHubRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteOutput)
}

// VirtualHubRouteArrayInput is an input type that accepts VirtualHubRouteArray and VirtualHubRouteArrayOutput values.
// You can construct a concrete instance of `VirtualHubRouteArrayInput` via:
//
//	VirtualHubRouteArray{ VirtualHubRouteArgs{...} }
type VirtualHubRouteArrayInput interface {
	pulumi.Input

	ToVirtualHubRouteArrayOutput() VirtualHubRouteArrayOutput
	ToVirtualHubRouteArrayOutputWithContext(context.Context) VirtualHubRouteArrayOutput
}

type VirtualHubRouteArray []VirtualHubRouteInput

func (VirtualHubRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRoute)(nil)).Elem()
}

func (i VirtualHubRouteArray) ToVirtualHubRouteArrayOutput() VirtualHubRouteArrayOutput {
	return i.ToVirtualHubRouteArrayOutputWithContext(context.Background())
}

func (i VirtualHubRouteArray) ToVirtualHubRouteArrayOutputWithContext(ctx context.Context) VirtualHubRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteArrayOutput)
}

type VirtualHubRouteOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRoute)(nil)).Elem()
}

func (o VirtualHubRouteOutput) ToVirtualHubRouteOutput() VirtualHubRouteOutput {
	return o
}

func (o VirtualHubRouteOutput) ToVirtualHubRouteOutputWithContext(ctx context.Context) VirtualHubRouteOutput {
	return o
}

// A list of Address Prefixes.
func (o VirtualHubRouteOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRoute) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// The IP Address that Packets should be forwarded to as the Next Hop.
func (o VirtualHubRouteOutput) NextHopIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualHubRoute) string { return v.NextHopIpAddress }).(pulumi.StringOutput)
}

type VirtualHubRouteArrayOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRoute)(nil)).Elem()
}

func (o VirtualHubRouteArrayOutput) ToVirtualHubRouteArrayOutput() VirtualHubRouteArrayOutput {
	return o
}

func (o VirtualHubRouteArrayOutput) ToVirtualHubRouteArrayOutputWithContext(ctx context.Context) VirtualHubRouteArrayOutput {
	return o
}

func (o VirtualHubRouteArrayOutput) Index(i pulumi.IntInput) VirtualHubRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHubRoute {
		return vs[0].([]VirtualHubRoute)[vs[1].(int)]
	}).(VirtualHubRouteOutput)
}

type VirtualHubRouteTableRouteType struct {
	// A list of destination addresses for this route.
	Destinations []string `pulumi:"destinations"`
	// The type of destinations. Possible values are `CIDR`, `ResourceId` and `Service`.
	DestinationsType string `pulumi:"destinationsType"`
	// The name which should be used for this route.
	Name string `pulumi:"name"`
	// The next hop's resource ID.
	NextHop string `pulumi:"nextHop"`
	// The type of next hop. Currently the only possible value is `ResourceId`. Defaults to `ResourceId`.
	//
	// > **Note:** The Routes can alternatively be created using the virtualHubRouteTableRoute resource. Using both inline and external routes is not supported and may result in unexpected configuration.
	NextHopType *string `pulumi:"nextHopType"`
}

// VirtualHubRouteTableRouteTypeInput is an input type that accepts VirtualHubRouteTableRouteTypeArgs and VirtualHubRouteTableRouteTypeOutput values.
// You can construct a concrete instance of `VirtualHubRouteTableRouteTypeInput` via:
//
//	VirtualHubRouteTableRouteTypeArgs{...}
type VirtualHubRouteTableRouteTypeInput interface {
	pulumi.Input

	ToVirtualHubRouteTableRouteTypeOutput() VirtualHubRouteTableRouteTypeOutput
	ToVirtualHubRouteTableRouteTypeOutputWithContext(context.Context) VirtualHubRouteTableRouteTypeOutput
}

type VirtualHubRouteTableRouteTypeArgs struct {
	// A list of destination addresses for this route.
	Destinations pulumi.StringArrayInput `pulumi:"destinations"`
	// The type of destinations. Possible values are `CIDR`, `ResourceId` and `Service`.
	DestinationsType pulumi.StringInput `pulumi:"destinationsType"`
	// The name which should be used for this route.
	Name pulumi.StringInput `pulumi:"name"`
	// The next hop's resource ID.
	NextHop pulumi.StringInput `pulumi:"nextHop"`
	// The type of next hop. Currently the only possible value is `ResourceId`. Defaults to `ResourceId`.
	//
	// > **Note:** The Routes can alternatively be created using the virtualHubRouteTableRoute resource. Using both inline and external routes is not supported and may result in unexpected configuration.
	NextHopType pulumi.StringPtrInput `pulumi:"nextHopType"`
}

func (VirtualHubRouteTableRouteTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTableRouteType)(nil)).Elem()
}

func (i VirtualHubRouteTableRouteTypeArgs) ToVirtualHubRouteTableRouteTypeOutput() VirtualHubRouteTableRouteTypeOutput {
	return i.ToVirtualHubRouteTableRouteTypeOutputWithContext(context.Background())
}

func (i VirtualHubRouteTableRouteTypeArgs) ToVirtualHubRouteTableRouteTypeOutputWithContext(ctx context.Context) VirtualHubRouteTableRouteTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTableRouteTypeOutput)
}

// VirtualHubRouteTableRouteTypeArrayInput is an input type that accepts VirtualHubRouteTableRouteTypeArray and VirtualHubRouteTableRouteTypeArrayOutput values.
// You can construct a concrete instance of `VirtualHubRouteTableRouteTypeArrayInput` via:
//
//	VirtualHubRouteTableRouteTypeArray{ VirtualHubRouteTableRouteTypeArgs{...} }
type VirtualHubRouteTableRouteTypeArrayInput interface {
	pulumi.Input

	ToVirtualHubRouteTableRouteTypeArrayOutput() VirtualHubRouteTableRouteTypeArrayOutput
	ToVirtualHubRouteTableRouteTypeArrayOutputWithContext(context.Context) VirtualHubRouteTableRouteTypeArrayOutput
}

type VirtualHubRouteTableRouteTypeArray []VirtualHubRouteTableRouteTypeInput

func (VirtualHubRouteTableRouteTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteTableRouteType)(nil)).Elem()
}

func (i VirtualHubRouteTableRouteTypeArray) ToVirtualHubRouteTableRouteTypeArrayOutput() VirtualHubRouteTableRouteTypeArrayOutput {
	return i.ToVirtualHubRouteTableRouteTypeArrayOutputWithContext(context.Background())
}

func (i VirtualHubRouteTableRouteTypeArray) ToVirtualHubRouteTableRouteTypeArrayOutputWithContext(ctx context.Context) VirtualHubRouteTableRouteTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTableRouteTypeArrayOutput)
}

type VirtualHubRouteTableRouteTypeOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableRouteTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTableRouteType)(nil)).Elem()
}

func (o VirtualHubRouteTableRouteTypeOutput) ToVirtualHubRouteTableRouteTypeOutput() VirtualHubRouteTableRouteTypeOutput {
	return o
}

func (o VirtualHubRouteTableRouteTypeOutput) ToVirtualHubRouteTableRouteTypeOutputWithContext(ctx context.Context) VirtualHubRouteTableRouteTypeOutput {
	return o
}

// A list of destination addresses for this route.
func (o VirtualHubRouteTableRouteTypeOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteTableRouteType) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

// The type of destinations. Possible values are `CIDR`, `ResourceId` and `Service`.
func (o VirtualHubRouteTableRouteTypeOutput) DestinationsType() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualHubRouteTableRouteType) string { return v.DestinationsType }).(pulumi.StringOutput)
}

// The name which should be used for this route.
func (o VirtualHubRouteTableRouteTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualHubRouteTableRouteType) string { return v.Name }).(pulumi.StringOutput)
}

// The next hop's resource ID.
func (o VirtualHubRouteTableRouteTypeOutput) NextHop() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualHubRouteTableRouteType) string { return v.NextHop }).(pulumi.StringOutput)
}

// The type of next hop. Currently the only possible value is `ResourceId`. Defaults to `ResourceId`.
//
// > **Note:** The Routes can alternatively be created using the virtualHubRouteTableRoute resource. Using both inline and external routes is not supported and may result in unexpected configuration.
func (o VirtualHubRouteTableRouteTypeOutput) NextHopType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteTableRouteType) *string { return v.NextHopType }).(pulumi.StringPtrOutput)
}

type VirtualHubRouteTableRouteTypeArrayOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableRouteTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteTableRouteType)(nil)).Elem()
}

func (o VirtualHubRouteTableRouteTypeArrayOutput) ToVirtualHubRouteTableRouteTypeArrayOutput() VirtualHubRouteTableRouteTypeArrayOutput {
	return o
}

func (o VirtualHubRouteTableRouteTypeArrayOutput) ToVirtualHubRouteTableRouteTypeArrayOutputWithContext(ctx context.Context) VirtualHubRouteTableRouteTypeArrayOutput {
	return o
}

func (o VirtualHubRouteTableRouteTypeArrayOutput) Index(i pulumi.IntInput) VirtualHubRouteTableRouteTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHubRouteTableRouteType {
		return vs[0].([]VirtualHubRouteTableRouteType)[vs[1].(int)]
	}).(VirtualHubRouteTableRouteTypeOutput)
}

type VirtualNetworkDdosProtectionPlan struct {
	// Enable/disable DDoS Protection Plan on Virtual Network.
	Enable bool `pulumi:"enable"`
	// The ID of DDoS Protection Plan.
	Id string `pulumi:"id"`
}

// VirtualNetworkDdosProtectionPlanInput is an input type that accepts VirtualNetworkDdosProtectionPlanArgs and VirtualNetworkDdosProtectionPlanOutput values.
// You can construct a concrete instance of `VirtualNetworkDdosProtectionPlanInput` via:
//
//	VirtualNetworkDdosProtectionPlanArgs{...}
type VirtualNetworkDdosProtectionPlanInput interface {
	pulumi.Input

	ToVirtualNetworkDdosProtectionPlanOutput() VirtualNetworkDdosProtectionPlanOutput
	ToVirtualNetworkDdosProtectionPlanOutputWithContext(context.Context) VirtualNetworkDdosProtectionPlanOutput
}

type VirtualNetworkDdosProtectionPlanArgs struct {
	// Enable/disable DDoS Protection Plan on Virtual Network.
	Enable pulumi.BoolInput `pulumi:"enable"`
	// The ID of DDoS Protection Plan.
	Id pulumi.StringInput `pulumi:"id"`
}

func (VirtualNetworkDdosProtectionPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkDdosProtectionPlan)(nil)).Elem()
}

func (i VirtualNetworkDdosProtectionPlanArgs) ToVirtualNetworkDdosProtectionPlanOutput() VirtualNetworkDdosProtectionPlanOutput {
	return i.ToVirtualNetworkDdosProtectionPlanOutputWithContext(context.Background())
}

func (i VirtualNetworkDdosProtectionPlanArgs) ToVirtualNetworkDdosProtectionPlanOutputWithContext(ctx context.Context) VirtualNetworkDdosProtectionPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkDdosProtectionPlanOutput)
}

func (i VirtualNetworkDdosProtectionPlanArgs) ToVirtualNetworkDdosProtectionPlanPtrOutput() VirtualNetworkDdosProtectionPlanPtrOutput {
	return i.ToVirtualNetworkDdosProtectionPlanPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkDdosProtectionPlanArgs) ToVirtualNetworkDdosProtectionPlanPtrOutputWithContext(ctx context.Context) VirtualNetworkDdosProtectionPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkDdosProtectionPlanOutput).ToVirtualNetworkDdosProtectionPlanPtrOutputWithContext(ctx)
}

// VirtualNetworkDdosProtectionPlanPtrInput is an input type that accepts VirtualNetworkDdosProtectionPlanArgs, VirtualNetworkDdosProtectionPlanPtr and VirtualNetworkDdosProtectionPlanPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkDdosProtectionPlanPtrInput` via:
//
//	        VirtualNetworkDdosProtectionPlanArgs{...}
//
//	or:
//
//	        nil
type VirtualNetworkDdosProtectionPlanPtrInput interface {
	pulumi.Input

	ToVirtualNetworkDdosProtectionPlanPtrOutput() VirtualNetworkDdosProtectionPlanPtrOutput
	ToVirtualNetworkDdosProtectionPlanPtrOutputWithContext(context.Context) VirtualNetworkDdosProtectionPlanPtrOutput
}

type virtualNetworkDdosProtectionPlanPtrType VirtualNetworkDdosProtectionPlanArgs

func VirtualNetworkDdosProtectionPlanPtr(v *VirtualNetworkDdosProtectionPlanArgs) VirtualNetworkDdosProtectionPlanPtrInput {
	return (*virtualNetworkDdosProtectionPlanPtrType)(v)
}

func (*virtualNetworkDdosProtectionPlanPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkDdosProtectionPlan)(nil)).Elem()
}

func (i *virtualNetworkDdosProtectionPlanPtrType) ToVirtualNetworkDdosProtectionPlanPtrOutput() VirtualNetworkDdosProtectionPlanPtrOutput {
	return i.ToVirtualNetworkDdosProtectionPlanPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkDdosProtectionPlanPtrType) ToVirtualNetworkDdosProtectionPlanPtrOutputWithContext(ctx context.Context) VirtualNetworkDdosProtectionPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkDdosProtectionPlanPtrOutput)
}

type VirtualNetworkDdosProtectionPlanOutput struct{ *pulumi.OutputState }

func (VirtualNetworkDdosProtectionPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkDdosProtectionPlan)(nil)).Elem()
}

func (o VirtualNetworkDdosProtectionPlanOutput) ToVirtualNetworkDdosProtectionPlanOutput() VirtualNetworkDdosProtectionPlanOutput {
	return o
}

func (o VirtualNetworkDdosProtectionPlanOutput) ToVirtualNetworkDdosProtectionPlanOutputWithContext(ctx context.Context) VirtualNetworkDdosProtectionPlanOutput {
	return o
}

func (o VirtualNetworkDdosProtectionPlanOutput) ToVirtualNetworkDdosProtectionPlanPtrOutput() VirtualNetworkDdosProtectionPlanPtrOutput {
	return o.ToVirtualNetworkDdosProtectionPlanPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkDdosProtectionPlanOutput) ToVirtualNetworkDdosProtectionPlanPtrOutputWithContext(ctx context.Context) VirtualNetworkDdosProtectionPlanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNetworkDdosProtectionPlan) *VirtualNetworkDdosProtectionPlan {
		return &v
	}).(VirtualNetworkDdosProtectionPlanPtrOutput)
}

// Enable/disable DDoS Protection Plan on Virtual Network.
func (o VirtualNetworkDdosProtectionPlanOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v VirtualNetworkDdosProtectionPlan) bool { return v.Enable }).(pulumi.BoolOutput)
}

// The ID of DDoS Protection Plan.
func (o VirtualNetworkDdosProtectionPlanOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkDdosProtectionPlan) string { return v.Id }).(pulumi.StringOutput)
}

type VirtualNetworkDdosProtectionPlanPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkDdosProtectionPlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkDdosProtectionPlan)(nil)).Elem()
}

func (o VirtualNetworkDdosProtectionPlanPtrOutput) ToVirtualNetworkDdosProtectionPlanPtrOutput() VirtualNetworkDdosProtectionPlanPtrOutput {
	return o
}

func (o VirtualNetworkDdosProtectionPlanPtrOutput) ToVirtualNetworkDdosProtectionPlanPtrOutputWithContext(ctx context.Context) VirtualNetworkDdosProtectionPlanPtrOutput {
	return o
}

func (o VirtualNetworkDdosProtectionPlanPtrOutput) Elem() VirtualNetworkDdosProtectionPlanOutput {
	return o.ApplyT(func(v *VirtualNetworkDdosProtectionPlan) VirtualNetworkDdosProtectionPlan {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkDdosProtectionPlan
		return ret
	}).(VirtualNetworkDdosProtectionPlanOutput)
}

// Enable/disable DDoS Protection Plan on Virtual Network.
func (o VirtualNetworkDdosProtectionPlanPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkDdosProtectionPlan) *bool {
		if v == nil {
			return nil
		}
		return &v.Enable
	}).(pulumi.BoolPtrOutput)
}

// The ID of DDoS Protection Plan.
func (o VirtualNetworkDdosProtectionPlanPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkDdosProtectionPlan) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type VirtualNetworkEncryption struct {
	// Specifies if the encrypted Virtual Network allows VM that does not support encryption. Possible values are `DropUnencrypted` and `AllowUnencrypted`.
	Enforcement string `pulumi:"enforcement"`
}

// VirtualNetworkEncryptionInput is an input type that accepts VirtualNetworkEncryptionArgs and VirtualNetworkEncryptionOutput values.
// You can construct a concrete instance of `VirtualNetworkEncryptionInput` via:
//
//	VirtualNetworkEncryptionArgs{...}
type VirtualNetworkEncryptionInput interface {
	pulumi.Input

	ToVirtualNetworkEncryptionOutput() VirtualNetworkEncryptionOutput
	ToVirtualNetworkEncryptionOutputWithContext(context.Context) VirtualNetworkEncryptionOutput
}

type VirtualNetworkEncryptionArgs struct {
	// Specifies if the encrypted Virtual Network allows VM that does not support encryption. Possible values are `DropUnencrypted` and `AllowUnencrypted`.
	Enforcement pulumi.StringInput `pulumi:"enforcement"`
}

func (VirtualNetworkEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkEncryption)(nil)).Elem()
}

func (i VirtualNetworkEncryptionArgs) ToVirtualNetworkEncryptionOutput() VirtualNetworkEncryptionOutput {
	return i.ToVirtualNetworkEncryptionOutputWithContext(context.Background())
}

func (i VirtualNetworkEncryptionArgs) ToVirtualNetworkEncryptionOutputWithContext(ctx context.Context) VirtualNetworkEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkEncryptionOutput)
}

func (i VirtualNetworkEncryptionArgs) ToVirtualNetworkEncryptionPtrOutput() VirtualNetworkEncryptionPtrOutput {
	return i.ToVirtualNetworkEncryptionPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkEncryptionArgs) ToVirtualNetworkEncryptionPtrOutputWithContext(ctx context.Context) VirtualNetworkEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkEncryptionOutput).ToVirtualNetworkEncryptionPtrOutputWithContext(ctx)
}

// VirtualNetworkEncryptionPtrInput is an input type that accepts VirtualNetworkEncryptionArgs, VirtualNetworkEncryptionPtr and VirtualNetworkEncryptionPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkEncryptionPtrInput` via:
//
//	        VirtualNetworkEncryptionArgs{...}
//
//	or:
//
//	        nil
type VirtualNetworkEncryptionPtrInput interface {
	pulumi.Input

	ToVirtualNetworkEncryptionPtrOutput() VirtualNetworkEncryptionPtrOutput
	ToVirtualNetworkEncryptionPtrOutputWithContext(context.Context) VirtualNetworkEncryptionPtrOutput
}

type virtualNetworkEncryptionPtrType VirtualNetworkEncryptionArgs

func VirtualNetworkEncryptionPtr(v *VirtualNetworkEncryptionArgs) VirtualNetworkEncryptionPtrInput {
	return (*virtualNetworkEncryptionPtrType)(v)
}

func (*virtualNetworkEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkEncryption)(nil)).Elem()
}

func (i *virtualNetworkEncryptionPtrType) ToVirtualNetworkEncryptionPtrOutput() VirtualNetworkEncryptionPtrOutput {
	return i.ToVirtualNetworkEncryptionPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkEncryptionPtrType) ToVirtualNetworkEncryptionPtrOutputWithContext(ctx context.Context) VirtualNetworkEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkEncryptionPtrOutput)
}

type VirtualNetworkEncryptionOutput struct{ *pulumi.OutputState }

func (VirtualNetworkEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkEncryption)(nil)).Elem()
}

func (o VirtualNetworkEncryptionOutput) ToVirtualNetworkEncryptionOutput() VirtualNetworkEncryptionOutput {
	return o
}

func (o VirtualNetworkEncryptionOutput) ToVirtualNetworkEncryptionOutputWithContext(ctx context.Context) VirtualNetworkEncryptionOutput {
	return o
}

func (o VirtualNetworkEncryptionOutput) ToVirtualNetworkEncryptionPtrOutput() VirtualNetworkEncryptionPtrOutput {
	return o.ToVirtualNetworkEncryptionPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkEncryptionOutput) ToVirtualNetworkEncryptionPtrOutputWithContext(ctx context.Context) VirtualNetworkEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNetworkEncryption) *VirtualNetworkEncryption {
		return &v
	}).(VirtualNetworkEncryptionPtrOutput)
}

// Specifies if the encrypted Virtual Network allows VM that does not support encryption. Possible values are `DropUnencrypted` and `AllowUnencrypted`.
func (o VirtualNetworkEncryptionOutput) Enforcement() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkEncryption) string { return v.Enforcement }).(pulumi.StringOutput)
}

type VirtualNetworkEncryptionPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkEncryption)(nil)).Elem()
}

func (o VirtualNetworkEncryptionPtrOutput) ToVirtualNetworkEncryptionPtrOutput() VirtualNetworkEncryptionPtrOutput {
	return o
}

func (o VirtualNetworkEncryptionPtrOutput) ToVirtualNetworkEncryptionPtrOutputWithContext(ctx context.Context) VirtualNetworkEncryptionPtrOutput {
	return o
}

func (o VirtualNetworkEncryptionPtrOutput) Elem() VirtualNetworkEncryptionOutput {
	return o.ApplyT(func(v *VirtualNetworkEncryption) VirtualNetworkEncryption {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkEncryption
		return ret
	}).(VirtualNetworkEncryptionOutput)
}

// Specifies if the encrypted Virtual Network allows VM that does not support encryption. Possible values are `DropUnencrypted` and `AllowUnencrypted`.
func (o VirtualNetworkEncryptionPtrOutput) Enforcement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkEncryption) *string {
		if v == nil {
			return nil
		}
		return &v.Enforcement
	}).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewayBgpSettings struct {
	// The Autonomous System Number (ASN) to use as part of the BGP.
	Asn *int `pulumi:"asn"`
	// The weight added to routes which have been learned through BGP peering. Valid values can be between `0` and `100`.
	PeerWeight *int `pulumi:"peerWeight"`
	// A list of `peeringAddresses` blocks as defined below. Only one `peeringAddresses` block can be specified except when `activeActive` of this Virtual Network Gateway is `true`.
	PeeringAddresses []VirtualNetworkGatewayBgpSettingsPeeringAddress `pulumi:"peeringAddresses"`
}

// VirtualNetworkGatewayBgpSettingsInput is an input type that accepts VirtualNetworkGatewayBgpSettingsArgs and VirtualNetworkGatewayBgpSettingsOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayBgpSettingsInput` via:
//
//	VirtualNetworkGatewayBgpSettingsArgs{...}
type VirtualNetworkGatewayBgpSettingsInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayBgpSettingsOutput() VirtualNetworkGatewayBgpSettingsOutput
	ToVirtualNetworkGatewayBgpSettingsOutputWithContext(context.Context) VirtualNetworkGatewayBgpSettingsOutput
}

type VirtualNetworkGatewayBgpSettingsArgs struct {
	// The Autonomous System Number (ASN) to use as part of the BGP.
	Asn pulumi.IntPtrInput `pulumi:"asn"`
	// The weight added to routes which have been learned through BGP peering. Valid values can be between `0` and `100`.
	PeerWeight pulumi.IntPtrInput `pulumi:"peerWeight"`
	// A list of `peeringAddresses` blocks as defined below. Only one `peeringAddresses` block can be specified except when `activeActive` of this Virtual Network Gateway is `true`.
	PeeringAddresses VirtualNetworkGatewayBgpSettingsPeeringAddressArrayInput `pulumi:"peeringAddresses"`
}

func (VirtualNetworkGatewayBgpSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayBgpSettings)(nil)).Elem()
}

func (i VirtualNetworkGatewayBgpSettingsArgs) ToVirtualNetworkGatewayBgpSettingsOutput() VirtualNetworkGatewayBgpSettingsOutput {
	return i.ToVirtualNetworkGatewayBgpSettingsOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayBgpSettingsArgs) ToVirtualNetworkGatewayBgpSettingsOutputWithContext(ctx context.Context) VirtualNetworkGatewayBgpSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayBgpSettingsOutput)
}

func (i VirtualNetworkGatewayBgpSettingsArgs) ToVirtualNetworkGatewayBgpSettingsPtrOutput() VirtualNetworkGatewayBgpSettingsPtrOutput {
	return i.ToVirtualNetworkGatewayBgpSettingsPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayBgpSettingsArgs) ToVirtualNetworkGatewayBgpSettingsPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayBgpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayBgpSettingsOutput).ToVirtualNetworkGatewayBgpSettingsPtrOutputWithContext(ctx)
}

// VirtualNetworkGatewayBgpSettingsPtrInput is an input type that accepts VirtualNetworkGatewayBgpSettingsArgs, VirtualNetworkGatewayBgpSettingsPtr and VirtualNetworkGatewayBgpSettingsPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayBgpSettingsPtrInput` via:
//
//	        VirtualNetworkGatewayBgpSettingsArgs{...}
//
//	or:
//
//	        nil
type VirtualNetworkGatewayBgpSettingsPtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayBgpSettingsPtrOutput() VirtualNetworkGatewayBgpSettingsPtrOutput
	ToVirtualNetworkGatewayBgpSettingsPtrOutputWithContext(context.Context) VirtualNetworkGatewayBgpSettingsPtrOutput
}

type virtualNetworkGatewayBgpSettingsPtrType VirtualNetworkGatewayBgpSettingsArgs

func VirtualNetworkGatewayBgpSettingsPtr(v *VirtualNetworkGatewayBgpSettingsArgs) VirtualNetworkGatewayBgpSettingsPtrInput {
	return (*virtualNetworkGatewayBgpSettingsPtrType)(v)
}

func (*virtualNetworkGatewayBgpSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayBgpSettings)(nil)).Elem()
}

func (i *virtualNetworkGatewayBgpSettingsPtrType) ToVirtualNetworkGatewayBgpSettingsPtrOutput() VirtualNetworkGatewayBgpSettingsPtrOutput {
	return i.ToVirtualNetworkGatewayBgpSettingsPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewayBgpSettingsPtrType) ToVirtualNetworkGatewayBgpSettingsPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayBgpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayBgpSettingsPtrOutput)
}

type VirtualNetworkGatewayBgpSettingsOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayBgpSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayBgpSettings)(nil)).Elem()
}

func (o VirtualNetworkGatewayBgpSettingsOutput) ToVirtualNetworkGatewayBgpSettingsOutput() VirtualNetworkGatewayBgpSettingsOutput {
	return o
}

func (o VirtualNetworkGatewayBgpSettingsOutput) ToVirtualNetworkGatewayBgpSettingsOutputWithContext(ctx context.Context) VirtualNetworkGatewayBgpSettingsOutput {
	return o
}

func (o VirtualNetworkGatewayBgpSettingsOutput) ToVirtualNetworkGatewayBgpSettingsPtrOutput() VirtualNetworkGatewayBgpSettingsPtrOutput {
	return o.ToVirtualNetworkGatewayBgpSettingsPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewayBgpSettingsOutput) ToVirtualNetworkGatewayBgpSettingsPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayBgpSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNetworkGatewayBgpSettings) *VirtualNetworkGatewayBgpSettings {
		return &v
	}).(VirtualNetworkGatewayBgpSettingsPtrOutput)
}

// The Autonomous System Number (ASN) to use as part of the BGP.
func (o VirtualNetworkGatewayBgpSettingsOutput) Asn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayBgpSettings) *int { return v.Asn }).(pulumi.IntPtrOutput)
}

// The weight added to routes which have been learned through BGP peering. Valid values can be between `0` and `100`.
func (o VirtualNetworkGatewayBgpSettingsOutput) PeerWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayBgpSettings) *int { return v.PeerWeight }).(pulumi.IntPtrOutput)
}

// A list of `peeringAddresses` blocks as defined below. Only one `peeringAddresses` block can be specified except when `activeActive` of this Virtual Network Gateway is `true`.
func (o VirtualNetworkGatewayBgpSettingsOutput) PeeringAddresses() VirtualNetworkGatewayBgpSettingsPeeringAddressArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayBgpSettings) []VirtualNetworkGatewayBgpSettingsPeeringAddress {
		return v.PeeringAddresses
	}).(VirtualNetworkGatewayBgpSettingsPeeringAddressArrayOutput)
}

type VirtualNetworkGatewayBgpSettingsPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayBgpSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayBgpSettings)(nil)).Elem()
}

func (o VirtualNetworkGatewayBgpSettingsPtrOutput) ToVirtualNetworkGatewayBgpSettingsPtrOutput() VirtualNetworkGatewayBgpSettingsPtrOutput {
	return o
}

func (o VirtualNetworkGatewayBgpSettingsPtrOutput) ToVirtualNetworkGatewayBgpSettingsPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayBgpSettingsPtrOutput {
	return o
}

func (o VirtualNetworkGatewayBgpSettingsPtrOutput) Elem() VirtualNetworkGatewayBgpSettingsOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayBgpSettings) VirtualNetworkGatewayBgpSettings {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkGatewayBgpSettings
		return ret
	}).(VirtualNetworkGatewayBgpSettingsOutput)
}

// The Autonomous System Number (ASN) to use as part of the BGP.
func (o VirtualNetworkGatewayBgpSettingsPtrOutput) Asn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayBgpSettings) *int {
		if v == nil {
			return nil
		}
		return v.Asn
	}).(pulumi.IntPtrOutput)
}

// The weight added to routes which have been learned through BGP peering. Valid values can be between `0` and `100`.
func (o VirtualNetworkGatewayBgpSettingsPtrOutput) PeerWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayBgpSettings) *int {
		if v == nil {
			return nil
		}
		return v.PeerWeight
	}).(pulumi.IntPtrOutput)
}

// A list of `peeringAddresses` blocks as defined below. Only one `peeringAddresses` block can be specified except when `activeActive` of this Virtual Network Gateway is `true`.
func (o VirtualNetworkGatewayBgpSettingsPtrOutput) PeeringAddresses() VirtualNetworkGatewayBgpSettingsPeeringAddressArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayBgpSettings) []VirtualNetworkGatewayBgpSettingsPeeringAddress {
		if v == nil {
			return nil
		}
		return v.PeeringAddresses
	}).(VirtualNetworkGatewayBgpSettingsPeeringAddressArrayOutput)
}

type VirtualNetworkGatewayBgpSettingsPeeringAddress struct {
	// A list of Azure custom APIPA addresses assigned to the BGP peer of the Virtual Network Gateway.
	//
	// > **Note:** The valid range for the reserved APIPA address in Azure Public is from `169.254.21.0` to `169.254.22.255`.
	ApipaAddresses []string `pulumi:"apipaAddresses"`
	// A list of peering address assigned to the BGP peer of the Virtual Network Gateway.
	DefaultAddresses []string `pulumi:"defaultAddresses"`
	// The name of the IP configuration of this Virtual Network Gateway. In case there are multiple `ipConfiguration` blocks defined, this property is **required** to specify.
	IpConfigurationName *string `pulumi:"ipConfigurationName"`
	// A list of tunnel IP addresses assigned to the BGP peer of the Virtual Network Gateway.
	TunnelIpAddresses []string `pulumi:"tunnelIpAddresses"`
}

// VirtualNetworkGatewayBgpSettingsPeeringAddressInput is an input type that accepts VirtualNetworkGatewayBgpSettingsPeeringAddressArgs and VirtualNetworkGatewayBgpSettingsPeeringAddressOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayBgpSettingsPeeringAddressInput` via:
//
//	VirtualNetworkGatewayBgpSettingsPeeringAddressArgs{...}
type VirtualNetworkGatewayBgpSettingsPeeringAddressInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayBgpSettingsPeeringAddressOutput() VirtualNetworkGatewayBgpSettingsPeeringAddressOutput
	ToVirtualNetworkGatewayBgpSettingsPeeringAddressOutputWithContext(context.Context) VirtualNetworkGatewayBgpSettingsPeeringAddressOutput
}

type VirtualNetworkGatewayBgpSettingsPeeringAddressArgs struct {
	// A list of Azure custom APIPA addresses assigned to the BGP peer of the Virtual Network Gateway.
	//
	// > **Note:** The valid range for the reserved APIPA address in Azure Public is from `169.254.21.0` to `169.254.22.255`.
	ApipaAddresses pulumi.StringArrayInput `pulumi:"apipaAddresses"`
	// A list of peering address assigned to the BGP peer of the Virtual Network Gateway.
	DefaultAddresses pulumi.StringArrayInput `pulumi:"defaultAddresses"`
	// The name of the IP configuration of this Virtual Network Gateway. In case there are multiple `ipConfiguration` blocks defined, this property is **required** to specify.
	IpConfigurationName pulumi.StringPtrInput `pulumi:"ipConfigurationName"`
	// A list of tunnel IP addresses assigned to the BGP peer of the Virtual Network Gateway.
	TunnelIpAddresses pulumi.StringArrayInput `pulumi:"tunnelIpAddresses"`
}

func (VirtualNetworkGatewayBgpSettingsPeeringAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayBgpSettingsPeeringAddress)(nil)).Elem()
}

func (i VirtualNetworkGatewayBgpSettingsPeeringAddressArgs) ToVirtualNetworkGatewayBgpSettingsPeeringAddressOutput() VirtualNetworkGatewayBgpSettingsPeeringAddressOutput {
	return i.ToVirtualNetworkGatewayBgpSettingsPeeringAddressOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayBgpSettingsPeeringAddressArgs) ToVirtualNetworkGatewayBgpSettingsPeeringAddressOutputWithContext(ctx context.Context) VirtualNetworkGatewayBgpSettingsPeeringAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayBgpSettingsPeeringAddressOutput)
}

// VirtualNetworkGatewayBgpSettingsPeeringAddressArrayInput is an input type that accepts VirtualNetworkGatewayBgpSettingsPeeringAddressArray and VirtualNetworkGatewayBgpSettingsPeeringAddressArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayBgpSettingsPeeringAddressArrayInput` via:
//
//	VirtualNetworkGatewayBgpSettingsPeeringAddressArray{ VirtualNetworkGatewayBgpSettingsPeeringAddressArgs{...} }
type VirtualNetworkGatewayBgpSettingsPeeringAddressArrayInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayBgpSettingsPeeringAddressArrayOutput() VirtualNetworkGatewayBgpSettingsPeeringAddressArrayOutput
	ToVirtualNetworkGatewayBgpSettingsPeeringAddressArrayOutputWithContext(context.Context) VirtualNetworkGatewayBgpSettingsPeeringAddressArrayOutput
}

type VirtualNetworkGatewayBgpSettingsPeeringAddressArray []VirtualNetworkGatewayBgpSettingsPeeringAddressInput

func (VirtualNetworkGatewayBgpSettingsPeeringAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayBgpSettingsPeeringAddress)(nil)).Elem()
}

func (i VirtualNetworkGatewayBgpSettingsPeeringAddressArray) ToVirtualNetworkGatewayBgpSettingsPeeringAddressArrayOutput() VirtualNetworkGatewayBgpSettingsPeeringAddressArrayOutput {
	return i.ToVirtualNetworkGatewayBgpSettingsPeeringAddressArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayBgpSettingsPeeringAddressArray) ToVirtualNetworkGatewayBgpSettingsPeeringAddressArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayBgpSettingsPeeringAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayBgpSettingsPeeringAddressArrayOutput)
}

type VirtualNetworkGatewayBgpSettingsPeeringAddressOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayBgpSettingsPeeringAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayBgpSettingsPeeringAddress)(nil)).Elem()
}

func (o VirtualNetworkGatewayBgpSettingsPeeringAddressOutput) ToVirtualNetworkGatewayBgpSettingsPeeringAddressOutput() VirtualNetworkGatewayBgpSettingsPeeringAddressOutput {
	return o
}

func (o VirtualNetworkGatewayBgpSettingsPeeringAddressOutput) ToVirtualNetworkGatewayBgpSettingsPeeringAddressOutputWithContext(ctx context.Context) VirtualNetworkGatewayBgpSettingsPeeringAddressOutput {
	return o
}

// A list of Azure custom APIPA addresses assigned to the BGP peer of the Virtual Network Gateway.
//
// > **Note:** The valid range for the reserved APIPA address in Azure Public is from `169.254.21.0` to `169.254.22.255`.
func (o VirtualNetworkGatewayBgpSettingsPeeringAddressOutput) ApipaAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayBgpSettingsPeeringAddress) []string { return v.ApipaAddresses }).(pulumi.StringArrayOutput)
}

// A list of peering address assigned to the BGP peer of the Virtual Network Gateway.
func (o VirtualNetworkGatewayBgpSettingsPeeringAddressOutput) DefaultAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayBgpSettingsPeeringAddress) []string { return v.DefaultAddresses }).(pulumi.StringArrayOutput)
}

// The name of the IP configuration of this Virtual Network Gateway. In case there are multiple `ipConfiguration` blocks defined, this property is **required** to specify.
func (o VirtualNetworkGatewayBgpSettingsPeeringAddressOutput) IpConfigurationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayBgpSettingsPeeringAddress) *string { return v.IpConfigurationName }).(pulumi.StringPtrOutput)
}

// A list of tunnel IP addresses assigned to the BGP peer of the Virtual Network Gateway.
func (o VirtualNetworkGatewayBgpSettingsPeeringAddressOutput) TunnelIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayBgpSettingsPeeringAddress) []string { return v.TunnelIpAddresses }).(pulumi.StringArrayOutput)
}

type VirtualNetworkGatewayBgpSettingsPeeringAddressArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayBgpSettingsPeeringAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayBgpSettingsPeeringAddress)(nil)).Elem()
}

func (o VirtualNetworkGatewayBgpSettingsPeeringAddressArrayOutput) ToVirtualNetworkGatewayBgpSettingsPeeringAddressArrayOutput() VirtualNetworkGatewayBgpSettingsPeeringAddressArrayOutput {
	return o
}

func (o VirtualNetworkGatewayBgpSettingsPeeringAddressArrayOutput) ToVirtualNetworkGatewayBgpSettingsPeeringAddressArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayBgpSettingsPeeringAddressArrayOutput {
	return o
}

func (o VirtualNetworkGatewayBgpSettingsPeeringAddressArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayBgpSettingsPeeringAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayBgpSettingsPeeringAddress {
		return vs[0].([]VirtualNetworkGatewayBgpSettingsPeeringAddress)[vs[1].(int)]
	}).(VirtualNetworkGatewayBgpSettingsPeeringAddressOutput)
}

type VirtualNetworkGatewayConnectionCustomBgpAddresses struct {
	// single IP address that is part of the `network.VirtualNetworkGateway` ipConfiguration (first one)
	Primary string `pulumi:"primary"`
	// single IP address that is part of the `network.VirtualNetworkGateway` ipConfiguration (second one)
	Secondary *string `pulumi:"secondary"`
}

// VirtualNetworkGatewayConnectionCustomBgpAddressesInput is an input type that accepts VirtualNetworkGatewayConnectionCustomBgpAddressesArgs and VirtualNetworkGatewayConnectionCustomBgpAddressesOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayConnectionCustomBgpAddressesInput` via:
//
//	VirtualNetworkGatewayConnectionCustomBgpAddressesArgs{...}
type VirtualNetworkGatewayConnectionCustomBgpAddressesInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayConnectionCustomBgpAddressesOutput() VirtualNetworkGatewayConnectionCustomBgpAddressesOutput
	ToVirtualNetworkGatewayConnectionCustomBgpAddressesOutputWithContext(context.Context) VirtualNetworkGatewayConnectionCustomBgpAddressesOutput
}

type VirtualNetworkGatewayConnectionCustomBgpAddressesArgs struct {
	// single IP address that is part of the `network.VirtualNetworkGateway` ipConfiguration (first one)
	Primary pulumi.StringInput `pulumi:"primary"`
	// single IP address that is part of the `network.VirtualNetworkGateway` ipConfiguration (second one)
	Secondary pulumi.StringPtrInput `pulumi:"secondary"`
}

func (VirtualNetworkGatewayConnectionCustomBgpAddressesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayConnectionCustomBgpAddresses)(nil)).Elem()
}

func (i VirtualNetworkGatewayConnectionCustomBgpAddressesArgs) ToVirtualNetworkGatewayConnectionCustomBgpAddressesOutput() VirtualNetworkGatewayConnectionCustomBgpAddressesOutput {
	return i.ToVirtualNetworkGatewayConnectionCustomBgpAddressesOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayConnectionCustomBgpAddressesArgs) ToVirtualNetworkGatewayConnectionCustomBgpAddressesOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionCustomBgpAddressesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayConnectionCustomBgpAddressesOutput)
}

func (i VirtualNetworkGatewayConnectionCustomBgpAddressesArgs) ToVirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutput() VirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutput {
	return i.ToVirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayConnectionCustomBgpAddressesArgs) ToVirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayConnectionCustomBgpAddressesOutput).ToVirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutputWithContext(ctx)
}

// VirtualNetworkGatewayConnectionCustomBgpAddressesPtrInput is an input type that accepts VirtualNetworkGatewayConnectionCustomBgpAddressesArgs, VirtualNetworkGatewayConnectionCustomBgpAddressesPtr and VirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayConnectionCustomBgpAddressesPtrInput` via:
//
//	        VirtualNetworkGatewayConnectionCustomBgpAddressesArgs{...}
//
//	or:
//
//	        nil
type VirtualNetworkGatewayConnectionCustomBgpAddressesPtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutput() VirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutput
	ToVirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutputWithContext(context.Context) VirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutput
}

type virtualNetworkGatewayConnectionCustomBgpAddressesPtrType VirtualNetworkGatewayConnectionCustomBgpAddressesArgs

func VirtualNetworkGatewayConnectionCustomBgpAddressesPtr(v *VirtualNetworkGatewayConnectionCustomBgpAddressesArgs) VirtualNetworkGatewayConnectionCustomBgpAddressesPtrInput {
	return (*virtualNetworkGatewayConnectionCustomBgpAddressesPtrType)(v)
}

func (*virtualNetworkGatewayConnectionCustomBgpAddressesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayConnectionCustomBgpAddresses)(nil)).Elem()
}

func (i *virtualNetworkGatewayConnectionCustomBgpAddressesPtrType) ToVirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutput() VirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutput {
	return i.ToVirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewayConnectionCustomBgpAddressesPtrType) ToVirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutput)
}

type VirtualNetworkGatewayConnectionCustomBgpAddressesOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayConnectionCustomBgpAddressesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayConnectionCustomBgpAddresses)(nil)).Elem()
}

func (o VirtualNetworkGatewayConnectionCustomBgpAddressesOutput) ToVirtualNetworkGatewayConnectionCustomBgpAddressesOutput() VirtualNetworkGatewayConnectionCustomBgpAddressesOutput {
	return o
}

func (o VirtualNetworkGatewayConnectionCustomBgpAddressesOutput) ToVirtualNetworkGatewayConnectionCustomBgpAddressesOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionCustomBgpAddressesOutput {
	return o
}

func (o VirtualNetworkGatewayConnectionCustomBgpAddressesOutput) ToVirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutput() VirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutput {
	return o.ToVirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewayConnectionCustomBgpAddressesOutput) ToVirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNetworkGatewayConnectionCustomBgpAddresses) *VirtualNetworkGatewayConnectionCustomBgpAddresses {
		return &v
	}).(VirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutput)
}

// single IP address that is part of the `network.VirtualNetworkGateway` ipConfiguration (first one)
func (o VirtualNetworkGatewayConnectionCustomBgpAddressesOutput) Primary() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionCustomBgpAddresses) string { return v.Primary }).(pulumi.StringOutput)
}

// single IP address that is part of the `network.VirtualNetworkGateway` ipConfiguration (second one)
func (o VirtualNetworkGatewayConnectionCustomBgpAddressesOutput) Secondary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionCustomBgpAddresses) *string { return v.Secondary }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayConnectionCustomBgpAddresses)(nil)).Elem()
}

func (o VirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutput) ToVirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutput() VirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutput {
	return o
}

func (o VirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutput) ToVirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutput {
	return o
}

func (o VirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutput) Elem() VirtualNetworkGatewayConnectionCustomBgpAddressesOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionCustomBgpAddresses) VirtualNetworkGatewayConnectionCustomBgpAddresses {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkGatewayConnectionCustomBgpAddresses
		return ret
	}).(VirtualNetworkGatewayConnectionCustomBgpAddressesOutput)
}

// single IP address that is part of the `network.VirtualNetworkGateway` ipConfiguration (first one)
func (o VirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutput) Primary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionCustomBgpAddresses) *string {
		if v == nil {
			return nil
		}
		return &v.Primary
	}).(pulumi.StringPtrOutput)
}

// single IP address that is part of the `network.VirtualNetworkGateway` ipConfiguration (second one)
func (o VirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutput) Secondary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionCustomBgpAddresses) *string {
		if v == nil {
			return nil
		}
		return v.Secondary
	}).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewayConnectionIpsecPolicy struct {
	// The DH group used in IKE phase 1 for initial SA. Valid options are `DHGroup1`, `DHGroup14`, `DHGroup2`, `DHGroup2048`, `DHGroup24`, `ECP256`, `ECP384`, or `None`.
	DhGroup string `pulumi:"dhGroup"`
	// The IKE encryption algorithm. Valid options are `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128`, or `GCMAES256`.
	IkeEncryption string `pulumi:"ikeEncryption"`
	// The IKE integrity algorithm. Valid options are `GCMAES128`, `GCMAES256`, `MD5`, `SHA1`, `SHA256`, or `SHA384`.
	IkeIntegrity string `pulumi:"ikeIntegrity"`
	// The IPSec encryption algorithm. Valid options are `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128`, `GCMAES192`, `GCMAES256`, or `None`.
	IpsecEncryption string `pulumi:"ipsecEncryption"`
	// The IPSec integrity algorithm. Valid options are `GCMAES128`, `GCMAES192`, `GCMAES256`, `MD5`, `SHA1`, or `SHA256`.
	IpsecIntegrity string `pulumi:"ipsecIntegrity"`
	// The DH group used in IKE phase 2 for new child SA.
	// Valid options are `ECP256`, `ECP384`, `PFS1`, `PFS14`, `PFS2`, `PFS2048`, `PFS24`, `PFSMM`,
	// or `None`.
	PfsGroup string `pulumi:"pfsGroup"`
	// The IPSec SA payload size in KB. Must be at least `1024` KB. Defaults to `102400000` KB.
	SaDatasize *int `pulumi:"saDatasize"`
	// The IPSec SA lifetime in seconds. Must be at least `300` seconds. Defaults to `27000` seconds.
	SaLifetime *int `pulumi:"saLifetime"`
}

// VirtualNetworkGatewayConnectionIpsecPolicyInput is an input type that accepts VirtualNetworkGatewayConnectionIpsecPolicyArgs and VirtualNetworkGatewayConnectionIpsecPolicyOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayConnectionIpsecPolicyInput` via:
//
//	VirtualNetworkGatewayConnectionIpsecPolicyArgs{...}
type VirtualNetworkGatewayConnectionIpsecPolicyInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayConnectionIpsecPolicyOutput() VirtualNetworkGatewayConnectionIpsecPolicyOutput
	ToVirtualNetworkGatewayConnectionIpsecPolicyOutputWithContext(context.Context) VirtualNetworkGatewayConnectionIpsecPolicyOutput
}

type VirtualNetworkGatewayConnectionIpsecPolicyArgs struct {
	// The DH group used in IKE phase 1 for initial SA. Valid options are `DHGroup1`, `DHGroup14`, `DHGroup2`, `DHGroup2048`, `DHGroup24`, `ECP256`, `ECP384`, or `None`.
	DhGroup pulumi.StringInput `pulumi:"dhGroup"`
	// The IKE encryption algorithm. Valid options are `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128`, or `GCMAES256`.
	IkeEncryption pulumi.StringInput `pulumi:"ikeEncryption"`
	// The IKE integrity algorithm. Valid options are `GCMAES128`, `GCMAES256`, `MD5`, `SHA1`, `SHA256`, or `SHA384`.
	IkeIntegrity pulumi.StringInput `pulumi:"ikeIntegrity"`
	// The IPSec encryption algorithm. Valid options are `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128`, `GCMAES192`, `GCMAES256`, or `None`.
	IpsecEncryption pulumi.StringInput `pulumi:"ipsecEncryption"`
	// The IPSec integrity algorithm. Valid options are `GCMAES128`, `GCMAES192`, `GCMAES256`, `MD5`, `SHA1`, or `SHA256`.
	IpsecIntegrity pulumi.StringInput `pulumi:"ipsecIntegrity"`
	// The DH group used in IKE phase 2 for new child SA.
	// Valid options are `ECP256`, `ECP384`, `PFS1`, `PFS14`, `PFS2`, `PFS2048`, `PFS24`, `PFSMM`,
	// or `None`.
	PfsGroup pulumi.StringInput `pulumi:"pfsGroup"`
	// The IPSec SA payload size in KB. Must be at least `1024` KB. Defaults to `102400000` KB.
	SaDatasize pulumi.IntPtrInput `pulumi:"saDatasize"`
	// The IPSec SA lifetime in seconds. Must be at least `300` seconds. Defaults to `27000` seconds.
	SaLifetime pulumi.IntPtrInput `pulumi:"saLifetime"`
}

func (VirtualNetworkGatewayConnectionIpsecPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayConnectionIpsecPolicy)(nil)).Elem()
}

func (i VirtualNetworkGatewayConnectionIpsecPolicyArgs) ToVirtualNetworkGatewayConnectionIpsecPolicyOutput() VirtualNetworkGatewayConnectionIpsecPolicyOutput {
	return i.ToVirtualNetworkGatewayConnectionIpsecPolicyOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayConnectionIpsecPolicyArgs) ToVirtualNetworkGatewayConnectionIpsecPolicyOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionIpsecPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayConnectionIpsecPolicyOutput)
}

func (i VirtualNetworkGatewayConnectionIpsecPolicyArgs) ToVirtualNetworkGatewayConnectionIpsecPolicyPtrOutput() VirtualNetworkGatewayConnectionIpsecPolicyPtrOutput {
	return i.ToVirtualNetworkGatewayConnectionIpsecPolicyPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayConnectionIpsecPolicyArgs) ToVirtualNetworkGatewayConnectionIpsecPolicyPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionIpsecPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayConnectionIpsecPolicyOutput).ToVirtualNetworkGatewayConnectionIpsecPolicyPtrOutputWithContext(ctx)
}

// VirtualNetworkGatewayConnectionIpsecPolicyPtrInput is an input type that accepts VirtualNetworkGatewayConnectionIpsecPolicyArgs, VirtualNetworkGatewayConnectionIpsecPolicyPtr and VirtualNetworkGatewayConnectionIpsecPolicyPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayConnectionIpsecPolicyPtrInput` via:
//
//	        VirtualNetworkGatewayConnectionIpsecPolicyArgs{...}
//
//	or:
//
//	        nil
type VirtualNetworkGatewayConnectionIpsecPolicyPtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayConnectionIpsecPolicyPtrOutput() VirtualNetworkGatewayConnectionIpsecPolicyPtrOutput
	ToVirtualNetworkGatewayConnectionIpsecPolicyPtrOutputWithContext(context.Context) VirtualNetworkGatewayConnectionIpsecPolicyPtrOutput
}

type virtualNetworkGatewayConnectionIpsecPolicyPtrType VirtualNetworkGatewayConnectionIpsecPolicyArgs

func VirtualNetworkGatewayConnectionIpsecPolicyPtr(v *VirtualNetworkGatewayConnectionIpsecPolicyArgs) VirtualNetworkGatewayConnectionIpsecPolicyPtrInput {
	return (*virtualNetworkGatewayConnectionIpsecPolicyPtrType)(v)
}

func (*virtualNetworkGatewayConnectionIpsecPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayConnectionIpsecPolicy)(nil)).Elem()
}

func (i *virtualNetworkGatewayConnectionIpsecPolicyPtrType) ToVirtualNetworkGatewayConnectionIpsecPolicyPtrOutput() VirtualNetworkGatewayConnectionIpsecPolicyPtrOutput {
	return i.ToVirtualNetworkGatewayConnectionIpsecPolicyPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewayConnectionIpsecPolicyPtrType) ToVirtualNetworkGatewayConnectionIpsecPolicyPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionIpsecPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayConnectionIpsecPolicyPtrOutput)
}

type VirtualNetworkGatewayConnectionIpsecPolicyOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayConnectionIpsecPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayConnectionIpsecPolicy)(nil)).Elem()
}

func (o VirtualNetworkGatewayConnectionIpsecPolicyOutput) ToVirtualNetworkGatewayConnectionIpsecPolicyOutput() VirtualNetworkGatewayConnectionIpsecPolicyOutput {
	return o
}

func (o VirtualNetworkGatewayConnectionIpsecPolicyOutput) ToVirtualNetworkGatewayConnectionIpsecPolicyOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionIpsecPolicyOutput {
	return o
}

func (o VirtualNetworkGatewayConnectionIpsecPolicyOutput) ToVirtualNetworkGatewayConnectionIpsecPolicyPtrOutput() VirtualNetworkGatewayConnectionIpsecPolicyPtrOutput {
	return o.ToVirtualNetworkGatewayConnectionIpsecPolicyPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewayConnectionIpsecPolicyOutput) ToVirtualNetworkGatewayConnectionIpsecPolicyPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionIpsecPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNetworkGatewayConnectionIpsecPolicy) *VirtualNetworkGatewayConnectionIpsecPolicy {
		return &v
	}).(VirtualNetworkGatewayConnectionIpsecPolicyPtrOutput)
}

// The DH group used in IKE phase 1 for initial SA. Valid options are `DHGroup1`, `DHGroup14`, `DHGroup2`, `DHGroup2048`, `DHGroup24`, `ECP256`, `ECP384`, or `None`.
func (o VirtualNetworkGatewayConnectionIpsecPolicyOutput) DhGroup() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionIpsecPolicy) string { return v.DhGroup }).(pulumi.StringOutput)
}

// The IKE encryption algorithm. Valid options are `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128`, or `GCMAES256`.
func (o VirtualNetworkGatewayConnectionIpsecPolicyOutput) IkeEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionIpsecPolicy) string { return v.IkeEncryption }).(pulumi.StringOutput)
}

// The IKE integrity algorithm. Valid options are `GCMAES128`, `GCMAES256`, `MD5`, `SHA1`, `SHA256`, or `SHA384`.
func (o VirtualNetworkGatewayConnectionIpsecPolicyOutput) IkeIntegrity() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionIpsecPolicy) string { return v.IkeIntegrity }).(pulumi.StringOutput)
}

// The IPSec encryption algorithm. Valid options are `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128`, `GCMAES192`, `GCMAES256`, or `None`.
func (o VirtualNetworkGatewayConnectionIpsecPolicyOutput) IpsecEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionIpsecPolicy) string { return v.IpsecEncryption }).(pulumi.StringOutput)
}

// The IPSec integrity algorithm. Valid options are `GCMAES128`, `GCMAES192`, `GCMAES256`, `MD5`, `SHA1`, or `SHA256`.
func (o VirtualNetworkGatewayConnectionIpsecPolicyOutput) IpsecIntegrity() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionIpsecPolicy) string { return v.IpsecIntegrity }).(pulumi.StringOutput)
}

// The DH group used in IKE phase 2 for new child SA.
// Valid options are `ECP256`, `ECP384`, `PFS1`, `PFS14`, `PFS2`, `PFS2048`, `PFS24`, `PFSMM`,
// or `None`.
func (o VirtualNetworkGatewayConnectionIpsecPolicyOutput) PfsGroup() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionIpsecPolicy) string { return v.PfsGroup }).(pulumi.StringOutput)
}

// The IPSec SA payload size in KB. Must be at least `1024` KB. Defaults to `102400000` KB.
func (o VirtualNetworkGatewayConnectionIpsecPolicyOutput) SaDatasize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionIpsecPolicy) *int { return v.SaDatasize }).(pulumi.IntPtrOutput)
}

// The IPSec SA lifetime in seconds. Must be at least `300` seconds. Defaults to `27000` seconds.
func (o VirtualNetworkGatewayConnectionIpsecPolicyOutput) SaLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionIpsecPolicy) *int { return v.SaLifetime }).(pulumi.IntPtrOutput)
}

type VirtualNetworkGatewayConnectionIpsecPolicyPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayConnectionIpsecPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayConnectionIpsecPolicy)(nil)).Elem()
}

func (o VirtualNetworkGatewayConnectionIpsecPolicyPtrOutput) ToVirtualNetworkGatewayConnectionIpsecPolicyPtrOutput() VirtualNetworkGatewayConnectionIpsecPolicyPtrOutput {
	return o
}

func (o VirtualNetworkGatewayConnectionIpsecPolicyPtrOutput) ToVirtualNetworkGatewayConnectionIpsecPolicyPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionIpsecPolicyPtrOutput {
	return o
}

func (o VirtualNetworkGatewayConnectionIpsecPolicyPtrOutput) Elem() VirtualNetworkGatewayConnectionIpsecPolicyOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionIpsecPolicy) VirtualNetworkGatewayConnectionIpsecPolicy {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkGatewayConnectionIpsecPolicy
		return ret
	}).(VirtualNetworkGatewayConnectionIpsecPolicyOutput)
}

// The DH group used in IKE phase 1 for initial SA. Valid options are `DHGroup1`, `DHGroup14`, `DHGroup2`, `DHGroup2048`, `DHGroup24`, `ECP256`, `ECP384`, or `None`.
func (o VirtualNetworkGatewayConnectionIpsecPolicyPtrOutput) DhGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionIpsecPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.DhGroup
	}).(pulumi.StringPtrOutput)
}

// The IKE encryption algorithm. Valid options are `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128`, or `GCMAES256`.
func (o VirtualNetworkGatewayConnectionIpsecPolicyPtrOutput) IkeEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionIpsecPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.IkeEncryption
	}).(pulumi.StringPtrOutput)
}

// The IKE integrity algorithm. Valid options are `GCMAES128`, `GCMAES256`, `MD5`, `SHA1`, `SHA256`, or `SHA384`.
func (o VirtualNetworkGatewayConnectionIpsecPolicyPtrOutput) IkeIntegrity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionIpsecPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.IkeIntegrity
	}).(pulumi.StringPtrOutput)
}

// The IPSec encryption algorithm. Valid options are `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128`, `GCMAES192`, `GCMAES256`, or `None`.
func (o VirtualNetworkGatewayConnectionIpsecPolicyPtrOutput) IpsecEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionIpsecPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.IpsecEncryption
	}).(pulumi.StringPtrOutput)
}

// The IPSec integrity algorithm. Valid options are `GCMAES128`, `GCMAES192`, `GCMAES256`, `MD5`, `SHA1`, or `SHA256`.
func (o VirtualNetworkGatewayConnectionIpsecPolicyPtrOutput) IpsecIntegrity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionIpsecPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.IpsecIntegrity
	}).(pulumi.StringPtrOutput)
}

// The DH group used in IKE phase 2 for new child SA.
// Valid options are `ECP256`, `ECP384`, `PFS1`, `PFS14`, `PFS2`, `PFS2048`, `PFS24`, `PFSMM`,
// or `None`.
func (o VirtualNetworkGatewayConnectionIpsecPolicyPtrOutput) PfsGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionIpsecPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.PfsGroup
	}).(pulumi.StringPtrOutput)
}

// The IPSec SA payload size in KB. Must be at least `1024` KB. Defaults to `102400000` KB.
func (o VirtualNetworkGatewayConnectionIpsecPolicyPtrOutput) SaDatasize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionIpsecPolicy) *int {
		if v == nil {
			return nil
		}
		return v.SaDatasize
	}).(pulumi.IntPtrOutput)
}

// The IPSec SA lifetime in seconds. Must be at least `300` seconds. Defaults to `27000` seconds.
func (o VirtualNetworkGatewayConnectionIpsecPolicyPtrOutput) SaLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionIpsecPolicy) *int {
		if v == nil {
			return nil
		}
		return v.SaLifetime
	}).(pulumi.IntPtrOutput)
}

type VirtualNetworkGatewayConnectionTrafficSelectorPolicy struct {
	// List of local CIDRs.
	LocalAddressCidrs []string `pulumi:"localAddressCidrs"`
	// List of remote CIDRs.
	RemoteAddressCidrs []string `pulumi:"remoteAddressCidrs"`
}

// VirtualNetworkGatewayConnectionTrafficSelectorPolicyInput is an input type that accepts VirtualNetworkGatewayConnectionTrafficSelectorPolicyArgs and VirtualNetworkGatewayConnectionTrafficSelectorPolicyOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayConnectionTrafficSelectorPolicyInput` via:
//
//	VirtualNetworkGatewayConnectionTrafficSelectorPolicyArgs{...}
type VirtualNetworkGatewayConnectionTrafficSelectorPolicyInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayConnectionTrafficSelectorPolicyOutput() VirtualNetworkGatewayConnectionTrafficSelectorPolicyOutput
	ToVirtualNetworkGatewayConnectionTrafficSelectorPolicyOutputWithContext(context.Context) VirtualNetworkGatewayConnectionTrafficSelectorPolicyOutput
}

type VirtualNetworkGatewayConnectionTrafficSelectorPolicyArgs struct {
	// List of local CIDRs.
	LocalAddressCidrs pulumi.StringArrayInput `pulumi:"localAddressCidrs"`
	// List of remote CIDRs.
	RemoteAddressCidrs pulumi.StringArrayInput `pulumi:"remoteAddressCidrs"`
}

func (VirtualNetworkGatewayConnectionTrafficSelectorPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayConnectionTrafficSelectorPolicy)(nil)).Elem()
}

func (i VirtualNetworkGatewayConnectionTrafficSelectorPolicyArgs) ToVirtualNetworkGatewayConnectionTrafficSelectorPolicyOutput() VirtualNetworkGatewayConnectionTrafficSelectorPolicyOutput {
	return i.ToVirtualNetworkGatewayConnectionTrafficSelectorPolicyOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayConnectionTrafficSelectorPolicyArgs) ToVirtualNetworkGatewayConnectionTrafficSelectorPolicyOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionTrafficSelectorPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayConnectionTrafficSelectorPolicyOutput)
}

func (i VirtualNetworkGatewayConnectionTrafficSelectorPolicyArgs) ToVirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutput() VirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutput {
	return i.ToVirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayConnectionTrafficSelectorPolicyArgs) ToVirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayConnectionTrafficSelectorPolicyOutput).ToVirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutputWithContext(ctx)
}

// VirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrInput is an input type that accepts VirtualNetworkGatewayConnectionTrafficSelectorPolicyArgs, VirtualNetworkGatewayConnectionTrafficSelectorPolicyPtr and VirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrInput` via:
//
//	        VirtualNetworkGatewayConnectionTrafficSelectorPolicyArgs{...}
//
//	or:
//
//	        nil
type VirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutput() VirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutput
	ToVirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutputWithContext(context.Context) VirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutput
}

type virtualNetworkGatewayConnectionTrafficSelectorPolicyPtrType VirtualNetworkGatewayConnectionTrafficSelectorPolicyArgs

func VirtualNetworkGatewayConnectionTrafficSelectorPolicyPtr(v *VirtualNetworkGatewayConnectionTrafficSelectorPolicyArgs) VirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrInput {
	return (*virtualNetworkGatewayConnectionTrafficSelectorPolicyPtrType)(v)
}

func (*virtualNetworkGatewayConnectionTrafficSelectorPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayConnectionTrafficSelectorPolicy)(nil)).Elem()
}

func (i *virtualNetworkGatewayConnectionTrafficSelectorPolicyPtrType) ToVirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutput() VirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutput {
	return i.ToVirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewayConnectionTrafficSelectorPolicyPtrType) ToVirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutput)
}

type VirtualNetworkGatewayConnectionTrafficSelectorPolicyOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayConnectionTrafficSelectorPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayConnectionTrafficSelectorPolicy)(nil)).Elem()
}

func (o VirtualNetworkGatewayConnectionTrafficSelectorPolicyOutput) ToVirtualNetworkGatewayConnectionTrafficSelectorPolicyOutput() VirtualNetworkGatewayConnectionTrafficSelectorPolicyOutput {
	return o
}

func (o VirtualNetworkGatewayConnectionTrafficSelectorPolicyOutput) ToVirtualNetworkGatewayConnectionTrafficSelectorPolicyOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionTrafficSelectorPolicyOutput {
	return o
}

func (o VirtualNetworkGatewayConnectionTrafficSelectorPolicyOutput) ToVirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutput() VirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutput {
	return o.ToVirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewayConnectionTrafficSelectorPolicyOutput) ToVirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNetworkGatewayConnectionTrafficSelectorPolicy) *VirtualNetworkGatewayConnectionTrafficSelectorPolicy {
		return &v
	}).(VirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutput)
}

// List of local CIDRs.
func (o VirtualNetworkGatewayConnectionTrafficSelectorPolicyOutput) LocalAddressCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionTrafficSelectorPolicy) []string { return v.LocalAddressCidrs }).(pulumi.StringArrayOutput)
}

// List of remote CIDRs.
func (o VirtualNetworkGatewayConnectionTrafficSelectorPolicyOutput) RemoteAddressCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayConnectionTrafficSelectorPolicy) []string { return v.RemoteAddressCidrs }).(pulumi.StringArrayOutput)
}

type VirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayConnectionTrafficSelectorPolicy)(nil)).Elem()
}

func (o VirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutput) ToVirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutput() VirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutput {
	return o
}

func (o VirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutput) ToVirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutput {
	return o
}

func (o VirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutput) Elem() VirtualNetworkGatewayConnectionTrafficSelectorPolicyOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionTrafficSelectorPolicy) VirtualNetworkGatewayConnectionTrafficSelectorPolicy {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkGatewayConnectionTrafficSelectorPolicy
		return ret
	}).(VirtualNetworkGatewayConnectionTrafficSelectorPolicyOutput)
}

// List of local CIDRs.
func (o VirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutput) LocalAddressCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionTrafficSelectorPolicy) []string {
		if v == nil {
			return nil
		}
		return v.LocalAddressCidrs
	}).(pulumi.StringArrayOutput)
}

// List of remote CIDRs.
func (o VirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutput) RemoteAddressCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayConnectionTrafficSelectorPolicy) []string {
		if v == nil {
			return nil
		}
		return v.RemoteAddressCidrs
	}).(pulumi.StringArrayOutput)
}

type VirtualNetworkGatewayCustomRoute struct {
	// A list of address blocks reserved for this virtual network in CIDR notation.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
}

// VirtualNetworkGatewayCustomRouteInput is an input type that accepts VirtualNetworkGatewayCustomRouteArgs and VirtualNetworkGatewayCustomRouteOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayCustomRouteInput` via:
//
//	VirtualNetworkGatewayCustomRouteArgs{...}
type VirtualNetworkGatewayCustomRouteInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayCustomRouteOutput() VirtualNetworkGatewayCustomRouteOutput
	ToVirtualNetworkGatewayCustomRouteOutputWithContext(context.Context) VirtualNetworkGatewayCustomRouteOutput
}

type VirtualNetworkGatewayCustomRouteArgs struct {
	// A list of address blocks reserved for this virtual network in CIDR notation.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
}

func (VirtualNetworkGatewayCustomRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayCustomRoute)(nil)).Elem()
}

func (i VirtualNetworkGatewayCustomRouteArgs) ToVirtualNetworkGatewayCustomRouteOutput() VirtualNetworkGatewayCustomRouteOutput {
	return i.ToVirtualNetworkGatewayCustomRouteOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayCustomRouteArgs) ToVirtualNetworkGatewayCustomRouteOutputWithContext(ctx context.Context) VirtualNetworkGatewayCustomRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayCustomRouteOutput)
}

func (i VirtualNetworkGatewayCustomRouteArgs) ToVirtualNetworkGatewayCustomRoutePtrOutput() VirtualNetworkGatewayCustomRoutePtrOutput {
	return i.ToVirtualNetworkGatewayCustomRoutePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayCustomRouteArgs) ToVirtualNetworkGatewayCustomRoutePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayCustomRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayCustomRouteOutput).ToVirtualNetworkGatewayCustomRoutePtrOutputWithContext(ctx)
}

// VirtualNetworkGatewayCustomRoutePtrInput is an input type that accepts VirtualNetworkGatewayCustomRouteArgs, VirtualNetworkGatewayCustomRoutePtr and VirtualNetworkGatewayCustomRoutePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayCustomRoutePtrInput` via:
//
//	        VirtualNetworkGatewayCustomRouteArgs{...}
//
//	or:
//
//	        nil
type VirtualNetworkGatewayCustomRoutePtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayCustomRoutePtrOutput() VirtualNetworkGatewayCustomRoutePtrOutput
	ToVirtualNetworkGatewayCustomRoutePtrOutputWithContext(context.Context) VirtualNetworkGatewayCustomRoutePtrOutput
}

type virtualNetworkGatewayCustomRoutePtrType VirtualNetworkGatewayCustomRouteArgs

func VirtualNetworkGatewayCustomRoutePtr(v *VirtualNetworkGatewayCustomRouteArgs) VirtualNetworkGatewayCustomRoutePtrInput {
	return (*virtualNetworkGatewayCustomRoutePtrType)(v)
}

func (*virtualNetworkGatewayCustomRoutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayCustomRoute)(nil)).Elem()
}

func (i *virtualNetworkGatewayCustomRoutePtrType) ToVirtualNetworkGatewayCustomRoutePtrOutput() VirtualNetworkGatewayCustomRoutePtrOutput {
	return i.ToVirtualNetworkGatewayCustomRoutePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewayCustomRoutePtrType) ToVirtualNetworkGatewayCustomRoutePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayCustomRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayCustomRoutePtrOutput)
}

type VirtualNetworkGatewayCustomRouteOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayCustomRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayCustomRoute)(nil)).Elem()
}

func (o VirtualNetworkGatewayCustomRouteOutput) ToVirtualNetworkGatewayCustomRouteOutput() VirtualNetworkGatewayCustomRouteOutput {
	return o
}

func (o VirtualNetworkGatewayCustomRouteOutput) ToVirtualNetworkGatewayCustomRouteOutputWithContext(ctx context.Context) VirtualNetworkGatewayCustomRouteOutput {
	return o
}

func (o VirtualNetworkGatewayCustomRouteOutput) ToVirtualNetworkGatewayCustomRoutePtrOutput() VirtualNetworkGatewayCustomRoutePtrOutput {
	return o.ToVirtualNetworkGatewayCustomRoutePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewayCustomRouteOutput) ToVirtualNetworkGatewayCustomRoutePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayCustomRoutePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNetworkGatewayCustomRoute) *VirtualNetworkGatewayCustomRoute {
		return &v
	}).(VirtualNetworkGatewayCustomRoutePtrOutput)
}

// A list of address blocks reserved for this virtual network in CIDR notation.
func (o VirtualNetworkGatewayCustomRouteOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayCustomRoute) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

type VirtualNetworkGatewayCustomRoutePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayCustomRoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayCustomRoute)(nil)).Elem()
}

func (o VirtualNetworkGatewayCustomRoutePtrOutput) ToVirtualNetworkGatewayCustomRoutePtrOutput() VirtualNetworkGatewayCustomRoutePtrOutput {
	return o
}

func (o VirtualNetworkGatewayCustomRoutePtrOutput) ToVirtualNetworkGatewayCustomRoutePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayCustomRoutePtrOutput {
	return o
}

func (o VirtualNetworkGatewayCustomRoutePtrOutput) Elem() VirtualNetworkGatewayCustomRouteOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayCustomRoute) VirtualNetworkGatewayCustomRoute {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkGatewayCustomRoute
		return ret
	}).(VirtualNetworkGatewayCustomRouteOutput)
}

// A list of address blocks reserved for this virtual network in CIDR notation.
func (o VirtualNetworkGatewayCustomRoutePtrOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayCustomRoute) []string {
		if v == nil {
			return nil
		}
		return v.AddressPrefixes
	}).(pulumi.StringArrayOutput)
}

type VirtualNetworkGatewayIpConfiguration struct {
	// A user-defined name of the IP configuration. Defaults to `vnetGatewayConfig`.
	Name *string `pulumi:"name"`
	// Defines how the private IP address of the gateways virtual interface is assigned. Valid options are `Static` or `Dynamic`. Defaults to `Dynamic`.
	PrivateIpAddressAllocation *string `pulumi:"privateIpAddressAllocation"`
	// The ID of the public IP address to associate with the Virtual Network Gateway.
	PublicIpAddressId string `pulumi:"publicIpAddressId"`
	// The ID of the gateway subnet of a virtual network in which the virtual network gateway will be created. It is mandatory that the associated subnet is named `GatewaySubnet`. Therefore, each virtual network can contain at most a single Virtual Network Gateway.
	SubnetId string `pulumi:"subnetId"`
}

// VirtualNetworkGatewayIpConfigurationInput is an input type that accepts VirtualNetworkGatewayIpConfigurationArgs and VirtualNetworkGatewayIpConfigurationOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayIpConfigurationInput` via:
//
//	VirtualNetworkGatewayIpConfigurationArgs{...}
type VirtualNetworkGatewayIpConfigurationInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayIpConfigurationOutput() VirtualNetworkGatewayIpConfigurationOutput
	ToVirtualNetworkGatewayIpConfigurationOutputWithContext(context.Context) VirtualNetworkGatewayIpConfigurationOutput
}

type VirtualNetworkGatewayIpConfigurationArgs struct {
	// A user-defined name of the IP configuration. Defaults to `vnetGatewayConfig`.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Defines how the private IP address of the gateways virtual interface is assigned. Valid options are `Static` or `Dynamic`. Defaults to `Dynamic`.
	PrivateIpAddressAllocation pulumi.StringPtrInput `pulumi:"privateIpAddressAllocation"`
	// The ID of the public IP address to associate with the Virtual Network Gateway.
	PublicIpAddressId pulumi.StringInput `pulumi:"publicIpAddressId"`
	// The ID of the gateway subnet of a virtual network in which the virtual network gateway will be created. It is mandatory that the associated subnet is named `GatewaySubnet`. Therefore, each virtual network can contain at most a single Virtual Network Gateway.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (VirtualNetworkGatewayIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIpConfiguration)(nil)).Elem()
}

func (i VirtualNetworkGatewayIpConfigurationArgs) ToVirtualNetworkGatewayIpConfigurationOutput() VirtualNetworkGatewayIpConfigurationOutput {
	return i.ToVirtualNetworkGatewayIpConfigurationOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayIpConfigurationArgs) ToVirtualNetworkGatewayIpConfigurationOutputWithContext(ctx context.Context) VirtualNetworkGatewayIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIpConfigurationOutput)
}

// VirtualNetworkGatewayIpConfigurationArrayInput is an input type that accepts VirtualNetworkGatewayIpConfigurationArray and VirtualNetworkGatewayIpConfigurationArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayIpConfigurationArrayInput` via:
//
//	VirtualNetworkGatewayIpConfigurationArray{ VirtualNetworkGatewayIpConfigurationArgs{...} }
type VirtualNetworkGatewayIpConfigurationArrayInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayIpConfigurationArrayOutput() VirtualNetworkGatewayIpConfigurationArrayOutput
	ToVirtualNetworkGatewayIpConfigurationArrayOutputWithContext(context.Context) VirtualNetworkGatewayIpConfigurationArrayOutput
}

type VirtualNetworkGatewayIpConfigurationArray []VirtualNetworkGatewayIpConfigurationInput

func (VirtualNetworkGatewayIpConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayIpConfiguration)(nil)).Elem()
}

func (i VirtualNetworkGatewayIpConfigurationArray) ToVirtualNetworkGatewayIpConfigurationArrayOutput() VirtualNetworkGatewayIpConfigurationArrayOutput {
	return i.ToVirtualNetworkGatewayIpConfigurationArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayIpConfigurationArray) ToVirtualNetworkGatewayIpConfigurationArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayIpConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIpConfigurationArrayOutput)
}

type VirtualNetworkGatewayIpConfigurationOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIpConfiguration)(nil)).Elem()
}

func (o VirtualNetworkGatewayIpConfigurationOutput) ToVirtualNetworkGatewayIpConfigurationOutput() VirtualNetworkGatewayIpConfigurationOutput {
	return o
}

func (o VirtualNetworkGatewayIpConfigurationOutput) ToVirtualNetworkGatewayIpConfigurationOutputWithContext(ctx context.Context) VirtualNetworkGatewayIpConfigurationOutput {
	return o
}

// A user-defined name of the IP configuration. Defaults to `vnetGatewayConfig`.
func (o VirtualNetworkGatewayIpConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIpConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Defines how the private IP address of the gateways virtual interface is assigned. Valid options are `Static` or `Dynamic`. Defaults to `Dynamic`.
func (o VirtualNetworkGatewayIpConfigurationOutput) PrivateIpAddressAllocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIpConfiguration) *string { return v.PrivateIpAddressAllocation }).(pulumi.StringPtrOutput)
}

// The ID of the public IP address to associate with the Virtual Network Gateway.
func (o VirtualNetworkGatewayIpConfigurationOutput) PublicIpAddressId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIpConfiguration) string { return v.PublicIpAddressId }).(pulumi.StringOutput)
}

// The ID of the gateway subnet of a virtual network in which the virtual network gateway will be created. It is mandatory that the associated subnet is named `GatewaySubnet`. Therefore, each virtual network can contain at most a single Virtual Network Gateway.
func (o VirtualNetworkGatewayIpConfigurationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIpConfiguration) string { return v.SubnetId }).(pulumi.StringOutput)
}

type VirtualNetworkGatewayIpConfigurationArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIpConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayIpConfiguration)(nil)).Elem()
}

func (o VirtualNetworkGatewayIpConfigurationArrayOutput) ToVirtualNetworkGatewayIpConfigurationArrayOutput() VirtualNetworkGatewayIpConfigurationArrayOutput {
	return o
}

func (o VirtualNetworkGatewayIpConfigurationArrayOutput) ToVirtualNetworkGatewayIpConfigurationArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayIpConfigurationArrayOutput {
	return o
}

func (o VirtualNetworkGatewayIpConfigurationArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayIpConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayIpConfiguration {
		return vs[0].([]VirtualNetworkGatewayIpConfiguration)[vs[1].(int)]
	}).(VirtualNetworkGatewayIpConfigurationOutput)
}

type VirtualNetworkGatewayNatRuleExternalMapping struct {
	// The string CIDR representing the address space for the Virtual Network Gateway Nat Rule external mapping.
	AddressSpace string `pulumi:"addressSpace"`
	// The single port range for the Virtual Network Gateway Nat Rule external mapping.
	PortRange *string `pulumi:"portRange"`
}

// VirtualNetworkGatewayNatRuleExternalMappingInput is an input type that accepts VirtualNetworkGatewayNatRuleExternalMappingArgs and VirtualNetworkGatewayNatRuleExternalMappingOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayNatRuleExternalMappingInput` via:
//
//	VirtualNetworkGatewayNatRuleExternalMappingArgs{...}
type VirtualNetworkGatewayNatRuleExternalMappingInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayNatRuleExternalMappingOutput() VirtualNetworkGatewayNatRuleExternalMappingOutput
	ToVirtualNetworkGatewayNatRuleExternalMappingOutputWithContext(context.Context) VirtualNetworkGatewayNatRuleExternalMappingOutput
}

type VirtualNetworkGatewayNatRuleExternalMappingArgs struct {
	// The string CIDR representing the address space for the Virtual Network Gateway Nat Rule external mapping.
	AddressSpace pulumi.StringInput `pulumi:"addressSpace"`
	// The single port range for the Virtual Network Gateway Nat Rule external mapping.
	PortRange pulumi.StringPtrInput `pulumi:"portRange"`
}

func (VirtualNetworkGatewayNatRuleExternalMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayNatRuleExternalMapping)(nil)).Elem()
}

func (i VirtualNetworkGatewayNatRuleExternalMappingArgs) ToVirtualNetworkGatewayNatRuleExternalMappingOutput() VirtualNetworkGatewayNatRuleExternalMappingOutput {
	return i.ToVirtualNetworkGatewayNatRuleExternalMappingOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayNatRuleExternalMappingArgs) ToVirtualNetworkGatewayNatRuleExternalMappingOutputWithContext(ctx context.Context) VirtualNetworkGatewayNatRuleExternalMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayNatRuleExternalMappingOutput)
}

// VirtualNetworkGatewayNatRuleExternalMappingArrayInput is an input type that accepts VirtualNetworkGatewayNatRuleExternalMappingArray and VirtualNetworkGatewayNatRuleExternalMappingArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayNatRuleExternalMappingArrayInput` via:
//
//	VirtualNetworkGatewayNatRuleExternalMappingArray{ VirtualNetworkGatewayNatRuleExternalMappingArgs{...} }
type VirtualNetworkGatewayNatRuleExternalMappingArrayInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayNatRuleExternalMappingArrayOutput() VirtualNetworkGatewayNatRuleExternalMappingArrayOutput
	ToVirtualNetworkGatewayNatRuleExternalMappingArrayOutputWithContext(context.Context) VirtualNetworkGatewayNatRuleExternalMappingArrayOutput
}

type VirtualNetworkGatewayNatRuleExternalMappingArray []VirtualNetworkGatewayNatRuleExternalMappingInput

func (VirtualNetworkGatewayNatRuleExternalMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayNatRuleExternalMapping)(nil)).Elem()
}

func (i VirtualNetworkGatewayNatRuleExternalMappingArray) ToVirtualNetworkGatewayNatRuleExternalMappingArrayOutput() VirtualNetworkGatewayNatRuleExternalMappingArrayOutput {
	return i.ToVirtualNetworkGatewayNatRuleExternalMappingArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayNatRuleExternalMappingArray) ToVirtualNetworkGatewayNatRuleExternalMappingArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayNatRuleExternalMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayNatRuleExternalMappingArrayOutput)
}

type VirtualNetworkGatewayNatRuleExternalMappingOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayNatRuleExternalMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayNatRuleExternalMapping)(nil)).Elem()
}

func (o VirtualNetworkGatewayNatRuleExternalMappingOutput) ToVirtualNetworkGatewayNatRuleExternalMappingOutput() VirtualNetworkGatewayNatRuleExternalMappingOutput {
	return o
}

func (o VirtualNetworkGatewayNatRuleExternalMappingOutput) ToVirtualNetworkGatewayNatRuleExternalMappingOutputWithContext(ctx context.Context) VirtualNetworkGatewayNatRuleExternalMappingOutput {
	return o
}

// The string CIDR representing the address space for the Virtual Network Gateway Nat Rule external mapping.
func (o VirtualNetworkGatewayNatRuleExternalMappingOutput) AddressSpace() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleExternalMapping) string { return v.AddressSpace }).(pulumi.StringOutput)
}

// The single port range for the Virtual Network Gateway Nat Rule external mapping.
func (o VirtualNetworkGatewayNatRuleExternalMappingOutput) PortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleExternalMapping) *string { return v.PortRange }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewayNatRuleExternalMappingArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayNatRuleExternalMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayNatRuleExternalMapping)(nil)).Elem()
}

func (o VirtualNetworkGatewayNatRuleExternalMappingArrayOutput) ToVirtualNetworkGatewayNatRuleExternalMappingArrayOutput() VirtualNetworkGatewayNatRuleExternalMappingArrayOutput {
	return o
}

func (o VirtualNetworkGatewayNatRuleExternalMappingArrayOutput) ToVirtualNetworkGatewayNatRuleExternalMappingArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayNatRuleExternalMappingArrayOutput {
	return o
}

func (o VirtualNetworkGatewayNatRuleExternalMappingArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayNatRuleExternalMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayNatRuleExternalMapping {
		return vs[0].([]VirtualNetworkGatewayNatRuleExternalMapping)[vs[1].(int)]
	}).(VirtualNetworkGatewayNatRuleExternalMappingOutput)
}

type VirtualNetworkGatewayNatRuleInternalMapping struct {
	// The string CIDR representing the address space for the Virtual Network Gateway Nat Rule internal mapping.
	AddressSpace string `pulumi:"addressSpace"`
	// The single port range for the Virtual Network Gateway Nat Rule internal mapping.
	PortRange *string `pulumi:"portRange"`
}

// VirtualNetworkGatewayNatRuleInternalMappingInput is an input type that accepts VirtualNetworkGatewayNatRuleInternalMappingArgs and VirtualNetworkGatewayNatRuleInternalMappingOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayNatRuleInternalMappingInput` via:
//
//	VirtualNetworkGatewayNatRuleInternalMappingArgs{...}
type VirtualNetworkGatewayNatRuleInternalMappingInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayNatRuleInternalMappingOutput() VirtualNetworkGatewayNatRuleInternalMappingOutput
	ToVirtualNetworkGatewayNatRuleInternalMappingOutputWithContext(context.Context) VirtualNetworkGatewayNatRuleInternalMappingOutput
}

type VirtualNetworkGatewayNatRuleInternalMappingArgs struct {
	// The string CIDR representing the address space for the Virtual Network Gateway Nat Rule internal mapping.
	AddressSpace pulumi.StringInput `pulumi:"addressSpace"`
	// The single port range for the Virtual Network Gateway Nat Rule internal mapping.
	PortRange pulumi.StringPtrInput `pulumi:"portRange"`
}

func (VirtualNetworkGatewayNatRuleInternalMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayNatRuleInternalMapping)(nil)).Elem()
}

func (i VirtualNetworkGatewayNatRuleInternalMappingArgs) ToVirtualNetworkGatewayNatRuleInternalMappingOutput() VirtualNetworkGatewayNatRuleInternalMappingOutput {
	return i.ToVirtualNetworkGatewayNatRuleInternalMappingOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayNatRuleInternalMappingArgs) ToVirtualNetworkGatewayNatRuleInternalMappingOutputWithContext(ctx context.Context) VirtualNetworkGatewayNatRuleInternalMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayNatRuleInternalMappingOutput)
}

// VirtualNetworkGatewayNatRuleInternalMappingArrayInput is an input type that accepts VirtualNetworkGatewayNatRuleInternalMappingArray and VirtualNetworkGatewayNatRuleInternalMappingArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayNatRuleInternalMappingArrayInput` via:
//
//	VirtualNetworkGatewayNatRuleInternalMappingArray{ VirtualNetworkGatewayNatRuleInternalMappingArgs{...} }
type VirtualNetworkGatewayNatRuleInternalMappingArrayInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayNatRuleInternalMappingArrayOutput() VirtualNetworkGatewayNatRuleInternalMappingArrayOutput
	ToVirtualNetworkGatewayNatRuleInternalMappingArrayOutputWithContext(context.Context) VirtualNetworkGatewayNatRuleInternalMappingArrayOutput
}

type VirtualNetworkGatewayNatRuleInternalMappingArray []VirtualNetworkGatewayNatRuleInternalMappingInput

func (VirtualNetworkGatewayNatRuleInternalMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayNatRuleInternalMapping)(nil)).Elem()
}

func (i VirtualNetworkGatewayNatRuleInternalMappingArray) ToVirtualNetworkGatewayNatRuleInternalMappingArrayOutput() VirtualNetworkGatewayNatRuleInternalMappingArrayOutput {
	return i.ToVirtualNetworkGatewayNatRuleInternalMappingArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayNatRuleInternalMappingArray) ToVirtualNetworkGatewayNatRuleInternalMappingArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayNatRuleInternalMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayNatRuleInternalMappingArrayOutput)
}

type VirtualNetworkGatewayNatRuleInternalMappingOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayNatRuleInternalMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayNatRuleInternalMapping)(nil)).Elem()
}

func (o VirtualNetworkGatewayNatRuleInternalMappingOutput) ToVirtualNetworkGatewayNatRuleInternalMappingOutput() VirtualNetworkGatewayNatRuleInternalMappingOutput {
	return o
}

func (o VirtualNetworkGatewayNatRuleInternalMappingOutput) ToVirtualNetworkGatewayNatRuleInternalMappingOutputWithContext(ctx context.Context) VirtualNetworkGatewayNatRuleInternalMappingOutput {
	return o
}

// The string CIDR representing the address space for the Virtual Network Gateway Nat Rule internal mapping.
func (o VirtualNetworkGatewayNatRuleInternalMappingOutput) AddressSpace() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleInternalMapping) string { return v.AddressSpace }).(pulumi.StringOutput)
}

// The single port range for the Virtual Network Gateway Nat Rule internal mapping.
func (o VirtualNetworkGatewayNatRuleInternalMappingOutput) PortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayNatRuleInternalMapping) *string { return v.PortRange }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewayNatRuleInternalMappingArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayNatRuleInternalMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayNatRuleInternalMapping)(nil)).Elem()
}

func (o VirtualNetworkGatewayNatRuleInternalMappingArrayOutput) ToVirtualNetworkGatewayNatRuleInternalMappingArrayOutput() VirtualNetworkGatewayNatRuleInternalMappingArrayOutput {
	return o
}

func (o VirtualNetworkGatewayNatRuleInternalMappingArrayOutput) ToVirtualNetworkGatewayNatRuleInternalMappingArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayNatRuleInternalMappingArrayOutput {
	return o
}

func (o VirtualNetworkGatewayNatRuleInternalMappingArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayNatRuleInternalMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayNatRuleInternalMapping {
		return vs[0].([]VirtualNetworkGatewayNatRuleInternalMapping)[vs[1].(int)]
	}).(VirtualNetworkGatewayNatRuleInternalMappingOutput)
}

type VirtualNetworkGatewayPolicyGroup struct {
	// Is this a Default Virtual Network Gateway Policy Group? Defaults to `false`.
	IsDefault *bool `pulumi:"isDefault"`
	// The name of the Virtual Network Gateway Policy Group.
	Name string `pulumi:"name"`
	// One or more `policyMember` blocks as defined below.
	PolicyMembers []VirtualNetworkGatewayPolicyGroupPolicyMember `pulumi:"policyMembers"`
	// The priority for the Virtual Network Gateway Policy Group. Defaults to `0`.
	Priority *int `pulumi:"priority"`
}

// VirtualNetworkGatewayPolicyGroupInput is an input type that accepts VirtualNetworkGatewayPolicyGroupArgs and VirtualNetworkGatewayPolicyGroupOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayPolicyGroupInput` via:
//
//	VirtualNetworkGatewayPolicyGroupArgs{...}
type VirtualNetworkGatewayPolicyGroupInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayPolicyGroupOutput() VirtualNetworkGatewayPolicyGroupOutput
	ToVirtualNetworkGatewayPolicyGroupOutputWithContext(context.Context) VirtualNetworkGatewayPolicyGroupOutput
}

type VirtualNetworkGatewayPolicyGroupArgs struct {
	// Is this a Default Virtual Network Gateway Policy Group? Defaults to `false`.
	IsDefault pulumi.BoolPtrInput `pulumi:"isDefault"`
	// The name of the Virtual Network Gateway Policy Group.
	Name pulumi.StringInput `pulumi:"name"`
	// One or more `policyMember` blocks as defined below.
	PolicyMembers VirtualNetworkGatewayPolicyGroupPolicyMemberArrayInput `pulumi:"policyMembers"`
	// The priority for the Virtual Network Gateway Policy Group. Defaults to `0`.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
}

func (VirtualNetworkGatewayPolicyGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayPolicyGroup)(nil)).Elem()
}

func (i VirtualNetworkGatewayPolicyGroupArgs) ToVirtualNetworkGatewayPolicyGroupOutput() VirtualNetworkGatewayPolicyGroupOutput {
	return i.ToVirtualNetworkGatewayPolicyGroupOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayPolicyGroupArgs) ToVirtualNetworkGatewayPolicyGroupOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayPolicyGroupOutput)
}

// VirtualNetworkGatewayPolicyGroupArrayInput is an input type that accepts VirtualNetworkGatewayPolicyGroupArray and VirtualNetworkGatewayPolicyGroupArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayPolicyGroupArrayInput` via:
//
//	VirtualNetworkGatewayPolicyGroupArray{ VirtualNetworkGatewayPolicyGroupArgs{...} }
type VirtualNetworkGatewayPolicyGroupArrayInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayPolicyGroupArrayOutput() VirtualNetworkGatewayPolicyGroupArrayOutput
	ToVirtualNetworkGatewayPolicyGroupArrayOutputWithContext(context.Context) VirtualNetworkGatewayPolicyGroupArrayOutput
}

type VirtualNetworkGatewayPolicyGroupArray []VirtualNetworkGatewayPolicyGroupInput

func (VirtualNetworkGatewayPolicyGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayPolicyGroup)(nil)).Elem()
}

func (i VirtualNetworkGatewayPolicyGroupArray) ToVirtualNetworkGatewayPolicyGroupArrayOutput() VirtualNetworkGatewayPolicyGroupArrayOutput {
	return i.ToVirtualNetworkGatewayPolicyGroupArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayPolicyGroupArray) ToVirtualNetworkGatewayPolicyGroupArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayPolicyGroupArrayOutput)
}

type VirtualNetworkGatewayPolicyGroupOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayPolicyGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayPolicyGroup)(nil)).Elem()
}

func (o VirtualNetworkGatewayPolicyGroupOutput) ToVirtualNetworkGatewayPolicyGroupOutput() VirtualNetworkGatewayPolicyGroupOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupOutput) ToVirtualNetworkGatewayPolicyGroupOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupOutput {
	return o
}

// Is this a Default Virtual Network Gateway Policy Group? Defaults to `false`.
func (o VirtualNetworkGatewayPolicyGroupOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroup) *bool { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// The name of the Virtual Network Gateway Policy Group.
func (o VirtualNetworkGatewayPolicyGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroup) string { return v.Name }).(pulumi.StringOutput)
}

// One or more `policyMember` blocks as defined below.
func (o VirtualNetworkGatewayPolicyGroupOutput) PolicyMembers() VirtualNetworkGatewayPolicyGroupPolicyMemberArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroup) []VirtualNetworkGatewayPolicyGroupPolicyMember {
		return v.PolicyMembers
	}).(VirtualNetworkGatewayPolicyGroupPolicyMemberArrayOutput)
}

// The priority for the Virtual Network Gateway Policy Group. Defaults to `0`.
func (o VirtualNetworkGatewayPolicyGroupOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroup) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

type VirtualNetworkGatewayPolicyGroupArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayPolicyGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayPolicyGroup)(nil)).Elem()
}

func (o VirtualNetworkGatewayPolicyGroupArrayOutput) ToVirtualNetworkGatewayPolicyGroupArrayOutput() VirtualNetworkGatewayPolicyGroupArrayOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupArrayOutput) ToVirtualNetworkGatewayPolicyGroupArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupArrayOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayPolicyGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayPolicyGroup {
		return vs[0].([]VirtualNetworkGatewayPolicyGroup)[vs[1].(int)]
	}).(VirtualNetworkGatewayPolicyGroupOutput)
}

type VirtualNetworkGatewayPolicyGroupPolicyMember struct {
	// The name of the Virtual Network Gateway Policy Group Member.
	Name string `pulumi:"name"`
	// The VPN Policy Member attribute type. Possible values are `AADGroupId`, `CertificateGroupId` and `RadiusAzureGroupId`.
	Type string `pulumi:"type"`
	// The value of attribute that is used for this Virtual Network Gateway Policy Group Member.
	Value string `pulumi:"value"`
}

// VirtualNetworkGatewayPolicyGroupPolicyMemberInput is an input type that accepts VirtualNetworkGatewayPolicyGroupPolicyMemberArgs and VirtualNetworkGatewayPolicyGroupPolicyMemberOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayPolicyGroupPolicyMemberInput` via:
//
//	VirtualNetworkGatewayPolicyGroupPolicyMemberArgs{...}
type VirtualNetworkGatewayPolicyGroupPolicyMemberInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayPolicyGroupPolicyMemberOutput() VirtualNetworkGatewayPolicyGroupPolicyMemberOutput
	ToVirtualNetworkGatewayPolicyGroupPolicyMemberOutputWithContext(context.Context) VirtualNetworkGatewayPolicyGroupPolicyMemberOutput
}

type VirtualNetworkGatewayPolicyGroupPolicyMemberArgs struct {
	// The name of the Virtual Network Gateway Policy Group Member.
	Name pulumi.StringInput `pulumi:"name"`
	// The VPN Policy Member attribute type. Possible values are `AADGroupId`, `CertificateGroupId` and `RadiusAzureGroupId`.
	Type pulumi.StringInput `pulumi:"type"`
	// The value of attribute that is used for this Virtual Network Gateway Policy Group Member.
	Value pulumi.StringInput `pulumi:"value"`
}

func (VirtualNetworkGatewayPolicyGroupPolicyMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayPolicyGroupPolicyMember)(nil)).Elem()
}

func (i VirtualNetworkGatewayPolicyGroupPolicyMemberArgs) ToVirtualNetworkGatewayPolicyGroupPolicyMemberOutput() VirtualNetworkGatewayPolicyGroupPolicyMemberOutput {
	return i.ToVirtualNetworkGatewayPolicyGroupPolicyMemberOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayPolicyGroupPolicyMemberArgs) ToVirtualNetworkGatewayPolicyGroupPolicyMemberOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupPolicyMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayPolicyGroupPolicyMemberOutput)
}

// VirtualNetworkGatewayPolicyGroupPolicyMemberArrayInput is an input type that accepts VirtualNetworkGatewayPolicyGroupPolicyMemberArray and VirtualNetworkGatewayPolicyGroupPolicyMemberArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayPolicyGroupPolicyMemberArrayInput` via:
//
//	VirtualNetworkGatewayPolicyGroupPolicyMemberArray{ VirtualNetworkGatewayPolicyGroupPolicyMemberArgs{...} }
type VirtualNetworkGatewayPolicyGroupPolicyMemberArrayInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayPolicyGroupPolicyMemberArrayOutput() VirtualNetworkGatewayPolicyGroupPolicyMemberArrayOutput
	ToVirtualNetworkGatewayPolicyGroupPolicyMemberArrayOutputWithContext(context.Context) VirtualNetworkGatewayPolicyGroupPolicyMemberArrayOutput
}

type VirtualNetworkGatewayPolicyGroupPolicyMemberArray []VirtualNetworkGatewayPolicyGroupPolicyMemberInput

func (VirtualNetworkGatewayPolicyGroupPolicyMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayPolicyGroupPolicyMember)(nil)).Elem()
}

func (i VirtualNetworkGatewayPolicyGroupPolicyMemberArray) ToVirtualNetworkGatewayPolicyGroupPolicyMemberArrayOutput() VirtualNetworkGatewayPolicyGroupPolicyMemberArrayOutput {
	return i.ToVirtualNetworkGatewayPolicyGroupPolicyMemberArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayPolicyGroupPolicyMemberArray) ToVirtualNetworkGatewayPolicyGroupPolicyMemberArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupPolicyMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayPolicyGroupPolicyMemberArrayOutput)
}

type VirtualNetworkGatewayPolicyGroupPolicyMemberOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayPolicyGroupPolicyMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayPolicyGroupPolicyMember)(nil)).Elem()
}

func (o VirtualNetworkGatewayPolicyGroupPolicyMemberOutput) ToVirtualNetworkGatewayPolicyGroupPolicyMemberOutput() VirtualNetworkGatewayPolicyGroupPolicyMemberOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupPolicyMemberOutput) ToVirtualNetworkGatewayPolicyGroupPolicyMemberOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupPolicyMemberOutput {
	return o
}

// The name of the Virtual Network Gateway Policy Group Member.
func (o VirtualNetworkGatewayPolicyGroupPolicyMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupPolicyMember) string { return v.Name }).(pulumi.StringOutput)
}

// The VPN Policy Member attribute type. Possible values are `AADGroupId`, `CertificateGroupId` and `RadiusAzureGroupId`.
func (o VirtualNetworkGatewayPolicyGroupPolicyMemberOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupPolicyMember) string { return v.Type }).(pulumi.StringOutput)
}

// The value of attribute that is used for this Virtual Network Gateway Policy Group Member.
func (o VirtualNetworkGatewayPolicyGroupPolicyMemberOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayPolicyGroupPolicyMember) string { return v.Value }).(pulumi.StringOutput)
}

type VirtualNetworkGatewayPolicyGroupPolicyMemberArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayPolicyGroupPolicyMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayPolicyGroupPolicyMember)(nil)).Elem()
}

func (o VirtualNetworkGatewayPolicyGroupPolicyMemberArrayOutput) ToVirtualNetworkGatewayPolicyGroupPolicyMemberArrayOutput() VirtualNetworkGatewayPolicyGroupPolicyMemberArrayOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupPolicyMemberArrayOutput) ToVirtualNetworkGatewayPolicyGroupPolicyMemberArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayPolicyGroupPolicyMemberArrayOutput {
	return o
}

func (o VirtualNetworkGatewayPolicyGroupPolicyMemberArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayPolicyGroupPolicyMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayPolicyGroupPolicyMember {
		return vs[0].([]VirtualNetworkGatewayPolicyGroupPolicyMember)[vs[1].(int)]
	}).(VirtualNetworkGatewayPolicyGroupPolicyMemberOutput)
}

type VirtualNetworkGatewayVpnClientConfiguration struct {
	// The client id of the Azure VPN application.
	// See [Create an Active Directory (AD) tenant for P2S OpenVPN protocol connections](https://docs.microsoft.com/en-gb/azure/vpn-gateway/openvpn-azure-ad-tenant-multi-app) for values
	AadAudience *string `pulumi:"aadAudience"`
	// The STS url for your tenant
	AadIssuer *string `pulumi:"aadIssuer"`
	// AzureAD Tenant URL
	AadTenant *string `pulumi:"aadTenant"`
	// The address space out of which IP addresses for vpn clients will be taken. You can provide more than one address space, e.g. in CIDR notation.
	AddressSpaces []string `pulumi:"addressSpaces"`
	// An `ipsecPolicy` block as defined below.
	IpsecPolicy *VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy `pulumi:"ipsecPolicy"`
	// The address of the Radius server.
	RadiusServerAddress *string `pulumi:"radiusServerAddress"`
	// The secret used by the Radius server.
	RadiusServerSecret *string `pulumi:"radiusServerSecret"`
	// One or more `radiusServer` blocks as defined below.
	RadiusServers []VirtualNetworkGatewayVpnClientConfigurationRadiusServer `pulumi:"radiusServers"`
	// One or more `revokedCertificate` blocks which are defined below.
	RevokedCertificates []VirtualNetworkGatewayVpnClientConfigurationRevokedCertificate `pulumi:"revokedCertificates"`
	// One or more `rootCertificate` blocks which are defined below. These root certificates are used to sign the client certificate used by the VPN clients to connect to the gateway.
	RootCertificates []VirtualNetworkGatewayVpnClientConfigurationRootCertificate `pulumi:"rootCertificates"`
	// One or more `virtualNetworkGatewayClientConnection` blocks as defined below.
	VirtualNetworkGatewayClientConnections []VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnection `pulumi:"virtualNetworkGatewayClientConnections"`
	// List of the vpn authentication types for the virtual network gateway.
	// The supported values are `AAD`, `Radius` and `Certificate`.
	//
	// > **NOTE:** `vpnAuthTypes` must be set when using multiple vpn authentication types.
	VpnAuthTypes []string `pulumi:"vpnAuthTypes"`
	// List of the protocols supported by the vpn client.
	// The supported values are `SSTP`, `IkeV2` and `OpenVPN`.
	// Values `SSTP` and `IkeV2` are incompatible with the use of
	// `aadTenant`, `aadAudience` and `aadIssuer`.
	VpnClientProtocols []string `pulumi:"vpnClientProtocols"`
}

// VirtualNetworkGatewayVpnClientConfigurationInput is an input type that accepts VirtualNetworkGatewayVpnClientConfigurationArgs and VirtualNetworkGatewayVpnClientConfigurationOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayVpnClientConfigurationInput` via:
//
//	VirtualNetworkGatewayVpnClientConfigurationArgs{...}
type VirtualNetworkGatewayVpnClientConfigurationInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayVpnClientConfigurationOutput() VirtualNetworkGatewayVpnClientConfigurationOutput
	ToVirtualNetworkGatewayVpnClientConfigurationOutputWithContext(context.Context) VirtualNetworkGatewayVpnClientConfigurationOutput
}

type VirtualNetworkGatewayVpnClientConfigurationArgs struct {
	// The client id of the Azure VPN application.
	// See [Create an Active Directory (AD) tenant for P2S OpenVPN protocol connections](https://docs.microsoft.com/en-gb/azure/vpn-gateway/openvpn-azure-ad-tenant-multi-app) for values
	AadAudience pulumi.StringPtrInput `pulumi:"aadAudience"`
	// The STS url for your tenant
	AadIssuer pulumi.StringPtrInput `pulumi:"aadIssuer"`
	// AzureAD Tenant URL
	AadTenant pulumi.StringPtrInput `pulumi:"aadTenant"`
	// The address space out of which IP addresses for vpn clients will be taken. You can provide more than one address space, e.g. in CIDR notation.
	AddressSpaces pulumi.StringArrayInput `pulumi:"addressSpaces"`
	// An `ipsecPolicy` block as defined below.
	IpsecPolicy VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrInput `pulumi:"ipsecPolicy"`
	// The address of the Radius server.
	RadiusServerAddress pulumi.StringPtrInput `pulumi:"radiusServerAddress"`
	// The secret used by the Radius server.
	RadiusServerSecret pulumi.StringPtrInput `pulumi:"radiusServerSecret"`
	// One or more `radiusServer` blocks as defined below.
	RadiusServers VirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayInput `pulumi:"radiusServers"`
	// One or more `revokedCertificate` blocks which are defined below.
	RevokedCertificates VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayInput `pulumi:"revokedCertificates"`
	// One or more `rootCertificate` blocks which are defined below. These root certificates are used to sign the client certificate used by the VPN clients to connect to the gateway.
	RootCertificates VirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayInput `pulumi:"rootCertificates"`
	// One or more `virtualNetworkGatewayClientConnection` blocks as defined below.
	VirtualNetworkGatewayClientConnections VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayInput `pulumi:"virtualNetworkGatewayClientConnections"`
	// List of the vpn authentication types for the virtual network gateway.
	// The supported values are `AAD`, `Radius` and `Certificate`.
	//
	// > **NOTE:** `vpnAuthTypes` must be set when using multiple vpn authentication types.
	VpnAuthTypes pulumi.StringArrayInput `pulumi:"vpnAuthTypes"`
	// List of the protocols supported by the vpn client.
	// The supported values are `SSTP`, `IkeV2` and `OpenVPN`.
	// Values `SSTP` and `IkeV2` are incompatible with the use of
	// `aadTenant`, `aadAudience` and `aadIssuer`.
	VpnClientProtocols pulumi.StringArrayInput `pulumi:"vpnClientProtocols"`
}

func (VirtualNetworkGatewayVpnClientConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayVpnClientConfiguration)(nil)).Elem()
}

func (i VirtualNetworkGatewayVpnClientConfigurationArgs) ToVirtualNetworkGatewayVpnClientConfigurationOutput() VirtualNetworkGatewayVpnClientConfigurationOutput {
	return i.ToVirtualNetworkGatewayVpnClientConfigurationOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayVpnClientConfigurationArgs) ToVirtualNetworkGatewayVpnClientConfigurationOutputWithContext(ctx context.Context) VirtualNetworkGatewayVpnClientConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayVpnClientConfigurationOutput)
}

func (i VirtualNetworkGatewayVpnClientConfigurationArgs) ToVirtualNetworkGatewayVpnClientConfigurationPtrOutput() VirtualNetworkGatewayVpnClientConfigurationPtrOutput {
	return i.ToVirtualNetworkGatewayVpnClientConfigurationPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayVpnClientConfigurationArgs) ToVirtualNetworkGatewayVpnClientConfigurationPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayVpnClientConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayVpnClientConfigurationOutput).ToVirtualNetworkGatewayVpnClientConfigurationPtrOutputWithContext(ctx)
}

// VirtualNetworkGatewayVpnClientConfigurationPtrInput is an input type that accepts VirtualNetworkGatewayVpnClientConfigurationArgs, VirtualNetworkGatewayVpnClientConfigurationPtr and VirtualNetworkGatewayVpnClientConfigurationPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayVpnClientConfigurationPtrInput` via:
//
//	        VirtualNetworkGatewayVpnClientConfigurationArgs{...}
//
//	or:
//
//	        nil
type VirtualNetworkGatewayVpnClientConfigurationPtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayVpnClientConfigurationPtrOutput() VirtualNetworkGatewayVpnClientConfigurationPtrOutput
	ToVirtualNetworkGatewayVpnClientConfigurationPtrOutputWithContext(context.Context) VirtualNetworkGatewayVpnClientConfigurationPtrOutput
}

type virtualNetworkGatewayVpnClientConfigurationPtrType VirtualNetworkGatewayVpnClientConfigurationArgs

func VirtualNetworkGatewayVpnClientConfigurationPtr(v *VirtualNetworkGatewayVpnClientConfigurationArgs) VirtualNetworkGatewayVpnClientConfigurationPtrInput {
	return (*virtualNetworkGatewayVpnClientConfigurationPtrType)(v)
}

func (*virtualNetworkGatewayVpnClientConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayVpnClientConfiguration)(nil)).Elem()
}

func (i *virtualNetworkGatewayVpnClientConfigurationPtrType) ToVirtualNetworkGatewayVpnClientConfigurationPtrOutput() VirtualNetworkGatewayVpnClientConfigurationPtrOutput {
	return i.ToVirtualNetworkGatewayVpnClientConfigurationPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewayVpnClientConfigurationPtrType) ToVirtualNetworkGatewayVpnClientConfigurationPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayVpnClientConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayVpnClientConfigurationPtrOutput)
}

type VirtualNetworkGatewayVpnClientConfigurationOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayVpnClientConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayVpnClientConfiguration)(nil)).Elem()
}

func (o VirtualNetworkGatewayVpnClientConfigurationOutput) ToVirtualNetworkGatewayVpnClientConfigurationOutput() VirtualNetworkGatewayVpnClientConfigurationOutput {
	return o
}

func (o VirtualNetworkGatewayVpnClientConfigurationOutput) ToVirtualNetworkGatewayVpnClientConfigurationOutputWithContext(ctx context.Context) VirtualNetworkGatewayVpnClientConfigurationOutput {
	return o
}

func (o VirtualNetworkGatewayVpnClientConfigurationOutput) ToVirtualNetworkGatewayVpnClientConfigurationPtrOutput() VirtualNetworkGatewayVpnClientConfigurationPtrOutput {
	return o.ToVirtualNetworkGatewayVpnClientConfigurationPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewayVpnClientConfigurationOutput) ToVirtualNetworkGatewayVpnClientConfigurationPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayVpnClientConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNetworkGatewayVpnClientConfiguration) *VirtualNetworkGatewayVpnClientConfiguration {
		return &v
	}).(VirtualNetworkGatewayVpnClientConfigurationPtrOutput)
}

// The client id of the Azure VPN application.
// See [Create an Active Directory (AD) tenant for P2S OpenVPN protocol connections](https://docs.microsoft.com/en-gb/azure/vpn-gateway/openvpn-azure-ad-tenant-multi-app) for values
func (o VirtualNetworkGatewayVpnClientConfigurationOutput) AadAudience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfiguration) *string { return v.AadAudience }).(pulumi.StringPtrOutput)
}

// The STS url for your tenant
func (o VirtualNetworkGatewayVpnClientConfigurationOutput) AadIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfiguration) *string { return v.AadIssuer }).(pulumi.StringPtrOutput)
}

// AzureAD Tenant URL
func (o VirtualNetworkGatewayVpnClientConfigurationOutput) AadTenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfiguration) *string { return v.AadTenant }).(pulumi.StringPtrOutput)
}

// The address space out of which IP addresses for vpn clients will be taken. You can provide more than one address space, e.g. in CIDR notation.
func (o VirtualNetworkGatewayVpnClientConfigurationOutput) AddressSpaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfiguration) []string { return v.AddressSpaces }).(pulumi.StringArrayOutput)
}

// An `ipsecPolicy` block as defined below.
func (o VirtualNetworkGatewayVpnClientConfigurationOutput) IpsecPolicy() VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfiguration) *VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy {
		return v.IpsecPolicy
	}).(VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput)
}

// The address of the Radius server.
func (o VirtualNetworkGatewayVpnClientConfigurationOutput) RadiusServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfiguration) *string { return v.RadiusServerAddress }).(pulumi.StringPtrOutput)
}

// The secret used by the Radius server.
func (o VirtualNetworkGatewayVpnClientConfigurationOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfiguration) *string { return v.RadiusServerSecret }).(pulumi.StringPtrOutput)
}

// One or more `radiusServer` blocks as defined below.
func (o VirtualNetworkGatewayVpnClientConfigurationOutput) RadiusServers() VirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfiguration) []VirtualNetworkGatewayVpnClientConfigurationRadiusServer {
		return v.RadiusServers
	}).(VirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayOutput)
}

// One or more `revokedCertificate` blocks which are defined below.
func (o VirtualNetworkGatewayVpnClientConfigurationOutput) RevokedCertificates() VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfiguration) []VirtualNetworkGatewayVpnClientConfigurationRevokedCertificate {
		return v.RevokedCertificates
	}).(VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput)
}

// One or more `rootCertificate` blocks which are defined below. These root certificates are used to sign the client certificate used by the VPN clients to connect to the gateway.
func (o VirtualNetworkGatewayVpnClientConfigurationOutput) RootCertificates() VirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfiguration) []VirtualNetworkGatewayVpnClientConfigurationRootCertificate {
		return v.RootCertificates
	}).(VirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput)
}

// One or more `virtualNetworkGatewayClientConnection` blocks as defined below.
func (o VirtualNetworkGatewayVpnClientConfigurationOutput) VirtualNetworkGatewayClientConnections() VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfiguration) []VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnection {
		return v.VirtualNetworkGatewayClientConnections
	}).(VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayOutput)
}

// List of the vpn authentication types for the virtual network gateway.
// The supported values are `AAD`, `Radius` and `Certificate`.
//
// > **NOTE:** `vpnAuthTypes` must be set when using multiple vpn authentication types.
func (o VirtualNetworkGatewayVpnClientConfigurationOutput) VpnAuthTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfiguration) []string { return v.VpnAuthTypes }).(pulumi.StringArrayOutput)
}

// List of the protocols supported by the vpn client.
// The supported values are `SSTP`, `IkeV2` and `OpenVPN`.
// Values `SSTP` and `IkeV2` are incompatible with the use of
// `aadTenant`, `aadAudience` and `aadIssuer`.
func (o VirtualNetworkGatewayVpnClientConfigurationOutput) VpnClientProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfiguration) []string { return v.VpnClientProtocols }).(pulumi.StringArrayOutput)
}

type VirtualNetworkGatewayVpnClientConfigurationPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayVpnClientConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayVpnClientConfiguration)(nil)).Elem()
}

func (o VirtualNetworkGatewayVpnClientConfigurationPtrOutput) ToVirtualNetworkGatewayVpnClientConfigurationPtrOutput() VirtualNetworkGatewayVpnClientConfigurationPtrOutput {
	return o
}

func (o VirtualNetworkGatewayVpnClientConfigurationPtrOutput) ToVirtualNetworkGatewayVpnClientConfigurationPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayVpnClientConfigurationPtrOutput {
	return o
}

func (o VirtualNetworkGatewayVpnClientConfigurationPtrOutput) Elem() VirtualNetworkGatewayVpnClientConfigurationOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayVpnClientConfiguration) VirtualNetworkGatewayVpnClientConfiguration {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkGatewayVpnClientConfiguration
		return ret
	}).(VirtualNetworkGatewayVpnClientConfigurationOutput)
}

// The client id of the Azure VPN application.
// See [Create an Active Directory (AD) tenant for P2S OpenVPN protocol connections](https://docs.microsoft.com/en-gb/azure/vpn-gateway/openvpn-azure-ad-tenant-multi-app) for values
func (o VirtualNetworkGatewayVpnClientConfigurationPtrOutput) AadAudience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayVpnClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AadAudience
	}).(pulumi.StringPtrOutput)
}

// The STS url for your tenant
func (o VirtualNetworkGatewayVpnClientConfigurationPtrOutput) AadIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayVpnClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AadIssuer
	}).(pulumi.StringPtrOutput)
}

// AzureAD Tenant URL
func (o VirtualNetworkGatewayVpnClientConfigurationPtrOutput) AadTenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayVpnClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AadTenant
	}).(pulumi.StringPtrOutput)
}

// The address space out of which IP addresses for vpn clients will be taken. You can provide more than one address space, e.g. in CIDR notation.
func (o VirtualNetworkGatewayVpnClientConfigurationPtrOutput) AddressSpaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayVpnClientConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.AddressSpaces
	}).(pulumi.StringArrayOutput)
}

// An `ipsecPolicy` block as defined below.
func (o VirtualNetworkGatewayVpnClientConfigurationPtrOutput) IpsecPolicy() VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayVpnClientConfiguration) *VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy {
		if v == nil {
			return nil
		}
		return v.IpsecPolicy
	}).(VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput)
}

// The address of the Radius server.
func (o VirtualNetworkGatewayVpnClientConfigurationPtrOutput) RadiusServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayVpnClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RadiusServerAddress
	}).(pulumi.StringPtrOutput)
}

// The secret used by the Radius server.
func (o VirtualNetworkGatewayVpnClientConfigurationPtrOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayVpnClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RadiusServerSecret
	}).(pulumi.StringPtrOutput)
}

// One or more `radiusServer` blocks as defined below.
func (o VirtualNetworkGatewayVpnClientConfigurationPtrOutput) RadiusServers() VirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayVpnClientConfiguration) []VirtualNetworkGatewayVpnClientConfigurationRadiusServer {
		if v == nil {
			return nil
		}
		return v.RadiusServers
	}).(VirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayOutput)
}

// One or more `revokedCertificate` blocks which are defined below.
func (o VirtualNetworkGatewayVpnClientConfigurationPtrOutput) RevokedCertificates() VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayVpnClientConfiguration) []VirtualNetworkGatewayVpnClientConfigurationRevokedCertificate {
		if v == nil {
			return nil
		}
		return v.RevokedCertificates
	}).(VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput)
}

// One or more `rootCertificate` blocks which are defined below. These root certificates are used to sign the client certificate used by the VPN clients to connect to the gateway.
func (o VirtualNetworkGatewayVpnClientConfigurationPtrOutput) RootCertificates() VirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayVpnClientConfiguration) []VirtualNetworkGatewayVpnClientConfigurationRootCertificate {
		if v == nil {
			return nil
		}
		return v.RootCertificates
	}).(VirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput)
}

// One or more `virtualNetworkGatewayClientConnection` blocks as defined below.
func (o VirtualNetworkGatewayVpnClientConfigurationPtrOutput) VirtualNetworkGatewayClientConnections() VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayVpnClientConfiguration) []VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnection {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkGatewayClientConnections
	}).(VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayOutput)
}

// List of the vpn authentication types for the virtual network gateway.
// The supported values are `AAD`, `Radius` and `Certificate`.
//
// > **NOTE:** `vpnAuthTypes` must be set when using multiple vpn authentication types.
func (o VirtualNetworkGatewayVpnClientConfigurationPtrOutput) VpnAuthTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayVpnClientConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.VpnAuthTypes
	}).(pulumi.StringArrayOutput)
}

// List of the protocols supported by the vpn client.
// The supported values are `SSTP`, `IkeV2` and `OpenVPN`.
// Values `SSTP` and `IkeV2` are incompatible with the use of
// `aadTenant`, `aadAudience` and `aadIssuer`.
func (o VirtualNetworkGatewayVpnClientConfigurationPtrOutput) VpnClientProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayVpnClientConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.VpnClientProtocols
	}).(pulumi.StringArrayOutput)
}

type VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy struct {
	// The DH Group, used in IKE Phase 1. Possible values are `DHGroup1`, `DHGroup2`, `DHGroup14`, `DHGroup24`, `DHGroup2048`, `ECP256`, `ECP384` and `None`.
	DhGroup string `pulumi:"dhGroup"`
	// The IKE encryption algorithm, used for IKE Phase 2. Possible values are `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128` and `GCMAES256`.
	IkeEncryption string `pulumi:"ikeEncryption"`
	// The IKE encryption integrity algorithm, used for IKE Phase 2. Possible values are `GCMAES128`, `GCMAES256`, `MD5`, `SHA1`, `SHA256` and `SHA384`.
	IkeIntegrity string `pulumi:"ikeIntegrity"`
	// The IPSec encryption algorithm, used for IKE phase 1. Possible values are `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128`, `GCMAES192`, `GCMAES256` and `None`.
	IpsecEncryption string `pulumi:"ipsecEncryption"`
	// The IPSec integrity algorithm, used for IKE phase 1. Possible values are `GCMAES128`, `GCMAES192`, `GCMAES256`, `MD5`, `SHA1` and `SHA256`.
	IpsecIntegrity string `pulumi:"ipsecIntegrity"`
	// The Pfs Group, used in IKE Phase 2. Possible values are `ECP256`, `ECP384`, `PFS1`, `PFS2`, `PFS14`, `PFS24`, `PFS2048`, `PFSMM` and `None`.
	PfsGroup string `pulumi:"pfsGroup"`
	// The IPSec Security Association payload size in KB for a Site-to-Site VPN tunnel. Possible values are between `1024` and `2147483647`.
	SaDataSizeInKilobytes int `pulumi:"saDataSizeInKilobytes"`
	// The IPSec Security Association lifetime in seconds for a Site-to-Site VPN tunnel. Possible values are between `300` and `172799`.
	SaLifetimeInSeconds int `pulumi:"saLifetimeInSeconds"`
}

// VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyInput is an input type that accepts VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyArgs and VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyInput` via:
//
//	VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyArgs{...}
type VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutput() VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutput
	ToVirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutputWithContext(context.Context) VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutput
}

type VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyArgs struct {
	// The DH Group, used in IKE Phase 1. Possible values are `DHGroup1`, `DHGroup2`, `DHGroup14`, `DHGroup24`, `DHGroup2048`, `ECP256`, `ECP384` and `None`.
	DhGroup pulumi.StringInput `pulumi:"dhGroup"`
	// The IKE encryption algorithm, used for IKE Phase 2. Possible values are `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128` and `GCMAES256`.
	IkeEncryption pulumi.StringInput `pulumi:"ikeEncryption"`
	// The IKE encryption integrity algorithm, used for IKE Phase 2. Possible values are `GCMAES128`, `GCMAES256`, `MD5`, `SHA1`, `SHA256` and `SHA384`.
	IkeIntegrity pulumi.StringInput `pulumi:"ikeIntegrity"`
	// The IPSec encryption algorithm, used for IKE phase 1. Possible values are `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128`, `GCMAES192`, `GCMAES256` and `None`.
	IpsecEncryption pulumi.StringInput `pulumi:"ipsecEncryption"`
	// The IPSec integrity algorithm, used for IKE phase 1. Possible values are `GCMAES128`, `GCMAES192`, `GCMAES256`, `MD5`, `SHA1` and `SHA256`.
	IpsecIntegrity pulumi.StringInput `pulumi:"ipsecIntegrity"`
	// The Pfs Group, used in IKE Phase 2. Possible values are `ECP256`, `ECP384`, `PFS1`, `PFS2`, `PFS14`, `PFS24`, `PFS2048`, `PFSMM` and `None`.
	PfsGroup pulumi.StringInput `pulumi:"pfsGroup"`
	// The IPSec Security Association payload size in KB for a Site-to-Site VPN tunnel. Possible values are between `1024` and `2147483647`.
	SaDataSizeInKilobytes pulumi.IntInput `pulumi:"saDataSizeInKilobytes"`
	// The IPSec Security Association lifetime in seconds for a Site-to-Site VPN tunnel. Possible values are between `300` and `172799`.
	SaLifetimeInSeconds pulumi.IntInput `pulumi:"saLifetimeInSeconds"`
}

func (VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy)(nil)).Elem()
}

func (i VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyArgs) ToVirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutput() VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutput {
	return i.ToVirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyArgs) ToVirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutputWithContext(ctx context.Context) VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutput)
}

func (i VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyArgs) ToVirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput() VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput {
	return i.ToVirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyArgs) ToVirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutput).ToVirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutputWithContext(ctx)
}

// VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrInput is an input type that accepts VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyArgs, VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtr and VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrInput` via:
//
//	        VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyArgs{...}
//
//	or:
//
//	        nil
type VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput() VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput
	ToVirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutputWithContext(context.Context) VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput
}

type virtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrType VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyArgs

func VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtr(v *VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyArgs) VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrInput {
	return (*virtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrType)(v)
}

func (*virtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy)(nil)).Elem()
}

func (i *virtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrType) ToVirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput() VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput {
	return i.ToVirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrType) ToVirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput)
}

type VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy)(nil)).Elem()
}

func (o VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutput) ToVirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutput() VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutput {
	return o
}

func (o VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutput) ToVirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutputWithContext(ctx context.Context) VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutput {
	return o
}

func (o VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutput) ToVirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput() VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput {
	return o.ToVirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutput) ToVirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy) *VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy {
		return &v
	}).(VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput)
}

// The DH Group, used in IKE Phase 1. Possible values are `DHGroup1`, `DHGroup2`, `DHGroup14`, `DHGroup24`, `DHGroup2048`, `ECP256`, `ECP384` and `None`.
func (o VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutput) DhGroup() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy) string { return v.DhGroup }).(pulumi.StringOutput)
}

// The IKE encryption algorithm, used for IKE Phase 2. Possible values are `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128` and `GCMAES256`.
func (o VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutput) IkeEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy) string { return v.IkeEncryption }).(pulumi.StringOutput)
}

// The IKE encryption integrity algorithm, used for IKE Phase 2. Possible values are `GCMAES128`, `GCMAES256`, `MD5`, `SHA1`, `SHA256` and `SHA384`.
func (o VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutput) IkeIntegrity() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy) string { return v.IkeIntegrity }).(pulumi.StringOutput)
}

// The IPSec encryption algorithm, used for IKE phase 1. Possible values are `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128`, `GCMAES192`, `GCMAES256` and `None`.
func (o VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutput) IpsecEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy) string { return v.IpsecEncryption }).(pulumi.StringOutput)
}

// The IPSec integrity algorithm, used for IKE phase 1. Possible values are `GCMAES128`, `GCMAES192`, `GCMAES256`, `MD5`, `SHA1` and `SHA256`.
func (o VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutput) IpsecIntegrity() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy) string { return v.IpsecIntegrity }).(pulumi.StringOutput)
}

// The Pfs Group, used in IKE Phase 2. Possible values are `ECP256`, `ECP384`, `PFS1`, `PFS2`, `PFS14`, `PFS24`, `PFS2048`, `PFSMM` and `None`.
func (o VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutput) PfsGroup() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy) string { return v.PfsGroup }).(pulumi.StringOutput)
}

// The IPSec Security Association payload size in KB for a Site-to-Site VPN tunnel. Possible values are between `1024` and `2147483647`.
func (o VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutput) SaDataSizeInKilobytes() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy) int { return v.SaDataSizeInKilobytes }).(pulumi.IntOutput)
}

// The IPSec Security Association lifetime in seconds for a Site-to-Site VPN tunnel. Possible values are between `300` and `172799`.
func (o VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutput) SaLifetimeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy) int { return v.SaLifetimeInSeconds }).(pulumi.IntOutput)
}

type VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy)(nil)).Elem()
}

func (o VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput) ToVirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput() VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput {
	return o
}

func (o VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput) ToVirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput {
	return o
}

func (o VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput) Elem() VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy) VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy {
		if v != nil {
			return *v
		}
		var ret VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy
		return ret
	}).(VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutput)
}

// The DH Group, used in IKE Phase 1. Possible values are `DHGroup1`, `DHGroup2`, `DHGroup14`, `DHGroup24`, `DHGroup2048`, `ECP256`, `ECP384` and `None`.
func (o VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput) DhGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.DhGroup
	}).(pulumi.StringPtrOutput)
}

// The IKE encryption algorithm, used for IKE Phase 2. Possible values are `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128` and `GCMAES256`.
func (o VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput) IkeEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.IkeEncryption
	}).(pulumi.StringPtrOutput)
}

// The IKE encryption integrity algorithm, used for IKE Phase 2. Possible values are `GCMAES128`, `GCMAES256`, `MD5`, `SHA1`, `SHA256` and `SHA384`.
func (o VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput) IkeIntegrity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.IkeIntegrity
	}).(pulumi.StringPtrOutput)
}

// The IPSec encryption algorithm, used for IKE phase 1. Possible values are `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128`, `GCMAES192`, `GCMAES256` and `None`.
func (o VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput) IpsecEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.IpsecEncryption
	}).(pulumi.StringPtrOutput)
}

// The IPSec integrity algorithm, used for IKE phase 1. Possible values are `GCMAES128`, `GCMAES192`, `GCMAES256`, `MD5`, `SHA1` and `SHA256`.
func (o VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput) IpsecIntegrity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.IpsecIntegrity
	}).(pulumi.StringPtrOutput)
}

// The Pfs Group, used in IKE Phase 2. Possible values are `ECP256`, `ECP384`, `PFS1`, `PFS2`, `PFS14`, `PFS24`, `PFS2048`, `PFSMM` and `None`.
func (o VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput) PfsGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.PfsGroup
	}).(pulumi.StringPtrOutput)
}

// The IPSec Security Association payload size in KB for a Site-to-Site VPN tunnel. Possible values are between `1024` and `2147483647`.
func (o VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput) SaDataSizeInKilobytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.SaDataSizeInKilobytes
	}).(pulumi.IntPtrOutput)
}

// The IPSec Security Association lifetime in seconds for a Site-to-Site VPN tunnel. Possible values are between `300` and `172799`.
func (o VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput) SaLifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.SaLifetimeInSeconds
	}).(pulumi.IntPtrOutput)
}

type VirtualNetworkGatewayVpnClientConfigurationRadiusServer struct {
	// The address of the Radius Server.
	Address string `pulumi:"address"`
	// The score of the Radius Server determines the priority of the server. Possible values are between `1` and `30`.
	Score int `pulumi:"score"`
	// The secret that is used to communicate with the Radius Server.
	Secret string `pulumi:"secret"`
}

// VirtualNetworkGatewayVpnClientConfigurationRadiusServerInput is an input type that accepts VirtualNetworkGatewayVpnClientConfigurationRadiusServerArgs and VirtualNetworkGatewayVpnClientConfigurationRadiusServerOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayVpnClientConfigurationRadiusServerInput` via:
//
//	VirtualNetworkGatewayVpnClientConfigurationRadiusServerArgs{...}
type VirtualNetworkGatewayVpnClientConfigurationRadiusServerInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayVpnClientConfigurationRadiusServerOutput() VirtualNetworkGatewayVpnClientConfigurationRadiusServerOutput
	ToVirtualNetworkGatewayVpnClientConfigurationRadiusServerOutputWithContext(context.Context) VirtualNetworkGatewayVpnClientConfigurationRadiusServerOutput
}

type VirtualNetworkGatewayVpnClientConfigurationRadiusServerArgs struct {
	// The address of the Radius Server.
	Address pulumi.StringInput `pulumi:"address"`
	// The score of the Radius Server determines the priority of the server. Possible values are between `1` and `30`.
	Score pulumi.IntInput `pulumi:"score"`
	// The secret that is used to communicate with the Radius Server.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (VirtualNetworkGatewayVpnClientConfigurationRadiusServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayVpnClientConfigurationRadiusServer)(nil)).Elem()
}

func (i VirtualNetworkGatewayVpnClientConfigurationRadiusServerArgs) ToVirtualNetworkGatewayVpnClientConfigurationRadiusServerOutput() VirtualNetworkGatewayVpnClientConfigurationRadiusServerOutput {
	return i.ToVirtualNetworkGatewayVpnClientConfigurationRadiusServerOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayVpnClientConfigurationRadiusServerArgs) ToVirtualNetworkGatewayVpnClientConfigurationRadiusServerOutputWithContext(ctx context.Context) VirtualNetworkGatewayVpnClientConfigurationRadiusServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayVpnClientConfigurationRadiusServerOutput)
}

// VirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayInput is an input type that accepts VirtualNetworkGatewayVpnClientConfigurationRadiusServerArray and VirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayInput` via:
//
//	VirtualNetworkGatewayVpnClientConfigurationRadiusServerArray{ VirtualNetworkGatewayVpnClientConfigurationRadiusServerArgs{...} }
type VirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayOutput() VirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayOutput
	ToVirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayOutputWithContext(context.Context) VirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayOutput
}

type VirtualNetworkGatewayVpnClientConfigurationRadiusServerArray []VirtualNetworkGatewayVpnClientConfigurationRadiusServerInput

func (VirtualNetworkGatewayVpnClientConfigurationRadiusServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayVpnClientConfigurationRadiusServer)(nil)).Elem()
}

func (i VirtualNetworkGatewayVpnClientConfigurationRadiusServerArray) ToVirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayOutput() VirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayOutput {
	return i.ToVirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayVpnClientConfigurationRadiusServerArray) ToVirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayOutput)
}

type VirtualNetworkGatewayVpnClientConfigurationRadiusServerOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayVpnClientConfigurationRadiusServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayVpnClientConfigurationRadiusServer)(nil)).Elem()
}

func (o VirtualNetworkGatewayVpnClientConfigurationRadiusServerOutput) ToVirtualNetworkGatewayVpnClientConfigurationRadiusServerOutput() VirtualNetworkGatewayVpnClientConfigurationRadiusServerOutput {
	return o
}

func (o VirtualNetworkGatewayVpnClientConfigurationRadiusServerOutput) ToVirtualNetworkGatewayVpnClientConfigurationRadiusServerOutputWithContext(ctx context.Context) VirtualNetworkGatewayVpnClientConfigurationRadiusServerOutput {
	return o
}

// The address of the Radius Server.
func (o VirtualNetworkGatewayVpnClientConfigurationRadiusServerOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfigurationRadiusServer) string { return v.Address }).(pulumi.StringOutput)
}

// The score of the Radius Server determines the priority of the server. Possible values are between `1` and `30`.
func (o VirtualNetworkGatewayVpnClientConfigurationRadiusServerOutput) Score() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfigurationRadiusServer) int { return v.Score }).(pulumi.IntOutput)
}

// The secret that is used to communicate with the Radius Server.
func (o VirtualNetworkGatewayVpnClientConfigurationRadiusServerOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfigurationRadiusServer) string { return v.Secret }).(pulumi.StringOutput)
}

type VirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayVpnClientConfigurationRadiusServer)(nil)).Elem()
}

func (o VirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayOutput) ToVirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayOutput() VirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayOutput {
	return o
}

func (o VirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayOutput) ToVirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayOutput {
	return o
}

func (o VirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayVpnClientConfigurationRadiusServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayVpnClientConfigurationRadiusServer {
		return vs[0].([]VirtualNetworkGatewayVpnClientConfigurationRadiusServer)[vs[1].(int)]
	}).(VirtualNetworkGatewayVpnClientConfigurationRadiusServerOutput)
}

type VirtualNetworkGatewayVpnClientConfigurationRevokedCertificate struct {
	// Specifies the name of the certificate resource.
	Name string `pulumi:"name"`
	// Specifies the public data of the certificate.
	Thumbprint string `pulumi:"thumbprint"`
}

// VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateInput is an input type that accepts VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArgs and VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateInput` via:
//
//	VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArgs{...}
type VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput() VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput
	ToVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutputWithContext(context.Context) VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput
}

type VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArgs struct {
	// Specifies the name of the certificate resource.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the public data of the certificate.
	Thumbprint pulumi.StringInput `pulumi:"thumbprint"`
}

func (VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayVpnClientConfigurationRevokedCertificate)(nil)).Elem()
}

func (i VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArgs) ToVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput() VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput {
	return i.ToVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArgs) ToVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutputWithContext(ctx context.Context) VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput)
}

// VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayInput is an input type that accepts VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArray and VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayInput` via:
//
//	VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArray{ VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArgs{...} }
type VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput() VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput
	ToVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutputWithContext(context.Context) VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput
}

type VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArray []VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateInput

func (VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayVpnClientConfigurationRevokedCertificate)(nil)).Elem()
}

func (i VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArray) ToVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput() VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput {
	return i.ToVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArray) ToVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput)
}

type VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayVpnClientConfigurationRevokedCertificate)(nil)).Elem()
}

func (o VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput) ToVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput() VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput {
	return o
}

func (o VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput) ToVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutputWithContext(ctx context.Context) VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput {
	return o
}

// Specifies the name of the certificate resource.
func (o VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfigurationRevokedCertificate) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the public data of the certificate.
func (o VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfigurationRevokedCertificate) string { return v.Thumbprint }).(pulumi.StringOutput)
}

type VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayVpnClientConfigurationRevokedCertificate)(nil)).Elem()
}

func (o VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput) ToVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput() VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput {
	return o
}

func (o VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput) ToVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput {
	return o
}

func (o VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayVpnClientConfigurationRevokedCertificate {
		return vs[0].([]VirtualNetworkGatewayVpnClientConfigurationRevokedCertificate)[vs[1].(int)]
	}).(VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput)
}

type VirtualNetworkGatewayVpnClientConfigurationRootCertificate struct {
	// A user-defined name of the root certificate.
	Name string `pulumi:"name"`
	// The public certificate of the root certificate authority. The certificate must be provided in Base-64 encoded X.509 format (PEM). In particular, this argument *must not* include the `-----BEGIN CERTIFICATE-----` or `-----END CERTIFICATE-----` markers.
	PublicCertData string `pulumi:"publicCertData"`
}

// VirtualNetworkGatewayVpnClientConfigurationRootCertificateInput is an input type that accepts VirtualNetworkGatewayVpnClientConfigurationRootCertificateArgs and VirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayVpnClientConfigurationRootCertificateInput` via:
//
//	VirtualNetworkGatewayVpnClientConfigurationRootCertificateArgs{...}
type VirtualNetworkGatewayVpnClientConfigurationRootCertificateInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput() VirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput
	ToVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutputWithContext(context.Context) VirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput
}

type VirtualNetworkGatewayVpnClientConfigurationRootCertificateArgs struct {
	// A user-defined name of the root certificate.
	Name pulumi.StringInput `pulumi:"name"`
	// The public certificate of the root certificate authority. The certificate must be provided in Base-64 encoded X.509 format (PEM). In particular, this argument *must not* include the `-----BEGIN CERTIFICATE-----` or `-----END CERTIFICATE-----` markers.
	PublicCertData pulumi.StringInput `pulumi:"publicCertData"`
}

func (VirtualNetworkGatewayVpnClientConfigurationRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayVpnClientConfigurationRootCertificate)(nil)).Elem()
}

func (i VirtualNetworkGatewayVpnClientConfigurationRootCertificateArgs) ToVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput() VirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput {
	return i.ToVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayVpnClientConfigurationRootCertificateArgs) ToVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutputWithContext(ctx context.Context) VirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput)
}

// VirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayInput is an input type that accepts VirtualNetworkGatewayVpnClientConfigurationRootCertificateArray and VirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayInput` via:
//
//	VirtualNetworkGatewayVpnClientConfigurationRootCertificateArray{ VirtualNetworkGatewayVpnClientConfigurationRootCertificateArgs{...} }
type VirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput() VirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput
	ToVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutputWithContext(context.Context) VirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput
}

type VirtualNetworkGatewayVpnClientConfigurationRootCertificateArray []VirtualNetworkGatewayVpnClientConfigurationRootCertificateInput

func (VirtualNetworkGatewayVpnClientConfigurationRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayVpnClientConfigurationRootCertificate)(nil)).Elem()
}

func (i VirtualNetworkGatewayVpnClientConfigurationRootCertificateArray) ToVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput() VirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput {
	return i.ToVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayVpnClientConfigurationRootCertificateArray) ToVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput)
}

type VirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayVpnClientConfigurationRootCertificate)(nil)).Elem()
}

func (o VirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput) ToVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput() VirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput {
	return o
}

func (o VirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput) ToVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutputWithContext(ctx context.Context) VirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput {
	return o
}

// A user-defined name of the root certificate.
func (o VirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfigurationRootCertificate) string { return v.Name }).(pulumi.StringOutput)
}

// The public certificate of the root certificate authority. The certificate must be provided in Base-64 encoded X.509 format (PEM). In particular, this argument *must not* include the `-----BEGIN CERTIFICATE-----` or `-----END CERTIFICATE-----` markers.
func (o VirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput) PublicCertData() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfigurationRootCertificate) string { return v.PublicCertData }).(pulumi.StringOutput)
}

type VirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayVpnClientConfigurationRootCertificate)(nil)).Elem()
}

func (o VirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput) ToVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput() VirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput {
	return o
}

func (o VirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput) ToVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput {
	return o
}

func (o VirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayVpnClientConfigurationRootCertificate {
		return vs[0].([]VirtualNetworkGatewayVpnClientConfigurationRootCertificate)[vs[1].(int)]
	}).(VirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput)
}

type VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnection struct {
	// A list of address prefixes for P2S VPN Client.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// The name of the Virtual Network Gateway Client Connection.
	Name string `pulumi:"name"`
	// A list of names of Virtual Network Gateway Policy Groups.
	PolicyGroupNames []string `pulumi:"policyGroupNames"`
}

// VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionInput is an input type that accepts VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArgs and VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionInput` via:
//
//	VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArgs{...}
type VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionOutput() VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionOutput
	ToVirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionOutputWithContext(context.Context) VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionOutput
}

type VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArgs struct {
	// A list of address prefixes for P2S VPN Client.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
	// The name of the Virtual Network Gateway Client Connection.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of names of Virtual Network Gateway Policy Groups.
	PolicyGroupNames pulumi.StringArrayInput `pulumi:"policyGroupNames"`
}

func (VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnection)(nil)).Elem()
}

func (i VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArgs) ToVirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionOutput() VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionOutput {
	return i.ToVirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArgs) ToVirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionOutputWithContext(ctx context.Context) VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionOutput)
}

// VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayInput is an input type that accepts VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArray and VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayInput` via:
//
//	VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArray{ VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArgs{...} }
type VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayOutput() VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayOutput
	ToVirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayOutputWithContext(context.Context) VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayOutput
}

type VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArray []VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionInput

func (VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnection)(nil)).Elem()
}

func (i VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArray) ToVirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayOutput() VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayOutput {
	return i.ToVirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArray) ToVirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayOutput)
}

type VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnection)(nil)).Elem()
}

func (o VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionOutput) ToVirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionOutput() VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionOutput {
	return o
}

func (o VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionOutput) ToVirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionOutputWithContext(ctx context.Context) VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionOutput {
	return o
}

// A list of address prefixes for P2S VPN Client.
func (o VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnection) []string {
		return v.AddressPrefixes
	}).(pulumi.StringArrayOutput)
}

// The name of the Virtual Network Gateway Client Connection.
func (o VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnection) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// A list of names of Virtual Network Gateway Policy Groups.
func (o VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionOutput) PolicyGroupNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnection) []string {
		return v.PolicyGroupNames
	}).(pulumi.StringArrayOutput)
}

type VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnection)(nil)).Elem()
}

func (o VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayOutput) ToVirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayOutput() VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayOutput {
	return o
}

func (o VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayOutput) ToVirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayOutput {
	return o
}

func (o VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnection {
		return vs[0].([]VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnection)[vs[1].(int)]
	}).(VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionOutput)
}

type VirtualNetworkSubnet struct {
	// The address prefix to use for the subnet.
	AddressPrefix string `pulumi:"addressPrefix"`
	// The ID of DDoS Protection Plan.
	Id *string `pulumi:"id"`
	// The name of the subnet.
	Name string `pulumi:"name"`
	// The Network Security Group to associate with the subnet. (Referenced by `id`, ie. `azurerm_network_security_group.example.id`)
	SecurityGroup *string `pulumi:"securityGroup"`
}

// VirtualNetworkSubnetInput is an input type that accepts VirtualNetworkSubnetArgs and VirtualNetworkSubnetOutput values.
// You can construct a concrete instance of `VirtualNetworkSubnetInput` via:
//
//	VirtualNetworkSubnetArgs{...}
type VirtualNetworkSubnetInput interface {
	pulumi.Input

	ToVirtualNetworkSubnetOutput() VirtualNetworkSubnetOutput
	ToVirtualNetworkSubnetOutputWithContext(context.Context) VirtualNetworkSubnetOutput
}

type VirtualNetworkSubnetArgs struct {
	// The address prefix to use for the subnet.
	AddressPrefix pulumi.StringInput `pulumi:"addressPrefix"`
	// The ID of DDoS Protection Plan.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the subnet.
	Name pulumi.StringInput `pulumi:"name"`
	// The Network Security Group to associate with the subnet. (Referenced by `id`, ie. `azurerm_network_security_group.example.id`)
	SecurityGroup pulumi.StringPtrInput `pulumi:"securityGroup"`
}

func (VirtualNetworkSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkSubnet)(nil)).Elem()
}

func (i VirtualNetworkSubnetArgs) ToVirtualNetworkSubnetOutput() VirtualNetworkSubnetOutput {
	return i.ToVirtualNetworkSubnetOutputWithContext(context.Background())
}

func (i VirtualNetworkSubnetArgs) ToVirtualNetworkSubnetOutputWithContext(ctx context.Context) VirtualNetworkSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkSubnetOutput)
}

// VirtualNetworkSubnetArrayInput is an input type that accepts VirtualNetworkSubnetArray and VirtualNetworkSubnetArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkSubnetArrayInput` via:
//
//	VirtualNetworkSubnetArray{ VirtualNetworkSubnetArgs{...} }
type VirtualNetworkSubnetArrayInput interface {
	pulumi.Input

	ToVirtualNetworkSubnetArrayOutput() VirtualNetworkSubnetArrayOutput
	ToVirtualNetworkSubnetArrayOutputWithContext(context.Context) VirtualNetworkSubnetArrayOutput
}

type VirtualNetworkSubnetArray []VirtualNetworkSubnetInput

func (VirtualNetworkSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkSubnet)(nil)).Elem()
}

func (i VirtualNetworkSubnetArray) ToVirtualNetworkSubnetArrayOutput() VirtualNetworkSubnetArrayOutput {
	return i.ToVirtualNetworkSubnetArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkSubnetArray) ToVirtualNetworkSubnetArrayOutputWithContext(ctx context.Context) VirtualNetworkSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkSubnetArrayOutput)
}

type VirtualNetworkSubnetOutput struct{ *pulumi.OutputState }

func (VirtualNetworkSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkSubnet)(nil)).Elem()
}

func (o VirtualNetworkSubnetOutput) ToVirtualNetworkSubnetOutput() VirtualNetworkSubnetOutput {
	return o
}

func (o VirtualNetworkSubnetOutput) ToVirtualNetworkSubnetOutputWithContext(ctx context.Context) VirtualNetworkSubnetOutput {
	return o
}

// The address prefix to use for the subnet.
func (o VirtualNetworkSubnetOutput) AddressPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkSubnet) string { return v.AddressPrefix }).(pulumi.StringOutput)
}

// The ID of DDoS Protection Plan.
func (o VirtualNetworkSubnetOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkSubnet) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the subnet.
func (o VirtualNetworkSubnetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkSubnet) string { return v.Name }).(pulumi.StringOutput)
}

// The Network Security Group to associate with the subnet. (Referenced by `id`, ie. `azurerm_network_security_group.example.id`)
func (o VirtualNetworkSubnetOutput) SecurityGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkSubnet) *string { return v.SecurityGroup }).(pulumi.StringPtrOutput)
}

type VirtualNetworkSubnetArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkSubnet)(nil)).Elem()
}

func (o VirtualNetworkSubnetArrayOutput) ToVirtualNetworkSubnetArrayOutput() VirtualNetworkSubnetArrayOutput {
	return o
}

func (o VirtualNetworkSubnetArrayOutput) ToVirtualNetworkSubnetArrayOutputWithContext(ctx context.Context) VirtualNetworkSubnetArrayOutput {
	return o
}

func (o VirtualNetworkSubnetArrayOutput) Index(i pulumi.IntInput) VirtualNetworkSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkSubnet {
		return vs[0].([]VirtualNetworkSubnet)[vs[1].(int)]
	}).(VirtualNetworkSubnetOutput)
}

type VnpGatewayNatRuleExternalMapping struct {
	// The string CIDR representing the address space for the VPN Gateway Nat Rule external mapping.
	AddressSpace string `pulumi:"addressSpace"`
	// The single port range for the VPN Gateway Nat Rule external mapping.
	PortRange *string `pulumi:"portRange"`
}

// VnpGatewayNatRuleExternalMappingInput is an input type that accepts VnpGatewayNatRuleExternalMappingArgs and VnpGatewayNatRuleExternalMappingOutput values.
// You can construct a concrete instance of `VnpGatewayNatRuleExternalMappingInput` via:
//
//	VnpGatewayNatRuleExternalMappingArgs{...}
type VnpGatewayNatRuleExternalMappingInput interface {
	pulumi.Input

	ToVnpGatewayNatRuleExternalMappingOutput() VnpGatewayNatRuleExternalMappingOutput
	ToVnpGatewayNatRuleExternalMappingOutputWithContext(context.Context) VnpGatewayNatRuleExternalMappingOutput
}

type VnpGatewayNatRuleExternalMappingArgs struct {
	// The string CIDR representing the address space for the VPN Gateway Nat Rule external mapping.
	AddressSpace pulumi.StringInput `pulumi:"addressSpace"`
	// The single port range for the VPN Gateway Nat Rule external mapping.
	PortRange pulumi.StringPtrInput `pulumi:"portRange"`
}

func (VnpGatewayNatRuleExternalMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VnpGatewayNatRuleExternalMapping)(nil)).Elem()
}

func (i VnpGatewayNatRuleExternalMappingArgs) ToVnpGatewayNatRuleExternalMappingOutput() VnpGatewayNatRuleExternalMappingOutput {
	return i.ToVnpGatewayNatRuleExternalMappingOutputWithContext(context.Background())
}

func (i VnpGatewayNatRuleExternalMappingArgs) ToVnpGatewayNatRuleExternalMappingOutputWithContext(ctx context.Context) VnpGatewayNatRuleExternalMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnpGatewayNatRuleExternalMappingOutput)
}

// VnpGatewayNatRuleExternalMappingArrayInput is an input type that accepts VnpGatewayNatRuleExternalMappingArray and VnpGatewayNatRuleExternalMappingArrayOutput values.
// You can construct a concrete instance of `VnpGatewayNatRuleExternalMappingArrayInput` via:
//
//	VnpGatewayNatRuleExternalMappingArray{ VnpGatewayNatRuleExternalMappingArgs{...} }
type VnpGatewayNatRuleExternalMappingArrayInput interface {
	pulumi.Input

	ToVnpGatewayNatRuleExternalMappingArrayOutput() VnpGatewayNatRuleExternalMappingArrayOutput
	ToVnpGatewayNatRuleExternalMappingArrayOutputWithContext(context.Context) VnpGatewayNatRuleExternalMappingArrayOutput
}

type VnpGatewayNatRuleExternalMappingArray []VnpGatewayNatRuleExternalMappingInput

func (VnpGatewayNatRuleExternalMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VnpGatewayNatRuleExternalMapping)(nil)).Elem()
}

func (i VnpGatewayNatRuleExternalMappingArray) ToVnpGatewayNatRuleExternalMappingArrayOutput() VnpGatewayNatRuleExternalMappingArrayOutput {
	return i.ToVnpGatewayNatRuleExternalMappingArrayOutputWithContext(context.Background())
}

func (i VnpGatewayNatRuleExternalMappingArray) ToVnpGatewayNatRuleExternalMappingArrayOutputWithContext(ctx context.Context) VnpGatewayNatRuleExternalMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnpGatewayNatRuleExternalMappingArrayOutput)
}

type VnpGatewayNatRuleExternalMappingOutput struct{ *pulumi.OutputState }

func (VnpGatewayNatRuleExternalMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VnpGatewayNatRuleExternalMapping)(nil)).Elem()
}

func (o VnpGatewayNatRuleExternalMappingOutput) ToVnpGatewayNatRuleExternalMappingOutput() VnpGatewayNatRuleExternalMappingOutput {
	return o
}

func (o VnpGatewayNatRuleExternalMappingOutput) ToVnpGatewayNatRuleExternalMappingOutputWithContext(ctx context.Context) VnpGatewayNatRuleExternalMappingOutput {
	return o
}

// The string CIDR representing the address space for the VPN Gateway Nat Rule external mapping.
func (o VnpGatewayNatRuleExternalMappingOutput) AddressSpace() pulumi.StringOutput {
	return o.ApplyT(func(v VnpGatewayNatRuleExternalMapping) string { return v.AddressSpace }).(pulumi.StringOutput)
}

// The single port range for the VPN Gateway Nat Rule external mapping.
func (o VnpGatewayNatRuleExternalMappingOutput) PortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnpGatewayNatRuleExternalMapping) *string { return v.PortRange }).(pulumi.StringPtrOutput)
}

type VnpGatewayNatRuleExternalMappingArrayOutput struct{ *pulumi.OutputState }

func (VnpGatewayNatRuleExternalMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VnpGatewayNatRuleExternalMapping)(nil)).Elem()
}

func (o VnpGatewayNatRuleExternalMappingArrayOutput) ToVnpGatewayNatRuleExternalMappingArrayOutput() VnpGatewayNatRuleExternalMappingArrayOutput {
	return o
}

func (o VnpGatewayNatRuleExternalMappingArrayOutput) ToVnpGatewayNatRuleExternalMappingArrayOutputWithContext(ctx context.Context) VnpGatewayNatRuleExternalMappingArrayOutput {
	return o
}

func (o VnpGatewayNatRuleExternalMappingArrayOutput) Index(i pulumi.IntInput) VnpGatewayNatRuleExternalMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VnpGatewayNatRuleExternalMapping {
		return vs[0].([]VnpGatewayNatRuleExternalMapping)[vs[1].(int)]
	}).(VnpGatewayNatRuleExternalMappingOutput)
}

type VnpGatewayNatRuleInternalMapping struct {
	// The string CIDR representing the address space for the VPN Gateway Nat Rule internal mapping.
	AddressSpace string `pulumi:"addressSpace"`
	// The single port range for the VPN Gateway Nat Rule internal mapping.
	PortRange *string `pulumi:"portRange"`
}

// VnpGatewayNatRuleInternalMappingInput is an input type that accepts VnpGatewayNatRuleInternalMappingArgs and VnpGatewayNatRuleInternalMappingOutput values.
// You can construct a concrete instance of `VnpGatewayNatRuleInternalMappingInput` via:
//
//	VnpGatewayNatRuleInternalMappingArgs{...}
type VnpGatewayNatRuleInternalMappingInput interface {
	pulumi.Input

	ToVnpGatewayNatRuleInternalMappingOutput() VnpGatewayNatRuleInternalMappingOutput
	ToVnpGatewayNatRuleInternalMappingOutputWithContext(context.Context) VnpGatewayNatRuleInternalMappingOutput
}

type VnpGatewayNatRuleInternalMappingArgs struct {
	// The string CIDR representing the address space for the VPN Gateway Nat Rule internal mapping.
	AddressSpace pulumi.StringInput `pulumi:"addressSpace"`
	// The single port range for the VPN Gateway Nat Rule internal mapping.
	PortRange pulumi.StringPtrInput `pulumi:"portRange"`
}

func (VnpGatewayNatRuleInternalMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VnpGatewayNatRuleInternalMapping)(nil)).Elem()
}

func (i VnpGatewayNatRuleInternalMappingArgs) ToVnpGatewayNatRuleInternalMappingOutput() VnpGatewayNatRuleInternalMappingOutput {
	return i.ToVnpGatewayNatRuleInternalMappingOutputWithContext(context.Background())
}

func (i VnpGatewayNatRuleInternalMappingArgs) ToVnpGatewayNatRuleInternalMappingOutputWithContext(ctx context.Context) VnpGatewayNatRuleInternalMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnpGatewayNatRuleInternalMappingOutput)
}

// VnpGatewayNatRuleInternalMappingArrayInput is an input type that accepts VnpGatewayNatRuleInternalMappingArray and VnpGatewayNatRuleInternalMappingArrayOutput values.
// You can construct a concrete instance of `VnpGatewayNatRuleInternalMappingArrayInput` via:
//
//	VnpGatewayNatRuleInternalMappingArray{ VnpGatewayNatRuleInternalMappingArgs{...} }
type VnpGatewayNatRuleInternalMappingArrayInput interface {
	pulumi.Input

	ToVnpGatewayNatRuleInternalMappingArrayOutput() VnpGatewayNatRuleInternalMappingArrayOutput
	ToVnpGatewayNatRuleInternalMappingArrayOutputWithContext(context.Context) VnpGatewayNatRuleInternalMappingArrayOutput
}

type VnpGatewayNatRuleInternalMappingArray []VnpGatewayNatRuleInternalMappingInput

func (VnpGatewayNatRuleInternalMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VnpGatewayNatRuleInternalMapping)(nil)).Elem()
}

func (i VnpGatewayNatRuleInternalMappingArray) ToVnpGatewayNatRuleInternalMappingArrayOutput() VnpGatewayNatRuleInternalMappingArrayOutput {
	return i.ToVnpGatewayNatRuleInternalMappingArrayOutputWithContext(context.Background())
}

func (i VnpGatewayNatRuleInternalMappingArray) ToVnpGatewayNatRuleInternalMappingArrayOutputWithContext(ctx context.Context) VnpGatewayNatRuleInternalMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnpGatewayNatRuleInternalMappingArrayOutput)
}

type VnpGatewayNatRuleInternalMappingOutput struct{ *pulumi.OutputState }

func (VnpGatewayNatRuleInternalMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VnpGatewayNatRuleInternalMapping)(nil)).Elem()
}

func (o VnpGatewayNatRuleInternalMappingOutput) ToVnpGatewayNatRuleInternalMappingOutput() VnpGatewayNatRuleInternalMappingOutput {
	return o
}

func (o VnpGatewayNatRuleInternalMappingOutput) ToVnpGatewayNatRuleInternalMappingOutputWithContext(ctx context.Context) VnpGatewayNatRuleInternalMappingOutput {
	return o
}

// The string CIDR representing the address space for the VPN Gateway Nat Rule internal mapping.
func (o VnpGatewayNatRuleInternalMappingOutput) AddressSpace() pulumi.StringOutput {
	return o.ApplyT(func(v VnpGatewayNatRuleInternalMapping) string { return v.AddressSpace }).(pulumi.StringOutput)
}

// The single port range for the VPN Gateway Nat Rule internal mapping.
func (o VnpGatewayNatRuleInternalMappingOutput) PortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnpGatewayNatRuleInternalMapping) *string { return v.PortRange }).(pulumi.StringPtrOutput)
}

type VnpGatewayNatRuleInternalMappingArrayOutput struct{ *pulumi.OutputState }

func (VnpGatewayNatRuleInternalMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VnpGatewayNatRuleInternalMapping)(nil)).Elem()
}

func (o VnpGatewayNatRuleInternalMappingArrayOutput) ToVnpGatewayNatRuleInternalMappingArrayOutput() VnpGatewayNatRuleInternalMappingArrayOutput {
	return o
}

func (o VnpGatewayNatRuleInternalMappingArrayOutput) ToVnpGatewayNatRuleInternalMappingArrayOutputWithContext(ctx context.Context) VnpGatewayNatRuleInternalMappingArrayOutput {
	return o
}

func (o VnpGatewayNatRuleInternalMappingArrayOutput) Index(i pulumi.IntInput) VnpGatewayNatRuleInternalMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VnpGatewayNatRuleInternalMapping {
		return vs[0].([]VnpGatewayNatRuleInternalMapping)[vs[1].(int)]
	}).(VnpGatewayNatRuleInternalMappingOutput)
}

type VpnGatewayBgpSettings struct {
	// The ASN of the BGP Speaker. Changing this forces a new resource to be created.
	Asn int `pulumi:"asn"`
	// The Address which should be used for the BGP Peering.
	BgpPeeringAddress *string `pulumi:"bgpPeeringAddress"`
	// An `instanceBgpPeeringAddress` block as defined below.
	Instance0BgpPeeringAddress *VpnGatewayBgpSettingsInstance0BgpPeeringAddress `pulumi:"instance0BgpPeeringAddress"`
	// An `instanceBgpPeeringAddress` block as defined below.
	Instance1BgpPeeringAddress *VpnGatewayBgpSettingsInstance1BgpPeeringAddress `pulumi:"instance1BgpPeeringAddress"`
	// The weight added to Routes learned from this BGP Speaker. Changing this forces a new resource to be created.
	PeerWeight int `pulumi:"peerWeight"`
}

// VpnGatewayBgpSettingsInput is an input type that accepts VpnGatewayBgpSettingsArgs and VpnGatewayBgpSettingsOutput values.
// You can construct a concrete instance of `VpnGatewayBgpSettingsInput` via:
//
//	VpnGatewayBgpSettingsArgs{...}
type VpnGatewayBgpSettingsInput interface {
	pulumi.Input

	ToVpnGatewayBgpSettingsOutput() VpnGatewayBgpSettingsOutput
	ToVpnGatewayBgpSettingsOutputWithContext(context.Context) VpnGatewayBgpSettingsOutput
}

type VpnGatewayBgpSettingsArgs struct {
	// The ASN of the BGP Speaker. Changing this forces a new resource to be created.
	Asn pulumi.IntInput `pulumi:"asn"`
	// The Address which should be used for the BGP Peering.
	BgpPeeringAddress pulumi.StringPtrInput `pulumi:"bgpPeeringAddress"`
	// An `instanceBgpPeeringAddress` block as defined below.
	Instance0BgpPeeringAddress VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrInput `pulumi:"instance0BgpPeeringAddress"`
	// An `instanceBgpPeeringAddress` block as defined below.
	Instance1BgpPeeringAddress VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrInput `pulumi:"instance1BgpPeeringAddress"`
	// The weight added to Routes learned from this BGP Speaker. Changing this forces a new resource to be created.
	PeerWeight pulumi.IntInput `pulumi:"peerWeight"`
}

func (VpnGatewayBgpSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayBgpSettings)(nil)).Elem()
}

func (i VpnGatewayBgpSettingsArgs) ToVpnGatewayBgpSettingsOutput() VpnGatewayBgpSettingsOutput {
	return i.ToVpnGatewayBgpSettingsOutputWithContext(context.Background())
}

func (i VpnGatewayBgpSettingsArgs) ToVpnGatewayBgpSettingsOutputWithContext(ctx context.Context) VpnGatewayBgpSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayBgpSettingsOutput)
}

func (i VpnGatewayBgpSettingsArgs) ToVpnGatewayBgpSettingsPtrOutput() VpnGatewayBgpSettingsPtrOutput {
	return i.ToVpnGatewayBgpSettingsPtrOutputWithContext(context.Background())
}

func (i VpnGatewayBgpSettingsArgs) ToVpnGatewayBgpSettingsPtrOutputWithContext(ctx context.Context) VpnGatewayBgpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayBgpSettingsOutput).ToVpnGatewayBgpSettingsPtrOutputWithContext(ctx)
}

// VpnGatewayBgpSettingsPtrInput is an input type that accepts VpnGatewayBgpSettingsArgs, VpnGatewayBgpSettingsPtr and VpnGatewayBgpSettingsPtrOutput values.
// You can construct a concrete instance of `VpnGatewayBgpSettingsPtrInput` via:
//
//	        VpnGatewayBgpSettingsArgs{...}
//
//	or:
//
//	        nil
type VpnGatewayBgpSettingsPtrInput interface {
	pulumi.Input

	ToVpnGatewayBgpSettingsPtrOutput() VpnGatewayBgpSettingsPtrOutput
	ToVpnGatewayBgpSettingsPtrOutputWithContext(context.Context) VpnGatewayBgpSettingsPtrOutput
}

type vpnGatewayBgpSettingsPtrType VpnGatewayBgpSettingsArgs

func VpnGatewayBgpSettingsPtr(v *VpnGatewayBgpSettingsArgs) VpnGatewayBgpSettingsPtrInput {
	return (*vpnGatewayBgpSettingsPtrType)(v)
}

func (*vpnGatewayBgpSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGatewayBgpSettings)(nil)).Elem()
}

func (i *vpnGatewayBgpSettingsPtrType) ToVpnGatewayBgpSettingsPtrOutput() VpnGatewayBgpSettingsPtrOutput {
	return i.ToVpnGatewayBgpSettingsPtrOutputWithContext(context.Background())
}

func (i *vpnGatewayBgpSettingsPtrType) ToVpnGatewayBgpSettingsPtrOutputWithContext(ctx context.Context) VpnGatewayBgpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayBgpSettingsPtrOutput)
}

type VpnGatewayBgpSettingsOutput struct{ *pulumi.OutputState }

func (VpnGatewayBgpSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayBgpSettings)(nil)).Elem()
}

func (o VpnGatewayBgpSettingsOutput) ToVpnGatewayBgpSettingsOutput() VpnGatewayBgpSettingsOutput {
	return o
}

func (o VpnGatewayBgpSettingsOutput) ToVpnGatewayBgpSettingsOutputWithContext(ctx context.Context) VpnGatewayBgpSettingsOutput {
	return o
}

func (o VpnGatewayBgpSettingsOutput) ToVpnGatewayBgpSettingsPtrOutput() VpnGatewayBgpSettingsPtrOutput {
	return o.ToVpnGatewayBgpSettingsPtrOutputWithContext(context.Background())
}

func (o VpnGatewayBgpSettingsOutput) ToVpnGatewayBgpSettingsPtrOutputWithContext(ctx context.Context) VpnGatewayBgpSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpnGatewayBgpSettings) *VpnGatewayBgpSettings {
		return &v
	}).(VpnGatewayBgpSettingsPtrOutput)
}

// The ASN of the BGP Speaker. Changing this forces a new resource to be created.
func (o VpnGatewayBgpSettingsOutput) Asn() pulumi.IntOutput {
	return o.ApplyT(func(v VpnGatewayBgpSettings) int { return v.Asn }).(pulumi.IntOutput)
}

// The Address which should be used for the BGP Peering.
func (o VpnGatewayBgpSettingsOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayBgpSettings) *string { return v.BgpPeeringAddress }).(pulumi.StringPtrOutput)
}

// An `instanceBgpPeeringAddress` block as defined below.
func (o VpnGatewayBgpSettingsOutput) Instance0BgpPeeringAddress() VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput {
	return o.ApplyT(func(v VpnGatewayBgpSettings) *VpnGatewayBgpSettingsInstance0BgpPeeringAddress {
		return v.Instance0BgpPeeringAddress
	}).(VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput)
}

// An `instanceBgpPeeringAddress` block as defined below.
func (o VpnGatewayBgpSettingsOutput) Instance1BgpPeeringAddress() VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput {
	return o.ApplyT(func(v VpnGatewayBgpSettings) *VpnGatewayBgpSettingsInstance1BgpPeeringAddress {
		return v.Instance1BgpPeeringAddress
	}).(VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput)
}

// The weight added to Routes learned from this BGP Speaker. Changing this forces a new resource to be created.
func (o VpnGatewayBgpSettingsOutput) PeerWeight() pulumi.IntOutput {
	return o.ApplyT(func(v VpnGatewayBgpSettings) int { return v.PeerWeight }).(pulumi.IntOutput)
}

type VpnGatewayBgpSettingsPtrOutput struct{ *pulumi.OutputState }

func (VpnGatewayBgpSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGatewayBgpSettings)(nil)).Elem()
}

func (o VpnGatewayBgpSettingsPtrOutput) ToVpnGatewayBgpSettingsPtrOutput() VpnGatewayBgpSettingsPtrOutput {
	return o
}

func (o VpnGatewayBgpSettingsPtrOutput) ToVpnGatewayBgpSettingsPtrOutputWithContext(ctx context.Context) VpnGatewayBgpSettingsPtrOutput {
	return o
}

func (o VpnGatewayBgpSettingsPtrOutput) Elem() VpnGatewayBgpSettingsOutput {
	return o.ApplyT(func(v *VpnGatewayBgpSettings) VpnGatewayBgpSettings {
		if v != nil {
			return *v
		}
		var ret VpnGatewayBgpSettings
		return ret
	}).(VpnGatewayBgpSettingsOutput)
}

// The ASN of the BGP Speaker. Changing this forces a new resource to be created.
func (o VpnGatewayBgpSettingsPtrOutput) Asn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnGatewayBgpSettings) *int {
		if v == nil {
			return nil
		}
		return &v.Asn
	}).(pulumi.IntPtrOutput)
}

// The Address which should be used for the BGP Peering.
func (o VpnGatewayBgpSettingsPtrOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayBgpSettings) *string {
		if v == nil {
			return nil
		}
		return v.BgpPeeringAddress
	}).(pulumi.StringPtrOutput)
}

// An `instanceBgpPeeringAddress` block as defined below.
func (o VpnGatewayBgpSettingsPtrOutput) Instance0BgpPeeringAddress() VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput {
	return o.ApplyT(func(v *VpnGatewayBgpSettings) *VpnGatewayBgpSettingsInstance0BgpPeeringAddress {
		if v == nil {
			return nil
		}
		return v.Instance0BgpPeeringAddress
	}).(VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput)
}

// An `instanceBgpPeeringAddress` block as defined below.
func (o VpnGatewayBgpSettingsPtrOutput) Instance1BgpPeeringAddress() VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput {
	return o.ApplyT(func(v *VpnGatewayBgpSettings) *VpnGatewayBgpSettingsInstance1BgpPeeringAddress {
		if v == nil {
			return nil
		}
		return v.Instance1BgpPeeringAddress
	}).(VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput)
}

// The weight added to Routes learned from this BGP Speaker. Changing this forces a new resource to be created.
func (o VpnGatewayBgpSettingsPtrOutput) PeerWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnGatewayBgpSettings) *int {
		if v == nil {
			return nil
		}
		return &v.PeerWeight
	}).(pulumi.IntPtrOutput)
}

type VpnGatewayBgpSettingsInstance0BgpPeeringAddress struct {
	// A list of custom BGP peering addresses to assign to this instance.
	CustomIps []string `pulumi:"customIps"`
	// The list of default BGP peering addresses which belong to the pre-defined VPN Gateway IP configuration.
	DefaultIps []string `pulumi:"defaultIps"`
	// The pre-defined id of VPN Gateway IP Configuration.
	IpConfigurationId *string `pulumi:"ipConfigurationId"`
	// The list of tunnel public IP addresses which belong to the pre-defined VPN Gateway IP configuration.
	TunnelIps []string `pulumi:"tunnelIps"`
}

// VpnGatewayBgpSettingsInstance0BgpPeeringAddressInput is an input type that accepts VpnGatewayBgpSettingsInstance0BgpPeeringAddressArgs and VpnGatewayBgpSettingsInstance0BgpPeeringAddressOutput values.
// You can construct a concrete instance of `VpnGatewayBgpSettingsInstance0BgpPeeringAddressInput` via:
//
//	VpnGatewayBgpSettingsInstance0BgpPeeringAddressArgs{...}
type VpnGatewayBgpSettingsInstance0BgpPeeringAddressInput interface {
	pulumi.Input

	ToVpnGatewayBgpSettingsInstance0BgpPeeringAddressOutput() VpnGatewayBgpSettingsInstance0BgpPeeringAddressOutput
	ToVpnGatewayBgpSettingsInstance0BgpPeeringAddressOutputWithContext(context.Context) VpnGatewayBgpSettingsInstance0BgpPeeringAddressOutput
}

type VpnGatewayBgpSettingsInstance0BgpPeeringAddressArgs struct {
	// A list of custom BGP peering addresses to assign to this instance.
	CustomIps pulumi.StringArrayInput `pulumi:"customIps"`
	// The list of default BGP peering addresses which belong to the pre-defined VPN Gateway IP configuration.
	DefaultIps pulumi.StringArrayInput `pulumi:"defaultIps"`
	// The pre-defined id of VPN Gateway IP Configuration.
	IpConfigurationId pulumi.StringPtrInput `pulumi:"ipConfigurationId"`
	// The list of tunnel public IP addresses which belong to the pre-defined VPN Gateway IP configuration.
	TunnelIps pulumi.StringArrayInput `pulumi:"tunnelIps"`
}

func (VpnGatewayBgpSettingsInstance0BgpPeeringAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayBgpSettingsInstance0BgpPeeringAddress)(nil)).Elem()
}

func (i VpnGatewayBgpSettingsInstance0BgpPeeringAddressArgs) ToVpnGatewayBgpSettingsInstance0BgpPeeringAddressOutput() VpnGatewayBgpSettingsInstance0BgpPeeringAddressOutput {
	return i.ToVpnGatewayBgpSettingsInstance0BgpPeeringAddressOutputWithContext(context.Background())
}

func (i VpnGatewayBgpSettingsInstance0BgpPeeringAddressArgs) ToVpnGatewayBgpSettingsInstance0BgpPeeringAddressOutputWithContext(ctx context.Context) VpnGatewayBgpSettingsInstance0BgpPeeringAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayBgpSettingsInstance0BgpPeeringAddressOutput)
}

func (i VpnGatewayBgpSettingsInstance0BgpPeeringAddressArgs) ToVpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput() VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput {
	return i.ToVpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutputWithContext(context.Background())
}

func (i VpnGatewayBgpSettingsInstance0BgpPeeringAddressArgs) ToVpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutputWithContext(ctx context.Context) VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayBgpSettingsInstance0BgpPeeringAddressOutput).ToVpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutputWithContext(ctx)
}

// VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrInput is an input type that accepts VpnGatewayBgpSettingsInstance0BgpPeeringAddressArgs, VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtr and VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput values.
// You can construct a concrete instance of `VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrInput` via:
//
//	        VpnGatewayBgpSettingsInstance0BgpPeeringAddressArgs{...}
//
//	or:
//
//	        nil
type VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrInput interface {
	pulumi.Input

	ToVpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput() VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput
	ToVpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutputWithContext(context.Context) VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput
}

type vpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrType VpnGatewayBgpSettingsInstance0BgpPeeringAddressArgs

func VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtr(v *VpnGatewayBgpSettingsInstance0BgpPeeringAddressArgs) VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrInput {
	return (*vpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrType)(v)
}

func (*vpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGatewayBgpSettingsInstance0BgpPeeringAddress)(nil)).Elem()
}

func (i *vpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrType) ToVpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput() VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput {
	return i.ToVpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutputWithContext(context.Background())
}

func (i *vpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrType) ToVpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutputWithContext(ctx context.Context) VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput)
}

type VpnGatewayBgpSettingsInstance0BgpPeeringAddressOutput struct{ *pulumi.OutputState }

func (VpnGatewayBgpSettingsInstance0BgpPeeringAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayBgpSettingsInstance0BgpPeeringAddress)(nil)).Elem()
}

func (o VpnGatewayBgpSettingsInstance0BgpPeeringAddressOutput) ToVpnGatewayBgpSettingsInstance0BgpPeeringAddressOutput() VpnGatewayBgpSettingsInstance0BgpPeeringAddressOutput {
	return o
}

func (o VpnGatewayBgpSettingsInstance0BgpPeeringAddressOutput) ToVpnGatewayBgpSettingsInstance0BgpPeeringAddressOutputWithContext(ctx context.Context) VpnGatewayBgpSettingsInstance0BgpPeeringAddressOutput {
	return o
}

func (o VpnGatewayBgpSettingsInstance0BgpPeeringAddressOutput) ToVpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput() VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput {
	return o.ToVpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutputWithContext(context.Background())
}

func (o VpnGatewayBgpSettingsInstance0BgpPeeringAddressOutput) ToVpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutputWithContext(ctx context.Context) VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpnGatewayBgpSettingsInstance0BgpPeeringAddress) *VpnGatewayBgpSettingsInstance0BgpPeeringAddress {
		return &v
	}).(VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput)
}

// A list of custom BGP peering addresses to assign to this instance.
func (o VpnGatewayBgpSettingsInstance0BgpPeeringAddressOutput) CustomIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnGatewayBgpSettingsInstance0BgpPeeringAddress) []string { return v.CustomIps }).(pulumi.StringArrayOutput)
}

// The list of default BGP peering addresses which belong to the pre-defined VPN Gateway IP configuration.
func (o VpnGatewayBgpSettingsInstance0BgpPeeringAddressOutput) DefaultIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnGatewayBgpSettingsInstance0BgpPeeringAddress) []string { return v.DefaultIps }).(pulumi.StringArrayOutput)
}

// The pre-defined id of VPN Gateway IP Configuration.
func (o VpnGatewayBgpSettingsInstance0BgpPeeringAddressOutput) IpConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayBgpSettingsInstance0BgpPeeringAddress) *string { return v.IpConfigurationId }).(pulumi.StringPtrOutput)
}

// The list of tunnel public IP addresses which belong to the pre-defined VPN Gateway IP configuration.
func (o VpnGatewayBgpSettingsInstance0BgpPeeringAddressOutput) TunnelIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnGatewayBgpSettingsInstance0BgpPeeringAddress) []string { return v.TunnelIps }).(pulumi.StringArrayOutput)
}

type VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput struct{ *pulumi.OutputState }

func (VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGatewayBgpSettingsInstance0BgpPeeringAddress)(nil)).Elem()
}

func (o VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput) ToVpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput() VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput {
	return o
}

func (o VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput) ToVpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutputWithContext(ctx context.Context) VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput {
	return o
}

func (o VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput) Elem() VpnGatewayBgpSettingsInstance0BgpPeeringAddressOutput {
	return o.ApplyT(func(v *VpnGatewayBgpSettingsInstance0BgpPeeringAddress) VpnGatewayBgpSettingsInstance0BgpPeeringAddress {
		if v != nil {
			return *v
		}
		var ret VpnGatewayBgpSettingsInstance0BgpPeeringAddress
		return ret
	}).(VpnGatewayBgpSettingsInstance0BgpPeeringAddressOutput)
}

// A list of custom BGP peering addresses to assign to this instance.
func (o VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput) CustomIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpnGatewayBgpSettingsInstance0BgpPeeringAddress) []string {
		if v == nil {
			return nil
		}
		return v.CustomIps
	}).(pulumi.StringArrayOutput)
}

// The list of default BGP peering addresses which belong to the pre-defined VPN Gateway IP configuration.
func (o VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput) DefaultIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpnGatewayBgpSettingsInstance0BgpPeeringAddress) []string {
		if v == nil {
			return nil
		}
		return v.DefaultIps
	}).(pulumi.StringArrayOutput)
}

// The pre-defined id of VPN Gateway IP Configuration.
func (o VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput) IpConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayBgpSettingsInstance0BgpPeeringAddress) *string {
		if v == nil {
			return nil
		}
		return v.IpConfigurationId
	}).(pulumi.StringPtrOutput)
}

// The list of tunnel public IP addresses which belong to the pre-defined VPN Gateway IP configuration.
func (o VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput) TunnelIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpnGatewayBgpSettingsInstance0BgpPeeringAddress) []string {
		if v == nil {
			return nil
		}
		return v.TunnelIps
	}).(pulumi.StringArrayOutput)
}

type VpnGatewayBgpSettingsInstance1BgpPeeringAddress struct {
	// A list of custom BGP peering addresses to assign to this instance.
	CustomIps []string `pulumi:"customIps"`
	// The list of default BGP peering addresses which belong to the pre-defined VPN Gateway IP configuration.
	DefaultIps []string `pulumi:"defaultIps"`
	// The pre-defined id of VPN Gateway IP Configuration.
	IpConfigurationId *string `pulumi:"ipConfigurationId"`
	// The list of tunnel public IP addresses which belong to the pre-defined VPN Gateway IP configuration.
	TunnelIps []string `pulumi:"tunnelIps"`
}

// VpnGatewayBgpSettingsInstance1BgpPeeringAddressInput is an input type that accepts VpnGatewayBgpSettingsInstance1BgpPeeringAddressArgs and VpnGatewayBgpSettingsInstance1BgpPeeringAddressOutput values.
// You can construct a concrete instance of `VpnGatewayBgpSettingsInstance1BgpPeeringAddressInput` via:
//
//	VpnGatewayBgpSettingsInstance1BgpPeeringAddressArgs{...}
type VpnGatewayBgpSettingsInstance1BgpPeeringAddressInput interface {
	pulumi.Input

	ToVpnGatewayBgpSettingsInstance1BgpPeeringAddressOutput() VpnGatewayBgpSettingsInstance1BgpPeeringAddressOutput
	ToVpnGatewayBgpSettingsInstance1BgpPeeringAddressOutputWithContext(context.Context) VpnGatewayBgpSettingsInstance1BgpPeeringAddressOutput
}

type VpnGatewayBgpSettingsInstance1BgpPeeringAddressArgs struct {
	// A list of custom BGP peering addresses to assign to this instance.
	CustomIps pulumi.StringArrayInput `pulumi:"customIps"`
	// The list of default BGP peering addresses which belong to the pre-defined VPN Gateway IP configuration.
	DefaultIps pulumi.StringArrayInput `pulumi:"defaultIps"`
	// The pre-defined id of VPN Gateway IP Configuration.
	IpConfigurationId pulumi.StringPtrInput `pulumi:"ipConfigurationId"`
	// The list of tunnel public IP addresses which belong to the pre-defined VPN Gateway IP configuration.
	TunnelIps pulumi.StringArrayInput `pulumi:"tunnelIps"`
}

func (VpnGatewayBgpSettingsInstance1BgpPeeringAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayBgpSettingsInstance1BgpPeeringAddress)(nil)).Elem()
}

func (i VpnGatewayBgpSettingsInstance1BgpPeeringAddressArgs) ToVpnGatewayBgpSettingsInstance1BgpPeeringAddressOutput() VpnGatewayBgpSettingsInstance1BgpPeeringAddressOutput {
	return i.ToVpnGatewayBgpSettingsInstance1BgpPeeringAddressOutputWithContext(context.Background())
}

func (i VpnGatewayBgpSettingsInstance1BgpPeeringAddressArgs) ToVpnGatewayBgpSettingsInstance1BgpPeeringAddressOutputWithContext(ctx context.Context) VpnGatewayBgpSettingsInstance1BgpPeeringAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayBgpSettingsInstance1BgpPeeringAddressOutput)
}

func (i VpnGatewayBgpSettingsInstance1BgpPeeringAddressArgs) ToVpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput() VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput {
	return i.ToVpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutputWithContext(context.Background())
}

func (i VpnGatewayBgpSettingsInstance1BgpPeeringAddressArgs) ToVpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutputWithContext(ctx context.Context) VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayBgpSettingsInstance1BgpPeeringAddressOutput).ToVpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutputWithContext(ctx)
}

// VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrInput is an input type that accepts VpnGatewayBgpSettingsInstance1BgpPeeringAddressArgs, VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtr and VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput values.
// You can construct a concrete instance of `VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrInput` via:
//
//	        VpnGatewayBgpSettingsInstance1BgpPeeringAddressArgs{...}
//
//	or:
//
//	        nil
type VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrInput interface {
	pulumi.Input

	ToVpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput() VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput
	ToVpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutputWithContext(context.Context) VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput
}

type vpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrType VpnGatewayBgpSettingsInstance1BgpPeeringAddressArgs

func VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtr(v *VpnGatewayBgpSettingsInstance1BgpPeeringAddressArgs) VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrInput {
	return (*vpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrType)(v)
}

func (*vpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGatewayBgpSettingsInstance1BgpPeeringAddress)(nil)).Elem()
}

func (i *vpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrType) ToVpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput() VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput {
	return i.ToVpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutputWithContext(context.Background())
}

func (i *vpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrType) ToVpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutputWithContext(ctx context.Context) VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput)
}

type VpnGatewayBgpSettingsInstance1BgpPeeringAddressOutput struct{ *pulumi.OutputState }

func (VpnGatewayBgpSettingsInstance1BgpPeeringAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayBgpSettingsInstance1BgpPeeringAddress)(nil)).Elem()
}

func (o VpnGatewayBgpSettingsInstance1BgpPeeringAddressOutput) ToVpnGatewayBgpSettingsInstance1BgpPeeringAddressOutput() VpnGatewayBgpSettingsInstance1BgpPeeringAddressOutput {
	return o
}

func (o VpnGatewayBgpSettingsInstance1BgpPeeringAddressOutput) ToVpnGatewayBgpSettingsInstance1BgpPeeringAddressOutputWithContext(ctx context.Context) VpnGatewayBgpSettingsInstance1BgpPeeringAddressOutput {
	return o
}

func (o VpnGatewayBgpSettingsInstance1BgpPeeringAddressOutput) ToVpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput() VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput {
	return o.ToVpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutputWithContext(context.Background())
}

func (o VpnGatewayBgpSettingsInstance1BgpPeeringAddressOutput) ToVpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutputWithContext(ctx context.Context) VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpnGatewayBgpSettingsInstance1BgpPeeringAddress) *VpnGatewayBgpSettingsInstance1BgpPeeringAddress {
		return &v
	}).(VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput)
}

// A list of custom BGP peering addresses to assign to this instance.
func (o VpnGatewayBgpSettingsInstance1BgpPeeringAddressOutput) CustomIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnGatewayBgpSettingsInstance1BgpPeeringAddress) []string { return v.CustomIps }).(pulumi.StringArrayOutput)
}

// The list of default BGP peering addresses which belong to the pre-defined VPN Gateway IP configuration.
func (o VpnGatewayBgpSettingsInstance1BgpPeeringAddressOutput) DefaultIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnGatewayBgpSettingsInstance1BgpPeeringAddress) []string { return v.DefaultIps }).(pulumi.StringArrayOutput)
}

// The pre-defined id of VPN Gateway IP Configuration.
func (o VpnGatewayBgpSettingsInstance1BgpPeeringAddressOutput) IpConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayBgpSettingsInstance1BgpPeeringAddress) *string { return v.IpConfigurationId }).(pulumi.StringPtrOutput)
}

// The list of tunnel public IP addresses which belong to the pre-defined VPN Gateway IP configuration.
func (o VpnGatewayBgpSettingsInstance1BgpPeeringAddressOutput) TunnelIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnGatewayBgpSettingsInstance1BgpPeeringAddress) []string { return v.TunnelIps }).(pulumi.StringArrayOutput)
}

type VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput struct{ *pulumi.OutputState }

func (VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGatewayBgpSettingsInstance1BgpPeeringAddress)(nil)).Elem()
}

func (o VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput) ToVpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput() VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput {
	return o
}

func (o VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput) ToVpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutputWithContext(ctx context.Context) VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput {
	return o
}

func (o VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput) Elem() VpnGatewayBgpSettingsInstance1BgpPeeringAddressOutput {
	return o.ApplyT(func(v *VpnGatewayBgpSettingsInstance1BgpPeeringAddress) VpnGatewayBgpSettingsInstance1BgpPeeringAddress {
		if v != nil {
			return *v
		}
		var ret VpnGatewayBgpSettingsInstance1BgpPeeringAddress
		return ret
	}).(VpnGatewayBgpSettingsInstance1BgpPeeringAddressOutput)
}

// A list of custom BGP peering addresses to assign to this instance.
func (o VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput) CustomIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpnGatewayBgpSettingsInstance1BgpPeeringAddress) []string {
		if v == nil {
			return nil
		}
		return v.CustomIps
	}).(pulumi.StringArrayOutput)
}

// The list of default BGP peering addresses which belong to the pre-defined VPN Gateway IP configuration.
func (o VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput) DefaultIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpnGatewayBgpSettingsInstance1BgpPeeringAddress) []string {
		if v == nil {
			return nil
		}
		return v.DefaultIps
	}).(pulumi.StringArrayOutput)
}

// The pre-defined id of VPN Gateway IP Configuration.
func (o VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput) IpConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayBgpSettingsInstance1BgpPeeringAddress) *string {
		if v == nil {
			return nil
		}
		return v.IpConfigurationId
	}).(pulumi.StringPtrOutput)
}

// The list of tunnel public IP addresses which belong to the pre-defined VPN Gateway IP configuration.
func (o VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput) TunnelIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpnGatewayBgpSettingsInstance1BgpPeeringAddress) []string {
		if v == nil {
			return nil
		}
		return v.TunnelIps
	}).(pulumi.StringArrayOutput)
}

type VpnGatewayConnectionRouting struct {
	// The ID of the Route Table associated with this VPN Connection.
	AssociatedRouteTable string `pulumi:"associatedRouteTable"`
	// The resource ID of the Route Map associated with this Routing Configuration for inbound learned routes.
	InboundRouteMapId *string `pulumi:"inboundRouteMapId"`
	// The resource ID of the Route Map associated with this Routing Configuration for outbound advertised routes.
	OutboundRouteMapId *string `pulumi:"outboundRouteMapId"`
	// A `propagatedRouteTable` block as defined below.
	PropagatedRouteTable *VpnGatewayConnectionRoutingPropagatedRouteTable `pulumi:"propagatedRouteTable"`
}

// VpnGatewayConnectionRoutingInput is an input type that accepts VpnGatewayConnectionRoutingArgs and VpnGatewayConnectionRoutingOutput values.
// You can construct a concrete instance of `VpnGatewayConnectionRoutingInput` via:
//
//	VpnGatewayConnectionRoutingArgs{...}
type VpnGatewayConnectionRoutingInput interface {
	pulumi.Input

	ToVpnGatewayConnectionRoutingOutput() VpnGatewayConnectionRoutingOutput
	ToVpnGatewayConnectionRoutingOutputWithContext(context.Context) VpnGatewayConnectionRoutingOutput
}

type VpnGatewayConnectionRoutingArgs struct {
	// The ID of the Route Table associated with this VPN Connection.
	AssociatedRouteTable pulumi.StringInput `pulumi:"associatedRouteTable"`
	// The resource ID of the Route Map associated with this Routing Configuration for inbound learned routes.
	InboundRouteMapId pulumi.StringPtrInput `pulumi:"inboundRouteMapId"`
	// The resource ID of the Route Map associated with this Routing Configuration for outbound advertised routes.
	OutboundRouteMapId pulumi.StringPtrInput `pulumi:"outboundRouteMapId"`
	// A `propagatedRouteTable` block as defined below.
	PropagatedRouteTable VpnGatewayConnectionRoutingPropagatedRouteTablePtrInput `pulumi:"propagatedRouteTable"`
}

func (VpnGatewayConnectionRoutingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayConnectionRouting)(nil)).Elem()
}

func (i VpnGatewayConnectionRoutingArgs) ToVpnGatewayConnectionRoutingOutput() VpnGatewayConnectionRoutingOutput {
	return i.ToVpnGatewayConnectionRoutingOutputWithContext(context.Background())
}

func (i VpnGatewayConnectionRoutingArgs) ToVpnGatewayConnectionRoutingOutputWithContext(ctx context.Context) VpnGatewayConnectionRoutingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayConnectionRoutingOutput)
}

func (i VpnGatewayConnectionRoutingArgs) ToVpnGatewayConnectionRoutingPtrOutput() VpnGatewayConnectionRoutingPtrOutput {
	return i.ToVpnGatewayConnectionRoutingPtrOutputWithContext(context.Background())
}

func (i VpnGatewayConnectionRoutingArgs) ToVpnGatewayConnectionRoutingPtrOutputWithContext(ctx context.Context) VpnGatewayConnectionRoutingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayConnectionRoutingOutput).ToVpnGatewayConnectionRoutingPtrOutputWithContext(ctx)
}

// VpnGatewayConnectionRoutingPtrInput is an input type that accepts VpnGatewayConnectionRoutingArgs, VpnGatewayConnectionRoutingPtr and VpnGatewayConnectionRoutingPtrOutput values.
// You can construct a concrete instance of `VpnGatewayConnectionRoutingPtrInput` via:
//
//	        VpnGatewayConnectionRoutingArgs{...}
//
//	or:
//
//	        nil
type VpnGatewayConnectionRoutingPtrInput interface {
	pulumi.Input

	ToVpnGatewayConnectionRoutingPtrOutput() VpnGatewayConnectionRoutingPtrOutput
	ToVpnGatewayConnectionRoutingPtrOutputWithContext(context.Context) VpnGatewayConnectionRoutingPtrOutput
}

type vpnGatewayConnectionRoutingPtrType VpnGatewayConnectionRoutingArgs

func VpnGatewayConnectionRoutingPtr(v *VpnGatewayConnectionRoutingArgs) VpnGatewayConnectionRoutingPtrInput {
	return (*vpnGatewayConnectionRoutingPtrType)(v)
}

func (*vpnGatewayConnectionRoutingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGatewayConnectionRouting)(nil)).Elem()
}

func (i *vpnGatewayConnectionRoutingPtrType) ToVpnGatewayConnectionRoutingPtrOutput() VpnGatewayConnectionRoutingPtrOutput {
	return i.ToVpnGatewayConnectionRoutingPtrOutputWithContext(context.Background())
}

func (i *vpnGatewayConnectionRoutingPtrType) ToVpnGatewayConnectionRoutingPtrOutputWithContext(ctx context.Context) VpnGatewayConnectionRoutingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayConnectionRoutingPtrOutput)
}

type VpnGatewayConnectionRoutingOutput struct{ *pulumi.OutputState }

func (VpnGatewayConnectionRoutingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayConnectionRouting)(nil)).Elem()
}

func (o VpnGatewayConnectionRoutingOutput) ToVpnGatewayConnectionRoutingOutput() VpnGatewayConnectionRoutingOutput {
	return o
}

func (o VpnGatewayConnectionRoutingOutput) ToVpnGatewayConnectionRoutingOutputWithContext(ctx context.Context) VpnGatewayConnectionRoutingOutput {
	return o
}

func (o VpnGatewayConnectionRoutingOutput) ToVpnGatewayConnectionRoutingPtrOutput() VpnGatewayConnectionRoutingPtrOutput {
	return o.ToVpnGatewayConnectionRoutingPtrOutputWithContext(context.Background())
}

func (o VpnGatewayConnectionRoutingOutput) ToVpnGatewayConnectionRoutingPtrOutputWithContext(ctx context.Context) VpnGatewayConnectionRoutingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpnGatewayConnectionRouting) *VpnGatewayConnectionRouting {
		return &v
	}).(VpnGatewayConnectionRoutingPtrOutput)
}

// The ID of the Route Table associated with this VPN Connection.
func (o VpnGatewayConnectionRoutingOutput) AssociatedRouteTable() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayConnectionRouting) string { return v.AssociatedRouteTable }).(pulumi.StringOutput)
}

// The resource ID of the Route Map associated with this Routing Configuration for inbound learned routes.
func (o VpnGatewayConnectionRoutingOutput) InboundRouteMapId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayConnectionRouting) *string { return v.InboundRouteMapId }).(pulumi.StringPtrOutput)
}

// The resource ID of the Route Map associated with this Routing Configuration for outbound advertised routes.
func (o VpnGatewayConnectionRoutingOutput) OutboundRouteMapId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayConnectionRouting) *string { return v.OutboundRouteMapId }).(pulumi.StringPtrOutput)
}

// A `propagatedRouteTable` block as defined below.
func (o VpnGatewayConnectionRoutingOutput) PropagatedRouteTable() VpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput {
	return o.ApplyT(func(v VpnGatewayConnectionRouting) *VpnGatewayConnectionRoutingPropagatedRouteTable {
		return v.PropagatedRouteTable
	}).(VpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput)
}

type VpnGatewayConnectionRoutingPtrOutput struct{ *pulumi.OutputState }

func (VpnGatewayConnectionRoutingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGatewayConnectionRouting)(nil)).Elem()
}

func (o VpnGatewayConnectionRoutingPtrOutput) ToVpnGatewayConnectionRoutingPtrOutput() VpnGatewayConnectionRoutingPtrOutput {
	return o
}

func (o VpnGatewayConnectionRoutingPtrOutput) ToVpnGatewayConnectionRoutingPtrOutputWithContext(ctx context.Context) VpnGatewayConnectionRoutingPtrOutput {
	return o
}

func (o VpnGatewayConnectionRoutingPtrOutput) Elem() VpnGatewayConnectionRoutingOutput {
	return o.ApplyT(func(v *VpnGatewayConnectionRouting) VpnGatewayConnectionRouting {
		if v != nil {
			return *v
		}
		var ret VpnGatewayConnectionRouting
		return ret
	}).(VpnGatewayConnectionRoutingOutput)
}

// The ID of the Route Table associated with this VPN Connection.
func (o VpnGatewayConnectionRoutingPtrOutput) AssociatedRouteTable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayConnectionRouting) *string {
		if v == nil {
			return nil
		}
		return &v.AssociatedRouteTable
	}).(pulumi.StringPtrOutput)
}

// The resource ID of the Route Map associated with this Routing Configuration for inbound learned routes.
func (o VpnGatewayConnectionRoutingPtrOutput) InboundRouteMapId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayConnectionRouting) *string {
		if v == nil {
			return nil
		}
		return v.InboundRouteMapId
	}).(pulumi.StringPtrOutput)
}

// The resource ID of the Route Map associated with this Routing Configuration for outbound advertised routes.
func (o VpnGatewayConnectionRoutingPtrOutput) OutboundRouteMapId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnGatewayConnectionRouting) *string {
		if v == nil {
			return nil
		}
		return v.OutboundRouteMapId
	}).(pulumi.StringPtrOutput)
}

// A `propagatedRouteTable` block as defined below.
func (o VpnGatewayConnectionRoutingPtrOutput) PropagatedRouteTable() VpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput {
	return o.ApplyT(func(v *VpnGatewayConnectionRouting) *VpnGatewayConnectionRoutingPropagatedRouteTable {
		if v == nil {
			return nil
		}
		return v.PropagatedRouteTable
	}).(VpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput)
}

type VpnGatewayConnectionRoutingPropagatedRouteTable struct {
	// A list of labels to assign to this route table.
	Labels []string `pulumi:"labels"`
	// A list of Route Table IDs to associated with this VPN Gateway Connection.
	RouteTableIds []string `pulumi:"routeTableIds"`
}

// VpnGatewayConnectionRoutingPropagatedRouteTableInput is an input type that accepts VpnGatewayConnectionRoutingPropagatedRouteTableArgs and VpnGatewayConnectionRoutingPropagatedRouteTableOutput values.
// You can construct a concrete instance of `VpnGatewayConnectionRoutingPropagatedRouteTableInput` via:
//
//	VpnGatewayConnectionRoutingPropagatedRouteTableArgs{...}
type VpnGatewayConnectionRoutingPropagatedRouteTableInput interface {
	pulumi.Input

	ToVpnGatewayConnectionRoutingPropagatedRouteTableOutput() VpnGatewayConnectionRoutingPropagatedRouteTableOutput
	ToVpnGatewayConnectionRoutingPropagatedRouteTableOutputWithContext(context.Context) VpnGatewayConnectionRoutingPropagatedRouteTableOutput
}

type VpnGatewayConnectionRoutingPropagatedRouteTableArgs struct {
	// A list of labels to assign to this route table.
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// A list of Route Table IDs to associated with this VPN Gateway Connection.
	RouteTableIds pulumi.StringArrayInput `pulumi:"routeTableIds"`
}

func (VpnGatewayConnectionRoutingPropagatedRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayConnectionRoutingPropagatedRouteTable)(nil)).Elem()
}

func (i VpnGatewayConnectionRoutingPropagatedRouteTableArgs) ToVpnGatewayConnectionRoutingPropagatedRouteTableOutput() VpnGatewayConnectionRoutingPropagatedRouteTableOutput {
	return i.ToVpnGatewayConnectionRoutingPropagatedRouteTableOutputWithContext(context.Background())
}

func (i VpnGatewayConnectionRoutingPropagatedRouteTableArgs) ToVpnGatewayConnectionRoutingPropagatedRouteTableOutputWithContext(ctx context.Context) VpnGatewayConnectionRoutingPropagatedRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayConnectionRoutingPropagatedRouteTableOutput)
}

func (i VpnGatewayConnectionRoutingPropagatedRouteTableArgs) ToVpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput() VpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput {
	return i.ToVpnGatewayConnectionRoutingPropagatedRouteTablePtrOutputWithContext(context.Background())
}

func (i VpnGatewayConnectionRoutingPropagatedRouteTableArgs) ToVpnGatewayConnectionRoutingPropagatedRouteTablePtrOutputWithContext(ctx context.Context) VpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayConnectionRoutingPropagatedRouteTableOutput).ToVpnGatewayConnectionRoutingPropagatedRouteTablePtrOutputWithContext(ctx)
}

// VpnGatewayConnectionRoutingPropagatedRouteTablePtrInput is an input type that accepts VpnGatewayConnectionRoutingPropagatedRouteTableArgs, VpnGatewayConnectionRoutingPropagatedRouteTablePtr and VpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput values.
// You can construct a concrete instance of `VpnGatewayConnectionRoutingPropagatedRouteTablePtrInput` via:
//
//	        VpnGatewayConnectionRoutingPropagatedRouteTableArgs{...}
//
//	or:
//
//	        nil
type VpnGatewayConnectionRoutingPropagatedRouteTablePtrInput interface {
	pulumi.Input

	ToVpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput() VpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput
	ToVpnGatewayConnectionRoutingPropagatedRouteTablePtrOutputWithContext(context.Context) VpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput
}

type vpnGatewayConnectionRoutingPropagatedRouteTablePtrType VpnGatewayConnectionRoutingPropagatedRouteTableArgs

func VpnGatewayConnectionRoutingPropagatedRouteTablePtr(v *VpnGatewayConnectionRoutingPropagatedRouteTableArgs) VpnGatewayConnectionRoutingPropagatedRouteTablePtrInput {
	return (*vpnGatewayConnectionRoutingPropagatedRouteTablePtrType)(v)
}

func (*vpnGatewayConnectionRoutingPropagatedRouteTablePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGatewayConnectionRoutingPropagatedRouteTable)(nil)).Elem()
}

func (i *vpnGatewayConnectionRoutingPropagatedRouteTablePtrType) ToVpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput() VpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput {
	return i.ToVpnGatewayConnectionRoutingPropagatedRouteTablePtrOutputWithContext(context.Background())
}

func (i *vpnGatewayConnectionRoutingPropagatedRouteTablePtrType) ToVpnGatewayConnectionRoutingPropagatedRouteTablePtrOutputWithContext(ctx context.Context) VpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput)
}

type VpnGatewayConnectionRoutingPropagatedRouteTableOutput struct{ *pulumi.OutputState }

func (VpnGatewayConnectionRoutingPropagatedRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayConnectionRoutingPropagatedRouteTable)(nil)).Elem()
}

func (o VpnGatewayConnectionRoutingPropagatedRouteTableOutput) ToVpnGatewayConnectionRoutingPropagatedRouteTableOutput() VpnGatewayConnectionRoutingPropagatedRouteTableOutput {
	return o
}

func (o VpnGatewayConnectionRoutingPropagatedRouteTableOutput) ToVpnGatewayConnectionRoutingPropagatedRouteTableOutputWithContext(ctx context.Context) VpnGatewayConnectionRoutingPropagatedRouteTableOutput {
	return o
}

func (o VpnGatewayConnectionRoutingPropagatedRouteTableOutput) ToVpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput() VpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput {
	return o.ToVpnGatewayConnectionRoutingPropagatedRouteTablePtrOutputWithContext(context.Background())
}

func (o VpnGatewayConnectionRoutingPropagatedRouteTableOutput) ToVpnGatewayConnectionRoutingPropagatedRouteTablePtrOutputWithContext(ctx context.Context) VpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpnGatewayConnectionRoutingPropagatedRouteTable) *VpnGatewayConnectionRoutingPropagatedRouteTable {
		return &v
	}).(VpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput)
}

// A list of labels to assign to this route table.
func (o VpnGatewayConnectionRoutingPropagatedRouteTableOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnGatewayConnectionRoutingPropagatedRouteTable) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// A list of Route Table IDs to associated with this VPN Gateway Connection.
func (o VpnGatewayConnectionRoutingPropagatedRouteTableOutput) RouteTableIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnGatewayConnectionRoutingPropagatedRouteTable) []string { return v.RouteTableIds }).(pulumi.StringArrayOutput)
}

type VpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput struct{ *pulumi.OutputState }

func (VpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGatewayConnectionRoutingPropagatedRouteTable)(nil)).Elem()
}

func (o VpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput) ToVpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput() VpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput {
	return o
}

func (o VpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput) ToVpnGatewayConnectionRoutingPropagatedRouteTablePtrOutputWithContext(ctx context.Context) VpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput {
	return o
}

func (o VpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput) Elem() VpnGatewayConnectionRoutingPropagatedRouteTableOutput {
	return o.ApplyT(func(v *VpnGatewayConnectionRoutingPropagatedRouteTable) VpnGatewayConnectionRoutingPropagatedRouteTable {
		if v != nil {
			return *v
		}
		var ret VpnGatewayConnectionRoutingPropagatedRouteTable
		return ret
	}).(VpnGatewayConnectionRoutingPropagatedRouteTableOutput)
}

// A list of labels to assign to this route table.
func (o VpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpnGatewayConnectionRoutingPropagatedRouteTable) []string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringArrayOutput)
}

// A list of Route Table IDs to associated with this VPN Gateway Connection.
func (o VpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput) RouteTableIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpnGatewayConnectionRoutingPropagatedRouteTable) []string {
		if v == nil {
			return nil
		}
		return v.RouteTableIds
	}).(pulumi.StringArrayOutput)
}

type VpnGatewayConnectionTrafficSelectorPolicy struct {
	// A list of local address spaces in CIDR format for this VPN Gateway Connection.
	LocalAddressRanges []string `pulumi:"localAddressRanges"`
	// A list of remote address spaces in CIDR format for this VPN Gateway Connection.
	RemoteAddressRanges []string `pulumi:"remoteAddressRanges"`
}

// VpnGatewayConnectionTrafficSelectorPolicyInput is an input type that accepts VpnGatewayConnectionTrafficSelectorPolicyArgs and VpnGatewayConnectionTrafficSelectorPolicyOutput values.
// You can construct a concrete instance of `VpnGatewayConnectionTrafficSelectorPolicyInput` via:
//
//	VpnGatewayConnectionTrafficSelectorPolicyArgs{...}
type VpnGatewayConnectionTrafficSelectorPolicyInput interface {
	pulumi.Input

	ToVpnGatewayConnectionTrafficSelectorPolicyOutput() VpnGatewayConnectionTrafficSelectorPolicyOutput
	ToVpnGatewayConnectionTrafficSelectorPolicyOutputWithContext(context.Context) VpnGatewayConnectionTrafficSelectorPolicyOutput
}

type VpnGatewayConnectionTrafficSelectorPolicyArgs struct {
	// A list of local address spaces in CIDR format for this VPN Gateway Connection.
	LocalAddressRanges pulumi.StringArrayInput `pulumi:"localAddressRanges"`
	// A list of remote address spaces in CIDR format for this VPN Gateway Connection.
	RemoteAddressRanges pulumi.StringArrayInput `pulumi:"remoteAddressRanges"`
}

func (VpnGatewayConnectionTrafficSelectorPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayConnectionTrafficSelectorPolicy)(nil)).Elem()
}

func (i VpnGatewayConnectionTrafficSelectorPolicyArgs) ToVpnGatewayConnectionTrafficSelectorPolicyOutput() VpnGatewayConnectionTrafficSelectorPolicyOutput {
	return i.ToVpnGatewayConnectionTrafficSelectorPolicyOutputWithContext(context.Background())
}

func (i VpnGatewayConnectionTrafficSelectorPolicyArgs) ToVpnGatewayConnectionTrafficSelectorPolicyOutputWithContext(ctx context.Context) VpnGatewayConnectionTrafficSelectorPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayConnectionTrafficSelectorPolicyOutput)
}

// VpnGatewayConnectionTrafficSelectorPolicyArrayInput is an input type that accepts VpnGatewayConnectionTrafficSelectorPolicyArray and VpnGatewayConnectionTrafficSelectorPolicyArrayOutput values.
// You can construct a concrete instance of `VpnGatewayConnectionTrafficSelectorPolicyArrayInput` via:
//
//	VpnGatewayConnectionTrafficSelectorPolicyArray{ VpnGatewayConnectionTrafficSelectorPolicyArgs{...} }
type VpnGatewayConnectionTrafficSelectorPolicyArrayInput interface {
	pulumi.Input

	ToVpnGatewayConnectionTrafficSelectorPolicyArrayOutput() VpnGatewayConnectionTrafficSelectorPolicyArrayOutput
	ToVpnGatewayConnectionTrafficSelectorPolicyArrayOutputWithContext(context.Context) VpnGatewayConnectionTrafficSelectorPolicyArrayOutput
}

type VpnGatewayConnectionTrafficSelectorPolicyArray []VpnGatewayConnectionTrafficSelectorPolicyInput

func (VpnGatewayConnectionTrafficSelectorPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnGatewayConnectionTrafficSelectorPolicy)(nil)).Elem()
}

func (i VpnGatewayConnectionTrafficSelectorPolicyArray) ToVpnGatewayConnectionTrafficSelectorPolicyArrayOutput() VpnGatewayConnectionTrafficSelectorPolicyArrayOutput {
	return i.ToVpnGatewayConnectionTrafficSelectorPolicyArrayOutputWithContext(context.Background())
}

func (i VpnGatewayConnectionTrafficSelectorPolicyArray) ToVpnGatewayConnectionTrafficSelectorPolicyArrayOutputWithContext(ctx context.Context) VpnGatewayConnectionTrafficSelectorPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayConnectionTrafficSelectorPolicyArrayOutput)
}

type VpnGatewayConnectionTrafficSelectorPolicyOutput struct{ *pulumi.OutputState }

func (VpnGatewayConnectionTrafficSelectorPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayConnectionTrafficSelectorPolicy)(nil)).Elem()
}

func (o VpnGatewayConnectionTrafficSelectorPolicyOutput) ToVpnGatewayConnectionTrafficSelectorPolicyOutput() VpnGatewayConnectionTrafficSelectorPolicyOutput {
	return o
}

func (o VpnGatewayConnectionTrafficSelectorPolicyOutput) ToVpnGatewayConnectionTrafficSelectorPolicyOutputWithContext(ctx context.Context) VpnGatewayConnectionTrafficSelectorPolicyOutput {
	return o
}

// A list of local address spaces in CIDR format for this VPN Gateway Connection.
func (o VpnGatewayConnectionTrafficSelectorPolicyOutput) LocalAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnGatewayConnectionTrafficSelectorPolicy) []string { return v.LocalAddressRanges }).(pulumi.StringArrayOutput)
}

// A list of remote address spaces in CIDR format for this VPN Gateway Connection.
func (o VpnGatewayConnectionTrafficSelectorPolicyOutput) RemoteAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnGatewayConnectionTrafficSelectorPolicy) []string { return v.RemoteAddressRanges }).(pulumi.StringArrayOutput)
}

type VpnGatewayConnectionTrafficSelectorPolicyArrayOutput struct{ *pulumi.OutputState }

func (VpnGatewayConnectionTrafficSelectorPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnGatewayConnectionTrafficSelectorPolicy)(nil)).Elem()
}

func (o VpnGatewayConnectionTrafficSelectorPolicyArrayOutput) ToVpnGatewayConnectionTrafficSelectorPolicyArrayOutput() VpnGatewayConnectionTrafficSelectorPolicyArrayOutput {
	return o
}

func (o VpnGatewayConnectionTrafficSelectorPolicyArrayOutput) ToVpnGatewayConnectionTrafficSelectorPolicyArrayOutputWithContext(ctx context.Context) VpnGatewayConnectionTrafficSelectorPolicyArrayOutput {
	return o
}

func (o VpnGatewayConnectionTrafficSelectorPolicyArrayOutput) Index(i pulumi.IntInput) VpnGatewayConnectionTrafficSelectorPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnGatewayConnectionTrafficSelectorPolicy {
		return vs[0].([]VpnGatewayConnectionTrafficSelectorPolicy)[vs[1].(int)]
	}).(VpnGatewayConnectionTrafficSelectorPolicyOutput)
}

type VpnGatewayConnectionVpnLink struct {
	// The expected connection bandwidth in MBPS. Defaults to `10`.
	BandwidthMbps *int `pulumi:"bandwidthMbps"`
	// Should the BGP be enabled? Defaults to `false`. Changing this forces a new VPN Gateway Connection to be created.
	BgpEnabled *bool `pulumi:"bgpEnabled"`
	// The connection mode of this VPN Link. Possible values are `Default`, `InitiatorOnly` and `ResponderOnly`. Defaults to `Default`.
	ConnectionMode *string `pulumi:"connectionMode"`
	// One or more `customBgpAddress` blocks as defined below.
	CustomBgpAddresses []VpnGatewayConnectionVpnLinkCustomBgpAddress `pulumi:"customBgpAddresses"`
	// A list of the egress NAT Rule Ids.
	EgressNatRuleIds []string `pulumi:"egressNatRuleIds"`
	// A list of the ingress NAT Rule Ids.
	IngressNatRuleIds []string `pulumi:"ingressNatRuleIds"`
	// One or more `ipsecPolicy` blocks as defined above.
	IpsecPolicies []VpnGatewayConnectionVpnLinkIpsecPolicy `pulumi:"ipsecPolicies"`
	// Whether to use local Azure IP to initiate connection? Defaults to `false`.
	LocalAzureIpAddressEnabled *bool `pulumi:"localAzureIpAddressEnabled"`
	// The name which should be used for this VPN Link Connection.
	Name string `pulumi:"name"`
	// Whether to enable policy-based traffic selectors? Defaults to `false`.
	PolicyBasedTrafficSelectorEnabled *bool `pulumi:"policyBasedTrafficSelectorEnabled"`
	// The protocol used for this VPN Link Connection. Possible values are `IKEv1` and `IKEv2`. Defaults to `IKEv2`.
	Protocol *string `pulumi:"protocol"`
	// Should the rate limit be enabled? Defaults to `false`.
	RatelimitEnabled *bool `pulumi:"ratelimitEnabled"`
	// Routing weight for this VPN Link Connection. Defaults to `0`.
	RouteWeight *int `pulumi:"routeWeight"`
	// SharedKey for this VPN Link Connection.
	SharedKey *string `pulumi:"sharedKey"`
	// The ID of the connected VPN Site Link. Changing this forces a new VPN Gateway Connection to be created.
	VpnSiteLinkId string `pulumi:"vpnSiteLinkId"`
}

// VpnGatewayConnectionVpnLinkInput is an input type that accepts VpnGatewayConnectionVpnLinkArgs and VpnGatewayConnectionVpnLinkOutput values.
// You can construct a concrete instance of `VpnGatewayConnectionVpnLinkInput` via:
//
//	VpnGatewayConnectionVpnLinkArgs{...}
type VpnGatewayConnectionVpnLinkInput interface {
	pulumi.Input

	ToVpnGatewayConnectionVpnLinkOutput() VpnGatewayConnectionVpnLinkOutput
	ToVpnGatewayConnectionVpnLinkOutputWithContext(context.Context) VpnGatewayConnectionVpnLinkOutput
}

type VpnGatewayConnectionVpnLinkArgs struct {
	// The expected connection bandwidth in MBPS. Defaults to `10`.
	BandwidthMbps pulumi.IntPtrInput `pulumi:"bandwidthMbps"`
	// Should the BGP be enabled? Defaults to `false`. Changing this forces a new VPN Gateway Connection to be created.
	BgpEnabled pulumi.BoolPtrInput `pulumi:"bgpEnabled"`
	// The connection mode of this VPN Link. Possible values are `Default`, `InitiatorOnly` and `ResponderOnly`. Defaults to `Default`.
	ConnectionMode pulumi.StringPtrInput `pulumi:"connectionMode"`
	// One or more `customBgpAddress` blocks as defined below.
	CustomBgpAddresses VpnGatewayConnectionVpnLinkCustomBgpAddressArrayInput `pulumi:"customBgpAddresses"`
	// A list of the egress NAT Rule Ids.
	EgressNatRuleIds pulumi.StringArrayInput `pulumi:"egressNatRuleIds"`
	// A list of the ingress NAT Rule Ids.
	IngressNatRuleIds pulumi.StringArrayInput `pulumi:"ingressNatRuleIds"`
	// One or more `ipsecPolicy` blocks as defined above.
	IpsecPolicies VpnGatewayConnectionVpnLinkIpsecPolicyArrayInput `pulumi:"ipsecPolicies"`
	// Whether to use local Azure IP to initiate connection? Defaults to `false`.
	LocalAzureIpAddressEnabled pulumi.BoolPtrInput `pulumi:"localAzureIpAddressEnabled"`
	// The name which should be used for this VPN Link Connection.
	Name pulumi.StringInput `pulumi:"name"`
	// Whether to enable policy-based traffic selectors? Defaults to `false`.
	PolicyBasedTrafficSelectorEnabled pulumi.BoolPtrInput `pulumi:"policyBasedTrafficSelectorEnabled"`
	// The protocol used for this VPN Link Connection. Possible values are `IKEv1` and `IKEv2`. Defaults to `IKEv2`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Should the rate limit be enabled? Defaults to `false`.
	RatelimitEnabled pulumi.BoolPtrInput `pulumi:"ratelimitEnabled"`
	// Routing weight for this VPN Link Connection. Defaults to `0`.
	RouteWeight pulumi.IntPtrInput `pulumi:"routeWeight"`
	// SharedKey for this VPN Link Connection.
	SharedKey pulumi.StringPtrInput `pulumi:"sharedKey"`
	// The ID of the connected VPN Site Link. Changing this forces a new VPN Gateway Connection to be created.
	VpnSiteLinkId pulumi.StringInput `pulumi:"vpnSiteLinkId"`
}

func (VpnGatewayConnectionVpnLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayConnectionVpnLink)(nil)).Elem()
}

func (i VpnGatewayConnectionVpnLinkArgs) ToVpnGatewayConnectionVpnLinkOutput() VpnGatewayConnectionVpnLinkOutput {
	return i.ToVpnGatewayConnectionVpnLinkOutputWithContext(context.Background())
}

func (i VpnGatewayConnectionVpnLinkArgs) ToVpnGatewayConnectionVpnLinkOutputWithContext(ctx context.Context) VpnGatewayConnectionVpnLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayConnectionVpnLinkOutput)
}

// VpnGatewayConnectionVpnLinkArrayInput is an input type that accepts VpnGatewayConnectionVpnLinkArray and VpnGatewayConnectionVpnLinkArrayOutput values.
// You can construct a concrete instance of `VpnGatewayConnectionVpnLinkArrayInput` via:
//
//	VpnGatewayConnectionVpnLinkArray{ VpnGatewayConnectionVpnLinkArgs{...} }
type VpnGatewayConnectionVpnLinkArrayInput interface {
	pulumi.Input

	ToVpnGatewayConnectionVpnLinkArrayOutput() VpnGatewayConnectionVpnLinkArrayOutput
	ToVpnGatewayConnectionVpnLinkArrayOutputWithContext(context.Context) VpnGatewayConnectionVpnLinkArrayOutput
}

type VpnGatewayConnectionVpnLinkArray []VpnGatewayConnectionVpnLinkInput

func (VpnGatewayConnectionVpnLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnGatewayConnectionVpnLink)(nil)).Elem()
}

func (i VpnGatewayConnectionVpnLinkArray) ToVpnGatewayConnectionVpnLinkArrayOutput() VpnGatewayConnectionVpnLinkArrayOutput {
	return i.ToVpnGatewayConnectionVpnLinkArrayOutputWithContext(context.Background())
}

func (i VpnGatewayConnectionVpnLinkArray) ToVpnGatewayConnectionVpnLinkArrayOutputWithContext(ctx context.Context) VpnGatewayConnectionVpnLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayConnectionVpnLinkArrayOutput)
}

type VpnGatewayConnectionVpnLinkOutput struct{ *pulumi.OutputState }

func (VpnGatewayConnectionVpnLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayConnectionVpnLink)(nil)).Elem()
}

func (o VpnGatewayConnectionVpnLinkOutput) ToVpnGatewayConnectionVpnLinkOutput() VpnGatewayConnectionVpnLinkOutput {
	return o
}

func (o VpnGatewayConnectionVpnLinkOutput) ToVpnGatewayConnectionVpnLinkOutputWithContext(ctx context.Context) VpnGatewayConnectionVpnLinkOutput {
	return o
}

// The expected connection bandwidth in MBPS. Defaults to `10`.
func (o VpnGatewayConnectionVpnLinkOutput) BandwidthMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnGatewayConnectionVpnLink) *int { return v.BandwidthMbps }).(pulumi.IntPtrOutput)
}

// Should the BGP be enabled? Defaults to `false`. Changing this forces a new VPN Gateway Connection to be created.
func (o VpnGatewayConnectionVpnLinkOutput) BgpEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnGatewayConnectionVpnLink) *bool { return v.BgpEnabled }).(pulumi.BoolPtrOutput)
}

// The connection mode of this VPN Link. Possible values are `Default`, `InitiatorOnly` and `ResponderOnly`. Defaults to `Default`.
func (o VpnGatewayConnectionVpnLinkOutput) ConnectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayConnectionVpnLink) *string { return v.ConnectionMode }).(pulumi.StringPtrOutput)
}

// One or more `customBgpAddress` blocks as defined below.
func (o VpnGatewayConnectionVpnLinkOutput) CustomBgpAddresses() VpnGatewayConnectionVpnLinkCustomBgpAddressArrayOutput {
	return o.ApplyT(func(v VpnGatewayConnectionVpnLink) []VpnGatewayConnectionVpnLinkCustomBgpAddress {
		return v.CustomBgpAddresses
	}).(VpnGatewayConnectionVpnLinkCustomBgpAddressArrayOutput)
}

// A list of the egress NAT Rule Ids.
func (o VpnGatewayConnectionVpnLinkOutput) EgressNatRuleIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnGatewayConnectionVpnLink) []string { return v.EgressNatRuleIds }).(pulumi.StringArrayOutput)
}

// A list of the ingress NAT Rule Ids.
func (o VpnGatewayConnectionVpnLinkOutput) IngressNatRuleIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnGatewayConnectionVpnLink) []string { return v.IngressNatRuleIds }).(pulumi.StringArrayOutput)
}

// One or more `ipsecPolicy` blocks as defined above.
func (o VpnGatewayConnectionVpnLinkOutput) IpsecPolicies() VpnGatewayConnectionVpnLinkIpsecPolicyArrayOutput {
	return o.ApplyT(func(v VpnGatewayConnectionVpnLink) []VpnGatewayConnectionVpnLinkIpsecPolicy { return v.IpsecPolicies }).(VpnGatewayConnectionVpnLinkIpsecPolicyArrayOutput)
}

// Whether to use local Azure IP to initiate connection? Defaults to `false`.
func (o VpnGatewayConnectionVpnLinkOutput) LocalAzureIpAddressEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnGatewayConnectionVpnLink) *bool { return v.LocalAzureIpAddressEnabled }).(pulumi.BoolPtrOutput)
}

// The name which should be used for this VPN Link Connection.
func (o VpnGatewayConnectionVpnLinkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayConnectionVpnLink) string { return v.Name }).(pulumi.StringOutput)
}

// Whether to enable policy-based traffic selectors? Defaults to `false`.
func (o VpnGatewayConnectionVpnLinkOutput) PolicyBasedTrafficSelectorEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnGatewayConnectionVpnLink) *bool { return v.PolicyBasedTrafficSelectorEnabled }).(pulumi.BoolPtrOutput)
}

// The protocol used for this VPN Link Connection. Possible values are `IKEv1` and `IKEv2`. Defaults to `IKEv2`.
func (o VpnGatewayConnectionVpnLinkOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayConnectionVpnLink) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Should the rate limit be enabled? Defaults to `false`.
func (o VpnGatewayConnectionVpnLinkOutput) RatelimitEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnGatewayConnectionVpnLink) *bool { return v.RatelimitEnabled }).(pulumi.BoolPtrOutput)
}

// Routing weight for this VPN Link Connection. Defaults to `0`.
func (o VpnGatewayConnectionVpnLinkOutput) RouteWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnGatewayConnectionVpnLink) *int { return v.RouteWeight }).(pulumi.IntPtrOutput)
}

// SharedKey for this VPN Link Connection.
func (o VpnGatewayConnectionVpnLinkOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayConnectionVpnLink) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// The ID of the connected VPN Site Link. Changing this forces a new VPN Gateway Connection to be created.
func (o VpnGatewayConnectionVpnLinkOutput) VpnSiteLinkId() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayConnectionVpnLink) string { return v.VpnSiteLinkId }).(pulumi.StringOutput)
}

type VpnGatewayConnectionVpnLinkArrayOutput struct{ *pulumi.OutputState }

func (VpnGatewayConnectionVpnLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnGatewayConnectionVpnLink)(nil)).Elem()
}

func (o VpnGatewayConnectionVpnLinkArrayOutput) ToVpnGatewayConnectionVpnLinkArrayOutput() VpnGatewayConnectionVpnLinkArrayOutput {
	return o
}

func (o VpnGatewayConnectionVpnLinkArrayOutput) ToVpnGatewayConnectionVpnLinkArrayOutputWithContext(ctx context.Context) VpnGatewayConnectionVpnLinkArrayOutput {
	return o
}

func (o VpnGatewayConnectionVpnLinkArrayOutput) Index(i pulumi.IntInput) VpnGatewayConnectionVpnLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnGatewayConnectionVpnLink {
		return vs[0].([]VpnGatewayConnectionVpnLink)[vs[1].(int)]
	}).(VpnGatewayConnectionVpnLinkOutput)
}

type VpnGatewayConnectionVpnLinkCustomBgpAddress struct {
	// The custom bgp ip address which belongs to the IP Configuration.
	IpAddress string `pulumi:"ipAddress"`
	// The ID of the IP Configuration which belongs to the VPN Gateway.
	IpConfigurationId string `pulumi:"ipConfigurationId"`
}

// VpnGatewayConnectionVpnLinkCustomBgpAddressInput is an input type that accepts VpnGatewayConnectionVpnLinkCustomBgpAddressArgs and VpnGatewayConnectionVpnLinkCustomBgpAddressOutput values.
// You can construct a concrete instance of `VpnGatewayConnectionVpnLinkCustomBgpAddressInput` via:
//
//	VpnGatewayConnectionVpnLinkCustomBgpAddressArgs{...}
type VpnGatewayConnectionVpnLinkCustomBgpAddressInput interface {
	pulumi.Input

	ToVpnGatewayConnectionVpnLinkCustomBgpAddressOutput() VpnGatewayConnectionVpnLinkCustomBgpAddressOutput
	ToVpnGatewayConnectionVpnLinkCustomBgpAddressOutputWithContext(context.Context) VpnGatewayConnectionVpnLinkCustomBgpAddressOutput
}

type VpnGatewayConnectionVpnLinkCustomBgpAddressArgs struct {
	// The custom bgp ip address which belongs to the IP Configuration.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The ID of the IP Configuration which belongs to the VPN Gateway.
	IpConfigurationId pulumi.StringInput `pulumi:"ipConfigurationId"`
}

func (VpnGatewayConnectionVpnLinkCustomBgpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayConnectionVpnLinkCustomBgpAddress)(nil)).Elem()
}

func (i VpnGatewayConnectionVpnLinkCustomBgpAddressArgs) ToVpnGatewayConnectionVpnLinkCustomBgpAddressOutput() VpnGatewayConnectionVpnLinkCustomBgpAddressOutput {
	return i.ToVpnGatewayConnectionVpnLinkCustomBgpAddressOutputWithContext(context.Background())
}

func (i VpnGatewayConnectionVpnLinkCustomBgpAddressArgs) ToVpnGatewayConnectionVpnLinkCustomBgpAddressOutputWithContext(ctx context.Context) VpnGatewayConnectionVpnLinkCustomBgpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayConnectionVpnLinkCustomBgpAddressOutput)
}

// VpnGatewayConnectionVpnLinkCustomBgpAddressArrayInput is an input type that accepts VpnGatewayConnectionVpnLinkCustomBgpAddressArray and VpnGatewayConnectionVpnLinkCustomBgpAddressArrayOutput values.
// You can construct a concrete instance of `VpnGatewayConnectionVpnLinkCustomBgpAddressArrayInput` via:
//
//	VpnGatewayConnectionVpnLinkCustomBgpAddressArray{ VpnGatewayConnectionVpnLinkCustomBgpAddressArgs{...} }
type VpnGatewayConnectionVpnLinkCustomBgpAddressArrayInput interface {
	pulumi.Input

	ToVpnGatewayConnectionVpnLinkCustomBgpAddressArrayOutput() VpnGatewayConnectionVpnLinkCustomBgpAddressArrayOutput
	ToVpnGatewayConnectionVpnLinkCustomBgpAddressArrayOutputWithContext(context.Context) VpnGatewayConnectionVpnLinkCustomBgpAddressArrayOutput
}

type VpnGatewayConnectionVpnLinkCustomBgpAddressArray []VpnGatewayConnectionVpnLinkCustomBgpAddressInput

func (VpnGatewayConnectionVpnLinkCustomBgpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnGatewayConnectionVpnLinkCustomBgpAddress)(nil)).Elem()
}

func (i VpnGatewayConnectionVpnLinkCustomBgpAddressArray) ToVpnGatewayConnectionVpnLinkCustomBgpAddressArrayOutput() VpnGatewayConnectionVpnLinkCustomBgpAddressArrayOutput {
	return i.ToVpnGatewayConnectionVpnLinkCustomBgpAddressArrayOutputWithContext(context.Background())
}

func (i VpnGatewayConnectionVpnLinkCustomBgpAddressArray) ToVpnGatewayConnectionVpnLinkCustomBgpAddressArrayOutputWithContext(ctx context.Context) VpnGatewayConnectionVpnLinkCustomBgpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayConnectionVpnLinkCustomBgpAddressArrayOutput)
}

type VpnGatewayConnectionVpnLinkCustomBgpAddressOutput struct{ *pulumi.OutputState }

func (VpnGatewayConnectionVpnLinkCustomBgpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayConnectionVpnLinkCustomBgpAddress)(nil)).Elem()
}

func (o VpnGatewayConnectionVpnLinkCustomBgpAddressOutput) ToVpnGatewayConnectionVpnLinkCustomBgpAddressOutput() VpnGatewayConnectionVpnLinkCustomBgpAddressOutput {
	return o
}

func (o VpnGatewayConnectionVpnLinkCustomBgpAddressOutput) ToVpnGatewayConnectionVpnLinkCustomBgpAddressOutputWithContext(ctx context.Context) VpnGatewayConnectionVpnLinkCustomBgpAddressOutput {
	return o
}

// The custom bgp ip address which belongs to the IP Configuration.
func (o VpnGatewayConnectionVpnLinkCustomBgpAddressOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayConnectionVpnLinkCustomBgpAddress) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The ID of the IP Configuration which belongs to the VPN Gateway.
func (o VpnGatewayConnectionVpnLinkCustomBgpAddressOutput) IpConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayConnectionVpnLinkCustomBgpAddress) string { return v.IpConfigurationId }).(pulumi.StringOutput)
}

type VpnGatewayConnectionVpnLinkCustomBgpAddressArrayOutput struct{ *pulumi.OutputState }

func (VpnGatewayConnectionVpnLinkCustomBgpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnGatewayConnectionVpnLinkCustomBgpAddress)(nil)).Elem()
}

func (o VpnGatewayConnectionVpnLinkCustomBgpAddressArrayOutput) ToVpnGatewayConnectionVpnLinkCustomBgpAddressArrayOutput() VpnGatewayConnectionVpnLinkCustomBgpAddressArrayOutput {
	return o
}

func (o VpnGatewayConnectionVpnLinkCustomBgpAddressArrayOutput) ToVpnGatewayConnectionVpnLinkCustomBgpAddressArrayOutputWithContext(ctx context.Context) VpnGatewayConnectionVpnLinkCustomBgpAddressArrayOutput {
	return o
}

func (o VpnGatewayConnectionVpnLinkCustomBgpAddressArrayOutput) Index(i pulumi.IntInput) VpnGatewayConnectionVpnLinkCustomBgpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnGatewayConnectionVpnLinkCustomBgpAddress {
		return vs[0].([]VpnGatewayConnectionVpnLinkCustomBgpAddress)[vs[1].(int)]
	}).(VpnGatewayConnectionVpnLinkCustomBgpAddressOutput)
}

type VpnGatewayConnectionVpnLinkIpsecPolicy struct {
	// The DH Group used in IKE Phase 1 for initial SA. Possible values are `None`, `DHGroup1`, `DHGroup2`, `DHGroup14`, `DHGroup24`, `DHGroup2048`, `ECP256`, `ECP384`.
	DhGroup string `pulumi:"dhGroup"`
	// The IPSec encryption algorithm (IKE phase 1). Possible values are `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128`, `GCMAES192`, `GCMAES256`, `None`.
	EncryptionAlgorithm string `pulumi:"encryptionAlgorithm"`
	// The IKE encryption algorithm (IKE phase 2). Possible values are `DES`, `DES3`, `AES128`, `AES192`, `AES256`, `GCMAES128`, `GCMAES256`.
	IkeEncryptionAlgorithm string `pulumi:"ikeEncryptionAlgorithm"`
	// The IKE integrity algorithm (IKE phase 2). Possible values are `MD5`, `SHA1`, `SHA256`, `SHA384`, `GCMAES128`, `GCMAES256`.
	IkeIntegrityAlgorithm string `pulumi:"ikeIntegrityAlgorithm"`
	// The IPSec integrity algorithm (IKE phase 1). Possible values are `MD5`, `SHA1`, `SHA256`, `GCMAES128`, `GCMAES192`, `GCMAES256`.
	IntegrityAlgorithm string `pulumi:"integrityAlgorithm"`
	// The Pfs Group used in IKE Phase 2 for the new child SA. Possible values are `None`, `PFS1`, `PFS2`, `PFS14`, `PFS24`, `PFS2048`, `PFSMM`, `ECP256`, `ECP384`.
	PfsGroup string `pulumi:"pfsGroup"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for the site to site VPN tunnel.
	SaDataSizeKb int `pulumi:"saDataSizeKb"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for the site to site VPN tunnel.
	SaLifetimeSec int `pulumi:"saLifetimeSec"`
}

// VpnGatewayConnectionVpnLinkIpsecPolicyInput is an input type that accepts VpnGatewayConnectionVpnLinkIpsecPolicyArgs and VpnGatewayConnectionVpnLinkIpsecPolicyOutput values.
// You can construct a concrete instance of `VpnGatewayConnectionVpnLinkIpsecPolicyInput` via:
//
//	VpnGatewayConnectionVpnLinkIpsecPolicyArgs{...}
type VpnGatewayConnectionVpnLinkIpsecPolicyInput interface {
	pulumi.Input

	ToVpnGatewayConnectionVpnLinkIpsecPolicyOutput() VpnGatewayConnectionVpnLinkIpsecPolicyOutput
	ToVpnGatewayConnectionVpnLinkIpsecPolicyOutputWithContext(context.Context) VpnGatewayConnectionVpnLinkIpsecPolicyOutput
}

type VpnGatewayConnectionVpnLinkIpsecPolicyArgs struct {
	// The DH Group used in IKE Phase 1 for initial SA. Possible values are `None`, `DHGroup1`, `DHGroup2`, `DHGroup14`, `DHGroup24`, `DHGroup2048`, `ECP256`, `ECP384`.
	DhGroup pulumi.StringInput `pulumi:"dhGroup"`
	// The IPSec encryption algorithm (IKE phase 1). Possible values are `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128`, `GCMAES192`, `GCMAES256`, `None`.
	EncryptionAlgorithm pulumi.StringInput `pulumi:"encryptionAlgorithm"`
	// The IKE encryption algorithm (IKE phase 2). Possible values are `DES`, `DES3`, `AES128`, `AES192`, `AES256`, `GCMAES128`, `GCMAES256`.
	IkeEncryptionAlgorithm pulumi.StringInput `pulumi:"ikeEncryptionAlgorithm"`
	// The IKE integrity algorithm (IKE phase 2). Possible values are `MD5`, `SHA1`, `SHA256`, `SHA384`, `GCMAES128`, `GCMAES256`.
	IkeIntegrityAlgorithm pulumi.StringInput `pulumi:"ikeIntegrityAlgorithm"`
	// The IPSec integrity algorithm (IKE phase 1). Possible values are `MD5`, `SHA1`, `SHA256`, `GCMAES128`, `GCMAES192`, `GCMAES256`.
	IntegrityAlgorithm pulumi.StringInput `pulumi:"integrityAlgorithm"`
	// The Pfs Group used in IKE Phase 2 for the new child SA. Possible values are `None`, `PFS1`, `PFS2`, `PFS14`, `PFS24`, `PFS2048`, `PFSMM`, `ECP256`, `ECP384`.
	PfsGroup pulumi.StringInput `pulumi:"pfsGroup"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for the site to site VPN tunnel.
	SaDataSizeKb pulumi.IntInput `pulumi:"saDataSizeKb"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for the site to site VPN tunnel.
	SaLifetimeSec pulumi.IntInput `pulumi:"saLifetimeSec"`
}

func (VpnGatewayConnectionVpnLinkIpsecPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayConnectionVpnLinkIpsecPolicy)(nil)).Elem()
}

func (i VpnGatewayConnectionVpnLinkIpsecPolicyArgs) ToVpnGatewayConnectionVpnLinkIpsecPolicyOutput() VpnGatewayConnectionVpnLinkIpsecPolicyOutput {
	return i.ToVpnGatewayConnectionVpnLinkIpsecPolicyOutputWithContext(context.Background())
}

func (i VpnGatewayConnectionVpnLinkIpsecPolicyArgs) ToVpnGatewayConnectionVpnLinkIpsecPolicyOutputWithContext(ctx context.Context) VpnGatewayConnectionVpnLinkIpsecPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayConnectionVpnLinkIpsecPolicyOutput)
}

// VpnGatewayConnectionVpnLinkIpsecPolicyArrayInput is an input type that accepts VpnGatewayConnectionVpnLinkIpsecPolicyArray and VpnGatewayConnectionVpnLinkIpsecPolicyArrayOutput values.
// You can construct a concrete instance of `VpnGatewayConnectionVpnLinkIpsecPolicyArrayInput` via:
//
//	VpnGatewayConnectionVpnLinkIpsecPolicyArray{ VpnGatewayConnectionVpnLinkIpsecPolicyArgs{...} }
type VpnGatewayConnectionVpnLinkIpsecPolicyArrayInput interface {
	pulumi.Input

	ToVpnGatewayConnectionVpnLinkIpsecPolicyArrayOutput() VpnGatewayConnectionVpnLinkIpsecPolicyArrayOutput
	ToVpnGatewayConnectionVpnLinkIpsecPolicyArrayOutputWithContext(context.Context) VpnGatewayConnectionVpnLinkIpsecPolicyArrayOutput
}

type VpnGatewayConnectionVpnLinkIpsecPolicyArray []VpnGatewayConnectionVpnLinkIpsecPolicyInput

func (VpnGatewayConnectionVpnLinkIpsecPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnGatewayConnectionVpnLinkIpsecPolicy)(nil)).Elem()
}

func (i VpnGatewayConnectionVpnLinkIpsecPolicyArray) ToVpnGatewayConnectionVpnLinkIpsecPolicyArrayOutput() VpnGatewayConnectionVpnLinkIpsecPolicyArrayOutput {
	return i.ToVpnGatewayConnectionVpnLinkIpsecPolicyArrayOutputWithContext(context.Background())
}

func (i VpnGatewayConnectionVpnLinkIpsecPolicyArray) ToVpnGatewayConnectionVpnLinkIpsecPolicyArrayOutputWithContext(ctx context.Context) VpnGatewayConnectionVpnLinkIpsecPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayConnectionVpnLinkIpsecPolicyArrayOutput)
}

type VpnGatewayConnectionVpnLinkIpsecPolicyOutput struct{ *pulumi.OutputState }

func (VpnGatewayConnectionVpnLinkIpsecPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayConnectionVpnLinkIpsecPolicy)(nil)).Elem()
}

func (o VpnGatewayConnectionVpnLinkIpsecPolicyOutput) ToVpnGatewayConnectionVpnLinkIpsecPolicyOutput() VpnGatewayConnectionVpnLinkIpsecPolicyOutput {
	return o
}

func (o VpnGatewayConnectionVpnLinkIpsecPolicyOutput) ToVpnGatewayConnectionVpnLinkIpsecPolicyOutputWithContext(ctx context.Context) VpnGatewayConnectionVpnLinkIpsecPolicyOutput {
	return o
}

// The DH Group used in IKE Phase 1 for initial SA. Possible values are `None`, `DHGroup1`, `DHGroup2`, `DHGroup14`, `DHGroup24`, `DHGroup2048`, `ECP256`, `ECP384`.
func (o VpnGatewayConnectionVpnLinkIpsecPolicyOutput) DhGroup() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayConnectionVpnLinkIpsecPolicy) string { return v.DhGroup }).(pulumi.StringOutput)
}

// The IPSec encryption algorithm (IKE phase 1). Possible values are `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128`, `GCMAES192`, `GCMAES256`, `None`.
func (o VpnGatewayConnectionVpnLinkIpsecPolicyOutput) EncryptionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayConnectionVpnLinkIpsecPolicy) string { return v.EncryptionAlgorithm }).(pulumi.StringOutput)
}

// The IKE encryption algorithm (IKE phase 2). Possible values are `DES`, `DES3`, `AES128`, `AES192`, `AES256`, `GCMAES128`, `GCMAES256`.
func (o VpnGatewayConnectionVpnLinkIpsecPolicyOutput) IkeEncryptionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayConnectionVpnLinkIpsecPolicy) string { return v.IkeEncryptionAlgorithm }).(pulumi.StringOutput)
}

// The IKE integrity algorithm (IKE phase 2). Possible values are `MD5`, `SHA1`, `SHA256`, `SHA384`, `GCMAES128`, `GCMAES256`.
func (o VpnGatewayConnectionVpnLinkIpsecPolicyOutput) IkeIntegrityAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayConnectionVpnLinkIpsecPolicy) string { return v.IkeIntegrityAlgorithm }).(pulumi.StringOutput)
}

// The IPSec integrity algorithm (IKE phase 1). Possible values are `MD5`, `SHA1`, `SHA256`, `GCMAES128`, `GCMAES192`, `GCMAES256`.
func (o VpnGatewayConnectionVpnLinkIpsecPolicyOutput) IntegrityAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayConnectionVpnLinkIpsecPolicy) string { return v.IntegrityAlgorithm }).(pulumi.StringOutput)
}

// The Pfs Group used in IKE Phase 2 for the new child SA. Possible values are `None`, `PFS1`, `PFS2`, `PFS14`, `PFS24`, `PFS2048`, `PFSMM`, `ECP256`, `ECP384`.
func (o VpnGatewayConnectionVpnLinkIpsecPolicyOutput) PfsGroup() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayConnectionVpnLinkIpsecPolicy) string { return v.PfsGroup }).(pulumi.StringOutput)
}

// The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for the site to site VPN tunnel.
func (o VpnGatewayConnectionVpnLinkIpsecPolicyOutput) SaDataSizeKb() pulumi.IntOutput {
	return o.ApplyT(func(v VpnGatewayConnectionVpnLinkIpsecPolicy) int { return v.SaDataSizeKb }).(pulumi.IntOutput)
}

// The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for the site to site VPN tunnel.
func (o VpnGatewayConnectionVpnLinkIpsecPolicyOutput) SaLifetimeSec() pulumi.IntOutput {
	return o.ApplyT(func(v VpnGatewayConnectionVpnLinkIpsecPolicy) int { return v.SaLifetimeSec }).(pulumi.IntOutput)
}

type VpnGatewayConnectionVpnLinkIpsecPolicyArrayOutput struct{ *pulumi.OutputState }

func (VpnGatewayConnectionVpnLinkIpsecPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnGatewayConnectionVpnLinkIpsecPolicy)(nil)).Elem()
}

func (o VpnGatewayConnectionVpnLinkIpsecPolicyArrayOutput) ToVpnGatewayConnectionVpnLinkIpsecPolicyArrayOutput() VpnGatewayConnectionVpnLinkIpsecPolicyArrayOutput {
	return o
}

func (o VpnGatewayConnectionVpnLinkIpsecPolicyArrayOutput) ToVpnGatewayConnectionVpnLinkIpsecPolicyArrayOutputWithContext(ctx context.Context) VpnGatewayConnectionVpnLinkIpsecPolicyArrayOutput {
	return o
}

func (o VpnGatewayConnectionVpnLinkIpsecPolicyArrayOutput) Index(i pulumi.IntInput) VpnGatewayConnectionVpnLinkIpsecPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnGatewayConnectionVpnLinkIpsecPolicy {
		return vs[0].([]VpnGatewayConnectionVpnLinkIpsecPolicy)[vs[1].(int)]
	}).(VpnGatewayConnectionVpnLinkIpsecPolicyOutput)
}

type VpnServerConfigurationAzureActiveDirectoryAuthentication struct {
	// The Audience which should be used for authentication.
	Audience string `pulumi:"audience"`
	// The Issuer which should be used for authentication.
	Issuer string `pulumi:"issuer"`
	// The Tenant which should be used for authentication.
	Tenant string `pulumi:"tenant"`
}

// VpnServerConfigurationAzureActiveDirectoryAuthenticationInput is an input type that accepts VpnServerConfigurationAzureActiveDirectoryAuthenticationArgs and VpnServerConfigurationAzureActiveDirectoryAuthenticationOutput values.
// You can construct a concrete instance of `VpnServerConfigurationAzureActiveDirectoryAuthenticationInput` via:
//
//	VpnServerConfigurationAzureActiveDirectoryAuthenticationArgs{...}
type VpnServerConfigurationAzureActiveDirectoryAuthenticationInput interface {
	pulumi.Input

	ToVpnServerConfigurationAzureActiveDirectoryAuthenticationOutput() VpnServerConfigurationAzureActiveDirectoryAuthenticationOutput
	ToVpnServerConfigurationAzureActiveDirectoryAuthenticationOutputWithContext(context.Context) VpnServerConfigurationAzureActiveDirectoryAuthenticationOutput
}

type VpnServerConfigurationAzureActiveDirectoryAuthenticationArgs struct {
	// The Audience which should be used for authentication.
	Audience pulumi.StringInput `pulumi:"audience"`
	// The Issuer which should be used for authentication.
	Issuer pulumi.StringInput `pulumi:"issuer"`
	// The Tenant which should be used for authentication.
	Tenant pulumi.StringInput `pulumi:"tenant"`
}

func (VpnServerConfigurationAzureActiveDirectoryAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationAzureActiveDirectoryAuthentication)(nil)).Elem()
}

func (i VpnServerConfigurationAzureActiveDirectoryAuthenticationArgs) ToVpnServerConfigurationAzureActiveDirectoryAuthenticationOutput() VpnServerConfigurationAzureActiveDirectoryAuthenticationOutput {
	return i.ToVpnServerConfigurationAzureActiveDirectoryAuthenticationOutputWithContext(context.Background())
}

func (i VpnServerConfigurationAzureActiveDirectoryAuthenticationArgs) ToVpnServerConfigurationAzureActiveDirectoryAuthenticationOutputWithContext(ctx context.Context) VpnServerConfigurationAzureActiveDirectoryAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationAzureActiveDirectoryAuthenticationOutput)
}

// VpnServerConfigurationAzureActiveDirectoryAuthenticationArrayInput is an input type that accepts VpnServerConfigurationAzureActiveDirectoryAuthenticationArray and VpnServerConfigurationAzureActiveDirectoryAuthenticationArrayOutput values.
// You can construct a concrete instance of `VpnServerConfigurationAzureActiveDirectoryAuthenticationArrayInput` via:
//
//	VpnServerConfigurationAzureActiveDirectoryAuthenticationArray{ VpnServerConfigurationAzureActiveDirectoryAuthenticationArgs{...} }
type VpnServerConfigurationAzureActiveDirectoryAuthenticationArrayInput interface {
	pulumi.Input

	ToVpnServerConfigurationAzureActiveDirectoryAuthenticationArrayOutput() VpnServerConfigurationAzureActiveDirectoryAuthenticationArrayOutput
	ToVpnServerConfigurationAzureActiveDirectoryAuthenticationArrayOutputWithContext(context.Context) VpnServerConfigurationAzureActiveDirectoryAuthenticationArrayOutput
}

type VpnServerConfigurationAzureActiveDirectoryAuthenticationArray []VpnServerConfigurationAzureActiveDirectoryAuthenticationInput

func (VpnServerConfigurationAzureActiveDirectoryAuthenticationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigurationAzureActiveDirectoryAuthentication)(nil)).Elem()
}

func (i VpnServerConfigurationAzureActiveDirectoryAuthenticationArray) ToVpnServerConfigurationAzureActiveDirectoryAuthenticationArrayOutput() VpnServerConfigurationAzureActiveDirectoryAuthenticationArrayOutput {
	return i.ToVpnServerConfigurationAzureActiveDirectoryAuthenticationArrayOutputWithContext(context.Background())
}

func (i VpnServerConfigurationAzureActiveDirectoryAuthenticationArray) ToVpnServerConfigurationAzureActiveDirectoryAuthenticationArrayOutputWithContext(ctx context.Context) VpnServerConfigurationAzureActiveDirectoryAuthenticationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationAzureActiveDirectoryAuthenticationArrayOutput)
}

type VpnServerConfigurationAzureActiveDirectoryAuthenticationOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationAzureActiveDirectoryAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationAzureActiveDirectoryAuthentication)(nil)).Elem()
}

func (o VpnServerConfigurationAzureActiveDirectoryAuthenticationOutput) ToVpnServerConfigurationAzureActiveDirectoryAuthenticationOutput() VpnServerConfigurationAzureActiveDirectoryAuthenticationOutput {
	return o
}

func (o VpnServerConfigurationAzureActiveDirectoryAuthenticationOutput) ToVpnServerConfigurationAzureActiveDirectoryAuthenticationOutputWithContext(ctx context.Context) VpnServerConfigurationAzureActiveDirectoryAuthenticationOutput {
	return o
}

// The Audience which should be used for authentication.
func (o VpnServerConfigurationAzureActiveDirectoryAuthenticationOutput) Audience() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationAzureActiveDirectoryAuthentication) string { return v.Audience }).(pulumi.StringOutput)
}

// The Issuer which should be used for authentication.
func (o VpnServerConfigurationAzureActiveDirectoryAuthenticationOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationAzureActiveDirectoryAuthentication) string { return v.Issuer }).(pulumi.StringOutput)
}

// The Tenant which should be used for authentication.
func (o VpnServerConfigurationAzureActiveDirectoryAuthenticationOutput) Tenant() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationAzureActiveDirectoryAuthentication) string { return v.Tenant }).(pulumi.StringOutput)
}

type VpnServerConfigurationAzureActiveDirectoryAuthenticationArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationAzureActiveDirectoryAuthenticationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigurationAzureActiveDirectoryAuthentication)(nil)).Elem()
}

func (o VpnServerConfigurationAzureActiveDirectoryAuthenticationArrayOutput) ToVpnServerConfigurationAzureActiveDirectoryAuthenticationArrayOutput() VpnServerConfigurationAzureActiveDirectoryAuthenticationArrayOutput {
	return o
}

func (o VpnServerConfigurationAzureActiveDirectoryAuthenticationArrayOutput) ToVpnServerConfigurationAzureActiveDirectoryAuthenticationArrayOutputWithContext(ctx context.Context) VpnServerConfigurationAzureActiveDirectoryAuthenticationArrayOutput {
	return o
}

func (o VpnServerConfigurationAzureActiveDirectoryAuthenticationArrayOutput) Index(i pulumi.IntInput) VpnServerConfigurationAzureActiveDirectoryAuthenticationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigurationAzureActiveDirectoryAuthentication {
		return vs[0].([]VpnServerConfigurationAzureActiveDirectoryAuthentication)[vs[1].(int)]
	}).(VpnServerConfigurationAzureActiveDirectoryAuthenticationOutput)
}

type VpnServerConfigurationClientRevokedCertificate struct {
	// A name used to uniquely identify this certificate.
	Name string `pulumi:"name"`
	// The Thumbprint of the Certificate.
	Thumbprint string `pulumi:"thumbprint"`
}

// VpnServerConfigurationClientRevokedCertificateInput is an input type that accepts VpnServerConfigurationClientRevokedCertificateArgs and VpnServerConfigurationClientRevokedCertificateOutput values.
// You can construct a concrete instance of `VpnServerConfigurationClientRevokedCertificateInput` via:
//
//	VpnServerConfigurationClientRevokedCertificateArgs{...}
type VpnServerConfigurationClientRevokedCertificateInput interface {
	pulumi.Input

	ToVpnServerConfigurationClientRevokedCertificateOutput() VpnServerConfigurationClientRevokedCertificateOutput
	ToVpnServerConfigurationClientRevokedCertificateOutputWithContext(context.Context) VpnServerConfigurationClientRevokedCertificateOutput
}

type VpnServerConfigurationClientRevokedCertificateArgs struct {
	// A name used to uniquely identify this certificate.
	Name pulumi.StringInput `pulumi:"name"`
	// The Thumbprint of the Certificate.
	Thumbprint pulumi.StringInput `pulumi:"thumbprint"`
}

func (VpnServerConfigurationClientRevokedCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationClientRevokedCertificate)(nil)).Elem()
}

func (i VpnServerConfigurationClientRevokedCertificateArgs) ToVpnServerConfigurationClientRevokedCertificateOutput() VpnServerConfigurationClientRevokedCertificateOutput {
	return i.ToVpnServerConfigurationClientRevokedCertificateOutputWithContext(context.Background())
}

func (i VpnServerConfigurationClientRevokedCertificateArgs) ToVpnServerConfigurationClientRevokedCertificateOutputWithContext(ctx context.Context) VpnServerConfigurationClientRevokedCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationClientRevokedCertificateOutput)
}

// VpnServerConfigurationClientRevokedCertificateArrayInput is an input type that accepts VpnServerConfigurationClientRevokedCertificateArray and VpnServerConfigurationClientRevokedCertificateArrayOutput values.
// You can construct a concrete instance of `VpnServerConfigurationClientRevokedCertificateArrayInput` via:
//
//	VpnServerConfigurationClientRevokedCertificateArray{ VpnServerConfigurationClientRevokedCertificateArgs{...} }
type VpnServerConfigurationClientRevokedCertificateArrayInput interface {
	pulumi.Input

	ToVpnServerConfigurationClientRevokedCertificateArrayOutput() VpnServerConfigurationClientRevokedCertificateArrayOutput
	ToVpnServerConfigurationClientRevokedCertificateArrayOutputWithContext(context.Context) VpnServerConfigurationClientRevokedCertificateArrayOutput
}

type VpnServerConfigurationClientRevokedCertificateArray []VpnServerConfigurationClientRevokedCertificateInput

func (VpnServerConfigurationClientRevokedCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigurationClientRevokedCertificate)(nil)).Elem()
}

func (i VpnServerConfigurationClientRevokedCertificateArray) ToVpnServerConfigurationClientRevokedCertificateArrayOutput() VpnServerConfigurationClientRevokedCertificateArrayOutput {
	return i.ToVpnServerConfigurationClientRevokedCertificateArrayOutputWithContext(context.Background())
}

func (i VpnServerConfigurationClientRevokedCertificateArray) ToVpnServerConfigurationClientRevokedCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigurationClientRevokedCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationClientRevokedCertificateArrayOutput)
}

type VpnServerConfigurationClientRevokedCertificateOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationClientRevokedCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationClientRevokedCertificate)(nil)).Elem()
}

func (o VpnServerConfigurationClientRevokedCertificateOutput) ToVpnServerConfigurationClientRevokedCertificateOutput() VpnServerConfigurationClientRevokedCertificateOutput {
	return o
}

func (o VpnServerConfigurationClientRevokedCertificateOutput) ToVpnServerConfigurationClientRevokedCertificateOutputWithContext(ctx context.Context) VpnServerConfigurationClientRevokedCertificateOutput {
	return o
}

// A name used to uniquely identify this certificate.
func (o VpnServerConfigurationClientRevokedCertificateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationClientRevokedCertificate) string { return v.Name }).(pulumi.StringOutput)
}

// The Thumbprint of the Certificate.
func (o VpnServerConfigurationClientRevokedCertificateOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationClientRevokedCertificate) string { return v.Thumbprint }).(pulumi.StringOutput)
}

type VpnServerConfigurationClientRevokedCertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationClientRevokedCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigurationClientRevokedCertificate)(nil)).Elem()
}

func (o VpnServerConfigurationClientRevokedCertificateArrayOutput) ToVpnServerConfigurationClientRevokedCertificateArrayOutput() VpnServerConfigurationClientRevokedCertificateArrayOutput {
	return o
}

func (o VpnServerConfigurationClientRevokedCertificateArrayOutput) ToVpnServerConfigurationClientRevokedCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigurationClientRevokedCertificateArrayOutput {
	return o
}

func (o VpnServerConfigurationClientRevokedCertificateArrayOutput) Index(i pulumi.IntInput) VpnServerConfigurationClientRevokedCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigurationClientRevokedCertificate {
		return vs[0].([]VpnServerConfigurationClientRevokedCertificate)[vs[1].(int)]
	}).(VpnServerConfigurationClientRevokedCertificateOutput)
}

type VpnServerConfigurationClientRootCertificate struct {
	// A name used to uniquely identify this certificate.
	Name string `pulumi:"name"`
	// The Public Key Data associated with the Certificate.
	PublicCertData string `pulumi:"publicCertData"`
}

// VpnServerConfigurationClientRootCertificateInput is an input type that accepts VpnServerConfigurationClientRootCertificateArgs and VpnServerConfigurationClientRootCertificateOutput values.
// You can construct a concrete instance of `VpnServerConfigurationClientRootCertificateInput` via:
//
//	VpnServerConfigurationClientRootCertificateArgs{...}
type VpnServerConfigurationClientRootCertificateInput interface {
	pulumi.Input

	ToVpnServerConfigurationClientRootCertificateOutput() VpnServerConfigurationClientRootCertificateOutput
	ToVpnServerConfigurationClientRootCertificateOutputWithContext(context.Context) VpnServerConfigurationClientRootCertificateOutput
}

type VpnServerConfigurationClientRootCertificateArgs struct {
	// A name used to uniquely identify this certificate.
	Name pulumi.StringInput `pulumi:"name"`
	// The Public Key Data associated with the Certificate.
	PublicCertData pulumi.StringInput `pulumi:"publicCertData"`
}

func (VpnServerConfigurationClientRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationClientRootCertificate)(nil)).Elem()
}

func (i VpnServerConfigurationClientRootCertificateArgs) ToVpnServerConfigurationClientRootCertificateOutput() VpnServerConfigurationClientRootCertificateOutput {
	return i.ToVpnServerConfigurationClientRootCertificateOutputWithContext(context.Background())
}

func (i VpnServerConfigurationClientRootCertificateArgs) ToVpnServerConfigurationClientRootCertificateOutputWithContext(ctx context.Context) VpnServerConfigurationClientRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationClientRootCertificateOutput)
}

// VpnServerConfigurationClientRootCertificateArrayInput is an input type that accepts VpnServerConfigurationClientRootCertificateArray and VpnServerConfigurationClientRootCertificateArrayOutput values.
// You can construct a concrete instance of `VpnServerConfigurationClientRootCertificateArrayInput` via:
//
//	VpnServerConfigurationClientRootCertificateArray{ VpnServerConfigurationClientRootCertificateArgs{...} }
type VpnServerConfigurationClientRootCertificateArrayInput interface {
	pulumi.Input

	ToVpnServerConfigurationClientRootCertificateArrayOutput() VpnServerConfigurationClientRootCertificateArrayOutput
	ToVpnServerConfigurationClientRootCertificateArrayOutputWithContext(context.Context) VpnServerConfigurationClientRootCertificateArrayOutput
}

type VpnServerConfigurationClientRootCertificateArray []VpnServerConfigurationClientRootCertificateInput

func (VpnServerConfigurationClientRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigurationClientRootCertificate)(nil)).Elem()
}

func (i VpnServerConfigurationClientRootCertificateArray) ToVpnServerConfigurationClientRootCertificateArrayOutput() VpnServerConfigurationClientRootCertificateArrayOutput {
	return i.ToVpnServerConfigurationClientRootCertificateArrayOutputWithContext(context.Background())
}

func (i VpnServerConfigurationClientRootCertificateArray) ToVpnServerConfigurationClientRootCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigurationClientRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationClientRootCertificateArrayOutput)
}

type VpnServerConfigurationClientRootCertificateOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationClientRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationClientRootCertificate)(nil)).Elem()
}

func (o VpnServerConfigurationClientRootCertificateOutput) ToVpnServerConfigurationClientRootCertificateOutput() VpnServerConfigurationClientRootCertificateOutput {
	return o
}

func (o VpnServerConfigurationClientRootCertificateOutput) ToVpnServerConfigurationClientRootCertificateOutputWithContext(ctx context.Context) VpnServerConfigurationClientRootCertificateOutput {
	return o
}

// A name used to uniquely identify this certificate.
func (o VpnServerConfigurationClientRootCertificateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationClientRootCertificate) string { return v.Name }).(pulumi.StringOutput)
}

// The Public Key Data associated with the Certificate.
func (o VpnServerConfigurationClientRootCertificateOutput) PublicCertData() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationClientRootCertificate) string { return v.PublicCertData }).(pulumi.StringOutput)
}

type VpnServerConfigurationClientRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationClientRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigurationClientRootCertificate)(nil)).Elem()
}

func (o VpnServerConfigurationClientRootCertificateArrayOutput) ToVpnServerConfigurationClientRootCertificateArrayOutput() VpnServerConfigurationClientRootCertificateArrayOutput {
	return o
}

func (o VpnServerConfigurationClientRootCertificateArrayOutput) ToVpnServerConfigurationClientRootCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigurationClientRootCertificateArrayOutput {
	return o
}

func (o VpnServerConfigurationClientRootCertificateArrayOutput) Index(i pulumi.IntInput) VpnServerConfigurationClientRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigurationClientRootCertificate {
		return vs[0].([]VpnServerConfigurationClientRootCertificate)[vs[1].(int)]
	}).(VpnServerConfigurationClientRootCertificateOutput)
}

type VpnServerConfigurationIpsecPolicy struct {
	// The DH Group, used in IKE Phase 1. Possible values include `DHGroup1`, `DHGroup2`, `DHGroup14`, `DHGroup24`, `DHGroup2048`, `ECP256`, `ECP384` and `None`.
	DhGroup string `pulumi:"dhGroup"`
	// The IKE encryption algorithm, used for IKE Phase 2. Possible values include `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128` and `GCMAES256`.
	IkeEncryption string `pulumi:"ikeEncryption"`
	// The IKE encryption integrity algorithm, used for IKE Phase 2. Possible values include `GCMAES128`, `GCMAES256`, `MD5`, `SHA1`, `SHA256` and `SHA384`.
	IkeIntegrity string `pulumi:"ikeIntegrity"`
	// The IPSec encryption algorithm, used for IKE phase 1. Possible values include `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128`, `GCMAES192`, `GCMAES256` and `None`.
	IpsecEncryption string `pulumi:"ipsecEncryption"`
	// The IPSec integrity algorithm, used for IKE phase 1. Possible values include `GCMAES128`, `GCMAES192`, `GCMAES256`, `MD5`, `SHA1` and `SHA256`.
	IpsecIntegrity string `pulumi:"ipsecIntegrity"`
	// The Pfs Group, used in IKE Phase 2. Possible values include `ECP256`, `ECP384`, `PFS1`, `PFS2`, `PFS14`, `PFS24`, `PFS2048`, `PFSMM` and `None`.
	PfsGroup string `pulumi:"pfsGroup"`
	// The IPSec Security Association payload size in KB for a Site-to-Site VPN tunnel.
	SaDataSizeKilobytes int `pulumi:"saDataSizeKilobytes"`
	// The IPSec Security Association lifetime in seconds for a Site-to-Site VPN tunnel.
	SaLifetimeSeconds int `pulumi:"saLifetimeSeconds"`
}

// VpnServerConfigurationIpsecPolicyInput is an input type that accepts VpnServerConfigurationIpsecPolicyArgs and VpnServerConfigurationIpsecPolicyOutput values.
// You can construct a concrete instance of `VpnServerConfigurationIpsecPolicyInput` via:
//
//	VpnServerConfigurationIpsecPolicyArgs{...}
type VpnServerConfigurationIpsecPolicyInput interface {
	pulumi.Input

	ToVpnServerConfigurationIpsecPolicyOutput() VpnServerConfigurationIpsecPolicyOutput
	ToVpnServerConfigurationIpsecPolicyOutputWithContext(context.Context) VpnServerConfigurationIpsecPolicyOutput
}

type VpnServerConfigurationIpsecPolicyArgs struct {
	// The DH Group, used in IKE Phase 1. Possible values include `DHGroup1`, `DHGroup2`, `DHGroup14`, `DHGroup24`, `DHGroup2048`, `ECP256`, `ECP384` and `None`.
	DhGroup pulumi.StringInput `pulumi:"dhGroup"`
	// The IKE encryption algorithm, used for IKE Phase 2. Possible values include `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128` and `GCMAES256`.
	IkeEncryption pulumi.StringInput `pulumi:"ikeEncryption"`
	// The IKE encryption integrity algorithm, used for IKE Phase 2. Possible values include `GCMAES128`, `GCMAES256`, `MD5`, `SHA1`, `SHA256` and `SHA384`.
	IkeIntegrity pulumi.StringInput `pulumi:"ikeIntegrity"`
	// The IPSec encryption algorithm, used for IKE phase 1. Possible values include `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128`, `GCMAES192`, `GCMAES256` and `None`.
	IpsecEncryption pulumi.StringInput `pulumi:"ipsecEncryption"`
	// The IPSec integrity algorithm, used for IKE phase 1. Possible values include `GCMAES128`, `GCMAES192`, `GCMAES256`, `MD5`, `SHA1` and `SHA256`.
	IpsecIntegrity pulumi.StringInput `pulumi:"ipsecIntegrity"`
	// The Pfs Group, used in IKE Phase 2. Possible values include `ECP256`, `ECP384`, `PFS1`, `PFS2`, `PFS14`, `PFS24`, `PFS2048`, `PFSMM` and `None`.
	PfsGroup pulumi.StringInput `pulumi:"pfsGroup"`
	// The IPSec Security Association payload size in KB for a Site-to-Site VPN tunnel.
	SaDataSizeKilobytes pulumi.IntInput `pulumi:"saDataSizeKilobytes"`
	// The IPSec Security Association lifetime in seconds for a Site-to-Site VPN tunnel.
	SaLifetimeSeconds pulumi.IntInput `pulumi:"saLifetimeSeconds"`
}

func (VpnServerConfigurationIpsecPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationIpsecPolicy)(nil)).Elem()
}

func (i VpnServerConfigurationIpsecPolicyArgs) ToVpnServerConfigurationIpsecPolicyOutput() VpnServerConfigurationIpsecPolicyOutput {
	return i.ToVpnServerConfigurationIpsecPolicyOutputWithContext(context.Background())
}

func (i VpnServerConfigurationIpsecPolicyArgs) ToVpnServerConfigurationIpsecPolicyOutputWithContext(ctx context.Context) VpnServerConfigurationIpsecPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationIpsecPolicyOutput)
}

func (i VpnServerConfigurationIpsecPolicyArgs) ToVpnServerConfigurationIpsecPolicyPtrOutput() VpnServerConfigurationIpsecPolicyPtrOutput {
	return i.ToVpnServerConfigurationIpsecPolicyPtrOutputWithContext(context.Background())
}

func (i VpnServerConfigurationIpsecPolicyArgs) ToVpnServerConfigurationIpsecPolicyPtrOutputWithContext(ctx context.Context) VpnServerConfigurationIpsecPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationIpsecPolicyOutput).ToVpnServerConfigurationIpsecPolicyPtrOutputWithContext(ctx)
}

// VpnServerConfigurationIpsecPolicyPtrInput is an input type that accepts VpnServerConfigurationIpsecPolicyArgs, VpnServerConfigurationIpsecPolicyPtr and VpnServerConfigurationIpsecPolicyPtrOutput values.
// You can construct a concrete instance of `VpnServerConfigurationIpsecPolicyPtrInput` via:
//
//	        VpnServerConfigurationIpsecPolicyArgs{...}
//
//	or:
//
//	        nil
type VpnServerConfigurationIpsecPolicyPtrInput interface {
	pulumi.Input

	ToVpnServerConfigurationIpsecPolicyPtrOutput() VpnServerConfigurationIpsecPolicyPtrOutput
	ToVpnServerConfigurationIpsecPolicyPtrOutputWithContext(context.Context) VpnServerConfigurationIpsecPolicyPtrOutput
}

type vpnServerConfigurationIpsecPolicyPtrType VpnServerConfigurationIpsecPolicyArgs

func VpnServerConfigurationIpsecPolicyPtr(v *VpnServerConfigurationIpsecPolicyArgs) VpnServerConfigurationIpsecPolicyPtrInput {
	return (*vpnServerConfigurationIpsecPolicyPtrType)(v)
}

func (*vpnServerConfigurationIpsecPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnServerConfigurationIpsecPolicy)(nil)).Elem()
}

func (i *vpnServerConfigurationIpsecPolicyPtrType) ToVpnServerConfigurationIpsecPolicyPtrOutput() VpnServerConfigurationIpsecPolicyPtrOutput {
	return i.ToVpnServerConfigurationIpsecPolicyPtrOutputWithContext(context.Background())
}

func (i *vpnServerConfigurationIpsecPolicyPtrType) ToVpnServerConfigurationIpsecPolicyPtrOutputWithContext(ctx context.Context) VpnServerConfigurationIpsecPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationIpsecPolicyPtrOutput)
}

type VpnServerConfigurationIpsecPolicyOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationIpsecPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationIpsecPolicy)(nil)).Elem()
}

func (o VpnServerConfigurationIpsecPolicyOutput) ToVpnServerConfigurationIpsecPolicyOutput() VpnServerConfigurationIpsecPolicyOutput {
	return o
}

func (o VpnServerConfigurationIpsecPolicyOutput) ToVpnServerConfigurationIpsecPolicyOutputWithContext(ctx context.Context) VpnServerConfigurationIpsecPolicyOutput {
	return o
}

func (o VpnServerConfigurationIpsecPolicyOutput) ToVpnServerConfigurationIpsecPolicyPtrOutput() VpnServerConfigurationIpsecPolicyPtrOutput {
	return o.ToVpnServerConfigurationIpsecPolicyPtrOutputWithContext(context.Background())
}

func (o VpnServerConfigurationIpsecPolicyOutput) ToVpnServerConfigurationIpsecPolicyPtrOutputWithContext(ctx context.Context) VpnServerConfigurationIpsecPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpnServerConfigurationIpsecPolicy) *VpnServerConfigurationIpsecPolicy {
		return &v
	}).(VpnServerConfigurationIpsecPolicyPtrOutput)
}

// The DH Group, used in IKE Phase 1. Possible values include `DHGroup1`, `DHGroup2`, `DHGroup14`, `DHGroup24`, `DHGroup2048`, `ECP256`, `ECP384` and `None`.
func (o VpnServerConfigurationIpsecPolicyOutput) DhGroup() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationIpsecPolicy) string { return v.DhGroup }).(pulumi.StringOutput)
}

// The IKE encryption algorithm, used for IKE Phase 2. Possible values include `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128` and `GCMAES256`.
func (o VpnServerConfigurationIpsecPolicyOutput) IkeEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationIpsecPolicy) string { return v.IkeEncryption }).(pulumi.StringOutput)
}

// The IKE encryption integrity algorithm, used for IKE Phase 2. Possible values include `GCMAES128`, `GCMAES256`, `MD5`, `SHA1`, `SHA256` and `SHA384`.
func (o VpnServerConfigurationIpsecPolicyOutput) IkeIntegrity() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationIpsecPolicy) string { return v.IkeIntegrity }).(pulumi.StringOutput)
}

// The IPSec encryption algorithm, used for IKE phase 1. Possible values include `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128`, `GCMAES192`, `GCMAES256` and `None`.
func (o VpnServerConfigurationIpsecPolicyOutput) IpsecEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationIpsecPolicy) string { return v.IpsecEncryption }).(pulumi.StringOutput)
}

// The IPSec integrity algorithm, used for IKE phase 1. Possible values include `GCMAES128`, `GCMAES192`, `GCMAES256`, `MD5`, `SHA1` and `SHA256`.
func (o VpnServerConfigurationIpsecPolicyOutput) IpsecIntegrity() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationIpsecPolicy) string { return v.IpsecIntegrity }).(pulumi.StringOutput)
}

// The Pfs Group, used in IKE Phase 2. Possible values include `ECP256`, `ECP384`, `PFS1`, `PFS2`, `PFS14`, `PFS24`, `PFS2048`, `PFSMM` and `None`.
func (o VpnServerConfigurationIpsecPolicyOutput) PfsGroup() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationIpsecPolicy) string { return v.PfsGroup }).(pulumi.StringOutput)
}

// The IPSec Security Association payload size in KB for a Site-to-Site VPN tunnel.
func (o VpnServerConfigurationIpsecPolicyOutput) SaDataSizeKilobytes() pulumi.IntOutput {
	return o.ApplyT(func(v VpnServerConfigurationIpsecPolicy) int { return v.SaDataSizeKilobytes }).(pulumi.IntOutput)
}

// The IPSec Security Association lifetime in seconds for a Site-to-Site VPN tunnel.
func (o VpnServerConfigurationIpsecPolicyOutput) SaLifetimeSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v VpnServerConfigurationIpsecPolicy) int { return v.SaLifetimeSeconds }).(pulumi.IntOutput)
}

type VpnServerConfigurationIpsecPolicyPtrOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationIpsecPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnServerConfigurationIpsecPolicy)(nil)).Elem()
}

func (o VpnServerConfigurationIpsecPolicyPtrOutput) ToVpnServerConfigurationIpsecPolicyPtrOutput() VpnServerConfigurationIpsecPolicyPtrOutput {
	return o
}

func (o VpnServerConfigurationIpsecPolicyPtrOutput) ToVpnServerConfigurationIpsecPolicyPtrOutputWithContext(ctx context.Context) VpnServerConfigurationIpsecPolicyPtrOutput {
	return o
}

func (o VpnServerConfigurationIpsecPolicyPtrOutput) Elem() VpnServerConfigurationIpsecPolicyOutput {
	return o.ApplyT(func(v *VpnServerConfigurationIpsecPolicy) VpnServerConfigurationIpsecPolicy {
		if v != nil {
			return *v
		}
		var ret VpnServerConfigurationIpsecPolicy
		return ret
	}).(VpnServerConfigurationIpsecPolicyOutput)
}

// The DH Group, used in IKE Phase 1. Possible values include `DHGroup1`, `DHGroup2`, `DHGroup14`, `DHGroup24`, `DHGroup2048`, `ECP256`, `ECP384` and `None`.
func (o VpnServerConfigurationIpsecPolicyPtrOutput) DhGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnServerConfigurationIpsecPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.DhGroup
	}).(pulumi.StringPtrOutput)
}

// The IKE encryption algorithm, used for IKE Phase 2. Possible values include `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128` and `GCMAES256`.
func (o VpnServerConfigurationIpsecPolicyPtrOutput) IkeEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnServerConfigurationIpsecPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.IkeEncryption
	}).(pulumi.StringPtrOutput)
}

// The IKE encryption integrity algorithm, used for IKE Phase 2. Possible values include `GCMAES128`, `GCMAES256`, `MD5`, `SHA1`, `SHA256` and `SHA384`.
func (o VpnServerConfigurationIpsecPolicyPtrOutput) IkeIntegrity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnServerConfigurationIpsecPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.IkeIntegrity
	}).(pulumi.StringPtrOutput)
}

// The IPSec encryption algorithm, used for IKE phase 1. Possible values include `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128`, `GCMAES192`, `GCMAES256` and `None`.
func (o VpnServerConfigurationIpsecPolicyPtrOutput) IpsecEncryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnServerConfigurationIpsecPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.IpsecEncryption
	}).(pulumi.StringPtrOutput)
}

// The IPSec integrity algorithm, used for IKE phase 1. Possible values include `GCMAES128`, `GCMAES192`, `GCMAES256`, `MD5`, `SHA1` and `SHA256`.
func (o VpnServerConfigurationIpsecPolicyPtrOutput) IpsecIntegrity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnServerConfigurationIpsecPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.IpsecIntegrity
	}).(pulumi.StringPtrOutput)
}

// The Pfs Group, used in IKE Phase 2. Possible values include `ECP256`, `ECP384`, `PFS1`, `PFS2`, `PFS14`, `PFS24`, `PFS2048`, `PFSMM` and `None`.
func (o VpnServerConfigurationIpsecPolicyPtrOutput) PfsGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnServerConfigurationIpsecPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.PfsGroup
	}).(pulumi.StringPtrOutput)
}

// The IPSec Security Association payload size in KB for a Site-to-Site VPN tunnel.
func (o VpnServerConfigurationIpsecPolicyPtrOutput) SaDataSizeKilobytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnServerConfigurationIpsecPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.SaDataSizeKilobytes
	}).(pulumi.IntPtrOutput)
}

// The IPSec Security Association lifetime in seconds for a Site-to-Site VPN tunnel.
func (o VpnServerConfigurationIpsecPolicyPtrOutput) SaLifetimeSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnServerConfigurationIpsecPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.SaLifetimeSeconds
	}).(pulumi.IntPtrOutput)
}

type VpnServerConfigurationPolicyGroupPolicy struct {
	// The name of the VPN Server Configuration Policy member.
	Name string `pulumi:"name"`
	// The attribute type of the VPN Server Configuration Policy member. Possible values are `AADGroupId`, `CertificateGroupId` and `RadiusAzureGroupId`.
	Type string `pulumi:"type"`
	// The value of the attribute that is used for the VPN Server Configuration Policy member.
	Value string `pulumi:"value"`
}

// VpnServerConfigurationPolicyGroupPolicyInput is an input type that accepts VpnServerConfigurationPolicyGroupPolicyArgs and VpnServerConfigurationPolicyGroupPolicyOutput values.
// You can construct a concrete instance of `VpnServerConfigurationPolicyGroupPolicyInput` via:
//
//	VpnServerConfigurationPolicyGroupPolicyArgs{...}
type VpnServerConfigurationPolicyGroupPolicyInput interface {
	pulumi.Input

	ToVpnServerConfigurationPolicyGroupPolicyOutput() VpnServerConfigurationPolicyGroupPolicyOutput
	ToVpnServerConfigurationPolicyGroupPolicyOutputWithContext(context.Context) VpnServerConfigurationPolicyGroupPolicyOutput
}

type VpnServerConfigurationPolicyGroupPolicyArgs struct {
	// The name of the VPN Server Configuration Policy member.
	Name pulumi.StringInput `pulumi:"name"`
	// The attribute type of the VPN Server Configuration Policy member. Possible values are `AADGroupId`, `CertificateGroupId` and `RadiusAzureGroupId`.
	Type pulumi.StringInput `pulumi:"type"`
	// The value of the attribute that is used for the VPN Server Configuration Policy member.
	Value pulumi.StringInput `pulumi:"value"`
}

func (VpnServerConfigurationPolicyGroupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationPolicyGroupPolicy)(nil)).Elem()
}

func (i VpnServerConfigurationPolicyGroupPolicyArgs) ToVpnServerConfigurationPolicyGroupPolicyOutput() VpnServerConfigurationPolicyGroupPolicyOutput {
	return i.ToVpnServerConfigurationPolicyGroupPolicyOutputWithContext(context.Background())
}

func (i VpnServerConfigurationPolicyGroupPolicyArgs) ToVpnServerConfigurationPolicyGroupPolicyOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationPolicyGroupPolicyOutput)
}

// VpnServerConfigurationPolicyGroupPolicyArrayInput is an input type that accepts VpnServerConfigurationPolicyGroupPolicyArray and VpnServerConfigurationPolicyGroupPolicyArrayOutput values.
// You can construct a concrete instance of `VpnServerConfigurationPolicyGroupPolicyArrayInput` via:
//
//	VpnServerConfigurationPolicyGroupPolicyArray{ VpnServerConfigurationPolicyGroupPolicyArgs{...} }
type VpnServerConfigurationPolicyGroupPolicyArrayInput interface {
	pulumi.Input

	ToVpnServerConfigurationPolicyGroupPolicyArrayOutput() VpnServerConfigurationPolicyGroupPolicyArrayOutput
	ToVpnServerConfigurationPolicyGroupPolicyArrayOutputWithContext(context.Context) VpnServerConfigurationPolicyGroupPolicyArrayOutput
}

type VpnServerConfigurationPolicyGroupPolicyArray []VpnServerConfigurationPolicyGroupPolicyInput

func (VpnServerConfigurationPolicyGroupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigurationPolicyGroupPolicy)(nil)).Elem()
}

func (i VpnServerConfigurationPolicyGroupPolicyArray) ToVpnServerConfigurationPolicyGroupPolicyArrayOutput() VpnServerConfigurationPolicyGroupPolicyArrayOutput {
	return i.ToVpnServerConfigurationPolicyGroupPolicyArrayOutputWithContext(context.Background())
}

func (i VpnServerConfigurationPolicyGroupPolicyArray) ToVpnServerConfigurationPolicyGroupPolicyArrayOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationPolicyGroupPolicyArrayOutput)
}

type VpnServerConfigurationPolicyGroupPolicyOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationPolicyGroupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationPolicyGroupPolicy)(nil)).Elem()
}

func (o VpnServerConfigurationPolicyGroupPolicyOutput) ToVpnServerConfigurationPolicyGroupPolicyOutput() VpnServerConfigurationPolicyGroupPolicyOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupPolicyOutput) ToVpnServerConfigurationPolicyGroupPolicyOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupPolicyOutput {
	return o
}

// The name of the VPN Server Configuration Policy member.
func (o VpnServerConfigurationPolicyGroupPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupPolicy) string { return v.Name }).(pulumi.StringOutput)
}

// The attribute type of the VPN Server Configuration Policy member. Possible values are `AADGroupId`, `CertificateGroupId` and `RadiusAzureGroupId`.
func (o VpnServerConfigurationPolicyGroupPolicyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupPolicy) string { return v.Type }).(pulumi.StringOutput)
}

// The value of the attribute that is used for the VPN Server Configuration Policy member.
func (o VpnServerConfigurationPolicyGroupPolicyOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationPolicyGroupPolicy) string { return v.Value }).(pulumi.StringOutput)
}

type VpnServerConfigurationPolicyGroupPolicyArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationPolicyGroupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigurationPolicyGroupPolicy)(nil)).Elem()
}

func (o VpnServerConfigurationPolicyGroupPolicyArrayOutput) ToVpnServerConfigurationPolicyGroupPolicyArrayOutput() VpnServerConfigurationPolicyGroupPolicyArrayOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupPolicyArrayOutput) ToVpnServerConfigurationPolicyGroupPolicyArrayOutputWithContext(ctx context.Context) VpnServerConfigurationPolicyGroupPolicyArrayOutput {
	return o
}

func (o VpnServerConfigurationPolicyGroupPolicyArrayOutput) Index(i pulumi.IntInput) VpnServerConfigurationPolicyGroupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigurationPolicyGroupPolicy {
		return vs[0].([]VpnServerConfigurationPolicyGroupPolicy)[vs[1].(int)]
	}).(VpnServerConfigurationPolicyGroupPolicyOutput)
}

type VpnServerConfigurationRadius struct {
	// One or more `clientRootCertificate` blocks as defined below.
	ClientRootCertificates []VpnServerConfigurationRadiusClientRootCertificate `pulumi:"clientRootCertificates"`
	// One or more `serverRootCertificate` blocks as defined below.
	ServerRootCertificates []VpnServerConfigurationRadiusServerRootCertificate `pulumi:"serverRootCertificates"`
	// One or more `server` blocks as defined below.
	Servers []VpnServerConfigurationRadiusServer `pulumi:"servers"`
}

// VpnServerConfigurationRadiusInput is an input type that accepts VpnServerConfigurationRadiusArgs and VpnServerConfigurationRadiusOutput values.
// You can construct a concrete instance of `VpnServerConfigurationRadiusInput` via:
//
//	VpnServerConfigurationRadiusArgs{...}
type VpnServerConfigurationRadiusInput interface {
	pulumi.Input

	ToVpnServerConfigurationRadiusOutput() VpnServerConfigurationRadiusOutput
	ToVpnServerConfigurationRadiusOutputWithContext(context.Context) VpnServerConfigurationRadiusOutput
}

type VpnServerConfigurationRadiusArgs struct {
	// One or more `clientRootCertificate` blocks as defined below.
	ClientRootCertificates VpnServerConfigurationRadiusClientRootCertificateArrayInput `pulumi:"clientRootCertificates"`
	// One or more `serverRootCertificate` blocks as defined below.
	ServerRootCertificates VpnServerConfigurationRadiusServerRootCertificateArrayInput `pulumi:"serverRootCertificates"`
	// One or more `server` blocks as defined below.
	Servers VpnServerConfigurationRadiusServerArrayInput `pulumi:"servers"`
}

func (VpnServerConfigurationRadiusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationRadius)(nil)).Elem()
}

func (i VpnServerConfigurationRadiusArgs) ToVpnServerConfigurationRadiusOutput() VpnServerConfigurationRadiusOutput {
	return i.ToVpnServerConfigurationRadiusOutputWithContext(context.Background())
}

func (i VpnServerConfigurationRadiusArgs) ToVpnServerConfigurationRadiusOutputWithContext(ctx context.Context) VpnServerConfigurationRadiusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationRadiusOutput)
}

func (i VpnServerConfigurationRadiusArgs) ToVpnServerConfigurationRadiusPtrOutput() VpnServerConfigurationRadiusPtrOutput {
	return i.ToVpnServerConfigurationRadiusPtrOutputWithContext(context.Background())
}

func (i VpnServerConfigurationRadiusArgs) ToVpnServerConfigurationRadiusPtrOutputWithContext(ctx context.Context) VpnServerConfigurationRadiusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationRadiusOutput).ToVpnServerConfigurationRadiusPtrOutputWithContext(ctx)
}

// VpnServerConfigurationRadiusPtrInput is an input type that accepts VpnServerConfigurationRadiusArgs, VpnServerConfigurationRadiusPtr and VpnServerConfigurationRadiusPtrOutput values.
// You can construct a concrete instance of `VpnServerConfigurationRadiusPtrInput` via:
//
//	        VpnServerConfigurationRadiusArgs{...}
//
//	or:
//
//	        nil
type VpnServerConfigurationRadiusPtrInput interface {
	pulumi.Input

	ToVpnServerConfigurationRadiusPtrOutput() VpnServerConfigurationRadiusPtrOutput
	ToVpnServerConfigurationRadiusPtrOutputWithContext(context.Context) VpnServerConfigurationRadiusPtrOutput
}

type vpnServerConfigurationRadiusPtrType VpnServerConfigurationRadiusArgs

func VpnServerConfigurationRadiusPtr(v *VpnServerConfigurationRadiusArgs) VpnServerConfigurationRadiusPtrInput {
	return (*vpnServerConfigurationRadiusPtrType)(v)
}

func (*vpnServerConfigurationRadiusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnServerConfigurationRadius)(nil)).Elem()
}

func (i *vpnServerConfigurationRadiusPtrType) ToVpnServerConfigurationRadiusPtrOutput() VpnServerConfigurationRadiusPtrOutput {
	return i.ToVpnServerConfigurationRadiusPtrOutputWithContext(context.Background())
}

func (i *vpnServerConfigurationRadiusPtrType) ToVpnServerConfigurationRadiusPtrOutputWithContext(ctx context.Context) VpnServerConfigurationRadiusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationRadiusPtrOutput)
}

type VpnServerConfigurationRadiusOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationRadiusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationRadius)(nil)).Elem()
}

func (o VpnServerConfigurationRadiusOutput) ToVpnServerConfigurationRadiusOutput() VpnServerConfigurationRadiusOutput {
	return o
}

func (o VpnServerConfigurationRadiusOutput) ToVpnServerConfigurationRadiusOutputWithContext(ctx context.Context) VpnServerConfigurationRadiusOutput {
	return o
}

func (o VpnServerConfigurationRadiusOutput) ToVpnServerConfigurationRadiusPtrOutput() VpnServerConfigurationRadiusPtrOutput {
	return o.ToVpnServerConfigurationRadiusPtrOutputWithContext(context.Background())
}

func (o VpnServerConfigurationRadiusOutput) ToVpnServerConfigurationRadiusPtrOutputWithContext(ctx context.Context) VpnServerConfigurationRadiusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpnServerConfigurationRadius) *VpnServerConfigurationRadius {
		return &v
	}).(VpnServerConfigurationRadiusPtrOutput)
}

// One or more `clientRootCertificate` blocks as defined below.
func (o VpnServerConfigurationRadiusOutput) ClientRootCertificates() VpnServerConfigurationRadiusClientRootCertificateArrayOutput {
	return o.ApplyT(func(v VpnServerConfigurationRadius) []VpnServerConfigurationRadiusClientRootCertificate {
		return v.ClientRootCertificates
	}).(VpnServerConfigurationRadiusClientRootCertificateArrayOutput)
}

// One or more `serverRootCertificate` blocks as defined below.
func (o VpnServerConfigurationRadiusOutput) ServerRootCertificates() VpnServerConfigurationRadiusServerRootCertificateArrayOutput {
	return o.ApplyT(func(v VpnServerConfigurationRadius) []VpnServerConfigurationRadiusServerRootCertificate {
		return v.ServerRootCertificates
	}).(VpnServerConfigurationRadiusServerRootCertificateArrayOutput)
}

// One or more `server` blocks as defined below.
func (o VpnServerConfigurationRadiusOutput) Servers() VpnServerConfigurationRadiusServerArrayOutput {
	return o.ApplyT(func(v VpnServerConfigurationRadius) []VpnServerConfigurationRadiusServer { return v.Servers }).(VpnServerConfigurationRadiusServerArrayOutput)
}

type VpnServerConfigurationRadiusPtrOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationRadiusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnServerConfigurationRadius)(nil)).Elem()
}

func (o VpnServerConfigurationRadiusPtrOutput) ToVpnServerConfigurationRadiusPtrOutput() VpnServerConfigurationRadiusPtrOutput {
	return o
}

func (o VpnServerConfigurationRadiusPtrOutput) ToVpnServerConfigurationRadiusPtrOutputWithContext(ctx context.Context) VpnServerConfigurationRadiusPtrOutput {
	return o
}

func (o VpnServerConfigurationRadiusPtrOutput) Elem() VpnServerConfigurationRadiusOutput {
	return o.ApplyT(func(v *VpnServerConfigurationRadius) VpnServerConfigurationRadius {
		if v != nil {
			return *v
		}
		var ret VpnServerConfigurationRadius
		return ret
	}).(VpnServerConfigurationRadiusOutput)
}

// One or more `clientRootCertificate` blocks as defined below.
func (o VpnServerConfigurationRadiusPtrOutput) ClientRootCertificates() VpnServerConfigurationRadiusClientRootCertificateArrayOutput {
	return o.ApplyT(func(v *VpnServerConfigurationRadius) []VpnServerConfigurationRadiusClientRootCertificate {
		if v == nil {
			return nil
		}
		return v.ClientRootCertificates
	}).(VpnServerConfigurationRadiusClientRootCertificateArrayOutput)
}

// One or more `serverRootCertificate` blocks as defined below.
func (o VpnServerConfigurationRadiusPtrOutput) ServerRootCertificates() VpnServerConfigurationRadiusServerRootCertificateArrayOutput {
	return o.ApplyT(func(v *VpnServerConfigurationRadius) []VpnServerConfigurationRadiusServerRootCertificate {
		if v == nil {
			return nil
		}
		return v.ServerRootCertificates
	}).(VpnServerConfigurationRadiusServerRootCertificateArrayOutput)
}

// One or more `server` blocks as defined below.
func (o VpnServerConfigurationRadiusPtrOutput) Servers() VpnServerConfigurationRadiusServerArrayOutput {
	return o.ApplyT(func(v *VpnServerConfigurationRadius) []VpnServerConfigurationRadiusServer {
		if v == nil {
			return nil
		}
		return v.Servers
	}).(VpnServerConfigurationRadiusServerArrayOutput)
}

type VpnServerConfigurationRadiusClientRootCertificate struct {
	// A name used to uniquely identify this certificate.
	Name string `pulumi:"name"`
	// The Thumbprint of the Certificate.
	Thumbprint string `pulumi:"thumbprint"`
}

// VpnServerConfigurationRadiusClientRootCertificateInput is an input type that accepts VpnServerConfigurationRadiusClientRootCertificateArgs and VpnServerConfigurationRadiusClientRootCertificateOutput values.
// You can construct a concrete instance of `VpnServerConfigurationRadiusClientRootCertificateInput` via:
//
//	VpnServerConfigurationRadiusClientRootCertificateArgs{...}
type VpnServerConfigurationRadiusClientRootCertificateInput interface {
	pulumi.Input

	ToVpnServerConfigurationRadiusClientRootCertificateOutput() VpnServerConfigurationRadiusClientRootCertificateOutput
	ToVpnServerConfigurationRadiusClientRootCertificateOutputWithContext(context.Context) VpnServerConfigurationRadiusClientRootCertificateOutput
}

type VpnServerConfigurationRadiusClientRootCertificateArgs struct {
	// A name used to uniquely identify this certificate.
	Name pulumi.StringInput `pulumi:"name"`
	// The Thumbprint of the Certificate.
	Thumbprint pulumi.StringInput `pulumi:"thumbprint"`
}

func (VpnServerConfigurationRadiusClientRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationRadiusClientRootCertificate)(nil)).Elem()
}

func (i VpnServerConfigurationRadiusClientRootCertificateArgs) ToVpnServerConfigurationRadiusClientRootCertificateOutput() VpnServerConfigurationRadiusClientRootCertificateOutput {
	return i.ToVpnServerConfigurationRadiusClientRootCertificateOutputWithContext(context.Background())
}

func (i VpnServerConfigurationRadiusClientRootCertificateArgs) ToVpnServerConfigurationRadiusClientRootCertificateOutputWithContext(ctx context.Context) VpnServerConfigurationRadiusClientRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationRadiusClientRootCertificateOutput)
}

// VpnServerConfigurationRadiusClientRootCertificateArrayInput is an input type that accepts VpnServerConfigurationRadiusClientRootCertificateArray and VpnServerConfigurationRadiusClientRootCertificateArrayOutput values.
// You can construct a concrete instance of `VpnServerConfigurationRadiusClientRootCertificateArrayInput` via:
//
//	VpnServerConfigurationRadiusClientRootCertificateArray{ VpnServerConfigurationRadiusClientRootCertificateArgs{...} }
type VpnServerConfigurationRadiusClientRootCertificateArrayInput interface {
	pulumi.Input

	ToVpnServerConfigurationRadiusClientRootCertificateArrayOutput() VpnServerConfigurationRadiusClientRootCertificateArrayOutput
	ToVpnServerConfigurationRadiusClientRootCertificateArrayOutputWithContext(context.Context) VpnServerConfigurationRadiusClientRootCertificateArrayOutput
}

type VpnServerConfigurationRadiusClientRootCertificateArray []VpnServerConfigurationRadiusClientRootCertificateInput

func (VpnServerConfigurationRadiusClientRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigurationRadiusClientRootCertificate)(nil)).Elem()
}

func (i VpnServerConfigurationRadiusClientRootCertificateArray) ToVpnServerConfigurationRadiusClientRootCertificateArrayOutput() VpnServerConfigurationRadiusClientRootCertificateArrayOutput {
	return i.ToVpnServerConfigurationRadiusClientRootCertificateArrayOutputWithContext(context.Background())
}

func (i VpnServerConfigurationRadiusClientRootCertificateArray) ToVpnServerConfigurationRadiusClientRootCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigurationRadiusClientRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationRadiusClientRootCertificateArrayOutput)
}

type VpnServerConfigurationRadiusClientRootCertificateOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationRadiusClientRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationRadiusClientRootCertificate)(nil)).Elem()
}

func (o VpnServerConfigurationRadiusClientRootCertificateOutput) ToVpnServerConfigurationRadiusClientRootCertificateOutput() VpnServerConfigurationRadiusClientRootCertificateOutput {
	return o
}

func (o VpnServerConfigurationRadiusClientRootCertificateOutput) ToVpnServerConfigurationRadiusClientRootCertificateOutputWithContext(ctx context.Context) VpnServerConfigurationRadiusClientRootCertificateOutput {
	return o
}

// A name used to uniquely identify this certificate.
func (o VpnServerConfigurationRadiusClientRootCertificateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationRadiusClientRootCertificate) string { return v.Name }).(pulumi.StringOutput)
}

// The Thumbprint of the Certificate.
func (o VpnServerConfigurationRadiusClientRootCertificateOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationRadiusClientRootCertificate) string { return v.Thumbprint }).(pulumi.StringOutput)
}

type VpnServerConfigurationRadiusClientRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationRadiusClientRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigurationRadiusClientRootCertificate)(nil)).Elem()
}

func (o VpnServerConfigurationRadiusClientRootCertificateArrayOutput) ToVpnServerConfigurationRadiusClientRootCertificateArrayOutput() VpnServerConfigurationRadiusClientRootCertificateArrayOutput {
	return o
}

func (o VpnServerConfigurationRadiusClientRootCertificateArrayOutput) ToVpnServerConfigurationRadiusClientRootCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigurationRadiusClientRootCertificateArrayOutput {
	return o
}

func (o VpnServerConfigurationRadiusClientRootCertificateArrayOutput) Index(i pulumi.IntInput) VpnServerConfigurationRadiusClientRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigurationRadiusClientRootCertificate {
		return vs[0].([]VpnServerConfigurationRadiusClientRootCertificate)[vs[1].(int)]
	}).(VpnServerConfigurationRadiusClientRootCertificateOutput)
}

type VpnServerConfigurationRadiusServer struct {
	// The Address of the Radius Server.
	Address string `pulumi:"address"`
	// The Score of the Radius Server determines the priority of the server. Ranges from 1 to 30.
	Score int `pulumi:"score"`
	// The Secret used to communicate with the Radius Server.
	Secret string `pulumi:"secret"`
}

// VpnServerConfigurationRadiusServerInput is an input type that accepts VpnServerConfigurationRadiusServerArgs and VpnServerConfigurationRadiusServerOutput values.
// You can construct a concrete instance of `VpnServerConfigurationRadiusServerInput` via:
//
//	VpnServerConfigurationRadiusServerArgs{...}
type VpnServerConfigurationRadiusServerInput interface {
	pulumi.Input

	ToVpnServerConfigurationRadiusServerOutput() VpnServerConfigurationRadiusServerOutput
	ToVpnServerConfigurationRadiusServerOutputWithContext(context.Context) VpnServerConfigurationRadiusServerOutput
}

type VpnServerConfigurationRadiusServerArgs struct {
	// The Address of the Radius Server.
	Address pulumi.StringInput `pulumi:"address"`
	// The Score of the Radius Server determines the priority of the server. Ranges from 1 to 30.
	Score pulumi.IntInput `pulumi:"score"`
	// The Secret used to communicate with the Radius Server.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (VpnServerConfigurationRadiusServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationRadiusServer)(nil)).Elem()
}

func (i VpnServerConfigurationRadiusServerArgs) ToVpnServerConfigurationRadiusServerOutput() VpnServerConfigurationRadiusServerOutput {
	return i.ToVpnServerConfigurationRadiusServerOutputWithContext(context.Background())
}

func (i VpnServerConfigurationRadiusServerArgs) ToVpnServerConfigurationRadiusServerOutputWithContext(ctx context.Context) VpnServerConfigurationRadiusServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationRadiusServerOutput)
}

// VpnServerConfigurationRadiusServerArrayInput is an input type that accepts VpnServerConfigurationRadiusServerArray and VpnServerConfigurationRadiusServerArrayOutput values.
// You can construct a concrete instance of `VpnServerConfigurationRadiusServerArrayInput` via:
//
//	VpnServerConfigurationRadiusServerArray{ VpnServerConfigurationRadiusServerArgs{...} }
type VpnServerConfigurationRadiusServerArrayInput interface {
	pulumi.Input

	ToVpnServerConfigurationRadiusServerArrayOutput() VpnServerConfigurationRadiusServerArrayOutput
	ToVpnServerConfigurationRadiusServerArrayOutputWithContext(context.Context) VpnServerConfigurationRadiusServerArrayOutput
}

type VpnServerConfigurationRadiusServerArray []VpnServerConfigurationRadiusServerInput

func (VpnServerConfigurationRadiusServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigurationRadiusServer)(nil)).Elem()
}

func (i VpnServerConfigurationRadiusServerArray) ToVpnServerConfigurationRadiusServerArrayOutput() VpnServerConfigurationRadiusServerArrayOutput {
	return i.ToVpnServerConfigurationRadiusServerArrayOutputWithContext(context.Background())
}

func (i VpnServerConfigurationRadiusServerArray) ToVpnServerConfigurationRadiusServerArrayOutputWithContext(ctx context.Context) VpnServerConfigurationRadiusServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationRadiusServerArrayOutput)
}

type VpnServerConfigurationRadiusServerOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationRadiusServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationRadiusServer)(nil)).Elem()
}

func (o VpnServerConfigurationRadiusServerOutput) ToVpnServerConfigurationRadiusServerOutput() VpnServerConfigurationRadiusServerOutput {
	return o
}

func (o VpnServerConfigurationRadiusServerOutput) ToVpnServerConfigurationRadiusServerOutputWithContext(ctx context.Context) VpnServerConfigurationRadiusServerOutput {
	return o
}

// The Address of the Radius Server.
func (o VpnServerConfigurationRadiusServerOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationRadiusServer) string { return v.Address }).(pulumi.StringOutput)
}

// The Score of the Radius Server determines the priority of the server. Ranges from 1 to 30.
func (o VpnServerConfigurationRadiusServerOutput) Score() pulumi.IntOutput {
	return o.ApplyT(func(v VpnServerConfigurationRadiusServer) int { return v.Score }).(pulumi.IntOutput)
}

// The Secret used to communicate with the Radius Server.
func (o VpnServerConfigurationRadiusServerOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationRadiusServer) string { return v.Secret }).(pulumi.StringOutput)
}

type VpnServerConfigurationRadiusServerArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationRadiusServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigurationRadiusServer)(nil)).Elem()
}

func (o VpnServerConfigurationRadiusServerArrayOutput) ToVpnServerConfigurationRadiusServerArrayOutput() VpnServerConfigurationRadiusServerArrayOutput {
	return o
}

func (o VpnServerConfigurationRadiusServerArrayOutput) ToVpnServerConfigurationRadiusServerArrayOutputWithContext(ctx context.Context) VpnServerConfigurationRadiusServerArrayOutput {
	return o
}

func (o VpnServerConfigurationRadiusServerArrayOutput) Index(i pulumi.IntInput) VpnServerConfigurationRadiusServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigurationRadiusServer {
		return vs[0].([]VpnServerConfigurationRadiusServer)[vs[1].(int)]
	}).(VpnServerConfigurationRadiusServerOutput)
}

type VpnServerConfigurationRadiusServerRootCertificate struct {
	// A name used to uniquely identify this certificate.
	Name string `pulumi:"name"`
	// The Public Key Data associated with the Certificate.
	PublicCertData string `pulumi:"publicCertData"`
}

// VpnServerConfigurationRadiusServerRootCertificateInput is an input type that accepts VpnServerConfigurationRadiusServerRootCertificateArgs and VpnServerConfigurationRadiusServerRootCertificateOutput values.
// You can construct a concrete instance of `VpnServerConfigurationRadiusServerRootCertificateInput` via:
//
//	VpnServerConfigurationRadiusServerRootCertificateArgs{...}
type VpnServerConfigurationRadiusServerRootCertificateInput interface {
	pulumi.Input

	ToVpnServerConfigurationRadiusServerRootCertificateOutput() VpnServerConfigurationRadiusServerRootCertificateOutput
	ToVpnServerConfigurationRadiusServerRootCertificateOutputWithContext(context.Context) VpnServerConfigurationRadiusServerRootCertificateOutput
}

type VpnServerConfigurationRadiusServerRootCertificateArgs struct {
	// A name used to uniquely identify this certificate.
	Name pulumi.StringInput `pulumi:"name"`
	// The Public Key Data associated with the Certificate.
	PublicCertData pulumi.StringInput `pulumi:"publicCertData"`
}

func (VpnServerConfigurationRadiusServerRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationRadiusServerRootCertificate)(nil)).Elem()
}

func (i VpnServerConfigurationRadiusServerRootCertificateArgs) ToVpnServerConfigurationRadiusServerRootCertificateOutput() VpnServerConfigurationRadiusServerRootCertificateOutput {
	return i.ToVpnServerConfigurationRadiusServerRootCertificateOutputWithContext(context.Background())
}

func (i VpnServerConfigurationRadiusServerRootCertificateArgs) ToVpnServerConfigurationRadiusServerRootCertificateOutputWithContext(ctx context.Context) VpnServerConfigurationRadiusServerRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationRadiusServerRootCertificateOutput)
}

// VpnServerConfigurationRadiusServerRootCertificateArrayInput is an input type that accepts VpnServerConfigurationRadiusServerRootCertificateArray and VpnServerConfigurationRadiusServerRootCertificateArrayOutput values.
// You can construct a concrete instance of `VpnServerConfigurationRadiusServerRootCertificateArrayInput` via:
//
//	VpnServerConfigurationRadiusServerRootCertificateArray{ VpnServerConfigurationRadiusServerRootCertificateArgs{...} }
type VpnServerConfigurationRadiusServerRootCertificateArrayInput interface {
	pulumi.Input

	ToVpnServerConfigurationRadiusServerRootCertificateArrayOutput() VpnServerConfigurationRadiusServerRootCertificateArrayOutput
	ToVpnServerConfigurationRadiusServerRootCertificateArrayOutputWithContext(context.Context) VpnServerConfigurationRadiusServerRootCertificateArrayOutput
}

type VpnServerConfigurationRadiusServerRootCertificateArray []VpnServerConfigurationRadiusServerRootCertificateInput

func (VpnServerConfigurationRadiusServerRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigurationRadiusServerRootCertificate)(nil)).Elem()
}

func (i VpnServerConfigurationRadiusServerRootCertificateArray) ToVpnServerConfigurationRadiusServerRootCertificateArrayOutput() VpnServerConfigurationRadiusServerRootCertificateArrayOutput {
	return i.ToVpnServerConfigurationRadiusServerRootCertificateArrayOutputWithContext(context.Background())
}

func (i VpnServerConfigurationRadiusServerRootCertificateArray) ToVpnServerConfigurationRadiusServerRootCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigurationRadiusServerRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigurationRadiusServerRootCertificateArrayOutput)
}

type VpnServerConfigurationRadiusServerRootCertificateOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationRadiusServerRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigurationRadiusServerRootCertificate)(nil)).Elem()
}

func (o VpnServerConfigurationRadiusServerRootCertificateOutput) ToVpnServerConfigurationRadiusServerRootCertificateOutput() VpnServerConfigurationRadiusServerRootCertificateOutput {
	return o
}

func (o VpnServerConfigurationRadiusServerRootCertificateOutput) ToVpnServerConfigurationRadiusServerRootCertificateOutputWithContext(ctx context.Context) VpnServerConfigurationRadiusServerRootCertificateOutput {
	return o
}

// A name used to uniquely identify this certificate.
func (o VpnServerConfigurationRadiusServerRootCertificateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationRadiusServerRootCertificate) string { return v.Name }).(pulumi.StringOutput)
}

// The Public Key Data associated with the Certificate.
func (o VpnServerConfigurationRadiusServerRootCertificateOutput) PublicCertData() pulumi.StringOutput {
	return o.ApplyT(func(v VpnServerConfigurationRadiusServerRootCertificate) string { return v.PublicCertData }).(pulumi.StringOutput)
}

type VpnServerConfigurationRadiusServerRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigurationRadiusServerRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigurationRadiusServerRootCertificate)(nil)).Elem()
}

func (o VpnServerConfigurationRadiusServerRootCertificateArrayOutput) ToVpnServerConfigurationRadiusServerRootCertificateArrayOutput() VpnServerConfigurationRadiusServerRootCertificateArrayOutput {
	return o
}

func (o VpnServerConfigurationRadiusServerRootCertificateArrayOutput) ToVpnServerConfigurationRadiusServerRootCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigurationRadiusServerRootCertificateArrayOutput {
	return o
}

func (o VpnServerConfigurationRadiusServerRootCertificateArrayOutput) Index(i pulumi.IntInput) VpnServerConfigurationRadiusServerRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigurationRadiusServerRootCertificate {
		return vs[0].([]VpnServerConfigurationRadiusServerRootCertificate)[vs[1].(int)]
	}).(VpnServerConfigurationRadiusServerRootCertificateOutput)
}

type VpnSiteLink struct {
	// A `bgp` block as defined above.
	//
	// > **NOTE:** The `link.bgp` has to be set when the `addressCidrs` isn't specified.
	Bgp *VpnSiteLinkBgp `pulumi:"bgp"`
	// The FQDN of this VPN Site Link.
	Fqdn *string `pulumi:"fqdn"`
	// The ID of the VPN Site Link.
	Id *string `pulumi:"id"`
	// The IP address of this VPN Site Link.
	//
	// > **NOTE:** Either `fqdn` or `ipAddress` should be specified.
	IpAddress *string `pulumi:"ipAddress"`
	// The name which should be used for this VPN Site Link.
	Name string `pulumi:"name"`
	// The name of the physical link at the VPN Site. Example: `ATT`, `Verizon`.
	ProviderName *string `pulumi:"providerName"`
	// The speed of the VPN device at the branch location in unit of mbps. Defaults to `0`.
	SpeedInMbps *int `pulumi:"speedInMbps"`
}

// VpnSiteLinkInput is an input type that accepts VpnSiteLinkArgs and VpnSiteLinkOutput values.
// You can construct a concrete instance of `VpnSiteLinkInput` via:
//
//	VpnSiteLinkArgs{...}
type VpnSiteLinkInput interface {
	pulumi.Input

	ToVpnSiteLinkOutput() VpnSiteLinkOutput
	ToVpnSiteLinkOutputWithContext(context.Context) VpnSiteLinkOutput
}

type VpnSiteLinkArgs struct {
	// A `bgp` block as defined above.
	//
	// > **NOTE:** The `link.bgp` has to be set when the `addressCidrs` isn't specified.
	Bgp VpnSiteLinkBgpPtrInput `pulumi:"bgp"`
	// The FQDN of this VPN Site Link.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// The ID of the VPN Site Link.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The IP address of this VPN Site Link.
	//
	// > **NOTE:** Either `fqdn` or `ipAddress` should be specified.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The name which should be used for this VPN Site Link.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the physical link at the VPN Site. Example: `ATT`, `Verizon`.
	ProviderName pulumi.StringPtrInput `pulumi:"providerName"`
	// The speed of the VPN device at the branch location in unit of mbps. Defaults to `0`.
	SpeedInMbps pulumi.IntPtrInput `pulumi:"speedInMbps"`
}

func (VpnSiteLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteLink)(nil)).Elem()
}

func (i VpnSiteLinkArgs) ToVpnSiteLinkOutput() VpnSiteLinkOutput {
	return i.ToVpnSiteLinkOutputWithContext(context.Background())
}

func (i VpnSiteLinkArgs) ToVpnSiteLinkOutputWithContext(ctx context.Context) VpnSiteLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSiteLinkOutput)
}

// VpnSiteLinkArrayInput is an input type that accepts VpnSiteLinkArray and VpnSiteLinkArrayOutput values.
// You can construct a concrete instance of `VpnSiteLinkArrayInput` via:
//
//	VpnSiteLinkArray{ VpnSiteLinkArgs{...} }
type VpnSiteLinkArrayInput interface {
	pulumi.Input

	ToVpnSiteLinkArrayOutput() VpnSiteLinkArrayOutput
	ToVpnSiteLinkArrayOutputWithContext(context.Context) VpnSiteLinkArrayOutput
}

type VpnSiteLinkArray []VpnSiteLinkInput

func (VpnSiteLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnSiteLink)(nil)).Elem()
}

func (i VpnSiteLinkArray) ToVpnSiteLinkArrayOutput() VpnSiteLinkArrayOutput {
	return i.ToVpnSiteLinkArrayOutputWithContext(context.Background())
}

func (i VpnSiteLinkArray) ToVpnSiteLinkArrayOutputWithContext(ctx context.Context) VpnSiteLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSiteLinkArrayOutput)
}

type VpnSiteLinkOutput struct{ *pulumi.OutputState }

func (VpnSiteLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteLink)(nil)).Elem()
}

func (o VpnSiteLinkOutput) ToVpnSiteLinkOutput() VpnSiteLinkOutput {
	return o
}

func (o VpnSiteLinkOutput) ToVpnSiteLinkOutputWithContext(ctx context.Context) VpnSiteLinkOutput {
	return o
}

// A `bgp` block as defined above.
//
// > **NOTE:** The `link.bgp` has to be set when the `addressCidrs` isn't specified.
func (o VpnSiteLinkOutput) Bgp() VpnSiteLinkBgpPtrOutput {
	return o.ApplyT(func(v VpnSiteLink) *VpnSiteLinkBgp { return v.Bgp }).(VpnSiteLinkBgpPtrOutput)
}

// The FQDN of this VPN Site Link.
func (o VpnSiteLinkOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLink) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The ID of the VPN Site Link.
func (o VpnSiteLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLink) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The IP address of this VPN Site Link.
//
// > **NOTE:** Either `fqdn` or `ipAddress` should be specified.
func (o VpnSiteLinkOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLink) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The name which should be used for this VPN Site Link.
func (o VpnSiteLinkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VpnSiteLink) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the physical link at the VPN Site. Example: `ATT`, `Verizon`.
func (o VpnSiteLinkOutput) ProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLink) *string { return v.ProviderName }).(pulumi.StringPtrOutput)
}

// The speed of the VPN device at the branch location in unit of mbps. Defaults to `0`.
func (o VpnSiteLinkOutput) SpeedInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnSiteLink) *int { return v.SpeedInMbps }).(pulumi.IntPtrOutput)
}

type VpnSiteLinkArrayOutput struct{ *pulumi.OutputState }

func (VpnSiteLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnSiteLink)(nil)).Elem()
}

func (o VpnSiteLinkArrayOutput) ToVpnSiteLinkArrayOutput() VpnSiteLinkArrayOutput {
	return o
}

func (o VpnSiteLinkArrayOutput) ToVpnSiteLinkArrayOutputWithContext(ctx context.Context) VpnSiteLinkArrayOutput {
	return o
}

func (o VpnSiteLinkArrayOutput) Index(i pulumi.IntInput) VpnSiteLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnSiteLink {
		return vs[0].([]VpnSiteLink)[vs[1].(int)]
	}).(VpnSiteLinkOutput)
}

type VpnSiteLinkBgp struct {
	// The BGP speaker's ASN.
	Asn int `pulumi:"asn"`
	// The BGP peering IP address.
	PeeringAddress string `pulumi:"peeringAddress"`
}

// VpnSiteLinkBgpInput is an input type that accepts VpnSiteLinkBgpArgs and VpnSiteLinkBgpOutput values.
// You can construct a concrete instance of `VpnSiteLinkBgpInput` via:
//
//	VpnSiteLinkBgpArgs{...}
type VpnSiteLinkBgpInput interface {
	pulumi.Input

	ToVpnSiteLinkBgpOutput() VpnSiteLinkBgpOutput
	ToVpnSiteLinkBgpOutputWithContext(context.Context) VpnSiteLinkBgpOutput
}

type VpnSiteLinkBgpArgs struct {
	// The BGP speaker's ASN.
	Asn pulumi.IntInput `pulumi:"asn"`
	// The BGP peering IP address.
	PeeringAddress pulumi.StringInput `pulumi:"peeringAddress"`
}

func (VpnSiteLinkBgpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteLinkBgp)(nil)).Elem()
}

func (i VpnSiteLinkBgpArgs) ToVpnSiteLinkBgpOutput() VpnSiteLinkBgpOutput {
	return i.ToVpnSiteLinkBgpOutputWithContext(context.Background())
}

func (i VpnSiteLinkBgpArgs) ToVpnSiteLinkBgpOutputWithContext(ctx context.Context) VpnSiteLinkBgpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSiteLinkBgpOutput)
}

func (i VpnSiteLinkBgpArgs) ToVpnSiteLinkBgpPtrOutput() VpnSiteLinkBgpPtrOutput {
	return i.ToVpnSiteLinkBgpPtrOutputWithContext(context.Background())
}

func (i VpnSiteLinkBgpArgs) ToVpnSiteLinkBgpPtrOutputWithContext(ctx context.Context) VpnSiteLinkBgpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSiteLinkBgpOutput).ToVpnSiteLinkBgpPtrOutputWithContext(ctx)
}

// VpnSiteLinkBgpPtrInput is an input type that accepts VpnSiteLinkBgpArgs, VpnSiteLinkBgpPtr and VpnSiteLinkBgpPtrOutput values.
// You can construct a concrete instance of `VpnSiteLinkBgpPtrInput` via:
//
//	        VpnSiteLinkBgpArgs{...}
//
//	or:
//
//	        nil
type VpnSiteLinkBgpPtrInput interface {
	pulumi.Input

	ToVpnSiteLinkBgpPtrOutput() VpnSiteLinkBgpPtrOutput
	ToVpnSiteLinkBgpPtrOutputWithContext(context.Context) VpnSiteLinkBgpPtrOutput
}

type vpnSiteLinkBgpPtrType VpnSiteLinkBgpArgs

func VpnSiteLinkBgpPtr(v *VpnSiteLinkBgpArgs) VpnSiteLinkBgpPtrInput {
	return (*vpnSiteLinkBgpPtrType)(v)
}

func (*vpnSiteLinkBgpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnSiteLinkBgp)(nil)).Elem()
}

func (i *vpnSiteLinkBgpPtrType) ToVpnSiteLinkBgpPtrOutput() VpnSiteLinkBgpPtrOutput {
	return i.ToVpnSiteLinkBgpPtrOutputWithContext(context.Background())
}

func (i *vpnSiteLinkBgpPtrType) ToVpnSiteLinkBgpPtrOutputWithContext(ctx context.Context) VpnSiteLinkBgpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSiteLinkBgpPtrOutput)
}

type VpnSiteLinkBgpOutput struct{ *pulumi.OutputState }

func (VpnSiteLinkBgpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteLinkBgp)(nil)).Elem()
}

func (o VpnSiteLinkBgpOutput) ToVpnSiteLinkBgpOutput() VpnSiteLinkBgpOutput {
	return o
}

func (o VpnSiteLinkBgpOutput) ToVpnSiteLinkBgpOutputWithContext(ctx context.Context) VpnSiteLinkBgpOutput {
	return o
}

func (o VpnSiteLinkBgpOutput) ToVpnSiteLinkBgpPtrOutput() VpnSiteLinkBgpPtrOutput {
	return o.ToVpnSiteLinkBgpPtrOutputWithContext(context.Background())
}

func (o VpnSiteLinkBgpOutput) ToVpnSiteLinkBgpPtrOutputWithContext(ctx context.Context) VpnSiteLinkBgpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpnSiteLinkBgp) *VpnSiteLinkBgp {
		return &v
	}).(VpnSiteLinkBgpPtrOutput)
}

// The BGP speaker's ASN.
func (o VpnSiteLinkBgpOutput) Asn() pulumi.IntOutput {
	return o.ApplyT(func(v VpnSiteLinkBgp) int { return v.Asn }).(pulumi.IntOutput)
}

// The BGP peering IP address.
func (o VpnSiteLinkBgpOutput) PeeringAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VpnSiteLinkBgp) string { return v.PeeringAddress }).(pulumi.StringOutput)
}

type VpnSiteLinkBgpPtrOutput struct{ *pulumi.OutputState }

func (VpnSiteLinkBgpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnSiteLinkBgp)(nil)).Elem()
}

func (o VpnSiteLinkBgpPtrOutput) ToVpnSiteLinkBgpPtrOutput() VpnSiteLinkBgpPtrOutput {
	return o
}

func (o VpnSiteLinkBgpPtrOutput) ToVpnSiteLinkBgpPtrOutputWithContext(ctx context.Context) VpnSiteLinkBgpPtrOutput {
	return o
}

func (o VpnSiteLinkBgpPtrOutput) Elem() VpnSiteLinkBgpOutput {
	return o.ApplyT(func(v *VpnSiteLinkBgp) VpnSiteLinkBgp {
		if v != nil {
			return *v
		}
		var ret VpnSiteLinkBgp
		return ret
	}).(VpnSiteLinkBgpOutput)
}

// The BGP speaker's ASN.
func (o VpnSiteLinkBgpPtrOutput) Asn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnSiteLinkBgp) *int {
		if v == nil {
			return nil
		}
		return &v.Asn
	}).(pulumi.IntPtrOutput)
}

// The BGP peering IP address.
func (o VpnSiteLinkBgpPtrOutput) PeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnSiteLinkBgp) *string {
		if v == nil {
			return nil
		}
		return &v.PeeringAddress
	}).(pulumi.StringPtrOutput)
}

type VpnSiteO365Policy struct {
	// A `trafficCategory` block as defined above.
	TrafficCategory *VpnSiteO365PolicyTrafficCategory `pulumi:"trafficCategory"`
}

// VpnSiteO365PolicyInput is an input type that accepts VpnSiteO365PolicyArgs and VpnSiteO365PolicyOutput values.
// You can construct a concrete instance of `VpnSiteO365PolicyInput` via:
//
//	VpnSiteO365PolicyArgs{...}
type VpnSiteO365PolicyInput interface {
	pulumi.Input

	ToVpnSiteO365PolicyOutput() VpnSiteO365PolicyOutput
	ToVpnSiteO365PolicyOutputWithContext(context.Context) VpnSiteO365PolicyOutput
}

type VpnSiteO365PolicyArgs struct {
	// A `trafficCategory` block as defined above.
	TrafficCategory VpnSiteO365PolicyTrafficCategoryPtrInput `pulumi:"trafficCategory"`
}

func (VpnSiteO365PolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteO365Policy)(nil)).Elem()
}

func (i VpnSiteO365PolicyArgs) ToVpnSiteO365PolicyOutput() VpnSiteO365PolicyOutput {
	return i.ToVpnSiteO365PolicyOutputWithContext(context.Background())
}

func (i VpnSiteO365PolicyArgs) ToVpnSiteO365PolicyOutputWithContext(ctx context.Context) VpnSiteO365PolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSiteO365PolicyOutput)
}

func (i VpnSiteO365PolicyArgs) ToVpnSiteO365PolicyPtrOutput() VpnSiteO365PolicyPtrOutput {
	return i.ToVpnSiteO365PolicyPtrOutputWithContext(context.Background())
}

func (i VpnSiteO365PolicyArgs) ToVpnSiteO365PolicyPtrOutputWithContext(ctx context.Context) VpnSiteO365PolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSiteO365PolicyOutput).ToVpnSiteO365PolicyPtrOutputWithContext(ctx)
}

// VpnSiteO365PolicyPtrInput is an input type that accepts VpnSiteO365PolicyArgs, VpnSiteO365PolicyPtr and VpnSiteO365PolicyPtrOutput values.
// You can construct a concrete instance of `VpnSiteO365PolicyPtrInput` via:
//
//	        VpnSiteO365PolicyArgs{...}
//
//	or:
//
//	        nil
type VpnSiteO365PolicyPtrInput interface {
	pulumi.Input

	ToVpnSiteO365PolicyPtrOutput() VpnSiteO365PolicyPtrOutput
	ToVpnSiteO365PolicyPtrOutputWithContext(context.Context) VpnSiteO365PolicyPtrOutput
}

type vpnSiteO365PolicyPtrType VpnSiteO365PolicyArgs

func VpnSiteO365PolicyPtr(v *VpnSiteO365PolicyArgs) VpnSiteO365PolicyPtrInput {
	return (*vpnSiteO365PolicyPtrType)(v)
}

func (*vpnSiteO365PolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnSiteO365Policy)(nil)).Elem()
}

func (i *vpnSiteO365PolicyPtrType) ToVpnSiteO365PolicyPtrOutput() VpnSiteO365PolicyPtrOutput {
	return i.ToVpnSiteO365PolicyPtrOutputWithContext(context.Background())
}

func (i *vpnSiteO365PolicyPtrType) ToVpnSiteO365PolicyPtrOutputWithContext(ctx context.Context) VpnSiteO365PolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSiteO365PolicyPtrOutput)
}

type VpnSiteO365PolicyOutput struct{ *pulumi.OutputState }

func (VpnSiteO365PolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteO365Policy)(nil)).Elem()
}

func (o VpnSiteO365PolicyOutput) ToVpnSiteO365PolicyOutput() VpnSiteO365PolicyOutput {
	return o
}

func (o VpnSiteO365PolicyOutput) ToVpnSiteO365PolicyOutputWithContext(ctx context.Context) VpnSiteO365PolicyOutput {
	return o
}

func (o VpnSiteO365PolicyOutput) ToVpnSiteO365PolicyPtrOutput() VpnSiteO365PolicyPtrOutput {
	return o.ToVpnSiteO365PolicyPtrOutputWithContext(context.Background())
}

func (o VpnSiteO365PolicyOutput) ToVpnSiteO365PolicyPtrOutputWithContext(ctx context.Context) VpnSiteO365PolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpnSiteO365Policy) *VpnSiteO365Policy {
		return &v
	}).(VpnSiteO365PolicyPtrOutput)
}

// A `trafficCategory` block as defined above.
func (o VpnSiteO365PolicyOutput) TrafficCategory() VpnSiteO365PolicyTrafficCategoryPtrOutput {
	return o.ApplyT(func(v VpnSiteO365Policy) *VpnSiteO365PolicyTrafficCategory { return v.TrafficCategory }).(VpnSiteO365PolicyTrafficCategoryPtrOutput)
}

type VpnSiteO365PolicyPtrOutput struct{ *pulumi.OutputState }

func (VpnSiteO365PolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnSiteO365Policy)(nil)).Elem()
}

func (o VpnSiteO365PolicyPtrOutput) ToVpnSiteO365PolicyPtrOutput() VpnSiteO365PolicyPtrOutput {
	return o
}

func (o VpnSiteO365PolicyPtrOutput) ToVpnSiteO365PolicyPtrOutputWithContext(ctx context.Context) VpnSiteO365PolicyPtrOutput {
	return o
}

func (o VpnSiteO365PolicyPtrOutput) Elem() VpnSiteO365PolicyOutput {
	return o.ApplyT(func(v *VpnSiteO365Policy) VpnSiteO365Policy {
		if v != nil {
			return *v
		}
		var ret VpnSiteO365Policy
		return ret
	}).(VpnSiteO365PolicyOutput)
}

// A `trafficCategory` block as defined above.
func (o VpnSiteO365PolicyPtrOutput) TrafficCategory() VpnSiteO365PolicyTrafficCategoryPtrOutput {
	return o.ApplyT(func(v *VpnSiteO365Policy) *VpnSiteO365PolicyTrafficCategory {
		if v == nil {
			return nil
		}
		return v.TrafficCategory
	}).(VpnSiteO365PolicyTrafficCategoryPtrOutput)
}

type VpnSiteO365PolicyTrafficCategory struct {
	// Is allow endpoint enabled? The `Allow` endpoint is required for connectivity to specific O365 services and features, but are not as sensitive to network performance and latency as other endpoint types. Defaults to `false`.
	AllowEndpointEnabled *bool `pulumi:"allowEndpointEnabled"`
	// Is default endpoint enabled? The `Default` endpoint represents O365 services and dependencies that do not require any optimization, and can be treated by customer networks as normal Internet bound traffic. Defaults to `false`.
	DefaultEndpointEnabled *bool `pulumi:"defaultEndpointEnabled"`
	// Is optimize endpoint enabled? The `Optimize` endpoint is required for connectivity to every O365 service and represents the O365 scenario that is the most sensitive to network performance, latency, and availability. Defaults to `false`.
	OptimizeEndpointEnabled *bool `pulumi:"optimizeEndpointEnabled"`
}

// VpnSiteO365PolicyTrafficCategoryInput is an input type that accepts VpnSiteO365PolicyTrafficCategoryArgs and VpnSiteO365PolicyTrafficCategoryOutput values.
// You can construct a concrete instance of `VpnSiteO365PolicyTrafficCategoryInput` via:
//
//	VpnSiteO365PolicyTrafficCategoryArgs{...}
type VpnSiteO365PolicyTrafficCategoryInput interface {
	pulumi.Input

	ToVpnSiteO365PolicyTrafficCategoryOutput() VpnSiteO365PolicyTrafficCategoryOutput
	ToVpnSiteO365PolicyTrafficCategoryOutputWithContext(context.Context) VpnSiteO365PolicyTrafficCategoryOutput
}

type VpnSiteO365PolicyTrafficCategoryArgs struct {
	// Is allow endpoint enabled? The `Allow` endpoint is required for connectivity to specific O365 services and features, but are not as sensitive to network performance and latency as other endpoint types. Defaults to `false`.
	AllowEndpointEnabled pulumi.BoolPtrInput `pulumi:"allowEndpointEnabled"`
	// Is default endpoint enabled? The `Default` endpoint represents O365 services and dependencies that do not require any optimization, and can be treated by customer networks as normal Internet bound traffic. Defaults to `false`.
	DefaultEndpointEnabled pulumi.BoolPtrInput `pulumi:"defaultEndpointEnabled"`
	// Is optimize endpoint enabled? The `Optimize` endpoint is required for connectivity to every O365 service and represents the O365 scenario that is the most sensitive to network performance, latency, and availability. Defaults to `false`.
	OptimizeEndpointEnabled pulumi.BoolPtrInput `pulumi:"optimizeEndpointEnabled"`
}

func (VpnSiteO365PolicyTrafficCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteO365PolicyTrafficCategory)(nil)).Elem()
}

func (i VpnSiteO365PolicyTrafficCategoryArgs) ToVpnSiteO365PolicyTrafficCategoryOutput() VpnSiteO365PolicyTrafficCategoryOutput {
	return i.ToVpnSiteO365PolicyTrafficCategoryOutputWithContext(context.Background())
}

func (i VpnSiteO365PolicyTrafficCategoryArgs) ToVpnSiteO365PolicyTrafficCategoryOutputWithContext(ctx context.Context) VpnSiteO365PolicyTrafficCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSiteO365PolicyTrafficCategoryOutput)
}

func (i VpnSiteO365PolicyTrafficCategoryArgs) ToVpnSiteO365PolicyTrafficCategoryPtrOutput() VpnSiteO365PolicyTrafficCategoryPtrOutput {
	return i.ToVpnSiteO365PolicyTrafficCategoryPtrOutputWithContext(context.Background())
}

func (i VpnSiteO365PolicyTrafficCategoryArgs) ToVpnSiteO365PolicyTrafficCategoryPtrOutputWithContext(ctx context.Context) VpnSiteO365PolicyTrafficCategoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSiteO365PolicyTrafficCategoryOutput).ToVpnSiteO365PolicyTrafficCategoryPtrOutputWithContext(ctx)
}

// VpnSiteO365PolicyTrafficCategoryPtrInput is an input type that accepts VpnSiteO365PolicyTrafficCategoryArgs, VpnSiteO365PolicyTrafficCategoryPtr and VpnSiteO365PolicyTrafficCategoryPtrOutput values.
// You can construct a concrete instance of `VpnSiteO365PolicyTrafficCategoryPtrInput` via:
//
//	        VpnSiteO365PolicyTrafficCategoryArgs{...}
//
//	or:
//
//	        nil
type VpnSiteO365PolicyTrafficCategoryPtrInput interface {
	pulumi.Input

	ToVpnSiteO365PolicyTrafficCategoryPtrOutput() VpnSiteO365PolicyTrafficCategoryPtrOutput
	ToVpnSiteO365PolicyTrafficCategoryPtrOutputWithContext(context.Context) VpnSiteO365PolicyTrafficCategoryPtrOutput
}

type vpnSiteO365PolicyTrafficCategoryPtrType VpnSiteO365PolicyTrafficCategoryArgs

func VpnSiteO365PolicyTrafficCategoryPtr(v *VpnSiteO365PolicyTrafficCategoryArgs) VpnSiteO365PolicyTrafficCategoryPtrInput {
	return (*vpnSiteO365PolicyTrafficCategoryPtrType)(v)
}

func (*vpnSiteO365PolicyTrafficCategoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnSiteO365PolicyTrafficCategory)(nil)).Elem()
}

func (i *vpnSiteO365PolicyTrafficCategoryPtrType) ToVpnSiteO365PolicyTrafficCategoryPtrOutput() VpnSiteO365PolicyTrafficCategoryPtrOutput {
	return i.ToVpnSiteO365PolicyTrafficCategoryPtrOutputWithContext(context.Background())
}

func (i *vpnSiteO365PolicyTrafficCategoryPtrType) ToVpnSiteO365PolicyTrafficCategoryPtrOutputWithContext(ctx context.Context) VpnSiteO365PolicyTrafficCategoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSiteO365PolicyTrafficCategoryPtrOutput)
}

type VpnSiteO365PolicyTrafficCategoryOutput struct{ *pulumi.OutputState }

func (VpnSiteO365PolicyTrafficCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteO365PolicyTrafficCategory)(nil)).Elem()
}

func (o VpnSiteO365PolicyTrafficCategoryOutput) ToVpnSiteO365PolicyTrafficCategoryOutput() VpnSiteO365PolicyTrafficCategoryOutput {
	return o
}

func (o VpnSiteO365PolicyTrafficCategoryOutput) ToVpnSiteO365PolicyTrafficCategoryOutputWithContext(ctx context.Context) VpnSiteO365PolicyTrafficCategoryOutput {
	return o
}

func (o VpnSiteO365PolicyTrafficCategoryOutput) ToVpnSiteO365PolicyTrafficCategoryPtrOutput() VpnSiteO365PolicyTrafficCategoryPtrOutput {
	return o.ToVpnSiteO365PolicyTrafficCategoryPtrOutputWithContext(context.Background())
}

func (o VpnSiteO365PolicyTrafficCategoryOutput) ToVpnSiteO365PolicyTrafficCategoryPtrOutputWithContext(ctx context.Context) VpnSiteO365PolicyTrafficCategoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpnSiteO365PolicyTrafficCategory) *VpnSiteO365PolicyTrafficCategory {
		return &v
	}).(VpnSiteO365PolicyTrafficCategoryPtrOutput)
}

// Is allow endpoint enabled? The `Allow` endpoint is required for connectivity to specific O365 services and features, but are not as sensitive to network performance and latency as other endpoint types. Defaults to `false`.
func (o VpnSiteO365PolicyTrafficCategoryOutput) AllowEndpointEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnSiteO365PolicyTrafficCategory) *bool { return v.AllowEndpointEnabled }).(pulumi.BoolPtrOutput)
}

// Is default endpoint enabled? The `Default` endpoint represents O365 services and dependencies that do not require any optimization, and can be treated by customer networks as normal Internet bound traffic. Defaults to `false`.
func (o VpnSiteO365PolicyTrafficCategoryOutput) DefaultEndpointEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnSiteO365PolicyTrafficCategory) *bool { return v.DefaultEndpointEnabled }).(pulumi.BoolPtrOutput)
}

// Is optimize endpoint enabled? The `Optimize` endpoint is required for connectivity to every O365 service and represents the O365 scenario that is the most sensitive to network performance, latency, and availability. Defaults to `false`.
func (o VpnSiteO365PolicyTrafficCategoryOutput) OptimizeEndpointEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnSiteO365PolicyTrafficCategory) *bool { return v.OptimizeEndpointEnabled }).(pulumi.BoolPtrOutput)
}

type VpnSiteO365PolicyTrafficCategoryPtrOutput struct{ *pulumi.OutputState }

func (VpnSiteO365PolicyTrafficCategoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnSiteO365PolicyTrafficCategory)(nil)).Elem()
}

func (o VpnSiteO365PolicyTrafficCategoryPtrOutput) ToVpnSiteO365PolicyTrafficCategoryPtrOutput() VpnSiteO365PolicyTrafficCategoryPtrOutput {
	return o
}

func (o VpnSiteO365PolicyTrafficCategoryPtrOutput) ToVpnSiteO365PolicyTrafficCategoryPtrOutputWithContext(ctx context.Context) VpnSiteO365PolicyTrafficCategoryPtrOutput {
	return o
}

func (o VpnSiteO365PolicyTrafficCategoryPtrOutput) Elem() VpnSiteO365PolicyTrafficCategoryOutput {
	return o.ApplyT(func(v *VpnSiteO365PolicyTrafficCategory) VpnSiteO365PolicyTrafficCategory {
		if v != nil {
			return *v
		}
		var ret VpnSiteO365PolicyTrafficCategory
		return ret
	}).(VpnSiteO365PolicyTrafficCategoryOutput)
}

// Is allow endpoint enabled? The `Allow` endpoint is required for connectivity to specific O365 services and features, but are not as sensitive to network performance and latency as other endpoint types. Defaults to `false`.
func (o VpnSiteO365PolicyTrafficCategoryPtrOutput) AllowEndpointEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnSiteO365PolicyTrafficCategory) *bool {
		if v == nil {
			return nil
		}
		return v.AllowEndpointEnabled
	}).(pulumi.BoolPtrOutput)
}

// Is default endpoint enabled? The `Default` endpoint represents O365 services and dependencies that do not require any optimization, and can be treated by customer networks as normal Internet bound traffic. Defaults to `false`.
func (o VpnSiteO365PolicyTrafficCategoryPtrOutput) DefaultEndpointEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnSiteO365PolicyTrafficCategory) *bool {
		if v == nil {
			return nil
		}
		return v.DefaultEndpointEnabled
	}).(pulumi.BoolPtrOutput)
}

// Is optimize endpoint enabled? The `Optimize` endpoint is required for connectivity to every O365 service and represents the O365 scenario that is the most sensitive to network performance, latency, and availability. Defaults to `false`.
func (o VpnSiteO365PolicyTrafficCategoryPtrOutput) OptimizeEndpointEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnSiteO365PolicyTrafficCategory) *bool {
		if v == nil {
			return nil
		}
		return v.OptimizeEndpointEnabled
	}).(pulumi.BoolPtrOutput)
}

type GetApplicationGatewayAuthenticationCertificate struct {
	// The ID of the Rewrite Rule Set
	Id string `pulumi:"id"`
	// The name of this Application Gateway.
	Name string `pulumi:"name"`
}

// GetApplicationGatewayAuthenticationCertificateInput is an input type that accepts GetApplicationGatewayAuthenticationCertificateArgs and GetApplicationGatewayAuthenticationCertificateOutput values.
// You can construct a concrete instance of `GetApplicationGatewayAuthenticationCertificateInput` via:
//
//	GetApplicationGatewayAuthenticationCertificateArgs{...}
type GetApplicationGatewayAuthenticationCertificateInput interface {
	pulumi.Input

	ToGetApplicationGatewayAuthenticationCertificateOutput() GetApplicationGatewayAuthenticationCertificateOutput
	ToGetApplicationGatewayAuthenticationCertificateOutputWithContext(context.Context) GetApplicationGatewayAuthenticationCertificateOutput
}

type GetApplicationGatewayAuthenticationCertificateArgs struct {
	// The ID of the Rewrite Rule Set
	Id pulumi.StringInput `pulumi:"id"`
	// The name of this Application Gateway.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetApplicationGatewayAuthenticationCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayAuthenticationCertificate)(nil)).Elem()
}

func (i GetApplicationGatewayAuthenticationCertificateArgs) ToGetApplicationGatewayAuthenticationCertificateOutput() GetApplicationGatewayAuthenticationCertificateOutput {
	return i.ToGetApplicationGatewayAuthenticationCertificateOutputWithContext(context.Background())
}

func (i GetApplicationGatewayAuthenticationCertificateArgs) ToGetApplicationGatewayAuthenticationCertificateOutputWithContext(ctx context.Context) GetApplicationGatewayAuthenticationCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayAuthenticationCertificateOutput)
}

// GetApplicationGatewayAuthenticationCertificateArrayInput is an input type that accepts GetApplicationGatewayAuthenticationCertificateArray and GetApplicationGatewayAuthenticationCertificateArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayAuthenticationCertificateArrayInput` via:
//
//	GetApplicationGatewayAuthenticationCertificateArray{ GetApplicationGatewayAuthenticationCertificateArgs{...} }
type GetApplicationGatewayAuthenticationCertificateArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayAuthenticationCertificateArrayOutput() GetApplicationGatewayAuthenticationCertificateArrayOutput
	ToGetApplicationGatewayAuthenticationCertificateArrayOutputWithContext(context.Context) GetApplicationGatewayAuthenticationCertificateArrayOutput
}

type GetApplicationGatewayAuthenticationCertificateArray []GetApplicationGatewayAuthenticationCertificateInput

func (GetApplicationGatewayAuthenticationCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayAuthenticationCertificate)(nil)).Elem()
}

func (i GetApplicationGatewayAuthenticationCertificateArray) ToGetApplicationGatewayAuthenticationCertificateArrayOutput() GetApplicationGatewayAuthenticationCertificateArrayOutput {
	return i.ToGetApplicationGatewayAuthenticationCertificateArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayAuthenticationCertificateArray) ToGetApplicationGatewayAuthenticationCertificateArrayOutputWithContext(ctx context.Context) GetApplicationGatewayAuthenticationCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayAuthenticationCertificateArrayOutput)
}

type GetApplicationGatewayAuthenticationCertificateOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayAuthenticationCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayAuthenticationCertificate)(nil)).Elem()
}

func (o GetApplicationGatewayAuthenticationCertificateOutput) ToGetApplicationGatewayAuthenticationCertificateOutput() GetApplicationGatewayAuthenticationCertificateOutput {
	return o
}

func (o GetApplicationGatewayAuthenticationCertificateOutput) ToGetApplicationGatewayAuthenticationCertificateOutputWithContext(ctx context.Context) GetApplicationGatewayAuthenticationCertificateOutput {
	return o
}

// The ID of the Rewrite Rule Set
func (o GetApplicationGatewayAuthenticationCertificateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayAuthenticationCertificate) string { return v.Id }).(pulumi.StringOutput)
}

// The name of this Application Gateway.
func (o GetApplicationGatewayAuthenticationCertificateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayAuthenticationCertificate) string { return v.Name }).(pulumi.StringOutput)
}

type GetApplicationGatewayAuthenticationCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayAuthenticationCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayAuthenticationCertificate)(nil)).Elem()
}

func (o GetApplicationGatewayAuthenticationCertificateArrayOutput) ToGetApplicationGatewayAuthenticationCertificateArrayOutput() GetApplicationGatewayAuthenticationCertificateArrayOutput {
	return o
}

func (o GetApplicationGatewayAuthenticationCertificateArrayOutput) ToGetApplicationGatewayAuthenticationCertificateArrayOutputWithContext(ctx context.Context) GetApplicationGatewayAuthenticationCertificateArrayOutput {
	return o
}

func (o GetApplicationGatewayAuthenticationCertificateArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayAuthenticationCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayAuthenticationCertificate {
		return vs[0].([]GetApplicationGatewayAuthenticationCertificate)[vs[1].(int)]
	}).(GetApplicationGatewayAuthenticationCertificateOutput)
}

type GetApplicationGatewayAutoscaleConfiguration struct {
	// Maximum capacity for autoscaling.
	MaxCapacity int `pulumi:"maxCapacity"`
	// Minimum capacity for autoscaling.
	MinCapacity int `pulumi:"minCapacity"`
}

// GetApplicationGatewayAutoscaleConfigurationInput is an input type that accepts GetApplicationGatewayAutoscaleConfigurationArgs and GetApplicationGatewayAutoscaleConfigurationOutput values.
// You can construct a concrete instance of `GetApplicationGatewayAutoscaleConfigurationInput` via:
//
//	GetApplicationGatewayAutoscaleConfigurationArgs{...}
type GetApplicationGatewayAutoscaleConfigurationInput interface {
	pulumi.Input

	ToGetApplicationGatewayAutoscaleConfigurationOutput() GetApplicationGatewayAutoscaleConfigurationOutput
	ToGetApplicationGatewayAutoscaleConfigurationOutputWithContext(context.Context) GetApplicationGatewayAutoscaleConfigurationOutput
}

type GetApplicationGatewayAutoscaleConfigurationArgs struct {
	// Maximum capacity for autoscaling.
	MaxCapacity pulumi.IntInput `pulumi:"maxCapacity"`
	// Minimum capacity for autoscaling.
	MinCapacity pulumi.IntInput `pulumi:"minCapacity"`
}

func (GetApplicationGatewayAutoscaleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayAutoscaleConfiguration)(nil)).Elem()
}

func (i GetApplicationGatewayAutoscaleConfigurationArgs) ToGetApplicationGatewayAutoscaleConfigurationOutput() GetApplicationGatewayAutoscaleConfigurationOutput {
	return i.ToGetApplicationGatewayAutoscaleConfigurationOutputWithContext(context.Background())
}

func (i GetApplicationGatewayAutoscaleConfigurationArgs) ToGetApplicationGatewayAutoscaleConfigurationOutputWithContext(ctx context.Context) GetApplicationGatewayAutoscaleConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayAutoscaleConfigurationOutput)
}

// GetApplicationGatewayAutoscaleConfigurationArrayInput is an input type that accepts GetApplicationGatewayAutoscaleConfigurationArray and GetApplicationGatewayAutoscaleConfigurationArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayAutoscaleConfigurationArrayInput` via:
//
//	GetApplicationGatewayAutoscaleConfigurationArray{ GetApplicationGatewayAutoscaleConfigurationArgs{...} }
type GetApplicationGatewayAutoscaleConfigurationArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayAutoscaleConfigurationArrayOutput() GetApplicationGatewayAutoscaleConfigurationArrayOutput
	ToGetApplicationGatewayAutoscaleConfigurationArrayOutputWithContext(context.Context) GetApplicationGatewayAutoscaleConfigurationArrayOutput
}

type GetApplicationGatewayAutoscaleConfigurationArray []GetApplicationGatewayAutoscaleConfigurationInput

func (GetApplicationGatewayAutoscaleConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayAutoscaleConfiguration)(nil)).Elem()
}

func (i GetApplicationGatewayAutoscaleConfigurationArray) ToGetApplicationGatewayAutoscaleConfigurationArrayOutput() GetApplicationGatewayAutoscaleConfigurationArrayOutput {
	return i.ToGetApplicationGatewayAutoscaleConfigurationArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayAutoscaleConfigurationArray) ToGetApplicationGatewayAutoscaleConfigurationArrayOutputWithContext(ctx context.Context) GetApplicationGatewayAutoscaleConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayAutoscaleConfigurationArrayOutput)
}

type GetApplicationGatewayAutoscaleConfigurationOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayAutoscaleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayAutoscaleConfiguration)(nil)).Elem()
}

func (o GetApplicationGatewayAutoscaleConfigurationOutput) ToGetApplicationGatewayAutoscaleConfigurationOutput() GetApplicationGatewayAutoscaleConfigurationOutput {
	return o
}

func (o GetApplicationGatewayAutoscaleConfigurationOutput) ToGetApplicationGatewayAutoscaleConfigurationOutputWithContext(ctx context.Context) GetApplicationGatewayAutoscaleConfigurationOutput {
	return o
}

// Maximum capacity for autoscaling.
func (o GetApplicationGatewayAutoscaleConfigurationOutput) MaxCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationGatewayAutoscaleConfiguration) int { return v.MaxCapacity }).(pulumi.IntOutput)
}

// Minimum capacity for autoscaling.
func (o GetApplicationGatewayAutoscaleConfigurationOutput) MinCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationGatewayAutoscaleConfiguration) int { return v.MinCapacity }).(pulumi.IntOutput)
}

type GetApplicationGatewayAutoscaleConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayAutoscaleConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayAutoscaleConfiguration)(nil)).Elem()
}

func (o GetApplicationGatewayAutoscaleConfigurationArrayOutput) ToGetApplicationGatewayAutoscaleConfigurationArrayOutput() GetApplicationGatewayAutoscaleConfigurationArrayOutput {
	return o
}

func (o GetApplicationGatewayAutoscaleConfigurationArrayOutput) ToGetApplicationGatewayAutoscaleConfigurationArrayOutputWithContext(ctx context.Context) GetApplicationGatewayAutoscaleConfigurationArrayOutput {
	return o
}

func (o GetApplicationGatewayAutoscaleConfigurationArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayAutoscaleConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayAutoscaleConfiguration {
		return vs[0].([]GetApplicationGatewayAutoscaleConfiguration)[vs[1].(int)]
	}).(GetApplicationGatewayAutoscaleConfigurationOutput)
}

type GetApplicationGatewayBackendAddressPool struct {
	// A list of FQDNs which are part of the Backend Address Pool.
	Fqdns []string `pulumi:"fqdns"`
	// The ID of the Rewrite Rule Set
	Id string `pulumi:"id"`
	// A list of IP Addresses which are part of the Backend Address Pool.
	IpAddresses []string `pulumi:"ipAddresses"`
	// The name of this Application Gateway.
	Name string `pulumi:"name"`
}

// GetApplicationGatewayBackendAddressPoolInput is an input type that accepts GetApplicationGatewayBackendAddressPoolArgs and GetApplicationGatewayBackendAddressPoolOutput values.
// You can construct a concrete instance of `GetApplicationGatewayBackendAddressPoolInput` via:
//
//	GetApplicationGatewayBackendAddressPoolArgs{...}
type GetApplicationGatewayBackendAddressPoolInput interface {
	pulumi.Input

	ToGetApplicationGatewayBackendAddressPoolOutput() GetApplicationGatewayBackendAddressPoolOutput
	ToGetApplicationGatewayBackendAddressPoolOutputWithContext(context.Context) GetApplicationGatewayBackendAddressPoolOutput
}

type GetApplicationGatewayBackendAddressPoolArgs struct {
	// A list of FQDNs which are part of the Backend Address Pool.
	Fqdns pulumi.StringArrayInput `pulumi:"fqdns"`
	// The ID of the Rewrite Rule Set
	Id pulumi.StringInput `pulumi:"id"`
	// A list of IP Addresses which are part of the Backend Address Pool.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
	// The name of this Application Gateway.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetApplicationGatewayBackendAddressPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayBackendAddressPool)(nil)).Elem()
}

func (i GetApplicationGatewayBackendAddressPoolArgs) ToGetApplicationGatewayBackendAddressPoolOutput() GetApplicationGatewayBackendAddressPoolOutput {
	return i.ToGetApplicationGatewayBackendAddressPoolOutputWithContext(context.Background())
}

func (i GetApplicationGatewayBackendAddressPoolArgs) ToGetApplicationGatewayBackendAddressPoolOutputWithContext(ctx context.Context) GetApplicationGatewayBackendAddressPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayBackendAddressPoolOutput)
}

// GetApplicationGatewayBackendAddressPoolArrayInput is an input type that accepts GetApplicationGatewayBackendAddressPoolArray and GetApplicationGatewayBackendAddressPoolArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayBackendAddressPoolArrayInput` via:
//
//	GetApplicationGatewayBackendAddressPoolArray{ GetApplicationGatewayBackendAddressPoolArgs{...} }
type GetApplicationGatewayBackendAddressPoolArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayBackendAddressPoolArrayOutput() GetApplicationGatewayBackendAddressPoolArrayOutput
	ToGetApplicationGatewayBackendAddressPoolArrayOutputWithContext(context.Context) GetApplicationGatewayBackendAddressPoolArrayOutput
}

type GetApplicationGatewayBackendAddressPoolArray []GetApplicationGatewayBackendAddressPoolInput

func (GetApplicationGatewayBackendAddressPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayBackendAddressPool)(nil)).Elem()
}

func (i GetApplicationGatewayBackendAddressPoolArray) ToGetApplicationGatewayBackendAddressPoolArrayOutput() GetApplicationGatewayBackendAddressPoolArrayOutput {
	return i.ToGetApplicationGatewayBackendAddressPoolArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayBackendAddressPoolArray) ToGetApplicationGatewayBackendAddressPoolArrayOutputWithContext(ctx context.Context) GetApplicationGatewayBackendAddressPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayBackendAddressPoolArrayOutput)
}

type GetApplicationGatewayBackendAddressPoolOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayBackendAddressPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayBackendAddressPool)(nil)).Elem()
}

func (o GetApplicationGatewayBackendAddressPoolOutput) ToGetApplicationGatewayBackendAddressPoolOutput() GetApplicationGatewayBackendAddressPoolOutput {
	return o
}

func (o GetApplicationGatewayBackendAddressPoolOutput) ToGetApplicationGatewayBackendAddressPoolOutputWithContext(ctx context.Context) GetApplicationGatewayBackendAddressPoolOutput {
	return o
}

// A list of FQDNs which are part of the Backend Address Pool.
func (o GetApplicationGatewayBackendAddressPoolOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationGatewayBackendAddressPool) []string { return v.Fqdns }).(pulumi.StringArrayOutput)
}

// The ID of the Rewrite Rule Set
func (o GetApplicationGatewayBackendAddressPoolOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayBackendAddressPool) string { return v.Id }).(pulumi.StringOutput)
}

// A list of IP Addresses which are part of the Backend Address Pool.
func (o GetApplicationGatewayBackendAddressPoolOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationGatewayBackendAddressPool) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

// The name of this Application Gateway.
func (o GetApplicationGatewayBackendAddressPoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayBackendAddressPool) string { return v.Name }).(pulumi.StringOutput)
}

type GetApplicationGatewayBackendAddressPoolArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayBackendAddressPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayBackendAddressPool)(nil)).Elem()
}

func (o GetApplicationGatewayBackendAddressPoolArrayOutput) ToGetApplicationGatewayBackendAddressPoolArrayOutput() GetApplicationGatewayBackendAddressPoolArrayOutput {
	return o
}

func (o GetApplicationGatewayBackendAddressPoolArrayOutput) ToGetApplicationGatewayBackendAddressPoolArrayOutputWithContext(ctx context.Context) GetApplicationGatewayBackendAddressPoolArrayOutput {
	return o
}

func (o GetApplicationGatewayBackendAddressPoolArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayBackendAddressPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayBackendAddressPool {
		return vs[0].([]GetApplicationGatewayBackendAddressPool)[vs[1].(int)]
	}).(GetApplicationGatewayBackendAddressPoolOutput)
}

type GetApplicationGatewayBackendHttpSetting struct {
	// The name of the affinity cookie.
	AffinityCookieName string `pulumi:"affinityCookieName"`
	// One or more `authenticationCertificate` blocks as defined below.
	AuthenticationCertificates []GetApplicationGatewayBackendHttpSettingAuthenticationCertificate `pulumi:"authenticationCertificates"`
	// A `connectionDraining` block as defined below.
	ConnectionDrainings []GetApplicationGatewayBackendHttpSettingConnectionDraining `pulumi:"connectionDrainings"`
	// Is Cookie-Based Affinity enabled?
	CookieBasedAffinity string `pulumi:"cookieBasedAffinity"`
	// The Hostname which is used for this HTTP Listener.
	HostName string `pulumi:"hostName"`
	// The ID of the Rewrite Rule Set
	Id string `pulumi:"id"`
	// The name of this Application Gateway.
	Name string `pulumi:"name"`
	// The URL path to rewrite.
	Path string `pulumi:"path"`
	// Whether host header will be picked from the host name of the backend server.
	PickHostNameFromBackendAddress bool `pulumi:"pickHostNameFromBackendAddress"`
	// Custom port which is used for probing the backend servers.
	Port int `pulumi:"port"`
	// The ID of the associated Probe.
	ProbeId string `pulumi:"probeId"`
	// The name of the associated HTTP Probe.
	ProbeName string `pulumi:"probeName"`
	// The Protocol used for this Probe.
	Protocol string `pulumi:"protocol"`
	// The request timeout in seconds.
	RequestTimeout int `pulumi:"requestTimeout"`
	// A list of `trustedRootCertificate` names.
	TrustedRootCertificateNames []string `pulumi:"trustedRootCertificateNames"`
}

// GetApplicationGatewayBackendHttpSettingInput is an input type that accepts GetApplicationGatewayBackendHttpSettingArgs and GetApplicationGatewayBackendHttpSettingOutput values.
// You can construct a concrete instance of `GetApplicationGatewayBackendHttpSettingInput` via:
//
//	GetApplicationGatewayBackendHttpSettingArgs{...}
type GetApplicationGatewayBackendHttpSettingInput interface {
	pulumi.Input

	ToGetApplicationGatewayBackendHttpSettingOutput() GetApplicationGatewayBackendHttpSettingOutput
	ToGetApplicationGatewayBackendHttpSettingOutputWithContext(context.Context) GetApplicationGatewayBackendHttpSettingOutput
}

type GetApplicationGatewayBackendHttpSettingArgs struct {
	// The name of the affinity cookie.
	AffinityCookieName pulumi.StringInput `pulumi:"affinityCookieName"`
	// One or more `authenticationCertificate` blocks as defined below.
	AuthenticationCertificates GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayInput `pulumi:"authenticationCertificates"`
	// A `connectionDraining` block as defined below.
	ConnectionDrainings GetApplicationGatewayBackendHttpSettingConnectionDrainingArrayInput `pulumi:"connectionDrainings"`
	// Is Cookie-Based Affinity enabled?
	CookieBasedAffinity pulumi.StringInput `pulumi:"cookieBasedAffinity"`
	// The Hostname which is used for this HTTP Listener.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The ID of the Rewrite Rule Set
	Id pulumi.StringInput `pulumi:"id"`
	// The name of this Application Gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// The URL path to rewrite.
	Path pulumi.StringInput `pulumi:"path"`
	// Whether host header will be picked from the host name of the backend server.
	PickHostNameFromBackendAddress pulumi.BoolInput `pulumi:"pickHostNameFromBackendAddress"`
	// Custom port which is used for probing the backend servers.
	Port pulumi.IntInput `pulumi:"port"`
	// The ID of the associated Probe.
	ProbeId pulumi.StringInput `pulumi:"probeId"`
	// The name of the associated HTTP Probe.
	ProbeName pulumi.StringInput `pulumi:"probeName"`
	// The Protocol used for this Probe.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The request timeout in seconds.
	RequestTimeout pulumi.IntInput `pulumi:"requestTimeout"`
	// A list of `trustedRootCertificate` names.
	TrustedRootCertificateNames pulumi.StringArrayInput `pulumi:"trustedRootCertificateNames"`
}

func (GetApplicationGatewayBackendHttpSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayBackendHttpSetting)(nil)).Elem()
}

func (i GetApplicationGatewayBackendHttpSettingArgs) ToGetApplicationGatewayBackendHttpSettingOutput() GetApplicationGatewayBackendHttpSettingOutput {
	return i.ToGetApplicationGatewayBackendHttpSettingOutputWithContext(context.Background())
}

func (i GetApplicationGatewayBackendHttpSettingArgs) ToGetApplicationGatewayBackendHttpSettingOutputWithContext(ctx context.Context) GetApplicationGatewayBackendHttpSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayBackendHttpSettingOutput)
}

// GetApplicationGatewayBackendHttpSettingArrayInput is an input type that accepts GetApplicationGatewayBackendHttpSettingArray and GetApplicationGatewayBackendHttpSettingArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayBackendHttpSettingArrayInput` via:
//
//	GetApplicationGatewayBackendHttpSettingArray{ GetApplicationGatewayBackendHttpSettingArgs{...} }
type GetApplicationGatewayBackendHttpSettingArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayBackendHttpSettingArrayOutput() GetApplicationGatewayBackendHttpSettingArrayOutput
	ToGetApplicationGatewayBackendHttpSettingArrayOutputWithContext(context.Context) GetApplicationGatewayBackendHttpSettingArrayOutput
}

type GetApplicationGatewayBackendHttpSettingArray []GetApplicationGatewayBackendHttpSettingInput

func (GetApplicationGatewayBackendHttpSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayBackendHttpSetting)(nil)).Elem()
}

func (i GetApplicationGatewayBackendHttpSettingArray) ToGetApplicationGatewayBackendHttpSettingArrayOutput() GetApplicationGatewayBackendHttpSettingArrayOutput {
	return i.ToGetApplicationGatewayBackendHttpSettingArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayBackendHttpSettingArray) ToGetApplicationGatewayBackendHttpSettingArrayOutputWithContext(ctx context.Context) GetApplicationGatewayBackendHttpSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayBackendHttpSettingArrayOutput)
}

type GetApplicationGatewayBackendHttpSettingOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayBackendHttpSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayBackendHttpSetting)(nil)).Elem()
}

func (o GetApplicationGatewayBackendHttpSettingOutput) ToGetApplicationGatewayBackendHttpSettingOutput() GetApplicationGatewayBackendHttpSettingOutput {
	return o
}

func (o GetApplicationGatewayBackendHttpSettingOutput) ToGetApplicationGatewayBackendHttpSettingOutputWithContext(ctx context.Context) GetApplicationGatewayBackendHttpSettingOutput {
	return o
}

// The name of the affinity cookie.
func (o GetApplicationGatewayBackendHttpSettingOutput) AffinityCookieName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayBackendHttpSetting) string { return v.AffinityCookieName }).(pulumi.StringOutput)
}

// One or more `authenticationCertificate` blocks as defined below.
func (o GetApplicationGatewayBackendHttpSettingOutput) AuthenticationCertificates() GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput {
	return o.ApplyT(func(v GetApplicationGatewayBackendHttpSetting) []GetApplicationGatewayBackendHttpSettingAuthenticationCertificate {
		return v.AuthenticationCertificates
	}).(GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput)
}

// A `connectionDraining` block as defined below.
func (o GetApplicationGatewayBackendHttpSettingOutput) ConnectionDrainings() GetApplicationGatewayBackendHttpSettingConnectionDrainingArrayOutput {
	return o.ApplyT(func(v GetApplicationGatewayBackendHttpSetting) []GetApplicationGatewayBackendHttpSettingConnectionDraining {
		return v.ConnectionDrainings
	}).(GetApplicationGatewayBackendHttpSettingConnectionDrainingArrayOutput)
}

// Is Cookie-Based Affinity enabled?
func (o GetApplicationGatewayBackendHttpSettingOutput) CookieBasedAffinity() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayBackendHttpSetting) string { return v.CookieBasedAffinity }).(pulumi.StringOutput)
}

// The Hostname which is used for this HTTP Listener.
func (o GetApplicationGatewayBackendHttpSettingOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayBackendHttpSetting) string { return v.HostName }).(pulumi.StringOutput)
}

// The ID of the Rewrite Rule Set
func (o GetApplicationGatewayBackendHttpSettingOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayBackendHttpSetting) string { return v.Id }).(pulumi.StringOutput)
}

// The name of this Application Gateway.
func (o GetApplicationGatewayBackendHttpSettingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayBackendHttpSetting) string { return v.Name }).(pulumi.StringOutput)
}

// The URL path to rewrite.
func (o GetApplicationGatewayBackendHttpSettingOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayBackendHttpSetting) string { return v.Path }).(pulumi.StringOutput)
}

// Whether host header will be picked from the host name of the backend server.
func (o GetApplicationGatewayBackendHttpSettingOutput) PickHostNameFromBackendAddress() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationGatewayBackendHttpSetting) bool { return v.PickHostNameFromBackendAddress }).(pulumi.BoolOutput)
}

// Custom port which is used for probing the backend servers.
func (o GetApplicationGatewayBackendHttpSettingOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationGatewayBackendHttpSetting) int { return v.Port }).(pulumi.IntOutput)
}

// The ID of the associated Probe.
func (o GetApplicationGatewayBackendHttpSettingOutput) ProbeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayBackendHttpSetting) string { return v.ProbeId }).(pulumi.StringOutput)
}

// The name of the associated HTTP Probe.
func (o GetApplicationGatewayBackendHttpSettingOutput) ProbeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayBackendHttpSetting) string { return v.ProbeName }).(pulumi.StringOutput)
}

// The Protocol used for this Probe.
func (o GetApplicationGatewayBackendHttpSettingOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayBackendHttpSetting) string { return v.Protocol }).(pulumi.StringOutput)
}

// The request timeout in seconds.
func (o GetApplicationGatewayBackendHttpSettingOutput) RequestTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationGatewayBackendHttpSetting) int { return v.RequestTimeout }).(pulumi.IntOutput)
}

// A list of `trustedRootCertificate` names.
func (o GetApplicationGatewayBackendHttpSettingOutput) TrustedRootCertificateNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationGatewayBackendHttpSetting) []string { return v.TrustedRootCertificateNames }).(pulumi.StringArrayOutput)
}

type GetApplicationGatewayBackendHttpSettingArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayBackendHttpSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayBackendHttpSetting)(nil)).Elem()
}

func (o GetApplicationGatewayBackendHttpSettingArrayOutput) ToGetApplicationGatewayBackendHttpSettingArrayOutput() GetApplicationGatewayBackendHttpSettingArrayOutput {
	return o
}

func (o GetApplicationGatewayBackendHttpSettingArrayOutput) ToGetApplicationGatewayBackendHttpSettingArrayOutputWithContext(ctx context.Context) GetApplicationGatewayBackendHttpSettingArrayOutput {
	return o
}

func (o GetApplicationGatewayBackendHttpSettingArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayBackendHttpSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayBackendHttpSetting {
		return vs[0].([]GetApplicationGatewayBackendHttpSetting)[vs[1].(int)]
	}).(GetApplicationGatewayBackendHttpSettingOutput)
}

type GetApplicationGatewayBackendHttpSettingAuthenticationCertificate struct {
	// The ID of the Rewrite Rule Set
	Id string `pulumi:"id"`
	// The name of this Application Gateway.
	Name string `pulumi:"name"`
}

// GetApplicationGatewayBackendHttpSettingAuthenticationCertificateInput is an input type that accepts GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArgs and GetApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput values.
// You can construct a concrete instance of `GetApplicationGatewayBackendHttpSettingAuthenticationCertificateInput` via:
//
//	GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArgs{...}
type GetApplicationGatewayBackendHttpSettingAuthenticationCertificateInput interface {
	pulumi.Input

	ToGetApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput() GetApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput
	ToGetApplicationGatewayBackendHttpSettingAuthenticationCertificateOutputWithContext(context.Context) GetApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput
}

type GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArgs struct {
	// The ID of the Rewrite Rule Set
	Id pulumi.StringInput `pulumi:"id"`
	// The name of this Application Gateway.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayBackendHttpSettingAuthenticationCertificate)(nil)).Elem()
}

func (i GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArgs) ToGetApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput() GetApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput {
	return i.ToGetApplicationGatewayBackendHttpSettingAuthenticationCertificateOutputWithContext(context.Background())
}

func (i GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArgs) ToGetApplicationGatewayBackendHttpSettingAuthenticationCertificateOutputWithContext(ctx context.Context) GetApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput)
}

// GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayInput is an input type that accepts GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArray and GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayInput` via:
//
//	GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArray{ GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArgs{...} }
type GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput() GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput
	ToGetApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutputWithContext(context.Context) GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput
}

type GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArray []GetApplicationGatewayBackendHttpSettingAuthenticationCertificateInput

func (GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayBackendHttpSettingAuthenticationCertificate)(nil)).Elem()
}

func (i GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArray) ToGetApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput() GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput {
	return i.ToGetApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArray) ToGetApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutputWithContext(ctx context.Context) GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput)
}

type GetApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayBackendHttpSettingAuthenticationCertificate)(nil)).Elem()
}

func (o GetApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput) ToGetApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput() GetApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput {
	return o
}

func (o GetApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput) ToGetApplicationGatewayBackendHttpSettingAuthenticationCertificateOutputWithContext(ctx context.Context) GetApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput {
	return o
}

// The ID of the Rewrite Rule Set
func (o GetApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayBackendHttpSettingAuthenticationCertificate) string { return v.Id }).(pulumi.StringOutput)
}

// The name of this Application Gateway.
func (o GetApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayBackendHttpSettingAuthenticationCertificate) string { return v.Name }).(pulumi.StringOutput)
}

type GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayBackendHttpSettingAuthenticationCertificate)(nil)).Elem()
}

func (o GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput) ToGetApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput() GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput {
	return o
}

func (o GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput) ToGetApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutputWithContext(ctx context.Context) GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput {
	return o
}

func (o GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayBackendHttpSettingAuthenticationCertificate {
		return vs[0].([]GetApplicationGatewayBackendHttpSettingAuthenticationCertificate)[vs[1].(int)]
	}).(GetApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput)
}

type GetApplicationGatewayBackendHttpSettingConnectionDraining struct {
	// The number of seconds connection draining is active.
	DrainTimeoutSec int `pulumi:"drainTimeoutSec"`
	// Is the Web Application Firewall enabled?
	Enabled bool `pulumi:"enabled"`
}

// GetApplicationGatewayBackendHttpSettingConnectionDrainingInput is an input type that accepts GetApplicationGatewayBackendHttpSettingConnectionDrainingArgs and GetApplicationGatewayBackendHttpSettingConnectionDrainingOutput values.
// You can construct a concrete instance of `GetApplicationGatewayBackendHttpSettingConnectionDrainingInput` via:
//
//	GetApplicationGatewayBackendHttpSettingConnectionDrainingArgs{...}
type GetApplicationGatewayBackendHttpSettingConnectionDrainingInput interface {
	pulumi.Input

	ToGetApplicationGatewayBackendHttpSettingConnectionDrainingOutput() GetApplicationGatewayBackendHttpSettingConnectionDrainingOutput
	ToGetApplicationGatewayBackendHttpSettingConnectionDrainingOutputWithContext(context.Context) GetApplicationGatewayBackendHttpSettingConnectionDrainingOutput
}

type GetApplicationGatewayBackendHttpSettingConnectionDrainingArgs struct {
	// The number of seconds connection draining is active.
	DrainTimeoutSec pulumi.IntInput `pulumi:"drainTimeoutSec"`
	// Is the Web Application Firewall enabled?
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetApplicationGatewayBackendHttpSettingConnectionDrainingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayBackendHttpSettingConnectionDraining)(nil)).Elem()
}

func (i GetApplicationGatewayBackendHttpSettingConnectionDrainingArgs) ToGetApplicationGatewayBackendHttpSettingConnectionDrainingOutput() GetApplicationGatewayBackendHttpSettingConnectionDrainingOutput {
	return i.ToGetApplicationGatewayBackendHttpSettingConnectionDrainingOutputWithContext(context.Background())
}

func (i GetApplicationGatewayBackendHttpSettingConnectionDrainingArgs) ToGetApplicationGatewayBackendHttpSettingConnectionDrainingOutputWithContext(ctx context.Context) GetApplicationGatewayBackendHttpSettingConnectionDrainingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayBackendHttpSettingConnectionDrainingOutput)
}

// GetApplicationGatewayBackendHttpSettingConnectionDrainingArrayInput is an input type that accepts GetApplicationGatewayBackendHttpSettingConnectionDrainingArray and GetApplicationGatewayBackendHttpSettingConnectionDrainingArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayBackendHttpSettingConnectionDrainingArrayInput` via:
//
//	GetApplicationGatewayBackendHttpSettingConnectionDrainingArray{ GetApplicationGatewayBackendHttpSettingConnectionDrainingArgs{...} }
type GetApplicationGatewayBackendHttpSettingConnectionDrainingArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayBackendHttpSettingConnectionDrainingArrayOutput() GetApplicationGatewayBackendHttpSettingConnectionDrainingArrayOutput
	ToGetApplicationGatewayBackendHttpSettingConnectionDrainingArrayOutputWithContext(context.Context) GetApplicationGatewayBackendHttpSettingConnectionDrainingArrayOutput
}

type GetApplicationGatewayBackendHttpSettingConnectionDrainingArray []GetApplicationGatewayBackendHttpSettingConnectionDrainingInput

func (GetApplicationGatewayBackendHttpSettingConnectionDrainingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayBackendHttpSettingConnectionDraining)(nil)).Elem()
}

func (i GetApplicationGatewayBackendHttpSettingConnectionDrainingArray) ToGetApplicationGatewayBackendHttpSettingConnectionDrainingArrayOutput() GetApplicationGatewayBackendHttpSettingConnectionDrainingArrayOutput {
	return i.ToGetApplicationGatewayBackendHttpSettingConnectionDrainingArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayBackendHttpSettingConnectionDrainingArray) ToGetApplicationGatewayBackendHttpSettingConnectionDrainingArrayOutputWithContext(ctx context.Context) GetApplicationGatewayBackendHttpSettingConnectionDrainingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayBackendHttpSettingConnectionDrainingArrayOutput)
}

type GetApplicationGatewayBackendHttpSettingConnectionDrainingOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayBackendHttpSettingConnectionDrainingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayBackendHttpSettingConnectionDraining)(nil)).Elem()
}

func (o GetApplicationGatewayBackendHttpSettingConnectionDrainingOutput) ToGetApplicationGatewayBackendHttpSettingConnectionDrainingOutput() GetApplicationGatewayBackendHttpSettingConnectionDrainingOutput {
	return o
}

func (o GetApplicationGatewayBackendHttpSettingConnectionDrainingOutput) ToGetApplicationGatewayBackendHttpSettingConnectionDrainingOutputWithContext(ctx context.Context) GetApplicationGatewayBackendHttpSettingConnectionDrainingOutput {
	return o
}

// The number of seconds connection draining is active.
func (o GetApplicationGatewayBackendHttpSettingConnectionDrainingOutput) DrainTimeoutSec() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationGatewayBackendHttpSettingConnectionDraining) int { return v.DrainTimeoutSec }).(pulumi.IntOutput)
}

// Is the Web Application Firewall enabled?
func (o GetApplicationGatewayBackendHttpSettingConnectionDrainingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationGatewayBackendHttpSettingConnectionDraining) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetApplicationGatewayBackendHttpSettingConnectionDrainingArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayBackendHttpSettingConnectionDrainingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayBackendHttpSettingConnectionDraining)(nil)).Elem()
}

func (o GetApplicationGatewayBackendHttpSettingConnectionDrainingArrayOutput) ToGetApplicationGatewayBackendHttpSettingConnectionDrainingArrayOutput() GetApplicationGatewayBackendHttpSettingConnectionDrainingArrayOutput {
	return o
}

func (o GetApplicationGatewayBackendHttpSettingConnectionDrainingArrayOutput) ToGetApplicationGatewayBackendHttpSettingConnectionDrainingArrayOutputWithContext(ctx context.Context) GetApplicationGatewayBackendHttpSettingConnectionDrainingArrayOutput {
	return o
}

func (o GetApplicationGatewayBackendHttpSettingConnectionDrainingArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayBackendHttpSettingConnectionDrainingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayBackendHttpSettingConnectionDraining {
		return vs[0].([]GetApplicationGatewayBackendHttpSettingConnectionDraining)[vs[1].(int)]
	}).(GetApplicationGatewayBackendHttpSettingConnectionDrainingOutput)
}

type GetApplicationGatewayCustomErrorConfiguration struct {
	// Error page URL of the application gateway custom error.
	CustomErrorPageUrl string `pulumi:"customErrorPageUrl"`
	// The ID of the Rewrite Rule Set
	Id string `pulumi:"id"`
	// Status code of the application gateway custom error.
	StatusCode string `pulumi:"statusCode"`
}

// GetApplicationGatewayCustomErrorConfigurationInput is an input type that accepts GetApplicationGatewayCustomErrorConfigurationArgs and GetApplicationGatewayCustomErrorConfigurationOutput values.
// You can construct a concrete instance of `GetApplicationGatewayCustomErrorConfigurationInput` via:
//
//	GetApplicationGatewayCustomErrorConfigurationArgs{...}
type GetApplicationGatewayCustomErrorConfigurationInput interface {
	pulumi.Input

	ToGetApplicationGatewayCustomErrorConfigurationOutput() GetApplicationGatewayCustomErrorConfigurationOutput
	ToGetApplicationGatewayCustomErrorConfigurationOutputWithContext(context.Context) GetApplicationGatewayCustomErrorConfigurationOutput
}

type GetApplicationGatewayCustomErrorConfigurationArgs struct {
	// Error page URL of the application gateway custom error.
	CustomErrorPageUrl pulumi.StringInput `pulumi:"customErrorPageUrl"`
	// The ID of the Rewrite Rule Set
	Id pulumi.StringInput `pulumi:"id"`
	// Status code of the application gateway custom error.
	StatusCode pulumi.StringInput `pulumi:"statusCode"`
}

func (GetApplicationGatewayCustomErrorConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayCustomErrorConfiguration)(nil)).Elem()
}

func (i GetApplicationGatewayCustomErrorConfigurationArgs) ToGetApplicationGatewayCustomErrorConfigurationOutput() GetApplicationGatewayCustomErrorConfigurationOutput {
	return i.ToGetApplicationGatewayCustomErrorConfigurationOutputWithContext(context.Background())
}

func (i GetApplicationGatewayCustomErrorConfigurationArgs) ToGetApplicationGatewayCustomErrorConfigurationOutputWithContext(ctx context.Context) GetApplicationGatewayCustomErrorConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayCustomErrorConfigurationOutput)
}

// GetApplicationGatewayCustomErrorConfigurationArrayInput is an input type that accepts GetApplicationGatewayCustomErrorConfigurationArray and GetApplicationGatewayCustomErrorConfigurationArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayCustomErrorConfigurationArrayInput` via:
//
//	GetApplicationGatewayCustomErrorConfigurationArray{ GetApplicationGatewayCustomErrorConfigurationArgs{...} }
type GetApplicationGatewayCustomErrorConfigurationArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayCustomErrorConfigurationArrayOutput() GetApplicationGatewayCustomErrorConfigurationArrayOutput
	ToGetApplicationGatewayCustomErrorConfigurationArrayOutputWithContext(context.Context) GetApplicationGatewayCustomErrorConfigurationArrayOutput
}

type GetApplicationGatewayCustomErrorConfigurationArray []GetApplicationGatewayCustomErrorConfigurationInput

func (GetApplicationGatewayCustomErrorConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayCustomErrorConfiguration)(nil)).Elem()
}

func (i GetApplicationGatewayCustomErrorConfigurationArray) ToGetApplicationGatewayCustomErrorConfigurationArrayOutput() GetApplicationGatewayCustomErrorConfigurationArrayOutput {
	return i.ToGetApplicationGatewayCustomErrorConfigurationArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayCustomErrorConfigurationArray) ToGetApplicationGatewayCustomErrorConfigurationArrayOutputWithContext(ctx context.Context) GetApplicationGatewayCustomErrorConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayCustomErrorConfigurationArrayOutput)
}

type GetApplicationGatewayCustomErrorConfigurationOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayCustomErrorConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayCustomErrorConfiguration)(nil)).Elem()
}

func (o GetApplicationGatewayCustomErrorConfigurationOutput) ToGetApplicationGatewayCustomErrorConfigurationOutput() GetApplicationGatewayCustomErrorConfigurationOutput {
	return o
}

func (o GetApplicationGatewayCustomErrorConfigurationOutput) ToGetApplicationGatewayCustomErrorConfigurationOutputWithContext(ctx context.Context) GetApplicationGatewayCustomErrorConfigurationOutput {
	return o
}

// Error page URL of the application gateway custom error.
func (o GetApplicationGatewayCustomErrorConfigurationOutput) CustomErrorPageUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayCustomErrorConfiguration) string { return v.CustomErrorPageUrl }).(pulumi.StringOutput)
}

// The ID of the Rewrite Rule Set
func (o GetApplicationGatewayCustomErrorConfigurationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayCustomErrorConfiguration) string { return v.Id }).(pulumi.StringOutput)
}

// Status code of the application gateway custom error.
func (o GetApplicationGatewayCustomErrorConfigurationOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayCustomErrorConfiguration) string { return v.StatusCode }).(pulumi.StringOutput)
}

type GetApplicationGatewayCustomErrorConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayCustomErrorConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayCustomErrorConfiguration)(nil)).Elem()
}

func (o GetApplicationGatewayCustomErrorConfigurationArrayOutput) ToGetApplicationGatewayCustomErrorConfigurationArrayOutput() GetApplicationGatewayCustomErrorConfigurationArrayOutput {
	return o
}

func (o GetApplicationGatewayCustomErrorConfigurationArrayOutput) ToGetApplicationGatewayCustomErrorConfigurationArrayOutputWithContext(ctx context.Context) GetApplicationGatewayCustomErrorConfigurationArrayOutput {
	return o
}

func (o GetApplicationGatewayCustomErrorConfigurationArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayCustomErrorConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayCustomErrorConfiguration {
		return vs[0].([]GetApplicationGatewayCustomErrorConfiguration)[vs[1].(int)]
	}).(GetApplicationGatewayCustomErrorConfigurationOutput)
}

type GetApplicationGatewayFrontendIpConfiguration struct {
	// The ID of the Rewrite Rule Set
	Id string `pulumi:"id"`
	// The name of this Application Gateway.
	Name string `pulumi:"name"`
	// The Static IP Address which is used.
	PrivateIpAddress string `pulumi:"privateIpAddress"`
	// The allocation method used for the Private IP Address.
	PrivateIpAddressAllocation string `pulumi:"privateIpAddressAllocation"`
	// The ID of the associated Private Link configuration.
	PrivateLinkConfigurationId string `pulumi:"privateLinkConfigurationId"`
	// The name of the Private Link configuration in use by this Frontend IP Configuration.
	PrivateLinkConfigurationName string `pulumi:"privateLinkConfigurationName"`
	// The ID of the Public IP Address which the Application Gateway will use.
	PublicIpAddressId string `pulumi:"publicIpAddressId"`
	// The ID of the subnet the private link configuration is connected to.
	SubnetId string `pulumi:"subnetId"`
}

// GetApplicationGatewayFrontendIpConfigurationInput is an input type that accepts GetApplicationGatewayFrontendIpConfigurationArgs and GetApplicationGatewayFrontendIpConfigurationOutput values.
// You can construct a concrete instance of `GetApplicationGatewayFrontendIpConfigurationInput` via:
//
//	GetApplicationGatewayFrontendIpConfigurationArgs{...}
type GetApplicationGatewayFrontendIpConfigurationInput interface {
	pulumi.Input

	ToGetApplicationGatewayFrontendIpConfigurationOutput() GetApplicationGatewayFrontendIpConfigurationOutput
	ToGetApplicationGatewayFrontendIpConfigurationOutputWithContext(context.Context) GetApplicationGatewayFrontendIpConfigurationOutput
}

type GetApplicationGatewayFrontendIpConfigurationArgs struct {
	// The ID of the Rewrite Rule Set
	Id pulumi.StringInput `pulumi:"id"`
	// The name of this Application Gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// The Static IP Address which is used.
	PrivateIpAddress pulumi.StringInput `pulumi:"privateIpAddress"`
	// The allocation method used for the Private IP Address.
	PrivateIpAddressAllocation pulumi.StringInput `pulumi:"privateIpAddressAllocation"`
	// The ID of the associated Private Link configuration.
	PrivateLinkConfigurationId pulumi.StringInput `pulumi:"privateLinkConfigurationId"`
	// The name of the Private Link configuration in use by this Frontend IP Configuration.
	PrivateLinkConfigurationName pulumi.StringInput `pulumi:"privateLinkConfigurationName"`
	// The ID of the Public IP Address which the Application Gateway will use.
	PublicIpAddressId pulumi.StringInput `pulumi:"publicIpAddressId"`
	// The ID of the subnet the private link configuration is connected to.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetApplicationGatewayFrontendIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayFrontendIpConfiguration)(nil)).Elem()
}

func (i GetApplicationGatewayFrontendIpConfigurationArgs) ToGetApplicationGatewayFrontendIpConfigurationOutput() GetApplicationGatewayFrontendIpConfigurationOutput {
	return i.ToGetApplicationGatewayFrontendIpConfigurationOutputWithContext(context.Background())
}

func (i GetApplicationGatewayFrontendIpConfigurationArgs) ToGetApplicationGatewayFrontendIpConfigurationOutputWithContext(ctx context.Context) GetApplicationGatewayFrontendIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayFrontendIpConfigurationOutput)
}

// GetApplicationGatewayFrontendIpConfigurationArrayInput is an input type that accepts GetApplicationGatewayFrontendIpConfigurationArray and GetApplicationGatewayFrontendIpConfigurationArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayFrontendIpConfigurationArrayInput` via:
//
//	GetApplicationGatewayFrontendIpConfigurationArray{ GetApplicationGatewayFrontendIpConfigurationArgs{...} }
type GetApplicationGatewayFrontendIpConfigurationArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayFrontendIpConfigurationArrayOutput() GetApplicationGatewayFrontendIpConfigurationArrayOutput
	ToGetApplicationGatewayFrontendIpConfigurationArrayOutputWithContext(context.Context) GetApplicationGatewayFrontendIpConfigurationArrayOutput
}

type GetApplicationGatewayFrontendIpConfigurationArray []GetApplicationGatewayFrontendIpConfigurationInput

func (GetApplicationGatewayFrontendIpConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayFrontendIpConfiguration)(nil)).Elem()
}

func (i GetApplicationGatewayFrontendIpConfigurationArray) ToGetApplicationGatewayFrontendIpConfigurationArrayOutput() GetApplicationGatewayFrontendIpConfigurationArrayOutput {
	return i.ToGetApplicationGatewayFrontendIpConfigurationArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayFrontendIpConfigurationArray) ToGetApplicationGatewayFrontendIpConfigurationArrayOutputWithContext(ctx context.Context) GetApplicationGatewayFrontendIpConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayFrontendIpConfigurationArrayOutput)
}

type GetApplicationGatewayFrontendIpConfigurationOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayFrontendIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayFrontendIpConfiguration)(nil)).Elem()
}

func (o GetApplicationGatewayFrontendIpConfigurationOutput) ToGetApplicationGatewayFrontendIpConfigurationOutput() GetApplicationGatewayFrontendIpConfigurationOutput {
	return o
}

func (o GetApplicationGatewayFrontendIpConfigurationOutput) ToGetApplicationGatewayFrontendIpConfigurationOutputWithContext(ctx context.Context) GetApplicationGatewayFrontendIpConfigurationOutput {
	return o
}

// The ID of the Rewrite Rule Set
func (o GetApplicationGatewayFrontendIpConfigurationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayFrontendIpConfiguration) string { return v.Id }).(pulumi.StringOutput)
}

// The name of this Application Gateway.
func (o GetApplicationGatewayFrontendIpConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayFrontendIpConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// The Static IP Address which is used.
func (o GetApplicationGatewayFrontendIpConfigurationOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayFrontendIpConfiguration) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

// The allocation method used for the Private IP Address.
func (o GetApplicationGatewayFrontendIpConfigurationOutput) PrivateIpAddressAllocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayFrontendIpConfiguration) string { return v.PrivateIpAddressAllocation }).(pulumi.StringOutput)
}

// The ID of the associated Private Link configuration.
func (o GetApplicationGatewayFrontendIpConfigurationOutput) PrivateLinkConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayFrontendIpConfiguration) string { return v.PrivateLinkConfigurationId }).(pulumi.StringOutput)
}

// The name of the Private Link configuration in use by this Frontend IP Configuration.
func (o GetApplicationGatewayFrontendIpConfigurationOutput) PrivateLinkConfigurationName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayFrontendIpConfiguration) string { return v.PrivateLinkConfigurationName }).(pulumi.StringOutput)
}

// The ID of the Public IP Address which the Application Gateway will use.
func (o GetApplicationGatewayFrontendIpConfigurationOutput) PublicIpAddressId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayFrontendIpConfiguration) string { return v.PublicIpAddressId }).(pulumi.StringOutput)
}

// The ID of the subnet the private link configuration is connected to.
func (o GetApplicationGatewayFrontendIpConfigurationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayFrontendIpConfiguration) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetApplicationGatewayFrontendIpConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayFrontendIpConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayFrontendIpConfiguration)(nil)).Elem()
}

func (o GetApplicationGatewayFrontendIpConfigurationArrayOutput) ToGetApplicationGatewayFrontendIpConfigurationArrayOutput() GetApplicationGatewayFrontendIpConfigurationArrayOutput {
	return o
}

func (o GetApplicationGatewayFrontendIpConfigurationArrayOutput) ToGetApplicationGatewayFrontendIpConfigurationArrayOutputWithContext(ctx context.Context) GetApplicationGatewayFrontendIpConfigurationArrayOutput {
	return o
}

func (o GetApplicationGatewayFrontendIpConfigurationArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayFrontendIpConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayFrontendIpConfiguration {
		return vs[0].([]GetApplicationGatewayFrontendIpConfiguration)[vs[1].(int)]
	}).(GetApplicationGatewayFrontendIpConfigurationOutput)
}

type GetApplicationGatewayFrontendPort struct {
	// The ID of the Rewrite Rule Set
	Id string `pulumi:"id"`
	// The name of this Application Gateway.
	Name string `pulumi:"name"`
	// Custom port which is used for probing the backend servers.
	Port int `pulumi:"port"`
}

// GetApplicationGatewayFrontendPortInput is an input type that accepts GetApplicationGatewayFrontendPortArgs and GetApplicationGatewayFrontendPortOutput values.
// You can construct a concrete instance of `GetApplicationGatewayFrontendPortInput` via:
//
//	GetApplicationGatewayFrontendPortArgs{...}
type GetApplicationGatewayFrontendPortInput interface {
	pulumi.Input

	ToGetApplicationGatewayFrontendPortOutput() GetApplicationGatewayFrontendPortOutput
	ToGetApplicationGatewayFrontendPortOutputWithContext(context.Context) GetApplicationGatewayFrontendPortOutput
}

type GetApplicationGatewayFrontendPortArgs struct {
	// The ID of the Rewrite Rule Set
	Id pulumi.StringInput `pulumi:"id"`
	// The name of this Application Gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// Custom port which is used for probing the backend servers.
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetApplicationGatewayFrontendPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayFrontendPort)(nil)).Elem()
}

func (i GetApplicationGatewayFrontendPortArgs) ToGetApplicationGatewayFrontendPortOutput() GetApplicationGatewayFrontendPortOutput {
	return i.ToGetApplicationGatewayFrontendPortOutputWithContext(context.Background())
}

func (i GetApplicationGatewayFrontendPortArgs) ToGetApplicationGatewayFrontendPortOutputWithContext(ctx context.Context) GetApplicationGatewayFrontendPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayFrontendPortOutput)
}

// GetApplicationGatewayFrontendPortArrayInput is an input type that accepts GetApplicationGatewayFrontendPortArray and GetApplicationGatewayFrontendPortArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayFrontendPortArrayInput` via:
//
//	GetApplicationGatewayFrontendPortArray{ GetApplicationGatewayFrontendPortArgs{...} }
type GetApplicationGatewayFrontendPortArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayFrontendPortArrayOutput() GetApplicationGatewayFrontendPortArrayOutput
	ToGetApplicationGatewayFrontendPortArrayOutputWithContext(context.Context) GetApplicationGatewayFrontendPortArrayOutput
}

type GetApplicationGatewayFrontendPortArray []GetApplicationGatewayFrontendPortInput

func (GetApplicationGatewayFrontendPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayFrontendPort)(nil)).Elem()
}

func (i GetApplicationGatewayFrontendPortArray) ToGetApplicationGatewayFrontendPortArrayOutput() GetApplicationGatewayFrontendPortArrayOutput {
	return i.ToGetApplicationGatewayFrontendPortArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayFrontendPortArray) ToGetApplicationGatewayFrontendPortArrayOutputWithContext(ctx context.Context) GetApplicationGatewayFrontendPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayFrontendPortArrayOutput)
}

type GetApplicationGatewayFrontendPortOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayFrontendPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayFrontendPort)(nil)).Elem()
}

func (o GetApplicationGatewayFrontendPortOutput) ToGetApplicationGatewayFrontendPortOutput() GetApplicationGatewayFrontendPortOutput {
	return o
}

func (o GetApplicationGatewayFrontendPortOutput) ToGetApplicationGatewayFrontendPortOutputWithContext(ctx context.Context) GetApplicationGatewayFrontendPortOutput {
	return o
}

// The ID of the Rewrite Rule Set
func (o GetApplicationGatewayFrontendPortOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayFrontendPort) string { return v.Id }).(pulumi.StringOutput)
}

// The name of this Application Gateway.
func (o GetApplicationGatewayFrontendPortOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayFrontendPort) string { return v.Name }).(pulumi.StringOutput)
}

// Custom port which is used for probing the backend servers.
func (o GetApplicationGatewayFrontendPortOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationGatewayFrontendPort) int { return v.Port }).(pulumi.IntOutput)
}

type GetApplicationGatewayFrontendPortArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayFrontendPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayFrontendPort)(nil)).Elem()
}

func (o GetApplicationGatewayFrontendPortArrayOutput) ToGetApplicationGatewayFrontendPortArrayOutput() GetApplicationGatewayFrontendPortArrayOutput {
	return o
}

func (o GetApplicationGatewayFrontendPortArrayOutput) ToGetApplicationGatewayFrontendPortArrayOutputWithContext(ctx context.Context) GetApplicationGatewayFrontendPortArrayOutput {
	return o
}

func (o GetApplicationGatewayFrontendPortArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayFrontendPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayFrontendPort {
		return vs[0].([]GetApplicationGatewayFrontendPort)[vs[1].(int)]
	}).(GetApplicationGatewayFrontendPortOutput)
}

type GetApplicationGatewayGatewayIpConfiguration struct {
	// The ID of the Rewrite Rule Set
	Id string `pulumi:"id"`
	// The name of this Application Gateway.
	Name string `pulumi:"name"`
	// The ID of the subnet the private link configuration is connected to.
	SubnetId string `pulumi:"subnetId"`
}

// GetApplicationGatewayGatewayIpConfigurationInput is an input type that accepts GetApplicationGatewayGatewayIpConfigurationArgs and GetApplicationGatewayGatewayIpConfigurationOutput values.
// You can construct a concrete instance of `GetApplicationGatewayGatewayIpConfigurationInput` via:
//
//	GetApplicationGatewayGatewayIpConfigurationArgs{...}
type GetApplicationGatewayGatewayIpConfigurationInput interface {
	pulumi.Input

	ToGetApplicationGatewayGatewayIpConfigurationOutput() GetApplicationGatewayGatewayIpConfigurationOutput
	ToGetApplicationGatewayGatewayIpConfigurationOutputWithContext(context.Context) GetApplicationGatewayGatewayIpConfigurationOutput
}

type GetApplicationGatewayGatewayIpConfigurationArgs struct {
	// The ID of the Rewrite Rule Set
	Id pulumi.StringInput `pulumi:"id"`
	// The name of this Application Gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the subnet the private link configuration is connected to.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetApplicationGatewayGatewayIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayGatewayIpConfiguration)(nil)).Elem()
}

func (i GetApplicationGatewayGatewayIpConfigurationArgs) ToGetApplicationGatewayGatewayIpConfigurationOutput() GetApplicationGatewayGatewayIpConfigurationOutput {
	return i.ToGetApplicationGatewayGatewayIpConfigurationOutputWithContext(context.Background())
}

func (i GetApplicationGatewayGatewayIpConfigurationArgs) ToGetApplicationGatewayGatewayIpConfigurationOutputWithContext(ctx context.Context) GetApplicationGatewayGatewayIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayGatewayIpConfigurationOutput)
}

// GetApplicationGatewayGatewayIpConfigurationArrayInput is an input type that accepts GetApplicationGatewayGatewayIpConfigurationArray and GetApplicationGatewayGatewayIpConfigurationArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayGatewayIpConfigurationArrayInput` via:
//
//	GetApplicationGatewayGatewayIpConfigurationArray{ GetApplicationGatewayGatewayIpConfigurationArgs{...} }
type GetApplicationGatewayGatewayIpConfigurationArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayGatewayIpConfigurationArrayOutput() GetApplicationGatewayGatewayIpConfigurationArrayOutput
	ToGetApplicationGatewayGatewayIpConfigurationArrayOutputWithContext(context.Context) GetApplicationGatewayGatewayIpConfigurationArrayOutput
}

type GetApplicationGatewayGatewayIpConfigurationArray []GetApplicationGatewayGatewayIpConfigurationInput

func (GetApplicationGatewayGatewayIpConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayGatewayIpConfiguration)(nil)).Elem()
}

func (i GetApplicationGatewayGatewayIpConfigurationArray) ToGetApplicationGatewayGatewayIpConfigurationArrayOutput() GetApplicationGatewayGatewayIpConfigurationArrayOutput {
	return i.ToGetApplicationGatewayGatewayIpConfigurationArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayGatewayIpConfigurationArray) ToGetApplicationGatewayGatewayIpConfigurationArrayOutputWithContext(ctx context.Context) GetApplicationGatewayGatewayIpConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayGatewayIpConfigurationArrayOutput)
}

type GetApplicationGatewayGatewayIpConfigurationOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayGatewayIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayGatewayIpConfiguration)(nil)).Elem()
}

func (o GetApplicationGatewayGatewayIpConfigurationOutput) ToGetApplicationGatewayGatewayIpConfigurationOutput() GetApplicationGatewayGatewayIpConfigurationOutput {
	return o
}

func (o GetApplicationGatewayGatewayIpConfigurationOutput) ToGetApplicationGatewayGatewayIpConfigurationOutputWithContext(ctx context.Context) GetApplicationGatewayGatewayIpConfigurationOutput {
	return o
}

// The ID of the Rewrite Rule Set
func (o GetApplicationGatewayGatewayIpConfigurationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayGatewayIpConfiguration) string { return v.Id }).(pulumi.StringOutput)
}

// The name of this Application Gateway.
func (o GetApplicationGatewayGatewayIpConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayGatewayIpConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the subnet the private link configuration is connected to.
func (o GetApplicationGatewayGatewayIpConfigurationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayGatewayIpConfiguration) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetApplicationGatewayGatewayIpConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayGatewayIpConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayGatewayIpConfiguration)(nil)).Elem()
}

func (o GetApplicationGatewayGatewayIpConfigurationArrayOutput) ToGetApplicationGatewayGatewayIpConfigurationArrayOutput() GetApplicationGatewayGatewayIpConfigurationArrayOutput {
	return o
}

func (o GetApplicationGatewayGatewayIpConfigurationArrayOutput) ToGetApplicationGatewayGatewayIpConfigurationArrayOutputWithContext(ctx context.Context) GetApplicationGatewayGatewayIpConfigurationArrayOutput {
	return o
}

func (o GetApplicationGatewayGatewayIpConfigurationArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayGatewayIpConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayGatewayIpConfiguration {
		return vs[0].([]GetApplicationGatewayGatewayIpConfiguration)[vs[1].(int)]
	}).(GetApplicationGatewayGatewayIpConfigurationOutput)
}

type GetApplicationGatewayGlobal struct {
	// Whether Application Gateway's Request buffer is enabled.
	RequestBufferingEnabled bool `pulumi:"requestBufferingEnabled"`
	// Whether Application Gateway's Response buffer is enabled.
	ResponseBufferingEnabled bool `pulumi:"responseBufferingEnabled"`
}

// GetApplicationGatewayGlobalInput is an input type that accepts GetApplicationGatewayGlobalArgs and GetApplicationGatewayGlobalOutput values.
// You can construct a concrete instance of `GetApplicationGatewayGlobalInput` via:
//
//	GetApplicationGatewayGlobalArgs{...}
type GetApplicationGatewayGlobalInput interface {
	pulumi.Input

	ToGetApplicationGatewayGlobalOutput() GetApplicationGatewayGlobalOutput
	ToGetApplicationGatewayGlobalOutputWithContext(context.Context) GetApplicationGatewayGlobalOutput
}

type GetApplicationGatewayGlobalArgs struct {
	// Whether Application Gateway's Request buffer is enabled.
	RequestBufferingEnabled pulumi.BoolInput `pulumi:"requestBufferingEnabled"`
	// Whether Application Gateway's Response buffer is enabled.
	ResponseBufferingEnabled pulumi.BoolInput `pulumi:"responseBufferingEnabled"`
}

func (GetApplicationGatewayGlobalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayGlobal)(nil)).Elem()
}

func (i GetApplicationGatewayGlobalArgs) ToGetApplicationGatewayGlobalOutput() GetApplicationGatewayGlobalOutput {
	return i.ToGetApplicationGatewayGlobalOutputWithContext(context.Background())
}

func (i GetApplicationGatewayGlobalArgs) ToGetApplicationGatewayGlobalOutputWithContext(ctx context.Context) GetApplicationGatewayGlobalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayGlobalOutput)
}

// GetApplicationGatewayGlobalArrayInput is an input type that accepts GetApplicationGatewayGlobalArray and GetApplicationGatewayGlobalArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayGlobalArrayInput` via:
//
//	GetApplicationGatewayGlobalArray{ GetApplicationGatewayGlobalArgs{...} }
type GetApplicationGatewayGlobalArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayGlobalArrayOutput() GetApplicationGatewayGlobalArrayOutput
	ToGetApplicationGatewayGlobalArrayOutputWithContext(context.Context) GetApplicationGatewayGlobalArrayOutput
}

type GetApplicationGatewayGlobalArray []GetApplicationGatewayGlobalInput

func (GetApplicationGatewayGlobalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayGlobal)(nil)).Elem()
}

func (i GetApplicationGatewayGlobalArray) ToGetApplicationGatewayGlobalArrayOutput() GetApplicationGatewayGlobalArrayOutput {
	return i.ToGetApplicationGatewayGlobalArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayGlobalArray) ToGetApplicationGatewayGlobalArrayOutputWithContext(ctx context.Context) GetApplicationGatewayGlobalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayGlobalArrayOutput)
}

type GetApplicationGatewayGlobalOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayGlobalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayGlobal)(nil)).Elem()
}

func (o GetApplicationGatewayGlobalOutput) ToGetApplicationGatewayGlobalOutput() GetApplicationGatewayGlobalOutput {
	return o
}

func (o GetApplicationGatewayGlobalOutput) ToGetApplicationGatewayGlobalOutputWithContext(ctx context.Context) GetApplicationGatewayGlobalOutput {
	return o
}

// Whether Application Gateway's Request buffer is enabled.
func (o GetApplicationGatewayGlobalOutput) RequestBufferingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationGatewayGlobal) bool { return v.RequestBufferingEnabled }).(pulumi.BoolOutput)
}

// Whether Application Gateway's Response buffer is enabled.
func (o GetApplicationGatewayGlobalOutput) ResponseBufferingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationGatewayGlobal) bool { return v.ResponseBufferingEnabled }).(pulumi.BoolOutput)
}

type GetApplicationGatewayGlobalArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayGlobalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayGlobal)(nil)).Elem()
}

func (o GetApplicationGatewayGlobalArrayOutput) ToGetApplicationGatewayGlobalArrayOutput() GetApplicationGatewayGlobalArrayOutput {
	return o
}

func (o GetApplicationGatewayGlobalArrayOutput) ToGetApplicationGatewayGlobalArrayOutputWithContext(ctx context.Context) GetApplicationGatewayGlobalArrayOutput {
	return o
}

func (o GetApplicationGatewayGlobalArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayGlobalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayGlobal {
		return vs[0].([]GetApplicationGatewayGlobal)[vs[1].(int)]
	}).(GetApplicationGatewayGlobalOutput)
}

type GetApplicationGatewayHttpListener struct {
	// One or more `customErrorConfiguration` blocks as defined below.
	CustomErrorConfigurations []GetApplicationGatewayHttpListenerCustomErrorConfiguration `pulumi:"customErrorConfigurations"`
	// The ID of the Web Application Firewall Policy which is used as an HTTP Listener for this Path Rule.
	FirewallPolicyId string `pulumi:"firewallPolicyId"`
	// The ID of the associated Frontend Configuration.
	FrontendIpConfigurationId string `pulumi:"frontendIpConfigurationId"`
	// The Name of the Frontend IP Configuration used for this HTTP Listener.
	FrontendIpConfigurationName string `pulumi:"frontendIpConfigurationName"`
	// The ID of the associated Frontend Port.
	FrontendPortId string `pulumi:"frontendPortId"`
	// The Name of the Frontend Port used for this HTTP Listener.
	FrontendPortName string `pulumi:"frontendPortName"`
	// The Hostname which is used for this HTTP Listener.
	HostName string `pulumi:"hostName"`
	// A list of Hostname(s) used for this HTTP Listener. It allows special wildcard characters.
	HostNames []string `pulumi:"hostNames"`
	// The ID of the Rewrite Rule Set
	Id string `pulumi:"id"`
	// The name of this Application Gateway.
	Name string `pulumi:"name"`
	// The Protocol used for this Probe.
	Protocol string `pulumi:"protocol"`
	// Is Server Name Indication required?
	RequireSni bool `pulumi:"requireSni"`
	// The ID of the associated SSL Certificate.
	SslCertificateId string `pulumi:"sslCertificateId"`
	// The name of the associated SSL Certificate which is used for this HTTP Listener.
	SslCertificateName string `pulumi:"sslCertificateName"`
	// The ID of the associated SSL Profile.
	SslProfileId string `pulumi:"sslProfileId"`
	// The name of the associated SSL Profile which is used for this HTTP Listener.
	SslProfileName string `pulumi:"sslProfileName"`
}

// GetApplicationGatewayHttpListenerInput is an input type that accepts GetApplicationGatewayHttpListenerArgs and GetApplicationGatewayHttpListenerOutput values.
// You can construct a concrete instance of `GetApplicationGatewayHttpListenerInput` via:
//
//	GetApplicationGatewayHttpListenerArgs{...}
type GetApplicationGatewayHttpListenerInput interface {
	pulumi.Input

	ToGetApplicationGatewayHttpListenerOutput() GetApplicationGatewayHttpListenerOutput
	ToGetApplicationGatewayHttpListenerOutputWithContext(context.Context) GetApplicationGatewayHttpListenerOutput
}

type GetApplicationGatewayHttpListenerArgs struct {
	// One or more `customErrorConfiguration` blocks as defined below.
	CustomErrorConfigurations GetApplicationGatewayHttpListenerCustomErrorConfigurationArrayInput `pulumi:"customErrorConfigurations"`
	// The ID of the Web Application Firewall Policy which is used as an HTTP Listener for this Path Rule.
	FirewallPolicyId pulumi.StringInput `pulumi:"firewallPolicyId"`
	// The ID of the associated Frontend Configuration.
	FrontendIpConfigurationId pulumi.StringInput `pulumi:"frontendIpConfigurationId"`
	// The Name of the Frontend IP Configuration used for this HTTP Listener.
	FrontendIpConfigurationName pulumi.StringInput `pulumi:"frontendIpConfigurationName"`
	// The ID of the associated Frontend Port.
	FrontendPortId pulumi.StringInput `pulumi:"frontendPortId"`
	// The Name of the Frontend Port used for this HTTP Listener.
	FrontendPortName pulumi.StringInput `pulumi:"frontendPortName"`
	// The Hostname which is used for this HTTP Listener.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// A list of Hostname(s) used for this HTTP Listener. It allows special wildcard characters.
	HostNames pulumi.StringArrayInput `pulumi:"hostNames"`
	// The ID of the Rewrite Rule Set
	Id pulumi.StringInput `pulumi:"id"`
	// The name of this Application Gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// The Protocol used for this Probe.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Is Server Name Indication required?
	RequireSni pulumi.BoolInput `pulumi:"requireSni"`
	// The ID of the associated SSL Certificate.
	SslCertificateId pulumi.StringInput `pulumi:"sslCertificateId"`
	// The name of the associated SSL Certificate which is used for this HTTP Listener.
	SslCertificateName pulumi.StringInput `pulumi:"sslCertificateName"`
	// The ID of the associated SSL Profile.
	SslProfileId pulumi.StringInput `pulumi:"sslProfileId"`
	// The name of the associated SSL Profile which is used for this HTTP Listener.
	SslProfileName pulumi.StringInput `pulumi:"sslProfileName"`
}

func (GetApplicationGatewayHttpListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayHttpListener)(nil)).Elem()
}

func (i GetApplicationGatewayHttpListenerArgs) ToGetApplicationGatewayHttpListenerOutput() GetApplicationGatewayHttpListenerOutput {
	return i.ToGetApplicationGatewayHttpListenerOutputWithContext(context.Background())
}

func (i GetApplicationGatewayHttpListenerArgs) ToGetApplicationGatewayHttpListenerOutputWithContext(ctx context.Context) GetApplicationGatewayHttpListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayHttpListenerOutput)
}

// GetApplicationGatewayHttpListenerArrayInput is an input type that accepts GetApplicationGatewayHttpListenerArray and GetApplicationGatewayHttpListenerArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayHttpListenerArrayInput` via:
//
//	GetApplicationGatewayHttpListenerArray{ GetApplicationGatewayHttpListenerArgs{...} }
type GetApplicationGatewayHttpListenerArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayHttpListenerArrayOutput() GetApplicationGatewayHttpListenerArrayOutput
	ToGetApplicationGatewayHttpListenerArrayOutputWithContext(context.Context) GetApplicationGatewayHttpListenerArrayOutput
}

type GetApplicationGatewayHttpListenerArray []GetApplicationGatewayHttpListenerInput

func (GetApplicationGatewayHttpListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayHttpListener)(nil)).Elem()
}

func (i GetApplicationGatewayHttpListenerArray) ToGetApplicationGatewayHttpListenerArrayOutput() GetApplicationGatewayHttpListenerArrayOutput {
	return i.ToGetApplicationGatewayHttpListenerArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayHttpListenerArray) ToGetApplicationGatewayHttpListenerArrayOutputWithContext(ctx context.Context) GetApplicationGatewayHttpListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayHttpListenerArrayOutput)
}

type GetApplicationGatewayHttpListenerOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayHttpListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayHttpListener)(nil)).Elem()
}

func (o GetApplicationGatewayHttpListenerOutput) ToGetApplicationGatewayHttpListenerOutput() GetApplicationGatewayHttpListenerOutput {
	return o
}

func (o GetApplicationGatewayHttpListenerOutput) ToGetApplicationGatewayHttpListenerOutputWithContext(ctx context.Context) GetApplicationGatewayHttpListenerOutput {
	return o
}

// One or more `customErrorConfiguration` blocks as defined below.
func (o GetApplicationGatewayHttpListenerOutput) CustomErrorConfigurations() GetApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput {
	return o.ApplyT(func(v GetApplicationGatewayHttpListener) []GetApplicationGatewayHttpListenerCustomErrorConfiguration {
		return v.CustomErrorConfigurations
	}).(GetApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput)
}

// The ID of the Web Application Firewall Policy which is used as an HTTP Listener for this Path Rule.
func (o GetApplicationGatewayHttpListenerOutput) FirewallPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayHttpListener) string { return v.FirewallPolicyId }).(pulumi.StringOutput)
}

// The ID of the associated Frontend Configuration.
func (o GetApplicationGatewayHttpListenerOutput) FrontendIpConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayHttpListener) string { return v.FrontendIpConfigurationId }).(pulumi.StringOutput)
}

// The Name of the Frontend IP Configuration used for this HTTP Listener.
func (o GetApplicationGatewayHttpListenerOutput) FrontendIpConfigurationName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayHttpListener) string { return v.FrontendIpConfigurationName }).(pulumi.StringOutput)
}

// The ID of the associated Frontend Port.
func (o GetApplicationGatewayHttpListenerOutput) FrontendPortId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayHttpListener) string { return v.FrontendPortId }).(pulumi.StringOutput)
}

// The Name of the Frontend Port used for this HTTP Listener.
func (o GetApplicationGatewayHttpListenerOutput) FrontendPortName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayHttpListener) string { return v.FrontendPortName }).(pulumi.StringOutput)
}

// The Hostname which is used for this HTTP Listener.
func (o GetApplicationGatewayHttpListenerOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayHttpListener) string { return v.HostName }).(pulumi.StringOutput)
}

// A list of Hostname(s) used for this HTTP Listener. It allows special wildcard characters.
func (o GetApplicationGatewayHttpListenerOutput) HostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationGatewayHttpListener) []string { return v.HostNames }).(pulumi.StringArrayOutput)
}

// The ID of the Rewrite Rule Set
func (o GetApplicationGatewayHttpListenerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayHttpListener) string { return v.Id }).(pulumi.StringOutput)
}

// The name of this Application Gateway.
func (o GetApplicationGatewayHttpListenerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayHttpListener) string { return v.Name }).(pulumi.StringOutput)
}

// The Protocol used for this Probe.
func (o GetApplicationGatewayHttpListenerOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayHttpListener) string { return v.Protocol }).(pulumi.StringOutput)
}

// Is Server Name Indication required?
func (o GetApplicationGatewayHttpListenerOutput) RequireSni() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationGatewayHttpListener) bool { return v.RequireSni }).(pulumi.BoolOutput)
}

// The ID of the associated SSL Certificate.
func (o GetApplicationGatewayHttpListenerOutput) SslCertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayHttpListener) string { return v.SslCertificateId }).(pulumi.StringOutput)
}

// The name of the associated SSL Certificate which is used for this HTTP Listener.
func (o GetApplicationGatewayHttpListenerOutput) SslCertificateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayHttpListener) string { return v.SslCertificateName }).(pulumi.StringOutput)
}

// The ID of the associated SSL Profile.
func (o GetApplicationGatewayHttpListenerOutput) SslProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayHttpListener) string { return v.SslProfileId }).(pulumi.StringOutput)
}

// The name of the associated SSL Profile which is used for this HTTP Listener.
func (o GetApplicationGatewayHttpListenerOutput) SslProfileName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayHttpListener) string { return v.SslProfileName }).(pulumi.StringOutput)
}

type GetApplicationGatewayHttpListenerArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayHttpListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayHttpListener)(nil)).Elem()
}

func (o GetApplicationGatewayHttpListenerArrayOutput) ToGetApplicationGatewayHttpListenerArrayOutput() GetApplicationGatewayHttpListenerArrayOutput {
	return o
}

func (o GetApplicationGatewayHttpListenerArrayOutput) ToGetApplicationGatewayHttpListenerArrayOutputWithContext(ctx context.Context) GetApplicationGatewayHttpListenerArrayOutput {
	return o
}

func (o GetApplicationGatewayHttpListenerArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayHttpListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayHttpListener {
		return vs[0].([]GetApplicationGatewayHttpListener)[vs[1].(int)]
	}).(GetApplicationGatewayHttpListenerOutput)
}

type GetApplicationGatewayHttpListenerCustomErrorConfiguration struct {
	// Error page URL of the application gateway custom error.
	CustomErrorPageUrl string `pulumi:"customErrorPageUrl"`
	// The ID of the Rewrite Rule Set
	Id string `pulumi:"id"`
	// Status code of the application gateway custom error.
	StatusCode string `pulumi:"statusCode"`
}

// GetApplicationGatewayHttpListenerCustomErrorConfigurationInput is an input type that accepts GetApplicationGatewayHttpListenerCustomErrorConfigurationArgs and GetApplicationGatewayHttpListenerCustomErrorConfigurationOutput values.
// You can construct a concrete instance of `GetApplicationGatewayHttpListenerCustomErrorConfigurationInput` via:
//
//	GetApplicationGatewayHttpListenerCustomErrorConfigurationArgs{...}
type GetApplicationGatewayHttpListenerCustomErrorConfigurationInput interface {
	pulumi.Input

	ToGetApplicationGatewayHttpListenerCustomErrorConfigurationOutput() GetApplicationGatewayHttpListenerCustomErrorConfigurationOutput
	ToGetApplicationGatewayHttpListenerCustomErrorConfigurationOutputWithContext(context.Context) GetApplicationGatewayHttpListenerCustomErrorConfigurationOutput
}

type GetApplicationGatewayHttpListenerCustomErrorConfigurationArgs struct {
	// Error page URL of the application gateway custom error.
	CustomErrorPageUrl pulumi.StringInput `pulumi:"customErrorPageUrl"`
	// The ID of the Rewrite Rule Set
	Id pulumi.StringInput `pulumi:"id"`
	// Status code of the application gateway custom error.
	StatusCode pulumi.StringInput `pulumi:"statusCode"`
}

func (GetApplicationGatewayHttpListenerCustomErrorConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayHttpListenerCustomErrorConfiguration)(nil)).Elem()
}

func (i GetApplicationGatewayHttpListenerCustomErrorConfigurationArgs) ToGetApplicationGatewayHttpListenerCustomErrorConfigurationOutput() GetApplicationGatewayHttpListenerCustomErrorConfigurationOutput {
	return i.ToGetApplicationGatewayHttpListenerCustomErrorConfigurationOutputWithContext(context.Background())
}

func (i GetApplicationGatewayHttpListenerCustomErrorConfigurationArgs) ToGetApplicationGatewayHttpListenerCustomErrorConfigurationOutputWithContext(ctx context.Context) GetApplicationGatewayHttpListenerCustomErrorConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayHttpListenerCustomErrorConfigurationOutput)
}

// GetApplicationGatewayHttpListenerCustomErrorConfigurationArrayInput is an input type that accepts GetApplicationGatewayHttpListenerCustomErrorConfigurationArray and GetApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayHttpListenerCustomErrorConfigurationArrayInput` via:
//
//	GetApplicationGatewayHttpListenerCustomErrorConfigurationArray{ GetApplicationGatewayHttpListenerCustomErrorConfigurationArgs{...} }
type GetApplicationGatewayHttpListenerCustomErrorConfigurationArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput() GetApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput
	ToGetApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutputWithContext(context.Context) GetApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput
}

type GetApplicationGatewayHttpListenerCustomErrorConfigurationArray []GetApplicationGatewayHttpListenerCustomErrorConfigurationInput

func (GetApplicationGatewayHttpListenerCustomErrorConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayHttpListenerCustomErrorConfiguration)(nil)).Elem()
}

func (i GetApplicationGatewayHttpListenerCustomErrorConfigurationArray) ToGetApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput() GetApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput {
	return i.ToGetApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayHttpListenerCustomErrorConfigurationArray) ToGetApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutputWithContext(ctx context.Context) GetApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput)
}

type GetApplicationGatewayHttpListenerCustomErrorConfigurationOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayHttpListenerCustomErrorConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayHttpListenerCustomErrorConfiguration)(nil)).Elem()
}

func (o GetApplicationGatewayHttpListenerCustomErrorConfigurationOutput) ToGetApplicationGatewayHttpListenerCustomErrorConfigurationOutput() GetApplicationGatewayHttpListenerCustomErrorConfigurationOutput {
	return o
}

func (o GetApplicationGatewayHttpListenerCustomErrorConfigurationOutput) ToGetApplicationGatewayHttpListenerCustomErrorConfigurationOutputWithContext(ctx context.Context) GetApplicationGatewayHttpListenerCustomErrorConfigurationOutput {
	return o
}

// Error page URL of the application gateway custom error.
func (o GetApplicationGatewayHttpListenerCustomErrorConfigurationOutput) CustomErrorPageUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayHttpListenerCustomErrorConfiguration) string { return v.CustomErrorPageUrl }).(pulumi.StringOutput)
}

// The ID of the Rewrite Rule Set
func (o GetApplicationGatewayHttpListenerCustomErrorConfigurationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayHttpListenerCustomErrorConfiguration) string { return v.Id }).(pulumi.StringOutput)
}

// Status code of the application gateway custom error.
func (o GetApplicationGatewayHttpListenerCustomErrorConfigurationOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayHttpListenerCustomErrorConfiguration) string { return v.StatusCode }).(pulumi.StringOutput)
}

type GetApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayHttpListenerCustomErrorConfiguration)(nil)).Elem()
}

func (o GetApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput) ToGetApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput() GetApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput {
	return o
}

func (o GetApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput) ToGetApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutputWithContext(ctx context.Context) GetApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput {
	return o
}

func (o GetApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayHttpListenerCustomErrorConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayHttpListenerCustomErrorConfiguration {
		return vs[0].([]GetApplicationGatewayHttpListenerCustomErrorConfiguration)[vs[1].(int)]
	}).(GetApplicationGatewayHttpListenerCustomErrorConfigurationOutput)
}

type GetApplicationGatewayIdentity struct {
	// The list of User Assigned Managed Identity IDs assigned to this Application Gateway.
	IdentityIds []string `pulumi:"identityIds"`
	// The type of Managed Service Identity that is configured on this Application Gateway.
	Type string `pulumi:"type"`
}

// GetApplicationGatewayIdentityInput is an input type that accepts GetApplicationGatewayIdentityArgs and GetApplicationGatewayIdentityOutput values.
// You can construct a concrete instance of `GetApplicationGatewayIdentityInput` via:
//
//	GetApplicationGatewayIdentityArgs{...}
type GetApplicationGatewayIdentityInput interface {
	pulumi.Input

	ToGetApplicationGatewayIdentityOutput() GetApplicationGatewayIdentityOutput
	ToGetApplicationGatewayIdentityOutputWithContext(context.Context) GetApplicationGatewayIdentityOutput
}

type GetApplicationGatewayIdentityArgs struct {
	// The list of User Assigned Managed Identity IDs assigned to this Application Gateway.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The type of Managed Service Identity that is configured on this Application Gateway.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetApplicationGatewayIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayIdentity)(nil)).Elem()
}

func (i GetApplicationGatewayIdentityArgs) ToGetApplicationGatewayIdentityOutput() GetApplicationGatewayIdentityOutput {
	return i.ToGetApplicationGatewayIdentityOutputWithContext(context.Background())
}

func (i GetApplicationGatewayIdentityArgs) ToGetApplicationGatewayIdentityOutputWithContext(ctx context.Context) GetApplicationGatewayIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayIdentityOutput)
}

// GetApplicationGatewayIdentityArrayInput is an input type that accepts GetApplicationGatewayIdentityArray and GetApplicationGatewayIdentityArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayIdentityArrayInput` via:
//
//	GetApplicationGatewayIdentityArray{ GetApplicationGatewayIdentityArgs{...} }
type GetApplicationGatewayIdentityArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayIdentityArrayOutput() GetApplicationGatewayIdentityArrayOutput
	ToGetApplicationGatewayIdentityArrayOutputWithContext(context.Context) GetApplicationGatewayIdentityArrayOutput
}

type GetApplicationGatewayIdentityArray []GetApplicationGatewayIdentityInput

func (GetApplicationGatewayIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayIdentity)(nil)).Elem()
}

func (i GetApplicationGatewayIdentityArray) ToGetApplicationGatewayIdentityArrayOutput() GetApplicationGatewayIdentityArrayOutput {
	return i.ToGetApplicationGatewayIdentityArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayIdentityArray) ToGetApplicationGatewayIdentityArrayOutputWithContext(ctx context.Context) GetApplicationGatewayIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayIdentityArrayOutput)
}

type GetApplicationGatewayIdentityOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayIdentity)(nil)).Elem()
}

func (o GetApplicationGatewayIdentityOutput) ToGetApplicationGatewayIdentityOutput() GetApplicationGatewayIdentityOutput {
	return o
}

func (o GetApplicationGatewayIdentityOutput) ToGetApplicationGatewayIdentityOutputWithContext(ctx context.Context) GetApplicationGatewayIdentityOutput {
	return o
}

// The list of User Assigned Managed Identity IDs assigned to this Application Gateway.
func (o GetApplicationGatewayIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationGatewayIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The type of Managed Service Identity that is configured on this Application Gateway.
func (o GetApplicationGatewayIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type GetApplicationGatewayIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayIdentity)(nil)).Elem()
}

func (o GetApplicationGatewayIdentityArrayOutput) ToGetApplicationGatewayIdentityArrayOutput() GetApplicationGatewayIdentityArrayOutput {
	return o
}

func (o GetApplicationGatewayIdentityArrayOutput) ToGetApplicationGatewayIdentityArrayOutputWithContext(ctx context.Context) GetApplicationGatewayIdentityArrayOutput {
	return o
}

func (o GetApplicationGatewayIdentityArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayIdentity {
		return vs[0].([]GetApplicationGatewayIdentity)[vs[1].(int)]
	}).(GetApplicationGatewayIdentityOutput)
}

type GetApplicationGatewayPrivateEndpointConnection struct {
	// The ID of the Rewrite Rule Set
	Id string `pulumi:"id"`
	// The name of this Application Gateway.
	Name string `pulumi:"name"`
}

// GetApplicationGatewayPrivateEndpointConnectionInput is an input type that accepts GetApplicationGatewayPrivateEndpointConnectionArgs and GetApplicationGatewayPrivateEndpointConnectionOutput values.
// You can construct a concrete instance of `GetApplicationGatewayPrivateEndpointConnectionInput` via:
//
//	GetApplicationGatewayPrivateEndpointConnectionArgs{...}
type GetApplicationGatewayPrivateEndpointConnectionInput interface {
	pulumi.Input

	ToGetApplicationGatewayPrivateEndpointConnectionOutput() GetApplicationGatewayPrivateEndpointConnectionOutput
	ToGetApplicationGatewayPrivateEndpointConnectionOutputWithContext(context.Context) GetApplicationGatewayPrivateEndpointConnectionOutput
}

type GetApplicationGatewayPrivateEndpointConnectionArgs struct {
	// The ID of the Rewrite Rule Set
	Id pulumi.StringInput `pulumi:"id"`
	// The name of this Application Gateway.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetApplicationGatewayPrivateEndpointConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayPrivateEndpointConnection)(nil)).Elem()
}

func (i GetApplicationGatewayPrivateEndpointConnectionArgs) ToGetApplicationGatewayPrivateEndpointConnectionOutput() GetApplicationGatewayPrivateEndpointConnectionOutput {
	return i.ToGetApplicationGatewayPrivateEndpointConnectionOutputWithContext(context.Background())
}

func (i GetApplicationGatewayPrivateEndpointConnectionArgs) ToGetApplicationGatewayPrivateEndpointConnectionOutputWithContext(ctx context.Context) GetApplicationGatewayPrivateEndpointConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayPrivateEndpointConnectionOutput)
}

// GetApplicationGatewayPrivateEndpointConnectionArrayInput is an input type that accepts GetApplicationGatewayPrivateEndpointConnectionArray and GetApplicationGatewayPrivateEndpointConnectionArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayPrivateEndpointConnectionArrayInput` via:
//
//	GetApplicationGatewayPrivateEndpointConnectionArray{ GetApplicationGatewayPrivateEndpointConnectionArgs{...} }
type GetApplicationGatewayPrivateEndpointConnectionArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayPrivateEndpointConnectionArrayOutput() GetApplicationGatewayPrivateEndpointConnectionArrayOutput
	ToGetApplicationGatewayPrivateEndpointConnectionArrayOutputWithContext(context.Context) GetApplicationGatewayPrivateEndpointConnectionArrayOutput
}

type GetApplicationGatewayPrivateEndpointConnectionArray []GetApplicationGatewayPrivateEndpointConnectionInput

func (GetApplicationGatewayPrivateEndpointConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayPrivateEndpointConnection)(nil)).Elem()
}

func (i GetApplicationGatewayPrivateEndpointConnectionArray) ToGetApplicationGatewayPrivateEndpointConnectionArrayOutput() GetApplicationGatewayPrivateEndpointConnectionArrayOutput {
	return i.ToGetApplicationGatewayPrivateEndpointConnectionArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayPrivateEndpointConnectionArray) ToGetApplicationGatewayPrivateEndpointConnectionArrayOutputWithContext(ctx context.Context) GetApplicationGatewayPrivateEndpointConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayPrivateEndpointConnectionArrayOutput)
}

type GetApplicationGatewayPrivateEndpointConnectionOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayPrivateEndpointConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayPrivateEndpointConnection)(nil)).Elem()
}

func (o GetApplicationGatewayPrivateEndpointConnectionOutput) ToGetApplicationGatewayPrivateEndpointConnectionOutput() GetApplicationGatewayPrivateEndpointConnectionOutput {
	return o
}

func (o GetApplicationGatewayPrivateEndpointConnectionOutput) ToGetApplicationGatewayPrivateEndpointConnectionOutputWithContext(ctx context.Context) GetApplicationGatewayPrivateEndpointConnectionOutput {
	return o
}

// The ID of the Rewrite Rule Set
func (o GetApplicationGatewayPrivateEndpointConnectionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayPrivateEndpointConnection) string { return v.Id }).(pulumi.StringOutput)
}

// The name of this Application Gateway.
func (o GetApplicationGatewayPrivateEndpointConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayPrivateEndpointConnection) string { return v.Name }).(pulumi.StringOutput)
}

type GetApplicationGatewayPrivateEndpointConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayPrivateEndpointConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayPrivateEndpointConnection)(nil)).Elem()
}

func (o GetApplicationGatewayPrivateEndpointConnectionArrayOutput) ToGetApplicationGatewayPrivateEndpointConnectionArrayOutput() GetApplicationGatewayPrivateEndpointConnectionArrayOutput {
	return o
}

func (o GetApplicationGatewayPrivateEndpointConnectionArrayOutput) ToGetApplicationGatewayPrivateEndpointConnectionArrayOutputWithContext(ctx context.Context) GetApplicationGatewayPrivateEndpointConnectionArrayOutput {
	return o
}

func (o GetApplicationGatewayPrivateEndpointConnectionArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayPrivateEndpointConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayPrivateEndpointConnection {
		return vs[0].([]GetApplicationGatewayPrivateEndpointConnection)[vs[1].(int)]
	}).(GetApplicationGatewayPrivateEndpointConnectionOutput)
}

type GetApplicationGatewayPrivateLinkConfiguration struct {
	// The ID of the Rewrite Rule Set
	Id string `pulumi:"id"`
	// One or more `ipConfiguration` blocks as defined below.
	IpConfigurations []GetApplicationGatewayPrivateLinkConfigurationIpConfiguration `pulumi:"ipConfigurations"`
	// The name of this Application Gateway.
	Name string `pulumi:"name"`
}

// GetApplicationGatewayPrivateLinkConfigurationInput is an input type that accepts GetApplicationGatewayPrivateLinkConfigurationArgs and GetApplicationGatewayPrivateLinkConfigurationOutput values.
// You can construct a concrete instance of `GetApplicationGatewayPrivateLinkConfigurationInput` via:
//
//	GetApplicationGatewayPrivateLinkConfigurationArgs{...}
type GetApplicationGatewayPrivateLinkConfigurationInput interface {
	pulumi.Input

	ToGetApplicationGatewayPrivateLinkConfigurationOutput() GetApplicationGatewayPrivateLinkConfigurationOutput
	ToGetApplicationGatewayPrivateLinkConfigurationOutputWithContext(context.Context) GetApplicationGatewayPrivateLinkConfigurationOutput
}

type GetApplicationGatewayPrivateLinkConfigurationArgs struct {
	// The ID of the Rewrite Rule Set
	Id pulumi.StringInput `pulumi:"id"`
	// One or more `ipConfiguration` blocks as defined below.
	IpConfigurations GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayInput `pulumi:"ipConfigurations"`
	// The name of this Application Gateway.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetApplicationGatewayPrivateLinkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayPrivateLinkConfiguration)(nil)).Elem()
}

func (i GetApplicationGatewayPrivateLinkConfigurationArgs) ToGetApplicationGatewayPrivateLinkConfigurationOutput() GetApplicationGatewayPrivateLinkConfigurationOutput {
	return i.ToGetApplicationGatewayPrivateLinkConfigurationOutputWithContext(context.Background())
}

func (i GetApplicationGatewayPrivateLinkConfigurationArgs) ToGetApplicationGatewayPrivateLinkConfigurationOutputWithContext(ctx context.Context) GetApplicationGatewayPrivateLinkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayPrivateLinkConfigurationOutput)
}

// GetApplicationGatewayPrivateLinkConfigurationArrayInput is an input type that accepts GetApplicationGatewayPrivateLinkConfigurationArray and GetApplicationGatewayPrivateLinkConfigurationArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayPrivateLinkConfigurationArrayInput` via:
//
//	GetApplicationGatewayPrivateLinkConfigurationArray{ GetApplicationGatewayPrivateLinkConfigurationArgs{...} }
type GetApplicationGatewayPrivateLinkConfigurationArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayPrivateLinkConfigurationArrayOutput() GetApplicationGatewayPrivateLinkConfigurationArrayOutput
	ToGetApplicationGatewayPrivateLinkConfigurationArrayOutputWithContext(context.Context) GetApplicationGatewayPrivateLinkConfigurationArrayOutput
}

type GetApplicationGatewayPrivateLinkConfigurationArray []GetApplicationGatewayPrivateLinkConfigurationInput

func (GetApplicationGatewayPrivateLinkConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayPrivateLinkConfiguration)(nil)).Elem()
}

func (i GetApplicationGatewayPrivateLinkConfigurationArray) ToGetApplicationGatewayPrivateLinkConfigurationArrayOutput() GetApplicationGatewayPrivateLinkConfigurationArrayOutput {
	return i.ToGetApplicationGatewayPrivateLinkConfigurationArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayPrivateLinkConfigurationArray) ToGetApplicationGatewayPrivateLinkConfigurationArrayOutputWithContext(ctx context.Context) GetApplicationGatewayPrivateLinkConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayPrivateLinkConfigurationArrayOutput)
}

type GetApplicationGatewayPrivateLinkConfigurationOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayPrivateLinkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayPrivateLinkConfiguration)(nil)).Elem()
}

func (o GetApplicationGatewayPrivateLinkConfigurationOutput) ToGetApplicationGatewayPrivateLinkConfigurationOutput() GetApplicationGatewayPrivateLinkConfigurationOutput {
	return o
}

func (o GetApplicationGatewayPrivateLinkConfigurationOutput) ToGetApplicationGatewayPrivateLinkConfigurationOutputWithContext(ctx context.Context) GetApplicationGatewayPrivateLinkConfigurationOutput {
	return o
}

// The ID of the Rewrite Rule Set
func (o GetApplicationGatewayPrivateLinkConfigurationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayPrivateLinkConfiguration) string { return v.Id }).(pulumi.StringOutput)
}

// One or more `ipConfiguration` blocks as defined below.
func (o GetApplicationGatewayPrivateLinkConfigurationOutput) IpConfigurations() GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput {
	return o.ApplyT(func(v GetApplicationGatewayPrivateLinkConfiguration) []GetApplicationGatewayPrivateLinkConfigurationIpConfiguration {
		return v.IpConfigurations
	}).(GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput)
}

// The name of this Application Gateway.
func (o GetApplicationGatewayPrivateLinkConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayPrivateLinkConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

type GetApplicationGatewayPrivateLinkConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayPrivateLinkConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayPrivateLinkConfiguration)(nil)).Elem()
}

func (o GetApplicationGatewayPrivateLinkConfigurationArrayOutput) ToGetApplicationGatewayPrivateLinkConfigurationArrayOutput() GetApplicationGatewayPrivateLinkConfigurationArrayOutput {
	return o
}

func (o GetApplicationGatewayPrivateLinkConfigurationArrayOutput) ToGetApplicationGatewayPrivateLinkConfigurationArrayOutputWithContext(ctx context.Context) GetApplicationGatewayPrivateLinkConfigurationArrayOutput {
	return o
}

func (o GetApplicationGatewayPrivateLinkConfigurationArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayPrivateLinkConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayPrivateLinkConfiguration {
		return vs[0].([]GetApplicationGatewayPrivateLinkConfiguration)[vs[1].(int)]
	}).(GetApplicationGatewayPrivateLinkConfigurationOutput)
}

type GetApplicationGatewayPrivateLinkConfigurationIpConfiguration struct {
	// The name of this Application Gateway.
	Name string `pulumi:"name"`
	// Is this the Primary IP Configuration?
	Primary bool `pulumi:"primary"`
	// The Static IP Address which is used.
	PrivateIpAddress string `pulumi:"privateIpAddress"`
	// The allocation method used for the Private IP Address.
	PrivateIpAddressAllocation string `pulumi:"privateIpAddressAllocation"`
	// The ID of the subnet the private link configuration is connected to.
	SubnetId string `pulumi:"subnetId"`
}

// GetApplicationGatewayPrivateLinkConfigurationIpConfigurationInput is an input type that accepts GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArgs and GetApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput values.
// You can construct a concrete instance of `GetApplicationGatewayPrivateLinkConfigurationIpConfigurationInput` via:
//
//	GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArgs{...}
type GetApplicationGatewayPrivateLinkConfigurationIpConfigurationInput interface {
	pulumi.Input

	ToGetApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput() GetApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput
	ToGetApplicationGatewayPrivateLinkConfigurationIpConfigurationOutputWithContext(context.Context) GetApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput
}

type GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArgs struct {
	// The name of this Application Gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// Is this the Primary IP Configuration?
	Primary pulumi.BoolInput `pulumi:"primary"`
	// The Static IP Address which is used.
	PrivateIpAddress pulumi.StringInput `pulumi:"privateIpAddress"`
	// The allocation method used for the Private IP Address.
	PrivateIpAddressAllocation pulumi.StringInput `pulumi:"privateIpAddressAllocation"`
	// The ID of the subnet the private link configuration is connected to.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayPrivateLinkConfigurationIpConfiguration)(nil)).Elem()
}

func (i GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArgs) ToGetApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput() GetApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput {
	return i.ToGetApplicationGatewayPrivateLinkConfigurationIpConfigurationOutputWithContext(context.Background())
}

func (i GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArgs) ToGetApplicationGatewayPrivateLinkConfigurationIpConfigurationOutputWithContext(ctx context.Context) GetApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput)
}

// GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayInput is an input type that accepts GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArray and GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayInput` via:
//
//	GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArray{ GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArgs{...} }
type GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput() GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput
	ToGetApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutputWithContext(context.Context) GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput
}

type GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArray []GetApplicationGatewayPrivateLinkConfigurationIpConfigurationInput

func (GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayPrivateLinkConfigurationIpConfiguration)(nil)).Elem()
}

func (i GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArray) ToGetApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput() GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput {
	return i.ToGetApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArray) ToGetApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutputWithContext(ctx context.Context) GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput)
}

type GetApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayPrivateLinkConfigurationIpConfiguration)(nil)).Elem()
}

func (o GetApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput) ToGetApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput() GetApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput {
	return o
}

func (o GetApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput) ToGetApplicationGatewayPrivateLinkConfigurationIpConfigurationOutputWithContext(ctx context.Context) GetApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput {
	return o
}

// The name of this Application Gateway.
func (o GetApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayPrivateLinkConfigurationIpConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// Is this the Primary IP Configuration?
func (o GetApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput) Primary() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationGatewayPrivateLinkConfigurationIpConfiguration) bool { return v.Primary }).(pulumi.BoolOutput)
}

// The Static IP Address which is used.
func (o GetApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayPrivateLinkConfigurationIpConfiguration) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

// The allocation method used for the Private IP Address.
func (o GetApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput) PrivateIpAddressAllocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayPrivateLinkConfigurationIpConfiguration) string {
		return v.PrivateIpAddressAllocation
	}).(pulumi.StringOutput)
}

// The ID of the subnet the private link configuration is connected to.
func (o GetApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayPrivateLinkConfigurationIpConfiguration) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayPrivateLinkConfigurationIpConfiguration)(nil)).Elem()
}

func (o GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput) ToGetApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput() GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput {
	return o
}

func (o GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput) ToGetApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutputWithContext(ctx context.Context) GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput {
	return o
}

func (o GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayPrivateLinkConfigurationIpConfiguration {
		return vs[0].([]GetApplicationGatewayPrivateLinkConfigurationIpConfiguration)[vs[1].(int)]
	}).(GetApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput)
}

type GetApplicationGatewayProbe struct {
	// The Hostname used for this Probe.
	Host string `pulumi:"host"`
	// The ID of the Rewrite Rule Set
	Id string `pulumi:"id"`
	// The Interval between two consecutive probes in seconds.
	Interval int `pulumi:"interval"`
	// A `match` block as defined above.
	Matches []GetApplicationGatewayProbeMatch `pulumi:"matches"`
	// The minimum number of servers that are always marked as healthy.
	MinimumServers int `pulumi:"minimumServers"`
	// The name of this Application Gateway.
	Name string `pulumi:"name"`
	// The URL path to rewrite.
	Path string `pulumi:"path"`
	// Whether the host header is picked from the backend HTTP settings.
	PickHostNameFromBackendHttpSettings bool `pulumi:"pickHostNameFromBackendHttpSettings"`
	// Custom port which is used for probing the backend servers.
	Port int `pulumi:"port"`
	// The Protocol used for this Probe.
	Protocol string `pulumi:"protocol"`
	// The Timeout used for this Probe, indicating when a probe becomes unhealthy.
	Timeout int `pulumi:"timeout"`
	// The Unhealthy Threshold for this Probe, which indicates the amount of retries which will be attempted before a node is deemed unhealthy.
	UnhealthyThreshold int `pulumi:"unhealthyThreshold"`
}

// GetApplicationGatewayProbeInput is an input type that accepts GetApplicationGatewayProbeArgs and GetApplicationGatewayProbeOutput values.
// You can construct a concrete instance of `GetApplicationGatewayProbeInput` via:
//
//	GetApplicationGatewayProbeArgs{...}
type GetApplicationGatewayProbeInput interface {
	pulumi.Input

	ToGetApplicationGatewayProbeOutput() GetApplicationGatewayProbeOutput
	ToGetApplicationGatewayProbeOutputWithContext(context.Context) GetApplicationGatewayProbeOutput
}

type GetApplicationGatewayProbeArgs struct {
	// The Hostname used for this Probe.
	Host pulumi.StringInput `pulumi:"host"`
	// The ID of the Rewrite Rule Set
	Id pulumi.StringInput `pulumi:"id"`
	// The Interval between two consecutive probes in seconds.
	Interval pulumi.IntInput `pulumi:"interval"`
	// A `match` block as defined above.
	Matches GetApplicationGatewayProbeMatchArrayInput `pulumi:"matches"`
	// The minimum number of servers that are always marked as healthy.
	MinimumServers pulumi.IntInput `pulumi:"minimumServers"`
	// The name of this Application Gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// The URL path to rewrite.
	Path pulumi.StringInput `pulumi:"path"`
	// Whether the host header is picked from the backend HTTP settings.
	PickHostNameFromBackendHttpSettings pulumi.BoolInput `pulumi:"pickHostNameFromBackendHttpSettings"`
	// Custom port which is used for probing the backend servers.
	Port pulumi.IntInput `pulumi:"port"`
	// The Protocol used for this Probe.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The Timeout used for this Probe, indicating when a probe becomes unhealthy.
	Timeout pulumi.IntInput `pulumi:"timeout"`
	// The Unhealthy Threshold for this Probe, which indicates the amount of retries which will be attempted before a node is deemed unhealthy.
	UnhealthyThreshold pulumi.IntInput `pulumi:"unhealthyThreshold"`
}

func (GetApplicationGatewayProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayProbe)(nil)).Elem()
}

func (i GetApplicationGatewayProbeArgs) ToGetApplicationGatewayProbeOutput() GetApplicationGatewayProbeOutput {
	return i.ToGetApplicationGatewayProbeOutputWithContext(context.Background())
}

func (i GetApplicationGatewayProbeArgs) ToGetApplicationGatewayProbeOutputWithContext(ctx context.Context) GetApplicationGatewayProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayProbeOutput)
}

// GetApplicationGatewayProbeArrayInput is an input type that accepts GetApplicationGatewayProbeArray and GetApplicationGatewayProbeArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayProbeArrayInput` via:
//
//	GetApplicationGatewayProbeArray{ GetApplicationGatewayProbeArgs{...} }
type GetApplicationGatewayProbeArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayProbeArrayOutput() GetApplicationGatewayProbeArrayOutput
	ToGetApplicationGatewayProbeArrayOutputWithContext(context.Context) GetApplicationGatewayProbeArrayOutput
}

type GetApplicationGatewayProbeArray []GetApplicationGatewayProbeInput

func (GetApplicationGatewayProbeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayProbe)(nil)).Elem()
}

func (i GetApplicationGatewayProbeArray) ToGetApplicationGatewayProbeArrayOutput() GetApplicationGatewayProbeArrayOutput {
	return i.ToGetApplicationGatewayProbeArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayProbeArray) ToGetApplicationGatewayProbeArrayOutputWithContext(ctx context.Context) GetApplicationGatewayProbeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayProbeArrayOutput)
}

type GetApplicationGatewayProbeOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayProbe)(nil)).Elem()
}

func (o GetApplicationGatewayProbeOutput) ToGetApplicationGatewayProbeOutput() GetApplicationGatewayProbeOutput {
	return o
}

func (o GetApplicationGatewayProbeOutput) ToGetApplicationGatewayProbeOutputWithContext(ctx context.Context) GetApplicationGatewayProbeOutput {
	return o
}

// The Hostname used for this Probe.
func (o GetApplicationGatewayProbeOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayProbe) string { return v.Host }).(pulumi.StringOutput)
}

// The ID of the Rewrite Rule Set
func (o GetApplicationGatewayProbeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayProbe) string { return v.Id }).(pulumi.StringOutput)
}

// The Interval between two consecutive probes in seconds.
func (o GetApplicationGatewayProbeOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationGatewayProbe) int { return v.Interval }).(pulumi.IntOutput)
}

// A `match` block as defined above.
func (o GetApplicationGatewayProbeOutput) Matches() GetApplicationGatewayProbeMatchArrayOutput {
	return o.ApplyT(func(v GetApplicationGatewayProbe) []GetApplicationGatewayProbeMatch { return v.Matches }).(GetApplicationGatewayProbeMatchArrayOutput)
}

// The minimum number of servers that are always marked as healthy.
func (o GetApplicationGatewayProbeOutput) MinimumServers() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationGatewayProbe) int { return v.MinimumServers }).(pulumi.IntOutput)
}

// The name of this Application Gateway.
func (o GetApplicationGatewayProbeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayProbe) string { return v.Name }).(pulumi.StringOutput)
}

// The URL path to rewrite.
func (o GetApplicationGatewayProbeOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayProbe) string { return v.Path }).(pulumi.StringOutput)
}

// Whether the host header is picked from the backend HTTP settings.
func (o GetApplicationGatewayProbeOutput) PickHostNameFromBackendHttpSettings() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationGatewayProbe) bool { return v.PickHostNameFromBackendHttpSettings }).(pulumi.BoolOutput)
}

// Custom port which is used for probing the backend servers.
func (o GetApplicationGatewayProbeOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationGatewayProbe) int { return v.Port }).(pulumi.IntOutput)
}

// The Protocol used for this Probe.
func (o GetApplicationGatewayProbeOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayProbe) string { return v.Protocol }).(pulumi.StringOutput)
}

// The Timeout used for this Probe, indicating when a probe becomes unhealthy.
func (o GetApplicationGatewayProbeOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationGatewayProbe) int { return v.Timeout }).(pulumi.IntOutput)
}

// The Unhealthy Threshold for this Probe, which indicates the amount of retries which will be attempted before a node is deemed unhealthy.
func (o GetApplicationGatewayProbeOutput) UnhealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationGatewayProbe) int { return v.UnhealthyThreshold }).(pulumi.IntOutput)
}

type GetApplicationGatewayProbeArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayProbeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayProbe)(nil)).Elem()
}

func (o GetApplicationGatewayProbeArrayOutput) ToGetApplicationGatewayProbeArrayOutput() GetApplicationGatewayProbeArrayOutput {
	return o
}

func (o GetApplicationGatewayProbeArrayOutput) ToGetApplicationGatewayProbeArrayOutputWithContext(ctx context.Context) GetApplicationGatewayProbeArrayOutput {
	return o
}

func (o GetApplicationGatewayProbeArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayProbeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayProbe {
		return vs[0].([]GetApplicationGatewayProbe)[vs[1].(int)]
	}).(GetApplicationGatewayProbeOutput)
}

type GetApplicationGatewayProbeMatch struct {
	// A snippet from the Response Body which must be present in the Response.
	Body string `pulumi:"body"`
	// Status code of the application gateway custom error.
	StatusCodes []string `pulumi:"statusCodes"`
}

// GetApplicationGatewayProbeMatchInput is an input type that accepts GetApplicationGatewayProbeMatchArgs and GetApplicationGatewayProbeMatchOutput values.
// You can construct a concrete instance of `GetApplicationGatewayProbeMatchInput` via:
//
//	GetApplicationGatewayProbeMatchArgs{...}
type GetApplicationGatewayProbeMatchInput interface {
	pulumi.Input

	ToGetApplicationGatewayProbeMatchOutput() GetApplicationGatewayProbeMatchOutput
	ToGetApplicationGatewayProbeMatchOutputWithContext(context.Context) GetApplicationGatewayProbeMatchOutput
}

type GetApplicationGatewayProbeMatchArgs struct {
	// A snippet from the Response Body which must be present in the Response.
	Body pulumi.StringInput `pulumi:"body"`
	// Status code of the application gateway custom error.
	StatusCodes pulumi.StringArrayInput `pulumi:"statusCodes"`
}

func (GetApplicationGatewayProbeMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayProbeMatch)(nil)).Elem()
}

func (i GetApplicationGatewayProbeMatchArgs) ToGetApplicationGatewayProbeMatchOutput() GetApplicationGatewayProbeMatchOutput {
	return i.ToGetApplicationGatewayProbeMatchOutputWithContext(context.Background())
}

func (i GetApplicationGatewayProbeMatchArgs) ToGetApplicationGatewayProbeMatchOutputWithContext(ctx context.Context) GetApplicationGatewayProbeMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayProbeMatchOutput)
}

// GetApplicationGatewayProbeMatchArrayInput is an input type that accepts GetApplicationGatewayProbeMatchArray and GetApplicationGatewayProbeMatchArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayProbeMatchArrayInput` via:
//
//	GetApplicationGatewayProbeMatchArray{ GetApplicationGatewayProbeMatchArgs{...} }
type GetApplicationGatewayProbeMatchArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayProbeMatchArrayOutput() GetApplicationGatewayProbeMatchArrayOutput
	ToGetApplicationGatewayProbeMatchArrayOutputWithContext(context.Context) GetApplicationGatewayProbeMatchArrayOutput
}

type GetApplicationGatewayProbeMatchArray []GetApplicationGatewayProbeMatchInput

func (GetApplicationGatewayProbeMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayProbeMatch)(nil)).Elem()
}

func (i GetApplicationGatewayProbeMatchArray) ToGetApplicationGatewayProbeMatchArrayOutput() GetApplicationGatewayProbeMatchArrayOutput {
	return i.ToGetApplicationGatewayProbeMatchArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayProbeMatchArray) ToGetApplicationGatewayProbeMatchArrayOutputWithContext(ctx context.Context) GetApplicationGatewayProbeMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayProbeMatchArrayOutput)
}

type GetApplicationGatewayProbeMatchOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayProbeMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayProbeMatch)(nil)).Elem()
}

func (o GetApplicationGatewayProbeMatchOutput) ToGetApplicationGatewayProbeMatchOutput() GetApplicationGatewayProbeMatchOutput {
	return o
}

func (o GetApplicationGatewayProbeMatchOutput) ToGetApplicationGatewayProbeMatchOutputWithContext(ctx context.Context) GetApplicationGatewayProbeMatchOutput {
	return o
}

// A snippet from the Response Body which must be present in the Response.
func (o GetApplicationGatewayProbeMatchOutput) Body() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayProbeMatch) string { return v.Body }).(pulumi.StringOutput)
}

// Status code of the application gateway custom error.
func (o GetApplicationGatewayProbeMatchOutput) StatusCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationGatewayProbeMatch) []string { return v.StatusCodes }).(pulumi.StringArrayOutput)
}

type GetApplicationGatewayProbeMatchArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayProbeMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayProbeMatch)(nil)).Elem()
}

func (o GetApplicationGatewayProbeMatchArrayOutput) ToGetApplicationGatewayProbeMatchArrayOutput() GetApplicationGatewayProbeMatchArrayOutput {
	return o
}

func (o GetApplicationGatewayProbeMatchArrayOutput) ToGetApplicationGatewayProbeMatchArrayOutputWithContext(ctx context.Context) GetApplicationGatewayProbeMatchArrayOutput {
	return o
}

func (o GetApplicationGatewayProbeMatchArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayProbeMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayProbeMatch {
		return vs[0].([]GetApplicationGatewayProbeMatch)[vs[1].(int)]
	}).(GetApplicationGatewayProbeMatchOutput)
}

type GetApplicationGatewayRedirectConfiguration struct {
	// The ID of the Rewrite Rule Set
	Id string `pulumi:"id"`
	// Whether the path is included in the redirected URL.
	IncludePath bool `pulumi:"includePath"`
	// Whether to include the query string in the redirected URL.
	IncludeQueryString bool `pulumi:"includeQueryString"`
	// The name of this Application Gateway.
	Name string `pulumi:"name"`
	// The type of redirect.
	RedirectType     string `pulumi:"redirectType"`
	TargetListenerId string `pulumi:"targetListenerId"`
	// The name of the listener to redirect to.
	TargetListenerName string `pulumi:"targetListenerName"`
	// The URL to redirect the request to.
	TargetUrl string `pulumi:"targetUrl"`
}

// GetApplicationGatewayRedirectConfigurationInput is an input type that accepts GetApplicationGatewayRedirectConfigurationArgs and GetApplicationGatewayRedirectConfigurationOutput values.
// You can construct a concrete instance of `GetApplicationGatewayRedirectConfigurationInput` via:
//
//	GetApplicationGatewayRedirectConfigurationArgs{...}
type GetApplicationGatewayRedirectConfigurationInput interface {
	pulumi.Input

	ToGetApplicationGatewayRedirectConfigurationOutput() GetApplicationGatewayRedirectConfigurationOutput
	ToGetApplicationGatewayRedirectConfigurationOutputWithContext(context.Context) GetApplicationGatewayRedirectConfigurationOutput
}

type GetApplicationGatewayRedirectConfigurationArgs struct {
	// The ID of the Rewrite Rule Set
	Id pulumi.StringInput `pulumi:"id"`
	// Whether the path is included in the redirected URL.
	IncludePath pulumi.BoolInput `pulumi:"includePath"`
	// Whether to include the query string in the redirected URL.
	IncludeQueryString pulumi.BoolInput `pulumi:"includeQueryString"`
	// The name of this Application Gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of redirect.
	RedirectType     pulumi.StringInput `pulumi:"redirectType"`
	TargetListenerId pulumi.StringInput `pulumi:"targetListenerId"`
	// The name of the listener to redirect to.
	TargetListenerName pulumi.StringInput `pulumi:"targetListenerName"`
	// The URL to redirect the request to.
	TargetUrl pulumi.StringInput `pulumi:"targetUrl"`
}

func (GetApplicationGatewayRedirectConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayRedirectConfiguration)(nil)).Elem()
}

func (i GetApplicationGatewayRedirectConfigurationArgs) ToGetApplicationGatewayRedirectConfigurationOutput() GetApplicationGatewayRedirectConfigurationOutput {
	return i.ToGetApplicationGatewayRedirectConfigurationOutputWithContext(context.Background())
}

func (i GetApplicationGatewayRedirectConfigurationArgs) ToGetApplicationGatewayRedirectConfigurationOutputWithContext(ctx context.Context) GetApplicationGatewayRedirectConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayRedirectConfigurationOutput)
}

// GetApplicationGatewayRedirectConfigurationArrayInput is an input type that accepts GetApplicationGatewayRedirectConfigurationArray and GetApplicationGatewayRedirectConfigurationArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayRedirectConfigurationArrayInput` via:
//
//	GetApplicationGatewayRedirectConfigurationArray{ GetApplicationGatewayRedirectConfigurationArgs{...} }
type GetApplicationGatewayRedirectConfigurationArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayRedirectConfigurationArrayOutput() GetApplicationGatewayRedirectConfigurationArrayOutput
	ToGetApplicationGatewayRedirectConfigurationArrayOutputWithContext(context.Context) GetApplicationGatewayRedirectConfigurationArrayOutput
}

type GetApplicationGatewayRedirectConfigurationArray []GetApplicationGatewayRedirectConfigurationInput

func (GetApplicationGatewayRedirectConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayRedirectConfiguration)(nil)).Elem()
}

func (i GetApplicationGatewayRedirectConfigurationArray) ToGetApplicationGatewayRedirectConfigurationArrayOutput() GetApplicationGatewayRedirectConfigurationArrayOutput {
	return i.ToGetApplicationGatewayRedirectConfigurationArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayRedirectConfigurationArray) ToGetApplicationGatewayRedirectConfigurationArrayOutputWithContext(ctx context.Context) GetApplicationGatewayRedirectConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayRedirectConfigurationArrayOutput)
}

type GetApplicationGatewayRedirectConfigurationOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayRedirectConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayRedirectConfiguration)(nil)).Elem()
}

func (o GetApplicationGatewayRedirectConfigurationOutput) ToGetApplicationGatewayRedirectConfigurationOutput() GetApplicationGatewayRedirectConfigurationOutput {
	return o
}

func (o GetApplicationGatewayRedirectConfigurationOutput) ToGetApplicationGatewayRedirectConfigurationOutputWithContext(ctx context.Context) GetApplicationGatewayRedirectConfigurationOutput {
	return o
}

// The ID of the Rewrite Rule Set
func (o GetApplicationGatewayRedirectConfigurationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRedirectConfiguration) string { return v.Id }).(pulumi.StringOutput)
}

// Whether the path is included in the redirected URL.
func (o GetApplicationGatewayRedirectConfigurationOutput) IncludePath() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationGatewayRedirectConfiguration) bool { return v.IncludePath }).(pulumi.BoolOutput)
}

// Whether to include the query string in the redirected URL.
func (o GetApplicationGatewayRedirectConfigurationOutput) IncludeQueryString() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationGatewayRedirectConfiguration) bool { return v.IncludeQueryString }).(pulumi.BoolOutput)
}

// The name of this Application Gateway.
func (o GetApplicationGatewayRedirectConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRedirectConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// The type of redirect.
func (o GetApplicationGatewayRedirectConfigurationOutput) RedirectType() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRedirectConfiguration) string { return v.RedirectType }).(pulumi.StringOutput)
}

func (o GetApplicationGatewayRedirectConfigurationOutput) TargetListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRedirectConfiguration) string { return v.TargetListenerId }).(pulumi.StringOutput)
}

// The name of the listener to redirect to.
func (o GetApplicationGatewayRedirectConfigurationOutput) TargetListenerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRedirectConfiguration) string { return v.TargetListenerName }).(pulumi.StringOutput)
}

// The URL to redirect the request to.
func (o GetApplicationGatewayRedirectConfigurationOutput) TargetUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRedirectConfiguration) string { return v.TargetUrl }).(pulumi.StringOutput)
}

type GetApplicationGatewayRedirectConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayRedirectConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayRedirectConfiguration)(nil)).Elem()
}

func (o GetApplicationGatewayRedirectConfigurationArrayOutput) ToGetApplicationGatewayRedirectConfigurationArrayOutput() GetApplicationGatewayRedirectConfigurationArrayOutput {
	return o
}

func (o GetApplicationGatewayRedirectConfigurationArrayOutput) ToGetApplicationGatewayRedirectConfigurationArrayOutputWithContext(ctx context.Context) GetApplicationGatewayRedirectConfigurationArrayOutput {
	return o
}

func (o GetApplicationGatewayRedirectConfigurationArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayRedirectConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayRedirectConfiguration {
		return vs[0].([]GetApplicationGatewayRedirectConfiguration)[vs[1].(int)]
	}).(GetApplicationGatewayRedirectConfigurationOutput)
}

type GetApplicationGatewayRequestRoutingRule struct {
	// The ID of the associated Backend Address Pool.
	BackendAddressPoolId string `pulumi:"backendAddressPoolId"`
	// The Name of the Backend Address Pool which is used for this Routing Rule.
	BackendAddressPoolName string `pulumi:"backendAddressPoolName"`
	// The ID of the associated Backend HTTP Settings Configuration.
	BackendHttpSettingsId string `pulumi:"backendHttpSettingsId"`
	// The Name of the Backend HTTP Settings Collection which is used for this Routing Rule.
	BackendHttpSettingsName string `pulumi:"backendHttpSettingsName"`
	// The ID of the associated HTTP Listener.
	HttpListenerId string `pulumi:"httpListenerId"`
	// The Name of the HTTP Listener which is used for this Routing Rule.
	HttpListenerName string `pulumi:"httpListenerName"`
	// The ID of the Rewrite Rule Set
	Id string `pulumi:"id"`
	// The name of this Application Gateway.
	Name string `pulumi:"name"`
	// The Priority of this Routing Rule.
	Priority int `pulumi:"priority"`
	// The ID of the associated Redirect Configuration.
	RedirectConfigurationId string `pulumi:"redirectConfigurationId"`
	// The Name of the Redirect Configuration which is used for this Routing Rule.
	RedirectConfigurationName string `pulumi:"redirectConfigurationName"`
	// The ID of the associated Rewrite Rule Set.
	RewriteRuleSetId string `pulumi:"rewriteRuleSetId"`
	// The Name of the Rewrite Rule Set which is used for this Routing Rule.
	RewriteRuleSetName string `pulumi:"rewriteRuleSetName"`
	// The Type of Routing that is used for this Rule.
	RuleType string `pulumi:"ruleType"`
	// The ID of the associated URL Path Map.
	UrlPathMapId string `pulumi:"urlPathMapId"`
	// The Name of the URL Path Map which is associated with this Routing Rule.
	UrlPathMapName string `pulumi:"urlPathMapName"`
}

// GetApplicationGatewayRequestRoutingRuleInput is an input type that accepts GetApplicationGatewayRequestRoutingRuleArgs and GetApplicationGatewayRequestRoutingRuleOutput values.
// You can construct a concrete instance of `GetApplicationGatewayRequestRoutingRuleInput` via:
//
//	GetApplicationGatewayRequestRoutingRuleArgs{...}
type GetApplicationGatewayRequestRoutingRuleInput interface {
	pulumi.Input

	ToGetApplicationGatewayRequestRoutingRuleOutput() GetApplicationGatewayRequestRoutingRuleOutput
	ToGetApplicationGatewayRequestRoutingRuleOutputWithContext(context.Context) GetApplicationGatewayRequestRoutingRuleOutput
}

type GetApplicationGatewayRequestRoutingRuleArgs struct {
	// The ID of the associated Backend Address Pool.
	BackendAddressPoolId pulumi.StringInput `pulumi:"backendAddressPoolId"`
	// The Name of the Backend Address Pool which is used for this Routing Rule.
	BackendAddressPoolName pulumi.StringInput `pulumi:"backendAddressPoolName"`
	// The ID of the associated Backend HTTP Settings Configuration.
	BackendHttpSettingsId pulumi.StringInput `pulumi:"backendHttpSettingsId"`
	// The Name of the Backend HTTP Settings Collection which is used for this Routing Rule.
	BackendHttpSettingsName pulumi.StringInput `pulumi:"backendHttpSettingsName"`
	// The ID of the associated HTTP Listener.
	HttpListenerId pulumi.StringInput `pulumi:"httpListenerId"`
	// The Name of the HTTP Listener which is used for this Routing Rule.
	HttpListenerName pulumi.StringInput `pulumi:"httpListenerName"`
	// The ID of the Rewrite Rule Set
	Id pulumi.StringInput `pulumi:"id"`
	// The name of this Application Gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// The Priority of this Routing Rule.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The ID of the associated Redirect Configuration.
	RedirectConfigurationId pulumi.StringInput `pulumi:"redirectConfigurationId"`
	// The Name of the Redirect Configuration which is used for this Routing Rule.
	RedirectConfigurationName pulumi.StringInput `pulumi:"redirectConfigurationName"`
	// The ID of the associated Rewrite Rule Set.
	RewriteRuleSetId pulumi.StringInput `pulumi:"rewriteRuleSetId"`
	// The Name of the Rewrite Rule Set which is used for this Routing Rule.
	RewriteRuleSetName pulumi.StringInput `pulumi:"rewriteRuleSetName"`
	// The Type of Routing that is used for this Rule.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
	// The ID of the associated URL Path Map.
	UrlPathMapId pulumi.StringInput `pulumi:"urlPathMapId"`
	// The Name of the URL Path Map which is associated with this Routing Rule.
	UrlPathMapName pulumi.StringInput `pulumi:"urlPathMapName"`
}

func (GetApplicationGatewayRequestRoutingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayRequestRoutingRule)(nil)).Elem()
}

func (i GetApplicationGatewayRequestRoutingRuleArgs) ToGetApplicationGatewayRequestRoutingRuleOutput() GetApplicationGatewayRequestRoutingRuleOutput {
	return i.ToGetApplicationGatewayRequestRoutingRuleOutputWithContext(context.Background())
}

func (i GetApplicationGatewayRequestRoutingRuleArgs) ToGetApplicationGatewayRequestRoutingRuleOutputWithContext(ctx context.Context) GetApplicationGatewayRequestRoutingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayRequestRoutingRuleOutput)
}

// GetApplicationGatewayRequestRoutingRuleArrayInput is an input type that accepts GetApplicationGatewayRequestRoutingRuleArray and GetApplicationGatewayRequestRoutingRuleArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayRequestRoutingRuleArrayInput` via:
//
//	GetApplicationGatewayRequestRoutingRuleArray{ GetApplicationGatewayRequestRoutingRuleArgs{...} }
type GetApplicationGatewayRequestRoutingRuleArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayRequestRoutingRuleArrayOutput() GetApplicationGatewayRequestRoutingRuleArrayOutput
	ToGetApplicationGatewayRequestRoutingRuleArrayOutputWithContext(context.Context) GetApplicationGatewayRequestRoutingRuleArrayOutput
}

type GetApplicationGatewayRequestRoutingRuleArray []GetApplicationGatewayRequestRoutingRuleInput

func (GetApplicationGatewayRequestRoutingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayRequestRoutingRule)(nil)).Elem()
}

func (i GetApplicationGatewayRequestRoutingRuleArray) ToGetApplicationGatewayRequestRoutingRuleArrayOutput() GetApplicationGatewayRequestRoutingRuleArrayOutput {
	return i.ToGetApplicationGatewayRequestRoutingRuleArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayRequestRoutingRuleArray) ToGetApplicationGatewayRequestRoutingRuleArrayOutputWithContext(ctx context.Context) GetApplicationGatewayRequestRoutingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayRequestRoutingRuleArrayOutput)
}

type GetApplicationGatewayRequestRoutingRuleOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayRequestRoutingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayRequestRoutingRule)(nil)).Elem()
}

func (o GetApplicationGatewayRequestRoutingRuleOutput) ToGetApplicationGatewayRequestRoutingRuleOutput() GetApplicationGatewayRequestRoutingRuleOutput {
	return o
}

func (o GetApplicationGatewayRequestRoutingRuleOutput) ToGetApplicationGatewayRequestRoutingRuleOutputWithContext(ctx context.Context) GetApplicationGatewayRequestRoutingRuleOutput {
	return o
}

// The ID of the associated Backend Address Pool.
func (o GetApplicationGatewayRequestRoutingRuleOutput) BackendAddressPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRequestRoutingRule) string { return v.BackendAddressPoolId }).(pulumi.StringOutput)
}

// The Name of the Backend Address Pool which is used for this Routing Rule.
func (o GetApplicationGatewayRequestRoutingRuleOutput) BackendAddressPoolName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRequestRoutingRule) string { return v.BackendAddressPoolName }).(pulumi.StringOutput)
}

// The ID of the associated Backend HTTP Settings Configuration.
func (o GetApplicationGatewayRequestRoutingRuleOutput) BackendHttpSettingsId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRequestRoutingRule) string { return v.BackendHttpSettingsId }).(pulumi.StringOutput)
}

// The Name of the Backend HTTP Settings Collection which is used for this Routing Rule.
func (o GetApplicationGatewayRequestRoutingRuleOutput) BackendHttpSettingsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRequestRoutingRule) string { return v.BackendHttpSettingsName }).(pulumi.StringOutput)
}

// The ID of the associated HTTP Listener.
func (o GetApplicationGatewayRequestRoutingRuleOutput) HttpListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRequestRoutingRule) string { return v.HttpListenerId }).(pulumi.StringOutput)
}

// The Name of the HTTP Listener which is used for this Routing Rule.
func (o GetApplicationGatewayRequestRoutingRuleOutput) HttpListenerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRequestRoutingRule) string { return v.HttpListenerName }).(pulumi.StringOutput)
}

// The ID of the Rewrite Rule Set
func (o GetApplicationGatewayRequestRoutingRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRequestRoutingRule) string { return v.Id }).(pulumi.StringOutput)
}

// The name of this Application Gateway.
func (o GetApplicationGatewayRequestRoutingRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRequestRoutingRule) string { return v.Name }).(pulumi.StringOutput)
}

// The Priority of this Routing Rule.
func (o GetApplicationGatewayRequestRoutingRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationGatewayRequestRoutingRule) int { return v.Priority }).(pulumi.IntOutput)
}

// The ID of the associated Redirect Configuration.
func (o GetApplicationGatewayRequestRoutingRuleOutput) RedirectConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRequestRoutingRule) string { return v.RedirectConfigurationId }).(pulumi.StringOutput)
}

// The Name of the Redirect Configuration which is used for this Routing Rule.
func (o GetApplicationGatewayRequestRoutingRuleOutput) RedirectConfigurationName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRequestRoutingRule) string { return v.RedirectConfigurationName }).(pulumi.StringOutput)
}

// The ID of the associated Rewrite Rule Set.
func (o GetApplicationGatewayRequestRoutingRuleOutput) RewriteRuleSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRequestRoutingRule) string { return v.RewriteRuleSetId }).(pulumi.StringOutput)
}

// The Name of the Rewrite Rule Set which is used for this Routing Rule.
func (o GetApplicationGatewayRequestRoutingRuleOutput) RewriteRuleSetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRequestRoutingRule) string { return v.RewriteRuleSetName }).(pulumi.StringOutput)
}

// The Type of Routing that is used for this Rule.
func (o GetApplicationGatewayRequestRoutingRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRequestRoutingRule) string { return v.RuleType }).(pulumi.StringOutput)
}

// The ID of the associated URL Path Map.
func (o GetApplicationGatewayRequestRoutingRuleOutput) UrlPathMapId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRequestRoutingRule) string { return v.UrlPathMapId }).(pulumi.StringOutput)
}

// The Name of the URL Path Map which is associated with this Routing Rule.
func (o GetApplicationGatewayRequestRoutingRuleOutput) UrlPathMapName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRequestRoutingRule) string { return v.UrlPathMapName }).(pulumi.StringOutput)
}

type GetApplicationGatewayRequestRoutingRuleArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayRequestRoutingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayRequestRoutingRule)(nil)).Elem()
}

func (o GetApplicationGatewayRequestRoutingRuleArrayOutput) ToGetApplicationGatewayRequestRoutingRuleArrayOutput() GetApplicationGatewayRequestRoutingRuleArrayOutput {
	return o
}

func (o GetApplicationGatewayRequestRoutingRuleArrayOutput) ToGetApplicationGatewayRequestRoutingRuleArrayOutputWithContext(ctx context.Context) GetApplicationGatewayRequestRoutingRuleArrayOutput {
	return o
}

func (o GetApplicationGatewayRequestRoutingRuleArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayRequestRoutingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayRequestRoutingRule {
		return vs[0].([]GetApplicationGatewayRequestRoutingRule)[vs[1].(int)]
	}).(GetApplicationGatewayRequestRoutingRuleOutput)
}

type GetApplicationGatewayRewriteRuleSet struct {
	// The ID of the Rewrite Rule Set
	Id string `pulumi:"id"`
	// The name of this Application Gateway.
	Name string `pulumi:"name"`
	// One or more `rewriteRule` blocks as defined below.
	RewriteRules []GetApplicationGatewayRewriteRuleSetRewriteRule `pulumi:"rewriteRules"`
}

// GetApplicationGatewayRewriteRuleSetInput is an input type that accepts GetApplicationGatewayRewriteRuleSetArgs and GetApplicationGatewayRewriteRuleSetOutput values.
// You can construct a concrete instance of `GetApplicationGatewayRewriteRuleSetInput` via:
//
//	GetApplicationGatewayRewriteRuleSetArgs{...}
type GetApplicationGatewayRewriteRuleSetInput interface {
	pulumi.Input

	ToGetApplicationGatewayRewriteRuleSetOutput() GetApplicationGatewayRewriteRuleSetOutput
	ToGetApplicationGatewayRewriteRuleSetOutputWithContext(context.Context) GetApplicationGatewayRewriteRuleSetOutput
}

type GetApplicationGatewayRewriteRuleSetArgs struct {
	// The ID of the Rewrite Rule Set
	Id pulumi.StringInput `pulumi:"id"`
	// The name of this Application Gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// One or more `rewriteRule` blocks as defined below.
	RewriteRules GetApplicationGatewayRewriteRuleSetRewriteRuleArrayInput `pulumi:"rewriteRules"`
}

func (GetApplicationGatewayRewriteRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayRewriteRuleSet)(nil)).Elem()
}

func (i GetApplicationGatewayRewriteRuleSetArgs) ToGetApplicationGatewayRewriteRuleSetOutput() GetApplicationGatewayRewriteRuleSetOutput {
	return i.ToGetApplicationGatewayRewriteRuleSetOutputWithContext(context.Background())
}

func (i GetApplicationGatewayRewriteRuleSetArgs) ToGetApplicationGatewayRewriteRuleSetOutputWithContext(ctx context.Context) GetApplicationGatewayRewriteRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayRewriteRuleSetOutput)
}

// GetApplicationGatewayRewriteRuleSetArrayInput is an input type that accepts GetApplicationGatewayRewriteRuleSetArray and GetApplicationGatewayRewriteRuleSetArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayRewriteRuleSetArrayInput` via:
//
//	GetApplicationGatewayRewriteRuleSetArray{ GetApplicationGatewayRewriteRuleSetArgs{...} }
type GetApplicationGatewayRewriteRuleSetArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayRewriteRuleSetArrayOutput() GetApplicationGatewayRewriteRuleSetArrayOutput
	ToGetApplicationGatewayRewriteRuleSetArrayOutputWithContext(context.Context) GetApplicationGatewayRewriteRuleSetArrayOutput
}

type GetApplicationGatewayRewriteRuleSetArray []GetApplicationGatewayRewriteRuleSetInput

func (GetApplicationGatewayRewriteRuleSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayRewriteRuleSet)(nil)).Elem()
}

func (i GetApplicationGatewayRewriteRuleSetArray) ToGetApplicationGatewayRewriteRuleSetArrayOutput() GetApplicationGatewayRewriteRuleSetArrayOutput {
	return i.ToGetApplicationGatewayRewriteRuleSetArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayRewriteRuleSetArray) ToGetApplicationGatewayRewriteRuleSetArrayOutputWithContext(ctx context.Context) GetApplicationGatewayRewriteRuleSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayRewriteRuleSetArrayOutput)
}

type GetApplicationGatewayRewriteRuleSetOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayRewriteRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayRewriteRuleSet)(nil)).Elem()
}

func (o GetApplicationGatewayRewriteRuleSetOutput) ToGetApplicationGatewayRewriteRuleSetOutput() GetApplicationGatewayRewriteRuleSetOutput {
	return o
}

func (o GetApplicationGatewayRewriteRuleSetOutput) ToGetApplicationGatewayRewriteRuleSetOutputWithContext(ctx context.Context) GetApplicationGatewayRewriteRuleSetOutput {
	return o
}

// The ID of the Rewrite Rule Set
func (o GetApplicationGatewayRewriteRuleSetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRewriteRuleSet) string { return v.Id }).(pulumi.StringOutput)
}

// The name of this Application Gateway.
func (o GetApplicationGatewayRewriteRuleSetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRewriteRuleSet) string { return v.Name }).(pulumi.StringOutput)
}

// One or more `rewriteRule` blocks as defined below.
func (o GetApplicationGatewayRewriteRuleSetOutput) RewriteRules() GetApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput {
	return o.ApplyT(func(v GetApplicationGatewayRewriteRuleSet) []GetApplicationGatewayRewriteRuleSetRewriteRule {
		return v.RewriteRules
	}).(GetApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput)
}

type GetApplicationGatewayRewriteRuleSetArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayRewriteRuleSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayRewriteRuleSet)(nil)).Elem()
}

func (o GetApplicationGatewayRewriteRuleSetArrayOutput) ToGetApplicationGatewayRewriteRuleSetArrayOutput() GetApplicationGatewayRewriteRuleSetArrayOutput {
	return o
}

func (o GetApplicationGatewayRewriteRuleSetArrayOutput) ToGetApplicationGatewayRewriteRuleSetArrayOutputWithContext(ctx context.Context) GetApplicationGatewayRewriteRuleSetArrayOutput {
	return o
}

func (o GetApplicationGatewayRewriteRuleSetArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayRewriteRuleSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayRewriteRuleSet {
		return vs[0].([]GetApplicationGatewayRewriteRuleSet)[vs[1].(int)]
	}).(GetApplicationGatewayRewriteRuleSetOutput)
}

type GetApplicationGatewayRewriteRuleSetRewriteRule struct {
	// One or more `condition` blocks as defined above.
	Conditions []GetApplicationGatewayRewriteRuleSetRewriteRuleCondition `pulumi:"conditions"`
	// The name of this Application Gateway.
	Name string `pulumi:"name"`
	// One or more `requestHeaderConfiguration` blocks as defined above.
	RequestHeaderConfigurations []GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration `pulumi:"requestHeaderConfigurations"`
	// One or more `responseHeaderConfiguration` blocks as defined above.
	ResponseHeaderConfigurations []GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration `pulumi:"responseHeaderConfigurations"`
	// Rule sequence of the Rewrite Rule that determines the order of execution in a set.
	RuleSequence int `pulumi:"ruleSequence"`
	// One `url` block as defined below
	Urls []GetApplicationGatewayRewriteRuleSetRewriteRuleUrl `pulumi:"urls"`
}

// GetApplicationGatewayRewriteRuleSetRewriteRuleInput is an input type that accepts GetApplicationGatewayRewriteRuleSetRewriteRuleArgs and GetApplicationGatewayRewriteRuleSetRewriteRuleOutput values.
// You can construct a concrete instance of `GetApplicationGatewayRewriteRuleSetRewriteRuleInput` via:
//
//	GetApplicationGatewayRewriteRuleSetRewriteRuleArgs{...}
type GetApplicationGatewayRewriteRuleSetRewriteRuleInput interface {
	pulumi.Input

	ToGetApplicationGatewayRewriteRuleSetRewriteRuleOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleOutput
	ToGetApplicationGatewayRewriteRuleSetRewriteRuleOutputWithContext(context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleOutput
}

type GetApplicationGatewayRewriteRuleSetRewriteRuleArgs struct {
	// One or more `condition` blocks as defined above.
	Conditions GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayInput `pulumi:"conditions"`
	// The name of this Application Gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// One or more `requestHeaderConfiguration` blocks as defined above.
	RequestHeaderConfigurations GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayInput `pulumi:"requestHeaderConfigurations"`
	// One or more `responseHeaderConfiguration` blocks as defined above.
	ResponseHeaderConfigurations GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayInput `pulumi:"responseHeaderConfigurations"`
	// Rule sequence of the Rewrite Rule that determines the order of execution in a set.
	RuleSequence pulumi.IntInput `pulumi:"ruleSequence"`
	// One `url` block as defined below
	Urls GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArrayInput `pulumi:"urls"`
}

func (GetApplicationGatewayRewriteRuleSetRewriteRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayRewriteRuleSetRewriteRule)(nil)).Elem()
}

func (i GetApplicationGatewayRewriteRuleSetRewriteRuleArgs) ToGetApplicationGatewayRewriteRuleSetRewriteRuleOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleOutput {
	return i.ToGetApplicationGatewayRewriteRuleSetRewriteRuleOutputWithContext(context.Background())
}

func (i GetApplicationGatewayRewriteRuleSetRewriteRuleArgs) ToGetApplicationGatewayRewriteRuleSetRewriteRuleOutputWithContext(ctx context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayRewriteRuleSetRewriteRuleOutput)
}

// GetApplicationGatewayRewriteRuleSetRewriteRuleArrayInput is an input type that accepts GetApplicationGatewayRewriteRuleSetRewriteRuleArray and GetApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayRewriteRuleSetRewriteRuleArrayInput` via:
//
//	GetApplicationGatewayRewriteRuleSetRewriteRuleArray{ GetApplicationGatewayRewriteRuleSetRewriteRuleArgs{...} }
type GetApplicationGatewayRewriteRuleSetRewriteRuleArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput
	ToGetApplicationGatewayRewriteRuleSetRewriteRuleArrayOutputWithContext(context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput
}

type GetApplicationGatewayRewriteRuleSetRewriteRuleArray []GetApplicationGatewayRewriteRuleSetRewriteRuleInput

func (GetApplicationGatewayRewriteRuleSetRewriteRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayRewriteRuleSetRewriteRule)(nil)).Elem()
}

func (i GetApplicationGatewayRewriteRuleSetRewriteRuleArray) ToGetApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput {
	return i.ToGetApplicationGatewayRewriteRuleSetRewriteRuleArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayRewriteRuleSetRewriteRuleArray) ToGetApplicationGatewayRewriteRuleSetRewriteRuleArrayOutputWithContext(ctx context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput)
}

type GetApplicationGatewayRewriteRuleSetRewriteRuleOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayRewriteRuleSetRewriteRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayRewriteRuleSetRewriteRule)(nil)).Elem()
}

func (o GetApplicationGatewayRewriteRuleSetRewriteRuleOutput) ToGetApplicationGatewayRewriteRuleSetRewriteRuleOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleOutput {
	return o
}

func (o GetApplicationGatewayRewriteRuleSetRewriteRuleOutput) ToGetApplicationGatewayRewriteRuleSetRewriteRuleOutputWithContext(ctx context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleOutput {
	return o
}

// One or more `condition` blocks as defined above.
func (o GetApplicationGatewayRewriteRuleSetRewriteRuleOutput) Conditions() GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput {
	return o.ApplyT(func(v GetApplicationGatewayRewriteRuleSetRewriteRule) []GetApplicationGatewayRewriteRuleSetRewriteRuleCondition {
		return v.Conditions
	}).(GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput)
}

// The name of this Application Gateway.
func (o GetApplicationGatewayRewriteRuleSetRewriteRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRewriteRuleSetRewriteRule) string { return v.Name }).(pulumi.StringOutput)
}

// One or more `requestHeaderConfiguration` blocks as defined above.
func (o GetApplicationGatewayRewriteRuleSetRewriteRuleOutput) RequestHeaderConfigurations() GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput {
	return o.ApplyT(func(v GetApplicationGatewayRewriteRuleSetRewriteRule) []GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration {
		return v.RequestHeaderConfigurations
	}).(GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput)
}

// One or more `responseHeaderConfiguration` blocks as defined above.
func (o GetApplicationGatewayRewriteRuleSetRewriteRuleOutput) ResponseHeaderConfigurations() GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput {
	return o.ApplyT(func(v GetApplicationGatewayRewriteRuleSetRewriteRule) []GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration {
		return v.ResponseHeaderConfigurations
	}).(GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput)
}

// Rule sequence of the Rewrite Rule that determines the order of execution in a set.
func (o GetApplicationGatewayRewriteRuleSetRewriteRuleOutput) RuleSequence() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationGatewayRewriteRuleSetRewriteRule) int { return v.RuleSequence }).(pulumi.IntOutput)
}

// One `url` block as defined below
func (o GetApplicationGatewayRewriteRuleSetRewriteRuleOutput) Urls() GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArrayOutput {
	return o.ApplyT(func(v GetApplicationGatewayRewriteRuleSetRewriteRule) []GetApplicationGatewayRewriteRuleSetRewriteRuleUrl {
		return v.Urls
	}).(GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArrayOutput)
}

type GetApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayRewriteRuleSetRewriteRule)(nil)).Elem()
}

func (o GetApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput) ToGetApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput {
	return o
}

func (o GetApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput) ToGetApplicationGatewayRewriteRuleSetRewriteRuleArrayOutputWithContext(ctx context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput {
	return o
}

func (o GetApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayRewriteRuleSetRewriteRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayRewriteRuleSetRewriteRule {
		return vs[0].([]GetApplicationGatewayRewriteRuleSetRewriteRule)[vs[1].(int)]
	}).(GetApplicationGatewayRewriteRuleSetRewriteRuleOutput)
}

type GetApplicationGatewayRewriteRuleSetRewriteRuleCondition struct {
	// Whether a case insensitive comparison is performed.
	IgnoreCase bool `pulumi:"ignoreCase"`
	// Whether the result of the condition evaluation is negated.
	Negate bool `pulumi:"negate"`
	// The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.
	Pattern string `pulumi:"pattern"`
	// The [variable](https://docs.microsoft.com/azure/application-gateway/rewrite-http-headers#server-variables) of the condition.
	Variable string `pulumi:"variable"`
}

// GetApplicationGatewayRewriteRuleSetRewriteRuleConditionInput is an input type that accepts GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArgs and GetApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput values.
// You can construct a concrete instance of `GetApplicationGatewayRewriteRuleSetRewriteRuleConditionInput` via:
//
//	GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArgs{...}
type GetApplicationGatewayRewriteRuleSetRewriteRuleConditionInput interface {
	pulumi.Input

	ToGetApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput
	ToGetApplicationGatewayRewriteRuleSetRewriteRuleConditionOutputWithContext(context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput
}

type GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArgs struct {
	// Whether a case insensitive comparison is performed.
	IgnoreCase pulumi.BoolInput `pulumi:"ignoreCase"`
	// Whether the result of the condition evaluation is negated.
	Negate pulumi.BoolInput `pulumi:"negate"`
	// The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.
	Pattern pulumi.StringInput `pulumi:"pattern"`
	// The [variable](https://docs.microsoft.com/azure/application-gateway/rewrite-http-headers#server-variables) of the condition.
	Variable pulumi.StringInput `pulumi:"variable"`
}

func (GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayRewriteRuleSetRewriteRuleCondition)(nil)).Elem()
}

func (i GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArgs) ToGetApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput {
	return i.ToGetApplicationGatewayRewriteRuleSetRewriteRuleConditionOutputWithContext(context.Background())
}

func (i GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArgs) ToGetApplicationGatewayRewriteRuleSetRewriteRuleConditionOutputWithContext(ctx context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput)
}

// GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayInput is an input type that accepts GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArray and GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayInput` via:
//
//	GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArray{ GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArgs{...} }
type GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput
	ToGetApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutputWithContext(context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput
}

type GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArray []GetApplicationGatewayRewriteRuleSetRewriteRuleConditionInput

func (GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayRewriteRuleSetRewriteRuleCondition)(nil)).Elem()
}

func (i GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArray) ToGetApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput {
	return i.ToGetApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArray) ToGetApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutputWithContext(ctx context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput)
}

type GetApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayRewriteRuleSetRewriteRuleCondition)(nil)).Elem()
}

func (o GetApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput) ToGetApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput {
	return o
}

func (o GetApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput) ToGetApplicationGatewayRewriteRuleSetRewriteRuleConditionOutputWithContext(ctx context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput {
	return o
}

// Whether a case insensitive comparison is performed.
func (o GetApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput) IgnoreCase() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationGatewayRewriteRuleSetRewriteRuleCondition) bool { return v.IgnoreCase }).(pulumi.BoolOutput)
}

// Whether the result of the condition evaluation is negated.
func (o GetApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput) Negate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationGatewayRewriteRuleSetRewriteRuleCondition) bool { return v.Negate }).(pulumi.BoolOutput)
}

// The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.
func (o GetApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput) Pattern() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRewriteRuleSetRewriteRuleCondition) string { return v.Pattern }).(pulumi.StringOutput)
}

// The [variable](https://docs.microsoft.com/azure/application-gateway/rewrite-http-headers#server-variables) of the condition.
func (o GetApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput) Variable() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRewriteRuleSetRewriteRuleCondition) string { return v.Variable }).(pulumi.StringOutput)
}

type GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayRewriteRuleSetRewriteRuleCondition)(nil)).Elem()
}

func (o GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput) ToGetApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput {
	return o
}

func (o GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput) ToGetApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutputWithContext(ctx context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput {
	return o
}

func (o GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayRewriteRuleSetRewriteRuleCondition {
		return vs[0].([]GetApplicationGatewayRewriteRuleSetRewriteRuleCondition)[vs[1].(int)]
	}).(GetApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput)
}

type GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration struct {
	// Header name of the header configuration.
	HeaderName string `pulumi:"headerName"`
	// Header value of the header configuration.
	HeaderValue string `pulumi:"headerValue"`
}

// GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationInput is an input type that accepts GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArgs and GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput values.
// You can construct a concrete instance of `GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationInput` via:
//
//	GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArgs{...}
type GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationInput interface {
	pulumi.Input

	ToGetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput
	ToGetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutputWithContext(context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput
}

type GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArgs struct {
	// Header name of the header configuration.
	HeaderName pulumi.StringInput `pulumi:"headerName"`
	// Header value of the header configuration.
	HeaderValue pulumi.StringInput `pulumi:"headerValue"`
}

func (GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration)(nil)).Elem()
}

func (i GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArgs) ToGetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput {
	return i.ToGetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutputWithContext(context.Background())
}

func (i GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArgs) ToGetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutputWithContext(ctx context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput)
}

// GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayInput is an input type that accepts GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArray and GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayInput` via:
//
//	GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArray{ GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArgs{...} }
type GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput
	ToGetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutputWithContext(context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput
}

type GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArray []GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationInput

func (GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration)(nil)).Elem()
}

func (i GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArray) ToGetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput {
	return i.ToGetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArray) ToGetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutputWithContext(ctx context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput)
}

type GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration)(nil)).Elem()
}

func (o GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput) ToGetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput {
	return o
}

func (o GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput) ToGetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutputWithContext(ctx context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput {
	return o
}

// Header name of the header configuration.
func (o GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration) string {
		return v.HeaderName
	}).(pulumi.StringOutput)
}

// Header value of the header configuration.
func (o GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput) HeaderValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration) string {
		return v.HeaderValue
	}).(pulumi.StringOutput)
}

type GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration)(nil)).Elem()
}

func (o GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput) ToGetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput {
	return o
}

func (o GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput) ToGetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutputWithContext(ctx context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput {
	return o
}

func (o GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration {
		return vs[0].([]GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration)[vs[1].(int)]
	}).(GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput)
}

type GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration struct {
	// Header name of the header configuration.
	HeaderName string `pulumi:"headerName"`
	// Header value of the header configuration.
	HeaderValue string `pulumi:"headerValue"`
}

// GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationInput is an input type that accepts GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArgs and GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput values.
// You can construct a concrete instance of `GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationInput` via:
//
//	GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArgs{...}
type GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationInput interface {
	pulumi.Input

	ToGetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput
	ToGetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutputWithContext(context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput
}

type GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArgs struct {
	// Header name of the header configuration.
	HeaderName pulumi.StringInput `pulumi:"headerName"`
	// Header value of the header configuration.
	HeaderValue pulumi.StringInput `pulumi:"headerValue"`
}

func (GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration)(nil)).Elem()
}

func (i GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArgs) ToGetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput {
	return i.ToGetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutputWithContext(context.Background())
}

func (i GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArgs) ToGetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutputWithContext(ctx context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput)
}

// GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayInput is an input type that accepts GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArray and GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayInput` via:
//
//	GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArray{ GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArgs{...} }
type GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput
	ToGetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutputWithContext(context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput
}

type GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArray []GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationInput

func (GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration)(nil)).Elem()
}

func (i GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArray) ToGetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput {
	return i.ToGetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArray) ToGetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutputWithContext(ctx context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput)
}

type GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration)(nil)).Elem()
}

func (o GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput) ToGetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput {
	return o
}

func (o GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput) ToGetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutputWithContext(ctx context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput {
	return o
}

// Header name of the header configuration.
func (o GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration) string {
		return v.HeaderName
	}).(pulumi.StringOutput)
}

// Header value of the header configuration.
func (o GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput) HeaderValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration) string {
		return v.HeaderValue
	}).(pulumi.StringOutput)
}

type GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration)(nil)).Elem()
}

func (o GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput) ToGetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput {
	return o
}

func (o GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput) ToGetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutputWithContext(ctx context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput {
	return o
}

func (o GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration {
		return vs[0].([]GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration)[vs[1].(int)]
	}).(GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput)
}

type GetApplicationGatewayRewriteRuleSetRewriteRuleUrl struct {
	// The components used to rewrite the URL.
	Components string `pulumi:"components"`
	// The URL path to rewrite.
	Path string `pulumi:"path"`
	// The query string to rewrite.
	QueryString string `pulumi:"queryString"`
	// Whether the URL path map is reevaluated after this rewrite has been applied.
	Reroute bool `pulumi:"reroute"`
}

// GetApplicationGatewayRewriteRuleSetRewriteRuleUrlInput is an input type that accepts GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArgs and GetApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput values.
// You can construct a concrete instance of `GetApplicationGatewayRewriteRuleSetRewriteRuleUrlInput` via:
//
//	GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArgs{...}
type GetApplicationGatewayRewriteRuleSetRewriteRuleUrlInput interface {
	pulumi.Input

	ToGetApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput
	ToGetApplicationGatewayRewriteRuleSetRewriteRuleUrlOutputWithContext(context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput
}

type GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArgs struct {
	// The components used to rewrite the URL.
	Components pulumi.StringInput `pulumi:"components"`
	// The URL path to rewrite.
	Path pulumi.StringInput `pulumi:"path"`
	// The query string to rewrite.
	QueryString pulumi.StringInput `pulumi:"queryString"`
	// Whether the URL path map is reevaluated after this rewrite has been applied.
	Reroute pulumi.BoolInput `pulumi:"reroute"`
}

func (GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayRewriteRuleSetRewriteRuleUrl)(nil)).Elem()
}

func (i GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArgs) ToGetApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput {
	return i.ToGetApplicationGatewayRewriteRuleSetRewriteRuleUrlOutputWithContext(context.Background())
}

func (i GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArgs) ToGetApplicationGatewayRewriteRuleSetRewriteRuleUrlOutputWithContext(ctx context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput)
}

// GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArrayInput is an input type that accepts GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArray and GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArrayInput` via:
//
//	GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArray{ GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArgs{...} }
type GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayRewriteRuleSetRewriteRuleUrlArrayOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArrayOutput
	ToGetApplicationGatewayRewriteRuleSetRewriteRuleUrlArrayOutputWithContext(context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArrayOutput
}

type GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArray []GetApplicationGatewayRewriteRuleSetRewriteRuleUrlInput

func (GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayRewriteRuleSetRewriteRuleUrl)(nil)).Elem()
}

func (i GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArray) ToGetApplicationGatewayRewriteRuleSetRewriteRuleUrlArrayOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArrayOutput {
	return i.ToGetApplicationGatewayRewriteRuleSetRewriteRuleUrlArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArray) ToGetApplicationGatewayRewriteRuleSetRewriteRuleUrlArrayOutputWithContext(ctx context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArrayOutput)
}

type GetApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayRewriteRuleSetRewriteRuleUrl)(nil)).Elem()
}

func (o GetApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput) ToGetApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput {
	return o
}

func (o GetApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput) ToGetApplicationGatewayRewriteRuleSetRewriteRuleUrlOutputWithContext(ctx context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput {
	return o
}

// The components used to rewrite the URL.
func (o GetApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput) Components() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRewriteRuleSetRewriteRuleUrl) string { return v.Components }).(pulumi.StringOutput)
}

// The URL path to rewrite.
func (o GetApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRewriteRuleSetRewriteRuleUrl) string { return v.Path }).(pulumi.StringOutput)
}

// The query string to rewrite.
func (o GetApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput) QueryString() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayRewriteRuleSetRewriteRuleUrl) string { return v.QueryString }).(pulumi.StringOutput)
}

// Whether the URL path map is reevaluated after this rewrite has been applied.
func (o GetApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput) Reroute() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationGatewayRewriteRuleSetRewriteRuleUrl) bool { return v.Reroute }).(pulumi.BoolOutput)
}

type GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayRewriteRuleSetRewriteRuleUrl)(nil)).Elem()
}

func (o GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArrayOutput) ToGetApplicationGatewayRewriteRuleSetRewriteRuleUrlArrayOutput() GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArrayOutput {
	return o
}

func (o GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArrayOutput) ToGetApplicationGatewayRewriteRuleSetRewriteRuleUrlArrayOutputWithContext(ctx context.Context) GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArrayOutput {
	return o
}

func (o GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayRewriteRuleSetRewriteRuleUrl {
		return vs[0].([]GetApplicationGatewayRewriteRuleSetRewriteRuleUrl)[vs[1].(int)]
	}).(GetApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput)
}

type GetApplicationGatewaySkus struct {
	// The Capacity of the SKU in use for this Application Gateway.
	Capacity int `pulumi:"capacity"`
	// The name of this Application Gateway.
	Name string `pulumi:"name"`
	// The Tier of the SKU in use for this Application Gateway.
	Tier string `pulumi:"tier"`
}

// GetApplicationGatewaySkusInput is an input type that accepts GetApplicationGatewaySkusArgs and GetApplicationGatewaySkusOutput values.
// You can construct a concrete instance of `GetApplicationGatewaySkusInput` via:
//
//	GetApplicationGatewaySkusArgs{...}
type GetApplicationGatewaySkusInput interface {
	pulumi.Input

	ToGetApplicationGatewaySkusOutput() GetApplicationGatewaySkusOutput
	ToGetApplicationGatewaySkusOutputWithContext(context.Context) GetApplicationGatewaySkusOutput
}

type GetApplicationGatewaySkusArgs struct {
	// The Capacity of the SKU in use for this Application Gateway.
	Capacity pulumi.IntInput `pulumi:"capacity"`
	// The name of this Application Gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// The Tier of the SKU in use for this Application Gateway.
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (GetApplicationGatewaySkusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewaySkus)(nil)).Elem()
}

func (i GetApplicationGatewaySkusArgs) ToGetApplicationGatewaySkusOutput() GetApplicationGatewaySkusOutput {
	return i.ToGetApplicationGatewaySkusOutputWithContext(context.Background())
}

func (i GetApplicationGatewaySkusArgs) ToGetApplicationGatewaySkusOutputWithContext(ctx context.Context) GetApplicationGatewaySkusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewaySkusOutput)
}

// GetApplicationGatewaySkusArrayInput is an input type that accepts GetApplicationGatewaySkusArray and GetApplicationGatewaySkusArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewaySkusArrayInput` via:
//
//	GetApplicationGatewaySkusArray{ GetApplicationGatewaySkusArgs{...} }
type GetApplicationGatewaySkusArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewaySkusArrayOutput() GetApplicationGatewaySkusArrayOutput
	ToGetApplicationGatewaySkusArrayOutputWithContext(context.Context) GetApplicationGatewaySkusArrayOutput
}

type GetApplicationGatewaySkusArray []GetApplicationGatewaySkusInput

func (GetApplicationGatewaySkusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewaySkus)(nil)).Elem()
}

func (i GetApplicationGatewaySkusArray) ToGetApplicationGatewaySkusArrayOutput() GetApplicationGatewaySkusArrayOutput {
	return i.ToGetApplicationGatewaySkusArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewaySkusArray) ToGetApplicationGatewaySkusArrayOutputWithContext(ctx context.Context) GetApplicationGatewaySkusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewaySkusArrayOutput)
}

type GetApplicationGatewaySkusOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewaySkusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewaySkus)(nil)).Elem()
}

func (o GetApplicationGatewaySkusOutput) ToGetApplicationGatewaySkusOutput() GetApplicationGatewaySkusOutput {
	return o
}

func (o GetApplicationGatewaySkusOutput) ToGetApplicationGatewaySkusOutputWithContext(ctx context.Context) GetApplicationGatewaySkusOutput {
	return o
}

// The Capacity of the SKU in use for this Application Gateway.
func (o GetApplicationGatewaySkusOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationGatewaySkus) int { return v.Capacity }).(pulumi.IntOutput)
}

// The name of this Application Gateway.
func (o GetApplicationGatewaySkusOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewaySkus) string { return v.Name }).(pulumi.StringOutput)
}

// The Tier of the SKU in use for this Application Gateway.
func (o GetApplicationGatewaySkusOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewaySkus) string { return v.Tier }).(pulumi.StringOutput)
}

type GetApplicationGatewaySkusArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewaySkusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewaySkus)(nil)).Elem()
}

func (o GetApplicationGatewaySkusArrayOutput) ToGetApplicationGatewaySkusArrayOutput() GetApplicationGatewaySkusArrayOutput {
	return o
}

func (o GetApplicationGatewaySkusArrayOutput) ToGetApplicationGatewaySkusArrayOutputWithContext(ctx context.Context) GetApplicationGatewaySkusArrayOutput {
	return o
}

func (o GetApplicationGatewaySkusArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewaySkusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewaySkus {
		return vs[0].([]GetApplicationGatewaySkus)[vs[1].(int)]
	}).(GetApplicationGatewaySkusOutput)
}

type GetApplicationGatewaySslCertificate struct {
	// The ID of the Rewrite Rule Set
	Id string `pulumi:"id"`
	// The Secret ID of (base-64 encoded unencrypted pfx) the `Secret` or `Certificate` object stored in Azure KeyVault.
	KeyVaultSecretId string `pulumi:"keyVaultSecretId"`
	// The name of this Application Gateway.
	Name string `pulumi:"name"`
	// The Public Certificate Data associated with the SSL Certificate.
	PublicCertData string `pulumi:"publicCertData"`
}

// GetApplicationGatewaySslCertificateInput is an input type that accepts GetApplicationGatewaySslCertificateArgs and GetApplicationGatewaySslCertificateOutput values.
// You can construct a concrete instance of `GetApplicationGatewaySslCertificateInput` via:
//
//	GetApplicationGatewaySslCertificateArgs{...}
type GetApplicationGatewaySslCertificateInput interface {
	pulumi.Input

	ToGetApplicationGatewaySslCertificateOutput() GetApplicationGatewaySslCertificateOutput
	ToGetApplicationGatewaySslCertificateOutputWithContext(context.Context) GetApplicationGatewaySslCertificateOutput
}

type GetApplicationGatewaySslCertificateArgs struct {
	// The ID of the Rewrite Rule Set
	Id pulumi.StringInput `pulumi:"id"`
	// The Secret ID of (base-64 encoded unencrypted pfx) the `Secret` or `Certificate` object stored in Azure KeyVault.
	KeyVaultSecretId pulumi.StringInput `pulumi:"keyVaultSecretId"`
	// The name of this Application Gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// The Public Certificate Data associated with the SSL Certificate.
	PublicCertData pulumi.StringInput `pulumi:"publicCertData"`
}

func (GetApplicationGatewaySslCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewaySslCertificate)(nil)).Elem()
}

func (i GetApplicationGatewaySslCertificateArgs) ToGetApplicationGatewaySslCertificateOutput() GetApplicationGatewaySslCertificateOutput {
	return i.ToGetApplicationGatewaySslCertificateOutputWithContext(context.Background())
}

func (i GetApplicationGatewaySslCertificateArgs) ToGetApplicationGatewaySslCertificateOutputWithContext(ctx context.Context) GetApplicationGatewaySslCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewaySslCertificateOutput)
}

// GetApplicationGatewaySslCertificateArrayInput is an input type that accepts GetApplicationGatewaySslCertificateArray and GetApplicationGatewaySslCertificateArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewaySslCertificateArrayInput` via:
//
//	GetApplicationGatewaySslCertificateArray{ GetApplicationGatewaySslCertificateArgs{...} }
type GetApplicationGatewaySslCertificateArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewaySslCertificateArrayOutput() GetApplicationGatewaySslCertificateArrayOutput
	ToGetApplicationGatewaySslCertificateArrayOutputWithContext(context.Context) GetApplicationGatewaySslCertificateArrayOutput
}

type GetApplicationGatewaySslCertificateArray []GetApplicationGatewaySslCertificateInput

func (GetApplicationGatewaySslCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewaySslCertificate)(nil)).Elem()
}

func (i GetApplicationGatewaySslCertificateArray) ToGetApplicationGatewaySslCertificateArrayOutput() GetApplicationGatewaySslCertificateArrayOutput {
	return i.ToGetApplicationGatewaySslCertificateArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewaySslCertificateArray) ToGetApplicationGatewaySslCertificateArrayOutputWithContext(ctx context.Context) GetApplicationGatewaySslCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewaySslCertificateArrayOutput)
}

type GetApplicationGatewaySslCertificateOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewaySslCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewaySslCertificate)(nil)).Elem()
}

func (o GetApplicationGatewaySslCertificateOutput) ToGetApplicationGatewaySslCertificateOutput() GetApplicationGatewaySslCertificateOutput {
	return o
}

func (o GetApplicationGatewaySslCertificateOutput) ToGetApplicationGatewaySslCertificateOutputWithContext(ctx context.Context) GetApplicationGatewaySslCertificateOutput {
	return o
}

// The ID of the Rewrite Rule Set
func (o GetApplicationGatewaySslCertificateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewaySslCertificate) string { return v.Id }).(pulumi.StringOutput)
}

// The Secret ID of (base-64 encoded unencrypted pfx) the `Secret` or `Certificate` object stored in Azure KeyVault.
func (o GetApplicationGatewaySslCertificateOutput) KeyVaultSecretId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewaySslCertificate) string { return v.KeyVaultSecretId }).(pulumi.StringOutput)
}

// The name of this Application Gateway.
func (o GetApplicationGatewaySslCertificateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewaySslCertificate) string { return v.Name }).(pulumi.StringOutput)
}

// The Public Certificate Data associated with the SSL Certificate.
func (o GetApplicationGatewaySslCertificateOutput) PublicCertData() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewaySslCertificate) string { return v.PublicCertData }).(pulumi.StringOutput)
}

type GetApplicationGatewaySslCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewaySslCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewaySslCertificate)(nil)).Elem()
}

func (o GetApplicationGatewaySslCertificateArrayOutput) ToGetApplicationGatewaySslCertificateArrayOutput() GetApplicationGatewaySslCertificateArrayOutput {
	return o
}

func (o GetApplicationGatewaySslCertificateArrayOutput) ToGetApplicationGatewaySslCertificateArrayOutputWithContext(ctx context.Context) GetApplicationGatewaySslCertificateArrayOutput {
	return o
}

func (o GetApplicationGatewaySslCertificateArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewaySslCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewaySslCertificate {
		return vs[0].([]GetApplicationGatewaySslCertificate)[vs[1].(int)]
	}).(GetApplicationGatewaySslCertificateOutput)
}

type GetApplicationGatewaySslPolicy struct {
	// A List of accepted cipher suites.
	CipherSuites []string `pulumi:"cipherSuites"`
	// A list of SSL Protocols which are disabled on this Application Gateway.
	DisabledProtocols []string `pulumi:"disabledProtocols"`
	// The minimum TLS version.
	MinProtocolVersion string `pulumi:"minProtocolVersion"`
	// The Name of the Policy.
	PolicyName string `pulumi:"policyName"`
	// The Type of the Policy.
	PolicyType string `pulumi:"policyType"`
}

// GetApplicationGatewaySslPolicyInput is an input type that accepts GetApplicationGatewaySslPolicyArgs and GetApplicationGatewaySslPolicyOutput values.
// You can construct a concrete instance of `GetApplicationGatewaySslPolicyInput` via:
//
//	GetApplicationGatewaySslPolicyArgs{...}
type GetApplicationGatewaySslPolicyInput interface {
	pulumi.Input

	ToGetApplicationGatewaySslPolicyOutput() GetApplicationGatewaySslPolicyOutput
	ToGetApplicationGatewaySslPolicyOutputWithContext(context.Context) GetApplicationGatewaySslPolicyOutput
}

type GetApplicationGatewaySslPolicyArgs struct {
	// A List of accepted cipher suites.
	CipherSuites pulumi.StringArrayInput `pulumi:"cipherSuites"`
	// A list of SSL Protocols which are disabled on this Application Gateway.
	DisabledProtocols pulumi.StringArrayInput `pulumi:"disabledProtocols"`
	// The minimum TLS version.
	MinProtocolVersion pulumi.StringInput `pulumi:"minProtocolVersion"`
	// The Name of the Policy.
	PolicyName pulumi.StringInput `pulumi:"policyName"`
	// The Type of the Policy.
	PolicyType pulumi.StringInput `pulumi:"policyType"`
}

func (GetApplicationGatewaySslPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewaySslPolicy)(nil)).Elem()
}

func (i GetApplicationGatewaySslPolicyArgs) ToGetApplicationGatewaySslPolicyOutput() GetApplicationGatewaySslPolicyOutput {
	return i.ToGetApplicationGatewaySslPolicyOutputWithContext(context.Background())
}

func (i GetApplicationGatewaySslPolicyArgs) ToGetApplicationGatewaySslPolicyOutputWithContext(ctx context.Context) GetApplicationGatewaySslPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewaySslPolicyOutput)
}

// GetApplicationGatewaySslPolicyArrayInput is an input type that accepts GetApplicationGatewaySslPolicyArray and GetApplicationGatewaySslPolicyArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewaySslPolicyArrayInput` via:
//
//	GetApplicationGatewaySslPolicyArray{ GetApplicationGatewaySslPolicyArgs{...} }
type GetApplicationGatewaySslPolicyArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewaySslPolicyArrayOutput() GetApplicationGatewaySslPolicyArrayOutput
	ToGetApplicationGatewaySslPolicyArrayOutputWithContext(context.Context) GetApplicationGatewaySslPolicyArrayOutput
}

type GetApplicationGatewaySslPolicyArray []GetApplicationGatewaySslPolicyInput

func (GetApplicationGatewaySslPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewaySslPolicy)(nil)).Elem()
}

func (i GetApplicationGatewaySslPolicyArray) ToGetApplicationGatewaySslPolicyArrayOutput() GetApplicationGatewaySslPolicyArrayOutput {
	return i.ToGetApplicationGatewaySslPolicyArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewaySslPolicyArray) ToGetApplicationGatewaySslPolicyArrayOutputWithContext(ctx context.Context) GetApplicationGatewaySslPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewaySslPolicyArrayOutput)
}

type GetApplicationGatewaySslPolicyOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewaySslPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewaySslPolicy)(nil)).Elem()
}

func (o GetApplicationGatewaySslPolicyOutput) ToGetApplicationGatewaySslPolicyOutput() GetApplicationGatewaySslPolicyOutput {
	return o
}

func (o GetApplicationGatewaySslPolicyOutput) ToGetApplicationGatewaySslPolicyOutputWithContext(ctx context.Context) GetApplicationGatewaySslPolicyOutput {
	return o
}

// A List of accepted cipher suites.
func (o GetApplicationGatewaySslPolicyOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationGatewaySslPolicy) []string { return v.CipherSuites }).(pulumi.StringArrayOutput)
}

// A list of SSL Protocols which are disabled on this Application Gateway.
func (o GetApplicationGatewaySslPolicyOutput) DisabledProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationGatewaySslPolicy) []string { return v.DisabledProtocols }).(pulumi.StringArrayOutput)
}

// The minimum TLS version.
func (o GetApplicationGatewaySslPolicyOutput) MinProtocolVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewaySslPolicy) string { return v.MinProtocolVersion }).(pulumi.StringOutput)
}

// The Name of the Policy.
func (o GetApplicationGatewaySslPolicyOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewaySslPolicy) string { return v.PolicyName }).(pulumi.StringOutput)
}

// The Type of the Policy.
func (o GetApplicationGatewaySslPolicyOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewaySslPolicy) string { return v.PolicyType }).(pulumi.StringOutput)
}

type GetApplicationGatewaySslPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewaySslPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewaySslPolicy)(nil)).Elem()
}

func (o GetApplicationGatewaySslPolicyArrayOutput) ToGetApplicationGatewaySslPolicyArrayOutput() GetApplicationGatewaySslPolicyArrayOutput {
	return o
}

func (o GetApplicationGatewaySslPolicyArrayOutput) ToGetApplicationGatewaySslPolicyArrayOutputWithContext(ctx context.Context) GetApplicationGatewaySslPolicyArrayOutput {
	return o
}

func (o GetApplicationGatewaySslPolicyArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewaySslPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewaySslPolicy {
		return vs[0].([]GetApplicationGatewaySslPolicy)[vs[1].(int)]
	}).(GetApplicationGatewaySslPolicyOutput)
}

type GetApplicationGatewaySslProfile struct {
	// The ID of the Rewrite Rule Set
	Id string `pulumi:"id"`
	// The name of this Application Gateway.
	Name string `pulumi:"name"`
	// a `sslPolicy` block as defined below.
	SslPolicies []GetApplicationGatewaySslProfileSslPolicy `pulumi:"sslPolicies"`
	// The name of the Trusted Client Certificate that will be used to authenticate requests from clients.
	TrustedClientCertificateNames   []string `pulumi:"trustedClientCertificateNames"`
	VerifyClientCertificateIssuerDn bool     `pulumi:"verifyClientCertificateIssuerDn"`
	// The method used to check client certificate revocation status.
	VerifyClientCertificateRevocation string `pulumi:"verifyClientCertificateRevocation"`
}

// GetApplicationGatewaySslProfileInput is an input type that accepts GetApplicationGatewaySslProfileArgs and GetApplicationGatewaySslProfileOutput values.
// You can construct a concrete instance of `GetApplicationGatewaySslProfileInput` via:
//
//	GetApplicationGatewaySslProfileArgs{...}
type GetApplicationGatewaySslProfileInput interface {
	pulumi.Input

	ToGetApplicationGatewaySslProfileOutput() GetApplicationGatewaySslProfileOutput
	ToGetApplicationGatewaySslProfileOutputWithContext(context.Context) GetApplicationGatewaySslProfileOutput
}

type GetApplicationGatewaySslProfileArgs struct {
	// The ID of the Rewrite Rule Set
	Id pulumi.StringInput `pulumi:"id"`
	// The name of this Application Gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// a `sslPolicy` block as defined below.
	SslPolicies GetApplicationGatewaySslProfileSslPolicyArrayInput `pulumi:"sslPolicies"`
	// The name of the Trusted Client Certificate that will be used to authenticate requests from clients.
	TrustedClientCertificateNames   pulumi.StringArrayInput `pulumi:"trustedClientCertificateNames"`
	VerifyClientCertificateIssuerDn pulumi.BoolInput        `pulumi:"verifyClientCertificateIssuerDn"`
	// The method used to check client certificate revocation status.
	VerifyClientCertificateRevocation pulumi.StringInput `pulumi:"verifyClientCertificateRevocation"`
}

func (GetApplicationGatewaySslProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewaySslProfile)(nil)).Elem()
}

func (i GetApplicationGatewaySslProfileArgs) ToGetApplicationGatewaySslProfileOutput() GetApplicationGatewaySslProfileOutput {
	return i.ToGetApplicationGatewaySslProfileOutputWithContext(context.Background())
}

func (i GetApplicationGatewaySslProfileArgs) ToGetApplicationGatewaySslProfileOutputWithContext(ctx context.Context) GetApplicationGatewaySslProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewaySslProfileOutput)
}

// GetApplicationGatewaySslProfileArrayInput is an input type that accepts GetApplicationGatewaySslProfileArray and GetApplicationGatewaySslProfileArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewaySslProfileArrayInput` via:
//
//	GetApplicationGatewaySslProfileArray{ GetApplicationGatewaySslProfileArgs{...} }
type GetApplicationGatewaySslProfileArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewaySslProfileArrayOutput() GetApplicationGatewaySslProfileArrayOutput
	ToGetApplicationGatewaySslProfileArrayOutputWithContext(context.Context) GetApplicationGatewaySslProfileArrayOutput
}

type GetApplicationGatewaySslProfileArray []GetApplicationGatewaySslProfileInput

func (GetApplicationGatewaySslProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewaySslProfile)(nil)).Elem()
}

func (i GetApplicationGatewaySslProfileArray) ToGetApplicationGatewaySslProfileArrayOutput() GetApplicationGatewaySslProfileArrayOutput {
	return i.ToGetApplicationGatewaySslProfileArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewaySslProfileArray) ToGetApplicationGatewaySslProfileArrayOutputWithContext(ctx context.Context) GetApplicationGatewaySslProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewaySslProfileArrayOutput)
}

type GetApplicationGatewaySslProfileOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewaySslProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewaySslProfile)(nil)).Elem()
}

func (o GetApplicationGatewaySslProfileOutput) ToGetApplicationGatewaySslProfileOutput() GetApplicationGatewaySslProfileOutput {
	return o
}

func (o GetApplicationGatewaySslProfileOutput) ToGetApplicationGatewaySslProfileOutputWithContext(ctx context.Context) GetApplicationGatewaySslProfileOutput {
	return o
}

// The ID of the Rewrite Rule Set
func (o GetApplicationGatewaySslProfileOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewaySslProfile) string { return v.Id }).(pulumi.StringOutput)
}

// The name of this Application Gateway.
func (o GetApplicationGatewaySslProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewaySslProfile) string { return v.Name }).(pulumi.StringOutput)
}

// a `sslPolicy` block as defined below.
func (o GetApplicationGatewaySslProfileOutput) SslPolicies() GetApplicationGatewaySslProfileSslPolicyArrayOutput {
	return o.ApplyT(func(v GetApplicationGatewaySslProfile) []GetApplicationGatewaySslProfileSslPolicy {
		return v.SslPolicies
	}).(GetApplicationGatewaySslProfileSslPolicyArrayOutput)
}

// The name of the Trusted Client Certificate that will be used to authenticate requests from clients.
func (o GetApplicationGatewaySslProfileOutput) TrustedClientCertificateNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationGatewaySslProfile) []string { return v.TrustedClientCertificateNames }).(pulumi.StringArrayOutput)
}

func (o GetApplicationGatewaySslProfileOutput) VerifyClientCertificateIssuerDn() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationGatewaySslProfile) bool { return v.VerifyClientCertificateIssuerDn }).(pulumi.BoolOutput)
}

// The method used to check client certificate revocation status.
func (o GetApplicationGatewaySslProfileOutput) VerifyClientCertificateRevocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewaySslProfile) string { return v.VerifyClientCertificateRevocation }).(pulumi.StringOutput)
}

type GetApplicationGatewaySslProfileArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewaySslProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewaySslProfile)(nil)).Elem()
}

func (o GetApplicationGatewaySslProfileArrayOutput) ToGetApplicationGatewaySslProfileArrayOutput() GetApplicationGatewaySslProfileArrayOutput {
	return o
}

func (o GetApplicationGatewaySslProfileArrayOutput) ToGetApplicationGatewaySslProfileArrayOutputWithContext(ctx context.Context) GetApplicationGatewaySslProfileArrayOutput {
	return o
}

func (o GetApplicationGatewaySslProfileArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewaySslProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewaySslProfile {
		return vs[0].([]GetApplicationGatewaySslProfile)[vs[1].(int)]
	}).(GetApplicationGatewaySslProfileOutput)
}

type GetApplicationGatewaySslProfileSslPolicy struct {
	// A List of accepted cipher suites.
	CipherSuites []string `pulumi:"cipherSuites"`
	// A list of SSL Protocols which are disabled on this Application Gateway.
	DisabledProtocols []string `pulumi:"disabledProtocols"`
	// The minimum TLS version.
	MinProtocolVersion string `pulumi:"minProtocolVersion"`
	// The Name of the Policy.
	PolicyName string `pulumi:"policyName"`
	// The Type of the Policy.
	PolicyType string `pulumi:"policyType"`
}

// GetApplicationGatewaySslProfileSslPolicyInput is an input type that accepts GetApplicationGatewaySslProfileSslPolicyArgs and GetApplicationGatewaySslProfileSslPolicyOutput values.
// You can construct a concrete instance of `GetApplicationGatewaySslProfileSslPolicyInput` via:
//
//	GetApplicationGatewaySslProfileSslPolicyArgs{...}
type GetApplicationGatewaySslProfileSslPolicyInput interface {
	pulumi.Input

	ToGetApplicationGatewaySslProfileSslPolicyOutput() GetApplicationGatewaySslProfileSslPolicyOutput
	ToGetApplicationGatewaySslProfileSslPolicyOutputWithContext(context.Context) GetApplicationGatewaySslProfileSslPolicyOutput
}

type GetApplicationGatewaySslProfileSslPolicyArgs struct {
	// A List of accepted cipher suites.
	CipherSuites pulumi.StringArrayInput `pulumi:"cipherSuites"`
	// A list of SSL Protocols which are disabled on this Application Gateway.
	DisabledProtocols pulumi.StringArrayInput `pulumi:"disabledProtocols"`
	// The minimum TLS version.
	MinProtocolVersion pulumi.StringInput `pulumi:"minProtocolVersion"`
	// The Name of the Policy.
	PolicyName pulumi.StringInput `pulumi:"policyName"`
	// The Type of the Policy.
	PolicyType pulumi.StringInput `pulumi:"policyType"`
}

func (GetApplicationGatewaySslProfileSslPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewaySslProfileSslPolicy)(nil)).Elem()
}

func (i GetApplicationGatewaySslProfileSslPolicyArgs) ToGetApplicationGatewaySslProfileSslPolicyOutput() GetApplicationGatewaySslProfileSslPolicyOutput {
	return i.ToGetApplicationGatewaySslProfileSslPolicyOutputWithContext(context.Background())
}

func (i GetApplicationGatewaySslProfileSslPolicyArgs) ToGetApplicationGatewaySslProfileSslPolicyOutputWithContext(ctx context.Context) GetApplicationGatewaySslProfileSslPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewaySslProfileSslPolicyOutput)
}

// GetApplicationGatewaySslProfileSslPolicyArrayInput is an input type that accepts GetApplicationGatewaySslProfileSslPolicyArray and GetApplicationGatewaySslProfileSslPolicyArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewaySslProfileSslPolicyArrayInput` via:
//
//	GetApplicationGatewaySslProfileSslPolicyArray{ GetApplicationGatewaySslProfileSslPolicyArgs{...} }
type GetApplicationGatewaySslProfileSslPolicyArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewaySslProfileSslPolicyArrayOutput() GetApplicationGatewaySslProfileSslPolicyArrayOutput
	ToGetApplicationGatewaySslProfileSslPolicyArrayOutputWithContext(context.Context) GetApplicationGatewaySslProfileSslPolicyArrayOutput
}

type GetApplicationGatewaySslProfileSslPolicyArray []GetApplicationGatewaySslProfileSslPolicyInput

func (GetApplicationGatewaySslProfileSslPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewaySslProfileSslPolicy)(nil)).Elem()
}

func (i GetApplicationGatewaySslProfileSslPolicyArray) ToGetApplicationGatewaySslProfileSslPolicyArrayOutput() GetApplicationGatewaySslProfileSslPolicyArrayOutput {
	return i.ToGetApplicationGatewaySslProfileSslPolicyArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewaySslProfileSslPolicyArray) ToGetApplicationGatewaySslProfileSslPolicyArrayOutputWithContext(ctx context.Context) GetApplicationGatewaySslProfileSslPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewaySslProfileSslPolicyArrayOutput)
}

type GetApplicationGatewaySslProfileSslPolicyOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewaySslProfileSslPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewaySslProfileSslPolicy)(nil)).Elem()
}

func (o GetApplicationGatewaySslProfileSslPolicyOutput) ToGetApplicationGatewaySslProfileSslPolicyOutput() GetApplicationGatewaySslProfileSslPolicyOutput {
	return o
}

func (o GetApplicationGatewaySslProfileSslPolicyOutput) ToGetApplicationGatewaySslProfileSslPolicyOutputWithContext(ctx context.Context) GetApplicationGatewaySslProfileSslPolicyOutput {
	return o
}

// A List of accepted cipher suites.
func (o GetApplicationGatewaySslProfileSslPolicyOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationGatewaySslProfileSslPolicy) []string { return v.CipherSuites }).(pulumi.StringArrayOutput)
}

// A list of SSL Protocols which are disabled on this Application Gateway.
func (o GetApplicationGatewaySslProfileSslPolicyOutput) DisabledProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationGatewaySslProfileSslPolicy) []string { return v.DisabledProtocols }).(pulumi.StringArrayOutput)
}

// The minimum TLS version.
func (o GetApplicationGatewaySslProfileSslPolicyOutput) MinProtocolVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewaySslProfileSslPolicy) string { return v.MinProtocolVersion }).(pulumi.StringOutput)
}

// The Name of the Policy.
func (o GetApplicationGatewaySslProfileSslPolicyOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewaySslProfileSslPolicy) string { return v.PolicyName }).(pulumi.StringOutput)
}

// The Type of the Policy.
func (o GetApplicationGatewaySslProfileSslPolicyOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewaySslProfileSslPolicy) string { return v.PolicyType }).(pulumi.StringOutput)
}

type GetApplicationGatewaySslProfileSslPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewaySslProfileSslPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewaySslProfileSslPolicy)(nil)).Elem()
}

func (o GetApplicationGatewaySslProfileSslPolicyArrayOutput) ToGetApplicationGatewaySslProfileSslPolicyArrayOutput() GetApplicationGatewaySslProfileSslPolicyArrayOutput {
	return o
}

func (o GetApplicationGatewaySslProfileSslPolicyArrayOutput) ToGetApplicationGatewaySslProfileSslPolicyArrayOutputWithContext(ctx context.Context) GetApplicationGatewaySslProfileSslPolicyArrayOutput {
	return o
}

func (o GetApplicationGatewaySslProfileSslPolicyArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewaySslProfileSslPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewaySslProfileSslPolicy {
		return vs[0].([]GetApplicationGatewaySslProfileSslPolicy)[vs[1].(int)]
	}).(GetApplicationGatewaySslProfileSslPolicyOutput)
}

type GetApplicationGatewayTrustedClientCertificate struct {
	// The ID of the Rewrite Rule Set
	Id string `pulumi:"id"`
	// The name of this Application Gateway.
	Name string `pulumi:"name"`
}

// GetApplicationGatewayTrustedClientCertificateInput is an input type that accepts GetApplicationGatewayTrustedClientCertificateArgs and GetApplicationGatewayTrustedClientCertificateOutput values.
// You can construct a concrete instance of `GetApplicationGatewayTrustedClientCertificateInput` via:
//
//	GetApplicationGatewayTrustedClientCertificateArgs{...}
type GetApplicationGatewayTrustedClientCertificateInput interface {
	pulumi.Input

	ToGetApplicationGatewayTrustedClientCertificateOutput() GetApplicationGatewayTrustedClientCertificateOutput
	ToGetApplicationGatewayTrustedClientCertificateOutputWithContext(context.Context) GetApplicationGatewayTrustedClientCertificateOutput
}

type GetApplicationGatewayTrustedClientCertificateArgs struct {
	// The ID of the Rewrite Rule Set
	Id pulumi.StringInput `pulumi:"id"`
	// The name of this Application Gateway.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetApplicationGatewayTrustedClientCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayTrustedClientCertificate)(nil)).Elem()
}

func (i GetApplicationGatewayTrustedClientCertificateArgs) ToGetApplicationGatewayTrustedClientCertificateOutput() GetApplicationGatewayTrustedClientCertificateOutput {
	return i.ToGetApplicationGatewayTrustedClientCertificateOutputWithContext(context.Background())
}

func (i GetApplicationGatewayTrustedClientCertificateArgs) ToGetApplicationGatewayTrustedClientCertificateOutputWithContext(ctx context.Context) GetApplicationGatewayTrustedClientCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayTrustedClientCertificateOutput)
}

// GetApplicationGatewayTrustedClientCertificateArrayInput is an input type that accepts GetApplicationGatewayTrustedClientCertificateArray and GetApplicationGatewayTrustedClientCertificateArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayTrustedClientCertificateArrayInput` via:
//
//	GetApplicationGatewayTrustedClientCertificateArray{ GetApplicationGatewayTrustedClientCertificateArgs{...} }
type GetApplicationGatewayTrustedClientCertificateArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayTrustedClientCertificateArrayOutput() GetApplicationGatewayTrustedClientCertificateArrayOutput
	ToGetApplicationGatewayTrustedClientCertificateArrayOutputWithContext(context.Context) GetApplicationGatewayTrustedClientCertificateArrayOutput
}

type GetApplicationGatewayTrustedClientCertificateArray []GetApplicationGatewayTrustedClientCertificateInput

func (GetApplicationGatewayTrustedClientCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayTrustedClientCertificate)(nil)).Elem()
}

func (i GetApplicationGatewayTrustedClientCertificateArray) ToGetApplicationGatewayTrustedClientCertificateArrayOutput() GetApplicationGatewayTrustedClientCertificateArrayOutput {
	return i.ToGetApplicationGatewayTrustedClientCertificateArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayTrustedClientCertificateArray) ToGetApplicationGatewayTrustedClientCertificateArrayOutputWithContext(ctx context.Context) GetApplicationGatewayTrustedClientCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayTrustedClientCertificateArrayOutput)
}

type GetApplicationGatewayTrustedClientCertificateOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayTrustedClientCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayTrustedClientCertificate)(nil)).Elem()
}

func (o GetApplicationGatewayTrustedClientCertificateOutput) ToGetApplicationGatewayTrustedClientCertificateOutput() GetApplicationGatewayTrustedClientCertificateOutput {
	return o
}

func (o GetApplicationGatewayTrustedClientCertificateOutput) ToGetApplicationGatewayTrustedClientCertificateOutputWithContext(ctx context.Context) GetApplicationGatewayTrustedClientCertificateOutput {
	return o
}

// The ID of the Rewrite Rule Set
func (o GetApplicationGatewayTrustedClientCertificateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayTrustedClientCertificate) string { return v.Id }).(pulumi.StringOutput)
}

// The name of this Application Gateway.
func (o GetApplicationGatewayTrustedClientCertificateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayTrustedClientCertificate) string { return v.Name }).(pulumi.StringOutput)
}

type GetApplicationGatewayTrustedClientCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayTrustedClientCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayTrustedClientCertificate)(nil)).Elem()
}

func (o GetApplicationGatewayTrustedClientCertificateArrayOutput) ToGetApplicationGatewayTrustedClientCertificateArrayOutput() GetApplicationGatewayTrustedClientCertificateArrayOutput {
	return o
}

func (o GetApplicationGatewayTrustedClientCertificateArrayOutput) ToGetApplicationGatewayTrustedClientCertificateArrayOutputWithContext(ctx context.Context) GetApplicationGatewayTrustedClientCertificateArrayOutput {
	return o
}

func (o GetApplicationGatewayTrustedClientCertificateArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayTrustedClientCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayTrustedClientCertificate {
		return vs[0].([]GetApplicationGatewayTrustedClientCertificate)[vs[1].(int)]
	}).(GetApplicationGatewayTrustedClientCertificateOutput)
}

type GetApplicationGatewayTrustedRootCertificate struct {
	// The ID of the Rewrite Rule Set
	Id string `pulumi:"id"`
	// The Secret ID of (base-64 encoded unencrypted pfx) the `Secret` or `Certificate` object stored in Azure KeyVault.
	KeyVaultSecretId string `pulumi:"keyVaultSecretId"`
	// The name of this Application Gateway.
	Name string `pulumi:"name"`
}

// GetApplicationGatewayTrustedRootCertificateInput is an input type that accepts GetApplicationGatewayTrustedRootCertificateArgs and GetApplicationGatewayTrustedRootCertificateOutput values.
// You can construct a concrete instance of `GetApplicationGatewayTrustedRootCertificateInput` via:
//
//	GetApplicationGatewayTrustedRootCertificateArgs{...}
type GetApplicationGatewayTrustedRootCertificateInput interface {
	pulumi.Input

	ToGetApplicationGatewayTrustedRootCertificateOutput() GetApplicationGatewayTrustedRootCertificateOutput
	ToGetApplicationGatewayTrustedRootCertificateOutputWithContext(context.Context) GetApplicationGatewayTrustedRootCertificateOutput
}

type GetApplicationGatewayTrustedRootCertificateArgs struct {
	// The ID of the Rewrite Rule Set
	Id pulumi.StringInput `pulumi:"id"`
	// The Secret ID of (base-64 encoded unencrypted pfx) the `Secret` or `Certificate` object stored in Azure KeyVault.
	KeyVaultSecretId pulumi.StringInput `pulumi:"keyVaultSecretId"`
	// The name of this Application Gateway.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetApplicationGatewayTrustedRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayTrustedRootCertificate)(nil)).Elem()
}

func (i GetApplicationGatewayTrustedRootCertificateArgs) ToGetApplicationGatewayTrustedRootCertificateOutput() GetApplicationGatewayTrustedRootCertificateOutput {
	return i.ToGetApplicationGatewayTrustedRootCertificateOutputWithContext(context.Background())
}

func (i GetApplicationGatewayTrustedRootCertificateArgs) ToGetApplicationGatewayTrustedRootCertificateOutputWithContext(ctx context.Context) GetApplicationGatewayTrustedRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayTrustedRootCertificateOutput)
}

// GetApplicationGatewayTrustedRootCertificateArrayInput is an input type that accepts GetApplicationGatewayTrustedRootCertificateArray and GetApplicationGatewayTrustedRootCertificateArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayTrustedRootCertificateArrayInput` via:
//
//	GetApplicationGatewayTrustedRootCertificateArray{ GetApplicationGatewayTrustedRootCertificateArgs{...} }
type GetApplicationGatewayTrustedRootCertificateArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayTrustedRootCertificateArrayOutput() GetApplicationGatewayTrustedRootCertificateArrayOutput
	ToGetApplicationGatewayTrustedRootCertificateArrayOutputWithContext(context.Context) GetApplicationGatewayTrustedRootCertificateArrayOutput
}

type GetApplicationGatewayTrustedRootCertificateArray []GetApplicationGatewayTrustedRootCertificateInput

func (GetApplicationGatewayTrustedRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayTrustedRootCertificate)(nil)).Elem()
}

func (i GetApplicationGatewayTrustedRootCertificateArray) ToGetApplicationGatewayTrustedRootCertificateArrayOutput() GetApplicationGatewayTrustedRootCertificateArrayOutput {
	return i.ToGetApplicationGatewayTrustedRootCertificateArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayTrustedRootCertificateArray) ToGetApplicationGatewayTrustedRootCertificateArrayOutputWithContext(ctx context.Context) GetApplicationGatewayTrustedRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayTrustedRootCertificateArrayOutput)
}

type GetApplicationGatewayTrustedRootCertificateOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayTrustedRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayTrustedRootCertificate)(nil)).Elem()
}

func (o GetApplicationGatewayTrustedRootCertificateOutput) ToGetApplicationGatewayTrustedRootCertificateOutput() GetApplicationGatewayTrustedRootCertificateOutput {
	return o
}

func (o GetApplicationGatewayTrustedRootCertificateOutput) ToGetApplicationGatewayTrustedRootCertificateOutputWithContext(ctx context.Context) GetApplicationGatewayTrustedRootCertificateOutput {
	return o
}

// The ID of the Rewrite Rule Set
func (o GetApplicationGatewayTrustedRootCertificateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayTrustedRootCertificate) string { return v.Id }).(pulumi.StringOutput)
}

// The Secret ID of (base-64 encoded unencrypted pfx) the `Secret` or `Certificate` object stored in Azure KeyVault.
func (o GetApplicationGatewayTrustedRootCertificateOutput) KeyVaultSecretId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayTrustedRootCertificate) string { return v.KeyVaultSecretId }).(pulumi.StringOutput)
}

// The name of this Application Gateway.
func (o GetApplicationGatewayTrustedRootCertificateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayTrustedRootCertificate) string { return v.Name }).(pulumi.StringOutput)
}

type GetApplicationGatewayTrustedRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayTrustedRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayTrustedRootCertificate)(nil)).Elem()
}

func (o GetApplicationGatewayTrustedRootCertificateArrayOutput) ToGetApplicationGatewayTrustedRootCertificateArrayOutput() GetApplicationGatewayTrustedRootCertificateArrayOutput {
	return o
}

func (o GetApplicationGatewayTrustedRootCertificateArrayOutput) ToGetApplicationGatewayTrustedRootCertificateArrayOutputWithContext(ctx context.Context) GetApplicationGatewayTrustedRootCertificateArrayOutput {
	return o
}

func (o GetApplicationGatewayTrustedRootCertificateArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayTrustedRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayTrustedRootCertificate {
		return vs[0].([]GetApplicationGatewayTrustedRootCertificate)[vs[1].(int)]
	}).(GetApplicationGatewayTrustedRootCertificateOutput)
}

type GetApplicationGatewayUrlPathMap struct {
	// The ID of the Default Backend Address Pool.
	DefaultBackendAddressPoolId string `pulumi:"defaultBackendAddressPoolId"`
	// The Name of the Default Backend Address Pool which is used for this URL Path Map.
	DefaultBackendAddressPoolName string `pulumi:"defaultBackendAddressPoolName"`
	// The ID of the Default Backend HTTP Settings Collection.
	DefaultBackendHttpSettingsId string `pulumi:"defaultBackendHttpSettingsId"`
	// The Name of the Default Backend HTTP Settings Collection which is used for this URL Path Map.
	DefaultBackendHttpSettingsName string `pulumi:"defaultBackendHttpSettingsName"`
	// The ID of the Default Redirect Configuration.
	DefaultRedirectConfigurationId string `pulumi:"defaultRedirectConfigurationId"`
	// The Name of the Default Redirect Configuration which is used for this URL Path Map.
	DefaultRedirectConfigurationName string `pulumi:"defaultRedirectConfigurationName"`
	DefaultRewriteRuleSetId          string `pulumi:"defaultRewriteRuleSetId"`
	// The Name of the Default Rewrite Rule Set which is used for this URL Path Map.
	DefaultRewriteRuleSetName string `pulumi:"defaultRewriteRuleSetName"`
	// The ID of the Rewrite Rule Set
	Id string `pulumi:"id"`
	// The name of this Application Gateway.
	Name string `pulumi:"name"`
	// One or more `pathRule` blocks as defined above.
	PathRules []GetApplicationGatewayUrlPathMapPathRule `pulumi:"pathRules"`
}

// GetApplicationGatewayUrlPathMapInput is an input type that accepts GetApplicationGatewayUrlPathMap and GetApplicationGatewayUrlPathMapOutput values.
// You can construct a concrete instance of `GetApplicationGatewayUrlPathMapInput` via:
//
//	GetApplicationGatewayUrlPathMap{ "key": GetApplicationGatewayUrlPathArgs{...} }
type GetApplicationGatewayUrlPathMapInput interface {
	pulumi.Input

	ToGetApplicationGatewayUrlPathMapOutput() GetApplicationGatewayUrlPathMapOutput
	ToGetApplicationGatewayUrlPathMapOutputWithContext(context.Context) GetApplicationGatewayUrlPathMapOutput
}

type GetApplicationGatewayUrlPathMapArgs struct {
	// The ID of the Default Backend Address Pool.
	DefaultBackendAddressPoolId pulumi.StringInput `pulumi:"defaultBackendAddressPoolId"`
	// The Name of the Default Backend Address Pool which is used for this URL Path Map.
	DefaultBackendAddressPoolName pulumi.StringInput `pulumi:"defaultBackendAddressPoolName"`
	// The ID of the Default Backend HTTP Settings Collection.
	DefaultBackendHttpSettingsId pulumi.StringInput `pulumi:"defaultBackendHttpSettingsId"`
	// The Name of the Default Backend HTTP Settings Collection which is used for this URL Path Map.
	DefaultBackendHttpSettingsName pulumi.StringInput `pulumi:"defaultBackendHttpSettingsName"`
	// The ID of the Default Redirect Configuration.
	DefaultRedirectConfigurationId pulumi.StringInput `pulumi:"defaultRedirectConfigurationId"`
	// The Name of the Default Redirect Configuration which is used for this URL Path Map.
	DefaultRedirectConfigurationName pulumi.StringInput `pulumi:"defaultRedirectConfigurationName"`
	DefaultRewriteRuleSetId          pulumi.StringInput `pulumi:"defaultRewriteRuleSetId"`
	// The Name of the Default Rewrite Rule Set which is used for this URL Path Map.
	DefaultRewriteRuleSetName pulumi.StringInput `pulumi:"defaultRewriteRuleSetName"`
	// The ID of the Rewrite Rule Set
	Id pulumi.StringInput `pulumi:"id"`
	// The name of this Application Gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// One or more `pathRule` blocks as defined above.
	PathRules GetApplicationGatewayUrlPathMapPathRuleArrayInput `pulumi:"pathRules"`
}

func (GetApplicationGatewayUrlPathMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayUrlPathMap)(nil)).Elem()
}

func (i GetApplicationGatewayUrlPathMapArgs) ToGetApplicationGatewayUrlPathMapOutput() GetApplicationGatewayUrlPathMapOutput {
	return i.ToGetApplicationGatewayUrlPathMapOutputWithContext(context.Background())
}

func (i GetApplicationGatewayUrlPathMapArgs) ToGetApplicationGatewayUrlPathMapOutputWithContext(ctx context.Context) GetApplicationGatewayUrlPathMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayUrlPathMapOutput)
}

// GetApplicationGatewayUrlPathMapArrayInput is an input type that accepts GetApplicationGatewayUrlPathMapArray and GetApplicationGatewayUrlPathMapArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayUrlPathMapArrayInput` via:
//
//	GetApplicationGatewayUrlPathMapArray{ GetApplicationGatewayUrlPathMapArgs{...} }
type GetApplicationGatewayUrlPathMapArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayUrlPathMapArrayOutput() GetApplicationGatewayUrlPathMapArrayOutput
	ToGetApplicationGatewayUrlPathMapArrayOutputWithContext(context.Context) GetApplicationGatewayUrlPathMapArrayOutput
}

type GetApplicationGatewayUrlPathMapArray []GetApplicationGatewayUrlPathMapInput

func (GetApplicationGatewayUrlPathMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayUrlPathMap)(nil)).Elem()
}

func (i GetApplicationGatewayUrlPathMapArray) ToGetApplicationGatewayUrlPathMapArrayOutput() GetApplicationGatewayUrlPathMapArrayOutput {
	return i.ToGetApplicationGatewayUrlPathMapArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayUrlPathMapArray) ToGetApplicationGatewayUrlPathMapArrayOutputWithContext(ctx context.Context) GetApplicationGatewayUrlPathMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayUrlPathMapArrayOutput)
}

type GetApplicationGatewayUrlPathMapOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayUrlPathMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayUrlPathMap)(nil)).Elem()
}

func (o GetApplicationGatewayUrlPathMapOutput) ToGetApplicationGatewayUrlPathMapOutput() GetApplicationGatewayUrlPathMapOutput {
	return o
}

func (o GetApplicationGatewayUrlPathMapOutput) ToGetApplicationGatewayUrlPathMapOutputWithContext(ctx context.Context) GetApplicationGatewayUrlPathMapOutput {
	return o
}

// The ID of the Default Backend Address Pool.
func (o GetApplicationGatewayUrlPathMapOutput) DefaultBackendAddressPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayUrlPathMap) string { return v.DefaultBackendAddressPoolId }).(pulumi.StringOutput)
}

// The Name of the Default Backend Address Pool which is used for this URL Path Map.
func (o GetApplicationGatewayUrlPathMapOutput) DefaultBackendAddressPoolName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayUrlPathMap) string { return v.DefaultBackendAddressPoolName }).(pulumi.StringOutput)
}

// The ID of the Default Backend HTTP Settings Collection.
func (o GetApplicationGatewayUrlPathMapOutput) DefaultBackendHttpSettingsId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayUrlPathMap) string { return v.DefaultBackendHttpSettingsId }).(pulumi.StringOutput)
}

// The Name of the Default Backend HTTP Settings Collection which is used for this URL Path Map.
func (o GetApplicationGatewayUrlPathMapOutput) DefaultBackendHttpSettingsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayUrlPathMap) string { return v.DefaultBackendHttpSettingsName }).(pulumi.StringOutput)
}

// The ID of the Default Redirect Configuration.
func (o GetApplicationGatewayUrlPathMapOutput) DefaultRedirectConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayUrlPathMap) string { return v.DefaultRedirectConfigurationId }).(pulumi.StringOutput)
}

// The Name of the Default Redirect Configuration which is used for this URL Path Map.
func (o GetApplicationGatewayUrlPathMapOutput) DefaultRedirectConfigurationName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayUrlPathMap) string { return v.DefaultRedirectConfigurationName }).(pulumi.StringOutput)
}

func (o GetApplicationGatewayUrlPathMapOutput) DefaultRewriteRuleSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayUrlPathMap) string { return v.DefaultRewriteRuleSetId }).(pulumi.StringOutput)
}

// The Name of the Default Rewrite Rule Set which is used for this URL Path Map.
func (o GetApplicationGatewayUrlPathMapOutput) DefaultRewriteRuleSetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayUrlPathMap) string { return v.DefaultRewriteRuleSetName }).(pulumi.StringOutput)
}

// The ID of the Rewrite Rule Set
func (o GetApplicationGatewayUrlPathMapOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayUrlPathMap) string { return v.Id }).(pulumi.StringOutput)
}

// The name of this Application Gateway.
func (o GetApplicationGatewayUrlPathMapOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayUrlPathMap) string { return v.Name }).(pulumi.StringOutput)
}

// One or more `pathRule` blocks as defined above.
func (o GetApplicationGatewayUrlPathMapOutput) PathRules() GetApplicationGatewayUrlPathMapPathRuleArrayOutput {
	return o.ApplyT(func(v GetApplicationGatewayUrlPathMap) []GetApplicationGatewayUrlPathMapPathRule { return v.PathRules }).(GetApplicationGatewayUrlPathMapPathRuleArrayOutput)
}

type GetApplicationGatewayUrlPathMapArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayUrlPathMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayUrlPathMap)(nil)).Elem()
}

func (o GetApplicationGatewayUrlPathMapArrayOutput) ToGetApplicationGatewayUrlPathMapArrayOutput() GetApplicationGatewayUrlPathMapArrayOutput {
	return o
}

func (o GetApplicationGatewayUrlPathMapArrayOutput) ToGetApplicationGatewayUrlPathMapArrayOutputWithContext(ctx context.Context) GetApplicationGatewayUrlPathMapArrayOutput {
	return o
}

func (o GetApplicationGatewayUrlPathMapArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayUrlPathMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayUrlPathMap {
		return vs[0].([]GetApplicationGatewayUrlPathMap)[vs[1].(int)]
	}).(GetApplicationGatewayUrlPathMapOutput)
}

type GetApplicationGatewayUrlPathMapPathRule struct {
	// The ID of the associated Backend Address Pool.
	BackendAddressPoolId string `pulumi:"backendAddressPoolId"`
	// The Name of the Backend Address Pool which is used for this Routing Rule.
	BackendAddressPoolName string `pulumi:"backendAddressPoolName"`
	// The ID of the associated Backend HTTP Settings Configuration.
	BackendHttpSettingsId string `pulumi:"backendHttpSettingsId"`
	// The Name of the Backend HTTP Settings Collection which is used for this Routing Rule.
	BackendHttpSettingsName string `pulumi:"backendHttpSettingsName"`
	// The ID of the Web Application Firewall Policy which is used as an HTTP Listener for this Path Rule.
	FirewallPolicyId string `pulumi:"firewallPolicyId"`
	// The ID of the Rewrite Rule Set
	Id string `pulumi:"id"`
	// The name of this Application Gateway.
	Name string `pulumi:"name"`
	// A list of Paths used in this Path Rule.
	Paths []string `pulumi:"paths"`
	// The ID of the associated Redirect Configuration.
	RedirectConfigurationId string `pulumi:"redirectConfigurationId"`
	// The Name of the Redirect Configuration which is used for this Routing Rule.
	RedirectConfigurationName string `pulumi:"redirectConfigurationName"`
	// The ID of the associated Rewrite Rule Set.
	RewriteRuleSetId string `pulumi:"rewriteRuleSetId"`
	// The Name of the Rewrite Rule Set which is used for this Routing Rule.
	RewriteRuleSetName string `pulumi:"rewriteRuleSetName"`
}

// GetApplicationGatewayUrlPathMapPathRuleInput is an input type that accepts GetApplicationGatewayUrlPathMapPathRuleArgs and GetApplicationGatewayUrlPathMapPathRuleOutput values.
// You can construct a concrete instance of `GetApplicationGatewayUrlPathMapPathRuleInput` via:
//
//	GetApplicationGatewayUrlPathMapPathRuleArgs{...}
type GetApplicationGatewayUrlPathMapPathRuleInput interface {
	pulumi.Input

	ToGetApplicationGatewayUrlPathMapPathRuleOutput() GetApplicationGatewayUrlPathMapPathRuleOutput
	ToGetApplicationGatewayUrlPathMapPathRuleOutputWithContext(context.Context) GetApplicationGatewayUrlPathMapPathRuleOutput
}

type GetApplicationGatewayUrlPathMapPathRuleArgs struct {
	// The ID of the associated Backend Address Pool.
	BackendAddressPoolId pulumi.StringInput `pulumi:"backendAddressPoolId"`
	// The Name of the Backend Address Pool which is used for this Routing Rule.
	BackendAddressPoolName pulumi.StringInput `pulumi:"backendAddressPoolName"`
	// The ID of the associated Backend HTTP Settings Configuration.
	BackendHttpSettingsId pulumi.StringInput `pulumi:"backendHttpSettingsId"`
	// The Name of the Backend HTTP Settings Collection which is used for this Routing Rule.
	BackendHttpSettingsName pulumi.StringInput `pulumi:"backendHttpSettingsName"`
	// The ID of the Web Application Firewall Policy which is used as an HTTP Listener for this Path Rule.
	FirewallPolicyId pulumi.StringInput `pulumi:"firewallPolicyId"`
	// The ID of the Rewrite Rule Set
	Id pulumi.StringInput `pulumi:"id"`
	// The name of this Application Gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of Paths used in this Path Rule.
	Paths pulumi.StringArrayInput `pulumi:"paths"`
	// The ID of the associated Redirect Configuration.
	RedirectConfigurationId pulumi.StringInput `pulumi:"redirectConfigurationId"`
	// The Name of the Redirect Configuration which is used for this Routing Rule.
	RedirectConfigurationName pulumi.StringInput `pulumi:"redirectConfigurationName"`
	// The ID of the associated Rewrite Rule Set.
	RewriteRuleSetId pulumi.StringInput `pulumi:"rewriteRuleSetId"`
	// The Name of the Rewrite Rule Set which is used for this Routing Rule.
	RewriteRuleSetName pulumi.StringInput `pulumi:"rewriteRuleSetName"`
}

func (GetApplicationGatewayUrlPathMapPathRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayUrlPathMapPathRule)(nil)).Elem()
}

func (i GetApplicationGatewayUrlPathMapPathRuleArgs) ToGetApplicationGatewayUrlPathMapPathRuleOutput() GetApplicationGatewayUrlPathMapPathRuleOutput {
	return i.ToGetApplicationGatewayUrlPathMapPathRuleOutputWithContext(context.Background())
}

func (i GetApplicationGatewayUrlPathMapPathRuleArgs) ToGetApplicationGatewayUrlPathMapPathRuleOutputWithContext(ctx context.Context) GetApplicationGatewayUrlPathMapPathRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayUrlPathMapPathRuleOutput)
}

// GetApplicationGatewayUrlPathMapPathRuleArrayInput is an input type that accepts GetApplicationGatewayUrlPathMapPathRuleArray and GetApplicationGatewayUrlPathMapPathRuleArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayUrlPathMapPathRuleArrayInput` via:
//
//	GetApplicationGatewayUrlPathMapPathRuleArray{ GetApplicationGatewayUrlPathMapPathRuleArgs{...} }
type GetApplicationGatewayUrlPathMapPathRuleArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayUrlPathMapPathRuleArrayOutput() GetApplicationGatewayUrlPathMapPathRuleArrayOutput
	ToGetApplicationGatewayUrlPathMapPathRuleArrayOutputWithContext(context.Context) GetApplicationGatewayUrlPathMapPathRuleArrayOutput
}

type GetApplicationGatewayUrlPathMapPathRuleArray []GetApplicationGatewayUrlPathMapPathRuleInput

func (GetApplicationGatewayUrlPathMapPathRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayUrlPathMapPathRule)(nil)).Elem()
}

func (i GetApplicationGatewayUrlPathMapPathRuleArray) ToGetApplicationGatewayUrlPathMapPathRuleArrayOutput() GetApplicationGatewayUrlPathMapPathRuleArrayOutput {
	return i.ToGetApplicationGatewayUrlPathMapPathRuleArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayUrlPathMapPathRuleArray) ToGetApplicationGatewayUrlPathMapPathRuleArrayOutputWithContext(ctx context.Context) GetApplicationGatewayUrlPathMapPathRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayUrlPathMapPathRuleArrayOutput)
}

type GetApplicationGatewayUrlPathMapPathRuleOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayUrlPathMapPathRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayUrlPathMapPathRule)(nil)).Elem()
}

func (o GetApplicationGatewayUrlPathMapPathRuleOutput) ToGetApplicationGatewayUrlPathMapPathRuleOutput() GetApplicationGatewayUrlPathMapPathRuleOutput {
	return o
}

func (o GetApplicationGatewayUrlPathMapPathRuleOutput) ToGetApplicationGatewayUrlPathMapPathRuleOutputWithContext(ctx context.Context) GetApplicationGatewayUrlPathMapPathRuleOutput {
	return o
}

// The ID of the associated Backend Address Pool.
func (o GetApplicationGatewayUrlPathMapPathRuleOutput) BackendAddressPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayUrlPathMapPathRule) string { return v.BackendAddressPoolId }).(pulumi.StringOutput)
}

// The Name of the Backend Address Pool which is used for this Routing Rule.
func (o GetApplicationGatewayUrlPathMapPathRuleOutput) BackendAddressPoolName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayUrlPathMapPathRule) string { return v.BackendAddressPoolName }).(pulumi.StringOutput)
}

// The ID of the associated Backend HTTP Settings Configuration.
func (o GetApplicationGatewayUrlPathMapPathRuleOutput) BackendHttpSettingsId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayUrlPathMapPathRule) string { return v.BackendHttpSettingsId }).(pulumi.StringOutput)
}

// The Name of the Backend HTTP Settings Collection which is used for this Routing Rule.
func (o GetApplicationGatewayUrlPathMapPathRuleOutput) BackendHttpSettingsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayUrlPathMapPathRule) string { return v.BackendHttpSettingsName }).(pulumi.StringOutput)
}

// The ID of the Web Application Firewall Policy which is used as an HTTP Listener for this Path Rule.
func (o GetApplicationGatewayUrlPathMapPathRuleOutput) FirewallPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayUrlPathMapPathRule) string { return v.FirewallPolicyId }).(pulumi.StringOutput)
}

// The ID of the Rewrite Rule Set
func (o GetApplicationGatewayUrlPathMapPathRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayUrlPathMapPathRule) string { return v.Id }).(pulumi.StringOutput)
}

// The name of this Application Gateway.
func (o GetApplicationGatewayUrlPathMapPathRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayUrlPathMapPathRule) string { return v.Name }).(pulumi.StringOutput)
}

// A list of Paths used in this Path Rule.
func (o GetApplicationGatewayUrlPathMapPathRuleOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApplicationGatewayUrlPathMapPathRule) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

// The ID of the associated Redirect Configuration.
func (o GetApplicationGatewayUrlPathMapPathRuleOutput) RedirectConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayUrlPathMapPathRule) string { return v.RedirectConfigurationId }).(pulumi.StringOutput)
}

// The Name of the Redirect Configuration which is used for this Routing Rule.
func (o GetApplicationGatewayUrlPathMapPathRuleOutput) RedirectConfigurationName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayUrlPathMapPathRule) string { return v.RedirectConfigurationName }).(pulumi.StringOutput)
}

// The ID of the associated Rewrite Rule Set.
func (o GetApplicationGatewayUrlPathMapPathRuleOutput) RewriteRuleSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayUrlPathMapPathRule) string { return v.RewriteRuleSetId }).(pulumi.StringOutput)
}

// The Name of the Rewrite Rule Set which is used for this Routing Rule.
func (o GetApplicationGatewayUrlPathMapPathRuleOutput) RewriteRuleSetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayUrlPathMapPathRule) string { return v.RewriteRuleSetName }).(pulumi.StringOutput)
}

type GetApplicationGatewayUrlPathMapPathRuleArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayUrlPathMapPathRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayUrlPathMapPathRule)(nil)).Elem()
}

func (o GetApplicationGatewayUrlPathMapPathRuleArrayOutput) ToGetApplicationGatewayUrlPathMapPathRuleArrayOutput() GetApplicationGatewayUrlPathMapPathRuleArrayOutput {
	return o
}

func (o GetApplicationGatewayUrlPathMapPathRuleArrayOutput) ToGetApplicationGatewayUrlPathMapPathRuleArrayOutputWithContext(ctx context.Context) GetApplicationGatewayUrlPathMapPathRuleArrayOutput {
	return o
}

func (o GetApplicationGatewayUrlPathMapPathRuleArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayUrlPathMapPathRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayUrlPathMapPathRule {
		return vs[0].([]GetApplicationGatewayUrlPathMapPathRule)[vs[1].(int)]
	}).(GetApplicationGatewayUrlPathMapPathRuleOutput)
}

type GetApplicationGatewayWafConfiguration struct {
	// One or more `disabledRuleGroup` blocks as defined below.
	DisabledRuleGroups []GetApplicationGatewayWafConfigurationDisabledRuleGroup `pulumi:"disabledRuleGroups"`
	// Is the Web Application Firewall enabled?
	Enabled bool `pulumi:"enabled"`
	// One or more `exclusion` blocks as defined below.
	Exclusions []GetApplicationGatewayWafConfigurationExclusion `pulumi:"exclusions"`
	// The File Upload Limit in MB.
	FileUploadLimitMb int `pulumi:"fileUploadLimitMb"`
	// The Web Application Firewall Mode.
	FirewallMode string `pulumi:"firewallMode"`
	// The Maximum Request Body Size in KB.
	MaxRequestBodySizeKb int `pulumi:"maxRequestBodySizeKb"`
	// Is Request Body Inspection enabled?
	RequestBodyCheck bool `pulumi:"requestBodyCheck"`
	// The Type of the Rule Set used for this Web Application Firewall.
	RuleSetType string `pulumi:"ruleSetType"`
	// The Version of the Rule Set used for this Web Application Firewall.
	RuleSetVersion string `pulumi:"ruleSetVersion"`
}

// GetApplicationGatewayWafConfigurationInput is an input type that accepts GetApplicationGatewayWafConfigurationArgs and GetApplicationGatewayWafConfigurationOutput values.
// You can construct a concrete instance of `GetApplicationGatewayWafConfigurationInput` via:
//
//	GetApplicationGatewayWafConfigurationArgs{...}
type GetApplicationGatewayWafConfigurationInput interface {
	pulumi.Input

	ToGetApplicationGatewayWafConfigurationOutput() GetApplicationGatewayWafConfigurationOutput
	ToGetApplicationGatewayWafConfigurationOutputWithContext(context.Context) GetApplicationGatewayWafConfigurationOutput
}

type GetApplicationGatewayWafConfigurationArgs struct {
	// One or more `disabledRuleGroup` blocks as defined below.
	DisabledRuleGroups GetApplicationGatewayWafConfigurationDisabledRuleGroupArrayInput `pulumi:"disabledRuleGroups"`
	// Is the Web Application Firewall enabled?
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// One or more `exclusion` blocks as defined below.
	Exclusions GetApplicationGatewayWafConfigurationExclusionArrayInput `pulumi:"exclusions"`
	// The File Upload Limit in MB.
	FileUploadLimitMb pulumi.IntInput `pulumi:"fileUploadLimitMb"`
	// The Web Application Firewall Mode.
	FirewallMode pulumi.StringInput `pulumi:"firewallMode"`
	// The Maximum Request Body Size in KB.
	MaxRequestBodySizeKb pulumi.IntInput `pulumi:"maxRequestBodySizeKb"`
	// Is Request Body Inspection enabled?
	RequestBodyCheck pulumi.BoolInput `pulumi:"requestBodyCheck"`
	// The Type of the Rule Set used for this Web Application Firewall.
	RuleSetType pulumi.StringInput `pulumi:"ruleSetType"`
	// The Version of the Rule Set used for this Web Application Firewall.
	RuleSetVersion pulumi.StringInput `pulumi:"ruleSetVersion"`
}

func (GetApplicationGatewayWafConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayWafConfiguration)(nil)).Elem()
}

func (i GetApplicationGatewayWafConfigurationArgs) ToGetApplicationGatewayWafConfigurationOutput() GetApplicationGatewayWafConfigurationOutput {
	return i.ToGetApplicationGatewayWafConfigurationOutputWithContext(context.Background())
}

func (i GetApplicationGatewayWafConfigurationArgs) ToGetApplicationGatewayWafConfigurationOutputWithContext(ctx context.Context) GetApplicationGatewayWafConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayWafConfigurationOutput)
}

// GetApplicationGatewayWafConfigurationArrayInput is an input type that accepts GetApplicationGatewayWafConfigurationArray and GetApplicationGatewayWafConfigurationArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayWafConfigurationArrayInput` via:
//
//	GetApplicationGatewayWafConfigurationArray{ GetApplicationGatewayWafConfigurationArgs{...} }
type GetApplicationGatewayWafConfigurationArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayWafConfigurationArrayOutput() GetApplicationGatewayWafConfigurationArrayOutput
	ToGetApplicationGatewayWafConfigurationArrayOutputWithContext(context.Context) GetApplicationGatewayWafConfigurationArrayOutput
}

type GetApplicationGatewayWafConfigurationArray []GetApplicationGatewayWafConfigurationInput

func (GetApplicationGatewayWafConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayWafConfiguration)(nil)).Elem()
}

func (i GetApplicationGatewayWafConfigurationArray) ToGetApplicationGatewayWafConfigurationArrayOutput() GetApplicationGatewayWafConfigurationArrayOutput {
	return i.ToGetApplicationGatewayWafConfigurationArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayWafConfigurationArray) ToGetApplicationGatewayWafConfigurationArrayOutputWithContext(ctx context.Context) GetApplicationGatewayWafConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayWafConfigurationArrayOutput)
}

type GetApplicationGatewayWafConfigurationOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayWafConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayWafConfiguration)(nil)).Elem()
}

func (o GetApplicationGatewayWafConfigurationOutput) ToGetApplicationGatewayWafConfigurationOutput() GetApplicationGatewayWafConfigurationOutput {
	return o
}

func (o GetApplicationGatewayWafConfigurationOutput) ToGetApplicationGatewayWafConfigurationOutputWithContext(ctx context.Context) GetApplicationGatewayWafConfigurationOutput {
	return o
}

// One or more `disabledRuleGroup` blocks as defined below.
func (o GetApplicationGatewayWafConfigurationOutput) DisabledRuleGroups() GetApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput {
	return o.ApplyT(func(v GetApplicationGatewayWafConfiguration) []GetApplicationGatewayWafConfigurationDisabledRuleGroup {
		return v.DisabledRuleGroups
	}).(GetApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput)
}

// Is the Web Application Firewall enabled?
func (o GetApplicationGatewayWafConfigurationOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationGatewayWafConfiguration) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// One or more `exclusion` blocks as defined below.
func (o GetApplicationGatewayWafConfigurationOutput) Exclusions() GetApplicationGatewayWafConfigurationExclusionArrayOutput {
	return o.ApplyT(func(v GetApplicationGatewayWafConfiguration) []GetApplicationGatewayWafConfigurationExclusion {
		return v.Exclusions
	}).(GetApplicationGatewayWafConfigurationExclusionArrayOutput)
}

// The File Upload Limit in MB.
func (o GetApplicationGatewayWafConfigurationOutput) FileUploadLimitMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationGatewayWafConfiguration) int { return v.FileUploadLimitMb }).(pulumi.IntOutput)
}

// The Web Application Firewall Mode.
func (o GetApplicationGatewayWafConfigurationOutput) FirewallMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayWafConfiguration) string { return v.FirewallMode }).(pulumi.StringOutput)
}

// The Maximum Request Body Size in KB.
func (o GetApplicationGatewayWafConfigurationOutput) MaxRequestBodySizeKb() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationGatewayWafConfiguration) int { return v.MaxRequestBodySizeKb }).(pulumi.IntOutput)
}

// Is Request Body Inspection enabled?
func (o GetApplicationGatewayWafConfigurationOutput) RequestBodyCheck() pulumi.BoolOutput {
	return o.ApplyT(func(v GetApplicationGatewayWafConfiguration) bool { return v.RequestBodyCheck }).(pulumi.BoolOutput)
}

// The Type of the Rule Set used for this Web Application Firewall.
func (o GetApplicationGatewayWafConfigurationOutput) RuleSetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayWafConfiguration) string { return v.RuleSetType }).(pulumi.StringOutput)
}

// The Version of the Rule Set used for this Web Application Firewall.
func (o GetApplicationGatewayWafConfigurationOutput) RuleSetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayWafConfiguration) string { return v.RuleSetVersion }).(pulumi.StringOutput)
}

type GetApplicationGatewayWafConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayWafConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayWafConfiguration)(nil)).Elem()
}

func (o GetApplicationGatewayWafConfigurationArrayOutput) ToGetApplicationGatewayWafConfigurationArrayOutput() GetApplicationGatewayWafConfigurationArrayOutput {
	return o
}

func (o GetApplicationGatewayWafConfigurationArrayOutput) ToGetApplicationGatewayWafConfigurationArrayOutputWithContext(ctx context.Context) GetApplicationGatewayWafConfigurationArrayOutput {
	return o
}

func (o GetApplicationGatewayWafConfigurationArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayWafConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayWafConfiguration {
		return vs[0].([]GetApplicationGatewayWafConfiguration)[vs[1].(int)]
	}).(GetApplicationGatewayWafConfigurationOutput)
}

type GetApplicationGatewayWafConfigurationDisabledRuleGroup struct {
	// The rule group where specific rules are disabled.
	RuleGroupName string `pulumi:"ruleGroupName"`
	// A list of rules which will be disabled in that group.
	Rules []int `pulumi:"rules"`
}

// GetApplicationGatewayWafConfigurationDisabledRuleGroupInput is an input type that accepts GetApplicationGatewayWafConfigurationDisabledRuleGroupArgs and GetApplicationGatewayWafConfigurationDisabledRuleGroupOutput values.
// You can construct a concrete instance of `GetApplicationGatewayWafConfigurationDisabledRuleGroupInput` via:
//
//	GetApplicationGatewayWafConfigurationDisabledRuleGroupArgs{...}
type GetApplicationGatewayWafConfigurationDisabledRuleGroupInput interface {
	pulumi.Input

	ToGetApplicationGatewayWafConfigurationDisabledRuleGroupOutput() GetApplicationGatewayWafConfigurationDisabledRuleGroupOutput
	ToGetApplicationGatewayWafConfigurationDisabledRuleGroupOutputWithContext(context.Context) GetApplicationGatewayWafConfigurationDisabledRuleGroupOutput
}

type GetApplicationGatewayWafConfigurationDisabledRuleGroupArgs struct {
	// The rule group where specific rules are disabled.
	RuleGroupName pulumi.StringInput `pulumi:"ruleGroupName"`
	// A list of rules which will be disabled in that group.
	Rules pulumi.IntArrayInput `pulumi:"rules"`
}

func (GetApplicationGatewayWafConfigurationDisabledRuleGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayWafConfigurationDisabledRuleGroup)(nil)).Elem()
}

func (i GetApplicationGatewayWafConfigurationDisabledRuleGroupArgs) ToGetApplicationGatewayWafConfigurationDisabledRuleGroupOutput() GetApplicationGatewayWafConfigurationDisabledRuleGroupOutput {
	return i.ToGetApplicationGatewayWafConfigurationDisabledRuleGroupOutputWithContext(context.Background())
}

func (i GetApplicationGatewayWafConfigurationDisabledRuleGroupArgs) ToGetApplicationGatewayWafConfigurationDisabledRuleGroupOutputWithContext(ctx context.Context) GetApplicationGatewayWafConfigurationDisabledRuleGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayWafConfigurationDisabledRuleGroupOutput)
}

// GetApplicationGatewayWafConfigurationDisabledRuleGroupArrayInput is an input type that accepts GetApplicationGatewayWafConfigurationDisabledRuleGroupArray and GetApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayWafConfigurationDisabledRuleGroupArrayInput` via:
//
//	GetApplicationGatewayWafConfigurationDisabledRuleGroupArray{ GetApplicationGatewayWafConfigurationDisabledRuleGroupArgs{...} }
type GetApplicationGatewayWafConfigurationDisabledRuleGroupArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput() GetApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput
	ToGetApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutputWithContext(context.Context) GetApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput
}

type GetApplicationGatewayWafConfigurationDisabledRuleGroupArray []GetApplicationGatewayWafConfigurationDisabledRuleGroupInput

func (GetApplicationGatewayWafConfigurationDisabledRuleGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayWafConfigurationDisabledRuleGroup)(nil)).Elem()
}

func (i GetApplicationGatewayWafConfigurationDisabledRuleGroupArray) ToGetApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput() GetApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput {
	return i.ToGetApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayWafConfigurationDisabledRuleGroupArray) ToGetApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutputWithContext(ctx context.Context) GetApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput)
}

type GetApplicationGatewayWafConfigurationDisabledRuleGroupOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayWafConfigurationDisabledRuleGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayWafConfigurationDisabledRuleGroup)(nil)).Elem()
}

func (o GetApplicationGatewayWafConfigurationDisabledRuleGroupOutput) ToGetApplicationGatewayWafConfigurationDisabledRuleGroupOutput() GetApplicationGatewayWafConfigurationDisabledRuleGroupOutput {
	return o
}

func (o GetApplicationGatewayWafConfigurationDisabledRuleGroupOutput) ToGetApplicationGatewayWafConfigurationDisabledRuleGroupOutputWithContext(ctx context.Context) GetApplicationGatewayWafConfigurationDisabledRuleGroupOutput {
	return o
}

// The rule group where specific rules are disabled.
func (o GetApplicationGatewayWafConfigurationDisabledRuleGroupOutput) RuleGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayWafConfigurationDisabledRuleGroup) string { return v.RuleGroupName }).(pulumi.StringOutput)
}

// A list of rules which will be disabled in that group.
func (o GetApplicationGatewayWafConfigurationDisabledRuleGroupOutput) Rules() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetApplicationGatewayWafConfigurationDisabledRuleGroup) []int { return v.Rules }).(pulumi.IntArrayOutput)
}

type GetApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayWafConfigurationDisabledRuleGroup)(nil)).Elem()
}

func (o GetApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput) ToGetApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput() GetApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput {
	return o
}

func (o GetApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput) ToGetApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutputWithContext(ctx context.Context) GetApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput {
	return o
}

func (o GetApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayWafConfigurationDisabledRuleGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayWafConfigurationDisabledRuleGroup {
		return vs[0].([]GetApplicationGatewayWafConfigurationDisabledRuleGroup)[vs[1].(int)]
	}).(GetApplicationGatewayWafConfigurationDisabledRuleGroupOutput)
}

type GetApplicationGatewayWafConfigurationExclusion struct {
	// Match variable of the exclusion rule.
	MatchVariable string `pulumi:"matchVariable"`
	// String value which will be used for the filter operation.
	Selector string `pulumi:"selector"`
	// Operator which will be used to search in the variable content.
	SelectorMatchOperator string `pulumi:"selectorMatchOperator"`
}

// GetApplicationGatewayWafConfigurationExclusionInput is an input type that accepts GetApplicationGatewayWafConfigurationExclusionArgs and GetApplicationGatewayWafConfigurationExclusionOutput values.
// You can construct a concrete instance of `GetApplicationGatewayWafConfigurationExclusionInput` via:
//
//	GetApplicationGatewayWafConfigurationExclusionArgs{...}
type GetApplicationGatewayWafConfigurationExclusionInput interface {
	pulumi.Input

	ToGetApplicationGatewayWafConfigurationExclusionOutput() GetApplicationGatewayWafConfigurationExclusionOutput
	ToGetApplicationGatewayWafConfigurationExclusionOutputWithContext(context.Context) GetApplicationGatewayWafConfigurationExclusionOutput
}

type GetApplicationGatewayWafConfigurationExclusionArgs struct {
	// Match variable of the exclusion rule.
	MatchVariable pulumi.StringInput `pulumi:"matchVariable"`
	// String value which will be used for the filter operation.
	Selector pulumi.StringInput `pulumi:"selector"`
	// Operator which will be used to search in the variable content.
	SelectorMatchOperator pulumi.StringInput `pulumi:"selectorMatchOperator"`
}

func (GetApplicationGatewayWafConfigurationExclusionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayWafConfigurationExclusion)(nil)).Elem()
}

func (i GetApplicationGatewayWafConfigurationExclusionArgs) ToGetApplicationGatewayWafConfigurationExclusionOutput() GetApplicationGatewayWafConfigurationExclusionOutput {
	return i.ToGetApplicationGatewayWafConfigurationExclusionOutputWithContext(context.Background())
}

func (i GetApplicationGatewayWafConfigurationExclusionArgs) ToGetApplicationGatewayWafConfigurationExclusionOutputWithContext(ctx context.Context) GetApplicationGatewayWafConfigurationExclusionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayWafConfigurationExclusionOutput)
}

// GetApplicationGatewayWafConfigurationExclusionArrayInput is an input type that accepts GetApplicationGatewayWafConfigurationExclusionArray and GetApplicationGatewayWafConfigurationExclusionArrayOutput values.
// You can construct a concrete instance of `GetApplicationGatewayWafConfigurationExclusionArrayInput` via:
//
//	GetApplicationGatewayWafConfigurationExclusionArray{ GetApplicationGatewayWafConfigurationExclusionArgs{...} }
type GetApplicationGatewayWafConfigurationExclusionArrayInput interface {
	pulumi.Input

	ToGetApplicationGatewayWafConfigurationExclusionArrayOutput() GetApplicationGatewayWafConfigurationExclusionArrayOutput
	ToGetApplicationGatewayWafConfigurationExclusionArrayOutputWithContext(context.Context) GetApplicationGatewayWafConfigurationExclusionArrayOutput
}

type GetApplicationGatewayWafConfigurationExclusionArray []GetApplicationGatewayWafConfigurationExclusionInput

func (GetApplicationGatewayWafConfigurationExclusionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayWafConfigurationExclusion)(nil)).Elem()
}

func (i GetApplicationGatewayWafConfigurationExclusionArray) ToGetApplicationGatewayWafConfigurationExclusionArrayOutput() GetApplicationGatewayWafConfigurationExclusionArrayOutput {
	return i.ToGetApplicationGatewayWafConfigurationExclusionArrayOutputWithContext(context.Background())
}

func (i GetApplicationGatewayWafConfigurationExclusionArray) ToGetApplicationGatewayWafConfigurationExclusionArrayOutputWithContext(ctx context.Context) GetApplicationGatewayWafConfigurationExclusionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationGatewayWafConfigurationExclusionArrayOutput)
}

type GetApplicationGatewayWafConfigurationExclusionOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayWafConfigurationExclusionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationGatewayWafConfigurationExclusion)(nil)).Elem()
}

func (o GetApplicationGatewayWafConfigurationExclusionOutput) ToGetApplicationGatewayWafConfigurationExclusionOutput() GetApplicationGatewayWafConfigurationExclusionOutput {
	return o
}

func (o GetApplicationGatewayWafConfigurationExclusionOutput) ToGetApplicationGatewayWafConfigurationExclusionOutputWithContext(ctx context.Context) GetApplicationGatewayWafConfigurationExclusionOutput {
	return o
}

// Match variable of the exclusion rule.
func (o GetApplicationGatewayWafConfigurationExclusionOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayWafConfigurationExclusion) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// String value which will be used for the filter operation.
func (o GetApplicationGatewayWafConfigurationExclusionOutput) Selector() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayWafConfigurationExclusion) string { return v.Selector }).(pulumi.StringOutput)
}

// Operator which will be used to search in the variable content.
func (o GetApplicationGatewayWafConfigurationExclusionOutput) SelectorMatchOperator() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationGatewayWafConfigurationExclusion) string { return v.SelectorMatchOperator }).(pulumi.StringOutput)
}

type GetApplicationGatewayWafConfigurationExclusionArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationGatewayWafConfigurationExclusionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationGatewayWafConfigurationExclusion)(nil)).Elem()
}

func (o GetApplicationGatewayWafConfigurationExclusionArrayOutput) ToGetApplicationGatewayWafConfigurationExclusionArrayOutput() GetApplicationGatewayWafConfigurationExclusionArrayOutput {
	return o
}

func (o GetApplicationGatewayWafConfigurationExclusionArrayOutput) ToGetApplicationGatewayWafConfigurationExclusionArrayOutputWithContext(ctx context.Context) GetApplicationGatewayWafConfigurationExclusionArrayOutput {
	return o
}

func (o GetApplicationGatewayWafConfigurationExclusionArrayOutput) Index(i pulumi.IntInput) GetApplicationGatewayWafConfigurationExclusionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationGatewayWafConfigurationExclusion {
		return vs[0].([]GetApplicationGatewayWafConfigurationExclusion)[vs[1].(int)]
	}).(GetApplicationGatewayWafConfigurationExclusionOutput)
}

type GetExpressRouteCircuitPeeringType struct {
	// The Either a 16-bit or a 32-bit ASN for Azure.
	AzureAsn int `pulumi:"azureAsn"`
	// The Either a 16-bit or a 32-bit ASN. Can either be public or private.
	PeerAsn int `pulumi:"peerAsn"`
	// The type of the ExpressRoute Circuit Peering. Acceptable values include `AzurePrivatePeering`, `AzurePublicPeering` and `MicrosoftPeering`. Changing this forces a new resource to be created.
	PeeringType string `pulumi:"peeringType"`
	// A `/30` subnet for the primary link.
	PrimaryPeerAddressPrefix string `pulumi:"primaryPeerAddressPrefix"`
	// A `/30` subnet for the secondary link.
	SecondaryPeerAddressPrefix string `pulumi:"secondaryPeerAddressPrefix"`
	// The shared key. Can be a maximum of 25 characters.
	SharedKey string `pulumi:"sharedKey"`
	// A valid VLAN ID to establish this peering on.
	VlanId int `pulumi:"vlanId"`
}

// GetExpressRouteCircuitPeeringTypeInput is an input type that accepts GetExpressRouteCircuitPeeringTypeArgs and GetExpressRouteCircuitPeeringTypeOutput values.
// You can construct a concrete instance of `GetExpressRouteCircuitPeeringTypeInput` via:
//
//	GetExpressRouteCircuitPeeringTypeArgs{...}
type GetExpressRouteCircuitPeeringTypeInput interface {
	pulumi.Input

	ToGetExpressRouteCircuitPeeringTypeOutput() GetExpressRouteCircuitPeeringTypeOutput
	ToGetExpressRouteCircuitPeeringTypeOutputWithContext(context.Context) GetExpressRouteCircuitPeeringTypeOutput
}

type GetExpressRouteCircuitPeeringTypeArgs struct {
	// The Either a 16-bit or a 32-bit ASN for Azure.
	AzureAsn pulumi.IntInput `pulumi:"azureAsn"`
	// The Either a 16-bit or a 32-bit ASN. Can either be public or private.
	PeerAsn pulumi.IntInput `pulumi:"peerAsn"`
	// The type of the ExpressRoute Circuit Peering. Acceptable values include `AzurePrivatePeering`, `AzurePublicPeering` and `MicrosoftPeering`. Changing this forces a new resource to be created.
	PeeringType pulumi.StringInput `pulumi:"peeringType"`
	// A `/30` subnet for the primary link.
	PrimaryPeerAddressPrefix pulumi.StringInput `pulumi:"primaryPeerAddressPrefix"`
	// A `/30` subnet for the secondary link.
	SecondaryPeerAddressPrefix pulumi.StringInput `pulumi:"secondaryPeerAddressPrefix"`
	// The shared key. Can be a maximum of 25 characters.
	SharedKey pulumi.StringInput `pulumi:"sharedKey"`
	// A valid VLAN ID to establish this peering on.
	VlanId pulumi.IntInput `pulumi:"vlanId"`
}

func (GetExpressRouteCircuitPeeringTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExpressRouteCircuitPeeringType)(nil)).Elem()
}

func (i GetExpressRouteCircuitPeeringTypeArgs) ToGetExpressRouteCircuitPeeringTypeOutput() GetExpressRouteCircuitPeeringTypeOutput {
	return i.ToGetExpressRouteCircuitPeeringTypeOutputWithContext(context.Background())
}

func (i GetExpressRouteCircuitPeeringTypeArgs) ToGetExpressRouteCircuitPeeringTypeOutputWithContext(ctx context.Context) GetExpressRouteCircuitPeeringTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExpressRouteCircuitPeeringTypeOutput)
}

// GetExpressRouteCircuitPeeringTypeArrayInput is an input type that accepts GetExpressRouteCircuitPeeringTypeArray and GetExpressRouteCircuitPeeringTypeArrayOutput values.
// You can construct a concrete instance of `GetExpressRouteCircuitPeeringTypeArrayInput` via:
//
//	GetExpressRouteCircuitPeeringTypeArray{ GetExpressRouteCircuitPeeringTypeArgs{...} }
type GetExpressRouteCircuitPeeringTypeArrayInput interface {
	pulumi.Input

	ToGetExpressRouteCircuitPeeringTypeArrayOutput() GetExpressRouteCircuitPeeringTypeArrayOutput
	ToGetExpressRouteCircuitPeeringTypeArrayOutputWithContext(context.Context) GetExpressRouteCircuitPeeringTypeArrayOutput
}

type GetExpressRouteCircuitPeeringTypeArray []GetExpressRouteCircuitPeeringTypeInput

func (GetExpressRouteCircuitPeeringTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExpressRouteCircuitPeeringType)(nil)).Elem()
}

func (i GetExpressRouteCircuitPeeringTypeArray) ToGetExpressRouteCircuitPeeringTypeArrayOutput() GetExpressRouteCircuitPeeringTypeArrayOutput {
	return i.ToGetExpressRouteCircuitPeeringTypeArrayOutputWithContext(context.Background())
}

func (i GetExpressRouteCircuitPeeringTypeArray) ToGetExpressRouteCircuitPeeringTypeArrayOutputWithContext(ctx context.Context) GetExpressRouteCircuitPeeringTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExpressRouteCircuitPeeringTypeArrayOutput)
}

type GetExpressRouteCircuitPeeringTypeOutput struct{ *pulumi.OutputState }

func (GetExpressRouteCircuitPeeringTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExpressRouteCircuitPeeringType)(nil)).Elem()
}

func (o GetExpressRouteCircuitPeeringTypeOutput) ToGetExpressRouteCircuitPeeringTypeOutput() GetExpressRouteCircuitPeeringTypeOutput {
	return o
}

func (o GetExpressRouteCircuitPeeringTypeOutput) ToGetExpressRouteCircuitPeeringTypeOutputWithContext(ctx context.Context) GetExpressRouteCircuitPeeringTypeOutput {
	return o
}

// The Either a 16-bit or a 32-bit ASN for Azure.
func (o GetExpressRouteCircuitPeeringTypeOutput) AzureAsn() pulumi.IntOutput {
	return o.ApplyT(func(v GetExpressRouteCircuitPeeringType) int { return v.AzureAsn }).(pulumi.IntOutput)
}

// The Either a 16-bit or a 32-bit ASN. Can either be public or private.
func (o GetExpressRouteCircuitPeeringTypeOutput) PeerAsn() pulumi.IntOutput {
	return o.ApplyT(func(v GetExpressRouteCircuitPeeringType) int { return v.PeerAsn }).(pulumi.IntOutput)
}

// The type of the ExpressRoute Circuit Peering. Acceptable values include `AzurePrivatePeering`, `AzurePublicPeering` and `MicrosoftPeering`. Changing this forces a new resource to be created.
func (o GetExpressRouteCircuitPeeringTypeOutput) PeeringType() pulumi.StringOutput {
	return o.ApplyT(func(v GetExpressRouteCircuitPeeringType) string { return v.PeeringType }).(pulumi.StringOutput)
}

// A `/30` subnet for the primary link.
func (o GetExpressRouteCircuitPeeringTypeOutput) PrimaryPeerAddressPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetExpressRouteCircuitPeeringType) string { return v.PrimaryPeerAddressPrefix }).(pulumi.StringOutput)
}

// A `/30` subnet for the secondary link.
func (o GetExpressRouteCircuitPeeringTypeOutput) SecondaryPeerAddressPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetExpressRouteCircuitPeeringType) string { return v.SecondaryPeerAddressPrefix }).(pulumi.StringOutput)
}

// The shared key. Can be a maximum of 25 characters.
func (o GetExpressRouteCircuitPeeringTypeOutput) SharedKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetExpressRouteCircuitPeeringType) string { return v.SharedKey }).(pulumi.StringOutput)
}

// A valid VLAN ID to establish this peering on.
func (o GetExpressRouteCircuitPeeringTypeOutput) VlanId() pulumi.IntOutput {
	return o.ApplyT(func(v GetExpressRouteCircuitPeeringType) int { return v.VlanId }).(pulumi.IntOutput)
}

type GetExpressRouteCircuitPeeringTypeArrayOutput struct{ *pulumi.OutputState }

func (GetExpressRouteCircuitPeeringTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExpressRouteCircuitPeeringType)(nil)).Elem()
}

func (o GetExpressRouteCircuitPeeringTypeArrayOutput) ToGetExpressRouteCircuitPeeringTypeArrayOutput() GetExpressRouteCircuitPeeringTypeArrayOutput {
	return o
}

func (o GetExpressRouteCircuitPeeringTypeArrayOutput) ToGetExpressRouteCircuitPeeringTypeArrayOutputWithContext(ctx context.Context) GetExpressRouteCircuitPeeringTypeArrayOutput {
	return o
}

func (o GetExpressRouteCircuitPeeringTypeArrayOutput) Index(i pulumi.IntInput) GetExpressRouteCircuitPeeringTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetExpressRouteCircuitPeeringType {
		return vs[0].([]GetExpressRouteCircuitPeeringType)[vs[1].(int)]
	}).(GetExpressRouteCircuitPeeringTypeOutput)
}

type GetExpressRouteCircuitServiceProviderProperty struct {
	// The bandwidth in Mbps of the ExpressRoute circuit.
	BandwidthInMbps int `pulumi:"bandwidthInMbps"`
	// The name of the peering location and **not** the Azure resource location.
	PeeringLocation string `pulumi:"peeringLocation"`
	// The name of the ExpressRoute Service Provider.
	ServiceProviderName string `pulumi:"serviceProviderName"`
}

// GetExpressRouteCircuitServiceProviderPropertyInput is an input type that accepts GetExpressRouteCircuitServiceProviderPropertyArgs and GetExpressRouteCircuitServiceProviderPropertyOutput values.
// You can construct a concrete instance of `GetExpressRouteCircuitServiceProviderPropertyInput` via:
//
//	GetExpressRouteCircuitServiceProviderPropertyArgs{...}
type GetExpressRouteCircuitServiceProviderPropertyInput interface {
	pulumi.Input

	ToGetExpressRouteCircuitServiceProviderPropertyOutput() GetExpressRouteCircuitServiceProviderPropertyOutput
	ToGetExpressRouteCircuitServiceProviderPropertyOutputWithContext(context.Context) GetExpressRouteCircuitServiceProviderPropertyOutput
}

type GetExpressRouteCircuitServiceProviderPropertyArgs struct {
	// The bandwidth in Mbps of the ExpressRoute circuit.
	BandwidthInMbps pulumi.IntInput `pulumi:"bandwidthInMbps"`
	// The name of the peering location and **not** the Azure resource location.
	PeeringLocation pulumi.StringInput `pulumi:"peeringLocation"`
	// The name of the ExpressRoute Service Provider.
	ServiceProviderName pulumi.StringInput `pulumi:"serviceProviderName"`
}

func (GetExpressRouteCircuitServiceProviderPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExpressRouteCircuitServiceProviderProperty)(nil)).Elem()
}

func (i GetExpressRouteCircuitServiceProviderPropertyArgs) ToGetExpressRouteCircuitServiceProviderPropertyOutput() GetExpressRouteCircuitServiceProviderPropertyOutput {
	return i.ToGetExpressRouteCircuitServiceProviderPropertyOutputWithContext(context.Background())
}

func (i GetExpressRouteCircuitServiceProviderPropertyArgs) ToGetExpressRouteCircuitServiceProviderPropertyOutputWithContext(ctx context.Context) GetExpressRouteCircuitServiceProviderPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExpressRouteCircuitServiceProviderPropertyOutput)
}

// GetExpressRouteCircuitServiceProviderPropertyArrayInput is an input type that accepts GetExpressRouteCircuitServiceProviderPropertyArray and GetExpressRouteCircuitServiceProviderPropertyArrayOutput values.
// You can construct a concrete instance of `GetExpressRouteCircuitServiceProviderPropertyArrayInput` via:
//
//	GetExpressRouteCircuitServiceProviderPropertyArray{ GetExpressRouteCircuitServiceProviderPropertyArgs{...} }
type GetExpressRouteCircuitServiceProviderPropertyArrayInput interface {
	pulumi.Input

	ToGetExpressRouteCircuitServiceProviderPropertyArrayOutput() GetExpressRouteCircuitServiceProviderPropertyArrayOutput
	ToGetExpressRouteCircuitServiceProviderPropertyArrayOutputWithContext(context.Context) GetExpressRouteCircuitServiceProviderPropertyArrayOutput
}

type GetExpressRouteCircuitServiceProviderPropertyArray []GetExpressRouteCircuitServiceProviderPropertyInput

func (GetExpressRouteCircuitServiceProviderPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExpressRouteCircuitServiceProviderProperty)(nil)).Elem()
}

func (i GetExpressRouteCircuitServiceProviderPropertyArray) ToGetExpressRouteCircuitServiceProviderPropertyArrayOutput() GetExpressRouteCircuitServiceProviderPropertyArrayOutput {
	return i.ToGetExpressRouteCircuitServiceProviderPropertyArrayOutputWithContext(context.Background())
}

func (i GetExpressRouteCircuitServiceProviderPropertyArray) ToGetExpressRouteCircuitServiceProviderPropertyArrayOutputWithContext(ctx context.Context) GetExpressRouteCircuitServiceProviderPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExpressRouteCircuitServiceProviderPropertyArrayOutput)
}

type GetExpressRouteCircuitServiceProviderPropertyOutput struct{ *pulumi.OutputState }

func (GetExpressRouteCircuitServiceProviderPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExpressRouteCircuitServiceProviderProperty)(nil)).Elem()
}

func (o GetExpressRouteCircuitServiceProviderPropertyOutput) ToGetExpressRouteCircuitServiceProviderPropertyOutput() GetExpressRouteCircuitServiceProviderPropertyOutput {
	return o
}

func (o GetExpressRouteCircuitServiceProviderPropertyOutput) ToGetExpressRouteCircuitServiceProviderPropertyOutputWithContext(ctx context.Context) GetExpressRouteCircuitServiceProviderPropertyOutput {
	return o
}

// The bandwidth in Mbps of the ExpressRoute circuit.
func (o GetExpressRouteCircuitServiceProviderPropertyOutput) BandwidthInMbps() pulumi.IntOutput {
	return o.ApplyT(func(v GetExpressRouteCircuitServiceProviderProperty) int { return v.BandwidthInMbps }).(pulumi.IntOutput)
}

// The name of the peering location and **not** the Azure resource location.
func (o GetExpressRouteCircuitServiceProviderPropertyOutput) PeeringLocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetExpressRouteCircuitServiceProviderProperty) string { return v.PeeringLocation }).(pulumi.StringOutput)
}

// The name of the ExpressRoute Service Provider.
func (o GetExpressRouteCircuitServiceProviderPropertyOutput) ServiceProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetExpressRouteCircuitServiceProviderProperty) string { return v.ServiceProviderName }).(pulumi.StringOutput)
}

type GetExpressRouteCircuitServiceProviderPropertyArrayOutput struct{ *pulumi.OutputState }

func (GetExpressRouteCircuitServiceProviderPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetExpressRouteCircuitServiceProviderProperty)(nil)).Elem()
}

func (o GetExpressRouteCircuitServiceProviderPropertyArrayOutput) ToGetExpressRouteCircuitServiceProviderPropertyArrayOutput() GetExpressRouteCircuitServiceProviderPropertyArrayOutput {
	return o
}

func (o GetExpressRouteCircuitServiceProviderPropertyArrayOutput) ToGetExpressRouteCircuitServiceProviderPropertyArrayOutputWithContext(ctx context.Context) GetExpressRouteCircuitServiceProviderPropertyArrayOutput {
	return o
}

func (o GetExpressRouteCircuitServiceProviderPropertyArrayOutput) Index(i pulumi.IntInput) GetExpressRouteCircuitServiceProviderPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetExpressRouteCircuitServiceProviderProperty {
		return vs[0].([]GetExpressRouteCircuitServiceProviderProperty)[vs[1].(int)]
	}).(GetExpressRouteCircuitServiceProviderPropertyOutput)
}

type GetExpressRouteCircuitSku struct {
	// The billing mode for bandwidth. Possible values are `MeteredData` or `UnlimitedData`.
	Family string `pulumi:"family"`
	// The service tier. Possible values are `Basic`, `Local`, `Standard` or `Premium`.
	Tier string `pulumi:"tier"`
}

// GetExpressRouteCircuitSkuInput is an input type that accepts GetExpressRouteCircuitSkuArgs and GetExpressRouteCircuitSkuOutput values.
// You can construct a concrete instance of `GetExpressRouteCircuitSkuInput` via:
//
//	GetExpressRouteCircuitSkuArgs{...}
type GetExpressRouteCircuitSkuInput interface {
	pulumi.Input

	ToGetExpressRouteCircuitSkuOutput() GetExpressRouteCircuitSkuOutput
	ToGetExpressRouteCircuitSkuOutputWithContext(context.Context) GetExpressRouteCircuitSkuOutput
}

type GetExpressRouteCircuitSkuArgs struct {
	// The billing mode for bandwidth. Possible values are `MeteredData` or `UnlimitedData`.
	Family pulumi.StringInput `pulumi:"family"`
	// The service tier. Possible values are `Basic`, `Local`, `Standard` or `Premium`.
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (GetExpressRouteCircuitSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExpressRouteCircuitSku)(nil)).Elem()
}

func (i GetExpressRouteCircuitSkuArgs) ToGetExpressRouteCircuitSkuOutput() GetExpressRouteCircuitSkuOutput {
	return i.ToGetExpressRouteCircuitSkuOutputWithContext(context.Background())
}

func (i GetExpressRouteCircuitSkuArgs) ToGetExpressRouteCircuitSkuOutputWithContext(ctx context.Context) GetExpressRouteCircuitSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetExpressRouteCircuitSkuOutput)
}

type GetExpressRouteCircuitSkuOutput struct{ *pulumi.OutputState }

func (GetExpressRouteCircuitSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExpressRouteCircuitSku)(nil)).Elem()
}

func (o GetExpressRouteCircuitSkuOutput) ToGetExpressRouteCircuitSkuOutput() GetExpressRouteCircuitSkuOutput {
	return o
}

func (o GetExpressRouteCircuitSkuOutput) ToGetExpressRouteCircuitSkuOutputWithContext(ctx context.Context) GetExpressRouteCircuitSkuOutput {
	return o
}

// The billing mode for bandwidth. Possible values are `MeteredData` or `UnlimitedData`.
func (o GetExpressRouteCircuitSkuOutput) Family() pulumi.StringOutput {
	return o.ApplyT(func(v GetExpressRouteCircuitSku) string { return v.Family }).(pulumi.StringOutput)
}

// The service tier. Possible values are `Basic`, `Local`, `Standard` or `Premium`.
func (o GetExpressRouteCircuitSkuOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v GetExpressRouteCircuitSku) string { return v.Tier }).(pulumi.StringOutput)
}

type GetFirewallIpConfiguration struct {
	// The name of the Azure Firewall.
	Name string `pulumi:"name"`
	// The private IP address associated with the Azure Firewall.
	PrivateIpAddress string `pulumi:"privateIpAddress"`
	// The ID of the Public IP address of the Azure Firewall.
	PublicIpAddressId string `pulumi:"publicIpAddressId"`
	// The ID of the Subnet where the Azure Firewall is deployed.
	SubnetId string `pulumi:"subnetId"`
}

// GetFirewallIpConfigurationInput is an input type that accepts GetFirewallIpConfigurationArgs and GetFirewallIpConfigurationOutput values.
// You can construct a concrete instance of `GetFirewallIpConfigurationInput` via:
//
//	GetFirewallIpConfigurationArgs{...}
type GetFirewallIpConfigurationInput interface {
	pulumi.Input

	ToGetFirewallIpConfigurationOutput() GetFirewallIpConfigurationOutput
	ToGetFirewallIpConfigurationOutputWithContext(context.Context) GetFirewallIpConfigurationOutput
}

type GetFirewallIpConfigurationArgs struct {
	// The name of the Azure Firewall.
	Name pulumi.StringInput `pulumi:"name"`
	// The private IP address associated with the Azure Firewall.
	PrivateIpAddress pulumi.StringInput `pulumi:"privateIpAddress"`
	// The ID of the Public IP address of the Azure Firewall.
	PublicIpAddressId pulumi.StringInput `pulumi:"publicIpAddressId"`
	// The ID of the Subnet where the Azure Firewall is deployed.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetFirewallIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallIpConfiguration)(nil)).Elem()
}

func (i GetFirewallIpConfigurationArgs) ToGetFirewallIpConfigurationOutput() GetFirewallIpConfigurationOutput {
	return i.ToGetFirewallIpConfigurationOutputWithContext(context.Background())
}

func (i GetFirewallIpConfigurationArgs) ToGetFirewallIpConfigurationOutputWithContext(ctx context.Context) GetFirewallIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallIpConfigurationOutput)
}

// GetFirewallIpConfigurationArrayInput is an input type that accepts GetFirewallIpConfigurationArray and GetFirewallIpConfigurationArrayOutput values.
// You can construct a concrete instance of `GetFirewallIpConfigurationArrayInput` via:
//
//	GetFirewallIpConfigurationArray{ GetFirewallIpConfigurationArgs{...} }
type GetFirewallIpConfigurationArrayInput interface {
	pulumi.Input

	ToGetFirewallIpConfigurationArrayOutput() GetFirewallIpConfigurationArrayOutput
	ToGetFirewallIpConfigurationArrayOutputWithContext(context.Context) GetFirewallIpConfigurationArrayOutput
}

type GetFirewallIpConfigurationArray []GetFirewallIpConfigurationInput

func (GetFirewallIpConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallIpConfiguration)(nil)).Elem()
}

func (i GetFirewallIpConfigurationArray) ToGetFirewallIpConfigurationArrayOutput() GetFirewallIpConfigurationArrayOutput {
	return i.ToGetFirewallIpConfigurationArrayOutputWithContext(context.Background())
}

func (i GetFirewallIpConfigurationArray) ToGetFirewallIpConfigurationArrayOutputWithContext(ctx context.Context) GetFirewallIpConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallIpConfigurationArrayOutput)
}

type GetFirewallIpConfigurationOutput struct{ *pulumi.OutputState }

func (GetFirewallIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallIpConfiguration)(nil)).Elem()
}

func (o GetFirewallIpConfigurationOutput) ToGetFirewallIpConfigurationOutput() GetFirewallIpConfigurationOutput {
	return o
}

func (o GetFirewallIpConfigurationOutput) ToGetFirewallIpConfigurationOutputWithContext(ctx context.Context) GetFirewallIpConfigurationOutput {
	return o
}

// The name of the Azure Firewall.
func (o GetFirewallIpConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallIpConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// The private IP address associated with the Azure Firewall.
func (o GetFirewallIpConfigurationOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallIpConfiguration) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

// The ID of the Public IP address of the Azure Firewall.
func (o GetFirewallIpConfigurationOutput) PublicIpAddressId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallIpConfiguration) string { return v.PublicIpAddressId }).(pulumi.StringOutput)
}

// The ID of the Subnet where the Azure Firewall is deployed.
func (o GetFirewallIpConfigurationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallIpConfiguration) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetFirewallIpConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallIpConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallIpConfiguration)(nil)).Elem()
}

func (o GetFirewallIpConfigurationArrayOutput) ToGetFirewallIpConfigurationArrayOutput() GetFirewallIpConfigurationArrayOutput {
	return o
}

func (o GetFirewallIpConfigurationArrayOutput) ToGetFirewallIpConfigurationArrayOutputWithContext(ctx context.Context) GetFirewallIpConfigurationArrayOutput {
	return o
}

func (o GetFirewallIpConfigurationArrayOutput) Index(i pulumi.IntInput) GetFirewallIpConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallIpConfiguration {
		return vs[0].([]GetFirewallIpConfiguration)[vs[1].(int)]
	}).(GetFirewallIpConfigurationOutput)
}

type GetFirewallManagementIpConfiguration struct {
	// The name of the Azure Firewall.
	Name string `pulumi:"name"`
	// The private IP address associated with the Azure Firewall.
	PrivateIpAddress string `pulumi:"privateIpAddress"`
	// The ID of the Public IP address of the Azure Firewall.
	PublicIpAddressId string `pulumi:"publicIpAddressId"`
	// The ID of the Subnet where the Azure Firewall is deployed.
	SubnetId string `pulumi:"subnetId"`
}

// GetFirewallManagementIpConfigurationInput is an input type that accepts GetFirewallManagementIpConfigurationArgs and GetFirewallManagementIpConfigurationOutput values.
// You can construct a concrete instance of `GetFirewallManagementIpConfigurationInput` via:
//
//	GetFirewallManagementIpConfigurationArgs{...}
type GetFirewallManagementIpConfigurationInput interface {
	pulumi.Input

	ToGetFirewallManagementIpConfigurationOutput() GetFirewallManagementIpConfigurationOutput
	ToGetFirewallManagementIpConfigurationOutputWithContext(context.Context) GetFirewallManagementIpConfigurationOutput
}

type GetFirewallManagementIpConfigurationArgs struct {
	// The name of the Azure Firewall.
	Name pulumi.StringInput `pulumi:"name"`
	// The private IP address associated with the Azure Firewall.
	PrivateIpAddress pulumi.StringInput `pulumi:"privateIpAddress"`
	// The ID of the Public IP address of the Azure Firewall.
	PublicIpAddressId pulumi.StringInput `pulumi:"publicIpAddressId"`
	// The ID of the Subnet where the Azure Firewall is deployed.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetFirewallManagementIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallManagementIpConfiguration)(nil)).Elem()
}

func (i GetFirewallManagementIpConfigurationArgs) ToGetFirewallManagementIpConfigurationOutput() GetFirewallManagementIpConfigurationOutput {
	return i.ToGetFirewallManagementIpConfigurationOutputWithContext(context.Background())
}

func (i GetFirewallManagementIpConfigurationArgs) ToGetFirewallManagementIpConfigurationOutputWithContext(ctx context.Context) GetFirewallManagementIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallManagementIpConfigurationOutput)
}

// GetFirewallManagementIpConfigurationArrayInput is an input type that accepts GetFirewallManagementIpConfigurationArray and GetFirewallManagementIpConfigurationArrayOutput values.
// You can construct a concrete instance of `GetFirewallManagementIpConfigurationArrayInput` via:
//
//	GetFirewallManagementIpConfigurationArray{ GetFirewallManagementIpConfigurationArgs{...} }
type GetFirewallManagementIpConfigurationArrayInput interface {
	pulumi.Input

	ToGetFirewallManagementIpConfigurationArrayOutput() GetFirewallManagementIpConfigurationArrayOutput
	ToGetFirewallManagementIpConfigurationArrayOutputWithContext(context.Context) GetFirewallManagementIpConfigurationArrayOutput
}

type GetFirewallManagementIpConfigurationArray []GetFirewallManagementIpConfigurationInput

func (GetFirewallManagementIpConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallManagementIpConfiguration)(nil)).Elem()
}

func (i GetFirewallManagementIpConfigurationArray) ToGetFirewallManagementIpConfigurationArrayOutput() GetFirewallManagementIpConfigurationArrayOutput {
	return i.ToGetFirewallManagementIpConfigurationArrayOutputWithContext(context.Background())
}

func (i GetFirewallManagementIpConfigurationArray) ToGetFirewallManagementIpConfigurationArrayOutputWithContext(ctx context.Context) GetFirewallManagementIpConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallManagementIpConfigurationArrayOutput)
}

type GetFirewallManagementIpConfigurationOutput struct{ *pulumi.OutputState }

func (GetFirewallManagementIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallManagementIpConfiguration)(nil)).Elem()
}

func (o GetFirewallManagementIpConfigurationOutput) ToGetFirewallManagementIpConfigurationOutput() GetFirewallManagementIpConfigurationOutput {
	return o
}

func (o GetFirewallManagementIpConfigurationOutput) ToGetFirewallManagementIpConfigurationOutputWithContext(ctx context.Context) GetFirewallManagementIpConfigurationOutput {
	return o
}

// The name of the Azure Firewall.
func (o GetFirewallManagementIpConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallManagementIpConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// The private IP address associated with the Azure Firewall.
func (o GetFirewallManagementIpConfigurationOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallManagementIpConfiguration) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

// The ID of the Public IP address of the Azure Firewall.
func (o GetFirewallManagementIpConfigurationOutput) PublicIpAddressId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallManagementIpConfiguration) string { return v.PublicIpAddressId }).(pulumi.StringOutput)
}

// The ID of the Subnet where the Azure Firewall is deployed.
func (o GetFirewallManagementIpConfigurationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallManagementIpConfiguration) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetFirewallManagementIpConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallManagementIpConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallManagementIpConfiguration)(nil)).Elem()
}

func (o GetFirewallManagementIpConfigurationArrayOutput) ToGetFirewallManagementIpConfigurationArrayOutput() GetFirewallManagementIpConfigurationArrayOutput {
	return o
}

func (o GetFirewallManagementIpConfigurationArrayOutput) ToGetFirewallManagementIpConfigurationArrayOutputWithContext(ctx context.Context) GetFirewallManagementIpConfigurationArrayOutput {
	return o
}

func (o GetFirewallManagementIpConfigurationArrayOutput) Index(i pulumi.IntInput) GetFirewallManagementIpConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallManagementIpConfiguration {
		return vs[0].([]GetFirewallManagementIpConfiguration)[vs[1].(int)]
	}).(GetFirewallManagementIpConfigurationOutput)
}

type GetFirewallPolicyDn struct {
	NetworkRuleFqdnEnabled bool     `pulumi:"networkRuleFqdnEnabled"`
	ProxyEnabled           bool     `pulumi:"proxyEnabled"`
	Servers                []string `pulumi:"servers"`
}

// GetFirewallPolicyDnInput is an input type that accepts GetFirewallPolicyDnArgs and GetFirewallPolicyDnOutput values.
// You can construct a concrete instance of `GetFirewallPolicyDnInput` via:
//
//	GetFirewallPolicyDnArgs{...}
type GetFirewallPolicyDnInput interface {
	pulumi.Input

	ToGetFirewallPolicyDnOutput() GetFirewallPolicyDnOutput
	ToGetFirewallPolicyDnOutputWithContext(context.Context) GetFirewallPolicyDnOutput
}

type GetFirewallPolicyDnArgs struct {
	NetworkRuleFqdnEnabled pulumi.BoolInput        `pulumi:"networkRuleFqdnEnabled"`
	ProxyEnabled           pulumi.BoolInput        `pulumi:"proxyEnabled"`
	Servers                pulumi.StringArrayInput `pulumi:"servers"`
}

func (GetFirewallPolicyDnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyDn)(nil)).Elem()
}

func (i GetFirewallPolicyDnArgs) ToGetFirewallPolicyDnOutput() GetFirewallPolicyDnOutput {
	return i.ToGetFirewallPolicyDnOutputWithContext(context.Background())
}

func (i GetFirewallPolicyDnArgs) ToGetFirewallPolicyDnOutputWithContext(ctx context.Context) GetFirewallPolicyDnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyDnOutput)
}

// GetFirewallPolicyDnArrayInput is an input type that accepts GetFirewallPolicyDnArray and GetFirewallPolicyDnArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyDnArrayInput` via:
//
//	GetFirewallPolicyDnArray{ GetFirewallPolicyDnArgs{...} }
type GetFirewallPolicyDnArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyDnArrayOutput() GetFirewallPolicyDnArrayOutput
	ToGetFirewallPolicyDnArrayOutputWithContext(context.Context) GetFirewallPolicyDnArrayOutput
}

type GetFirewallPolicyDnArray []GetFirewallPolicyDnInput

func (GetFirewallPolicyDnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyDn)(nil)).Elem()
}

func (i GetFirewallPolicyDnArray) ToGetFirewallPolicyDnArrayOutput() GetFirewallPolicyDnArrayOutput {
	return i.ToGetFirewallPolicyDnArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyDnArray) ToGetFirewallPolicyDnArrayOutputWithContext(ctx context.Context) GetFirewallPolicyDnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyDnArrayOutput)
}

type GetFirewallPolicyDnOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyDnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyDn)(nil)).Elem()
}

func (o GetFirewallPolicyDnOutput) ToGetFirewallPolicyDnOutput() GetFirewallPolicyDnOutput {
	return o
}

func (o GetFirewallPolicyDnOutput) ToGetFirewallPolicyDnOutputWithContext(ctx context.Context) GetFirewallPolicyDnOutput {
	return o
}

func (o GetFirewallPolicyDnOutput) NetworkRuleFqdnEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFirewallPolicyDn) bool { return v.NetworkRuleFqdnEnabled }).(pulumi.BoolOutput)
}

func (o GetFirewallPolicyDnOutput) ProxyEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFirewallPolicyDn) bool { return v.ProxyEnabled }).(pulumi.BoolOutput)
}

func (o GetFirewallPolicyDnOutput) Servers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFirewallPolicyDn) []string { return v.Servers }).(pulumi.StringArrayOutput)
}

type GetFirewallPolicyDnArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyDnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyDn)(nil)).Elem()
}

func (o GetFirewallPolicyDnArrayOutput) ToGetFirewallPolicyDnArrayOutput() GetFirewallPolicyDnArrayOutput {
	return o
}

func (o GetFirewallPolicyDnArrayOutput) ToGetFirewallPolicyDnArrayOutputWithContext(ctx context.Context) GetFirewallPolicyDnArrayOutput {
	return o
}

func (o GetFirewallPolicyDnArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyDnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyDn {
		return vs[0].([]GetFirewallPolicyDn)[vs[1].(int)]
	}).(GetFirewallPolicyDnOutput)
}

type GetFirewallPolicyThreatIntelligenceAllowlist struct {
	Fqdns       []string `pulumi:"fqdns"`
	IpAddresses []string `pulumi:"ipAddresses"`
}

// GetFirewallPolicyThreatIntelligenceAllowlistInput is an input type that accepts GetFirewallPolicyThreatIntelligenceAllowlistArgs and GetFirewallPolicyThreatIntelligenceAllowlistOutput values.
// You can construct a concrete instance of `GetFirewallPolicyThreatIntelligenceAllowlistInput` via:
//
//	GetFirewallPolicyThreatIntelligenceAllowlistArgs{...}
type GetFirewallPolicyThreatIntelligenceAllowlistInput interface {
	pulumi.Input

	ToGetFirewallPolicyThreatIntelligenceAllowlistOutput() GetFirewallPolicyThreatIntelligenceAllowlistOutput
	ToGetFirewallPolicyThreatIntelligenceAllowlistOutputWithContext(context.Context) GetFirewallPolicyThreatIntelligenceAllowlistOutput
}

type GetFirewallPolicyThreatIntelligenceAllowlistArgs struct {
	Fqdns       pulumi.StringArrayInput `pulumi:"fqdns"`
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (GetFirewallPolicyThreatIntelligenceAllowlistArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyThreatIntelligenceAllowlist)(nil)).Elem()
}

func (i GetFirewallPolicyThreatIntelligenceAllowlistArgs) ToGetFirewallPolicyThreatIntelligenceAllowlistOutput() GetFirewallPolicyThreatIntelligenceAllowlistOutput {
	return i.ToGetFirewallPolicyThreatIntelligenceAllowlistOutputWithContext(context.Background())
}

func (i GetFirewallPolicyThreatIntelligenceAllowlistArgs) ToGetFirewallPolicyThreatIntelligenceAllowlistOutputWithContext(ctx context.Context) GetFirewallPolicyThreatIntelligenceAllowlistOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyThreatIntelligenceAllowlistOutput)
}

// GetFirewallPolicyThreatIntelligenceAllowlistArrayInput is an input type that accepts GetFirewallPolicyThreatIntelligenceAllowlistArray and GetFirewallPolicyThreatIntelligenceAllowlistArrayOutput values.
// You can construct a concrete instance of `GetFirewallPolicyThreatIntelligenceAllowlistArrayInput` via:
//
//	GetFirewallPolicyThreatIntelligenceAllowlistArray{ GetFirewallPolicyThreatIntelligenceAllowlistArgs{...} }
type GetFirewallPolicyThreatIntelligenceAllowlistArrayInput interface {
	pulumi.Input

	ToGetFirewallPolicyThreatIntelligenceAllowlistArrayOutput() GetFirewallPolicyThreatIntelligenceAllowlistArrayOutput
	ToGetFirewallPolicyThreatIntelligenceAllowlistArrayOutputWithContext(context.Context) GetFirewallPolicyThreatIntelligenceAllowlistArrayOutput
}

type GetFirewallPolicyThreatIntelligenceAllowlistArray []GetFirewallPolicyThreatIntelligenceAllowlistInput

func (GetFirewallPolicyThreatIntelligenceAllowlistArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyThreatIntelligenceAllowlist)(nil)).Elem()
}

func (i GetFirewallPolicyThreatIntelligenceAllowlistArray) ToGetFirewallPolicyThreatIntelligenceAllowlistArrayOutput() GetFirewallPolicyThreatIntelligenceAllowlistArrayOutput {
	return i.ToGetFirewallPolicyThreatIntelligenceAllowlistArrayOutputWithContext(context.Background())
}

func (i GetFirewallPolicyThreatIntelligenceAllowlistArray) ToGetFirewallPolicyThreatIntelligenceAllowlistArrayOutputWithContext(ctx context.Context) GetFirewallPolicyThreatIntelligenceAllowlistArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPolicyThreatIntelligenceAllowlistArrayOutput)
}

type GetFirewallPolicyThreatIntelligenceAllowlistOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyThreatIntelligenceAllowlistOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPolicyThreatIntelligenceAllowlist)(nil)).Elem()
}

func (o GetFirewallPolicyThreatIntelligenceAllowlistOutput) ToGetFirewallPolicyThreatIntelligenceAllowlistOutput() GetFirewallPolicyThreatIntelligenceAllowlistOutput {
	return o
}

func (o GetFirewallPolicyThreatIntelligenceAllowlistOutput) ToGetFirewallPolicyThreatIntelligenceAllowlistOutputWithContext(ctx context.Context) GetFirewallPolicyThreatIntelligenceAllowlistOutput {
	return o
}

func (o GetFirewallPolicyThreatIntelligenceAllowlistOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFirewallPolicyThreatIntelligenceAllowlist) []string { return v.Fqdns }).(pulumi.StringArrayOutput)
}

func (o GetFirewallPolicyThreatIntelligenceAllowlistOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFirewallPolicyThreatIntelligenceAllowlist) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type GetFirewallPolicyThreatIntelligenceAllowlistArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPolicyThreatIntelligenceAllowlistArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPolicyThreatIntelligenceAllowlist)(nil)).Elem()
}

func (o GetFirewallPolicyThreatIntelligenceAllowlistArrayOutput) ToGetFirewallPolicyThreatIntelligenceAllowlistArrayOutput() GetFirewallPolicyThreatIntelligenceAllowlistArrayOutput {
	return o
}

func (o GetFirewallPolicyThreatIntelligenceAllowlistArrayOutput) ToGetFirewallPolicyThreatIntelligenceAllowlistArrayOutputWithContext(ctx context.Context) GetFirewallPolicyThreatIntelligenceAllowlistArrayOutput {
	return o
}

func (o GetFirewallPolicyThreatIntelligenceAllowlistArrayOutput) Index(i pulumi.IntInput) GetFirewallPolicyThreatIntelligenceAllowlistOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPolicyThreatIntelligenceAllowlist {
		return vs[0].([]GetFirewallPolicyThreatIntelligenceAllowlist)[vs[1].(int)]
	}).(GetFirewallPolicyThreatIntelligenceAllowlistOutput)
}

type GetFirewallVirtualHub struct {
	// The private IP address associated with the Azure Firewall.
	PrivateIpAddress string `pulumi:"privateIpAddress"`
	// The list of public IP addresses associated with the Azure Firewall.
	PublicIpAddresses []string `pulumi:"publicIpAddresses"`
	// The number of public IPs assigned to the Azure Firewall.
	PublicIpCount int `pulumi:"publicIpCount"`
	// The ID of the Virtual Hub where the Azure Firewall resides in.
	VirtualHubId string `pulumi:"virtualHubId"`
}

// GetFirewallVirtualHubInput is an input type that accepts GetFirewallVirtualHubArgs and GetFirewallVirtualHubOutput values.
// You can construct a concrete instance of `GetFirewallVirtualHubInput` via:
//
//	GetFirewallVirtualHubArgs{...}
type GetFirewallVirtualHubInput interface {
	pulumi.Input

	ToGetFirewallVirtualHubOutput() GetFirewallVirtualHubOutput
	ToGetFirewallVirtualHubOutputWithContext(context.Context) GetFirewallVirtualHubOutput
}

type GetFirewallVirtualHubArgs struct {
	// The private IP address associated with the Azure Firewall.
	PrivateIpAddress pulumi.StringInput `pulumi:"privateIpAddress"`
	// The list of public IP addresses associated with the Azure Firewall.
	PublicIpAddresses pulumi.StringArrayInput `pulumi:"publicIpAddresses"`
	// The number of public IPs assigned to the Azure Firewall.
	PublicIpCount pulumi.IntInput `pulumi:"publicIpCount"`
	// The ID of the Virtual Hub where the Azure Firewall resides in.
	VirtualHubId pulumi.StringInput `pulumi:"virtualHubId"`
}

func (GetFirewallVirtualHubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallVirtualHub)(nil)).Elem()
}

func (i GetFirewallVirtualHubArgs) ToGetFirewallVirtualHubOutput() GetFirewallVirtualHubOutput {
	return i.ToGetFirewallVirtualHubOutputWithContext(context.Background())
}

func (i GetFirewallVirtualHubArgs) ToGetFirewallVirtualHubOutputWithContext(ctx context.Context) GetFirewallVirtualHubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallVirtualHubOutput)
}

// GetFirewallVirtualHubArrayInput is an input type that accepts GetFirewallVirtualHubArray and GetFirewallVirtualHubArrayOutput values.
// You can construct a concrete instance of `GetFirewallVirtualHubArrayInput` via:
//
//	GetFirewallVirtualHubArray{ GetFirewallVirtualHubArgs{...} }
type GetFirewallVirtualHubArrayInput interface {
	pulumi.Input

	ToGetFirewallVirtualHubArrayOutput() GetFirewallVirtualHubArrayOutput
	ToGetFirewallVirtualHubArrayOutputWithContext(context.Context) GetFirewallVirtualHubArrayOutput
}

type GetFirewallVirtualHubArray []GetFirewallVirtualHubInput

func (GetFirewallVirtualHubArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallVirtualHub)(nil)).Elem()
}

func (i GetFirewallVirtualHubArray) ToGetFirewallVirtualHubArrayOutput() GetFirewallVirtualHubArrayOutput {
	return i.ToGetFirewallVirtualHubArrayOutputWithContext(context.Background())
}

func (i GetFirewallVirtualHubArray) ToGetFirewallVirtualHubArrayOutputWithContext(ctx context.Context) GetFirewallVirtualHubArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallVirtualHubArrayOutput)
}

type GetFirewallVirtualHubOutput struct{ *pulumi.OutputState }

func (GetFirewallVirtualHubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallVirtualHub)(nil)).Elem()
}

func (o GetFirewallVirtualHubOutput) ToGetFirewallVirtualHubOutput() GetFirewallVirtualHubOutput {
	return o
}

func (o GetFirewallVirtualHubOutput) ToGetFirewallVirtualHubOutputWithContext(ctx context.Context) GetFirewallVirtualHubOutput {
	return o
}

// The private IP address associated with the Azure Firewall.
func (o GetFirewallVirtualHubOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallVirtualHub) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

// The list of public IP addresses associated with the Azure Firewall.
func (o GetFirewallVirtualHubOutput) PublicIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFirewallVirtualHub) []string { return v.PublicIpAddresses }).(pulumi.StringArrayOutput)
}

// The number of public IPs assigned to the Azure Firewall.
func (o GetFirewallVirtualHubOutput) PublicIpCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallVirtualHub) int { return v.PublicIpCount }).(pulumi.IntOutput)
}

// The ID of the Virtual Hub where the Azure Firewall resides in.
func (o GetFirewallVirtualHubOutput) VirtualHubId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallVirtualHub) string { return v.VirtualHubId }).(pulumi.StringOutput)
}

type GetFirewallVirtualHubArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallVirtualHubArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallVirtualHub)(nil)).Elem()
}

func (o GetFirewallVirtualHubArrayOutput) ToGetFirewallVirtualHubArrayOutput() GetFirewallVirtualHubArrayOutput {
	return o
}

func (o GetFirewallVirtualHubArrayOutput) ToGetFirewallVirtualHubArrayOutputWithContext(ctx context.Context) GetFirewallVirtualHubArrayOutput {
	return o
}

func (o GetFirewallVirtualHubArrayOutput) Index(i pulumi.IntInput) GetFirewallVirtualHubOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallVirtualHub {
		return vs[0].([]GetFirewallVirtualHub)[vs[1].(int)]
	}).(GetFirewallVirtualHubOutput)
}

type GetGatewayConnectionIpsecPolicy struct {
	// The DH group used in IKE phase 1 for initial SA. Valid
	// options are `DHGroup1`, `DHGroup14`, `DHGroup2`, `DHGroup2048`, `DHGroup24`,
	// `ECP256`, `ECP384`, or `None`.
	DhGroup string `pulumi:"dhGroup"`
	// The IKE encryption algorithm. Valid
	// options are `AES128`, `AES192`, `AES256`, `DES`, or `DES3`.
	IkeEncryption string `pulumi:"ikeEncryption"`
	// The IKE integrity algorithm. Valid
	// options are `MD5`, `SHA1`, `SHA256`, or `SHA384`.
	IkeIntegrity string `pulumi:"ikeIntegrity"`
	// The IPSec encryption algorithm. Valid
	// options are `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128`, `GCMAES192`, `GCMAES256`, or `None`.
	IpsecEncryption string `pulumi:"ipsecEncryption"`
	// The IPSec integrity algorithm. Valid
	// options are `GCMAES128`, `GCMAES192`, `GCMAES256`, `MD5`, `SHA1`, or `SHA256`.
	IpsecIntegrity string `pulumi:"ipsecIntegrity"`
	// The DH group used in IKE phase 2 for new child SA.
	// Valid options are `ECP256`, `ECP384`, `PFS1`, `PFS2`, `PFS2048`, `PFS24`,
	// or `None`.
	PfsGroup string `pulumi:"pfsGroup"`
	// The IPSec SA payload size in KB. Must be at least
	// `1024` KB.
	SaDatasize int `pulumi:"saDatasize"`
	// The IPSec SA lifetime in seconds. Must be at least
	// `300` seconds.
	SaLifetime int `pulumi:"saLifetime"`
}

// GetGatewayConnectionIpsecPolicyInput is an input type that accepts GetGatewayConnectionIpsecPolicyArgs and GetGatewayConnectionIpsecPolicyOutput values.
// You can construct a concrete instance of `GetGatewayConnectionIpsecPolicyInput` via:
//
//	GetGatewayConnectionIpsecPolicyArgs{...}
type GetGatewayConnectionIpsecPolicyInput interface {
	pulumi.Input

	ToGetGatewayConnectionIpsecPolicyOutput() GetGatewayConnectionIpsecPolicyOutput
	ToGetGatewayConnectionIpsecPolicyOutputWithContext(context.Context) GetGatewayConnectionIpsecPolicyOutput
}

type GetGatewayConnectionIpsecPolicyArgs struct {
	// The DH group used in IKE phase 1 for initial SA. Valid
	// options are `DHGroup1`, `DHGroup14`, `DHGroup2`, `DHGroup2048`, `DHGroup24`,
	// `ECP256`, `ECP384`, or `None`.
	DhGroup pulumi.StringInput `pulumi:"dhGroup"`
	// The IKE encryption algorithm. Valid
	// options are `AES128`, `AES192`, `AES256`, `DES`, or `DES3`.
	IkeEncryption pulumi.StringInput `pulumi:"ikeEncryption"`
	// The IKE integrity algorithm. Valid
	// options are `MD5`, `SHA1`, `SHA256`, or `SHA384`.
	IkeIntegrity pulumi.StringInput `pulumi:"ikeIntegrity"`
	// The IPSec encryption algorithm. Valid
	// options are `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128`, `GCMAES192`, `GCMAES256`, or `None`.
	IpsecEncryption pulumi.StringInput `pulumi:"ipsecEncryption"`
	// The IPSec integrity algorithm. Valid
	// options are `GCMAES128`, `GCMAES192`, `GCMAES256`, `MD5`, `SHA1`, or `SHA256`.
	IpsecIntegrity pulumi.StringInput `pulumi:"ipsecIntegrity"`
	// The DH group used in IKE phase 2 for new child SA.
	// Valid options are `ECP256`, `ECP384`, `PFS1`, `PFS2`, `PFS2048`, `PFS24`,
	// or `None`.
	PfsGroup pulumi.StringInput `pulumi:"pfsGroup"`
	// The IPSec SA payload size in KB. Must be at least
	// `1024` KB.
	SaDatasize pulumi.IntInput `pulumi:"saDatasize"`
	// The IPSec SA lifetime in seconds. Must be at least
	// `300` seconds.
	SaLifetime pulumi.IntInput `pulumi:"saLifetime"`
}

func (GetGatewayConnectionIpsecPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayConnectionIpsecPolicy)(nil)).Elem()
}

func (i GetGatewayConnectionIpsecPolicyArgs) ToGetGatewayConnectionIpsecPolicyOutput() GetGatewayConnectionIpsecPolicyOutput {
	return i.ToGetGatewayConnectionIpsecPolicyOutputWithContext(context.Background())
}

func (i GetGatewayConnectionIpsecPolicyArgs) ToGetGatewayConnectionIpsecPolicyOutputWithContext(ctx context.Context) GetGatewayConnectionIpsecPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayConnectionIpsecPolicyOutput)
}

// GetGatewayConnectionIpsecPolicyArrayInput is an input type that accepts GetGatewayConnectionIpsecPolicyArray and GetGatewayConnectionIpsecPolicyArrayOutput values.
// You can construct a concrete instance of `GetGatewayConnectionIpsecPolicyArrayInput` via:
//
//	GetGatewayConnectionIpsecPolicyArray{ GetGatewayConnectionIpsecPolicyArgs{...} }
type GetGatewayConnectionIpsecPolicyArrayInput interface {
	pulumi.Input

	ToGetGatewayConnectionIpsecPolicyArrayOutput() GetGatewayConnectionIpsecPolicyArrayOutput
	ToGetGatewayConnectionIpsecPolicyArrayOutputWithContext(context.Context) GetGatewayConnectionIpsecPolicyArrayOutput
}

type GetGatewayConnectionIpsecPolicyArray []GetGatewayConnectionIpsecPolicyInput

func (GetGatewayConnectionIpsecPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayConnectionIpsecPolicy)(nil)).Elem()
}

func (i GetGatewayConnectionIpsecPolicyArray) ToGetGatewayConnectionIpsecPolicyArrayOutput() GetGatewayConnectionIpsecPolicyArrayOutput {
	return i.ToGetGatewayConnectionIpsecPolicyArrayOutputWithContext(context.Background())
}

func (i GetGatewayConnectionIpsecPolicyArray) ToGetGatewayConnectionIpsecPolicyArrayOutputWithContext(ctx context.Context) GetGatewayConnectionIpsecPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayConnectionIpsecPolicyArrayOutput)
}

type GetGatewayConnectionIpsecPolicyOutput struct{ *pulumi.OutputState }

func (GetGatewayConnectionIpsecPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayConnectionIpsecPolicy)(nil)).Elem()
}

func (o GetGatewayConnectionIpsecPolicyOutput) ToGetGatewayConnectionIpsecPolicyOutput() GetGatewayConnectionIpsecPolicyOutput {
	return o
}

func (o GetGatewayConnectionIpsecPolicyOutput) ToGetGatewayConnectionIpsecPolicyOutputWithContext(ctx context.Context) GetGatewayConnectionIpsecPolicyOutput {
	return o
}

// The DH group used in IKE phase 1 for initial SA. Valid
// options are `DHGroup1`, `DHGroup14`, `DHGroup2`, `DHGroup2048`, `DHGroup24`,
// `ECP256`, `ECP384`, or `None`.
func (o GetGatewayConnectionIpsecPolicyOutput) DhGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayConnectionIpsecPolicy) string { return v.DhGroup }).(pulumi.StringOutput)
}

// The IKE encryption algorithm. Valid
// options are `AES128`, `AES192`, `AES256`, `DES`, or `DES3`.
func (o GetGatewayConnectionIpsecPolicyOutput) IkeEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayConnectionIpsecPolicy) string { return v.IkeEncryption }).(pulumi.StringOutput)
}

// The IKE integrity algorithm. Valid
// options are `MD5`, `SHA1`, `SHA256`, or `SHA384`.
func (o GetGatewayConnectionIpsecPolicyOutput) IkeIntegrity() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayConnectionIpsecPolicy) string { return v.IkeIntegrity }).(pulumi.StringOutput)
}

// The IPSec encryption algorithm. Valid
// options are `AES128`, `AES192`, `AES256`, `DES`, `DES3`, `GCMAES128`, `GCMAES192`, `GCMAES256`, or `None`.
func (o GetGatewayConnectionIpsecPolicyOutput) IpsecEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayConnectionIpsecPolicy) string { return v.IpsecEncryption }).(pulumi.StringOutput)
}

// The IPSec integrity algorithm. Valid
// options are `GCMAES128`, `GCMAES192`, `GCMAES256`, `MD5`, `SHA1`, or `SHA256`.
func (o GetGatewayConnectionIpsecPolicyOutput) IpsecIntegrity() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayConnectionIpsecPolicy) string { return v.IpsecIntegrity }).(pulumi.StringOutput)
}

// The DH group used in IKE phase 2 for new child SA.
// Valid options are `ECP256`, `ECP384`, `PFS1`, `PFS2`, `PFS2048`, `PFS24`,
// or `None`.
func (o GetGatewayConnectionIpsecPolicyOutput) PfsGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayConnectionIpsecPolicy) string { return v.PfsGroup }).(pulumi.StringOutput)
}

// The IPSec SA payload size in KB. Must be at least
// `1024` KB.
func (o GetGatewayConnectionIpsecPolicyOutput) SaDatasize() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayConnectionIpsecPolicy) int { return v.SaDatasize }).(pulumi.IntOutput)
}

// The IPSec SA lifetime in seconds. Must be at least
// `300` seconds.
func (o GetGatewayConnectionIpsecPolicyOutput) SaLifetime() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayConnectionIpsecPolicy) int { return v.SaLifetime }).(pulumi.IntOutput)
}

type GetGatewayConnectionIpsecPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayConnectionIpsecPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayConnectionIpsecPolicy)(nil)).Elem()
}

func (o GetGatewayConnectionIpsecPolicyArrayOutput) ToGetGatewayConnectionIpsecPolicyArrayOutput() GetGatewayConnectionIpsecPolicyArrayOutput {
	return o
}

func (o GetGatewayConnectionIpsecPolicyArrayOutput) ToGetGatewayConnectionIpsecPolicyArrayOutputWithContext(ctx context.Context) GetGatewayConnectionIpsecPolicyArrayOutput {
	return o
}

func (o GetGatewayConnectionIpsecPolicyArrayOutput) Index(i pulumi.IntInput) GetGatewayConnectionIpsecPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayConnectionIpsecPolicy {
		return vs[0].([]GetGatewayConnectionIpsecPolicy)[vs[1].(int)]
	}).(GetGatewayConnectionIpsecPolicyOutput)
}

type GetGatewayConnectionTrafficSelectorPolicy struct {
	// List of local CIDRs.
	LocalAddressCidrs []string `pulumi:"localAddressCidrs"`
	// List of remote CIDRs.
	RemoteAddressCidrs []string `pulumi:"remoteAddressCidrs"`
}

// GetGatewayConnectionTrafficSelectorPolicyInput is an input type that accepts GetGatewayConnectionTrafficSelectorPolicyArgs and GetGatewayConnectionTrafficSelectorPolicyOutput values.
// You can construct a concrete instance of `GetGatewayConnectionTrafficSelectorPolicyInput` via:
//
//	GetGatewayConnectionTrafficSelectorPolicyArgs{...}
type GetGatewayConnectionTrafficSelectorPolicyInput interface {
	pulumi.Input

	ToGetGatewayConnectionTrafficSelectorPolicyOutput() GetGatewayConnectionTrafficSelectorPolicyOutput
	ToGetGatewayConnectionTrafficSelectorPolicyOutputWithContext(context.Context) GetGatewayConnectionTrafficSelectorPolicyOutput
}

type GetGatewayConnectionTrafficSelectorPolicyArgs struct {
	// List of local CIDRs.
	LocalAddressCidrs pulumi.StringArrayInput `pulumi:"localAddressCidrs"`
	// List of remote CIDRs.
	RemoteAddressCidrs pulumi.StringArrayInput `pulumi:"remoteAddressCidrs"`
}

func (GetGatewayConnectionTrafficSelectorPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayConnectionTrafficSelectorPolicy)(nil)).Elem()
}

func (i GetGatewayConnectionTrafficSelectorPolicyArgs) ToGetGatewayConnectionTrafficSelectorPolicyOutput() GetGatewayConnectionTrafficSelectorPolicyOutput {
	return i.ToGetGatewayConnectionTrafficSelectorPolicyOutputWithContext(context.Background())
}

func (i GetGatewayConnectionTrafficSelectorPolicyArgs) ToGetGatewayConnectionTrafficSelectorPolicyOutputWithContext(ctx context.Context) GetGatewayConnectionTrafficSelectorPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayConnectionTrafficSelectorPolicyOutput)
}

// GetGatewayConnectionTrafficSelectorPolicyArrayInput is an input type that accepts GetGatewayConnectionTrafficSelectorPolicyArray and GetGatewayConnectionTrafficSelectorPolicyArrayOutput values.
// You can construct a concrete instance of `GetGatewayConnectionTrafficSelectorPolicyArrayInput` via:
//
//	GetGatewayConnectionTrafficSelectorPolicyArray{ GetGatewayConnectionTrafficSelectorPolicyArgs{...} }
type GetGatewayConnectionTrafficSelectorPolicyArrayInput interface {
	pulumi.Input

	ToGetGatewayConnectionTrafficSelectorPolicyArrayOutput() GetGatewayConnectionTrafficSelectorPolicyArrayOutput
	ToGetGatewayConnectionTrafficSelectorPolicyArrayOutputWithContext(context.Context) GetGatewayConnectionTrafficSelectorPolicyArrayOutput
}

type GetGatewayConnectionTrafficSelectorPolicyArray []GetGatewayConnectionTrafficSelectorPolicyInput

func (GetGatewayConnectionTrafficSelectorPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayConnectionTrafficSelectorPolicy)(nil)).Elem()
}

func (i GetGatewayConnectionTrafficSelectorPolicyArray) ToGetGatewayConnectionTrafficSelectorPolicyArrayOutput() GetGatewayConnectionTrafficSelectorPolicyArrayOutput {
	return i.ToGetGatewayConnectionTrafficSelectorPolicyArrayOutputWithContext(context.Background())
}

func (i GetGatewayConnectionTrafficSelectorPolicyArray) ToGetGatewayConnectionTrafficSelectorPolicyArrayOutputWithContext(ctx context.Context) GetGatewayConnectionTrafficSelectorPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayConnectionTrafficSelectorPolicyArrayOutput)
}

type GetGatewayConnectionTrafficSelectorPolicyOutput struct{ *pulumi.OutputState }

func (GetGatewayConnectionTrafficSelectorPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayConnectionTrafficSelectorPolicy)(nil)).Elem()
}

func (o GetGatewayConnectionTrafficSelectorPolicyOutput) ToGetGatewayConnectionTrafficSelectorPolicyOutput() GetGatewayConnectionTrafficSelectorPolicyOutput {
	return o
}

func (o GetGatewayConnectionTrafficSelectorPolicyOutput) ToGetGatewayConnectionTrafficSelectorPolicyOutputWithContext(ctx context.Context) GetGatewayConnectionTrafficSelectorPolicyOutput {
	return o
}

// List of local CIDRs.
func (o GetGatewayConnectionTrafficSelectorPolicyOutput) LocalAddressCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGatewayConnectionTrafficSelectorPolicy) []string { return v.LocalAddressCidrs }).(pulumi.StringArrayOutput)
}

// List of remote CIDRs.
func (o GetGatewayConnectionTrafficSelectorPolicyOutput) RemoteAddressCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGatewayConnectionTrafficSelectorPolicy) []string { return v.RemoteAddressCidrs }).(pulumi.StringArrayOutput)
}

type GetGatewayConnectionTrafficSelectorPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayConnectionTrafficSelectorPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayConnectionTrafficSelectorPolicy)(nil)).Elem()
}

func (o GetGatewayConnectionTrafficSelectorPolicyArrayOutput) ToGetGatewayConnectionTrafficSelectorPolicyArrayOutput() GetGatewayConnectionTrafficSelectorPolicyArrayOutput {
	return o
}

func (o GetGatewayConnectionTrafficSelectorPolicyArrayOutput) ToGetGatewayConnectionTrafficSelectorPolicyArrayOutputWithContext(ctx context.Context) GetGatewayConnectionTrafficSelectorPolicyArrayOutput {
	return o
}

func (o GetGatewayConnectionTrafficSelectorPolicyArrayOutput) Index(i pulumi.IntInput) GetGatewayConnectionTrafficSelectorPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayConnectionTrafficSelectorPolicy {
		return vs[0].([]GetGatewayConnectionTrafficSelectorPolicy)[vs[1].(int)]
	}).(GetGatewayConnectionTrafficSelectorPolicyOutput)
}

type GetLocalNetworkGatewayBgpSetting struct {
	// The BGP speaker's ASN.
	Asn int `pulumi:"asn"`
	// The BGP peering address and BGP identifier of this BGP speaker.
	BgpPeeringAddress string `pulumi:"bgpPeeringAddress"`
	// The weight added to routes learned from this BGP speaker.
	PeerWeight int `pulumi:"peerWeight"`
}

// GetLocalNetworkGatewayBgpSettingInput is an input type that accepts GetLocalNetworkGatewayBgpSettingArgs and GetLocalNetworkGatewayBgpSettingOutput values.
// You can construct a concrete instance of `GetLocalNetworkGatewayBgpSettingInput` via:
//
//	GetLocalNetworkGatewayBgpSettingArgs{...}
type GetLocalNetworkGatewayBgpSettingInput interface {
	pulumi.Input

	ToGetLocalNetworkGatewayBgpSettingOutput() GetLocalNetworkGatewayBgpSettingOutput
	ToGetLocalNetworkGatewayBgpSettingOutputWithContext(context.Context) GetLocalNetworkGatewayBgpSettingOutput
}

type GetLocalNetworkGatewayBgpSettingArgs struct {
	// The BGP speaker's ASN.
	Asn pulumi.IntInput `pulumi:"asn"`
	// The BGP peering address and BGP identifier of this BGP speaker.
	BgpPeeringAddress pulumi.StringInput `pulumi:"bgpPeeringAddress"`
	// The weight added to routes learned from this BGP speaker.
	PeerWeight pulumi.IntInput `pulumi:"peerWeight"`
}

func (GetLocalNetworkGatewayBgpSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalNetworkGatewayBgpSetting)(nil)).Elem()
}

func (i GetLocalNetworkGatewayBgpSettingArgs) ToGetLocalNetworkGatewayBgpSettingOutput() GetLocalNetworkGatewayBgpSettingOutput {
	return i.ToGetLocalNetworkGatewayBgpSettingOutputWithContext(context.Background())
}

func (i GetLocalNetworkGatewayBgpSettingArgs) ToGetLocalNetworkGatewayBgpSettingOutputWithContext(ctx context.Context) GetLocalNetworkGatewayBgpSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocalNetworkGatewayBgpSettingOutput)
}

// GetLocalNetworkGatewayBgpSettingArrayInput is an input type that accepts GetLocalNetworkGatewayBgpSettingArray and GetLocalNetworkGatewayBgpSettingArrayOutput values.
// You can construct a concrete instance of `GetLocalNetworkGatewayBgpSettingArrayInput` via:
//
//	GetLocalNetworkGatewayBgpSettingArray{ GetLocalNetworkGatewayBgpSettingArgs{...} }
type GetLocalNetworkGatewayBgpSettingArrayInput interface {
	pulumi.Input

	ToGetLocalNetworkGatewayBgpSettingArrayOutput() GetLocalNetworkGatewayBgpSettingArrayOutput
	ToGetLocalNetworkGatewayBgpSettingArrayOutputWithContext(context.Context) GetLocalNetworkGatewayBgpSettingArrayOutput
}

type GetLocalNetworkGatewayBgpSettingArray []GetLocalNetworkGatewayBgpSettingInput

func (GetLocalNetworkGatewayBgpSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocalNetworkGatewayBgpSetting)(nil)).Elem()
}

func (i GetLocalNetworkGatewayBgpSettingArray) ToGetLocalNetworkGatewayBgpSettingArrayOutput() GetLocalNetworkGatewayBgpSettingArrayOutput {
	return i.ToGetLocalNetworkGatewayBgpSettingArrayOutputWithContext(context.Background())
}

func (i GetLocalNetworkGatewayBgpSettingArray) ToGetLocalNetworkGatewayBgpSettingArrayOutputWithContext(ctx context.Context) GetLocalNetworkGatewayBgpSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocalNetworkGatewayBgpSettingArrayOutput)
}

type GetLocalNetworkGatewayBgpSettingOutput struct{ *pulumi.OutputState }

func (GetLocalNetworkGatewayBgpSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalNetworkGatewayBgpSetting)(nil)).Elem()
}

func (o GetLocalNetworkGatewayBgpSettingOutput) ToGetLocalNetworkGatewayBgpSettingOutput() GetLocalNetworkGatewayBgpSettingOutput {
	return o
}

func (o GetLocalNetworkGatewayBgpSettingOutput) ToGetLocalNetworkGatewayBgpSettingOutputWithContext(ctx context.Context) GetLocalNetworkGatewayBgpSettingOutput {
	return o
}

// The BGP speaker's ASN.
func (o GetLocalNetworkGatewayBgpSettingOutput) Asn() pulumi.IntOutput {
	return o.ApplyT(func(v GetLocalNetworkGatewayBgpSetting) int { return v.Asn }).(pulumi.IntOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o GetLocalNetworkGatewayBgpSettingOutput) BgpPeeringAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocalNetworkGatewayBgpSetting) string { return v.BgpPeeringAddress }).(pulumi.StringOutput)
}

// The weight added to routes learned from this BGP speaker.
func (o GetLocalNetworkGatewayBgpSettingOutput) PeerWeight() pulumi.IntOutput {
	return o.ApplyT(func(v GetLocalNetworkGatewayBgpSetting) int { return v.PeerWeight }).(pulumi.IntOutput)
}

type GetLocalNetworkGatewayBgpSettingArrayOutput struct{ *pulumi.OutputState }

func (GetLocalNetworkGatewayBgpSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocalNetworkGatewayBgpSetting)(nil)).Elem()
}

func (o GetLocalNetworkGatewayBgpSettingArrayOutput) ToGetLocalNetworkGatewayBgpSettingArrayOutput() GetLocalNetworkGatewayBgpSettingArrayOutput {
	return o
}

func (o GetLocalNetworkGatewayBgpSettingArrayOutput) ToGetLocalNetworkGatewayBgpSettingArrayOutputWithContext(ctx context.Context) GetLocalNetworkGatewayBgpSettingArrayOutput {
	return o
}

func (o GetLocalNetworkGatewayBgpSettingArrayOutput) Index(i pulumi.IntInput) GetLocalNetworkGatewayBgpSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLocalNetworkGatewayBgpSetting {
		return vs[0].([]GetLocalNetworkGatewayBgpSetting)[vs[1].(int)]
	}).(GetLocalNetworkGatewayBgpSettingOutput)
}

type GetNetworkInterfaceIpConfiguration struct {
	// A list of Backend Address Pool IDs within a Application Gateway that this Network Interface is connected to.
	ApplicationGatewayBackendAddressPoolsIds []string `pulumi:"applicationGatewayBackendAddressPoolsIds"`
	ApplicationSecurityGroupIds              []string `pulumi:"applicationSecurityGroupIds"`
	// The Frontend IP Configuration ID of a Gateway SKU Load Balancer the Network Interface is consuming.
	GatewayLoadBalancerFrontendIpConfigurationId string `pulumi:"gatewayLoadBalancerFrontendIpConfigurationId"`
	// A list of Backend Address Pool IDs within a Load Balancer that this Network Interface is connected to.
	LoadBalancerBackendAddressPoolsIds []string `pulumi:"loadBalancerBackendAddressPoolsIds"`
	// A list of Inbound NAT Rule IDs within a Load Balancer that this Network Interface is connected to.
	LoadBalancerInboundNatRulesIds []string `pulumi:"loadBalancerInboundNatRulesIds"`
	// Specifies the name of the Network Interface.
	Name string `pulumi:"name"`
	// is this the Primary IP Configuration for this Network Interface?
	Primary bool `pulumi:"primary"`
	// The Private IP Address assigned to this Network Interface.
	PrivateIpAddress string `pulumi:"privateIpAddress"`
	// The IP Address allocation type for the Private address, such as `Dynamic` or `Static`.
	PrivateIpAddressAllocation string `pulumi:"privateIpAddressAllocation"`
	PrivateIpAddressVersion    string `pulumi:"privateIpAddressVersion"`
	// The ID of the Public IP Address which is connected to this Network Interface.
	PublicIpAddressId string `pulumi:"publicIpAddressId"`
	// The ID of the Subnet which the Network Interface is connected to.
	SubnetId string `pulumi:"subnetId"`
}

// GetNetworkInterfaceIpConfigurationInput is an input type that accepts GetNetworkInterfaceIpConfigurationArgs and GetNetworkInterfaceIpConfigurationOutput values.
// You can construct a concrete instance of `GetNetworkInterfaceIpConfigurationInput` via:
//
//	GetNetworkInterfaceIpConfigurationArgs{...}
type GetNetworkInterfaceIpConfigurationInput interface {
	pulumi.Input

	ToGetNetworkInterfaceIpConfigurationOutput() GetNetworkInterfaceIpConfigurationOutput
	ToGetNetworkInterfaceIpConfigurationOutputWithContext(context.Context) GetNetworkInterfaceIpConfigurationOutput
}

type GetNetworkInterfaceIpConfigurationArgs struct {
	// A list of Backend Address Pool IDs within a Application Gateway that this Network Interface is connected to.
	ApplicationGatewayBackendAddressPoolsIds pulumi.StringArrayInput `pulumi:"applicationGatewayBackendAddressPoolsIds"`
	ApplicationSecurityGroupIds              pulumi.StringArrayInput `pulumi:"applicationSecurityGroupIds"`
	// The Frontend IP Configuration ID of a Gateway SKU Load Balancer the Network Interface is consuming.
	GatewayLoadBalancerFrontendIpConfigurationId pulumi.StringInput `pulumi:"gatewayLoadBalancerFrontendIpConfigurationId"`
	// A list of Backend Address Pool IDs within a Load Balancer that this Network Interface is connected to.
	LoadBalancerBackendAddressPoolsIds pulumi.StringArrayInput `pulumi:"loadBalancerBackendAddressPoolsIds"`
	// A list of Inbound NAT Rule IDs within a Load Balancer that this Network Interface is connected to.
	LoadBalancerInboundNatRulesIds pulumi.StringArrayInput `pulumi:"loadBalancerInboundNatRulesIds"`
	// Specifies the name of the Network Interface.
	Name pulumi.StringInput `pulumi:"name"`
	// is this the Primary IP Configuration for this Network Interface?
	Primary pulumi.BoolInput `pulumi:"primary"`
	// The Private IP Address assigned to this Network Interface.
	PrivateIpAddress pulumi.StringInput `pulumi:"privateIpAddress"`
	// The IP Address allocation type for the Private address, such as `Dynamic` or `Static`.
	PrivateIpAddressAllocation pulumi.StringInput `pulumi:"privateIpAddressAllocation"`
	PrivateIpAddressVersion    pulumi.StringInput `pulumi:"privateIpAddressVersion"`
	// The ID of the Public IP Address which is connected to this Network Interface.
	PublicIpAddressId pulumi.StringInput `pulumi:"publicIpAddressId"`
	// The ID of the Subnet which the Network Interface is connected to.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetNetworkInterfaceIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfaceIpConfiguration)(nil)).Elem()
}

func (i GetNetworkInterfaceIpConfigurationArgs) ToGetNetworkInterfaceIpConfigurationOutput() GetNetworkInterfaceIpConfigurationOutput {
	return i.ToGetNetworkInterfaceIpConfigurationOutputWithContext(context.Background())
}

func (i GetNetworkInterfaceIpConfigurationArgs) ToGetNetworkInterfaceIpConfigurationOutputWithContext(ctx context.Context) GetNetworkInterfaceIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfaceIpConfigurationOutput)
}

// GetNetworkInterfaceIpConfigurationArrayInput is an input type that accepts GetNetworkInterfaceIpConfigurationArray and GetNetworkInterfaceIpConfigurationArrayOutput values.
// You can construct a concrete instance of `GetNetworkInterfaceIpConfigurationArrayInput` via:
//
//	GetNetworkInterfaceIpConfigurationArray{ GetNetworkInterfaceIpConfigurationArgs{...} }
type GetNetworkInterfaceIpConfigurationArrayInput interface {
	pulumi.Input

	ToGetNetworkInterfaceIpConfigurationArrayOutput() GetNetworkInterfaceIpConfigurationArrayOutput
	ToGetNetworkInterfaceIpConfigurationArrayOutputWithContext(context.Context) GetNetworkInterfaceIpConfigurationArrayOutput
}

type GetNetworkInterfaceIpConfigurationArray []GetNetworkInterfaceIpConfigurationInput

func (GetNetworkInterfaceIpConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfaceIpConfiguration)(nil)).Elem()
}

func (i GetNetworkInterfaceIpConfigurationArray) ToGetNetworkInterfaceIpConfigurationArrayOutput() GetNetworkInterfaceIpConfigurationArrayOutput {
	return i.ToGetNetworkInterfaceIpConfigurationArrayOutputWithContext(context.Background())
}

func (i GetNetworkInterfaceIpConfigurationArray) ToGetNetworkInterfaceIpConfigurationArrayOutputWithContext(ctx context.Context) GetNetworkInterfaceIpConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfaceIpConfigurationArrayOutput)
}

type GetNetworkInterfaceIpConfigurationOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfaceIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfaceIpConfiguration)(nil)).Elem()
}

func (o GetNetworkInterfaceIpConfigurationOutput) ToGetNetworkInterfaceIpConfigurationOutput() GetNetworkInterfaceIpConfigurationOutput {
	return o
}

func (o GetNetworkInterfaceIpConfigurationOutput) ToGetNetworkInterfaceIpConfigurationOutputWithContext(ctx context.Context) GetNetworkInterfaceIpConfigurationOutput {
	return o
}

// A list of Backend Address Pool IDs within a Application Gateway that this Network Interface is connected to.
func (o GetNetworkInterfaceIpConfigurationOutput) ApplicationGatewayBackendAddressPoolsIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkInterfaceIpConfiguration) []string { return v.ApplicationGatewayBackendAddressPoolsIds }).(pulumi.StringArrayOutput)
}

func (o GetNetworkInterfaceIpConfigurationOutput) ApplicationSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkInterfaceIpConfiguration) []string { return v.ApplicationSecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The Frontend IP Configuration ID of a Gateway SKU Load Balancer the Network Interface is consuming.
func (o GetNetworkInterfaceIpConfigurationOutput) GatewayLoadBalancerFrontendIpConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfaceIpConfiguration) string {
		return v.GatewayLoadBalancerFrontendIpConfigurationId
	}).(pulumi.StringOutput)
}

// A list of Backend Address Pool IDs within a Load Balancer that this Network Interface is connected to.
func (o GetNetworkInterfaceIpConfigurationOutput) LoadBalancerBackendAddressPoolsIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkInterfaceIpConfiguration) []string { return v.LoadBalancerBackendAddressPoolsIds }).(pulumi.StringArrayOutput)
}

// A list of Inbound NAT Rule IDs within a Load Balancer that this Network Interface is connected to.
func (o GetNetworkInterfaceIpConfigurationOutput) LoadBalancerInboundNatRulesIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkInterfaceIpConfiguration) []string { return v.LoadBalancerInboundNatRulesIds }).(pulumi.StringArrayOutput)
}

// Specifies the name of the Network Interface.
func (o GetNetworkInterfaceIpConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfaceIpConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// is this the Primary IP Configuration for this Network Interface?
func (o GetNetworkInterfaceIpConfigurationOutput) Primary() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNetworkInterfaceIpConfiguration) bool { return v.Primary }).(pulumi.BoolOutput)
}

// The Private IP Address assigned to this Network Interface.
func (o GetNetworkInterfaceIpConfigurationOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfaceIpConfiguration) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

// The IP Address allocation type for the Private address, such as `Dynamic` or `Static`.
func (o GetNetworkInterfaceIpConfigurationOutput) PrivateIpAddressAllocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfaceIpConfiguration) string { return v.PrivateIpAddressAllocation }).(pulumi.StringOutput)
}

func (o GetNetworkInterfaceIpConfigurationOutput) PrivateIpAddressVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfaceIpConfiguration) string { return v.PrivateIpAddressVersion }).(pulumi.StringOutput)
}

// The ID of the Public IP Address which is connected to this Network Interface.
func (o GetNetworkInterfaceIpConfigurationOutput) PublicIpAddressId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfaceIpConfiguration) string { return v.PublicIpAddressId }).(pulumi.StringOutput)
}

// The ID of the Subnet which the Network Interface is connected to.
func (o GetNetworkInterfaceIpConfigurationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfaceIpConfiguration) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetNetworkInterfaceIpConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfaceIpConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfaceIpConfiguration)(nil)).Elem()
}

func (o GetNetworkInterfaceIpConfigurationArrayOutput) ToGetNetworkInterfaceIpConfigurationArrayOutput() GetNetworkInterfaceIpConfigurationArrayOutput {
	return o
}

func (o GetNetworkInterfaceIpConfigurationArrayOutput) ToGetNetworkInterfaceIpConfigurationArrayOutputWithContext(ctx context.Context) GetNetworkInterfaceIpConfigurationArrayOutput {
	return o
}

func (o GetNetworkInterfaceIpConfigurationArrayOutput) Index(i pulumi.IntInput) GetNetworkInterfaceIpConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkInterfaceIpConfiguration {
		return vs[0].([]GetNetworkInterfaceIpConfiguration)[vs[1].(int)]
	}).(GetNetworkInterfaceIpConfigurationOutput)
}

type GetNetworkManagerCrossTenantScope struct {
	// A list of management groups used as cross tenant scope for the Network Manager.
	ManagementGroups []string `pulumi:"managementGroups"`
	// A list of subscriptions used as cross tenant scope for the Network Manager.
	Subscriptions []string `pulumi:"subscriptions"`
	// The tenant ID of the cross tenant scope.
	TenantId string `pulumi:"tenantId"`
}

// GetNetworkManagerCrossTenantScopeInput is an input type that accepts GetNetworkManagerCrossTenantScopeArgs and GetNetworkManagerCrossTenantScopeOutput values.
// You can construct a concrete instance of `GetNetworkManagerCrossTenantScopeInput` via:
//
//	GetNetworkManagerCrossTenantScopeArgs{...}
type GetNetworkManagerCrossTenantScopeInput interface {
	pulumi.Input

	ToGetNetworkManagerCrossTenantScopeOutput() GetNetworkManagerCrossTenantScopeOutput
	ToGetNetworkManagerCrossTenantScopeOutputWithContext(context.Context) GetNetworkManagerCrossTenantScopeOutput
}

type GetNetworkManagerCrossTenantScopeArgs struct {
	// A list of management groups used as cross tenant scope for the Network Manager.
	ManagementGroups pulumi.StringArrayInput `pulumi:"managementGroups"`
	// A list of subscriptions used as cross tenant scope for the Network Manager.
	Subscriptions pulumi.StringArrayInput `pulumi:"subscriptions"`
	// The tenant ID of the cross tenant scope.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (GetNetworkManagerCrossTenantScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkManagerCrossTenantScope)(nil)).Elem()
}

func (i GetNetworkManagerCrossTenantScopeArgs) ToGetNetworkManagerCrossTenantScopeOutput() GetNetworkManagerCrossTenantScopeOutput {
	return i.ToGetNetworkManagerCrossTenantScopeOutputWithContext(context.Background())
}

func (i GetNetworkManagerCrossTenantScopeArgs) ToGetNetworkManagerCrossTenantScopeOutputWithContext(ctx context.Context) GetNetworkManagerCrossTenantScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkManagerCrossTenantScopeOutput)
}

// GetNetworkManagerCrossTenantScopeArrayInput is an input type that accepts GetNetworkManagerCrossTenantScopeArray and GetNetworkManagerCrossTenantScopeArrayOutput values.
// You can construct a concrete instance of `GetNetworkManagerCrossTenantScopeArrayInput` via:
//
//	GetNetworkManagerCrossTenantScopeArray{ GetNetworkManagerCrossTenantScopeArgs{...} }
type GetNetworkManagerCrossTenantScopeArrayInput interface {
	pulumi.Input

	ToGetNetworkManagerCrossTenantScopeArrayOutput() GetNetworkManagerCrossTenantScopeArrayOutput
	ToGetNetworkManagerCrossTenantScopeArrayOutputWithContext(context.Context) GetNetworkManagerCrossTenantScopeArrayOutput
}

type GetNetworkManagerCrossTenantScopeArray []GetNetworkManagerCrossTenantScopeInput

func (GetNetworkManagerCrossTenantScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkManagerCrossTenantScope)(nil)).Elem()
}

func (i GetNetworkManagerCrossTenantScopeArray) ToGetNetworkManagerCrossTenantScopeArrayOutput() GetNetworkManagerCrossTenantScopeArrayOutput {
	return i.ToGetNetworkManagerCrossTenantScopeArrayOutputWithContext(context.Background())
}

func (i GetNetworkManagerCrossTenantScopeArray) ToGetNetworkManagerCrossTenantScopeArrayOutputWithContext(ctx context.Context) GetNetworkManagerCrossTenantScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkManagerCrossTenantScopeArrayOutput)
}

type GetNetworkManagerCrossTenantScopeOutput struct{ *pulumi.OutputState }

func (GetNetworkManagerCrossTenantScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkManagerCrossTenantScope)(nil)).Elem()
}

func (o GetNetworkManagerCrossTenantScopeOutput) ToGetNetworkManagerCrossTenantScopeOutput() GetNetworkManagerCrossTenantScopeOutput {
	return o
}

func (o GetNetworkManagerCrossTenantScopeOutput) ToGetNetworkManagerCrossTenantScopeOutputWithContext(ctx context.Context) GetNetworkManagerCrossTenantScopeOutput {
	return o
}

// A list of management groups used as cross tenant scope for the Network Manager.
func (o GetNetworkManagerCrossTenantScopeOutput) ManagementGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkManagerCrossTenantScope) []string { return v.ManagementGroups }).(pulumi.StringArrayOutput)
}

// A list of subscriptions used as cross tenant scope for the Network Manager.
func (o GetNetworkManagerCrossTenantScopeOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkManagerCrossTenantScope) []string { return v.Subscriptions }).(pulumi.StringArrayOutput)
}

// The tenant ID of the cross tenant scope.
func (o GetNetworkManagerCrossTenantScopeOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkManagerCrossTenantScope) string { return v.TenantId }).(pulumi.StringOutput)
}

type GetNetworkManagerCrossTenantScopeArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkManagerCrossTenantScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkManagerCrossTenantScope)(nil)).Elem()
}

func (o GetNetworkManagerCrossTenantScopeArrayOutput) ToGetNetworkManagerCrossTenantScopeArrayOutput() GetNetworkManagerCrossTenantScopeArrayOutput {
	return o
}

func (o GetNetworkManagerCrossTenantScopeArrayOutput) ToGetNetworkManagerCrossTenantScopeArrayOutputWithContext(ctx context.Context) GetNetworkManagerCrossTenantScopeArrayOutput {
	return o
}

func (o GetNetworkManagerCrossTenantScopeArrayOutput) Index(i pulumi.IntInput) GetNetworkManagerCrossTenantScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkManagerCrossTenantScope {
		return vs[0].([]GetNetworkManagerCrossTenantScope)[vs[1].(int)]
	}).(GetNetworkManagerCrossTenantScopeOutput)
}

type GetNetworkManagerScope struct {
	// A list of management group IDs used a scope for the Network Manager.
	ManagementGroupIds []string `pulumi:"managementGroupIds"`
	// A list of subscription IDs used as the scope for the Network Manager.
	SubscriptionIds []string `pulumi:"subscriptionIds"`
}

// GetNetworkManagerScopeInput is an input type that accepts GetNetworkManagerScopeArgs and GetNetworkManagerScopeOutput values.
// You can construct a concrete instance of `GetNetworkManagerScopeInput` via:
//
//	GetNetworkManagerScopeArgs{...}
type GetNetworkManagerScopeInput interface {
	pulumi.Input

	ToGetNetworkManagerScopeOutput() GetNetworkManagerScopeOutput
	ToGetNetworkManagerScopeOutputWithContext(context.Context) GetNetworkManagerScopeOutput
}

type GetNetworkManagerScopeArgs struct {
	// A list of management group IDs used a scope for the Network Manager.
	ManagementGroupIds pulumi.StringArrayInput `pulumi:"managementGroupIds"`
	// A list of subscription IDs used as the scope for the Network Manager.
	SubscriptionIds pulumi.StringArrayInput `pulumi:"subscriptionIds"`
}

func (GetNetworkManagerScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkManagerScope)(nil)).Elem()
}

func (i GetNetworkManagerScopeArgs) ToGetNetworkManagerScopeOutput() GetNetworkManagerScopeOutput {
	return i.ToGetNetworkManagerScopeOutputWithContext(context.Background())
}

func (i GetNetworkManagerScopeArgs) ToGetNetworkManagerScopeOutputWithContext(ctx context.Context) GetNetworkManagerScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkManagerScopeOutput)
}

// GetNetworkManagerScopeArrayInput is an input type that accepts GetNetworkManagerScopeArray and GetNetworkManagerScopeArrayOutput values.
// You can construct a concrete instance of `GetNetworkManagerScopeArrayInput` via:
//
//	GetNetworkManagerScopeArray{ GetNetworkManagerScopeArgs{...} }
type GetNetworkManagerScopeArrayInput interface {
	pulumi.Input

	ToGetNetworkManagerScopeArrayOutput() GetNetworkManagerScopeArrayOutput
	ToGetNetworkManagerScopeArrayOutputWithContext(context.Context) GetNetworkManagerScopeArrayOutput
}

type GetNetworkManagerScopeArray []GetNetworkManagerScopeInput

func (GetNetworkManagerScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkManagerScope)(nil)).Elem()
}

func (i GetNetworkManagerScopeArray) ToGetNetworkManagerScopeArrayOutput() GetNetworkManagerScopeArrayOutput {
	return i.ToGetNetworkManagerScopeArrayOutputWithContext(context.Background())
}

func (i GetNetworkManagerScopeArray) ToGetNetworkManagerScopeArrayOutputWithContext(ctx context.Context) GetNetworkManagerScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkManagerScopeArrayOutput)
}

type GetNetworkManagerScopeOutput struct{ *pulumi.OutputState }

func (GetNetworkManagerScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkManagerScope)(nil)).Elem()
}

func (o GetNetworkManagerScopeOutput) ToGetNetworkManagerScopeOutput() GetNetworkManagerScopeOutput {
	return o
}

func (o GetNetworkManagerScopeOutput) ToGetNetworkManagerScopeOutputWithContext(ctx context.Context) GetNetworkManagerScopeOutput {
	return o
}

// A list of management group IDs used a scope for the Network Manager.
func (o GetNetworkManagerScopeOutput) ManagementGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkManagerScope) []string { return v.ManagementGroupIds }).(pulumi.StringArrayOutput)
}

// A list of subscription IDs used as the scope for the Network Manager.
func (o GetNetworkManagerScopeOutput) SubscriptionIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkManagerScope) []string { return v.SubscriptionIds }).(pulumi.StringArrayOutput)
}

type GetNetworkManagerScopeArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkManagerScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkManagerScope)(nil)).Elem()
}

func (o GetNetworkManagerScopeArrayOutput) ToGetNetworkManagerScopeArrayOutput() GetNetworkManagerScopeArrayOutput {
	return o
}

func (o GetNetworkManagerScopeArrayOutput) ToGetNetworkManagerScopeArrayOutputWithContext(ctx context.Context) GetNetworkManagerScopeArrayOutput {
	return o
}

func (o GetNetworkManagerScopeArrayOutput) Index(i pulumi.IntInput) GetNetworkManagerScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkManagerScope {
		return vs[0].([]GetNetworkManagerScope)[vs[1].(int)]
	}).(GetNetworkManagerScopeOutput)
}

type GetNetworkSecurityGroupSecurityRule struct {
	// Is network traffic is allowed or denied?
	Access string `pulumi:"access"`
	// The description for this rule.
	Description string `pulumi:"description"`
	// CIDR or destination IP range or * to match any IP.
	DestinationAddressPrefix string `pulumi:"destinationAddressPrefix"`
	// A list of CIDRs or destination IP ranges.
	DestinationAddressPrefixes []string `pulumi:"destinationAddressPrefixes"`
	// A List of destination Application Security Group IDs
	DestinationApplicationSecurityGroupIds []string `pulumi:"destinationApplicationSecurityGroupIds"`
	// The Destination Port or Range.
	DestinationPortRange  string   `pulumi:"destinationPortRange"`
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// The direction specifies if rule will be evaluated on incoming or outgoing traffic.
	Direction string `pulumi:"direction"`
	// Specifies the Name of the Network Security Group.
	Name string `pulumi:"name"`
	// The priority of the rule
	Priority int `pulumi:"priority"`
	// The network protocol this rule applies to.
	Protocol string `pulumi:"protocol"`
	// CIDR or source IP range or * to match any IP.
	SourceAddressPrefix string `pulumi:"sourceAddressPrefix"`
	// A list of CIDRs or source IP ranges.
	SourceAddressPrefixes []string `pulumi:"sourceAddressPrefixes"`
	// A List of source Application Security Group IDs
	SourceApplicationSecurityGroupIds []string `pulumi:"sourceApplicationSecurityGroupIds"`
	// The Source Port or Range.
	SourcePortRange  string   `pulumi:"sourcePortRange"`
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
}

// GetNetworkSecurityGroupSecurityRuleInput is an input type that accepts GetNetworkSecurityGroupSecurityRuleArgs and GetNetworkSecurityGroupSecurityRuleOutput values.
// You can construct a concrete instance of `GetNetworkSecurityGroupSecurityRuleInput` via:
//
//	GetNetworkSecurityGroupSecurityRuleArgs{...}
type GetNetworkSecurityGroupSecurityRuleInput interface {
	pulumi.Input

	ToGetNetworkSecurityGroupSecurityRuleOutput() GetNetworkSecurityGroupSecurityRuleOutput
	ToGetNetworkSecurityGroupSecurityRuleOutputWithContext(context.Context) GetNetworkSecurityGroupSecurityRuleOutput
}

type GetNetworkSecurityGroupSecurityRuleArgs struct {
	// Is network traffic is allowed or denied?
	Access pulumi.StringInput `pulumi:"access"`
	// The description for this rule.
	Description pulumi.StringInput `pulumi:"description"`
	// CIDR or destination IP range or * to match any IP.
	DestinationAddressPrefix pulumi.StringInput `pulumi:"destinationAddressPrefix"`
	// A list of CIDRs or destination IP ranges.
	DestinationAddressPrefixes pulumi.StringArrayInput `pulumi:"destinationAddressPrefixes"`
	// A List of destination Application Security Group IDs
	DestinationApplicationSecurityGroupIds pulumi.StringArrayInput `pulumi:"destinationApplicationSecurityGroupIds"`
	// The Destination Port or Range.
	DestinationPortRange  pulumi.StringInput      `pulumi:"destinationPortRange"`
	DestinationPortRanges pulumi.StringArrayInput `pulumi:"destinationPortRanges"`
	// The direction specifies if rule will be evaluated on incoming or outgoing traffic.
	Direction pulumi.StringInput `pulumi:"direction"`
	// Specifies the Name of the Network Security Group.
	Name pulumi.StringInput `pulumi:"name"`
	// The priority of the rule
	Priority pulumi.IntInput `pulumi:"priority"`
	// The network protocol this rule applies to.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// CIDR or source IP range or * to match any IP.
	SourceAddressPrefix pulumi.StringInput `pulumi:"sourceAddressPrefix"`
	// A list of CIDRs or source IP ranges.
	SourceAddressPrefixes pulumi.StringArrayInput `pulumi:"sourceAddressPrefixes"`
	// A List of source Application Security Group IDs
	SourceApplicationSecurityGroupIds pulumi.StringArrayInput `pulumi:"sourceApplicationSecurityGroupIds"`
	// The Source Port or Range.
	SourcePortRange  pulumi.StringInput      `pulumi:"sourcePortRange"`
	SourcePortRanges pulumi.StringArrayInput `pulumi:"sourcePortRanges"`
}

func (GetNetworkSecurityGroupSecurityRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkSecurityGroupSecurityRule)(nil)).Elem()
}

func (i GetNetworkSecurityGroupSecurityRuleArgs) ToGetNetworkSecurityGroupSecurityRuleOutput() GetNetworkSecurityGroupSecurityRuleOutput {
	return i.ToGetNetworkSecurityGroupSecurityRuleOutputWithContext(context.Background())
}

func (i GetNetworkSecurityGroupSecurityRuleArgs) ToGetNetworkSecurityGroupSecurityRuleOutputWithContext(ctx context.Context) GetNetworkSecurityGroupSecurityRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkSecurityGroupSecurityRuleOutput)
}

// GetNetworkSecurityGroupSecurityRuleArrayInput is an input type that accepts GetNetworkSecurityGroupSecurityRuleArray and GetNetworkSecurityGroupSecurityRuleArrayOutput values.
// You can construct a concrete instance of `GetNetworkSecurityGroupSecurityRuleArrayInput` via:
//
//	GetNetworkSecurityGroupSecurityRuleArray{ GetNetworkSecurityGroupSecurityRuleArgs{...} }
type GetNetworkSecurityGroupSecurityRuleArrayInput interface {
	pulumi.Input

	ToGetNetworkSecurityGroupSecurityRuleArrayOutput() GetNetworkSecurityGroupSecurityRuleArrayOutput
	ToGetNetworkSecurityGroupSecurityRuleArrayOutputWithContext(context.Context) GetNetworkSecurityGroupSecurityRuleArrayOutput
}

type GetNetworkSecurityGroupSecurityRuleArray []GetNetworkSecurityGroupSecurityRuleInput

func (GetNetworkSecurityGroupSecurityRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkSecurityGroupSecurityRule)(nil)).Elem()
}

func (i GetNetworkSecurityGroupSecurityRuleArray) ToGetNetworkSecurityGroupSecurityRuleArrayOutput() GetNetworkSecurityGroupSecurityRuleArrayOutput {
	return i.ToGetNetworkSecurityGroupSecurityRuleArrayOutputWithContext(context.Background())
}

func (i GetNetworkSecurityGroupSecurityRuleArray) ToGetNetworkSecurityGroupSecurityRuleArrayOutputWithContext(ctx context.Context) GetNetworkSecurityGroupSecurityRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkSecurityGroupSecurityRuleArrayOutput)
}

type GetNetworkSecurityGroupSecurityRuleOutput struct{ *pulumi.OutputState }

func (GetNetworkSecurityGroupSecurityRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkSecurityGroupSecurityRule)(nil)).Elem()
}

func (o GetNetworkSecurityGroupSecurityRuleOutput) ToGetNetworkSecurityGroupSecurityRuleOutput() GetNetworkSecurityGroupSecurityRuleOutput {
	return o
}

func (o GetNetworkSecurityGroupSecurityRuleOutput) ToGetNetworkSecurityGroupSecurityRuleOutputWithContext(ctx context.Context) GetNetworkSecurityGroupSecurityRuleOutput {
	return o
}

// Is network traffic is allowed or denied?
func (o GetNetworkSecurityGroupSecurityRuleOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkSecurityGroupSecurityRule) string { return v.Access }).(pulumi.StringOutput)
}

// The description for this rule.
func (o GetNetworkSecurityGroupSecurityRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkSecurityGroupSecurityRule) string { return v.Description }).(pulumi.StringOutput)
}

// CIDR or destination IP range or * to match any IP.
func (o GetNetworkSecurityGroupSecurityRuleOutput) DestinationAddressPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkSecurityGroupSecurityRule) string { return v.DestinationAddressPrefix }).(pulumi.StringOutput)
}

// A list of CIDRs or destination IP ranges.
func (o GetNetworkSecurityGroupSecurityRuleOutput) DestinationAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkSecurityGroupSecurityRule) []string { return v.DestinationAddressPrefixes }).(pulumi.StringArrayOutput)
}

// A List of destination Application Security Group IDs
func (o GetNetworkSecurityGroupSecurityRuleOutput) DestinationApplicationSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkSecurityGroupSecurityRule) []string { return v.DestinationApplicationSecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The Destination Port or Range.
func (o GetNetworkSecurityGroupSecurityRuleOutput) DestinationPortRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkSecurityGroupSecurityRule) string { return v.DestinationPortRange }).(pulumi.StringOutput)
}

func (o GetNetworkSecurityGroupSecurityRuleOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkSecurityGroupSecurityRule) []string { return v.DestinationPortRanges }).(pulumi.StringArrayOutput)
}

// The direction specifies if rule will be evaluated on incoming or outgoing traffic.
func (o GetNetworkSecurityGroupSecurityRuleOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkSecurityGroupSecurityRule) string { return v.Direction }).(pulumi.StringOutput)
}

// Specifies the Name of the Network Security Group.
func (o GetNetworkSecurityGroupSecurityRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkSecurityGroupSecurityRule) string { return v.Name }).(pulumi.StringOutput)
}

// The priority of the rule
func (o GetNetworkSecurityGroupSecurityRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkSecurityGroupSecurityRule) int { return v.Priority }).(pulumi.IntOutput)
}

// The network protocol this rule applies to.
func (o GetNetworkSecurityGroupSecurityRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkSecurityGroupSecurityRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// CIDR or source IP range or * to match any IP.
func (o GetNetworkSecurityGroupSecurityRuleOutput) SourceAddressPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkSecurityGroupSecurityRule) string { return v.SourceAddressPrefix }).(pulumi.StringOutput)
}

// A list of CIDRs or source IP ranges.
func (o GetNetworkSecurityGroupSecurityRuleOutput) SourceAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkSecurityGroupSecurityRule) []string { return v.SourceAddressPrefixes }).(pulumi.StringArrayOutput)
}

// A List of source Application Security Group IDs
func (o GetNetworkSecurityGroupSecurityRuleOutput) SourceApplicationSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkSecurityGroupSecurityRule) []string { return v.SourceApplicationSecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The Source Port or Range.
func (o GetNetworkSecurityGroupSecurityRuleOutput) SourcePortRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkSecurityGroupSecurityRule) string { return v.SourcePortRange }).(pulumi.StringOutput)
}

func (o GetNetworkSecurityGroupSecurityRuleOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkSecurityGroupSecurityRule) []string { return v.SourcePortRanges }).(pulumi.StringArrayOutput)
}

type GetNetworkSecurityGroupSecurityRuleArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkSecurityGroupSecurityRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkSecurityGroupSecurityRule)(nil)).Elem()
}

func (o GetNetworkSecurityGroupSecurityRuleArrayOutput) ToGetNetworkSecurityGroupSecurityRuleArrayOutput() GetNetworkSecurityGroupSecurityRuleArrayOutput {
	return o
}

func (o GetNetworkSecurityGroupSecurityRuleArrayOutput) ToGetNetworkSecurityGroupSecurityRuleArrayOutputWithContext(ctx context.Context) GetNetworkSecurityGroupSecurityRuleArrayOutput {
	return o
}

func (o GetNetworkSecurityGroupSecurityRuleArrayOutput) Index(i pulumi.IntInput) GetNetworkSecurityGroupSecurityRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkSecurityGroupSecurityRule {
		return vs[0].([]GetNetworkSecurityGroupSecurityRule)[vs[1].(int)]
	}).(GetNetworkSecurityGroupSecurityRuleOutput)
}

type GetPublicIPsPublicIp struct {
	// The Domain Name Label of the Public IP Address
	DomainNameLabel string `pulumi:"domainNameLabel"`
	// The FQDN of the Public IP Address
	Fqdn string `pulumi:"fqdn"`
	// The ID of the Public IP Address
	Id string `pulumi:"id"`
	// The IP address of the Public IP Address
	IpAddress string `pulumi:"ipAddress"`
	// The Name of the Public IP Address
	Name string `pulumi:"name"`
}

// GetPublicIPsPublicIpInput is an input type that accepts GetPublicIPsPublicIpArgs and GetPublicIPsPublicIpOutput values.
// You can construct a concrete instance of `GetPublicIPsPublicIpInput` via:
//
//	GetPublicIPsPublicIpArgs{...}
type GetPublicIPsPublicIpInput interface {
	pulumi.Input

	ToGetPublicIPsPublicIpOutput() GetPublicIPsPublicIpOutput
	ToGetPublicIPsPublicIpOutputWithContext(context.Context) GetPublicIPsPublicIpOutput
}

type GetPublicIPsPublicIpArgs struct {
	// The Domain Name Label of the Public IP Address
	DomainNameLabel pulumi.StringInput `pulumi:"domainNameLabel"`
	// The FQDN of the Public IP Address
	Fqdn pulumi.StringInput `pulumi:"fqdn"`
	// The ID of the Public IP Address
	Id pulumi.StringInput `pulumi:"id"`
	// The IP address of the Public IP Address
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The Name of the Public IP Address
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPublicIPsPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicIPsPublicIp)(nil)).Elem()
}

func (i GetPublicIPsPublicIpArgs) ToGetPublicIPsPublicIpOutput() GetPublicIPsPublicIpOutput {
	return i.ToGetPublicIPsPublicIpOutputWithContext(context.Background())
}

func (i GetPublicIPsPublicIpArgs) ToGetPublicIPsPublicIpOutputWithContext(ctx context.Context) GetPublicIPsPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicIPsPublicIpOutput)
}

// GetPublicIPsPublicIpArrayInput is an input type that accepts GetPublicIPsPublicIpArray and GetPublicIPsPublicIpArrayOutput values.
// You can construct a concrete instance of `GetPublicIPsPublicIpArrayInput` via:
//
//	GetPublicIPsPublicIpArray{ GetPublicIPsPublicIpArgs{...} }
type GetPublicIPsPublicIpArrayInput interface {
	pulumi.Input

	ToGetPublicIPsPublicIpArrayOutput() GetPublicIPsPublicIpArrayOutput
	ToGetPublicIPsPublicIpArrayOutputWithContext(context.Context) GetPublicIPsPublicIpArrayOutput
}

type GetPublicIPsPublicIpArray []GetPublicIPsPublicIpInput

func (GetPublicIPsPublicIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicIPsPublicIp)(nil)).Elem()
}

func (i GetPublicIPsPublicIpArray) ToGetPublicIPsPublicIpArrayOutput() GetPublicIPsPublicIpArrayOutput {
	return i.ToGetPublicIPsPublicIpArrayOutputWithContext(context.Background())
}

func (i GetPublicIPsPublicIpArray) ToGetPublicIPsPublicIpArrayOutputWithContext(ctx context.Context) GetPublicIPsPublicIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicIPsPublicIpArrayOutput)
}

type GetPublicIPsPublicIpOutput struct{ *pulumi.OutputState }

func (GetPublicIPsPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicIPsPublicIp)(nil)).Elem()
}

func (o GetPublicIPsPublicIpOutput) ToGetPublicIPsPublicIpOutput() GetPublicIPsPublicIpOutput {
	return o
}

func (o GetPublicIPsPublicIpOutput) ToGetPublicIPsPublicIpOutputWithContext(ctx context.Context) GetPublicIPsPublicIpOutput {
	return o
}

// The Domain Name Label of the Public IP Address
func (o GetPublicIPsPublicIpOutput) DomainNameLabel() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIPsPublicIp) string { return v.DomainNameLabel }).(pulumi.StringOutput)
}

// The FQDN of the Public IP Address
func (o GetPublicIPsPublicIpOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIPsPublicIp) string { return v.Fqdn }).(pulumi.StringOutput)
}

// The ID of the Public IP Address
func (o GetPublicIPsPublicIpOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIPsPublicIp) string { return v.Id }).(pulumi.StringOutput)
}

// The IP address of the Public IP Address
func (o GetPublicIPsPublicIpOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIPsPublicIp) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The Name of the Public IP Address
func (o GetPublicIPsPublicIpOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicIPsPublicIp) string { return v.Name }).(pulumi.StringOutput)
}

type GetPublicIPsPublicIpArrayOutput struct{ *pulumi.OutputState }

func (GetPublicIPsPublicIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicIPsPublicIp)(nil)).Elem()
}

func (o GetPublicIPsPublicIpArrayOutput) ToGetPublicIPsPublicIpArrayOutput() GetPublicIPsPublicIpArrayOutput {
	return o
}

func (o GetPublicIPsPublicIpArrayOutput) ToGetPublicIPsPublicIpArrayOutputWithContext(ctx context.Context) GetPublicIPsPublicIpArrayOutput {
	return o
}

func (o GetPublicIPsPublicIpArrayOutput) Index(i pulumi.IntInput) GetPublicIPsPublicIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPublicIPsPublicIp {
		return vs[0].([]GetPublicIPsPublicIp)[vs[1].(int)]
	}).(GetPublicIPsPublicIpOutput)
}

type GetRouteFilterRule struct {
	// The access type of the rule
	Access string `pulumi:"access"`
	// The collection for bgp community values.
	Communities []string `pulumi:"communities"`
	// The Name of this Route Filter.
	Name string `pulumi:"name"`
	// The Route Filter Rule Type.
	RuleType string `pulumi:"ruleType"`
}

// GetRouteFilterRuleInput is an input type that accepts GetRouteFilterRuleArgs and GetRouteFilterRuleOutput values.
// You can construct a concrete instance of `GetRouteFilterRuleInput` via:
//
//	GetRouteFilterRuleArgs{...}
type GetRouteFilterRuleInput interface {
	pulumi.Input

	ToGetRouteFilterRuleOutput() GetRouteFilterRuleOutput
	ToGetRouteFilterRuleOutputWithContext(context.Context) GetRouteFilterRuleOutput
}

type GetRouteFilterRuleArgs struct {
	// The access type of the rule
	Access pulumi.StringInput `pulumi:"access"`
	// The collection for bgp community values.
	Communities pulumi.StringArrayInput `pulumi:"communities"`
	// The Name of this Route Filter.
	Name pulumi.StringInput `pulumi:"name"`
	// The Route Filter Rule Type.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
}

func (GetRouteFilterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteFilterRule)(nil)).Elem()
}

func (i GetRouteFilterRuleArgs) ToGetRouteFilterRuleOutput() GetRouteFilterRuleOutput {
	return i.ToGetRouteFilterRuleOutputWithContext(context.Background())
}

func (i GetRouteFilterRuleArgs) ToGetRouteFilterRuleOutputWithContext(ctx context.Context) GetRouteFilterRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteFilterRuleOutput)
}

// GetRouteFilterRuleArrayInput is an input type that accepts GetRouteFilterRuleArray and GetRouteFilterRuleArrayOutput values.
// You can construct a concrete instance of `GetRouteFilterRuleArrayInput` via:
//
//	GetRouteFilterRuleArray{ GetRouteFilterRuleArgs{...} }
type GetRouteFilterRuleArrayInput interface {
	pulumi.Input

	ToGetRouteFilterRuleArrayOutput() GetRouteFilterRuleArrayOutput
	ToGetRouteFilterRuleArrayOutputWithContext(context.Context) GetRouteFilterRuleArrayOutput
}

type GetRouteFilterRuleArray []GetRouteFilterRuleInput

func (GetRouteFilterRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteFilterRule)(nil)).Elem()
}

func (i GetRouteFilterRuleArray) ToGetRouteFilterRuleArrayOutput() GetRouteFilterRuleArrayOutput {
	return i.ToGetRouteFilterRuleArrayOutputWithContext(context.Background())
}

func (i GetRouteFilterRuleArray) ToGetRouteFilterRuleArrayOutputWithContext(ctx context.Context) GetRouteFilterRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteFilterRuleArrayOutput)
}

type GetRouteFilterRuleOutput struct{ *pulumi.OutputState }

func (GetRouteFilterRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteFilterRule)(nil)).Elem()
}

func (o GetRouteFilterRuleOutput) ToGetRouteFilterRuleOutput() GetRouteFilterRuleOutput {
	return o
}

func (o GetRouteFilterRuleOutput) ToGetRouteFilterRuleOutputWithContext(ctx context.Context) GetRouteFilterRuleOutput {
	return o
}

// The access type of the rule
func (o GetRouteFilterRuleOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteFilterRule) string { return v.Access }).(pulumi.StringOutput)
}

// The collection for bgp community values.
func (o GetRouteFilterRuleOutput) Communities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteFilterRule) []string { return v.Communities }).(pulumi.StringArrayOutput)
}

// The Name of this Route Filter.
func (o GetRouteFilterRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteFilterRule) string { return v.Name }).(pulumi.StringOutput)
}

// The Route Filter Rule Type.
func (o GetRouteFilterRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteFilterRule) string { return v.RuleType }).(pulumi.StringOutput)
}

type GetRouteFilterRuleArrayOutput struct{ *pulumi.OutputState }

func (GetRouteFilterRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteFilterRule)(nil)).Elem()
}

func (o GetRouteFilterRuleArrayOutput) ToGetRouteFilterRuleArrayOutput() GetRouteFilterRuleArrayOutput {
	return o
}

func (o GetRouteFilterRuleArrayOutput) ToGetRouteFilterRuleArrayOutputWithContext(ctx context.Context) GetRouteFilterRuleArrayOutput {
	return o
}

func (o GetRouteFilterRuleArrayOutput) Index(i pulumi.IntInput) GetRouteFilterRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteFilterRule {
		return vs[0].([]GetRouteFilterRule)[vs[1].(int)]
	}).(GetRouteFilterRuleOutput)
}

type GetRouteTableRoute struct {
	// The destination CIDR to which the route applies.
	AddressPrefix string `pulumi:"addressPrefix"`
	// The name of the Route Table.
	Name string `pulumi:"name"`
	// Contains the IP address packets should be forwarded to.
	NextHopInIpAddress string `pulumi:"nextHopInIpAddress"`
	// The type of Azure hop the packet should be sent to.
	NextHopType string `pulumi:"nextHopType"`
}

// GetRouteTableRouteInput is an input type that accepts GetRouteTableRouteArgs and GetRouteTableRouteOutput values.
// You can construct a concrete instance of `GetRouteTableRouteInput` via:
//
//	GetRouteTableRouteArgs{...}
type GetRouteTableRouteInput interface {
	pulumi.Input

	ToGetRouteTableRouteOutput() GetRouteTableRouteOutput
	ToGetRouteTableRouteOutputWithContext(context.Context) GetRouteTableRouteOutput
}

type GetRouteTableRouteArgs struct {
	// The destination CIDR to which the route applies.
	AddressPrefix pulumi.StringInput `pulumi:"addressPrefix"`
	// The name of the Route Table.
	Name pulumi.StringInput `pulumi:"name"`
	// Contains the IP address packets should be forwarded to.
	NextHopInIpAddress pulumi.StringInput `pulumi:"nextHopInIpAddress"`
	// The type of Azure hop the packet should be sent to.
	NextHopType pulumi.StringInput `pulumi:"nextHopType"`
}

func (GetRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableRoute)(nil)).Elem()
}

func (i GetRouteTableRouteArgs) ToGetRouteTableRouteOutput() GetRouteTableRouteOutput {
	return i.ToGetRouteTableRouteOutputWithContext(context.Background())
}

func (i GetRouteTableRouteArgs) ToGetRouteTableRouteOutputWithContext(ctx context.Context) GetRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableRouteOutput)
}

// GetRouteTableRouteArrayInput is an input type that accepts GetRouteTableRouteArray and GetRouteTableRouteArrayOutput values.
// You can construct a concrete instance of `GetRouteTableRouteArrayInput` via:
//
//	GetRouteTableRouteArray{ GetRouteTableRouteArgs{...} }
type GetRouteTableRouteArrayInput interface {
	pulumi.Input

	ToGetRouteTableRouteArrayOutput() GetRouteTableRouteArrayOutput
	ToGetRouteTableRouteArrayOutputWithContext(context.Context) GetRouteTableRouteArrayOutput
}

type GetRouteTableRouteArray []GetRouteTableRouteInput

func (GetRouteTableRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableRoute)(nil)).Elem()
}

func (i GetRouteTableRouteArray) ToGetRouteTableRouteArrayOutput() GetRouteTableRouteArrayOutput {
	return i.ToGetRouteTableRouteArrayOutputWithContext(context.Background())
}

func (i GetRouteTableRouteArray) ToGetRouteTableRouteArrayOutputWithContext(ctx context.Context) GetRouteTableRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableRouteArrayOutput)
}

type GetRouteTableRouteOutput struct{ *pulumi.OutputState }

func (GetRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableRoute)(nil)).Elem()
}

func (o GetRouteTableRouteOutput) ToGetRouteTableRouteOutput() GetRouteTableRouteOutput {
	return o
}

func (o GetRouteTableRouteOutput) ToGetRouteTableRouteOutputWithContext(ctx context.Context) GetRouteTableRouteOutput {
	return o
}

// The destination CIDR to which the route applies.
func (o GetRouteTableRouteOutput) AddressPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.AddressPrefix }).(pulumi.StringOutput)
}

// The name of the Route Table.
func (o GetRouteTableRouteOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.Name }).(pulumi.StringOutput)
}

// Contains the IP address packets should be forwarded to.
func (o GetRouteTableRouteOutput) NextHopInIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.NextHopInIpAddress }).(pulumi.StringOutput)
}

// The type of Azure hop the packet should be sent to.
func (o GetRouteTableRouteOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.NextHopType }).(pulumi.StringOutput)
}

type GetRouteTableRouteArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTableRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableRoute)(nil)).Elem()
}

func (o GetRouteTableRouteArrayOutput) ToGetRouteTableRouteArrayOutput() GetRouteTableRouteArrayOutput {
	return o
}

func (o GetRouteTableRouteArrayOutput) ToGetRouteTableRouteArrayOutputWithContext(ctx context.Context) GetRouteTableRouteArrayOutput {
	return o
}

func (o GetRouteTableRouteArrayOutput) Index(i pulumi.IntInput) GetRouteTableRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTableRoute {
		return vs[0].([]GetRouteTableRoute)[vs[1].(int)]
	}).(GetRouteTableRouteOutput)
}

type GetTrafficManagerProfileDnsConfig struct {
	// The relative domain name, this is combined with the domain name used by Traffic Manager to form the FQDN which is exported as documented below.
	RelativeName string `pulumi:"relativeName"`
	// The TTL value of the Profile used by Local DNS resolvers and clients.
	Ttl int `pulumi:"ttl"`
}

// GetTrafficManagerProfileDnsConfigInput is an input type that accepts GetTrafficManagerProfileDnsConfigArgs and GetTrafficManagerProfileDnsConfigOutput values.
// You can construct a concrete instance of `GetTrafficManagerProfileDnsConfigInput` via:
//
//	GetTrafficManagerProfileDnsConfigArgs{...}
type GetTrafficManagerProfileDnsConfigInput interface {
	pulumi.Input

	ToGetTrafficManagerProfileDnsConfigOutput() GetTrafficManagerProfileDnsConfigOutput
	ToGetTrafficManagerProfileDnsConfigOutputWithContext(context.Context) GetTrafficManagerProfileDnsConfigOutput
}

type GetTrafficManagerProfileDnsConfigArgs struct {
	// The relative domain name, this is combined with the domain name used by Traffic Manager to form the FQDN which is exported as documented below.
	RelativeName pulumi.StringInput `pulumi:"relativeName"`
	// The TTL value of the Profile used by Local DNS resolvers and clients.
	Ttl pulumi.IntInput `pulumi:"ttl"`
}

func (GetTrafficManagerProfileDnsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficManagerProfileDnsConfig)(nil)).Elem()
}

func (i GetTrafficManagerProfileDnsConfigArgs) ToGetTrafficManagerProfileDnsConfigOutput() GetTrafficManagerProfileDnsConfigOutput {
	return i.ToGetTrafficManagerProfileDnsConfigOutputWithContext(context.Background())
}

func (i GetTrafficManagerProfileDnsConfigArgs) ToGetTrafficManagerProfileDnsConfigOutputWithContext(ctx context.Context) GetTrafficManagerProfileDnsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficManagerProfileDnsConfigOutput)
}

// GetTrafficManagerProfileDnsConfigArrayInput is an input type that accepts GetTrafficManagerProfileDnsConfigArray and GetTrafficManagerProfileDnsConfigArrayOutput values.
// You can construct a concrete instance of `GetTrafficManagerProfileDnsConfigArrayInput` via:
//
//	GetTrafficManagerProfileDnsConfigArray{ GetTrafficManagerProfileDnsConfigArgs{...} }
type GetTrafficManagerProfileDnsConfigArrayInput interface {
	pulumi.Input

	ToGetTrafficManagerProfileDnsConfigArrayOutput() GetTrafficManagerProfileDnsConfigArrayOutput
	ToGetTrafficManagerProfileDnsConfigArrayOutputWithContext(context.Context) GetTrafficManagerProfileDnsConfigArrayOutput
}

type GetTrafficManagerProfileDnsConfigArray []GetTrafficManagerProfileDnsConfigInput

func (GetTrafficManagerProfileDnsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficManagerProfileDnsConfig)(nil)).Elem()
}

func (i GetTrafficManagerProfileDnsConfigArray) ToGetTrafficManagerProfileDnsConfigArrayOutput() GetTrafficManagerProfileDnsConfigArrayOutput {
	return i.ToGetTrafficManagerProfileDnsConfigArrayOutputWithContext(context.Background())
}

func (i GetTrafficManagerProfileDnsConfigArray) ToGetTrafficManagerProfileDnsConfigArrayOutputWithContext(ctx context.Context) GetTrafficManagerProfileDnsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficManagerProfileDnsConfigArrayOutput)
}

type GetTrafficManagerProfileDnsConfigOutput struct{ *pulumi.OutputState }

func (GetTrafficManagerProfileDnsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficManagerProfileDnsConfig)(nil)).Elem()
}

func (o GetTrafficManagerProfileDnsConfigOutput) ToGetTrafficManagerProfileDnsConfigOutput() GetTrafficManagerProfileDnsConfigOutput {
	return o
}

func (o GetTrafficManagerProfileDnsConfigOutput) ToGetTrafficManagerProfileDnsConfigOutputWithContext(ctx context.Context) GetTrafficManagerProfileDnsConfigOutput {
	return o
}

// The relative domain name, this is combined with the domain name used by Traffic Manager to form the FQDN which is exported as documented below.
func (o GetTrafficManagerProfileDnsConfigOutput) RelativeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficManagerProfileDnsConfig) string { return v.RelativeName }).(pulumi.StringOutput)
}

// The TTL value of the Profile used by Local DNS resolvers and clients.
func (o GetTrafficManagerProfileDnsConfigOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v GetTrafficManagerProfileDnsConfig) int { return v.Ttl }).(pulumi.IntOutput)
}

type GetTrafficManagerProfileDnsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetTrafficManagerProfileDnsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficManagerProfileDnsConfig)(nil)).Elem()
}

func (o GetTrafficManagerProfileDnsConfigArrayOutput) ToGetTrafficManagerProfileDnsConfigArrayOutput() GetTrafficManagerProfileDnsConfigArrayOutput {
	return o
}

func (o GetTrafficManagerProfileDnsConfigArrayOutput) ToGetTrafficManagerProfileDnsConfigArrayOutputWithContext(ctx context.Context) GetTrafficManagerProfileDnsConfigArrayOutput {
	return o
}

func (o GetTrafficManagerProfileDnsConfigArrayOutput) Index(i pulumi.IntInput) GetTrafficManagerProfileDnsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTrafficManagerProfileDnsConfig {
		return vs[0].([]GetTrafficManagerProfileDnsConfig)[vs[1].(int)]
	}).(GetTrafficManagerProfileDnsConfigOutput)
}

type GetTrafficManagerProfileMonitorConfig struct {
	// One or more `customHeader` blocks as defined below.
	CustomHeaders []GetTrafficManagerProfileMonitorConfigCustomHeader `pulumi:"customHeaders"`
	// A list of status code ranges.
	ExpectedStatusCodeRanges []string `pulumi:"expectedStatusCodeRanges"`
	// The interval used to check the endpoint health from a Traffic Manager probing agent.
	IntervalInSeconds int `pulumi:"intervalInSeconds"`
	// The path used by the monitoring checks.
	Path string `pulumi:"path"`
	// The port number used by the monitoring checks.
	Port int `pulumi:"port"`
	// The protocol used by the monitoring checks.
	Protocol string `pulumi:"protocol"`
	// The amount of time the Traffic Manager probing agent should wait before considering that check a failure when a health check probe is sent to the endpoint.
	TimeoutInSeconds int `pulumi:"timeoutInSeconds"`
	// The number of failures a Traffic Manager probing agent tolerates before marking that endpoint as unhealthy.
	ToleratedNumberOfFailures int `pulumi:"toleratedNumberOfFailures"`
}

// GetTrafficManagerProfileMonitorConfigInput is an input type that accepts GetTrafficManagerProfileMonitorConfigArgs and GetTrafficManagerProfileMonitorConfigOutput values.
// You can construct a concrete instance of `GetTrafficManagerProfileMonitorConfigInput` via:
//
//	GetTrafficManagerProfileMonitorConfigArgs{...}
type GetTrafficManagerProfileMonitorConfigInput interface {
	pulumi.Input

	ToGetTrafficManagerProfileMonitorConfigOutput() GetTrafficManagerProfileMonitorConfigOutput
	ToGetTrafficManagerProfileMonitorConfigOutputWithContext(context.Context) GetTrafficManagerProfileMonitorConfigOutput
}

type GetTrafficManagerProfileMonitorConfigArgs struct {
	// One or more `customHeader` blocks as defined below.
	CustomHeaders GetTrafficManagerProfileMonitorConfigCustomHeaderArrayInput `pulumi:"customHeaders"`
	// A list of status code ranges.
	ExpectedStatusCodeRanges pulumi.StringArrayInput `pulumi:"expectedStatusCodeRanges"`
	// The interval used to check the endpoint health from a Traffic Manager probing agent.
	IntervalInSeconds pulumi.IntInput `pulumi:"intervalInSeconds"`
	// The path used by the monitoring checks.
	Path pulumi.StringInput `pulumi:"path"`
	// The port number used by the monitoring checks.
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol used by the monitoring checks.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The amount of time the Traffic Manager probing agent should wait before considering that check a failure when a health check probe is sent to the endpoint.
	TimeoutInSeconds pulumi.IntInput `pulumi:"timeoutInSeconds"`
	// The number of failures a Traffic Manager probing agent tolerates before marking that endpoint as unhealthy.
	ToleratedNumberOfFailures pulumi.IntInput `pulumi:"toleratedNumberOfFailures"`
}

func (GetTrafficManagerProfileMonitorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficManagerProfileMonitorConfig)(nil)).Elem()
}

func (i GetTrafficManagerProfileMonitorConfigArgs) ToGetTrafficManagerProfileMonitorConfigOutput() GetTrafficManagerProfileMonitorConfigOutput {
	return i.ToGetTrafficManagerProfileMonitorConfigOutputWithContext(context.Background())
}

func (i GetTrafficManagerProfileMonitorConfigArgs) ToGetTrafficManagerProfileMonitorConfigOutputWithContext(ctx context.Context) GetTrafficManagerProfileMonitorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficManagerProfileMonitorConfigOutput)
}

// GetTrafficManagerProfileMonitorConfigArrayInput is an input type that accepts GetTrafficManagerProfileMonitorConfigArray and GetTrafficManagerProfileMonitorConfigArrayOutput values.
// You can construct a concrete instance of `GetTrafficManagerProfileMonitorConfigArrayInput` via:
//
//	GetTrafficManagerProfileMonitorConfigArray{ GetTrafficManagerProfileMonitorConfigArgs{...} }
type GetTrafficManagerProfileMonitorConfigArrayInput interface {
	pulumi.Input

	ToGetTrafficManagerProfileMonitorConfigArrayOutput() GetTrafficManagerProfileMonitorConfigArrayOutput
	ToGetTrafficManagerProfileMonitorConfigArrayOutputWithContext(context.Context) GetTrafficManagerProfileMonitorConfigArrayOutput
}

type GetTrafficManagerProfileMonitorConfigArray []GetTrafficManagerProfileMonitorConfigInput

func (GetTrafficManagerProfileMonitorConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficManagerProfileMonitorConfig)(nil)).Elem()
}

func (i GetTrafficManagerProfileMonitorConfigArray) ToGetTrafficManagerProfileMonitorConfigArrayOutput() GetTrafficManagerProfileMonitorConfigArrayOutput {
	return i.ToGetTrafficManagerProfileMonitorConfigArrayOutputWithContext(context.Background())
}

func (i GetTrafficManagerProfileMonitorConfigArray) ToGetTrafficManagerProfileMonitorConfigArrayOutputWithContext(ctx context.Context) GetTrafficManagerProfileMonitorConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficManagerProfileMonitorConfigArrayOutput)
}

type GetTrafficManagerProfileMonitorConfigOutput struct{ *pulumi.OutputState }

func (GetTrafficManagerProfileMonitorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficManagerProfileMonitorConfig)(nil)).Elem()
}

func (o GetTrafficManagerProfileMonitorConfigOutput) ToGetTrafficManagerProfileMonitorConfigOutput() GetTrafficManagerProfileMonitorConfigOutput {
	return o
}

func (o GetTrafficManagerProfileMonitorConfigOutput) ToGetTrafficManagerProfileMonitorConfigOutputWithContext(ctx context.Context) GetTrafficManagerProfileMonitorConfigOutput {
	return o
}

// One or more `customHeader` blocks as defined below.
func (o GetTrafficManagerProfileMonitorConfigOutput) CustomHeaders() GetTrafficManagerProfileMonitorConfigCustomHeaderArrayOutput {
	return o.ApplyT(func(v GetTrafficManagerProfileMonitorConfig) []GetTrafficManagerProfileMonitorConfigCustomHeader {
		return v.CustomHeaders
	}).(GetTrafficManagerProfileMonitorConfigCustomHeaderArrayOutput)
}

// A list of status code ranges.
func (o GetTrafficManagerProfileMonitorConfigOutput) ExpectedStatusCodeRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTrafficManagerProfileMonitorConfig) []string { return v.ExpectedStatusCodeRanges }).(pulumi.StringArrayOutput)
}

// The interval used to check the endpoint health from a Traffic Manager probing agent.
func (o GetTrafficManagerProfileMonitorConfigOutput) IntervalInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetTrafficManagerProfileMonitorConfig) int { return v.IntervalInSeconds }).(pulumi.IntOutput)
}

// The path used by the monitoring checks.
func (o GetTrafficManagerProfileMonitorConfigOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficManagerProfileMonitorConfig) string { return v.Path }).(pulumi.StringOutput)
}

// The port number used by the monitoring checks.
func (o GetTrafficManagerProfileMonitorConfigOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetTrafficManagerProfileMonitorConfig) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol used by the monitoring checks.
func (o GetTrafficManagerProfileMonitorConfigOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficManagerProfileMonitorConfig) string { return v.Protocol }).(pulumi.StringOutput)
}

// The amount of time the Traffic Manager probing agent should wait before considering that check a failure when a health check probe is sent to the endpoint.
func (o GetTrafficManagerProfileMonitorConfigOutput) TimeoutInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetTrafficManagerProfileMonitorConfig) int { return v.TimeoutInSeconds }).(pulumi.IntOutput)
}

// The number of failures a Traffic Manager probing agent tolerates before marking that endpoint as unhealthy.
func (o GetTrafficManagerProfileMonitorConfigOutput) ToleratedNumberOfFailures() pulumi.IntOutput {
	return o.ApplyT(func(v GetTrafficManagerProfileMonitorConfig) int { return v.ToleratedNumberOfFailures }).(pulumi.IntOutput)
}

type GetTrafficManagerProfileMonitorConfigArrayOutput struct{ *pulumi.OutputState }

func (GetTrafficManagerProfileMonitorConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficManagerProfileMonitorConfig)(nil)).Elem()
}

func (o GetTrafficManagerProfileMonitorConfigArrayOutput) ToGetTrafficManagerProfileMonitorConfigArrayOutput() GetTrafficManagerProfileMonitorConfigArrayOutput {
	return o
}

func (o GetTrafficManagerProfileMonitorConfigArrayOutput) ToGetTrafficManagerProfileMonitorConfigArrayOutputWithContext(ctx context.Context) GetTrafficManagerProfileMonitorConfigArrayOutput {
	return o
}

func (o GetTrafficManagerProfileMonitorConfigArrayOutput) Index(i pulumi.IntInput) GetTrafficManagerProfileMonitorConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTrafficManagerProfileMonitorConfig {
		return vs[0].([]GetTrafficManagerProfileMonitorConfig)[vs[1].(int)]
	}).(GetTrafficManagerProfileMonitorConfigOutput)
}

type GetTrafficManagerProfileMonitorConfigCustomHeader struct {
	// Specifies the name of the Traffic Manager Profile.
	Name string `pulumi:"name"`
	// The value of custom header. Applicable for HTTP and HTTPS protocol.
	Value string `pulumi:"value"`
}

// GetTrafficManagerProfileMonitorConfigCustomHeaderInput is an input type that accepts GetTrafficManagerProfileMonitorConfigCustomHeaderArgs and GetTrafficManagerProfileMonitorConfigCustomHeaderOutput values.
// You can construct a concrete instance of `GetTrafficManagerProfileMonitorConfigCustomHeaderInput` via:
//
//	GetTrafficManagerProfileMonitorConfigCustomHeaderArgs{...}
type GetTrafficManagerProfileMonitorConfigCustomHeaderInput interface {
	pulumi.Input

	ToGetTrafficManagerProfileMonitorConfigCustomHeaderOutput() GetTrafficManagerProfileMonitorConfigCustomHeaderOutput
	ToGetTrafficManagerProfileMonitorConfigCustomHeaderOutputWithContext(context.Context) GetTrafficManagerProfileMonitorConfigCustomHeaderOutput
}

type GetTrafficManagerProfileMonitorConfigCustomHeaderArgs struct {
	// Specifies the name of the Traffic Manager Profile.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of custom header. Applicable for HTTP and HTTPS protocol.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetTrafficManagerProfileMonitorConfigCustomHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficManagerProfileMonitorConfigCustomHeader)(nil)).Elem()
}

func (i GetTrafficManagerProfileMonitorConfigCustomHeaderArgs) ToGetTrafficManagerProfileMonitorConfigCustomHeaderOutput() GetTrafficManagerProfileMonitorConfigCustomHeaderOutput {
	return i.ToGetTrafficManagerProfileMonitorConfigCustomHeaderOutputWithContext(context.Background())
}

func (i GetTrafficManagerProfileMonitorConfigCustomHeaderArgs) ToGetTrafficManagerProfileMonitorConfigCustomHeaderOutputWithContext(ctx context.Context) GetTrafficManagerProfileMonitorConfigCustomHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficManagerProfileMonitorConfigCustomHeaderOutput)
}

// GetTrafficManagerProfileMonitorConfigCustomHeaderArrayInput is an input type that accepts GetTrafficManagerProfileMonitorConfigCustomHeaderArray and GetTrafficManagerProfileMonitorConfigCustomHeaderArrayOutput values.
// You can construct a concrete instance of `GetTrafficManagerProfileMonitorConfigCustomHeaderArrayInput` via:
//
//	GetTrafficManagerProfileMonitorConfigCustomHeaderArray{ GetTrafficManagerProfileMonitorConfigCustomHeaderArgs{...} }
type GetTrafficManagerProfileMonitorConfigCustomHeaderArrayInput interface {
	pulumi.Input

	ToGetTrafficManagerProfileMonitorConfigCustomHeaderArrayOutput() GetTrafficManagerProfileMonitorConfigCustomHeaderArrayOutput
	ToGetTrafficManagerProfileMonitorConfigCustomHeaderArrayOutputWithContext(context.Context) GetTrafficManagerProfileMonitorConfigCustomHeaderArrayOutput
}

type GetTrafficManagerProfileMonitorConfigCustomHeaderArray []GetTrafficManagerProfileMonitorConfigCustomHeaderInput

func (GetTrafficManagerProfileMonitorConfigCustomHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficManagerProfileMonitorConfigCustomHeader)(nil)).Elem()
}

func (i GetTrafficManagerProfileMonitorConfigCustomHeaderArray) ToGetTrafficManagerProfileMonitorConfigCustomHeaderArrayOutput() GetTrafficManagerProfileMonitorConfigCustomHeaderArrayOutput {
	return i.ToGetTrafficManagerProfileMonitorConfigCustomHeaderArrayOutputWithContext(context.Background())
}

func (i GetTrafficManagerProfileMonitorConfigCustomHeaderArray) ToGetTrafficManagerProfileMonitorConfigCustomHeaderArrayOutputWithContext(ctx context.Context) GetTrafficManagerProfileMonitorConfigCustomHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficManagerProfileMonitorConfigCustomHeaderArrayOutput)
}

type GetTrafficManagerProfileMonitorConfigCustomHeaderOutput struct{ *pulumi.OutputState }

func (GetTrafficManagerProfileMonitorConfigCustomHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficManagerProfileMonitorConfigCustomHeader)(nil)).Elem()
}

func (o GetTrafficManagerProfileMonitorConfigCustomHeaderOutput) ToGetTrafficManagerProfileMonitorConfigCustomHeaderOutput() GetTrafficManagerProfileMonitorConfigCustomHeaderOutput {
	return o
}

func (o GetTrafficManagerProfileMonitorConfigCustomHeaderOutput) ToGetTrafficManagerProfileMonitorConfigCustomHeaderOutputWithContext(ctx context.Context) GetTrafficManagerProfileMonitorConfigCustomHeaderOutput {
	return o
}

// Specifies the name of the Traffic Manager Profile.
func (o GetTrafficManagerProfileMonitorConfigCustomHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficManagerProfileMonitorConfigCustomHeader) string { return v.Name }).(pulumi.StringOutput)
}

// The value of custom header. Applicable for HTTP and HTTPS protocol.
func (o GetTrafficManagerProfileMonitorConfigCustomHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficManagerProfileMonitorConfigCustomHeader) string { return v.Value }).(pulumi.StringOutput)
}

type GetTrafficManagerProfileMonitorConfigCustomHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetTrafficManagerProfileMonitorConfigCustomHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficManagerProfileMonitorConfigCustomHeader)(nil)).Elem()
}

func (o GetTrafficManagerProfileMonitorConfigCustomHeaderArrayOutput) ToGetTrafficManagerProfileMonitorConfigCustomHeaderArrayOutput() GetTrafficManagerProfileMonitorConfigCustomHeaderArrayOutput {
	return o
}

func (o GetTrafficManagerProfileMonitorConfigCustomHeaderArrayOutput) ToGetTrafficManagerProfileMonitorConfigCustomHeaderArrayOutputWithContext(ctx context.Context) GetTrafficManagerProfileMonitorConfigCustomHeaderArrayOutput {
	return o
}

func (o GetTrafficManagerProfileMonitorConfigCustomHeaderArrayOutput) Index(i pulumi.IntInput) GetTrafficManagerProfileMonitorConfigCustomHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTrafficManagerProfileMonitorConfigCustomHeader {
		return vs[0].([]GetTrafficManagerProfileMonitorConfigCustomHeader)[vs[1].(int)]
	}).(GetTrafficManagerProfileMonitorConfigCustomHeaderOutput)
}

type GetVirtualHubConnectionRouting struct {
	// The ID of the route table associated with this Virtual Hub connection.
	AssociatedRouteTableId string `pulumi:"associatedRouteTableId"`
	// The ID of the Route Map associated with this Routing Configuration for inbound learned routes.
	InboundRouteMapId string `pulumi:"inboundRouteMapId"`
	// The ID of the Route Map associated with this Routing Configuration for outbound advertised routes.
	OutboundRouteMapId string `pulumi:"outboundRouteMapId"`
	// A `propagatedRouteTable` block as defined below.
	PropagatedRouteTables []GetVirtualHubConnectionRoutingPropagatedRouteTable `pulumi:"propagatedRouteTables"`
	// The static VNet local route override criteria that is used to determine whether NVA in spoke VNet is bypassed for traffic with destination in spoke VNet.
	StaticVnetLocalRouteOverrideCriteria string `pulumi:"staticVnetLocalRouteOverrideCriteria"`
	// A `staticVnetRoute` block as defined below.
	StaticVnetRoutes []GetVirtualHubConnectionRoutingStaticVnetRoute `pulumi:"staticVnetRoutes"`
}

// GetVirtualHubConnectionRoutingInput is an input type that accepts GetVirtualHubConnectionRoutingArgs and GetVirtualHubConnectionRoutingOutput values.
// You can construct a concrete instance of `GetVirtualHubConnectionRoutingInput` via:
//
//	GetVirtualHubConnectionRoutingArgs{...}
type GetVirtualHubConnectionRoutingInput interface {
	pulumi.Input

	ToGetVirtualHubConnectionRoutingOutput() GetVirtualHubConnectionRoutingOutput
	ToGetVirtualHubConnectionRoutingOutputWithContext(context.Context) GetVirtualHubConnectionRoutingOutput
}

type GetVirtualHubConnectionRoutingArgs struct {
	// The ID of the route table associated with this Virtual Hub connection.
	AssociatedRouteTableId pulumi.StringInput `pulumi:"associatedRouteTableId"`
	// The ID of the Route Map associated with this Routing Configuration for inbound learned routes.
	InboundRouteMapId pulumi.StringInput `pulumi:"inboundRouteMapId"`
	// The ID of the Route Map associated with this Routing Configuration for outbound advertised routes.
	OutboundRouteMapId pulumi.StringInput `pulumi:"outboundRouteMapId"`
	// A `propagatedRouteTable` block as defined below.
	PropagatedRouteTables GetVirtualHubConnectionRoutingPropagatedRouteTableArrayInput `pulumi:"propagatedRouteTables"`
	// The static VNet local route override criteria that is used to determine whether NVA in spoke VNet is bypassed for traffic with destination in spoke VNet.
	StaticVnetLocalRouteOverrideCriteria pulumi.StringInput `pulumi:"staticVnetLocalRouteOverrideCriteria"`
	// A `staticVnetRoute` block as defined below.
	StaticVnetRoutes GetVirtualHubConnectionRoutingStaticVnetRouteArrayInput `pulumi:"staticVnetRoutes"`
}

func (GetVirtualHubConnectionRoutingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualHubConnectionRouting)(nil)).Elem()
}

func (i GetVirtualHubConnectionRoutingArgs) ToGetVirtualHubConnectionRoutingOutput() GetVirtualHubConnectionRoutingOutput {
	return i.ToGetVirtualHubConnectionRoutingOutputWithContext(context.Background())
}

func (i GetVirtualHubConnectionRoutingArgs) ToGetVirtualHubConnectionRoutingOutputWithContext(ctx context.Context) GetVirtualHubConnectionRoutingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualHubConnectionRoutingOutput)
}

// GetVirtualHubConnectionRoutingArrayInput is an input type that accepts GetVirtualHubConnectionRoutingArray and GetVirtualHubConnectionRoutingArrayOutput values.
// You can construct a concrete instance of `GetVirtualHubConnectionRoutingArrayInput` via:
//
//	GetVirtualHubConnectionRoutingArray{ GetVirtualHubConnectionRoutingArgs{...} }
type GetVirtualHubConnectionRoutingArrayInput interface {
	pulumi.Input

	ToGetVirtualHubConnectionRoutingArrayOutput() GetVirtualHubConnectionRoutingArrayOutput
	ToGetVirtualHubConnectionRoutingArrayOutputWithContext(context.Context) GetVirtualHubConnectionRoutingArrayOutput
}

type GetVirtualHubConnectionRoutingArray []GetVirtualHubConnectionRoutingInput

func (GetVirtualHubConnectionRoutingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualHubConnectionRouting)(nil)).Elem()
}

func (i GetVirtualHubConnectionRoutingArray) ToGetVirtualHubConnectionRoutingArrayOutput() GetVirtualHubConnectionRoutingArrayOutput {
	return i.ToGetVirtualHubConnectionRoutingArrayOutputWithContext(context.Background())
}

func (i GetVirtualHubConnectionRoutingArray) ToGetVirtualHubConnectionRoutingArrayOutputWithContext(ctx context.Context) GetVirtualHubConnectionRoutingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualHubConnectionRoutingArrayOutput)
}

type GetVirtualHubConnectionRoutingOutput struct{ *pulumi.OutputState }

func (GetVirtualHubConnectionRoutingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualHubConnectionRouting)(nil)).Elem()
}

func (o GetVirtualHubConnectionRoutingOutput) ToGetVirtualHubConnectionRoutingOutput() GetVirtualHubConnectionRoutingOutput {
	return o
}

func (o GetVirtualHubConnectionRoutingOutput) ToGetVirtualHubConnectionRoutingOutputWithContext(ctx context.Context) GetVirtualHubConnectionRoutingOutput {
	return o
}

// The ID of the route table associated with this Virtual Hub connection.
func (o GetVirtualHubConnectionRoutingOutput) AssociatedRouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualHubConnectionRouting) string { return v.AssociatedRouteTableId }).(pulumi.StringOutput)
}

// The ID of the Route Map associated with this Routing Configuration for inbound learned routes.
func (o GetVirtualHubConnectionRoutingOutput) InboundRouteMapId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualHubConnectionRouting) string { return v.InboundRouteMapId }).(pulumi.StringOutput)
}

// The ID of the Route Map associated with this Routing Configuration for outbound advertised routes.
func (o GetVirtualHubConnectionRoutingOutput) OutboundRouteMapId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualHubConnectionRouting) string { return v.OutboundRouteMapId }).(pulumi.StringOutput)
}

// A `propagatedRouteTable` block as defined below.
func (o GetVirtualHubConnectionRoutingOutput) PropagatedRouteTables() GetVirtualHubConnectionRoutingPropagatedRouteTableArrayOutput {
	return o.ApplyT(func(v GetVirtualHubConnectionRouting) []GetVirtualHubConnectionRoutingPropagatedRouteTable {
		return v.PropagatedRouteTables
	}).(GetVirtualHubConnectionRoutingPropagatedRouteTableArrayOutput)
}

// The static VNet local route override criteria that is used to determine whether NVA in spoke VNet is bypassed for traffic with destination in spoke VNet.
func (o GetVirtualHubConnectionRoutingOutput) StaticVnetLocalRouteOverrideCriteria() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualHubConnectionRouting) string { return v.StaticVnetLocalRouteOverrideCriteria }).(pulumi.StringOutput)
}

// A `staticVnetRoute` block as defined below.
func (o GetVirtualHubConnectionRoutingOutput) StaticVnetRoutes() GetVirtualHubConnectionRoutingStaticVnetRouteArrayOutput {
	return o.ApplyT(func(v GetVirtualHubConnectionRouting) []GetVirtualHubConnectionRoutingStaticVnetRoute {
		return v.StaticVnetRoutes
	}).(GetVirtualHubConnectionRoutingStaticVnetRouteArrayOutput)
}

type GetVirtualHubConnectionRoutingArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualHubConnectionRoutingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualHubConnectionRouting)(nil)).Elem()
}

func (o GetVirtualHubConnectionRoutingArrayOutput) ToGetVirtualHubConnectionRoutingArrayOutput() GetVirtualHubConnectionRoutingArrayOutput {
	return o
}

func (o GetVirtualHubConnectionRoutingArrayOutput) ToGetVirtualHubConnectionRoutingArrayOutputWithContext(ctx context.Context) GetVirtualHubConnectionRoutingArrayOutput {
	return o
}

func (o GetVirtualHubConnectionRoutingArrayOutput) Index(i pulumi.IntInput) GetVirtualHubConnectionRoutingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualHubConnectionRouting {
		return vs[0].([]GetVirtualHubConnectionRouting)[vs[1].(int)]
	}).(GetVirtualHubConnectionRoutingOutput)
}

type GetVirtualHubConnectionRoutingPropagatedRouteTable struct {
	// The list of labels assigned to this route table.
	Labels []string `pulumi:"labels"`
	// A list of Route Table IDs associated with this Virtual Hub Connection.
	RouteTableIds []string `pulumi:"routeTableIds"`
}

// GetVirtualHubConnectionRoutingPropagatedRouteTableInput is an input type that accepts GetVirtualHubConnectionRoutingPropagatedRouteTableArgs and GetVirtualHubConnectionRoutingPropagatedRouteTableOutput values.
// You can construct a concrete instance of `GetVirtualHubConnectionRoutingPropagatedRouteTableInput` via:
//
//	GetVirtualHubConnectionRoutingPropagatedRouteTableArgs{...}
type GetVirtualHubConnectionRoutingPropagatedRouteTableInput interface {
	pulumi.Input

	ToGetVirtualHubConnectionRoutingPropagatedRouteTableOutput() GetVirtualHubConnectionRoutingPropagatedRouteTableOutput
	ToGetVirtualHubConnectionRoutingPropagatedRouteTableOutputWithContext(context.Context) GetVirtualHubConnectionRoutingPropagatedRouteTableOutput
}

type GetVirtualHubConnectionRoutingPropagatedRouteTableArgs struct {
	// The list of labels assigned to this route table.
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// A list of Route Table IDs associated with this Virtual Hub Connection.
	RouteTableIds pulumi.StringArrayInput `pulumi:"routeTableIds"`
}

func (GetVirtualHubConnectionRoutingPropagatedRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualHubConnectionRoutingPropagatedRouteTable)(nil)).Elem()
}

func (i GetVirtualHubConnectionRoutingPropagatedRouteTableArgs) ToGetVirtualHubConnectionRoutingPropagatedRouteTableOutput() GetVirtualHubConnectionRoutingPropagatedRouteTableOutput {
	return i.ToGetVirtualHubConnectionRoutingPropagatedRouteTableOutputWithContext(context.Background())
}

func (i GetVirtualHubConnectionRoutingPropagatedRouteTableArgs) ToGetVirtualHubConnectionRoutingPropagatedRouteTableOutputWithContext(ctx context.Context) GetVirtualHubConnectionRoutingPropagatedRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualHubConnectionRoutingPropagatedRouteTableOutput)
}

// GetVirtualHubConnectionRoutingPropagatedRouteTableArrayInput is an input type that accepts GetVirtualHubConnectionRoutingPropagatedRouteTableArray and GetVirtualHubConnectionRoutingPropagatedRouteTableArrayOutput values.
// You can construct a concrete instance of `GetVirtualHubConnectionRoutingPropagatedRouteTableArrayInput` via:
//
//	GetVirtualHubConnectionRoutingPropagatedRouteTableArray{ GetVirtualHubConnectionRoutingPropagatedRouteTableArgs{...} }
type GetVirtualHubConnectionRoutingPropagatedRouteTableArrayInput interface {
	pulumi.Input

	ToGetVirtualHubConnectionRoutingPropagatedRouteTableArrayOutput() GetVirtualHubConnectionRoutingPropagatedRouteTableArrayOutput
	ToGetVirtualHubConnectionRoutingPropagatedRouteTableArrayOutputWithContext(context.Context) GetVirtualHubConnectionRoutingPropagatedRouteTableArrayOutput
}

type GetVirtualHubConnectionRoutingPropagatedRouteTableArray []GetVirtualHubConnectionRoutingPropagatedRouteTableInput

func (GetVirtualHubConnectionRoutingPropagatedRouteTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualHubConnectionRoutingPropagatedRouteTable)(nil)).Elem()
}

func (i GetVirtualHubConnectionRoutingPropagatedRouteTableArray) ToGetVirtualHubConnectionRoutingPropagatedRouteTableArrayOutput() GetVirtualHubConnectionRoutingPropagatedRouteTableArrayOutput {
	return i.ToGetVirtualHubConnectionRoutingPropagatedRouteTableArrayOutputWithContext(context.Background())
}

func (i GetVirtualHubConnectionRoutingPropagatedRouteTableArray) ToGetVirtualHubConnectionRoutingPropagatedRouteTableArrayOutputWithContext(ctx context.Context) GetVirtualHubConnectionRoutingPropagatedRouteTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualHubConnectionRoutingPropagatedRouteTableArrayOutput)
}

type GetVirtualHubConnectionRoutingPropagatedRouteTableOutput struct{ *pulumi.OutputState }

func (GetVirtualHubConnectionRoutingPropagatedRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualHubConnectionRoutingPropagatedRouteTable)(nil)).Elem()
}

func (o GetVirtualHubConnectionRoutingPropagatedRouteTableOutput) ToGetVirtualHubConnectionRoutingPropagatedRouteTableOutput() GetVirtualHubConnectionRoutingPropagatedRouteTableOutput {
	return o
}

func (o GetVirtualHubConnectionRoutingPropagatedRouteTableOutput) ToGetVirtualHubConnectionRoutingPropagatedRouteTableOutputWithContext(ctx context.Context) GetVirtualHubConnectionRoutingPropagatedRouteTableOutput {
	return o
}

// The list of labels assigned to this route table.
func (o GetVirtualHubConnectionRoutingPropagatedRouteTableOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVirtualHubConnectionRoutingPropagatedRouteTable) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// A list of Route Table IDs associated with this Virtual Hub Connection.
func (o GetVirtualHubConnectionRoutingPropagatedRouteTableOutput) RouteTableIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVirtualHubConnectionRoutingPropagatedRouteTable) []string { return v.RouteTableIds }).(pulumi.StringArrayOutput)
}

type GetVirtualHubConnectionRoutingPropagatedRouteTableArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualHubConnectionRoutingPropagatedRouteTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualHubConnectionRoutingPropagatedRouteTable)(nil)).Elem()
}

func (o GetVirtualHubConnectionRoutingPropagatedRouteTableArrayOutput) ToGetVirtualHubConnectionRoutingPropagatedRouteTableArrayOutput() GetVirtualHubConnectionRoutingPropagatedRouteTableArrayOutput {
	return o
}

func (o GetVirtualHubConnectionRoutingPropagatedRouteTableArrayOutput) ToGetVirtualHubConnectionRoutingPropagatedRouteTableArrayOutputWithContext(ctx context.Context) GetVirtualHubConnectionRoutingPropagatedRouteTableArrayOutput {
	return o
}

func (o GetVirtualHubConnectionRoutingPropagatedRouteTableArrayOutput) Index(i pulumi.IntInput) GetVirtualHubConnectionRoutingPropagatedRouteTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualHubConnectionRoutingPropagatedRouteTable {
		return vs[0].([]GetVirtualHubConnectionRoutingPropagatedRouteTable)[vs[1].(int)]
	}).(GetVirtualHubConnectionRoutingPropagatedRouteTableOutput)
}

type GetVirtualHubConnectionRoutingStaticVnetRoute struct {
	// A list of CIDR Ranges which is used as Address Prefixes.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// The name of the Connection which should be retrieved.
	Name string `pulumi:"name"`
	// The IP Address which is used for the Next Hop.
	NextHopIpAddress string `pulumi:"nextHopIpAddress"`
}

// GetVirtualHubConnectionRoutingStaticVnetRouteInput is an input type that accepts GetVirtualHubConnectionRoutingStaticVnetRouteArgs and GetVirtualHubConnectionRoutingStaticVnetRouteOutput values.
// You can construct a concrete instance of `GetVirtualHubConnectionRoutingStaticVnetRouteInput` via:
//
//	GetVirtualHubConnectionRoutingStaticVnetRouteArgs{...}
type GetVirtualHubConnectionRoutingStaticVnetRouteInput interface {
	pulumi.Input

	ToGetVirtualHubConnectionRoutingStaticVnetRouteOutput() GetVirtualHubConnectionRoutingStaticVnetRouteOutput
	ToGetVirtualHubConnectionRoutingStaticVnetRouteOutputWithContext(context.Context) GetVirtualHubConnectionRoutingStaticVnetRouteOutput
}

type GetVirtualHubConnectionRoutingStaticVnetRouteArgs struct {
	// A list of CIDR Ranges which is used as Address Prefixes.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
	// The name of the Connection which should be retrieved.
	Name pulumi.StringInput `pulumi:"name"`
	// The IP Address which is used for the Next Hop.
	NextHopIpAddress pulumi.StringInput `pulumi:"nextHopIpAddress"`
}

func (GetVirtualHubConnectionRoutingStaticVnetRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualHubConnectionRoutingStaticVnetRoute)(nil)).Elem()
}

func (i GetVirtualHubConnectionRoutingStaticVnetRouteArgs) ToGetVirtualHubConnectionRoutingStaticVnetRouteOutput() GetVirtualHubConnectionRoutingStaticVnetRouteOutput {
	return i.ToGetVirtualHubConnectionRoutingStaticVnetRouteOutputWithContext(context.Background())
}

func (i GetVirtualHubConnectionRoutingStaticVnetRouteArgs) ToGetVirtualHubConnectionRoutingStaticVnetRouteOutputWithContext(ctx context.Context) GetVirtualHubConnectionRoutingStaticVnetRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualHubConnectionRoutingStaticVnetRouteOutput)
}

// GetVirtualHubConnectionRoutingStaticVnetRouteArrayInput is an input type that accepts GetVirtualHubConnectionRoutingStaticVnetRouteArray and GetVirtualHubConnectionRoutingStaticVnetRouteArrayOutput values.
// You can construct a concrete instance of `GetVirtualHubConnectionRoutingStaticVnetRouteArrayInput` via:
//
//	GetVirtualHubConnectionRoutingStaticVnetRouteArray{ GetVirtualHubConnectionRoutingStaticVnetRouteArgs{...} }
type GetVirtualHubConnectionRoutingStaticVnetRouteArrayInput interface {
	pulumi.Input

	ToGetVirtualHubConnectionRoutingStaticVnetRouteArrayOutput() GetVirtualHubConnectionRoutingStaticVnetRouteArrayOutput
	ToGetVirtualHubConnectionRoutingStaticVnetRouteArrayOutputWithContext(context.Context) GetVirtualHubConnectionRoutingStaticVnetRouteArrayOutput
}

type GetVirtualHubConnectionRoutingStaticVnetRouteArray []GetVirtualHubConnectionRoutingStaticVnetRouteInput

func (GetVirtualHubConnectionRoutingStaticVnetRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualHubConnectionRoutingStaticVnetRoute)(nil)).Elem()
}

func (i GetVirtualHubConnectionRoutingStaticVnetRouteArray) ToGetVirtualHubConnectionRoutingStaticVnetRouteArrayOutput() GetVirtualHubConnectionRoutingStaticVnetRouteArrayOutput {
	return i.ToGetVirtualHubConnectionRoutingStaticVnetRouteArrayOutputWithContext(context.Background())
}

func (i GetVirtualHubConnectionRoutingStaticVnetRouteArray) ToGetVirtualHubConnectionRoutingStaticVnetRouteArrayOutputWithContext(ctx context.Context) GetVirtualHubConnectionRoutingStaticVnetRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualHubConnectionRoutingStaticVnetRouteArrayOutput)
}

type GetVirtualHubConnectionRoutingStaticVnetRouteOutput struct{ *pulumi.OutputState }

func (GetVirtualHubConnectionRoutingStaticVnetRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualHubConnectionRoutingStaticVnetRoute)(nil)).Elem()
}

func (o GetVirtualHubConnectionRoutingStaticVnetRouteOutput) ToGetVirtualHubConnectionRoutingStaticVnetRouteOutput() GetVirtualHubConnectionRoutingStaticVnetRouteOutput {
	return o
}

func (o GetVirtualHubConnectionRoutingStaticVnetRouteOutput) ToGetVirtualHubConnectionRoutingStaticVnetRouteOutputWithContext(ctx context.Context) GetVirtualHubConnectionRoutingStaticVnetRouteOutput {
	return o
}

// A list of CIDR Ranges which is used as Address Prefixes.
func (o GetVirtualHubConnectionRoutingStaticVnetRouteOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVirtualHubConnectionRoutingStaticVnetRoute) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// The name of the Connection which should be retrieved.
func (o GetVirtualHubConnectionRoutingStaticVnetRouteOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualHubConnectionRoutingStaticVnetRoute) string { return v.Name }).(pulumi.StringOutput)
}

// The IP Address which is used for the Next Hop.
func (o GetVirtualHubConnectionRoutingStaticVnetRouteOutput) NextHopIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualHubConnectionRoutingStaticVnetRoute) string { return v.NextHopIpAddress }).(pulumi.StringOutput)
}

type GetVirtualHubConnectionRoutingStaticVnetRouteArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualHubConnectionRoutingStaticVnetRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualHubConnectionRoutingStaticVnetRoute)(nil)).Elem()
}

func (o GetVirtualHubConnectionRoutingStaticVnetRouteArrayOutput) ToGetVirtualHubConnectionRoutingStaticVnetRouteArrayOutput() GetVirtualHubConnectionRoutingStaticVnetRouteArrayOutput {
	return o
}

func (o GetVirtualHubConnectionRoutingStaticVnetRouteArrayOutput) ToGetVirtualHubConnectionRoutingStaticVnetRouteArrayOutputWithContext(ctx context.Context) GetVirtualHubConnectionRoutingStaticVnetRouteArrayOutput {
	return o
}

func (o GetVirtualHubConnectionRoutingStaticVnetRouteArrayOutput) Index(i pulumi.IntInput) GetVirtualHubConnectionRoutingStaticVnetRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualHubConnectionRoutingStaticVnetRoute {
		return vs[0].([]GetVirtualHubConnectionRoutingStaticVnetRoute)[vs[1].(int)]
	}).(GetVirtualHubConnectionRoutingStaticVnetRouteOutput)
}

type GetVirtualHubRouteTableRouteType struct {
	// A list of destination addresses for this route.
	Destinations []string `pulumi:"destinations"`
	// The type of destinations.
	DestinationsType string `pulumi:"destinationsType"`
	// The name of the Virtual Hub Route Table.
	Name string `pulumi:"name"`
	// The next hop's resource ID.
	NextHop string `pulumi:"nextHop"`
	// The type of next hop.
	NextHopType string `pulumi:"nextHopType"`
}

// GetVirtualHubRouteTableRouteTypeInput is an input type that accepts GetVirtualHubRouteTableRouteTypeArgs and GetVirtualHubRouteTableRouteTypeOutput values.
// You can construct a concrete instance of `GetVirtualHubRouteTableRouteTypeInput` via:
//
//	GetVirtualHubRouteTableRouteTypeArgs{...}
type GetVirtualHubRouteTableRouteTypeInput interface {
	pulumi.Input

	ToGetVirtualHubRouteTableRouteTypeOutput() GetVirtualHubRouteTableRouteTypeOutput
	ToGetVirtualHubRouteTableRouteTypeOutputWithContext(context.Context) GetVirtualHubRouteTableRouteTypeOutput
}

type GetVirtualHubRouteTableRouteTypeArgs struct {
	// A list of destination addresses for this route.
	Destinations pulumi.StringArrayInput `pulumi:"destinations"`
	// The type of destinations.
	DestinationsType pulumi.StringInput `pulumi:"destinationsType"`
	// The name of the Virtual Hub Route Table.
	Name pulumi.StringInput `pulumi:"name"`
	// The next hop's resource ID.
	NextHop pulumi.StringInput `pulumi:"nextHop"`
	// The type of next hop.
	NextHopType pulumi.StringInput `pulumi:"nextHopType"`
}

func (GetVirtualHubRouteTableRouteTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualHubRouteTableRouteType)(nil)).Elem()
}

func (i GetVirtualHubRouteTableRouteTypeArgs) ToGetVirtualHubRouteTableRouteTypeOutput() GetVirtualHubRouteTableRouteTypeOutput {
	return i.ToGetVirtualHubRouteTableRouteTypeOutputWithContext(context.Background())
}

func (i GetVirtualHubRouteTableRouteTypeArgs) ToGetVirtualHubRouteTableRouteTypeOutputWithContext(ctx context.Context) GetVirtualHubRouteTableRouteTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualHubRouteTableRouteTypeOutput)
}

// GetVirtualHubRouteTableRouteTypeArrayInput is an input type that accepts GetVirtualHubRouteTableRouteTypeArray and GetVirtualHubRouteTableRouteTypeArrayOutput values.
// You can construct a concrete instance of `GetVirtualHubRouteTableRouteTypeArrayInput` via:
//
//	GetVirtualHubRouteTableRouteTypeArray{ GetVirtualHubRouteTableRouteTypeArgs{...} }
type GetVirtualHubRouteTableRouteTypeArrayInput interface {
	pulumi.Input

	ToGetVirtualHubRouteTableRouteTypeArrayOutput() GetVirtualHubRouteTableRouteTypeArrayOutput
	ToGetVirtualHubRouteTableRouteTypeArrayOutputWithContext(context.Context) GetVirtualHubRouteTableRouteTypeArrayOutput
}

type GetVirtualHubRouteTableRouteTypeArray []GetVirtualHubRouteTableRouteTypeInput

func (GetVirtualHubRouteTableRouteTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualHubRouteTableRouteType)(nil)).Elem()
}

func (i GetVirtualHubRouteTableRouteTypeArray) ToGetVirtualHubRouteTableRouteTypeArrayOutput() GetVirtualHubRouteTableRouteTypeArrayOutput {
	return i.ToGetVirtualHubRouteTableRouteTypeArrayOutputWithContext(context.Background())
}

func (i GetVirtualHubRouteTableRouteTypeArray) ToGetVirtualHubRouteTableRouteTypeArrayOutputWithContext(ctx context.Context) GetVirtualHubRouteTableRouteTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualHubRouteTableRouteTypeArrayOutput)
}

type GetVirtualHubRouteTableRouteTypeOutput struct{ *pulumi.OutputState }

func (GetVirtualHubRouteTableRouteTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualHubRouteTableRouteType)(nil)).Elem()
}

func (o GetVirtualHubRouteTableRouteTypeOutput) ToGetVirtualHubRouteTableRouteTypeOutput() GetVirtualHubRouteTableRouteTypeOutput {
	return o
}

func (o GetVirtualHubRouteTableRouteTypeOutput) ToGetVirtualHubRouteTableRouteTypeOutputWithContext(ctx context.Context) GetVirtualHubRouteTableRouteTypeOutput {
	return o
}

// A list of destination addresses for this route.
func (o GetVirtualHubRouteTableRouteTypeOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVirtualHubRouteTableRouteType) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

// The type of destinations.
func (o GetVirtualHubRouteTableRouteTypeOutput) DestinationsType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualHubRouteTableRouteType) string { return v.DestinationsType }).(pulumi.StringOutput)
}

// The name of the Virtual Hub Route Table.
func (o GetVirtualHubRouteTableRouteTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualHubRouteTableRouteType) string { return v.Name }).(pulumi.StringOutput)
}

// The next hop's resource ID.
func (o GetVirtualHubRouteTableRouteTypeOutput) NextHop() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualHubRouteTableRouteType) string { return v.NextHop }).(pulumi.StringOutput)
}

// The type of next hop.
func (o GetVirtualHubRouteTableRouteTypeOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualHubRouteTableRouteType) string { return v.NextHopType }).(pulumi.StringOutput)
}

type GetVirtualHubRouteTableRouteTypeArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualHubRouteTableRouteTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualHubRouteTableRouteType)(nil)).Elem()
}

func (o GetVirtualHubRouteTableRouteTypeArrayOutput) ToGetVirtualHubRouteTableRouteTypeArrayOutput() GetVirtualHubRouteTableRouteTypeArrayOutput {
	return o
}

func (o GetVirtualHubRouteTableRouteTypeArrayOutput) ToGetVirtualHubRouteTableRouteTypeArrayOutputWithContext(ctx context.Context) GetVirtualHubRouteTableRouteTypeArrayOutput {
	return o
}

func (o GetVirtualHubRouteTableRouteTypeArrayOutput) Index(i pulumi.IntInput) GetVirtualHubRouteTableRouteTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualHubRouteTableRouteType {
		return vs[0].([]GetVirtualHubRouteTableRouteType)[vs[1].(int)]
	}).(GetVirtualHubRouteTableRouteTypeOutput)
}

type GetVirtualNetworkGatewayBgpSetting struct {
	// The Autonomous System Number (ASN) to use as part of the BGP.
	Asn int `pulumi:"asn"`
	// The weight added to routes which have been learned
	// through BGP peering.
	PeerWeight int `pulumi:"peerWeight"`
	// The BGP peer IP address of the virtual network
	// gateway. This address is needed to configure the created gateway as a BGP Peer
	// on the on-premises VPN devices.
	PeeringAddress string `pulumi:"peeringAddress"`
}

// GetVirtualNetworkGatewayBgpSettingInput is an input type that accepts GetVirtualNetworkGatewayBgpSettingArgs and GetVirtualNetworkGatewayBgpSettingOutput values.
// You can construct a concrete instance of `GetVirtualNetworkGatewayBgpSettingInput` via:
//
//	GetVirtualNetworkGatewayBgpSettingArgs{...}
type GetVirtualNetworkGatewayBgpSettingInput interface {
	pulumi.Input

	ToGetVirtualNetworkGatewayBgpSettingOutput() GetVirtualNetworkGatewayBgpSettingOutput
	ToGetVirtualNetworkGatewayBgpSettingOutputWithContext(context.Context) GetVirtualNetworkGatewayBgpSettingOutput
}

type GetVirtualNetworkGatewayBgpSettingArgs struct {
	// The Autonomous System Number (ASN) to use as part of the BGP.
	Asn pulumi.IntInput `pulumi:"asn"`
	// The weight added to routes which have been learned
	// through BGP peering.
	PeerWeight pulumi.IntInput `pulumi:"peerWeight"`
	// The BGP peer IP address of the virtual network
	// gateway. This address is needed to configure the created gateway as a BGP Peer
	// on the on-premises VPN devices.
	PeeringAddress pulumi.StringInput `pulumi:"peeringAddress"`
}

func (GetVirtualNetworkGatewayBgpSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNetworkGatewayBgpSetting)(nil)).Elem()
}

func (i GetVirtualNetworkGatewayBgpSettingArgs) ToGetVirtualNetworkGatewayBgpSettingOutput() GetVirtualNetworkGatewayBgpSettingOutput {
	return i.ToGetVirtualNetworkGatewayBgpSettingOutputWithContext(context.Background())
}

func (i GetVirtualNetworkGatewayBgpSettingArgs) ToGetVirtualNetworkGatewayBgpSettingOutputWithContext(ctx context.Context) GetVirtualNetworkGatewayBgpSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNetworkGatewayBgpSettingOutput)
}

// GetVirtualNetworkGatewayBgpSettingArrayInput is an input type that accepts GetVirtualNetworkGatewayBgpSettingArray and GetVirtualNetworkGatewayBgpSettingArrayOutput values.
// You can construct a concrete instance of `GetVirtualNetworkGatewayBgpSettingArrayInput` via:
//
//	GetVirtualNetworkGatewayBgpSettingArray{ GetVirtualNetworkGatewayBgpSettingArgs{...} }
type GetVirtualNetworkGatewayBgpSettingArrayInput interface {
	pulumi.Input

	ToGetVirtualNetworkGatewayBgpSettingArrayOutput() GetVirtualNetworkGatewayBgpSettingArrayOutput
	ToGetVirtualNetworkGatewayBgpSettingArrayOutputWithContext(context.Context) GetVirtualNetworkGatewayBgpSettingArrayOutput
}

type GetVirtualNetworkGatewayBgpSettingArray []GetVirtualNetworkGatewayBgpSettingInput

func (GetVirtualNetworkGatewayBgpSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNetworkGatewayBgpSetting)(nil)).Elem()
}

func (i GetVirtualNetworkGatewayBgpSettingArray) ToGetVirtualNetworkGatewayBgpSettingArrayOutput() GetVirtualNetworkGatewayBgpSettingArrayOutput {
	return i.ToGetVirtualNetworkGatewayBgpSettingArrayOutputWithContext(context.Background())
}

func (i GetVirtualNetworkGatewayBgpSettingArray) ToGetVirtualNetworkGatewayBgpSettingArrayOutputWithContext(ctx context.Context) GetVirtualNetworkGatewayBgpSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNetworkGatewayBgpSettingArrayOutput)
}

type GetVirtualNetworkGatewayBgpSettingOutput struct{ *pulumi.OutputState }

func (GetVirtualNetworkGatewayBgpSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNetworkGatewayBgpSetting)(nil)).Elem()
}

func (o GetVirtualNetworkGatewayBgpSettingOutput) ToGetVirtualNetworkGatewayBgpSettingOutput() GetVirtualNetworkGatewayBgpSettingOutput {
	return o
}

func (o GetVirtualNetworkGatewayBgpSettingOutput) ToGetVirtualNetworkGatewayBgpSettingOutputWithContext(ctx context.Context) GetVirtualNetworkGatewayBgpSettingOutput {
	return o
}

// The Autonomous System Number (ASN) to use as part of the BGP.
func (o GetVirtualNetworkGatewayBgpSettingOutput) Asn() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualNetworkGatewayBgpSetting) int { return v.Asn }).(pulumi.IntOutput)
}

// The weight added to routes which have been learned
// through BGP peering.
func (o GetVirtualNetworkGatewayBgpSettingOutput) PeerWeight() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualNetworkGatewayBgpSetting) int { return v.PeerWeight }).(pulumi.IntOutput)
}

// The BGP peer IP address of the virtual network
// gateway. This address is needed to configure the created gateway as a BGP Peer
// on the on-premises VPN devices.
func (o GetVirtualNetworkGatewayBgpSettingOutput) PeeringAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNetworkGatewayBgpSetting) string { return v.PeeringAddress }).(pulumi.StringOutput)
}

type GetVirtualNetworkGatewayBgpSettingArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNetworkGatewayBgpSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNetworkGatewayBgpSetting)(nil)).Elem()
}

func (o GetVirtualNetworkGatewayBgpSettingArrayOutput) ToGetVirtualNetworkGatewayBgpSettingArrayOutput() GetVirtualNetworkGatewayBgpSettingArrayOutput {
	return o
}

func (o GetVirtualNetworkGatewayBgpSettingArrayOutput) ToGetVirtualNetworkGatewayBgpSettingArrayOutputWithContext(ctx context.Context) GetVirtualNetworkGatewayBgpSettingArrayOutput {
	return o
}

func (o GetVirtualNetworkGatewayBgpSettingArrayOutput) Index(i pulumi.IntInput) GetVirtualNetworkGatewayBgpSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNetworkGatewayBgpSetting {
		return vs[0].([]GetVirtualNetworkGatewayBgpSetting)[vs[1].(int)]
	}).(GetVirtualNetworkGatewayBgpSettingOutput)
}

type GetVirtualNetworkGatewayCustomRoute struct {
	// A list of address blocks reserved for this virtual network in CIDR notation.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
}

// GetVirtualNetworkGatewayCustomRouteInput is an input type that accepts GetVirtualNetworkGatewayCustomRouteArgs and GetVirtualNetworkGatewayCustomRouteOutput values.
// You can construct a concrete instance of `GetVirtualNetworkGatewayCustomRouteInput` via:
//
//	GetVirtualNetworkGatewayCustomRouteArgs{...}
type GetVirtualNetworkGatewayCustomRouteInput interface {
	pulumi.Input

	ToGetVirtualNetworkGatewayCustomRouteOutput() GetVirtualNetworkGatewayCustomRouteOutput
	ToGetVirtualNetworkGatewayCustomRouteOutputWithContext(context.Context) GetVirtualNetworkGatewayCustomRouteOutput
}

type GetVirtualNetworkGatewayCustomRouteArgs struct {
	// A list of address blocks reserved for this virtual network in CIDR notation.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
}

func (GetVirtualNetworkGatewayCustomRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNetworkGatewayCustomRoute)(nil)).Elem()
}

func (i GetVirtualNetworkGatewayCustomRouteArgs) ToGetVirtualNetworkGatewayCustomRouteOutput() GetVirtualNetworkGatewayCustomRouteOutput {
	return i.ToGetVirtualNetworkGatewayCustomRouteOutputWithContext(context.Background())
}

func (i GetVirtualNetworkGatewayCustomRouteArgs) ToGetVirtualNetworkGatewayCustomRouteOutputWithContext(ctx context.Context) GetVirtualNetworkGatewayCustomRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNetworkGatewayCustomRouteOutput)
}

// GetVirtualNetworkGatewayCustomRouteArrayInput is an input type that accepts GetVirtualNetworkGatewayCustomRouteArray and GetVirtualNetworkGatewayCustomRouteArrayOutput values.
// You can construct a concrete instance of `GetVirtualNetworkGatewayCustomRouteArrayInput` via:
//
//	GetVirtualNetworkGatewayCustomRouteArray{ GetVirtualNetworkGatewayCustomRouteArgs{...} }
type GetVirtualNetworkGatewayCustomRouteArrayInput interface {
	pulumi.Input

	ToGetVirtualNetworkGatewayCustomRouteArrayOutput() GetVirtualNetworkGatewayCustomRouteArrayOutput
	ToGetVirtualNetworkGatewayCustomRouteArrayOutputWithContext(context.Context) GetVirtualNetworkGatewayCustomRouteArrayOutput
}

type GetVirtualNetworkGatewayCustomRouteArray []GetVirtualNetworkGatewayCustomRouteInput

func (GetVirtualNetworkGatewayCustomRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNetworkGatewayCustomRoute)(nil)).Elem()
}

func (i GetVirtualNetworkGatewayCustomRouteArray) ToGetVirtualNetworkGatewayCustomRouteArrayOutput() GetVirtualNetworkGatewayCustomRouteArrayOutput {
	return i.ToGetVirtualNetworkGatewayCustomRouteArrayOutputWithContext(context.Background())
}

func (i GetVirtualNetworkGatewayCustomRouteArray) ToGetVirtualNetworkGatewayCustomRouteArrayOutputWithContext(ctx context.Context) GetVirtualNetworkGatewayCustomRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNetworkGatewayCustomRouteArrayOutput)
}

type GetVirtualNetworkGatewayCustomRouteOutput struct{ *pulumi.OutputState }

func (GetVirtualNetworkGatewayCustomRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNetworkGatewayCustomRoute)(nil)).Elem()
}

func (o GetVirtualNetworkGatewayCustomRouteOutput) ToGetVirtualNetworkGatewayCustomRouteOutput() GetVirtualNetworkGatewayCustomRouteOutput {
	return o
}

func (o GetVirtualNetworkGatewayCustomRouteOutput) ToGetVirtualNetworkGatewayCustomRouteOutputWithContext(ctx context.Context) GetVirtualNetworkGatewayCustomRouteOutput {
	return o
}

// A list of address blocks reserved for this virtual network in CIDR notation.
func (o GetVirtualNetworkGatewayCustomRouteOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVirtualNetworkGatewayCustomRoute) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

type GetVirtualNetworkGatewayCustomRouteArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNetworkGatewayCustomRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNetworkGatewayCustomRoute)(nil)).Elem()
}

func (o GetVirtualNetworkGatewayCustomRouteArrayOutput) ToGetVirtualNetworkGatewayCustomRouteArrayOutput() GetVirtualNetworkGatewayCustomRouteArrayOutput {
	return o
}

func (o GetVirtualNetworkGatewayCustomRouteArrayOutput) ToGetVirtualNetworkGatewayCustomRouteArrayOutputWithContext(ctx context.Context) GetVirtualNetworkGatewayCustomRouteArrayOutput {
	return o
}

func (o GetVirtualNetworkGatewayCustomRouteArrayOutput) Index(i pulumi.IntInput) GetVirtualNetworkGatewayCustomRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNetworkGatewayCustomRoute {
		return vs[0].([]GetVirtualNetworkGatewayCustomRoute)[vs[1].(int)]
	}).(GetVirtualNetworkGatewayCustomRouteOutput)
}

type GetVirtualNetworkGatewayIpConfiguration struct {
	// The resource ID of the IP configuration.
	Id string `pulumi:"id"`
	// Specifies the name of the Virtual Network Gateway.
	Name string `pulumi:"name"`
	// The Private IP Address associated with the Virtual Network Gateway.
	PrivateIpAddress string `pulumi:"privateIpAddress"`
	// Defines how the private IP address
	// of the gateways virtual interface is assigned.
	PrivateIpAddressAllocation string `pulumi:"privateIpAddressAllocation"`
	// The ID of the Public IP Address associated
	// with the Virtual Network Gateway.
	PublicIpAddressId string `pulumi:"publicIpAddressId"`
	// The ID of the gateway subnet of a virtual network in
	// which the virtual network gateway will be created. It is mandatory that
	// the associated subnet is named `GatewaySubnet`. Therefore, each virtual
	// network can contain at most a single Virtual Network Gateway.
	SubnetId string `pulumi:"subnetId"`
}

// GetVirtualNetworkGatewayIpConfigurationInput is an input type that accepts GetVirtualNetworkGatewayIpConfigurationArgs and GetVirtualNetworkGatewayIpConfigurationOutput values.
// You can construct a concrete instance of `GetVirtualNetworkGatewayIpConfigurationInput` via:
//
//	GetVirtualNetworkGatewayIpConfigurationArgs{...}
type GetVirtualNetworkGatewayIpConfigurationInput interface {
	pulumi.Input

	ToGetVirtualNetworkGatewayIpConfigurationOutput() GetVirtualNetworkGatewayIpConfigurationOutput
	ToGetVirtualNetworkGatewayIpConfigurationOutputWithContext(context.Context) GetVirtualNetworkGatewayIpConfigurationOutput
}

type GetVirtualNetworkGatewayIpConfigurationArgs struct {
	// The resource ID of the IP configuration.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the name of the Virtual Network Gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// The Private IP Address associated with the Virtual Network Gateway.
	PrivateIpAddress pulumi.StringInput `pulumi:"privateIpAddress"`
	// Defines how the private IP address
	// of the gateways virtual interface is assigned.
	PrivateIpAddressAllocation pulumi.StringInput `pulumi:"privateIpAddressAllocation"`
	// The ID of the Public IP Address associated
	// with the Virtual Network Gateway.
	PublicIpAddressId pulumi.StringInput `pulumi:"publicIpAddressId"`
	// The ID of the gateway subnet of a virtual network in
	// which the virtual network gateway will be created. It is mandatory that
	// the associated subnet is named `GatewaySubnet`. Therefore, each virtual
	// network can contain at most a single Virtual Network Gateway.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetVirtualNetworkGatewayIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNetworkGatewayIpConfiguration)(nil)).Elem()
}

func (i GetVirtualNetworkGatewayIpConfigurationArgs) ToGetVirtualNetworkGatewayIpConfigurationOutput() GetVirtualNetworkGatewayIpConfigurationOutput {
	return i.ToGetVirtualNetworkGatewayIpConfigurationOutputWithContext(context.Background())
}

func (i GetVirtualNetworkGatewayIpConfigurationArgs) ToGetVirtualNetworkGatewayIpConfigurationOutputWithContext(ctx context.Context) GetVirtualNetworkGatewayIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNetworkGatewayIpConfigurationOutput)
}

// GetVirtualNetworkGatewayIpConfigurationArrayInput is an input type that accepts GetVirtualNetworkGatewayIpConfigurationArray and GetVirtualNetworkGatewayIpConfigurationArrayOutput values.
// You can construct a concrete instance of `GetVirtualNetworkGatewayIpConfigurationArrayInput` via:
//
//	GetVirtualNetworkGatewayIpConfigurationArray{ GetVirtualNetworkGatewayIpConfigurationArgs{...} }
type GetVirtualNetworkGatewayIpConfigurationArrayInput interface {
	pulumi.Input

	ToGetVirtualNetworkGatewayIpConfigurationArrayOutput() GetVirtualNetworkGatewayIpConfigurationArrayOutput
	ToGetVirtualNetworkGatewayIpConfigurationArrayOutputWithContext(context.Context) GetVirtualNetworkGatewayIpConfigurationArrayOutput
}

type GetVirtualNetworkGatewayIpConfigurationArray []GetVirtualNetworkGatewayIpConfigurationInput

func (GetVirtualNetworkGatewayIpConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNetworkGatewayIpConfiguration)(nil)).Elem()
}

func (i GetVirtualNetworkGatewayIpConfigurationArray) ToGetVirtualNetworkGatewayIpConfigurationArrayOutput() GetVirtualNetworkGatewayIpConfigurationArrayOutput {
	return i.ToGetVirtualNetworkGatewayIpConfigurationArrayOutputWithContext(context.Background())
}

func (i GetVirtualNetworkGatewayIpConfigurationArray) ToGetVirtualNetworkGatewayIpConfigurationArrayOutputWithContext(ctx context.Context) GetVirtualNetworkGatewayIpConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNetworkGatewayIpConfigurationArrayOutput)
}

type GetVirtualNetworkGatewayIpConfigurationOutput struct{ *pulumi.OutputState }

func (GetVirtualNetworkGatewayIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNetworkGatewayIpConfiguration)(nil)).Elem()
}

func (o GetVirtualNetworkGatewayIpConfigurationOutput) ToGetVirtualNetworkGatewayIpConfigurationOutput() GetVirtualNetworkGatewayIpConfigurationOutput {
	return o
}

func (o GetVirtualNetworkGatewayIpConfigurationOutput) ToGetVirtualNetworkGatewayIpConfigurationOutputWithContext(ctx context.Context) GetVirtualNetworkGatewayIpConfigurationOutput {
	return o
}

// The resource ID of the IP configuration.
func (o GetVirtualNetworkGatewayIpConfigurationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNetworkGatewayIpConfiguration) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the name of the Virtual Network Gateway.
func (o GetVirtualNetworkGatewayIpConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNetworkGatewayIpConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// The Private IP Address associated with the Virtual Network Gateway.
func (o GetVirtualNetworkGatewayIpConfigurationOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNetworkGatewayIpConfiguration) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

// Defines how the private IP address
// of the gateways virtual interface is assigned.
func (o GetVirtualNetworkGatewayIpConfigurationOutput) PrivateIpAddressAllocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNetworkGatewayIpConfiguration) string { return v.PrivateIpAddressAllocation }).(pulumi.StringOutput)
}

// The ID of the Public IP Address associated
// with the Virtual Network Gateway.
func (o GetVirtualNetworkGatewayIpConfigurationOutput) PublicIpAddressId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNetworkGatewayIpConfiguration) string { return v.PublicIpAddressId }).(pulumi.StringOutput)
}

// The ID of the gateway subnet of a virtual network in
// which the virtual network gateway will be created. It is mandatory that
// the associated subnet is named `GatewaySubnet`. Therefore, each virtual
// network can contain at most a single Virtual Network Gateway.
func (o GetVirtualNetworkGatewayIpConfigurationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNetworkGatewayIpConfiguration) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetVirtualNetworkGatewayIpConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNetworkGatewayIpConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNetworkGatewayIpConfiguration)(nil)).Elem()
}

func (o GetVirtualNetworkGatewayIpConfigurationArrayOutput) ToGetVirtualNetworkGatewayIpConfigurationArrayOutput() GetVirtualNetworkGatewayIpConfigurationArrayOutput {
	return o
}

func (o GetVirtualNetworkGatewayIpConfigurationArrayOutput) ToGetVirtualNetworkGatewayIpConfigurationArrayOutputWithContext(ctx context.Context) GetVirtualNetworkGatewayIpConfigurationArrayOutput {
	return o
}

func (o GetVirtualNetworkGatewayIpConfigurationArrayOutput) Index(i pulumi.IntInput) GetVirtualNetworkGatewayIpConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNetworkGatewayIpConfiguration {
		return vs[0].([]GetVirtualNetworkGatewayIpConfiguration)[vs[1].(int)]
	}).(GetVirtualNetworkGatewayIpConfigurationOutput)
}

type GetVirtualNetworkGatewayVpnClientConfiguration struct {
	// The client id of the Azure VPN application.
	// See [Create an Active Directory (AD) tenant for P2S OpenVPN protocol connections](https://docs.microsoft.com/en-gb/azure/vpn-gateway/openvpn-azure-ad-tenant-multi-app) for values
	// This setting is incompatible with the use of
	// `rootCertificate` and `revokedCertificate`, `radiusServerAddress`, and `radiusServerSecret`.
	AadAudience string `pulumi:"aadAudience"`
	// The STS url for your tenant
	// This setting is incompatible with the use of
	// `rootCertificate` and `revokedCertificate`, `radiusServerAddress`, and `radiusServerSecret`.
	AadIssuer string `pulumi:"aadIssuer"`
	// AzureAD Tenant URL
	// This setting is incompatible with the use of
	// `rootCertificate` and `revokedCertificate`, `radiusServerAddress`, and `radiusServerSecret`.
	AadTenant string `pulumi:"aadTenant"`
	// The address space out of which IP addresses for
	// vpn clients will be taken. You can provide more than one address space, e.g.
	// in CIDR notation.
	AddressSpaces []string `pulumi:"addressSpaces"`
	// The address of the Radius server.
	// This setting is incompatible with the use of
	// `aadTenant`, `aadAudience`, `aadIssuer`, `rootCertificate` and `revokedCertificate`.
	RadiusServerAddress string `pulumi:"radiusServerAddress"`
	// The secret used by the Radius server.
	// This setting is incompatible with the use of
	// `aadTenant`, `aadAudience`, `aadIssuer`, `rootCertificate` and `revokedCertificate`.
	RadiusServerSecret string `pulumi:"radiusServerSecret"`
	// One or more `revokedCertificate` blocks which
	// are defined below.
	// This setting is incompatible with the use of
	// `aadTenant`, `aadAudience`, `aadIssuer`, `radiusServerAddress`, and `radiusServerSecret`.
	RevokedCertificates []GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificate `pulumi:"revokedCertificates"`
	// One or more `rootCertificate` blocks which are
	// defined below. These root certificates are used to sign the client certificate
	// used by the VPN clients to connect to the gateway.
	// This setting is incompatible with the use of
	// `aadTenant`, `aadAudience`, `aadIssuer`, `radiusServerAddress`, and `radiusServerSecret`.
	RootCertificates []GetVirtualNetworkGatewayVpnClientConfigurationRootCertificate `pulumi:"rootCertificates"`
	// List of the protocols supported by the vpn client.
	// The supported values are `SSTP`, `IkeV2` and `OpenVPN`.
	VpnClientProtocols []string `pulumi:"vpnClientProtocols"`
}

// GetVirtualNetworkGatewayVpnClientConfigurationInput is an input type that accepts GetVirtualNetworkGatewayVpnClientConfigurationArgs and GetVirtualNetworkGatewayVpnClientConfigurationOutput values.
// You can construct a concrete instance of `GetVirtualNetworkGatewayVpnClientConfigurationInput` via:
//
//	GetVirtualNetworkGatewayVpnClientConfigurationArgs{...}
type GetVirtualNetworkGatewayVpnClientConfigurationInput interface {
	pulumi.Input

	ToGetVirtualNetworkGatewayVpnClientConfigurationOutput() GetVirtualNetworkGatewayVpnClientConfigurationOutput
	ToGetVirtualNetworkGatewayVpnClientConfigurationOutputWithContext(context.Context) GetVirtualNetworkGatewayVpnClientConfigurationOutput
}

type GetVirtualNetworkGatewayVpnClientConfigurationArgs struct {
	// The client id of the Azure VPN application.
	// See [Create an Active Directory (AD) tenant for P2S OpenVPN protocol connections](https://docs.microsoft.com/en-gb/azure/vpn-gateway/openvpn-azure-ad-tenant-multi-app) for values
	// This setting is incompatible with the use of
	// `rootCertificate` and `revokedCertificate`, `radiusServerAddress`, and `radiusServerSecret`.
	AadAudience pulumi.StringInput `pulumi:"aadAudience"`
	// The STS url for your tenant
	// This setting is incompatible with the use of
	// `rootCertificate` and `revokedCertificate`, `radiusServerAddress`, and `radiusServerSecret`.
	AadIssuer pulumi.StringInput `pulumi:"aadIssuer"`
	// AzureAD Tenant URL
	// This setting is incompatible with the use of
	// `rootCertificate` and `revokedCertificate`, `radiusServerAddress`, and `radiusServerSecret`.
	AadTenant pulumi.StringInput `pulumi:"aadTenant"`
	// The address space out of which IP addresses for
	// vpn clients will be taken. You can provide more than one address space, e.g.
	// in CIDR notation.
	AddressSpaces pulumi.StringArrayInput `pulumi:"addressSpaces"`
	// The address of the Radius server.
	// This setting is incompatible with the use of
	// `aadTenant`, `aadAudience`, `aadIssuer`, `rootCertificate` and `revokedCertificate`.
	RadiusServerAddress pulumi.StringInput `pulumi:"radiusServerAddress"`
	// The secret used by the Radius server.
	// This setting is incompatible with the use of
	// `aadTenant`, `aadAudience`, `aadIssuer`, `rootCertificate` and `revokedCertificate`.
	RadiusServerSecret pulumi.StringInput `pulumi:"radiusServerSecret"`
	// One or more `revokedCertificate` blocks which
	// are defined below.
	// This setting is incompatible with the use of
	// `aadTenant`, `aadAudience`, `aadIssuer`, `radiusServerAddress`, and `radiusServerSecret`.
	RevokedCertificates GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayInput `pulumi:"revokedCertificates"`
	// One or more `rootCertificate` blocks which are
	// defined below. These root certificates are used to sign the client certificate
	// used by the VPN clients to connect to the gateway.
	// This setting is incompatible with the use of
	// `aadTenant`, `aadAudience`, `aadIssuer`, `radiusServerAddress`, and `radiusServerSecret`.
	RootCertificates GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayInput `pulumi:"rootCertificates"`
	// List of the protocols supported by the vpn client.
	// The supported values are `SSTP`, `IkeV2` and `OpenVPN`.
	VpnClientProtocols pulumi.StringArrayInput `pulumi:"vpnClientProtocols"`
}

func (GetVirtualNetworkGatewayVpnClientConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNetworkGatewayVpnClientConfiguration)(nil)).Elem()
}

func (i GetVirtualNetworkGatewayVpnClientConfigurationArgs) ToGetVirtualNetworkGatewayVpnClientConfigurationOutput() GetVirtualNetworkGatewayVpnClientConfigurationOutput {
	return i.ToGetVirtualNetworkGatewayVpnClientConfigurationOutputWithContext(context.Background())
}

func (i GetVirtualNetworkGatewayVpnClientConfigurationArgs) ToGetVirtualNetworkGatewayVpnClientConfigurationOutputWithContext(ctx context.Context) GetVirtualNetworkGatewayVpnClientConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNetworkGatewayVpnClientConfigurationOutput)
}

// GetVirtualNetworkGatewayVpnClientConfigurationArrayInput is an input type that accepts GetVirtualNetworkGatewayVpnClientConfigurationArray and GetVirtualNetworkGatewayVpnClientConfigurationArrayOutput values.
// You can construct a concrete instance of `GetVirtualNetworkGatewayVpnClientConfigurationArrayInput` via:
//
//	GetVirtualNetworkGatewayVpnClientConfigurationArray{ GetVirtualNetworkGatewayVpnClientConfigurationArgs{...} }
type GetVirtualNetworkGatewayVpnClientConfigurationArrayInput interface {
	pulumi.Input

	ToGetVirtualNetworkGatewayVpnClientConfigurationArrayOutput() GetVirtualNetworkGatewayVpnClientConfigurationArrayOutput
	ToGetVirtualNetworkGatewayVpnClientConfigurationArrayOutputWithContext(context.Context) GetVirtualNetworkGatewayVpnClientConfigurationArrayOutput
}

type GetVirtualNetworkGatewayVpnClientConfigurationArray []GetVirtualNetworkGatewayVpnClientConfigurationInput

func (GetVirtualNetworkGatewayVpnClientConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNetworkGatewayVpnClientConfiguration)(nil)).Elem()
}

func (i GetVirtualNetworkGatewayVpnClientConfigurationArray) ToGetVirtualNetworkGatewayVpnClientConfigurationArrayOutput() GetVirtualNetworkGatewayVpnClientConfigurationArrayOutput {
	return i.ToGetVirtualNetworkGatewayVpnClientConfigurationArrayOutputWithContext(context.Background())
}

func (i GetVirtualNetworkGatewayVpnClientConfigurationArray) ToGetVirtualNetworkGatewayVpnClientConfigurationArrayOutputWithContext(ctx context.Context) GetVirtualNetworkGatewayVpnClientConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNetworkGatewayVpnClientConfigurationArrayOutput)
}

type GetVirtualNetworkGatewayVpnClientConfigurationOutput struct{ *pulumi.OutputState }

func (GetVirtualNetworkGatewayVpnClientConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNetworkGatewayVpnClientConfiguration)(nil)).Elem()
}

func (o GetVirtualNetworkGatewayVpnClientConfigurationOutput) ToGetVirtualNetworkGatewayVpnClientConfigurationOutput() GetVirtualNetworkGatewayVpnClientConfigurationOutput {
	return o
}

func (o GetVirtualNetworkGatewayVpnClientConfigurationOutput) ToGetVirtualNetworkGatewayVpnClientConfigurationOutputWithContext(ctx context.Context) GetVirtualNetworkGatewayVpnClientConfigurationOutput {
	return o
}

// The client id of the Azure VPN application.
// See [Create an Active Directory (AD) tenant for P2S OpenVPN protocol connections](https://docs.microsoft.com/en-gb/azure/vpn-gateway/openvpn-azure-ad-tenant-multi-app) for values
// This setting is incompatible with the use of
// `rootCertificate` and `revokedCertificate`, `radiusServerAddress`, and `radiusServerSecret`.
func (o GetVirtualNetworkGatewayVpnClientConfigurationOutput) AadAudience() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNetworkGatewayVpnClientConfiguration) string { return v.AadAudience }).(pulumi.StringOutput)
}

// The STS url for your tenant
// This setting is incompatible with the use of
// `rootCertificate` and `revokedCertificate`, `radiusServerAddress`, and `radiusServerSecret`.
func (o GetVirtualNetworkGatewayVpnClientConfigurationOutput) AadIssuer() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNetworkGatewayVpnClientConfiguration) string { return v.AadIssuer }).(pulumi.StringOutput)
}

// AzureAD Tenant URL
// This setting is incompatible with the use of
// `rootCertificate` and `revokedCertificate`, `radiusServerAddress`, and `radiusServerSecret`.
func (o GetVirtualNetworkGatewayVpnClientConfigurationOutput) AadTenant() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNetworkGatewayVpnClientConfiguration) string { return v.AadTenant }).(pulumi.StringOutput)
}

// The address space out of which IP addresses for
// vpn clients will be taken. You can provide more than one address space, e.g.
// in CIDR notation.
func (o GetVirtualNetworkGatewayVpnClientConfigurationOutput) AddressSpaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVirtualNetworkGatewayVpnClientConfiguration) []string { return v.AddressSpaces }).(pulumi.StringArrayOutput)
}

// The address of the Radius server.
// This setting is incompatible with the use of
// `aadTenant`, `aadAudience`, `aadIssuer`, `rootCertificate` and `revokedCertificate`.
func (o GetVirtualNetworkGatewayVpnClientConfigurationOutput) RadiusServerAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNetworkGatewayVpnClientConfiguration) string { return v.RadiusServerAddress }).(pulumi.StringOutput)
}

// The secret used by the Radius server.
// This setting is incompatible with the use of
// `aadTenant`, `aadAudience`, `aadIssuer`, `rootCertificate` and `revokedCertificate`.
func (o GetVirtualNetworkGatewayVpnClientConfigurationOutput) RadiusServerSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNetworkGatewayVpnClientConfiguration) string { return v.RadiusServerSecret }).(pulumi.StringOutput)
}

// One or more `revokedCertificate` blocks which
// are defined below.
// This setting is incompatible with the use of
// `aadTenant`, `aadAudience`, `aadIssuer`, `radiusServerAddress`, and `radiusServerSecret`.
func (o GetVirtualNetworkGatewayVpnClientConfigurationOutput) RevokedCertificates() GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput {
	return o.ApplyT(func(v GetVirtualNetworkGatewayVpnClientConfiguration) []GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificate {
		return v.RevokedCertificates
	}).(GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput)
}

// One or more `rootCertificate` blocks which are
// defined below. These root certificates are used to sign the client certificate
// used by the VPN clients to connect to the gateway.
// This setting is incompatible with the use of
// `aadTenant`, `aadAudience`, `aadIssuer`, `radiusServerAddress`, and `radiusServerSecret`.
func (o GetVirtualNetworkGatewayVpnClientConfigurationOutput) RootCertificates() GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput {
	return o.ApplyT(func(v GetVirtualNetworkGatewayVpnClientConfiguration) []GetVirtualNetworkGatewayVpnClientConfigurationRootCertificate {
		return v.RootCertificates
	}).(GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput)
}

// List of the protocols supported by the vpn client.
// The supported values are `SSTP`, `IkeV2` and `OpenVPN`.
func (o GetVirtualNetworkGatewayVpnClientConfigurationOutput) VpnClientProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVirtualNetworkGatewayVpnClientConfiguration) []string { return v.VpnClientProtocols }).(pulumi.StringArrayOutput)
}

type GetVirtualNetworkGatewayVpnClientConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNetworkGatewayVpnClientConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNetworkGatewayVpnClientConfiguration)(nil)).Elem()
}

func (o GetVirtualNetworkGatewayVpnClientConfigurationArrayOutput) ToGetVirtualNetworkGatewayVpnClientConfigurationArrayOutput() GetVirtualNetworkGatewayVpnClientConfigurationArrayOutput {
	return o
}

func (o GetVirtualNetworkGatewayVpnClientConfigurationArrayOutput) ToGetVirtualNetworkGatewayVpnClientConfigurationArrayOutputWithContext(ctx context.Context) GetVirtualNetworkGatewayVpnClientConfigurationArrayOutput {
	return o
}

func (o GetVirtualNetworkGatewayVpnClientConfigurationArrayOutput) Index(i pulumi.IntInput) GetVirtualNetworkGatewayVpnClientConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNetworkGatewayVpnClientConfiguration {
		return vs[0].([]GetVirtualNetworkGatewayVpnClientConfiguration)[vs[1].(int)]
	}).(GetVirtualNetworkGatewayVpnClientConfigurationOutput)
}

type GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificate struct {
	// Specifies the name of the Virtual Network Gateway.
	Name       string `pulumi:"name"`
	Thumbprint string `pulumi:"thumbprint"`
}

// GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateInput is an input type that accepts GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArgs and GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput values.
// You can construct a concrete instance of `GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateInput` via:
//
//	GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArgs{...}
type GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateInput interface {
	pulumi.Input

	ToGetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput() GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput
	ToGetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutputWithContext(context.Context) GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput
}

type GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArgs struct {
	// Specifies the name of the Virtual Network Gateway.
	Name       pulumi.StringInput `pulumi:"name"`
	Thumbprint pulumi.StringInput `pulumi:"thumbprint"`
}

func (GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificate)(nil)).Elem()
}

func (i GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArgs) ToGetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput() GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput {
	return i.ToGetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutputWithContext(context.Background())
}

func (i GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArgs) ToGetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutputWithContext(ctx context.Context) GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput)
}

// GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayInput is an input type that accepts GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArray and GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput values.
// You can construct a concrete instance of `GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayInput` via:
//
//	GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArray{ GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArgs{...} }
type GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayInput interface {
	pulumi.Input

	ToGetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput() GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput
	ToGetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutputWithContext(context.Context) GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput
}

type GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArray []GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateInput

func (GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificate)(nil)).Elem()
}

func (i GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArray) ToGetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput() GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput {
	return i.ToGetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutputWithContext(context.Background())
}

func (i GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArray) ToGetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutputWithContext(ctx context.Context) GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput)
}

type GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput struct{ *pulumi.OutputState }

func (GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificate)(nil)).Elem()
}

func (o GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput) ToGetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput() GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput {
	return o
}

func (o GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput) ToGetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutputWithContext(ctx context.Context) GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput {
	return o
}

// Specifies the name of the Virtual Network Gateway.
func (o GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificate) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificate) string { return v.Thumbprint }).(pulumi.StringOutput)
}

type GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificate)(nil)).Elem()
}

func (o GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput) ToGetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput() GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput {
	return o
}

func (o GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput) ToGetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutputWithContext(ctx context.Context) GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput {
	return o
}

func (o GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput) Index(i pulumi.IntInput) GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificate {
		return vs[0].([]GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificate)[vs[1].(int)]
	}).(GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput)
}

type GetVirtualNetworkGatewayVpnClientConfigurationRootCertificate struct {
	// Specifies the name of the Virtual Network Gateway.
	Name string `pulumi:"name"`
	// The public certificate of the root certificate
	// authority. The certificate must be provided in Base-64 encoded X.509 format
	// (PEM).
	PublicCertData string `pulumi:"publicCertData"`
}

// GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateInput is an input type that accepts GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArgs and GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput values.
// You can construct a concrete instance of `GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateInput` via:
//
//	GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArgs{...}
type GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateInput interface {
	pulumi.Input

	ToGetVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput() GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput
	ToGetVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutputWithContext(context.Context) GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput
}

type GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArgs struct {
	// Specifies the name of the Virtual Network Gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// The public certificate of the root certificate
	// authority. The certificate must be provided in Base-64 encoded X.509 format
	// (PEM).
	PublicCertData pulumi.StringInput `pulumi:"publicCertData"`
}

func (GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNetworkGatewayVpnClientConfigurationRootCertificate)(nil)).Elem()
}

func (i GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArgs) ToGetVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput() GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput {
	return i.ToGetVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutputWithContext(context.Background())
}

func (i GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArgs) ToGetVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutputWithContext(ctx context.Context) GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput)
}

// GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayInput is an input type that accepts GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArray and GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput values.
// You can construct a concrete instance of `GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayInput` via:
//
//	GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArray{ GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArgs{...} }
type GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayInput interface {
	pulumi.Input

	ToGetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput() GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput
	ToGetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutputWithContext(context.Context) GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput
}

type GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArray []GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateInput

func (GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNetworkGatewayVpnClientConfigurationRootCertificate)(nil)).Elem()
}

func (i GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArray) ToGetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput() GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput {
	return i.ToGetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutputWithContext(context.Background())
}

func (i GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArray) ToGetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutputWithContext(ctx context.Context) GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput)
}

type GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput struct{ *pulumi.OutputState }

func (GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualNetworkGatewayVpnClientConfigurationRootCertificate)(nil)).Elem()
}

func (o GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput) ToGetVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput() GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput {
	return o
}

func (o GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput) ToGetVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutputWithContext(ctx context.Context) GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput {
	return o
}

// Specifies the name of the Virtual Network Gateway.
func (o GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNetworkGatewayVpnClientConfigurationRootCertificate) string { return v.Name }).(pulumi.StringOutput)
}

// The public certificate of the root certificate
// authority. The certificate must be provided in Base-64 encoded X.509 format
// (PEM).
func (o GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput) PublicCertData() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualNetworkGatewayVpnClientConfigurationRootCertificate) string { return v.PublicCertData }).(pulumi.StringOutput)
}

type GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualNetworkGatewayVpnClientConfigurationRootCertificate)(nil)).Elem()
}

func (o GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput) ToGetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput() GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput {
	return o
}

func (o GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput) ToGetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutputWithContext(ctx context.Context) GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput {
	return o
}

func (o GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput) Index(i pulumi.IntInput) GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualNetworkGatewayVpnClientConfigurationRootCertificate {
		return vs[0].([]GetVirtualNetworkGatewayVpnClientConfigurationRootCertificate)[vs[1].(int)]
	}).(GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput)
}

type GetVpnGatewayBgpSetting struct {
	// The ASN of the BGP Speaker.
	Asn int `pulumi:"asn"`
	// The Address which should be used for the BGP Peering.
	BgpPeeringAddress string `pulumi:"bgpPeeringAddress"`
	// an `instanceBgpPeeringAddress` block as defined below.
	Instance0BgpPeeringAddresses []GetVpnGatewayBgpSettingInstance0BgpPeeringAddress `pulumi:"instance0BgpPeeringAddresses"`
	// an `instanceBgpPeeringAddress` block as defined below.
	Instance1BgpPeeringAddresses []GetVpnGatewayBgpSettingInstance1BgpPeeringAddress `pulumi:"instance1BgpPeeringAddresses"`
	// The weight added to Routes learned from this BGP Speaker.
	PeerWeight int `pulumi:"peerWeight"`
}

// GetVpnGatewayBgpSettingInput is an input type that accepts GetVpnGatewayBgpSettingArgs and GetVpnGatewayBgpSettingOutput values.
// You can construct a concrete instance of `GetVpnGatewayBgpSettingInput` via:
//
//	GetVpnGatewayBgpSettingArgs{...}
type GetVpnGatewayBgpSettingInput interface {
	pulumi.Input

	ToGetVpnGatewayBgpSettingOutput() GetVpnGatewayBgpSettingOutput
	ToGetVpnGatewayBgpSettingOutputWithContext(context.Context) GetVpnGatewayBgpSettingOutput
}

type GetVpnGatewayBgpSettingArgs struct {
	// The ASN of the BGP Speaker.
	Asn pulumi.IntInput `pulumi:"asn"`
	// The Address which should be used for the BGP Peering.
	BgpPeeringAddress pulumi.StringInput `pulumi:"bgpPeeringAddress"`
	// an `instanceBgpPeeringAddress` block as defined below.
	Instance0BgpPeeringAddresses GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArrayInput `pulumi:"instance0BgpPeeringAddresses"`
	// an `instanceBgpPeeringAddress` block as defined below.
	Instance1BgpPeeringAddresses GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArrayInput `pulumi:"instance1BgpPeeringAddresses"`
	// The weight added to Routes learned from this BGP Speaker.
	PeerWeight pulumi.IntInput `pulumi:"peerWeight"`
}

func (GetVpnGatewayBgpSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnGatewayBgpSetting)(nil)).Elem()
}

func (i GetVpnGatewayBgpSettingArgs) ToGetVpnGatewayBgpSettingOutput() GetVpnGatewayBgpSettingOutput {
	return i.ToGetVpnGatewayBgpSettingOutputWithContext(context.Background())
}

func (i GetVpnGatewayBgpSettingArgs) ToGetVpnGatewayBgpSettingOutputWithContext(ctx context.Context) GetVpnGatewayBgpSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnGatewayBgpSettingOutput)
}

// GetVpnGatewayBgpSettingArrayInput is an input type that accepts GetVpnGatewayBgpSettingArray and GetVpnGatewayBgpSettingArrayOutput values.
// You can construct a concrete instance of `GetVpnGatewayBgpSettingArrayInput` via:
//
//	GetVpnGatewayBgpSettingArray{ GetVpnGatewayBgpSettingArgs{...} }
type GetVpnGatewayBgpSettingArrayInput interface {
	pulumi.Input

	ToGetVpnGatewayBgpSettingArrayOutput() GetVpnGatewayBgpSettingArrayOutput
	ToGetVpnGatewayBgpSettingArrayOutputWithContext(context.Context) GetVpnGatewayBgpSettingArrayOutput
}

type GetVpnGatewayBgpSettingArray []GetVpnGatewayBgpSettingInput

func (GetVpnGatewayBgpSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnGatewayBgpSetting)(nil)).Elem()
}

func (i GetVpnGatewayBgpSettingArray) ToGetVpnGatewayBgpSettingArrayOutput() GetVpnGatewayBgpSettingArrayOutput {
	return i.ToGetVpnGatewayBgpSettingArrayOutputWithContext(context.Background())
}

func (i GetVpnGatewayBgpSettingArray) ToGetVpnGatewayBgpSettingArrayOutputWithContext(ctx context.Context) GetVpnGatewayBgpSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnGatewayBgpSettingArrayOutput)
}

type GetVpnGatewayBgpSettingOutput struct{ *pulumi.OutputState }

func (GetVpnGatewayBgpSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnGatewayBgpSetting)(nil)).Elem()
}

func (o GetVpnGatewayBgpSettingOutput) ToGetVpnGatewayBgpSettingOutput() GetVpnGatewayBgpSettingOutput {
	return o
}

func (o GetVpnGatewayBgpSettingOutput) ToGetVpnGatewayBgpSettingOutputWithContext(ctx context.Context) GetVpnGatewayBgpSettingOutput {
	return o
}

// The ASN of the BGP Speaker.
func (o GetVpnGatewayBgpSettingOutput) Asn() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpnGatewayBgpSetting) int { return v.Asn }).(pulumi.IntOutput)
}

// The Address which should be used for the BGP Peering.
func (o GetVpnGatewayBgpSettingOutput) BgpPeeringAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewayBgpSetting) string { return v.BgpPeeringAddress }).(pulumi.StringOutput)
}

// an `instanceBgpPeeringAddress` block as defined below.
func (o GetVpnGatewayBgpSettingOutput) Instance0BgpPeeringAddresses() GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArrayOutput {
	return o.ApplyT(func(v GetVpnGatewayBgpSetting) []GetVpnGatewayBgpSettingInstance0BgpPeeringAddress {
		return v.Instance0BgpPeeringAddresses
	}).(GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArrayOutput)
}

// an `instanceBgpPeeringAddress` block as defined below.
func (o GetVpnGatewayBgpSettingOutput) Instance1BgpPeeringAddresses() GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArrayOutput {
	return o.ApplyT(func(v GetVpnGatewayBgpSetting) []GetVpnGatewayBgpSettingInstance1BgpPeeringAddress {
		return v.Instance1BgpPeeringAddresses
	}).(GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArrayOutput)
}

// The weight added to Routes learned from this BGP Speaker.
func (o GetVpnGatewayBgpSettingOutput) PeerWeight() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpnGatewayBgpSetting) int { return v.PeerWeight }).(pulumi.IntOutput)
}

type GetVpnGatewayBgpSettingArrayOutput struct{ *pulumi.OutputState }

func (GetVpnGatewayBgpSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnGatewayBgpSetting)(nil)).Elem()
}

func (o GetVpnGatewayBgpSettingArrayOutput) ToGetVpnGatewayBgpSettingArrayOutput() GetVpnGatewayBgpSettingArrayOutput {
	return o
}

func (o GetVpnGatewayBgpSettingArrayOutput) ToGetVpnGatewayBgpSettingArrayOutputWithContext(ctx context.Context) GetVpnGatewayBgpSettingArrayOutput {
	return o
}

func (o GetVpnGatewayBgpSettingArrayOutput) Index(i pulumi.IntInput) GetVpnGatewayBgpSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnGatewayBgpSetting {
		return vs[0].([]GetVpnGatewayBgpSetting)[vs[1].(int)]
	}).(GetVpnGatewayBgpSettingOutput)
}

type GetVpnGatewayBgpSettingInstance0BgpPeeringAddress struct {
	// A list of custom BGP peering addresses to assigned to this instance.
	CustomIps []string `pulumi:"customIps"`
	// The list of default BGP peering addresses which belong to the pre-defined VPN Gateway IP configuration.
	DefaultIps []string `pulumi:"defaultIps"`
	// The pre-defined id of VPN Gateway IP Configuration.
	IpConfigurationId string `pulumi:"ipConfigurationId"`
	// The list of tunnel public IP addresses which belong to the pre-defined VPN Gateway IP configuration.
	TunnelIps []string `pulumi:"tunnelIps"`
}

// GetVpnGatewayBgpSettingInstance0BgpPeeringAddressInput is an input type that accepts GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArgs and GetVpnGatewayBgpSettingInstance0BgpPeeringAddressOutput values.
// You can construct a concrete instance of `GetVpnGatewayBgpSettingInstance0BgpPeeringAddressInput` via:
//
//	GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArgs{...}
type GetVpnGatewayBgpSettingInstance0BgpPeeringAddressInput interface {
	pulumi.Input

	ToGetVpnGatewayBgpSettingInstance0BgpPeeringAddressOutput() GetVpnGatewayBgpSettingInstance0BgpPeeringAddressOutput
	ToGetVpnGatewayBgpSettingInstance0BgpPeeringAddressOutputWithContext(context.Context) GetVpnGatewayBgpSettingInstance0BgpPeeringAddressOutput
}

type GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArgs struct {
	// A list of custom BGP peering addresses to assigned to this instance.
	CustomIps pulumi.StringArrayInput `pulumi:"customIps"`
	// The list of default BGP peering addresses which belong to the pre-defined VPN Gateway IP configuration.
	DefaultIps pulumi.StringArrayInput `pulumi:"defaultIps"`
	// The pre-defined id of VPN Gateway IP Configuration.
	IpConfigurationId pulumi.StringInput `pulumi:"ipConfigurationId"`
	// The list of tunnel public IP addresses which belong to the pre-defined VPN Gateway IP configuration.
	TunnelIps pulumi.StringArrayInput `pulumi:"tunnelIps"`
}

func (GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnGatewayBgpSettingInstance0BgpPeeringAddress)(nil)).Elem()
}

func (i GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArgs) ToGetVpnGatewayBgpSettingInstance0BgpPeeringAddressOutput() GetVpnGatewayBgpSettingInstance0BgpPeeringAddressOutput {
	return i.ToGetVpnGatewayBgpSettingInstance0BgpPeeringAddressOutputWithContext(context.Background())
}

func (i GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArgs) ToGetVpnGatewayBgpSettingInstance0BgpPeeringAddressOutputWithContext(ctx context.Context) GetVpnGatewayBgpSettingInstance0BgpPeeringAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnGatewayBgpSettingInstance0BgpPeeringAddressOutput)
}

// GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArrayInput is an input type that accepts GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArray and GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArrayOutput values.
// You can construct a concrete instance of `GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArrayInput` via:
//
//	GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArray{ GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArgs{...} }
type GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArrayInput interface {
	pulumi.Input

	ToGetVpnGatewayBgpSettingInstance0BgpPeeringAddressArrayOutput() GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArrayOutput
	ToGetVpnGatewayBgpSettingInstance0BgpPeeringAddressArrayOutputWithContext(context.Context) GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArrayOutput
}

type GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArray []GetVpnGatewayBgpSettingInstance0BgpPeeringAddressInput

func (GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnGatewayBgpSettingInstance0BgpPeeringAddress)(nil)).Elem()
}

func (i GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArray) ToGetVpnGatewayBgpSettingInstance0BgpPeeringAddressArrayOutput() GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArrayOutput {
	return i.ToGetVpnGatewayBgpSettingInstance0BgpPeeringAddressArrayOutputWithContext(context.Background())
}

func (i GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArray) ToGetVpnGatewayBgpSettingInstance0BgpPeeringAddressArrayOutputWithContext(ctx context.Context) GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArrayOutput)
}

type GetVpnGatewayBgpSettingInstance0BgpPeeringAddressOutput struct{ *pulumi.OutputState }

func (GetVpnGatewayBgpSettingInstance0BgpPeeringAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnGatewayBgpSettingInstance0BgpPeeringAddress)(nil)).Elem()
}

func (o GetVpnGatewayBgpSettingInstance0BgpPeeringAddressOutput) ToGetVpnGatewayBgpSettingInstance0BgpPeeringAddressOutput() GetVpnGatewayBgpSettingInstance0BgpPeeringAddressOutput {
	return o
}

func (o GetVpnGatewayBgpSettingInstance0BgpPeeringAddressOutput) ToGetVpnGatewayBgpSettingInstance0BgpPeeringAddressOutputWithContext(ctx context.Context) GetVpnGatewayBgpSettingInstance0BgpPeeringAddressOutput {
	return o
}

// A list of custom BGP peering addresses to assigned to this instance.
func (o GetVpnGatewayBgpSettingInstance0BgpPeeringAddressOutput) CustomIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpnGatewayBgpSettingInstance0BgpPeeringAddress) []string { return v.CustomIps }).(pulumi.StringArrayOutput)
}

// The list of default BGP peering addresses which belong to the pre-defined VPN Gateway IP configuration.
func (o GetVpnGatewayBgpSettingInstance0BgpPeeringAddressOutput) DefaultIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpnGatewayBgpSettingInstance0BgpPeeringAddress) []string { return v.DefaultIps }).(pulumi.StringArrayOutput)
}

// The pre-defined id of VPN Gateway IP Configuration.
func (o GetVpnGatewayBgpSettingInstance0BgpPeeringAddressOutput) IpConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewayBgpSettingInstance0BgpPeeringAddress) string { return v.IpConfigurationId }).(pulumi.StringOutput)
}

// The list of tunnel public IP addresses which belong to the pre-defined VPN Gateway IP configuration.
func (o GetVpnGatewayBgpSettingInstance0BgpPeeringAddressOutput) TunnelIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpnGatewayBgpSettingInstance0BgpPeeringAddress) []string { return v.TunnelIps }).(pulumi.StringArrayOutput)
}

type GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArrayOutput struct{ *pulumi.OutputState }

func (GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnGatewayBgpSettingInstance0BgpPeeringAddress)(nil)).Elem()
}

func (o GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArrayOutput) ToGetVpnGatewayBgpSettingInstance0BgpPeeringAddressArrayOutput() GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArrayOutput {
	return o
}

func (o GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArrayOutput) ToGetVpnGatewayBgpSettingInstance0BgpPeeringAddressArrayOutputWithContext(ctx context.Context) GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArrayOutput {
	return o
}

func (o GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArrayOutput) Index(i pulumi.IntInput) GetVpnGatewayBgpSettingInstance0BgpPeeringAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnGatewayBgpSettingInstance0BgpPeeringAddress {
		return vs[0].([]GetVpnGatewayBgpSettingInstance0BgpPeeringAddress)[vs[1].(int)]
	}).(GetVpnGatewayBgpSettingInstance0BgpPeeringAddressOutput)
}

type GetVpnGatewayBgpSettingInstance1BgpPeeringAddress struct {
	// A list of custom BGP peering addresses to assigned to this instance.
	CustomIps []string `pulumi:"customIps"`
	// The list of default BGP peering addresses which belong to the pre-defined VPN Gateway IP configuration.
	DefaultIps []string `pulumi:"defaultIps"`
	// The pre-defined id of VPN Gateway IP Configuration.
	IpConfigurationId string `pulumi:"ipConfigurationId"`
	// The list of tunnel public IP addresses which belong to the pre-defined VPN Gateway IP configuration.
	TunnelIps []string `pulumi:"tunnelIps"`
}

// GetVpnGatewayBgpSettingInstance1BgpPeeringAddressInput is an input type that accepts GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArgs and GetVpnGatewayBgpSettingInstance1BgpPeeringAddressOutput values.
// You can construct a concrete instance of `GetVpnGatewayBgpSettingInstance1BgpPeeringAddressInput` via:
//
//	GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArgs{...}
type GetVpnGatewayBgpSettingInstance1BgpPeeringAddressInput interface {
	pulumi.Input

	ToGetVpnGatewayBgpSettingInstance1BgpPeeringAddressOutput() GetVpnGatewayBgpSettingInstance1BgpPeeringAddressOutput
	ToGetVpnGatewayBgpSettingInstance1BgpPeeringAddressOutputWithContext(context.Context) GetVpnGatewayBgpSettingInstance1BgpPeeringAddressOutput
}

type GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArgs struct {
	// A list of custom BGP peering addresses to assigned to this instance.
	CustomIps pulumi.StringArrayInput `pulumi:"customIps"`
	// The list of default BGP peering addresses which belong to the pre-defined VPN Gateway IP configuration.
	DefaultIps pulumi.StringArrayInput `pulumi:"defaultIps"`
	// The pre-defined id of VPN Gateway IP Configuration.
	IpConfigurationId pulumi.StringInput `pulumi:"ipConfigurationId"`
	// The list of tunnel public IP addresses which belong to the pre-defined VPN Gateway IP configuration.
	TunnelIps pulumi.StringArrayInput `pulumi:"tunnelIps"`
}

func (GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnGatewayBgpSettingInstance1BgpPeeringAddress)(nil)).Elem()
}

func (i GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArgs) ToGetVpnGatewayBgpSettingInstance1BgpPeeringAddressOutput() GetVpnGatewayBgpSettingInstance1BgpPeeringAddressOutput {
	return i.ToGetVpnGatewayBgpSettingInstance1BgpPeeringAddressOutputWithContext(context.Background())
}

func (i GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArgs) ToGetVpnGatewayBgpSettingInstance1BgpPeeringAddressOutputWithContext(ctx context.Context) GetVpnGatewayBgpSettingInstance1BgpPeeringAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnGatewayBgpSettingInstance1BgpPeeringAddressOutput)
}

// GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArrayInput is an input type that accepts GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArray and GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArrayOutput values.
// You can construct a concrete instance of `GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArrayInput` via:
//
//	GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArray{ GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArgs{...} }
type GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArrayInput interface {
	pulumi.Input

	ToGetVpnGatewayBgpSettingInstance1BgpPeeringAddressArrayOutput() GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArrayOutput
	ToGetVpnGatewayBgpSettingInstance1BgpPeeringAddressArrayOutputWithContext(context.Context) GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArrayOutput
}

type GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArray []GetVpnGatewayBgpSettingInstance1BgpPeeringAddressInput

func (GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnGatewayBgpSettingInstance1BgpPeeringAddress)(nil)).Elem()
}

func (i GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArray) ToGetVpnGatewayBgpSettingInstance1BgpPeeringAddressArrayOutput() GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArrayOutput {
	return i.ToGetVpnGatewayBgpSettingInstance1BgpPeeringAddressArrayOutputWithContext(context.Background())
}

func (i GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArray) ToGetVpnGatewayBgpSettingInstance1BgpPeeringAddressArrayOutputWithContext(ctx context.Context) GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArrayOutput)
}

type GetVpnGatewayBgpSettingInstance1BgpPeeringAddressOutput struct{ *pulumi.OutputState }

func (GetVpnGatewayBgpSettingInstance1BgpPeeringAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnGatewayBgpSettingInstance1BgpPeeringAddress)(nil)).Elem()
}

func (o GetVpnGatewayBgpSettingInstance1BgpPeeringAddressOutput) ToGetVpnGatewayBgpSettingInstance1BgpPeeringAddressOutput() GetVpnGatewayBgpSettingInstance1BgpPeeringAddressOutput {
	return o
}

func (o GetVpnGatewayBgpSettingInstance1BgpPeeringAddressOutput) ToGetVpnGatewayBgpSettingInstance1BgpPeeringAddressOutputWithContext(ctx context.Context) GetVpnGatewayBgpSettingInstance1BgpPeeringAddressOutput {
	return o
}

// A list of custom BGP peering addresses to assigned to this instance.
func (o GetVpnGatewayBgpSettingInstance1BgpPeeringAddressOutput) CustomIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpnGatewayBgpSettingInstance1BgpPeeringAddress) []string { return v.CustomIps }).(pulumi.StringArrayOutput)
}

// The list of default BGP peering addresses which belong to the pre-defined VPN Gateway IP configuration.
func (o GetVpnGatewayBgpSettingInstance1BgpPeeringAddressOutput) DefaultIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpnGatewayBgpSettingInstance1BgpPeeringAddress) []string { return v.DefaultIps }).(pulumi.StringArrayOutput)
}

// The pre-defined id of VPN Gateway IP Configuration.
func (o GetVpnGatewayBgpSettingInstance1BgpPeeringAddressOutput) IpConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewayBgpSettingInstance1BgpPeeringAddress) string { return v.IpConfigurationId }).(pulumi.StringOutput)
}

// The list of tunnel public IP addresses which belong to the pre-defined VPN Gateway IP configuration.
func (o GetVpnGatewayBgpSettingInstance1BgpPeeringAddressOutput) TunnelIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpnGatewayBgpSettingInstance1BgpPeeringAddress) []string { return v.TunnelIps }).(pulumi.StringArrayOutput)
}

type GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArrayOutput struct{ *pulumi.OutputState }

func (GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnGatewayBgpSettingInstance1BgpPeeringAddress)(nil)).Elem()
}

func (o GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArrayOutput) ToGetVpnGatewayBgpSettingInstance1BgpPeeringAddressArrayOutput() GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArrayOutput {
	return o
}

func (o GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArrayOutput) ToGetVpnGatewayBgpSettingInstance1BgpPeeringAddressArrayOutputWithContext(ctx context.Context) GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArrayOutput {
	return o
}

func (o GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArrayOutput) Index(i pulumi.IntInput) GetVpnGatewayBgpSettingInstance1BgpPeeringAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnGatewayBgpSettingInstance1BgpPeeringAddress {
		return vs[0].([]GetVpnGatewayBgpSettingInstance1BgpPeeringAddress)[vs[1].(int)]
	}).(GetVpnGatewayBgpSettingInstance1BgpPeeringAddressOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayAuthenticationCertificateInput)(nil)).Elem(), ApplicationGatewayAuthenticationCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayAuthenticationCertificateArrayInput)(nil)).Elem(), ApplicationGatewayAuthenticationCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayAutoscaleConfigurationInput)(nil)).Elem(), ApplicationGatewayAutoscaleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayAutoscaleConfigurationPtrInput)(nil)).Elem(), ApplicationGatewayAutoscaleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayBackendAddressPoolInput)(nil)).Elem(), ApplicationGatewayBackendAddressPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayBackendAddressPoolArrayInput)(nil)).Elem(), ApplicationGatewayBackendAddressPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayBackendHttpSettingInput)(nil)).Elem(), ApplicationGatewayBackendHttpSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayBackendHttpSettingArrayInput)(nil)).Elem(), ApplicationGatewayBackendHttpSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayBackendHttpSettingAuthenticationCertificateInput)(nil)).Elem(), ApplicationGatewayBackendHttpSettingAuthenticationCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayInput)(nil)).Elem(), ApplicationGatewayBackendHttpSettingAuthenticationCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayBackendHttpSettingConnectionDrainingInput)(nil)).Elem(), ApplicationGatewayBackendHttpSettingConnectionDrainingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayBackendHttpSettingConnectionDrainingPtrInput)(nil)).Elem(), ApplicationGatewayBackendHttpSettingConnectionDrainingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayCustomErrorConfigurationInput)(nil)).Elem(), ApplicationGatewayCustomErrorConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayCustomErrorConfigurationArrayInput)(nil)).Elem(), ApplicationGatewayCustomErrorConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayFrontendIpConfigurationInput)(nil)).Elem(), ApplicationGatewayFrontendIpConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayFrontendIpConfigurationArrayInput)(nil)).Elem(), ApplicationGatewayFrontendIpConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayFrontendPortInput)(nil)).Elem(), ApplicationGatewayFrontendPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayFrontendPortArrayInput)(nil)).Elem(), ApplicationGatewayFrontendPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayGatewayIpConfigurationInput)(nil)).Elem(), ApplicationGatewayGatewayIpConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayGatewayIpConfigurationArrayInput)(nil)).Elem(), ApplicationGatewayGatewayIpConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayGlobalInput)(nil)).Elem(), ApplicationGatewayGlobalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayGlobalPtrInput)(nil)).Elem(), ApplicationGatewayGlobalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayHttpListenerInput)(nil)).Elem(), ApplicationGatewayHttpListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayHttpListenerArrayInput)(nil)).Elem(), ApplicationGatewayHttpListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayHttpListenerCustomErrorConfigurationInput)(nil)).Elem(), ApplicationGatewayHttpListenerCustomErrorConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayHttpListenerCustomErrorConfigurationArrayInput)(nil)).Elem(), ApplicationGatewayHttpListenerCustomErrorConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayIdentityInput)(nil)).Elem(), ApplicationGatewayIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayIdentityPtrInput)(nil)).Elem(), ApplicationGatewayIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayPrivateEndpointConnectionInput)(nil)).Elem(), ApplicationGatewayPrivateEndpointConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayPrivateEndpointConnectionArrayInput)(nil)).Elem(), ApplicationGatewayPrivateEndpointConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayPrivateLinkConfigurationInput)(nil)).Elem(), ApplicationGatewayPrivateLinkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayPrivateLinkConfigurationArrayInput)(nil)).Elem(), ApplicationGatewayPrivateLinkConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayPrivateLinkConfigurationIpConfigurationInput)(nil)).Elem(), ApplicationGatewayPrivateLinkConfigurationIpConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayInput)(nil)).Elem(), ApplicationGatewayPrivateLinkConfigurationIpConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayProbeInput)(nil)).Elem(), ApplicationGatewayProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayProbeArrayInput)(nil)).Elem(), ApplicationGatewayProbeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayProbeMatchInput)(nil)).Elem(), ApplicationGatewayProbeMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayProbeMatchPtrInput)(nil)).Elem(), ApplicationGatewayProbeMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayRedirectConfigurationInput)(nil)).Elem(), ApplicationGatewayRedirectConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayRedirectConfigurationArrayInput)(nil)).Elem(), ApplicationGatewayRedirectConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayRequestRoutingRuleInput)(nil)).Elem(), ApplicationGatewayRequestRoutingRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayRequestRoutingRuleArrayInput)(nil)).Elem(), ApplicationGatewayRequestRoutingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayRewriteRuleSetInput)(nil)).Elem(), ApplicationGatewayRewriteRuleSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayRewriteRuleSetArrayInput)(nil)).Elem(), ApplicationGatewayRewriteRuleSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayRewriteRuleSetRewriteRuleInput)(nil)).Elem(), ApplicationGatewayRewriteRuleSetRewriteRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayRewriteRuleSetRewriteRuleArrayInput)(nil)).Elem(), ApplicationGatewayRewriteRuleSetRewriteRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayRewriteRuleSetRewriteRuleConditionInput)(nil)).Elem(), ApplicationGatewayRewriteRuleSetRewriteRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayInput)(nil)).Elem(), ApplicationGatewayRewriteRuleSetRewriteRuleConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationInput)(nil)).Elem(), ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayInput)(nil)).Elem(), ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationInput)(nil)).Elem(), ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayInput)(nil)).Elem(), ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayRewriteRuleSetRewriteRuleUrlInput)(nil)).Elem(), ApplicationGatewayRewriteRuleSetRewriteRuleUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrInput)(nil)).Elem(), ApplicationGatewayRewriteRuleSetRewriteRuleUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewaySkuInput)(nil)).Elem(), ApplicationGatewaySkuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewaySkuPtrInput)(nil)).Elem(), ApplicationGatewaySkuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewaySslCertificateInput)(nil)).Elem(), ApplicationGatewaySslCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewaySslCertificateArrayInput)(nil)).Elem(), ApplicationGatewaySslCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewaySslPolicyInput)(nil)).Elem(), ApplicationGatewaySslPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewaySslPolicyPtrInput)(nil)).Elem(), ApplicationGatewaySslPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewaySslProfileInput)(nil)).Elem(), ApplicationGatewaySslProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewaySslProfileArrayInput)(nil)).Elem(), ApplicationGatewaySslProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewaySslProfileSslPolicyInput)(nil)).Elem(), ApplicationGatewaySslProfileSslPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewaySslProfileSslPolicyPtrInput)(nil)).Elem(), ApplicationGatewaySslProfileSslPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayTrustedClientCertificateInput)(nil)).Elem(), ApplicationGatewayTrustedClientCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayTrustedClientCertificateArrayInput)(nil)).Elem(), ApplicationGatewayTrustedClientCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayTrustedRootCertificateInput)(nil)).Elem(), ApplicationGatewayTrustedRootCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayTrustedRootCertificateArrayInput)(nil)).Elem(), ApplicationGatewayTrustedRootCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayUrlPathMapInput)(nil)).Elem(), ApplicationGatewayUrlPathMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayUrlPathMapArrayInput)(nil)).Elem(), ApplicationGatewayUrlPathMapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayUrlPathMapPathRuleInput)(nil)).Elem(), ApplicationGatewayUrlPathMapPathRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayUrlPathMapPathRuleArrayInput)(nil)).Elem(), ApplicationGatewayUrlPathMapPathRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayWafConfigurationInput)(nil)).Elem(), ApplicationGatewayWafConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayWafConfigurationPtrInput)(nil)).Elem(), ApplicationGatewayWafConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayWafConfigurationDisabledRuleGroupInput)(nil)).Elem(), ApplicationGatewayWafConfigurationDisabledRuleGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayWafConfigurationDisabledRuleGroupArrayInput)(nil)).Elem(), ApplicationGatewayWafConfigurationDisabledRuleGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayWafConfigurationExclusionInput)(nil)).Elem(), ApplicationGatewayWafConfigurationExclusionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationGatewayWafConfigurationExclusionArrayInput)(nil)).Elem(), ApplicationGatewayWafConfigurationExclusionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExpressRouteCircuitPeeringIpv6Input)(nil)).Elem(), ExpressRouteCircuitPeeringIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExpressRouteCircuitPeeringIpv6PtrInput)(nil)).Elem(), ExpressRouteCircuitPeeringIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExpressRouteCircuitPeeringIpv6MicrosoftPeeringInput)(nil)).Elem(), ExpressRouteCircuitPeeringIpv6MicrosoftPeeringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrInput)(nil)).Elem(), ExpressRouteCircuitPeeringIpv6MicrosoftPeeringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExpressRouteCircuitPeeringMicrosoftPeeringConfigInput)(nil)).Elem(), ExpressRouteCircuitPeeringMicrosoftPeeringConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrInput)(nil)).Elem(), ExpressRouteCircuitPeeringMicrosoftPeeringConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExpressRouteCircuitSkuInput)(nil)).Elem(), ExpressRouteCircuitSkuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExpressRouteCircuitSkuPtrInput)(nil)).Elem(), ExpressRouteCircuitSkuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExpressRouteConnectionRoutingInput)(nil)).Elem(), ExpressRouteConnectionRoutingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExpressRouteConnectionRoutingPtrInput)(nil)).Elem(), ExpressRouteConnectionRoutingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExpressRouteConnectionRoutingPropagatedRouteTableInput)(nil)).Elem(), ExpressRouteConnectionRoutingPropagatedRouteTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExpressRouteConnectionRoutingPropagatedRouteTablePtrInput)(nil)).Elem(), ExpressRouteConnectionRoutingPropagatedRouteTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExpressRoutePortIdentityInput)(nil)).Elem(), ExpressRoutePortIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExpressRoutePortIdentityPtrInput)(nil)).Elem(), ExpressRoutePortIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExpressRoutePortLink1Input)(nil)).Elem(), ExpressRoutePortLink1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExpressRoutePortLink1PtrInput)(nil)).Elem(), ExpressRoutePortLink1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExpressRoutePortLink2Input)(nil)).Elem(), ExpressRoutePortLink2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExpressRoutePortLink2PtrInput)(nil)).Elem(), ExpressRoutePortLink2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallApplicationRuleCollectionRuleInput)(nil)).Elem(), FirewallApplicationRuleCollectionRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallApplicationRuleCollectionRuleArrayInput)(nil)).Elem(), FirewallApplicationRuleCollectionRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallApplicationRuleCollectionRuleProtocolInput)(nil)).Elem(), FirewallApplicationRuleCollectionRuleProtocolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallApplicationRuleCollectionRuleProtocolArrayInput)(nil)).Elem(), FirewallApplicationRuleCollectionRuleProtocolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallIpConfigurationInput)(nil)).Elem(), FirewallIpConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallIpConfigurationArrayInput)(nil)).Elem(), FirewallIpConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallManagementIpConfigurationInput)(nil)).Elem(), FirewallManagementIpConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallManagementIpConfigurationPtrInput)(nil)).Elem(), FirewallManagementIpConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallNatRuleCollectionRuleInput)(nil)).Elem(), FirewallNatRuleCollectionRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallNatRuleCollectionRuleArrayInput)(nil)).Elem(), FirewallNatRuleCollectionRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallNetworkRuleCollectionRuleInput)(nil)).Elem(), FirewallNetworkRuleCollectionRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallNetworkRuleCollectionRuleArrayInput)(nil)).Elem(), FirewallNetworkRuleCollectionRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyDnsInput)(nil)).Elem(), FirewallPolicyDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyDnsPtrInput)(nil)).Elem(), FirewallPolicyDnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyExplicitProxyInput)(nil)).Elem(), FirewallPolicyExplicitProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyExplicitProxyPtrInput)(nil)).Elem(), FirewallPolicyExplicitProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyIdentityInput)(nil)).Elem(), FirewallPolicyIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyIdentityPtrInput)(nil)).Elem(), FirewallPolicyIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInsightsInput)(nil)).Elem(), FirewallPolicyInsightsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInsightsPtrInput)(nil)).Elem(), FirewallPolicyInsightsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInsightsLogAnalyticsWorkspaceInput)(nil)).Elem(), FirewallPolicyInsightsLogAnalyticsWorkspaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInsightsLogAnalyticsWorkspaceArrayInput)(nil)).Elem(), FirewallPolicyInsightsLogAnalyticsWorkspaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyIntrusionDetectionInput)(nil)).Elem(), FirewallPolicyIntrusionDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyIntrusionDetectionPtrInput)(nil)).Elem(), FirewallPolicyIntrusionDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyIntrusionDetectionSignatureOverrideInput)(nil)).Elem(), FirewallPolicyIntrusionDetectionSignatureOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyIntrusionDetectionSignatureOverrideArrayInput)(nil)).Elem(), FirewallPolicyIntrusionDetectionSignatureOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyIntrusionDetectionTrafficBypassInput)(nil)).Elem(), FirewallPolicyIntrusionDetectionTrafficBypassArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyIntrusionDetectionTrafficBypassArrayInput)(nil)).Elem(), FirewallPolicyIntrusionDetectionTrafficBypassArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyRuleCollectionGroupApplicationRuleCollectionInput)(nil)).Elem(), FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArrayInput)(nil)).Elem(), FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleInput)(nil)).Elem(), FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArrayInput)(nil)).Elem(), FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderInput)(nil)).Elem(), FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArrayInput)(nil)).Elem(), FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolInput)(nil)).Elem(), FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArrayInput)(nil)).Elem(), FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyRuleCollectionGroupNatRuleCollectionInput)(nil)).Elem(), FirewallPolicyRuleCollectionGroupNatRuleCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyRuleCollectionGroupNatRuleCollectionArrayInput)(nil)).Elem(), FirewallPolicyRuleCollectionGroupNatRuleCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleInput)(nil)).Elem(), FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArrayInput)(nil)).Elem(), FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyRuleCollectionGroupNetworkRuleCollectionInput)(nil)).Elem(), FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArrayInput)(nil)).Elem(), FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleInput)(nil)).Elem(), FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArrayInput)(nil)).Elem(), FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyThreatIntelligenceAllowlistInput)(nil)).Elem(), FirewallPolicyThreatIntelligenceAllowlistArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyThreatIntelligenceAllowlistPtrInput)(nil)).Elem(), FirewallPolicyThreatIntelligenceAllowlistArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyTlsCertificateInput)(nil)).Elem(), FirewallPolicyTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyTlsCertificatePtrInput)(nil)).Elem(), FirewallPolicyTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVirtualHubInput)(nil)).Elem(), FirewallVirtualHubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallVirtualHubPtrInput)(nil)).Elem(), FirewallVirtualHubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalNetworkGatewayBgpSettingsInput)(nil)).Elem(), LocalNetworkGatewayBgpSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalNetworkGatewayBgpSettingsPtrInput)(nil)).Elem(), LocalNetworkGatewayBgpSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConnectionMonitorEndpointInput)(nil)).Elem(), NetworkConnectionMonitorEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConnectionMonitorEndpointArrayInput)(nil)).Elem(), NetworkConnectionMonitorEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConnectionMonitorEndpointFilterInput)(nil)).Elem(), NetworkConnectionMonitorEndpointFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConnectionMonitorEndpointFilterPtrInput)(nil)).Elem(), NetworkConnectionMonitorEndpointFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConnectionMonitorEndpointFilterItemInput)(nil)).Elem(), NetworkConnectionMonitorEndpointFilterItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConnectionMonitorEndpointFilterItemArrayInput)(nil)).Elem(), NetworkConnectionMonitorEndpointFilterItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConnectionMonitorTestConfigurationInput)(nil)).Elem(), NetworkConnectionMonitorTestConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConnectionMonitorTestConfigurationArrayInput)(nil)).Elem(), NetworkConnectionMonitorTestConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConnectionMonitorTestConfigurationHttpConfigurationInput)(nil)).Elem(), NetworkConnectionMonitorTestConfigurationHttpConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrInput)(nil)).Elem(), NetworkConnectionMonitorTestConfigurationHttpConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderInput)(nil)).Elem(), NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayInput)(nil)).Elem(), NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConnectionMonitorTestConfigurationIcmpConfigurationInput)(nil)).Elem(), NetworkConnectionMonitorTestConfigurationIcmpConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrInput)(nil)).Elem(), NetworkConnectionMonitorTestConfigurationIcmpConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConnectionMonitorTestConfigurationSuccessThresholdInput)(nil)).Elem(), NetworkConnectionMonitorTestConfigurationSuccessThresholdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConnectionMonitorTestConfigurationSuccessThresholdPtrInput)(nil)).Elem(), NetworkConnectionMonitorTestConfigurationSuccessThresholdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConnectionMonitorTestConfigurationTcpConfigurationInput)(nil)).Elem(), NetworkConnectionMonitorTestConfigurationTcpConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrInput)(nil)).Elem(), NetworkConnectionMonitorTestConfigurationTcpConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConnectionMonitorTestGroupInput)(nil)).Elem(), NetworkConnectionMonitorTestGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConnectionMonitorTestGroupArrayInput)(nil)).Elem(), NetworkConnectionMonitorTestGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfaceIpConfigurationInput)(nil)).Elem(), NetworkInterfaceIpConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfaceIpConfigurationArrayInput)(nil)).Elem(), NetworkInterfaceIpConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerAdminRuleDestinationInput)(nil)).Elem(), NetworkManagerAdminRuleDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerAdminRuleDestinationArrayInput)(nil)).Elem(), NetworkManagerAdminRuleDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerAdminRuleSourceInput)(nil)).Elem(), NetworkManagerAdminRuleSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerAdminRuleSourceArrayInput)(nil)).Elem(), NetworkManagerAdminRuleSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerConnectivityConfigurationAppliesToGroupInput)(nil)).Elem(), NetworkManagerConnectivityConfigurationAppliesToGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerConnectivityConfigurationAppliesToGroupArrayInput)(nil)).Elem(), NetworkManagerConnectivityConfigurationAppliesToGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerConnectivityConfigurationHubInput)(nil)).Elem(), NetworkManagerConnectivityConfigurationHubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerConnectivityConfigurationHubPtrInput)(nil)).Elem(), NetworkManagerConnectivityConfigurationHubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerCrossTenantScopeInput)(nil)).Elem(), NetworkManagerCrossTenantScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerCrossTenantScopeArrayInput)(nil)).Elem(), NetworkManagerCrossTenantScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerScopeInput)(nil)).Elem(), NetworkManagerScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerScopePtrInput)(nil)).Elem(), NetworkManagerScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPacketCaptureFilterInput)(nil)).Elem(), NetworkPacketCaptureFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPacketCaptureFilterArrayInput)(nil)).Elem(), NetworkPacketCaptureFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPacketCaptureStorageLocationInput)(nil)).Elem(), NetworkPacketCaptureStorageLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPacketCaptureStorageLocationPtrInput)(nil)).Elem(), NetworkPacketCaptureStorageLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityGroupSecurityRuleInput)(nil)).Elem(), NetworkSecurityGroupSecurityRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityGroupSecurityRuleArrayInput)(nil)).Elem(), NetworkSecurityGroupSecurityRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkWatcherFlowLogRetentionPolicyInput)(nil)).Elem(), NetworkWatcherFlowLogRetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkWatcherFlowLogRetentionPolicyPtrInput)(nil)).Elem(), NetworkWatcherFlowLogRetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkWatcherFlowLogTrafficAnalyticsInput)(nil)).Elem(), NetworkWatcherFlowLogTrafficAnalyticsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkWatcherFlowLogTrafficAnalyticsPtrInput)(nil)).Elem(), NetworkWatcherFlowLogTrafficAnalyticsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PointToPointVpnGatewayConnectionConfigurationInput)(nil)).Elem(), PointToPointVpnGatewayConnectionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PointToPointVpnGatewayConnectionConfigurationPtrInput)(nil)).Elem(), PointToPointVpnGatewayConnectionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PointToPointVpnGatewayConnectionConfigurationRouteInput)(nil)).Elem(), PointToPointVpnGatewayConnectionConfigurationRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PointToPointVpnGatewayConnectionConfigurationRoutePtrInput)(nil)).Elem(), PointToPointVpnGatewayConnectionConfigurationRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableInput)(nil)).Elem(), PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrInput)(nil)).Elem(), PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolInput)(nil)).Elem(), PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrInput)(nil)).Elem(), PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileContainerNetworkInterfaceInput)(nil)).Elem(), ProfileContainerNetworkInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileContainerNetworkInterfacePtrInput)(nil)).Elem(), ProfileContainerNetworkInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileContainerNetworkInterfaceIpConfigurationInput)(nil)).Elem(), ProfileContainerNetworkInterfaceIpConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileContainerNetworkInterfaceIpConfigurationArrayInput)(nil)).Elem(), ProfileContainerNetworkInterfaceIpConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteFilterRuleInput)(nil)).Elem(), RouteFilterRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteFilterRulePtrInput)(nil)).Elem(), RouteFilterRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteMapRuleInput)(nil)).Elem(), RouteMapRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteMapRuleArrayInput)(nil)).Elem(), RouteMapRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteMapRuleActionInput)(nil)).Elem(), RouteMapRuleActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteMapRuleActionArrayInput)(nil)).Elem(), RouteMapRuleActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteMapRuleActionParameterInput)(nil)).Elem(), RouteMapRuleActionParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteMapRuleActionParameterArrayInput)(nil)).Elem(), RouteMapRuleActionParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteMapRuleMatchCriterionInput)(nil)).Elem(), RouteMapRuleMatchCriterionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteMapRuleMatchCriterionArrayInput)(nil)).Elem(), RouteMapRuleMatchCriterionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableRouteInput)(nil)).Elem(), RouteTableRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableRouteArrayInput)(nil)).Elem(), RouteTableRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutingIntentRoutingPolicyInput)(nil)).Elem(), RoutingIntentRoutingPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutingIntentRoutingPolicyArrayInput)(nil)).Elem(), RoutingIntentRoutingPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetDelegationInput)(nil)).Elem(), SubnetDelegationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetDelegationArrayInput)(nil)).Elem(), SubnetDelegationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetDelegationServiceDelegationInput)(nil)).Elem(), SubnetDelegationServiceDelegationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetServiceEndpointStoragePolicyDefinitionInput)(nil)).Elem(), SubnetServiceEndpointStoragePolicyDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetServiceEndpointStoragePolicyDefinitionPtrInput)(nil)).Elem(), SubnetServiceEndpointStoragePolicyDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficManagerAzureEndpointCustomHeaderInput)(nil)).Elem(), TrafficManagerAzureEndpointCustomHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficManagerAzureEndpointCustomHeaderArrayInput)(nil)).Elem(), TrafficManagerAzureEndpointCustomHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficManagerAzureEndpointSubnetInput)(nil)).Elem(), TrafficManagerAzureEndpointSubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficManagerAzureEndpointSubnetArrayInput)(nil)).Elem(), TrafficManagerAzureEndpointSubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficManagerExternalEndpointCustomHeaderInput)(nil)).Elem(), TrafficManagerExternalEndpointCustomHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficManagerExternalEndpointCustomHeaderArrayInput)(nil)).Elem(), TrafficManagerExternalEndpointCustomHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficManagerExternalEndpointSubnetInput)(nil)).Elem(), TrafficManagerExternalEndpointSubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficManagerExternalEndpointSubnetArrayInput)(nil)).Elem(), TrafficManagerExternalEndpointSubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficManagerNestedEndpointCustomHeaderInput)(nil)).Elem(), TrafficManagerNestedEndpointCustomHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficManagerNestedEndpointCustomHeaderArrayInput)(nil)).Elem(), TrafficManagerNestedEndpointCustomHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficManagerNestedEndpointSubnetInput)(nil)).Elem(), TrafficManagerNestedEndpointSubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficManagerNestedEndpointSubnetArrayInput)(nil)).Elem(), TrafficManagerNestedEndpointSubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficManagerProfileDnsConfigInput)(nil)).Elem(), TrafficManagerProfileDnsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficManagerProfileDnsConfigPtrInput)(nil)).Elem(), TrafficManagerProfileDnsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficManagerProfileMonitorConfigInput)(nil)).Elem(), TrafficManagerProfileMonitorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficManagerProfileMonitorConfigPtrInput)(nil)).Elem(), TrafficManagerProfileMonitorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficManagerProfileMonitorConfigCustomHeaderInput)(nil)).Elem(), TrafficManagerProfileMonitorConfigCustomHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficManagerProfileMonitorConfigCustomHeaderArrayInput)(nil)).Elem(), TrafficManagerProfileMonitorConfigCustomHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualHubConnectionRoutingInput)(nil)).Elem(), VirtualHubConnectionRoutingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualHubConnectionRoutingPtrInput)(nil)).Elem(), VirtualHubConnectionRoutingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualHubConnectionRoutingPropagatedRouteTableInput)(nil)).Elem(), VirtualHubConnectionRoutingPropagatedRouteTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualHubConnectionRoutingPropagatedRouteTablePtrInput)(nil)).Elem(), VirtualHubConnectionRoutingPropagatedRouteTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualHubConnectionRoutingStaticVnetRouteInput)(nil)).Elem(), VirtualHubConnectionRoutingStaticVnetRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualHubConnectionRoutingStaticVnetRouteArrayInput)(nil)).Elem(), VirtualHubConnectionRoutingStaticVnetRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualHubRouteInput)(nil)).Elem(), VirtualHubRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualHubRouteArrayInput)(nil)).Elem(), VirtualHubRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualHubRouteTableRouteTypeInput)(nil)).Elem(), VirtualHubRouteTableRouteTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualHubRouteTableRouteTypeArrayInput)(nil)).Elem(), VirtualHubRouteTableRouteTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkDdosProtectionPlanInput)(nil)).Elem(), VirtualNetworkDdosProtectionPlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkDdosProtectionPlanPtrInput)(nil)).Elem(), VirtualNetworkDdosProtectionPlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkEncryptionInput)(nil)).Elem(), VirtualNetworkEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkEncryptionPtrInput)(nil)).Elem(), VirtualNetworkEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayBgpSettingsInput)(nil)).Elem(), VirtualNetworkGatewayBgpSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayBgpSettingsPtrInput)(nil)).Elem(), VirtualNetworkGatewayBgpSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayBgpSettingsPeeringAddressInput)(nil)).Elem(), VirtualNetworkGatewayBgpSettingsPeeringAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayBgpSettingsPeeringAddressArrayInput)(nil)).Elem(), VirtualNetworkGatewayBgpSettingsPeeringAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayConnectionCustomBgpAddressesInput)(nil)).Elem(), VirtualNetworkGatewayConnectionCustomBgpAddressesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayConnectionCustomBgpAddressesPtrInput)(nil)).Elem(), VirtualNetworkGatewayConnectionCustomBgpAddressesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayConnectionIpsecPolicyInput)(nil)).Elem(), VirtualNetworkGatewayConnectionIpsecPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayConnectionIpsecPolicyPtrInput)(nil)).Elem(), VirtualNetworkGatewayConnectionIpsecPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayConnectionTrafficSelectorPolicyInput)(nil)).Elem(), VirtualNetworkGatewayConnectionTrafficSelectorPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrInput)(nil)).Elem(), VirtualNetworkGatewayConnectionTrafficSelectorPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayCustomRouteInput)(nil)).Elem(), VirtualNetworkGatewayCustomRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayCustomRoutePtrInput)(nil)).Elem(), VirtualNetworkGatewayCustomRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayIpConfigurationInput)(nil)).Elem(), VirtualNetworkGatewayIpConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayIpConfigurationArrayInput)(nil)).Elem(), VirtualNetworkGatewayIpConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayNatRuleExternalMappingInput)(nil)).Elem(), VirtualNetworkGatewayNatRuleExternalMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayNatRuleExternalMappingArrayInput)(nil)).Elem(), VirtualNetworkGatewayNatRuleExternalMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayNatRuleInternalMappingInput)(nil)).Elem(), VirtualNetworkGatewayNatRuleInternalMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayNatRuleInternalMappingArrayInput)(nil)).Elem(), VirtualNetworkGatewayNatRuleInternalMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayPolicyGroupInput)(nil)).Elem(), VirtualNetworkGatewayPolicyGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayPolicyGroupArrayInput)(nil)).Elem(), VirtualNetworkGatewayPolicyGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayPolicyGroupPolicyMemberInput)(nil)).Elem(), VirtualNetworkGatewayPolicyGroupPolicyMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayPolicyGroupPolicyMemberArrayInput)(nil)).Elem(), VirtualNetworkGatewayPolicyGroupPolicyMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayVpnClientConfigurationInput)(nil)).Elem(), VirtualNetworkGatewayVpnClientConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayVpnClientConfigurationPtrInput)(nil)).Elem(), VirtualNetworkGatewayVpnClientConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyInput)(nil)).Elem(), VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrInput)(nil)).Elem(), VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayVpnClientConfigurationRadiusServerInput)(nil)).Elem(), VirtualNetworkGatewayVpnClientConfigurationRadiusServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayInput)(nil)).Elem(), VirtualNetworkGatewayVpnClientConfigurationRadiusServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateInput)(nil)).Elem(), VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayInput)(nil)).Elem(), VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayVpnClientConfigurationRootCertificateInput)(nil)).Elem(), VirtualNetworkGatewayVpnClientConfigurationRootCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayInput)(nil)).Elem(), VirtualNetworkGatewayVpnClientConfigurationRootCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionInput)(nil)).Elem(), VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayInput)(nil)).Elem(), VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkSubnetInput)(nil)).Elem(), VirtualNetworkSubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualNetworkSubnetArrayInput)(nil)).Elem(), VirtualNetworkSubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VnpGatewayNatRuleExternalMappingInput)(nil)).Elem(), VnpGatewayNatRuleExternalMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VnpGatewayNatRuleExternalMappingArrayInput)(nil)).Elem(), VnpGatewayNatRuleExternalMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VnpGatewayNatRuleInternalMappingInput)(nil)).Elem(), VnpGatewayNatRuleInternalMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VnpGatewayNatRuleInternalMappingArrayInput)(nil)).Elem(), VnpGatewayNatRuleInternalMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayBgpSettingsInput)(nil)).Elem(), VpnGatewayBgpSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayBgpSettingsPtrInput)(nil)).Elem(), VpnGatewayBgpSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayBgpSettingsInstance0BgpPeeringAddressInput)(nil)).Elem(), VpnGatewayBgpSettingsInstance0BgpPeeringAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrInput)(nil)).Elem(), VpnGatewayBgpSettingsInstance0BgpPeeringAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayBgpSettingsInstance1BgpPeeringAddressInput)(nil)).Elem(), VpnGatewayBgpSettingsInstance1BgpPeeringAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrInput)(nil)).Elem(), VpnGatewayBgpSettingsInstance1BgpPeeringAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayConnectionRoutingInput)(nil)).Elem(), VpnGatewayConnectionRoutingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayConnectionRoutingPtrInput)(nil)).Elem(), VpnGatewayConnectionRoutingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayConnectionRoutingPropagatedRouteTableInput)(nil)).Elem(), VpnGatewayConnectionRoutingPropagatedRouteTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayConnectionRoutingPropagatedRouteTablePtrInput)(nil)).Elem(), VpnGatewayConnectionRoutingPropagatedRouteTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayConnectionTrafficSelectorPolicyInput)(nil)).Elem(), VpnGatewayConnectionTrafficSelectorPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayConnectionTrafficSelectorPolicyArrayInput)(nil)).Elem(), VpnGatewayConnectionTrafficSelectorPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayConnectionVpnLinkInput)(nil)).Elem(), VpnGatewayConnectionVpnLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayConnectionVpnLinkArrayInput)(nil)).Elem(), VpnGatewayConnectionVpnLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayConnectionVpnLinkCustomBgpAddressInput)(nil)).Elem(), VpnGatewayConnectionVpnLinkCustomBgpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayConnectionVpnLinkCustomBgpAddressArrayInput)(nil)).Elem(), VpnGatewayConnectionVpnLinkCustomBgpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayConnectionVpnLinkIpsecPolicyInput)(nil)).Elem(), VpnGatewayConnectionVpnLinkIpsecPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayConnectionVpnLinkIpsecPolicyArrayInput)(nil)).Elem(), VpnGatewayConnectionVpnLinkIpsecPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnServerConfigurationAzureActiveDirectoryAuthenticationInput)(nil)).Elem(), VpnServerConfigurationAzureActiveDirectoryAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnServerConfigurationAzureActiveDirectoryAuthenticationArrayInput)(nil)).Elem(), VpnServerConfigurationAzureActiveDirectoryAuthenticationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnServerConfigurationClientRevokedCertificateInput)(nil)).Elem(), VpnServerConfigurationClientRevokedCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnServerConfigurationClientRevokedCertificateArrayInput)(nil)).Elem(), VpnServerConfigurationClientRevokedCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnServerConfigurationClientRootCertificateInput)(nil)).Elem(), VpnServerConfigurationClientRootCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnServerConfigurationClientRootCertificateArrayInput)(nil)).Elem(), VpnServerConfigurationClientRootCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnServerConfigurationIpsecPolicyInput)(nil)).Elem(), VpnServerConfigurationIpsecPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnServerConfigurationIpsecPolicyPtrInput)(nil)).Elem(), VpnServerConfigurationIpsecPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnServerConfigurationPolicyGroupPolicyInput)(nil)).Elem(), VpnServerConfigurationPolicyGroupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnServerConfigurationPolicyGroupPolicyArrayInput)(nil)).Elem(), VpnServerConfigurationPolicyGroupPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnServerConfigurationRadiusInput)(nil)).Elem(), VpnServerConfigurationRadiusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnServerConfigurationRadiusPtrInput)(nil)).Elem(), VpnServerConfigurationRadiusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnServerConfigurationRadiusClientRootCertificateInput)(nil)).Elem(), VpnServerConfigurationRadiusClientRootCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnServerConfigurationRadiusClientRootCertificateArrayInput)(nil)).Elem(), VpnServerConfigurationRadiusClientRootCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnServerConfigurationRadiusServerInput)(nil)).Elem(), VpnServerConfigurationRadiusServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnServerConfigurationRadiusServerArrayInput)(nil)).Elem(), VpnServerConfigurationRadiusServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnServerConfigurationRadiusServerRootCertificateInput)(nil)).Elem(), VpnServerConfigurationRadiusServerRootCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnServerConfigurationRadiusServerRootCertificateArrayInput)(nil)).Elem(), VpnServerConfigurationRadiusServerRootCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnSiteLinkInput)(nil)).Elem(), VpnSiteLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnSiteLinkArrayInput)(nil)).Elem(), VpnSiteLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnSiteLinkBgpInput)(nil)).Elem(), VpnSiteLinkBgpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnSiteLinkBgpPtrInput)(nil)).Elem(), VpnSiteLinkBgpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnSiteO365PolicyInput)(nil)).Elem(), VpnSiteO365PolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnSiteO365PolicyPtrInput)(nil)).Elem(), VpnSiteO365PolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnSiteO365PolicyTrafficCategoryInput)(nil)).Elem(), VpnSiteO365PolicyTrafficCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnSiteO365PolicyTrafficCategoryPtrInput)(nil)).Elem(), VpnSiteO365PolicyTrafficCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayAuthenticationCertificateInput)(nil)).Elem(), GetApplicationGatewayAuthenticationCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayAuthenticationCertificateArrayInput)(nil)).Elem(), GetApplicationGatewayAuthenticationCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayAutoscaleConfigurationInput)(nil)).Elem(), GetApplicationGatewayAutoscaleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayAutoscaleConfigurationArrayInput)(nil)).Elem(), GetApplicationGatewayAutoscaleConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayBackendAddressPoolInput)(nil)).Elem(), GetApplicationGatewayBackendAddressPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayBackendAddressPoolArrayInput)(nil)).Elem(), GetApplicationGatewayBackendAddressPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayBackendHttpSettingInput)(nil)).Elem(), GetApplicationGatewayBackendHttpSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayBackendHttpSettingArrayInput)(nil)).Elem(), GetApplicationGatewayBackendHttpSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayBackendHttpSettingAuthenticationCertificateInput)(nil)).Elem(), GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayInput)(nil)).Elem(), GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayBackendHttpSettingConnectionDrainingInput)(nil)).Elem(), GetApplicationGatewayBackendHttpSettingConnectionDrainingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayBackendHttpSettingConnectionDrainingArrayInput)(nil)).Elem(), GetApplicationGatewayBackendHttpSettingConnectionDrainingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayCustomErrorConfigurationInput)(nil)).Elem(), GetApplicationGatewayCustomErrorConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayCustomErrorConfigurationArrayInput)(nil)).Elem(), GetApplicationGatewayCustomErrorConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayFrontendIpConfigurationInput)(nil)).Elem(), GetApplicationGatewayFrontendIpConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayFrontendIpConfigurationArrayInput)(nil)).Elem(), GetApplicationGatewayFrontendIpConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayFrontendPortInput)(nil)).Elem(), GetApplicationGatewayFrontendPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayFrontendPortArrayInput)(nil)).Elem(), GetApplicationGatewayFrontendPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayGatewayIpConfigurationInput)(nil)).Elem(), GetApplicationGatewayGatewayIpConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayGatewayIpConfigurationArrayInput)(nil)).Elem(), GetApplicationGatewayGatewayIpConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayGlobalInput)(nil)).Elem(), GetApplicationGatewayGlobalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayGlobalArrayInput)(nil)).Elem(), GetApplicationGatewayGlobalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayHttpListenerInput)(nil)).Elem(), GetApplicationGatewayHttpListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayHttpListenerArrayInput)(nil)).Elem(), GetApplicationGatewayHttpListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayHttpListenerCustomErrorConfigurationInput)(nil)).Elem(), GetApplicationGatewayHttpListenerCustomErrorConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayHttpListenerCustomErrorConfigurationArrayInput)(nil)).Elem(), GetApplicationGatewayHttpListenerCustomErrorConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayIdentityInput)(nil)).Elem(), GetApplicationGatewayIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayIdentityArrayInput)(nil)).Elem(), GetApplicationGatewayIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayPrivateEndpointConnectionInput)(nil)).Elem(), GetApplicationGatewayPrivateEndpointConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayPrivateEndpointConnectionArrayInput)(nil)).Elem(), GetApplicationGatewayPrivateEndpointConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayPrivateLinkConfigurationInput)(nil)).Elem(), GetApplicationGatewayPrivateLinkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayPrivateLinkConfigurationArrayInput)(nil)).Elem(), GetApplicationGatewayPrivateLinkConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayPrivateLinkConfigurationIpConfigurationInput)(nil)).Elem(), GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayInput)(nil)).Elem(), GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayProbeInput)(nil)).Elem(), GetApplicationGatewayProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayProbeArrayInput)(nil)).Elem(), GetApplicationGatewayProbeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayProbeMatchInput)(nil)).Elem(), GetApplicationGatewayProbeMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayProbeMatchArrayInput)(nil)).Elem(), GetApplicationGatewayProbeMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayRedirectConfigurationInput)(nil)).Elem(), GetApplicationGatewayRedirectConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayRedirectConfigurationArrayInput)(nil)).Elem(), GetApplicationGatewayRedirectConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayRequestRoutingRuleInput)(nil)).Elem(), GetApplicationGatewayRequestRoutingRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayRequestRoutingRuleArrayInput)(nil)).Elem(), GetApplicationGatewayRequestRoutingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayRewriteRuleSetInput)(nil)).Elem(), GetApplicationGatewayRewriteRuleSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayRewriteRuleSetArrayInput)(nil)).Elem(), GetApplicationGatewayRewriteRuleSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayRewriteRuleSetRewriteRuleInput)(nil)).Elem(), GetApplicationGatewayRewriteRuleSetRewriteRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayRewriteRuleSetRewriteRuleArrayInput)(nil)).Elem(), GetApplicationGatewayRewriteRuleSetRewriteRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayRewriteRuleSetRewriteRuleConditionInput)(nil)).Elem(), GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayInput)(nil)).Elem(), GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationInput)(nil)).Elem(), GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayInput)(nil)).Elem(), GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationInput)(nil)).Elem(), GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayInput)(nil)).Elem(), GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayRewriteRuleSetRewriteRuleUrlInput)(nil)).Elem(), GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArrayInput)(nil)).Elem(), GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewaySkusInput)(nil)).Elem(), GetApplicationGatewaySkusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewaySkusArrayInput)(nil)).Elem(), GetApplicationGatewaySkusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewaySslCertificateInput)(nil)).Elem(), GetApplicationGatewaySslCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewaySslCertificateArrayInput)(nil)).Elem(), GetApplicationGatewaySslCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewaySslPolicyInput)(nil)).Elem(), GetApplicationGatewaySslPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewaySslPolicyArrayInput)(nil)).Elem(), GetApplicationGatewaySslPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewaySslProfileInput)(nil)).Elem(), GetApplicationGatewaySslProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewaySslProfileArrayInput)(nil)).Elem(), GetApplicationGatewaySslProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewaySslProfileSslPolicyInput)(nil)).Elem(), GetApplicationGatewaySslProfileSslPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewaySslProfileSslPolicyArrayInput)(nil)).Elem(), GetApplicationGatewaySslProfileSslPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayTrustedClientCertificateInput)(nil)).Elem(), GetApplicationGatewayTrustedClientCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayTrustedClientCertificateArrayInput)(nil)).Elem(), GetApplicationGatewayTrustedClientCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayTrustedRootCertificateInput)(nil)).Elem(), GetApplicationGatewayTrustedRootCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayTrustedRootCertificateArrayInput)(nil)).Elem(), GetApplicationGatewayTrustedRootCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayUrlPathMapInput)(nil)).Elem(), GetApplicationGatewayUrlPathMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayUrlPathMapArrayInput)(nil)).Elem(), GetApplicationGatewayUrlPathMapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayUrlPathMapPathRuleInput)(nil)).Elem(), GetApplicationGatewayUrlPathMapPathRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayUrlPathMapPathRuleArrayInput)(nil)).Elem(), GetApplicationGatewayUrlPathMapPathRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayWafConfigurationInput)(nil)).Elem(), GetApplicationGatewayWafConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayWafConfigurationArrayInput)(nil)).Elem(), GetApplicationGatewayWafConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayWafConfigurationDisabledRuleGroupInput)(nil)).Elem(), GetApplicationGatewayWafConfigurationDisabledRuleGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayWafConfigurationDisabledRuleGroupArrayInput)(nil)).Elem(), GetApplicationGatewayWafConfigurationDisabledRuleGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayWafConfigurationExclusionInput)(nil)).Elem(), GetApplicationGatewayWafConfigurationExclusionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApplicationGatewayWafConfigurationExclusionArrayInput)(nil)).Elem(), GetApplicationGatewayWafConfigurationExclusionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExpressRouteCircuitPeeringTypeInput)(nil)).Elem(), GetExpressRouteCircuitPeeringTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExpressRouteCircuitPeeringTypeArrayInput)(nil)).Elem(), GetExpressRouteCircuitPeeringTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExpressRouteCircuitServiceProviderPropertyInput)(nil)).Elem(), GetExpressRouteCircuitServiceProviderPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExpressRouteCircuitServiceProviderPropertyArrayInput)(nil)).Elem(), GetExpressRouteCircuitServiceProviderPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetExpressRouteCircuitSkuInput)(nil)).Elem(), GetExpressRouteCircuitSkuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallIpConfigurationInput)(nil)).Elem(), GetFirewallIpConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallIpConfigurationArrayInput)(nil)).Elem(), GetFirewallIpConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallManagementIpConfigurationInput)(nil)).Elem(), GetFirewallManagementIpConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallManagementIpConfigurationArrayInput)(nil)).Elem(), GetFirewallManagementIpConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyDnInput)(nil)).Elem(), GetFirewallPolicyDnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyDnArrayInput)(nil)).Elem(), GetFirewallPolicyDnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyThreatIntelligenceAllowlistInput)(nil)).Elem(), GetFirewallPolicyThreatIntelligenceAllowlistArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPolicyThreatIntelligenceAllowlistArrayInput)(nil)).Elem(), GetFirewallPolicyThreatIntelligenceAllowlistArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallVirtualHubInput)(nil)).Elem(), GetFirewallVirtualHubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallVirtualHubArrayInput)(nil)).Elem(), GetFirewallVirtualHubArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayConnectionIpsecPolicyInput)(nil)).Elem(), GetGatewayConnectionIpsecPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayConnectionIpsecPolicyArrayInput)(nil)).Elem(), GetGatewayConnectionIpsecPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayConnectionTrafficSelectorPolicyInput)(nil)).Elem(), GetGatewayConnectionTrafficSelectorPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayConnectionTrafficSelectorPolicyArrayInput)(nil)).Elem(), GetGatewayConnectionTrafficSelectorPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocalNetworkGatewayBgpSettingInput)(nil)).Elem(), GetLocalNetworkGatewayBgpSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocalNetworkGatewayBgpSettingArrayInput)(nil)).Elem(), GetLocalNetworkGatewayBgpSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkInterfaceIpConfigurationInput)(nil)).Elem(), GetNetworkInterfaceIpConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkInterfaceIpConfigurationArrayInput)(nil)).Elem(), GetNetworkInterfaceIpConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkManagerCrossTenantScopeInput)(nil)).Elem(), GetNetworkManagerCrossTenantScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkManagerCrossTenantScopeArrayInput)(nil)).Elem(), GetNetworkManagerCrossTenantScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkManagerScopeInput)(nil)).Elem(), GetNetworkManagerScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkManagerScopeArrayInput)(nil)).Elem(), GetNetworkManagerScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkSecurityGroupSecurityRuleInput)(nil)).Elem(), GetNetworkSecurityGroupSecurityRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkSecurityGroupSecurityRuleArrayInput)(nil)).Elem(), GetNetworkSecurityGroupSecurityRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublicIPsPublicIpInput)(nil)).Elem(), GetPublicIPsPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublicIPsPublicIpArrayInput)(nil)).Elem(), GetPublicIPsPublicIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteFilterRuleInput)(nil)).Elem(), GetRouteFilterRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteFilterRuleArrayInput)(nil)).Elem(), GetRouteFilterRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTableRouteInput)(nil)).Elem(), GetRouteTableRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTableRouteArrayInput)(nil)).Elem(), GetRouteTableRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficManagerProfileDnsConfigInput)(nil)).Elem(), GetTrafficManagerProfileDnsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficManagerProfileDnsConfigArrayInput)(nil)).Elem(), GetTrafficManagerProfileDnsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficManagerProfileMonitorConfigInput)(nil)).Elem(), GetTrafficManagerProfileMonitorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficManagerProfileMonitorConfigArrayInput)(nil)).Elem(), GetTrafficManagerProfileMonitorConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficManagerProfileMonitorConfigCustomHeaderInput)(nil)).Elem(), GetTrafficManagerProfileMonitorConfigCustomHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficManagerProfileMonitorConfigCustomHeaderArrayInput)(nil)).Elem(), GetTrafficManagerProfileMonitorConfigCustomHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualHubConnectionRoutingInput)(nil)).Elem(), GetVirtualHubConnectionRoutingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualHubConnectionRoutingArrayInput)(nil)).Elem(), GetVirtualHubConnectionRoutingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualHubConnectionRoutingPropagatedRouteTableInput)(nil)).Elem(), GetVirtualHubConnectionRoutingPropagatedRouteTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualHubConnectionRoutingPropagatedRouteTableArrayInput)(nil)).Elem(), GetVirtualHubConnectionRoutingPropagatedRouteTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualHubConnectionRoutingStaticVnetRouteInput)(nil)).Elem(), GetVirtualHubConnectionRoutingStaticVnetRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualHubConnectionRoutingStaticVnetRouteArrayInput)(nil)).Elem(), GetVirtualHubConnectionRoutingStaticVnetRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualHubRouteTableRouteTypeInput)(nil)).Elem(), GetVirtualHubRouteTableRouteTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualHubRouteTableRouteTypeArrayInput)(nil)).Elem(), GetVirtualHubRouteTableRouteTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNetworkGatewayBgpSettingInput)(nil)).Elem(), GetVirtualNetworkGatewayBgpSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNetworkGatewayBgpSettingArrayInput)(nil)).Elem(), GetVirtualNetworkGatewayBgpSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNetworkGatewayCustomRouteInput)(nil)).Elem(), GetVirtualNetworkGatewayCustomRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNetworkGatewayCustomRouteArrayInput)(nil)).Elem(), GetVirtualNetworkGatewayCustomRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNetworkGatewayIpConfigurationInput)(nil)).Elem(), GetVirtualNetworkGatewayIpConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNetworkGatewayIpConfigurationArrayInput)(nil)).Elem(), GetVirtualNetworkGatewayIpConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNetworkGatewayVpnClientConfigurationInput)(nil)).Elem(), GetVirtualNetworkGatewayVpnClientConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNetworkGatewayVpnClientConfigurationArrayInput)(nil)).Elem(), GetVirtualNetworkGatewayVpnClientConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateInput)(nil)).Elem(), GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayInput)(nil)).Elem(), GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateInput)(nil)).Elem(), GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayInput)(nil)).Elem(), GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnGatewayBgpSettingInput)(nil)).Elem(), GetVpnGatewayBgpSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnGatewayBgpSettingArrayInput)(nil)).Elem(), GetVpnGatewayBgpSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnGatewayBgpSettingInstance0BgpPeeringAddressInput)(nil)).Elem(), GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArrayInput)(nil)).Elem(), GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnGatewayBgpSettingInstance1BgpPeeringAddressInput)(nil)).Elem(), GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArrayInput)(nil)).Elem(), GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArray{})
	pulumi.RegisterOutputType(ApplicationGatewayAuthenticationCertificateOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAuthenticationCertificateArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAutoscaleConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAutoscaleConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingConnectionDrainingOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingConnectionDrainingPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayCustomErrorConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayCustomErrorConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendIpConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendIpConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendPortOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendPortArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayGatewayIpConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayGatewayIpConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayGlobalOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayGlobalPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerCustomErrorConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIdentityOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIdentityPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPrivateEndpointConnectionOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPrivateEndpointConnectionArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPrivateLinkConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPrivateLinkConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeMatchOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeMatchPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRedirectConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRedirectConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRequestRoutingRuleOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRequestRoutingRuleArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleSetOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleSetArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleSetRewriteRuleOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleSetRewriteRuleUrlPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySkuOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySkuPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslCertificateOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslCertificateArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslPolicyOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslPolicyPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslProfileOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslProfileArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslProfileSslPolicyOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslProfileSslPolicyPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayTrustedClientCertificateOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayTrustedClientCertificateArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayTrustedRootCertificateOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayTrustedRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapPathRuleOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapPathRuleArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayWafConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayWafConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayWafConfigurationDisabledRuleGroupOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayWafConfigurationExclusionOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayWafConfigurationExclusionArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringIpv6Output{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringIpv6PtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringIpv6MicrosoftPeeringOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringIpv6MicrosoftPeeringPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringMicrosoftPeeringConfigOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringMicrosoftPeeringConfigPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitSkuOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitSkuPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteConnectionRoutingOutput{})
	pulumi.RegisterOutputType(ExpressRouteConnectionRoutingPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteConnectionRoutingPropagatedRouteTableOutput{})
	pulumi.RegisterOutputType(ExpressRouteConnectionRoutingPropagatedRouteTablePtrOutput{})
	pulumi.RegisterOutputType(ExpressRoutePortIdentityOutput{})
	pulumi.RegisterOutputType(ExpressRoutePortIdentityPtrOutput{})
	pulumi.RegisterOutputType(ExpressRoutePortLink1Output{})
	pulumi.RegisterOutputType(ExpressRoutePortLink1PtrOutput{})
	pulumi.RegisterOutputType(ExpressRoutePortLink2Output{})
	pulumi.RegisterOutputType(ExpressRoutePortLink2PtrOutput{})
	pulumi.RegisterOutputType(FirewallApplicationRuleCollectionRuleOutput{})
	pulumi.RegisterOutputType(FirewallApplicationRuleCollectionRuleArrayOutput{})
	pulumi.RegisterOutputType(FirewallApplicationRuleCollectionRuleProtocolOutput{})
	pulumi.RegisterOutputType(FirewallApplicationRuleCollectionRuleProtocolArrayOutput{})
	pulumi.RegisterOutputType(FirewallIpConfigurationOutput{})
	pulumi.RegisterOutputType(FirewallIpConfigurationArrayOutput{})
	pulumi.RegisterOutputType(FirewallManagementIpConfigurationOutput{})
	pulumi.RegisterOutputType(FirewallManagementIpConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirewallNatRuleCollectionRuleOutput{})
	pulumi.RegisterOutputType(FirewallNatRuleCollectionRuleArrayOutput{})
	pulumi.RegisterOutputType(FirewallNetworkRuleCollectionRuleOutput{})
	pulumi.RegisterOutputType(FirewallNetworkRuleCollectionRuleArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyDnsOutput{})
	pulumi.RegisterOutputType(FirewallPolicyDnsPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyExplicitProxyOutput{})
	pulumi.RegisterOutputType(FirewallPolicyExplicitProxyPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIdentityOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIdentityPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInsightsOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInsightsPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInsightsLogAnalyticsWorkspaceOutput{})
	pulumi.RegisterOutputType(FirewallPolicyInsightsLogAnalyticsWorkspaceArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionSignatureOverrideOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionSignatureOverrideArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionTrafficBypassOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionTrafficBypassArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleCollectionGroupApplicationRuleCollectionOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleCollectionGroupApplicationRuleCollectionArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeaderArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocolArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleCollectionGroupNatRuleCollectionOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleCollectionGroupNatRuleCollectionArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleCollectionGroupNatRuleCollectionRuleArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleCollectionGroupNetworkRuleCollectionOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleCollectionGroupNetworkRuleCollectionArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRuleArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyThreatIntelligenceAllowlistOutput{})
	pulumi.RegisterOutputType(FirewallPolicyThreatIntelligenceAllowlistPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyTlsCertificateOutput{})
	pulumi.RegisterOutputType(FirewallPolicyTlsCertificatePtrOutput{})
	pulumi.RegisterOutputType(FirewallVirtualHubOutput{})
	pulumi.RegisterOutputType(FirewallVirtualHubPtrOutput{})
	pulumi.RegisterOutputType(LocalNetworkGatewayBgpSettingsOutput{})
	pulumi.RegisterOutputType(LocalNetworkGatewayBgpSettingsPtrOutput{})
	pulumi.RegisterOutputType(NetworkConnectionMonitorEndpointOutput{})
	pulumi.RegisterOutputType(NetworkConnectionMonitorEndpointArrayOutput{})
	pulumi.RegisterOutputType(NetworkConnectionMonitorEndpointFilterOutput{})
	pulumi.RegisterOutputType(NetworkConnectionMonitorEndpointFilterPtrOutput{})
	pulumi.RegisterOutputType(NetworkConnectionMonitorEndpointFilterItemOutput{})
	pulumi.RegisterOutputType(NetworkConnectionMonitorEndpointFilterItemArrayOutput{})
	pulumi.RegisterOutputType(NetworkConnectionMonitorTestConfigurationOutput{})
	pulumi.RegisterOutputType(NetworkConnectionMonitorTestConfigurationArrayOutput{})
	pulumi.RegisterOutputType(NetworkConnectionMonitorTestConfigurationHttpConfigurationOutput{})
	pulumi.RegisterOutputType(NetworkConnectionMonitorTestConfigurationHttpConfigurationPtrOutput{})
	pulumi.RegisterOutputType(NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderOutput{})
	pulumi.RegisterOutputType(NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeaderArrayOutput{})
	pulumi.RegisterOutputType(NetworkConnectionMonitorTestConfigurationIcmpConfigurationOutput{})
	pulumi.RegisterOutputType(NetworkConnectionMonitorTestConfigurationIcmpConfigurationPtrOutput{})
	pulumi.RegisterOutputType(NetworkConnectionMonitorTestConfigurationSuccessThresholdOutput{})
	pulumi.RegisterOutputType(NetworkConnectionMonitorTestConfigurationSuccessThresholdPtrOutput{})
	pulumi.RegisterOutputType(NetworkConnectionMonitorTestConfigurationTcpConfigurationOutput{})
	pulumi.RegisterOutputType(NetworkConnectionMonitorTestConfigurationTcpConfigurationPtrOutput{})
	pulumi.RegisterOutputType(NetworkConnectionMonitorTestGroupOutput{})
	pulumi.RegisterOutputType(NetworkConnectionMonitorTestGroupArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIpConfigurationOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIpConfigurationArrayOutput{})
	pulumi.RegisterOutputType(NetworkManagerAdminRuleDestinationOutput{})
	pulumi.RegisterOutputType(NetworkManagerAdminRuleDestinationArrayOutput{})
	pulumi.RegisterOutputType(NetworkManagerAdminRuleSourceOutput{})
	pulumi.RegisterOutputType(NetworkManagerAdminRuleSourceArrayOutput{})
	pulumi.RegisterOutputType(NetworkManagerConnectivityConfigurationAppliesToGroupOutput{})
	pulumi.RegisterOutputType(NetworkManagerConnectivityConfigurationAppliesToGroupArrayOutput{})
	pulumi.RegisterOutputType(NetworkManagerConnectivityConfigurationHubOutput{})
	pulumi.RegisterOutputType(NetworkManagerConnectivityConfigurationHubPtrOutput{})
	pulumi.RegisterOutputType(NetworkManagerCrossTenantScopeOutput{})
	pulumi.RegisterOutputType(NetworkManagerCrossTenantScopeArrayOutput{})
	pulumi.RegisterOutputType(NetworkManagerScopeOutput{})
	pulumi.RegisterOutputType(NetworkManagerScopePtrOutput{})
	pulumi.RegisterOutputType(NetworkPacketCaptureFilterOutput{})
	pulumi.RegisterOutputType(NetworkPacketCaptureFilterArrayOutput{})
	pulumi.RegisterOutputType(NetworkPacketCaptureStorageLocationOutput{})
	pulumi.RegisterOutputType(NetworkPacketCaptureStorageLocationPtrOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupSecurityRuleOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupSecurityRuleArrayOutput{})
	pulumi.RegisterOutputType(NetworkWatcherFlowLogRetentionPolicyOutput{})
	pulumi.RegisterOutputType(NetworkWatcherFlowLogRetentionPolicyPtrOutput{})
	pulumi.RegisterOutputType(NetworkWatcherFlowLogTrafficAnalyticsOutput{})
	pulumi.RegisterOutputType(NetworkWatcherFlowLogTrafficAnalyticsPtrOutput{})
	pulumi.RegisterOutputType(PointToPointVpnGatewayConnectionConfigurationOutput{})
	pulumi.RegisterOutputType(PointToPointVpnGatewayConnectionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(PointToPointVpnGatewayConnectionConfigurationRouteOutput{})
	pulumi.RegisterOutputType(PointToPointVpnGatewayConnectionConfigurationRoutePtrOutput{})
	pulumi.RegisterOutputType(PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTableOutput{})
	pulumi.RegisterOutputType(PointToPointVpnGatewayConnectionConfigurationRoutePropagatedRouteTablePtrOutput{})
	pulumi.RegisterOutputType(PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolOutput{})
	pulumi.RegisterOutputType(PointToPointVpnGatewayConnectionConfigurationVpnClientAddressPoolPtrOutput{})
	pulumi.RegisterOutputType(ProfileContainerNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(ProfileContainerNetworkInterfacePtrOutput{})
	pulumi.RegisterOutputType(ProfileContainerNetworkInterfaceIpConfigurationOutput{})
	pulumi.RegisterOutputType(ProfileContainerNetworkInterfaceIpConfigurationArrayOutput{})
	pulumi.RegisterOutputType(RouteFilterRuleOutput{})
	pulumi.RegisterOutputType(RouteFilterRulePtrOutput{})
	pulumi.RegisterOutputType(RouteMapRuleOutput{})
	pulumi.RegisterOutputType(RouteMapRuleArrayOutput{})
	pulumi.RegisterOutputType(RouteMapRuleActionOutput{})
	pulumi.RegisterOutputType(RouteMapRuleActionArrayOutput{})
	pulumi.RegisterOutputType(RouteMapRuleActionParameterOutput{})
	pulumi.RegisterOutputType(RouteMapRuleActionParameterArrayOutput{})
	pulumi.RegisterOutputType(RouteMapRuleMatchCriterionOutput{})
	pulumi.RegisterOutputType(RouteMapRuleMatchCriterionArrayOutput{})
	pulumi.RegisterOutputType(RouteTableRouteOutput{})
	pulumi.RegisterOutputType(RouteTableRouteArrayOutput{})
	pulumi.RegisterOutputType(RoutingIntentRoutingPolicyOutput{})
	pulumi.RegisterOutputType(RoutingIntentRoutingPolicyArrayOutput{})
	pulumi.RegisterOutputType(SubnetDelegationOutput{})
	pulumi.RegisterOutputType(SubnetDelegationArrayOutput{})
	pulumi.RegisterOutputType(SubnetDelegationServiceDelegationOutput{})
	pulumi.RegisterOutputType(SubnetServiceEndpointStoragePolicyDefinitionOutput{})
	pulumi.RegisterOutputType(SubnetServiceEndpointStoragePolicyDefinitionPtrOutput{})
	pulumi.RegisterOutputType(TrafficManagerAzureEndpointCustomHeaderOutput{})
	pulumi.RegisterOutputType(TrafficManagerAzureEndpointCustomHeaderArrayOutput{})
	pulumi.RegisterOutputType(TrafficManagerAzureEndpointSubnetOutput{})
	pulumi.RegisterOutputType(TrafficManagerAzureEndpointSubnetArrayOutput{})
	pulumi.RegisterOutputType(TrafficManagerExternalEndpointCustomHeaderOutput{})
	pulumi.RegisterOutputType(TrafficManagerExternalEndpointCustomHeaderArrayOutput{})
	pulumi.RegisterOutputType(TrafficManagerExternalEndpointSubnetOutput{})
	pulumi.RegisterOutputType(TrafficManagerExternalEndpointSubnetArrayOutput{})
	pulumi.RegisterOutputType(TrafficManagerNestedEndpointCustomHeaderOutput{})
	pulumi.RegisterOutputType(TrafficManagerNestedEndpointCustomHeaderArrayOutput{})
	pulumi.RegisterOutputType(TrafficManagerNestedEndpointSubnetOutput{})
	pulumi.RegisterOutputType(TrafficManagerNestedEndpointSubnetArrayOutput{})
	pulumi.RegisterOutputType(TrafficManagerProfileDnsConfigOutput{})
	pulumi.RegisterOutputType(TrafficManagerProfileDnsConfigPtrOutput{})
	pulumi.RegisterOutputType(TrafficManagerProfileMonitorConfigOutput{})
	pulumi.RegisterOutputType(TrafficManagerProfileMonitorConfigPtrOutput{})
	pulumi.RegisterOutputType(TrafficManagerProfileMonitorConfigCustomHeaderOutput{})
	pulumi.RegisterOutputType(TrafficManagerProfileMonitorConfigCustomHeaderArrayOutput{})
	pulumi.RegisterOutputType(VirtualHubConnectionRoutingOutput{})
	pulumi.RegisterOutputType(VirtualHubConnectionRoutingPtrOutput{})
	pulumi.RegisterOutputType(VirtualHubConnectionRoutingPropagatedRouteTableOutput{})
	pulumi.RegisterOutputType(VirtualHubConnectionRoutingPropagatedRouteTablePtrOutput{})
	pulumi.RegisterOutputType(VirtualHubConnectionRoutingStaticVnetRouteOutput{})
	pulumi.RegisterOutputType(VirtualHubConnectionRoutingStaticVnetRouteArrayOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteArrayOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableRouteTypeOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableRouteTypeArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkDdosProtectionPlanOutput{})
	pulumi.RegisterOutputType(VirtualNetworkDdosProtectionPlanPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkEncryptionOutput{})
	pulumi.RegisterOutputType(VirtualNetworkEncryptionPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayBgpSettingsOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayBgpSettingsPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayBgpSettingsPeeringAddressOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayBgpSettingsPeeringAddressArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayConnectionCustomBgpAddressesOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayConnectionCustomBgpAddressesPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayConnectionIpsecPolicyOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayConnectionIpsecPolicyPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayConnectionTrafficSelectorPolicyOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayConnectionTrafficSelectorPolicyPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayCustomRouteOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayCustomRoutePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIpConfigurationOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIpConfigurationArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayNatRuleExternalMappingOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayNatRuleExternalMappingArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayNatRuleInternalMappingOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayNatRuleInternalMappingArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayPolicyGroupOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayPolicyGroupArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayPolicyGroupPolicyMemberOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayPolicyGroupPolicyMemberArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayVpnClientConfigurationOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayVpnClientConfigurationPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayVpnClientConfigurationIpsecPolicyPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayVpnClientConfigurationRadiusServerOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayVpnClientConfigurationRadiusServerArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnectionArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkSubnetOutput{})
	pulumi.RegisterOutputType(VirtualNetworkSubnetArrayOutput{})
	pulumi.RegisterOutputType(VnpGatewayNatRuleExternalMappingOutput{})
	pulumi.RegisterOutputType(VnpGatewayNatRuleExternalMappingArrayOutput{})
	pulumi.RegisterOutputType(VnpGatewayNatRuleInternalMappingOutput{})
	pulumi.RegisterOutputType(VnpGatewayNatRuleInternalMappingArrayOutput{})
	pulumi.RegisterOutputType(VpnGatewayBgpSettingsOutput{})
	pulumi.RegisterOutputType(VpnGatewayBgpSettingsPtrOutput{})
	pulumi.RegisterOutputType(VpnGatewayBgpSettingsInstance0BgpPeeringAddressOutput{})
	pulumi.RegisterOutputType(VpnGatewayBgpSettingsInstance0BgpPeeringAddressPtrOutput{})
	pulumi.RegisterOutputType(VpnGatewayBgpSettingsInstance1BgpPeeringAddressOutput{})
	pulumi.RegisterOutputType(VpnGatewayBgpSettingsInstance1BgpPeeringAddressPtrOutput{})
	pulumi.RegisterOutputType(VpnGatewayConnectionRoutingOutput{})
	pulumi.RegisterOutputType(VpnGatewayConnectionRoutingPtrOutput{})
	pulumi.RegisterOutputType(VpnGatewayConnectionRoutingPropagatedRouteTableOutput{})
	pulumi.RegisterOutputType(VpnGatewayConnectionRoutingPropagatedRouteTablePtrOutput{})
	pulumi.RegisterOutputType(VpnGatewayConnectionTrafficSelectorPolicyOutput{})
	pulumi.RegisterOutputType(VpnGatewayConnectionTrafficSelectorPolicyArrayOutput{})
	pulumi.RegisterOutputType(VpnGatewayConnectionVpnLinkOutput{})
	pulumi.RegisterOutputType(VpnGatewayConnectionVpnLinkArrayOutput{})
	pulumi.RegisterOutputType(VpnGatewayConnectionVpnLinkCustomBgpAddressOutput{})
	pulumi.RegisterOutputType(VpnGatewayConnectionVpnLinkCustomBgpAddressArrayOutput{})
	pulumi.RegisterOutputType(VpnGatewayConnectionVpnLinkIpsecPolicyOutput{})
	pulumi.RegisterOutputType(VpnGatewayConnectionVpnLinkIpsecPolicyArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationAzureActiveDirectoryAuthenticationOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationAzureActiveDirectoryAuthenticationArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationClientRevokedCertificateOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationClientRevokedCertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationClientRootCertificateOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationClientRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationIpsecPolicyOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationIpsecPolicyPtrOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationPolicyGroupPolicyOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationPolicyGroupPolicyArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationRadiusOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationRadiusPtrOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationRadiusClientRootCertificateOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationRadiusClientRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationRadiusServerOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationRadiusServerArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationRadiusServerRootCertificateOutput{})
	pulumi.RegisterOutputType(VpnServerConfigurationRadiusServerRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnSiteLinkOutput{})
	pulumi.RegisterOutputType(VpnSiteLinkArrayOutput{})
	pulumi.RegisterOutputType(VpnSiteLinkBgpOutput{})
	pulumi.RegisterOutputType(VpnSiteLinkBgpPtrOutput{})
	pulumi.RegisterOutputType(VpnSiteO365PolicyOutput{})
	pulumi.RegisterOutputType(VpnSiteO365PolicyPtrOutput{})
	pulumi.RegisterOutputType(VpnSiteO365PolicyTrafficCategoryOutput{})
	pulumi.RegisterOutputType(VpnSiteO365PolicyTrafficCategoryPtrOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayAuthenticationCertificateOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayAuthenticationCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayAutoscaleConfigurationOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayAutoscaleConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayBackendAddressPoolOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayBackendAddressPoolArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayBackendHttpSettingOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayBackendHttpSettingArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayBackendHttpSettingAuthenticationCertificateOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayBackendHttpSettingAuthenticationCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayBackendHttpSettingConnectionDrainingOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayBackendHttpSettingConnectionDrainingArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayCustomErrorConfigurationOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayCustomErrorConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayFrontendIpConfigurationOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayFrontendIpConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayFrontendPortOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayFrontendPortArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayGatewayIpConfigurationOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayGatewayIpConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayGlobalOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayGlobalArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayHttpListenerOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayHttpListenerArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayHttpListenerCustomErrorConfigurationOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayHttpListenerCustomErrorConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayIdentityOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayPrivateEndpointConnectionOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayPrivateEndpointConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayPrivateLinkConfigurationOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayPrivateLinkConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayPrivateLinkConfigurationIpConfigurationOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayPrivateLinkConfigurationIpConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayProbeOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayProbeArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayProbeMatchOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayProbeMatchArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayRedirectConfigurationOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayRedirectConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayRequestRoutingRuleOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayRequestRoutingRuleArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayRewriteRuleSetOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayRewriteRuleSetArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayRewriteRuleSetRewriteRuleOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayRewriteRuleSetRewriteRuleArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayRewriteRuleSetRewriteRuleConditionOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayRewriteRuleSetRewriteRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayRewriteRuleSetRewriteRuleUrlOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayRewriteRuleSetRewriteRuleUrlArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewaySkusOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewaySkusArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewaySslCertificateOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewaySslCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewaySslPolicyOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewaySslPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewaySslProfileOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewaySslProfileArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewaySslProfileSslPolicyOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewaySslProfileSslPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayTrustedClientCertificateOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayTrustedClientCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayTrustedRootCertificateOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayTrustedRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayUrlPathMapOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayUrlPathMapArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayUrlPathMapPathRuleOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayUrlPathMapPathRuleArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayWafConfigurationOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayWafConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayWafConfigurationDisabledRuleGroupOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayWafConfigurationDisabledRuleGroupArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayWafConfigurationExclusionOutput{})
	pulumi.RegisterOutputType(GetApplicationGatewayWafConfigurationExclusionArrayOutput{})
	pulumi.RegisterOutputType(GetExpressRouteCircuitPeeringTypeOutput{})
	pulumi.RegisterOutputType(GetExpressRouteCircuitPeeringTypeArrayOutput{})
	pulumi.RegisterOutputType(GetExpressRouteCircuitServiceProviderPropertyOutput{})
	pulumi.RegisterOutputType(GetExpressRouteCircuitServiceProviderPropertyArrayOutput{})
	pulumi.RegisterOutputType(GetExpressRouteCircuitSkuOutput{})
	pulumi.RegisterOutputType(GetFirewallIpConfigurationOutput{})
	pulumi.RegisterOutputType(GetFirewallIpConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallManagementIpConfigurationOutput{})
	pulumi.RegisterOutputType(GetFirewallManagementIpConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyDnOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyDnArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyThreatIntelligenceAllowlistOutput{})
	pulumi.RegisterOutputType(GetFirewallPolicyThreatIntelligenceAllowlistArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallVirtualHubOutput{})
	pulumi.RegisterOutputType(GetFirewallVirtualHubArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayConnectionIpsecPolicyOutput{})
	pulumi.RegisterOutputType(GetGatewayConnectionIpsecPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayConnectionTrafficSelectorPolicyOutput{})
	pulumi.RegisterOutputType(GetGatewayConnectionTrafficSelectorPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetLocalNetworkGatewayBgpSettingOutput{})
	pulumi.RegisterOutputType(GetLocalNetworkGatewayBgpSettingArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfaceIpConfigurationOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfaceIpConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkManagerCrossTenantScopeOutput{})
	pulumi.RegisterOutputType(GetNetworkManagerCrossTenantScopeArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkManagerScopeOutput{})
	pulumi.RegisterOutputType(GetNetworkManagerScopeArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkSecurityGroupSecurityRuleOutput{})
	pulumi.RegisterOutputType(GetNetworkSecurityGroupSecurityRuleArrayOutput{})
	pulumi.RegisterOutputType(GetPublicIPsPublicIpOutput{})
	pulumi.RegisterOutputType(GetPublicIPsPublicIpArrayOutput{})
	pulumi.RegisterOutputType(GetRouteFilterRuleOutput{})
	pulumi.RegisterOutputType(GetRouteFilterRuleArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTableRouteOutput{})
	pulumi.RegisterOutputType(GetRouteTableRouteArrayOutput{})
	pulumi.RegisterOutputType(GetTrafficManagerProfileDnsConfigOutput{})
	pulumi.RegisterOutputType(GetTrafficManagerProfileDnsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetTrafficManagerProfileMonitorConfigOutput{})
	pulumi.RegisterOutputType(GetTrafficManagerProfileMonitorConfigArrayOutput{})
	pulumi.RegisterOutputType(GetTrafficManagerProfileMonitorConfigCustomHeaderOutput{})
	pulumi.RegisterOutputType(GetTrafficManagerProfileMonitorConfigCustomHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualHubConnectionRoutingOutput{})
	pulumi.RegisterOutputType(GetVirtualHubConnectionRoutingArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualHubConnectionRoutingPropagatedRouteTableOutput{})
	pulumi.RegisterOutputType(GetVirtualHubConnectionRoutingPropagatedRouteTableArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualHubConnectionRoutingStaticVnetRouteOutput{})
	pulumi.RegisterOutputType(GetVirtualHubConnectionRoutingStaticVnetRouteArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualHubRouteTableRouteTypeOutput{})
	pulumi.RegisterOutputType(GetVirtualHubRouteTableRouteTypeArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNetworkGatewayBgpSettingOutput{})
	pulumi.RegisterOutputType(GetVirtualNetworkGatewayBgpSettingArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNetworkGatewayCustomRouteOutput{})
	pulumi.RegisterOutputType(GetVirtualNetworkGatewayCustomRouteArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNetworkGatewayIpConfigurationOutput{})
	pulumi.RegisterOutputType(GetVirtualNetworkGatewayIpConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNetworkGatewayVpnClientConfigurationOutput{})
	pulumi.RegisterOutputType(GetVirtualNetworkGatewayVpnClientConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateOutput{})
	pulumi.RegisterOutputType(GetVirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateOutput{})
	pulumi.RegisterOutputType(GetVirtualNetworkGatewayVpnClientConfigurationRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetVpnGatewayBgpSettingOutput{})
	pulumi.RegisterOutputType(GetVpnGatewayBgpSettingArrayOutput{})
	pulumi.RegisterOutputType(GetVpnGatewayBgpSettingInstance0BgpPeeringAddressOutput{})
	pulumi.RegisterOutputType(GetVpnGatewayBgpSettingInstance0BgpPeeringAddressArrayOutput{})
	pulumi.RegisterOutputType(GetVpnGatewayBgpSettingInstance1BgpPeeringAddressOutput{})
	pulumi.RegisterOutputType(GetVpnGatewayBgpSettingInstance1BgpPeeringAddressArrayOutput{})
}
