// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Network Manager Subscription Connection which may cross tenants.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			current, err := core.LookupSubscription(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			exampleNetworkManager, err := network.NewNetworkManager(ctx, "exampleNetworkManager", &network.NetworkManagerArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				Scope: &network.NetworkManagerScopeArgs{
//					SubscriptionIds: pulumi.StringArray{
//						*pulumi.String(current.Id),
//					},
//				},
//				ScopeAccesses: pulumi.StringArray{
//					pulumi.String("SecurityAdmin"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = network.NewNetworkManagerSubscriptionConnection(ctx, "exampleNetworkManagerSubscriptionConnection", &network.NetworkManagerSubscriptionConnectionArgs{
//				SubscriptionId:   *pulumi.String(current.Id),
//				NetworkManagerId: exampleNetworkManager.ID(),
//				Description:      pulumi.String("example"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Network Subscription Network Manager Connection can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:network/networkManagerSubscriptionConnection:NetworkManagerSubscriptionConnection example /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Network/networkManagerConnections/networkManagerConnection1
//
// ```
type NetworkManagerSubscriptionConnection struct {
	pulumi.CustomResourceState

	// The Connection state of the Network Manager Subscription Connection.
	ConnectionState pulumi.StringOutput `pulumi:"connectionState"`
	// A description of the Network Manager Subscription Connection.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the name which should be used for this Network Subscription Network Manager Connection. Changing this forces a new Network Subscription Network Manager Connection to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the ID of the Network Manager which the Subscription is connected to.
	NetworkManagerId pulumi.StringOutput `pulumi:"networkManagerId"`
	// Specifies the ID of the target Subscription. Changing this forces a new resource to be created.
	SubscriptionId pulumi.StringOutput `pulumi:"subscriptionId"`
}

// NewNetworkManagerSubscriptionConnection registers a new resource with the given unique name, arguments, and options.
func NewNetworkManagerSubscriptionConnection(ctx *pulumi.Context,
	name string, args *NetworkManagerSubscriptionConnectionArgs, opts ...pulumi.ResourceOption) (*NetworkManagerSubscriptionConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkManagerId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkManagerId'")
	}
	if args.SubscriptionId == nil {
		return nil, errors.New("invalid value for required argument 'SubscriptionId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkManagerSubscriptionConnection
	err := ctx.RegisterResource("azure:network/networkManagerSubscriptionConnection:NetworkManagerSubscriptionConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkManagerSubscriptionConnection gets an existing NetworkManagerSubscriptionConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkManagerSubscriptionConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkManagerSubscriptionConnectionState, opts ...pulumi.ResourceOption) (*NetworkManagerSubscriptionConnection, error) {
	var resource NetworkManagerSubscriptionConnection
	err := ctx.ReadResource("azure:network/networkManagerSubscriptionConnection:NetworkManagerSubscriptionConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkManagerSubscriptionConnection resources.
type networkManagerSubscriptionConnectionState struct {
	// The Connection state of the Network Manager Subscription Connection.
	ConnectionState *string `pulumi:"connectionState"`
	// A description of the Network Manager Subscription Connection.
	Description *string `pulumi:"description"`
	// Specifies the name which should be used for this Network Subscription Network Manager Connection. Changing this forces a new Network Subscription Network Manager Connection to be created.
	Name *string `pulumi:"name"`
	// Specifies the ID of the Network Manager which the Subscription is connected to.
	NetworkManagerId *string `pulumi:"networkManagerId"`
	// Specifies the ID of the target Subscription. Changing this forces a new resource to be created.
	SubscriptionId *string `pulumi:"subscriptionId"`
}

type NetworkManagerSubscriptionConnectionState struct {
	// The Connection state of the Network Manager Subscription Connection.
	ConnectionState pulumi.StringPtrInput
	// A description of the Network Manager Subscription Connection.
	Description pulumi.StringPtrInput
	// Specifies the name which should be used for this Network Subscription Network Manager Connection. Changing this forces a new Network Subscription Network Manager Connection to be created.
	Name pulumi.StringPtrInput
	// Specifies the ID of the Network Manager which the Subscription is connected to.
	NetworkManagerId pulumi.StringPtrInput
	// Specifies the ID of the target Subscription. Changing this forces a new resource to be created.
	SubscriptionId pulumi.StringPtrInput
}

func (NetworkManagerSubscriptionConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkManagerSubscriptionConnectionState)(nil)).Elem()
}

type networkManagerSubscriptionConnectionArgs struct {
	// A description of the Network Manager Subscription Connection.
	Description *string `pulumi:"description"`
	// Specifies the name which should be used for this Network Subscription Network Manager Connection. Changing this forces a new Network Subscription Network Manager Connection to be created.
	Name *string `pulumi:"name"`
	// Specifies the ID of the Network Manager which the Subscription is connected to.
	NetworkManagerId string `pulumi:"networkManagerId"`
	// Specifies the ID of the target Subscription. Changing this forces a new resource to be created.
	SubscriptionId string `pulumi:"subscriptionId"`
}

// The set of arguments for constructing a NetworkManagerSubscriptionConnection resource.
type NetworkManagerSubscriptionConnectionArgs struct {
	// A description of the Network Manager Subscription Connection.
	Description pulumi.StringPtrInput
	// Specifies the name which should be used for this Network Subscription Network Manager Connection. Changing this forces a new Network Subscription Network Manager Connection to be created.
	Name pulumi.StringPtrInput
	// Specifies the ID of the Network Manager which the Subscription is connected to.
	NetworkManagerId pulumi.StringInput
	// Specifies the ID of the target Subscription. Changing this forces a new resource to be created.
	SubscriptionId pulumi.StringInput
}

func (NetworkManagerSubscriptionConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkManagerSubscriptionConnectionArgs)(nil)).Elem()
}

type NetworkManagerSubscriptionConnectionInput interface {
	pulumi.Input

	ToNetworkManagerSubscriptionConnectionOutput() NetworkManagerSubscriptionConnectionOutput
	ToNetworkManagerSubscriptionConnectionOutputWithContext(ctx context.Context) NetworkManagerSubscriptionConnectionOutput
}

func (*NetworkManagerSubscriptionConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkManagerSubscriptionConnection)(nil)).Elem()
}

func (i *NetworkManagerSubscriptionConnection) ToNetworkManagerSubscriptionConnectionOutput() NetworkManagerSubscriptionConnectionOutput {
	return i.ToNetworkManagerSubscriptionConnectionOutputWithContext(context.Background())
}

func (i *NetworkManagerSubscriptionConnection) ToNetworkManagerSubscriptionConnectionOutputWithContext(ctx context.Context) NetworkManagerSubscriptionConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerSubscriptionConnectionOutput)
}

// NetworkManagerSubscriptionConnectionArrayInput is an input type that accepts NetworkManagerSubscriptionConnectionArray and NetworkManagerSubscriptionConnectionArrayOutput values.
// You can construct a concrete instance of `NetworkManagerSubscriptionConnectionArrayInput` via:
//
//	NetworkManagerSubscriptionConnectionArray{ NetworkManagerSubscriptionConnectionArgs{...} }
type NetworkManagerSubscriptionConnectionArrayInput interface {
	pulumi.Input

	ToNetworkManagerSubscriptionConnectionArrayOutput() NetworkManagerSubscriptionConnectionArrayOutput
	ToNetworkManagerSubscriptionConnectionArrayOutputWithContext(context.Context) NetworkManagerSubscriptionConnectionArrayOutput
}

type NetworkManagerSubscriptionConnectionArray []NetworkManagerSubscriptionConnectionInput

func (NetworkManagerSubscriptionConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkManagerSubscriptionConnection)(nil)).Elem()
}

func (i NetworkManagerSubscriptionConnectionArray) ToNetworkManagerSubscriptionConnectionArrayOutput() NetworkManagerSubscriptionConnectionArrayOutput {
	return i.ToNetworkManagerSubscriptionConnectionArrayOutputWithContext(context.Background())
}

func (i NetworkManagerSubscriptionConnectionArray) ToNetworkManagerSubscriptionConnectionArrayOutputWithContext(ctx context.Context) NetworkManagerSubscriptionConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerSubscriptionConnectionArrayOutput)
}

// NetworkManagerSubscriptionConnectionMapInput is an input type that accepts NetworkManagerSubscriptionConnectionMap and NetworkManagerSubscriptionConnectionMapOutput values.
// You can construct a concrete instance of `NetworkManagerSubscriptionConnectionMapInput` via:
//
//	NetworkManagerSubscriptionConnectionMap{ "key": NetworkManagerSubscriptionConnectionArgs{...} }
type NetworkManagerSubscriptionConnectionMapInput interface {
	pulumi.Input

	ToNetworkManagerSubscriptionConnectionMapOutput() NetworkManagerSubscriptionConnectionMapOutput
	ToNetworkManagerSubscriptionConnectionMapOutputWithContext(context.Context) NetworkManagerSubscriptionConnectionMapOutput
}

type NetworkManagerSubscriptionConnectionMap map[string]NetworkManagerSubscriptionConnectionInput

func (NetworkManagerSubscriptionConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkManagerSubscriptionConnection)(nil)).Elem()
}

func (i NetworkManagerSubscriptionConnectionMap) ToNetworkManagerSubscriptionConnectionMapOutput() NetworkManagerSubscriptionConnectionMapOutput {
	return i.ToNetworkManagerSubscriptionConnectionMapOutputWithContext(context.Background())
}

func (i NetworkManagerSubscriptionConnectionMap) ToNetworkManagerSubscriptionConnectionMapOutputWithContext(ctx context.Context) NetworkManagerSubscriptionConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerSubscriptionConnectionMapOutput)
}

type NetworkManagerSubscriptionConnectionOutput struct{ *pulumi.OutputState }

func (NetworkManagerSubscriptionConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkManagerSubscriptionConnection)(nil)).Elem()
}

func (o NetworkManagerSubscriptionConnectionOutput) ToNetworkManagerSubscriptionConnectionOutput() NetworkManagerSubscriptionConnectionOutput {
	return o
}

func (o NetworkManagerSubscriptionConnectionOutput) ToNetworkManagerSubscriptionConnectionOutputWithContext(ctx context.Context) NetworkManagerSubscriptionConnectionOutput {
	return o
}

// The Connection state of the Network Manager Subscription Connection.
func (o NetworkManagerSubscriptionConnectionOutput) ConnectionState() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerSubscriptionConnection) pulumi.StringOutput { return v.ConnectionState }).(pulumi.StringOutput)
}

// A description of the Network Manager Subscription Connection.
func (o NetworkManagerSubscriptionConnectionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkManagerSubscriptionConnection) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the name which should be used for this Network Subscription Network Manager Connection. Changing this forces a new Network Subscription Network Manager Connection to be created.
func (o NetworkManagerSubscriptionConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerSubscriptionConnection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the ID of the Network Manager which the Subscription is connected to.
func (o NetworkManagerSubscriptionConnectionOutput) NetworkManagerId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerSubscriptionConnection) pulumi.StringOutput { return v.NetworkManagerId }).(pulumi.StringOutput)
}

// Specifies the ID of the target Subscription. Changing this forces a new resource to be created.
func (o NetworkManagerSubscriptionConnectionOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerSubscriptionConnection) pulumi.StringOutput { return v.SubscriptionId }).(pulumi.StringOutput)
}

type NetworkManagerSubscriptionConnectionArrayOutput struct{ *pulumi.OutputState }

func (NetworkManagerSubscriptionConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkManagerSubscriptionConnection)(nil)).Elem()
}

func (o NetworkManagerSubscriptionConnectionArrayOutput) ToNetworkManagerSubscriptionConnectionArrayOutput() NetworkManagerSubscriptionConnectionArrayOutput {
	return o
}

func (o NetworkManagerSubscriptionConnectionArrayOutput) ToNetworkManagerSubscriptionConnectionArrayOutputWithContext(ctx context.Context) NetworkManagerSubscriptionConnectionArrayOutput {
	return o
}

func (o NetworkManagerSubscriptionConnectionArrayOutput) Index(i pulumi.IntInput) NetworkManagerSubscriptionConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkManagerSubscriptionConnection {
		return vs[0].([]*NetworkManagerSubscriptionConnection)[vs[1].(int)]
	}).(NetworkManagerSubscriptionConnectionOutput)
}

type NetworkManagerSubscriptionConnectionMapOutput struct{ *pulumi.OutputState }

func (NetworkManagerSubscriptionConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkManagerSubscriptionConnection)(nil)).Elem()
}

func (o NetworkManagerSubscriptionConnectionMapOutput) ToNetworkManagerSubscriptionConnectionMapOutput() NetworkManagerSubscriptionConnectionMapOutput {
	return o
}

func (o NetworkManagerSubscriptionConnectionMapOutput) ToNetworkManagerSubscriptionConnectionMapOutputWithContext(ctx context.Context) NetworkManagerSubscriptionConnectionMapOutput {
	return o
}

func (o NetworkManagerSubscriptionConnectionMapOutput) MapIndex(k pulumi.StringInput) NetworkManagerSubscriptionConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkManagerSubscriptionConnection {
		return vs[0].(map[string]*NetworkManagerSubscriptionConnection)[vs[1].(string)]
	}).(NetworkManagerSubscriptionConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerSubscriptionConnectionInput)(nil)).Elem(), &NetworkManagerSubscriptionConnection{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerSubscriptionConnectionArrayInput)(nil)).Elem(), NetworkManagerSubscriptionConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerSubscriptionConnectionMapInput)(nil)).Elem(), NetworkManagerSubscriptionConnectionMap{})
	pulumi.RegisterOutputType(NetworkManagerSubscriptionConnectionOutput{})
	pulumi.RegisterOutputType(NetworkManagerSubscriptionConnectionArrayOutput{})
	pulumi.RegisterOutputType(NetworkManagerSubscriptionConnectionMapOutput{})
}
