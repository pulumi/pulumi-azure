// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Network Manager IP Address Management (IPAM) Pool.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resources"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			current, err := core.LookupSubscription(ctx, &core.LookupSubscriptionArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			exampleNetworkManager, err := network.NewNetworkManager(ctx, "example", &network.NetworkManagerArgs{
//				Name:              pulumi.String("example-network-manager"),
//				Location:          example.Location,
//				ResourceGroupName: example.Name,
//				Scope: &network.NetworkManagerScopeArgs{
//					SubscriptionIds: pulumi.StringArray{
//						pulumi.String(current.Id),
//					},
//				},
//				ScopeAccesses: pulumi.StringArray{
//					pulumi.String("Connectivity"),
//					pulumi.String("SecurityAdmin"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = network.NewNetworkManagerIpamPool(ctx, "example", &network.NetworkManagerIpamPoolArgs{
//				Name:             pulumi.String("example-ipam-pool"),
//				Location:         pulumi.String("West Europe"),
//				NetworkManagerId: exampleNetworkManager.ID(),
//				DisplayName:      pulumi.String("example-pool"),
//				AddressPrefixes: pulumi.StringArray{
//					pulumi.String("10.0.0.0/24"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This resource uses the following Azure API Providers:
//
// * `Microsoft.Network` - 2024-05-01
//
// ## Import
//
// Network Manager IPAM Pools can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:network/networkManagerIpamPool:NetworkManagerIpamPool example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/networkManagers/manager1/ipamPools/pool1
// ```
type NetworkManagerIpamPool struct {
	pulumi.CustomResourceState

	// Specifies a list of IPv4 or IPv6 IP address prefixes. Changing this forces a new Network Manager IPAM Pool to be created.
	AddressPrefixes pulumi.StringArrayOutput `pulumi:"addressPrefixes"`
	// The description of the Network Manager IPAM Pool.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The display name for the Network Manager IPAM Pool.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// The Azure Region where the Network Manager IPAM Pool should exist. Changing this forces a new Network Manager IPAM Pool to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name which should be used for this Network Manager IPAM Pool. Changing this forces a new Network Manager IPAM Pool to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the parent Network Manager. Changing this forces a new Network Manager IPAM Pool to be created.
	NetworkManagerId pulumi.StringOutput `pulumi:"networkManagerId"`
	// The name of the parent IPAM Pool. Changing this forces a new Network Manager IPAM Pool to be created.
	ParentPoolName pulumi.StringPtrOutput `pulumi:"parentPoolName"`
	// A mapping of tags which should be assigned to the Network Manager IPAM Pool.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewNetworkManagerIpamPool registers a new resource with the given unique name, arguments, and options.
func NewNetworkManagerIpamPool(ctx *pulumi.Context,
	name string, args *NetworkManagerIpamPoolArgs, opts ...pulumi.ResourceOption) (*NetworkManagerIpamPool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AddressPrefixes == nil {
		return nil, errors.New("invalid value for required argument 'AddressPrefixes'")
	}
	if args.NetworkManagerId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkManagerId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkManagerIpamPool
	err := ctx.RegisterResource("azure:network/networkManagerIpamPool:NetworkManagerIpamPool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkManagerIpamPool gets an existing NetworkManagerIpamPool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkManagerIpamPool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkManagerIpamPoolState, opts ...pulumi.ResourceOption) (*NetworkManagerIpamPool, error) {
	var resource NetworkManagerIpamPool
	err := ctx.ReadResource("azure:network/networkManagerIpamPool:NetworkManagerIpamPool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkManagerIpamPool resources.
type networkManagerIpamPoolState struct {
	// Specifies a list of IPv4 or IPv6 IP address prefixes. Changing this forces a new Network Manager IPAM Pool to be created.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// The description of the Network Manager IPAM Pool.
	Description *string `pulumi:"description"`
	// The display name for the Network Manager IPAM Pool.
	DisplayName *string `pulumi:"displayName"`
	// The Azure Region where the Network Manager IPAM Pool should exist. Changing this forces a new Network Manager IPAM Pool to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this Network Manager IPAM Pool. Changing this forces a new Network Manager IPAM Pool to be created.
	Name *string `pulumi:"name"`
	// The ID of the parent Network Manager. Changing this forces a new Network Manager IPAM Pool to be created.
	NetworkManagerId *string `pulumi:"networkManagerId"`
	// The name of the parent IPAM Pool. Changing this forces a new Network Manager IPAM Pool to be created.
	ParentPoolName *string `pulumi:"parentPoolName"`
	// A mapping of tags which should be assigned to the Network Manager IPAM Pool.
	Tags map[string]string `pulumi:"tags"`
}

type NetworkManagerIpamPoolState struct {
	// Specifies a list of IPv4 or IPv6 IP address prefixes. Changing this forces a new Network Manager IPAM Pool to be created.
	AddressPrefixes pulumi.StringArrayInput
	// The description of the Network Manager IPAM Pool.
	Description pulumi.StringPtrInput
	// The display name for the Network Manager IPAM Pool.
	DisplayName pulumi.StringPtrInput
	// The Azure Region where the Network Manager IPAM Pool should exist. Changing this forces a new Network Manager IPAM Pool to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this Network Manager IPAM Pool. Changing this forces a new Network Manager IPAM Pool to be created.
	Name pulumi.StringPtrInput
	// The ID of the parent Network Manager. Changing this forces a new Network Manager IPAM Pool to be created.
	NetworkManagerId pulumi.StringPtrInput
	// The name of the parent IPAM Pool. Changing this forces a new Network Manager IPAM Pool to be created.
	ParentPoolName pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Network Manager IPAM Pool.
	Tags pulumi.StringMapInput
}

func (NetworkManagerIpamPoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkManagerIpamPoolState)(nil)).Elem()
}

type networkManagerIpamPoolArgs struct {
	// Specifies a list of IPv4 or IPv6 IP address prefixes. Changing this forces a new Network Manager IPAM Pool to be created.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// The description of the Network Manager IPAM Pool.
	Description *string `pulumi:"description"`
	// The display name for the Network Manager IPAM Pool.
	DisplayName *string `pulumi:"displayName"`
	// The Azure Region where the Network Manager IPAM Pool should exist. Changing this forces a new Network Manager IPAM Pool to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this Network Manager IPAM Pool. Changing this forces a new Network Manager IPAM Pool to be created.
	Name *string `pulumi:"name"`
	// The ID of the parent Network Manager. Changing this forces a new Network Manager IPAM Pool to be created.
	NetworkManagerId string `pulumi:"networkManagerId"`
	// The name of the parent IPAM Pool. Changing this forces a new Network Manager IPAM Pool to be created.
	ParentPoolName *string `pulumi:"parentPoolName"`
	// A mapping of tags which should be assigned to the Network Manager IPAM Pool.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a NetworkManagerIpamPool resource.
type NetworkManagerIpamPoolArgs struct {
	// Specifies a list of IPv4 or IPv6 IP address prefixes. Changing this forces a new Network Manager IPAM Pool to be created.
	AddressPrefixes pulumi.StringArrayInput
	// The description of the Network Manager IPAM Pool.
	Description pulumi.StringPtrInput
	// The display name for the Network Manager IPAM Pool.
	DisplayName pulumi.StringPtrInput
	// The Azure Region where the Network Manager IPAM Pool should exist. Changing this forces a new Network Manager IPAM Pool to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this Network Manager IPAM Pool. Changing this forces a new Network Manager IPAM Pool to be created.
	Name pulumi.StringPtrInput
	// The ID of the parent Network Manager. Changing this forces a new Network Manager IPAM Pool to be created.
	NetworkManagerId pulumi.StringInput
	// The name of the parent IPAM Pool. Changing this forces a new Network Manager IPAM Pool to be created.
	ParentPoolName pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Network Manager IPAM Pool.
	Tags pulumi.StringMapInput
}

func (NetworkManagerIpamPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkManagerIpamPoolArgs)(nil)).Elem()
}

type NetworkManagerIpamPoolInput interface {
	pulumi.Input

	ToNetworkManagerIpamPoolOutput() NetworkManagerIpamPoolOutput
	ToNetworkManagerIpamPoolOutputWithContext(ctx context.Context) NetworkManagerIpamPoolOutput
}

func (*NetworkManagerIpamPool) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkManagerIpamPool)(nil)).Elem()
}

func (i *NetworkManagerIpamPool) ToNetworkManagerIpamPoolOutput() NetworkManagerIpamPoolOutput {
	return i.ToNetworkManagerIpamPoolOutputWithContext(context.Background())
}

func (i *NetworkManagerIpamPool) ToNetworkManagerIpamPoolOutputWithContext(ctx context.Context) NetworkManagerIpamPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerIpamPoolOutput)
}

// NetworkManagerIpamPoolArrayInput is an input type that accepts NetworkManagerIpamPoolArray and NetworkManagerIpamPoolArrayOutput values.
// You can construct a concrete instance of `NetworkManagerIpamPoolArrayInput` via:
//
//	NetworkManagerIpamPoolArray{ NetworkManagerIpamPoolArgs{...} }
type NetworkManagerIpamPoolArrayInput interface {
	pulumi.Input

	ToNetworkManagerIpamPoolArrayOutput() NetworkManagerIpamPoolArrayOutput
	ToNetworkManagerIpamPoolArrayOutputWithContext(context.Context) NetworkManagerIpamPoolArrayOutput
}

type NetworkManagerIpamPoolArray []NetworkManagerIpamPoolInput

func (NetworkManagerIpamPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkManagerIpamPool)(nil)).Elem()
}

func (i NetworkManagerIpamPoolArray) ToNetworkManagerIpamPoolArrayOutput() NetworkManagerIpamPoolArrayOutput {
	return i.ToNetworkManagerIpamPoolArrayOutputWithContext(context.Background())
}

func (i NetworkManagerIpamPoolArray) ToNetworkManagerIpamPoolArrayOutputWithContext(ctx context.Context) NetworkManagerIpamPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerIpamPoolArrayOutput)
}

// NetworkManagerIpamPoolMapInput is an input type that accepts NetworkManagerIpamPoolMap and NetworkManagerIpamPoolMapOutput values.
// You can construct a concrete instance of `NetworkManagerIpamPoolMapInput` via:
//
//	NetworkManagerIpamPoolMap{ "key": NetworkManagerIpamPoolArgs{...} }
type NetworkManagerIpamPoolMapInput interface {
	pulumi.Input

	ToNetworkManagerIpamPoolMapOutput() NetworkManagerIpamPoolMapOutput
	ToNetworkManagerIpamPoolMapOutputWithContext(context.Context) NetworkManagerIpamPoolMapOutput
}

type NetworkManagerIpamPoolMap map[string]NetworkManagerIpamPoolInput

func (NetworkManagerIpamPoolMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkManagerIpamPool)(nil)).Elem()
}

func (i NetworkManagerIpamPoolMap) ToNetworkManagerIpamPoolMapOutput() NetworkManagerIpamPoolMapOutput {
	return i.ToNetworkManagerIpamPoolMapOutputWithContext(context.Background())
}

func (i NetworkManagerIpamPoolMap) ToNetworkManagerIpamPoolMapOutputWithContext(ctx context.Context) NetworkManagerIpamPoolMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerIpamPoolMapOutput)
}

type NetworkManagerIpamPoolOutput struct{ *pulumi.OutputState }

func (NetworkManagerIpamPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkManagerIpamPool)(nil)).Elem()
}

func (o NetworkManagerIpamPoolOutput) ToNetworkManagerIpamPoolOutput() NetworkManagerIpamPoolOutput {
	return o
}

func (o NetworkManagerIpamPoolOutput) ToNetworkManagerIpamPoolOutputWithContext(ctx context.Context) NetworkManagerIpamPoolOutput {
	return o
}

// Specifies a list of IPv4 or IPv6 IP address prefixes. Changing this forces a new Network Manager IPAM Pool to be created.
func (o NetworkManagerIpamPoolOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkManagerIpamPool) pulumi.StringArrayOutput { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// The description of the Network Manager IPAM Pool.
func (o NetworkManagerIpamPoolOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkManagerIpamPool) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name for the Network Manager IPAM Pool.
func (o NetworkManagerIpamPoolOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkManagerIpamPool) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The Azure Region where the Network Manager IPAM Pool should exist. Changing this forces a new Network Manager IPAM Pool to be created.
func (o NetworkManagerIpamPoolOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerIpamPool) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name which should be used for this Network Manager IPAM Pool. Changing this forces a new Network Manager IPAM Pool to be created.
func (o NetworkManagerIpamPoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerIpamPool) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the parent Network Manager. Changing this forces a new Network Manager IPAM Pool to be created.
func (o NetworkManagerIpamPoolOutput) NetworkManagerId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerIpamPool) pulumi.StringOutput { return v.NetworkManagerId }).(pulumi.StringOutput)
}

// The name of the parent IPAM Pool. Changing this forces a new Network Manager IPAM Pool to be created.
func (o NetworkManagerIpamPoolOutput) ParentPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkManagerIpamPool) pulumi.StringPtrOutput { return v.ParentPoolName }).(pulumi.StringPtrOutput)
}

// A mapping of tags which should be assigned to the Network Manager IPAM Pool.
func (o NetworkManagerIpamPoolOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkManagerIpamPool) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type NetworkManagerIpamPoolArrayOutput struct{ *pulumi.OutputState }

func (NetworkManagerIpamPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkManagerIpamPool)(nil)).Elem()
}

func (o NetworkManagerIpamPoolArrayOutput) ToNetworkManagerIpamPoolArrayOutput() NetworkManagerIpamPoolArrayOutput {
	return o
}

func (o NetworkManagerIpamPoolArrayOutput) ToNetworkManagerIpamPoolArrayOutputWithContext(ctx context.Context) NetworkManagerIpamPoolArrayOutput {
	return o
}

func (o NetworkManagerIpamPoolArrayOutput) Index(i pulumi.IntInput) NetworkManagerIpamPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkManagerIpamPool {
		return vs[0].([]*NetworkManagerIpamPool)[vs[1].(int)]
	}).(NetworkManagerIpamPoolOutput)
}

type NetworkManagerIpamPoolMapOutput struct{ *pulumi.OutputState }

func (NetworkManagerIpamPoolMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkManagerIpamPool)(nil)).Elem()
}

func (o NetworkManagerIpamPoolMapOutput) ToNetworkManagerIpamPoolMapOutput() NetworkManagerIpamPoolMapOutput {
	return o
}

func (o NetworkManagerIpamPoolMapOutput) ToNetworkManagerIpamPoolMapOutputWithContext(ctx context.Context) NetworkManagerIpamPoolMapOutput {
	return o
}

func (o NetworkManagerIpamPoolMapOutput) MapIndex(k pulumi.StringInput) NetworkManagerIpamPoolOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkManagerIpamPool {
		return vs[0].(map[string]*NetworkManagerIpamPool)[vs[1].(string)]
	}).(NetworkManagerIpamPoolOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerIpamPoolInput)(nil)).Elem(), &NetworkManagerIpamPool{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerIpamPoolArrayInput)(nil)).Elem(), NetworkManagerIpamPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerIpamPoolMapInput)(nil)).Elem(), NetworkManagerIpamPoolMap{})
	pulumi.RegisterOutputType(NetworkManagerIpamPoolOutput{})
	pulumi.RegisterOutputType(NetworkManagerIpamPoolArrayOutput{})
	pulumi.RegisterOutputType(NetworkManagerIpamPoolMapOutput{})
}
