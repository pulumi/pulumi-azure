// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Network Manager IPAM Pool.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resources"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			current, err := core.LookupSubscription(ctx, &core.LookupSubscriptionArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			exampleNetworkManager, err := network.NewNetworkManager(ctx, "example", &network.NetworkManagerArgs{
//				Name:              pulumi.String("example-network-manager"),
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				Scope: &network.NetworkManagerScopeArgs{
//					SubscriptionIds: pulumi.StringArray{
//						pulumi.String(current.Id),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleNetworkManagerIpamPool, err := network.NewNetworkManagerIpamPool(ctx, "example", &network.NetworkManagerIpamPoolArgs{
//				Name:             pulumi.String("example-ipam-pool"),
//				Location:         pulumi.String("West Europe"),
//				NetworkManagerId: exampleNetworkManager.ID(),
//				DisplayName:      pulumi.String("example-pool"),
//				AddressPrefixes: pulumi.StringArray{
//					pulumi.String("10.0.0.0/24"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			example := network.LookupNetworkManagerIpamPoolOutput(ctx, network.GetNetworkManagerIpamPoolOutputArgs{
//				Name:             exampleNetworkManagerIpamPool.Name,
//				NetworkManagerId: exampleNetworkManager.ID(),
//			}, nil)
//			ctx.Export("id", example.ApplyT(func(example network.GetNetworkManagerIpamPoolResult) (*string, error) {
//				return &example.Id, nil
//			}).(pulumi.StringPtrOutput))
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This data source uses the following Azure API Providers:
//
// * `Microsoft.Network` - 2024-05-01
func LookupNetworkManagerIpamPool(ctx *pulumi.Context, args *LookupNetworkManagerIpamPoolArgs, opts ...pulumi.InvokeOption) (*LookupNetworkManagerIpamPoolResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNetworkManagerIpamPoolResult
	err := ctx.Invoke("azure:network/getNetworkManagerIpamPool:getNetworkManagerIpamPool", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkManagerIpamPool.
type LookupNetworkManagerIpamPoolArgs struct {
	// The name of this Network Manager IPAM Pool.
	Name string `pulumi:"name"`
	// The ID of the parent Network Manager.
	NetworkManagerId string `pulumi:"networkManagerId"`
}

// A collection of values returned by getNetworkManagerIpamPool.
type LookupNetworkManagerIpamPoolResult struct {
	// A list of IPv4 or IPv6 IP address prefixes assigned to the Network Manager IPAM Pool.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// The description of the Network Manager IPAM Pool.
	Description string `pulumi:"description"`
	// The display name of the Network Manager IPAM Pool.
	DisplayName string `pulumi:"displayName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Azure Region where the Network Manager IPAM Pool exists.
	Location         string `pulumi:"location"`
	Name             string `pulumi:"name"`
	NetworkManagerId string `pulumi:"networkManagerId"`
	// The name of the parent IPAM Pool.
	ParentPoolName string `pulumi:"parentPoolName"`
	// A mapping of tags assigned to the Network Manager IPAM Pool.
	Tags map[string]string `pulumi:"tags"`
}

func LookupNetworkManagerIpamPoolOutput(ctx *pulumi.Context, args LookupNetworkManagerIpamPoolOutputArgs, opts ...pulumi.InvokeOption) LookupNetworkManagerIpamPoolResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNetworkManagerIpamPoolResultOutput, error) {
			args := v.(LookupNetworkManagerIpamPoolArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure:network/getNetworkManagerIpamPool:getNetworkManagerIpamPool", args, LookupNetworkManagerIpamPoolResultOutput{}, options).(LookupNetworkManagerIpamPoolResultOutput), nil
		}).(LookupNetworkManagerIpamPoolResultOutput)
}

// A collection of arguments for invoking getNetworkManagerIpamPool.
type LookupNetworkManagerIpamPoolOutputArgs struct {
	// The name of this Network Manager IPAM Pool.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the parent Network Manager.
	NetworkManagerId pulumi.StringInput `pulumi:"networkManagerId"`
}

func (LookupNetworkManagerIpamPoolOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkManagerIpamPoolArgs)(nil)).Elem()
}

// A collection of values returned by getNetworkManagerIpamPool.
type LookupNetworkManagerIpamPoolResultOutput struct{ *pulumi.OutputState }

func (LookupNetworkManagerIpamPoolResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkManagerIpamPoolResult)(nil)).Elem()
}

func (o LookupNetworkManagerIpamPoolResultOutput) ToLookupNetworkManagerIpamPoolResultOutput() LookupNetworkManagerIpamPoolResultOutput {
	return o
}

func (o LookupNetworkManagerIpamPoolResultOutput) ToLookupNetworkManagerIpamPoolResultOutputWithContext(ctx context.Context) LookupNetworkManagerIpamPoolResultOutput {
	return o
}

// A list of IPv4 or IPv6 IP address prefixes assigned to the Network Manager IPAM Pool.
func (o LookupNetworkManagerIpamPoolResultOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNetworkManagerIpamPoolResult) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// The description of the Network Manager IPAM Pool.
func (o LookupNetworkManagerIpamPoolResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkManagerIpamPoolResult) string { return v.Description }).(pulumi.StringOutput)
}

// The display name of the Network Manager IPAM Pool.
func (o LookupNetworkManagerIpamPoolResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkManagerIpamPoolResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupNetworkManagerIpamPoolResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkManagerIpamPoolResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Azure Region where the Network Manager IPAM Pool exists.
func (o LookupNetworkManagerIpamPoolResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkManagerIpamPoolResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupNetworkManagerIpamPoolResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkManagerIpamPoolResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupNetworkManagerIpamPoolResultOutput) NetworkManagerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkManagerIpamPoolResult) string { return v.NetworkManagerId }).(pulumi.StringOutput)
}

// The name of the parent IPAM Pool.
func (o LookupNetworkManagerIpamPoolResultOutput) ParentPoolName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkManagerIpamPoolResult) string { return v.ParentPoolName }).(pulumi.StringOutput)
}

// A mapping of tags assigned to the Network Manager IPAM Pool.
func (o LookupNetworkManagerIpamPoolResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupNetworkManagerIpamPoolResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNetworkManagerIpamPoolResultOutput{})
}
