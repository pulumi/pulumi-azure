// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Firewall Policy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/network"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := network.NewFirewallPolicy(ctx, "example", &network.FirewallPolicyArgs{
// 			Location:          pulumi.String("West Europe"),
// 			ResourceGroupName: pulumi.String("example"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// networks can be imported using the `resource id`, e.g.
//
// ```sh
//  $ pulumi import azure:network/firewallPolicy:FirewallPolicy example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/firewallPolicies/policy1
// ```
type FirewallPolicy struct {
	pulumi.CustomResourceState

	// The ID of the base Firewall Policy.
	BasePolicyId pulumi.StringPtrOutput `pulumi:"basePolicyId"`
	// A list of reference to child Firewall Policies of this Firewall Policy.
	ChildPolicies pulumi.StringArrayOutput `pulumi:"childPolicies"`
	// A `dns` block as defined below.
	Dns FirewallPolicyDnsPtrOutput `pulumi:"dns"`
	// A list of references to Azure Firewalls that this Firewall Policy is associated with.
	Firewalls pulumi.StringArrayOutput `pulumi:"firewalls"`
	// The Azure Region where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name which should be used for this Firewall Policy. Changing this forces a new Firewall Policy to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the Resource Group where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A list of references to Firewall Policy Rule Collection Groups that belongs to this Firewall Policy.
	RuleCollectionGroups pulumi.StringArrayOutput `pulumi:"ruleCollectionGroups"`
	// The SKU Tier of the Firewall Policy. Possible values are `Standard`, `Premium`.
	Sku pulumi.StringOutput `pulumi:"sku"`
	// A mapping of tags which should be assigned to the Firewall Policy.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A `threatIntelligenceAllowlist` block as defined below.
	ThreatIntelligenceAllowlist FirewallPolicyThreatIntelligenceAllowlistPtrOutput `pulumi:"threatIntelligenceAllowlist"`
	// The operation mode for Threat Intelligence. Possible values are `Alert`, `Deny` and `Off`. Defaults to `Alert`.
	ThreatIntelligenceMode pulumi.StringPtrOutput `pulumi:"threatIntelligenceMode"`
}

// NewFirewallPolicy registers a new resource with the given unique name, arguments, and options.
func NewFirewallPolicy(ctx *pulumi.Context,
	name string, args *FirewallPolicyArgs, opts ...pulumi.ResourceOption) (*FirewallPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	var resource FirewallPolicy
	err := ctx.RegisterResource("azure:network/firewallPolicy:FirewallPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallPolicy gets an existing FirewallPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallPolicyState, opts ...pulumi.ResourceOption) (*FirewallPolicy, error) {
	var resource FirewallPolicy
	err := ctx.ReadResource("azure:network/firewallPolicy:FirewallPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallPolicy resources.
type firewallPolicyState struct {
	// The ID of the base Firewall Policy.
	BasePolicyId *string `pulumi:"basePolicyId"`
	// A list of reference to child Firewall Policies of this Firewall Policy.
	ChildPolicies []string `pulumi:"childPolicies"`
	// A `dns` block as defined below.
	Dns *FirewallPolicyDns `pulumi:"dns"`
	// A list of references to Azure Firewalls that this Firewall Policy is associated with.
	Firewalls []string `pulumi:"firewalls"`
	// The Azure Region where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this Firewall Policy. Changing this forces a new Firewall Policy to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A list of references to Firewall Policy Rule Collection Groups that belongs to this Firewall Policy.
	RuleCollectionGroups []string `pulumi:"ruleCollectionGroups"`
	// The SKU Tier of the Firewall Policy. Possible values are `Standard`, `Premium`.
	Sku *string `pulumi:"sku"`
	// A mapping of tags which should be assigned to the Firewall Policy.
	Tags map[string]string `pulumi:"tags"`
	// A `threatIntelligenceAllowlist` block as defined below.
	ThreatIntelligenceAllowlist *FirewallPolicyThreatIntelligenceAllowlist `pulumi:"threatIntelligenceAllowlist"`
	// The operation mode for Threat Intelligence. Possible values are `Alert`, `Deny` and `Off`. Defaults to `Alert`.
	ThreatIntelligenceMode *string `pulumi:"threatIntelligenceMode"`
}

type FirewallPolicyState struct {
	// The ID of the base Firewall Policy.
	BasePolicyId pulumi.StringPtrInput
	// A list of reference to child Firewall Policies of this Firewall Policy.
	ChildPolicies pulumi.StringArrayInput
	// A `dns` block as defined below.
	Dns FirewallPolicyDnsPtrInput
	// A list of references to Azure Firewalls that this Firewall Policy is associated with.
	Firewalls pulumi.StringArrayInput
	// The Azure Region where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this Firewall Policy. Changing this forces a new Firewall Policy to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.
	ResourceGroupName pulumi.StringPtrInput
	// A list of references to Firewall Policy Rule Collection Groups that belongs to this Firewall Policy.
	RuleCollectionGroups pulumi.StringArrayInput
	// The SKU Tier of the Firewall Policy. Possible values are `Standard`, `Premium`.
	Sku pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Firewall Policy.
	Tags pulumi.StringMapInput
	// A `threatIntelligenceAllowlist` block as defined below.
	ThreatIntelligenceAllowlist FirewallPolicyThreatIntelligenceAllowlistPtrInput
	// The operation mode for Threat Intelligence. Possible values are `Alert`, `Deny` and `Off`. Defaults to `Alert`.
	ThreatIntelligenceMode pulumi.StringPtrInput
}

func (FirewallPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallPolicyState)(nil)).Elem()
}

type firewallPolicyArgs struct {
	// The ID of the base Firewall Policy.
	BasePolicyId *string `pulumi:"basePolicyId"`
	// A `dns` block as defined below.
	Dns *FirewallPolicyDns `pulumi:"dns"`
	// The Azure Region where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this Firewall Policy. Changing this forces a new Firewall Policy to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The SKU Tier of the Firewall Policy. Possible values are `Standard`, `Premium`.
	Sku *string `pulumi:"sku"`
	// A mapping of tags which should be assigned to the Firewall Policy.
	Tags map[string]string `pulumi:"tags"`
	// A `threatIntelligenceAllowlist` block as defined below.
	ThreatIntelligenceAllowlist *FirewallPolicyThreatIntelligenceAllowlist `pulumi:"threatIntelligenceAllowlist"`
	// The operation mode for Threat Intelligence. Possible values are `Alert`, `Deny` and `Off`. Defaults to `Alert`.
	ThreatIntelligenceMode *string `pulumi:"threatIntelligenceMode"`
}

// The set of arguments for constructing a FirewallPolicy resource.
type FirewallPolicyArgs struct {
	// The ID of the base Firewall Policy.
	BasePolicyId pulumi.StringPtrInput
	// A `dns` block as defined below.
	Dns FirewallPolicyDnsPtrInput
	// The Azure Region where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this Firewall Policy. Changing this forces a new Firewall Policy to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.
	ResourceGroupName pulumi.StringInput
	// The SKU Tier of the Firewall Policy. Possible values are `Standard`, `Premium`.
	Sku pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Firewall Policy.
	Tags pulumi.StringMapInput
	// A `threatIntelligenceAllowlist` block as defined below.
	ThreatIntelligenceAllowlist FirewallPolicyThreatIntelligenceAllowlistPtrInput
	// The operation mode for Threat Intelligence. Possible values are `Alert`, `Deny` and `Off`. Defaults to `Alert`.
	ThreatIntelligenceMode pulumi.StringPtrInput
}

func (FirewallPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallPolicyArgs)(nil)).Elem()
}

type FirewallPolicyInput interface {
	pulumi.Input

	ToFirewallPolicyOutput() FirewallPolicyOutput
	ToFirewallPolicyOutputWithContext(ctx context.Context) FirewallPolicyOutput
}

func (*FirewallPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy)(nil))
}

func (i *FirewallPolicy) ToFirewallPolicyOutput() FirewallPolicyOutput {
	return i.ToFirewallPolicyOutputWithContext(context.Background())
}

func (i *FirewallPolicy) ToFirewallPolicyOutputWithContext(ctx context.Context) FirewallPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyOutput)
}

func (i *FirewallPolicy) ToFirewallPolicyPtrOutput() FirewallPolicyPtrOutput {
	return i.ToFirewallPolicyPtrOutputWithContext(context.Background())
}

func (i *FirewallPolicy) ToFirewallPolicyPtrOutputWithContext(ctx context.Context) FirewallPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyPtrOutput)
}

type FirewallPolicyPtrInput interface {
	pulumi.Input

	ToFirewallPolicyPtrOutput() FirewallPolicyPtrOutput
	ToFirewallPolicyPtrOutputWithContext(ctx context.Context) FirewallPolicyPtrOutput
}

type firewallPolicyPtrType FirewallPolicyArgs

func (*firewallPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicy)(nil))
}

func (i *firewallPolicyPtrType) ToFirewallPolicyPtrOutput() FirewallPolicyPtrOutput {
	return i.ToFirewallPolicyPtrOutputWithContext(context.Background())
}

func (i *firewallPolicyPtrType) ToFirewallPolicyPtrOutputWithContext(ctx context.Context) FirewallPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyPtrOutput)
}

// FirewallPolicyArrayInput is an input type that accepts FirewallPolicyArray and FirewallPolicyArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyArrayInput` via:
//
//          FirewallPolicyArray{ FirewallPolicyArgs{...} }
type FirewallPolicyArrayInput interface {
	pulumi.Input

	ToFirewallPolicyArrayOutput() FirewallPolicyArrayOutput
	ToFirewallPolicyArrayOutputWithContext(context.Context) FirewallPolicyArrayOutput
}

type FirewallPolicyArray []FirewallPolicyInput

func (FirewallPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*FirewallPolicy)(nil))
}

func (i FirewallPolicyArray) ToFirewallPolicyArrayOutput() FirewallPolicyArrayOutput {
	return i.ToFirewallPolicyArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyArray) ToFirewallPolicyArrayOutputWithContext(ctx context.Context) FirewallPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyArrayOutput)
}

// FirewallPolicyMapInput is an input type that accepts FirewallPolicyMap and FirewallPolicyMapOutput values.
// You can construct a concrete instance of `FirewallPolicyMapInput` via:
//
//          FirewallPolicyMap{ "key": FirewallPolicyArgs{...} }
type FirewallPolicyMapInput interface {
	pulumi.Input

	ToFirewallPolicyMapOutput() FirewallPolicyMapOutput
	ToFirewallPolicyMapOutputWithContext(context.Context) FirewallPolicyMapOutput
}

type FirewallPolicyMap map[string]FirewallPolicyInput

func (FirewallPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*FirewallPolicy)(nil))
}

func (i FirewallPolicyMap) ToFirewallPolicyMapOutput() FirewallPolicyMapOutput {
	return i.ToFirewallPolicyMapOutputWithContext(context.Background())
}

func (i FirewallPolicyMap) ToFirewallPolicyMapOutputWithContext(ctx context.Context) FirewallPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyMapOutput)
}

type FirewallPolicyOutput struct {
	*pulumi.OutputState
}

func (FirewallPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy)(nil))
}

func (o FirewallPolicyOutput) ToFirewallPolicyOutput() FirewallPolicyOutput {
	return o
}

func (o FirewallPolicyOutput) ToFirewallPolicyOutputWithContext(ctx context.Context) FirewallPolicyOutput {
	return o
}

func (o FirewallPolicyOutput) ToFirewallPolicyPtrOutput() FirewallPolicyPtrOutput {
	return o.ToFirewallPolicyPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyOutput) ToFirewallPolicyPtrOutputWithContext(ctx context.Context) FirewallPolicyPtrOutput {
	return o.ApplyT(func(v FirewallPolicy) *FirewallPolicy {
		return &v
	}).(FirewallPolicyPtrOutput)
}

type FirewallPolicyPtrOutput struct {
	*pulumi.OutputState
}

func (FirewallPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicy)(nil))
}

func (o FirewallPolicyPtrOutput) ToFirewallPolicyPtrOutput() FirewallPolicyPtrOutput {
	return o
}

func (o FirewallPolicyPtrOutput) ToFirewallPolicyPtrOutputWithContext(ctx context.Context) FirewallPolicyPtrOutput {
	return o
}

type FirewallPolicyArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicy)(nil))
}

func (o FirewallPolicyArrayOutput) ToFirewallPolicyArrayOutput() FirewallPolicyArrayOutput {
	return o
}

func (o FirewallPolicyArrayOutput) ToFirewallPolicyArrayOutputWithContext(ctx context.Context) FirewallPolicyArrayOutput {
	return o
}

func (o FirewallPolicyArrayOutput) Index(i pulumi.IntInput) FirewallPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicy {
		return vs[0].([]FirewallPolicy)[vs[1].(int)]
	}).(FirewallPolicyOutput)
}

type FirewallPolicyMapOutput struct{ *pulumi.OutputState }

func (FirewallPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]FirewallPolicy)(nil))
}

func (o FirewallPolicyMapOutput) ToFirewallPolicyMapOutput() FirewallPolicyMapOutput {
	return o
}

func (o FirewallPolicyMapOutput) ToFirewallPolicyMapOutputWithContext(ctx context.Context) FirewallPolicyMapOutput {
	return o
}

func (o FirewallPolicyMapOutput) MapIndex(k pulumi.StringInput) FirewallPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) FirewallPolicy {
		return vs[0].(map[string]FirewallPolicy)[vs[1].(string)]
	}).(FirewallPolicyOutput)
}

func init() {
	pulumi.RegisterOutputType(FirewallPolicyOutput{})
	pulumi.RegisterOutputType(FirewallPolicyPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyMapOutput{})
}
