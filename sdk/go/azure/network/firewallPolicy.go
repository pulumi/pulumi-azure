// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Firewall Policy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = network.NewFirewallPolicy(ctx, "exampleFirewallPolicy", &network.FirewallPolicyArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Firewall Policies can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:network/firewallPolicy:FirewallPolicy example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/firewallPolicies/policy1
//
// ```
type FirewallPolicy struct {
	pulumi.CustomResourceState

	// Whether enable auto learn private ip range.
	AutoLearnPrivateRangesEnabled pulumi.BoolPtrOutput `pulumi:"autoLearnPrivateRangesEnabled"`
	// The ID of the base Firewall Policy.
	BasePolicyId pulumi.StringPtrOutput `pulumi:"basePolicyId"`
	// A list of reference to child Firewall Policies of this Firewall Policy.
	ChildPolicies pulumi.StringArrayOutput `pulumi:"childPolicies"`
	// A `dns` block as defined below.
	Dns FirewallPolicyDnsPtrOutput `pulumi:"dns"`
	// A `explicitProxy` block as defined below.
	ExplicitProxy FirewallPolicyExplicitProxyPtrOutput `pulumi:"explicitProxy"`
	// A list of references to Azure Firewalls that this Firewall Policy is associated with.
	Firewalls pulumi.StringArrayOutput `pulumi:"firewalls"`
	// An `identity` block as defined below.
	Identity FirewallPolicyIdentityPtrOutput `pulumi:"identity"`
	// An `insights` block as defined below.
	Insights FirewallPolicyInsightsPtrOutput `pulumi:"insights"`
	// A `intrusionDetection` block as defined below.
	IntrusionDetection FirewallPolicyIntrusionDetectionPtrOutput `pulumi:"intrusionDetection"`
	// The Azure Region where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name which should be used for this Firewall Policy. Changing this forces a new Firewall Policy to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// A list of private IP ranges to which traffic will not be SNAT.
	PrivateIpRanges pulumi.StringArrayOutput `pulumi:"privateIpRanges"`
	// The name of the Resource Group where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A list of references to Firewall Policy Rule Collection Groups that belongs to this Firewall Policy.
	RuleCollectionGroups pulumi.StringArrayOutput `pulumi:"ruleCollectionGroups"`
	// The SKU Tier of the Firewall Policy. Possible values are `Standard`, `Premium` and `Basic`. Changing this forces a new Firewall Policy to be created.
	Sku pulumi.StringOutput `pulumi:"sku"`
	// Whether SQL Redirect traffic filtering is allowed. Enabling this flag requires no rule using ports between `11000`-`11999`.
	SqlRedirectAllowed pulumi.BoolPtrOutput `pulumi:"sqlRedirectAllowed"`
	// A mapping of tags which should be assigned to the Firewall Policy.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A `threatIntelligenceAllowlist` block as defined below.
	ThreatIntelligenceAllowlist FirewallPolicyThreatIntelligenceAllowlistPtrOutput `pulumi:"threatIntelligenceAllowlist"`
	// The operation mode for Threat Intelligence. Possible values are `Alert`, `Deny` and `Off`. Defaults to `Alert`.
	ThreatIntelligenceMode pulumi.StringPtrOutput `pulumi:"threatIntelligenceMode"`
	// A `tlsCertificate` block as defined below.
	TlsCertificate FirewallPolicyTlsCertificatePtrOutput `pulumi:"tlsCertificate"`
}

// NewFirewallPolicy registers a new resource with the given unique name, arguments, and options.
func NewFirewallPolicy(ctx *pulumi.Context,
	name string, args *FirewallPolicyArgs, opts ...pulumi.ResourceOption) (*FirewallPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallPolicy
	err := ctx.RegisterResource("azure:network/firewallPolicy:FirewallPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallPolicy gets an existing FirewallPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallPolicyState, opts ...pulumi.ResourceOption) (*FirewallPolicy, error) {
	var resource FirewallPolicy
	err := ctx.ReadResource("azure:network/firewallPolicy:FirewallPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallPolicy resources.
type firewallPolicyState struct {
	// Whether enable auto learn private ip range.
	AutoLearnPrivateRangesEnabled *bool `pulumi:"autoLearnPrivateRangesEnabled"`
	// The ID of the base Firewall Policy.
	BasePolicyId *string `pulumi:"basePolicyId"`
	// A list of reference to child Firewall Policies of this Firewall Policy.
	ChildPolicies []string `pulumi:"childPolicies"`
	// A `dns` block as defined below.
	Dns *FirewallPolicyDns `pulumi:"dns"`
	// A `explicitProxy` block as defined below.
	ExplicitProxy *FirewallPolicyExplicitProxy `pulumi:"explicitProxy"`
	// A list of references to Azure Firewalls that this Firewall Policy is associated with.
	Firewalls []string `pulumi:"firewalls"`
	// An `identity` block as defined below.
	Identity *FirewallPolicyIdentity `pulumi:"identity"`
	// An `insights` block as defined below.
	Insights *FirewallPolicyInsights `pulumi:"insights"`
	// A `intrusionDetection` block as defined below.
	IntrusionDetection *FirewallPolicyIntrusionDetection `pulumi:"intrusionDetection"`
	// The Azure Region where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this Firewall Policy. Changing this forces a new Firewall Policy to be created.
	Name *string `pulumi:"name"`
	// A list of private IP ranges to which traffic will not be SNAT.
	PrivateIpRanges []string `pulumi:"privateIpRanges"`
	// The name of the Resource Group where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A list of references to Firewall Policy Rule Collection Groups that belongs to this Firewall Policy.
	RuleCollectionGroups []string `pulumi:"ruleCollectionGroups"`
	// The SKU Tier of the Firewall Policy. Possible values are `Standard`, `Premium` and `Basic`. Changing this forces a new Firewall Policy to be created.
	Sku *string `pulumi:"sku"`
	// Whether SQL Redirect traffic filtering is allowed. Enabling this flag requires no rule using ports between `11000`-`11999`.
	SqlRedirectAllowed *bool `pulumi:"sqlRedirectAllowed"`
	// A mapping of tags which should be assigned to the Firewall Policy.
	Tags map[string]string `pulumi:"tags"`
	// A `threatIntelligenceAllowlist` block as defined below.
	ThreatIntelligenceAllowlist *FirewallPolicyThreatIntelligenceAllowlist `pulumi:"threatIntelligenceAllowlist"`
	// The operation mode for Threat Intelligence. Possible values are `Alert`, `Deny` and `Off`. Defaults to `Alert`.
	ThreatIntelligenceMode *string `pulumi:"threatIntelligenceMode"`
	// A `tlsCertificate` block as defined below.
	TlsCertificate *FirewallPolicyTlsCertificate `pulumi:"tlsCertificate"`
}

type FirewallPolicyState struct {
	// Whether enable auto learn private ip range.
	AutoLearnPrivateRangesEnabled pulumi.BoolPtrInput
	// The ID of the base Firewall Policy.
	BasePolicyId pulumi.StringPtrInput
	// A list of reference to child Firewall Policies of this Firewall Policy.
	ChildPolicies pulumi.StringArrayInput
	// A `dns` block as defined below.
	Dns FirewallPolicyDnsPtrInput
	// A `explicitProxy` block as defined below.
	ExplicitProxy FirewallPolicyExplicitProxyPtrInput
	// A list of references to Azure Firewalls that this Firewall Policy is associated with.
	Firewalls pulumi.StringArrayInput
	// An `identity` block as defined below.
	Identity FirewallPolicyIdentityPtrInput
	// An `insights` block as defined below.
	Insights FirewallPolicyInsightsPtrInput
	// A `intrusionDetection` block as defined below.
	IntrusionDetection FirewallPolicyIntrusionDetectionPtrInput
	// The Azure Region where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this Firewall Policy. Changing this forces a new Firewall Policy to be created.
	Name pulumi.StringPtrInput
	// A list of private IP ranges to which traffic will not be SNAT.
	PrivateIpRanges pulumi.StringArrayInput
	// The name of the Resource Group where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.
	ResourceGroupName pulumi.StringPtrInput
	// A list of references to Firewall Policy Rule Collection Groups that belongs to this Firewall Policy.
	RuleCollectionGroups pulumi.StringArrayInput
	// The SKU Tier of the Firewall Policy. Possible values are `Standard`, `Premium` and `Basic`. Changing this forces a new Firewall Policy to be created.
	Sku pulumi.StringPtrInput
	// Whether SQL Redirect traffic filtering is allowed. Enabling this flag requires no rule using ports between `11000`-`11999`.
	SqlRedirectAllowed pulumi.BoolPtrInput
	// A mapping of tags which should be assigned to the Firewall Policy.
	Tags pulumi.StringMapInput
	// A `threatIntelligenceAllowlist` block as defined below.
	ThreatIntelligenceAllowlist FirewallPolicyThreatIntelligenceAllowlistPtrInput
	// The operation mode for Threat Intelligence. Possible values are `Alert`, `Deny` and `Off`. Defaults to `Alert`.
	ThreatIntelligenceMode pulumi.StringPtrInput
	// A `tlsCertificate` block as defined below.
	TlsCertificate FirewallPolicyTlsCertificatePtrInput
}

func (FirewallPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallPolicyState)(nil)).Elem()
}

type firewallPolicyArgs struct {
	// Whether enable auto learn private ip range.
	AutoLearnPrivateRangesEnabled *bool `pulumi:"autoLearnPrivateRangesEnabled"`
	// The ID of the base Firewall Policy.
	BasePolicyId *string `pulumi:"basePolicyId"`
	// A `dns` block as defined below.
	Dns *FirewallPolicyDns `pulumi:"dns"`
	// A `explicitProxy` block as defined below.
	ExplicitProxy *FirewallPolicyExplicitProxy `pulumi:"explicitProxy"`
	// An `identity` block as defined below.
	Identity *FirewallPolicyIdentity `pulumi:"identity"`
	// An `insights` block as defined below.
	Insights *FirewallPolicyInsights `pulumi:"insights"`
	// A `intrusionDetection` block as defined below.
	IntrusionDetection *FirewallPolicyIntrusionDetection `pulumi:"intrusionDetection"`
	// The Azure Region where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this Firewall Policy. Changing this forces a new Firewall Policy to be created.
	Name *string `pulumi:"name"`
	// A list of private IP ranges to which traffic will not be SNAT.
	PrivateIpRanges []string `pulumi:"privateIpRanges"`
	// The name of the Resource Group where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The SKU Tier of the Firewall Policy. Possible values are `Standard`, `Premium` and `Basic`. Changing this forces a new Firewall Policy to be created.
	Sku *string `pulumi:"sku"`
	// Whether SQL Redirect traffic filtering is allowed. Enabling this flag requires no rule using ports between `11000`-`11999`.
	SqlRedirectAllowed *bool `pulumi:"sqlRedirectAllowed"`
	// A mapping of tags which should be assigned to the Firewall Policy.
	Tags map[string]string `pulumi:"tags"`
	// A `threatIntelligenceAllowlist` block as defined below.
	ThreatIntelligenceAllowlist *FirewallPolicyThreatIntelligenceAllowlist `pulumi:"threatIntelligenceAllowlist"`
	// The operation mode for Threat Intelligence. Possible values are `Alert`, `Deny` and `Off`. Defaults to `Alert`.
	ThreatIntelligenceMode *string `pulumi:"threatIntelligenceMode"`
	// A `tlsCertificate` block as defined below.
	TlsCertificate *FirewallPolicyTlsCertificate `pulumi:"tlsCertificate"`
}

// The set of arguments for constructing a FirewallPolicy resource.
type FirewallPolicyArgs struct {
	// Whether enable auto learn private ip range.
	AutoLearnPrivateRangesEnabled pulumi.BoolPtrInput
	// The ID of the base Firewall Policy.
	BasePolicyId pulumi.StringPtrInput
	// A `dns` block as defined below.
	Dns FirewallPolicyDnsPtrInput
	// A `explicitProxy` block as defined below.
	ExplicitProxy FirewallPolicyExplicitProxyPtrInput
	// An `identity` block as defined below.
	Identity FirewallPolicyIdentityPtrInput
	// An `insights` block as defined below.
	Insights FirewallPolicyInsightsPtrInput
	// A `intrusionDetection` block as defined below.
	IntrusionDetection FirewallPolicyIntrusionDetectionPtrInput
	// The Azure Region where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this Firewall Policy. Changing this forces a new Firewall Policy to be created.
	Name pulumi.StringPtrInput
	// A list of private IP ranges to which traffic will not be SNAT.
	PrivateIpRanges pulumi.StringArrayInput
	// The name of the Resource Group where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.
	ResourceGroupName pulumi.StringInput
	// The SKU Tier of the Firewall Policy. Possible values are `Standard`, `Premium` and `Basic`. Changing this forces a new Firewall Policy to be created.
	Sku pulumi.StringPtrInput
	// Whether SQL Redirect traffic filtering is allowed. Enabling this flag requires no rule using ports between `11000`-`11999`.
	SqlRedirectAllowed pulumi.BoolPtrInput
	// A mapping of tags which should be assigned to the Firewall Policy.
	Tags pulumi.StringMapInput
	// A `threatIntelligenceAllowlist` block as defined below.
	ThreatIntelligenceAllowlist FirewallPolicyThreatIntelligenceAllowlistPtrInput
	// The operation mode for Threat Intelligence. Possible values are `Alert`, `Deny` and `Off`. Defaults to `Alert`.
	ThreatIntelligenceMode pulumi.StringPtrInput
	// A `tlsCertificate` block as defined below.
	TlsCertificate FirewallPolicyTlsCertificatePtrInput
}

func (FirewallPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallPolicyArgs)(nil)).Elem()
}

type FirewallPolicyInput interface {
	pulumi.Input

	ToFirewallPolicyOutput() FirewallPolicyOutput
	ToFirewallPolicyOutputWithContext(ctx context.Context) FirewallPolicyOutput
}

func (*FirewallPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicy)(nil)).Elem()
}

func (i *FirewallPolicy) ToFirewallPolicyOutput() FirewallPolicyOutput {
	return i.ToFirewallPolicyOutputWithContext(context.Background())
}

func (i *FirewallPolicy) ToFirewallPolicyOutputWithContext(ctx context.Context) FirewallPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyOutput)
}

// FirewallPolicyArrayInput is an input type that accepts FirewallPolicyArray and FirewallPolicyArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyArrayInput` via:
//
//	FirewallPolicyArray{ FirewallPolicyArgs{...} }
type FirewallPolicyArrayInput interface {
	pulumi.Input

	ToFirewallPolicyArrayOutput() FirewallPolicyArrayOutput
	ToFirewallPolicyArrayOutputWithContext(context.Context) FirewallPolicyArrayOutput
}

type FirewallPolicyArray []FirewallPolicyInput

func (FirewallPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallPolicy)(nil)).Elem()
}

func (i FirewallPolicyArray) ToFirewallPolicyArrayOutput() FirewallPolicyArrayOutput {
	return i.ToFirewallPolicyArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyArray) ToFirewallPolicyArrayOutputWithContext(ctx context.Context) FirewallPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyArrayOutput)
}

// FirewallPolicyMapInput is an input type that accepts FirewallPolicyMap and FirewallPolicyMapOutput values.
// You can construct a concrete instance of `FirewallPolicyMapInput` via:
//
//	FirewallPolicyMap{ "key": FirewallPolicyArgs{...} }
type FirewallPolicyMapInput interface {
	pulumi.Input

	ToFirewallPolicyMapOutput() FirewallPolicyMapOutput
	ToFirewallPolicyMapOutputWithContext(context.Context) FirewallPolicyMapOutput
}

type FirewallPolicyMap map[string]FirewallPolicyInput

func (FirewallPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallPolicy)(nil)).Elem()
}

func (i FirewallPolicyMap) ToFirewallPolicyMapOutput() FirewallPolicyMapOutput {
	return i.ToFirewallPolicyMapOutputWithContext(context.Background())
}

func (i FirewallPolicyMap) ToFirewallPolicyMapOutputWithContext(ctx context.Context) FirewallPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyMapOutput)
}

type FirewallPolicyOutput struct{ *pulumi.OutputState }

func (FirewallPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicy)(nil)).Elem()
}

func (o FirewallPolicyOutput) ToFirewallPolicyOutput() FirewallPolicyOutput {
	return o
}

func (o FirewallPolicyOutput) ToFirewallPolicyOutputWithContext(ctx context.Context) FirewallPolicyOutput {
	return o
}

// Whether enable auto learn private ip range.
func (o FirewallPolicyOutput) AutoLearnPrivateRangesEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirewallPolicy) pulumi.BoolPtrOutput { return v.AutoLearnPrivateRangesEnabled }).(pulumi.BoolPtrOutput)
}

// The ID of the base Firewall Policy.
func (o FirewallPolicyOutput) BasePolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicy) pulumi.StringPtrOutput { return v.BasePolicyId }).(pulumi.StringPtrOutput)
}

// A list of reference to child Firewall Policies of this Firewall Policy.
func (o FirewallPolicyOutput) ChildPolicies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallPolicy) pulumi.StringArrayOutput { return v.ChildPolicies }).(pulumi.StringArrayOutput)
}

// A `dns` block as defined below.
func (o FirewallPolicyOutput) Dns() FirewallPolicyDnsPtrOutput {
	return o.ApplyT(func(v *FirewallPolicy) FirewallPolicyDnsPtrOutput { return v.Dns }).(FirewallPolicyDnsPtrOutput)
}

// A `explicitProxy` block as defined below.
func (o FirewallPolicyOutput) ExplicitProxy() FirewallPolicyExplicitProxyPtrOutput {
	return o.ApplyT(func(v *FirewallPolicy) FirewallPolicyExplicitProxyPtrOutput { return v.ExplicitProxy }).(FirewallPolicyExplicitProxyPtrOutput)
}

// A list of references to Azure Firewalls that this Firewall Policy is associated with.
func (o FirewallPolicyOutput) Firewalls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallPolicy) pulumi.StringArrayOutput { return v.Firewalls }).(pulumi.StringArrayOutput)
}

// An `identity` block as defined below.
func (o FirewallPolicyOutput) Identity() FirewallPolicyIdentityPtrOutput {
	return o.ApplyT(func(v *FirewallPolicy) FirewallPolicyIdentityPtrOutput { return v.Identity }).(FirewallPolicyIdentityPtrOutput)
}

// An `insights` block as defined below.
func (o FirewallPolicyOutput) Insights() FirewallPolicyInsightsPtrOutput {
	return o.ApplyT(func(v *FirewallPolicy) FirewallPolicyInsightsPtrOutput { return v.Insights }).(FirewallPolicyInsightsPtrOutput)
}

// A `intrusionDetection` block as defined below.
func (o FirewallPolicyOutput) IntrusionDetection() FirewallPolicyIntrusionDetectionPtrOutput {
	return o.ApplyT(func(v *FirewallPolicy) FirewallPolicyIntrusionDetectionPtrOutput { return v.IntrusionDetection }).(FirewallPolicyIntrusionDetectionPtrOutput)
}

// The Azure Region where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.
func (o FirewallPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name which should be used for this Firewall Policy. Changing this forces a new Firewall Policy to be created.
func (o FirewallPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A list of private IP ranges to which traffic will not be SNAT.
func (o FirewallPolicyOutput) PrivateIpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallPolicy) pulumi.StringArrayOutput { return v.PrivateIpRanges }).(pulumi.StringArrayOutput)
}

// The name of the Resource Group where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.
func (o FirewallPolicyOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallPolicy) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A list of references to Firewall Policy Rule Collection Groups that belongs to this Firewall Policy.
func (o FirewallPolicyOutput) RuleCollectionGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallPolicy) pulumi.StringArrayOutput { return v.RuleCollectionGroups }).(pulumi.StringArrayOutput)
}

// The SKU Tier of the Firewall Policy. Possible values are `Standard`, `Premium` and `Basic`. Changing this forces a new Firewall Policy to be created.
func (o FirewallPolicyOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallPolicy) pulumi.StringOutput { return v.Sku }).(pulumi.StringOutput)
}

// Whether SQL Redirect traffic filtering is allowed. Enabling this flag requires no rule using ports between `11000`-`11999`.
func (o FirewallPolicyOutput) SqlRedirectAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FirewallPolicy) pulumi.BoolPtrOutput { return v.SqlRedirectAllowed }).(pulumi.BoolPtrOutput)
}

// A mapping of tags which should be assigned to the Firewall Policy.
func (o FirewallPolicyOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FirewallPolicy) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A `threatIntelligenceAllowlist` block as defined below.
func (o FirewallPolicyOutput) ThreatIntelligenceAllowlist() FirewallPolicyThreatIntelligenceAllowlistPtrOutput {
	return o.ApplyT(func(v *FirewallPolicy) FirewallPolicyThreatIntelligenceAllowlistPtrOutput {
		return v.ThreatIntelligenceAllowlist
	}).(FirewallPolicyThreatIntelligenceAllowlistPtrOutput)
}

// The operation mode for Threat Intelligence. Possible values are `Alert`, `Deny` and `Off`. Defaults to `Alert`.
func (o FirewallPolicyOutput) ThreatIntelligenceMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicy) pulumi.StringPtrOutput { return v.ThreatIntelligenceMode }).(pulumi.StringPtrOutput)
}

// A `tlsCertificate` block as defined below.
func (o FirewallPolicyOutput) TlsCertificate() FirewallPolicyTlsCertificatePtrOutput {
	return o.ApplyT(func(v *FirewallPolicy) FirewallPolicyTlsCertificatePtrOutput { return v.TlsCertificate }).(FirewallPolicyTlsCertificatePtrOutput)
}

type FirewallPolicyArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallPolicy)(nil)).Elem()
}

func (o FirewallPolicyArrayOutput) ToFirewallPolicyArrayOutput() FirewallPolicyArrayOutput {
	return o
}

func (o FirewallPolicyArrayOutput) ToFirewallPolicyArrayOutputWithContext(ctx context.Context) FirewallPolicyArrayOutput {
	return o
}

func (o FirewallPolicyArrayOutput) Index(i pulumi.IntInput) FirewallPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallPolicy {
		return vs[0].([]*FirewallPolicy)[vs[1].(int)]
	}).(FirewallPolicyOutput)
}

type FirewallPolicyMapOutput struct{ *pulumi.OutputState }

func (FirewallPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallPolicy)(nil)).Elem()
}

func (o FirewallPolicyMapOutput) ToFirewallPolicyMapOutput() FirewallPolicyMapOutput {
	return o
}

func (o FirewallPolicyMapOutput) ToFirewallPolicyMapOutputWithContext(ctx context.Context) FirewallPolicyMapOutput {
	return o
}

func (o FirewallPolicyMapOutput) MapIndex(k pulumi.StringInput) FirewallPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallPolicy {
		return vs[0].(map[string]*FirewallPolicy)[vs[1].(string)]
	}).(FirewallPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyInput)(nil)).Elem(), &FirewallPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyArrayInput)(nil)).Elem(), FirewallPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPolicyMapInput)(nil)).Elem(), FirewallPolicyMap{})
	pulumi.RegisterOutputType(FirewallPolicyOutput{})
	pulumi.RegisterOutputType(FirewallPolicyArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyMapOutput{})
}
