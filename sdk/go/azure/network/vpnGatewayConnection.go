// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages a VPN Gateway Connection.
//
// ## Import
//
// VPN Gateway Connections can be imported using the `resource id`, e.g.
//
// ```sh
//  $ pulumi import azure:network/vpnGatewayConnection:VpnGatewayConnection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/conn1
// ```
type VpnGatewayConnection struct {
	pulumi.CustomResourceState

	// Whether Internet Security is enabled for this VPN Connection. Defaults to `false`.
	InternetSecurityEnabled pulumi.BoolPtrOutput `pulumi:"internetSecurityEnabled"`
	// The name which should be used for this VPN Gateway Connection. Changing this forces a new VPN Gateway Connection to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the remote VPN Site, which will connect to the VPN Gateway. Changing this forces a new VPN Gateway Connection to be created.
	RemoteVpnSiteId pulumi.StringOutput `pulumi:"remoteVpnSiteId"`
	// A `routing` block as defined below. If this is not specified, there will be a default route table created implicitly.
	Routings VpnGatewayConnectionRoutingArrayOutput `pulumi:"routings"`
	// The ID of the VPN Gateway that this VPN Gateway Connection belongs to. Changing this forces a new VPN Gateway Connection to be created.
	VpnGatewayId pulumi.StringOutput `pulumi:"vpnGatewayId"`
	// One or more `vpnLink` blocks as defined below.
	VpnLinks VpnGatewayConnectionVpnLinkArrayOutput `pulumi:"vpnLinks"`
}

// NewVpnGatewayConnection registers a new resource with the given unique name, arguments, and options.
func NewVpnGatewayConnection(ctx *pulumi.Context,
	name string, args *VpnGatewayConnectionArgs, opts ...pulumi.ResourceOption) (*VpnGatewayConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RemoteVpnSiteId == nil {
		return nil, errors.New("invalid value for required argument 'RemoteVpnSiteId'")
	}
	if args.VpnGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'VpnGatewayId'")
	}
	if args.VpnLinks == nil {
		return nil, errors.New("invalid value for required argument 'VpnLinks'")
	}
	var resource VpnGatewayConnection
	err := ctx.RegisterResource("azure:network/vpnGatewayConnection:VpnGatewayConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpnGatewayConnection gets an existing VpnGatewayConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpnGatewayConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpnGatewayConnectionState, opts ...pulumi.ResourceOption) (*VpnGatewayConnection, error) {
	var resource VpnGatewayConnection
	err := ctx.ReadResource("azure:network/vpnGatewayConnection:VpnGatewayConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpnGatewayConnection resources.
type vpnGatewayConnectionState struct {
	// Whether Internet Security is enabled for this VPN Connection. Defaults to `false`.
	InternetSecurityEnabled *bool `pulumi:"internetSecurityEnabled"`
	// The name which should be used for this VPN Gateway Connection. Changing this forces a new VPN Gateway Connection to be created.
	Name *string `pulumi:"name"`
	// The ID of the remote VPN Site, which will connect to the VPN Gateway. Changing this forces a new VPN Gateway Connection to be created.
	RemoteVpnSiteId *string `pulumi:"remoteVpnSiteId"`
	// A `routing` block as defined below. If this is not specified, there will be a default route table created implicitly.
	Routings []VpnGatewayConnectionRouting `pulumi:"routings"`
	// The ID of the VPN Gateway that this VPN Gateway Connection belongs to. Changing this forces a new VPN Gateway Connection to be created.
	VpnGatewayId *string `pulumi:"vpnGatewayId"`
	// One or more `vpnLink` blocks as defined below.
	VpnLinks []VpnGatewayConnectionVpnLink `pulumi:"vpnLinks"`
}

type VpnGatewayConnectionState struct {
	// Whether Internet Security is enabled for this VPN Connection. Defaults to `false`.
	InternetSecurityEnabled pulumi.BoolPtrInput
	// The name which should be used for this VPN Gateway Connection. Changing this forces a new VPN Gateway Connection to be created.
	Name pulumi.StringPtrInput
	// The ID of the remote VPN Site, which will connect to the VPN Gateway. Changing this forces a new VPN Gateway Connection to be created.
	RemoteVpnSiteId pulumi.StringPtrInput
	// A `routing` block as defined below. If this is not specified, there will be a default route table created implicitly.
	Routings VpnGatewayConnectionRoutingArrayInput
	// The ID of the VPN Gateway that this VPN Gateway Connection belongs to. Changing this forces a new VPN Gateway Connection to be created.
	VpnGatewayId pulumi.StringPtrInput
	// One or more `vpnLink` blocks as defined below.
	VpnLinks VpnGatewayConnectionVpnLinkArrayInput
}

func (VpnGatewayConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnGatewayConnectionState)(nil)).Elem()
}

type vpnGatewayConnectionArgs struct {
	// Whether Internet Security is enabled for this VPN Connection. Defaults to `false`.
	InternetSecurityEnabled *bool `pulumi:"internetSecurityEnabled"`
	// The name which should be used for this VPN Gateway Connection. Changing this forces a new VPN Gateway Connection to be created.
	Name *string `pulumi:"name"`
	// The ID of the remote VPN Site, which will connect to the VPN Gateway. Changing this forces a new VPN Gateway Connection to be created.
	RemoteVpnSiteId string `pulumi:"remoteVpnSiteId"`
	// A `routing` block as defined below. If this is not specified, there will be a default route table created implicitly.
	Routings []VpnGatewayConnectionRouting `pulumi:"routings"`
	// The ID of the VPN Gateway that this VPN Gateway Connection belongs to. Changing this forces a new VPN Gateway Connection to be created.
	VpnGatewayId string `pulumi:"vpnGatewayId"`
	// One or more `vpnLink` blocks as defined below.
	VpnLinks []VpnGatewayConnectionVpnLink `pulumi:"vpnLinks"`
}

// The set of arguments for constructing a VpnGatewayConnection resource.
type VpnGatewayConnectionArgs struct {
	// Whether Internet Security is enabled for this VPN Connection. Defaults to `false`.
	InternetSecurityEnabled pulumi.BoolPtrInput
	// The name which should be used for this VPN Gateway Connection. Changing this forces a new VPN Gateway Connection to be created.
	Name pulumi.StringPtrInput
	// The ID of the remote VPN Site, which will connect to the VPN Gateway. Changing this forces a new VPN Gateway Connection to be created.
	RemoteVpnSiteId pulumi.StringInput
	// A `routing` block as defined below. If this is not specified, there will be a default route table created implicitly.
	Routings VpnGatewayConnectionRoutingArrayInput
	// The ID of the VPN Gateway that this VPN Gateway Connection belongs to. Changing this forces a new VPN Gateway Connection to be created.
	VpnGatewayId pulumi.StringInput
	// One or more `vpnLink` blocks as defined below.
	VpnLinks VpnGatewayConnectionVpnLinkArrayInput
}

func (VpnGatewayConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnGatewayConnectionArgs)(nil)).Elem()
}

type VpnGatewayConnectionInput interface {
	pulumi.Input

	ToVpnGatewayConnectionOutput() VpnGatewayConnectionOutput
	ToVpnGatewayConnectionOutputWithContext(ctx context.Context) VpnGatewayConnectionOutput
}

func (VpnGatewayConnection) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayConnection)(nil)).Elem()
}

func (i VpnGatewayConnection) ToVpnGatewayConnectionOutput() VpnGatewayConnectionOutput {
	return i.ToVpnGatewayConnectionOutputWithContext(context.Background())
}

func (i VpnGatewayConnection) ToVpnGatewayConnectionOutputWithContext(ctx context.Context) VpnGatewayConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayConnectionOutput)
}

type VpnGatewayConnectionOutput struct {
	*pulumi.OutputState
}

func (VpnGatewayConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayConnectionOutput)(nil)).Elem()
}

func (o VpnGatewayConnectionOutput) ToVpnGatewayConnectionOutput() VpnGatewayConnectionOutput {
	return o
}

func (o VpnGatewayConnectionOutput) ToVpnGatewayConnectionOutputWithContext(ctx context.Context) VpnGatewayConnectionOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(VpnGatewayConnectionOutput{})
}
