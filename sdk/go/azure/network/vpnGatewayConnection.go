// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a VPN Gateway Connection.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleVirtualWan, err := network.NewVirtualWan(ctx, "exampleVirtualWan", &network.VirtualWanArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//			})
//			if err != nil {
//				return err
//			}
//			exampleVirtualHub, err := network.NewVirtualHub(ctx, "exampleVirtualHub", &network.VirtualHubArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				VirtualWanId:      exampleVirtualWan.ID(),
//				AddressPrefix:     pulumi.String("10.0.0.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleVpnGateway, err := network.NewVpnGateway(ctx, "exampleVpnGateway", &network.VpnGatewayArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				VirtualHubId:      exampleVirtualHub.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			exampleVpnSite, err := network.NewVpnSite(ctx, "exampleVpnSite", &network.VpnSiteArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				VirtualWanId:      exampleVirtualWan.ID(),
//				Links: network.VpnSiteLinkArray{
//					&network.VpnSiteLinkArgs{
//						Name:      pulumi.String("link1"),
//						IpAddress: pulumi.String("10.1.0.0"),
//					},
//					&network.VpnSiteLinkArgs{
//						Name:      pulumi.String("link2"),
//						IpAddress: pulumi.String("10.2.0.0"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = network.NewVpnGatewayConnection(ctx, "exampleVpnGatewayConnection", &network.VpnGatewayConnectionArgs{
//				VpnGatewayId:    exampleVpnGateway.ID(),
//				RemoteVpnSiteId: exampleVpnSite.ID(),
//				VpnLinks: network.VpnGatewayConnectionVpnLinkArray{
//					&network.VpnGatewayConnectionVpnLinkArgs{
//						Name: pulumi.String("link1"),
//						VpnSiteLinkId: exampleVpnSite.Links.ApplyT(func(links []network.VpnSiteLink) (*string, error) {
//							return &links[0].Id, nil
//						}).(pulumi.StringPtrOutput),
//					},
//					&network.VpnGatewayConnectionVpnLinkArgs{
//						Name: pulumi.String("link2"),
//						VpnSiteLinkId: exampleVpnSite.Links.ApplyT(func(links []network.VpnSiteLink) (*string, error) {
//							return &links[1].Id, nil
//						}).(pulumi.StringPtrOutput),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// VPN Gateway Connections can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:network/vpnGatewayConnection:VpnGatewayConnection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/vpnGateways/gateway1/vpnConnections/conn1
//
// ```
type VpnGatewayConnection struct {
	pulumi.CustomResourceState

	// Whether Internet Security is enabled for this VPN Connection. Defaults to `false`.
	InternetSecurityEnabled pulumi.BoolPtrOutput `pulumi:"internetSecurityEnabled"`
	// The name which should be used for this VPN Gateway Connection. Changing this forces a new VPN Gateway Connection to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the remote VPN Site, which will connect to the VPN Gateway. Changing this forces a new VPN Gateway Connection to be created.
	RemoteVpnSiteId pulumi.StringOutput `pulumi:"remoteVpnSiteId"`
	// A `routing` block as defined below. If this is not specified, there will be a default route table created implicitly.
	Routing VpnGatewayConnectionRoutingOutput `pulumi:"routing"`
	// One or more `trafficSelectorPolicy` blocks as defined below.
	TrafficSelectorPolicies VpnGatewayConnectionTrafficSelectorPolicyArrayOutput `pulumi:"trafficSelectorPolicies"`
	// The ID of the VPN Gateway that this VPN Gateway Connection belongs to. Changing this forces a new VPN Gateway Connection to be created.
	VpnGatewayId pulumi.StringOutput `pulumi:"vpnGatewayId"`
	// One or more `vpnLink` blocks as defined below.
	VpnLinks VpnGatewayConnectionVpnLinkArrayOutput `pulumi:"vpnLinks"`
}

// NewVpnGatewayConnection registers a new resource with the given unique name, arguments, and options.
func NewVpnGatewayConnection(ctx *pulumi.Context,
	name string, args *VpnGatewayConnectionArgs, opts ...pulumi.ResourceOption) (*VpnGatewayConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RemoteVpnSiteId == nil {
		return nil, errors.New("invalid value for required argument 'RemoteVpnSiteId'")
	}
	if args.VpnGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'VpnGatewayId'")
	}
	if args.VpnLinks == nil {
		return nil, errors.New("invalid value for required argument 'VpnLinks'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpnGatewayConnection
	err := ctx.RegisterResource("azure:network/vpnGatewayConnection:VpnGatewayConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpnGatewayConnection gets an existing VpnGatewayConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpnGatewayConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpnGatewayConnectionState, opts ...pulumi.ResourceOption) (*VpnGatewayConnection, error) {
	var resource VpnGatewayConnection
	err := ctx.ReadResource("azure:network/vpnGatewayConnection:VpnGatewayConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpnGatewayConnection resources.
type vpnGatewayConnectionState struct {
	// Whether Internet Security is enabled for this VPN Connection. Defaults to `false`.
	InternetSecurityEnabled *bool `pulumi:"internetSecurityEnabled"`
	// The name which should be used for this VPN Gateway Connection. Changing this forces a new VPN Gateway Connection to be created.
	Name *string `pulumi:"name"`
	// The ID of the remote VPN Site, which will connect to the VPN Gateway. Changing this forces a new VPN Gateway Connection to be created.
	RemoteVpnSiteId *string `pulumi:"remoteVpnSiteId"`
	// A `routing` block as defined below. If this is not specified, there will be a default route table created implicitly.
	Routing *VpnGatewayConnectionRouting `pulumi:"routing"`
	// One or more `trafficSelectorPolicy` blocks as defined below.
	TrafficSelectorPolicies []VpnGatewayConnectionTrafficSelectorPolicy `pulumi:"trafficSelectorPolicies"`
	// The ID of the VPN Gateway that this VPN Gateway Connection belongs to. Changing this forces a new VPN Gateway Connection to be created.
	VpnGatewayId *string `pulumi:"vpnGatewayId"`
	// One or more `vpnLink` blocks as defined below.
	VpnLinks []VpnGatewayConnectionVpnLink `pulumi:"vpnLinks"`
}

type VpnGatewayConnectionState struct {
	// Whether Internet Security is enabled for this VPN Connection. Defaults to `false`.
	InternetSecurityEnabled pulumi.BoolPtrInput
	// The name which should be used for this VPN Gateway Connection. Changing this forces a new VPN Gateway Connection to be created.
	Name pulumi.StringPtrInput
	// The ID of the remote VPN Site, which will connect to the VPN Gateway. Changing this forces a new VPN Gateway Connection to be created.
	RemoteVpnSiteId pulumi.StringPtrInput
	// A `routing` block as defined below. If this is not specified, there will be a default route table created implicitly.
	Routing VpnGatewayConnectionRoutingPtrInput
	// One or more `trafficSelectorPolicy` blocks as defined below.
	TrafficSelectorPolicies VpnGatewayConnectionTrafficSelectorPolicyArrayInput
	// The ID of the VPN Gateway that this VPN Gateway Connection belongs to. Changing this forces a new VPN Gateway Connection to be created.
	VpnGatewayId pulumi.StringPtrInput
	// One or more `vpnLink` blocks as defined below.
	VpnLinks VpnGatewayConnectionVpnLinkArrayInput
}

func (VpnGatewayConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnGatewayConnectionState)(nil)).Elem()
}

type vpnGatewayConnectionArgs struct {
	// Whether Internet Security is enabled for this VPN Connection. Defaults to `false`.
	InternetSecurityEnabled *bool `pulumi:"internetSecurityEnabled"`
	// The name which should be used for this VPN Gateway Connection. Changing this forces a new VPN Gateway Connection to be created.
	Name *string `pulumi:"name"`
	// The ID of the remote VPN Site, which will connect to the VPN Gateway. Changing this forces a new VPN Gateway Connection to be created.
	RemoteVpnSiteId string `pulumi:"remoteVpnSiteId"`
	// A `routing` block as defined below. If this is not specified, there will be a default route table created implicitly.
	Routing *VpnGatewayConnectionRouting `pulumi:"routing"`
	// One or more `trafficSelectorPolicy` blocks as defined below.
	TrafficSelectorPolicies []VpnGatewayConnectionTrafficSelectorPolicy `pulumi:"trafficSelectorPolicies"`
	// The ID of the VPN Gateway that this VPN Gateway Connection belongs to. Changing this forces a new VPN Gateway Connection to be created.
	VpnGatewayId string `pulumi:"vpnGatewayId"`
	// One or more `vpnLink` blocks as defined below.
	VpnLinks []VpnGatewayConnectionVpnLink `pulumi:"vpnLinks"`
}

// The set of arguments for constructing a VpnGatewayConnection resource.
type VpnGatewayConnectionArgs struct {
	// Whether Internet Security is enabled for this VPN Connection. Defaults to `false`.
	InternetSecurityEnabled pulumi.BoolPtrInput
	// The name which should be used for this VPN Gateway Connection. Changing this forces a new VPN Gateway Connection to be created.
	Name pulumi.StringPtrInput
	// The ID of the remote VPN Site, which will connect to the VPN Gateway. Changing this forces a new VPN Gateway Connection to be created.
	RemoteVpnSiteId pulumi.StringInput
	// A `routing` block as defined below. If this is not specified, there will be a default route table created implicitly.
	Routing VpnGatewayConnectionRoutingPtrInput
	// One or more `trafficSelectorPolicy` blocks as defined below.
	TrafficSelectorPolicies VpnGatewayConnectionTrafficSelectorPolicyArrayInput
	// The ID of the VPN Gateway that this VPN Gateway Connection belongs to. Changing this forces a new VPN Gateway Connection to be created.
	VpnGatewayId pulumi.StringInput
	// One or more `vpnLink` blocks as defined below.
	VpnLinks VpnGatewayConnectionVpnLinkArrayInput
}

func (VpnGatewayConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnGatewayConnectionArgs)(nil)).Elem()
}

type VpnGatewayConnectionInput interface {
	pulumi.Input

	ToVpnGatewayConnectionOutput() VpnGatewayConnectionOutput
	ToVpnGatewayConnectionOutputWithContext(ctx context.Context) VpnGatewayConnectionOutput
}

func (*VpnGatewayConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGatewayConnection)(nil)).Elem()
}

func (i *VpnGatewayConnection) ToVpnGatewayConnectionOutput() VpnGatewayConnectionOutput {
	return i.ToVpnGatewayConnectionOutputWithContext(context.Background())
}

func (i *VpnGatewayConnection) ToVpnGatewayConnectionOutputWithContext(ctx context.Context) VpnGatewayConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayConnectionOutput)
}

// VpnGatewayConnectionArrayInput is an input type that accepts VpnGatewayConnectionArray and VpnGatewayConnectionArrayOutput values.
// You can construct a concrete instance of `VpnGatewayConnectionArrayInput` via:
//
//	VpnGatewayConnectionArray{ VpnGatewayConnectionArgs{...} }
type VpnGatewayConnectionArrayInput interface {
	pulumi.Input

	ToVpnGatewayConnectionArrayOutput() VpnGatewayConnectionArrayOutput
	ToVpnGatewayConnectionArrayOutputWithContext(context.Context) VpnGatewayConnectionArrayOutput
}

type VpnGatewayConnectionArray []VpnGatewayConnectionInput

func (VpnGatewayConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnGatewayConnection)(nil)).Elem()
}

func (i VpnGatewayConnectionArray) ToVpnGatewayConnectionArrayOutput() VpnGatewayConnectionArrayOutput {
	return i.ToVpnGatewayConnectionArrayOutputWithContext(context.Background())
}

func (i VpnGatewayConnectionArray) ToVpnGatewayConnectionArrayOutputWithContext(ctx context.Context) VpnGatewayConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayConnectionArrayOutput)
}

// VpnGatewayConnectionMapInput is an input type that accepts VpnGatewayConnectionMap and VpnGatewayConnectionMapOutput values.
// You can construct a concrete instance of `VpnGatewayConnectionMapInput` via:
//
//	VpnGatewayConnectionMap{ "key": VpnGatewayConnectionArgs{...} }
type VpnGatewayConnectionMapInput interface {
	pulumi.Input

	ToVpnGatewayConnectionMapOutput() VpnGatewayConnectionMapOutput
	ToVpnGatewayConnectionMapOutputWithContext(context.Context) VpnGatewayConnectionMapOutput
}

type VpnGatewayConnectionMap map[string]VpnGatewayConnectionInput

func (VpnGatewayConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnGatewayConnection)(nil)).Elem()
}

func (i VpnGatewayConnectionMap) ToVpnGatewayConnectionMapOutput() VpnGatewayConnectionMapOutput {
	return i.ToVpnGatewayConnectionMapOutputWithContext(context.Background())
}

func (i VpnGatewayConnectionMap) ToVpnGatewayConnectionMapOutputWithContext(ctx context.Context) VpnGatewayConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayConnectionMapOutput)
}

type VpnGatewayConnectionOutput struct{ *pulumi.OutputState }

func (VpnGatewayConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGatewayConnection)(nil)).Elem()
}

func (o VpnGatewayConnectionOutput) ToVpnGatewayConnectionOutput() VpnGatewayConnectionOutput {
	return o
}

func (o VpnGatewayConnectionOutput) ToVpnGatewayConnectionOutputWithContext(ctx context.Context) VpnGatewayConnectionOutput {
	return o
}

// Whether Internet Security is enabled for this VPN Connection. Defaults to `false`.
func (o VpnGatewayConnectionOutput) InternetSecurityEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpnGatewayConnection) pulumi.BoolPtrOutput { return v.InternetSecurityEnabled }).(pulumi.BoolPtrOutput)
}

// The name which should be used for this VPN Gateway Connection. Changing this forces a new VPN Gateway Connection to be created.
func (o VpnGatewayConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnGatewayConnection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the remote VPN Site, which will connect to the VPN Gateway. Changing this forces a new VPN Gateway Connection to be created.
func (o VpnGatewayConnectionOutput) RemoteVpnSiteId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnGatewayConnection) pulumi.StringOutput { return v.RemoteVpnSiteId }).(pulumi.StringOutput)
}

// A `routing` block as defined below. If this is not specified, there will be a default route table created implicitly.
func (o VpnGatewayConnectionOutput) Routing() VpnGatewayConnectionRoutingOutput {
	return o.ApplyT(func(v *VpnGatewayConnection) VpnGatewayConnectionRoutingOutput { return v.Routing }).(VpnGatewayConnectionRoutingOutput)
}

// One or more `trafficSelectorPolicy` blocks as defined below.
func (o VpnGatewayConnectionOutput) TrafficSelectorPolicies() VpnGatewayConnectionTrafficSelectorPolicyArrayOutput {
	return o.ApplyT(func(v *VpnGatewayConnection) VpnGatewayConnectionTrafficSelectorPolicyArrayOutput {
		return v.TrafficSelectorPolicies
	}).(VpnGatewayConnectionTrafficSelectorPolicyArrayOutput)
}

// The ID of the VPN Gateway that this VPN Gateway Connection belongs to. Changing this forces a new VPN Gateway Connection to be created.
func (o VpnGatewayConnectionOutput) VpnGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnGatewayConnection) pulumi.StringOutput { return v.VpnGatewayId }).(pulumi.StringOutput)
}

// One or more `vpnLink` blocks as defined below.
func (o VpnGatewayConnectionOutput) VpnLinks() VpnGatewayConnectionVpnLinkArrayOutput {
	return o.ApplyT(func(v *VpnGatewayConnection) VpnGatewayConnectionVpnLinkArrayOutput { return v.VpnLinks }).(VpnGatewayConnectionVpnLinkArrayOutput)
}

type VpnGatewayConnectionArrayOutput struct{ *pulumi.OutputState }

func (VpnGatewayConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnGatewayConnection)(nil)).Elem()
}

func (o VpnGatewayConnectionArrayOutput) ToVpnGatewayConnectionArrayOutput() VpnGatewayConnectionArrayOutput {
	return o
}

func (o VpnGatewayConnectionArrayOutput) ToVpnGatewayConnectionArrayOutputWithContext(ctx context.Context) VpnGatewayConnectionArrayOutput {
	return o
}

func (o VpnGatewayConnectionArrayOutput) Index(i pulumi.IntInput) VpnGatewayConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpnGatewayConnection {
		return vs[0].([]*VpnGatewayConnection)[vs[1].(int)]
	}).(VpnGatewayConnectionOutput)
}

type VpnGatewayConnectionMapOutput struct{ *pulumi.OutputState }

func (VpnGatewayConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnGatewayConnection)(nil)).Elem()
}

func (o VpnGatewayConnectionMapOutput) ToVpnGatewayConnectionMapOutput() VpnGatewayConnectionMapOutput {
	return o
}

func (o VpnGatewayConnectionMapOutput) ToVpnGatewayConnectionMapOutputWithContext(ctx context.Context) VpnGatewayConnectionMapOutput {
	return o
}

func (o VpnGatewayConnectionMapOutput) MapIndex(k pulumi.StringInput) VpnGatewayConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpnGatewayConnection {
		return vs[0].(map[string]*VpnGatewayConnection)[vs[1].(string)]
	}).(VpnGatewayConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayConnectionInput)(nil)).Elem(), &VpnGatewayConnection{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayConnectionArrayInput)(nil)).Elem(), VpnGatewayConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayConnectionMapInput)(nil)).Elem(), VpnGatewayConnectionMap{})
	pulumi.RegisterOutputType(VpnGatewayConnectionOutput{})
	pulumi.RegisterOutputType(VpnGatewayConnectionArrayOutput{})
	pulumi.RegisterOutputType(VpnGatewayConnectionMapOutput{})
}
