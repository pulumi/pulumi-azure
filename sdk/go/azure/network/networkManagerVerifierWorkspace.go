// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Network Manager Verifier Workspace.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resources"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			current, err := core.LookupSubscription(ctx, &core.LookupSubscriptionArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			exampleNetworkManager, err := network.NewNetworkManager(ctx, "example", &network.NetworkManagerArgs{
//				Name:              pulumi.String("example-nm"),
//				ResourceGroupName: example.Name,
//				Location:          example.Location,
//				Scope: &network.NetworkManagerScopeArgs{
//					SubscriptionIds: pulumi.StringArray{
//						pulumi.String(current.Id),
//					},
//				},
//				ScopeAccesses: pulumi.StringArray{
//					pulumi.String("Connectivity"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = network.NewNetworkManagerVerifierWorkspace(ctx, "example", &network.NetworkManagerVerifierWorkspaceArgs{
//				Name:             pulumi.String("example"),
//				NetworkManagerId: exampleNetworkManager.ID(),
//				Location:         example.Location,
//				Description:      pulumi.String("This is an example verifier workspace"),
//				Tags: pulumi.StringMap{
//					"foo": pulumi.String("bar"),
//					"env": pulumi.String("example"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Network Manager Verifier Workspaces can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:network/networkManagerVerifierWorkspace:NetworkManagerVerifierWorkspace example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/networkManagers/manager1/verifierWorkspaces/workspace1
// ```
type NetworkManagerVerifierWorkspace struct {
	pulumi.CustomResourceState

	// The Description of the Network Manager Verifier Workspace.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The Azure Region where the Network Manager Verifier Workspace should exist. Changing this forces a new Network Manager Verifier Workspace to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name which should be used for this Network Manager Verifier Workspace. Changing this forces a new Network Manager Verifier Workspace to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the Network Manager. Changing this forces a new Network Manager Verifier Workspace to be created.
	NetworkManagerId pulumi.StringOutput `pulumi:"networkManagerId"`
	// A mapping of tags which should be assigned to the Network Manager Verifier Workspace.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewNetworkManagerVerifierWorkspace registers a new resource with the given unique name, arguments, and options.
func NewNetworkManagerVerifierWorkspace(ctx *pulumi.Context,
	name string, args *NetworkManagerVerifierWorkspaceArgs, opts ...pulumi.ResourceOption) (*NetworkManagerVerifierWorkspace, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkManagerId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkManagerId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkManagerVerifierWorkspace
	err := ctx.RegisterResource("azure:network/networkManagerVerifierWorkspace:NetworkManagerVerifierWorkspace", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkManagerVerifierWorkspace gets an existing NetworkManagerVerifierWorkspace resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkManagerVerifierWorkspace(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkManagerVerifierWorkspaceState, opts ...pulumi.ResourceOption) (*NetworkManagerVerifierWorkspace, error) {
	var resource NetworkManagerVerifierWorkspace
	err := ctx.ReadResource("azure:network/networkManagerVerifierWorkspace:NetworkManagerVerifierWorkspace", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkManagerVerifierWorkspace resources.
type networkManagerVerifierWorkspaceState struct {
	// The Description of the Network Manager Verifier Workspace.
	Description *string `pulumi:"description"`
	// The Azure Region where the Network Manager Verifier Workspace should exist. Changing this forces a new Network Manager Verifier Workspace to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this Network Manager Verifier Workspace. Changing this forces a new Network Manager Verifier Workspace to be created.
	Name *string `pulumi:"name"`
	// The ID of the Network Manager. Changing this forces a new Network Manager Verifier Workspace to be created.
	NetworkManagerId *string `pulumi:"networkManagerId"`
	// A mapping of tags which should be assigned to the Network Manager Verifier Workspace.
	Tags map[string]string `pulumi:"tags"`
}

type NetworkManagerVerifierWorkspaceState struct {
	// The Description of the Network Manager Verifier Workspace.
	Description pulumi.StringPtrInput
	// The Azure Region where the Network Manager Verifier Workspace should exist. Changing this forces a new Network Manager Verifier Workspace to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this Network Manager Verifier Workspace. Changing this forces a new Network Manager Verifier Workspace to be created.
	Name pulumi.StringPtrInput
	// The ID of the Network Manager. Changing this forces a new Network Manager Verifier Workspace to be created.
	NetworkManagerId pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Network Manager Verifier Workspace.
	Tags pulumi.StringMapInput
}

func (NetworkManagerVerifierWorkspaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkManagerVerifierWorkspaceState)(nil)).Elem()
}

type networkManagerVerifierWorkspaceArgs struct {
	// The Description of the Network Manager Verifier Workspace.
	Description *string `pulumi:"description"`
	// The Azure Region where the Network Manager Verifier Workspace should exist. Changing this forces a new Network Manager Verifier Workspace to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this Network Manager Verifier Workspace. Changing this forces a new Network Manager Verifier Workspace to be created.
	Name *string `pulumi:"name"`
	// The ID of the Network Manager. Changing this forces a new Network Manager Verifier Workspace to be created.
	NetworkManagerId string `pulumi:"networkManagerId"`
	// A mapping of tags which should be assigned to the Network Manager Verifier Workspace.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a NetworkManagerVerifierWorkspace resource.
type NetworkManagerVerifierWorkspaceArgs struct {
	// The Description of the Network Manager Verifier Workspace.
	Description pulumi.StringPtrInput
	// The Azure Region where the Network Manager Verifier Workspace should exist. Changing this forces a new Network Manager Verifier Workspace to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this Network Manager Verifier Workspace. Changing this forces a new Network Manager Verifier Workspace to be created.
	Name pulumi.StringPtrInput
	// The ID of the Network Manager. Changing this forces a new Network Manager Verifier Workspace to be created.
	NetworkManagerId pulumi.StringInput
	// A mapping of tags which should be assigned to the Network Manager Verifier Workspace.
	Tags pulumi.StringMapInput
}

func (NetworkManagerVerifierWorkspaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkManagerVerifierWorkspaceArgs)(nil)).Elem()
}

type NetworkManagerVerifierWorkspaceInput interface {
	pulumi.Input

	ToNetworkManagerVerifierWorkspaceOutput() NetworkManagerVerifierWorkspaceOutput
	ToNetworkManagerVerifierWorkspaceOutputWithContext(ctx context.Context) NetworkManagerVerifierWorkspaceOutput
}

func (*NetworkManagerVerifierWorkspace) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkManagerVerifierWorkspace)(nil)).Elem()
}

func (i *NetworkManagerVerifierWorkspace) ToNetworkManagerVerifierWorkspaceOutput() NetworkManagerVerifierWorkspaceOutput {
	return i.ToNetworkManagerVerifierWorkspaceOutputWithContext(context.Background())
}

func (i *NetworkManagerVerifierWorkspace) ToNetworkManagerVerifierWorkspaceOutputWithContext(ctx context.Context) NetworkManagerVerifierWorkspaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerVerifierWorkspaceOutput)
}

// NetworkManagerVerifierWorkspaceArrayInput is an input type that accepts NetworkManagerVerifierWorkspaceArray and NetworkManagerVerifierWorkspaceArrayOutput values.
// You can construct a concrete instance of `NetworkManagerVerifierWorkspaceArrayInput` via:
//
//	NetworkManagerVerifierWorkspaceArray{ NetworkManagerVerifierWorkspaceArgs{...} }
type NetworkManagerVerifierWorkspaceArrayInput interface {
	pulumi.Input

	ToNetworkManagerVerifierWorkspaceArrayOutput() NetworkManagerVerifierWorkspaceArrayOutput
	ToNetworkManagerVerifierWorkspaceArrayOutputWithContext(context.Context) NetworkManagerVerifierWorkspaceArrayOutput
}

type NetworkManagerVerifierWorkspaceArray []NetworkManagerVerifierWorkspaceInput

func (NetworkManagerVerifierWorkspaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkManagerVerifierWorkspace)(nil)).Elem()
}

func (i NetworkManagerVerifierWorkspaceArray) ToNetworkManagerVerifierWorkspaceArrayOutput() NetworkManagerVerifierWorkspaceArrayOutput {
	return i.ToNetworkManagerVerifierWorkspaceArrayOutputWithContext(context.Background())
}

func (i NetworkManagerVerifierWorkspaceArray) ToNetworkManagerVerifierWorkspaceArrayOutputWithContext(ctx context.Context) NetworkManagerVerifierWorkspaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerVerifierWorkspaceArrayOutput)
}

// NetworkManagerVerifierWorkspaceMapInput is an input type that accepts NetworkManagerVerifierWorkspaceMap and NetworkManagerVerifierWorkspaceMapOutput values.
// You can construct a concrete instance of `NetworkManagerVerifierWorkspaceMapInput` via:
//
//	NetworkManagerVerifierWorkspaceMap{ "key": NetworkManagerVerifierWorkspaceArgs{...} }
type NetworkManagerVerifierWorkspaceMapInput interface {
	pulumi.Input

	ToNetworkManagerVerifierWorkspaceMapOutput() NetworkManagerVerifierWorkspaceMapOutput
	ToNetworkManagerVerifierWorkspaceMapOutputWithContext(context.Context) NetworkManagerVerifierWorkspaceMapOutput
}

type NetworkManagerVerifierWorkspaceMap map[string]NetworkManagerVerifierWorkspaceInput

func (NetworkManagerVerifierWorkspaceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkManagerVerifierWorkspace)(nil)).Elem()
}

func (i NetworkManagerVerifierWorkspaceMap) ToNetworkManagerVerifierWorkspaceMapOutput() NetworkManagerVerifierWorkspaceMapOutput {
	return i.ToNetworkManagerVerifierWorkspaceMapOutputWithContext(context.Background())
}

func (i NetworkManagerVerifierWorkspaceMap) ToNetworkManagerVerifierWorkspaceMapOutputWithContext(ctx context.Context) NetworkManagerVerifierWorkspaceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerVerifierWorkspaceMapOutput)
}

type NetworkManagerVerifierWorkspaceOutput struct{ *pulumi.OutputState }

func (NetworkManagerVerifierWorkspaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkManagerVerifierWorkspace)(nil)).Elem()
}

func (o NetworkManagerVerifierWorkspaceOutput) ToNetworkManagerVerifierWorkspaceOutput() NetworkManagerVerifierWorkspaceOutput {
	return o
}

func (o NetworkManagerVerifierWorkspaceOutput) ToNetworkManagerVerifierWorkspaceOutputWithContext(ctx context.Context) NetworkManagerVerifierWorkspaceOutput {
	return o
}

// The Description of the Network Manager Verifier Workspace.
func (o NetworkManagerVerifierWorkspaceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkManagerVerifierWorkspace) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The Azure Region where the Network Manager Verifier Workspace should exist. Changing this forces a new Network Manager Verifier Workspace to be created.
func (o NetworkManagerVerifierWorkspaceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerVerifierWorkspace) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name which should be used for this Network Manager Verifier Workspace. Changing this forces a new Network Manager Verifier Workspace to be created.
func (o NetworkManagerVerifierWorkspaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerVerifierWorkspace) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the Network Manager. Changing this forces a new Network Manager Verifier Workspace to be created.
func (o NetworkManagerVerifierWorkspaceOutput) NetworkManagerId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerVerifierWorkspace) pulumi.StringOutput { return v.NetworkManagerId }).(pulumi.StringOutput)
}

// A mapping of tags which should be assigned to the Network Manager Verifier Workspace.
func (o NetworkManagerVerifierWorkspaceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkManagerVerifierWorkspace) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type NetworkManagerVerifierWorkspaceArrayOutput struct{ *pulumi.OutputState }

func (NetworkManagerVerifierWorkspaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkManagerVerifierWorkspace)(nil)).Elem()
}

func (o NetworkManagerVerifierWorkspaceArrayOutput) ToNetworkManagerVerifierWorkspaceArrayOutput() NetworkManagerVerifierWorkspaceArrayOutput {
	return o
}

func (o NetworkManagerVerifierWorkspaceArrayOutput) ToNetworkManagerVerifierWorkspaceArrayOutputWithContext(ctx context.Context) NetworkManagerVerifierWorkspaceArrayOutput {
	return o
}

func (o NetworkManagerVerifierWorkspaceArrayOutput) Index(i pulumi.IntInput) NetworkManagerVerifierWorkspaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkManagerVerifierWorkspace {
		return vs[0].([]*NetworkManagerVerifierWorkspace)[vs[1].(int)]
	}).(NetworkManagerVerifierWorkspaceOutput)
}

type NetworkManagerVerifierWorkspaceMapOutput struct{ *pulumi.OutputState }

func (NetworkManagerVerifierWorkspaceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkManagerVerifierWorkspace)(nil)).Elem()
}

func (o NetworkManagerVerifierWorkspaceMapOutput) ToNetworkManagerVerifierWorkspaceMapOutput() NetworkManagerVerifierWorkspaceMapOutput {
	return o
}

func (o NetworkManagerVerifierWorkspaceMapOutput) ToNetworkManagerVerifierWorkspaceMapOutputWithContext(ctx context.Context) NetworkManagerVerifierWorkspaceMapOutput {
	return o
}

func (o NetworkManagerVerifierWorkspaceMapOutput) MapIndex(k pulumi.StringInput) NetworkManagerVerifierWorkspaceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkManagerVerifierWorkspace {
		return vs[0].(map[string]*NetworkManagerVerifierWorkspace)[vs[1].(string)]
	}).(NetworkManagerVerifierWorkspaceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerVerifierWorkspaceInput)(nil)).Elem(), &NetworkManagerVerifierWorkspace{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerVerifierWorkspaceArrayInput)(nil)).Elem(), NetworkManagerVerifierWorkspaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerVerifierWorkspaceMapInput)(nil)).Elem(), NetworkManagerVerifierWorkspaceMap{})
	pulumi.RegisterOutputType(NetworkManagerVerifierWorkspaceOutput{})
	pulumi.RegisterOutputType(NetworkManagerVerifierWorkspaceArrayOutput{})
	pulumi.RegisterOutputType(NetworkManagerVerifierWorkspaceMapOutput{})
}
