// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an Azure Endpoint within a Traffic Manager Profile.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			examplePublicIp, err := network.NewPublicIp(ctx, "examplePublicIp", &network.PublicIpArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				AllocationMethod:  pulumi.String("Static"),
//				DomainNameLabel:   pulumi.String("example-public-ip"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleTrafficManagerProfile, err := network.NewTrafficManagerProfile(ctx, "exampleTrafficManagerProfile", &network.TrafficManagerProfileArgs{
//				ResourceGroupName:    exampleResourceGroup.Name,
//				TrafficRoutingMethod: pulumi.String("Weighted"),
//				DnsConfig: &network.TrafficManagerProfileDnsConfigArgs{
//					RelativeName: pulumi.String("example-profile"),
//					Ttl:          pulumi.Int(100),
//				},
//				MonitorConfig: &network.TrafficManagerProfileMonitorConfigArgs{
//					Protocol:                  pulumi.String("HTTP"),
//					Port:                      pulumi.Int(80),
//					Path:                      pulumi.String("/"),
//					IntervalInSeconds:         pulumi.Int(30),
//					TimeoutInSeconds:          pulumi.Int(9),
//					ToleratedNumberOfFailures: pulumi.Int(3),
//				},
//				Tags: pulumi.StringMap{
//					"environment": pulumi.String("Production"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = network.NewTrafficManagerAzureEndpoint(ctx, "exampleTrafficManagerAzureEndpoint", &network.TrafficManagerAzureEndpointArgs{
//				ProfileId:        exampleTrafficManagerProfile.ID(),
//				Weight:           pulumi.Int(100),
//				TargetResourceId: examplePublicIp.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Azure Endpoints can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:network/trafficManagerAzureEndpoint:TrafficManagerAzureEndpoint example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example-resources/providers/Microsoft.Network/trafficManagerProfiles/example-profile/AzureEndpoints/example-endpoint
//
// ```
type TrafficManagerAzureEndpoint struct {
	pulumi.CustomResourceState

	// One or more `customHeader` blocks as defined below.
	CustomHeaders TrafficManagerAzureEndpointCustomHeaderArrayOutput `pulumi:"customHeaders"`
	// Is the endpoint enabled? Defaults to `true`.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// A list of Geographic Regions used to distribute traffic, such as `WORLD`, `UK` or `DE`. The same location can't be specified in two endpoints. [See the Geographic Hierarchies documentation for more information](https://docs.microsoft.com/rest/api/trafficmanager/geographichierarchies/getdefault).
	GeoMappings pulumi.StringArrayOutput `pulumi:"geoMappings"`
	// The name of the Azure Endpoint. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the priority of this Endpoint, this must be specified for Profiles using the `Priority` traffic routing method. Supports values between 1 and 1000, with no Endpoints sharing the same value. If omitted the value will be computed in order of creation.
	Priority pulumi.IntOutput `pulumi:"priority"`
	// The ID of the Traffic Manager Profile that this Azure Endpoint should be created within. Changing this forces a new resource to be created.
	ProfileId pulumi.StringOutput `pulumi:"profileId"`
	// One or more `subnet` blocks as defined below. Changing this forces a new resource to be created.
	Subnets TrafficManagerAzureEndpointSubnetArrayOutput `pulumi:"subnets"`
	// The ID of the Azure Resource which should be used as a target.
	TargetResourceId pulumi.StringOutput `pulumi:"targetResourceId"`
	// Specifies how much traffic should be distributed to this endpoint, this must be specified for Profiles using the Weighted traffic routing method. Valid values are between `1` and `1000`.
	Weight pulumi.IntOutput `pulumi:"weight"`
}

// NewTrafficManagerAzureEndpoint registers a new resource with the given unique name, arguments, and options.
func NewTrafficManagerAzureEndpoint(ctx *pulumi.Context,
	name string, args *TrafficManagerAzureEndpointArgs, opts ...pulumi.ResourceOption) (*TrafficManagerAzureEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProfileId == nil {
		return nil, errors.New("invalid value for required argument 'ProfileId'")
	}
	if args.TargetResourceId == nil {
		return nil, errors.New("invalid value for required argument 'TargetResourceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TrafficManagerAzureEndpoint
	err := ctx.RegisterResource("azure:network/trafficManagerAzureEndpoint:TrafficManagerAzureEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTrafficManagerAzureEndpoint gets an existing TrafficManagerAzureEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTrafficManagerAzureEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TrafficManagerAzureEndpointState, opts ...pulumi.ResourceOption) (*TrafficManagerAzureEndpoint, error) {
	var resource TrafficManagerAzureEndpoint
	err := ctx.ReadResource("azure:network/trafficManagerAzureEndpoint:TrafficManagerAzureEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TrafficManagerAzureEndpoint resources.
type trafficManagerAzureEndpointState struct {
	// One or more `customHeader` blocks as defined below.
	CustomHeaders []TrafficManagerAzureEndpointCustomHeader `pulumi:"customHeaders"`
	// Is the endpoint enabled? Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// A list of Geographic Regions used to distribute traffic, such as `WORLD`, `UK` or `DE`. The same location can't be specified in two endpoints. [See the Geographic Hierarchies documentation for more information](https://docs.microsoft.com/rest/api/trafficmanager/geographichierarchies/getdefault).
	GeoMappings []string `pulumi:"geoMappings"`
	// The name of the Azure Endpoint. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the priority of this Endpoint, this must be specified for Profiles using the `Priority` traffic routing method. Supports values between 1 and 1000, with no Endpoints sharing the same value. If omitted the value will be computed in order of creation.
	Priority *int `pulumi:"priority"`
	// The ID of the Traffic Manager Profile that this Azure Endpoint should be created within. Changing this forces a new resource to be created.
	ProfileId *string `pulumi:"profileId"`
	// One or more `subnet` blocks as defined below. Changing this forces a new resource to be created.
	Subnets []TrafficManagerAzureEndpointSubnet `pulumi:"subnets"`
	// The ID of the Azure Resource which should be used as a target.
	TargetResourceId *string `pulumi:"targetResourceId"`
	// Specifies how much traffic should be distributed to this endpoint, this must be specified for Profiles using the Weighted traffic routing method. Valid values are between `1` and `1000`.
	Weight *int `pulumi:"weight"`
}

type TrafficManagerAzureEndpointState struct {
	// One or more `customHeader` blocks as defined below.
	CustomHeaders TrafficManagerAzureEndpointCustomHeaderArrayInput
	// Is the endpoint enabled? Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	// A list of Geographic Regions used to distribute traffic, such as `WORLD`, `UK` or `DE`. The same location can't be specified in two endpoints. [See the Geographic Hierarchies documentation for more information](https://docs.microsoft.com/rest/api/trafficmanager/geographichierarchies/getdefault).
	GeoMappings pulumi.StringArrayInput
	// The name of the Azure Endpoint. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the priority of this Endpoint, this must be specified for Profiles using the `Priority` traffic routing method. Supports values between 1 and 1000, with no Endpoints sharing the same value. If omitted the value will be computed in order of creation.
	Priority pulumi.IntPtrInput
	// The ID of the Traffic Manager Profile that this Azure Endpoint should be created within. Changing this forces a new resource to be created.
	ProfileId pulumi.StringPtrInput
	// One or more `subnet` blocks as defined below. Changing this forces a new resource to be created.
	Subnets TrafficManagerAzureEndpointSubnetArrayInput
	// The ID of the Azure Resource which should be used as a target.
	TargetResourceId pulumi.StringPtrInput
	// Specifies how much traffic should be distributed to this endpoint, this must be specified for Profiles using the Weighted traffic routing method. Valid values are between `1` and `1000`.
	Weight pulumi.IntPtrInput
}

func (TrafficManagerAzureEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*trafficManagerAzureEndpointState)(nil)).Elem()
}

type trafficManagerAzureEndpointArgs struct {
	// One or more `customHeader` blocks as defined below.
	CustomHeaders []TrafficManagerAzureEndpointCustomHeader `pulumi:"customHeaders"`
	// Is the endpoint enabled? Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// A list of Geographic Regions used to distribute traffic, such as `WORLD`, `UK` or `DE`. The same location can't be specified in two endpoints. [See the Geographic Hierarchies documentation for more information](https://docs.microsoft.com/rest/api/trafficmanager/geographichierarchies/getdefault).
	GeoMappings []string `pulumi:"geoMappings"`
	// The name of the Azure Endpoint. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the priority of this Endpoint, this must be specified for Profiles using the `Priority` traffic routing method. Supports values between 1 and 1000, with no Endpoints sharing the same value. If omitted the value will be computed in order of creation.
	Priority *int `pulumi:"priority"`
	// The ID of the Traffic Manager Profile that this Azure Endpoint should be created within. Changing this forces a new resource to be created.
	ProfileId string `pulumi:"profileId"`
	// One or more `subnet` blocks as defined below. Changing this forces a new resource to be created.
	Subnets []TrafficManagerAzureEndpointSubnet `pulumi:"subnets"`
	// The ID of the Azure Resource which should be used as a target.
	TargetResourceId string `pulumi:"targetResourceId"`
	// Specifies how much traffic should be distributed to this endpoint, this must be specified for Profiles using the Weighted traffic routing method. Valid values are between `1` and `1000`.
	Weight *int `pulumi:"weight"`
}

// The set of arguments for constructing a TrafficManagerAzureEndpoint resource.
type TrafficManagerAzureEndpointArgs struct {
	// One or more `customHeader` blocks as defined below.
	CustomHeaders TrafficManagerAzureEndpointCustomHeaderArrayInput
	// Is the endpoint enabled? Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	// A list of Geographic Regions used to distribute traffic, such as `WORLD`, `UK` or `DE`. The same location can't be specified in two endpoints. [See the Geographic Hierarchies documentation for more information](https://docs.microsoft.com/rest/api/trafficmanager/geographichierarchies/getdefault).
	GeoMappings pulumi.StringArrayInput
	// The name of the Azure Endpoint. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the priority of this Endpoint, this must be specified for Profiles using the `Priority` traffic routing method. Supports values between 1 and 1000, with no Endpoints sharing the same value. If omitted the value will be computed in order of creation.
	Priority pulumi.IntPtrInput
	// The ID of the Traffic Manager Profile that this Azure Endpoint should be created within. Changing this forces a new resource to be created.
	ProfileId pulumi.StringInput
	// One or more `subnet` blocks as defined below. Changing this forces a new resource to be created.
	Subnets TrafficManagerAzureEndpointSubnetArrayInput
	// The ID of the Azure Resource which should be used as a target.
	TargetResourceId pulumi.StringInput
	// Specifies how much traffic should be distributed to this endpoint, this must be specified for Profiles using the Weighted traffic routing method. Valid values are between `1` and `1000`.
	Weight pulumi.IntPtrInput
}

func (TrafficManagerAzureEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*trafficManagerAzureEndpointArgs)(nil)).Elem()
}

type TrafficManagerAzureEndpointInput interface {
	pulumi.Input

	ToTrafficManagerAzureEndpointOutput() TrafficManagerAzureEndpointOutput
	ToTrafficManagerAzureEndpointOutputWithContext(ctx context.Context) TrafficManagerAzureEndpointOutput
}

func (*TrafficManagerAzureEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficManagerAzureEndpoint)(nil)).Elem()
}

func (i *TrafficManagerAzureEndpoint) ToTrafficManagerAzureEndpointOutput() TrafficManagerAzureEndpointOutput {
	return i.ToTrafficManagerAzureEndpointOutputWithContext(context.Background())
}

func (i *TrafficManagerAzureEndpoint) ToTrafficManagerAzureEndpointOutputWithContext(ctx context.Context) TrafficManagerAzureEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficManagerAzureEndpointOutput)
}

// TrafficManagerAzureEndpointArrayInput is an input type that accepts TrafficManagerAzureEndpointArray and TrafficManagerAzureEndpointArrayOutput values.
// You can construct a concrete instance of `TrafficManagerAzureEndpointArrayInput` via:
//
//	TrafficManagerAzureEndpointArray{ TrafficManagerAzureEndpointArgs{...} }
type TrafficManagerAzureEndpointArrayInput interface {
	pulumi.Input

	ToTrafficManagerAzureEndpointArrayOutput() TrafficManagerAzureEndpointArrayOutput
	ToTrafficManagerAzureEndpointArrayOutputWithContext(context.Context) TrafficManagerAzureEndpointArrayOutput
}

type TrafficManagerAzureEndpointArray []TrafficManagerAzureEndpointInput

func (TrafficManagerAzureEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TrafficManagerAzureEndpoint)(nil)).Elem()
}

func (i TrafficManagerAzureEndpointArray) ToTrafficManagerAzureEndpointArrayOutput() TrafficManagerAzureEndpointArrayOutput {
	return i.ToTrafficManagerAzureEndpointArrayOutputWithContext(context.Background())
}

func (i TrafficManagerAzureEndpointArray) ToTrafficManagerAzureEndpointArrayOutputWithContext(ctx context.Context) TrafficManagerAzureEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficManagerAzureEndpointArrayOutput)
}

// TrafficManagerAzureEndpointMapInput is an input type that accepts TrafficManagerAzureEndpointMap and TrafficManagerAzureEndpointMapOutput values.
// You can construct a concrete instance of `TrafficManagerAzureEndpointMapInput` via:
//
//	TrafficManagerAzureEndpointMap{ "key": TrafficManagerAzureEndpointArgs{...} }
type TrafficManagerAzureEndpointMapInput interface {
	pulumi.Input

	ToTrafficManagerAzureEndpointMapOutput() TrafficManagerAzureEndpointMapOutput
	ToTrafficManagerAzureEndpointMapOutputWithContext(context.Context) TrafficManagerAzureEndpointMapOutput
}

type TrafficManagerAzureEndpointMap map[string]TrafficManagerAzureEndpointInput

func (TrafficManagerAzureEndpointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TrafficManagerAzureEndpoint)(nil)).Elem()
}

func (i TrafficManagerAzureEndpointMap) ToTrafficManagerAzureEndpointMapOutput() TrafficManagerAzureEndpointMapOutput {
	return i.ToTrafficManagerAzureEndpointMapOutputWithContext(context.Background())
}

func (i TrafficManagerAzureEndpointMap) ToTrafficManagerAzureEndpointMapOutputWithContext(ctx context.Context) TrafficManagerAzureEndpointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficManagerAzureEndpointMapOutput)
}

type TrafficManagerAzureEndpointOutput struct{ *pulumi.OutputState }

func (TrafficManagerAzureEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficManagerAzureEndpoint)(nil)).Elem()
}

func (o TrafficManagerAzureEndpointOutput) ToTrafficManagerAzureEndpointOutput() TrafficManagerAzureEndpointOutput {
	return o
}

func (o TrafficManagerAzureEndpointOutput) ToTrafficManagerAzureEndpointOutputWithContext(ctx context.Context) TrafficManagerAzureEndpointOutput {
	return o
}

// One or more `customHeader` blocks as defined below.
func (o TrafficManagerAzureEndpointOutput) CustomHeaders() TrafficManagerAzureEndpointCustomHeaderArrayOutput {
	return o.ApplyT(func(v *TrafficManagerAzureEndpoint) TrafficManagerAzureEndpointCustomHeaderArrayOutput {
		return v.CustomHeaders
	}).(TrafficManagerAzureEndpointCustomHeaderArrayOutput)
}

// Is the endpoint enabled? Defaults to `true`.
func (o TrafficManagerAzureEndpointOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TrafficManagerAzureEndpoint) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// A list of Geographic Regions used to distribute traffic, such as `WORLD`, `UK` or `DE`. The same location can't be specified in two endpoints. [See the Geographic Hierarchies documentation for more information](https://docs.microsoft.com/rest/api/trafficmanager/geographichierarchies/getdefault).
func (o TrafficManagerAzureEndpointOutput) GeoMappings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TrafficManagerAzureEndpoint) pulumi.StringArrayOutput { return v.GeoMappings }).(pulumi.StringArrayOutput)
}

// The name of the Azure Endpoint. Changing this forces a new resource to be created.
func (o TrafficManagerAzureEndpointOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficManagerAzureEndpoint) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the priority of this Endpoint, this must be specified for Profiles using the `Priority` traffic routing method. Supports values between 1 and 1000, with no Endpoints sharing the same value. If omitted the value will be computed in order of creation.
func (o TrafficManagerAzureEndpointOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v *TrafficManagerAzureEndpoint) pulumi.IntOutput { return v.Priority }).(pulumi.IntOutput)
}

// The ID of the Traffic Manager Profile that this Azure Endpoint should be created within. Changing this forces a new resource to be created.
func (o TrafficManagerAzureEndpointOutput) ProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficManagerAzureEndpoint) pulumi.StringOutput { return v.ProfileId }).(pulumi.StringOutput)
}

// One or more `subnet` blocks as defined below. Changing this forces a new resource to be created.
func (o TrafficManagerAzureEndpointOutput) Subnets() TrafficManagerAzureEndpointSubnetArrayOutput {
	return o.ApplyT(func(v *TrafficManagerAzureEndpoint) TrafficManagerAzureEndpointSubnetArrayOutput { return v.Subnets }).(TrafficManagerAzureEndpointSubnetArrayOutput)
}

// The ID of the Azure Resource which should be used as a target.
func (o TrafficManagerAzureEndpointOutput) TargetResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficManagerAzureEndpoint) pulumi.StringOutput { return v.TargetResourceId }).(pulumi.StringOutput)
}

// Specifies how much traffic should be distributed to this endpoint, this must be specified for Profiles using the Weighted traffic routing method. Valid values are between `1` and `1000`.
func (o TrafficManagerAzureEndpointOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v *TrafficManagerAzureEndpoint) pulumi.IntOutput { return v.Weight }).(pulumi.IntOutput)
}

type TrafficManagerAzureEndpointArrayOutput struct{ *pulumi.OutputState }

func (TrafficManagerAzureEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TrafficManagerAzureEndpoint)(nil)).Elem()
}

func (o TrafficManagerAzureEndpointArrayOutput) ToTrafficManagerAzureEndpointArrayOutput() TrafficManagerAzureEndpointArrayOutput {
	return o
}

func (o TrafficManagerAzureEndpointArrayOutput) ToTrafficManagerAzureEndpointArrayOutputWithContext(ctx context.Context) TrafficManagerAzureEndpointArrayOutput {
	return o
}

func (o TrafficManagerAzureEndpointArrayOutput) Index(i pulumi.IntInput) TrafficManagerAzureEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TrafficManagerAzureEndpoint {
		return vs[0].([]*TrafficManagerAzureEndpoint)[vs[1].(int)]
	}).(TrafficManagerAzureEndpointOutput)
}

type TrafficManagerAzureEndpointMapOutput struct{ *pulumi.OutputState }

func (TrafficManagerAzureEndpointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TrafficManagerAzureEndpoint)(nil)).Elem()
}

func (o TrafficManagerAzureEndpointMapOutput) ToTrafficManagerAzureEndpointMapOutput() TrafficManagerAzureEndpointMapOutput {
	return o
}

func (o TrafficManagerAzureEndpointMapOutput) ToTrafficManagerAzureEndpointMapOutputWithContext(ctx context.Context) TrafficManagerAzureEndpointMapOutput {
	return o
}

func (o TrafficManagerAzureEndpointMapOutput) MapIndex(k pulumi.StringInput) TrafficManagerAzureEndpointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TrafficManagerAzureEndpoint {
		return vs[0].(map[string]*TrafficManagerAzureEndpoint)[vs[1].(string)]
	}).(TrafficManagerAzureEndpointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficManagerAzureEndpointInput)(nil)).Elem(), &TrafficManagerAzureEndpoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficManagerAzureEndpointArrayInput)(nil)).Elem(), TrafficManagerAzureEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficManagerAzureEndpointMapInput)(nil)).Elem(), TrafficManagerAzureEndpointMap{})
	pulumi.RegisterOutputType(TrafficManagerAzureEndpointOutput{})
	pulumi.RegisterOutputType(TrafficManagerAzureEndpointArrayOutput{})
	pulumi.RegisterOutputType(TrafficManagerAzureEndpointMapOutput{})
}
