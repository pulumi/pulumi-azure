// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Network Manager Static Member.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			current, err := core.LookupSubscription(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			exampleNetworkManager, err := network.NewNetworkManager(ctx, "exampleNetworkManager", &network.NetworkManagerArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				Scope: &network.NetworkManagerScopeArgs{
//					SubscriptionIds: pulumi.StringArray{
//						*pulumi.String(current.Id),
//					},
//				},
//				ScopeAccesses: pulumi.StringArray{
//					pulumi.String("Connectivity"),
//					pulumi.String("SecurityAdmin"),
//				},
//				Description: pulumi.String("example network manager"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleNetworkManagerNetworkGroup, err := network.NewNetworkManagerNetworkGroup(ctx, "exampleNetworkManagerNetworkGroup", &network.NetworkManagerNetworkGroupArgs{
//				NetworkManagerId: exampleNetworkManager.ID(),
//				Description:      pulumi.String("example network group"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "exampleVirtualNetwork", &network.VirtualNetworkArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				AddressSpaces: pulumi.StringArray{
//					pulumi.String("192.168.1.0/24"),
//				},
//				Location: exampleResourceGroup.Location,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = network.NewNetworkManagerStaticMember(ctx, "exampleNetworkManagerStaticMember", &network.NetworkManagerStaticMemberArgs{
//				NetworkGroupId:         exampleNetworkManagerNetworkGroup.ID(),
//				TargetVirtualNetworkId: exampleVirtualNetwork.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Network Manager Static Member can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:network/networkManagerStaticMember:NetworkManagerStaticMember example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Network/networkManagers/networkManager1/networkGroups/networkGroup1/staticMembers/staticMember1
//
// ```
type NetworkManagerStaticMember struct {
	pulumi.CustomResourceState

	// Specifies the name which should be used for this Network Manager Static Member. Changing this forces a new Network Manager Static Member to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the ID of the Network Manager Group. Changing this forces a new Network Manager Static Member to be created.
	NetworkGroupId pulumi.StringOutput `pulumi:"networkGroupId"`
	// The region of the Network Manager Static Member.
	Region pulumi.StringOutput `pulumi:"region"`
	// Specifies the Resource ID of the Virtual Network using as the Static Member. Changing this forces a new Network Manager Static Member to be created.
	TargetVirtualNetworkId pulumi.StringOutput `pulumi:"targetVirtualNetworkId"`
}

// NewNetworkManagerStaticMember registers a new resource with the given unique name, arguments, and options.
func NewNetworkManagerStaticMember(ctx *pulumi.Context,
	name string, args *NetworkManagerStaticMemberArgs, opts ...pulumi.ResourceOption) (*NetworkManagerStaticMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkGroupId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkGroupId'")
	}
	if args.TargetVirtualNetworkId == nil {
		return nil, errors.New("invalid value for required argument 'TargetVirtualNetworkId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkManagerStaticMember
	err := ctx.RegisterResource("azure:network/networkManagerStaticMember:NetworkManagerStaticMember", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkManagerStaticMember gets an existing NetworkManagerStaticMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkManagerStaticMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkManagerStaticMemberState, opts ...pulumi.ResourceOption) (*NetworkManagerStaticMember, error) {
	var resource NetworkManagerStaticMember
	err := ctx.ReadResource("azure:network/networkManagerStaticMember:NetworkManagerStaticMember", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkManagerStaticMember resources.
type networkManagerStaticMemberState struct {
	// Specifies the name which should be used for this Network Manager Static Member. Changing this forces a new Network Manager Static Member to be created.
	Name *string `pulumi:"name"`
	// Specifies the ID of the Network Manager Group. Changing this forces a new Network Manager Static Member to be created.
	NetworkGroupId *string `pulumi:"networkGroupId"`
	// The region of the Network Manager Static Member.
	Region *string `pulumi:"region"`
	// Specifies the Resource ID of the Virtual Network using as the Static Member. Changing this forces a new Network Manager Static Member to be created.
	TargetVirtualNetworkId *string `pulumi:"targetVirtualNetworkId"`
}

type NetworkManagerStaticMemberState struct {
	// Specifies the name which should be used for this Network Manager Static Member. Changing this forces a new Network Manager Static Member to be created.
	Name pulumi.StringPtrInput
	// Specifies the ID of the Network Manager Group. Changing this forces a new Network Manager Static Member to be created.
	NetworkGroupId pulumi.StringPtrInput
	// The region of the Network Manager Static Member.
	Region pulumi.StringPtrInput
	// Specifies the Resource ID of the Virtual Network using as the Static Member. Changing this forces a new Network Manager Static Member to be created.
	TargetVirtualNetworkId pulumi.StringPtrInput
}

func (NetworkManagerStaticMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkManagerStaticMemberState)(nil)).Elem()
}

type networkManagerStaticMemberArgs struct {
	// Specifies the name which should be used for this Network Manager Static Member. Changing this forces a new Network Manager Static Member to be created.
	Name *string `pulumi:"name"`
	// Specifies the ID of the Network Manager Group. Changing this forces a new Network Manager Static Member to be created.
	NetworkGroupId string `pulumi:"networkGroupId"`
	// Specifies the Resource ID of the Virtual Network using as the Static Member. Changing this forces a new Network Manager Static Member to be created.
	TargetVirtualNetworkId string `pulumi:"targetVirtualNetworkId"`
}

// The set of arguments for constructing a NetworkManagerStaticMember resource.
type NetworkManagerStaticMemberArgs struct {
	// Specifies the name which should be used for this Network Manager Static Member. Changing this forces a new Network Manager Static Member to be created.
	Name pulumi.StringPtrInput
	// Specifies the ID of the Network Manager Group. Changing this forces a new Network Manager Static Member to be created.
	NetworkGroupId pulumi.StringInput
	// Specifies the Resource ID of the Virtual Network using as the Static Member. Changing this forces a new Network Manager Static Member to be created.
	TargetVirtualNetworkId pulumi.StringInput
}

func (NetworkManagerStaticMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkManagerStaticMemberArgs)(nil)).Elem()
}

type NetworkManagerStaticMemberInput interface {
	pulumi.Input

	ToNetworkManagerStaticMemberOutput() NetworkManagerStaticMemberOutput
	ToNetworkManagerStaticMemberOutputWithContext(ctx context.Context) NetworkManagerStaticMemberOutput
}

func (*NetworkManagerStaticMember) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkManagerStaticMember)(nil)).Elem()
}

func (i *NetworkManagerStaticMember) ToNetworkManagerStaticMemberOutput() NetworkManagerStaticMemberOutput {
	return i.ToNetworkManagerStaticMemberOutputWithContext(context.Background())
}

func (i *NetworkManagerStaticMember) ToNetworkManagerStaticMemberOutputWithContext(ctx context.Context) NetworkManagerStaticMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerStaticMemberOutput)
}

// NetworkManagerStaticMemberArrayInput is an input type that accepts NetworkManagerStaticMemberArray and NetworkManagerStaticMemberArrayOutput values.
// You can construct a concrete instance of `NetworkManagerStaticMemberArrayInput` via:
//
//	NetworkManagerStaticMemberArray{ NetworkManagerStaticMemberArgs{...} }
type NetworkManagerStaticMemberArrayInput interface {
	pulumi.Input

	ToNetworkManagerStaticMemberArrayOutput() NetworkManagerStaticMemberArrayOutput
	ToNetworkManagerStaticMemberArrayOutputWithContext(context.Context) NetworkManagerStaticMemberArrayOutput
}

type NetworkManagerStaticMemberArray []NetworkManagerStaticMemberInput

func (NetworkManagerStaticMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkManagerStaticMember)(nil)).Elem()
}

func (i NetworkManagerStaticMemberArray) ToNetworkManagerStaticMemberArrayOutput() NetworkManagerStaticMemberArrayOutput {
	return i.ToNetworkManagerStaticMemberArrayOutputWithContext(context.Background())
}

func (i NetworkManagerStaticMemberArray) ToNetworkManagerStaticMemberArrayOutputWithContext(ctx context.Context) NetworkManagerStaticMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerStaticMemberArrayOutput)
}

// NetworkManagerStaticMemberMapInput is an input type that accepts NetworkManagerStaticMemberMap and NetworkManagerStaticMemberMapOutput values.
// You can construct a concrete instance of `NetworkManagerStaticMemberMapInput` via:
//
//	NetworkManagerStaticMemberMap{ "key": NetworkManagerStaticMemberArgs{...} }
type NetworkManagerStaticMemberMapInput interface {
	pulumi.Input

	ToNetworkManagerStaticMemberMapOutput() NetworkManagerStaticMemberMapOutput
	ToNetworkManagerStaticMemberMapOutputWithContext(context.Context) NetworkManagerStaticMemberMapOutput
}

type NetworkManagerStaticMemberMap map[string]NetworkManagerStaticMemberInput

func (NetworkManagerStaticMemberMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkManagerStaticMember)(nil)).Elem()
}

func (i NetworkManagerStaticMemberMap) ToNetworkManagerStaticMemberMapOutput() NetworkManagerStaticMemberMapOutput {
	return i.ToNetworkManagerStaticMemberMapOutputWithContext(context.Background())
}

func (i NetworkManagerStaticMemberMap) ToNetworkManagerStaticMemberMapOutputWithContext(ctx context.Context) NetworkManagerStaticMemberMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerStaticMemberMapOutput)
}

type NetworkManagerStaticMemberOutput struct{ *pulumi.OutputState }

func (NetworkManagerStaticMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkManagerStaticMember)(nil)).Elem()
}

func (o NetworkManagerStaticMemberOutput) ToNetworkManagerStaticMemberOutput() NetworkManagerStaticMemberOutput {
	return o
}

func (o NetworkManagerStaticMemberOutput) ToNetworkManagerStaticMemberOutputWithContext(ctx context.Context) NetworkManagerStaticMemberOutput {
	return o
}

// Specifies the name which should be used for this Network Manager Static Member. Changing this forces a new Network Manager Static Member to be created.
func (o NetworkManagerStaticMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerStaticMember) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the ID of the Network Manager Group. Changing this forces a new Network Manager Static Member to be created.
func (o NetworkManagerStaticMemberOutput) NetworkGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerStaticMember) pulumi.StringOutput { return v.NetworkGroupId }).(pulumi.StringOutput)
}

// The region of the Network Manager Static Member.
func (o NetworkManagerStaticMemberOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerStaticMember) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Specifies the Resource ID of the Virtual Network using as the Static Member. Changing this forces a new Network Manager Static Member to be created.
func (o NetworkManagerStaticMemberOutput) TargetVirtualNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerStaticMember) pulumi.StringOutput { return v.TargetVirtualNetworkId }).(pulumi.StringOutput)
}

type NetworkManagerStaticMemberArrayOutput struct{ *pulumi.OutputState }

func (NetworkManagerStaticMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkManagerStaticMember)(nil)).Elem()
}

func (o NetworkManagerStaticMemberArrayOutput) ToNetworkManagerStaticMemberArrayOutput() NetworkManagerStaticMemberArrayOutput {
	return o
}

func (o NetworkManagerStaticMemberArrayOutput) ToNetworkManagerStaticMemberArrayOutputWithContext(ctx context.Context) NetworkManagerStaticMemberArrayOutput {
	return o
}

func (o NetworkManagerStaticMemberArrayOutput) Index(i pulumi.IntInput) NetworkManagerStaticMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkManagerStaticMember {
		return vs[0].([]*NetworkManagerStaticMember)[vs[1].(int)]
	}).(NetworkManagerStaticMemberOutput)
}

type NetworkManagerStaticMemberMapOutput struct{ *pulumi.OutputState }

func (NetworkManagerStaticMemberMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkManagerStaticMember)(nil)).Elem()
}

func (o NetworkManagerStaticMemberMapOutput) ToNetworkManagerStaticMemberMapOutput() NetworkManagerStaticMemberMapOutput {
	return o
}

func (o NetworkManagerStaticMemberMapOutput) ToNetworkManagerStaticMemberMapOutputWithContext(ctx context.Context) NetworkManagerStaticMemberMapOutput {
	return o
}

func (o NetworkManagerStaticMemberMapOutput) MapIndex(k pulumi.StringInput) NetworkManagerStaticMemberOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkManagerStaticMember {
		return vs[0].(map[string]*NetworkManagerStaticMember)[vs[1].(string)]
	}).(NetworkManagerStaticMemberOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerStaticMemberInput)(nil)).Elem(), &NetworkManagerStaticMember{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerStaticMemberArrayInput)(nil)).Elem(), NetworkManagerStaticMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerStaticMemberMapInput)(nil)).Elem(), NetworkManagerStaticMemberMap{})
	pulumi.RegisterOutputType(NetworkManagerStaticMemberOutput{})
	pulumi.RegisterOutputType(NetworkManagerStaticMemberArrayOutput{})
	pulumi.RegisterOutputType(NetworkManagerStaticMemberMapOutput{})
}
