// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Network Manager Routing Configuration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resources"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			current, err := core.LookupSubscription(ctx, &core.LookupSubscriptionArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			exampleNetworkManager, err := network.NewNetworkManager(ctx, "example", &network.NetworkManagerArgs{
//				Name:              pulumi.String("example-network-manager"),
//				Location:          example.Location,
//				ResourceGroupName: example.Name,
//				Scope: &network.NetworkManagerScopeArgs{
//					SubscriptionIds: pulumi.StringArray{
//						pulumi.String(current.Id),
//					},
//				},
//				ScopeAccesses: pulumi.StringArray{
//					pulumi.String("Routing"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = network.NewNetworkManagerRoutingConfiguration(ctx, "example", &network.NetworkManagerRoutingConfigurationArgs{
//				Name:             pulumi.String("example-routing-configuration"),
//				NetworkManagerId: exampleNetworkManager.ID(),
//				Description:      pulumi.String("example routing configuration"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This resource uses the following Azure API Providers:
//
// * `Microsoft.Network`: 2024-05-01
//
// ## Import
//
// Network Manager Routing Configurations can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:network/networkManagerRoutingConfiguration:NetworkManagerRoutingConfiguration example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/networkManagers/manager1/routingConfigurations/conf1
// ```
type NetworkManagerRoutingConfiguration struct {
	pulumi.CustomResourceState

	// The description of the Network Manager.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name which should be used for this Network Manager Routing Configuration. Changing this forces a new Network Manager Routing Configuration to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the Network Manager. Changing this forces a new Network Manager Routing Configuration to be created.
	NetworkManagerId pulumi.StringOutput `pulumi:"networkManagerId"`
}

// NewNetworkManagerRoutingConfiguration registers a new resource with the given unique name, arguments, and options.
func NewNetworkManagerRoutingConfiguration(ctx *pulumi.Context,
	name string, args *NetworkManagerRoutingConfigurationArgs, opts ...pulumi.ResourceOption) (*NetworkManagerRoutingConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkManagerId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkManagerId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkManagerRoutingConfiguration
	err := ctx.RegisterResource("azure:network/networkManagerRoutingConfiguration:NetworkManagerRoutingConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkManagerRoutingConfiguration gets an existing NetworkManagerRoutingConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkManagerRoutingConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkManagerRoutingConfigurationState, opts ...pulumi.ResourceOption) (*NetworkManagerRoutingConfiguration, error) {
	var resource NetworkManagerRoutingConfiguration
	err := ctx.ReadResource("azure:network/networkManagerRoutingConfiguration:NetworkManagerRoutingConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkManagerRoutingConfiguration resources.
type networkManagerRoutingConfigurationState struct {
	// The description of the Network Manager.
	Description *string `pulumi:"description"`
	// The name which should be used for this Network Manager Routing Configuration. Changing this forces a new Network Manager Routing Configuration to be created.
	Name *string `pulumi:"name"`
	// The ID of the Network Manager. Changing this forces a new Network Manager Routing Configuration to be created.
	NetworkManagerId *string `pulumi:"networkManagerId"`
}

type NetworkManagerRoutingConfigurationState struct {
	// The description of the Network Manager.
	Description pulumi.StringPtrInput
	// The name which should be used for this Network Manager Routing Configuration. Changing this forces a new Network Manager Routing Configuration to be created.
	Name pulumi.StringPtrInput
	// The ID of the Network Manager. Changing this forces a new Network Manager Routing Configuration to be created.
	NetworkManagerId pulumi.StringPtrInput
}

func (NetworkManagerRoutingConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkManagerRoutingConfigurationState)(nil)).Elem()
}

type networkManagerRoutingConfigurationArgs struct {
	// The description of the Network Manager.
	Description *string `pulumi:"description"`
	// The name which should be used for this Network Manager Routing Configuration. Changing this forces a new Network Manager Routing Configuration to be created.
	Name *string `pulumi:"name"`
	// The ID of the Network Manager. Changing this forces a new Network Manager Routing Configuration to be created.
	NetworkManagerId string `pulumi:"networkManagerId"`
}

// The set of arguments for constructing a NetworkManagerRoutingConfiguration resource.
type NetworkManagerRoutingConfigurationArgs struct {
	// The description of the Network Manager.
	Description pulumi.StringPtrInput
	// The name which should be used for this Network Manager Routing Configuration. Changing this forces a new Network Manager Routing Configuration to be created.
	Name pulumi.StringPtrInput
	// The ID of the Network Manager. Changing this forces a new Network Manager Routing Configuration to be created.
	NetworkManagerId pulumi.StringInput
}

func (NetworkManagerRoutingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkManagerRoutingConfigurationArgs)(nil)).Elem()
}

type NetworkManagerRoutingConfigurationInput interface {
	pulumi.Input

	ToNetworkManagerRoutingConfigurationOutput() NetworkManagerRoutingConfigurationOutput
	ToNetworkManagerRoutingConfigurationOutputWithContext(ctx context.Context) NetworkManagerRoutingConfigurationOutput
}

func (*NetworkManagerRoutingConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkManagerRoutingConfiguration)(nil)).Elem()
}

func (i *NetworkManagerRoutingConfiguration) ToNetworkManagerRoutingConfigurationOutput() NetworkManagerRoutingConfigurationOutput {
	return i.ToNetworkManagerRoutingConfigurationOutputWithContext(context.Background())
}

func (i *NetworkManagerRoutingConfiguration) ToNetworkManagerRoutingConfigurationOutputWithContext(ctx context.Context) NetworkManagerRoutingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerRoutingConfigurationOutput)
}

// NetworkManagerRoutingConfigurationArrayInput is an input type that accepts NetworkManagerRoutingConfigurationArray and NetworkManagerRoutingConfigurationArrayOutput values.
// You can construct a concrete instance of `NetworkManagerRoutingConfigurationArrayInput` via:
//
//	NetworkManagerRoutingConfigurationArray{ NetworkManagerRoutingConfigurationArgs{...} }
type NetworkManagerRoutingConfigurationArrayInput interface {
	pulumi.Input

	ToNetworkManagerRoutingConfigurationArrayOutput() NetworkManagerRoutingConfigurationArrayOutput
	ToNetworkManagerRoutingConfigurationArrayOutputWithContext(context.Context) NetworkManagerRoutingConfigurationArrayOutput
}

type NetworkManagerRoutingConfigurationArray []NetworkManagerRoutingConfigurationInput

func (NetworkManagerRoutingConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkManagerRoutingConfiguration)(nil)).Elem()
}

func (i NetworkManagerRoutingConfigurationArray) ToNetworkManagerRoutingConfigurationArrayOutput() NetworkManagerRoutingConfigurationArrayOutput {
	return i.ToNetworkManagerRoutingConfigurationArrayOutputWithContext(context.Background())
}

func (i NetworkManagerRoutingConfigurationArray) ToNetworkManagerRoutingConfigurationArrayOutputWithContext(ctx context.Context) NetworkManagerRoutingConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerRoutingConfigurationArrayOutput)
}

// NetworkManagerRoutingConfigurationMapInput is an input type that accepts NetworkManagerRoutingConfigurationMap and NetworkManagerRoutingConfigurationMapOutput values.
// You can construct a concrete instance of `NetworkManagerRoutingConfigurationMapInput` via:
//
//	NetworkManagerRoutingConfigurationMap{ "key": NetworkManagerRoutingConfigurationArgs{...} }
type NetworkManagerRoutingConfigurationMapInput interface {
	pulumi.Input

	ToNetworkManagerRoutingConfigurationMapOutput() NetworkManagerRoutingConfigurationMapOutput
	ToNetworkManagerRoutingConfigurationMapOutputWithContext(context.Context) NetworkManagerRoutingConfigurationMapOutput
}

type NetworkManagerRoutingConfigurationMap map[string]NetworkManagerRoutingConfigurationInput

func (NetworkManagerRoutingConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkManagerRoutingConfiguration)(nil)).Elem()
}

func (i NetworkManagerRoutingConfigurationMap) ToNetworkManagerRoutingConfigurationMapOutput() NetworkManagerRoutingConfigurationMapOutput {
	return i.ToNetworkManagerRoutingConfigurationMapOutputWithContext(context.Background())
}

func (i NetworkManagerRoutingConfigurationMap) ToNetworkManagerRoutingConfigurationMapOutputWithContext(ctx context.Context) NetworkManagerRoutingConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerRoutingConfigurationMapOutput)
}

type NetworkManagerRoutingConfigurationOutput struct{ *pulumi.OutputState }

func (NetworkManagerRoutingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkManagerRoutingConfiguration)(nil)).Elem()
}

func (o NetworkManagerRoutingConfigurationOutput) ToNetworkManagerRoutingConfigurationOutput() NetworkManagerRoutingConfigurationOutput {
	return o
}

func (o NetworkManagerRoutingConfigurationOutput) ToNetworkManagerRoutingConfigurationOutputWithContext(ctx context.Context) NetworkManagerRoutingConfigurationOutput {
	return o
}

// The description of the Network Manager.
func (o NetworkManagerRoutingConfigurationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkManagerRoutingConfiguration) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The name which should be used for this Network Manager Routing Configuration. Changing this forces a new Network Manager Routing Configuration to be created.
func (o NetworkManagerRoutingConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerRoutingConfiguration) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the Network Manager. Changing this forces a new Network Manager Routing Configuration to be created.
func (o NetworkManagerRoutingConfigurationOutput) NetworkManagerId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerRoutingConfiguration) pulumi.StringOutput { return v.NetworkManagerId }).(pulumi.StringOutput)
}

type NetworkManagerRoutingConfigurationArrayOutput struct{ *pulumi.OutputState }

func (NetworkManagerRoutingConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkManagerRoutingConfiguration)(nil)).Elem()
}

func (o NetworkManagerRoutingConfigurationArrayOutput) ToNetworkManagerRoutingConfigurationArrayOutput() NetworkManagerRoutingConfigurationArrayOutput {
	return o
}

func (o NetworkManagerRoutingConfigurationArrayOutput) ToNetworkManagerRoutingConfigurationArrayOutputWithContext(ctx context.Context) NetworkManagerRoutingConfigurationArrayOutput {
	return o
}

func (o NetworkManagerRoutingConfigurationArrayOutput) Index(i pulumi.IntInput) NetworkManagerRoutingConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkManagerRoutingConfiguration {
		return vs[0].([]*NetworkManagerRoutingConfiguration)[vs[1].(int)]
	}).(NetworkManagerRoutingConfigurationOutput)
}

type NetworkManagerRoutingConfigurationMapOutput struct{ *pulumi.OutputState }

func (NetworkManagerRoutingConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkManagerRoutingConfiguration)(nil)).Elem()
}

func (o NetworkManagerRoutingConfigurationMapOutput) ToNetworkManagerRoutingConfigurationMapOutput() NetworkManagerRoutingConfigurationMapOutput {
	return o
}

func (o NetworkManagerRoutingConfigurationMapOutput) ToNetworkManagerRoutingConfigurationMapOutputWithContext(ctx context.Context) NetworkManagerRoutingConfigurationMapOutput {
	return o
}

func (o NetworkManagerRoutingConfigurationMapOutput) MapIndex(k pulumi.StringInput) NetworkManagerRoutingConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkManagerRoutingConfiguration {
		return vs[0].(map[string]*NetworkManagerRoutingConfiguration)[vs[1].(string)]
	}).(NetworkManagerRoutingConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerRoutingConfigurationInput)(nil)).Elem(), &NetworkManagerRoutingConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerRoutingConfigurationArrayInput)(nil)).Elem(), NetworkManagerRoutingConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerRoutingConfigurationMapInput)(nil)).Elem(), NetworkManagerRoutingConfigurationMap{})
	pulumi.RegisterOutputType(NetworkManagerRoutingConfigurationOutput{})
	pulumi.RegisterOutputType(NetworkManagerRoutingConfigurationArrayOutput{})
	pulumi.RegisterOutputType(NetworkManagerRoutingConfigurationMapOutput{})
}
