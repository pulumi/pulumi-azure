// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about existing IP Groups.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := network.GetIpGroups(ctx, &network.GetIpGroupsArgs{
//				Name:              "existing",
//				ResourceGroupName: "existing",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", example.Id)
//			return nil
//		})
//	}
//
// ```
func GetIpGroups(ctx *pulumi.Context, args *GetIpGroupsArgs, opts ...pulumi.InvokeOption) (*GetIpGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetIpGroupsResult
	err := ctx.Invoke("azure:network/getIpGroups:getIpGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIpGroups.
type GetIpGroupsArgs struct {
	// A substring to match some number of IP Groups.
	Name string `pulumi:"name"`
	// The name of the Resource Group where the IP Groups exist.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getIpGroups.
type GetIpGroupsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of IP Group IDs.
	Ids      []string `pulumi:"ids"`
	Location string   `pulumi:"location"`
	Name     string   `pulumi:"name"`
	// A list of IP Group Names.
	Names             []string          `pulumi:"names"`
	ResourceGroupName string            `pulumi:"resourceGroupName"`
	Tags              map[string]string `pulumi:"tags"`
}

func GetIpGroupsOutput(ctx *pulumi.Context, args GetIpGroupsOutputArgs, opts ...pulumi.InvokeOption) GetIpGroupsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetIpGroupsResult, error) {
			args := v.(GetIpGroupsArgs)
			r, err := GetIpGroups(ctx, &args, opts...)
			var s GetIpGroupsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetIpGroupsResultOutput)
}

// A collection of arguments for invoking getIpGroups.
type GetIpGroupsOutputArgs struct {
	// A substring to match some number of IP Groups.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Resource Group where the IP Groups exist.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetIpGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getIpGroups.
type GetIpGroupsResultOutput struct{ *pulumi.OutputState }

func (GetIpGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpGroupsResult)(nil)).Elem()
}

func (o GetIpGroupsResultOutput) ToGetIpGroupsResultOutput() GetIpGroupsResultOutput {
	return o
}

func (o GetIpGroupsResultOutput) ToGetIpGroupsResultOutputWithContext(ctx context.Context) GetIpGroupsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetIpGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of IP Group IDs.
func (o GetIpGroupsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpGroupsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetIpGroupsResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpGroupsResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o GetIpGroupsResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpGroupsResult) string { return v.Name }).(pulumi.StringOutput)
}

// A list of IP Group Names.
func (o GetIpGroupsResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpGroupsResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetIpGroupsResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpGroupsResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

func (o GetIpGroupsResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetIpGroupsResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIpGroupsResultOutput{})
}
