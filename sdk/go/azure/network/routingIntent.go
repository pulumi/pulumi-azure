// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Virtual Hub Routing Intent.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleVirtualWan, err := network.NewVirtualWan(ctx, "exampleVirtualWan", &network.VirtualWanArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//			})
//			if err != nil {
//				return err
//			}
//			exampleVirtualHub, err := network.NewVirtualHub(ctx, "exampleVirtualHub", &network.VirtualHubArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				VirtualWanId:      exampleVirtualWan.ID(),
//				AddressPrefix:     pulumi.String("10.0.1.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleFirewall, err := network.NewFirewall(ctx, "exampleFirewall", &network.FirewallArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				SkuName:           pulumi.String("AZFW_Hub"),
//				SkuTier:           pulumi.String("Standard"),
//				VirtualHub: &network.FirewallVirtualHubArgs{
//					VirtualHubId:  exampleVirtualHub.ID(),
//					PublicIpCount: pulumi.Int(1),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = network.NewRoutingIntent(ctx, "exampleRoutingIntent", &network.RoutingIntentArgs{
//				VirtualHubId: exampleVirtualHub.ID(),
//				RoutingPolicies: network.RoutingIntentRoutingPolicyArray{
//					&network.RoutingIntentRoutingPolicyArgs{
//						Name: pulumi.String("InternetTrafficPolicy"),
//						Destinations: pulumi.StringArray{
//							pulumi.String("Internet"),
//						},
//						NextHop: exampleFirewall.ID(),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Virtual Hub Routing Intents can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:network/routingIntent:RoutingIntent example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Network/virtualHubs/virtualHub1/routingIntent/routingIntent1
//
// ```
type RoutingIntent struct {
	pulumi.CustomResourceState

	// The name which should be used for this Virtual Hub Routing Intent. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// One or more `routingPolicy` blocks as defined below.
	RoutingPolicies RoutingIntentRoutingPolicyArrayOutput `pulumi:"routingPolicies"`
	// The resource ID of the Virtual Hub. Changing this forces a new resource to be created.
	VirtualHubId pulumi.StringOutput `pulumi:"virtualHubId"`
}

// NewRoutingIntent registers a new resource with the given unique name, arguments, and options.
func NewRoutingIntent(ctx *pulumi.Context,
	name string, args *RoutingIntentArgs, opts ...pulumi.ResourceOption) (*RoutingIntent, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RoutingPolicies == nil {
		return nil, errors.New("invalid value for required argument 'RoutingPolicies'")
	}
	if args.VirtualHubId == nil {
		return nil, errors.New("invalid value for required argument 'VirtualHubId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RoutingIntent
	err := ctx.RegisterResource("azure:network/routingIntent:RoutingIntent", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRoutingIntent gets an existing RoutingIntent resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRoutingIntent(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RoutingIntentState, opts ...pulumi.ResourceOption) (*RoutingIntent, error) {
	var resource RoutingIntent
	err := ctx.ReadResource("azure:network/routingIntent:RoutingIntent", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RoutingIntent resources.
type routingIntentState struct {
	// The name which should be used for this Virtual Hub Routing Intent. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// One or more `routingPolicy` blocks as defined below.
	RoutingPolicies []RoutingIntentRoutingPolicy `pulumi:"routingPolicies"`
	// The resource ID of the Virtual Hub. Changing this forces a new resource to be created.
	VirtualHubId *string `pulumi:"virtualHubId"`
}

type RoutingIntentState struct {
	// The name which should be used for this Virtual Hub Routing Intent. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// One or more `routingPolicy` blocks as defined below.
	RoutingPolicies RoutingIntentRoutingPolicyArrayInput
	// The resource ID of the Virtual Hub. Changing this forces a new resource to be created.
	VirtualHubId pulumi.StringPtrInput
}

func (RoutingIntentState) ElementType() reflect.Type {
	return reflect.TypeOf((*routingIntentState)(nil)).Elem()
}

type routingIntentArgs struct {
	// The name which should be used for this Virtual Hub Routing Intent. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// One or more `routingPolicy` blocks as defined below.
	RoutingPolicies []RoutingIntentRoutingPolicy `pulumi:"routingPolicies"`
	// The resource ID of the Virtual Hub. Changing this forces a new resource to be created.
	VirtualHubId string `pulumi:"virtualHubId"`
}

// The set of arguments for constructing a RoutingIntent resource.
type RoutingIntentArgs struct {
	// The name which should be used for this Virtual Hub Routing Intent. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// One or more `routingPolicy` blocks as defined below.
	RoutingPolicies RoutingIntentRoutingPolicyArrayInput
	// The resource ID of the Virtual Hub. Changing this forces a new resource to be created.
	VirtualHubId pulumi.StringInput
}

func (RoutingIntentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routingIntentArgs)(nil)).Elem()
}

type RoutingIntentInput interface {
	pulumi.Input

	ToRoutingIntentOutput() RoutingIntentOutput
	ToRoutingIntentOutputWithContext(ctx context.Context) RoutingIntentOutput
}

func (*RoutingIntent) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingIntent)(nil)).Elem()
}

func (i *RoutingIntent) ToRoutingIntentOutput() RoutingIntentOutput {
	return i.ToRoutingIntentOutputWithContext(context.Background())
}

func (i *RoutingIntent) ToRoutingIntentOutputWithContext(ctx context.Context) RoutingIntentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingIntentOutput)
}

// RoutingIntentArrayInput is an input type that accepts RoutingIntentArray and RoutingIntentArrayOutput values.
// You can construct a concrete instance of `RoutingIntentArrayInput` via:
//
//	RoutingIntentArray{ RoutingIntentArgs{...} }
type RoutingIntentArrayInput interface {
	pulumi.Input

	ToRoutingIntentArrayOutput() RoutingIntentArrayOutput
	ToRoutingIntentArrayOutputWithContext(context.Context) RoutingIntentArrayOutput
}

type RoutingIntentArray []RoutingIntentInput

func (RoutingIntentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RoutingIntent)(nil)).Elem()
}

func (i RoutingIntentArray) ToRoutingIntentArrayOutput() RoutingIntentArrayOutput {
	return i.ToRoutingIntentArrayOutputWithContext(context.Background())
}

func (i RoutingIntentArray) ToRoutingIntentArrayOutputWithContext(ctx context.Context) RoutingIntentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingIntentArrayOutput)
}

// RoutingIntentMapInput is an input type that accepts RoutingIntentMap and RoutingIntentMapOutput values.
// You can construct a concrete instance of `RoutingIntentMapInput` via:
//
//	RoutingIntentMap{ "key": RoutingIntentArgs{...} }
type RoutingIntentMapInput interface {
	pulumi.Input

	ToRoutingIntentMapOutput() RoutingIntentMapOutput
	ToRoutingIntentMapOutputWithContext(context.Context) RoutingIntentMapOutput
}

type RoutingIntentMap map[string]RoutingIntentInput

func (RoutingIntentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RoutingIntent)(nil)).Elem()
}

func (i RoutingIntentMap) ToRoutingIntentMapOutput() RoutingIntentMapOutput {
	return i.ToRoutingIntentMapOutputWithContext(context.Background())
}

func (i RoutingIntentMap) ToRoutingIntentMapOutputWithContext(ctx context.Context) RoutingIntentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingIntentMapOutput)
}

type RoutingIntentOutput struct{ *pulumi.OutputState }

func (RoutingIntentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingIntent)(nil)).Elem()
}

func (o RoutingIntentOutput) ToRoutingIntentOutput() RoutingIntentOutput {
	return o
}

func (o RoutingIntentOutput) ToRoutingIntentOutputWithContext(ctx context.Context) RoutingIntentOutput {
	return o
}

// The name which should be used for this Virtual Hub Routing Intent. Changing this forces a new resource to be created.
func (o RoutingIntentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RoutingIntent) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// One or more `routingPolicy` blocks as defined below.
func (o RoutingIntentOutput) RoutingPolicies() RoutingIntentRoutingPolicyArrayOutput {
	return o.ApplyT(func(v *RoutingIntent) RoutingIntentRoutingPolicyArrayOutput { return v.RoutingPolicies }).(RoutingIntentRoutingPolicyArrayOutput)
}

// The resource ID of the Virtual Hub. Changing this forces a new resource to be created.
func (o RoutingIntentOutput) VirtualHubId() pulumi.StringOutput {
	return o.ApplyT(func(v *RoutingIntent) pulumi.StringOutput { return v.VirtualHubId }).(pulumi.StringOutput)
}

type RoutingIntentArrayOutput struct{ *pulumi.OutputState }

func (RoutingIntentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RoutingIntent)(nil)).Elem()
}

func (o RoutingIntentArrayOutput) ToRoutingIntentArrayOutput() RoutingIntentArrayOutput {
	return o
}

func (o RoutingIntentArrayOutput) ToRoutingIntentArrayOutputWithContext(ctx context.Context) RoutingIntentArrayOutput {
	return o
}

func (o RoutingIntentArrayOutput) Index(i pulumi.IntInput) RoutingIntentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RoutingIntent {
		return vs[0].([]*RoutingIntent)[vs[1].(int)]
	}).(RoutingIntentOutput)
}

type RoutingIntentMapOutput struct{ *pulumi.OutputState }

func (RoutingIntentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RoutingIntent)(nil)).Elem()
}

func (o RoutingIntentMapOutput) ToRoutingIntentMapOutput() RoutingIntentMapOutput {
	return o
}

func (o RoutingIntentMapOutput) ToRoutingIntentMapOutputWithContext(ctx context.Context) RoutingIntentMapOutput {
	return o
}

func (o RoutingIntentMapOutput) MapIndex(k pulumi.StringInput) RoutingIntentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RoutingIntent {
		return vs[0].(map[string]*RoutingIntent)[vs[1].(string)]
	}).(RoutingIntentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RoutingIntentInput)(nil)).Elem(), &RoutingIntent{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutingIntentArrayInput)(nil)).Elem(), RoutingIntentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoutingIntentMapInput)(nil)).Elem(), RoutingIntentMap{})
	pulumi.RegisterOutputType(RoutingIntentOutput{})
	pulumi.RegisterOutputType(RoutingIntentArrayOutput{})
	pulumi.RegisterOutputType(RoutingIntentMapOutput{})
}
