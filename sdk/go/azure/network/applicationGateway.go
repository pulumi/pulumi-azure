// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages an Application Gateway.
type ApplicationGateway struct {
	pulumi.CustomResourceState

	// One or more `authenticationCertificate` blocks as defined below.
	AuthenticationCertificates ApplicationGatewayAuthenticationCertificateArrayOutput `pulumi:"authenticationCertificates"`
	// A `autoscaleConfiguration` block as defined below.
	AutoscaleConfiguration ApplicationGatewayAutoscaleConfigurationPtrOutput `pulumi:"autoscaleConfiguration"`
	// One or more `backendAddressPool` blocks as defined below.
	BackendAddressPools ApplicationGatewayBackendAddressPoolArrayOutput `pulumi:"backendAddressPools"`
	// One or more `backendHttpSettings` blocks as defined below.
	BackendHttpSettings ApplicationGatewayBackendHttpSettingArrayOutput `pulumi:"backendHttpSettings"`
	// One or more `customErrorConfiguration` blocks as defined below.
	CustomErrorConfigurations ApplicationGatewayCustomErrorConfigurationArrayOutput `pulumi:"customErrorConfigurations"`
	// Is HTTP2 enabled on the application gateway resource? Defaults to `false`.
	EnableHttp2 pulumi.BoolPtrOutput `pulumi:"enableHttp2"`
	// The resource ID of a firewall policy.
	FirewallPolicyId pulumi.StringPtrOutput `pulumi:"firewallPolicyId"`
	// One or more `frontendIpConfiguration` blocks as defined below.
	FrontendIpConfigurations ApplicationGatewayFrontendIpConfigurationArrayOutput `pulumi:"frontendIpConfigurations"`
	// One or more `frontendPort` blocks as defined below.
	FrontendPorts ApplicationGatewayFrontendPortArrayOutput `pulumi:"frontendPorts"`
	// One or more `gatewayIpConfiguration` blocks as defined below.
	GatewayIpConfigurations ApplicationGatewayGatewayIpConfigurationArrayOutput `pulumi:"gatewayIpConfigurations"`
	// One or more `httpListener` blocks as defined below.
	HttpListeners ApplicationGatewayHttpListenerArrayOutput `pulumi:"httpListeners"`
	// A `identity` block.
	Identity ApplicationGatewayIdentityOutput `pulumi:"identity"`
	// The Azure region where the Application Gateway should exist. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the Application Gateway. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// One or more `probe` blocks as defined below.
	Probes ApplicationGatewayProbeArrayOutput `pulumi:"probes"`
	// A `redirectConfiguration` block as defined below.
	RedirectConfigurations ApplicationGatewayRedirectConfigurationArrayOutput `pulumi:"redirectConfigurations"`
	// One or more `requestRoutingRule` blocks as defined below.
	RequestRoutingRules ApplicationGatewayRequestRoutingRuleArrayOutput `pulumi:"requestRoutingRules"`
	// The name of the resource group in which to the Application Gateway should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// One or more `rewriteRuleSet` blocks as defined below. Only valid for v2 SKUs.
	RewriteRuleSets ApplicationGatewayRewriteRuleSetArrayOutput `pulumi:"rewriteRuleSets"`
	// A `sku` block as defined below.
	Sku ApplicationGatewaySkuOutput `pulumi:"sku"`
	// One or more `sslCertificate` blocks as defined below.
	SslCertificates ApplicationGatewaySslCertificateArrayOutput `pulumi:"sslCertificates"`
	// a `ssl policy` block as defined below.
	SslPolicies ApplicationGatewaySslPolicyArrayOutput `pulumi:"sslPolicies"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// One or more `trustedRootCertificate` blocks as defined below.
	TrustedRootCertificates ApplicationGatewayTrustedRootCertificateArrayOutput `pulumi:"trustedRootCertificates"`
	// One or more `urlPathMap` blocks as defined below.
	UrlPathMaps ApplicationGatewayUrlPathMapArrayOutput `pulumi:"urlPathMaps"`
	// A `wafConfiguration` block as defined below.
	WafConfiguration ApplicationGatewayWafConfigurationPtrOutput `pulumi:"wafConfiguration"`
	// A collection of availability zones to spread the Application Gateway over.
	Zones pulumi.StringArrayOutput `pulumi:"zones"`
}

// NewApplicationGateway registers a new resource with the given unique name, arguments, and options.
func NewApplicationGateway(ctx *pulumi.Context,
	name string, args *ApplicationGatewayArgs, opts ...pulumi.ResourceOption) (*ApplicationGateway, error) {
	if args == nil || args.BackendAddressPools == nil {
		return nil, errors.New("missing required argument 'BackendAddressPools'")
	}
	if args == nil || args.BackendHttpSettings == nil {
		return nil, errors.New("missing required argument 'BackendHttpSettings'")
	}
	if args == nil || args.FrontendIpConfigurations == nil {
		return nil, errors.New("missing required argument 'FrontendIpConfigurations'")
	}
	if args == nil || args.FrontendPorts == nil {
		return nil, errors.New("missing required argument 'FrontendPorts'")
	}
	if args == nil || args.GatewayIpConfigurations == nil {
		return nil, errors.New("missing required argument 'GatewayIpConfigurations'")
	}
	if args == nil || args.HttpListeners == nil {
		return nil, errors.New("missing required argument 'HttpListeners'")
	}
	if args == nil || args.RequestRoutingRules == nil {
		return nil, errors.New("missing required argument 'RequestRoutingRules'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.Sku == nil {
		return nil, errors.New("missing required argument 'Sku'")
	}
	if args == nil {
		args = &ApplicationGatewayArgs{}
	}
	var resource ApplicationGateway
	err := ctx.RegisterResource("azure:network/applicationGateway:ApplicationGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplicationGateway gets an existing ApplicationGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplicationGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationGatewayState, opts ...pulumi.ResourceOption) (*ApplicationGateway, error) {
	var resource ApplicationGateway
	err := ctx.ReadResource("azure:network/applicationGateway:ApplicationGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplicationGateway resources.
type applicationGatewayState struct {
	// One or more `authenticationCertificate` blocks as defined below.
	AuthenticationCertificates []ApplicationGatewayAuthenticationCertificate `pulumi:"authenticationCertificates"`
	// A `autoscaleConfiguration` block as defined below.
	AutoscaleConfiguration *ApplicationGatewayAutoscaleConfiguration `pulumi:"autoscaleConfiguration"`
	// One or more `backendAddressPool` blocks as defined below.
	BackendAddressPools []ApplicationGatewayBackendAddressPool `pulumi:"backendAddressPools"`
	// One or more `backendHttpSettings` blocks as defined below.
	BackendHttpSettings []ApplicationGatewayBackendHttpSetting `pulumi:"backendHttpSettings"`
	// One or more `customErrorConfiguration` blocks as defined below.
	CustomErrorConfigurations []ApplicationGatewayCustomErrorConfiguration `pulumi:"customErrorConfigurations"`
	// Is HTTP2 enabled on the application gateway resource? Defaults to `false`.
	EnableHttp2 *bool `pulumi:"enableHttp2"`
	// The resource ID of a firewall policy.
	FirewallPolicyId *string `pulumi:"firewallPolicyId"`
	// One or more `frontendIpConfiguration` blocks as defined below.
	FrontendIpConfigurations []ApplicationGatewayFrontendIpConfiguration `pulumi:"frontendIpConfigurations"`
	// One or more `frontendPort` blocks as defined below.
	FrontendPorts []ApplicationGatewayFrontendPort `pulumi:"frontendPorts"`
	// One or more `gatewayIpConfiguration` blocks as defined below.
	GatewayIpConfigurations []ApplicationGatewayGatewayIpConfiguration `pulumi:"gatewayIpConfigurations"`
	// One or more `httpListener` blocks as defined below.
	HttpListeners []ApplicationGatewayHttpListener `pulumi:"httpListeners"`
	// A `identity` block.
	Identity *ApplicationGatewayIdentity `pulumi:"identity"`
	// The Azure region where the Application Gateway should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The name of the Application Gateway. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// One or more `probe` blocks as defined below.
	Probes []ApplicationGatewayProbe `pulumi:"probes"`
	// A `redirectConfiguration` block as defined below.
	RedirectConfigurations []ApplicationGatewayRedirectConfiguration `pulumi:"redirectConfigurations"`
	// One or more `requestRoutingRule` blocks as defined below.
	RequestRoutingRules []ApplicationGatewayRequestRoutingRule `pulumi:"requestRoutingRules"`
	// The name of the resource group in which to the Application Gateway should exist. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// One or more `rewriteRuleSet` blocks as defined below. Only valid for v2 SKUs.
	RewriteRuleSets []ApplicationGatewayRewriteRuleSet `pulumi:"rewriteRuleSets"`
	// A `sku` block as defined below.
	Sku *ApplicationGatewaySku `pulumi:"sku"`
	// One or more `sslCertificate` blocks as defined below.
	SslCertificates []ApplicationGatewaySslCertificate `pulumi:"sslCertificates"`
	// a `ssl policy` block as defined below.
	SslPolicies []ApplicationGatewaySslPolicy `pulumi:"sslPolicies"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// One or more `trustedRootCertificate` blocks as defined below.
	TrustedRootCertificates []ApplicationGatewayTrustedRootCertificate `pulumi:"trustedRootCertificates"`
	// One or more `urlPathMap` blocks as defined below.
	UrlPathMaps []ApplicationGatewayUrlPathMap `pulumi:"urlPathMaps"`
	// A `wafConfiguration` block as defined below.
	WafConfiguration *ApplicationGatewayWafConfiguration `pulumi:"wafConfiguration"`
	// A collection of availability zones to spread the Application Gateway over.
	Zones []string `pulumi:"zones"`
}

type ApplicationGatewayState struct {
	// One or more `authenticationCertificate` blocks as defined below.
	AuthenticationCertificates ApplicationGatewayAuthenticationCertificateArrayInput
	// A `autoscaleConfiguration` block as defined below.
	AutoscaleConfiguration ApplicationGatewayAutoscaleConfigurationPtrInput
	// One or more `backendAddressPool` blocks as defined below.
	BackendAddressPools ApplicationGatewayBackendAddressPoolArrayInput
	// One or more `backendHttpSettings` blocks as defined below.
	BackendHttpSettings ApplicationGatewayBackendHttpSettingArrayInput
	// One or more `customErrorConfiguration` blocks as defined below.
	CustomErrorConfigurations ApplicationGatewayCustomErrorConfigurationArrayInput
	// Is HTTP2 enabled on the application gateway resource? Defaults to `false`.
	EnableHttp2 pulumi.BoolPtrInput
	// The resource ID of a firewall policy.
	FirewallPolicyId pulumi.StringPtrInput
	// One or more `frontendIpConfiguration` blocks as defined below.
	FrontendIpConfigurations ApplicationGatewayFrontendIpConfigurationArrayInput
	// One or more `frontendPort` blocks as defined below.
	FrontendPorts ApplicationGatewayFrontendPortArrayInput
	// One or more `gatewayIpConfiguration` blocks as defined below.
	GatewayIpConfigurations ApplicationGatewayGatewayIpConfigurationArrayInput
	// One or more `httpListener` blocks as defined below.
	HttpListeners ApplicationGatewayHttpListenerArrayInput
	// A `identity` block.
	Identity ApplicationGatewayIdentityPtrInput
	// The Azure region where the Application Gateway should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The name of the Application Gateway. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// One or more `probe` blocks as defined below.
	Probes ApplicationGatewayProbeArrayInput
	// A `redirectConfiguration` block as defined below.
	RedirectConfigurations ApplicationGatewayRedirectConfigurationArrayInput
	// One or more `requestRoutingRule` blocks as defined below.
	RequestRoutingRules ApplicationGatewayRequestRoutingRuleArrayInput
	// The name of the resource group in which to the Application Gateway should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// One or more `rewriteRuleSet` blocks as defined below. Only valid for v2 SKUs.
	RewriteRuleSets ApplicationGatewayRewriteRuleSetArrayInput
	// A `sku` block as defined below.
	Sku ApplicationGatewaySkuPtrInput
	// One or more `sslCertificate` blocks as defined below.
	SslCertificates ApplicationGatewaySslCertificateArrayInput
	// a `ssl policy` block as defined below.
	SslPolicies ApplicationGatewaySslPolicyArrayInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// One or more `trustedRootCertificate` blocks as defined below.
	TrustedRootCertificates ApplicationGatewayTrustedRootCertificateArrayInput
	// One or more `urlPathMap` blocks as defined below.
	UrlPathMaps ApplicationGatewayUrlPathMapArrayInput
	// A `wafConfiguration` block as defined below.
	WafConfiguration ApplicationGatewayWafConfigurationPtrInput
	// A collection of availability zones to spread the Application Gateway over.
	Zones pulumi.StringArrayInput
}

func (ApplicationGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationGatewayState)(nil)).Elem()
}

type applicationGatewayArgs struct {
	// One or more `authenticationCertificate` blocks as defined below.
	AuthenticationCertificates []ApplicationGatewayAuthenticationCertificate `pulumi:"authenticationCertificates"`
	// A `autoscaleConfiguration` block as defined below.
	AutoscaleConfiguration *ApplicationGatewayAutoscaleConfiguration `pulumi:"autoscaleConfiguration"`
	// One or more `backendAddressPool` blocks as defined below.
	BackendAddressPools []ApplicationGatewayBackendAddressPool `pulumi:"backendAddressPools"`
	// One or more `backendHttpSettings` blocks as defined below.
	BackendHttpSettings []ApplicationGatewayBackendHttpSetting `pulumi:"backendHttpSettings"`
	// One or more `customErrorConfiguration` blocks as defined below.
	CustomErrorConfigurations []ApplicationGatewayCustomErrorConfiguration `pulumi:"customErrorConfigurations"`
	// Is HTTP2 enabled on the application gateway resource? Defaults to `false`.
	EnableHttp2 *bool `pulumi:"enableHttp2"`
	// The resource ID of a firewall policy.
	FirewallPolicyId *string `pulumi:"firewallPolicyId"`
	// One or more `frontendIpConfiguration` blocks as defined below.
	FrontendIpConfigurations []ApplicationGatewayFrontendIpConfiguration `pulumi:"frontendIpConfigurations"`
	// One or more `frontendPort` blocks as defined below.
	FrontendPorts []ApplicationGatewayFrontendPort `pulumi:"frontendPorts"`
	// One or more `gatewayIpConfiguration` blocks as defined below.
	GatewayIpConfigurations []ApplicationGatewayGatewayIpConfiguration `pulumi:"gatewayIpConfigurations"`
	// One or more `httpListener` blocks as defined below.
	HttpListeners []ApplicationGatewayHttpListener `pulumi:"httpListeners"`
	// A `identity` block.
	Identity *ApplicationGatewayIdentity `pulumi:"identity"`
	// The Azure region where the Application Gateway should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The name of the Application Gateway. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// One or more `probe` blocks as defined below.
	Probes []ApplicationGatewayProbe `pulumi:"probes"`
	// A `redirectConfiguration` block as defined below.
	RedirectConfigurations []ApplicationGatewayRedirectConfiguration `pulumi:"redirectConfigurations"`
	// One or more `requestRoutingRule` blocks as defined below.
	RequestRoutingRules []ApplicationGatewayRequestRoutingRule `pulumi:"requestRoutingRules"`
	// The name of the resource group in which to the Application Gateway should exist. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// One or more `rewriteRuleSet` blocks as defined below. Only valid for v2 SKUs.
	RewriteRuleSets []ApplicationGatewayRewriteRuleSet `pulumi:"rewriteRuleSets"`
	// A `sku` block as defined below.
	Sku ApplicationGatewaySku `pulumi:"sku"`
	// One or more `sslCertificate` blocks as defined below.
	SslCertificates []ApplicationGatewaySslCertificate `pulumi:"sslCertificates"`
	// a `ssl policy` block as defined below.
	SslPolicies []ApplicationGatewaySslPolicy `pulumi:"sslPolicies"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// One or more `trustedRootCertificate` blocks as defined below.
	TrustedRootCertificates []ApplicationGatewayTrustedRootCertificate `pulumi:"trustedRootCertificates"`
	// One or more `urlPathMap` blocks as defined below.
	UrlPathMaps []ApplicationGatewayUrlPathMap `pulumi:"urlPathMaps"`
	// A `wafConfiguration` block as defined below.
	WafConfiguration *ApplicationGatewayWafConfiguration `pulumi:"wafConfiguration"`
	// A collection of availability zones to spread the Application Gateway over.
	Zones []string `pulumi:"zones"`
}

// The set of arguments for constructing a ApplicationGateway resource.
type ApplicationGatewayArgs struct {
	// One or more `authenticationCertificate` blocks as defined below.
	AuthenticationCertificates ApplicationGatewayAuthenticationCertificateArrayInput
	// A `autoscaleConfiguration` block as defined below.
	AutoscaleConfiguration ApplicationGatewayAutoscaleConfigurationPtrInput
	// One or more `backendAddressPool` blocks as defined below.
	BackendAddressPools ApplicationGatewayBackendAddressPoolArrayInput
	// One or more `backendHttpSettings` blocks as defined below.
	BackendHttpSettings ApplicationGatewayBackendHttpSettingArrayInput
	// One or more `customErrorConfiguration` blocks as defined below.
	CustomErrorConfigurations ApplicationGatewayCustomErrorConfigurationArrayInput
	// Is HTTP2 enabled on the application gateway resource? Defaults to `false`.
	EnableHttp2 pulumi.BoolPtrInput
	// The resource ID of a firewall policy.
	FirewallPolicyId pulumi.StringPtrInput
	// One or more `frontendIpConfiguration` blocks as defined below.
	FrontendIpConfigurations ApplicationGatewayFrontendIpConfigurationArrayInput
	// One or more `frontendPort` blocks as defined below.
	FrontendPorts ApplicationGatewayFrontendPortArrayInput
	// One or more `gatewayIpConfiguration` blocks as defined below.
	GatewayIpConfigurations ApplicationGatewayGatewayIpConfigurationArrayInput
	// One or more `httpListener` blocks as defined below.
	HttpListeners ApplicationGatewayHttpListenerArrayInput
	// A `identity` block.
	Identity ApplicationGatewayIdentityPtrInput
	// The Azure region where the Application Gateway should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The name of the Application Gateway. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// One or more `probe` blocks as defined below.
	Probes ApplicationGatewayProbeArrayInput
	// A `redirectConfiguration` block as defined below.
	RedirectConfigurations ApplicationGatewayRedirectConfigurationArrayInput
	// One or more `requestRoutingRule` blocks as defined below.
	RequestRoutingRules ApplicationGatewayRequestRoutingRuleArrayInput
	// The name of the resource group in which to the Application Gateway should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// One or more `rewriteRuleSet` blocks as defined below. Only valid for v2 SKUs.
	RewriteRuleSets ApplicationGatewayRewriteRuleSetArrayInput
	// A `sku` block as defined below.
	Sku ApplicationGatewaySkuInput
	// One or more `sslCertificate` blocks as defined below.
	SslCertificates ApplicationGatewaySslCertificateArrayInput
	// a `ssl policy` block as defined below.
	SslPolicies ApplicationGatewaySslPolicyArrayInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// One or more `trustedRootCertificate` blocks as defined below.
	TrustedRootCertificates ApplicationGatewayTrustedRootCertificateArrayInput
	// One or more `urlPathMap` blocks as defined below.
	UrlPathMaps ApplicationGatewayUrlPathMapArrayInput
	// A `wafConfiguration` block as defined below.
	WafConfiguration ApplicationGatewayWafConfigurationPtrInput
	// A collection of availability zones to spread the Application Gateway over.
	Zones pulumi.StringArrayInput
}

func (ApplicationGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationGatewayArgs)(nil)).Elem()
}
