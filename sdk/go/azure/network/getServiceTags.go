// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about Service Tags.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := network.GetServiceTags(ctx, &network.GetServiceTagsArgs{
//				Location:       "westcentralus",
//				Service:        "AzureKeyVault",
//				LocationFilter: pulumi.StringRef("northeurope"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("addressPrefixes", example.AddressPrefixes)
//			ctx.Export("ipv4Cidrs", example.Ipv4Cidrs)
//			return nil
//		})
//	}
//
// ```
func GetServiceTags(ctx *pulumi.Context, args *GetServiceTagsArgs, opts ...pulumi.InvokeOption) (*GetServiceTagsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetServiceTagsResult
	err := ctx.Invoke("azure:network/getServiceTags:getServiceTags", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServiceTags.
type GetServiceTagsArgs struct {
	// The Azure Region where the Service Tags exists. This value is not used to filter the results but for specifying the region to request. For filtering by region use `locationFilter` instead.  More information can be found here: [Service Tags URL parameters](https://docs.microsoft.com/rest/api/virtualnetwork/servicetags/list#uri-parameters).
	Location string `pulumi:"location"`
	// Changes the scope of the service tags. Can be any value that is also valid for `location`. If this field is empty then all address prefixes are considered instead of only location specific ones.
	LocationFilter *string `pulumi:"locationFilter"`
	// The type of the service for which address prefixes will be fetched. Available service tags can be found here: [Available service tags](https://docs.microsoft.com/azure/virtual-network/service-tags-overview#available-service-tags).
	Service string `pulumi:"service"`
}

// A collection of values returned by getServiceTags.
type GetServiceTagsResult struct {
	// List of address prefixes for the service type (and optionally a specific region).
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of IPv4 addresses for the service type (and optionally a specific region)
	Ipv4Cidrs []string `pulumi:"ipv4Cidrs"`
	// List of IPv6 addresses for the service type (and optionally a specific region)
	Ipv6Cidrs      []string `pulumi:"ipv6Cidrs"`
	Location       string   `pulumi:"location"`
	LocationFilter *string  `pulumi:"locationFilter"`
	// The name of this Service Tags block.
	Name    string `pulumi:"name"`
	Service string `pulumi:"service"`
}

func GetServiceTagsOutput(ctx *pulumi.Context, args GetServiceTagsOutputArgs, opts ...pulumi.InvokeOption) GetServiceTagsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetServiceTagsResult, error) {
			args := v.(GetServiceTagsArgs)
			r, err := GetServiceTags(ctx, &args, opts...)
			var s GetServiceTagsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetServiceTagsResultOutput)
}

// A collection of arguments for invoking getServiceTags.
type GetServiceTagsOutputArgs struct {
	// The Azure Region where the Service Tags exists. This value is not used to filter the results but for specifying the region to request. For filtering by region use `locationFilter` instead.  More information can be found here: [Service Tags URL parameters](https://docs.microsoft.com/rest/api/virtualnetwork/servicetags/list#uri-parameters).
	Location pulumi.StringInput `pulumi:"location"`
	// Changes the scope of the service tags. Can be any value that is also valid for `location`. If this field is empty then all address prefixes are considered instead of only location specific ones.
	LocationFilter pulumi.StringPtrInput `pulumi:"locationFilter"`
	// The type of the service for which address prefixes will be fetched. Available service tags can be found here: [Available service tags](https://docs.microsoft.com/azure/virtual-network/service-tags-overview#available-service-tags).
	Service pulumi.StringInput `pulumi:"service"`
}

func (GetServiceTagsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceTagsArgs)(nil)).Elem()
}

// A collection of values returned by getServiceTags.
type GetServiceTagsResultOutput struct{ *pulumi.OutputState }

func (GetServiceTagsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceTagsResult)(nil)).Elem()
}

func (o GetServiceTagsResultOutput) ToGetServiceTagsResultOutput() GetServiceTagsResultOutput {
	return o
}

func (o GetServiceTagsResultOutput) ToGetServiceTagsResultOutputWithContext(ctx context.Context) GetServiceTagsResultOutput {
	return o
}

// List of address prefixes for the service type (and optionally a specific region).
func (o GetServiceTagsResultOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceTagsResult) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetServiceTagsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceTagsResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of IPv4 addresses for the service type (and optionally a specific region)
func (o GetServiceTagsResultOutput) Ipv4Cidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceTagsResult) []string { return v.Ipv4Cidrs }).(pulumi.StringArrayOutput)
}

// List of IPv6 addresses for the service type (and optionally a specific region)
func (o GetServiceTagsResultOutput) Ipv6Cidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceTagsResult) []string { return v.Ipv6Cidrs }).(pulumi.StringArrayOutput)
}

func (o GetServiceTagsResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceTagsResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o GetServiceTagsResultOutput) LocationFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceTagsResult) *string { return v.LocationFilter }).(pulumi.StringPtrOutput)
}

// The name of this Service Tags block.
func (o GetServiceTagsResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceTagsResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetServiceTagsResultOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceTagsResult) string { return v.Service }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetServiceTagsResultOutput{})
}
