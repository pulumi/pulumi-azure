// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Network Manager Management Group Connection which may cross tenants.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/authorization"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/management"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleGroup, err := management.NewGroup(ctx, "exampleGroup", nil)
//			if err != nil {
//				return err
//			}
//			alt, err := core.LookupSubscription(ctx, &core.LookupSubscriptionArgs{
//				SubscriptionId: pulumi.StringRef("00000000-0000-0000-0000-000000000000"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = management.NewGroupSubscriptionAssociation(ctx, "exampleGroupSubscriptionAssociation", &management.GroupSubscriptionAssociationArgs{
//				ManagementGroupId: exampleGroup.ID(),
//				SubscriptionId:    *pulumi.String(alt.Id),
//			})
//			if err != nil {
//				return err
//			}
//			currentSubscription, err := core.LookupSubscription(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			currentClientConfig, err := core.GetClientConfig(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			networkContributor, err := authorization.NewAssignment(ctx, "networkContributor", &authorization.AssignmentArgs{
//				Scope:              exampleGroup.ID(),
//				RoleDefinitionName: pulumi.String("Network Contributor"),
//				PrincipalId:        *pulumi.String(currentClientConfig.ObjectId),
//			})
//			if err != nil {
//				return err
//			}
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleNetworkManager, err := network.NewNetworkManager(ctx, "exampleNetworkManager", &network.NetworkManagerArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				Scope: &network.NetworkManagerScopeArgs{
//					SubscriptionIds: pulumi.StringArray{
//						*pulumi.String(currentSubscription.Id),
//					},
//				},
//				ScopeAccesses: pulumi.StringArray{
//					pulumi.String("SecurityAdmin"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = network.NewNetworkManagerManagementGroupConnection(ctx, "exampleNetworkManagerManagementGroupConnection", &network.NetworkManagerManagementGroupConnectionArgs{
//				ManagementGroupId: exampleGroup.ID(),
//				NetworkManagerId:  exampleNetworkManager.ID(),
//				Description:       pulumi.String("example"),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				networkContributor,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Network Manager Management Group Connection can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:network/networkManagerManagementGroupConnection:NetworkManagerManagementGroupConnection example /providers/Microsoft.Management/managementGroups/00000000-0000-0000-0000-000000000000/providers/Microsoft.Network/networkManagerConnections/networkManagerConnection1
//
// ```
type NetworkManagerManagementGroupConnection struct {
	pulumi.CustomResourceState

	// The Connection state of the Network Manager Management Group Connection.
	ConnectionState pulumi.StringOutput `pulumi:"connectionState"`
	// A description of the Network Manager Management Group Connection.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the ID of the target Management Group. Changing this forces a new resource to be created.
	ManagementGroupId pulumi.StringOutput `pulumi:"managementGroupId"`
	// Specifies the name which should be used for this Network Manager Management Group Connection. Changing this forces a new Network Manager Management Group Connection to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the ID of the Network Manager which the Management Group is connected to. Changing this forces a new resource to be created.
	NetworkManagerId pulumi.StringOutput `pulumi:"networkManagerId"`
}

// NewNetworkManagerManagementGroupConnection registers a new resource with the given unique name, arguments, and options.
func NewNetworkManagerManagementGroupConnection(ctx *pulumi.Context,
	name string, args *NetworkManagerManagementGroupConnectionArgs, opts ...pulumi.ResourceOption) (*NetworkManagerManagementGroupConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ManagementGroupId == nil {
		return nil, errors.New("invalid value for required argument 'ManagementGroupId'")
	}
	if args.NetworkManagerId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkManagerId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkManagerManagementGroupConnection
	err := ctx.RegisterResource("azure:network/networkManagerManagementGroupConnection:NetworkManagerManagementGroupConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkManagerManagementGroupConnection gets an existing NetworkManagerManagementGroupConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkManagerManagementGroupConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkManagerManagementGroupConnectionState, opts ...pulumi.ResourceOption) (*NetworkManagerManagementGroupConnection, error) {
	var resource NetworkManagerManagementGroupConnection
	err := ctx.ReadResource("azure:network/networkManagerManagementGroupConnection:NetworkManagerManagementGroupConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkManagerManagementGroupConnection resources.
type networkManagerManagementGroupConnectionState struct {
	// The Connection state of the Network Manager Management Group Connection.
	ConnectionState *string `pulumi:"connectionState"`
	// A description of the Network Manager Management Group Connection.
	Description *string `pulumi:"description"`
	// Specifies the ID of the target Management Group. Changing this forces a new resource to be created.
	ManagementGroupId *string `pulumi:"managementGroupId"`
	// Specifies the name which should be used for this Network Manager Management Group Connection. Changing this forces a new Network Manager Management Group Connection to be created.
	Name *string `pulumi:"name"`
	// Specifies the ID of the Network Manager which the Management Group is connected to. Changing this forces a new resource to be created.
	NetworkManagerId *string `pulumi:"networkManagerId"`
}

type NetworkManagerManagementGroupConnectionState struct {
	// The Connection state of the Network Manager Management Group Connection.
	ConnectionState pulumi.StringPtrInput
	// A description of the Network Manager Management Group Connection.
	Description pulumi.StringPtrInput
	// Specifies the ID of the target Management Group. Changing this forces a new resource to be created.
	ManagementGroupId pulumi.StringPtrInput
	// Specifies the name which should be used for this Network Manager Management Group Connection. Changing this forces a new Network Manager Management Group Connection to be created.
	Name pulumi.StringPtrInput
	// Specifies the ID of the Network Manager which the Management Group is connected to. Changing this forces a new resource to be created.
	NetworkManagerId pulumi.StringPtrInput
}

func (NetworkManagerManagementGroupConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkManagerManagementGroupConnectionState)(nil)).Elem()
}

type networkManagerManagementGroupConnectionArgs struct {
	// A description of the Network Manager Management Group Connection.
	Description *string `pulumi:"description"`
	// Specifies the ID of the target Management Group. Changing this forces a new resource to be created.
	ManagementGroupId string `pulumi:"managementGroupId"`
	// Specifies the name which should be used for this Network Manager Management Group Connection. Changing this forces a new Network Manager Management Group Connection to be created.
	Name *string `pulumi:"name"`
	// Specifies the ID of the Network Manager which the Management Group is connected to. Changing this forces a new resource to be created.
	NetworkManagerId string `pulumi:"networkManagerId"`
}

// The set of arguments for constructing a NetworkManagerManagementGroupConnection resource.
type NetworkManagerManagementGroupConnectionArgs struct {
	// A description of the Network Manager Management Group Connection.
	Description pulumi.StringPtrInput
	// Specifies the ID of the target Management Group. Changing this forces a new resource to be created.
	ManagementGroupId pulumi.StringInput
	// Specifies the name which should be used for this Network Manager Management Group Connection. Changing this forces a new Network Manager Management Group Connection to be created.
	Name pulumi.StringPtrInput
	// Specifies the ID of the Network Manager which the Management Group is connected to. Changing this forces a new resource to be created.
	NetworkManagerId pulumi.StringInput
}

func (NetworkManagerManagementGroupConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkManagerManagementGroupConnectionArgs)(nil)).Elem()
}

type NetworkManagerManagementGroupConnectionInput interface {
	pulumi.Input

	ToNetworkManagerManagementGroupConnectionOutput() NetworkManagerManagementGroupConnectionOutput
	ToNetworkManagerManagementGroupConnectionOutputWithContext(ctx context.Context) NetworkManagerManagementGroupConnectionOutput
}

func (*NetworkManagerManagementGroupConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkManagerManagementGroupConnection)(nil)).Elem()
}

func (i *NetworkManagerManagementGroupConnection) ToNetworkManagerManagementGroupConnectionOutput() NetworkManagerManagementGroupConnectionOutput {
	return i.ToNetworkManagerManagementGroupConnectionOutputWithContext(context.Background())
}

func (i *NetworkManagerManagementGroupConnection) ToNetworkManagerManagementGroupConnectionOutputWithContext(ctx context.Context) NetworkManagerManagementGroupConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerManagementGroupConnectionOutput)
}

// NetworkManagerManagementGroupConnectionArrayInput is an input type that accepts NetworkManagerManagementGroupConnectionArray and NetworkManagerManagementGroupConnectionArrayOutput values.
// You can construct a concrete instance of `NetworkManagerManagementGroupConnectionArrayInput` via:
//
//	NetworkManagerManagementGroupConnectionArray{ NetworkManagerManagementGroupConnectionArgs{...} }
type NetworkManagerManagementGroupConnectionArrayInput interface {
	pulumi.Input

	ToNetworkManagerManagementGroupConnectionArrayOutput() NetworkManagerManagementGroupConnectionArrayOutput
	ToNetworkManagerManagementGroupConnectionArrayOutputWithContext(context.Context) NetworkManagerManagementGroupConnectionArrayOutput
}

type NetworkManagerManagementGroupConnectionArray []NetworkManagerManagementGroupConnectionInput

func (NetworkManagerManagementGroupConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkManagerManagementGroupConnection)(nil)).Elem()
}

func (i NetworkManagerManagementGroupConnectionArray) ToNetworkManagerManagementGroupConnectionArrayOutput() NetworkManagerManagementGroupConnectionArrayOutput {
	return i.ToNetworkManagerManagementGroupConnectionArrayOutputWithContext(context.Background())
}

func (i NetworkManagerManagementGroupConnectionArray) ToNetworkManagerManagementGroupConnectionArrayOutputWithContext(ctx context.Context) NetworkManagerManagementGroupConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerManagementGroupConnectionArrayOutput)
}

// NetworkManagerManagementGroupConnectionMapInput is an input type that accepts NetworkManagerManagementGroupConnectionMap and NetworkManagerManagementGroupConnectionMapOutput values.
// You can construct a concrete instance of `NetworkManagerManagementGroupConnectionMapInput` via:
//
//	NetworkManagerManagementGroupConnectionMap{ "key": NetworkManagerManagementGroupConnectionArgs{...} }
type NetworkManagerManagementGroupConnectionMapInput interface {
	pulumi.Input

	ToNetworkManagerManagementGroupConnectionMapOutput() NetworkManagerManagementGroupConnectionMapOutput
	ToNetworkManagerManagementGroupConnectionMapOutputWithContext(context.Context) NetworkManagerManagementGroupConnectionMapOutput
}

type NetworkManagerManagementGroupConnectionMap map[string]NetworkManagerManagementGroupConnectionInput

func (NetworkManagerManagementGroupConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkManagerManagementGroupConnection)(nil)).Elem()
}

func (i NetworkManagerManagementGroupConnectionMap) ToNetworkManagerManagementGroupConnectionMapOutput() NetworkManagerManagementGroupConnectionMapOutput {
	return i.ToNetworkManagerManagementGroupConnectionMapOutputWithContext(context.Background())
}

func (i NetworkManagerManagementGroupConnectionMap) ToNetworkManagerManagementGroupConnectionMapOutputWithContext(ctx context.Context) NetworkManagerManagementGroupConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkManagerManagementGroupConnectionMapOutput)
}

type NetworkManagerManagementGroupConnectionOutput struct{ *pulumi.OutputState }

func (NetworkManagerManagementGroupConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkManagerManagementGroupConnection)(nil)).Elem()
}

func (o NetworkManagerManagementGroupConnectionOutput) ToNetworkManagerManagementGroupConnectionOutput() NetworkManagerManagementGroupConnectionOutput {
	return o
}

func (o NetworkManagerManagementGroupConnectionOutput) ToNetworkManagerManagementGroupConnectionOutputWithContext(ctx context.Context) NetworkManagerManagementGroupConnectionOutput {
	return o
}

// The Connection state of the Network Manager Management Group Connection.
func (o NetworkManagerManagementGroupConnectionOutput) ConnectionState() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerManagementGroupConnection) pulumi.StringOutput { return v.ConnectionState }).(pulumi.StringOutput)
}

// A description of the Network Manager Management Group Connection.
func (o NetworkManagerManagementGroupConnectionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkManagerManagementGroupConnection) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the ID of the target Management Group. Changing this forces a new resource to be created.
func (o NetworkManagerManagementGroupConnectionOutput) ManagementGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerManagementGroupConnection) pulumi.StringOutput { return v.ManagementGroupId }).(pulumi.StringOutput)
}

// Specifies the name which should be used for this Network Manager Management Group Connection. Changing this forces a new Network Manager Management Group Connection to be created.
func (o NetworkManagerManagementGroupConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerManagementGroupConnection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the ID of the Network Manager which the Management Group is connected to. Changing this forces a new resource to be created.
func (o NetworkManagerManagementGroupConnectionOutput) NetworkManagerId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkManagerManagementGroupConnection) pulumi.StringOutput { return v.NetworkManagerId }).(pulumi.StringOutput)
}

type NetworkManagerManagementGroupConnectionArrayOutput struct{ *pulumi.OutputState }

func (NetworkManagerManagementGroupConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkManagerManagementGroupConnection)(nil)).Elem()
}

func (o NetworkManagerManagementGroupConnectionArrayOutput) ToNetworkManagerManagementGroupConnectionArrayOutput() NetworkManagerManagementGroupConnectionArrayOutput {
	return o
}

func (o NetworkManagerManagementGroupConnectionArrayOutput) ToNetworkManagerManagementGroupConnectionArrayOutputWithContext(ctx context.Context) NetworkManagerManagementGroupConnectionArrayOutput {
	return o
}

func (o NetworkManagerManagementGroupConnectionArrayOutput) Index(i pulumi.IntInput) NetworkManagerManagementGroupConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkManagerManagementGroupConnection {
		return vs[0].([]*NetworkManagerManagementGroupConnection)[vs[1].(int)]
	}).(NetworkManagerManagementGroupConnectionOutput)
}

type NetworkManagerManagementGroupConnectionMapOutput struct{ *pulumi.OutputState }

func (NetworkManagerManagementGroupConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkManagerManagementGroupConnection)(nil)).Elem()
}

func (o NetworkManagerManagementGroupConnectionMapOutput) ToNetworkManagerManagementGroupConnectionMapOutput() NetworkManagerManagementGroupConnectionMapOutput {
	return o
}

func (o NetworkManagerManagementGroupConnectionMapOutput) ToNetworkManagerManagementGroupConnectionMapOutputWithContext(ctx context.Context) NetworkManagerManagementGroupConnectionMapOutput {
	return o
}

func (o NetworkManagerManagementGroupConnectionMapOutput) MapIndex(k pulumi.StringInput) NetworkManagerManagementGroupConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkManagerManagementGroupConnection {
		return vs[0].(map[string]*NetworkManagerManagementGroupConnection)[vs[1].(string)]
	}).(NetworkManagerManagementGroupConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerManagementGroupConnectionInput)(nil)).Elem(), &NetworkManagerManagementGroupConnection{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerManagementGroupConnectionArrayInput)(nil)).Elem(), NetworkManagerManagementGroupConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkManagerManagementGroupConnectionMapInput)(nil)).Elem(), NetworkManagerManagementGroupConnectionMap{})
	pulumi.RegisterOutputType(NetworkManagerManagementGroupConnectionOutput{})
	pulumi.RegisterOutputType(NetworkManagerManagementGroupConnectionArrayOutput{})
	pulumi.RegisterOutputType(NetworkManagerManagementGroupConnectionMapOutput{})
}
