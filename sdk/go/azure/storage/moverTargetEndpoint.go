// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Storage Mover Target Endpoint.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	core/resourceGroup "github.com/pulumi/pulumi-azure/sdk/v1/go/azure/core/resourceGroup"
//	storage/account "github.com/pulumi/pulumi-azure/sdk/v1/go/azure/storage/account"
//	storage/container "github.com/pulumi/pulumi-azure/sdk/v1/go/azure/storage/container"
//	storage/mover "github.com/pulumi/pulumi-azure/sdk/v1/go/azure/storage/mover"
//	storage/moverTargetEndpoint "github.com/pulumi/pulumi-azure/sdk/v1/go/azure/storage/moverTargetEndpoint"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// example, err := core/resourceGroup.NewResourceGroup(ctx, "example", &core/resourceGroup.ResourceGroupArgs{
// Name: "example-resources",
// Location: "West Europe",
// })
// if err != nil {
// return err
// }
// exampleAccount, err := storage/account.NewAccount(ctx, "example", &storage/account.AccountArgs{
// Name: "examplestr",
// ResourceGroupName: example.Name,
// Location: example.Location,
// AccountTier: "Standard",
// AccountReplicationType: "LRS",
// AllowNestedItemsToBePublic: true,
// })
// if err != nil {
// return err
// }
// exampleContainer, err := storage/container.NewContainer(ctx, "example", &storage/container.ContainerArgs{
// Name: "example-sc",
// StorageAccountName: exampleAccount.Name,
// ContainerAccessType: "blob",
// })
// if err != nil {
// return err
// }
// exampleMover, err := storage/mover.NewMover(ctx, "example", &storage/mover.MoverArgs{
// Name: "example-ssm",
// ResourceGroupName: example.Name,
// Location: "West Europe",
// })
// if err != nil {
// return err
// }
// _, err = storage/moverTargetEndpoint.NewMoverTargetEndpoint(ctx, "example", &storage/moverTargetEndpoint.MoverTargetEndpointArgs{
// Name: "example-se",
// StorageMoverId: exampleMover.Id,
// StorageAccountId: exampleAccount.Id,
// StorageContainerName: exampleContainer.Name,
// Description: "Example Storage Container Endpoint Description",
// })
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
//
// ## Import
//
// Storage Mover Target Endpoint can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:storage/moverTargetEndpoint:MoverTargetEndpoint example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.StorageMover/storageMovers/storageMover1/endpoints/endpoint1
// ```
type MoverTargetEndpoint struct {
	pulumi.CustomResourceState

	// Specifies a description for the Storage Mover Target Endpoint.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the name which should be used for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the ID of the storage account for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
	StorageAccountId pulumi.StringOutput `pulumi:"storageAccountId"`
	// Specifies the name of the storage blob container for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
	StorageContainerName pulumi.StringOutput `pulumi:"storageContainerName"`
	// Specifies the ID of the storage mover for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
	StorageMoverId pulumi.StringOutput `pulumi:"storageMoverId"`
}

// NewMoverTargetEndpoint registers a new resource with the given unique name, arguments, and options.
func NewMoverTargetEndpoint(ctx *pulumi.Context,
	name string, args *MoverTargetEndpointArgs, opts ...pulumi.ResourceOption) (*MoverTargetEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.StorageAccountId == nil {
		return nil, errors.New("invalid value for required argument 'StorageAccountId'")
	}
	if args.StorageContainerName == nil {
		return nil, errors.New("invalid value for required argument 'StorageContainerName'")
	}
	if args.StorageMoverId == nil {
		return nil, errors.New("invalid value for required argument 'StorageMoverId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MoverTargetEndpoint
	err := ctx.RegisterResource("azure:storage/moverTargetEndpoint:MoverTargetEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMoverTargetEndpoint gets an existing MoverTargetEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMoverTargetEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MoverTargetEndpointState, opts ...pulumi.ResourceOption) (*MoverTargetEndpoint, error) {
	var resource MoverTargetEndpoint
	err := ctx.ReadResource("azure:storage/moverTargetEndpoint:MoverTargetEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MoverTargetEndpoint resources.
type moverTargetEndpointState struct {
	// Specifies a description for the Storage Mover Target Endpoint.
	Description *string `pulumi:"description"`
	// Specifies the name which should be used for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the ID of the storage account for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
	StorageAccountId *string `pulumi:"storageAccountId"`
	// Specifies the name of the storage blob container for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
	StorageContainerName *string `pulumi:"storageContainerName"`
	// Specifies the ID of the storage mover for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
	StorageMoverId *string `pulumi:"storageMoverId"`
}

type MoverTargetEndpointState struct {
	// Specifies a description for the Storage Mover Target Endpoint.
	Description pulumi.StringPtrInput
	// Specifies the name which should be used for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the ID of the storage account for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
	StorageAccountId pulumi.StringPtrInput
	// Specifies the name of the storage blob container for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
	StorageContainerName pulumi.StringPtrInput
	// Specifies the ID of the storage mover for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
	StorageMoverId pulumi.StringPtrInput
}

func (MoverTargetEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*moverTargetEndpointState)(nil)).Elem()
}

type moverTargetEndpointArgs struct {
	// Specifies a description for the Storage Mover Target Endpoint.
	Description *string `pulumi:"description"`
	// Specifies the name which should be used for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the ID of the storage account for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
	StorageAccountId string `pulumi:"storageAccountId"`
	// Specifies the name of the storage blob container for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
	StorageContainerName string `pulumi:"storageContainerName"`
	// Specifies the ID of the storage mover for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
	StorageMoverId string `pulumi:"storageMoverId"`
}

// The set of arguments for constructing a MoverTargetEndpoint resource.
type MoverTargetEndpointArgs struct {
	// Specifies a description for the Storage Mover Target Endpoint.
	Description pulumi.StringPtrInput
	// Specifies the name which should be used for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the ID of the storage account for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
	StorageAccountId pulumi.StringInput
	// Specifies the name of the storage blob container for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
	StorageContainerName pulumi.StringInput
	// Specifies the ID of the storage mover for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
	StorageMoverId pulumi.StringInput
}

func (MoverTargetEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*moverTargetEndpointArgs)(nil)).Elem()
}

type MoverTargetEndpointInput interface {
	pulumi.Input

	ToMoverTargetEndpointOutput() MoverTargetEndpointOutput
	ToMoverTargetEndpointOutputWithContext(ctx context.Context) MoverTargetEndpointOutput
}

func (*MoverTargetEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**MoverTargetEndpoint)(nil)).Elem()
}

func (i *MoverTargetEndpoint) ToMoverTargetEndpointOutput() MoverTargetEndpointOutput {
	return i.ToMoverTargetEndpointOutputWithContext(context.Background())
}

func (i *MoverTargetEndpoint) ToMoverTargetEndpointOutputWithContext(ctx context.Context) MoverTargetEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoverTargetEndpointOutput)
}

// MoverTargetEndpointArrayInput is an input type that accepts MoverTargetEndpointArray and MoverTargetEndpointArrayOutput values.
// You can construct a concrete instance of `MoverTargetEndpointArrayInput` via:
//
//	MoverTargetEndpointArray{ MoverTargetEndpointArgs{...} }
type MoverTargetEndpointArrayInput interface {
	pulumi.Input

	ToMoverTargetEndpointArrayOutput() MoverTargetEndpointArrayOutput
	ToMoverTargetEndpointArrayOutputWithContext(context.Context) MoverTargetEndpointArrayOutput
}

type MoverTargetEndpointArray []MoverTargetEndpointInput

func (MoverTargetEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MoverTargetEndpoint)(nil)).Elem()
}

func (i MoverTargetEndpointArray) ToMoverTargetEndpointArrayOutput() MoverTargetEndpointArrayOutput {
	return i.ToMoverTargetEndpointArrayOutputWithContext(context.Background())
}

func (i MoverTargetEndpointArray) ToMoverTargetEndpointArrayOutputWithContext(ctx context.Context) MoverTargetEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoverTargetEndpointArrayOutput)
}

// MoverTargetEndpointMapInput is an input type that accepts MoverTargetEndpointMap and MoverTargetEndpointMapOutput values.
// You can construct a concrete instance of `MoverTargetEndpointMapInput` via:
//
//	MoverTargetEndpointMap{ "key": MoverTargetEndpointArgs{...} }
type MoverTargetEndpointMapInput interface {
	pulumi.Input

	ToMoverTargetEndpointMapOutput() MoverTargetEndpointMapOutput
	ToMoverTargetEndpointMapOutputWithContext(context.Context) MoverTargetEndpointMapOutput
}

type MoverTargetEndpointMap map[string]MoverTargetEndpointInput

func (MoverTargetEndpointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MoverTargetEndpoint)(nil)).Elem()
}

func (i MoverTargetEndpointMap) ToMoverTargetEndpointMapOutput() MoverTargetEndpointMapOutput {
	return i.ToMoverTargetEndpointMapOutputWithContext(context.Background())
}

func (i MoverTargetEndpointMap) ToMoverTargetEndpointMapOutputWithContext(ctx context.Context) MoverTargetEndpointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoverTargetEndpointMapOutput)
}

type MoverTargetEndpointOutput struct{ *pulumi.OutputState }

func (MoverTargetEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MoverTargetEndpoint)(nil)).Elem()
}

func (o MoverTargetEndpointOutput) ToMoverTargetEndpointOutput() MoverTargetEndpointOutput {
	return o
}

func (o MoverTargetEndpointOutput) ToMoverTargetEndpointOutputWithContext(ctx context.Context) MoverTargetEndpointOutput {
	return o
}

// Specifies a description for the Storage Mover Target Endpoint.
func (o MoverTargetEndpointOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoverTargetEndpoint) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the name which should be used for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
func (o MoverTargetEndpointOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MoverTargetEndpoint) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the ID of the storage account for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
func (o MoverTargetEndpointOutput) StorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *MoverTargetEndpoint) pulumi.StringOutput { return v.StorageAccountId }).(pulumi.StringOutput)
}

// Specifies the name of the storage blob container for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
func (o MoverTargetEndpointOutput) StorageContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v *MoverTargetEndpoint) pulumi.StringOutput { return v.StorageContainerName }).(pulumi.StringOutput)
}

// Specifies the ID of the storage mover for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
func (o MoverTargetEndpointOutput) StorageMoverId() pulumi.StringOutput {
	return o.ApplyT(func(v *MoverTargetEndpoint) pulumi.StringOutput { return v.StorageMoverId }).(pulumi.StringOutput)
}

type MoverTargetEndpointArrayOutput struct{ *pulumi.OutputState }

func (MoverTargetEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MoverTargetEndpoint)(nil)).Elem()
}

func (o MoverTargetEndpointArrayOutput) ToMoverTargetEndpointArrayOutput() MoverTargetEndpointArrayOutput {
	return o
}

func (o MoverTargetEndpointArrayOutput) ToMoverTargetEndpointArrayOutputWithContext(ctx context.Context) MoverTargetEndpointArrayOutput {
	return o
}

func (o MoverTargetEndpointArrayOutput) Index(i pulumi.IntInput) MoverTargetEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MoverTargetEndpoint {
		return vs[0].([]*MoverTargetEndpoint)[vs[1].(int)]
	}).(MoverTargetEndpointOutput)
}

type MoverTargetEndpointMapOutput struct{ *pulumi.OutputState }

func (MoverTargetEndpointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MoverTargetEndpoint)(nil)).Elem()
}

func (o MoverTargetEndpointMapOutput) ToMoverTargetEndpointMapOutput() MoverTargetEndpointMapOutput {
	return o
}

func (o MoverTargetEndpointMapOutput) ToMoverTargetEndpointMapOutputWithContext(ctx context.Context) MoverTargetEndpointMapOutput {
	return o
}

func (o MoverTargetEndpointMapOutput) MapIndex(k pulumi.StringInput) MoverTargetEndpointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MoverTargetEndpoint {
		return vs[0].(map[string]*MoverTargetEndpoint)[vs[1].(string)]
	}).(MoverTargetEndpointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MoverTargetEndpointInput)(nil)).Elem(), &MoverTargetEndpoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*MoverTargetEndpointArrayInput)(nil)).Elem(), MoverTargetEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MoverTargetEndpointMapInput)(nil)).Elem(), MoverTargetEndpointMap{})
	pulumi.RegisterOutputType(MoverTargetEndpointOutput{})
	pulumi.RegisterOutputType(MoverTargetEndpointArrayOutput{})
	pulumi.RegisterOutputType(MoverTargetEndpointMapOutput{})
}
