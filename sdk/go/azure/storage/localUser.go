// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Storage Account Local User.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("WestEurope"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleAccount, err := storage.NewAccount(ctx, "exampleAccount", &storage.AccountArgs{
//				ResourceGroupName:      exampleResourceGroup.Name,
//				Location:               exampleResourceGroup.Location,
//				AccountKind:            pulumi.String("StorageV2"),
//				AccountTier:            pulumi.String("Standard"),
//				AccountReplicationType: pulumi.String("LRS"),
//				IsHnsEnabled:           pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			exampleContainer, err := storage.NewContainer(ctx, "exampleContainer", &storage.ContainerArgs{
//				StorageAccountName: exampleAccount.Name,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = storage.NewLocalUser(ctx, "exampleLocalUser", &storage.LocalUserArgs{
//				StorageAccountId:   exampleAccount.ID(),
//				SshKeyEnabled:      pulumi.Bool(true),
//				SshPasswordEnabled: pulumi.Bool(true),
//				HomeDirectory:      pulumi.String("example_path"),
//				SshAuthorizedKeys: storage.LocalUserSshAuthorizedKeyArray{
//					&storage.LocalUserSshAuthorizedKeyArgs{
//						Description: pulumi.String("key1"),
//						Key:         pulumi.Any(local.First_public_key),
//					},
//					&storage.LocalUserSshAuthorizedKeyArgs{
//						Description: pulumi.String("key2"),
//						Key:         pulumi.Any(local.Second_public_key),
//					},
//				},
//				PermissionScopes: storage.LocalUserPermissionScopeArray{
//					&storage.LocalUserPermissionScopeArgs{
//						Permissions: &storage.LocalUserPermissionScopePermissionsArgs{
//							Read:   pulumi.Bool(true),
//							Create: pulumi.Bool(true),
//						},
//						Service:      pulumi.String("blob"),
//						ResourceName: exampleContainer.Name,
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Storage Account Local Users can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:storage/localUser:LocalUser example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.Storage/storageAccounts/storageAccount1/localUsers/user1
//
// ```
type LocalUser struct {
	pulumi.CustomResourceState

	// The home directory of the Storage Account Local User.
	HomeDirectory pulumi.StringPtrOutput `pulumi:"homeDirectory"`
	// The name which should be used for this Storage Account Local User. Changing this forces a new Storage Account Local User to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The value of the password, which is only available when `sshPasswordEnabled` is set to `true`.
	Password pulumi.StringOutput `pulumi:"password"`
	// One or more `permissionScope` blocks as defined below.
	PermissionScopes LocalUserPermissionScopeArrayOutput `pulumi:"permissionScopes"`
	// The unique Security Identifier of this Storage Account Local User.
	Sid pulumi.StringOutput `pulumi:"sid"`
	// One or more `sshAuthorizedKey` blocks as defined below.
	SshAuthorizedKeys LocalUserSshAuthorizedKeyArrayOutput `pulumi:"sshAuthorizedKeys"`
	// Specifies whether SSH Key Authentication is enabled. Defaults to `false`.
	SshKeyEnabled pulumi.BoolPtrOutput `pulumi:"sshKeyEnabled"`
	// Specifies whether SSH Password Authentication is enabled. Defaults to `false`.
	SshPasswordEnabled pulumi.BoolPtrOutput `pulumi:"sshPasswordEnabled"`
	// The ID of the Storage Account that this Storage Account Local User resides in. Changing this forces a new Storage Account Local User to be created.
	StorageAccountId pulumi.StringOutput `pulumi:"storageAccountId"`
}

// NewLocalUser registers a new resource with the given unique name, arguments, and options.
func NewLocalUser(ctx *pulumi.Context,
	name string, args *LocalUserArgs, opts ...pulumi.ResourceOption) (*LocalUser, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.StorageAccountId == nil {
		return nil, errors.New("invalid value for required argument 'StorageAccountId'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
		"sid",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LocalUser
	err := ctx.RegisterResource("azure:storage/localUser:LocalUser", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLocalUser gets an existing LocalUser resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLocalUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LocalUserState, opts ...pulumi.ResourceOption) (*LocalUser, error) {
	var resource LocalUser
	err := ctx.ReadResource("azure:storage/localUser:LocalUser", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LocalUser resources.
type localUserState struct {
	// The home directory of the Storage Account Local User.
	HomeDirectory *string `pulumi:"homeDirectory"`
	// The name which should be used for this Storage Account Local User. Changing this forces a new Storage Account Local User to be created.
	Name *string `pulumi:"name"`
	// The value of the password, which is only available when `sshPasswordEnabled` is set to `true`.
	Password *string `pulumi:"password"`
	// One or more `permissionScope` blocks as defined below.
	PermissionScopes []LocalUserPermissionScope `pulumi:"permissionScopes"`
	// The unique Security Identifier of this Storage Account Local User.
	Sid *string `pulumi:"sid"`
	// One or more `sshAuthorizedKey` blocks as defined below.
	SshAuthorizedKeys []LocalUserSshAuthorizedKey `pulumi:"sshAuthorizedKeys"`
	// Specifies whether SSH Key Authentication is enabled. Defaults to `false`.
	SshKeyEnabled *bool `pulumi:"sshKeyEnabled"`
	// Specifies whether SSH Password Authentication is enabled. Defaults to `false`.
	SshPasswordEnabled *bool `pulumi:"sshPasswordEnabled"`
	// The ID of the Storage Account that this Storage Account Local User resides in. Changing this forces a new Storage Account Local User to be created.
	StorageAccountId *string `pulumi:"storageAccountId"`
}

type LocalUserState struct {
	// The home directory of the Storage Account Local User.
	HomeDirectory pulumi.StringPtrInput
	// The name which should be used for this Storage Account Local User. Changing this forces a new Storage Account Local User to be created.
	Name pulumi.StringPtrInput
	// The value of the password, which is only available when `sshPasswordEnabled` is set to `true`.
	Password pulumi.StringPtrInput
	// One or more `permissionScope` blocks as defined below.
	PermissionScopes LocalUserPermissionScopeArrayInput
	// The unique Security Identifier of this Storage Account Local User.
	Sid pulumi.StringPtrInput
	// One or more `sshAuthorizedKey` blocks as defined below.
	SshAuthorizedKeys LocalUserSshAuthorizedKeyArrayInput
	// Specifies whether SSH Key Authentication is enabled. Defaults to `false`.
	SshKeyEnabled pulumi.BoolPtrInput
	// Specifies whether SSH Password Authentication is enabled. Defaults to `false`.
	SshPasswordEnabled pulumi.BoolPtrInput
	// The ID of the Storage Account that this Storage Account Local User resides in. Changing this forces a new Storage Account Local User to be created.
	StorageAccountId pulumi.StringPtrInput
}

func (LocalUserState) ElementType() reflect.Type {
	return reflect.TypeOf((*localUserState)(nil)).Elem()
}

type localUserArgs struct {
	// The home directory of the Storage Account Local User.
	HomeDirectory *string `pulumi:"homeDirectory"`
	// The name which should be used for this Storage Account Local User. Changing this forces a new Storage Account Local User to be created.
	Name *string `pulumi:"name"`
	// One or more `permissionScope` blocks as defined below.
	PermissionScopes []LocalUserPermissionScope `pulumi:"permissionScopes"`
	// One or more `sshAuthorizedKey` blocks as defined below.
	SshAuthorizedKeys []LocalUserSshAuthorizedKey `pulumi:"sshAuthorizedKeys"`
	// Specifies whether SSH Key Authentication is enabled. Defaults to `false`.
	SshKeyEnabled *bool `pulumi:"sshKeyEnabled"`
	// Specifies whether SSH Password Authentication is enabled. Defaults to `false`.
	SshPasswordEnabled *bool `pulumi:"sshPasswordEnabled"`
	// The ID of the Storage Account that this Storage Account Local User resides in. Changing this forces a new Storage Account Local User to be created.
	StorageAccountId string `pulumi:"storageAccountId"`
}

// The set of arguments for constructing a LocalUser resource.
type LocalUserArgs struct {
	// The home directory of the Storage Account Local User.
	HomeDirectory pulumi.StringPtrInput
	// The name which should be used for this Storage Account Local User. Changing this forces a new Storage Account Local User to be created.
	Name pulumi.StringPtrInput
	// One or more `permissionScope` blocks as defined below.
	PermissionScopes LocalUserPermissionScopeArrayInput
	// One or more `sshAuthorizedKey` blocks as defined below.
	SshAuthorizedKeys LocalUserSshAuthorizedKeyArrayInput
	// Specifies whether SSH Key Authentication is enabled. Defaults to `false`.
	SshKeyEnabled pulumi.BoolPtrInput
	// Specifies whether SSH Password Authentication is enabled. Defaults to `false`.
	SshPasswordEnabled pulumi.BoolPtrInput
	// The ID of the Storage Account that this Storage Account Local User resides in. Changing this forces a new Storage Account Local User to be created.
	StorageAccountId pulumi.StringInput
}

func (LocalUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*localUserArgs)(nil)).Elem()
}

type LocalUserInput interface {
	pulumi.Input

	ToLocalUserOutput() LocalUserOutput
	ToLocalUserOutputWithContext(ctx context.Context) LocalUserOutput
}

func (*LocalUser) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalUser)(nil)).Elem()
}

func (i *LocalUser) ToLocalUserOutput() LocalUserOutput {
	return i.ToLocalUserOutputWithContext(context.Background())
}

func (i *LocalUser) ToLocalUserOutputWithContext(ctx context.Context) LocalUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalUserOutput)
}

// LocalUserArrayInput is an input type that accepts LocalUserArray and LocalUserArrayOutput values.
// You can construct a concrete instance of `LocalUserArrayInput` via:
//
//	LocalUserArray{ LocalUserArgs{...} }
type LocalUserArrayInput interface {
	pulumi.Input

	ToLocalUserArrayOutput() LocalUserArrayOutput
	ToLocalUserArrayOutputWithContext(context.Context) LocalUserArrayOutput
}

type LocalUserArray []LocalUserInput

func (LocalUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LocalUser)(nil)).Elem()
}

func (i LocalUserArray) ToLocalUserArrayOutput() LocalUserArrayOutput {
	return i.ToLocalUserArrayOutputWithContext(context.Background())
}

func (i LocalUserArray) ToLocalUserArrayOutputWithContext(ctx context.Context) LocalUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalUserArrayOutput)
}

// LocalUserMapInput is an input type that accepts LocalUserMap and LocalUserMapOutput values.
// You can construct a concrete instance of `LocalUserMapInput` via:
//
//	LocalUserMap{ "key": LocalUserArgs{...} }
type LocalUserMapInput interface {
	pulumi.Input

	ToLocalUserMapOutput() LocalUserMapOutput
	ToLocalUserMapOutputWithContext(context.Context) LocalUserMapOutput
}

type LocalUserMap map[string]LocalUserInput

func (LocalUserMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LocalUser)(nil)).Elem()
}

func (i LocalUserMap) ToLocalUserMapOutput() LocalUserMapOutput {
	return i.ToLocalUserMapOutputWithContext(context.Background())
}

func (i LocalUserMap) ToLocalUserMapOutputWithContext(ctx context.Context) LocalUserMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalUserMapOutput)
}

type LocalUserOutput struct{ *pulumi.OutputState }

func (LocalUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalUser)(nil)).Elem()
}

func (o LocalUserOutput) ToLocalUserOutput() LocalUserOutput {
	return o
}

func (o LocalUserOutput) ToLocalUserOutputWithContext(ctx context.Context) LocalUserOutput {
	return o
}

// The home directory of the Storage Account Local User.
func (o LocalUserOutput) HomeDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalUser) pulumi.StringPtrOutput { return v.HomeDirectory }).(pulumi.StringPtrOutput)
}

// The name which should be used for this Storage Account Local User. Changing this forces a new Storage Account Local User to be created.
func (o LocalUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LocalUser) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The value of the password, which is only available when `sshPasswordEnabled` is set to `true`.
func (o LocalUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *LocalUser) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// One or more `permissionScope` blocks as defined below.
func (o LocalUserOutput) PermissionScopes() LocalUserPermissionScopeArrayOutput {
	return o.ApplyT(func(v *LocalUser) LocalUserPermissionScopeArrayOutput { return v.PermissionScopes }).(LocalUserPermissionScopeArrayOutput)
}

// The unique Security Identifier of this Storage Account Local User.
func (o LocalUserOutput) Sid() pulumi.StringOutput {
	return o.ApplyT(func(v *LocalUser) pulumi.StringOutput { return v.Sid }).(pulumi.StringOutput)
}

// One or more `sshAuthorizedKey` blocks as defined below.
func (o LocalUserOutput) SshAuthorizedKeys() LocalUserSshAuthorizedKeyArrayOutput {
	return o.ApplyT(func(v *LocalUser) LocalUserSshAuthorizedKeyArrayOutput { return v.SshAuthorizedKeys }).(LocalUserSshAuthorizedKeyArrayOutput)
}

// Specifies whether SSH Key Authentication is enabled. Defaults to `false`.
func (o LocalUserOutput) SshKeyEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LocalUser) pulumi.BoolPtrOutput { return v.SshKeyEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies whether SSH Password Authentication is enabled. Defaults to `false`.
func (o LocalUserOutput) SshPasswordEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LocalUser) pulumi.BoolPtrOutput { return v.SshPasswordEnabled }).(pulumi.BoolPtrOutput)
}

// The ID of the Storage Account that this Storage Account Local User resides in. Changing this forces a new Storage Account Local User to be created.
func (o LocalUserOutput) StorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *LocalUser) pulumi.StringOutput { return v.StorageAccountId }).(pulumi.StringOutput)
}

type LocalUserArrayOutput struct{ *pulumi.OutputState }

func (LocalUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LocalUser)(nil)).Elem()
}

func (o LocalUserArrayOutput) ToLocalUserArrayOutput() LocalUserArrayOutput {
	return o
}

func (o LocalUserArrayOutput) ToLocalUserArrayOutputWithContext(ctx context.Context) LocalUserArrayOutput {
	return o
}

func (o LocalUserArrayOutput) Index(i pulumi.IntInput) LocalUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LocalUser {
		return vs[0].([]*LocalUser)[vs[1].(int)]
	}).(LocalUserOutput)
}

type LocalUserMapOutput struct{ *pulumi.OutputState }

func (LocalUserMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LocalUser)(nil)).Elem()
}

func (o LocalUserMapOutput) ToLocalUserMapOutput() LocalUserMapOutput {
	return o
}

func (o LocalUserMapOutput) ToLocalUserMapOutputWithContext(ctx context.Context) LocalUserMapOutput {
	return o
}

func (o LocalUserMapOutput) MapIndex(k pulumi.StringInput) LocalUserOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LocalUser {
		return vs[0].(map[string]*LocalUser)[vs[1].(string)]
	}).(LocalUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LocalUserInput)(nil)).Elem(), &LocalUser{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalUserArrayInput)(nil)).Elem(), LocalUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalUserMapInput)(nil)).Elem(), LocalUserMap{})
	pulumi.RegisterOutputType(LocalUserOutput{})
	pulumi.RegisterOutputType(LocalUserArrayOutput{})
	pulumi.RegisterOutputType(LocalUserMapOutput{})
}
