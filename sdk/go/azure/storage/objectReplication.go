// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Storage Object Replication.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			srcResourceGroup, err := core.NewResourceGroup(ctx, "srcResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			srcAccount, err := storage.NewAccount(ctx, "srcAccount", &storage.AccountArgs{
//				ResourceGroupName:      srcResourceGroup.Name,
//				Location:               srcResourceGroup.Location,
//				AccountTier:            pulumi.String("Standard"),
//				AccountReplicationType: pulumi.String("LRS"),
//				BlobProperties: &storage.AccountBlobPropertiesArgs{
//					VersioningEnabled: pulumi.Bool(true),
//					ChangeFeedEnabled: pulumi.Bool(true),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			srcContainer, err := storage.NewContainer(ctx, "srcContainer", &storage.ContainerArgs{
//				StorageAccountName:  srcAccount.Name,
//				ContainerAccessType: pulumi.String("private"),
//			})
//			if err != nil {
//				return err
//			}
//			dstResourceGroup, err := core.NewResourceGroup(ctx, "dstResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("East US"),
//			})
//			if err != nil {
//				return err
//			}
//			dstAccount, err := storage.NewAccount(ctx, "dstAccount", &storage.AccountArgs{
//				ResourceGroupName:      dstResourceGroup.Name,
//				Location:               dstResourceGroup.Location,
//				AccountTier:            pulumi.String("Standard"),
//				AccountReplicationType: pulumi.String("LRS"),
//				BlobProperties: &storage.AccountBlobPropertiesArgs{
//					VersioningEnabled: pulumi.Bool(true),
//					ChangeFeedEnabled: pulumi.Bool(true),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			dstContainer, err := storage.NewContainer(ctx, "dstContainer", &storage.ContainerArgs{
//				StorageAccountName:  dstAccount.Name,
//				ContainerAccessType: pulumi.String("private"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = storage.NewObjectReplication(ctx, "example", &storage.ObjectReplicationArgs{
//				SourceStorageAccountId:      srcAccount.ID(),
//				DestinationStorageAccountId: dstAccount.ID(),
//				Rules: storage.ObjectReplicationRuleArray{
//					&storage.ObjectReplicationRuleArgs{
//						SourceContainerName:      srcContainer.Name,
//						DestinationContainerName: dstContainer.Name,
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Storage Object Replication Policies can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:storage/objectReplication:ObjectReplication example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Storage/storageAccounts/storageAccount1/objectReplicationPolicies/objectReplicationPolicy1;/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group2/providers/Microsoft.Storage/storageAccounts/storageAccount2/objectReplicationPolicies/objectReplicationPolicy2
//
// ```
type ObjectReplication struct {
	pulumi.CustomResourceState

	// The ID of the Object Replication in the destination storage account.
	DestinationObjectReplicationId pulumi.StringOutput `pulumi:"destinationObjectReplicationId"`
	// The ID of the destination storage account. Changing this forces a new Storage Object Replication to be created.
	DestinationStorageAccountId pulumi.StringOutput `pulumi:"destinationStorageAccountId"`
	// One or more `rules` blocks as defined below.
	Rules ObjectReplicationRuleArrayOutput `pulumi:"rules"`
	// The ID of the Object Replication in the source storage account.
	SourceObjectReplicationId pulumi.StringOutput `pulumi:"sourceObjectReplicationId"`
	// The ID of the source storage account. Changing this forces a new Storage Object Replication to be created.
	SourceStorageAccountId pulumi.StringOutput `pulumi:"sourceStorageAccountId"`
}

// NewObjectReplication registers a new resource with the given unique name, arguments, and options.
func NewObjectReplication(ctx *pulumi.Context,
	name string, args *ObjectReplicationArgs, opts ...pulumi.ResourceOption) (*ObjectReplication, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DestinationStorageAccountId == nil {
		return nil, errors.New("invalid value for required argument 'DestinationStorageAccountId'")
	}
	if args.Rules == nil {
		return nil, errors.New("invalid value for required argument 'Rules'")
	}
	if args.SourceStorageAccountId == nil {
		return nil, errors.New("invalid value for required argument 'SourceStorageAccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ObjectReplication
	err := ctx.RegisterResource("azure:storage/objectReplication:ObjectReplication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetObjectReplication gets an existing ObjectReplication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetObjectReplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ObjectReplicationState, opts ...pulumi.ResourceOption) (*ObjectReplication, error) {
	var resource ObjectReplication
	err := ctx.ReadResource("azure:storage/objectReplication:ObjectReplication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ObjectReplication resources.
type objectReplicationState struct {
	// The ID of the Object Replication in the destination storage account.
	DestinationObjectReplicationId *string `pulumi:"destinationObjectReplicationId"`
	// The ID of the destination storage account. Changing this forces a new Storage Object Replication to be created.
	DestinationStorageAccountId *string `pulumi:"destinationStorageAccountId"`
	// One or more `rules` blocks as defined below.
	Rules []ObjectReplicationRule `pulumi:"rules"`
	// The ID of the Object Replication in the source storage account.
	SourceObjectReplicationId *string `pulumi:"sourceObjectReplicationId"`
	// The ID of the source storage account. Changing this forces a new Storage Object Replication to be created.
	SourceStorageAccountId *string `pulumi:"sourceStorageAccountId"`
}

type ObjectReplicationState struct {
	// The ID of the Object Replication in the destination storage account.
	DestinationObjectReplicationId pulumi.StringPtrInput
	// The ID of the destination storage account. Changing this forces a new Storage Object Replication to be created.
	DestinationStorageAccountId pulumi.StringPtrInput
	// One or more `rules` blocks as defined below.
	Rules ObjectReplicationRuleArrayInput
	// The ID of the Object Replication in the source storage account.
	SourceObjectReplicationId pulumi.StringPtrInput
	// The ID of the source storage account. Changing this forces a new Storage Object Replication to be created.
	SourceStorageAccountId pulumi.StringPtrInput
}

func (ObjectReplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*objectReplicationState)(nil)).Elem()
}

type objectReplicationArgs struct {
	// The ID of the destination storage account. Changing this forces a new Storage Object Replication to be created.
	DestinationStorageAccountId string `pulumi:"destinationStorageAccountId"`
	// One or more `rules` blocks as defined below.
	Rules []ObjectReplicationRule `pulumi:"rules"`
	// The ID of the source storage account. Changing this forces a new Storage Object Replication to be created.
	SourceStorageAccountId string `pulumi:"sourceStorageAccountId"`
}

// The set of arguments for constructing a ObjectReplication resource.
type ObjectReplicationArgs struct {
	// The ID of the destination storage account. Changing this forces a new Storage Object Replication to be created.
	DestinationStorageAccountId pulumi.StringInput
	// One or more `rules` blocks as defined below.
	Rules ObjectReplicationRuleArrayInput
	// The ID of the source storage account. Changing this forces a new Storage Object Replication to be created.
	SourceStorageAccountId pulumi.StringInput
}

func (ObjectReplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*objectReplicationArgs)(nil)).Elem()
}

type ObjectReplicationInput interface {
	pulumi.Input

	ToObjectReplicationOutput() ObjectReplicationOutput
	ToObjectReplicationOutputWithContext(ctx context.Context) ObjectReplicationOutput
}

func (*ObjectReplication) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectReplication)(nil)).Elem()
}

func (i *ObjectReplication) ToObjectReplicationOutput() ObjectReplicationOutput {
	return i.ToObjectReplicationOutputWithContext(context.Background())
}

func (i *ObjectReplication) ToObjectReplicationOutputWithContext(ctx context.Context) ObjectReplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectReplicationOutput)
}

// ObjectReplicationArrayInput is an input type that accepts ObjectReplicationArray and ObjectReplicationArrayOutput values.
// You can construct a concrete instance of `ObjectReplicationArrayInput` via:
//
//	ObjectReplicationArray{ ObjectReplicationArgs{...} }
type ObjectReplicationArrayInput interface {
	pulumi.Input

	ToObjectReplicationArrayOutput() ObjectReplicationArrayOutput
	ToObjectReplicationArrayOutputWithContext(context.Context) ObjectReplicationArrayOutput
}

type ObjectReplicationArray []ObjectReplicationInput

func (ObjectReplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ObjectReplication)(nil)).Elem()
}

func (i ObjectReplicationArray) ToObjectReplicationArrayOutput() ObjectReplicationArrayOutput {
	return i.ToObjectReplicationArrayOutputWithContext(context.Background())
}

func (i ObjectReplicationArray) ToObjectReplicationArrayOutputWithContext(ctx context.Context) ObjectReplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectReplicationArrayOutput)
}

// ObjectReplicationMapInput is an input type that accepts ObjectReplicationMap and ObjectReplicationMapOutput values.
// You can construct a concrete instance of `ObjectReplicationMapInput` via:
//
//	ObjectReplicationMap{ "key": ObjectReplicationArgs{...} }
type ObjectReplicationMapInput interface {
	pulumi.Input

	ToObjectReplicationMapOutput() ObjectReplicationMapOutput
	ToObjectReplicationMapOutputWithContext(context.Context) ObjectReplicationMapOutput
}

type ObjectReplicationMap map[string]ObjectReplicationInput

func (ObjectReplicationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ObjectReplication)(nil)).Elem()
}

func (i ObjectReplicationMap) ToObjectReplicationMapOutput() ObjectReplicationMapOutput {
	return i.ToObjectReplicationMapOutputWithContext(context.Background())
}

func (i ObjectReplicationMap) ToObjectReplicationMapOutputWithContext(ctx context.Context) ObjectReplicationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectReplicationMapOutput)
}

type ObjectReplicationOutput struct{ *pulumi.OutputState }

func (ObjectReplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectReplication)(nil)).Elem()
}

func (o ObjectReplicationOutput) ToObjectReplicationOutput() ObjectReplicationOutput {
	return o
}

func (o ObjectReplicationOutput) ToObjectReplicationOutputWithContext(ctx context.Context) ObjectReplicationOutput {
	return o
}

// The ID of the Object Replication in the destination storage account.
func (o ObjectReplicationOutput) DestinationObjectReplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectReplication) pulumi.StringOutput { return v.DestinationObjectReplicationId }).(pulumi.StringOutput)
}

// The ID of the destination storage account. Changing this forces a new Storage Object Replication to be created.
func (o ObjectReplicationOutput) DestinationStorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectReplication) pulumi.StringOutput { return v.DestinationStorageAccountId }).(pulumi.StringOutput)
}

// One or more `rules` blocks as defined below.
func (o ObjectReplicationOutput) Rules() ObjectReplicationRuleArrayOutput {
	return o.ApplyT(func(v *ObjectReplication) ObjectReplicationRuleArrayOutput { return v.Rules }).(ObjectReplicationRuleArrayOutput)
}

// The ID of the Object Replication in the source storage account.
func (o ObjectReplicationOutput) SourceObjectReplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectReplication) pulumi.StringOutput { return v.SourceObjectReplicationId }).(pulumi.StringOutput)
}

// The ID of the source storage account. Changing this forces a new Storage Object Replication to be created.
func (o ObjectReplicationOutput) SourceStorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectReplication) pulumi.StringOutput { return v.SourceStorageAccountId }).(pulumi.StringOutput)
}

type ObjectReplicationArrayOutput struct{ *pulumi.OutputState }

func (ObjectReplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ObjectReplication)(nil)).Elem()
}

func (o ObjectReplicationArrayOutput) ToObjectReplicationArrayOutput() ObjectReplicationArrayOutput {
	return o
}

func (o ObjectReplicationArrayOutput) ToObjectReplicationArrayOutputWithContext(ctx context.Context) ObjectReplicationArrayOutput {
	return o
}

func (o ObjectReplicationArrayOutput) Index(i pulumi.IntInput) ObjectReplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ObjectReplication {
		return vs[0].([]*ObjectReplication)[vs[1].(int)]
	}).(ObjectReplicationOutput)
}

type ObjectReplicationMapOutput struct{ *pulumi.OutputState }

func (ObjectReplicationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ObjectReplication)(nil)).Elem()
}

func (o ObjectReplicationMapOutput) ToObjectReplicationMapOutput() ObjectReplicationMapOutput {
	return o
}

func (o ObjectReplicationMapOutput) ToObjectReplicationMapOutputWithContext(ctx context.Context) ObjectReplicationMapOutput {
	return o
}

func (o ObjectReplicationMapOutput) MapIndex(k pulumi.StringInput) ObjectReplicationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ObjectReplication {
		return vs[0].(map[string]*ObjectReplication)[vs[1].(string)]
	}).(ObjectReplicationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectReplicationInput)(nil)).Elem(), &ObjectReplication{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectReplicationArrayInput)(nil)).Elem(), ObjectReplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectReplicationMapInput)(nil)).Elem(), ObjectReplicationMap{})
	pulumi.RegisterOutputType(ObjectReplicationOutput{})
	pulumi.RegisterOutputType(ObjectReplicationArrayOutput{})
	pulumi.RegisterOutputType(ObjectReplicationMapOutput{})
}
