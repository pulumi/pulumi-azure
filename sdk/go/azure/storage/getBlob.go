// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Storage Blob.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/storage"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := storage.LookupBlob(ctx, &storage.LookupBlobArgs{
// 			Name:                 "example-blob-name",
// 			StorageAccountName:   "example-storage-account-name",
// 			StorageContainerName: "example-storage-container-name",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupBlob(ctx *pulumi.Context, args *LookupBlobArgs, opts ...pulumi.InvokeOption) (*LookupBlobResult, error) {
	var rv LookupBlobResult
	err := ctx.Invoke("azure:storage/getBlob:getBlob", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBlob.
type LookupBlobArgs struct {
	// A map of custom blob metadata.
	Metadata map[string]string `pulumi:"metadata"`
	// The name of the Blob.
	Name string `pulumi:"name"`
	// The name of the Storage Account where the Container exists.
	StorageAccountName string `pulumi:"storageAccountName"`
	// The name of the Storage Container where the Blob exists.
	StorageContainerName string `pulumi:"storageContainerName"`
}

// A collection of values returned by getBlob.
type LookupBlobResult struct {
	// The access tier of the storage blob.
	AccessTier string `pulumi:"accessTier"`
	// The MD5 sum of the blob contents.
	ContentMd5 string `pulumi:"contentMd5"`
	// The content type of the storage blob.
	ContentType string `pulumi:"contentType"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A map of custom blob metadata.
	Metadata             map[string]string `pulumi:"metadata"`
	Name                 string            `pulumi:"name"`
	StorageAccountName   string            `pulumi:"storageAccountName"`
	StorageContainerName string            `pulumi:"storageContainerName"`
	// The type of the storage blob
	Type string `pulumi:"type"`
	// The URL of the storage blob.
	Url string `pulumi:"url"`
}

func LookupBlobOutput(ctx *pulumi.Context, args LookupBlobOutputArgs, opts ...pulumi.InvokeOption) LookupBlobResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBlobResult, error) {
			args := v.(LookupBlobArgs)
			r, err := LookupBlob(ctx, &args, opts...)
			return *r, err
		}).(LookupBlobResultOutput)
}

// A collection of arguments for invoking getBlob.
type LookupBlobOutputArgs struct {
	// A map of custom blob metadata.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// The name of the Blob.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Storage Account where the Container exists.
	StorageAccountName pulumi.StringInput `pulumi:"storageAccountName"`
	// The name of the Storage Container where the Blob exists.
	StorageContainerName pulumi.StringInput `pulumi:"storageContainerName"`
}

func (LookupBlobOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBlobArgs)(nil)).Elem()
}

// A collection of values returned by getBlob.
type LookupBlobResultOutput struct{ *pulumi.OutputState }

func (LookupBlobResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBlobResult)(nil)).Elem()
}

func (o LookupBlobResultOutput) ToLookupBlobResultOutput() LookupBlobResultOutput {
	return o
}

func (o LookupBlobResultOutput) ToLookupBlobResultOutputWithContext(ctx context.Context) LookupBlobResultOutput {
	return o
}

// The access tier of the storage blob.
func (o LookupBlobResultOutput) AccessTier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlobResult) string { return v.AccessTier }).(pulumi.StringOutput)
}

// The MD5 sum of the blob contents.
func (o LookupBlobResultOutput) ContentMd5() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlobResult) string { return v.ContentMd5 }).(pulumi.StringOutput)
}

// The content type of the storage blob.
func (o LookupBlobResultOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlobResult) string { return v.ContentType }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupBlobResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlobResult) string { return v.Id }).(pulumi.StringOutput)
}

// A map of custom blob metadata.
func (o LookupBlobResultOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBlobResult) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o LookupBlobResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlobResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupBlobResultOutput) StorageAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlobResult) string { return v.StorageAccountName }).(pulumi.StringOutput)
}

func (o LookupBlobResultOutput) StorageContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlobResult) string { return v.StorageContainerName }).(pulumi.StringOutput)
}

// The type of the storage blob
func (o LookupBlobResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlobResult) string { return v.Type }).(pulumi.StringOutput)
}

// The URL of the storage blob.
func (o LookupBlobResultOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBlobResult) string { return v.Url }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBlobResultOutput{})
}
