// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Storage Mover Source Endpoint.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleMover, err := storage.NewMover(ctx, "exampleMover", &storage.MoverArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = storage.NewMoverSourceEndpoint(ctx, "exampleMoverSourceEndpoint", &storage.MoverSourceEndpointArgs{
//				StorageMoverId: exampleMover.ID(),
//				Export:         pulumi.String("/"),
//				Host:           pulumi.String("192.168.0.1"),
//				NfsVersion:     pulumi.String("NFSv3"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Storage Mover Source Endpoint can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:storage/moverSourceEndpoint:MoverSourceEndpoint example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.StorageMover/storageMovers/storageMover1/endpoints/endpoint1
//
// ```
type MoverSourceEndpoint struct {
	pulumi.CustomResourceState

	// Specifies a description for the Storage Mover Source Endpoint.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the directory being exported from the server. Changing this forces a new resource to be created.
	Export pulumi.StringPtrOutput `pulumi:"export"`
	// Specifies the host name or IP address of the server exporting the file system. Changing this forces a new resource to be created.
	Host pulumi.StringOutput `pulumi:"host"`
	// Specifies the name which should be used for this Storage Mover Source Endpoint. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the NFS protocol version. Possible values are `NFSauto`, `NFSv3` and `NFSv4`. Defaults to `NFSauto`. Changing this forces a new resource to be created.
	NfsVersion pulumi.StringPtrOutput `pulumi:"nfsVersion"`
	// Specifies the ID of the Storage Mover for this Storage Mover Source Endpoint. Changing this forces a new resource to be created.
	StorageMoverId pulumi.StringOutput `pulumi:"storageMoverId"`
}

// NewMoverSourceEndpoint registers a new resource with the given unique name, arguments, and options.
func NewMoverSourceEndpoint(ctx *pulumi.Context,
	name string, args *MoverSourceEndpointArgs, opts ...pulumi.ResourceOption) (*MoverSourceEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Host == nil {
		return nil, errors.New("invalid value for required argument 'Host'")
	}
	if args.StorageMoverId == nil {
		return nil, errors.New("invalid value for required argument 'StorageMoverId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MoverSourceEndpoint
	err := ctx.RegisterResource("azure:storage/moverSourceEndpoint:MoverSourceEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMoverSourceEndpoint gets an existing MoverSourceEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMoverSourceEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MoverSourceEndpointState, opts ...pulumi.ResourceOption) (*MoverSourceEndpoint, error) {
	var resource MoverSourceEndpoint
	err := ctx.ReadResource("azure:storage/moverSourceEndpoint:MoverSourceEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MoverSourceEndpoint resources.
type moverSourceEndpointState struct {
	// Specifies a description for the Storage Mover Source Endpoint.
	Description *string `pulumi:"description"`
	// Specifies the directory being exported from the server. Changing this forces a new resource to be created.
	Export *string `pulumi:"export"`
	// Specifies the host name or IP address of the server exporting the file system. Changing this forces a new resource to be created.
	Host *string `pulumi:"host"`
	// Specifies the name which should be used for this Storage Mover Source Endpoint. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the NFS protocol version. Possible values are `NFSauto`, `NFSv3` and `NFSv4`. Defaults to `NFSauto`. Changing this forces a new resource to be created.
	NfsVersion *string `pulumi:"nfsVersion"`
	// Specifies the ID of the Storage Mover for this Storage Mover Source Endpoint. Changing this forces a new resource to be created.
	StorageMoverId *string `pulumi:"storageMoverId"`
}

type MoverSourceEndpointState struct {
	// Specifies a description for the Storage Mover Source Endpoint.
	Description pulumi.StringPtrInput
	// Specifies the directory being exported from the server. Changing this forces a new resource to be created.
	Export pulumi.StringPtrInput
	// Specifies the host name or IP address of the server exporting the file system. Changing this forces a new resource to be created.
	Host pulumi.StringPtrInput
	// Specifies the name which should be used for this Storage Mover Source Endpoint. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the NFS protocol version. Possible values are `NFSauto`, `NFSv3` and `NFSv4`. Defaults to `NFSauto`. Changing this forces a new resource to be created.
	NfsVersion pulumi.StringPtrInput
	// Specifies the ID of the Storage Mover for this Storage Mover Source Endpoint. Changing this forces a new resource to be created.
	StorageMoverId pulumi.StringPtrInput
}

func (MoverSourceEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*moverSourceEndpointState)(nil)).Elem()
}

type moverSourceEndpointArgs struct {
	// Specifies a description for the Storage Mover Source Endpoint.
	Description *string `pulumi:"description"`
	// Specifies the directory being exported from the server. Changing this forces a new resource to be created.
	Export *string `pulumi:"export"`
	// Specifies the host name or IP address of the server exporting the file system. Changing this forces a new resource to be created.
	Host string `pulumi:"host"`
	// Specifies the name which should be used for this Storage Mover Source Endpoint. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the NFS protocol version. Possible values are `NFSauto`, `NFSv3` and `NFSv4`. Defaults to `NFSauto`. Changing this forces a new resource to be created.
	NfsVersion *string `pulumi:"nfsVersion"`
	// Specifies the ID of the Storage Mover for this Storage Mover Source Endpoint. Changing this forces a new resource to be created.
	StorageMoverId string `pulumi:"storageMoverId"`
}

// The set of arguments for constructing a MoverSourceEndpoint resource.
type MoverSourceEndpointArgs struct {
	// Specifies a description for the Storage Mover Source Endpoint.
	Description pulumi.StringPtrInput
	// Specifies the directory being exported from the server. Changing this forces a new resource to be created.
	Export pulumi.StringPtrInput
	// Specifies the host name or IP address of the server exporting the file system. Changing this forces a new resource to be created.
	Host pulumi.StringInput
	// Specifies the name which should be used for this Storage Mover Source Endpoint. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the NFS protocol version. Possible values are `NFSauto`, `NFSv3` and `NFSv4`. Defaults to `NFSauto`. Changing this forces a new resource to be created.
	NfsVersion pulumi.StringPtrInput
	// Specifies the ID of the Storage Mover for this Storage Mover Source Endpoint. Changing this forces a new resource to be created.
	StorageMoverId pulumi.StringInput
}

func (MoverSourceEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*moverSourceEndpointArgs)(nil)).Elem()
}

type MoverSourceEndpointInput interface {
	pulumi.Input

	ToMoverSourceEndpointOutput() MoverSourceEndpointOutput
	ToMoverSourceEndpointOutputWithContext(ctx context.Context) MoverSourceEndpointOutput
}

func (*MoverSourceEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**MoverSourceEndpoint)(nil)).Elem()
}

func (i *MoverSourceEndpoint) ToMoverSourceEndpointOutput() MoverSourceEndpointOutput {
	return i.ToMoverSourceEndpointOutputWithContext(context.Background())
}

func (i *MoverSourceEndpoint) ToMoverSourceEndpointOutputWithContext(ctx context.Context) MoverSourceEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoverSourceEndpointOutput)
}

// MoverSourceEndpointArrayInput is an input type that accepts MoverSourceEndpointArray and MoverSourceEndpointArrayOutput values.
// You can construct a concrete instance of `MoverSourceEndpointArrayInput` via:
//
//	MoverSourceEndpointArray{ MoverSourceEndpointArgs{...} }
type MoverSourceEndpointArrayInput interface {
	pulumi.Input

	ToMoverSourceEndpointArrayOutput() MoverSourceEndpointArrayOutput
	ToMoverSourceEndpointArrayOutputWithContext(context.Context) MoverSourceEndpointArrayOutput
}

type MoverSourceEndpointArray []MoverSourceEndpointInput

func (MoverSourceEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MoverSourceEndpoint)(nil)).Elem()
}

func (i MoverSourceEndpointArray) ToMoverSourceEndpointArrayOutput() MoverSourceEndpointArrayOutput {
	return i.ToMoverSourceEndpointArrayOutputWithContext(context.Background())
}

func (i MoverSourceEndpointArray) ToMoverSourceEndpointArrayOutputWithContext(ctx context.Context) MoverSourceEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoverSourceEndpointArrayOutput)
}

// MoverSourceEndpointMapInput is an input type that accepts MoverSourceEndpointMap and MoverSourceEndpointMapOutput values.
// You can construct a concrete instance of `MoverSourceEndpointMapInput` via:
//
//	MoverSourceEndpointMap{ "key": MoverSourceEndpointArgs{...} }
type MoverSourceEndpointMapInput interface {
	pulumi.Input

	ToMoverSourceEndpointMapOutput() MoverSourceEndpointMapOutput
	ToMoverSourceEndpointMapOutputWithContext(context.Context) MoverSourceEndpointMapOutput
}

type MoverSourceEndpointMap map[string]MoverSourceEndpointInput

func (MoverSourceEndpointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MoverSourceEndpoint)(nil)).Elem()
}

func (i MoverSourceEndpointMap) ToMoverSourceEndpointMapOutput() MoverSourceEndpointMapOutput {
	return i.ToMoverSourceEndpointMapOutputWithContext(context.Background())
}

func (i MoverSourceEndpointMap) ToMoverSourceEndpointMapOutputWithContext(ctx context.Context) MoverSourceEndpointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoverSourceEndpointMapOutput)
}

type MoverSourceEndpointOutput struct{ *pulumi.OutputState }

func (MoverSourceEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MoverSourceEndpoint)(nil)).Elem()
}

func (o MoverSourceEndpointOutput) ToMoverSourceEndpointOutput() MoverSourceEndpointOutput {
	return o
}

func (o MoverSourceEndpointOutput) ToMoverSourceEndpointOutputWithContext(ctx context.Context) MoverSourceEndpointOutput {
	return o
}

// Specifies a description for the Storage Mover Source Endpoint.
func (o MoverSourceEndpointOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoverSourceEndpoint) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the directory being exported from the server. Changing this forces a new resource to be created.
func (o MoverSourceEndpointOutput) Export() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoverSourceEndpoint) pulumi.StringPtrOutput { return v.Export }).(pulumi.StringPtrOutput)
}

// Specifies the host name or IP address of the server exporting the file system. Changing this forces a new resource to be created.
func (o MoverSourceEndpointOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v *MoverSourceEndpoint) pulumi.StringOutput { return v.Host }).(pulumi.StringOutput)
}

// Specifies the name which should be used for this Storage Mover Source Endpoint. Changing this forces a new resource to be created.
func (o MoverSourceEndpointOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MoverSourceEndpoint) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the NFS protocol version. Possible values are `NFSauto`, `NFSv3` and `NFSv4`. Defaults to `NFSauto`. Changing this forces a new resource to be created.
func (o MoverSourceEndpointOutput) NfsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoverSourceEndpoint) pulumi.StringPtrOutput { return v.NfsVersion }).(pulumi.StringPtrOutput)
}

// Specifies the ID of the Storage Mover for this Storage Mover Source Endpoint. Changing this forces a new resource to be created.
func (o MoverSourceEndpointOutput) StorageMoverId() pulumi.StringOutput {
	return o.ApplyT(func(v *MoverSourceEndpoint) pulumi.StringOutput { return v.StorageMoverId }).(pulumi.StringOutput)
}

type MoverSourceEndpointArrayOutput struct{ *pulumi.OutputState }

func (MoverSourceEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MoverSourceEndpoint)(nil)).Elem()
}

func (o MoverSourceEndpointArrayOutput) ToMoverSourceEndpointArrayOutput() MoverSourceEndpointArrayOutput {
	return o
}

func (o MoverSourceEndpointArrayOutput) ToMoverSourceEndpointArrayOutputWithContext(ctx context.Context) MoverSourceEndpointArrayOutput {
	return o
}

func (o MoverSourceEndpointArrayOutput) Index(i pulumi.IntInput) MoverSourceEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MoverSourceEndpoint {
		return vs[0].([]*MoverSourceEndpoint)[vs[1].(int)]
	}).(MoverSourceEndpointOutput)
}

type MoverSourceEndpointMapOutput struct{ *pulumi.OutputState }

func (MoverSourceEndpointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MoverSourceEndpoint)(nil)).Elem()
}

func (o MoverSourceEndpointMapOutput) ToMoverSourceEndpointMapOutput() MoverSourceEndpointMapOutput {
	return o
}

func (o MoverSourceEndpointMapOutput) ToMoverSourceEndpointMapOutputWithContext(ctx context.Context) MoverSourceEndpointMapOutput {
	return o
}

func (o MoverSourceEndpointMapOutput) MapIndex(k pulumi.StringInput) MoverSourceEndpointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MoverSourceEndpoint {
		return vs[0].(map[string]*MoverSourceEndpoint)[vs[1].(string)]
	}).(MoverSourceEndpointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MoverSourceEndpointInput)(nil)).Elem(), &MoverSourceEndpoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*MoverSourceEndpointArrayInput)(nil)).Elem(), MoverSourceEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MoverSourceEndpointMapInput)(nil)).Elem(), MoverSourceEndpointMap{})
	pulumi.RegisterOutputType(MoverSourceEndpointOutput{})
	pulumi.RegisterOutputType(MoverSourceEndpointArrayOutput{})
	pulumi.RegisterOutputType(MoverSourceEndpointMapOutput{})
}
