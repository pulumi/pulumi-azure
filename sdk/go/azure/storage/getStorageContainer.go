// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Storage Container.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := storage.LookupAccount(ctx, &storage.LookupAccountArgs{
//				Name:              "exampleaccount",
//				ResourceGroupName: pulumi.StringRef("examples"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = storage.GetStorageContainer(ctx, &storage.GetStorageContainerArgs{
//				Name:             "example-container-name",
//				StorageAccountId: pulumi.StringRef(example.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This data source uses the following Azure API Providers:
//
// * `Microsoft.Storage` - 2023-05-01
func GetStorageContainer(ctx *pulumi.Context, args *GetStorageContainerArgs, opts ...pulumi.InvokeOption) (*GetStorageContainerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetStorageContainerResult
	err := ctx.Invoke("azure:storage/getStorageContainer:getStorageContainer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStorageContainer.
type GetStorageContainerArgs struct {
	// A mapping of MetaData for this Container.
	Metadata map[string]string `pulumi:"metadata"`
	// The name of the Container.
	Name string `pulumi:"name"`
	// The id of the Storage Account where the Container exists. This property will become Required in version 5.0 of the Provider.
	//
	// > **Note:** One of `storageAccountName` or `storageAccountId` must be specified. When specifying `storageAccountId` the resource will use the Resource Manager API, rather than the Data Plane API.
	StorageAccountId *string `pulumi:"storageAccountId"`
	// The name of the Storage Account where the Container exists. This property is deprecated in favour of `storageAccountId`.
	StorageAccountName *string `pulumi:"storageAccountName"`
}

// A collection of values returned by getStorageContainer.
type GetStorageContainerResult struct {
	// The Access Level configured for this Container.
	ContainerAccessType string `pulumi:"containerAccessType"`
	// The default encryption scope in use for blobs uploaded to this container.
	DefaultEncryptionScope string `pulumi:"defaultEncryptionScope"`
	// Whether blobs are allowed to override the default encryption scope for this container.
	EncryptionScopeOverrideEnabled bool `pulumi:"encryptionScopeOverrideEnabled"`
	// Is there an Immutability Policy configured on this Storage Container?
	HasImmutabilityPolicy bool `pulumi:"hasImmutabilityPolicy"`
	// Is there a Legal Hold configured on this Storage Container?
	HasLegalHold bool `pulumi:"hasLegalHold"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A mapping of MetaData for this Container.
	Metadata map[string]string `pulumi:"metadata"`
	Name     string            `pulumi:"name"`
	// Deprecated: this property has been deprecated in favour of `id` and will be removed in version 5.0 of the Provider.
	ResourceManagerId  string  `pulumi:"resourceManagerId"`
	StorageAccountId   *string `pulumi:"storageAccountId"`
	StorageAccountName *string `pulumi:"storageAccountName"`
}

func GetStorageContainerOutput(ctx *pulumi.Context, args GetStorageContainerOutputArgs, opts ...pulumi.InvokeOption) GetStorageContainerResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetStorageContainerResultOutput, error) {
			args := v.(GetStorageContainerArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure:storage/getStorageContainer:getStorageContainer", args, GetStorageContainerResultOutput{}, options).(GetStorageContainerResultOutput), nil
		}).(GetStorageContainerResultOutput)
}

// A collection of arguments for invoking getStorageContainer.
type GetStorageContainerOutputArgs struct {
	// A mapping of MetaData for this Container.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// The name of the Container.
	Name pulumi.StringInput `pulumi:"name"`
	// The id of the Storage Account where the Container exists. This property will become Required in version 5.0 of the Provider.
	//
	// > **Note:** One of `storageAccountName` or `storageAccountId` must be specified. When specifying `storageAccountId` the resource will use the Resource Manager API, rather than the Data Plane API.
	StorageAccountId pulumi.StringPtrInput `pulumi:"storageAccountId"`
	// The name of the Storage Account where the Container exists. This property is deprecated in favour of `storageAccountId`.
	StorageAccountName pulumi.StringPtrInput `pulumi:"storageAccountName"`
}

func (GetStorageContainerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageContainerArgs)(nil)).Elem()
}

// A collection of values returned by getStorageContainer.
type GetStorageContainerResultOutput struct{ *pulumi.OutputState }

func (GetStorageContainerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageContainerResult)(nil)).Elem()
}

func (o GetStorageContainerResultOutput) ToGetStorageContainerResultOutput() GetStorageContainerResultOutput {
	return o
}

func (o GetStorageContainerResultOutput) ToGetStorageContainerResultOutputWithContext(ctx context.Context) GetStorageContainerResultOutput {
	return o
}

// The Access Level configured for this Container.
func (o GetStorageContainerResultOutput) ContainerAccessType() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageContainerResult) string { return v.ContainerAccessType }).(pulumi.StringOutput)
}

// The default encryption scope in use for blobs uploaded to this container.
func (o GetStorageContainerResultOutput) DefaultEncryptionScope() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageContainerResult) string { return v.DefaultEncryptionScope }).(pulumi.StringOutput)
}

// Whether blobs are allowed to override the default encryption scope for this container.
func (o GetStorageContainerResultOutput) EncryptionScopeOverrideEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetStorageContainerResult) bool { return v.EncryptionScopeOverrideEnabled }).(pulumi.BoolOutput)
}

// Is there an Immutability Policy configured on this Storage Container?
func (o GetStorageContainerResultOutput) HasImmutabilityPolicy() pulumi.BoolOutput {
	return o.ApplyT(func(v GetStorageContainerResult) bool { return v.HasImmutabilityPolicy }).(pulumi.BoolOutput)
}

// Is there a Legal Hold configured on this Storage Container?
func (o GetStorageContainerResultOutput) HasLegalHold() pulumi.BoolOutput {
	return o.ApplyT(func(v GetStorageContainerResult) bool { return v.HasLegalHold }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetStorageContainerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageContainerResult) string { return v.Id }).(pulumi.StringOutput)
}

// A mapping of MetaData for this Container.
func (o GetStorageContainerResultOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetStorageContainerResult) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o GetStorageContainerResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageContainerResult) string { return v.Name }).(pulumi.StringOutput)
}

// Deprecated: this property has been deprecated in favour of `id` and will be removed in version 5.0 of the Provider.
func (o GetStorageContainerResultOutput) ResourceManagerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageContainerResult) string { return v.ResourceManagerId }).(pulumi.StringOutput)
}

func (o GetStorageContainerResultOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStorageContainerResult) *string { return v.StorageAccountId }).(pulumi.StringPtrOutput)
}

func (o GetStorageContainerResultOutput) StorageAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStorageContainerResult) *string { return v.StorageAccountName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetStorageContainerResultOutput{})
}
