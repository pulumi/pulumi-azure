// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Directory within an Azure Storage File Share.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("azuretest"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleAccount, err := storage.NewAccount(ctx, "example", &storage.AccountArgs{
//				Name:                   pulumi.String("azureteststorage"),
//				ResourceGroupName:      example.Name,
//				Location:               example.Location,
//				AccountTier:            pulumi.String("Standard"),
//				AccountReplicationType: pulumi.String("LRS"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleShare, err := storage.NewShare(ctx, "example", &storage.ShareArgs{
//				Name:               pulumi.String("sharename"),
//				StorageAccountName: exampleAccount.Name,
//				Quota:              pulumi.Int(50),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = storage.NewShareDirectory(ctx, "example", &storage.ShareDirectoryArgs{
//				Name:           pulumi.String("example"),
//				StorageShareId: exampleShare.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Directories within an Azure Storage File Share can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:storage/shareDirectory:ShareDirectory example https://tomdevsa20.file.core.windows.net/share1/directory1
// ```
type ShareDirectory struct {
	pulumi.CustomResourceState

	// A mapping of metadata to assign to this Directory.
	Metadata pulumi.StringMapOutput `pulumi:"metadata"`
	// The name (or path) of the Directory that should be created within this File Share. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Deprecated: the `share_name` and `storage_account_name` properties have been superseded by the `storage_share_id` property and will be removed in version 4.0 of the AzureRM provider
	ShareName pulumi.StringOutput `pulumi:"shareName"`
	// Deprecated: the `share_name` and `storage_account_name` properties have been superseded by the `storage_share_id` property and will be removed in version 4.0 of the AzureRM provider
	StorageAccountName pulumi.StringOutput `pulumi:"storageAccountName"`
	// The Storage Share ID in which this file will be placed into. Changing this forces a new resource to be created.
	StorageShareId pulumi.StringOutput `pulumi:"storageShareId"`
}

// NewShareDirectory registers a new resource with the given unique name, arguments, and options.
func NewShareDirectory(ctx *pulumi.Context,
	name string, args *ShareDirectoryArgs, opts ...pulumi.ResourceOption) (*ShareDirectory, error) {
	if args == nil {
		args = &ShareDirectoryArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ShareDirectory
	err := ctx.RegisterResource("azure:storage/shareDirectory:ShareDirectory", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetShareDirectory gets an existing ShareDirectory resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetShareDirectory(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ShareDirectoryState, opts ...pulumi.ResourceOption) (*ShareDirectory, error) {
	var resource ShareDirectory
	err := ctx.ReadResource("azure:storage/shareDirectory:ShareDirectory", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ShareDirectory resources.
type shareDirectoryState struct {
	// A mapping of metadata to assign to this Directory.
	Metadata map[string]string `pulumi:"metadata"`
	// The name (or path) of the Directory that should be created within this File Share. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Deprecated: the `share_name` and `storage_account_name` properties have been superseded by the `storage_share_id` property and will be removed in version 4.0 of the AzureRM provider
	ShareName *string `pulumi:"shareName"`
	// Deprecated: the `share_name` and `storage_account_name` properties have been superseded by the `storage_share_id` property and will be removed in version 4.0 of the AzureRM provider
	StorageAccountName *string `pulumi:"storageAccountName"`
	// The Storage Share ID in which this file will be placed into. Changing this forces a new resource to be created.
	StorageShareId *string `pulumi:"storageShareId"`
}

type ShareDirectoryState struct {
	// A mapping of metadata to assign to this Directory.
	Metadata pulumi.StringMapInput
	// The name (or path) of the Directory that should be created within this File Share. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Deprecated: the `share_name` and `storage_account_name` properties have been superseded by the `storage_share_id` property and will be removed in version 4.0 of the AzureRM provider
	ShareName pulumi.StringPtrInput
	// Deprecated: the `share_name` and `storage_account_name` properties have been superseded by the `storage_share_id` property and will be removed in version 4.0 of the AzureRM provider
	StorageAccountName pulumi.StringPtrInput
	// The Storage Share ID in which this file will be placed into. Changing this forces a new resource to be created.
	StorageShareId pulumi.StringPtrInput
}

func (ShareDirectoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*shareDirectoryState)(nil)).Elem()
}

type shareDirectoryArgs struct {
	// A mapping of metadata to assign to this Directory.
	Metadata map[string]string `pulumi:"metadata"`
	// The name (or path) of the Directory that should be created within this File Share. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Deprecated: the `share_name` and `storage_account_name` properties have been superseded by the `storage_share_id` property and will be removed in version 4.0 of the AzureRM provider
	ShareName *string `pulumi:"shareName"`
	// Deprecated: the `share_name` and `storage_account_name` properties have been superseded by the `storage_share_id` property and will be removed in version 4.0 of the AzureRM provider
	StorageAccountName *string `pulumi:"storageAccountName"`
	// The Storage Share ID in which this file will be placed into. Changing this forces a new resource to be created.
	StorageShareId *string `pulumi:"storageShareId"`
}

// The set of arguments for constructing a ShareDirectory resource.
type ShareDirectoryArgs struct {
	// A mapping of metadata to assign to this Directory.
	Metadata pulumi.StringMapInput
	// The name (or path) of the Directory that should be created within this File Share. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Deprecated: the `share_name` and `storage_account_name` properties have been superseded by the `storage_share_id` property and will be removed in version 4.0 of the AzureRM provider
	ShareName pulumi.StringPtrInput
	// Deprecated: the `share_name` and `storage_account_name` properties have been superseded by the `storage_share_id` property and will be removed in version 4.0 of the AzureRM provider
	StorageAccountName pulumi.StringPtrInput
	// The Storage Share ID in which this file will be placed into. Changing this forces a new resource to be created.
	StorageShareId pulumi.StringPtrInput
}

func (ShareDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*shareDirectoryArgs)(nil)).Elem()
}

type ShareDirectoryInput interface {
	pulumi.Input

	ToShareDirectoryOutput() ShareDirectoryOutput
	ToShareDirectoryOutputWithContext(ctx context.Context) ShareDirectoryOutput
}

func (*ShareDirectory) ElementType() reflect.Type {
	return reflect.TypeOf((**ShareDirectory)(nil)).Elem()
}

func (i *ShareDirectory) ToShareDirectoryOutput() ShareDirectoryOutput {
	return i.ToShareDirectoryOutputWithContext(context.Background())
}

func (i *ShareDirectory) ToShareDirectoryOutputWithContext(ctx context.Context) ShareDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareDirectoryOutput)
}

// ShareDirectoryArrayInput is an input type that accepts ShareDirectoryArray and ShareDirectoryArrayOutput values.
// You can construct a concrete instance of `ShareDirectoryArrayInput` via:
//
//	ShareDirectoryArray{ ShareDirectoryArgs{...} }
type ShareDirectoryArrayInput interface {
	pulumi.Input

	ToShareDirectoryArrayOutput() ShareDirectoryArrayOutput
	ToShareDirectoryArrayOutputWithContext(context.Context) ShareDirectoryArrayOutput
}

type ShareDirectoryArray []ShareDirectoryInput

func (ShareDirectoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ShareDirectory)(nil)).Elem()
}

func (i ShareDirectoryArray) ToShareDirectoryArrayOutput() ShareDirectoryArrayOutput {
	return i.ToShareDirectoryArrayOutputWithContext(context.Background())
}

func (i ShareDirectoryArray) ToShareDirectoryArrayOutputWithContext(ctx context.Context) ShareDirectoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareDirectoryArrayOutput)
}

// ShareDirectoryMapInput is an input type that accepts ShareDirectoryMap and ShareDirectoryMapOutput values.
// You can construct a concrete instance of `ShareDirectoryMapInput` via:
//
//	ShareDirectoryMap{ "key": ShareDirectoryArgs{...} }
type ShareDirectoryMapInput interface {
	pulumi.Input

	ToShareDirectoryMapOutput() ShareDirectoryMapOutput
	ToShareDirectoryMapOutputWithContext(context.Context) ShareDirectoryMapOutput
}

type ShareDirectoryMap map[string]ShareDirectoryInput

func (ShareDirectoryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ShareDirectory)(nil)).Elem()
}

func (i ShareDirectoryMap) ToShareDirectoryMapOutput() ShareDirectoryMapOutput {
	return i.ToShareDirectoryMapOutputWithContext(context.Background())
}

func (i ShareDirectoryMap) ToShareDirectoryMapOutputWithContext(ctx context.Context) ShareDirectoryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareDirectoryMapOutput)
}

type ShareDirectoryOutput struct{ *pulumi.OutputState }

func (ShareDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShareDirectory)(nil)).Elem()
}

func (o ShareDirectoryOutput) ToShareDirectoryOutput() ShareDirectoryOutput {
	return o
}

func (o ShareDirectoryOutput) ToShareDirectoryOutputWithContext(ctx context.Context) ShareDirectoryOutput {
	return o
}

// A mapping of metadata to assign to this Directory.
func (o ShareDirectoryOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ShareDirectory) pulumi.StringMapOutput { return v.Metadata }).(pulumi.StringMapOutput)
}

// The name (or path) of the Directory that should be created within this File Share. Changing this forces a new resource to be created.
func (o ShareDirectoryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ShareDirectory) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Deprecated: the `share_name` and `storage_account_name` properties have been superseded by the `storage_share_id` property and will be removed in version 4.0 of the AzureRM provider
func (o ShareDirectoryOutput) ShareName() pulumi.StringOutput {
	return o.ApplyT(func(v *ShareDirectory) pulumi.StringOutput { return v.ShareName }).(pulumi.StringOutput)
}

// Deprecated: the `share_name` and `storage_account_name` properties have been superseded by the `storage_share_id` property and will be removed in version 4.0 of the AzureRM provider
func (o ShareDirectoryOutput) StorageAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v *ShareDirectory) pulumi.StringOutput { return v.StorageAccountName }).(pulumi.StringOutput)
}

// The Storage Share ID in which this file will be placed into. Changing this forces a new resource to be created.
func (o ShareDirectoryOutput) StorageShareId() pulumi.StringOutput {
	return o.ApplyT(func(v *ShareDirectory) pulumi.StringOutput { return v.StorageShareId }).(pulumi.StringOutput)
}

type ShareDirectoryArrayOutput struct{ *pulumi.OutputState }

func (ShareDirectoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ShareDirectory)(nil)).Elem()
}

func (o ShareDirectoryArrayOutput) ToShareDirectoryArrayOutput() ShareDirectoryArrayOutput {
	return o
}

func (o ShareDirectoryArrayOutput) ToShareDirectoryArrayOutputWithContext(ctx context.Context) ShareDirectoryArrayOutput {
	return o
}

func (o ShareDirectoryArrayOutput) Index(i pulumi.IntInput) ShareDirectoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ShareDirectory {
		return vs[0].([]*ShareDirectory)[vs[1].(int)]
	}).(ShareDirectoryOutput)
}

type ShareDirectoryMapOutput struct{ *pulumi.OutputState }

func (ShareDirectoryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ShareDirectory)(nil)).Elem()
}

func (o ShareDirectoryMapOutput) ToShareDirectoryMapOutput() ShareDirectoryMapOutput {
	return o
}

func (o ShareDirectoryMapOutput) ToShareDirectoryMapOutputWithContext(ctx context.Context) ShareDirectoryMapOutput {
	return o
}

func (o ShareDirectoryMapOutput) MapIndex(k pulumi.StringInput) ShareDirectoryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ShareDirectory {
		return vs[0].(map[string]*ShareDirectory)[vs[1].(string)]
	}).(ShareDirectoryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ShareDirectoryInput)(nil)).Elem(), &ShareDirectory{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShareDirectoryArrayInput)(nil)).Elem(), ShareDirectoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShareDirectoryMapInput)(nil)).Elem(), ShareDirectoryMap{})
	pulumi.RegisterOutputType(ShareDirectoryOutput{})
	pulumi.RegisterOutputType(ShareDirectoryArrayOutput{})
	pulumi.RegisterOutputType(ShareDirectoryMapOutput{})
}
