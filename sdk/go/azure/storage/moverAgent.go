// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Storage Mover Agent.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("East US"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleMover, err := storage.NewMover(ctx, "exampleMover", &storage.MoverArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = storage.NewMoverAgent(ctx, "exampleMoverAgent", &storage.MoverAgentArgs{
//				StorageMoverId: exampleMover.ID(),
//				ArcVirtualMachineId: exampleResourceGroup.ID().ApplyT(func(id string) (string, error) {
//					return fmt.Sprintf("%v/providers/Microsoft.HybridCompute/machines/examples-hybridComputeName", id), nil
//				}).(pulumi.StringOutput),
//				ArcVirtualMachineUuid: pulumi.String("3bb2c024-eba9-4d18-9e7a-1d772fcc5fe9"),
//				Description:           pulumi.String("Example Agent Description"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Storage Mover Agent can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:storage/moverAgent:MoverAgent example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.StorageMover/storageMovers/storageMover1/agents/agent1
//
// ```
type MoverAgent struct {
	pulumi.CustomResourceState

	// Specifies the fully qualified ID of the Hybrid Compute resource for the Storage Mover Agent. Changing this forces a new resource to be created.
	ArcVirtualMachineId pulumi.StringOutput `pulumi:"arcVirtualMachineId"`
	// Specifies the Hybrid Compute resource's unique SMBIOS ID. Changing this forces a new resource to be created.
	ArcVirtualMachineUuid pulumi.StringOutput `pulumi:"arcVirtualMachineUuid"`
	// Specifies a description for this Storage Mover Agent.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the name which should be used for this Storage Mover Agent. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the ID of the Storage Mover that this Agent should be connected to. Changing this forces a new resource to be created.
	StorageMoverId pulumi.StringOutput `pulumi:"storageMoverId"`
}

// NewMoverAgent registers a new resource with the given unique name, arguments, and options.
func NewMoverAgent(ctx *pulumi.Context,
	name string, args *MoverAgentArgs, opts ...pulumi.ResourceOption) (*MoverAgent, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ArcVirtualMachineId == nil {
		return nil, errors.New("invalid value for required argument 'ArcVirtualMachineId'")
	}
	if args.ArcVirtualMachineUuid == nil {
		return nil, errors.New("invalid value for required argument 'ArcVirtualMachineUuid'")
	}
	if args.StorageMoverId == nil {
		return nil, errors.New("invalid value for required argument 'StorageMoverId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MoverAgent
	err := ctx.RegisterResource("azure:storage/moverAgent:MoverAgent", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMoverAgent gets an existing MoverAgent resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMoverAgent(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MoverAgentState, opts ...pulumi.ResourceOption) (*MoverAgent, error) {
	var resource MoverAgent
	err := ctx.ReadResource("azure:storage/moverAgent:MoverAgent", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MoverAgent resources.
type moverAgentState struct {
	// Specifies the fully qualified ID of the Hybrid Compute resource for the Storage Mover Agent. Changing this forces a new resource to be created.
	ArcVirtualMachineId *string `pulumi:"arcVirtualMachineId"`
	// Specifies the Hybrid Compute resource's unique SMBIOS ID. Changing this forces a new resource to be created.
	ArcVirtualMachineUuid *string `pulumi:"arcVirtualMachineUuid"`
	// Specifies a description for this Storage Mover Agent.
	Description *string `pulumi:"description"`
	// Specifies the name which should be used for this Storage Mover Agent. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the ID of the Storage Mover that this Agent should be connected to. Changing this forces a new resource to be created.
	StorageMoverId *string `pulumi:"storageMoverId"`
}

type MoverAgentState struct {
	// Specifies the fully qualified ID of the Hybrid Compute resource for the Storage Mover Agent. Changing this forces a new resource to be created.
	ArcVirtualMachineId pulumi.StringPtrInput
	// Specifies the Hybrid Compute resource's unique SMBIOS ID. Changing this forces a new resource to be created.
	ArcVirtualMachineUuid pulumi.StringPtrInput
	// Specifies a description for this Storage Mover Agent.
	Description pulumi.StringPtrInput
	// Specifies the name which should be used for this Storage Mover Agent. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the ID of the Storage Mover that this Agent should be connected to. Changing this forces a new resource to be created.
	StorageMoverId pulumi.StringPtrInput
}

func (MoverAgentState) ElementType() reflect.Type {
	return reflect.TypeOf((*moverAgentState)(nil)).Elem()
}

type moverAgentArgs struct {
	// Specifies the fully qualified ID of the Hybrid Compute resource for the Storage Mover Agent. Changing this forces a new resource to be created.
	ArcVirtualMachineId string `pulumi:"arcVirtualMachineId"`
	// Specifies the Hybrid Compute resource's unique SMBIOS ID. Changing this forces a new resource to be created.
	ArcVirtualMachineUuid string `pulumi:"arcVirtualMachineUuid"`
	// Specifies a description for this Storage Mover Agent.
	Description *string `pulumi:"description"`
	// Specifies the name which should be used for this Storage Mover Agent. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the ID of the Storage Mover that this Agent should be connected to. Changing this forces a new resource to be created.
	StorageMoverId string `pulumi:"storageMoverId"`
}

// The set of arguments for constructing a MoverAgent resource.
type MoverAgentArgs struct {
	// Specifies the fully qualified ID of the Hybrid Compute resource for the Storage Mover Agent. Changing this forces a new resource to be created.
	ArcVirtualMachineId pulumi.StringInput
	// Specifies the Hybrid Compute resource's unique SMBIOS ID. Changing this forces a new resource to be created.
	ArcVirtualMachineUuid pulumi.StringInput
	// Specifies a description for this Storage Mover Agent.
	Description pulumi.StringPtrInput
	// Specifies the name which should be used for this Storage Mover Agent. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the ID of the Storage Mover that this Agent should be connected to. Changing this forces a new resource to be created.
	StorageMoverId pulumi.StringInput
}

func (MoverAgentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*moverAgentArgs)(nil)).Elem()
}

type MoverAgentInput interface {
	pulumi.Input

	ToMoverAgentOutput() MoverAgentOutput
	ToMoverAgentOutputWithContext(ctx context.Context) MoverAgentOutput
}

func (*MoverAgent) ElementType() reflect.Type {
	return reflect.TypeOf((**MoverAgent)(nil)).Elem()
}

func (i *MoverAgent) ToMoverAgentOutput() MoverAgentOutput {
	return i.ToMoverAgentOutputWithContext(context.Background())
}

func (i *MoverAgent) ToMoverAgentOutputWithContext(ctx context.Context) MoverAgentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoverAgentOutput)
}

// MoverAgentArrayInput is an input type that accepts MoverAgentArray and MoverAgentArrayOutput values.
// You can construct a concrete instance of `MoverAgentArrayInput` via:
//
//	MoverAgentArray{ MoverAgentArgs{...} }
type MoverAgentArrayInput interface {
	pulumi.Input

	ToMoverAgentArrayOutput() MoverAgentArrayOutput
	ToMoverAgentArrayOutputWithContext(context.Context) MoverAgentArrayOutput
}

type MoverAgentArray []MoverAgentInput

func (MoverAgentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MoverAgent)(nil)).Elem()
}

func (i MoverAgentArray) ToMoverAgentArrayOutput() MoverAgentArrayOutput {
	return i.ToMoverAgentArrayOutputWithContext(context.Background())
}

func (i MoverAgentArray) ToMoverAgentArrayOutputWithContext(ctx context.Context) MoverAgentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoverAgentArrayOutput)
}

// MoverAgentMapInput is an input type that accepts MoverAgentMap and MoverAgentMapOutput values.
// You can construct a concrete instance of `MoverAgentMapInput` via:
//
//	MoverAgentMap{ "key": MoverAgentArgs{...} }
type MoverAgentMapInput interface {
	pulumi.Input

	ToMoverAgentMapOutput() MoverAgentMapOutput
	ToMoverAgentMapOutputWithContext(context.Context) MoverAgentMapOutput
}

type MoverAgentMap map[string]MoverAgentInput

func (MoverAgentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MoverAgent)(nil)).Elem()
}

func (i MoverAgentMap) ToMoverAgentMapOutput() MoverAgentMapOutput {
	return i.ToMoverAgentMapOutputWithContext(context.Background())
}

func (i MoverAgentMap) ToMoverAgentMapOutputWithContext(ctx context.Context) MoverAgentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoverAgentMapOutput)
}

type MoverAgentOutput struct{ *pulumi.OutputState }

func (MoverAgentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MoverAgent)(nil)).Elem()
}

func (o MoverAgentOutput) ToMoverAgentOutput() MoverAgentOutput {
	return o
}

func (o MoverAgentOutput) ToMoverAgentOutputWithContext(ctx context.Context) MoverAgentOutput {
	return o
}

// Specifies the fully qualified ID of the Hybrid Compute resource for the Storage Mover Agent. Changing this forces a new resource to be created.
func (o MoverAgentOutput) ArcVirtualMachineId() pulumi.StringOutput {
	return o.ApplyT(func(v *MoverAgent) pulumi.StringOutput { return v.ArcVirtualMachineId }).(pulumi.StringOutput)
}

// Specifies the Hybrid Compute resource's unique SMBIOS ID. Changing this forces a new resource to be created.
func (o MoverAgentOutput) ArcVirtualMachineUuid() pulumi.StringOutput {
	return o.ApplyT(func(v *MoverAgent) pulumi.StringOutput { return v.ArcVirtualMachineUuid }).(pulumi.StringOutput)
}

// Specifies a description for this Storage Mover Agent.
func (o MoverAgentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoverAgent) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the name which should be used for this Storage Mover Agent. Changing this forces a new resource to be created.
func (o MoverAgentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MoverAgent) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the ID of the Storage Mover that this Agent should be connected to. Changing this forces a new resource to be created.
func (o MoverAgentOutput) StorageMoverId() pulumi.StringOutput {
	return o.ApplyT(func(v *MoverAgent) pulumi.StringOutput { return v.StorageMoverId }).(pulumi.StringOutput)
}

type MoverAgentArrayOutput struct{ *pulumi.OutputState }

func (MoverAgentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MoverAgent)(nil)).Elem()
}

func (o MoverAgentArrayOutput) ToMoverAgentArrayOutput() MoverAgentArrayOutput {
	return o
}

func (o MoverAgentArrayOutput) ToMoverAgentArrayOutputWithContext(ctx context.Context) MoverAgentArrayOutput {
	return o
}

func (o MoverAgentArrayOutput) Index(i pulumi.IntInput) MoverAgentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MoverAgent {
		return vs[0].([]*MoverAgent)[vs[1].(int)]
	}).(MoverAgentOutput)
}

type MoverAgentMapOutput struct{ *pulumi.OutputState }

func (MoverAgentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MoverAgent)(nil)).Elem()
}

func (o MoverAgentMapOutput) ToMoverAgentMapOutput() MoverAgentMapOutput {
	return o
}

func (o MoverAgentMapOutput) ToMoverAgentMapOutputWithContext(ctx context.Context) MoverAgentMapOutput {
	return o
}

func (o MoverAgentMapOutput) MapIndex(k pulumi.StringInput) MoverAgentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MoverAgent {
		return vs[0].(map[string]*MoverAgent)[vs[1].(string)]
	}).(MoverAgentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MoverAgentInput)(nil)).Elem(), &MoverAgent{})
	pulumi.RegisterInputType(reflect.TypeOf((*MoverAgentArrayInput)(nil)).Elem(), MoverAgentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MoverAgentMapInput)(nil)).Elem(), MoverAgentMap{})
	pulumi.RegisterOutputType(MoverAgentOutput{})
	pulumi.RegisterOutputType(MoverAgentArrayOutput{})
	pulumi.RegisterOutputType(MoverAgentMapOutput{})
}
