// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an Azure Storage Account Management Policy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	core/resourceGroup "github.com/pulumi/pulumi-azure/sdk/v1/go/azure/core/resourceGroup"
//	storage/account "github.com/pulumi/pulumi-azure/sdk/v1/go/azure/storage/account"
//	storage/managementPolicy "github.com/pulumi/pulumi-azure/sdk/v1/go/azure/storage/managementPolicy"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// example, err := core/resourceGroup.NewResourceGroup(ctx, "example", &core/resourceGroup.ResourceGroupArgs{
// Name: "resourceGroupName",
// Location: "West Europe",
// })
// if err != nil {
// return err
// }
// exampleAccount, err := storage/account.NewAccount(ctx, "example", &storage/account.AccountArgs{
// Name: "storageaccountname",
// ResourceGroupName: example.Name,
// Location: example.Location,
// AccountTier: "Standard",
// AccountReplicationType: "LRS",
// AccountKind: "BlobStorage",
// })
// if err != nil {
// return err
// }
// _, err = storage/managementPolicy.NewManagementPolicy(ctx, "example", &storage/managementPolicy.ManagementPolicyArgs{
// StorageAccountId: exampleAccount.Id,
// Rules: []interface{}{
// map[string]interface{}{
// "name": "rule1",
// "enabled": true,
// "filters": map[string]interface{}{
// "prefixMatches": []string{
// "container1/prefix1",
// },
// "blobTypes": []string{
// "blockBlob",
// },
// "matchBlobIndexTags": []map[string]interface{}{
// map[string]interface{}{
// "name": "tag1",
// "operation": "==",
// "value": "val1",
// },
// },
// },
// "actions": map[string]interface{}{
// "baseBlob": map[string]interface{}{
// "tierToCoolAfterDaysSinceModificationGreaterThan": 10,
// "tierToArchiveAfterDaysSinceModificationGreaterThan": 50,
// "deleteAfterDaysSinceModificationGreaterThan": 100,
// },
// "snapshot": map[string]interface{}{
// "deleteAfterDaysSinceCreationGreaterThan": 30,
// },
// },
// },
// map[string]interface{}{
// "name": "rule2",
// "enabled": false,
// "filters": map[string]interface{}{
// "prefixMatches": []string{
// "container2/prefix1",
// "container2/prefix2",
// },
// "blobTypes": []string{
// "blockBlob",
// },
// },
// "actions": map[string]interface{}{
// "baseBlob": map[string]interface{}{
// "tierToCoolAfterDaysSinceModificationGreaterThan": 11,
// "tierToArchiveAfterDaysSinceModificationGreaterThan": 51,
// "deleteAfterDaysSinceModificationGreaterThan": 101,
// },
// "snapshot": map[string]interface{}{
// "changeTierToArchiveAfterDaysSinceCreation": 90,
// "changeTierToCoolAfterDaysSinceCreation": 23,
// "deleteAfterDaysSinceCreationGreaterThan": 31,
// },
// "version": map[string]interface{}{
// "changeTierToArchiveAfterDaysSinceCreation": 9,
// "changeTierToCoolAfterDaysSinceCreation": 90,
// "deleteAfterDaysSinceCreation": 3,
// },
// },
// },
// },
// })
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
//
// ## Import
//
// Storage Account Management Policies can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:storage/managementPolicy:ManagementPolicy example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Storage/storageAccounts/myaccountname/managementPolicies/default
// ```
type ManagementPolicy struct {
	pulumi.CustomResourceState

	// A `rule` block as documented below.
	Rules ManagementPolicyRuleArrayOutput `pulumi:"rules"`
	// Specifies the id of the storage account to apply the management policy to. Changing this forces a new resource to be created.
	StorageAccountId pulumi.StringOutput `pulumi:"storageAccountId"`
}

// NewManagementPolicy registers a new resource with the given unique name, arguments, and options.
func NewManagementPolicy(ctx *pulumi.Context,
	name string, args *ManagementPolicyArgs, opts ...pulumi.ResourceOption) (*ManagementPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.StorageAccountId == nil {
		return nil, errors.New("invalid value for required argument 'StorageAccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ManagementPolicy
	err := ctx.RegisterResource("azure:storage/managementPolicy:ManagementPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagementPolicy gets an existing ManagementPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagementPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagementPolicyState, opts ...pulumi.ResourceOption) (*ManagementPolicy, error) {
	var resource ManagementPolicy
	err := ctx.ReadResource("azure:storage/managementPolicy:ManagementPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagementPolicy resources.
type managementPolicyState struct {
	// A `rule` block as documented below.
	Rules []ManagementPolicyRule `pulumi:"rules"`
	// Specifies the id of the storage account to apply the management policy to. Changing this forces a new resource to be created.
	StorageAccountId *string `pulumi:"storageAccountId"`
}

type ManagementPolicyState struct {
	// A `rule` block as documented below.
	Rules ManagementPolicyRuleArrayInput
	// Specifies the id of the storage account to apply the management policy to. Changing this forces a new resource to be created.
	StorageAccountId pulumi.StringPtrInput
}

func (ManagementPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*managementPolicyState)(nil)).Elem()
}

type managementPolicyArgs struct {
	// A `rule` block as documented below.
	Rules []ManagementPolicyRule `pulumi:"rules"`
	// Specifies the id of the storage account to apply the management policy to. Changing this forces a new resource to be created.
	StorageAccountId string `pulumi:"storageAccountId"`
}

// The set of arguments for constructing a ManagementPolicy resource.
type ManagementPolicyArgs struct {
	// A `rule` block as documented below.
	Rules ManagementPolicyRuleArrayInput
	// Specifies the id of the storage account to apply the management policy to. Changing this forces a new resource to be created.
	StorageAccountId pulumi.StringInput
}

func (ManagementPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managementPolicyArgs)(nil)).Elem()
}

type ManagementPolicyInput interface {
	pulumi.Input

	ToManagementPolicyOutput() ManagementPolicyOutput
	ToManagementPolicyOutputWithContext(ctx context.Context) ManagementPolicyOutput
}

func (*ManagementPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicy)(nil)).Elem()
}

func (i *ManagementPolicy) ToManagementPolicyOutput() ManagementPolicyOutput {
	return i.ToManagementPolicyOutputWithContext(context.Background())
}

func (i *ManagementPolicy) ToManagementPolicyOutputWithContext(ctx context.Context) ManagementPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyOutput)
}

// ManagementPolicyArrayInput is an input type that accepts ManagementPolicyArray and ManagementPolicyArrayOutput values.
// You can construct a concrete instance of `ManagementPolicyArrayInput` via:
//
//	ManagementPolicyArray{ ManagementPolicyArgs{...} }
type ManagementPolicyArrayInput interface {
	pulumi.Input

	ToManagementPolicyArrayOutput() ManagementPolicyArrayOutput
	ToManagementPolicyArrayOutputWithContext(context.Context) ManagementPolicyArrayOutput
}

type ManagementPolicyArray []ManagementPolicyInput

func (ManagementPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagementPolicy)(nil)).Elem()
}

func (i ManagementPolicyArray) ToManagementPolicyArrayOutput() ManagementPolicyArrayOutput {
	return i.ToManagementPolicyArrayOutputWithContext(context.Background())
}

func (i ManagementPolicyArray) ToManagementPolicyArrayOutputWithContext(ctx context.Context) ManagementPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyArrayOutput)
}

// ManagementPolicyMapInput is an input type that accepts ManagementPolicyMap and ManagementPolicyMapOutput values.
// You can construct a concrete instance of `ManagementPolicyMapInput` via:
//
//	ManagementPolicyMap{ "key": ManagementPolicyArgs{...} }
type ManagementPolicyMapInput interface {
	pulumi.Input

	ToManagementPolicyMapOutput() ManagementPolicyMapOutput
	ToManagementPolicyMapOutputWithContext(context.Context) ManagementPolicyMapOutput
}

type ManagementPolicyMap map[string]ManagementPolicyInput

func (ManagementPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagementPolicy)(nil)).Elem()
}

func (i ManagementPolicyMap) ToManagementPolicyMapOutput() ManagementPolicyMapOutput {
	return i.ToManagementPolicyMapOutputWithContext(context.Background())
}

func (i ManagementPolicyMap) ToManagementPolicyMapOutputWithContext(ctx context.Context) ManagementPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementPolicyMapOutput)
}

type ManagementPolicyOutput struct{ *pulumi.OutputState }

func (ManagementPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementPolicy)(nil)).Elem()
}

func (o ManagementPolicyOutput) ToManagementPolicyOutput() ManagementPolicyOutput {
	return o
}

func (o ManagementPolicyOutput) ToManagementPolicyOutputWithContext(ctx context.Context) ManagementPolicyOutput {
	return o
}

// A `rule` block as documented below.
func (o ManagementPolicyOutput) Rules() ManagementPolicyRuleArrayOutput {
	return o.ApplyT(func(v *ManagementPolicy) ManagementPolicyRuleArrayOutput { return v.Rules }).(ManagementPolicyRuleArrayOutput)
}

// Specifies the id of the storage account to apply the management policy to. Changing this forces a new resource to be created.
func (o ManagementPolicyOutput) StorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementPolicy) pulumi.StringOutput { return v.StorageAccountId }).(pulumi.StringOutput)
}

type ManagementPolicyArrayOutput struct{ *pulumi.OutputState }

func (ManagementPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagementPolicy)(nil)).Elem()
}

func (o ManagementPolicyArrayOutput) ToManagementPolicyArrayOutput() ManagementPolicyArrayOutput {
	return o
}

func (o ManagementPolicyArrayOutput) ToManagementPolicyArrayOutputWithContext(ctx context.Context) ManagementPolicyArrayOutput {
	return o
}

func (o ManagementPolicyArrayOutput) Index(i pulumi.IntInput) ManagementPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ManagementPolicy {
		return vs[0].([]*ManagementPolicy)[vs[1].(int)]
	}).(ManagementPolicyOutput)
}

type ManagementPolicyMapOutput struct{ *pulumi.OutputState }

func (ManagementPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagementPolicy)(nil)).Elem()
}

func (o ManagementPolicyMapOutput) ToManagementPolicyMapOutput() ManagementPolicyMapOutput {
	return o
}

func (o ManagementPolicyMapOutput) ToManagementPolicyMapOutputWithContext(ctx context.Context) ManagementPolicyMapOutput {
	return o
}

func (o ManagementPolicyMapOutput) MapIndex(k pulumi.StringInput) ManagementPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ManagementPolicy {
		return vs[0].(map[string]*ManagementPolicy)[vs[1].(string)]
	}).(ManagementPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementPolicyInput)(nil)).Elem(), &ManagementPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementPolicyArrayInput)(nil)).Elem(), ManagementPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementPolicyMapInput)(nil)).Elem(), ManagementPolicyMap{})
	pulumi.RegisterOutputType(ManagementPolicyOutput{})
	pulumi.RegisterOutputType(ManagementPolicyArrayOutput{})
	pulumi.RegisterOutputType(ManagementPolicyMapOutput{})
}
