// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages network rules inside of a Azure Storage Account.
//
// > **NOTE:** Network Rules can be defined either directly on the `storage.Account` resource, or using the `storage.AccountNetworkRules` resource - but the two cannot be used together. Spurious changes will occur if both are used against the same Storage Account.
//
// > **NOTE:** Only one `storage.AccountNetworkRules` can be tied to an `storage.Account`. Spurious changes will occur if more than `storage.AccountNetworkRules` is tied to the same `storage.Account`.
//
// > **NOTE:** Deleting this resource updates the storage account back to the default values it had when the storage account was created.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/core"
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/network"
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/storage"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
// 			Location: pulumi.String("West Europe"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "exampleVirtualNetwork", &network.VirtualNetworkArgs{
// 			AddressSpaces: pulumi.StringArray{
// 				pulumi.String("10.0.0.0/16"),
// 			},
// 			Location:          exampleResourceGroup.Location,
// 			ResourceGroupName: exampleResourceGroup.Name,
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = network.NewSubnet(ctx, "exampleSubnet", &network.SubnetArgs{
// 			ResourceGroupName:  exampleResourceGroup.Name,
// 			VirtualNetworkName: exampleVirtualNetwork.Name,
// 			AddressPrefixes: pulumi.StringArray{
// 				pulumi.String("10.0.2.0/24"),
// 			},
// 			ServiceEndpoints: pulumi.StringArray{
// 				pulumi.String("Microsoft.Storage"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = storage.NewAccount(ctx, "exampleAccount", &storage.AccountArgs{
// 			ResourceGroupName:      exampleResourceGroup.Name,
// 			Location:               exampleResourceGroup.Location,
// 			AccountTier:            pulumi.String("Standard"),
// 			AccountReplicationType: pulumi.String("GRS"),
// 			Tags: pulumi.StringMap{
// 				"environment": pulumi.String("staging"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = storage.NewAccountNetworkRules(ctx, "test", &storage.AccountNetworkRulesArgs{
// 			ResourceGroupName:  pulumi.Any(azurerm_resource_group.Test.Name),
// 			StorageAccountName: pulumi.Any(azurerm_storage_account.Test.Name),
// 			DefaultAction:      pulumi.String("Allow"),
// 			IpRules: pulumi.StringArray{
// 				pulumi.String("127.0.0.1"),
// 			},
// 			VirtualNetworkSubnetIds: pulumi.StringArray{
// 				pulumi.Any(azurerm_subnet.Test.Id),
// 			},
// 			Bypasses: pulumi.StringArray{
// 				pulumi.String("Metrics"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Storage Account Network Rules can be imported using the `resource id`, e.g.
//
// ```sh
//  $ pulumi import azure:storage/accountNetworkRules:AccountNetworkRules storageAcc1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.Storage/storageAccounts/myaccount
// ```
type AccountNetworkRulesType struct {
	pulumi.CustomResourceState

	// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Valid options are any combination of `Logging`, `Metrics`, `AzureServices`, or `None`.
	Bypasses pulumi.StringArrayOutput `pulumi:"bypasses"`
	// Specifies the default action of allow or deny when no other rules match. Valid options are `Deny` or `Allow`.
	DefaultAction pulumi.StringOutput `pulumi:"defaultAction"`
	// List of public IP or IP ranges in CIDR Format. Only IPV4 addresses are allowed. Private IP address ranges (as defined in [RFC 1918](https://tools.ietf.org/html/rfc1918#section-3)) are not allowed.
	IpRules pulumi.StringArrayOutput `pulumi:"ipRules"`
	// One or More `privateLinkAccess` block as defined below.
	PrivateLinkAccessRules AccountNetworkRulesPrivateLinkAccessRuleArrayOutput `pulumi:"privateLinkAccessRules"`
	// The name of the resource group in which to create the storage account. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// Specifies the name of the storage account. Changing this forces a new resource to be created. This must be unique across the entire Azure service, not just within the resource group.
	StorageAccountName pulumi.StringOutput `pulumi:"storageAccountName"`
	// A list of virtual network subnet ids to to secure the storage account.
	VirtualNetworkSubnetIds pulumi.StringArrayOutput `pulumi:"virtualNetworkSubnetIds"`
}

// NewAccountNetworkRulesType registers a new resource with the given unique name, arguments, and options.
func NewAccountNetworkRulesType(ctx *pulumi.Context,
	name string, args *AccountNetworkRulesTypeArgs, opts ...pulumi.ResourceOption) (*AccountNetworkRulesType, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DefaultAction == nil {
		return nil, errors.New("invalid value for required argument 'DefaultAction'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.StorageAccountName == nil {
		return nil, errors.New("invalid value for required argument 'StorageAccountName'")
	}
	var resource AccountNetworkRulesType
	err := ctx.RegisterResource("azure:storage/accountNetworkRules:AccountNetworkRules", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountNetworkRulesType gets an existing AccountNetworkRulesType resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountNetworkRulesType(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountNetworkRulesTypeState, opts ...pulumi.ResourceOption) (*AccountNetworkRulesType, error) {
	var resource AccountNetworkRulesType
	err := ctx.ReadResource("azure:storage/accountNetworkRules:AccountNetworkRules", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountNetworkRulesType resources.
type accountNetworkRulesTypeState struct {
	// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Valid options are any combination of `Logging`, `Metrics`, `AzureServices`, or `None`.
	Bypasses []string `pulumi:"bypasses"`
	// Specifies the default action of allow or deny when no other rules match. Valid options are `Deny` or `Allow`.
	DefaultAction *string `pulumi:"defaultAction"`
	// List of public IP or IP ranges in CIDR Format. Only IPV4 addresses are allowed. Private IP address ranges (as defined in [RFC 1918](https://tools.ietf.org/html/rfc1918#section-3)) are not allowed.
	IpRules []string `pulumi:"ipRules"`
	// One or More `privateLinkAccess` block as defined below.
	PrivateLinkAccessRules []AccountNetworkRulesPrivateLinkAccessRule `pulumi:"privateLinkAccessRules"`
	// The name of the resource group in which to create the storage account. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// Specifies the name of the storage account. Changing this forces a new resource to be created. This must be unique across the entire Azure service, not just within the resource group.
	StorageAccountName *string `pulumi:"storageAccountName"`
	// A list of virtual network subnet ids to to secure the storage account.
	VirtualNetworkSubnetIds []string `pulumi:"virtualNetworkSubnetIds"`
}

type AccountNetworkRulesTypeState struct {
	// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Valid options are any combination of `Logging`, `Metrics`, `AzureServices`, or `None`.
	Bypasses pulumi.StringArrayInput
	// Specifies the default action of allow or deny when no other rules match. Valid options are `Deny` or `Allow`.
	DefaultAction pulumi.StringPtrInput
	// List of public IP or IP ranges in CIDR Format. Only IPV4 addresses are allowed. Private IP address ranges (as defined in [RFC 1918](https://tools.ietf.org/html/rfc1918#section-3)) are not allowed.
	IpRules pulumi.StringArrayInput
	// One or More `privateLinkAccess` block as defined below.
	PrivateLinkAccessRules AccountNetworkRulesPrivateLinkAccessRuleArrayInput
	// The name of the resource group in which to create the storage account. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// Specifies the name of the storage account. Changing this forces a new resource to be created. This must be unique across the entire Azure service, not just within the resource group.
	StorageAccountName pulumi.StringPtrInput
	// A list of virtual network subnet ids to to secure the storage account.
	VirtualNetworkSubnetIds pulumi.StringArrayInput
}

func (AccountNetworkRulesTypeState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountNetworkRulesTypeState)(nil)).Elem()
}

type accountNetworkRulesTypeArgs struct {
	// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Valid options are any combination of `Logging`, `Metrics`, `AzureServices`, or `None`.
	Bypasses []string `pulumi:"bypasses"`
	// Specifies the default action of allow or deny when no other rules match. Valid options are `Deny` or `Allow`.
	DefaultAction string `pulumi:"defaultAction"`
	// List of public IP or IP ranges in CIDR Format. Only IPV4 addresses are allowed. Private IP address ranges (as defined in [RFC 1918](https://tools.ietf.org/html/rfc1918#section-3)) are not allowed.
	IpRules []string `pulumi:"ipRules"`
	// One or More `privateLinkAccess` block as defined below.
	PrivateLinkAccessRules []AccountNetworkRulesPrivateLinkAccessRule `pulumi:"privateLinkAccessRules"`
	// The name of the resource group in which to create the storage account. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Specifies the name of the storage account. Changing this forces a new resource to be created. This must be unique across the entire Azure service, not just within the resource group.
	StorageAccountName string `pulumi:"storageAccountName"`
	// A list of virtual network subnet ids to to secure the storage account.
	VirtualNetworkSubnetIds []string `pulumi:"virtualNetworkSubnetIds"`
}

// The set of arguments for constructing a AccountNetworkRulesType resource.
type AccountNetworkRulesTypeArgs struct {
	// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Valid options are any combination of `Logging`, `Metrics`, `AzureServices`, or `None`.
	Bypasses pulumi.StringArrayInput
	// Specifies the default action of allow or deny when no other rules match. Valid options are `Deny` or `Allow`.
	DefaultAction pulumi.StringInput
	// List of public IP or IP ranges in CIDR Format. Only IPV4 addresses are allowed. Private IP address ranges (as defined in [RFC 1918](https://tools.ietf.org/html/rfc1918#section-3)) are not allowed.
	IpRules pulumi.StringArrayInput
	// One or More `privateLinkAccess` block as defined below.
	PrivateLinkAccessRules AccountNetworkRulesPrivateLinkAccessRuleArrayInput
	// The name of the resource group in which to create the storage account. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// Specifies the name of the storage account. Changing this forces a new resource to be created. This must be unique across the entire Azure service, not just within the resource group.
	StorageAccountName pulumi.StringInput
	// A list of virtual network subnet ids to to secure the storage account.
	VirtualNetworkSubnetIds pulumi.StringArrayInput
}

func (AccountNetworkRulesTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountNetworkRulesTypeArgs)(nil)).Elem()
}

type AccountNetworkRulesTypeInput interface {
	pulumi.Input

	ToAccountNetworkRulesTypeOutput() AccountNetworkRulesTypeOutput
	ToAccountNetworkRulesTypeOutputWithContext(ctx context.Context) AccountNetworkRulesTypeOutput
}

func (*AccountNetworkRulesType) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountNetworkRulesType)(nil))
}

func (i *AccountNetworkRulesType) ToAccountNetworkRulesTypeOutput() AccountNetworkRulesTypeOutput {
	return i.ToAccountNetworkRulesTypeOutputWithContext(context.Background())
}

func (i *AccountNetworkRulesType) ToAccountNetworkRulesTypeOutputWithContext(ctx context.Context) AccountNetworkRulesTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountNetworkRulesTypeOutput)
}

func (i *AccountNetworkRulesType) ToAccountNetworkRulesTypePtrOutput() AccountNetworkRulesTypePtrOutput {
	return i.ToAccountNetworkRulesTypePtrOutputWithContext(context.Background())
}

func (i *AccountNetworkRulesType) ToAccountNetworkRulesTypePtrOutputWithContext(ctx context.Context) AccountNetworkRulesTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountNetworkRulesTypePtrOutput)
}

type AccountNetworkRulesTypePtrInput interface {
	pulumi.Input

	ToAccountNetworkRulesTypePtrOutput() AccountNetworkRulesTypePtrOutput
	ToAccountNetworkRulesTypePtrOutputWithContext(ctx context.Context) AccountNetworkRulesTypePtrOutput
}

type accountNetworkRulesTypePtrType AccountNetworkRulesTypeArgs

func (*accountNetworkRulesTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountNetworkRulesType)(nil))
}

func (i *accountNetworkRulesTypePtrType) ToAccountNetworkRulesTypePtrOutput() AccountNetworkRulesTypePtrOutput {
	return i.ToAccountNetworkRulesTypePtrOutputWithContext(context.Background())
}

func (i *accountNetworkRulesTypePtrType) ToAccountNetworkRulesTypePtrOutputWithContext(ctx context.Context) AccountNetworkRulesTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountNetworkRulesTypePtrOutput)
}

// AccountNetworkRulesTypeArrayInput is an input type that accepts AccountNetworkRulesTypeArray and AccountNetworkRulesTypeArrayOutput values.
// You can construct a concrete instance of `AccountNetworkRulesTypeArrayInput` via:
//
//          AccountNetworkRulesTypeArray{ AccountNetworkRulesTypeArgs{...} }
type AccountNetworkRulesTypeArrayInput interface {
	pulumi.Input

	ToAccountNetworkRulesTypeArrayOutput() AccountNetworkRulesTypeArrayOutput
	ToAccountNetworkRulesTypeArrayOutputWithContext(context.Context) AccountNetworkRulesTypeArrayOutput
}

type AccountNetworkRulesTypeArray []AccountNetworkRulesTypeInput

func (AccountNetworkRulesTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountNetworkRulesType)(nil)).Elem()
}

func (i AccountNetworkRulesTypeArray) ToAccountNetworkRulesTypeArrayOutput() AccountNetworkRulesTypeArrayOutput {
	return i.ToAccountNetworkRulesTypeArrayOutputWithContext(context.Background())
}

func (i AccountNetworkRulesTypeArray) ToAccountNetworkRulesTypeArrayOutputWithContext(ctx context.Context) AccountNetworkRulesTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountNetworkRulesTypeArrayOutput)
}

// AccountNetworkRulesTypeMapInput is an input type that accepts AccountNetworkRulesTypeMap and AccountNetworkRulesTypeMapOutput values.
// You can construct a concrete instance of `AccountNetworkRulesTypeMapInput` via:
//
//          AccountNetworkRulesTypeMap{ "key": AccountNetworkRulesTypeArgs{...} }
type AccountNetworkRulesTypeMapInput interface {
	pulumi.Input

	ToAccountNetworkRulesTypeMapOutput() AccountNetworkRulesTypeMapOutput
	ToAccountNetworkRulesTypeMapOutputWithContext(context.Context) AccountNetworkRulesTypeMapOutput
}

type AccountNetworkRulesTypeMap map[string]AccountNetworkRulesTypeInput

func (AccountNetworkRulesTypeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountNetworkRulesType)(nil)).Elem()
}

func (i AccountNetworkRulesTypeMap) ToAccountNetworkRulesTypeMapOutput() AccountNetworkRulesTypeMapOutput {
	return i.ToAccountNetworkRulesTypeMapOutputWithContext(context.Background())
}

func (i AccountNetworkRulesTypeMap) ToAccountNetworkRulesTypeMapOutputWithContext(ctx context.Context) AccountNetworkRulesTypeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountNetworkRulesTypeMapOutput)
}

type AccountNetworkRulesTypeOutput struct{ *pulumi.OutputState }

func (AccountNetworkRulesTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountNetworkRulesType)(nil))
}

func (o AccountNetworkRulesTypeOutput) ToAccountNetworkRulesTypeOutput() AccountNetworkRulesTypeOutput {
	return o
}

func (o AccountNetworkRulesTypeOutput) ToAccountNetworkRulesTypeOutputWithContext(ctx context.Context) AccountNetworkRulesTypeOutput {
	return o
}

func (o AccountNetworkRulesTypeOutput) ToAccountNetworkRulesTypePtrOutput() AccountNetworkRulesTypePtrOutput {
	return o.ToAccountNetworkRulesTypePtrOutputWithContext(context.Background())
}

func (o AccountNetworkRulesTypeOutput) ToAccountNetworkRulesTypePtrOutputWithContext(ctx context.Context) AccountNetworkRulesTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountNetworkRulesType) *AccountNetworkRulesType {
		return &v
	}).(AccountNetworkRulesTypePtrOutput)
}

type AccountNetworkRulesTypePtrOutput struct{ *pulumi.OutputState }

func (AccountNetworkRulesTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountNetworkRulesType)(nil))
}

func (o AccountNetworkRulesTypePtrOutput) ToAccountNetworkRulesTypePtrOutput() AccountNetworkRulesTypePtrOutput {
	return o
}

func (o AccountNetworkRulesTypePtrOutput) ToAccountNetworkRulesTypePtrOutputWithContext(ctx context.Context) AccountNetworkRulesTypePtrOutput {
	return o
}

func (o AccountNetworkRulesTypePtrOutput) Elem() AccountNetworkRulesTypeOutput {
	return o.ApplyT(func(v *AccountNetworkRulesType) AccountNetworkRulesType {
		if v != nil {
			return *v
		}
		var ret AccountNetworkRulesType
		return ret
	}).(AccountNetworkRulesTypeOutput)
}

type AccountNetworkRulesTypeArrayOutput struct{ *pulumi.OutputState }

func (AccountNetworkRulesTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountNetworkRulesType)(nil))
}

func (o AccountNetworkRulesTypeArrayOutput) ToAccountNetworkRulesTypeArrayOutput() AccountNetworkRulesTypeArrayOutput {
	return o
}

func (o AccountNetworkRulesTypeArrayOutput) ToAccountNetworkRulesTypeArrayOutputWithContext(ctx context.Context) AccountNetworkRulesTypeArrayOutput {
	return o
}

func (o AccountNetworkRulesTypeArrayOutput) Index(i pulumi.IntInput) AccountNetworkRulesTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountNetworkRulesType {
		return vs[0].([]AccountNetworkRulesType)[vs[1].(int)]
	}).(AccountNetworkRulesTypeOutput)
}

type AccountNetworkRulesTypeMapOutput struct{ *pulumi.OutputState }

func (AccountNetworkRulesTypeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AccountNetworkRulesType)(nil))
}

func (o AccountNetworkRulesTypeMapOutput) ToAccountNetworkRulesTypeMapOutput() AccountNetworkRulesTypeMapOutput {
	return o
}

func (o AccountNetworkRulesTypeMapOutput) ToAccountNetworkRulesTypeMapOutputWithContext(ctx context.Context) AccountNetworkRulesTypeMapOutput {
	return o
}

func (o AccountNetworkRulesTypeMapOutput) MapIndex(k pulumi.StringInput) AccountNetworkRulesTypeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AccountNetworkRulesType {
		return vs[0].(map[string]AccountNetworkRulesType)[vs[1].(string)]
	}).(AccountNetworkRulesTypeOutput)
}

func init() {
	pulumi.RegisterOutputType(AccountNetworkRulesTypeOutput{})
	pulumi.RegisterOutputType(AccountNetworkRulesTypePtrOutput{})
	pulumi.RegisterOutputType(AccountNetworkRulesTypeArrayOutput{})
	pulumi.RegisterOutputType(AccountNetworkRulesTypeMapOutput{})
}
