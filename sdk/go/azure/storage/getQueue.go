// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Storage Queue.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := storage.LookupQueue(ctx, &storage.LookupQueueArgs{
//				Name:               "example-queue-name",
//				StorageAccountName: pulumi.StringRef("example-storage-account-name"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This data source uses the following Azure API Providers:
//
// * `Microsoft.Storage` - 2023-05-01
func LookupQueue(ctx *pulumi.Context, args *LookupQueueArgs, opts ...pulumi.InvokeOption) (*LookupQueueResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupQueueResult
	err := ctx.Invoke("azure:storage/getQueue:getQueue", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getQueue.
type LookupQueueArgs struct {
	// A mapping of MetaData for this Queue.
	Metadata map[string]string `pulumi:"metadata"`
	// The name of the Queue.
	Name string `pulumi:"name"`
	// The name of the Storage Account where the Queue exists. This property will become Required in version 5.0 of the Provider.
	//
	// > **Note:** One of `storageAccountName` or `storageAccountId` must be specified. When specifying `storageAccountId` the resource will use the Resource Manager API, rather than the Data Plane API.
	StorageAccountId *string `pulumi:"storageAccountId"`
	// The name of the Storage Account where the Queue exists. This property is deprecated in favour of `storageAccountId`.
	//
	// Deprecated: the `storageAccountName` property has been deprecated in favour of `storageAccountId` and will be removed in version 5.0 of the Provider.
	StorageAccountName *string `pulumi:"storageAccountName"`
}

// A collection of values returned by getQueue.
type LookupQueueResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A mapping of MetaData for this Queue.
	Metadata map[string]string `pulumi:"metadata"`
	Name     string            `pulumi:"name"`
	// The Resource Manager ID of this Storage Queue.
	//
	// Deprecated: the `resourceManagerId` property has been deprecated in favour of `id` and will be removed in version 5.0 of the Provider.
	ResourceManagerId string  `pulumi:"resourceManagerId"`
	StorageAccountId  *string `pulumi:"storageAccountId"`
	// Deprecated: the `storageAccountName` property has been deprecated in favour of `storageAccountId` and will be removed in version 5.0 of the Provider.
	StorageAccountName *string `pulumi:"storageAccountName"`
	// The data plane URL of the Storage Queue in the format of `<storage queue endpoint>/<queue name>`. E.g. `https://example.queue.core.windows.net/queue1`.
	Url string `pulumi:"url"`
}

func LookupQueueOutput(ctx *pulumi.Context, args LookupQueueOutputArgs, opts ...pulumi.InvokeOption) LookupQueueResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupQueueResultOutput, error) {
			args := v.(LookupQueueArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure:storage/getQueue:getQueue", args, LookupQueueResultOutput{}, options).(LookupQueueResultOutput), nil
		}).(LookupQueueResultOutput)
}

// A collection of arguments for invoking getQueue.
type LookupQueueOutputArgs struct {
	// A mapping of MetaData for this Queue.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// The name of the Queue.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Storage Account where the Queue exists. This property will become Required in version 5.0 of the Provider.
	//
	// > **Note:** One of `storageAccountName` or `storageAccountId` must be specified. When specifying `storageAccountId` the resource will use the Resource Manager API, rather than the Data Plane API.
	StorageAccountId pulumi.StringPtrInput `pulumi:"storageAccountId"`
	// The name of the Storage Account where the Queue exists. This property is deprecated in favour of `storageAccountId`.
	//
	// Deprecated: the `storageAccountName` property has been deprecated in favour of `storageAccountId` and will be removed in version 5.0 of the Provider.
	StorageAccountName pulumi.StringPtrInput `pulumi:"storageAccountName"`
}

func (LookupQueueOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQueueArgs)(nil)).Elem()
}

// A collection of values returned by getQueue.
type LookupQueueResultOutput struct{ *pulumi.OutputState }

func (LookupQueueResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQueueResult)(nil)).Elem()
}

func (o LookupQueueResultOutput) ToLookupQueueResultOutput() LookupQueueResultOutput {
	return o
}

func (o LookupQueueResultOutput) ToLookupQueueResultOutputWithContext(ctx context.Context) LookupQueueResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupQueueResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueueResult) string { return v.Id }).(pulumi.StringOutput)
}

// A mapping of MetaData for this Queue.
func (o LookupQueueResultOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupQueueResult) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o LookupQueueResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueueResult) string { return v.Name }).(pulumi.StringOutput)
}

// The Resource Manager ID of this Storage Queue.
//
// Deprecated: the `resourceManagerId` property has been deprecated in favour of `id` and will be removed in version 5.0 of the Provider.
func (o LookupQueueResultOutput) ResourceManagerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueueResult) string { return v.ResourceManagerId }).(pulumi.StringOutput)
}

func (o LookupQueueResultOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupQueueResult) *string { return v.StorageAccountId }).(pulumi.StringPtrOutput)
}

// Deprecated: the `storageAccountName` property has been deprecated in favour of `storageAccountId` and will be removed in version 5.0 of the Provider.
func (o LookupQueueResultOutput) StorageAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupQueueResult) *string { return v.StorageAccountName }).(pulumi.StringPtrOutput)
}

// The data plane URL of the Storage Queue in the format of `<storage queue endpoint>/<queue name>`. E.g. `https://example.queue.core.windows.net/queue1`.
func (o LookupQueueResultOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v LookupQueueResult) string { return v.Url }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupQueueResultOutput{})
}
