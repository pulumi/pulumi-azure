// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerservice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Node Pool within a Kubernetes Cluster
//
// > **NOTE:** Multiple Node Pools are only supported when the Kubernetes Cluster is using Virtual Machine Scale Sets.
//
// ## Example Usage
//
// This example provisions a basic Kubernetes Node Pool.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/containerservice"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleKubernetesCluster, err := containerservice.NewKubernetesCluster(ctx, "exampleKubernetesCluster", &containerservice.KubernetesClusterArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				DnsPrefix:         pulumi.String("exampleaks1"),
//				DefaultNodePool: &containerservice.KubernetesClusterDefaultNodePoolArgs{
//					Name:      pulumi.String("default"),
//					NodeCount: pulumi.Int(1),
//					VmSize:    pulumi.String("Standard_D2_v2"),
//				},
//				ServicePrincipal: &containerservice.KubernetesClusterServicePrincipalArgs{
//					ClientId:     pulumi.String("00000000-0000-0000-0000-000000000000"),
//					ClientSecret: pulumi.String("00000000000000000000000000000000"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = containerservice.NewKubernetesClusterNodePool(ctx, "exampleKubernetesClusterNodePool", &containerservice.KubernetesClusterNodePoolArgs{
//				KubernetesClusterId: exampleKubernetesCluster.ID(),
//				VmSize:              pulumi.String("Standard_DS2_v2"),
//				NodeCount:           pulumi.Int(1),
//				Tags: pulumi.StringMap{
//					"Environment": pulumi.String("Production"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Kubernetes Cluster Node Pools can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:containerservice/kubernetesClusterNodePool:KubernetesClusterNodePool pool1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.ContainerService/managedClusters/cluster1/agentPools/pool1
//
// ```
type KubernetesClusterNodePool struct {
	pulumi.CustomResourceState

	// Specifies the ID of the Capacity Reservation Group where this Node Pool should exist. Changing this forces a new resource to be created.
	CapacityReservationGroupId pulumi.StringPtrOutput `pulumi:"capacityReservationGroupId"`
	// Specifies whether to trust a Custom CA.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/CustomCATrustPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/custom-certificate-authority) for more information.
	CustomCaTrustEnabled pulumi.BoolPtrOutput `pulumi:"customCaTrustEnabled"`
	// Whether to enable [auto-scaler](https://docs.microsoft.com/azure/aks/cluster-autoscaler).
	EnableAutoScaling pulumi.BoolPtrOutput `pulumi:"enableAutoScaling"`
	// Should the nodes in this Node Pool have host encryption enabled? Changing this forces a new resource to be created.
	//
	// > **NOTE:** Additional fields must be configured depending on the value of this field - see below.
	EnableHostEncryption pulumi.BoolPtrOutput `pulumi:"enableHostEncryption"`
	// Should each node have a Public IP Address? Changing this forces a new resource to be created.
	EnableNodePublicIp pulumi.BoolPtrOutput `pulumi:"enableNodePublicIp"`
	// The Eviction Policy which should be used for Virtual Machines within the Virtual Machine Scale Set powering this Node Pool. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.
	//
	// > **Note:** An Eviction Policy can only be configured when `priority` is set to `Spot` and will default to `Delete` unless otherwise specified.
	EvictionPolicy pulumi.StringPtrOutput `pulumi:"evictionPolicy"`
	// Should the nodes in this Node Pool have Federal Information Processing Standard enabled? Changing this forces a new resource to be created.
	//
	// > **Note:** FIPS support is in Public Preview - more information and details on how to opt into the Preview can be found in [this article](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview).
	FipsEnabled pulumi.BoolPtrOutput `pulumi:"fipsEnabled"`
	// The fully qualified resource ID of the Dedicated Host Group to provision virtual machines from. Changing this forces a new resource to be created.
	HostGroupId pulumi.StringPtrOutput `pulumi:"hostGroupId"`
	// A `kubeletConfig` block as defined below. Changing this forces a new resource to be created.
	KubeletConfig KubernetesClusterNodePoolKubeletConfigPtrOutput `pulumi:"kubeletConfig"`
	// The type of disk used by kubelet. Possible values are `OS` and `Temporary`.
	KubeletDiskType pulumi.StringOutput `pulumi:"kubeletDiskType"`
	// The ID of the Kubernetes Cluster where this Node Pool should exist. Changing this forces a new resource to be created.
	//
	// > **NOTE:** The type of Default Node Pool for the Kubernetes Cluster must be `VirtualMachineScaleSets` to attach multiple node pools.
	KubernetesClusterId pulumi.StringOutput `pulumi:"kubernetesClusterId"`
	// A `linuxOsConfig` block as defined below. Changing this forces a new resource to be created.
	LinuxOsConfig KubernetesClusterNodePoolLinuxOsConfigPtrOutput `pulumi:"linuxOsConfig"`
	// The maximum number of nodes which should exist within this Node Pool. Valid values are between `0` and `1000` and must be greater than or equal to `minCount`.
	MaxCount pulumi.IntPtrOutput `pulumi:"maxCount"`
	// The maximum number of pods that can run on each agent. Changing this forces a new resource to be created.
	MaxPods pulumi.IntOutput `pulumi:"maxPods"`
	// A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It cannot be specified for Windows nodes and must be a static string (i.e. will be printed raw and not executed as a script). Changing this forces a new resource to be created.
	MessageOfTheDay pulumi.StringPtrOutput `pulumi:"messageOfTheDay"`
	// The minimum number of nodes which should exist within this Node Pool. Valid values are between `0` and `1000` and must be less than or equal to `maxCount`.
	MinCount pulumi.IntPtrOutput `pulumi:"minCount"`
	// Should this Node Pool be used for System or User resources? Possible values are `System` and `User`. Defaults to `User`.
	Mode pulumi.StringPtrOutput `pulumi:"mode"`
	// The name of the Node Pool which should be created within the Kubernetes Cluster. Changing this forces a new resource to be created.
	//
	// > **NOTE:** A Windows Node Pool cannot have a `name` longer than 6 characters.
	Name pulumi.StringOutput `pulumi:"name"`
	// The number of nodes which should exist within this Node Pool. Valid values are between `0` and `1000` (inclusive) for user pools and between `1` and `1000` (inclusive) for system pools.
	NodeCount pulumi.IntOutput `pulumi:"nodeCount"`
	// A map of Kubernetes labels which should be applied to nodes in this Node Pool.
	NodeLabels pulumi.StringMapOutput `pulumi:"nodeLabels"`
	// A `nodeNetworkProfile` block as documented below.
	NodeNetworkProfile KubernetesClusterNodePoolNodeNetworkProfilePtrOutput `pulumi:"nodeNetworkProfile"`
	// Resource ID for the Public IP Addresses Prefix for the nodes in this Node Pool. `enableNodePublicIp` should be `true`. Changing this forces a new resource to be created.
	NodePublicIpPrefixId pulumi.StringPtrOutput `pulumi:"nodePublicIpPrefixId"`
	// A list of Kubernetes taints which should be applied to nodes in the agent pool (e.g `key=value:NoSchedule`). Changing this forces a new resource to be created.
	NodeTaints pulumi.StringArrayOutput `pulumi:"nodeTaints"`
	// Version of Kubernetes used for the Agents. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as `1.22` are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in [the documentation](https://docs.microsoft.com/en-us/azure/aks/supported-kubernetes-versions?tabs=azure-cli#alias-minor-version).
	//
	// > **Note:** This version must be supported by the Kubernetes Cluster - as such the version of Kubernetes used on the Cluster/Control Plane may need to be upgraded first.
	OrchestratorVersion pulumi.StringOutput `pulumi:"orchestratorVersion"`
	// The Agent Operating System disk size in GB. Changing this forces a new resource to be created.
	OsDiskSizeGb pulumi.IntOutput `pulumi:"osDiskSizeGb"`
	// The type of disk which should be used for the Operating System. Possible values are `Ephemeral` and `Managed`. Defaults to `Managed`. Changing this forces a new resource to be created.
	OsDiskType pulumi.StringPtrOutput `pulumi:"osDiskType"`
	// Specifies the OS SKU used by the agent pool. Possible values are `AzureLinux`, `CBLMariner`, `Mariner`, `Ubuntu`, `Windows2019` and `Windows2022`. If not specified, the default is `Ubuntu` if OSType=Linux or `Windows2019` if OSType=Windows. And the default Windows OSSKU will be changed to `Windows2022` after Windows2019 is deprecated. Changing this forces a new resource to be created.
	OsSku pulumi.StringOutput `pulumi:"osSku"`
	// The Operating System which should be used for this Node Pool. Changing this forces a new resource to be created. Possible values are `Linux` and `Windows`. Defaults to `Linux`.
	OsType pulumi.StringPtrOutput `pulumi:"osType"`
	// The ID of the Subnet where the pods in the Node Pool should exist. Changing this forces a new resource to be created.
	PodSubnetId pulumi.StringPtrOutput `pulumi:"podSubnetId"`
	// The Priority for Virtual Machines within the Virtual Machine Scale Set that powers this Node Pool. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this forces a new resource to be created.
	Priority pulumi.StringPtrOutput `pulumi:"priority"`
	// The ID of the Proximity Placement Group where the Virtual Machine Scale Set that powers this Node Pool will be placed. Changing this forces a new resource to be created.
	//
	// > **Note:** When setting `priority` to Spot - you must configure an `evictionPolicy`, `spotMaxPrice` and add the applicable `nodeLabels` and `nodeTaints` [as per the Azure Documentation](https://docs.microsoft.com/azure/aks/spot-node-pool).
	ProximityPlacementGroupId pulumi.StringPtrOutput `pulumi:"proximityPlacementGroupId"`
	// Specifies how the node pool should deal with scaled-down nodes. Allowed values are `Delete` and `Deallocate`. Defaults to `Delete`.
	ScaleDownMode pulumi.StringPtrOutput `pulumi:"scaleDownMode"`
	// The ID of the Snapshot which should be used to create this Node Pool. Changing this forces a new resource to be created.
	SnapshotId pulumi.StringPtrOutput `pulumi:"snapshotId"`
	// The maximum price you're willing to pay in USD per Virtual Machine. Valid values are `-1` (the current on-demand price for a Virtual Machine) or a positive value with up to five decimal places. Changing this forces a new resource to be created.
	//
	// > **Note:** This field can only be configured when `priority` is set to `Spot`.
	SpotMaxPrice pulumi.Float64PtrOutput `pulumi:"spotMaxPrice"`
	// A mapping of tags to assign to the resource.
	//
	// > At this time there's a bug in the AKS API where Tags for a Node Pool are not stored in the correct case - you may wish to use [`ignoreChanges`](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) functionality to ignore changes to the casing until this is fixed in the AKS API.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Used to specify whether the UltraSSD is enabled in the Node Pool. Defaults to `false`. See [the documentation](https://docs.microsoft.com/azure/aks/use-ultra-disks) for more information. Changing this forces a new resource to be created.
	UltraSsdEnabled pulumi.BoolPtrOutput `pulumi:"ultraSsdEnabled"`
	// A `upgradeSettings` block as documented below.
	UpgradeSettings KubernetesClusterNodePoolUpgradeSettingsPtrOutput `pulumi:"upgradeSettings"`
	// The SKU which should be used for the Virtual Machines used in this Node Pool. Changing this forces a new resource to be created.
	VmSize pulumi.StringOutput `pulumi:"vmSize"`
	// The ID of the Subnet where this Node Pool should exist. Changing this forces a new resource to be created.
	//
	// > **NOTE:** A route table must be configured on this Subnet.
	VnetSubnetId pulumi.StringPtrOutput `pulumi:"vnetSubnetId"`
	// A `windowsProfile` block as documented below. Changing this forces a new resource to be created.
	WindowsProfile KubernetesClusterNodePoolWindowsProfilePtrOutput `pulumi:"windowsProfile"`
	// Used to specify the workload runtime. Allowed values are `OCIContainer`, `WasmWasi` and `KataMshvVmIsolation`.
	//
	// > **Note:** WebAssembly System Interface node pools are in Public Preview - more information and details on how to opt into the preview can be found in [this article](https://docs.microsoft.com/azure/aks/use-wasi-node-pools)
	//
	// > **Note:** Pod Sandboxing / KataVM Isolation node pools are in Public Preview - more information and details on how to opt into the preview can be found in [this article](https://learn.microsoft.com/azure/aks/use-pod-sandboxing)
	WorkloadRuntime pulumi.StringPtrOutput `pulumi:"workloadRuntime"`
	// Specifies a list of Availability Zones in which this Kubernetes Cluster Node Pool should be located. Changing this forces a new Kubernetes Cluster Node Pool to be created.
	Zones pulumi.StringArrayOutput `pulumi:"zones"`
}

// NewKubernetesClusterNodePool registers a new resource with the given unique name, arguments, and options.
func NewKubernetesClusterNodePool(ctx *pulumi.Context,
	name string, args *KubernetesClusterNodePoolArgs, opts ...pulumi.ResourceOption) (*KubernetesClusterNodePool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.KubernetesClusterId == nil {
		return nil, errors.New("invalid value for required argument 'KubernetesClusterId'")
	}
	if args.VmSize == nil {
		return nil, errors.New("invalid value for required argument 'VmSize'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource KubernetesClusterNodePool
	err := ctx.RegisterResource("azure:containerservice/kubernetesClusterNodePool:KubernetesClusterNodePool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKubernetesClusterNodePool gets an existing KubernetesClusterNodePool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKubernetesClusterNodePool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KubernetesClusterNodePoolState, opts ...pulumi.ResourceOption) (*KubernetesClusterNodePool, error) {
	var resource KubernetesClusterNodePool
	err := ctx.ReadResource("azure:containerservice/kubernetesClusterNodePool:KubernetesClusterNodePool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KubernetesClusterNodePool resources.
type kubernetesClusterNodePoolState struct {
	// Specifies the ID of the Capacity Reservation Group where this Node Pool should exist. Changing this forces a new resource to be created.
	CapacityReservationGroupId *string `pulumi:"capacityReservationGroupId"`
	// Specifies whether to trust a Custom CA.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/CustomCATrustPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/custom-certificate-authority) for more information.
	CustomCaTrustEnabled *bool `pulumi:"customCaTrustEnabled"`
	// Whether to enable [auto-scaler](https://docs.microsoft.com/azure/aks/cluster-autoscaler).
	EnableAutoScaling *bool `pulumi:"enableAutoScaling"`
	// Should the nodes in this Node Pool have host encryption enabled? Changing this forces a new resource to be created.
	//
	// > **NOTE:** Additional fields must be configured depending on the value of this field - see below.
	EnableHostEncryption *bool `pulumi:"enableHostEncryption"`
	// Should each node have a Public IP Address? Changing this forces a new resource to be created.
	EnableNodePublicIp *bool `pulumi:"enableNodePublicIp"`
	// The Eviction Policy which should be used for Virtual Machines within the Virtual Machine Scale Set powering this Node Pool. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.
	//
	// > **Note:** An Eviction Policy can only be configured when `priority` is set to `Spot` and will default to `Delete` unless otherwise specified.
	EvictionPolicy *string `pulumi:"evictionPolicy"`
	// Should the nodes in this Node Pool have Federal Information Processing Standard enabled? Changing this forces a new resource to be created.
	//
	// > **Note:** FIPS support is in Public Preview - more information and details on how to opt into the Preview can be found in [this article](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview).
	FipsEnabled *bool `pulumi:"fipsEnabled"`
	// The fully qualified resource ID of the Dedicated Host Group to provision virtual machines from. Changing this forces a new resource to be created.
	HostGroupId *string `pulumi:"hostGroupId"`
	// A `kubeletConfig` block as defined below. Changing this forces a new resource to be created.
	KubeletConfig *KubernetesClusterNodePoolKubeletConfig `pulumi:"kubeletConfig"`
	// The type of disk used by kubelet. Possible values are `OS` and `Temporary`.
	KubeletDiskType *string `pulumi:"kubeletDiskType"`
	// The ID of the Kubernetes Cluster where this Node Pool should exist. Changing this forces a new resource to be created.
	//
	// > **NOTE:** The type of Default Node Pool for the Kubernetes Cluster must be `VirtualMachineScaleSets` to attach multiple node pools.
	KubernetesClusterId *string `pulumi:"kubernetesClusterId"`
	// A `linuxOsConfig` block as defined below. Changing this forces a new resource to be created.
	LinuxOsConfig *KubernetesClusterNodePoolLinuxOsConfig `pulumi:"linuxOsConfig"`
	// The maximum number of nodes which should exist within this Node Pool. Valid values are between `0` and `1000` and must be greater than or equal to `minCount`.
	MaxCount *int `pulumi:"maxCount"`
	// The maximum number of pods that can run on each agent. Changing this forces a new resource to be created.
	MaxPods *int `pulumi:"maxPods"`
	// A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It cannot be specified for Windows nodes and must be a static string (i.e. will be printed raw and not executed as a script). Changing this forces a new resource to be created.
	MessageOfTheDay *string `pulumi:"messageOfTheDay"`
	// The minimum number of nodes which should exist within this Node Pool. Valid values are between `0` and `1000` and must be less than or equal to `maxCount`.
	MinCount *int `pulumi:"minCount"`
	// Should this Node Pool be used for System or User resources? Possible values are `System` and `User`. Defaults to `User`.
	Mode *string `pulumi:"mode"`
	// The name of the Node Pool which should be created within the Kubernetes Cluster. Changing this forces a new resource to be created.
	//
	// > **NOTE:** A Windows Node Pool cannot have a `name` longer than 6 characters.
	Name *string `pulumi:"name"`
	// The number of nodes which should exist within this Node Pool. Valid values are between `0` and `1000` (inclusive) for user pools and between `1` and `1000` (inclusive) for system pools.
	NodeCount *int `pulumi:"nodeCount"`
	// A map of Kubernetes labels which should be applied to nodes in this Node Pool.
	NodeLabels map[string]string `pulumi:"nodeLabels"`
	// A `nodeNetworkProfile` block as documented below.
	NodeNetworkProfile *KubernetesClusterNodePoolNodeNetworkProfile `pulumi:"nodeNetworkProfile"`
	// Resource ID for the Public IP Addresses Prefix for the nodes in this Node Pool. `enableNodePublicIp` should be `true`. Changing this forces a new resource to be created.
	NodePublicIpPrefixId *string `pulumi:"nodePublicIpPrefixId"`
	// A list of Kubernetes taints which should be applied to nodes in the agent pool (e.g `key=value:NoSchedule`). Changing this forces a new resource to be created.
	NodeTaints []string `pulumi:"nodeTaints"`
	// Version of Kubernetes used for the Agents. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as `1.22` are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in [the documentation](https://docs.microsoft.com/en-us/azure/aks/supported-kubernetes-versions?tabs=azure-cli#alias-minor-version).
	//
	// > **Note:** This version must be supported by the Kubernetes Cluster - as such the version of Kubernetes used on the Cluster/Control Plane may need to be upgraded first.
	OrchestratorVersion *string `pulumi:"orchestratorVersion"`
	// The Agent Operating System disk size in GB. Changing this forces a new resource to be created.
	OsDiskSizeGb *int `pulumi:"osDiskSizeGb"`
	// The type of disk which should be used for the Operating System. Possible values are `Ephemeral` and `Managed`. Defaults to `Managed`. Changing this forces a new resource to be created.
	OsDiskType *string `pulumi:"osDiskType"`
	// Specifies the OS SKU used by the agent pool. Possible values are `AzureLinux`, `CBLMariner`, `Mariner`, `Ubuntu`, `Windows2019` and `Windows2022`. If not specified, the default is `Ubuntu` if OSType=Linux or `Windows2019` if OSType=Windows. And the default Windows OSSKU will be changed to `Windows2022` after Windows2019 is deprecated. Changing this forces a new resource to be created.
	OsSku *string `pulumi:"osSku"`
	// The Operating System which should be used for this Node Pool. Changing this forces a new resource to be created. Possible values are `Linux` and `Windows`. Defaults to `Linux`.
	OsType *string `pulumi:"osType"`
	// The ID of the Subnet where the pods in the Node Pool should exist. Changing this forces a new resource to be created.
	PodSubnetId *string `pulumi:"podSubnetId"`
	// The Priority for Virtual Machines within the Virtual Machine Scale Set that powers this Node Pool. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this forces a new resource to be created.
	Priority *string `pulumi:"priority"`
	// The ID of the Proximity Placement Group where the Virtual Machine Scale Set that powers this Node Pool will be placed. Changing this forces a new resource to be created.
	//
	// > **Note:** When setting `priority` to Spot - you must configure an `evictionPolicy`, `spotMaxPrice` and add the applicable `nodeLabels` and `nodeTaints` [as per the Azure Documentation](https://docs.microsoft.com/azure/aks/spot-node-pool).
	ProximityPlacementGroupId *string `pulumi:"proximityPlacementGroupId"`
	// Specifies how the node pool should deal with scaled-down nodes. Allowed values are `Delete` and `Deallocate`. Defaults to `Delete`.
	ScaleDownMode *string `pulumi:"scaleDownMode"`
	// The ID of the Snapshot which should be used to create this Node Pool. Changing this forces a new resource to be created.
	SnapshotId *string `pulumi:"snapshotId"`
	// The maximum price you're willing to pay in USD per Virtual Machine. Valid values are `-1` (the current on-demand price for a Virtual Machine) or a positive value with up to five decimal places. Changing this forces a new resource to be created.
	//
	// > **Note:** This field can only be configured when `priority` is set to `Spot`.
	SpotMaxPrice *float64 `pulumi:"spotMaxPrice"`
	// A mapping of tags to assign to the resource.
	//
	// > At this time there's a bug in the AKS API where Tags for a Node Pool are not stored in the correct case - you may wish to use [`ignoreChanges`](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) functionality to ignore changes to the casing until this is fixed in the AKS API.
	Tags map[string]string `pulumi:"tags"`
	// Used to specify whether the UltraSSD is enabled in the Node Pool. Defaults to `false`. See [the documentation](https://docs.microsoft.com/azure/aks/use-ultra-disks) for more information. Changing this forces a new resource to be created.
	UltraSsdEnabled *bool `pulumi:"ultraSsdEnabled"`
	// A `upgradeSettings` block as documented below.
	UpgradeSettings *KubernetesClusterNodePoolUpgradeSettings `pulumi:"upgradeSettings"`
	// The SKU which should be used for the Virtual Machines used in this Node Pool. Changing this forces a new resource to be created.
	VmSize *string `pulumi:"vmSize"`
	// The ID of the Subnet where this Node Pool should exist. Changing this forces a new resource to be created.
	//
	// > **NOTE:** A route table must be configured on this Subnet.
	VnetSubnetId *string `pulumi:"vnetSubnetId"`
	// A `windowsProfile` block as documented below. Changing this forces a new resource to be created.
	WindowsProfile *KubernetesClusterNodePoolWindowsProfile `pulumi:"windowsProfile"`
	// Used to specify the workload runtime. Allowed values are `OCIContainer`, `WasmWasi` and `KataMshvVmIsolation`.
	//
	// > **Note:** WebAssembly System Interface node pools are in Public Preview - more information and details on how to opt into the preview can be found in [this article](https://docs.microsoft.com/azure/aks/use-wasi-node-pools)
	//
	// > **Note:** Pod Sandboxing / KataVM Isolation node pools are in Public Preview - more information and details on how to opt into the preview can be found in [this article](https://learn.microsoft.com/azure/aks/use-pod-sandboxing)
	WorkloadRuntime *string `pulumi:"workloadRuntime"`
	// Specifies a list of Availability Zones in which this Kubernetes Cluster Node Pool should be located. Changing this forces a new Kubernetes Cluster Node Pool to be created.
	Zones []string `pulumi:"zones"`
}

type KubernetesClusterNodePoolState struct {
	// Specifies the ID of the Capacity Reservation Group where this Node Pool should exist. Changing this forces a new resource to be created.
	CapacityReservationGroupId pulumi.StringPtrInput
	// Specifies whether to trust a Custom CA.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/CustomCATrustPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/custom-certificate-authority) for more information.
	CustomCaTrustEnabled pulumi.BoolPtrInput
	// Whether to enable [auto-scaler](https://docs.microsoft.com/azure/aks/cluster-autoscaler).
	EnableAutoScaling pulumi.BoolPtrInput
	// Should the nodes in this Node Pool have host encryption enabled? Changing this forces a new resource to be created.
	//
	// > **NOTE:** Additional fields must be configured depending on the value of this field - see below.
	EnableHostEncryption pulumi.BoolPtrInput
	// Should each node have a Public IP Address? Changing this forces a new resource to be created.
	EnableNodePublicIp pulumi.BoolPtrInput
	// The Eviction Policy which should be used for Virtual Machines within the Virtual Machine Scale Set powering this Node Pool. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.
	//
	// > **Note:** An Eviction Policy can only be configured when `priority` is set to `Spot` and will default to `Delete` unless otherwise specified.
	EvictionPolicy pulumi.StringPtrInput
	// Should the nodes in this Node Pool have Federal Information Processing Standard enabled? Changing this forces a new resource to be created.
	//
	// > **Note:** FIPS support is in Public Preview - more information and details on how to opt into the Preview can be found in [this article](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview).
	FipsEnabled pulumi.BoolPtrInput
	// The fully qualified resource ID of the Dedicated Host Group to provision virtual machines from. Changing this forces a new resource to be created.
	HostGroupId pulumi.StringPtrInput
	// A `kubeletConfig` block as defined below. Changing this forces a new resource to be created.
	KubeletConfig KubernetesClusterNodePoolKubeletConfigPtrInput
	// The type of disk used by kubelet. Possible values are `OS` and `Temporary`.
	KubeletDiskType pulumi.StringPtrInput
	// The ID of the Kubernetes Cluster where this Node Pool should exist. Changing this forces a new resource to be created.
	//
	// > **NOTE:** The type of Default Node Pool for the Kubernetes Cluster must be `VirtualMachineScaleSets` to attach multiple node pools.
	KubernetesClusterId pulumi.StringPtrInput
	// A `linuxOsConfig` block as defined below. Changing this forces a new resource to be created.
	LinuxOsConfig KubernetesClusterNodePoolLinuxOsConfigPtrInput
	// The maximum number of nodes which should exist within this Node Pool. Valid values are between `0` and `1000` and must be greater than or equal to `minCount`.
	MaxCount pulumi.IntPtrInput
	// The maximum number of pods that can run on each agent. Changing this forces a new resource to be created.
	MaxPods pulumi.IntPtrInput
	// A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It cannot be specified for Windows nodes and must be a static string (i.e. will be printed raw and not executed as a script). Changing this forces a new resource to be created.
	MessageOfTheDay pulumi.StringPtrInput
	// The minimum number of nodes which should exist within this Node Pool. Valid values are between `0` and `1000` and must be less than or equal to `maxCount`.
	MinCount pulumi.IntPtrInput
	// Should this Node Pool be used for System or User resources? Possible values are `System` and `User`. Defaults to `User`.
	Mode pulumi.StringPtrInput
	// The name of the Node Pool which should be created within the Kubernetes Cluster. Changing this forces a new resource to be created.
	//
	// > **NOTE:** A Windows Node Pool cannot have a `name` longer than 6 characters.
	Name pulumi.StringPtrInput
	// The number of nodes which should exist within this Node Pool. Valid values are between `0` and `1000` (inclusive) for user pools and between `1` and `1000` (inclusive) for system pools.
	NodeCount pulumi.IntPtrInput
	// A map of Kubernetes labels which should be applied to nodes in this Node Pool.
	NodeLabels pulumi.StringMapInput
	// A `nodeNetworkProfile` block as documented below.
	NodeNetworkProfile KubernetesClusterNodePoolNodeNetworkProfilePtrInput
	// Resource ID for the Public IP Addresses Prefix for the nodes in this Node Pool. `enableNodePublicIp` should be `true`. Changing this forces a new resource to be created.
	NodePublicIpPrefixId pulumi.StringPtrInput
	// A list of Kubernetes taints which should be applied to nodes in the agent pool (e.g `key=value:NoSchedule`). Changing this forces a new resource to be created.
	NodeTaints pulumi.StringArrayInput
	// Version of Kubernetes used for the Agents. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as `1.22` are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in [the documentation](https://docs.microsoft.com/en-us/azure/aks/supported-kubernetes-versions?tabs=azure-cli#alias-minor-version).
	//
	// > **Note:** This version must be supported by the Kubernetes Cluster - as such the version of Kubernetes used on the Cluster/Control Plane may need to be upgraded first.
	OrchestratorVersion pulumi.StringPtrInput
	// The Agent Operating System disk size in GB. Changing this forces a new resource to be created.
	OsDiskSizeGb pulumi.IntPtrInput
	// The type of disk which should be used for the Operating System. Possible values are `Ephemeral` and `Managed`. Defaults to `Managed`. Changing this forces a new resource to be created.
	OsDiskType pulumi.StringPtrInput
	// Specifies the OS SKU used by the agent pool. Possible values are `AzureLinux`, `CBLMariner`, `Mariner`, `Ubuntu`, `Windows2019` and `Windows2022`. If not specified, the default is `Ubuntu` if OSType=Linux or `Windows2019` if OSType=Windows. And the default Windows OSSKU will be changed to `Windows2022` after Windows2019 is deprecated. Changing this forces a new resource to be created.
	OsSku pulumi.StringPtrInput
	// The Operating System which should be used for this Node Pool. Changing this forces a new resource to be created. Possible values are `Linux` and `Windows`. Defaults to `Linux`.
	OsType pulumi.StringPtrInput
	// The ID of the Subnet where the pods in the Node Pool should exist. Changing this forces a new resource to be created.
	PodSubnetId pulumi.StringPtrInput
	// The Priority for Virtual Machines within the Virtual Machine Scale Set that powers this Node Pool. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this forces a new resource to be created.
	Priority pulumi.StringPtrInput
	// The ID of the Proximity Placement Group where the Virtual Machine Scale Set that powers this Node Pool will be placed. Changing this forces a new resource to be created.
	//
	// > **Note:** When setting `priority` to Spot - you must configure an `evictionPolicy`, `spotMaxPrice` and add the applicable `nodeLabels` and `nodeTaints` [as per the Azure Documentation](https://docs.microsoft.com/azure/aks/spot-node-pool).
	ProximityPlacementGroupId pulumi.StringPtrInput
	// Specifies how the node pool should deal with scaled-down nodes. Allowed values are `Delete` and `Deallocate`. Defaults to `Delete`.
	ScaleDownMode pulumi.StringPtrInput
	// The ID of the Snapshot which should be used to create this Node Pool. Changing this forces a new resource to be created.
	SnapshotId pulumi.StringPtrInput
	// The maximum price you're willing to pay in USD per Virtual Machine. Valid values are `-1` (the current on-demand price for a Virtual Machine) or a positive value with up to five decimal places. Changing this forces a new resource to be created.
	//
	// > **Note:** This field can only be configured when `priority` is set to `Spot`.
	SpotMaxPrice pulumi.Float64PtrInput
	// A mapping of tags to assign to the resource.
	//
	// > At this time there's a bug in the AKS API where Tags for a Node Pool are not stored in the correct case - you may wish to use [`ignoreChanges`](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) functionality to ignore changes to the casing until this is fixed in the AKS API.
	Tags pulumi.StringMapInput
	// Used to specify whether the UltraSSD is enabled in the Node Pool. Defaults to `false`. See [the documentation](https://docs.microsoft.com/azure/aks/use-ultra-disks) for more information. Changing this forces a new resource to be created.
	UltraSsdEnabled pulumi.BoolPtrInput
	// A `upgradeSettings` block as documented below.
	UpgradeSettings KubernetesClusterNodePoolUpgradeSettingsPtrInput
	// The SKU which should be used for the Virtual Machines used in this Node Pool. Changing this forces a new resource to be created.
	VmSize pulumi.StringPtrInput
	// The ID of the Subnet where this Node Pool should exist. Changing this forces a new resource to be created.
	//
	// > **NOTE:** A route table must be configured on this Subnet.
	VnetSubnetId pulumi.StringPtrInput
	// A `windowsProfile` block as documented below. Changing this forces a new resource to be created.
	WindowsProfile KubernetesClusterNodePoolWindowsProfilePtrInput
	// Used to specify the workload runtime. Allowed values are `OCIContainer`, `WasmWasi` and `KataMshvVmIsolation`.
	//
	// > **Note:** WebAssembly System Interface node pools are in Public Preview - more information and details on how to opt into the preview can be found in [this article](https://docs.microsoft.com/azure/aks/use-wasi-node-pools)
	//
	// > **Note:** Pod Sandboxing / KataVM Isolation node pools are in Public Preview - more information and details on how to opt into the preview can be found in [this article](https://learn.microsoft.com/azure/aks/use-pod-sandboxing)
	WorkloadRuntime pulumi.StringPtrInput
	// Specifies a list of Availability Zones in which this Kubernetes Cluster Node Pool should be located. Changing this forces a new Kubernetes Cluster Node Pool to be created.
	Zones pulumi.StringArrayInput
}

func (KubernetesClusterNodePoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesClusterNodePoolState)(nil)).Elem()
}

type kubernetesClusterNodePoolArgs struct {
	// Specifies the ID of the Capacity Reservation Group where this Node Pool should exist. Changing this forces a new resource to be created.
	CapacityReservationGroupId *string `pulumi:"capacityReservationGroupId"`
	// Specifies whether to trust a Custom CA.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/CustomCATrustPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/custom-certificate-authority) for more information.
	CustomCaTrustEnabled *bool `pulumi:"customCaTrustEnabled"`
	// Whether to enable [auto-scaler](https://docs.microsoft.com/azure/aks/cluster-autoscaler).
	EnableAutoScaling *bool `pulumi:"enableAutoScaling"`
	// Should the nodes in this Node Pool have host encryption enabled? Changing this forces a new resource to be created.
	//
	// > **NOTE:** Additional fields must be configured depending on the value of this field - see below.
	EnableHostEncryption *bool `pulumi:"enableHostEncryption"`
	// Should each node have a Public IP Address? Changing this forces a new resource to be created.
	EnableNodePublicIp *bool `pulumi:"enableNodePublicIp"`
	// The Eviction Policy which should be used for Virtual Machines within the Virtual Machine Scale Set powering this Node Pool. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.
	//
	// > **Note:** An Eviction Policy can only be configured when `priority` is set to `Spot` and will default to `Delete` unless otherwise specified.
	EvictionPolicy *string `pulumi:"evictionPolicy"`
	// Should the nodes in this Node Pool have Federal Information Processing Standard enabled? Changing this forces a new resource to be created.
	//
	// > **Note:** FIPS support is in Public Preview - more information and details on how to opt into the Preview can be found in [this article](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview).
	FipsEnabled *bool `pulumi:"fipsEnabled"`
	// The fully qualified resource ID of the Dedicated Host Group to provision virtual machines from. Changing this forces a new resource to be created.
	HostGroupId *string `pulumi:"hostGroupId"`
	// A `kubeletConfig` block as defined below. Changing this forces a new resource to be created.
	KubeletConfig *KubernetesClusterNodePoolKubeletConfig `pulumi:"kubeletConfig"`
	// The type of disk used by kubelet. Possible values are `OS` and `Temporary`.
	KubeletDiskType *string `pulumi:"kubeletDiskType"`
	// The ID of the Kubernetes Cluster where this Node Pool should exist. Changing this forces a new resource to be created.
	//
	// > **NOTE:** The type of Default Node Pool for the Kubernetes Cluster must be `VirtualMachineScaleSets` to attach multiple node pools.
	KubernetesClusterId string `pulumi:"kubernetesClusterId"`
	// A `linuxOsConfig` block as defined below. Changing this forces a new resource to be created.
	LinuxOsConfig *KubernetesClusterNodePoolLinuxOsConfig `pulumi:"linuxOsConfig"`
	// The maximum number of nodes which should exist within this Node Pool. Valid values are between `0` and `1000` and must be greater than or equal to `minCount`.
	MaxCount *int `pulumi:"maxCount"`
	// The maximum number of pods that can run on each agent. Changing this forces a new resource to be created.
	MaxPods *int `pulumi:"maxPods"`
	// A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It cannot be specified for Windows nodes and must be a static string (i.e. will be printed raw and not executed as a script). Changing this forces a new resource to be created.
	MessageOfTheDay *string `pulumi:"messageOfTheDay"`
	// The minimum number of nodes which should exist within this Node Pool. Valid values are between `0` and `1000` and must be less than or equal to `maxCount`.
	MinCount *int `pulumi:"minCount"`
	// Should this Node Pool be used for System or User resources? Possible values are `System` and `User`. Defaults to `User`.
	Mode *string `pulumi:"mode"`
	// The name of the Node Pool which should be created within the Kubernetes Cluster. Changing this forces a new resource to be created.
	//
	// > **NOTE:** A Windows Node Pool cannot have a `name` longer than 6 characters.
	Name *string `pulumi:"name"`
	// The number of nodes which should exist within this Node Pool. Valid values are between `0` and `1000` (inclusive) for user pools and between `1` and `1000` (inclusive) for system pools.
	NodeCount *int `pulumi:"nodeCount"`
	// A map of Kubernetes labels which should be applied to nodes in this Node Pool.
	NodeLabels map[string]string `pulumi:"nodeLabels"`
	// A `nodeNetworkProfile` block as documented below.
	NodeNetworkProfile *KubernetesClusterNodePoolNodeNetworkProfile `pulumi:"nodeNetworkProfile"`
	// Resource ID for the Public IP Addresses Prefix for the nodes in this Node Pool. `enableNodePublicIp` should be `true`. Changing this forces a new resource to be created.
	NodePublicIpPrefixId *string `pulumi:"nodePublicIpPrefixId"`
	// A list of Kubernetes taints which should be applied to nodes in the agent pool (e.g `key=value:NoSchedule`). Changing this forces a new resource to be created.
	NodeTaints []string `pulumi:"nodeTaints"`
	// Version of Kubernetes used for the Agents. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as `1.22` are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in [the documentation](https://docs.microsoft.com/en-us/azure/aks/supported-kubernetes-versions?tabs=azure-cli#alias-minor-version).
	//
	// > **Note:** This version must be supported by the Kubernetes Cluster - as such the version of Kubernetes used on the Cluster/Control Plane may need to be upgraded first.
	OrchestratorVersion *string `pulumi:"orchestratorVersion"`
	// The Agent Operating System disk size in GB. Changing this forces a new resource to be created.
	OsDiskSizeGb *int `pulumi:"osDiskSizeGb"`
	// The type of disk which should be used for the Operating System. Possible values are `Ephemeral` and `Managed`. Defaults to `Managed`. Changing this forces a new resource to be created.
	OsDiskType *string `pulumi:"osDiskType"`
	// Specifies the OS SKU used by the agent pool. Possible values are `AzureLinux`, `CBLMariner`, `Mariner`, `Ubuntu`, `Windows2019` and `Windows2022`. If not specified, the default is `Ubuntu` if OSType=Linux or `Windows2019` if OSType=Windows. And the default Windows OSSKU will be changed to `Windows2022` after Windows2019 is deprecated. Changing this forces a new resource to be created.
	OsSku *string `pulumi:"osSku"`
	// The Operating System which should be used for this Node Pool. Changing this forces a new resource to be created. Possible values are `Linux` and `Windows`. Defaults to `Linux`.
	OsType *string `pulumi:"osType"`
	// The ID of the Subnet where the pods in the Node Pool should exist. Changing this forces a new resource to be created.
	PodSubnetId *string `pulumi:"podSubnetId"`
	// The Priority for Virtual Machines within the Virtual Machine Scale Set that powers this Node Pool. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this forces a new resource to be created.
	Priority *string `pulumi:"priority"`
	// The ID of the Proximity Placement Group where the Virtual Machine Scale Set that powers this Node Pool will be placed. Changing this forces a new resource to be created.
	//
	// > **Note:** When setting `priority` to Spot - you must configure an `evictionPolicy`, `spotMaxPrice` and add the applicable `nodeLabels` and `nodeTaints` [as per the Azure Documentation](https://docs.microsoft.com/azure/aks/spot-node-pool).
	ProximityPlacementGroupId *string `pulumi:"proximityPlacementGroupId"`
	// Specifies how the node pool should deal with scaled-down nodes. Allowed values are `Delete` and `Deallocate`. Defaults to `Delete`.
	ScaleDownMode *string `pulumi:"scaleDownMode"`
	// The ID of the Snapshot which should be used to create this Node Pool. Changing this forces a new resource to be created.
	SnapshotId *string `pulumi:"snapshotId"`
	// The maximum price you're willing to pay in USD per Virtual Machine. Valid values are `-1` (the current on-demand price for a Virtual Machine) or a positive value with up to five decimal places. Changing this forces a new resource to be created.
	//
	// > **Note:** This field can only be configured when `priority` is set to `Spot`.
	SpotMaxPrice *float64 `pulumi:"spotMaxPrice"`
	// A mapping of tags to assign to the resource.
	//
	// > At this time there's a bug in the AKS API where Tags for a Node Pool are not stored in the correct case - you may wish to use [`ignoreChanges`](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) functionality to ignore changes to the casing until this is fixed in the AKS API.
	Tags map[string]string `pulumi:"tags"`
	// Used to specify whether the UltraSSD is enabled in the Node Pool. Defaults to `false`. See [the documentation](https://docs.microsoft.com/azure/aks/use-ultra-disks) for more information. Changing this forces a new resource to be created.
	UltraSsdEnabled *bool `pulumi:"ultraSsdEnabled"`
	// A `upgradeSettings` block as documented below.
	UpgradeSettings *KubernetesClusterNodePoolUpgradeSettings `pulumi:"upgradeSettings"`
	// The SKU which should be used for the Virtual Machines used in this Node Pool. Changing this forces a new resource to be created.
	VmSize string `pulumi:"vmSize"`
	// The ID of the Subnet where this Node Pool should exist. Changing this forces a new resource to be created.
	//
	// > **NOTE:** A route table must be configured on this Subnet.
	VnetSubnetId *string `pulumi:"vnetSubnetId"`
	// A `windowsProfile` block as documented below. Changing this forces a new resource to be created.
	WindowsProfile *KubernetesClusterNodePoolWindowsProfile `pulumi:"windowsProfile"`
	// Used to specify the workload runtime. Allowed values are `OCIContainer`, `WasmWasi` and `KataMshvVmIsolation`.
	//
	// > **Note:** WebAssembly System Interface node pools are in Public Preview - more information and details on how to opt into the preview can be found in [this article](https://docs.microsoft.com/azure/aks/use-wasi-node-pools)
	//
	// > **Note:** Pod Sandboxing / KataVM Isolation node pools are in Public Preview - more information and details on how to opt into the preview can be found in [this article](https://learn.microsoft.com/azure/aks/use-pod-sandboxing)
	WorkloadRuntime *string `pulumi:"workloadRuntime"`
	// Specifies a list of Availability Zones in which this Kubernetes Cluster Node Pool should be located. Changing this forces a new Kubernetes Cluster Node Pool to be created.
	Zones []string `pulumi:"zones"`
}

// The set of arguments for constructing a KubernetesClusterNodePool resource.
type KubernetesClusterNodePoolArgs struct {
	// Specifies the ID of the Capacity Reservation Group where this Node Pool should exist. Changing this forces a new resource to be created.
	CapacityReservationGroupId pulumi.StringPtrInput
	// Specifies whether to trust a Custom CA.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/CustomCATrustPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/custom-certificate-authority) for more information.
	CustomCaTrustEnabled pulumi.BoolPtrInput
	// Whether to enable [auto-scaler](https://docs.microsoft.com/azure/aks/cluster-autoscaler).
	EnableAutoScaling pulumi.BoolPtrInput
	// Should the nodes in this Node Pool have host encryption enabled? Changing this forces a new resource to be created.
	//
	// > **NOTE:** Additional fields must be configured depending on the value of this field - see below.
	EnableHostEncryption pulumi.BoolPtrInput
	// Should each node have a Public IP Address? Changing this forces a new resource to be created.
	EnableNodePublicIp pulumi.BoolPtrInput
	// The Eviction Policy which should be used for Virtual Machines within the Virtual Machine Scale Set powering this Node Pool. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.
	//
	// > **Note:** An Eviction Policy can only be configured when `priority` is set to `Spot` and will default to `Delete` unless otherwise specified.
	EvictionPolicy pulumi.StringPtrInput
	// Should the nodes in this Node Pool have Federal Information Processing Standard enabled? Changing this forces a new resource to be created.
	//
	// > **Note:** FIPS support is in Public Preview - more information and details on how to opt into the Preview can be found in [this article](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview).
	FipsEnabled pulumi.BoolPtrInput
	// The fully qualified resource ID of the Dedicated Host Group to provision virtual machines from. Changing this forces a new resource to be created.
	HostGroupId pulumi.StringPtrInput
	// A `kubeletConfig` block as defined below. Changing this forces a new resource to be created.
	KubeletConfig KubernetesClusterNodePoolKubeletConfigPtrInput
	// The type of disk used by kubelet. Possible values are `OS` and `Temporary`.
	KubeletDiskType pulumi.StringPtrInput
	// The ID of the Kubernetes Cluster where this Node Pool should exist. Changing this forces a new resource to be created.
	//
	// > **NOTE:** The type of Default Node Pool for the Kubernetes Cluster must be `VirtualMachineScaleSets` to attach multiple node pools.
	KubernetesClusterId pulumi.StringInput
	// A `linuxOsConfig` block as defined below. Changing this forces a new resource to be created.
	LinuxOsConfig KubernetesClusterNodePoolLinuxOsConfigPtrInput
	// The maximum number of nodes which should exist within this Node Pool. Valid values are between `0` and `1000` and must be greater than or equal to `minCount`.
	MaxCount pulumi.IntPtrInput
	// The maximum number of pods that can run on each agent. Changing this forces a new resource to be created.
	MaxPods pulumi.IntPtrInput
	// A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It cannot be specified for Windows nodes and must be a static string (i.e. will be printed raw and not executed as a script). Changing this forces a new resource to be created.
	MessageOfTheDay pulumi.StringPtrInput
	// The minimum number of nodes which should exist within this Node Pool. Valid values are between `0` and `1000` and must be less than or equal to `maxCount`.
	MinCount pulumi.IntPtrInput
	// Should this Node Pool be used for System or User resources? Possible values are `System` and `User`. Defaults to `User`.
	Mode pulumi.StringPtrInput
	// The name of the Node Pool which should be created within the Kubernetes Cluster. Changing this forces a new resource to be created.
	//
	// > **NOTE:** A Windows Node Pool cannot have a `name` longer than 6 characters.
	Name pulumi.StringPtrInput
	// The number of nodes which should exist within this Node Pool. Valid values are between `0` and `1000` (inclusive) for user pools and between `1` and `1000` (inclusive) for system pools.
	NodeCount pulumi.IntPtrInput
	// A map of Kubernetes labels which should be applied to nodes in this Node Pool.
	NodeLabels pulumi.StringMapInput
	// A `nodeNetworkProfile` block as documented below.
	NodeNetworkProfile KubernetesClusterNodePoolNodeNetworkProfilePtrInput
	// Resource ID for the Public IP Addresses Prefix for the nodes in this Node Pool. `enableNodePublicIp` should be `true`. Changing this forces a new resource to be created.
	NodePublicIpPrefixId pulumi.StringPtrInput
	// A list of Kubernetes taints which should be applied to nodes in the agent pool (e.g `key=value:NoSchedule`). Changing this forces a new resource to be created.
	NodeTaints pulumi.StringArrayInput
	// Version of Kubernetes used for the Agents. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as `1.22` are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in [the documentation](https://docs.microsoft.com/en-us/azure/aks/supported-kubernetes-versions?tabs=azure-cli#alias-minor-version).
	//
	// > **Note:** This version must be supported by the Kubernetes Cluster - as such the version of Kubernetes used on the Cluster/Control Plane may need to be upgraded first.
	OrchestratorVersion pulumi.StringPtrInput
	// The Agent Operating System disk size in GB. Changing this forces a new resource to be created.
	OsDiskSizeGb pulumi.IntPtrInput
	// The type of disk which should be used for the Operating System. Possible values are `Ephemeral` and `Managed`. Defaults to `Managed`. Changing this forces a new resource to be created.
	OsDiskType pulumi.StringPtrInput
	// Specifies the OS SKU used by the agent pool. Possible values are `AzureLinux`, `CBLMariner`, `Mariner`, `Ubuntu`, `Windows2019` and `Windows2022`. If not specified, the default is `Ubuntu` if OSType=Linux or `Windows2019` if OSType=Windows. And the default Windows OSSKU will be changed to `Windows2022` after Windows2019 is deprecated. Changing this forces a new resource to be created.
	OsSku pulumi.StringPtrInput
	// The Operating System which should be used for this Node Pool. Changing this forces a new resource to be created. Possible values are `Linux` and `Windows`. Defaults to `Linux`.
	OsType pulumi.StringPtrInput
	// The ID of the Subnet where the pods in the Node Pool should exist. Changing this forces a new resource to be created.
	PodSubnetId pulumi.StringPtrInput
	// The Priority for Virtual Machines within the Virtual Machine Scale Set that powers this Node Pool. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this forces a new resource to be created.
	Priority pulumi.StringPtrInput
	// The ID of the Proximity Placement Group where the Virtual Machine Scale Set that powers this Node Pool will be placed. Changing this forces a new resource to be created.
	//
	// > **Note:** When setting `priority` to Spot - you must configure an `evictionPolicy`, `spotMaxPrice` and add the applicable `nodeLabels` and `nodeTaints` [as per the Azure Documentation](https://docs.microsoft.com/azure/aks/spot-node-pool).
	ProximityPlacementGroupId pulumi.StringPtrInput
	// Specifies how the node pool should deal with scaled-down nodes. Allowed values are `Delete` and `Deallocate`. Defaults to `Delete`.
	ScaleDownMode pulumi.StringPtrInput
	// The ID of the Snapshot which should be used to create this Node Pool. Changing this forces a new resource to be created.
	SnapshotId pulumi.StringPtrInput
	// The maximum price you're willing to pay in USD per Virtual Machine. Valid values are `-1` (the current on-demand price for a Virtual Machine) or a positive value with up to five decimal places. Changing this forces a new resource to be created.
	//
	// > **Note:** This field can only be configured when `priority` is set to `Spot`.
	SpotMaxPrice pulumi.Float64PtrInput
	// A mapping of tags to assign to the resource.
	//
	// > At this time there's a bug in the AKS API where Tags for a Node Pool are not stored in the correct case - you may wish to use [`ignoreChanges`](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) functionality to ignore changes to the casing until this is fixed in the AKS API.
	Tags pulumi.StringMapInput
	// Used to specify whether the UltraSSD is enabled in the Node Pool. Defaults to `false`. See [the documentation](https://docs.microsoft.com/azure/aks/use-ultra-disks) for more information. Changing this forces a new resource to be created.
	UltraSsdEnabled pulumi.BoolPtrInput
	// A `upgradeSettings` block as documented below.
	UpgradeSettings KubernetesClusterNodePoolUpgradeSettingsPtrInput
	// The SKU which should be used for the Virtual Machines used in this Node Pool. Changing this forces a new resource to be created.
	VmSize pulumi.StringInput
	// The ID of the Subnet where this Node Pool should exist. Changing this forces a new resource to be created.
	//
	// > **NOTE:** A route table must be configured on this Subnet.
	VnetSubnetId pulumi.StringPtrInput
	// A `windowsProfile` block as documented below. Changing this forces a new resource to be created.
	WindowsProfile KubernetesClusterNodePoolWindowsProfilePtrInput
	// Used to specify the workload runtime. Allowed values are `OCIContainer`, `WasmWasi` and `KataMshvVmIsolation`.
	//
	// > **Note:** WebAssembly System Interface node pools are in Public Preview - more information and details on how to opt into the preview can be found in [this article](https://docs.microsoft.com/azure/aks/use-wasi-node-pools)
	//
	// > **Note:** Pod Sandboxing / KataVM Isolation node pools are in Public Preview - more information and details on how to opt into the preview can be found in [this article](https://learn.microsoft.com/azure/aks/use-pod-sandboxing)
	WorkloadRuntime pulumi.StringPtrInput
	// Specifies a list of Availability Zones in which this Kubernetes Cluster Node Pool should be located. Changing this forces a new Kubernetes Cluster Node Pool to be created.
	Zones pulumi.StringArrayInput
}

func (KubernetesClusterNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesClusterNodePoolArgs)(nil)).Elem()
}

type KubernetesClusterNodePoolInput interface {
	pulumi.Input

	ToKubernetesClusterNodePoolOutput() KubernetesClusterNodePoolOutput
	ToKubernetesClusterNodePoolOutputWithContext(ctx context.Context) KubernetesClusterNodePoolOutput
}

func (*KubernetesClusterNodePool) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterNodePool)(nil)).Elem()
}

func (i *KubernetesClusterNodePool) ToKubernetesClusterNodePoolOutput() KubernetesClusterNodePoolOutput {
	return i.ToKubernetesClusterNodePoolOutputWithContext(context.Background())
}

func (i *KubernetesClusterNodePool) ToKubernetesClusterNodePoolOutputWithContext(ctx context.Context) KubernetesClusterNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolOutput)
}

// KubernetesClusterNodePoolArrayInput is an input type that accepts KubernetesClusterNodePoolArray and KubernetesClusterNodePoolArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterNodePoolArrayInput` via:
//
//	KubernetesClusterNodePoolArray{ KubernetesClusterNodePoolArgs{...} }
type KubernetesClusterNodePoolArrayInput interface {
	pulumi.Input

	ToKubernetesClusterNodePoolArrayOutput() KubernetesClusterNodePoolArrayOutput
	ToKubernetesClusterNodePoolArrayOutputWithContext(context.Context) KubernetesClusterNodePoolArrayOutput
}

type KubernetesClusterNodePoolArray []KubernetesClusterNodePoolInput

func (KubernetesClusterNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KubernetesClusterNodePool)(nil)).Elem()
}

func (i KubernetesClusterNodePoolArray) ToKubernetesClusterNodePoolArrayOutput() KubernetesClusterNodePoolArrayOutput {
	return i.ToKubernetesClusterNodePoolArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterNodePoolArray) ToKubernetesClusterNodePoolArrayOutputWithContext(ctx context.Context) KubernetesClusterNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolArrayOutput)
}

// KubernetesClusterNodePoolMapInput is an input type that accepts KubernetesClusterNodePoolMap and KubernetesClusterNodePoolMapOutput values.
// You can construct a concrete instance of `KubernetesClusterNodePoolMapInput` via:
//
//	KubernetesClusterNodePoolMap{ "key": KubernetesClusterNodePoolArgs{...} }
type KubernetesClusterNodePoolMapInput interface {
	pulumi.Input

	ToKubernetesClusterNodePoolMapOutput() KubernetesClusterNodePoolMapOutput
	ToKubernetesClusterNodePoolMapOutputWithContext(context.Context) KubernetesClusterNodePoolMapOutput
}

type KubernetesClusterNodePoolMap map[string]KubernetesClusterNodePoolInput

func (KubernetesClusterNodePoolMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KubernetesClusterNodePool)(nil)).Elem()
}

func (i KubernetesClusterNodePoolMap) ToKubernetesClusterNodePoolMapOutput() KubernetesClusterNodePoolMapOutput {
	return i.ToKubernetesClusterNodePoolMapOutputWithContext(context.Background())
}

func (i KubernetesClusterNodePoolMap) ToKubernetesClusterNodePoolMapOutputWithContext(ctx context.Context) KubernetesClusterNodePoolMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolMapOutput)
}

type KubernetesClusterNodePoolOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterNodePool)(nil)).Elem()
}

func (o KubernetesClusterNodePoolOutput) ToKubernetesClusterNodePoolOutput() KubernetesClusterNodePoolOutput {
	return o
}

func (o KubernetesClusterNodePoolOutput) ToKubernetesClusterNodePoolOutputWithContext(ctx context.Context) KubernetesClusterNodePoolOutput {
	return o
}

// Specifies the ID of the Capacity Reservation Group where this Node Pool should exist. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolOutput) CapacityReservationGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.StringPtrOutput { return v.CapacityReservationGroupId }).(pulumi.StringPtrOutput)
}

// Specifies whether to trust a Custom CA.
//
// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/CustomCATrustPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/custom-certificate-authority) for more information.
func (o KubernetesClusterNodePoolOutput) CustomCaTrustEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.BoolPtrOutput { return v.CustomCaTrustEnabled }).(pulumi.BoolPtrOutput)
}

// Whether to enable [auto-scaler](https://docs.microsoft.com/azure/aks/cluster-autoscaler).
func (o KubernetesClusterNodePoolOutput) EnableAutoScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.BoolPtrOutput { return v.EnableAutoScaling }).(pulumi.BoolPtrOutput)
}

// Should the nodes in this Node Pool have host encryption enabled? Changing this forces a new resource to be created.
//
// > **NOTE:** Additional fields must be configured depending on the value of this field - see below.
func (o KubernetesClusterNodePoolOutput) EnableHostEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.BoolPtrOutput { return v.EnableHostEncryption }).(pulumi.BoolPtrOutput)
}

// Should each node have a Public IP Address? Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolOutput) EnableNodePublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.BoolPtrOutput { return v.EnableNodePublicIp }).(pulumi.BoolPtrOutput)
}

// The Eviction Policy which should be used for Virtual Machines within the Virtual Machine Scale Set powering this Node Pool. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.
//
// > **Note:** An Eviction Policy can only be configured when `priority` is set to `Spot` and will default to `Delete` unless otherwise specified.
func (o KubernetesClusterNodePoolOutput) EvictionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.StringPtrOutput { return v.EvictionPolicy }).(pulumi.StringPtrOutput)
}

// Should the nodes in this Node Pool have Federal Information Processing Standard enabled? Changing this forces a new resource to be created.
//
// > **Note:** FIPS support is in Public Preview - more information and details on how to opt into the Preview can be found in [this article](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview).
func (o KubernetesClusterNodePoolOutput) FipsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.BoolPtrOutput { return v.FipsEnabled }).(pulumi.BoolPtrOutput)
}

// The fully qualified resource ID of the Dedicated Host Group to provision virtual machines from. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolOutput) HostGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.StringPtrOutput { return v.HostGroupId }).(pulumi.StringPtrOutput)
}

// A `kubeletConfig` block as defined below. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolOutput) KubeletConfig() KubernetesClusterNodePoolKubeletConfigPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) KubernetesClusterNodePoolKubeletConfigPtrOutput {
		return v.KubeletConfig
	}).(KubernetesClusterNodePoolKubeletConfigPtrOutput)
}

// The type of disk used by kubelet. Possible values are `OS` and `Temporary`.
func (o KubernetesClusterNodePoolOutput) KubeletDiskType() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.StringOutput { return v.KubeletDiskType }).(pulumi.StringOutput)
}

// The ID of the Kubernetes Cluster where this Node Pool should exist. Changing this forces a new resource to be created.
//
// > **NOTE:** The type of Default Node Pool for the Kubernetes Cluster must be `VirtualMachineScaleSets` to attach multiple node pools.
func (o KubernetesClusterNodePoolOutput) KubernetesClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.StringOutput { return v.KubernetesClusterId }).(pulumi.StringOutput)
}

// A `linuxOsConfig` block as defined below. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolOutput) LinuxOsConfig() KubernetesClusterNodePoolLinuxOsConfigPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) KubernetesClusterNodePoolLinuxOsConfigPtrOutput {
		return v.LinuxOsConfig
	}).(KubernetesClusterNodePoolLinuxOsConfigPtrOutput)
}

// The maximum number of nodes which should exist within this Node Pool. Valid values are between `0` and `1000` and must be greater than or equal to `minCount`.
func (o KubernetesClusterNodePoolOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.IntPtrOutput { return v.MaxCount }).(pulumi.IntPtrOutput)
}

// The maximum number of pods that can run on each agent. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolOutput) MaxPods() pulumi.IntOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.IntOutput { return v.MaxPods }).(pulumi.IntOutput)
}

// A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It cannot be specified for Windows nodes and must be a static string (i.e. will be printed raw and not executed as a script). Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolOutput) MessageOfTheDay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.StringPtrOutput { return v.MessageOfTheDay }).(pulumi.StringPtrOutput)
}

// The minimum number of nodes which should exist within this Node Pool. Valid values are between `0` and `1000` and must be less than or equal to `maxCount`.
func (o KubernetesClusterNodePoolOutput) MinCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.IntPtrOutput { return v.MinCount }).(pulumi.IntPtrOutput)
}

// Should this Node Pool be used for System or User resources? Possible values are `System` and `User`. Defaults to `User`.
func (o KubernetesClusterNodePoolOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.StringPtrOutput { return v.Mode }).(pulumi.StringPtrOutput)
}

// The name of the Node Pool which should be created within the Kubernetes Cluster. Changing this forces a new resource to be created.
//
// > **NOTE:** A Windows Node Pool cannot have a `name` longer than 6 characters.
func (o KubernetesClusterNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The number of nodes which should exist within this Node Pool. Valid values are between `0` and `1000` (inclusive) for user pools and between `1` and `1000` (inclusive) for system pools.
func (o KubernetesClusterNodePoolOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.IntOutput { return v.NodeCount }).(pulumi.IntOutput)
}

// A map of Kubernetes labels which should be applied to nodes in this Node Pool.
func (o KubernetesClusterNodePoolOutput) NodeLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.StringMapOutput { return v.NodeLabels }).(pulumi.StringMapOutput)
}

// A `nodeNetworkProfile` block as documented below.
func (o KubernetesClusterNodePoolOutput) NodeNetworkProfile() KubernetesClusterNodePoolNodeNetworkProfilePtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) KubernetesClusterNodePoolNodeNetworkProfilePtrOutput {
		return v.NodeNetworkProfile
	}).(KubernetesClusterNodePoolNodeNetworkProfilePtrOutput)
}

// Resource ID for the Public IP Addresses Prefix for the nodes in this Node Pool. `enableNodePublicIp` should be `true`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolOutput) NodePublicIpPrefixId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.StringPtrOutput { return v.NodePublicIpPrefixId }).(pulumi.StringPtrOutput)
}

// A list of Kubernetes taints which should be applied to nodes in the agent pool (e.g `key=value:NoSchedule`). Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolOutput) NodeTaints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.StringArrayOutput { return v.NodeTaints }).(pulumi.StringArrayOutput)
}

// Version of Kubernetes used for the Agents. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as `1.22` are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in [the documentation](https://docs.microsoft.com/en-us/azure/aks/supported-kubernetes-versions?tabs=azure-cli#alias-minor-version).
//
// > **Note:** This version must be supported by the Kubernetes Cluster - as such the version of Kubernetes used on the Cluster/Control Plane may need to be upgraded first.
func (o KubernetesClusterNodePoolOutput) OrchestratorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.StringOutput { return v.OrchestratorVersion }).(pulumi.StringOutput)
}

// The Agent Operating System disk size in GB. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolOutput) OsDiskSizeGb() pulumi.IntOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.IntOutput { return v.OsDiskSizeGb }).(pulumi.IntOutput)
}

// The type of disk which should be used for the Operating System. Possible values are `Ephemeral` and `Managed`. Defaults to `Managed`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolOutput) OsDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.StringPtrOutput { return v.OsDiskType }).(pulumi.StringPtrOutput)
}

// Specifies the OS SKU used by the agent pool. Possible values are `AzureLinux`, `CBLMariner`, `Mariner`, `Ubuntu`, `Windows2019` and `Windows2022`. If not specified, the default is `Ubuntu` if OSType=Linux or `Windows2019` if OSType=Windows. And the default Windows OSSKU will be changed to `Windows2022` after Windows2019 is deprecated. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolOutput) OsSku() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.StringOutput { return v.OsSku }).(pulumi.StringOutput)
}

// The Operating System which should be used for this Node Pool. Changing this forces a new resource to be created. Possible values are `Linux` and `Windows`. Defaults to `Linux`.
func (o KubernetesClusterNodePoolOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.StringPtrOutput { return v.OsType }).(pulumi.StringPtrOutput)
}

// The ID of the Subnet where the pods in the Node Pool should exist. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolOutput) PodSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.StringPtrOutput { return v.PodSubnetId }).(pulumi.StringPtrOutput)
}

// The Priority for Virtual Machines within the Virtual Machine Scale Set that powers this Node Pool. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.StringPtrOutput { return v.Priority }).(pulumi.StringPtrOutput)
}

// The ID of the Proximity Placement Group where the Virtual Machine Scale Set that powers this Node Pool will be placed. Changing this forces a new resource to be created.
//
// > **Note:** When setting `priority` to Spot - you must configure an `evictionPolicy`, `spotMaxPrice` and add the applicable `nodeLabels` and `nodeTaints` [as per the Azure Documentation](https://docs.microsoft.com/azure/aks/spot-node-pool).
func (o KubernetesClusterNodePoolOutput) ProximityPlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.StringPtrOutput { return v.ProximityPlacementGroupId }).(pulumi.StringPtrOutput)
}

// Specifies how the node pool should deal with scaled-down nodes. Allowed values are `Delete` and `Deallocate`. Defaults to `Delete`.
func (o KubernetesClusterNodePoolOutput) ScaleDownMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.StringPtrOutput { return v.ScaleDownMode }).(pulumi.StringPtrOutput)
}

// The ID of the Snapshot which should be used to create this Node Pool. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.StringPtrOutput { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The maximum price you're willing to pay in USD per Virtual Machine. Valid values are `-1` (the current on-demand price for a Virtual Machine) or a positive value with up to five decimal places. Changing this forces a new resource to be created.
//
// > **Note:** This field can only be configured when `priority` is set to `Spot`.
func (o KubernetesClusterNodePoolOutput) SpotMaxPrice() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.Float64PtrOutput { return v.SpotMaxPrice }).(pulumi.Float64PtrOutput)
}

// A mapping of tags to assign to the resource.
//
// > At this time there's a bug in the AKS API where Tags for a Node Pool are not stored in the correct case - you may wish to use [`ignoreChanges`](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) functionality to ignore changes to the casing until this is fixed in the AKS API.
func (o KubernetesClusterNodePoolOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Used to specify whether the UltraSSD is enabled in the Node Pool. Defaults to `false`. See [the documentation](https://docs.microsoft.com/azure/aks/use-ultra-disks) for more information. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolOutput) UltraSsdEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.BoolPtrOutput { return v.UltraSsdEnabled }).(pulumi.BoolPtrOutput)
}

// A `upgradeSettings` block as documented below.
func (o KubernetesClusterNodePoolOutput) UpgradeSettings() KubernetesClusterNodePoolUpgradeSettingsPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) KubernetesClusterNodePoolUpgradeSettingsPtrOutput {
		return v.UpgradeSettings
	}).(KubernetesClusterNodePoolUpgradeSettingsPtrOutput)
}

// The SKU which should be used for the Virtual Machines used in this Node Pool. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolOutput) VmSize() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.StringOutput { return v.VmSize }).(pulumi.StringOutput)
}

// The ID of the Subnet where this Node Pool should exist. Changing this forces a new resource to be created.
//
// > **NOTE:** A route table must be configured on this Subnet.
func (o KubernetesClusterNodePoolOutput) VnetSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.StringPtrOutput { return v.VnetSubnetId }).(pulumi.StringPtrOutput)
}

// A `windowsProfile` block as documented below. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolOutput) WindowsProfile() KubernetesClusterNodePoolWindowsProfilePtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) KubernetesClusterNodePoolWindowsProfilePtrOutput {
		return v.WindowsProfile
	}).(KubernetesClusterNodePoolWindowsProfilePtrOutput)
}

// Used to specify the workload runtime. Allowed values are `OCIContainer`, `WasmWasi` and `KataMshvVmIsolation`.
//
// > **Note:** WebAssembly System Interface node pools are in Public Preview - more information and details on how to opt into the preview can be found in [this article](https://docs.microsoft.com/azure/aks/use-wasi-node-pools)
//
// > **Note:** Pod Sandboxing / KataVM Isolation node pools are in Public Preview - more information and details on how to opt into the preview can be found in [this article](https://learn.microsoft.com/azure/aks/use-pod-sandboxing)
func (o KubernetesClusterNodePoolOutput) WorkloadRuntime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.StringPtrOutput { return v.WorkloadRuntime }).(pulumi.StringPtrOutput)
}

// Specifies a list of Availability Zones in which this Kubernetes Cluster Node Pool should be located. Changing this forces a new Kubernetes Cluster Node Pool to be created.
func (o KubernetesClusterNodePoolOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) pulumi.StringArrayOutput { return v.Zones }).(pulumi.StringArrayOutput)
}

type KubernetesClusterNodePoolArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KubernetesClusterNodePool)(nil)).Elem()
}

func (o KubernetesClusterNodePoolArrayOutput) ToKubernetesClusterNodePoolArrayOutput() KubernetesClusterNodePoolArrayOutput {
	return o
}

func (o KubernetesClusterNodePoolArrayOutput) ToKubernetesClusterNodePoolArrayOutputWithContext(ctx context.Context) KubernetesClusterNodePoolArrayOutput {
	return o
}

func (o KubernetesClusterNodePoolArrayOutput) Index(i pulumi.IntInput) KubernetesClusterNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KubernetesClusterNodePool {
		return vs[0].([]*KubernetesClusterNodePool)[vs[1].(int)]
	}).(KubernetesClusterNodePoolOutput)
}

type KubernetesClusterNodePoolMapOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNodePoolMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KubernetesClusterNodePool)(nil)).Elem()
}

func (o KubernetesClusterNodePoolMapOutput) ToKubernetesClusterNodePoolMapOutput() KubernetesClusterNodePoolMapOutput {
	return o
}

func (o KubernetesClusterNodePoolMapOutput) ToKubernetesClusterNodePoolMapOutputWithContext(ctx context.Context) KubernetesClusterNodePoolMapOutput {
	return o
}

func (o KubernetesClusterNodePoolMapOutput) MapIndex(k pulumi.StringInput) KubernetesClusterNodePoolOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KubernetesClusterNodePool {
		return vs[0].(map[string]*KubernetesClusterNodePool)[vs[1].(string)]
	}).(KubernetesClusterNodePoolOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterNodePoolInput)(nil)).Elem(), &KubernetesClusterNodePool{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterNodePoolArrayInput)(nil)).Elem(), KubernetesClusterNodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterNodePoolMapInput)(nil)).Elem(), KubernetesClusterNodePoolMap{})
	pulumi.RegisterOutputType(KubernetesClusterNodePoolOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNodePoolArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNodePoolMapOutput{})
}
