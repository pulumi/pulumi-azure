// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package containerservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Container Registry.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/containerservice"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		example, err := containerservice.LookupRegistry(ctx, &containerservice.LookupRegistryArgs{
// 			Name:              "testacr",
// 			ResourceGroupName: "test",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("loginServer", example.LoginServer)
// 		return nil
// 	})
// }
// ```
func LookupRegistry(ctx *pulumi.Context, args *LookupRegistryArgs, opts ...pulumi.InvokeOption) (*LookupRegistryResult, error) {
	var rv LookupRegistryResult
	err := ctx.Invoke("azure:containerservice/getRegistry:getRegistry", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRegistry.
type LookupRegistryArgs struct {
	// The name of the Container Registry.
	Name string `pulumi:"name"`
	// The Name of the Resource Group where this Container Registry exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getRegistry.
type LookupRegistryResult struct {
	// Is the Administrator account enabled for this Container Registry.
	AdminEnabled bool `pulumi:"adminEnabled"`
	// The Password associated with the Container Registry Admin account - if the admin account is enabled.
	AdminPassword string `pulumi:"adminPassword"`
	// The Username associated with the Container Registry Admin account - if the admin account is enabled.
	AdminUsername string `pulumi:"adminUsername"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Azure Region in which this Container Registry exists.
	Location string `pulumi:"location"`
	// The URL that can be used to log into the container registry.
	LoginServer       string `pulumi:"loginServer"`
	Name              string `pulumi:"name"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The SKU of this Container Registry, such as `Basic`.
	Sku string `pulumi:"sku"`
	// The ID of the Storage Account used for this Container Registry. This is only returned for `Classic` SKU's.
	StorageAccountId string `pulumi:"storageAccountId"`
	// A map of tags assigned to the Container Registry.
	Tags map[string]string `pulumi:"tags"`
}

func LookupRegistryOutput(ctx *pulumi.Context, args LookupRegistryOutputArgs, opts ...pulumi.InvokeOption) LookupRegistryResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRegistryResult, error) {
			args := v.(LookupRegistryArgs)
			r, err := LookupRegistry(ctx, &args, opts...)
			return *r, err
		}).(LookupRegistryResultOutput)
}

// A collection of arguments for invoking getRegistry.
type LookupRegistryOutputArgs struct {
	// The name of the Container Registry.
	Name pulumi.StringInput `pulumi:"name"`
	// The Name of the Resource Group where this Container Registry exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupRegistryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegistryArgs)(nil)).Elem()
}

// A collection of values returned by getRegistry.
type LookupRegistryResultOutput struct{ *pulumi.OutputState }

func (LookupRegistryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegistryResult)(nil)).Elem()
}

func (o LookupRegistryResultOutput) ToLookupRegistryResultOutput() LookupRegistryResultOutput {
	return o
}

func (o LookupRegistryResultOutput) ToLookupRegistryResultOutputWithContext(ctx context.Context) LookupRegistryResultOutput {
	return o
}

// Is the Administrator account enabled for this Container Registry.
func (o LookupRegistryResultOutput) AdminEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupRegistryResult) bool { return v.AdminEnabled }).(pulumi.BoolOutput)
}

// The Password associated with the Container Registry Admin account - if the admin account is enabled.
func (o LookupRegistryResultOutput) AdminPassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryResult) string { return v.AdminPassword }).(pulumi.StringOutput)
}

// The Username associated with the Container Registry Admin account - if the admin account is enabled.
func (o LookupRegistryResultOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryResult) string { return v.AdminUsername }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRegistryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Azure Region in which this Container Registry exists.
func (o LookupRegistryResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryResult) string { return v.Location }).(pulumi.StringOutput)
}

// The URL that can be used to log into the container registry.
func (o LookupRegistryResultOutput) LoginServer() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryResult) string { return v.LoginServer }).(pulumi.StringOutput)
}

func (o LookupRegistryResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupRegistryResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The SKU of this Container Registry, such as `Basic`.
func (o LookupRegistryResultOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryResult) string { return v.Sku }).(pulumi.StringOutput)
}

// The ID of the Storage Account used for this Container Registry. This is only returned for `Classic` SKU's.
func (o LookupRegistryResultOutput) StorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegistryResult) string { return v.StorageAccountId }).(pulumi.StringOutput)
}

// A map of tags assigned to the Container Registry.
func (o LookupRegistryResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupRegistryResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRegistryResultOutput{})
}
