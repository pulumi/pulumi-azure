// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package containerservice

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Use this data source to access information about an existing Managed Kubernetes Cluster (AKS).
// 
// > **Note:** All arguments including the client secret will be stored in the raw state as plain-text.
// [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/d/kubernetes_cluster.html.markdown.
func LookupKubernetesCluster(ctx *pulumi.Context, args *GetKubernetesClusterArgs) (*GetKubernetesClusterResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["name"] = args.Name
		inputs["resourceGroupName"] = args.ResourceGroupName
	}
	outputs, err := ctx.Invoke("azure:containerservice/getKubernetesCluster:getKubernetesCluster", inputs)
	if err != nil {
		return nil, err
	}
	return &GetKubernetesClusterResult{
		AddonProfiles: outputs["addonProfiles"],
		AgentPoolProfiles: outputs["agentPoolProfiles"],
		DnsPrefix: outputs["dnsPrefix"],
		Fqdn: outputs["fqdn"],
		KubeAdminConfigs: outputs["kubeAdminConfigs"],
		KubeAdminConfigRaw: outputs["kubeAdminConfigRaw"],
		KubeConfigs: outputs["kubeConfigs"],
		KubeConfigRaw: outputs["kubeConfigRaw"],
		KubernetesVersion: outputs["kubernetesVersion"],
		LinuxProfiles: outputs["linuxProfiles"],
		Location: outputs["location"],
		Name: outputs["name"],
		NetworkProfiles: outputs["networkProfiles"],
		NodeResourceGroup: outputs["nodeResourceGroup"],
		ResourceGroupName: outputs["resourceGroupName"],
		RoleBasedAccessControls: outputs["roleBasedAccessControls"],
		ServicePrincipals: outputs["servicePrincipals"],
		Tags: outputs["tags"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getKubernetesCluster.
type GetKubernetesClusterArgs struct {
	// The name of the managed Kubernetes Cluster.
	Name interface{}
	// The name of the Resource Group in which the managed Kubernetes Cluster exists.
	ResourceGroupName interface{}
}

// A collection of values returned by getKubernetesCluster.
type GetKubernetesClusterResult struct {
	// A `addon_profile` block as documented below.
	AddonProfiles interface{}
	// An `agent_pool_profile` block as documented below.
	AgentPoolProfiles interface{}
	// The DNS Prefix of the managed Kubernetes cluster.
	DnsPrefix interface{}
	// The FQDN of the Azure Kubernetes Managed Cluster.
	Fqdn interface{}
	// A `kube_admin_config` block as defined below. This is only available when Role Based Access Control with Azure Active Directory is enabled.
	KubeAdminConfigs interface{}
	// Raw Kubernetes config for the admin account to be used by [kubectl](https://kubernetes.io/docs/reference/kubectl/overview/) and other compatible tools. This is only available when Role Based Access Control with Azure Active Directory is enabled.
	KubeAdminConfigRaw interface{}
	// A `kube_config` block as defined below.
	KubeConfigs interface{}
	// Base64 encoded Kubernetes configuration.
	KubeConfigRaw interface{}
	// The version of Kubernetes used on the managed Kubernetes Cluster.
	KubernetesVersion interface{}
	// A `linux_profile` block as documented below.
	LinuxProfiles interface{}
	// The Azure Region in which the managed Kubernetes Cluster exists.
	Location interface{}
	// The name assigned to this pool of agents.
	Name interface{}
	// A `network_profile` block as documented below.
	NetworkProfiles interface{}
	// Auto-generated Resource Group containing AKS Cluster resources.
	NodeResourceGroup interface{}
	ResourceGroupName interface{}
	// A `role_based_access_control` block as documented below.
	RoleBasedAccessControls interface{}
	// A `service_principal` block as documented below.
	ServicePrincipals interface{}
	// A mapping of tags assigned to this resource.
	Tags interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
