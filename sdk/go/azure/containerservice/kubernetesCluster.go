// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerservice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Managed Kubernetes Cluster (also known as AKS / Azure Kubernetes Service)
//
// ## Example Usage
//
// This example provisions a basic Managed Kubernetes Cluster.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/containerservice"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleKubernetesCluster, err := containerservice.NewKubernetesCluster(ctx, "exampleKubernetesCluster", &containerservice.KubernetesClusterArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				DnsPrefix:         pulumi.String("exampleaks1"),
//				DefaultNodePool: &containerservice.KubernetesClusterDefaultNodePoolArgs{
//					Name:      pulumi.String("default"),
//					NodeCount: pulumi.Int(1),
//					VmSize:    pulumi.String("Standard_D2_v2"),
//				},
//				Identity: &containerservice.KubernetesClusterIdentityArgs{
//					Type: pulumi.String("SystemAssigned"),
//				},
//				Tags: pulumi.StringMap{
//					"Environment": pulumi.String("Production"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("clientCertificate", exampleKubernetesCluster.KubeConfigs.ApplyT(func(kubeConfigs []containerservice.KubernetesClusterKubeConfig) (*string, error) {
//				return &kubeConfigs[0].ClientCertificate, nil
//			}).(pulumi.StringPtrOutput))
//			ctx.Export("kubeConfig", exampleKubernetesCluster.KubeConfigRaw)
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Managed Kubernetes Clusters can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:containerservice/kubernetesCluster:KubernetesCluster cluster1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.ContainerService/managedClusters/cluster1
//
// ```
type KubernetesCluster struct {
	pulumi.CustomResourceState

	// A `aciConnectorLinux` block as defined below. For more details, please visit [Create and configure an AKS cluster to use virtual nodes](https://docs.microsoft.com/azure/aks/virtual-nodes-portal).
	AciConnectorLinux KubernetesClusterAciConnectorLinuxPtrOutput `pulumi:"aciConnectorLinux"`
	// An `apiServerAccessProfile` block as defined below.
	ApiServerAccessProfile KubernetesClusterApiServerAccessProfileOutput `pulumi:"apiServerAccessProfile"`
	// Deprecated: This property has been renamed to `authorized_ip_ranges` within the `api_server_access_profile` block and will be removed in v4.0 of the provider
	ApiServerAuthorizedIpRanges pulumi.StringArrayOutput `pulumi:"apiServerAuthorizedIpRanges"`
	// A `autoScalerProfile` block as defined below.
	AutoScalerProfile KubernetesClusterAutoScalerProfileOutput `pulumi:"autoScalerProfile"`
	// The upgrade channel for this Kubernetes Cluster. Possible values are `patch`, `rapid`, `node-image` and `stable`. Omitting this field sets this value to `none`.
	//
	// !> **Note:** Cluster Auto-Upgrade will update the Kubernetes Cluster (and its Node Pools) to the latest GA version of Kubernetes automatically - please [see the Azure documentation for more information](https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel).
	//
	// > **Note:** Cluster Auto-Upgrade only updates to GA versions of Kubernetes and will not update to Preview versions.
	AutomaticChannelUpgrade pulumi.StringPtrOutput `pulumi:"automaticChannelUpgrade"`
	// A `azureActiveDirectoryRoleBasedAccessControl` block as defined below.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/AKS-PrometheusAddonPreview` is enabled, see [the documentation](https://learn.microsoft.com/en-us/azure/azure-monitor/essentials/prometheus-metrics-enable?tabs=azure-portal) for more information.
	AzureActiveDirectoryRoleBasedAccessControl KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput `pulumi:"azureActiveDirectoryRoleBasedAccessControl"`
	// Should the Azure Policy Add-On be enabled? For more details please visit [Understand Azure Policy for Azure Kubernetes Service](https://docs.microsoft.com/en-ie/azure/governance/policy/concepts/rego-for-aks)
	AzurePolicyEnabled pulumi.BoolPtrOutput `pulumi:"azurePolicyEnabled"`
	// A `confidentialComputing` block as defined below. For more details please [the documentation](https://learn.microsoft.com/en-us/azure/confidential-computing/confidential-nodes-aks-overview)
	ConfidentialComputing KubernetesClusterConfidentialComputingPtrOutput `pulumi:"confidentialComputing"`
	// A list of up to 10 base64 encoded CAs that will be added to the trust store on nodes with the `customCaTrustEnabled` feature enabled.
	//
	// > **Note:** Removing `customCaTrustCertificatesBase64` after it has been set forces a new resource to be created.
	CustomCaTrustCertificatesBase64s pulumi.StringArrayOutput `pulumi:"customCaTrustCertificatesBase64s"`
	// A `defaultNodePool` block as defined below.
	DefaultNodePool KubernetesClusterDefaultNodePoolOutput `pulumi:"defaultNodePool"`
	// The ID of the Disk Encryption Set which should be used for the Nodes and Volumes. More information [can be found in the documentation](https://docs.microsoft.com/azure/aks/azure-disk-customer-managed-keys). Changing this forces a new resource to be created.
	DiskEncryptionSetId pulumi.StringPtrOutput `pulumi:"diskEncryptionSetId"`
	// DNS prefix specified when creating the managed cluster. Possible values must begin and end with a letter or number, contain only letters, numbers, and hyphens and be between 1 and 54 characters in length. Changing this forces a new resource to be created.
	DnsPrefix pulumi.StringPtrOutput `pulumi:"dnsPrefix"`
	// Specifies the DNS prefix to use with private clusters. Changing this forces a new resource to be created.
	//
	// > **Note:** You must define either a `dnsPrefix` or a `dnsPrefixPrivateCluster` field.
	//
	// In addition, one of either `identity` or `servicePrincipal` blocks must be specified.
	DnsPrefixPrivateCluster pulumi.StringPtrOutput `pulumi:"dnsPrefixPrivateCluster"`
	// Specifies the Edge Zone within the Azure Region where this Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created.
	EdgeZone pulumi.StringPtrOutput `pulumi:"edgeZone"`
	// Deprecated: The AKS API has removed support for this field on 2020-10-15 and is no longer possible to configure this the Pod Security Policy.
	EnablePodSecurityPolicy pulumi.BoolPtrOutput `pulumi:"enablePodSecurityPolicy"`
	// The FQDN of the Azure Kubernetes Managed Cluster.
	Fqdn pulumi.StringOutput `pulumi:"fqdn"`
	// Should HTTP Application Routing be enabled?
	//
	// > **Note:** At this time HTTP Application Routing is not supported in Azure China or Azure US Government.
	HttpApplicationRoutingEnabled pulumi.BoolPtrOutput `pulumi:"httpApplicationRoutingEnabled"`
	// The Zone Name of the HTTP Application Routing.
	HttpApplicationRoutingZoneName pulumi.StringOutput `pulumi:"httpApplicationRoutingZoneName"`
	// A `httpProxyConfig` block as defined below.
	HttpProxyConfig KubernetesClusterHttpProxyConfigPtrOutput `pulumi:"httpProxyConfig"`
	// An `identity` block as defined below. One of either `identity` or `servicePrincipal` must be specified.
	//
	// !> **Note:** A migration scenario from `servicePrincipal` to `identity` is supported. When upgrading `servicePrincipal` to `identity`, your cluster's control plane and addon pods will switch to use managed identity, but the kubelets will keep using your configured `servicePrincipal` until you upgrade your Node Pool.
	Identity KubernetesClusterIdentityPtrOutput `pulumi:"identity"`
	// Specifies whether Image Cleaner is enabled.
	ImageCleanerEnabled pulumi.BoolPtrOutput `pulumi:"imageCleanerEnabled"`
	// Specifies the interval in hours when images should be cleaned up. Defaults to `48`.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/EnableImageCleanerPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/image-cleaner) for more information.
	ImageCleanerIntervalHours pulumi.IntPtrOutput `pulumi:"imageCleanerIntervalHours"`
	// A `ingressApplicationGateway` block as defined below.
	//
	// > **Note:** Since the Application Gateway is deployed inside a Virtual Network, users (and Service Principals) that are operating the Application Gateway must have the `Microsoft.Network/virtualNetworks/subnets/join/action` permission on the Virtual Network or Subnet. For more details, please visit [Virtual Network Permission](https://learn.microsoft.com/en-us/azure/application-gateway/configuration-infrastructure#virtual-network-permission).
	IngressApplicationGateway KubernetesClusterIngressApplicationGatewayPtrOutput `pulumi:"ingressApplicationGateway"`
	// A `keyManagementService` block as defined below. For more details, please visit [Key Management Service (KMS) etcd encryption to an AKS cluster](https://learn.microsoft.com/en-us/azure/aks/use-kms-etcd-encryption).
	KeyManagementService KubernetesClusterKeyManagementServicePtrOutput `pulumi:"keyManagementService"`
	// A `keyVaultSecretsProvider` block as defined below. For more details, please visit [Azure Keyvault Secrets Provider for AKS](https://docs.microsoft.com/azure/aks/csi-secrets-store-driver).
	KeyVaultSecretsProvider KubernetesClusterKeyVaultSecretsProviderPtrOutput `pulumi:"keyVaultSecretsProvider"`
	// Raw Kubernetes config for the admin account to be used by [kubectl](https://kubernetes.io/docs/reference/kubectl/overview/) and other compatible tools. This is only available when Role Based Access Control with Azure Active Directory is enabled and local accounts enabled.
	KubeAdminConfigRaw pulumi.StringOutput `pulumi:"kubeAdminConfigRaw"`
	// A `kubeAdminConfig` block as defined below. This is only available when Role Based Access Control with Azure Active Directory is enabled and local accounts enabled.
	KubeAdminConfigs KubernetesClusterKubeAdminConfigArrayOutput `pulumi:"kubeAdminConfigs"`
	// Raw Kubernetes config to be used by [kubectl](https://kubernetes.io/docs/reference/kubectl/overview/) and other compatible tools.
	KubeConfigRaw pulumi.StringOutput `pulumi:"kubeConfigRaw"`
	// A `kubeConfig` block as defined below.
	KubeConfigs KubernetesClusterKubeConfigArrayOutput `pulumi:"kubeConfigs"`
	// A `kubeletIdentity` block as defined below.
	KubeletIdentity KubernetesClusterKubeletIdentityOutput `pulumi:"kubeletIdentity"`
	// Version of Kubernetes specified when creating the AKS managed cluster. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as `1.22` are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in [the documentation](https://docs.microsoft.com/en-us/azure/aks/supported-kubernetes-versions?tabs=azure-cli#alias-minor-version).
	//
	// > **Note:** Upgrading your cluster may take up to 10 minutes per node.
	KubernetesVersion pulumi.StringOutput `pulumi:"kubernetesVersion"`
	// A `linuxProfile` block as defined below.
	LinuxProfile KubernetesClusterLinuxProfilePtrOutput `pulumi:"linuxProfile"`
	// If `true` local accounts will be disabled. See [the documentation](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts) for more information.
	//
	// > **Note:** If `localAccountDisabled` is set to `true`, it is required to enable Kubernetes RBAC and AKS-managed Azure AD integration. See [the documentation](https://docs.microsoft.com/azure/aks/managed-aad#azure-ad-authentication-overview) for more information.
	LocalAccountDisabled pulumi.BoolPtrOutput `pulumi:"localAccountDisabled"`
	// The location where the Managed Kubernetes Cluster should be created. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// A `maintenanceWindow` block as defined below.
	MaintenanceWindow KubernetesClusterMaintenanceWindowPtrOutput `pulumi:"maintenanceWindow"`
	// A `maintenanceWindowAutoUpgrade` block as defined below.
	MaintenanceWindowAutoUpgrade KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput `pulumi:"maintenanceWindowAutoUpgrade"`
	// A `maintenanceWindowNodeOs` block as defined below.
	MaintenanceWindowNodeOs KubernetesClusterMaintenanceWindowNodeOsPtrOutput `pulumi:"maintenanceWindowNodeOs"`
	// A `microsoftDefender` block as defined below.
	MicrosoftDefender KubernetesClusterMicrosoftDefenderPtrOutput `pulumi:"microsoftDefender"`
	// Specifies a Prometheus add-on profile for the Kubernetes Cluster. A `monitorMetrics` block as defined below.
	MonitorMetrics KubernetesClusterMonitorMetricsPtrOutput `pulumi:"monitorMetrics"`
	// The name of the Managed Kubernetes Cluster to create. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// A `networkProfile` block as defined below. Changing this forces a new resource to be created.
	//
	// > **Note:** If `networkProfile` is not defined, `kubenet` profile will be used by default.
	NetworkProfile KubernetesClusterNetworkProfileOutput `pulumi:"networkProfile"`
	// The upgrade channel for this Kubernetes Cluster Nodes' OS Image. Possible values are `Unmanaged`, `SecurityPatch`, `NodeImage` and `None`.
	//
	// > **Note:** `nodeOsChannelUpgrade` must be set to `NodeImage` if `automaticChannelUpgrade` has been set to `node-image`
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/NodeOsUpgradeChannelPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/auto-upgrade-node-image#register-the-nodeosupgradechannelpreview-feature-flag) for more information.
	NodeOsChannelUpgrade pulumi.StringPtrOutput `pulumi:"nodeOsChannelUpgrade"`
	// The name of the Resource Group where the Kubernetes Nodes should exist. Changing this forces a new resource to be created.
	//
	// > **Note:** Azure requires that a new, non-existent Resource Group is used, as otherwise, the provisioning of the Kubernetes Service will fail.
	NodeResourceGroup pulumi.StringOutput `pulumi:"nodeResourceGroup"`
	// The ID of the Resource Group containing the resources for this Managed Kubernetes Cluster.
	NodeResourceGroupId pulumi.StringOutput `pulumi:"nodeResourceGroupId"`
	// Enable or Disable the [OIDC issuer URL](https://learn.microsoft.com/en-gb/azure/aks/use-oidc-issuer)
	OidcIssuerEnabled pulumi.BoolPtrOutput `pulumi:"oidcIssuerEnabled"`
	// The OIDC issuer URL that is associated with the cluster.
	OidcIssuerUrl pulumi.StringOutput `pulumi:"oidcIssuerUrl"`
	// A `omsAgent` block as defined below.
	OmsAgent KubernetesClusterOmsAgentPtrOutput `pulumi:"omsAgent"`
	// Is Open Service Mesh enabled? For more details, please visit [Open Service Mesh for AKS](https://docs.microsoft.com/azure/aks/open-service-mesh-about).
	OpenServiceMeshEnabled pulumi.BoolPtrOutput `pulumi:"openServiceMeshEnabled"`
	// The FQDN for the Azure Portal resources when private link has been enabled, which is only resolvable inside the Virtual Network used by the Kubernetes Cluster.
	PortalFqdn pulumi.StringOutput `pulumi:"portalFqdn"`
	// Should this Kubernetes Cluster have its API server only exposed on internal IP addresses? This provides a Private IP Address for the Kubernetes API on the Virtual Network where the Kubernetes Cluster is located. Defaults to `false`. Changing this forces a new resource to be created.
	PrivateClusterEnabled pulumi.BoolPtrOutput `pulumi:"privateClusterEnabled"`
	// Specifies whether a Public FQDN for this Private Cluster should be added. Defaults to `false`.
	//
	// > **Note:** If you use BYO DNS Zone, the AKS cluster should either use a User Assigned Identity or a service principal (which is deprecated) with the `Private DNS Zone Contributor` role and access to this Private DNS Zone. If `UserAssigned` identity is used - to prevent improper resource order destruction - the cluster should depend on the role assignment, like in this example:
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/authorization"
	// 	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/containerservice"
	// 	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
	// 	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/privatedns"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
	// 			Location: pulumi.String("West Europe"),
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		exampleZone, err := privatedns.NewZone(ctx, "exampleZone", &privatedns.ZoneArgs{
	// 			ResourceGroupName: exampleResourceGroup.Name,
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		exampleUserAssignedIdentity, err := authorization.NewUserAssignedIdentity(ctx, "exampleUserAssignedIdentity", &authorization.UserAssignedIdentityArgs{
	// 			ResourceGroupName: exampleResourceGroup.Name,
	// 			Location:          exampleResourceGroup.Location,
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		exampleAssignment, err := authorization.NewAssignment(ctx, "exampleAssignment", &authorization.AssignmentArgs{
	// 			Scope:              exampleZone.ID(),
	// 			RoleDefinitionName: pulumi.String("Private DNS Zone Contributor"),
	// 			PrincipalId:        exampleUserAssignedIdentity.PrincipalId,
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		_, err = containerservice.NewKubernetesCluster(ctx, "exampleKubernetesCluster", &containerservice.KubernetesClusterArgs{
	// 			Location:              exampleResourceGroup.Location,
	// 			ResourceGroupName:     exampleResourceGroup.Name,
	// 			DnsPrefix:             pulumi.String("aksexamplednsprefix1"),
	// 			PrivateClusterEnabled: pulumi.Bool(true),
	// 			PrivateDnsZoneId:      exampleZone.ID(),
	// 		}, pulumi.DependsOn([]pulumi.Resource{
	// 			exampleAssignment,
	// 		}))
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	PrivateClusterPublicFqdnEnabled pulumi.BoolPtrOutput `pulumi:"privateClusterPublicFqdnEnabled"`
	// Either the ID of Private DNS Zone which should be delegated to this Cluster, `System` to have AKS manage this or `None`. In case of `None` you will need to bring your own DNS server and set up resolving, otherwise, the cluster will have issues after provisioning. Changing this forces a new resource to be created.
	PrivateDnsZoneId pulumi.StringOutput `pulumi:"privateDnsZoneId"`
	// The FQDN for the Kubernetes Cluster when private link has been enabled, which is only resolvable inside the Virtual Network used by the Kubernetes Cluster.
	PrivateFqdn pulumi.StringOutput `pulumi:"privateFqdn"`
	// Whether public network access is allowed for this Kubernetes Cluster. Defaults to `true`.
	//
	// !> **Note:** `publicNetworkAccessEnabled` is currently not functional and is not passed to the Azure API. For further information please see this [issue](https://github.com/Azure/AKS/issues/3690). For controlling the public and private exposure of a cluster please see the properties `privateClusterEnabled` and `apiServerAccessProfile`.
	//
	// Deprecated: `public_network_access_enabled` is currently not functional and is not be passed to the API
	PublicNetworkAccessEnabled pulumi.BoolPtrOutput `pulumi:"publicNetworkAccessEnabled"`
	// Specifies the Resource Group where the Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// Whether Role Based Access Control for the Kubernetes Cluster should be enabled. Defaults to `true`. Changing this forces a new resource to be created.
	RoleBasedAccessControlEnabled pulumi.BoolPtrOutput `pulumi:"roleBasedAccessControlEnabled"`
	// Whether to enable run command for the cluster or not. Defaults to `true`.
	RunCommandEnabled pulumi.BoolPtrOutput `pulumi:"runCommandEnabled"`
	// A `serviceMeshProfile` block as defined below.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/AzureServiceMeshPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/istio-deploy-addon#register-the-azureservicemeshpreview-feature-flag) for more information.
	ServiceMeshProfile KubernetesClusterServiceMeshProfilePtrOutput `pulumi:"serviceMeshProfile"`
	// A `servicePrincipal` block as documented below. One of either `identity` or `servicePrincipal` must be specified.
	//
	// !> **Note:** A migration scenario from `servicePrincipal` to `identity` is supported. When upgrading `servicePrincipal` to `identity`, your cluster's control plane and addon pods will switch to use managed identity, but the kubelets will keep using your configured `servicePrincipal` until you upgrade your Node Pool.
	ServicePrincipal KubernetesClusterServicePrincipalPtrOutput `pulumi:"servicePrincipal"`
	// The SKU Tier that should be used for this Kubernetes Cluster. Possible values are `Free`, `Standard` (which includes the Uptime SLA) and `Premium`. Defaults to `Free`.
	//
	// > **Note:** Whilst the AKS API previously supported the `Paid` SKU - the AKS API introduced a breaking change in API Version `2023-02-01` (used in v3.51.0 and later) where the value `Paid` must now be set to `Standard`.
	SkuTier pulumi.StringPtrOutput `pulumi:"skuTier"`
	// A `storageProfile` block as defined below.
	StorageProfile KubernetesClusterStorageProfilePtrOutput `pulumi:"storageProfile"`
	// Specifies the support plan which should be used for this Kubernetes Cluster. Possible values are `KubernetesOfficial` and `AKSLongTermSupport`. Defaults to `KubernetesOfficial`.
	SupportPlan pulumi.StringPtrOutput `pulumi:"supportPlan"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A `webAppRouting` block as defined below.
	WebAppRouting KubernetesClusterWebAppRoutingPtrOutput `pulumi:"webAppRouting"`
	// A `windowsProfile` block as defined below.
	WindowsProfile KubernetesClusterWindowsProfileOutput `pulumi:"windowsProfile"`
	// A `workloadAutoscalerProfile` block defined below.
	WorkloadAutoscalerProfile KubernetesClusterWorkloadAutoscalerProfilePtrOutput `pulumi:"workloadAutoscalerProfile"`
	// Specifies whether Azure AD Workload Identity should be enabled for the Cluster. Defaults to `false`.
	//
	// > **Note:** To enable Azure AD Workload Identity `oidcIssuerEnabled` must be set to `true`.
	//
	// > **Note:** Enabling this option will allocate Workload Identity resources to the `kube-system` namespace in Kubernetes. If you wish to customize the deployment of Workload Identity, you can refer to [the documentation on Azure AD Workload Identity.](https://azure.github.io/azure-workload-identity/docs/installation/mutating-admission-webhook.html) The documentation provides guidance on how to install the mutating admission webhook, which allows for the customization of Workload Identity deployment.
	WorkloadIdentityEnabled pulumi.BoolPtrOutput `pulumi:"workloadIdentityEnabled"`
}

// NewKubernetesCluster registers a new resource with the given unique name, arguments, and options.
func NewKubernetesCluster(ctx *pulumi.Context,
	name string, args *KubernetesClusterArgs, opts ...pulumi.ResourceOption) (*KubernetesCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DefaultNodePool == nil {
		return nil, errors.New("invalid value for required argument 'DefaultNodePool'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"kubeAdminConfigRaw",
		"kubeAdminConfigs",
		"kubeConfigRaw",
		"kubeConfigs",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource KubernetesCluster
	err := ctx.RegisterResource("azure:containerservice/kubernetesCluster:KubernetesCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKubernetesCluster gets an existing KubernetesCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKubernetesCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KubernetesClusterState, opts ...pulumi.ResourceOption) (*KubernetesCluster, error) {
	var resource KubernetesCluster
	err := ctx.ReadResource("azure:containerservice/kubernetesCluster:KubernetesCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KubernetesCluster resources.
type kubernetesClusterState struct {
	// A `aciConnectorLinux` block as defined below. For more details, please visit [Create and configure an AKS cluster to use virtual nodes](https://docs.microsoft.com/azure/aks/virtual-nodes-portal).
	AciConnectorLinux *KubernetesClusterAciConnectorLinux `pulumi:"aciConnectorLinux"`
	// An `apiServerAccessProfile` block as defined below.
	ApiServerAccessProfile *KubernetesClusterApiServerAccessProfile `pulumi:"apiServerAccessProfile"`
	// Deprecated: This property has been renamed to `authorized_ip_ranges` within the `api_server_access_profile` block and will be removed in v4.0 of the provider
	ApiServerAuthorizedIpRanges []string `pulumi:"apiServerAuthorizedIpRanges"`
	// A `autoScalerProfile` block as defined below.
	AutoScalerProfile *KubernetesClusterAutoScalerProfile `pulumi:"autoScalerProfile"`
	// The upgrade channel for this Kubernetes Cluster. Possible values are `patch`, `rapid`, `node-image` and `stable`. Omitting this field sets this value to `none`.
	//
	// !> **Note:** Cluster Auto-Upgrade will update the Kubernetes Cluster (and its Node Pools) to the latest GA version of Kubernetes automatically - please [see the Azure documentation for more information](https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel).
	//
	// > **Note:** Cluster Auto-Upgrade only updates to GA versions of Kubernetes and will not update to Preview versions.
	AutomaticChannelUpgrade *string `pulumi:"automaticChannelUpgrade"`
	// A `azureActiveDirectoryRoleBasedAccessControl` block as defined below.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/AKS-PrometheusAddonPreview` is enabled, see [the documentation](https://learn.microsoft.com/en-us/azure/azure-monitor/essentials/prometheus-metrics-enable?tabs=azure-portal) for more information.
	AzureActiveDirectoryRoleBasedAccessControl *KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl `pulumi:"azureActiveDirectoryRoleBasedAccessControl"`
	// Should the Azure Policy Add-On be enabled? For more details please visit [Understand Azure Policy for Azure Kubernetes Service](https://docs.microsoft.com/en-ie/azure/governance/policy/concepts/rego-for-aks)
	AzurePolicyEnabled *bool `pulumi:"azurePolicyEnabled"`
	// A `confidentialComputing` block as defined below. For more details please [the documentation](https://learn.microsoft.com/en-us/azure/confidential-computing/confidential-nodes-aks-overview)
	ConfidentialComputing *KubernetesClusterConfidentialComputing `pulumi:"confidentialComputing"`
	// A list of up to 10 base64 encoded CAs that will be added to the trust store on nodes with the `customCaTrustEnabled` feature enabled.
	//
	// > **Note:** Removing `customCaTrustCertificatesBase64` after it has been set forces a new resource to be created.
	CustomCaTrustCertificatesBase64s []string `pulumi:"customCaTrustCertificatesBase64s"`
	// A `defaultNodePool` block as defined below.
	DefaultNodePool *KubernetesClusterDefaultNodePool `pulumi:"defaultNodePool"`
	// The ID of the Disk Encryption Set which should be used for the Nodes and Volumes. More information [can be found in the documentation](https://docs.microsoft.com/azure/aks/azure-disk-customer-managed-keys). Changing this forces a new resource to be created.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// DNS prefix specified when creating the managed cluster. Possible values must begin and end with a letter or number, contain only letters, numbers, and hyphens and be between 1 and 54 characters in length. Changing this forces a new resource to be created.
	DnsPrefix *string `pulumi:"dnsPrefix"`
	// Specifies the DNS prefix to use with private clusters. Changing this forces a new resource to be created.
	//
	// > **Note:** You must define either a `dnsPrefix` or a `dnsPrefixPrivateCluster` field.
	//
	// In addition, one of either `identity` or `servicePrincipal` blocks must be specified.
	DnsPrefixPrivateCluster *string `pulumi:"dnsPrefixPrivateCluster"`
	// Specifies the Edge Zone within the Azure Region where this Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created.
	EdgeZone *string `pulumi:"edgeZone"`
	// Deprecated: The AKS API has removed support for this field on 2020-10-15 and is no longer possible to configure this the Pod Security Policy.
	EnablePodSecurityPolicy *bool `pulumi:"enablePodSecurityPolicy"`
	// The FQDN of the Azure Kubernetes Managed Cluster.
	Fqdn *string `pulumi:"fqdn"`
	// Should HTTP Application Routing be enabled?
	//
	// > **Note:** At this time HTTP Application Routing is not supported in Azure China or Azure US Government.
	HttpApplicationRoutingEnabled *bool `pulumi:"httpApplicationRoutingEnabled"`
	// The Zone Name of the HTTP Application Routing.
	HttpApplicationRoutingZoneName *string `pulumi:"httpApplicationRoutingZoneName"`
	// A `httpProxyConfig` block as defined below.
	HttpProxyConfig *KubernetesClusterHttpProxyConfig `pulumi:"httpProxyConfig"`
	// An `identity` block as defined below. One of either `identity` or `servicePrincipal` must be specified.
	//
	// !> **Note:** A migration scenario from `servicePrincipal` to `identity` is supported. When upgrading `servicePrincipal` to `identity`, your cluster's control plane and addon pods will switch to use managed identity, but the kubelets will keep using your configured `servicePrincipal` until you upgrade your Node Pool.
	Identity *KubernetesClusterIdentity `pulumi:"identity"`
	// Specifies whether Image Cleaner is enabled.
	ImageCleanerEnabled *bool `pulumi:"imageCleanerEnabled"`
	// Specifies the interval in hours when images should be cleaned up. Defaults to `48`.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/EnableImageCleanerPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/image-cleaner) for more information.
	ImageCleanerIntervalHours *int `pulumi:"imageCleanerIntervalHours"`
	// A `ingressApplicationGateway` block as defined below.
	//
	// > **Note:** Since the Application Gateway is deployed inside a Virtual Network, users (and Service Principals) that are operating the Application Gateway must have the `Microsoft.Network/virtualNetworks/subnets/join/action` permission on the Virtual Network or Subnet. For more details, please visit [Virtual Network Permission](https://learn.microsoft.com/en-us/azure/application-gateway/configuration-infrastructure#virtual-network-permission).
	IngressApplicationGateway *KubernetesClusterIngressApplicationGateway `pulumi:"ingressApplicationGateway"`
	// A `keyManagementService` block as defined below. For more details, please visit [Key Management Service (KMS) etcd encryption to an AKS cluster](https://learn.microsoft.com/en-us/azure/aks/use-kms-etcd-encryption).
	KeyManagementService *KubernetesClusterKeyManagementService `pulumi:"keyManagementService"`
	// A `keyVaultSecretsProvider` block as defined below. For more details, please visit [Azure Keyvault Secrets Provider for AKS](https://docs.microsoft.com/azure/aks/csi-secrets-store-driver).
	KeyVaultSecretsProvider *KubernetesClusterKeyVaultSecretsProvider `pulumi:"keyVaultSecretsProvider"`
	// Raw Kubernetes config for the admin account to be used by [kubectl](https://kubernetes.io/docs/reference/kubectl/overview/) and other compatible tools. This is only available when Role Based Access Control with Azure Active Directory is enabled and local accounts enabled.
	KubeAdminConfigRaw *string `pulumi:"kubeAdminConfigRaw"`
	// A `kubeAdminConfig` block as defined below. This is only available when Role Based Access Control with Azure Active Directory is enabled and local accounts enabled.
	KubeAdminConfigs []KubernetesClusterKubeAdminConfig `pulumi:"kubeAdminConfigs"`
	// Raw Kubernetes config to be used by [kubectl](https://kubernetes.io/docs/reference/kubectl/overview/) and other compatible tools.
	KubeConfigRaw *string `pulumi:"kubeConfigRaw"`
	// A `kubeConfig` block as defined below.
	KubeConfigs []KubernetesClusterKubeConfig `pulumi:"kubeConfigs"`
	// A `kubeletIdentity` block as defined below.
	KubeletIdentity *KubernetesClusterKubeletIdentity `pulumi:"kubeletIdentity"`
	// Version of Kubernetes specified when creating the AKS managed cluster. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as `1.22` are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in [the documentation](https://docs.microsoft.com/en-us/azure/aks/supported-kubernetes-versions?tabs=azure-cli#alias-minor-version).
	//
	// > **Note:** Upgrading your cluster may take up to 10 minutes per node.
	KubernetesVersion *string `pulumi:"kubernetesVersion"`
	// A `linuxProfile` block as defined below.
	LinuxProfile *KubernetesClusterLinuxProfile `pulumi:"linuxProfile"`
	// If `true` local accounts will be disabled. See [the documentation](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts) for more information.
	//
	// > **Note:** If `localAccountDisabled` is set to `true`, it is required to enable Kubernetes RBAC and AKS-managed Azure AD integration. See [the documentation](https://docs.microsoft.com/azure/aks/managed-aad#azure-ad-authentication-overview) for more information.
	LocalAccountDisabled *bool `pulumi:"localAccountDisabled"`
	// The location where the Managed Kubernetes Cluster should be created. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// A `maintenanceWindow` block as defined below.
	MaintenanceWindow *KubernetesClusterMaintenanceWindow `pulumi:"maintenanceWindow"`
	// A `maintenanceWindowAutoUpgrade` block as defined below.
	MaintenanceWindowAutoUpgrade *KubernetesClusterMaintenanceWindowAutoUpgrade `pulumi:"maintenanceWindowAutoUpgrade"`
	// A `maintenanceWindowNodeOs` block as defined below.
	MaintenanceWindowNodeOs *KubernetesClusterMaintenanceWindowNodeOs `pulumi:"maintenanceWindowNodeOs"`
	// A `microsoftDefender` block as defined below.
	MicrosoftDefender *KubernetesClusterMicrosoftDefender `pulumi:"microsoftDefender"`
	// Specifies a Prometheus add-on profile for the Kubernetes Cluster. A `monitorMetrics` block as defined below.
	MonitorMetrics *KubernetesClusterMonitorMetrics `pulumi:"monitorMetrics"`
	// The name of the Managed Kubernetes Cluster to create. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A `networkProfile` block as defined below. Changing this forces a new resource to be created.
	//
	// > **Note:** If `networkProfile` is not defined, `kubenet` profile will be used by default.
	NetworkProfile *KubernetesClusterNetworkProfile `pulumi:"networkProfile"`
	// The upgrade channel for this Kubernetes Cluster Nodes' OS Image. Possible values are `Unmanaged`, `SecurityPatch`, `NodeImage` and `None`.
	//
	// > **Note:** `nodeOsChannelUpgrade` must be set to `NodeImage` if `automaticChannelUpgrade` has been set to `node-image`
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/NodeOsUpgradeChannelPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/auto-upgrade-node-image#register-the-nodeosupgradechannelpreview-feature-flag) for more information.
	NodeOsChannelUpgrade *string `pulumi:"nodeOsChannelUpgrade"`
	// The name of the Resource Group where the Kubernetes Nodes should exist. Changing this forces a new resource to be created.
	//
	// > **Note:** Azure requires that a new, non-existent Resource Group is used, as otherwise, the provisioning of the Kubernetes Service will fail.
	NodeResourceGroup *string `pulumi:"nodeResourceGroup"`
	// The ID of the Resource Group containing the resources for this Managed Kubernetes Cluster.
	NodeResourceGroupId *string `pulumi:"nodeResourceGroupId"`
	// Enable or Disable the [OIDC issuer URL](https://learn.microsoft.com/en-gb/azure/aks/use-oidc-issuer)
	OidcIssuerEnabled *bool `pulumi:"oidcIssuerEnabled"`
	// The OIDC issuer URL that is associated with the cluster.
	OidcIssuerUrl *string `pulumi:"oidcIssuerUrl"`
	// A `omsAgent` block as defined below.
	OmsAgent *KubernetesClusterOmsAgent `pulumi:"omsAgent"`
	// Is Open Service Mesh enabled? For more details, please visit [Open Service Mesh for AKS](https://docs.microsoft.com/azure/aks/open-service-mesh-about).
	OpenServiceMeshEnabled *bool `pulumi:"openServiceMeshEnabled"`
	// The FQDN for the Azure Portal resources when private link has been enabled, which is only resolvable inside the Virtual Network used by the Kubernetes Cluster.
	PortalFqdn *string `pulumi:"portalFqdn"`
	// Should this Kubernetes Cluster have its API server only exposed on internal IP addresses? This provides a Private IP Address for the Kubernetes API on the Virtual Network where the Kubernetes Cluster is located. Defaults to `false`. Changing this forces a new resource to be created.
	PrivateClusterEnabled *bool `pulumi:"privateClusterEnabled"`
	// Specifies whether a Public FQDN for this Private Cluster should be added. Defaults to `false`.
	//
	// > **Note:** If you use BYO DNS Zone, the AKS cluster should either use a User Assigned Identity or a service principal (which is deprecated) with the `Private DNS Zone Contributor` role and access to this Private DNS Zone. If `UserAssigned` identity is used - to prevent improper resource order destruction - the cluster should depend on the role assignment, like in this example:
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/authorization"
	// 	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/containerservice"
	// 	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
	// 	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/privatedns"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
	// 			Location: pulumi.String("West Europe"),
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		exampleZone, err := privatedns.NewZone(ctx, "exampleZone", &privatedns.ZoneArgs{
	// 			ResourceGroupName: exampleResourceGroup.Name,
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		exampleUserAssignedIdentity, err := authorization.NewUserAssignedIdentity(ctx, "exampleUserAssignedIdentity", &authorization.UserAssignedIdentityArgs{
	// 			ResourceGroupName: exampleResourceGroup.Name,
	// 			Location:          exampleResourceGroup.Location,
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		exampleAssignment, err := authorization.NewAssignment(ctx, "exampleAssignment", &authorization.AssignmentArgs{
	// 			Scope:              exampleZone.ID(),
	// 			RoleDefinitionName: pulumi.String("Private DNS Zone Contributor"),
	// 			PrincipalId:        exampleUserAssignedIdentity.PrincipalId,
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		_, err = containerservice.NewKubernetesCluster(ctx, "exampleKubernetesCluster", &containerservice.KubernetesClusterArgs{
	// 			Location:              exampleResourceGroup.Location,
	// 			ResourceGroupName:     exampleResourceGroup.Name,
	// 			DnsPrefix:             pulumi.String("aksexamplednsprefix1"),
	// 			PrivateClusterEnabled: pulumi.Bool(true),
	// 			PrivateDnsZoneId:      exampleZone.ID(),
	// 		}, pulumi.DependsOn([]pulumi.Resource{
	// 			exampleAssignment,
	// 		}))
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	PrivateClusterPublicFqdnEnabled *bool `pulumi:"privateClusterPublicFqdnEnabled"`
	// Either the ID of Private DNS Zone which should be delegated to this Cluster, `System` to have AKS manage this or `None`. In case of `None` you will need to bring your own DNS server and set up resolving, otherwise, the cluster will have issues after provisioning. Changing this forces a new resource to be created.
	PrivateDnsZoneId *string `pulumi:"privateDnsZoneId"`
	// The FQDN for the Kubernetes Cluster when private link has been enabled, which is only resolvable inside the Virtual Network used by the Kubernetes Cluster.
	PrivateFqdn *string `pulumi:"privateFqdn"`
	// Whether public network access is allowed for this Kubernetes Cluster. Defaults to `true`.
	//
	// !> **Note:** `publicNetworkAccessEnabled` is currently not functional and is not passed to the Azure API. For further information please see this [issue](https://github.com/Azure/AKS/issues/3690). For controlling the public and private exposure of a cluster please see the properties `privateClusterEnabled` and `apiServerAccessProfile`.
	//
	// Deprecated: `public_network_access_enabled` is currently not functional and is not be passed to the API
	PublicNetworkAccessEnabled *bool `pulumi:"publicNetworkAccessEnabled"`
	// Specifies the Resource Group where the Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// Whether Role Based Access Control for the Kubernetes Cluster should be enabled. Defaults to `true`. Changing this forces a new resource to be created.
	RoleBasedAccessControlEnabled *bool `pulumi:"roleBasedAccessControlEnabled"`
	// Whether to enable run command for the cluster or not. Defaults to `true`.
	RunCommandEnabled *bool `pulumi:"runCommandEnabled"`
	// A `serviceMeshProfile` block as defined below.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/AzureServiceMeshPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/istio-deploy-addon#register-the-azureservicemeshpreview-feature-flag) for more information.
	ServiceMeshProfile *KubernetesClusterServiceMeshProfile `pulumi:"serviceMeshProfile"`
	// A `servicePrincipal` block as documented below. One of either `identity` or `servicePrincipal` must be specified.
	//
	// !> **Note:** A migration scenario from `servicePrincipal` to `identity` is supported. When upgrading `servicePrincipal` to `identity`, your cluster's control plane and addon pods will switch to use managed identity, but the kubelets will keep using your configured `servicePrincipal` until you upgrade your Node Pool.
	ServicePrincipal *KubernetesClusterServicePrincipal `pulumi:"servicePrincipal"`
	// The SKU Tier that should be used for this Kubernetes Cluster. Possible values are `Free`, `Standard` (which includes the Uptime SLA) and `Premium`. Defaults to `Free`.
	//
	// > **Note:** Whilst the AKS API previously supported the `Paid` SKU - the AKS API introduced a breaking change in API Version `2023-02-01` (used in v3.51.0 and later) where the value `Paid` must now be set to `Standard`.
	SkuTier *string `pulumi:"skuTier"`
	// A `storageProfile` block as defined below.
	StorageProfile *KubernetesClusterStorageProfile `pulumi:"storageProfile"`
	// Specifies the support plan which should be used for this Kubernetes Cluster. Possible values are `KubernetesOfficial` and `AKSLongTermSupport`. Defaults to `KubernetesOfficial`.
	SupportPlan *string `pulumi:"supportPlan"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// A `webAppRouting` block as defined below.
	WebAppRouting *KubernetesClusterWebAppRouting `pulumi:"webAppRouting"`
	// A `windowsProfile` block as defined below.
	WindowsProfile *KubernetesClusterWindowsProfile `pulumi:"windowsProfile"`
	// A `workloadAutoscalerProfile` block defined below.
	WorkloadAutoscalerProfile *KubernetesClusterWorkloadAutoscalerProfile `pulumi:"workloadAutoscalerProfile"`
	// Specifies whether Azure AD Workload Identity should be enabled for the Cluster. Defaults to `false`.
	//
	// > **Note:** To enable Azure AD Workload Identity `oidcIssuerEnabled` must be set to `true`.
	//
	// > **Note:** Enabling this option will allocate Workload Identity resources to the `kube-system` namespace in Kubernetes. If you wish to customize the deployment of Workload Identity, you can refer to [the documentation on Azure AD Workload Identity.](https://azure.github.io/azure-workload-identity/docs/installation/mutating-admission-webhook.html) The documentation provides guidance on how to install the mutating admission webhook, which allows for the customization of Workload Identity deployment.
	WorkloadIdentityEnabled *bool `pulumi:"workloadIdentityEnabled"`
}

type KubernetesClusterState struct {
	// A `aciConnectorLinux` block as defined below. For more details, please visit [Create and configure an AKS cluster to use virtual nodes](https://docs.microsoft.com/azure/aks/virtual-nodes-portal).
	AciConnectorLinux KubernetesClusterAciConnectorLinuxPtrInput
	// An `apiServerAccessProfile` block as defined below.
	ApiServerAccessProfile KubernetesClusterApiServerAccessProfilePtrInput
	// Deprecated: This property has been renamed to `authorized_ip_ranges` within the `api_server_access_profile` block and will be removed in v4.0 of the provider
	ApiServerAuthorizedIpRanges pulumi.StringArrayInput
	// A `autoScalerProfile` block as defined below.
	AutoScalerProfile KubernetesClusterAutoScalerProfilePtrInput
	// The upgrade channel for this Kubernetes Cluster. Possible values are `patch`, `rapid`, `node-image` and `stable`. Omitting this field sets this value to `none`.
	//
	// !> **Note:** Cluster Auto-Upgrade will update the Kubernetes Cluster (and its Node Pools) to the latest GA version of Kubernetes automatically - please [see the Azure documentation for more information](https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel).
	//
	// > **Note:** Cluster Auto-Upgrade only updates to GA versions of Kubernetes and will not update to Preview versions.
	AutomaticChannelUpgrade pulumi.StringPtrInput
	// A `azureActiveDirectoryRoleBasedAccessControl` block as defined below.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/AKS-PrometheusAddonPreview` is enabled, see [the documentation](https://learn.microsoft.com/en-us/azure/azure-monitor/essentials/prometheus-metrics-enable?tabs=azure-portal) for more information.
	AzureActiveDirectoryRoleBasedAccessControl KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrInput
	// Should the Azure Policy Add-On be enabled? For more details please visit [Understand Azure Policy for Azure Kubernetes Service](https://docs.microsoft.com/en-ie/azure/governance/policy/concepts/rego-for-aks)
	AzurePolicyEnabled pulumi.BoolPtrInput
	// A `confidentialComputing` block as defined below. For more details please [the documentation](https://learn.microsoft.com/en-us/azure/confidential-computing/confidential-nodes-aks-overview)
	ConfidentialComputing KubernetesClusterConfidentialComputingPtrInput
	// A list of up to 10 base64 encoded CAs that will be added to the trust store on nodes with the `customCaTrustEnabled` feature enabled.
	//
	// > **Note:** Removing `customCaTrustCertificatesBase64` after it has been set forces a new resource to be created.
	CustomCaTrustCertificatesBase64s pulumi.StringArrayInput
	// A `defaultNodePool` block as defined below.
	DefaultNodePool KubernetesClusterDefaultNodePoolPtrInput
	// The ID of the Disk Encryption Set which should be used for the Nodes and Volumes. More information [can be found in the documentation](https://docs.microsoft.com/azure/aks/azure-disk-customer-managed-keys). Changing this forces a new resource to be created.
	DiskEncryptionSetId pulumi.StringPtrInput
	// DNS prefix specified when creating the managed cluster. Possible values must begin and end with a letter or number, contain only letters, numbers, and hyphens and be between 1 and 54 characters in length. Changing this forces a new resource to be created.
	DnsPrefix pulumi.StringPtrInput
	// Specifies the DNS prefix to use with private clusters. Changing this forces a new resource to be created.
	//
	// > **Note:** You must define either a `dnsPrefix` or a `dnsPrefixPrivateCluster` field.
	//
	// In addition, one of either `identity` or `servicePrincipal` blocks must be specified.
	DnsPrefixPrivateCluster pulumi.StringPtrInput
	// Specifies the Edge Zone within the Azure Region where this Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created.
	EdgeZone pulumi.StringPtrInput
	// Deprecated: The AKS API has removed support for this field on 2020-10-15 and is no longer possible to configure this the Pod Security Policy.
	EnablePodSecurityPolicy pulumi.BoolPtrInput
	// The FQDN of the Azure Kubernetes Managed Cluster.
	Fqdn pulumi.StringPtrInput
	// Should HTTP Application Routing be enabled?
	//
	// > **Note:** At this time HTTP Application Routing is not supported in Azure China or Azure US Government.
	HttpApplicationRoutingEnabled pulumi.BoolPtrInput
	// The Zone Name of the HTTP Application Routing.
	HttpApplicationRoutingZoneName pulumi.StringPtrInput
	// A `httpProxyConfig` block as defined below.
	HttpProxyConfig KubernetesClusterHttpProxyConfigPtrInput
	// An `identity` block as defined below. One of either `identity` or `servicePrincipal` must be specified.
	//
	// !> **Note:** A migration scenario from `servicePrincipal` to `identity` is supported. When upgrading `servicePrincipal` to `identity`, your cluster's control plane and addon pods will switch to use managed identity, but the kubelets will keep using your configured `servicePrincipal` until you upgrade your Node Pool.
	Identity KubernetesClusterIdentityPtrInput
	// Specifies whether Image Cleaner is enabled.
	ImageCleanerEnabled pulumi.BoolPtrInput
	// Specifies the interval in hours when images should be cleaned up. Defaults to `48`.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/EnableImageCleanerPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/image-cleaner) for more information.
	ImageCleanerIntervalHours pulumi.IntPtrInput
	// A `ingressApplicationGateway` block as defined below.
	//
	// > **Note:** Since the Application Gateway is deployed inside a Virtual Network, users (and Service Principals) that are operating the Application Gateway must have the `Microsoft.Network/virtualNetworks/subnets/join/action` permission on the Virtual Network or Subnet. For more details, please visit [Virtual Network Permission](https://learn.microsoft.com/en-us/azure/application-gateway/configuration-infrastructure#virtual-network-permission).
	IngressApplicationGateway KubernetesClusterIngressApplicationGatewayPtrInput
	// A `keyManagementService` block as defined below. For more details, please visit [Key Management Service (KMS) etcd encryption to an AKS cluster](https://learn.microsoft.com/en-us/azure/aks/use-kms-etcd-encryption).
	KeyManagementService KubernetesClusterKeyManagementServicePtrInput
	// A `keyVaultSecretsProvider` block as defined below. For more details, please visit [Azure Keyvault Secrets Provider for AKS](https://docs.microsoft.com/azure/aks/csi-secrets-store-driver).
	KeyVaultSecretsProvider KubernetesClusterKeyVaultSecretsProviderPtrInput
	// Raw Kubernetes config for the admin account to be used by [kubectl](https://kubernetes.io/docs/reference/kubectl/overview/) and other compatible tools. This is only available when Role Based Access Control with Azure Active Directory is enabled and local accounts enabled.
	KubeAdminConfigRaw pulumi.StringPtrInput
	// A `kubeAdminConfig` block as defined below. This is only available when Role Based Access Control with Azure Active Directory is enabled and local accounts enabled.
	KubeAdminConfigs KubernetesClusterKubeAdminConfigArrayInput
	// Raw Kubernetes config to be used by [kubectl](https://kubernetes.io/docs/reference/kubectl/overview/) and other compatible tools.
	KubeConfigRaw pulumi.StringPtrInput
	// A `kubeConfig` block as defined below.
	KubeConfigs KubernetesClusterKubeConfigArrayInput
	// A `kubeletIdentity` block as defined below.
	KubeletIdentity KubernetesClusterKubeletIdentityPtrInput
	// Version of Kubernetes specified when creating the AKS managed cluster. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as `1.22` are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in [the documentation](https://docs.microsoft.com/en-us/azure/aks/supported-kubernetes-versions?tabs=azure-cli#alias-minor-version).
	//
	// > **Note:** Upgrading your cluster may take up to 10 minutes per node.
	KubernetesVersion pulumi.StringPtrInput
	// A `linuxProfile` block as defined below.
	LinuxProfile KubernetesClusterLinuxProfilePtrInput
	// If `true` local accounts will be disabled. See [the documentation](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts) for more information.
	//
	// > **Note:** If `localAccountDisabled` is set to `true`, it is required to enable Kubernetes RBAC and AKS-managed Azure AD integration. See [the documentation](https://docs.microsoft.com/azure/aks/managed-aad#azure-ad-authentication-overview) for more information.
	LocalAccountDisabled pulumi.BoolPtrInput
	// The location where the Managed Kubernetes Cluster should be created. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// A `maintenanceWindow` block as defined below.
	MaintenanceWindow KubernetesClusterMaintenanceWindowPtrInput
	// A `maintenanceWindowAutoUpgrade` block as defined below.
	MaintenanceWindowAutoUpgrade KubernetesClusterMaintenanceWindowAutoUpgradePtrInput
	// A `maintenanceWindowNodeOs` block as defined below.
	MaintenanceWindowNodeOs KubernetesClusterMaintenanceWindowNodeOsPtrInput
	// A `microsoftDefender` block as defined below.
	MicrosoftDefender KubernetesClusterMicrosoftDefenderPtrInput
	// Specifies a Prometheus add-on profile for the Kubernetes Cluster. A `monitorMetrics` block as defined below.
	MonitorMetrics KubernetesClusterMonitorMetricsPtrInput
	// The name of the Managed Kubernetes Cluster to create. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A `networkProfile` block as defined below. Changing this forces a new resource to be created.
	//
	// > **Note:** If `networkProfile` is not defined, `kubenet` profile will be used by default.
	NetworkProfile KubernetesClusterNetworkProfilePtrInput
	// The upgrade channel for this Kubernetes Cluster Nodes' OS Image. Possible values are `Unmanaged`, `SecurityPatch`, `NodeImage` and `None`.
	//
	// > **Note:** `nodeOsChannelUpgrade` must be set to `NodeImage` if `automaticChannelUpgrade` has been set to `node-image`
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/NodeOsUpgradeChannelPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/auto-upgrade-node-image#register-the-nodeosupgradechannelpreview-feature-flag) for more information.
	NodeOsChannelUpgrade pulumi.StringPtrInput
	// The name of the Resource Group where the Kubernetes Nodes should exist. Changing this forces a new resource to be created.
	//
	// > **Note:** Azure requires that a new, non-existent Resource Group is used, as otherwise, the provisioning of the Kubernetes Service will fail.
	NodeResourceGroup pulumi.StringPtrInput
	// The ID of the Resource Group containing the resources for this Managed Kubernetes Cluster.
	NodeResourceGroupId pulumi.StringPtrInput
	// Enable or Disable the [OIDC issuer URL](https://learn.microsoft.com/en-gb/azure/aks/use-oidc-issuer)
	OidcIssuerEnabled pulumi.BoolPtrInput
	// The OIDC issuer URL that is associated with the cluster.
	OidcIssuerUrl pulumi.StringPtrInput
	// A `omsAgent` block as defined below.
	OmsAgent KubernetesClusterOmsAgentPtrInput
	// Is Open Service Mesh enabled? For more details, please visit [Open Service Mesh for AKS](https://docs.microsoft.com/azure/aks/open-service-mesh-about).
	OpenServiceMeshEnabled pulumi.BoolPtrInput
	// The FQDN for the Azure Portal resources when private link has been enabled, which is only resolvable inside the Virtual Network used by the Kubernetes Cluster.
	PortalFqdn pulumi.StringPtrInput
	// Should this Kubernetes Cluster have its API server only exposed on internal IP addresses? This provides a Private IP Address for the Kubernetes API on the Virtual Network where the Kubernetes Cluster is located. Defaults to `false`. Changing this forces a new resource to be created.
	PrivateClusterEnabled pulumi.BoolPtrInput
	// Specifies whether a Public FQDN for this Private Cluster should be added. Defaults to `false`.
	//
	// > **Note:** If you use BYO DNS Zone, the AKS cluster should either use a User Assigned Identity or a service principal (which is deprecated) with the `Private DNS Zone Contributor` role and access to this Private DNS Zone. If `UserAssigned` identity is used - to prevent improper resource order destruction - the cluster should depend on the role assignment, like in this example:
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/authorization"
	// 	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/containerservice"
	// 	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
	// 	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/privatedns"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
	// 			Location: pulumi.String("West Europe"),
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		exampleZone, err := privatedns.NewZone(ctx, "exampleZone", &privatedns.ZoneArgs{
	// 			ResourceGroupName: exampleResourceGroup.Name,
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		exampleUserAssignedIdentity, err := authorization.NewUserAssignedIdentity(ctx, "exampleUserAssignedIdentity", &authorization.UserAssignedIdentityArgs{
	// 			ResourceGroupName: exampleResourceGroup.Name,
	// 			Location:          exampleResourceGroup.Location,
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		exampleAssignment, err := authorization.NewAssignment(ctx, "exampleAssignment", &authorization.AssignmentArgs{
	// 			Scope:              exampleZone.ID(),
	// 			RoleDefinitionName: pulumi.String("Private DNS Zone Contributor"),
	// 			PrincipalId:        exampleUserAssignedIdentity.PrincipalId,
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		_, err = containerservice.NewKubernetesCluster(ctx, "exampleKubernetesCluster", &containerservice.KubernetesClusterArgs{
	// 			Location:              exampleResourceGroup.Location,
	// 			ResourceGroupName:     exampleResourceGroup.Name,
	// 			DnsPrefix:             pulumi.String("aksexamplednsprefix1"),
	// 			PrivateClusterEnabled: pulumi.Bool(true),
	// 			PrivateDnsZoneId:      exampleZone.ID(),
	// 		}, pulumi.DependsOn([]pulumi.Resource{
	// 			exampleAssignment,
	// 		}))
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	PrivateClusterPublicFqdnEnabled pulumi.BoolPtrInput
	// Either the ID of Private DNS Zone which should be delegated to this Cluster, `System` to have AKS manage this or `None`. In case of `None` you will need to bring your own DNS server and set up resolving, otherwise, the cluster will have issues after provisioning. Changing this forces a new resource to be created.
	PrivateDnsZoneId pulumi.StringPtrInput
	// The FQDN for the Kubernetes Cluster when private link has been enabled, which is only resolvable inside the Virtual Network used by the Kubernetes Cluster.
	PrivateFqdn pulumi.StringPtrInput
	// Whether public network access is allowed for this Kubernetes Cluster. Defaults to `true`.
	//
	// !> **Note:** `publicNetworkAccessEnabled` is currently not functional and is not passed to the Azure API. For further information please see this [issue](https://github.com/Azure/AKS/issues/3690). For controlling the public and private exposure of a cluster please see the properties `privateClusterEnabled` and `apiServerAccessProfile`.
	//
	// Deprecated: `public_network_access_enabled` is currently not functional and is not be passed to the API
	PublicNetworkAccessEnabled pulumi.BoolPtrInput
	// Specifies the Resource Group where the Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// Whether Role Based Access Control for the Kubernetes Cluster should be enabled. Defaults to `true`. Changing this forces a new resource to be created.
	RoleBasedAccessControlEnabled pulumi.BoolPtrInput
	// Whether to enable run command for the cluster or not. Defaults to `true`.
	RunCommandEnabled pulumi.BoolPtrInput
	// A `serviceMeshProfile` block as defined below.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/AzureServiceMeshPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/istio-deploy-addon#register-the-azureservicemeshpreview-feature-flag) for more information.
	ServiceMeshProfile KubernetesClusterServiceMeshProfilePtrInput
	// A `servicePrincipal` block as documented below. One of either `identity` or `servicePrincipal` must be specified.
	//
	// !> **Note:** A migration scenario from `servicePrincipal` to `identity` is supported. When upgrading `servicePrincipal` to `identity`, your cluster's control plane and addon pods will switch to use managed identity, but the kubelets will keep using your configured `servicePrincipal` until you upgrade your Node Pool.
	ServicePrincipal KubernetesClusterServicePrincipalPtrInput
	// The SKU Tier that should be used for this Kubernetes Cluster. Possible values are `Free`, `Standard` (which includes the Uptime SLA) and `Premium`. Defaults to `Free`.
	//
	// > **Note:** Whilst the AKS API previously supported the `Paid` SKU - the AKS API introduced a breaking change in API Version `2023-02-01` (used in v3.51.0 and later) where the value `Paid` must now be set to `Standard`.
	SkuTier pulumi.StringPtrInput
	// A `storageProfile` block as defined below.
	StorageProfile KubernetesClusterStorageProfilePtrInput
	// Specifies the support plan which should be used for this Kubernetes Cluster. Possible values are `KubernetesOfficial` and `AKSLongTermSupport`. Defaults to `KubernetesOfficial`.
	SupportPlan pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// A `webAppRouting` block as defined below.
	WebAppRouting KubernetesClusterWebAppRoutingPtrInput
	// A `windowsProfile` block as defined below.
	WindowsProfile KubernetesClusterWindowsProfilePtrInput
	// A `workloadAutoscalerProfile` block defined below.
	WorkloadAutoscalerProfile KubernetesClusterWorkloadAutoscalerProfilePtrInput
	// Specifies whether Azure AD Workload Identity should be enabled for the Cluster. Defaults to `false`.
	//
	// > **Note:** To enable Azure AD Workload Identity `oidcIssuerEnabled` must be set to `true`.
	//
	// > **Note:** Enabling this option will allocate Workload Identity resources to the `kube-system` namespace in Kubernetes. If you wish to customize the deployment of Workload Identity, you can refer to [the documentation on Azure AD Workload Identity.](https://azure.github.io/azure-workload-identity/docs/installation/mutating-admission-webhook.html) The documentation provides guidance on how to install the mutating admission webhook, which allows for the customization of Workload Identity deployment.
	WorkloadIdentityEnabled pulumi.BoolPtrInput
}

func (KubernetesClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesClusterState)(nil)).Elem()
}

type kubernetesClusterArgs struct {
	// A `aciConnectorLinux` block as defined below. For more details, please visit [Create and configure an AKS cluster to use virtual nodes](https://docs.microsoft.com/azure/aks/virtual-nodes-portal).
	AciConnectorLinux *KubernetesClusterAciConnectorLinux `pulumi:"aciConnectorLinux"`
	// An `apiServerAccessProfile` block as defined below.
	ApiServerAccessProfile *KubernetesClusterApiServerAccessProfile `pulumi:"apiServerAccessProfile"`
	// Deprecated: This property has been renamed to `authorized_ip_ranges` within the `api_server_access_profile` block and will be removed in v4.0 of the provider
	ApiServerAuthorizedIpRanges []string `pulumi:"apiServerAuthorizedIpRanges"`
	// A `autoScalerProfile` block as defined below.
	AutoScalerProfile *KubernetesClusterAutoScalerProfile `pulumi:"autoScalerProfile"`
	// The upgrade channel for this Kubernetes Cluster. Possible values are `patch`, `rapid`, `node-image` and `stable`. Omitting this field sets this value to `none`.
	//
	// !> **Note:** Cluster Auto-Upgrade will update the Kubernetes Cluster (and its Node Pools) to the latest GA version of Kubernetes automatically - please [see the Azure documentation for more information](https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel).
	//
	// > **Note:** Cluster Auto-Upgrade only updates to GA versions of Kubernetes and will not update to Preview versions.
	AutomaticChannelUpgrade *string `pulumi:"automaticChannelUpgrade"`
	// A `azureActiveDirectoryRoleBasedAccessControl` block as defined below.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/AKS-PrometheusAddonPreview` is enabled, see [the documentation](https://learn.microsoft.com/en-us/azure/azure-monitor/essentials/prometheus-metrics-enable?tabs=azure-portal) for more information.
	AzureActiveDirectoryRoleBasedAccessControl *KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl `pulumi:"azureActiveDirectoryRoleBasedAccessControl"`
	// Should the Azure Policy Add-On be enabled? For more details please visit [Understand Azure Policy for Azure Kubernetes Service](https://docs.microsoft.com/en-ie/azure/governance/policy/concepts/rego-for-aks)
	AzurePolicyEnabled *bool `pulumi:"azurePolicyEnabled"`
	// A `confidentialComputing` block as defined below. For more details please [the documentation](https://learn.microsoft.com/en-us/azure/confidential-computing/confidential-nodes-aks-overview)
	ConfidentialComputing *KubernetesClusterConfidentialComputing `pulumi:"confidentialComputing"`
	// A list of up to 10 base64 encoded CAs that will be added to the trust store on nodes with the `customCaTrustEnabled` feature enabled.
	//
	// > **Note:** Removing `customCaTrustCertificatesBase64` after it has been set forces a new resource to be created.
	CustomCaTrustCertificatesBase64s []string `pulumi:"customCaTrustCertificatesBase64s"`
	// A `defaultNodePool` block as defined below.
	DefaultNodePool KubernetesClusterDefaultNodePool `pulumi:"defaultNodePool"`
	// The ID of the Disk Encryption Set which should be used for the Nodes and Volumes. More information [can be found in the documentation](https://docs.microsoft.com/azure/aks/azure-disk-customer-managed-keys). Changing this forces a new resource to be created.
	DiskEncryptionSetId *string `pulumi:"diskEncryptionSetId"`
	// DNS prefix specified when creating the managed cluster. Possible values must begin and end with a letter or number, contain only letters, numbers, and hyphens and be between 1 and 54 characters in length. Changing this forces a new resource to be created.
	DnsPrefix *string `pulumi:"dnsPrefix"`
	// Specifies the DNS prefix to use with private clusters. Changing this forces a new resource to be created.
	//
	// > **Note:** You must define either a `dnsPrefix` or a `dnsPrefixPrivateCluster` field.
	//
	// In addition, one of either `identity` or `servicePrincipal` blocks must be specified.
	DnsPrefixPrivateCluster *string `pulumi:"dnsPrefixPrivateCluster"`
	// Specifies the Edge Zone within the Azure Region where this Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created.
	EdgeZone *string `pulumi:"edgeZone"`
	// Deprecated: The AKS API has removed support for this field on 2020-10-15 and is no longer possible to configure this the Pod Security Policy.
	EnablePodSecurityPolicy *bool `pulumi:"enablePodSecurityPolicy"`
	// Should HTTP Application Routing be enabled?
	//
	// > **Note:** At this time HTTP Application Routing is not supported in Azure China or Azure US Government.
	HttpApplicationRoutingEnabled *bool `pulumi:"httpApplicationRoutingEnabled"`
	// A `httpProxyConfig` block as defined below.
	HttpProxyConfig *KubernetesClusterHttpProxyConfig `pulumi:"httpProxyConfig"`
	// An `identity` block as defined below. One of either `identity` or `servicePrincipal` must be specified.
	//
	// !> **Note:** A migration scenario from `servicePrincipal` to `identity` is supported. When upgrading `servicePrincipal` to `identity`, your cluster's control plane and addon pods will switch to use managed identity, but the kubelets will keep using your configured `servicePrincipal` until you upgrade your Node Pool.
	Identity *KubernetesClusterIdentity `pulumi:"identity"`
	// Specifies whether Image Cleaner is enabled.
	ImageCleanerEnabled *bool `pulumi:"imageCleanerEnabled"`
	// Specifies the interval in hours when images should be cleaned up. Defaults to `48`.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/EnableImageCleanerPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/image-cleaner) for more information.
	ImageCleanerIntervalHours *int `pulumi:"imageCleanerIntervalHours"`
	// A `ingressApplicationGateway` block as defined below.
	//
	// > **Note:** Since the Application Gateway is deployed inside a Virtual Network, users (and Service Principals) that are operating the Application Gateway must have the `Microsoft.Network/virtualNetworks/subnets/join/action` permission on the Virtual Network or Subnet. For more details, please visit [Virtual Network Permission](https://learn.microsoft.com/en-us/azure/application-gateway/configuration-infrastructure#virtual-network-permission).
	IngressApplicationGateway *KubernetesClusterIngressApplicationGateway `pulumi:"ingressApplicationGateway"`
	// A `keyManagementService` block as defined below. For more details, please visit [Key Management Service (KMS) etcd encryption to an AKS cluster](https://learn.microsoft.com/en-us/azure/aks/use-kms-etcd-encryption).
	KeyManagementService *KubernetesClusterKeyManagementService `pulumi:"keyManagementService"`
	// A `keyVaultSecretsProvider` block as defined below. For more details, please visit [Azure Keyvault Secrets Provider for AKS](https://docs.microsoft.com/azure/aks/csi-secrets-store-driver).
	KeyVaultSecretsProvider *KubernetesClusterKeyVaultSecretsProvider `pulumi:"keyVaultSecretsProvider"`
	// A `kubeletIdentity` block as defined below.
	KubeletIdentity *KubernetesClusterKubeletIdentity `pulumi:"kubeletIdentity"`
	// Version of Kubernetes specified when creating the AKS managed cluster. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as `1.22` are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in [the documentation](https://docs.microsoft.com/en-us/azure/aks/supported-kubernetes-versions?tabs=azure-cli#alias-minor-version).
	//
	// > **Note:** Upgrading your cluster may take up to 10 minutes per node.
	KubernetesVersion *string `pulumi:"kubernetesVersion"`
	// A `linuxProfile` block as defined below.
	LinuxProfile *KubernetesClusterLinuxProfile `pulumi:"linuxProfile"`
	// If `true` local accounts will be disabled. See [the documentation](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts) for more information.
	//
	// > **Note:** If `localAccountDisabled` is set to `true`, it is required to enable Kubernetes RBAC and AKS-managed Azure AD integration. See [the documentation](https://docs.microsoft.com/azure/aks/managed-aad#azure-ad-authentication-overview) for more information.
	LocalAccountDisabled *bool `pulumi:"localAccountDisabled"`
	// The location where the Managed Kubernetes Cluster should be created. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// A `maintenanceWindow` block as defined below.
	MaintenanceWindow *KubernetesClusterMaintenanceWindow `pulumi:"maintenanceWindow"`
	// A `maintenanceWindowAutoUpgrade` block as defined below.
	MaintenanceWindowAutoUpgrade *KubernetesClusterMaintenanceWindowAutoUpgrade `pulumi:"maintenanceWindowAutoUpgrade"`
	// A `maintenanceWindowNodeOs` block as defined below.
	MaintenanceWindowNodeOs *KubernetesClusterMaintenanceWindowNodeOs `pulumi:"maintenanceWindowNodeOs"`
	// A `microsoftDefender` block as defined below.
	MicrosoftDefender *KubernetesClusterMicrosoftDefender `pulumi:"microsoftDefender"`
	// Specifies a Prometheus add-on profile for the Kubernetes Cluster. A `monitorMetrics` block as defined below.
	MonitorMetrics *KubernetesClusterMonitorMetrics `pulumi:"monitorMetrics"`
	// The name of the Managed Kubernetes Cluster to create. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A `networkProfile` block as defined below. Changing this forces a new resource to be created.
	//
	// > **Note:** If `networkProfile` is not defined, `kubenet` profile will be used by default.
	NetworkProfile *KubernetesClusterNetworkProfile `pulumi:"networkProfile"`
	// The upgrade channel for this Kubernetes Cluster Nodes' OS Image. Possible values are `Unmanaged`, `SecurityPatch`, `NodeImage` and `None`.
	//
	// > **Note:** `nodeOsChannelUpgrade` must be set to `NodeImage` if `automaticChannelUpgrade` has been set to `node-image`
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/NodeOsUpgradeChannelPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/auto-upgrade-node-image#register-the-nodeosupgradechannelpreview-feature-flag) for more information.
	NodeOsChannelUpgrade *string `pulumi:"nodeOsChannelUpgrade"`
	// The name of the Resource Group where the Kubernetes Nodes should exist. Changing this forces a new resource to be created.
	//
	// > **Note:** Azure requires that a new, non-existent Resource Group is used, as otherwise, the provisioning of the Kubernetes Service will fail.
	NodeResourceGroup *string `pulumi:"nodeResourceGroup"`
	// Enable or Disable the [OIDC issuer URL](https://learn.microsoft.com/en-gb/azure/aks/use-oidc-issuer)
	OidcIssuerEnabled *bool `pulumi:"oidcIssuerEnabled"`
	// A `omsAgent` block as defined below.
	OmsAgent *KubernetesClusterOmsAgent `pulumi:"omsAgent"`
	// Is Open Service Mesh enabled? For more details, please visit [Open Service Mesh for AKS](https://docs.microsoft.com/azure/aks/open-service-mesh-about).
	OpenServiceMeshEnabled *bool `pulumi:"openServiceMeshEnabled"`
	// Should this Kubernetes Cluster have its API server only exposed on internal IP addresses? This provides a Private IP Address for the Kubernetes API on the Virtual Network where the Kubernetes Cluster is located. Defaults to `false`. Changing this forces a new resource to be created.
	PrivateClusterEnabled *bool `pulumi:"privateClusterEnabled"`
	// Specifies whether a Public FQDN for this Private Cluster should be added. Defaults to `false`.
	//
	// > **Note:** If you use BYO DNS Zone, the AKS cluster should either use a User Assigned Identity or a service principal (which is deprecated) with the `Private DNS Zone Contributor` role and access to this Private DNS Zone. If `UserAssigned` identity is used - to prevent improper resource order destruction - the cluster should depend on the role assignment, like in this example:
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/authorization"
	// 	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/containerservice"
	// 	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
	// 	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/privatedns"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
	// 			Location: pulumi.String("West Europe"),
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		exampleZone, err := privatedns.NewZone(ctx, "exampleZone", &privatedns.ZoneArgs{
	// 			ResourceGroupName: exampleResourceGroup.Name,
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		exampleUserAssignedIdentity, err := authorization.NewUserAssignedIdentity(ctx, "exampleUserAssignedIdentity", &authorization.UserAssignedIdentityArgs{
	// 			ResourceGroupName: exampleResourceGroup.Name,
	// 			Location:          exampleResourceGroup.Location,
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		exampleAssignment, err := authorization.NewAssignment(ctx, "exampleAssignment", &authorization.AssignmentArgs{
	// 			Scope:              exampleZone.ID(),
	// 			RoleDefinitionName: pulumi.String("Private DNS Zone Contributor"),
	// 			PrincipalId:        exampleUserAssignedIdentity.PrincipalId,
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		_, err = containerservice.NewKubernetesCluster(ctx, "exampleKubernetesCluster", &containerservice.KubernetesClusterArgs{
	// 			Location:              exampleResourceGroup.Location,
	// 			ResourceGroupName:     exampleResourceGroup.Name,
	// 			DnsPrefix:             pulumi.String("aksexamplednsprefix1"),
	// 			PrivateClusterEnabled: pulumi.Bool(true),
	// 			PrivateDnsZoneId:      exampleZone.ID(),
	// 		}, pulumi.DependsOn([]pulumi.Resource{
	// 			exampleAssignment,
	// 		}))
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	PrivateClusterPublicFqdnEnabled *bool `pulumi:"privateClusterPublicFqdnEnabled"`
	// Either the ID of Private DNS Zone which should be delegated to this Cluster, `System` to have AKS manage this or `None`. In case of `None` you will need to bring your own DNS server and set up resolving, otherwise, the cluster will have issues after provisioning. Changing this forces a new resource to be created.
	PrivateDnsZoneId *string `pulumi:"privateDnsZoneId"`
	// Whether public network access is allowed for this Kubernetes Cluster. Defaults to `true`.
	//
	// !> **Note:** `publicNetworkAccessEnabled` is currently not functional and is not passed to the Azure API. For further information please see this [issue](https://github.com/Azure/AKS/issues/3690). For controlling the public and private exposure of a cluster please see the properties `privateClusterEnabled` and `apiServerAccessProfile`.
	//
	// Deprecated: `public_network_access_enabled` is currently not functional and is not be passed to the API
	PublicNetworkAccessEnabled *bool `pulumi:"publicNetworkAccessEnabled"`
	// Specifies the Resource Group where the Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Whether Role Based Access Control for the Kubernetes Cluster should be enabled. Defaults to `true`. Changing this forces a new resource to be created.
	RoleBasedAccessControlEnabled *bool `pulumi:"roleBasedAccessControlEnabled"`
	// Whether to enable run command for the cluster or not. Defaults to `true`.
	RunCommandEnabled *bool `pulumi:"runCommandEnabled"`
	// A `serviceMeshProfile` block as defined below.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/AzureServiceMeshPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/istio-deploy-addon#register-the-azureservicemeshpreview-feature-flag) for more information.
	ServiceMeshProfile *KubernetesClusterServiceMeshProfile `pulumi:"serviceMeshProfile"`
	// A `servicePrincipal` block as documented below. One of either `identity` or `servicePrincipal` must be specified.
	//
	// !> **Note:** A migration scenario from `servicePrincipal` to `identity` is supported. When upgrading `servicePrincipal` to `identity`, your cluster's control plane and addon pods will switch to use managed identity, but the kubelets will keep using your configured `servicePrincipal` until you upgrade your Node Pool.
	ServicePrincipal *KubernetesClusterServicePrincipal `pulumi:"servicePrincipal"`
	// The SKU Tier that should be used for this Kubernetes Cluster. Possible values are `Free`, `Standard` (which includes the Uptime SLA) and `Premium`. Defaults to `Free`.
	//
	// > **Note:** Whilst the AKS API previously supported the `Paid` SKU - the AKS API introduced a breaking change in API Version `2023-02-01` (used in v3.51.0 and later) where the value `Paid` must now be set to `Standard`.
	SkuTier *string `pulumi:"skuTier"`
	// A `storageProfile` block as defined below.
	StorageProfile *KubernetesClusterStorageProfile `pulumi:"storageProfile"`
	// Specifies the support plan which should be used for this Kubernetes Cluster. Possible values are `KubernetesOfficial` and `AKSLongTermSupport`. Defaults to `KubernetesOfficial`.
	SupportPlan *string `pulumi:"supportPlan"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// A `webAppRouting` block as defined below.
	WebAppRouting *KubernetesClusterWebAppRouting `pulumi:"webAppRouting"`
	// A `windowsProfile` block as defined below.
	WindowsProfile *KubernetesClusterWindowsProfile `pulumi:"windowsProfile"`
	// A `workloadAutoscalerProfile` block defined below.
	WorkloadAutoscalerProfile *KubernetesClusterWorkloadAutoscalerProfile `pulumi:"workloadAutoscalerProfile"`
	// Specifies whether Azure AD Workload Identity should be enabled for the Cluster. Defaults to `false`.
	//
	// > **Note:** To enable Azure AD Workload Identity `oidcIssuerEnabled` must be set to `true`.
	//
	// > **Note:** Enabling this option will allocate Workload Identity resources to the `kube-system` namespace in Kubernetes. If you wish to customize the deployment of Workload Identity, you can refer to [the documentation on Azure AD Workload Identity.](https://azure.github.io/azure-workload-identity/docs/installation/mutating-admission-webhook.html) The documentation provides guidance on how to install the mutating admission webhook, which allows for the customization of Workload Identity deployment.
	WorkloadIdentityEnabled *bool `pulumi:"workloadIdentityEnabled"`
}

// The set of arguments for constructing a KubernetesCluster resource.
type KubernetesClusterArgs struct {
	// A `aciConnectorLinux` block as defined below. For more details, please visit [Create and configure an AKS cluster to use virtual nodes](https://docs.microsoft.com/azure/aks/virtual-nodes-portal).
	AciConnectorLinux KubernetesClusterAciConnectorLinuxPtrInput
	// An `apiServerAccessProfile` block as defined below.
	ApiServerAccessProfile KubernetesClusterApiServerAccessProfilePtrInput
	// Deprecated: This property has been renamed to `authorized_ip_ranges` within the `api_server_access_profile` block and will be removed in v4.0 of the provider
	ApiServerAuthorizedIpRanges pulumi.StringArrayInput
	// A `autoScalerProfile` block as defined below.
	AutoScalerProfile KubernetesClusterAutoScalerProfilePtrInput
	// The upgrade channel for this Kubernetes Cluster. Possible values are `patch`, `rapid`, `node-image` and `stable`. Omitting this field sets this value to `none`.
	//
	// !> **Note:** Cluster Auto-Upgrade will update the Kubernetes Cluster (and its Node Pools) to the latest GA version of Kubernetes automatically - please [see the Azure documentation for more information](https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel).
	//
	// > **Note:** Cluster Auto-Upgrade only updates to GA versions of Kubernetes and will not update to Preview versions.
	AutomaticChannelUpgrade pulumi.StringPtrInput
	// A `azureActiveDirectoryRoleBasedAccessControl` block as defined below.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/AKS-PrometheusAddonPreview` is enabled, see [the documentation](https://learn.microsoft.com/en-us/azure/azure-monitor/essentials/prometheus-metrics-enable?tabs=azure-portal) for more information.
	AzureActiveDirectoryRoleBasedAccessControl KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrInput
	// Should the Azure Policy Add-On be enabled? For more details please visit [Understand Azure Policy for Azure Kubernetes Service](https://docs.microsoft.com/en-ie/azure/governance/policy/concepts/rego-for-aks)
	AzurePolicyEnabled pulumi.BoolPtrInput
	// A `confidentialComputing` block as defined below. For more details please [the documentation](https://learn.microsoft.com/en-us/azure/confidential-computing/confidential-nodes-aks-overview)
	ConfidentialComputing KubernetesClusterConfidentialComputingPtrInput
	// A list of up to 10 base64 encoded CAs that will be added to the trust store on nodes with the `customCaTrustEnabled` feature enabled.
	//
	// > **Note:** Removing `customCaTrustCertificatesBase64` after it has been set forces a new resource to be created.
	CustomCaTrustCertificatesBase64s pulumi.StringArrayInput
	// A `defaultNodePool` block as defined below.
	DefaultNodePool KubernetesClusterDefaultNodePoolInput
	// The ID of the Disk Encryption Set which should be used for the Nodes and Volumes. More information [can be found in the documentation](https://docs.microsoft.com/azure/aks/azure-disk-customer-managed-keys). Changing this forces a new resource to be created.
	DiskEncryptionSetId pulumi.StringPtrInput
	// DNS prefix specified when creating the managed cluster. Possible values must begin and end with a letter or number, contain only letters, numbers, and hyphens and be between 1 and 54 characters in length. Changing this forces a new resource to be created.
	DnsPrefix pulumi.StringPtrInput
	// Specifies the DNS prefix to use with private clusters. Changing this forces a new resource to be created.
	//
	// > **Note:** You must define either a `dnsPrefix` or a `dnsPrefixPrivateCluster` field.
	//
	// In addition, one of either `identity` or `servicePrincipal` blocks must be specified.
	DnsPrefixPrivateCluster pulumi.StringPtrInput
	// Specifies the Edge Zone within the Azure Region where this Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created.
	EdgeZone pulumi.StringPtrInput
	// Deprecated: The AKS API has removed support for this field on 2020-10-15 and is no longer possible to configure this the Pod Security Policy.
	EnablePodSecurityPolicy pulumi.BoolPtrInput
	// Should HTTP Application Routing be enabled?
	//
	// > **Note:** At this time HTTP Application Routing is not supported in Azure China or Azure US Government.
	HttpApplicationRoutingEnabled pulumi.BoolPtrInput
	// A `httpProxyConfig` block as defined below.
	HttpProxyConfig KubernetesClusterHttpProxyConfigPtrInput
	// An `identity` block as defined below. One of either `identity` or `servicePrincipal` must be specified.
	//
	// !> **Note:** A migration scenario from `servicePrincipal` to `identity` is supported. When upgrading `servicePrincipal` to `identity`, your cluster's control plane and addon pods will switch to use managed identity, but the kubelets will keep using your configured `servicePrincipal` until you upgrade your Node Pool.
	Identity KubernetesClusterIdentityPtrInput
	// Specifies whether Image Cleaner is enabled.
	ImageCleanerEnabled pulumi.BoolPtrInput
	// Specifies the interval in hours when images should be cleaned up. Defaults to `48`.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/EnableImageCleanerPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/image-cleaner) for more information.
	ImageCleanerIntervalHours pulumi.IntPtrInput
	// A `ingressApplicationGateway` block as defined below.
	//
	// > **Note:** Since the Application Gateway is deployed inside a Virtual Network, users (and Service Principals) that are operating the Application Gateway must have the `Microsoft.Network/virtualNetworks/subnets/join/action` permission on the Virtual Network or Subnet. For more details, please visit [Virtual Network Permission](https://learn.microsoft.com/en-us/azure/application-gateway/configuration-infrastructure#virtual-network-permission).
	IngressApplicationGateway KubernetesClusterIngressApplicationGatewayPtrInput
	// A `keyManagementService` block as defined below. For more details, please visit [Key Management Service (KMS) etcd encryption to an AKS cluster](https://learn.microsoft.com/en-us/azure/aks/use-kms-etcd-encryption).
	KeyManagementService KubernetesClusterKeyManagementServicePtrInput
	// A `keyVaultSecretsProvider` block as defined below. For more details, please visit [Azure Keyvault Secrets Provider for AKS](https://docs.microsoft.com/azure/aks/csi-secrets-store-driver).
	KeyVaultSecretsProvider KubernetesClusterKeyVaultSecretsProviderPtrInput
	// A `kubeletIdentity` block as defined below.
	KubeletIdentity KubernetesClusterKubeletIdentityPtrInput
	// Version of Kubernetes specified when creating the AKS managed cluster. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as `1.22` are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in [the documentation](https://docs.microsoft.com/en-us/azure/aks/supported-kubernetes-versions?tabs=azure-cli#alias-minor-version).
	//
	// > **Note:** Upgrading your cluster may take up to 10 minutes per node.
	KubernetesVersion pulumi.StringPtrInput
	// A `linuxProfile` block as defined below.
	LinuxProfile KubernetesClusterLinuxProfilePtrInput
	// If `true` local accounts will be disabled. See [the documentation](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts) for more information.
	//
	// > **Note:** If `localAccountDisabled` is set to `true`, it is required to enable Kubernetes RBAC and AKS-managed Azure AD integration. See [the documentation](https://docs.microsoft.com/azure/aks/managed-aad#azure-ad-authentication-overview) for more information.
	LocalAccountDisabled pulumi.BoolPtrInput
	// The location where the Managed Kubernetes Cluster should be created. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// A `maintenanceWindow` block as defined below.
	MaintenanceWindow KubernetesClusterMaintenanceWindowPtrInput
	// A `maintenanceWindowAutoUpgrade` block as defined below.
	MaintenanceWindowAutoUpgrade KubernetesClusterMaintenanceWindowAutoUpgradePtrInput
	// A `maintenanceWindowNodeOs` block as defined below.
	MaintenanceWindowNodeOs KubernetesClusterMaintenanceWindowNodeOsPtrInput
	// A `microsoftDefender` block as defined below.
	MicrosoftDefender KubernetesClusterMicrosoftDefenderPtrInput
	// Specifies a Prometheus add-on profile for the Kubernetes Cluster. A `monitorMetrics` block as defined below.
	MonitorMetrics KubernetesClusterMonitorMetricsPtrInput
	// The name of the Managed Kubernetes Cluster to create. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A `networkProfile` block as defined below. Changing this forces a new resource to be created.
	//
	// > **Note:** If `networkProfile` is not defined, `kubenet` profile will be used by default.
	NetworkProfile KubernetesClusterNetworkProfilePtrInput
	// The upgrade channel for this Kubernetes Cluster Nodes' OS Image. Possible values are `Unmanaged`, `SecurityPatch`, `NodeImage` and `None`.
	//
	// > **Note:** `nodeOsChannelUpgrade` must be set to `NodeImage` if `automaticChannelUpgrade` has been set to `node-image`
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/NodeOsUpgradeChannelPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/auto-upgrade-node-image#register-the-nodeosupgradechannelpreview-feature-flag) for more information.
	NodeOsChannelUpgrade pulumi.StringPtrInput
	// The name of the Resource Group where the Kubernetes Nodes should exist. Changing this forces a new resource to be created.
	//
	// > **Note:** Azure requires that a new, non-existent Resource Group is used, as otherwise, the provisioning of the Kubernetes Service will fail.
	NodeResourceGroup pulumi.StringPtrInput
	// Enable or Disable the [OIDC issuer URL](https://learn.microsoft.com/en-gb/azure/aks/use-oidc-issuer)
	OidcIssuerEnabled pulumi.BoolPtrInput
	// A `omsAgent` block as defined below.
	OmsAgent KubernetesClusterOmsAgentPtrInput
	// Is Open Service Mesh enabled? For more details, please visit [Open Service Mesh for AKS](https://docs.microsoft.com/azure/aks/open-service-mesh-about).
	OpenServiceMeshEnabled pulumi.BoolPtrInput
	// Should this Kubernetes Cluster have its API server only exposed on internal IP addresses? This provides a Private IP Address for the Kubernetes API on the Virtual Network where the Kubernetes Cluster is located. Defaults to `false`. Changing this forces a new resource to be created.
	PrivateClusterEnabled pulumi.BoolPtrInput
	// Specifies whether a Public FQDN for this Private Cluster should be added. Defaults to `false`.
	//
	// > **Note:** If you use BYO DNS Zone, the AKS cluster should either use a User Assigned Identity or a service principal (which is deprecated) with the `Private DNS Zone Contributor` role and access to this Private DNS Zone. If `UserAssigned` identity is used - to prevent improper resource order destruction - the cluster should depend on the role assignment, like in this example:
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/authorization"
	// 	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/containerservice"
	// 	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
	// 	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/privatedns"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
	// 			Location: pulumi.String("West Europe"),
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		exampleZone, err := privatedns.NewZone(ctx, "exampleZone", &privatedns.ZoneArgs{
	// 			ResourceGroupName: exampleResourceGroup.Name,
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		exampleUserAssignedIdentity, err := authorization.NewUserAssignedIdentity(ctx, "exampleUserAssignedIdentity", &authorization.UserAssignedIdentityArgs{
	// 			ResourceGroupName: exampleResourceGroup.Name,
	// 			Location:          exampleResourceGroup.Location,
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		exampleAssignment, err := authorization.NewAssignment(ctx, "exampleAssignment", &authorization.AssignmentArgs{
	// 			Scope:              exampleZone.ID(),
	// 			RoleDefinitionName: pulumi.String("Private DNS Zone Contributor"),
	// 			PrincipalId:        exampleUserAssignedIdentity.PrincipalId,
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		_, err = containerservice.NewKubernetesCluster(ctx, "exampleKubernetesCluster", &containerservice.KubernetesClusterArgs{
	// 			Location:              exampleResourceGroup.Location,
	// 			ResourceGroupName:     exampleResourceGroup.Name,
	// 			DnsPrefix:             pulumi.String("aksexamplednsprefix1"),
	// 			PrivateClusterEnabled: pulumi.Bool(true),
	// 			PrivateDnsZoneId:      exampleZone.ID(),
	// 		}, pulumi.DependsOn([]pulumi.Resource{
	// 			exampleAssignment,
	// 		}))
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	PrivateClusterPublicFqdnEnabled pulumi.BoolPtrInput
	// Either the ID of Private DNS Zone which should be delegated to this Cluster, `System` to have AKS manage this or `None`. In case of `None` you will need to bring your own DNS server and set up resolving, otherwise, the cluster will have issues after provisioning. Changing this forces a new resource to be created.
	PrivateDnsZoneId pulumi.StringPtrInput
	// Whether public network access is allowed for this Kubernetes Cluster. Defaults to `true`.
	//
	// !> **Note:** `publicNetworkAccessEnabled` is currently not functional and is not passed to the Azure API. For further information please see this [issue](https://github.com/Azure/AKS/issues/3690). For controlling the public and private exposure of a cluster please see the properties `privateClusterEnabled` and `apiServerAccessProfile`.
	//
	// Deprecated: `public_network_access_enabled` is currently not functional and is not be passed to the API
	PublicNetworkAccessEnabled pulumi.BoolPtrInput
	// Specifies the Resource Group where the Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// Whether Role Based Access Control for the Kubernetes Cluster should be enabled. Defaults to `true`. Changing this forces a new resource to be created.
	RoleBasedAccessControlEnabled pulumi.BoolPtrInput
	// Whether to enable run command for the cluster or not. Defaults to `true`.
	RunCommandEnabled pulumi.BoolPtrInput
	// A `serviceMeshProfile` block as defined below.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/AzureServiceMeshPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/istio-deploy-addon#register-the-azureservicemeshpreview-feature-flag) for more information.
	ServiceMeshProfile KubernetesClusterServiceMeshProfilePtrInput
	// A `servicePrincipal` block as documented below. One of either `identity` or `servicePrincipal` must be specified.
	//
	// !> **Note:** A migration scenario from `servicePrincipal` to `identity` is supported. When upgrading `servicePrincipal` to `identity`, your cluster's control plane and addon pods will switch to use managed identity, but the kubelets will keep using your configured `servicePrincipal` until you upgrade your Node Pool.
	ServicePrincipal KubernetesClusterServicePrincipalPtrInput
	// The SKU Tier that should be used for this Kubernetes Cluster. Possible values are `Free`, `Standard` (which includes the Uptime SLA) and `Premium`. Defaults to `Free`.
	//
	// > **Note:** Whilst the AKS API previously supported the `Paid` SKU - the AKS API introduced a breaking change in API Version `2023-02-01` (used in v3.51.0 and later) where the value `Paid` must now be set to `Standard`.
	SkuTier pulumi.StringPtrInput
	// A `storageProfile` block as defined below.
	StorageProfile KubernetesClusterStorageProfilePtrInput
	// Specifies the support plan which should be used for this Kubernetes Cluster. Possible values are `KubernetesOfficial` and `AKSLongTermSupport`. Defaults to `KubernetesOfficial`.
	SupportPlan pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// A `webAppRouting` block as defined below.
	WebAppRouting KubernetesClusterWebAppRoutingPtrInput
	// A `windowsProfile` block as defined below.
	WindowsProfile KubernetesClusterWindowsProfilePtrInput
	// A `workloadAutoscalerProfile` block defined below.
	WorkloadAutoscalerProfile KubernetesClusterWorkloadAutoscalerProfilePtrInput
	// Specifies whether Azure AD Workload Identity should be enabled for the Cluster. Defaults to `false`.
	//
	// > **Note:** To enable Azure AD Workload Identity `oidcIssuerEnabled` must be set to `true`.
	//
	// > **Note:** Enabling this option will allocate Workload Identity resources to the `kube-system` namespace in Kubernetes. If you wish to customize the deployment of Workload Identity, you can refer to [the documentation on Azure AD Workload Identity.](https://azure.github.io/azure-workload-identity/docs/installation/mutating-admission-webhook.html) The documentation provides guidance on how to install the mutating admission webhook, which allows for the customization of Workload Identity deployment.
	WorkloadIdentityEnabled pulumi.BoolPtrInput
}

func (KubernetesClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesClusterArgs)(nil)).Elem()
}

type KubernetesClusterInput interface {
	pulumi.Input

	ToKubernetesClusterOutput() KubernetesClusterOutput
	ToKubernetesClusterOutputWithContext(ctx context.Context) KubernetesClusterOutput
}

func (*KubernetesCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesCluster)(nil)).Elem()
}

func (i *KubernetesCluster) ToKubernetesClusterOutput() KubernetesClusterOutput {
	return i.ToKubernetesClusterOutputWithContext(context.Background())
}

func (i *KubernetesCluster) ToKubernetesClusterOutputWithContext(ctx context.Context) KubernetesClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterOutput)
}

// KubernetesClusterArrayInput is an input type that accepts KubernetesClusterArray and KubernetesClusterArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterArrayInput` via:
//
//	KubernetesClusterArray{ KubernetesClusterArgs{...} }
type KubernetesClusterArrayInput interface {
	pulumi.Input

	ToKubernetesClusterArrayOutput() KubernetesClusterArrayOutput
	ToKubernetesClusterArrayOutputWithContext(context.Context) KubernetesClusterArrayOutput
}

type KubernetesClusterArray []KubernetesClusterInput

func (KubernetesClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KubernetesCluster)(nil)).Elem()
}

func (i KubernetesClusterArray) ToKubernetesClusterArrayOutput() KubernetesClusterArrayOutput {
	return i.ToKubernetesClusterArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterArray) ToKubernetesClusterArrayOutputWithContext(ctx context.Context) KubernetesClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterArrayOutput)
}

// KubernetesClusterMapInput is an input type that accepts KubernetesClusterMap and KubernetesClusterMapOutput values.
// You can construct a concrete instance of `KubernetesClusterMapInput` via:
//
//	KubernetesClusterMap{ "key": KubernetesClusterArgs{...} }
type KubernetesClusterMapInput interface {
	pulumi.Input

	ToKubernetesClusterMapOutput() KubernetesClusterMapOutput
	ToKubernetesClusterMapOutputWithContext(context.Context) KubernetesClusterMapOutput
}

type KubernetesClusterMap map[string]KubernetesClusterInput

func (KubernetesClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KubernetesCluster)(nil)).Elem()
}

func (i KubernetesClusterMap) ToKubernetesClusterMapOutput() KubernetesClusterMapOutput {
	return i.ToKubernetesClusterMapOutputWithContext(context.Background())
}

func (i KubernetesClusterMap) ToKubernetesClusterMapOutputWithContext(ctx context.Context) KubernetesClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMapOutput)
}

type KubernetesClusterOutput struct{ *pulumi.OutputState }

func (KubernetesClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesCluster)(nil)).Elem()
}

func (o KubernetesClusterOutput) ToKubernetesClusterOutput() KubernetesClusterOutput {
	return o
}

func (o KubernetesClusterOutput) ToKubernetesClusterOutputWithContext(ctx context.Context) KubernetesClusterOutput {
	return o
}

// A `aciConnectorLinux` block as defined below. For more details, please visit [Create and configure an AKS cluster to use virtual nodes](https://docs.microsoft.com/azure/aks/virtual-nodes-portal).
func (o KubernetesClusterOutput) AciConnectorLinux() KubernetesClusterAciConnectorLinuxPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterAciConnectorLinuxPtrOutput { return v.AciConnectorLinux }).(KubernetesClusterAciConnectorLinuxPtrOutput)
}

// An `apiServerAccessProfile` block as defined below.
func (o KubernetesClusterOutput) ApiServerAccessProfile() KubernetesClusterApiServerAccessProfileOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterApiServerAccessProfileOutput {
		return v.ApiServerAccessProfile
	}).(KubernetesClusterApiServerAccessProfileOutput)
}

// Deprecated: This property has been renamed to `authorized_ip_ranges` within the `api_server_access_profile` block and will be removed in v4.0 of the provider
func (o KubernetesClusterOutput) ApiServerAuthorizedIpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringArrayOutput { return v.ApiServerAuthorizedIpRanges }).(pulumi.StringArrayOutput)
}

// A `autoScalerProfile` block as defined below.
func (o KubernetesClusterOutput) AutoScalerProfile() KubernetesClusterAutoScalerProfileOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterAutoScalerProfileOutput { return v.AutoScalerProfile }).(KubernetesClusterAutoScalerProfileOutput)
}

// The upgrade channel for this Kubernetes Cluster. Possible values are `patch`, `rapid`, `node-image` and `stable`. Omitting this field sets this value to `none`.
//
// !> **Note:** Cluster Auto-Upgrade will update the Kubernetes Cluster (and its Node Pools) to the latest GA version of Kubernetes automatically - please [see the Azure documentation for more information](https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel).
//
// > **Note:** Cluster Auto-Upgrade only updates to GA versions of Kubernetes and will not update to Preview versions.
func (o KubernetesClusterOutput) AutomaticChannelUpgrade() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringPtrOutput { return v.AutomaticChannelUpgrade }).(pulumi.StringPtrOutput)
}

// A `azureActiveDirectoryRoleBasedAccessControl` block as defined below.
//
// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/AKS-PrometheusAddonPreview` is enabled, see [the documentation](https://learn.microsoft.com/en-us/azure/azure-monitor/essentials/prometheus-metrics-enable?tabs=azure-portal) for more information.
func (o KubernetesClusterOutput) AzureActiveDirectoryRoleBasedAccessControl() KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput {
		return v.AzureActiveDirectoryRoleBasedAccessControl
	}).(KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput)
}

// Should the Azure Policy Add-On be enabled? For more details please visit [Understand Azure Policy for Azure Kubernetes Service](https://docs.microsoft.com/en-ie/azure/governance/policy/concepts/rego-for-aks)
func (o KubernetesClusterOutput) AzurePolicyEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.BoolPtrOutput { return v.AzurePolicyEnabled }).(pulumi.BoolPtrOutput)
}

// A `confidentialComputing` block as defined below. For more details please [the documentation](https://learn.microsoft.com/en-us/azure/confidential-computing/confidential-nodes-aks-overview)
func (o KubernetesClusterOutput) ConfidentialComputing() KubernetesClusterConfidentialComputingPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterConfidentialComputingPtrOutput {
		return v.ConfidentialComputing
	}).(KubernetesClusterConfidentialComputingPtrOutput)
}

// A list of up to 10 base64 encoded CAs that will be added to the trust store on nodes with the `customCaTrustEnabled` feature enabled.
//
// > **Note:** Removing `customCaTrustCertificatesBase64` after it has been set forces a new resource to be created.
func (o KubernetesClusterOutput) CustomCaTrustCertificatesBase64s() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringArrayOutput { return v.CustomCaTrustCertificatesBase64s }).(pulumi.StringArrayOutput)
}

// A `defaultNodePool` block as defined below.
func (o KubernetesClusterOutput) DefaultNodePool() KubernetesClusterDefaultNodePoolOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterDefaultNodePoolOutput { return v.DefaultNodePool }).(KubernetesClusterDefaultNodePoolOutput)
}

// The ID of the Disk Encryption Set which should be used for the Nodes and Volumes. More information [can be found in the documentation](https://docs.microsoft.com/azure/aks/azure-disk-customer-managed-keys). Changing this forces a new resource to be created.
func (o KubernetesClusterOutput) DiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringPtrOutput { return v.DiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// DNS prefix specified when creating the managed cluster. Possible values must begin and end with a letter or number, contain only letters, numbers, and hyphens and be between 1 and 54 characters in length. Changing this forces a new resource to be created.
func (o KubernetesClusterOutput) DnsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringPtrOutput { return v.DnsPrefix }).(pulumi.StringPtrOutput)
}

// Specifies the DNS prefix to use with private clusters. Changing this forces a new resource to be created.
//
// > **Note:** You must define either a `dnsPrefix` or a `dnsPrefixPrivateCluster` field.
//
// In addition, one of either `identity` or `servicePrincipal` blocks must be specified.
func (o KubernetesClusterOutput) DnsPrefixPrivateCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringPtrOutput { return v.DnsPrefixPrivateCluster }).(pulumi.StringPtrOutput)
}

// Specifies the Edge Zone within the Azure Region where this Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created.
func (o KubernetesClusterOutput) EdgeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringPtrOutput { return v.EdgeZone }).(pulumi.StringPtrOutput)
}

// Deprecated: The AKS API has removed support for this field on 2020-10-15 and is no longer possible to configure this the Pod Security Policy.
func (o KubernetesClusterOutput) EnablePodSecurityPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.BoolPtrOutput { return v.EnablePodSecurityPolicy }).(pulumi.BoolPtrOutput)
}

// The FQDN of the Azure Kubernetes Managed Cluster.
func (o KubernetesClusterOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.Fqdn }).(pulumi.StringOutput)
}

// Should HTTP Application Routing be enabled?
//
// > **Note:** At this time HTTP Application Routing is not supported in Azure China or Azure US Government.
func (o KubernetesClusterOutput) HttpApplicationRoutingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.BoolPtrOutput { return v.HttpApplicationRoutingEnabled }).(pulumi.BoolPtrOutput)
}

// The Zone Name of the HTTP Application Routing.
func (o KubernetesClusterOutput) HttpApplicationRoutingZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.HttpApplicationRoutingZoneName }).(pulumi.StringOutput)
}

// A `httpProxyConfig` block as defined below.
func (o KubernetesClusterOutput) HttpProxyConfig() KubernetesClusterHttpProxyConfigPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterHttpProxyConfigPtrOutput { return v.HttpProxyConfig }).(KubernetesClusterHttpProxyConfigPtrOutput)
}

// An `identity` block as defined below. One of either `identity` or `servicePrincipal` must be specified.
//
// !> **Note:** A migration scenario from `servicePrincipal` to `identity` is supported. When upgrading `servicePrincipal` to `identity`, your cluster's control plane and addon pods will switch to use managed identity, but the kubelets will keep using your configured `servicePrincipal` until you upgrade your Node Pool.
func (o KubernetesClusterOutput) Identity() KubernetesClusterIdentityPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterIdentityPtrOutput { return v.Identity }).(KubernetesClusterIdentityPtrOutput)
}

// Specifies whether Image Cleaner is enabled.
func (o KubernetesClusterOutput) ImageCleanerEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.BoolPtrOutput { return v.ImageCleanerEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies the interval in hours when images should be cleaned up. Defaults to `48`.
//
// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/EnableImageCleanerPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/image-cleaner) for more information.
func (o KubernetesClusterOutput) ImageCleanerIntervalHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.IntPtrOutput { return v.ImageCleanerIntervalHours }).(pulumi.IntPtrOutput)
}

// A `ingressApplicationGateway` block as defined below.
//
// > **Note:** Since the Application Gateway is deployed inside a Virtual Network, users (and Service Principals) that are operating the Application Gateway must have the `Microsoft.Network/virtualNetworks/subnets/join/action` permission on the Virtual Network or Subnet. For more details, please visit [Virtual Network Permission](https://learn.microsoft.com/en-us/azure/application-gateway/configuration-infrastructure#virtual-network-permission).
func (o KubernetesClusterOutput) IngressApplicationGateway() KubernetesClusterIngressApplicationGatewayPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterIngressApplicationGatewayPtrOutput {
		return v.IngressApplicationGateway
	}).(KubernetesClusterIngressApplicationGatewayPtrOutput)
}

// A `keyManagementService` block as defined below. For more details, please visit [Key Management Service (KMS) etcd encryption to an AKS cluster](https://learn.microsoft.com/en-us/azure/aks/use-kms-etcd-encryption).
func (o KubernetesClusterOutput) KeyManagementService() KubernetesClusterKeyManagementServicePtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterKeyManagementServicePtrOutput {
		return v.KeyManagementService
	}).(KubernetesClusterKeyManagementServicePtrOutput)
}

// A `keyVaultSecretsProvider` block as defined below. For more details, please visit [Azure Keyvault Secrets Provider for AKS](https://docs.microsoft.com/azure/aks/csi-secrets-store-driver).
func (o KubernetesClusterOutput) KeyVaultSecretsProvider() KubernetesClusterKeyVaultSecretsProviderPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterKeyVaultSecretsProviderPtrOutput {
		return v.KeyVaultSecretsProvider
	}).(KubernetesClusterKeyVaultSecretsProviderPtrOutput)
}

// Raw Kubernetes config for the admin account to be used by [kubectl](https://kubernetes.io/docs/reference/kubectl/overview/) and other compatible tools. This is only available when Role Based Access Control with Azure Active Directory is enabled and local accounts enabled.
func (o KubernetesClusterOutput) KubeAdminConfigRaw() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.KubeAdminConfigRaw }).(pulumi.StringOutput)
}

// A `kubeAdminConfig` block as defined below. This is only available when Role Based Access Control with Azure Active Directory is enabled and local accounts enabled.
func (o KubernetesClusterOutput) KubeAdminConfigs() KubernetesClusterKubeAdminConfigArrayOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterKubeAdminConfigArrayOutput { return v.KubeAdminConfigs }).(KubernetesClusterKubeAdminConfigArrayOutput)
}

// Raw Kubernetes config to be used by [kubectl](https://kubernetes.io/docs/reference/kubectl/overview/) and other compatible tools.
func (o KubernetesClusterOutput) KubeConfigRaw() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.KubeConfigRaw }).(pulumi.StringOutput)
}

// A `kubeConfig` block as defined below.
func (o KubernetesClusterOutput) KubeConfigs() KubernetesClusterKubeConfigArrayOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterKubeConfigArrayOutput { return v.KubeConfigs }).(KubernetesClusterKubeConfigArrayOutput)
}

// A `kubeletIdentity` block as defined below.
func (o KubernetesClusterOutput) KubeletIdentity() KubernetesClusterKubeletIdentityOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterKubeletIdentityOutput { return v.KubeletIdentity }).(KubernetesClusterKubeletIdentityOutput)
}

// Version of Kubernetes specified when creating the AKS managed cluster. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as `1.22` are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in [the documentation](https://docs.microsoft.com/en-us/azure/aks/supported-kubernetes-versions?tabs=azure-cli#alias-minor-version).
//
// > **Note:** Upgrading your cluster may take up to 10 minutes per node.
func (o KubernetesClusterOutput) KubernetesVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.KubernetesVersion }).(pulumi.StringOutput)
}

// A `linuxProfile` block as defined below.
func (o KubernetesClusterOutput) LinuxProfile() KubernetesClusterLinuxProfilePtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterLinuxProfilePtrOutput { return v.LinuxProfile }).(KubernetesClusterLinuxProfilePtrOutput)
}

// If `true` local accounts will be disabled. See [the documentation](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts) for more information.
//
// > **Note:** If `localAccountDisabled` is set to `true`, it is required to enable Kubernetes RBAC and AKS-managed Azure AD integration. See [the documentation](https://docs.microsoft.com/azure/aks/managed-aad#azure-ad-authentication-overview) for more information.
func (o KubernetesClusterOutput) LocalAccountDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.BoolPtrOutput { return v.LocalAccountDisabled }).(pulumi.BoolPtrOutput)
}

// The location where the Managed Kubernetes Cluster should be created. Changing this forces a new resource to be created.
func (o KubernetesClusterOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// A `maintenanceWindow` block as defined below.
func (o KubernetesClusterOutput) MaintenanceWindow() KubernetesClusterMaintenanceWindowPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterMaintenanceWindowPtrOutput { return v.MaintenanceWindow }).(KubernetesClusterMaintenanceWindowPtrOutput)
}

// A `maintenanceWindowAutoUpgrade` block as defined below.
func (o KubernetesClusterOutput) MaintenanceWindowAutoUpgrade() KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput {
		return v.MaintenanceWindowAutoUpgrade
	}).(KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput)
}

// A `maintenanceWindowNodeOs` block as defined below.
func (o KubernetesClusterOutput) MaintenanceWindowNodeOs() KubernetesClusterMaintenanceWindowNodeOsPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterMaintenanceWindowNodeOsPtrOutput {
		return v.MaintenanceWindowNodeOs
	}).(KubernetesClusterMaintenanceWindowNodeOsPtrOutput)
}

// A `microsoftDefender` block as defined below.
func (o KubernetesClusterOutput) MicrosoftDefender() KubernetesClusterMicrosoftDefenderPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterMicrosoftDefenderPtrOutput { return v.MicrosoftDefender }).(KubernetesClusterMicrosoftDefenderPtrOutput)
}

// Specifies a Prometheus add-on profile for the Kubernetes Cluster. A `monitorMetrics` block as defined below.
func (o KubernetesClusterOutput) MonitorMetrics() KubernetesClusterMonitorMetricsPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterMonitorMetricsPtrOutput { return v.MonitorMetrics }).(KubernetesClusterMonitorMetricsPtrOutput)
}

// The name of the Managed Kubernetes Cluster to create. Changing this forces a new resource to be created.
func (o KubernetesClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A `networkProfile` block as defined below. Changing this forces a new resource to be created.
//
// > **Note:** If `networkProfile` is not defined, `kubenet` profile will be used by default.
func (o KubernetesClusterOutput) NetworkProfile() KubernetesClusterNetworkProfileOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterNetworkProfileOutput { return v.NetworkProfile }).(KubernetesClusterNetworkProfileOutput)
}

// The upgrade channel for this Kubernetes Cluster Nodes' OS Image. Possible values are `Unmanaged`, `SecurityPatch`, `NodeImage` and `None`.
//
// > **Note:** `nodeOsChannelUpgrade` must be set to `NodeImage` if `automaticChannelUpgrade` has been set to `node-image`
//
// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/NodeOsUpgradeChannelPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/auto-upgrade-node-image#register-the-nodeosupgradechannelpreview-feature-flag) for more information.
func (o KubernetesClusterOutput) NodeOsChannelUpgrade() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringPtrOutput { return v.NodeOsChannelUpgrade }).(pulumi.StringPtrOutput)
}

// The name of the Resource Group where the Kubernetes Nodes should exist. Changing this forces a new resource to be created.
//
// > **Note:** Azure requires that a new, non-existent Resource Group is used, as otherwise, the provisioning of the Kubernetes Service will fail.
func (o KubernetesClusterOutput) NodeResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.NodeResourceGroup }).(pulumi.StringOutput)
}

// The ID of the Resource Group containing the resources for this Managed Kubernetes Cluster.
func (o KubernetesClusterOutput) NodeResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.NodeResourceGroupId }).(pulumi.StringOutput)
}

// Enable or Disable the [OIDC issuer URL](https://learn.microsoft.com/en-gb/azure/aks/use-oidc-issuer)
func (o KubernetesClusterOutput) OidcIssuerEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.BoolPtrOutput { return v.OidcIssuerEnabled }).(pulumi.BoolPtrOutput)
}

// The OIDC issuer URL that is associated with the cluster.
func (o KubernetesClusterOutput) OidcIssuerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.OidcIssuerUrl }).(pulumi.StringOutput)
}

// A `omsAgent` block as defined below.
func (o KubernetesClusterOutput) OmsAgent() KubernetesClusterOmsAgentPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterOmsAgentPtrOutput { return v.OmsAgent }).(KubernetesClusterOmsAgentPtrOutput)
}

// Is Open Service Mesh enabled? For more details, please visit [Open Service Mesh for AKS](https://docs.microsoft.com/azure/aks/open-service-mesh-about).
func (o KubernetesClusterOutput) OpenServiceMeshEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.BoolPtrOutput { return v.OpenServiceMeshEnabled }).(pulumi.BoolPtrOutput)
}

// The FQDN for the Azure Portal resources when private link has been enabled, which is only resolvable inside the Virtual Network used by the Kubernetes Cluster.
func (o KubernetesClusterOutput) PortalFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.PortalFqdn }).(pulumi.StringOutput)
}

// Should this Kubernetes Cluster have its API server only exposed on internal IP addresses? This provides a Private IP Address for the Kubernetes API on the Virtual Network where the Kubernetes Cluster is located. Defaults to `false`. Changing this forces a new resource to be created.
func (o KubernetesClusterOutput) PrivateClusterEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.BoolPtrOutput { return v.PrivateClusterEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies whether a Public FQDN for this Private Cluster should be added. Defaults to `false`.
//
// > **Note:** If you use BYO DNS Zone, the AKS cluster should either use a User Assigned Identity or a service principal (which is deprecated) with the `Private DNS Zone Contributor` role and access to this Private DNS Zone. If `UserAssigned` identity is used - to prevent improper resource order destruction - the cluster should depend on the role assignment, like in this example:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/authorization"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/containerservice"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/privatedns"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleZone, err := privatedns.NewZone(ctx, "exampleZone", &privatedns.ZoneArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//			})
//			if err != nil {
//				return err
//			}
//			exampleUserAssignedIdentity, err := authorization.NewUserAssignedIdentity(ctx, "exampleUserAssignedIdentity", &authorization.UserAssignedIdentityArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//			})
//			if err != nil {
//				return err
//			}
//			exampleAssignment, err := authorization.NewAssignment(ctx, "exampleAssignment", &authorization.AssignmentArgs{
//				Scope:              exampleZone.ID(),
//				RoleDefinitionName: pulumi.String("Private DNS Zone Contributor"),
//				PrincipalId:        exampleUserAssignedIdentity.PrincipalId,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = containerservice.NewKubernetesCluster(ctx, "exampleKubernetesCluster", &containerservice.KubernetesClusterArgs{
//				Location:              exampleResourceGroup.Location,
//				ResourceGroupName:     exampleResourceGroup.Name,
//				DnsPrefix:             pulumi.String("aksexamplednsprefix1"),
//				PrivateClusterEnabled: pulumi.Bool(true),
//				PrivateDnsZoneId:      exampleZone.ID(),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				exampleAssignment,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func (o KubernetesClusterOutput) PrivateClusterPublicFqdnEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.BoolPtrOutput { return v.PrivateClusterPublicFqdnEnabled }).(pulumi.BoolPtrOutput)
}

// Either the ID of Private DNS Zone which should be delegated to this Cluster, `System` to have AKS manage this or `None`. In case of `None` you will need to bring your own DNS server and set up resolving, otherwise, the cluster will have issues after provisioning. Changing this forces a new resource to be created.
func (o KubernetesClusterOutput) PrivateDnsZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.PrivateDnsZoneId }).(pulumi.StringOutput)
}

// The FQDN for the Kubernetes Cluster when private link has been enabled, which is only resolvable inside the Virtual Network used by the Kubernetes Cluster.
func (o KubernetesClusterOutput) PrivateFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.PrivateFqdn }).(pulumi.StringOutput)
}

// Whether public network access is allowed for this Kubernetes Cluster. Defaults to `true`.
//
// !> **Note:** `publicNetworkAccessEnabled` is currently not functional and is not passed to the Azure API. For further information please see this [issue](https://github.com/Azure/AKS/issues/3690). For controlling the public and private exposure of a cluster please see the properties `privateClusterEnabled` and `apiServerAccessProfile`.
//
// Deprecated: `public_network_access_enabled` is currently not functional and is not be passed to the API
func (o KubernetesClusterOutput) PublicNetworkAccessEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.BoolPtrOutput { return v.PublicNetworkAccessEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies the Resource Group where the Managed Kubernetes Cluster should exist. Changing this forces a new resource to be created.
func (o KubernetesClusterOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// Whether Role Based Access Control for the Kubernetes Cluster should be enabled. Defaults to `true`. Changing this forces a new resource to be created.
func (o KubernetesClusterOutput) RoleBasedAccessControlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.BoolPtrOutput { return v.RoleBasedAccessControlEnabled }).(pulumi.BoolPtrOutput)
}

// Whether to enable run command for the cluster or not. Defaults to `true`.
func (o KubernetesClusterOutput) RunCommandEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.BoolPtrOutput { return v.RunCommandEnabled }).(pulumi.BoolPtrOutput)
}

// A `serviceMeshProfile` block as defined below.
//
// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/AzureServiceMeshPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/istio-deploy-addon#register-the-azureservicemeshpreview-feature-flag) for more information.
func (o KubernetesClusterOutput) ServiceMeshProfile() KubernetesClusterServiceMeshProfilePtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterServiceMeshProfilePtrOutput { return v.ServiceMeshProfile }).(KubernetesClusterServiceMeshProfilePtrOutput)
}

// A `servicePrincipal` block as documented below. One of either `identity` or `servicePrincipal` must be specified.
//
// !> **Note:** A migration scenario from `servicePrincipal` to `identity` is supported. When upgrading `servicePrincipal` to `identity`, your cluster's control plane and addon pods will switch to use managed identity, but the kubelets will keep using your configured `servicePrincipal` until you upgrade your Node Pool.
func (o KubernetesClusterOutput) ServicePrincipal() KubernetesClusterServicePrincipalPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterServicePrincipalPtrOutput { return v.ServicePrincipal }).(KubernetesClusterServicePrincipalPtrOutput)
}

// The SKU Tier that should be used for this Kubernetes Cluster. Possible values are `Free`, `Standard` (which includes the Uptime SLA) and `Premium`. Defaults to `Free`.
//
// > **Note:** Whilst the AKS API previously supported the `Paid` SKU - the AKS API introduced a breaking change in API Version `2023-02-01` (used in v3.51.0 and later) where the value `Paid` must now be set to `Standard`.
func (o KubernetesClusterOutput) SkuTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringPtrOutput { return v.SkuTier }).(pulumi.StringPtrOutput)
}

// A `storageProfile` block as defined below.
func (o KubernetesClusterOutput) StorageProfile() KubernetesClusterStorageProfilePtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterStorageProfilePtrOutput { return v.StorageProfile }).(KubernetesClusterStorageProfilePtrOutput)
}

// Specifies the support plan which should be used for this Kubernetes Cluster. Possible values are `KubernetesOfficial` and `AKSLongTermSupport`. Defaults to `KubernetesOfficial`.
func (o KubernetesClusterOutput) SupportPlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringPtrOutput { return v.SupportPlan }).(pulumi.StringPtrOutput)
}

// A mapping of tags to assign to the resource.
func (o KubernetesClusterOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A `webAppRouting` block as defined below.
func (o KubernetesClusterOutput) WebAppRouting() KubernetesClusterWebAppRoutingPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterWebAppRoutingPtrOutput { return v.WebAppRouting }).(KubernetesClusterWebAppRoutingPtrOutput)
}

// A `windowsProfile` block as defined below.
func (o KubernetesClusterOutput) WindowsProfile() KubernetesClusterWindowsProfileOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterWindowsProfileOutput { return v.WindowsProfile }).(KubernetesClusterWindowsProfileOutput)
}

// A `workloadAutoscalerProfile` block defined below.
func (o KubernetesClusterOutput) WorkloadAutoscalerProfile() KubernetesClusterWorkloadAutoscalerProfilePtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) KubernetesClusterWorkloadAutoscalerProfilePtrOutput {
		return v.WorkloadAutoscalerProfile
	}).(KubernetesClusterWorkloadAutoscalerProfilePtrOutput)
}

// Specifies whether Azure AD Workload Identity should be enabled for the Cluster. Defaults to `false`.
//
// > **Note:** To enable Azure AD Workload Identity `oidcIssuerEnabled` must be set to `true`.
//
// > **Note:** Enabling this option will allocate Workload Identity resources to the `kube-system` namespace in Kubernetes. If you wish to customize the deployment of Workload Identity, you can refer to [the documentation on Azure AD Workload Identity.](https://azure.github.io/azure-workload-identity/docs/installation/mutating-admission-webhook.html) The documentation provides guidance on how to install the mutating admission webhook, which allows for the customization of Workload Identity deployment.
func (o KubernetesClusterOutput) WorkloadIdentityEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesCluster) pulumi.BoolPtrOutput { return v.WorkloadIdentityEnabled }).(pulumi.BoolPtrOutput)
}

type KubernetesClusterArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KubernetesCluster)(nil)).Elem()
}

func (o KubernetesClusterArrayOutput) ToKubernetesClusterArrayOutput() KubernetesClusterArrayOutput {
	return o
}

func (o KubernetesClusterArrayOutput) ToKubernetesClusterArrayOutputWithContext(ctx context.Context) KubernetesClusterArrayOutput {
	return o
}

func (o KubernetesClusterArrayOutput) Index(i pulumi.IntInput) KubernetesClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KubernetesCluster {
		return vs[0].([]*KubernetesCluster)[vs[1].(int)]
	}).(KubernetesClusterOutput)
}

type KubernetesClusterMapOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KubernetesCluster)(nil)).Elem()
}

func (o KubernetesClusterMapOutput) ToKubernetesClusterMapOutput() KubernetesClusterMapOutput {
	return o
}

func (o KubernetesClusterMapOutput) ToKubernetesClusterMapOutputWithContext(ctx context.Context) KubernetesClusterMapOutput {
	return o
}

func (o KubernetesClusterMapOutput) MapIndex(k pulumi.StringInput) KubernetesClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KubernetesCluster {
		return vs[0].(map[string]*KubernetesCluster)[vs[1].(string)]
	}).(KubernetesClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterInput)(nil)).Elem(), &KubernetesCluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterArrayInput)(nil)).Elem(), KubernetesClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterMapInput)(nil)).Elem(), KubernetesClusterMap{})
	pulumi.RegisterOutputType(KubernetesClusterOutput{})
	pulumi.RegisterOutputType(KubernetesClusterArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMapOutput{})
}
