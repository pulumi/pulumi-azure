// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ConnectedRegistryNotification struct {
	// The action of the artifact that wants to be subscribed for the Connected Registry. Possible values are `push`, `delete` and `*` (i.e. any).
	Action string `pulumi:"action"`
	// The digest of the artifact that wants to be subscribed for the Connected Registry.
	//
	// > **NOTE:** One of either `tag` or `digest` can be specified.
	Digest *string `pulumi:"digest"`
	// The name of the artifact that wants to be subscribed for the Connected Registry.
	Name string `pulumi:"name"`
	// The tag of the artifact that wants to be subscribed for the Connected Registry.
	Tag *string `pulumi:"tag"`
}

// ConnectedRegistryNotificationInput is an input type that accepts ConnectedRegistryNotificationArgs and ConnectedRegistryNotificationOutput values.
// You can construct a concrete instance of `ConnectedRegistryNotificationInput` via:
//
//	ConnectedRegistryNotificationArgs{...}
type ConnectedRegistryNotificationInput interface {
	pulumi.Input

	ToConnectedRegistryNotificationOutput() ConnectedRegistryNotificationOutput
	ToConnectedRegistryNotificationOutputWithContext(context.Context) ConnectedRegistryNotificationOutput
}

type ConnectedRegistryNotificationArgs struct {
	// The action of the artifact that wants to be subscribed for the Connected Registry. Possible values are `push`, `delete` and `*` (i.e. any).
	Action pulumi.StringInput `pulumi:"action"`
	// The digest of the artifact that wants to be subscribed for the Connected Registry.
	//
	// > **NOTE:** One of either `tag` or `digest` can be specified.
	Digest pulumi.StringPtrInput `pulumi:"digest"`
	// The name of the artifact that wants to be subscribed for the Connected Registry.
	Name pulumi.StringInput `pulumi:"name"`
	// The tag of the artifact that wants to be subscribed for the Connected Registry.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (ConnectedRegistryNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectedRegistryNotification)(nil)).Elem()
}

func (i ConnectedRegistryNotificationArgs) ToConnectedRegistryNotificationOutput() ConnectedRegistryNotificationOutput {
	return i.ToConnectedRegistryNotificationOutputWithContext(context.Background())
}

func (i ConnectedRegistryNotificationArgs) ToConnectedRegistryNotificationOutputWithContext(ctx context.Context) ConnectedRegistryNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectedRegistryNotificationOutput)
}

// ConnectedRegistryNotificationArrayInput is an input type that accepts ConnectedRegistryNotificationArray and ConnectedRegistryNotificationArrayOutput values.
// You can construct a concrete instance of `ConnectedRegistryNotificationArrayInput` via:
//
//	ConnectedRegistryNotificationArray{ ConnectedRegistryNotificationArgs{...} }
type ConnectedRegistryNotificationArrayInput interface {
	pulumi.Input

	ToConnectedRegistryNotificationArrayOutput() ConnectedRegistryNotificationArrayOutput
	ToConnectedRegistryNotificationArrayOutputWithContext(context.Context) ConnectedRegistryNotificationArrayOutput
}

type ConnectedRegistryNotificationArray []ConnectedRegistryNotificationInput

func (ConnectedRegistryNotificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectedRegistryNotification)(nil)).Elem()
}

func (i ConnectedRegistryNotificationArray) ToConnectedRegistryNotificationArrayOutput() ConnectedRegistryNotificationArrayOutput {
	return i.ToConnectedRegistryNotificationArrayOutputWithContext(context.Background())
}

func (i ConnectedRegistryNotificationArray) ToConnectedRegistryNotificationArrayOutputWithContext(ctx context.Context) ConnectedRegistryNotificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectedRegistryNotificationArrayOutput)
}

type ConnectedRegistryNotificationOutput struct{ *pulumi.OutputState }

func (ConnectedRegistryNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectedRegistryNotification)(nil)).Elem()
}

func (o ConnectedRegistryNotificationOutput) ToConnectedRegistryNotificationOutput() ConnectedRegistryNotificationOutput {
	return o
}

func (o ConnectedRegistryNotificationOutput) ToConnectedRegistryNotificationOutputWithContext(ctx context.Context) ConnectedRegistryNotificationOutput {
	return o
}

// The action of the artifact that wants to be subscribed for the Connected Registry. Possible values are `push`, `delete` and `*` (i.e. any).
func (o ConnectedRegistryNotificationOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectedRegistryNotification) string { return v.Action }).(pulumi.StringOutput)
}

// The digest of the artifact that wants to be subscribed for the Connected Registry.
//
// > **NOTE:** One of either `tag` or `digest` can be specified.
func (o ConnectedRegistryNotificationOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectedRegistryNotification) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

// The name of the artifact that wants to be subscribed for the Connected Registry.
func (o ConnectedRegistryNotificationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectedRegistryNotification) string { return v.Name }).(pulumi.StringOutput)
}

// The tag of the artifact that wants to be subscribed for the Connected Registry.
func (o ConnectedRegistryNotificationOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectedRegistryNotification) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type ConnectedRegistryNotificationArrayOutput struct{ *pulumi.OutputState }

func (ConnectedRegistryNotificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectedRegistryNotification)(nil)).Elem()
}

func (o ConnectedRegistryNotificationArrayOutput) ToConnectedRegistryNotificationArrayOutput() ConnectedRegistryNotificationArrayOutput {
	return o
}

func (o ConnectedRegistryNotificationArrayOutput) ToConnectedRegistryNotificationArrayOutputWithContext(ctx context.Context) ConnectedRegistryNotificationArrayOutput {
	return o
}

func (o ConnectedRegistryNotificationArrayOutput) Index(i pulumi.IntInput) ConnectedRegistryNotificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectedRegistryNotification {
		return vs[0].([]ConnectedRegistryNotification)[vs[1].(int)]
	}).(ConnectedRegistryNotificationOutput)
}

type FluxConfigurationBlobStorage struct {
	// Specifies the account key (shared key) to access the storage account.
	AccountKey *string `pulumi:"accountKey"`
	// Specifies the Azure Blob container ID.
	ContainerId string `pulumi:"containerId"`
	// Specifies the name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
	LocalAuthReference *string `pulumi:"localAuthReference"`
	// A `managedIdentity` block as defined below.
	ManagedIdentity *FluxConfigurationBlobStorageManagedIdentity `pulumi:"managedIdentity"`
	// Specifies the shared access token to access the storage container.
	SasToken *string `pulumi:"sasToken"`
	// A `servicePrincipal` block as defined below.
	ServicePrincipal *FluxConfigurationBlobStorageServicePrincipal `pulumi:"servicePrincipal"`
	// Specifies the interval at which to re-reconcile the cluster Azure Blob source with the remote.
	SyncIntervalInSeconds *int `pulumi:"syncIntervalInSeconds"`
	// Specifies the maximum time to attempt to reconcile the cluster Azure Blob source with the remote.
	TimeoutInSeconds *int `pulumi:"timeoutInSeconds"`
}

// FluxConfigurationBlobStorageInput is an input type that accepts FluxConfigurationBlobStorageArgs and FluxConfigurationBlobStorageOutput values.
// You can construct a concrete instance of `FluxConfigurationBlobStorageInput` via:
//
//	FluxConfigurationBlobStorageArgs{...}
type FluxConfigurationBlobStorageInput interface {
	pulumi.Input

	ToFluxConfigurationBlobStorageOutput() FluxConfigurationBlobStorageOutput
	ToFluxConfigurationBlobStorageOutputWithContext(context.Context) FluxConfigurationBlobStorageOutput
}

type FluxConfigurationBlobStorageArgs struct {
	// Specifies the account key (shared key) to access the storage account.
	AccountKey pulumi.StringPtrInput `pulumi:"accountKey"`
	// Specifies the Azure Blob container ID.
	ContainerId pulumi.StringInput `pulumi:"containerId"`
	// Specifies the name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
	LocalAuthReference pulumi.StringPtrInput `pulumi:"localAuthReference"`
	// A `managedIdentity` block as defined below.
	ManagedIdentity FluxConfigurationBlobStorageManagedIdentityPtrInput `pulumi:"managedIdentity"`
	// Specifies the shared access token to access the storage container.
	SasToken pulumi.StringPtrInput `pulumi:"sasToken"`
	// A `servicePrincipal` block as defined below.
	ServicePrincipal FluxConfigurationBlobStorageServicePrincipalPtrInput `pulumi:"servicePrincipal"`
	// Specifies the interval at which to re-reconcile the cluster Azure Blob source with the remote.
	SyncIntervalInSeconds pulumi.IntPtrInput `pulumi:"syncIntervalInSeconds"`
	// Specifies the maximum time to attempt to reconcile the cluster Azure Blob source with the remote.
	TimeoutInSeconds pulumi.IntPtrInput `pulumi:"timeoutInSeconds"`
}

func (FluxConfigurationBlobStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FluxConfigurationBlobStorage)(nil)).Elem()
}

func (i FluxConfigurationBlobStorageArgs) ToFluxConfigurationBlobStorageOutput() FluxConfigurationBlobStorageOutput {
	return i.ToFluxConfigurationBlobStorageOutputWithContext(context.Background())
}

func (i FluxConfigurationBlobStorageArgs) ToFluxConfigurationBlobStorageOutputWithContext(ctx context.Context) FluxConfigurationBlobStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FluxConfigurationBlobStorageOutput)
}

func (i FluxConfigurationBlobStorageArgs) ToFluxConfigurationBlobStoragePtrOutput() FluxConfigurationBlobStoragePtrOutput {
	return i.ToFluxConfigurationBlobStoragePtrOutputWithContext(context.Background())
}

func (i FluxConfigurationBlobStorageArgs) ToFluxConfigurationBlobStoragePtrOutputWithContext(ctx context.Context) FluxConfigurationBlobStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FluxConfigurationBlobStorageOutput).ToFluxConfigurationBlobStoragePtrOutputWithContext(ctx)
}

// FluxConfigurationBlobStoragePtrInput is an input type that accepts FluxConfigurationBlobStorageArgs, FluxConfigurationBlobStoragePtr and FluxConfigurationBlobStoragePtrOutput values.
// You can construct a concrete instance of `FluxConfigurationBlobStoragePtrInput` via:
//
//	        FluxConfigurationBlobStorageArgs{...}
//
//	or:
//
//	        nil
type FluxConfigurationBlobStoragePtrInput interface {
	pulumi.Input

	ToFluxConfigurationBlobStoragePtrOutput() FluxConfigurationBlobStoragePtrOutput
	ToFluxConfigurationBlobStoragePtrOutputWithContext(context.Context) FluxConfigurationBlobStoragePtrOutput
}

type fluxConfigurationBlobStoragePtrType FluxConfigurationBlobStorageArgs

func FluxConfigurationBlobStoragePtr(v *FluxConfigurationBlobStorageArgs) FluxConfigurationBlobStoragePtrInput {
	return (*fluxConfigurationBlobStoragePtrType)(v)
}

func (*fluxConfigurationBlobStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FluxConfigurationBlobStorage)(nil)).Elem()
}

func (i *fluxConfigurationBlobStoragePtrType) ToFluxConfigurationBlobStoragePtrOutput() FluxConfigurationBlobStoragePtrOutput {
	return i.ToFluxConfigurationBlobStoragePtrOutputWithContext(context.Background())
}

func (i *fluxConfigurationBlobStoragePtrType) ToFluxConfigurationBlobStoragePtrOutputWithContext(ctx context.Context) FluxConfigurationBlobStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FluxConfigurationBlobStoragePtrOutput)
}

type FluxConfigurationBlobStorageOutput struct{ *pulumi.OutputState }

func (FluxConfigurationBlobStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FluxConfigurationBlobStorage)(nil)).Elem()
}

func (o FluxConfigurationBlobStorageOutput) ToFluxConfigurationBlobStorageOutput() FluxConfigurationBlobStorageOutput {
	return o
}

func (o FluxConfigurationBlobStorageOutput) ToFluxConfigurationBlobStorageOutputWithContext(ctx context.Context) FluxConfigurationBlobStorageOutput {
	return o
}

func (o FluxConfigurationBlobStorageOutput) ToFluxConfigurationBlobStoragePtrOutput() FluxConfigurationBlobStoragePtrOutput {
	return o.ToFluxConfigurationBlobStoragePtrOutputWithContext(context.Background())
}

func (o FluxConfigurationBlobStorageOutput) ToFluxConfigurationBlobStoragePtrOutputWithContext(ctx context.Context) FluxConfigurationBlobStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FluxConfigurationBlobStorage) *FluxConfigurationBlobStorage {
		return &v
	}).(FluxConfigurationBlobStoragePtrOutput)
}

// Specifies the account key (shared key) to access the storage account.
func (o FluxConfigurationBlobStorageOutput) AccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FluxConfigurationBlobStorage) *string { return v.AccountKey }).(pulumi.StringPtrOutput)
}

// Specifies the Azure Blob container ID.
func (o FluxConfigurationBlobStorageOutput) ContainerId() pulumi.StringOutput {
	return o.ApplyT(func(v FluxConfigurationBlobStorage) string { return v.ContainerId }).(pulumi.StringOutput)
}

// Specifies the name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
func (o FluxConfigurationBlobStorageOutput) LocalAuthReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FluxConfigurationBlobStorage) *string { return v.LocalAuthReference }).(pulumi.StringPtrOutput)
}

// A `managedIdentity` block as defined below.
func (o FluxConfigurationBlobStorageOutput) ManagedIdentity() FluxConfigurationBlobStorageManagedIdentityPtrOutput {
	return o.ApplyT(func(v FluxConfigurationBlobStorage) *FluxConfigurationBlobStorageManagedIdentity {
		return v.ManagedIdentity
	}).(FluxConfigurationBlobStorageManagedIdentityPtrOutput)
}

// Specifies the shared access token to access the storage container.
func (o FluxConfigurationBlobStorageOutput) SasToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FluxConfigurationBlobStorage) *string { return v.SasToken }).(pulumi.StringPtrOutput)
}

// A `servicePrincipal` block as defined below.
func (o FluxConfigurationBlobStorageOutput) ServicePrincipal() FluxConfigurationBlobStorageServicePrincipalPtrOutput {
	return o.ApplyT(func(v FluxConfigurationBlobStorage) *FluxConfigurationBlobStorageServicePrincipal {
		return v.ServicePrincipal
	}).(FluxConfigurationBlobStorageServicePrincipalPtrOutput)
}

// Specifies the interval at which to re-reconcile the cluster Azure Blob source with the remote.
func (o FluxConfigurationBlobStorageOutput) SyncIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FluxConfigurationBlobStorage) *int { return v.SyncIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// Specifies the maximum time to attempt to reconcile the cluster Azure Blob source with the remote.
func (o FluxConfigurationBlobStorageOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FluxConfigurationBlobStorage) *int { return v.TimeoutInSeconds }).(pulumi.IntPtrOutput)
}

type FluxConfigurationBlobStoragePtrOutput struct{ *pulumi.OutputState }

func (FluxConfigurationBlobStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FluxConfigurationBlobStorage)(nil)).Elem()
}

func (o FluxConfigurationBlobStoragePtrOutput) ToFluxConfigurationBlobStoragePtrOutput() FluxConfigurationBlobStoragePtrOutput {
	return o
}

func (o FluxConfigurationBlobStoragePtrOutput) ToFluxConfigurationBlobStoragePtrOutputWithContext(ctx context.Context) FluxConfigurationBlobStoragePtrOutput {
	return o
}

func (o FluxConfigurationBlobStoragePtrOutput) Elem() FluxConfigurationBlobStorageOutput {
	return o.ApplyT(func(v *FluxConfigurationBlobStorage) FluxConfigurationBlobStorage {
		if v != nil {
			return *v
		}
		var ret FluxConfigurationBlobStorage
		return ret
	}).(FluxConfigurationBlobStorageOutput)
}

// Specifies the account key (shared key) to access the storage account.
func (o FluxConfigurationBlobStoragePtrOutput) AccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationBlobStorage) *string {
		if v == nil {
			return nil
		}
		return v.AccountKey
	}).(pulumi.StringPtrOutput)
}

// Specifies the Azure Blob container ID.
func (o FluxConfigurationBlobStoragePtrOutput) ContainerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationBlobStorage) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerId
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
func (o FluxConfigurationBlobStoragePtrOutput) LocalAuthReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationBlobStorage) *string {
		if v == nil {
			return nil
		}
		return v.LocalAuthReference
	}).(pulumi.StringPtrOutput)
}

// A `managedIdentity` block as defined below.
func (o FluxConfigurationBlobStoragePtrOutput) ManagedIdentity() FluxConfigurationBlobStorageManagedIdentityPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationBlobStorage) *FluxConfigurationBlobStorageManagedIdentity {
		if v == nil {
			return nil
		}
		return v.ManagedIdentity
	}).(FluxConfigurationBlobStorageManagedIdentityPtrOutput)
}

// Specifies the shared access token to access the storage container.
func (o FluxConfigurationBlobStoragePtrOutput) SasToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationBlobStorage) *string {
		if v == nil {
			return nil
		}
		return v.SasToken
	}).(pulumi.StringPtrOutput)
}

// A `servicePrincipal` block as defined below.
func (o FluxConfigurationBlobStoragePtrOutput) ServicePrincipal() FluxConfigurationBlobStorageServicePrincipalPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationBlobStorage) *FluxConfigurationBlobStorageServicePrincipal {
		if v == nil {
			return nil
		}
		return v.ServicePrincipal
	}).(FluxConfigurationBlobStorageServicePrincipalPtrOutput)
}

// Specifies the interval at which to re-reconcile the cluster Azure Blob source with the remote.
func (o FluxConfigurationBlobStoragePtrOutput) SyncIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationBlobStorage) *int {
		if v == nil {
			return nil
		}
		return v.SyncIntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// Specifies the maximum time to attempt to reconcile the cluster Azure Blob source with the remote.
func (o FluxConfigurationBlobStoragePtrOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationBlobStorage) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

type FluxConfigurationBlobStorageManagedIdentity struct {
	// Specifies the client ID for authenticating a Managed Identity.
	ClientId string `pulumi:"clientId"`
}

// FluxConfigurationBlobStorageManagedIdentityInput is an input type that accepts FluxConfigurationBlobStorageManagedIdentityArgs and FluxConfigurationBlobStorageManagedIdentityOutput values.
// You can construct a concrete instance of `FluxConfigurationBlobStorageManagedIdentityInput` via:
//
//	FluxConfigurationBlobStorageManagedIdentityArgs{...}
type FluxConfigurationBlobStorageManagedIdentityInput interface {
	pulumi.Input

	ToFluxConfigurationBlobStorageManagedIdentityOutput() FluxConfigurationBlobStorageManagedIdentityOutput
	ToFluxConfigurationBlobStorageManagedIdentityOutputWithContext(context.Context) FluxConfigurationBlobStorageManagedIdentityOutput
}

type FluxConfigurationBlobStorageManagedIdentityArgs struct {
	// Specifies the client ID for authenticating a Managed Identity.
	ClientId pulumi.StringInput `pulumi:"clientId"`
}

func (FluxConfigurationBlobStorageManagedIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FluxConfigurationBlobStorageManagedIdentity)(nil)).Elem()
}

func (i FluxConfigurationBlobStorageManagedIdentityArgs) ToFluxConfigurationBlobStorageManagedIdentityOutput() FluxConfigurationBlobStorageManagedIdentityOutput {
	return i.ToFluxConfigurationBlobStorageManagedIdentityOutputWithContext(context.Background())
}

func (i FluxConfigurationBlobStorageManagedIdentityArgs) ToFluxConfigurationBlobStorageManagedIdentityOutputWithContext(ctx context.Context) FluxConfigurationBlobStorageManagedIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FluxConfigurationBlobStorageManagedIdentityOutput)
}

func (i FluxConfigurationBlobStorageManagedIdentityArgs) ToFluxConfigurationBlobStorageManagedIdentityPtrOutput() FluxConfigurationBlobStorageManagedIdentityPtrOutput {
	return i.ToFluxConfigurationBlobStorageManagedIdentityPtrOutputWithContext(context.Background())
}

func (i FluxConfigurationBlobStorageManagedIdentityArgs) ToFluxConfigurationBlobStorageManagedIdentityPtrOutputWithContext(ctx context.Context) FluxConfigurationBlobStorageManagedIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FluxConfigurationBlobStorageManagedIdentityOutput).ToFluxConfigurationBlobStorageManagedIdentityPtrOutputWithContext(ctx)
}

// FluxConfigurationBlobStorageManagedIdentityPtrInput is an input type that accepts FluxConfigurationBlobStorageManagedIdentityArgs, FluxConfigurationBlobStorageManagedIdentityPtr and FluxConfigurationBlobStorageManagedIdentityPtrOutput values.
// You can construct a concrete instance of `FluxConfigurationBlobStorageManagedIdentityPtrInput` via:
//
//	        FluxConfigurationBlobStorageManagedIdentityArgs{...}
//
//	or:
//
//	        nil
type FluxConfigurationBlobStorageManagedIdentityPtrInput interface {
	pulumi.Input

	ToFluxConfigurationBlobStorageManagedIdentityPtrOutput() FluxConfigurationBlobStorageManagedIdentityPtrOutput
	ToFluxConfigurationBlobStorageManagedIdentityPtrOutputWithContext(context.Context) FluxConfigurationBlobStorageManagedIdentityPtrOutput
}

type fluxConfigurationBlobStorageManagedIdentityPtrType FluxConfigurationBlobStorageManagedIdentityArgs

func FluxConfigurationBlobStorageManagedIdentityPtr(v *FluxConfigurationBlobStorageManagedIdentityArgs) FluxConfigurationBlobStorageManagedIdentityPtrInput {
	return (*fluxConfigurationBlobStorageManagedIdentityPtrType)(v)
}

func (*fluxConfigurationBlobStorageManagedIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FluxConfigurationBlobStorageManagedIdentity)(nil)).Elem()
}

func (i *fluxConfigurationBlobStorageManagedIdentityPtrType) ToFluxConfigurationBlobStorageManagedIdentityPtrOutput() FluxConfigurationBlobStorageManagedIdentityPtrOutput {
	return i.ToFluxConfigurationBlobStorageManagedIdentityPtrOutputWithContext(context.Background())
}

func (i *fluxConfigurationBlobStorageManagedIdentityPtrType) ToFluxConfigurationBlobStorageManagedIdentityPtrOutputWithContext(ctx context.Context) FluxConfigurationBlobStorageManagedIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FluxConfigurationBlobStorageManagedIdentityPtrOutput)
}

type FluxConfigurationBlobStorageManagedIdentityOutput struct{ *pulumi.OutputState }

func (FluxConfigurationBlobStorageManagedIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FluxConfigurationBlobStorageManagedIdentity)(nil)).Elem()
}

func (o FluxConfigurationBlobStorageManagedIdentityOutput) ToFluxConfigurationBlobStorageManagedIdentityOutput() FluxConfigurationBlobStorageManagedIdentityOutput {
	return o
}

func (o FluxConfigurationBlobStorageManagedIdentityOutput) ToFluxConfigurationBlobStorageManagedIdentityOutputWithContext(ctx context.Context) FluxConfigurationBlobStorageManagedIdentityOutput {
	return o
}

func (o FluxConfigurationBlobStorageManagedIdentityOutput) ToFluxConfigurationBlobStorageManagedIdentityPtrOutput() FluxConfigurationBlobStorageManagedIdentityPtrOutput {
	return o.ToFluxConfigurationBlobStorageManagedIdentityPtrOutputWithContext(context.Background())
}

func (o FluxConfigurationBlobStorageManagedIdentityOutput) ToFluxConfigurationBlobStorageManagedIdentityPtrOutputWithContext(ctx context.Context) FluxConfigurationBlobStorageManagedIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FluxConfigurationBlobStorageManagedIdentity) *FluxConfigurationBlobStorageManagedIdentity {
		return &v
	}).(FluxConfigurationBlobStorageManagedIdentityPtrOutput)
}

// Specifies the client ID for authenticating a Managed Identity.
func (o FluxConfigurationBlobStorageManagedIdentityOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v FluxConfigurationBlobStorageManagedIdentity) string { return v.ClientId }).(pulumi.StringOutput)
}

type FluxConfigurationBlobStorageManagedIdentityPtrOutput struct{ *pulumi.OutputState }

func (FluxConfigurationBlobStorageManagedIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FluxConfigurationBlobStorageManagedIdentity)(nil)).Elem()
}

func (o FluxConfigurationBlobStorageManagedIdentityPtrOutput) ToFluxConfigurationBlobStorageManagedIdentityPtrOutput() FluxConfigurationBlobStorageManagedIdentityPtrOutput {
	return o
}

func (o FluxConfigurationBlobStorageManagedIdentityPtrOutput) ToFluxConfigurationBlobStorageManagedIdentityPtrOutputWithContext(ctx context.Context) FluxConfigurationBlobStorageManagedIdentityPtrOutput {
	return o
}

func (o FluxConfigurationBlobStorageManagedIdentityPtrOutput) Elem() FluxConfigurationBlobStorageManagedIdentityOutput {
	return o.ApplyT(func(v *FluxConfigurationBlobStorageManagedIdentity) FluxConfigurationBlobStorageManagedIdentity {
		if v != nil {
			return *v
		}
		var ret FluxConfigurationBlobStorageManagedIdentity
		return ret
	}).(FluxConfigurationBlobStorageManagedIdentityOutput)
}

// Specifies the client ID for authenticating a Managed Identity.
func (o FluxConfigurationBlobStorageManagedIdentityPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationBlobStorageManagedIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

type FluxConfigurationBlobStorageServicePrincipal struct {
	// Base64-encoded certificate used to authenticate a Service Principal .
	ClientCertificateBase64 *string `pulumi:"clientCertificateBase64"`
	// Specifies the password for the certificate used to authenticate a Service Principal .
	ClientCertificatePassword *string `pulumi:"clientCertificatePassword"`
	// Specifies whether to include x5c header in client claims when acquiring a token to enable subject name / issuer based authentication for the client certificate.
	ClientCertificateSendChain *bool `pulumi:"clientCertificateSendChain"`
	// Specifies the client ID for authenticating a Service Principal.
	ClientId string `pulumi:"clientId"`
	// Specifies the client secret for authenticating a Service Principal.
	ClientSecret *string `pulumi:"clientSecret"`
	// Specifies the tenant ID for authenticating a Service Principal.
	TenantId string `pulumi:"tenantId"`
}

// FluxConfigurationBlobStorageServicePrincipalInput is an input type that accepts FluxConfigurationBlobStorageServicePrincipalArgs and FluxConfigurationBlobStorageServicePrincipalOutput values.
// You can construct a concrete instance of `FluxConfigurationBlobStorageServicePrincipalInput` via:
//
//	FluxConfigurationBlobStorageServicePrincipalArgs{...}
type FluxConfigurationBlobStorageServicePrincipalInput interface {
	pulumi.Input

	ToFluxConfigurationBlobStorageServicePrincipalOutput() FluxConfigurationBlobStorageServicePrincipalOutput
	ToFluxConfigurationBlobStorageServicePrincipalOutputWithContext(context.Context) FluxConfigurationBlobStorageServicePrincipalOutput
}

type FluxConfigurationBlobStorageServicePrincipalArgs struct {
	// Base64-encoded certificate used to authenticate a Service Principal .
	ClientCertificateBase64 pulumi.StringPtrInput `pulumi:"clientCertificateBase64"`
	// Specifies the password for the certificate used to authenticate a Service Principal .
	ClientCertificatePassword pulumi.StringPtrInput `pulumi:"clientCertificatePassword"`
	// Specifies whether to include x5c header in client claims when acquiring a token to enable subject name / issuer based authentication for the client certificate.
	ClientCertificateSendChain pulumi.BoolPtrInput `pulumi:"clientCertificateSendChain"`
	// Specifies the client ID for authenticating a Service Principal.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Specifies the client secret for authenticating a Service Principal.
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// Specifies the tenant ID for authenticating a Service Principal.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (FluxConfigurationBlobStorageServicePrincipalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FluxConfigurationBlobStorageServicePrincipal)(nil)).Elem()
}

func (i FluxConfigurationBlobStorageServicePrincipalArgs) ToFluxConfigurationBlobStorageServicePrincipalOutput() FluxConfigurationBlobStorageServicePrincipalOutput {
	return i.ToFluxConfigurationBlobStorageServicePrincipalOutputWithContext(context.Background())
}

func (i FluxConfigurationBlobStorageServicePrincipalArgs) ToFluxConfigurationBlobStorageServicePrincipalOutputWithContext(ctx context.Context) FluxConfigurationBlobStorageServicePrincipalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FluxConfigurationBlobStorageServicePrincipalOutput)
}

func (i FluxConfigurationBlobStorageServicePrincipalArgs) ToFluxConfigurationBlobStorageServicePrincipalPtrOutput() FluxConfigurationBlobStorageServicePrincipalPtrOutput {
	return i.ToFluxConfigurationBlobStorageServicePrincipalPtrOutputWithContext(context.Background())
}

func (i FluxConfigurationBlobStorageServicePrincipalArgs) ToFluxConfigurationBlobStorageServicePrincipalPtrOutputWithContext(ctx context.Context) FluxConfigurationBlobStorageServicePrincipalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FluxConfigurationBlobStorageServicePrincipalOutput).ToFluxConfigurationBlobStorageServicePrincipalPtrOutputWithContext(ctx)
}

// FluxConfigurationBlobStorageServicePrincipalPtrInput is an input type that accepts FluxConfigurationBlobStorageServicePrincipalArgs, FluxConfigurationBlobStorageServicePrincipalPtr and FluxConfigurationBlobStorageServicePrincipalPtrOutput values.
// You can construct a concrete instance of `FluxConfigurationBlobStorageServicePrincipalPtrInput` via:
//
//	        FluxConfigurationBlobStorageServicePrincipalArgs{...}
//
//	or:
//
//	        nil
type FluxConfigurationBlobStorageServicePrincipalPtrInput interface {
	pulumi.Input

	ToFluxConfigurationBlobStorageServicePrincipalPtrOutput() FluxConfigurationBlobStorageServicePrincipalPtrOutput
	ToFluxConfigurationBlobStorageServicePrincipalPtrOutputWithContext(context.Context) FluxConfigurationBlobStorageServicePrincipalPtrOutput
}

type fluxConfigurationBlobStorageServicePrincipalPtrType FluxConfigurationBlobStorageServicePrincipalArgs

func FluxConfigurationBlobStorageServicePrincipalPtr(v *FluxConfigurationBlobStorageServicePrincipalArgs) FluxConfigurationBlobStorageServicePrincipalPtrInput {
	return (*fluxConfigurationBlobStorageServicePrincipalPtrType)(v)
}

func (*fluxConfigurationBlobStorageServicePrincipalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FluxConfigurationBlobStorageServicePrincipal)(nil)).Elem()
}

func (i *fluxConfigurationBlobStorageServicePrincipalPtrType) ToFluxConfigurationBlobStorageServicePrincipalPtrOutput() FluxConfigurationBlobStorageServicePrincipalPtrOutput {
	return i.ToFluxConfigurationBlobStorageServicePrincipalPtrOutputWithContext(context.Background())
}

func (i *fluxConfigurationBlobStorageServicePrincipalPtrType) ToFluxConfigurationBlobStorageServicePrincipalPtrOutputWithContext(ctx context.Context) FluxConfigurationBlobStorageServicePrincipalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FluxConfigurationBlobStorageServicePrincipalPtrOutput)
}

type FluxConfigurationBlobStorageServicePrincipalOutput struct{ *pulumi.OutputState }

func (FluxConfigurationBlobStorageServicePrincipalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FluxConfigurationBlobStorageServicePrincipal)(nil)).Elem()
}

func (o FluxConfigurationBlobStorageServicePrincipalOutput) ToFluxConfigurationBlobStorageServicePrincipalOutput() FluxConfigurationBlobStorageServicePrincipalOutput {
	return o
}

func (o FluxConfigurationBlobStorageServicePrincipalOutput) ToFluxConfigurationBlobStorageServicePrincipalOutputWithContext(ctx context.Context) FluxConfigurationBlobStorageServicePrincipalOutput {
	return o
}

func (o FluxConfigurationBlobStorageServicePrincipalOutput) ToFluxConfigurationBlobStorageServicePrincipalPtrOutput() FluxConfigurationBlobStorageServicePrincipalPtrOutput {
	return o.ToFluxConfigurationBlobStorageServicePrincipalPtrOutputWithContext(context.Background())
}

func (o FluxConfigurationBlobStorageServicePrincipalOutput) ToFluxConfigurationBlobStorageServicePrincipalPtrOutputWithContext(ctx context.Context) FluxConfigurationBlobStorageServicePrincipalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FluxConfigurationBlobStorageServicePrincipal) *FluxConfigurationBlobStorageServicePrincipal {
		return &v
	}).(FluxConfigurationBlobStorageServicePrincipalPtrOutput)
}

// Base64-encoded certificate used to authenticate a Service Principal .
func (o FluxConfigurationBlobStorageServicePrincipalOutput) ClientCertificateBase64() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FluxConfigurationBlobStorageServicePrincipal) *string { return v.ClientCertificateBase64 }).(pulumi.StringPtrOutput)
}

// Specifies the password for the certificate used to authenticate a Service Principal .
func (o FluxConfigurationBlobStorageServicePrincipalOutput) ClientCertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FluxConfigurationBlobStorageServicePrincipal) *string { return v.ClientCertificatePassword }).(pulumi.StringPtrOutput)
}

// Specifies whether to include x5c header in client claims when acquiring a token to enable subject name / issuer based authentication for the client certificate.
func (o FluxConfigurationBlobStorageServicePrincipalOutput) ClientCertificateSendChain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FluxConfigurationBlobStorageServicePrincipal) *bool { return v.ClientCertificateSendChain }).(pulumi.BoolPtrOutput)
}

// Specifies the client ID for authenticating a Service Principal.
func (o FluxConfigurationBlobStorageServicePrincipalOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v FluxConfigurationBlobStorageServicePrincipal) string { return v.ClientId }).(pulumi.StringOutput)
}

// Specifies the client secret for authenticating a Service Principal.
func (o FluxConfigurationBlobStorageServicePrincipalOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FluxConfigurationBlobStorageServicePrincipal) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Specifies the tenant ID for authenticating a Service Principal.
func (o FluxConfigurationBlobStorageServicePrincipalOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v FluxConfigurationBlobStorageServicePrincipal) string { return v.TenantId }).(pulumi.StringOutput)
}

type FluxConfigurationBlobStorageServicePrincipalPtrOutput struct{ *pulumi.OutputState }

func (FluxConfigurationBlobStorageServicePrincipalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FluxConfigurationBlobStorageServicePrincipal)(nil)).Elem()
}

func (o FluxConfigurationBlobStorageServicePrincipalPtrOutput) ToFluxConfigurationBlobStorageServicePrincipalPtrOutput() FluxConfigurationBlobStorageServicePrincipalPtrOutput {
	return o
}

func (o FluxConfigurationBlobStorageServicePrincipalPtrOutput) ToFluxConfigurationBlobStorageServicePrincipalPtrOutputWithContext(ctx context.Context) FluxConfigurationBlobStorageServicePrincipalPtrOutput {
	return o
}

func (o FluxConfigurationBlobStorageServicePrincipalPtrOutput) Elem() FluxConfigurationBlobStorageServicePrincipalOutput {
	return o.ApplyT(func(v *FluxConfigurationBlobStorageServicePrincipal) FluxConfigurationBlobStorageServicePrincipal {
		if v != nil {
			return *v
		}
		var ret FluxConfigurationBlobStorageServicePrincipal
		return ret
	}).(FluxConfigurationBlobStorageServicePrincipalOutput)
}

// Base64-encoded certificate used to authenticate a Service Principal .
func (o FluxConfigurationBlobStorageServicePrincipalPtrOutput) ClientCertificateBase64() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationBlobStorageServicePrincipal) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificateBase64
	}).(pulumi.StringPtrOutput)
}

// Specifies the password for the certificate used to authenticate a Service Principal .
func (o FluxConfigurationBlobStorageServicePrincipalPtrOutput) ClientCertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationBlobStorageServicePrincipal) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificatePassword
	}).(pulumi.StringPtrOutput)
}

// Specifies whether to include x5c header in client claims when acquiring a token to enable subject name / issuer based authentication for the client certificate.
func (o FluxConfigurationBlobStorageServicePrincipalPtrOutput) ClientCertificateSendChain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationBlobStorageServicePrincipal) *bool {
		if v == nil {
			return nil
		}
		return v.ClientCertificateSendChain
	}).(pulumi.BoolPtrOutput)
}

// Specifies the client ID for authenticating a Service Principal.
func (o FluxConfigurationBlobStorageServicePrincipalPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationBlobStorageServicePrincipal) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Specifies the client secret for authenticating a Service Principal.
func (o FluxConfigurationBlobStorageServicePrincipalPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationBlobStorageServicePrincipal) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Specifies the tenant ID for authenticating a Service Principal.
func (o FluxConfigurationBlobStorageServicePrincipalPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationBlobStorageServicePrincipal) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

type FluxConfigurationBucket struct {
	// Specifies the plaintext access key used to securely access the S3 bucket.
	AccessKey *string `pulumi:"accessKey"`
	// Specifies the bucket name to sync from the url endpoint for the flux configuration.
	BucketName string `pulumi:"bucketName"`
	// Specifies the name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets. It must be between 1 and 63 characters. It can contain only lowercase letters, numbers, and hyphens (-). It must start and end with a lowercase letter or number.
	LocalAuthReference *string `pulumi:"localAuthReference"`
	// Specifies the Base64-encoded secret key used to authenticate with the bucket source.
	SecretKeyBase64 *string `pulumi:"secretKeyBase64"`
	// Specifies the interval at which to re-reconcile the cluster git repository source with the remote. Defaults to `600`.
	SyncIntervalInSeconds *int `pulumi:"syncIntervalInSeconds"`
	// Specifies the maximum time to attempt to reconcile the cluster git repository source with the remote. Defaults to `600`.
	TimeoutInSeconds *int `pulumi:"timeoutInSeconds"`
	// Specify whether to communicate with a bucket using TLS is enabled. Defaults to `true`.
	TlsEnabled *bool `pulumi:"tlsEnabled"`
	// Specifies the URL to sync for the flux configuration S3 bucket. It must start with `http://` or `https://`.
	Url string `pulumi:"url"`
}

// FluxConfigurationBucketInput is an input type that accepts FluxConfigurationBucketArgs and FluxConfigurationBucketOutput values.
// You can construct a concrete instance of `FluxConfigurationBucketInput` via:
//
//	FluxConfigurationBucketArgs{...}
type FluxConfigurationBucketInput interface {
	pulumi.Input

	ToFluxConfigurationBucketOutput() FluxConfigurationBucketOutput
	ToFluxConfigurationBucketOutputWithContext(context.Context) FluxConfigurationBucketOutput
}

type FluxConfigurationBucketArgs struct {
	// Specifies the plaintext access key used to securely access the S3 bucket.
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Specifies the bucket name to sync from the url endpoint for the flux configuration.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// Specifies the name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets. It must be between 1 and 63 characters. It can contain only lowercase letters, numbers, and hyphens (-). It must start and end with a lowercase letter or number.
	LocalAuthReference pulumi.StringPtrInput `pulumi:"localAuthReference"`
	// Specifies the Base64-encoded secret key used to authenticate with the bucket source.
	SecretKeyBase64 pulumi.StringPtrInput `pulumi:"secretKeyBase64"`
	// Specifies the interval at which to re-reconcile the cluster git repository source with the remote. Defaults to `600`.
	SyncIntervalInSeconds pulumi.IntPtrInput `pulumi:"syncIntervalInSeconds"`
	// Specifies the maximum time to attempt to reconcile the cluster git repository source with the remote. Defaults to `600`.
	TimeoutInSeconds pulumi.IntPtrInput `pulumi:"timeoutInSeconds"`
	// Specify whether to communicate with a bucket using TLS is enabled. Defaults to `true`.
	TlsEnabled pulumi.BoolPtrInput `pulumi:"tlsEnabled"`
	// Specifies the URL to sync for the flux configuration S3 bucket. It must start with `http://` or `https://`.
	Url pulumi.StringInput `pulumi:"url"`
}

func (FluxConfigurationBucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FluxConfigurationBucket)(nil)).Elem()
}

func (i FluxConfigurationBucketArgs) ToFluxConfigurationBucketOutput() FluxConfigurationBucketOutput {
	return i.ToFluxConfigurationBucketOutputWithContext(context.Background())
}

func (i FluxConfigurationBucketArgs) ToFluxConfigurationBucketOutputWithContext(ctx context.Context) FluxConfigurationBucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FluxConfigurationBucketOutput)
}

func (i FluxConfigurationBucketArgs) ToFluxConfigurationBucketPtrOutput() FluxConfigurationBucketPtrOutput {
	return i.ToFluxConfigurationBucketPtrOutputWithContext(context.Background())
}

func (i FluxConfigurationBucketArgs) ToFluxConfigurationBucketPtrOutputWithContext(ctx context.Context) FluxConfigurationBucketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FluxConfigurationBucketOutput).ToFluxConfigurationBucketPtrOutputWithContext(ctx)
}

// FluxConfigurationBucketPtrInput is an input type that accepts FluxConfigurationBucketArgs, FluxConfigurationBucketPtr and FluxConfigurationBucketPtrOutput values.
// You can construct a concrete instance of `FluxConfigurationBucketPtrInput` via:
//
//	        FluxConfigurationBucketArgs{...}
//
//	or:
//
//	        nil
type FluxConfigurationBucketPtrInput interface {
	pulumi.Input

	ToFluxConfigurationBucketPtrOutput() FluxConfigurationBucketPtrOutput
	ToFluxConfigurationBucketPtrOutputWithContext(context.Context) FluxConfigurationBucketPtrOutput
}

type fluxConfigurationBucketPtrType FluxConfigurationBucketArgs

func FluxConfigurationBucketPtr(v *FluxConfigurationBucketArgs) FluxConfigurationBucketPtrInput {
	return (*fluxConfigurationBucketPtrType)(v)
}

func (*fluxConfigurationBucketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FluxConfigurationBucket)(nil)).Elem()
}

func (i *fluxConfigurationBucketPtrType) ToFluxConfigurationBucketPtrOutput() FluxConfigurationBucketPtrOutput {
	return i.ToFluxConfigurationBucketPtrOutputWithContext(context.Background())
}

func (i *fluxConfigurationBucketPtrType) ToFluxConfigurationBucketPtrOutputWithContext(ctx context.Context) FluxConfigurationBucketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FluxConfigurationBucketPtrOutput)
}

type FluxConfigurationBucketOutput struct{ *pulumi.OutputState }

func (FluxConfigurationBucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FluxConfigurationBucket)(nil)).Elem()
}

func (o FluxConfigurationBucketOutput) ToFluxConfigurationBucketOutput() FluxConfigurationBucketOutput {
	return o
}

func (o FluxConfigurationBucketOutput) ToFluxConfigurationBucketOutputWithContext(ctx context.Context) FluxConfigurationBucketOutput {
	return o
}

func (o FluxConfigurationBucketOutput) ToFluxConfigurationBucketPtrOutput() FluxConfigurationBucketPtrOutput {
	return o.ToFluxConfigurationBucketPtrOutputWithContext(context.Background())
}

func (o FluxConfigurationBucketOutput) ToFluxConfigurationBucketPtrOutputWithContext(ctx context.Context) FluxConfigurationBucketPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FluxConfigurationBucket) *FluxConfigurationBucket {
		return &v
	}).(FluxConfigurationBucketPtrOutput)
}

// Specifies the plaintext access key used to securely access the S3 bucket.
func (o FluxConfigurationBucketOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FluxConfigurationBucket) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Specifies the bucket name to sync from the url endpoint for the flux configuration.
func (o FluxConfigurationBucketOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v FluxConfigurationBucket) string { return v.BucketName }).(pulumi.StringOutput)
}

// Specifies the name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets. It must be between 1 and 63 characters. It can contain only lowercase letters, numbers, and hyphens (-). It must start and end with a lowercase letter or number.
func (o FluxConfigurationBucketOutput) LocalAuthReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FluxConfigurationBucket) *string { return v.LocalAuthReference }).(pulumi.StringPtrOutput)
}

// Specifies the Base64-encoded secret key used to authenticate with the bucket source.
func (o FluxConfigurationBucketOutput) SecretKeyBase64() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FluxConfigurationBucket) *string { return v.SecretKeyBase64 }).(pulumi.StringPtrOutput)
}

// Specifies the interval at which to re-reconcile the cluster git repository source with the remote. Defaults to `600`.
func (o FluxConfigurationBucketOutput) SyncIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FluxConfigurationBucket) *int { return v.SyncIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// Specifies the maximum time to attempt to reconcile the cluster git repository source with the remote. Defaults to `600`.
func (o FluxConfigurationBucketOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FluxConfigurationBucket) *int { return v.TimeoutInSeconds }).(pulumi.IntPtrOutput)
}

// Specify whether to communicate with a bucket using TLS is enabled. Defaults to `true`.
func (o FluxConfigurationBucketOutput) TlsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FluxConfigurationBucket) *bool { return v.TlsEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies the URL to sync for the flux configuration S3 bucket. It must start with `http://` or `https://`.
func (o FluxConfigurationBucketOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v FluxConfigurationBucket) string { return v.Url }).(pulumi.StringOutput)
}

type FluxConfigurationBucketPtrOutput struct{ *pulumi.OutputState }

func (FluxConfigurationBucketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FluxConfigurationBucket)(nil)).Elem()
}

func (o FluxConfigurationBucketPtrOutput) ToFluxConfigurationBucketPtrOutput() FluxConfigurationBucketPtrOutput {
	return o
}

func (o FluxConfigurationBucketPtrOutput) ToFluxConfigurationBucketPtrOutputWithContext(ctx context.Context) FluxConfigurationBucketPtrOutput {
	return o
}

func (o FluxConfigurationBucketPtrOutput) Elem() FluxConfigurationBucketOutput {
	return o.ApplyT(func(v *FluxConfigurationBucket) FluxConfigurationBucket {
		if v != nil {
			return *v
		}
		var ret FluxConfigurationBucket
		return ret
	}).(FluxConfigurationBucketOutput)
}

// Specifies the plaintext access key used to securely access the S3 bucket.
func (o FluxConfigurationBucketPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationBucket) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// Specifies the bucket name to sync from the url endpoint for the flux configuration.
func (o FluxConfigurationBucketPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationBucket) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets. It must be between 1 and 63 characters. It can contain only lowercase letters, numbers, and hyphens (-). It must start and end with a lowercase letter or number.
func (o FluxConfigurationBucketPtrOutput) LocalAuthReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationBucket) *string {
		if v == nil {
			return nil
		}
		return v.LocalAuthReference
	}).(pulumi.StringPtrOutput)
}

// Specifies the Base64-encoded secret key used to authenticate with the bucket source.
func (o FluxConfigurationBucketPtrOutput) SecretKeyBase64() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationBucket) *string {
		if v == nil {
			return nil
		}
		return v.SecretKeyBase64
	}).(pulumi.StringPtrOutput)
}

// Specifies the interval at which to re-reconcile the cluster git repository source with the remote. Defaults to `600`.
func (o FluxConfigurationBucketPtrOutput) SyncIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationBucket) *int {
		if v == nil {
			return nil
		}
		return v.SyncIntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// Specifies the maximum time to attempt to reconcile the cluster git repository source with the remote. Defaults to `600`.
func (o FluxConfigurationBucketPtrOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationBucket) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

// Specify whether to communicate with a bucket using TLS is enabled. Defaults to `true`.
func (o FluxConfigurationBucketPtrOutput) TlsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationBucket) *bool {
		if v == nil {
			return nil
		}
		return v.TlsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies the URL to sync for the flux configuration S3 bucket. It must start with `http://` or `https://`.
func (o FluxConfigurationBucketPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationBucket) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type FluxConfigurationGitRepository struct {
	// Specifies the Base64-encoded HTTPS certificate authority contents used to access git private git repositories over HTTPS.
	HttpsCaCertBase64 *string `pulumi:"httpsCaCertBase64"`
	// Specifies the Base64-encoded HTTPS personal access token or password that will be used to access the repository.
	HttpsKeyBase64 *string `pulumi:"httpsKeyBase64"`
	// Specifies the plaintext HTTPS username used to access private git repositories over HTTPS.
	HttpsUser *string `pulumi:"httpsUser"`
	// Specifies the name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets. It must be between 1 and 63 characters. It can contain only lowercase letters, numbers, and hyphens (-). It must start and end with a lowercase letter or number.
	LocalAuthReference *string `pulumi:"localAuthReference"`
	// Specifies the source reference type for the GitRepository object. Possible values are `branch`, `commit`, `semver` and `tag`.
	ReferenceType string `pulumi:"referenceType"`
	// Specifies the source reference value for the GitRepository object.
	ReferenceValue string `pulumi:"referenceValue"`
	// Specifies the Base64-encoded knownHosts value containing public SSH keys required to access private git repositories over SSH.
	SshKnownHostsBase64 *string `pulumi:"sshKnownHostsBase64"`
	// Specifies the Base64-encoded SSH private key in PEM format.
	SshPrivateKeyBase64 *string `pulumi:"sshPrivateKeyBase64"`
	// Specifies the interval at which to re-reconcile the cluster git repository source with the remote. Defaults to `600`.
	SyncIntervalInSeconds *int `pulumi:"syncIntervalInSeconds"`
	// Specifies the maximum time to attempt to reconcile the cluster git repository source with the remote. Defaults to `600`.
	TimeoutInSeconds *int `pulumi:"timeoutInSeconds"`
	// Specifies the URL to sync for the flux configuration git repository. It must start with `http://`, `https://`, `git@` or `ssh://`.
	Url string `pulumi:"url"`
}

// FluxConfigurationGitRepositoryInput is an input type that accepts FluxConfigurationGitRepositoryArgs and FluxConfigurationGitRepositoryOutput values.
// You can construct a concrete instance of `FluxConfigurationGitRepositoryInput` via:
//
//	FluxConfigurationGitRepositoryArgs{...}
type FluxConfigurationGitRepositoryInput interface {
	pulumi.Input

	ToFluxConfigurationGitRepositoryOutput() FluxConfigurationGitRepositoryOutput
	ToFluxConfigurationGitRepositoryOutputWithContext(context.Context) FluxConfigurationGitRepositoryOutput
}

type FluxConfigurationGitRepositoryArgs struct {
	// Specifies the Base64-encoded HTTPS certificate authority contents used to access git private git repositories over HTTPS.
	HttpsCaCertBase64 pulumi.StringPtrInput `pulumi:"httpsCaCertBase64"`
	// Specifies the Base64-encoded HTTPS personal access token or password that will be used to access the repository.
	HttpsKeyBase64 pulumi.StringPtrInput `pulumi:"httpsKeyBase64"`
	// Specifies the plaintext HTTPS username used to access private git repositories over HTTPS.
	HttpsUser pulumi.StringPtrInput `pulumi:"httpsUser"`
	// Specifies the name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets. It must be between 1 and 63 characters. It can contain only lowercase letters, numbers, and hyphens (-). It must start and end with a lowercase letter or number.
	LocalAuthReference pulumi.StringPtrInput `pulumi:"localAuthReference"`
	// Specifies the source reference type for the GitRepository object. Possible values are `branch`, `commit`, `semver` and `tag`.
	ReferenceType pulumi.StringInput `pulumi:"referenceType"`
	// Specifies the source reference value for the GitRepository object.
	ReferenceValue pulumi.StringInput `pulumi:"referenceValue"`
	// Specifies the Base64-encoded knownHosts value containing public SSH keys required to access private git repositories over SSH.
	SshKnownHostsBase64 pulumi.StringPtrInput `pulumi:"sshKnownHostsBase64"`
	// Specifies the Base64-encoded SSH private key in PEM format.
	SshPrivateKeyBase64 pulumi.StringPtrInput `pulumi:"sshPrivateKeyBase64"`
	// Specifies the interval at which to re-reconcile the cluster git repository source with the remote. Defaults to `600`.
	SyncIntervalInSeconds pulumi.IntPtrInput `pulumi:"syncIntervalInSeconds"`
	// Specifies the maximum time to attempt to reconcile the cluster git repository source with the remote. Defaults to `600`.
	TimeoutInSeconds pulumi.IntPtrInput `pulumi:"timeoutInSeconds"`
	// Specifies the URL to sync for the flux configuration git repository. It must start with `http://`, `https://`, `git@` or `ssh://`.
	Url pulumi.StringInput `pulumi:"url"`
}

func (FluxConfigurationGitRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FluxConfigurationGitRepository)(nil)).Elem()
}

func (i FluxConfigurationGitRepositoryArgs) ToFluxConfigurationGitRepositoryOutput() FluxConfigurationGitRepositoryOutput {
	return i.ToFluxConfigurationGitRepositoryOutputWithContext(context.Background())
}

func (i FluxConfigurationGitRepositoryArgs) ToFluxConfigurationGitRepositoryOutputWithContext(ctx context.Context) FluxConfigurationGitRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FluxConfigurationGitRepositoryOutput)
}

func (i FluxConfigurationGitRepositoryArgs) ToFluxConfigurationGitRepositoryPtrOutput() FluxConfigurationGitRepositoryPtrOutput {
	return i.ToFluxConfigurationGitRepositoryPtrOutputWithContext(context.Background())
}

func (i FluxConfigurationGitRepositoryArgs) ToFluxConfigurationGitRepositoryPtrOutputWithContext(ctx context.Context) FluxConfigurationGitRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FluxConfigurationGitRepositoryOutput).ToFluxConfigurationGitRepositoryPtrOutputWithContext(ctx)
}

// FluxConfigurationGitRepositoryPtrInput is an input type that accepts FluxConfigurationGitRepositoryArgs, FluxConfigurationGitRepositoryPtr and FluxConfigurationGitRepositoryPtrOutput values.
// You can construct a concrete instance of `FluxConfigurationGitRepositoryPtrInput` via:
//
//	        FluxConfigurationGitRepositoryArgs{...}
//
//	or:
//
//	        nil
type FluxConfigurationGitRepositoryPtrInput interface {
	pulumi.Input

	ToFluxConfigurationGitRepositoryPtrOutput() FluxConfigurationGitRepositoryPtrOutput
	ToFluxConfigurationGitRepositoryPtrOutputWithContext(context.Context) FluxConfigurationGitRepositoryPtrOutput
}

type fluxConfigurationGitRepositoryPtrType FluxConfigurationGitRepositoryArgs

func FluxConfigurationGitRepositoryPtr(v *FluxConfigurationGitRepositoryArgs) FluxConfigurationGitRepositoryPtrInput {
	return (*fluxConfigurationGitRepositoryPtrType)(v)
}

func (*fluxConfigurationGitRepositoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FluxConfigurationGitRepository)(nil)).Elem()
}

func (i *fluxConfigurationGitRepositoryPtrType) ToFluxConfigurationGitRepositoryPtrOutput() FluxConfigurationGitRepositoryPtrOutput {
	return i.ToFluxConfigurationGitRepositoryPtrOutputWithContext(context.Background())
}

func (i *fluxConfigurationGitRepositoryPtrType) ToFluxConfigurationGitRepositoryPtrOutputWithContext(ctx context.Context) FluxConfigurationGitRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FluxConfigurationGitRepositoryPtrOutput)
}

type FluxConfigurationGitRepositoryOutput struct{ *pulumi.OutputState }

func (FluxConfigurationGitRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FluxConfigurationGitRepository)(nil)).Elem()
}

func (o FluxConfigurationGitRepositoryOutput) ToFluxConfigurationGitRepositoryOutput() FluxConfigurationGitRepositoryOutput {
	return o
}

func (o FluxConfigurationGitRepositoryOutput) ToFluxConfigurationGitRepositoryOutputWithContext(ctx context.Context) FluxConfigurationGitRepositoryOutput {
	return o
}

func (o FluxConfigurationGitRepositoryOutput) ToFluxConfigurationGitRepositoryPtrOutput() FluxConfigurationGitRepositoryPtrOutput {
	return o.ToFluxConfigurationGitRepositoryPtrOutputWithContext(context.Background())
}

func (o FluxConfigurationGitRepositoryOutput) ToFluxConfigurationGitRepositoryPtrOutputWithContext(ctx context.Context) FluxConfigurationGitRepositoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FluxConfigurationGitRepository) *FluxConfigurationGitRepository {
		return &v
	}).(FluxConfigurationGitRepositoryPtrOutput)
}

// Specifies the Base64-encoded HTTPS certificate authority contents used to access git private git repositories over HTTPS.
func (o FluxConfigurationGitRepositoryOutput) HttpsCaCertBase64() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FluxConfigurationGitRepository) *string { return v.HttpsCaCertBase64 }).(pulumi.StringPtrOutput)
}

// Specifies the Base64-encoded HTTPS personal access token or password that will be used to access the repository.
func (o FluxConfigurationGitRepositoryOutput) HttpsKeyBase64() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FluxConfigurationGitRepository) *string { return v.HttpsKeyBase64 }).(pulumi.StringPtrOutput)
}

// Specifies the plaintext HTTPS username used to access private git repositories over HTTPS.
func (o FluxConfigurationGitRepositoryOutput) HttpsUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FluxConfigurationGitRepository) *string { return v.HttpsUser }).(pulumi.StringPtrOutput)
}

// Specifies the name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets. It must be between 1 and 63 characters. It can contain only lowercase letters, numbers, and hyphens (-). It must start and end with a lowercase letter or number.
func (o FluxConfigurationGitRepositoryOutput) LocalAuthReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FluxConfigurationGitRepository) *string { return v.LocalAuthReference }).(pulumi.StringPtrOutput)
}

// Specifies the source reference type for the GitRepository object. Possible values are `branch`, `commit`, `semver` and `tag`.
func (o FluxConfigurationGitRepositoryOutput) ReferenceType() pulumi.StringOutput {
	return o.ApplyT(func(v FluxConfigurationGitRepository) string { return v.ReferenceType }).(pulumi.StringOutput)
}

// Specifies the source reference value for the GitRepository object.
func (o FluxConfigurationGitRepositoryOutput) ReferenceValue() pulumi.StringOutput {
	return o.ApplyT(func(v FluxConfigurationGitRepository) string { return v.ReferenceValue }).(pulumi.StringOutput)
}

// Specifies the Base64-encoded knownHosts value containing public SSH keys required to access private git repositories over SSH.
func (o FluxConfigurationGitRepositoryOutput) SshKnownHostsBase64() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FluxConfigurationGitRepository) *string { return v.SshKnownHostsBase64 }).(pulumi.StringPtrOutput)
}

// Specifies the Base64-encoded SSH private key in PEM format.
func (o FluxConfigurationGitRepositoryOutput) SshPrivateKeyBase64() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FluxConfigurationGitRepository) *string { return v.SshPrivateKeyBase64 }).(pulumi.StringPtrOutput)
}

// Specifies the interval at which to re-reconcile the cluster git repository source with the remote. Defaults to `600`.
func (o FluxConfigurationGitRepositoryOutput) SyncIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FluxConfigurationGitRepository) *int { return v.SyncIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// Specifies the maximum time to attempt to reconcile the cluster git repository source with the remote. Defaults to `600`.
func (o FluxConfigurationGitRepositoryOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FluxConfigurationGitRepository) *int { return v.TimeoutInSeconds }).(pulumi.IntPtrOutput)
}

// Specifies the URL to sync for the flux configuration git repository. It must start with `http://`, `https://`, `git@` or `ssh://`.
func (o FluxConfigurationGitRepositoryOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v FluxConfigurationGitRepository) string { return v.Url }).(pulumi.StringOutput)
}

type FluxConfigurationGitRepositoryPtrOutput struct{ *pulumi.OutputState }

func (FluxConfigurationGitRepositoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FluxConfigurationGitRepository)(nil)).Elem()
}

func (o FluxConfigurationGitRepositoryPtrOutput) ToFluxConfigurationGitRepositoryPtrOutput() FluxConfigurationGitRepositoryPtrOutput {
	return o
}

func (o FluxConfigurationGitRepositoryPtrOutput) ToFluxConfigurationGitRepositoryPtrOutputWithContext(ctx context.Context) FluxConfigurationGitRepositoryPtrOutput {
	return o
}

func (o FluxConfigurationGitRepositoryPtrOutput) Elem() FluxConfigurationGitRepositoryOutput {
	return o.ApplyT(func(v *FluxConfigurationGitRepository) FluxConfigurationGitRepository {
		if v != nil {
			return *v
		}
		var ret FluxConfigurationGitRepository
		return ret
	}).(FluxConfigurationGitRepositoryOutput)
}

// Specifies the Base64-encoded HTTPS certificate authority contents used to access git private git repositories over HTTPS.
func (o FluxConfigurationGitRepositoryPtrOutput) HttpsCaCertBase64() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationGitRepository) *string {
		if v == nil {
			return nil
		}
		return v.HttpsCaCertBase64
	}).(pulumi.StringPtrOutput)
}

// Specifies the Base64-encoded HTTPS personal access token or password that will be used to access the repository.
func (o FluxConfigurationGitRepositoryPtrOutput) HttpsKeyBase64() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationGitRepository) *string {
		if v == nil {
			return nil
		}
		return v.HttpsKeyBase64
	}).(pulumi.StringPtrOutput)
}

// Specifies the plaintext HTTPS username used to access private git repositories over HTTPS.
func (o FluxConfigurationGitRepositoryPtrOutput) HttpsUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationGitRepository) *string {
		if v == nil {
			return nil
		}
		return v.HttpsUser
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets. It must be between 1 and 63 characters. It can contain only lowercase letters, numbers, and hyphens (-). It must start and end with a lowercase letter or number.
func (o FluxConfigurationGitRepositoryPtrOutput) LocalAuthReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationGitRepository) *string {
		if v == nil {
			return nil
		}
		return v.LocalAuthReference
	}).(pulumi.StringPtrOutput)
}

// Specifies the source reference type for the GitRepository object. Possible values are `branch`, `commit`, `semver` and `tag`.
func (o FluxConfigurationGitRepositoryPtrOutput) ReferenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationGitRepository) *string {
		if v == nil {
			return nil
		}
		return &v.ReferenceType
	}).(pulumi.StringPtrOutput)
}

// Specifies the source reference value for the GitRepository object.
func (o FluxConfigurationGitRepositoryPtrOutput) ReferenceValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationGitRepository) *string {
		if v == nil {
			return nil
		}
		return &v.ReferenceValue
	}).(pulumi.StringPtrOutput)
}

// Specifies the Base64-encoded knownHosts value containing public SSH keys required to access private git repositories over SSH.
func (o FluxConfigurationGitRepositoryPtrOutput) SshKnownHostsBase64() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationGitRepository) *string {
		if v == nil {
			return nil
		}
		return v.SshKnownHostsBase64
	}).(pulumi.StringPtrOutput)
}

// Specifies the Base64-encoded SSH private key in PEM format.
func (o FluxConfigurationGitRepositoryPtrOutput) SshPrivateKeyBase64() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationGitRepository) *string {
		if v == nil {
			return nil
		}
		return v.SshPrivateKeyBase64
	}).(pulumi.StringPtrOutput)
}

// Specifies the interval at which to re-reconcile the cluster git repository source with the remote. Defaults to `600`.
func (o FluxConfigurationGitRepositoryPtrOutput) SyncIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationGitRepository) *int {
		if v == nil {
			return nil
		}
		return v.SyncIntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// Specifies the maximum time to attempt to reconcile the cluster git repository source with the remote. Defaults to `600`.
func (o FluxConfigurationGitRepositoryPtrOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationGitRepository) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

// Specifies the URL to sync for the flux configuration git repository. It must start with `http://`, `https://`, `git@` or `ssh://`.
func (o FluxConfigurationGitRepositoryPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FluxConfigurationGitRepository) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type FluxConfigurationKustomization struct {
	// Specifies other kustomizations that this kustomization depends on. This kustomization will not reconcile until all dependencies have completed their reconciliation.
	DependsOns []string `pulumi:"dependsOns"`
	// Whether garbage collections of Kubernetes objects created by this kustomization is enabled. Defaults to `false`.
	GarbageCollectionEnabled *bool `pulumi:"garbageCollectionEnabled"`
	// Specifies the name of the kustomization.
	Name string `pulumi:"name"`
	// Specifies the path in the source reference to reconcile on the cluster.
	Path *string `pulumi:"path"`
	// Whether re-creating Kubernetes resources on the cluster is enabled when patching fails due to an immutable field change. Defaults to `false`.
	RecreatingEnabled *bool `pulumi:"recreatingEnabled"`
	// The interval at which to re-reconcile the kustomization on the cluster in the event of failure on reconciliation. Defaults to `600`.
	RetryIntervalInSeconds *int `pulumi:"retryIntervalInSeconds"`
	// The interval at which to re-reconcile the kustomization on the cluster. Defaults to `600`.
	SyncIntervalInSeconds *int `pulumi:"syncIntervalInSeconds"`
	// The maximum time to attempt to reconcile the kustomization on the cluster. Defaults to `600`.
	TimeoutInSeconds *int `pulumi:"timeoutInSeconds"`
}

// FluxConfigurationKustomizationInput is an input type that accepts FluxConfigurationKustomizationArgs and FluxConfigurationKustomizationOutput values.
// You can construct a concrete instance of `FluxConfigurationKustomizationInput` via:
//
//	FluxConfigurationKustomizationArgs{...}
type FluxConfigurationKustomizationInput interface {
	pulumi.Input

	ToFluxConfigurationKustomizationOutput() FluxConfigurationKustomizationOutput
	ToFluxConfigurationKustomizationOutputWithContext(context.Context) FluxConfigurationKustomizationOutput
}

type FluxConfigurationKustomizationArgs struct {
	// Specifies other kustomizations that this kustomization depends on. This kustomization will not reconcile until all dependencies have completed their reconciliation.
	DependsOns pulumi.StringArrayInput `pulumi:"dependsOns"`
	// Whether garbage collections of Kubernetes objects created by this kustomization is enabled. Defaults to `false`.
	GarbageCollectionEnabled pulumi.BoolPtrInput `pulumi:"garbageCollectionEnabled"`
	// Specifies the name of the kustomization.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the path in the source reference to reconcile on the cluster.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Whether re-creating Kubernetes resources on the cluster is enabled when patching fails due to an immutable field change. Defaults to `false`.
	RecreatingEnabled pulumi.BoolPtrInput `pulumi:"recreatingEnabled"`
	// The interval at which to re-reconcile the kustomization on the cluster in the event of failure on reconciliation. Defaults to `600`.
	RetryIntervalInSeconds pulumi.IntPtrInput `pulumi:"retryIntervalInSeconds"`
	// The interval at which to re-reconcile the kustomization on the cluster. Defaults to `600`.
	SyncIntervalInSeconds pulumi.IntPtrInput `pulumi:"syncIntervalInSeconds"`
	// The maximum time to attempt to reconcile the kustomization on the cluster. Defaults to `600`.
	TimeoutInSeconds pulumi.IntPtrInput `pulumi:"timeoutInSeconds"`
}

func (FluxConfigurationKustomizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FluxConfigurationKustomization)(nil)).Elem()
}

func (i FluxConfigurationKustomizationArgs) ToFluxConfigurationKustomizationOutput() FluxConfigurationKustomizationOutput {
	return i.ToFluxConfigurationKustomizationOutputWithContext(context.Background())
}

func (i FluxConfigurationKustomizationArgs) ToFluxConfigurationKustomizationOutputWithContext(ctx context.Context) FluxConfigurationKustomizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FluxConfigurationKustomizationOutput)
}

// FluxConfigurationKustomizationArrayInput is an input type that accepts FluxConfigurationKustomizationArray and FluxConfigurationKustomizationArrayOutput values.
// You can construct a concrete instance of `FluxConfigurationKustomizationArrayInput` via:
//
//	FluxConfigurationKustomizationArray{ FluxConfigurationKustomizationArgs{...} }
type FluxConfigurationKustomizationArrayInput interface {
	pulumi.Input

	ToFluxConfigurationKustomizationArrayOutput() FluxConfigurationKustomizationArrayOutput
	ToFluxConfigurationKustomizationArrayOutputWithContext(context.Context) FluxConfigurationKustomizationArrayOutput
}

type FluxConfigurationKustomizationArray []FluxConfigurationKustomizationInput

func (FluxConfigurationKustomizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FluxConfigurationKustomization)(nil)).Elem()
}

func (i FluxConfigurationKustomizationArray) ToFluxConfigurationKustomizationArrayOutput() FluxConfigurationKustomizationArrayOutput {
	return i.ToFluxConfigurationKustomizationArrayOutputWithContext(context.Background())
}

func (i FluxConfigurationKustomizationArray) ToFluxConfigurationKustomizationArrayOutputWithContext(ctx context.Context) FluxConfigurationKustomizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FluxConfigurationKustomizationArrayOutput)
}

type FluxConfigurationKustomizationOutput struct{ *pulumi.OutputState }

func (FluxConfigurationKustomizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FluxConfigurationKustomization)(nil)).Elem()
}

func (o FluxConfigurationKustomizationOutput) ToFluxConfigurationKustomizationOutput() FluxConfigurationKustomizationOutput {
	return o
}

func (o FluxConfigurationKustomizationOutput) ToFluxConfigurationKustomizationOutputWithContext(ctx context.Context) FluxConfigurationKustomizationOutput {
	return o
}

// Specifies other kustomizations that this kustomization depends on. This kustomization will not reconcile until all dependencies have completed their reconciliation.
func (o FluxConfigurationKustomizationOutput) DependsOns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FluxConfigurationKustomization) []string { return v.DependsOns }).(pulumi.StringArrayOutput)
}

// Whether garbage collections of Kubernetes objects created by this kustomization is enabled. Defaults to `false`.
func (o FluxConfigurationKustomizationOutput) GarbageCollectionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FluxConfigurationKustomization) *bool { return v.GarbageCollectionEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies the name of the kustomization.
func (o FluxConfigurationKustomizationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FluxConfigurationKustomization) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the path in the source reference to reconcile on the cluster.
func (o FluxConfigurationKustomizationOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FluxConfigurationKustomization) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Whether re-creating Kubernetes resources on the cluster is enabled when patching fails due to an immutable field change. Defaults to `false`.
func (o FluxConfigurationKustomizationOutput) RecreatingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FluxConfigurationKustomization) *bool { return v.RecreatingEnabled }).(pulumi.BoolPtrOutput)
}

// The interval at which to re-reconcile the kustomization on the cluster in the event of failure on reconciliation. Defaults to `600`.
func (o FluxConfigurationKustomizationOutput) RetryIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FluxConfigurationKustomization) *int { return v.RetryIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The interval at which to re-reconcile the kustomization on the cluster. Defaults to `600`.
func (o FluxConfigurationKustomizationOutput) SyncIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FluxConfigurationKustomization) *int { return v.SyncIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The maximum time to attempt to reconcile the kustomization on the cluster. Defaults to `600`.
func (o FluxConfigurationKustomizationOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FluxConfigurationKustomization) *int { return v.TimeoutInSeconds }).(pulumi.IntPtrOutput)
}

type FluxConfigurationKustomizationArrayOutput struct{ *pulumi.OutputState }

func (FluxConfigurationKustomizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FluxConfigurationKustomization)(nil)).Elem()
}

func (o FluxConfigurationKustomizationArrayOutput) ToFluxConfigurationKustomizationArrayOutput() FluxConfigurationKustomizationArrayOutput {
	return o
}

func (o FluxConfigurationKustomizationArrayOutput) ToFluxConfigurationKustomizationArrayOutputWithContext(ctx context.Context) FluxConfigurationKustomizationArrayOutput {
	return o
}

func (o FluxConfigurationKustomizationArrayOutput) Index(i pulumi.IntInput) FluxConfigurationKustomizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FluxConfigurationKustomization {
		return vs[0].([]FluxConfigurationKustomization)[vs[1].(int)]
	}).(FluxConfigurationKustomizationOutput)
}

type GroupContainer struct {
	// A list of commands which should be run on the container. Changing this forces a new resource to be created.
	Commands []string `pulumi:"commands"`
	// The required number of CPU cores of the containers. Changing this forces a new resource to be created.
	Cpu float64 `pulumi:"cpu"`
	// The upper limit of the number of CPU cores of the containers.
	CpuLimit *float64 `pulumi:"cpuLimit"`
	// A list of environment variables to be set on the container. Specified as a map of name/value pairs. Changing this forces a new resource to be created.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// A `gpu` block as defined below. Changing this forces a new resource to be created.
	//
	// > **Note:** Gpu resources are currently only supported in Linux containers.
	Gpu *GroupContainerGpu `pulumi:"gpu"`
	// A `gpuLimit` block as defined below.
	GpuLimit *GroupContainerGpuLimit `pulumi:"gpuLimit"`
	// The container image name. Changing this forces a new resource to be created.
	Image string `pulumi:"image"`
	// The definition of a readiness probe for this container as documented in the `livenessProbe` block below. Changing this forces a new resource to be created.
	LivenessProbe *GroupContainerLivenessProbe `pulumi:"livenessProbe"`
	// The required memory of the containers in GB. Changing this forces a new resource to be created.
	Memory float64 `pulumi:"memory"`
	// The the upper limit of the memory of the containers in GB.
	MemoryLimit *float64 `pulumi:"memoryLimit"`
	// Specifies the name of the Container. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
	// A set of public ports for the container. Changing this forces a new resource to be created. Set as documented in the `ports` block below.
	Ports []GroupContainerPort `pulumi:"ports"`
	// The definition of a readiness probe for this container as documented in the `readinessProbe` block below. Changing this forces a new resource to be created.
	ReadinessProbe *GroupContainerReadinessProbe `pulumi:"readinessProbe"`
	// A list of sensitive environment variables to be set on the container. Specified as a map of name/value pairs. Changing this forces a new resource to be created.
	SecureEnvironmentVariables map[string]string `pulumi:"secureEnvironmentVariables"`
	// The definition of the security context for this container as documented in the `security` block below. Changing this forces a new resource to be created.
	Securities []GroupContainerSecurity `pulumi:"securities"`
	// The definition of a volume mount for this container as documented in the `volume` block below. Changing this forces a new resource to be created.
	Volumes []GroupContainerVolume `pulumi:"volumes"`
}

// GroupContainerInput is an input type that accepts GroupContainerArgs and GroupContainerOutput values.
// You can construct a concrete instance of `GroupContainerInput` via:
//
//	GroupContainerArgs{...}
type GroupContainerInput interface {
	pulumi.Input

	ToGroupContainerOutput() GroupContainerOutput
	ToGroupContainerOutputWithContext(context.Context) GroupContainerOutput
}

type GroupContainerArgs struct {
	// A list of commands which should be run on the container. Changing this forces a new resource to be created.
	Commands pulumi.StringArrayInput `pulumi:"commands"`
	// The required number of CPU cores of the containers. Changing this forces a new resource to be created.
	Cpu pulumi.Float64Input `pulumi:"cpu"`
	// The upper limit of the number of CPU cores of the containers.
	CpuLimit pulumi.Float64PtrInput `pulumi:"cpuLimit"`
	// A list of environment variables to be set on the container. Specified as a map of name/value pairs. Changing this forces a new resource to be created.
	EnvironmentVariables pulumi.StringMapInput `pulumi:"environmentVariables"`
	// A `gpu` block as defined below. Changing this forces a new resource to be created.
	//
	// > **Note:** Gpu resources are currently only supported in Linux containers.
	Gpu GroupContainerGpuPtrInput `pulumi:"gpu"`
	// A `gpuLimit` block as defined below.
	GpuLimit GroupContainerGpuLimitPtrInput `pulumi:"gpuLimit"`
	// The container image name. Changing this forces a new resource to be created.
	Image pulumi.StringInput `pulumi:"image"`
	// The definition of a readiness probe for this container as documented in the `livenessProbe` block below. Changing this forces a new resource to be created.
	LivenessProbe GroupContainerLivenessProbePtrInput `pulumi:"livenessProbe"`
	// The required memory of the containers in GB. Changing this forces a new resource to be created.
	Memory pulumi.Float64Input `pulumi:"memory"`
	// The the upper limit of the memory of the containers in GB.
	MemoryLimit pulumi.Float64PtrInput `pulumi:"memoryLimit"`
	// Specifies the name of the Container. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// A set of public ports for the container. Changing this forces a new resource to be created. Set as documented in the `ports` block below.
	Ports GroupContainerPortArrayInput `pulumi:"ports"`
	// The definition of a readiness probe for this container as documented in the `readinessProbe` block below. Changing this forces a new resource to be created.
	ReadinessProbe GroupContainerReadinessProbePtrInput `pulumi:"readinessProbe"`
	// A list of sensitive environment variables to be set on the container. Specified as a map of name/value pairs. Changing this forces a new resource to be created.
	SecureEnvironmentVariables pulumi.StringMapInput `pulumi:"secureEnvironmentVariables"`
	// The definition of the security context for this container as documented in the `security` block below. Changing this forces a new resource to be created.
	Securities GroupContainerSecurityArrayInput `pulumi:"securities"`
	// The definition of a volume mount for this container as documented in the `volume` block below. Changing this forces a new resource to be created.
	Volumes GroupContainerVolumeArrayInput `pulumi:"volumes"`
}

func (GroupContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainer)(nil)).Elem()
}

func (i GroupContainerArgs) ToGroupContainerOutput() GroupContainerOutput {
	return i.ToGroupContainerOutputWithContext(context.Background())
}

func (i GroupContainerArgs) ToGroupContainerOutputWithContext(ctx context.Context) GroupContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerOutput)
}

// GroupContainerArrayInput is an input type that accepts GroupContainerArray and GroupContainerArrayOutput values.
// You can construct a concrete instance of `GroupContainerArrayInput` via:
//
//	GroupContainerArray{ GroupContainerArgs{...} }
type GroupContainerArrayInput interface {
	pulumi.Input

	ToGroupContainerArrayOutput() GroupContainerArrayOutput
	ToGroupContainerArrayOutputWithContext(context.Context) GroupContainerArrayOutput
}

type GroupContainerArray []GroupContainerInput

func (GroupContainerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupContainer)(nil)).Elem()
}

func (i GroupContainerArray) ToGroupContainerArrayOutput() GroupContainerArrayOutput {
	return i.ToGroupContainerArrayOutputWithContext(context.Background())
}

func (i GroupContainerArray) ToGroupContainerArrayOutputWithContext(ctx context.Context) GroupContainerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerArrayOutput)
}

type GroupContainerOutput struct{ *pulumi.OutputState }

func (GroupContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainer)(nil)).Elem()
}

func (o GroupContainerOutput) ToGroupContainerOutput() GroupContainerOutput {
	return o
}

func (o GroupContainerOutput) ToGroupContainerOutputWithContext(ctx context.Context) GroupContainerOutput {
	return o
}

// A list of commands which should be run on the container. Changing this forces a new resource to be created.
func (o GroupContainerOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupContainer) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

// The required number of CPU cores of the containers. Changing this forces a new resource to be created.
func (o GroupContainerOutput) Cpu() pulumi.Float64Output {
	return o.ApplyT(func(v GroupContainer) float64 { return v.Cpu }).(pulumi.Float64Output)
}

// The upper limit of the number of CPU cores of the containers.
func (o GroupContainerOutput) CpuLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GroupContainer) *float64 { return v.CpuLimit }).(pulumi.Float64PtrOutput)
}

// A list of environment variables to be set on the container. Specified as a map of name/value pairs. Changing this forces a new resource to be created.
func (o GroupContainerOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v GroupContainer) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// A `gpu` block as defined below. Changing this forces a new resource to be created.
//
// > **Note:** Gpu resources are currently only supported in Linux containers.
func (o GroupContainerOutput) Gpu() GroupContainerGpuPtrOutput {
	return o.ApplyT(func(v GroupContainer) *GroupContainerGpu { return v.Gpu }).(GroupContainerGpuPtrOutput)
}

// A `gpuLimit` block as defined below.
func (o GroupContainerOutput) GpuLimit() GroupContainerGpuLimitPtrOutput {
	return o.ApplyT(func(v GroupContainer) *GroupContainerGpuLimit { return v.GpuLimit }).(GroupContainerGpuLimitPtrOutput)
}

// The container image name. Changing this forces a new resource to be created.
func (o GroupContainerOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v GroupContainer) string { return v.Image }).(pulumi.StringOutput)
}

// The definition of a readiness probe for this container as documented in the `livenessProbe` block below. Changing this forces a new resource to be created.
func (o GroupContainerOutput) LivenessProbe() GroupContainerLivenessProbePtrOutput {
	return o.ApplyT(func(v GroupContainer) *GroupContainerLivenessProbe { return v.LivenessProbe }).(GroupContainerLivenessProbePtrOutput)
}

// The required memory of the containers in GB. Changing this forces a new resource to be created.
func (o GroupContainerOutput) Memory() pulumi.Float64Output {
	return o.ApplyT(func(v GroupContainer) float64 { return v.Memory }).(pulumi.Float64Output)
}

// The the upper limit of the memory of the containers in GB.
func (o GroupContainerOutput) MemoryLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GroupContainer) *float64 { return v.MemoryLimit }).(pulumi.Float64PtrOutput)
}

// Specifies the name of the Container. Changing this forces a new resource to be created.
func (o GroupContainerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GroupContainer) string { return v.Name }).(pulumi.StringOutput)
}

// A set of public ports for the container. Changing this forces a new resource to be created. Set as documented in the `ports` block below.
func (o GroupContainerOutput) Ports() GroupContainerPortArrayOutput {
	return o.ApplyT(func(v GroupContainer) []GroupContainerPort { return v.Ports }).(GroupContainerPortArrayOutput)
}

// The definition of a readiness probe for this container as documented in the `readinessProbe` block below. Changing this forces a new resource to be created.
func (o GroupContainerOutput) ReadinessProbe() GroupContainerReadinessProbePtrOutput {
	return o.ApplyT(func(v GroupContainer) *GroupContainerReadinessProbe { return v.ReadinessProbe }).(GroupContainerReadinessProbePtrOutput)
}

// A list of sensitive environment variables to be set on the container. Specified as a map of name/value pairs. Changing this forces a new resource to be created.
func (o GroupContainerOutput) SecureEnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v GroupContainer) map[string]string { return v.SecureEnvironmentVariables }).(pulumi.StringMapOutput)
}

// The definition of the security context for this container as documented in the `security` block below. Changing this forces a new resource to be created.
func (o GroupContainerOutput) Securities() GroupContainerSecurityArrayOutput {
	return o.ApplyT(func(v GroupContainer) []GroupContainerSecurity { return v.Securities }).(GroupContainerSecurityArrayOutput)
}

// The definition of a volume mount for this container as documented in the `volume` block below. Changing this forces a new resource to be created.
func (o GroupContainerOutput) Volumes() GroupContainerVolumeArrayOutput {
	return o.ApplyT(func(v GroupContainer) []GroupContainerVolume { return v.Volumes }).(GroupContainerVolumeArrayOutput)
}

type GroupContainerArrayOutput struct{ *pulumi.OutputState }

func (GroupContainerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupContainer)(nil)).Elem()
}

func (o GroupContainerArrayOutput) ToGroupContainerArrayOutput() GroupContainerArrayOutput {
	return o
}

func (o GroupContainerArrayOutput) ToGroupContainerArrayOutputWithContext(ctx context.Context) GroupContainerArrayOutput {
	return o
}

func (o GroupContainerArrayOutput) Index(i pulumi.IntInput) GroupContainerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupContainer {
		return vs[0].([]GroupContainer)[vs[1].(int)]
	}).(GroupContainerOutput)
}

type GroupContainerGpu struct {
	// The number of GPUs which should be assigned to this container. Allowed values are `1`, `2`, or `4`. Changing this forces a new resource to be created.
	Count *int `pulumi:"count"`
	// The SKU which should be used for the GPU. Possible values are `K80`, `P100`, or `V100`. Changing this forces a new resource to be created.
	Sku *string `pulumi:"sku"`
}

// GroupContainerGpuInput is an input type that accepts GroupContainerGpuArgs and GroupContainerGpuOutput values.
// You can construct a concrete instance of `GroupContainerGpuInput` via:
//
//	GroupContainerGpuArgs{...}
type GroupContainerGpuInput interface {
	pulumi.Input

	ToGroupContainerGpuOutput() GroupContainerGpuOutput
	ToGroupContainerGpuOutputWithContext(context.Context) GroupContainerGpuOutput
}

type GroupContainerGpuArgs struct {
	// The number of GPUs which should be assigned to this container. Allowed values are `1`, `2`, or `4`. Changing this forces a new resource to be created.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// The SKU which should be used for the GPU. Possible values are `K80`, `P100`, or `V100`. Changing this forces a new resource to be created.
	Sku pulumi.StringPtrInput `pulumi:"sku"`
}

func (GroupContainerGpuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerGpu)(nil)).Elem()
}

func (i GroupContainerGpuArgs) ToGroupContainerGpuOutput() GroupContainerGpuOutput {
	return i.ToGroupContainerGpuOutputWithContext(context.Background())
}

func (i GroupContainerGpuArgs) ToGroupContainerGpuOutputWithContext(ctx context.Context) GroupContainerGpuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerGpuOutput)
}

func (i GroupContainerGpuArgs) ToGroupContainerGpuPtrOutput() GroupContainerGpuPtrOutput {
	return i.ToGroupContainerGpuPtrOutputWithContext(context.Background())
}

func (i GroupContainerGpuArgs) ToGroupContainerGpuPtrOutputWithContext(ctx context.Context) GroupContainerGpuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerGpuOutput).ToGroupContainerGpuPtrOutputWithContext(ctx)
}

// GroupContainerGpuPtrInput is an input type that accepts GroupContainerGpuArgs, GroupContainerGpuPtr and GroupContainerGpuPtrOutput values.
// You can construct a concrete instance of `GroupContainerGpuPtrInput` via:
//
//	        GroupContainerGpuArgs{...}
//
//	or:
//
//	        nil
type GroupContainerGpuPtrInput interface {
	pulumi.Input

	ToGroupContainerGpuPtrOutput() GroupContainerGpuPtrOutput
	ToGroupContainerGpuPtrOutputWithContext(context.Context) GroupContainerGpuPtrOutput
}

type groupContainerGpuPtrType GroupContainerGpuArgs

func GroupContainerGpuPtr(v *GroupContainerGpuArgs) GroupContainerGpuPtrInput {
	return (*groupContainerGpuPtrType)(v)
}

func (*groupContainerGpuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupContainerGpu)(nil)).Elem()
}

func (i *groupContainerGpuPtrType) ToGroupContainerGpuPtrOutput() GroupContainerGpuPtrOutput {
	return i.ToGroupContainerGpuPtrOutputWithContext(context.Background())
}

func (i *groupContainerGpuPtrType) ToGroupContainerGpuPtrOutputWithContext(ctx context.Context) GroupContainerGpuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerGpuPtrOutput)
}

type GroupContainerGpuOutput struct{ *pulumi.OutputState }

func (GroupContainerGpuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerGpu)(nil)).Elem()
}

func (o GroupContainerGpuOutput) ToGroupContainerGpuOutput() GroupContainerGpuOutput {
	return o
}

func (o GroupContainerGpuOutput) ToGroupContainerGpuOutputWithContext(ctx context.Context) GroupContainerGpuOutput {
	return o
}

func (o GroupContainerGpuOutput) ToGroupContainerGpuPtrOutput() GroupContainerGpuPtrOutput {
	return o.ToGroupContainerGpuPtrOutputWithContext(context.Background())
}

func (o GroupContainerGpuOutput) ToGroupContainerGpuPtrOutputWithContext(ctx context.Context) GroupContainerGpuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupContainerGpu) *GroupContainerGpu {
		return &v
	}).(GroupContainerGpuPtrOutput)
}

// The number of GPUs which should be assigned to this container. Allowed values are `1`, `2`, or `4`. Changing this forces a new resource to be created.
func (o GroupContainerGpuOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupContainerGpu) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// The SKU which should be used for the GPU. Possible values are `K80`, `P100`, or `V100`. Changing this forces a new resource to be created.
func (o GroupContainerGpuOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupContainerGpu) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

type GroupContainerGpuPtrOutput struct{ *pulumi.OutputState }

func (GroupContainerGpuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupContainerGpu)(nil)).Elem()
}

func (o GroupContainerGpuPtrOutput) ToGroupContainerGpuPtrOutput() GroupContainerGpuPtrOutput {
	return o
}

func (o GroupContainerGpuPtrOutput) ToGroupContainerGpuPtrOutputWithContext(ctx context.Context) GroupContainerGpuPtrOutput {
	return o
}

func (o GroupContainerGpuPtrOutput) Elem() GroupContainerGpuOutput {
	return o.ApplyT(func(v *GroupContainerGpu) GroupContainerGpu {
		if v != nil {
			return *v
		}
		var ret GroupContainerGpu
		return ret
	}).(GroupContainerGpuOutput)
}

// The number of GPUs which should be assigned to this container. Allowed values are `1`, `2`, or `4`. Changing this forces a new resource to be created.
func (o GroupContainerGpuPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupContainerGpu) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// The SKU which should be used for the GPU. Possible values are `K80`, `P100`, or `V100`. Changing this forces a new resource to be created.
func (o GroupContainerGpuPtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupContainerGpu) *string {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(pulumi.StringPtrOutput)
}

type GroupContainerGpuLimit struct {
	// The upper limit of the number of GPUs which should be assigned to this container.
	Count *int `pulumi:"count"`
	// The allowed SKU which should be used for the GPU. Possible values are `K80`, `P100`, or `V100`.
	Sku *string `pulumi:"sku"`
}

// GroupContainerGpuLimitInput is an input type that accepts GroupContainerGpuLimitArgs and GroupContainerGpuLimitOutput values.
// You can construct a concrete instance of `GroupContainerGpuLimitInput` via:
//
//	GroupContainerGpuLimitArgs{...}
type GroupContainerGpuLimitInput interface {
	pulumi.Input

	ToGroupContainerGpuLimitOutput() GroupContainerGpuLimitOutput
	ToGroupContainerGpuLimitOutputWithContext(context.Context) GroupContainerGpuLimitOutput
}

type GroupContainerGpuLimitArgs struct {
	// The upper limit of the number of GPUs which should be assigned to this container.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// The allowed SKU which should be used for the GPU. Possible values are `K80`, `P100`, or `V100`.
	Sku pulumi.StringPtrInput `pulumi:"sku"`
}

func (GroupContainerGpuLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerGpuLimit)(nil)).Elem()
}

func (i GroupContainerGpuLimitArgs) ToGroupContainerGpuLimitOutput() GroupContainerGpuLimitOutput {
	return i.ToGroupContainerGpuLimitOutputWithContext(context.Background())
}

func (i GroupContainerGpuLimitArgs) ToGroupContainerGpuLimitOutputWithContext(ctx context.Context) GroupContainerGpuLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerGpuLimitOutput)
}

func (i GroupContainerGpuLimitArgs) ToGroupContainerGpuLimitPtrOutput() GroupContainerGpuLimitPtrOutput {
	return i.ToGroupContainerGpuLimitPtrOutputWithContext(context.Background())
}

func (i GroupContainerGpuLimitArgs) ToGroupContainerGpuLimitPtrOutputWithContext(ctx context.Context) GroupContainerGpuLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerGpuLimitOutput).ToGroupContainerGpuLimitPtrOutputWithContext(ctx)
}

// GroupContainerGpuLimitPtrInput is an input type that accepts GroupContainerGpuLimitArgs, GroupContainerGpuLimitPtr and GroupContainerGpuLimitPtrOutput values.
// You can construct a concrete instance of `GroupContainerGpuLimitPtrInput` via:
//
//	        GroupContainerGpuLimitArgs{...}
//
//	or:
//
//	        nil
type GroupContainerGpuLimitPtrInput interface {
	pulumi.Input

	ToGroupContainerGpuLimitPtrOutput() GroupContainerGpuLimitPtrOutput
	ToGroupContainerGpuLimitPtrOutputWithContext(context.Context) GroupContainerGpuLimitPtrOutput
}

type groupContainerGpuLimitPtrType GroupContainerGpuLimitArgs

func GroupContainerGpuLimitPtr(v *GroupContainerGpuLimitArgs) GroupContainerGpuLimitPtrInput {
	return (*groupContainerGpuLimitPtrType)(v)
}

func (*groupContainerGpuLimitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupContainerGpuLimit)(nil)).Elem()
}

func (i *groupContainerGpuLimitPtrType) ToGroupContainerGpuLimitPtrOutput() GroupContainerGpuLimitPtrOutput {
	return i.ToGroupContainerGpuLimitPtrOutputWithContext(context.Background())
}

func (i *groupContainerGpuLimitPtrType) ToGroupContainerGpuLimitPtrOutputWithContext(ctx context.Context) GroupContainerGpuLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerGpuLimitPtrOutput)
}

type GroupContainerGpuLimitOutput struct{ *pulumi.OutputState }

func (GroupContainerGpuLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerGpuLimit)(nil)).Elem()
}

func (o GroupContainerGpuLimitOutput) ToGroupContainerGpuLimitOutput() GroupContainerGpuLimitOutput {
	return o
}

func (o GroupContainerGpuLimitOutput) ToGroupContainerGpuLimitOutputWithContext(ctx context.Context) GroupContainerGpuLimitOutput {
	return o
}

func (o GroupContainerGpuLimitOutput) ToGroupContainerGpuLimitPtrOutput() GroupContainerGpuLimitPtrOutput {
	return o.ToGroupContainerGpuLimitPtrOutputWithContext(context.Background())
}

func (o GroupContainerGpuLimitOutput) ToGroupContainerGpuLimitPtrOutputWithContext(ctx context.Context) GroupContainerGpuLimitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupContainerGpuLimit) *GroupContainerGpuLimit {
		return &v
	}).(GroupContainerGpuLimitPtrOutput)
}

// The upper limit of the number of GPUs which should be assigned to this container.
func (o GroupContainerGpuLimitOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupContainerGpuLimit) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// The allowed SKU which should be used for the GPU. Possible values are `K80`, `P100`, or `V100`.
func (o GroupContainerGpuLimitOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupContainerGpuLimit) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

type GroupContainerGpuLimitPtrOutput struct{ *pulumi.OutputState }

func (GroupContainerGpuLimitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupContainerGpuLimit)(nil)).Elem()
}

func (o GroupContainerGpuLimitPtrOutput) ToGroupContainerGpuLimitPtrOutput() GroupContainerGpuLimitPtrOutput {
	return o
}

func (o GroupContainerGpuLimitPtrOutput) ToGroupContainerGpuLimitPtrOutputWithContext(ctx context.Context) GroupContainerGpuLimitPtrOutput {
	return o
}

func (o GroupContainerGpuLimitPtrOutput) Elem() GroupContainerGpuLimitOutput {
	return o.ApplyT(func(v *GroupContainerGpuLimit) GroupContainerGpuLimit {
		if v != nil {
			return *v
		}
		var ret GroupContainerGpuLimit
		return ret
	}).(GroupContainerGpuLimitOutput)
}

// The upper limit of the number of GPUs which should be assigned to this container.
func (o GroupContainerGpuLimitPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupContainerGpuLimit) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// The allowed SKU which should be used for the GPU. Possible values are `K80`, `P100`, or `V100`.
func (o GroupContainerGpuLimitPtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupContainerGpuLimit) *string {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(pulumi.StringPtrOutput)
}

type GroupContainerLivenessProbe struct {
	// Commands to be run to validate container readiness. Changing this forces a new resource to be created.
	Execs []string `pulumi:"execs"`
	// How many times to try the probe before restarting the container (liveness probe) or marking the container as unhealthy (readiness probe). Changing this forces a new resource to be created.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// The definition of the httpGet for this container as documented in the `httpGet` block below. Changing this forces a new resource to be created.
	HttpGets []GroupContainerLivenessProbeHttpGet `pulumi:"httpGets"`
	// Number of seconds after the container has started before liveness or readiness probes are initiated. Changing this forces a new resource to be created.
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. Changing this forces a new resource to be created.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. Changing this forces a new resource to be created.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// Number of seconds after which the probe times out. Changing this forces a new resource to be created.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// GroupContainerLivenessProbeInput is an input type that accepts GroupContainerLivenessProbeArgs and GroupContainerLivenessProbeOutput values.
// You can construct a concrete instance of `GroupContainerLivenessProbeInput` via:
//
//	GroupContainerLivenessProbeArgs{...}
type GroupContainerLivenessProbeInput interface {
	pulumi.Input

	ToGroupContainerLivenessProbeOutput() GroupContainerLivenessProbeOutput
	ToGroupContainerLivenessProbeOutputWithContext(context.Context) GroupContainerLivenessProbeOutput
}

type GroupContainerLivenessProbeArgs struct {
	// Commands to be run to validate container readiness. Changing this forces a new resource to be created.
	Execs pulumi.StringArrayInput `pulumi:"execs"`
	// How many times to try the probe before restarting the container (liveness probe) or marking the container as unhealthy (readiness probe). Changing this forces a new resource to be created.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// The definition of the httpGet for this container as documented in the `httpGet` block below. Changing this forces a new resource to be created.
	HttpGets GroupContainerLivenessProbeHttpGetArrayInput `pulumi:"httpGets"`
	// Number of seconds after the container has started before liveness or readiness probes are initiated. Changing this forces a new resource to be created.
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. Changing this forces a new resource to be created.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. Changing this forces a new resource to be created.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// Number of seconds after which the probe times out. Changing this forces a new resource to be created.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (GroupContainerLivenessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerLivenessProbe)(nil)).Elem()
}

func (i GroupContainerLivenessProbeArgs) ToGroupContainerLivenessProbeOutput() GroupContainerLivenessProbeOutput {
	return i.ToGroupContainerLivenessProbeOutputWithContext(context.Background())
}

func (i GroupContainerLivenessProbeArgs) ToGroupContainerLivenessProbeOutputWithContext(ctx context.Context) GroupContainerLivenessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerLivenessProbeOutput)
}

func (i GroupContainerLivenessProbeArgs) ToGroupContainerLivenessProbePtrOutput() GroupContainerLivenessProbePtrOutput {
	return i.ToGroupContainerLivenessProbePtrOutputWithContext(context.Background())
}

func (i GroupContainerLivenessProbeArgs) ToGroupContainerLivenessProbePtrOutputWithContext(ctx context.Context) GroupContainerLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerLivenessProbeOutput).ToGroupContainerLivenessProbePtrOutputWithContext(ctx)
}

// GroupContainerLivenessProbePtrInput is an input type that accepts GroupContainerLivenessProbeArgs, GroupContainerLivenessProbePtr and GroupContainerLivenessProbePtrOutput values.
// You can construct a concrete instance of `GroupContainerLivenessProbePtrInput` via:
//
//	        GroupContainerLivenessProbeArgs{...}
//
//	or:
//
//	        nil
type GroupContainerLivenessProbePtrInput interface {
	pulumi.Input

	ToGroupContainerLivenessProbePtrOutput() GroupContainerLivenessProbePtrOutput
	ToGroupContainerLivenessProbePtrOutputWithContext(context.Context) GroupContainerLivenessProbePtrOutput
}

type groupContainerLivenessProbePtrType GroupContainerLivenessProbeArgs

func GroupContainerLivenessProbePtr(v *GroupContainerLivenessProbeArgs) GroupContainerLivenessProbePtrInput {
	return (*groupContainerLivenessProbePtrType)(v)
}

func (*groupContainerLivenessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupContainerLivenessProbe)(nil)).Elem()
}

func (i *groupContainerLivenessProbePtrType) ToGroupContainerLivenessProbePtrOutput() GroupContainerLivenessProbePtrOutput {
	return i.ToGroupContainerLivenessProbePtrOutputWithContext(context.Background())
}

func (i *groupContainerLivenessProbePtrType) ToGroupContainerLivenessProbePtrOutputWithContext(ctx context.Context) GroupContainerLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerLivenessProbePtrOutput)
}

type GroupContainerLivenessProbeOutput struct{ *pulumi.OutputState }

func (GroupContainerLivenessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerLivenessProbe)(nil)).Elem()
}

func (o GroupContainerLivenessProbeOutput) ToGroupContainerLivenessProbeOutput() GroupContainerLivenessProbeOutput {
	return o
}

func (o GroupContainerLivenessProbeOutput) ToGroupContainerLivenessProbeOutputWithContext(ctx context.Context) GroupContainerLivenessProbeOutput {
	return o
}

func (o GroupContainerLivenessProbeOutput) ToGroupContainerLivenessProbePtrOutput() GroupContainerLivenessProbePtrOutput {
	return o.ToGroupContainerLivenessProbePtrOutputWithContext(context.Background())
}

func (o GroupContainerLivenessProbeOutput) ToGroupContainerLivenessProbePtrOutputWithContext(ctx context.Context) GroupContainerLivenessProbePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupContainerLivenessProbe) *GroupContainerLivenessProbe {
		return &v
	}).(GroupContainerLivenessProbePtrOutput)
}

// Commands to be run to validate container readiness. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbeOutput) Execs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupContainerLivenessProbe) []string { return v.Execs }).(pulumi.StringArrayOutput)
}

// How many times to try the probe before restarting the container (liveness probe) or marking the container as unhealthy (readiness probe). Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbeOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupContainerLivenessProbe) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// The definition of the httpGet for this container as documented in the `httpGet` block below. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbeOutput) HttpGets() GroupContainerLivenessProbeHttpGetArrayOutput {
	return o.ApplyT(func(v GroupContainerLivenessProbe) []GroupContainerLivenessProbeHttpGet { return v.HttpGets }).(GroupContainerLivenessProbeHttpGetArrayOutput)
}

// Number of seconds after the container has started before liveness or readiness probes are initiated. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbeOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupContainerLivenessProbe) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbeOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupContainerLivenessProbe) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbeOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupContainerLivenessProbe) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// Number of seconds after which the probe times out. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbeOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupContainerLivenessProbe) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type GroupContainerLivenessProbePtrOutput struct{ *pulumi.OutputState }

func (GroupContainerLivenessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupContainerLivenessProbe)(nil)).Elem()
}

func (o GroupContainerLivenessProbePtrOutput) ToGroupContainerLivenessProbePtrOutput() GroupContainerLivenessProbePtrOutput {
	return o
}

func (o GroupContainerLivenessProbePtrOutput) ToGroupContainerLivenessProbePtrOutputWithContext(ctx context.Context) GroupContainerLivenessProbePtrOutput {
	return o
}

func (o GroupContainerLivenessProbePtrOutput) Elem() GroupContainerLivenessProbeOutput {
	return o.ApplyT(func(v *GroupContainerLivenessProbe) GroupContainerLivenessProbe {
		if v != nil {
			return *v
		}
		var ret GroupContainerLivenessProbe
		return ret
	}).(GroupContainerLivenessProbeOutput)
}

// Commands to be run to validate container readiness. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbePtrOutput) Execs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupContainerLivenessProbe) []string {
		if v == nil {
			return nil
		}
		return v.Execs
	}).(pulumi.StringArrayOutput)
}

// How many times to try the probe before restarting the container (liveness probe) or marking the container as unhealthy (readiness probe). Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupContainerLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// The definition of the httpGet for this container as documented in the `httpGet` block below. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbePtrOutput) HttpGets() GroupContainerLivenessProbeHttpGetArrayOutput {
	return o.ApplyT(func(v *GroupContainerLivenessProbe) []GroupContainerLivenessProbeHttpGet {
		if v == nil {
			return nil
		}
		return v.HttpGets
	}).(GroupContainerLivenessProbeHttpGetArrayOutput)
}

// Number of seconds after the container has started before liveness or readiness probes are initiated. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupContainerLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupContainerLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupContainerLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds after which the probe times out. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupContainerLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

type GroupContainerLivenessProbeHttpGet struct {
	// A map of HTTP headers used to access on the container. Changing this forces a new resource to be created.
	HttpHeaders map[string]string `pulumi:"httpHeaders"`
	// Path to access on the HTTP server. Changing this forces a new resource to be created.
	Path *string `pulumi:"path"`
	// Number of the port to access on the container. Changing this forces a new resource to be created.
	Port *int `pulumi:"port"`
	// Scheme to use for connecting to the host. Possible values are `Http` and `Https`. Changing this forces a new resource to be created.
	Scheme *string `pulumi:"scheme"`
}

// GroupContainerLivenessProbeHttpGetInput is an input type that accepts GroupContainerLivenessProbeHttpGetArgs and GroupContainerLivenessProbeHttpGetOutput values.
// You can construct a concrete instance of `GroupContainerLivenessProbeHttpGetInput` via:
//
//	GroupContainerLivenessProbeHttpGetArgs{...}
type GroupContainerLivenessProbeHttpGetInput interface {
	pulumi.Input

	ToGroupContainerLivenessProbeHttpGetOutput() GroupContainerLivenessProbeHttpGetOutput
	ToGroupContainerLivenessProbeHttpGetOutputWithContext(context.Context) GroupContainerLivenessProbeHttpGetOutput
}

type GroupContainerLivenessProbeHttpGetArgs struct {
	// A map of HTTP headers used to access on the container. Changing this forces a new resource to be created.
	HttpHeaders pulumi.StringMapInput `pulumi:"httpHeaders"`
	// Path to access on the HTTP server. Changing this forces a new resource to be created.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Number of the port to access on the container. Changing this forces a new resource to be created.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Scheme to use for connecting to the host. Possible values are `Http` and `Https`. Changing this forces a new resource to be created.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
}

func (GroupContainerLivenessProbeHttpGetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerLivenessProbeHttpGet)(nil)).Elem()
}

func (i GroupContainerLivenessProbeHttpGetArgs) ToGroupContainerLivenessProbeHttpGetOutput() GroupContainerLivenessProbeHttpGetOutput {
	return i.ToGroupContainerLivenessProbeHttpGetOutputWithContext(context.Background())
}

func (i GroupContainerLivenessProbeHttpGetArgs) ToGroupContainerLivenessProbeHttpGetOutputWithContext(ctx context.Context) GroupContainerLivenessProbeHttpGetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerLivenessProbeHttpGetOutput)
}

// GroupContainerLivenessProbeHttpGetArrayInput is an input type that accepts GroupContainerLivenessProbeHttpGetArray and GroupContainerLivenessProbeHttpGetArrayOutput values.
// You can construct a concrete instance of `GroupContainerLivenessProbeHttpGetArrayInput` via:
//
//	GroupContainerLivenessProbeHttpGetArray{ GroupContainerLivenessProbeHttpGetArgs{...} }
type GroupContainerLivenessProbeHttpGetArrayInput interface {
	pulumi.Input

	ToGroupContainerLivenessProbeHttpGetArrayOutput() GroupContainerLivenessProbeHttpGetArrayOutput
	ToGroupContainerLivenessProbeHttpGetArrayOutputWithContext(context.Context) GroupContainerLivenessProbeHttpGetArrayOutput
}

type GroupContainerLivenessProbeHttpGetArray []GroupContainerLivenessProbeHttpGetInput

func (GroupContainerLivenessProbeHttpGetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupContainerLivenessProbeHttpGet)(nil)).Elem()
}

func (i GroupContainerLivenessProbeHttpGetArray) ToGroupContainerLivenessProbeHttpGetArrayOutput() GroupContainerLivenessProbeHttpGetArrayOutput {
	return i.ToGroupContainerLivenessProbeHttpGetArrayOutputWithContext(context.Background())
}

func (i GroupContainerLivenessProbeHttpGetArray) ToGroupContainerLivenessProbeHttpGetArrayOutputWithContext(ctx context.Context) GroupContainerLivenessProbeHttpGetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerLivenessProbeHttpGetArrayOutput)
}

type GroupContainerLivenessProbeHttpGetOutput struct{ *pulumi.OutputState }

func (GroupContainerLivenessProbeHttpGetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerLivenessProbeHttpGet)(nil)).Elem()
}

func (o GroupContainerLivenessProbeHttpGetOutput) ToGroupContainerLivenessProbeHttpGetOutput() GroupContainerLivenessProbeHttpGetOutput {
	return o
}

func (o GroupContainerLivenessProbeHttpGetOutput) ToGroupContainerLivenessProbeHttpGetOutputWithContext(ctx context.Context) GroupContainerLivenessProbeHttpGetOutput {
	return o
}

// A map of HTTP headers used to access on the container. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbeHttpGetOutput) HttpHeaders() pulumi.StringMapOutput {
	return o.ApplyT(func(v GroupContainerLivenessProbeHttpGet) map[string]string { return v.HttpHeaders }).(pulumi.StringMapOutput)
}

// Path to access on the HTTP server. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbeHttpGetOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupContainerLivenessProbeHttpGet) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Number of the port to access on the container. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbeHttpGetOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupContainerLivenessProbeHttpGet) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Scheme to use for connecting to the host. Possible values are `Http` and `Https`. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbeHttpGetOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupContainerLivenessProbeHttpGet) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type GroupContainerLivenessProbeHttpGetArrayOutput struct{ *pulumi.OutputState }

func (GroupContainerLivenessProbeHttpGetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupContainerLivenessProbeHttpGet)(nil)).Elem()
}

func (o GroupContainerLivenessProbeHttpGetArrayOutput) ToGroupContainerLivenessProbeHttpGetArrayOutput() GroupContainerLivenessProbeHttpGetArrayOutput {
	return o
}

func (o GroupContainerLivenessProbeHttpGetArrayOutput) ToGroupContainerLivenessProbeHttpGetArrayOutputWithContext(ctx context.Context) GroupContainerLivenessProbeHttpGetArrayOutput {
	return o
}

func (o GroupContainerLivenessProbeHttpGetArrayOutput) Index(i pulumi.IntInput) GroupContainerLivenessProbeHttpGetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupContainerLivenessProbeHttpGet {
		return vs[0].([]GroupContainerLivenessProbeHttpGet)[vs[1].(int)]
	}).(GroupContainerLivenessProbeHttpGetOutput)
}

type GroupContainerPort struct {
	// The port number the container will expose. Changing this forces a new resource to be created.
	Port *int `pulumi:"port"`
	// The network protocol associated with port. Possible values are `TCP` & `UDP`. Changing this forces a new resource to be created. Defaults to `TCP`.
	//
	// > **Note:** Omitting these blocks will default the exposed ports on the group to all ports on all containers defined in the `container` blocks of this group.
	Protocol *string `pulumi:"protocol"`
}

// GroupContainerPortInput is an input type that accepts GroupContainerPortArgs and GroupContainerPortOutput values.
// You can construct a concrete instance of `GroupContainerPortInput` via:
//
//	GroupContainerPortArgs{...}
type GroupContainerPortInput interface {
	pulumi.Input

	ToGroupContainerPortOutput() GroupContainerPortOutput
	ToGroupContainerPortOutputWithContext(context.Context) GroupContainerPortOutput
}

type GroupContainerPortArgs struct {
	// The port number the container will expose. Changing this forces a new resource to be created.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The network protocol associated with port. Possible values are `TCP` & `UDP`. Changing this forces a new resource to be created. Defaults to `TCP`.
	//
	// > **Note:** Omitting these blocks will default the exposed ports on the group to all ports on all containers defined in the `container` blocks of this group.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (GroupContainerPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerPort)(nil)).Elem()
}

func (i GroupContainerPortArgs) ToGroupContainerPortOutput() GroupContainerPortOutput {
	return i.ToGroupContainerPortOutputWithContext(context.Background())
}

func (i GroupContainerPortArgs) ToGroupContainerPortOutputWithContext(ctx context.Context) GroupContainerPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerPortOutput)
}

// GroupContainerPortArrayInput is an input type that accepts GroupContainerPortArray and GroupContainerPortArrayOutput values.
// You can construct a concrete instance of `GroupContainerPortArrayInput` via:
//
//	GroupContainerPortArray{ GroupContainerPortArgs{...} }
type GroupContainerPortArrayInput interface {
	pulumi.Input

	ToGroupContainerPortArrayOutput() GroupContainerPortArrayOutput
	ToGroupContainerPortArrayOutputWithContext(context.Context) GroupContainerPortArrayOutput
}

type GroupContainerPortArray []GroupContainerPortInput

func (GroupContainerPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupContainerPort)(nil)).Elem()
}

func (i GroupContainerPortArray) ToGroupContainerPortArrayOutput() GroupContainerPortArrayOutput {
	return i.ToGroupContainerPortArrayOutputWithContext(context.Background())
}

func (i GroupContainerPortArray) ToGroupContainerPortArrayOutputWithContext(ctx context.Context) GroupContainerPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerPortArrayOutput)
}

type GroupContainerPortOutput struct{ *pulumi.OutputState }

func (GroupContainerPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerPort)(nil)).Elem()
}

func (o GroupContainerPortOutput) ToGroupContainerPortOutput() GroupContainerPortOutput {
	return o
}

func (o GroupContainerPortOutput) ToGroupContainerPortOutputWithContext(ctx context.Context) GroupContainerPortOutput {
	return o
}

// The port number the container will expose. Changing this forces a new resource to be created.
func (o GroupContainerPortOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupContainerPort) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The network protocol associated with port. Possible values are `TCP` & `UDP`. Changing this forces a new resource to be created. Defaults to `TCP`.
//
// > **Note:** Omitting these blocks will default the exposed ports on the group to all ports on all containers defined in the `container` blocks of this group.
func (o GroupContainerPortOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupContainerPort) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type GroupContainerPortArrayOutput struct{ *pulumi.OutputState }

func (GroupContainerPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupContainerPort)(nil)).Elem()
}

func (o GroupContainerPortArrayOutput) ToGroupContainerPortArrayOutput() GroupContainerPortArrayOutput {
	return o
}

func (o GroupContainerPortArrayOutput) ToGroupContainerPortArrayOutputWithContext(ctx context.Context) GroupContainerPortArrayOutput {
	return o
}

func (o GroupContainerPortArrayOutput) Index(i pulumi.IntInput) GroupContainerPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupContainerPort {
		return vs[0].([]GroupContainerPort)[vs[1].(int)]
	}).(GroupContainerPortOutput)
}

type GroupContainerReadinessProbe struct {
	// Commands to be run to validate container readiness. Changing this forces a new resource to be created.
	Execs []string `pulumi:"execs"`
	// How many times to try the probe before restarting the container (liveness probe) or marking the container as unhealthy (readiness probe). Changing this forces a new resource to be created.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// The definition of the httpGet for this container as documented in the `httpGet` block below. Changing this forces a new resource to be created.
	HttpGets []GroupContainerReadinessProbeHttpGet `pulumi:"httpGets"`
	// Number of seconds after the container has started before liveness or readiness probes are initiated. Changing this forces a new resource to be created.
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. Changing this forces a new resource to be created.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. Changing this forces a new resource to be created.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// Number of seconds after which the probe times out. Changing this forces a new resource to be created.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// GroupContainerReadinessProbeInput is an input type that accepts GroupContainerReadinessProbeArgs and GroupContainerReadinessProbeOutput values.
// You can construct a concrete instance of `GroupContainerReadinessProbeInput` via:
//
//	GroupContainerReadinessProbeArgs{...}
type GroupContainerReadinessProbeInput interface {
	pulumi.Input

	ToGroupContainerReadinessProbeOutput() GroupContainerReadinessProbeOutput
	ToGroupContainerReadinessProbeOutputWithContext(context.Context) GroupContainerReadinessProbeOutput
}

type GroupContainerReadinessProbeArgs struct {
	// Commands to be run to validate container readiness. Changing this forces a new resource to be created.
	Execs pulumi.StringArrayInput `pulumi:"execs"`
	// How many times to try the probe before restarting the container (liveness probe) or marking the container as unhealthy (readiness probe). Changing this forces a new resource to be created.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// The definition of the httpGet for this container as documented in the `httpGet` block below. Changing this forces a new resource to be created.
	HttpGets GroupContainerReadinessProbeHttpGetArrayInput `pulumi:"httpGets"`
	// Number of seconds after the container has started before liveness or readiness probes are initiated. Changing this forces a new resource to be created.
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. Changing this forces a new resource to be created.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. Changing this forces a new resource to be created.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// Number of seconds after which the probe times out. Changing this forces a new resource to be created.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (GroupContainerReadinessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerReadinessProbe)(nil)).Elem()
}

func (i GroupContainerReadinessProbeArgs) ToGroupContainerReadinessProbeOutput() GroupContainerReadinessProbeOutput {
	return i.ToGroupContainerReadinessProbeOutputWithContext(context.Background())
}

func (i GroupContainerReadinessProbeArgs) ToGroupContainerReadinessProbeOutputWithContext(ctx context.Context) GroupContainerReadinessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerReadinessProbeOutput)
}

func (i GroupContainerReadinessProbeArgs) ToGroupContainerReadinessProbePtrOutput() GroupContainerReadinessProbePtrOutput {
	return i.ToGroupContainerReadinessProbePtrOutputWithContext(context.Background())
}

func (i GroupContainerReadinessProbeArgs) ToGroupContainerReadinessProbePtrOutputWithContext(ctx context.Context) GroupContainerReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerReadinessProbeOutput).ToGroupContainerReadinessProbePtrOutputWithContext(ctx)
}

// GroupContainerReadinessProbePtrInput is an input type that accepts GroupContainerReadinessProbeArgs, GroupContainerReadinessProbePtr and GroupContainerReadinessProbePtrOutput values.
// You can construct a concrete instance of `GroupContainerReadinessProbePtrInput` via:
//
//	        GroupContainerReadinessProbeArgs{...}
//
//	or:
//
//	        nil
type GroupContainerReadinessProbePtrInput interface {
	pulumi.Input

	ToGroupContainerReadinessProbePtrOutput() GroupContainerReadinessProbePtrOutput
	ToGroupContainerReadinessProbePtrOutputWithContext(context.Context) GroupContainerReadinessProbePtrOutput
}

type groupContainerReadinessProbePtrType GroupContainerReadinessProbeArgs

func GroupContainerReadinessProbePtr(v *GroupContainerReadinessProbeArgs) GroupContainerReadinessProbePtrInput {
	return (*groupContainerReadinessProbePtrType)(v)
}

func (*groupContainerReadinessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupContainerReadinessProbe)(nil)).Elem()
}

func (i *groupContainerReadinessProbePtrType) ToGroupContainerReadinessProbePtrOutput() GroupContainerReadinessProbePtrOutput {
	return i.ToGroupContainerReadinessProbePtrOutputWithContext(context.Background())
}

func (i *groupContainerReadinessProbePtrType) ToGroupContainerReadinessProbePtrOutputWithContext(ctx context.Context) GroupContainerReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerReadinessProbePtrOutput)
}

type GroupContainerReadinessProbeOutput struct{ *pulumi.OutputState }

func (GroupContainerReadinessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerReadinessProbe)(nil)).Elem()
}

func (o GroupContainerReadinessProbeOutput) ToGroupContainerReadinessProbeOutput() GroupContainerReadinessProbeOutput {
	return o
}

func (o GroupContainerReadinessProbeOutput) ToGroupContainerReadinessProbeOutputWithContext(ctx context.Context) GroupContainerReadinessProbeOutput {
	return o
}

func (o GroupContainerReadinessProbeOutput) ToGroupContainerReadinessProbePtrOutput() GroupContainerReadinessProbePtrOutput {
	return o.ToGroupContainerReadinessProbePtrOutputWithContext(context.Background())
}

func (o GroupContainerReadinessProbeOutput) ToGroupContainerReadinessProbePtrOutputWithContext(ctx context.Context) GroupContainerReadinessProbePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupContainerReadinessProbe) *GroupContainerReadinessProbe {
		return &v
	}).(GroupContainerReadinessProbePtrOutput)
}

// Commands to be run to validate container readiness. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbeOutput) Execs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupContainerReadinessProbe) []string { return v.Execs }).(pulumi.StringArrayOutput)
}

// How many times to try the probe before restarting the container (liveness probe) or marking the container as unhealthy (readiness probe). Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbeOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupContainerReadinessProbe) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// The definition of the httpGet for this container as documented in the `httpGet` block below. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbeOutput) HttpGets() GroupContainerReadinessProbeHttpGetArrayOutput {
	return o.ApplyT(func(v GroupContainerReadinessProbe) []GroupContainerReadinessProbeHttpGet { return v.HttpGets }).(GroupContainerReadinessProbeHttpGetArrayOutput)
}

// Number of seconds after the container has started before liveness or readiness probes are initiated. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbeOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupContainerReadinessProbe) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbeOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupContainerReadinessProbe) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbeOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupContainerReadinessProbe) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// Number of seconds after which the probe times out. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbeOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupContainerReadinessProbe) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type GroupContainerReadinessProbePtrOutput struct{ *pulumi.OutputState }

func (GroupContainerReadinessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupContainerReadinessProbe)(nil)).Elem()
}

func (o GroupContainerReadinessProbePtrOutput) ToGroupContainerReadinessProbePtrOutput() GroupContainerReadinessProbePtrOutput {
	return o
}

func (o GroupContainerReadinessProbePtrOutput) ToGroupContainerReadinessProbePtrOutputWithContext(ctx context.Context) GroupContainerReadinessProbePtrOutput {
	return o
}

func (o GroupContainerReadinessProbePtrOutput) Elem() GroupContainerReadinessProbeOutput {
	return o.ApplyT(func(v *GroupContainerReadinessProbe) GroupContainerReadinessProbe {
		if v != nil {
			return *v
		}
		var ret GroupContainerReadinessProbe
		return ret
	}).(GroupContainerReadinessProbeOutput)
}

// Commands to be run to validate container readiness. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbePtrOutput) Execs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupContainerReadinessProbe) []string {
		if v == nil {
			return nil
		}
		return v.Execs
	}).(pulumi.StringArrayOutput)
}

// How many times to try the probe before restarting the container (liveness probe) or marking the container as unhealthy (readiness probe). Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupContainerReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// The definition of the httpGet for this container as documented in the `httpGet` block below. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbePtrOutput) HttpGets() GroupContainerReadinessProbeHttpGetArrayOutput {
	return o.ApplyT(func(v *GroupContainerReadinessProbe) []GroupContainerReadinessProbeHttpGet {
		if v == nil {
			return nil
		}
		return v.HttpGets
	}).(GroupContainerReadinessProbeHttpGetArrayOutput)
}

// Number of seconds after the container has started before liveness or readiness probes are initiated. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupContainerReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupContainerReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupContainerReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds after which the probe times out. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupContainerReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

type GroupContainerReadinessProbeHttpGet struct {
	// A map of HTTP headers used to access on the container. Changing this forces a new resource to be created.
	HttpHeaders map[string]string `pulumi:"httpHeaders"`
	// Path to access on the HTTP server. Changing this forces a new resource to be created.
	Path *string `pulumi:"path"`
	// Number of the port to access on the container. Changing this forces a new resource to be created.
	Port *int `pulumi:"port"`
	// Scheme to use for connecting to the host. Possible values are `Http` and `Https`. Changing this forces a new resource to be created.
	Scheme *string `pulumi:"scheme"`
}

// GroupContainerReadinessProbeHttpGetInput is an input type that accepts GroupContainerReadinessProbeHttpGetArgs and GroupContainerReadinessProbeHttpGetOutput values.
// You can construct a concrete instance of `GroupContainerReadinessProbeHttpGetInput` via:
//
//	GroupContainerReadinessProbeHttpGetArgs{...}
type GroupContainerReadinessProbeHttpGetInput interface {
	pulumi.Input

	ToGroupContainerReadinessProbeHttpGetOutput() GroupContainerReadinessProbeHttpGetOutput
	ToGroupContainerReadinessProbeHttpGetOutputWithContext(context.Context) GroupContainerReadinessProbeHttpGetOutput
}

type GroupContainerReadinessProbeHttpGetArgs struct {
	// A map of HTTP headers used to access on the container. Changing this forces a new resource to be created.
	HttpHeaders pulumi.StringMapInput `pulumi:"httpHeaders"`
	// Path to access on the HTTP server. Changing this forces a new resource to be created.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Number of the port to access on the container. Changing this forces a new resource to be created.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Scheme to use for connecting to the host. Possible values are `Http` and `Https`. Changing this forces a new resource to be created.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
}

func (GroupContainerReadinessProbeHttpGetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerReadinessProbeHttpGet)(nil)).Elem()
}

func (i GroupContainerReadinessProbeHttpGetArgs) ToGroupContainerReadinessProbeHttpGetOutput() GroupContainerReadinessProbeHttpGetOutput {
	return i.ToGroupContainerReadinessProbeHttpGetOutputWithContext(context.Background())
}

func (i GroupContainerReadinessProbeHttpGetArgs) ToGroupContainerReadinessProbeHttpGetOutputWithContext(ctx context.Context) GroupContainerReadinessProbeHttpGetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerReadinessProbeHttpGetOutput)
}

// GroupContainerReadinessProbeHttpGetArrayInput is an input type that accepts GroupContainerReadinessProbeHttpGetArray and GroupContainerReadinessProbeHttpGetArrayOutput values.
// You can construct a concrete instance of `GroupContainerReadinessProbeHttpGetArrayInput` via:
//
//	GroupContainerReadinessProbeHttpGetArray{ GroupContainerReadinessProbeHttpGetArgs{...} }
type GroupContainerReadinessProbeHttpGetArrayInput interface {
	pulumi.Input

	ToGroupContainerReadinessProbeHttpGetArrayOutput() GroupContainerReadinessProbeHttpGetArrayOutput
	ToGroupContainerReadinessProbeHttpGetArrayOutputWithContext(context.Context) GroupContainerReadinessProbeHttpGetArrayOutput
}

type GroupContainerReadinessProbeHttpGetArray []GroupContainerReadinessProbeHttpGetInput

func (GroupContainerReadinessProbeHttpGetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupContainerReadinessProbeHttpGet)(nil)).Elem()
}

func (i GroupContainerReadinessProbeHttpGetArray) ToGroupContainerReadinessProbeHttpGetArrayOutput() GroupContainerReadinessProbeHttpGetArrayOutput {
	return i.ToGroupContainerReadinessProbeHttpGetArrayOutputWithContext(context.Background())
}

func (i GroupContainerReadinessProbeHttpGetArray) ToGroupContainerReadinessProbeHttpGetArrayOutputWithContext(ctx context.Context) GroupContainerReadinessProbeHttpGetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerReadinessProbeHttpGetArrayOutput)
}

type GroupContainerReadinessProbeHttpGetOutput struct{ *pulumi.OutputState }

func (GroupContainerReadinessProbeHttpGetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerReadinessProbeHttpGet)(nil)).Elem()
}

func (o GroupContainerReadinessProbeHttpGetOutput) ToGroupContainerReadinessProbeHttpGetOutput() GroupContainerReadinessProbeHttpGetOutput {
	return o
}

func (o GroupContainerReadinessProbeHttpGetOutput) ToGroupContainerReadinessProbeHttpGetOutputWithContext(ctx context.Context) GroupContainerReadinessProbeHttpGetOutput {
	return o
}

// A map of HTTP headers used to access on the container. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbeHttpGetOutput) HttpHeaders() pulumi.StringMapOutput {
	return o.ApplyT(func(v GroupContainerReadinessProbeHttpGet) map[string]string { return v.HttpHeaders }).(pulumi.StringMapOutput)
}

// Path to access on the HTTP server. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbeHttpGetOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupContainerReadinessProbeHttpGet) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Number of the port to access on the container. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbeHttpGetOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupContainerReadinessProbeHttpGet) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Scheme to use for connecting to the host. Possible values are `Http` and `Https`. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbeHttpGetOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupContainerReadinessProbeHttpGet) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type GroupContainerReadinessProbeHttpGetArrayOutput struct{ *pulumi.OutputState }

func (GroupContainerReadinessProbeHttpGetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupContainerReadinessProbeHttpGet)(nil)).Elem()
}

func (o GroupContainerReadinessProbeHttpGetArrayOutput) ToGroupContainerReadinessProbeHttpGetArrayOutput() GroupContainerReadinessProbeHttpGetArrayOutput {
	return o
}

func (o GroupContainerReadinessProbeHttpGetArrayOutput) ToGroupContainerReadinessProbeHttpGetArrayOutputWithContext(ctx context.Context) GroupContainerReadinessProbeHttpGetArrayOutput {
	return o
}

func (o GroupContainerReadinessProbeHttpGetArrayOutput) Index(i pulumi.IntInput) GroupContainerReadinessProbeHttpGetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupContainerReadinessProbeHttpGet {
		return vs[0].([]GroupContainerReadinessProbeHttpGet)[vs[1].(int)]
	}).(GroupContainerReadinessProbeHttpGetOutput)
}

type GroupContainerSecurity struct {
	// Whether the container's permission is elevated to privileged? Changing this forces a new resource to be created.
	//
	// > **NOTE:** Currently, this only applies when the `osType` is `Linux` and the `sku` is `Confidential`.
	PrivilegeEnabled bool `pulumi:"privilegeEnabled"`
}

// GroupContainerSecurityInput is an input type that accepts GroupContainerSecurityArgs and GroupContainerSecurityOutput values.
// You can construct a concrete instance of `GroupContainerSecurityInput` via:
//
//	GroupContainerSecurityArgs{...}
type GroupContainerSecurityInput interface {
	pulumi.Input

	ToGroupContainerSecurityOutput() GroupContainerSecurityOutput
	ToGroupContainerSecurityOutputWithContext(context.Context) GroupContainerSecurityOutput
}

type GroupContainerSecurityArgs struct {
	// Whether the container's permission is elevated to privileged? Changing this forces a new resource to be created.
	//
	// > **NOTE:** Currently, this only applies when the `osType` is `Linux` and the `sku` is `Confidential`.
	PrivilegeEnabled pulumi.BoolInput `pulumi:"privilegeEnabled"`
}

func (GroupContainerSecurityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerSecurity)(nil)).Elem()
}

func (i GroupContainerSecurityArgs) ToGroupContainerSecurityOutput() GroupContainerSecurityOutput {
	return i.ToGroupContainerSecurityOutputWithContext(context.Background())
}

func (i GroupContainerSecurityArgs) ToGroupContainerSecurityOutputWithContext(ctx context.Context) GroupContainerSecurityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerSecurityOutput)
}

// GroupContainerSecurityArrayInput is an input type that accepts GroupContainerSecurityArray and GroupContainerSecurityArrayOutput values.
// You can construct a concrete instance of `GroupContainerSecurityArrayInput` via:
//
//	GroupContainerSecurityArray{ GroupContainerSecurityArgs{...} }
type GroupContainerSecurityArrayInput interface {
	pulumi.Input

	ToGroupContainerSecurityArrayOutput() GroupContainerSecurityArrayOutput
	ToGroupContainerSecurityArrayOutputWithContext(context.Context) GroupContainerSecurityArrayOutput
}

type GroupContainerSecurityArray []GroupContainerSecurityInput

func (GroupContainerSecurityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupContainerSecurity)(nil)).Elem()
}

func (i GroupContainerSecurityArray) ToGroupContainerSecurityArrayOutput() GroupContainerSecurityArrayOutput {
	return i.ToGroupContainerSecurityArrayOutputWithContext(context.Background())
}

func (i GroupContainerSecurityArray) ToGroupContainerSecurityArrayOutputWithContext(ctx context.Context) GroupContainerSecurityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerSecurityArrayOutput)
}

type GroupContainerSecurityOutput struct{ *pulumi.OutputState }

func (GroupContainerSecurityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerSecurity)(nil)).Elem()
}

func (o GroupContainerSecurityOutput) ToGroupContainerSecurityOutput() GroupContainerSecurityOutput {
	return o
}

func (o GroupContainerSecurityOutput) ToGroupContainerSecurityOutputWithContext(ctx context.Context) GroupContainerSecurityOutput {
	return o
}

// Whether the container's permission is elevated to privileged? Changing this forces a new resource to be created.
//
// > **NOTE:** Currently, this only applies when the `osType` is `Linux` and the `sku` is `Confidential`.
func (o GroupContainerSecurityOutput) PrivilegeEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GroupContainerSecurity) bool { return v.PrivilegeEnabled }).(pulumi.BoolOutput)
}

type GroupContainerSecurityArrayOutput struct{ *pulumi.OutputState }

func (GroupContainerSecurityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupContainerSecurity)(nil)).Elem()
}

func (o GroupContainerSecurityArrayOutput) ToGroupContainerSecurityArrayOutput() GroupContainerSecurityArrayOutput {
	return o
}

func (o GroupContainerSecurityArrayOutput) ToGroupContainerSecurityArrayOutputWithContext(ctx context.Context) GroupContainerSecurityArrayOutput {
	return o
}

func (o GroupContainerSecurityArrayOutput) Index(i pulumi.IntInput) GroupContainerSecurityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupContainerSecurity {
		return vs[0].([]GroupContainerSecurity)[vs[1].(int)]
	}).(GroupContainerSecurityOutput)
}

type GroupContainerVolume struct {
	// Boolean as to whether the mounted volume should be an empty directory. Defaults to `false`. Changing this forces a new resource to be created.
	EmptyDir *bool `pulumi:"emptyDir"`
	// A `gitRepo` block as defined below. Changing this forces a new resource to be created.
	GitRepo *GroupContainerVolumeGitRepo `pulumi:"gitRepo"`
	// The path on which this volume is to be mounted. Changing this forces a new resource to be created.
	MountPath string `pulumi:"mountPath"`
	// The name of the volume mount. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
	// Specify if the volume is to be mounted as read only or not. The default value is `false`. Changing this forces a new resource to be created.
	ReadOnly *bool `pulumi:"readOnly"`
	// A map of secrets that will be mounted as files in the volume. Changing this forces a new resource to be created.
	//
	// > **Note:** Exactly one of `emptyDir` volume, `gitRepo` volume, `secret` volume or storage account volume (`shareName`, `storageAccountName`, and `storageAccountKey`) must be specified.
	//
	// > **Note** when using a storage account volume, all of `shareName`, `storageAccountName`, and `storageAccountKey` must be specified.
	//
	// > **Note:** The secret values must be supplied as Base64 encoded strings. The secret values are decoded to their original values when mounted in the volume on the container.
	Secret map[string]string `pulumi:"secret"`
	// The Azure storage share that is to be mounted as a volume. This must be created on the storage account specified as above. Changing this forces a new resource to be created.
	ShareName *string `pulumi:"shareName"`
	// The access key for the Azure Storage account specified as above. Changing this forces a new resource to be created.
	StorageAccountKey *string `pulumi:"storageAccountKey"`
	// The Azure storage account from which the volume is to be mounted. Changing this forces a new resource to be created.
	StorageAccountName *string `pulumi:"storageAccountName"`
}

// GroupContainerVolumeInput is an input type that accepts GroupContainerVolumeArgs and GroupContainerVolumeOutput values.
// You can construct a concrete instance of `GroupContainerVolumeInput` via:
//
//	GroupContainerVolumeArgs{...}
type GroupContainerVolumeInput interface {
	pulumi.Input

	ToGroupContainerVolumeOutput() GroupContainerVolumeOutput
	ToGroupContainerVolumeOutputWithContext(context.Context) GroupContainerVolumeOutput
}

type GroupContainerVolumeArgs struct {
	// Boolean as to whether the mounted volume should be an empty directory. Defaults to `false`. Changing this forces a new resource to be created.
	EmptyDir pulumi.BoolPtrInput `pulumi:"emptyDir"`
	// A `gitRepo` block as defined below. Changing this forces a new resource to be created.
	GitRepo GroupContainerVolumeGitRepoPtrInput `pulumi:"gitRepo"`
	// The path on which this volume is to be mounted. Changing this forces a new resource to be created.
	MountPath pulumi.StringInput `pulumi:"mountPath"`
	// The name of the volume mount. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// Specify if the volume is to be mounted as read only or not. The default value is `false`. Changing this forces a new resource to be created.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// A map of secrets that will be mounted as files in the volume. Changing this forces a new resource to be created.
	//
	// > **Note:** Exactly one of `emptyDir` volume, `gitRepo` volume, `secret` volume or storage account volume (`shareName`, `storageAccountName`, and `storageAccountKey`) must be specified.
	//
	// > **Note** when using a storage account volume, all of `shareName`, `storageAccountName`, and `storageAccountKey` must be specified.
	//
	// > **Note:** The secret values must be supplied as Base64 encoded strings. The secret values are decoded to their original values when mounted in the volume on the container.
	Secret pulumi.StringMapInput `pulumi:"secret"`
	// The Azure storage share that is to be mounted as a volume. This must be created on the storage account specified as above. Changing this forces a new resource to be created.
	ShareName pulumi.StringPtrInput `pulumi:"shareName"`
	// The access key for the Azure Storage account specified as above. Changing this forces a new resource to be created.
	StorageAccountKey pulumi.StringPtrInput `pulumi:"storageAccountKey"`
	// The Azure storage account from which the volume is to be mounted. Changing this forces a new resource to be created.
	StorageAccountName pulumi.StringPtrInput `pulumi:"storageAccountName"`
}

func (GroupContainerVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerVolume)(nil)).Elem()
}

func (i GroupContainerVolumeArgs) ToGroupContainerVolumeOutput() GroupContainerVolumeOutput {
	return i.ToGroupContainerVolumeOutputWithContext(context.Background())
}

func (i GroupContainerVolumeArgs) ToGroupContainerVolumeOutputWithContext(ctx context.Context) GroupContainerVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerVolumeOutput)
}

// GroupContainerVolumeArrayInput is an input type that accepts GroupContainerVolumeArray and GroupContainerVolumeArrayOutput values.
// You can construct a concrete instance of `GroupContainerVolumeArrayInput` via:
//
//	GroupContainerVolumeArray{ GroupContainerVolumeArgs{...} }
type GroupContainerVolumeArrayInput interface {
	pulumi.Input

	ToGroupContainerVolumeArrayOutput() GroupContainerVolumeArrayOutput
	ToGroupContainerVolumeArrayOutputWithContext(context.Context) GroupContainerVolumeArrayOutput
}

type GroupContainerVolumeArray []GroupContainerVolumeInput

func (GroupContainerVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupContainerVolume)(nil)).Elem()
}

func (i GroupContainerVolumeArray) ToGroupContainerVolumeArrayOutput() GroupContainerVolumeArrayOutput {
	return i.ToGroupContainerVolumeArrayOutputWithContext(context.Background())
}

func (i GroupContainerVolumeArray) ToGroupContainerVolumeArrayOutputWithContext(ctx context.Context) GroupContainerVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerVolumeArrayOutput)
}

type GroupContainerVolumeOutput struct{ *pulumi.OutputState }

func (GroupContainerVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerVolume)(nil)).Elem()
}

func (o GroupContainerVolumeOutput) ToGroupContainerVolumeOutput() GroupContainerVolumeOutput {
	return o
}

func (o GroupContainerVolumeOutput) ToGroupContainerVolumeOutputWithContext(ctx context.Context) GroupContainerVolumeOutput {
	return o
}

// Boolean as to whether the mounted volume should be an empty directory. Defaults to `false`. Changing this forces a new resource to be created.
func (o GroupContainerVolumeOutput) EmptyDir() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GroupContainerVolume) *bool { return v.EmptyDir }).(pulumi.BoolPtrOutput)
}

// A `gitRepo` block as defined below. Changing this forces a new resource to be created.
func (o GroupContainerVolumeOutput) GitRepo() GroupContainerVolumeGitRepoPtrOutput {
	return o.ApplyT(func(v GroupContainerVolume) *GroupContainerVolumeGitRepo { return v.GitRepo }).(GroupContainerVolumeGitRepoPtrOutput)
}

// The path on which this volume is to be mounted. Changing this forces a new resource to be created.
func (o GroupContainerVolumeOutput) MountPath() pulumi.StringOutput {
	return o.ApplyT(func(v GroupContainerVolume) string { return v.MountPath }).(pulumi.StringOutput)
}

// The name of the volume mount. Changing this forces a new resource to be created.
func (o GroupContainerVolumeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GroupContainerVolume) string { return v.Name }).(pulumi.StringOutput)
}

// Specify if the volume is to be mounted as read only or not. The default value is `false`. Changing this forces a new resource to be created.
func (o GroupContainerVolumeOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GroupContainerVolume) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// A map of secrets that will be mounted as files in the volume. Changing this forces a new resource to be created.
//
// > **Note:** Exactly one of `emptyDir` volume, `gitRepo` volume, `secret` volume or storage account volume (`shareName`, `storageAccountName`, and `storageAccountKey`) must be specified.
//
// > **Note** when using a storage account volume, all of `shareName`, `storageAccountName`, and `storageAccountKey` must be specified.
//
// > **Note:** The secret values must be supplied as Base64 encoded strings. The secret values are decoded to their original values when mounted in the volume on the container.
func (o GroupContainerVolumeOutput) Secret() pulumi.StringMapOutput {
	return o.ApplyT(func(v GroupContainerVolume) map[string]string { return v.Secret }).(pulumi.StringMapOutput)
}

// The Azure storage share that is to be mounted as a volume. This must be created on the storage account specified as above. Changing this forces a new resource to be created.
func (o GroupContainerVolumeOutput) ShareName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupContainerVolume) *string { return v.ShareName }).(pulumi.StringPtrOutput)
}

// The access key for the Azure Storage account specified as above. Changing this forces a new resource to be created.
func (o GroupContainerVolumeOutput) StorageAccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupContainerVolume) *string { return v.StorageAccountKey }).(pulumi.StringPtrOutput)
}

// The Azure storage account from which the volume is to be mounted. Changing this forces a new resource to be created.
func (o GroupContainerVolumeOutput) StorageAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupContainerVolume) *string { return v.StorageAccountName }).(pulumi.StringPtrOutput)
}

type GroupContainerVolumeArrayOutput struct{ *pulumi.OutputState }

func (GroupContainerVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupContainerVolume)(nil)).Elem()
}

func (o GroupContainerVolumeArrayOutput) ToGroupContainerVolumeArrayOutput() GroupContainerVolumeArrayOutput {
	return o
}

func (o GroupContainerVolumeArrayOutput) ToGroupContainerVolumeArrayOutputWithContext(ctx context.Context) GroupContainerVolumeArrayOutput {
	return o
}

func (o GroupContainerVolumeArrayOutput) Index(i pulumi.IntInput) GroupContainerVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupContainerVolume {
		return vs[0].([]GroupContainerVolume)[vs[1].(int)]
	}).(GroupContainerVolumeOutput)
}

type GroupContainerVolumeGitRepo struct {
	// Specifies the directory into which the repository should be cloned. Changing this forces a new resource to be created.
	Directory *string `pulumi:"directory"`
	// Specifies the commit hash of the revision to be cloned. If unspecified, the HEAD revision is cloned. Changing this forces a new resource to be created.
	Revision *string `pulumi:"revision"`
	// Specifies the Git repository to be cloned. Changing this forces a new resource to be created.
	Url string `pulumi:"url"`
}

// GroupContainerVolumeGitRepoInput is an input type that accepts GroupContainerVolumeGitRepoArgs and GroupContainerVolumeGitRepoOutput values.
// You can construct a concrete instance of `GroupContainerVolumeGitRepoInput` via:
//
//	GroupContainerVolumeGitRepoArgs{...}
type GroupContainerVolumeGitRepoInput interface {
	pulumi.Input

	ToGroupContainerVolumeGitRepoOutput() GroupContainerVolumeGitRepoOutput
	ToGroupContainerVolumeGitRepoOutputWithContext(context.Context) GroupContainerVolumeGitRepoOutput
}

type GroupContainerVolumeGitRepoArgs struct {
	// Specifies the directory into which the repository should be cloned. Changing this forces a new resource to be created.
	Directory pulumi.StringPtrInput `pulumi:"directory"`
	// Specifies the commit hash of the revision to be cloned. If unspecified, the HEAD revision is cloned. Changing this forces a new resource to be created.
	Revision pulumi.StringPtrInput `pulumi:"revision"`
	// Specifies the Git repository to be cloned. Changing this forces a new resource to be created.
	Url pulumi.StringInput `pulumi:"url"`
}

func (GroupContainerVolumeGitRepoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerVolumeGitRepo)(nil)).Elem()
}

func (i GroupContainerVolumeGitRepoArgs) ToGroupContainerVolumeGitRepoOutput() GroupContainerVolumeGitRepoOutput {
	return i.ToGroupContainerVolumeGitRepoOutputWithContext(context.Background())
}

func (i GroupContainerVolumeGitRepoArgs) ToGroupContainerVolumeGitRepoOutputWithContext(ctx context.Context) GroupContainerVolumeGitRepoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerVolumeGitRepoOutput)
}

func (i GroupContainerVolumeGitRepoArgs) ToGroupContainerVolumeGitRepoPtrOutput() GroupContainerVolumeGitRepoPtrOutput {
	return i.ToGroupContainerVolumeGitRepoPtrOutputWithContext(context.Background())
}

func (i GroupContainerVolumeGitRepoArgs) ToGroupContainerVolumeGitRepoPtrOutputWithContext(ctx context.Context) GroupContainerVolumeGitRepoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerVolumeGitRepoOutput).ToGroupContainerVolumeGitRepoPtrOutputWithContext(ctx)
}

// GroupContainerVolumeGitRepoPtrInput is an input type that accepts GroupContainerVolumeGitRepoArgs, GroupContainerVolumeGitRepoPtr and GroupContainerVolumeGitRepoPtrOutput values.
// You can construct a concrete instance of `GroupContainerVolumeGitRepoPtrInput` via:
//
//	        GroupContainerVolumeGitRepoArgs{...}
//
//	or:
//
//	        nil
type GroupContainerVolumeGitRepoPtrInput interface {
	pulumi.Input

	ToGroupContainerVolumeGitRepoPtrOutput() GroupContainerVolumeGitRepoPtrOutput
	ToGroupContainerVolumeGitRepoPtrOutputWithContext(context.Context) GroupContainerVolumeGitRepoPtrOutput
}

type groupContainerVolumeGitRepoPtrType GroupContainerVolumeGitRepoArgs

func GroupContainerVolumeGitRepoPtr(v *GroupContainerVolumeGitRepoArgs) GroupContainerVolumeGitRepoPtrInput {
	return (*groupContainerVolumeGitRepoPtrType)(v)
}

func (*groupContainerVolumeGitRepoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupContainerVolumeGitRepo)(nil)).Elem()
}

func (i *groupContainerVolumeGitRepoPtrType) ToGroupContainerVolumeGitRepoPtrOutput() GroupContainerVolumeGitRepoPtrOutput {
	return i.ToGroupContainerVolumeGitRepoPtrOutputWithContext(context.Background())
}

func (i *groupContainerVolumeGitRepoPtrType) ToGroupContainerVolumeGitRepoPtrOutputWithContext(ctx context.Context) GroupContainerVolumeGitRepoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerVolumeGitRepoPtrOutput)
}

type GroupContainerVolumeGitRepoOutput struct{ *pulumi.OutputState }

func (GroupContainerVolumeGitRepoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerVolumeGitRepo)(nil)).Elem()
}

func (o GroupContainerVolumeGitRepoOutput) ToGroupContainerVolumeGitRepoOutput() GroupContainerVolumeGitRepoOutput {
	return o
}

func (o GroupContainerVolumeGitRepoOutput) ToGroupContainerVolumeGitRepoOutputWithContext(ctx context.Context) GroupContainerVolumeGitRepoOutput {
	return o
}

func (o GroupContainerVolumeGitRepoOutput) ToGroupContainerVolumeGitRepoPtrOutput() GroupContainerVolumeGitRepoPtrOutput {
	return o.ToGroupContainerVolumeGitRepoPtrOutputWithContext(context.Background())
}

func (o GroupContainerVolumeGitRepoOutput) ToGroupContainerVolumeGitRepoPtrOutputWithContext(ctx context.Context) GroupContainerVolumeGitRepoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupContainerVolumeGitRepo) *GroupContainerVolumeGitRepo {
		return &v
	}).(GroupContainerVolumeGitRepoPtrOutput)
}

// Specifies the directory into which the repository should be cloned. Changing this forces a new resource to be created.
func (o GroupContainerVolumeGitRepoOutput) Directory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupContainerVolumeGitRepo) *string { return v.Directory }).(pulumi.StringPtrOutput)
}

// Specifies the commit hash of the revision to be cloned. If unspecified, the HEAD revision is cloned. Changing this forces a new resource to be created.
func (o GroupContainerVolumeGitRepoOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupContainerVolumeGitRepo) *string { return v.Revision }).(pulumi.StringPtrOutput)
}

// Specifies the Git repository to be cloned. Changing this forces a new resource to be created.
func (o GroupContainerVolumeGitRepoOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GroupContainerVolumeGitRepo) string { return v.Url }).(pulumi.StringOutput)
}

type GroupContainerVolumeGitRepoPtrOutput struct{ *pulumi.OutputState }

func (GroupContainerVolumeGitRepoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupContainerVolumeGitRepo)(nil)).Elem()
}

func (o GroupContainerVolumeGitRepoPtrOutput) ToGroupContainerVolumeGitRepoPtrOutput() GroupContainerVolumeGitRepoPtrOutput {
	return o
}

func (o GroupContainerVolumeGitRepoPtrOutput) ToGroupContainerVolumeGitRepoPtrOutputWithContext(ctx context.Context) GroupContainerVolumeGitRepoPtrOutput {
	return o
}

func (o GroupContainerVolumeGitRepoPtrOutput) Elem() GroupContainerVolumeGitRepoOutput {
	return o.ApplyT(func(v *GroupContainerVolumeGitRepo) GroupContainerVolumeGitRepo {
		if v != nil {
			return *v
		}
		var ret GroupContainerVolumeGitRepo
		return ret
	}).(GroupContainerVolumeGitRepoOutput)
}

// Specifies the directory into which the repository should be cloned. Changing this forces a new resource to be created.
func (o GroupContainerVolumeGitRepoPtrOutput) Directory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupContainerVolumeGitRepo) *string {
		if v == nil {
			return nil
		}
		return v.Directory
	}).(pulumi.StringPtrOutput)
}

// Specifies the commit hash of the revision to be cloned. If unspecified, the HEAD revision is cloned. Changing this forces a new resource to be created.
func (o GroupContainerVolumeGitRepoPtrOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupContainerVolumeGitRepo) *string {
		if v == nil {
			return nil
		}
		return v.Revision
	}).(pulumi.StringPtrOutput)
}

// Specifies the Git repository to be cloned. Changing this forces a new resource to be created.
func (o GroupContainerVolumeGitRepoPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupContainerVolumeGitRepo) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type GroupDiagnostics struct {
	// A `logAnalytics` block as defined below. Changing this forces a new resource to be created.
	LogAnalytics GroupDiagnosticsLogAnalytics `pulumi:"logAnalytics"`
}

// GroupDiagnosticsInput is an input type that accepts GroupDiagnosticsArgs and GroupDiagnosticsOutput values.
// You can construct a concrete instance of `GroupDiagnosticsInput` via:
//
//	GroupDiagnosticsArgs{...}
type GroupDiagnosticsInput interface {
	pulumi.Input

	ToGroupDiagnosticsOutput() GroupDiagnosticsOutput
	ToGroupDiagnosticsOutputWithContext(context.Context) GroupDiagnosticsOutput
}

type GroupDiagnosticsArgs struct {
	// A `logAnalytics` block as defined below. Changing this forces a new resource to be created.
	LogAnalytics GroupDiagnosticsLogAnalyticsInput `pulumi:"logAnalytics"`
}

func (GroupDiagnosticsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupDiagnostics)(nil)).Elem()
}

func (i GroupDiagnosticsArgs) ToGroupDiagnosticsOutput() GroupDiagnosticsOutput {
	return i.ToGroupDiagnosticsOutputWithContext(context.Background())
}

func (i GroupDiagnosticsArgs) ToGroupDiagnosticsOutputWithContext(ctx context.Context) GroupDiagnosticsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupDiagnosticsOutput)
}

func (i GroupDiagnosticsArgs) ToGroupDiagnosticsPtrOutput() GroupDiagnosticsPtrOutput {
	return i.ToGroupDiagnosticsPtrOutputWithContext(context.Background())
}

func (i GroupDiagnosticsArgs) ToGroupDiagnosticsPtrOutputWithContext(ctx context.Context) GroupDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupDiagnosticsOutput).ToGroupDiagnosticsPtrOutputWithContext(ctx)
}

// GroupDiagnosticsPtrInput is an input type that accepts GroupDiagnosticsArgs, GroupDiagnosticsPtr and GroupDiagnosticsPtrOutput values.
// You can construct a concrete instance of `GroupDiagnosticsPtrInput` via:
//
//	        GroupDiagnosticsArgs{...}
//
//	or:
//
//	        nil
type GroupDiagnosticsPtrInput interface {
	pulumi.Input

	ToGroupDiagnosticsPtrOutput() GroupDiagnosticsPtrOutput
	ToGroupDiagnosticsPtrOutputWithContext(context.Context) GroupDiagnosticsPtrOutput
}

type groupDiagnosticsPtrType GroupDiagnosticsArgs

func GroupDiagnosticsPtr(v *GroupDiagnosticsArgs) GroupDiagnosticsPtrInput {
	return (*groupDiagnosticsPtrType)(v)
}

func (*groupDiagnosticsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupDiagnostics)(nil)).Elem()
}

func (i *groupDiagnosticsPtrType) ToGroupDiagnosticsPtrOutput() GroupDiagnosticsPtrOutput {
	return i.ToGroupDiagnosticsPtrOutputWithContext(context.Background())
}

func (i *groupDiagnosticsPtrType) ToGroupDiagnosticsPtrOutputWithContext(ctx context.Context) GroupDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupDiagnosticsPtrOutput)
}

type GroupDiagnosticsOutput struct{ *pulumi.OutputState }

func (GroupDiagnosticsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupDiagnostics)(nil)).Elem()
}

func (o GroupDiagnosticsOutput) ToGroupDiagnosticsOutput() GroupDiagnosticsOutput {
	return o
}

func (o GroupDiagnosticsOutput) ToGroupDiagnosticsOutputWithContext(ctx context.Context) GroupDiagnosticsOutput {
	return o
}

func (o GroupDiagnosticsOutput) ToGroupDiagnosticsPtrOutput() GroupDiagnosticsPtrOutput {
	return o.ToGroupDiagnosticsPtrOutputWithContext(context.Background())
}

func (o GroupDiagnosticsOutput) ToGroupDiagnosticsPtrOutputWithContext(ctx context.Context) GroupDiagnosticsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupDiagnostics) *GroupDiagnostics {
		return &v
	}).(GroupDiagnosticsPtrOutput)
}

// A `logAnalytics` block as defined below. Changing this forces a new resource to be created.
func (o GroupDiagnosticsOutput) LogAnalytics() GroupDiagnosticsLogAnalyticsOutput {
	return o.ApplyT(func(v GroupDiagnostics) GroupDiagnosticsLogAnalytics { return v.LogAnalytics }).(GroupDiagnosticsLogAnalyticsOutput)
}

type GroupDiagnosticsPtrOutput struct{ *pulumi.OutputState }

func (GroupDiagnosticsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupDiagnostics)(nil)).Elem()
}

func (o GroupDiagnosticsPtrOutput) ToGroupDiagnosticsPtrOutput() GroupDiagnosticsPtrOutput {
	return o
}

func (o GroupDiagnosticsPtrOutput) ToGroupDiagnosticsPtrOutputWithContext(ctx context.Context) GroupDiagnosticsPtrOutput {
	return o
}

func (o GroupDiagnosticsPtrOutput) Elem() GroupDiagnosticsOutput {
	return o.ApplyT(func(v *GroupDiagnostics) GroupDiagnostics {
		if v != nil {
			return *v
		}
		var ret GroupDiagnostics
		return ret
	}).(GroupDiagnosticsOutput)
}

// A `logAnalytics` block as defined below. Changing this forces a new resource to be created.
func (o GroupDiagnosticsPtrOutput) LogAnalytics() GroupDiagnosticsLogAnalyticsPtrOutput {
	return o.ApplyT(func(v *GroupDiagnostics) *GroupDiagnosticsLogAnalytics {
		if v == nil {
			return nil
		}
		return &v.LogAnalytics
	}).(GroupDiagnosticsLogAnalyticsPtrOutput)
}

type GroupDiagnosticsLogAnalytics struct {
	// The log type which should be used. Possible values are `ContainerInsights` and `ContainerInstanceLogs`. Changing this forces a new resource to be created.
	LogType *string `pulumi:"logType"`
	// Any metadata required for Log Analytics. Changing this forces a new resource to be created.
	Metadata map[string]string `pulumi:"metadata"`
	// The Workspace ID of the Log Analytics Workspace. Changing this forces a new resource to be created.
	WorkspaceId string `pulumi:"workspaceId"`
	// The Workspace Key of the Log Analytics Workspace. Changing this forces a new resource to be created.
	WorkspaceKey string `pulumi:"workspaceKey"`
}

// GroupDiagnosticsLogAnalyticsInput is an input type that accepts GroupDiagnosticsLogAnalyticsArgs and GroupDiagnosticsLogAnalyticsOutput values.
// You can construct a concrete instance of `GroupDiagnosticsLogAnalyticsInput` via:
//
//	GroupDiagnosticsLogAnalyticsArgs{...}
type GroupDiagnosticsLogAnalyticsInput interface {
	pulumi.Input

	ToGroupDiagnosticsLogAnalyticsOutput() GroupDiagnosticsLogAnalyticsOutput
	ToGroupDiagnosticsLogAnalyticsOutputWithContext(context.Context) GroupDiagnosticsLogAnalyticsOutput
}

type GroupDiagnosticsLogAnalyticsArgs struct {
	// The log type which should be used. Possible values are `ContainerInsights` and `ContainerInstanceLogs`. Changing this forces a new resource to be created.
	LogType pulumi.StringPtrInput `pulumi:"logType"`
	// Any metadata required for Log Analytics. Changing this forces a new resource to be created.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// The Workspace ID of the Log Analytics Workspace. Changing this forces a new resource to be created.
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
	// The Workspace Key of the Log Analytics Workspace. Changing this forces a new resource to be created.
	WorkspaceKey pulumi.StringInput `pulumi:"workspaceKey"`
}

func (GroupDiagnosticsLogAnalyticsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupDiagnosticsLogAnalytics)(nil)).Elem()
}

func (i GroupDiagnosticsLogAnalyticsArgs) ToGroupDiagnosticsLogAnalyticsOutput() GroupDiagnosticsLogAnalyticsOutput {
	return i.ToGroupDiagnosticsLogAnalyticsOutputWithContext(context.Background())
}

func (i GroupDiagnosticsLogAnalyticsArgs) ToGroupDiagnosticsLogAnalyticsOutputWithContext(ctx context.Context) GroupDiagnosticsLogAnalyticsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupDiagnosticsLogAnalyticsOutput)
}

func (i GroupDiagnosticsLogAnalyticsArgs) ToGroupDiagnosticsLogAnalyticsPtrOutput() GroupDiagnosticsLogAnalyticsPtrOutput {
	return i.ToGroupDiagnosticsLogAnalyticsPtrOutputWithContext(context.Background())
}

func (i GroupDiagnosticsLogAnalyticsArgs) ToGroupDiagnosticsLogAnalyticsPtrOutputWithContext(ctx context.Context) GroupDiagnosticsLogAnalyticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupDiagnosticsLogAnalyticsOutput).ToGroupDiagnosticsLogAnalyticsPtrOutputWithContext(ctx)
}

// GroupDiagnosticsLogAnalyticsPtrInput is an input type that accepts GroupDiagnosticsLogAnalyticsArgs, GroupDiagnosticsLogAnalyticsPtr and GroupDiagnosticsLogAnalyticsPtrOutput values.
// You can construct a concrete instance of `GroupDiagnosticsLogAnalyticsPtrInput` via:
//
//	        GroupDiagnosticsLogAnalyticsArgs{...}
//
//	or:
//
//	        nil
type GroupDiagnosticsLogAnalyticsPtrInput interface {
	pulumi.Input

	ToGroupDiagnosticsLogAnalyticsPtrOutput() GroupDiagnosticsLogAnalyticsPtrOutput
	ToGroupDiagnosticsLogAnalyticsPtrOutputWithContext(context.Context) GroupDiagnosticsLogAnalyticsPtrOutput
}

type groupDiagnosticsLogAnalyticsPtrType GroupDiagnosticsLogAnalyticsArgs

func GroupDiagnosticsLogAnalyticsPtr(v *GroupDiagnosticsLogAnalyticsArgs) GroupDiagnosticsLogAnalyticsPtrInput {
	return (*groupDiagnosticsLogAnalyticsPtrType)(v)
}

func (*groupDiagnosticsLogAnalyticsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupDiagnosticsLogAnalytics)(nil)).Elem()
}

func (i *groupDiagnosticsLogAnalyticsPtrType) ToGroupDiagnosticsLogAnalyticsPtrOutput() GroupDiagnosticsLogAnalyticsPtrOutput {
	return i.ToGroupDiagnosticsLogAnalyticsPtrOutputWithContext(context.Background())
}

func (i *groupDiagnosticsLogAnalyticsPtrType) ToGroupDiagnosticsLogAnalyticsPtrOutputWithContext(ctx context.Context) GroupDiagnosticsLogAnalyticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupDiagnosticsLogAnalyticsPtrOutput)
}

type GroupDiagnosticsLogAnalyticsOutput struct{ *pulumi.OutputState }

func (GroupDiagnosticsLogAnalyticsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupDiagnosticsLogAnalytics)(nil)).Elem()
}

func (o GroupDiagnosticsLogAnalyticsOutput) ToGroupDiagnosticsLogAnalyticsOutput() GroupDiagnosticsLogAnalyticsOutput {
	return o
}

func (o GroupDiagnosticsLogAnalyticsOutput) ToGroupDiagnosticsLogAnalyticsOutputWithContext(ctx context.Context) GroupDiagnosticsLogAnalyticsOutput {
	return o
}

func (o GroupDiagnosticsLogAnalyticsOutput) ToGroupDiagnosticsLogAnalyticsPtrOutput() GroupDiagnosticsLogAnalyticsPtrOutput {
	return o.ToGroupDiagnosticsLogAnalyticsPtrOutputWithContext(context.Background())
}

func (o GroupDiagnosticsLogAnalyticsOutput) ToGroupDiagnosticsLogAnalyticsPtrOutputWithContext(ctx context.Context) GroupDiagnosticsLogAnalyticsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupDiagnosticsLogAnalytics) *GroupDiagnosticsLogAnalytics {
		return &v
	}).(GroupDiagnosticsLogAnalyticsPtrOutput)
}

// The log type which should be used. Possible values are `ContainerInsights` and `ContainerInstanceLogs`. Changing this forces a new resource to be created.
func (o GroupDiagnosticsLogAnalyticsOutput) LogType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupDiagnosticsLogAnalytics) *string { return v.LogType }).(pulumi.StringPtrOutput)
}

// Any metadata required for Log Analytics. Changing this forces a new resource to be created.
func (o GroupDiagnosticsLogAnalyticsOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v GroupDiagnosticsLogAnalytics) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// The Workspace ID of the Log Analytics Workspace. Changing this forces a new resource to be created.
func (o GroupDiagnosticsLogAnalyticsOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GroupDiagnosticsLogAnalytics) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

// The Workspace Key of the Log Analytics Workspace. Changing this forces a new resource to be created.
func (o GroupDiagnosticsLogAnalyticsOutput) WorkspaceKey() pulumi.StringOutput {
	return o.ApplyT(func(v GroupDiagnosticsLogAnalytics) string { return v.WorkspaceKey }).(pulumi.StringOutput)
}

type GroupDiagnosticsLogAnalyticsPtrOutput struct{ *pulumi.OutputState }

func (GroupDiagnosticsLogAnalyticsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupDiagnosticsLogAnalytics)(nil)).Elem()
}

func (o GroupDiagnosticsLogAnalyticsPtrOutput) ToGroupDiagnosticsLogAnalyticsPtrOutput() GroupDiagnosticsLogAnalyticsPtrOutput {
	return o
}

func (o GroupDiagnosticsLogAnalyticsPtrOutput) ToGroupDiagnosticsLogAnalyticsPtrOutputWithContext(ctx context.Context) GroupDiagnosticsLogAnalyticsPtrOutput {
	return o
}

func (o GroupDiagnosticsLogAnalyticsPtrOutput) Elem() GroupDiagnosticsLogAnalyticsOutput {
	return o.ApplyT(func(v *GroupDiagnosticsLogAnalytics) GroupDiagnosticsLogAnalytics {
		if v != nil {
			return *v
		}
		var ret GroupDiagnosticsLogAnalytics
		return ret
	}).(GroupDiagnosticsLogAnalyticsOutput)
}

// The log type which should be used. Possible values are `ContainerInsights` and `ContainerInstanceLogs`. Changing this forces a new resource to be created.
func (o GroupDiagnosticsLogAnalyticsPtrOutput) LogType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupDiagnosticsLogAnalytics) *string {
		if v == nil {
			return nil
		}
		return v.LogType
	}).(pulumi.StringPtrOutput)
}

// Any metadata required for Log Analytics. Changing this forces a new resource to be created.
func (o GroupDiagnosticsLogAnalyticsPtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GroupDiagnosticsLogAnalytics) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// The Workspace ID of the Log Analytics Workspace. Changing this forces a new resource to be created.
func (o GroupDiagnosticsLogAnalyticsPtrOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupDiagnosticsLogAnalytics) *string {
		if v == nil {
			return nil
		}
		return &v.WorkspaceId
	}).(pulumi.StringPtrOutput)
}

// The Workspace Key of the Log Analytics Workspace. Changing this forces a new resource to be created.
func (o GroupDiagnosticsLogAnalyticsPtrOutput) WorkspaceKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupDiagnosticsLogAnalytics) *string {
		if v == nil {
			return nil
		}
		return &v.WorkspaceKey
	}).(pulumi.StringPtrOutput)
}

type GroupDnsConfig struct {
	// A list of nameservers the containers will search out to resolve requests. Changing this forces a new resource to be created.
	Nameservers []string `pulumi:"nameservers"`
	// A list of [resolver configuration options](https://man7.org/linux/man-pages/man5/resolv.conf.5.html). Changing this forces a new resource to be created.
	Options []string `pulumi:"options"`
	// A list of search domains that DNS requests will search along. Changing this forces a new resource to be created.
	SearchDomains []string `pulumi:"searchDomains"`
}

// GroupDnsConfigInput is an input type that accepts GroupDnsConfigArgs and GroupDnsConfigOutput values.
// You can construct a concrete instance of `GroupDnsConfigInput` via:
//
//	GroupDnsConfigArgs{...}
type GroupDnsConfigInput interface {
	pulumi.Input

	ToGroupDnsConfigOutput() GroupDnsConfigOutput
	ToGroupDnsConfigOutputWithContext(context.Context) GroupDnsConfigOutput
}

type GroupDnsConfigArgs struct {
	// A list of nameservers the containers will search out to resolve requests. Changing this forces a new resource to be created.
	Nameservers pulumi.StringArrayInput `pulumi:"nameservers"`
	// A list of [resolver configuration options](https://man7.org/linux/man-pages/man5/resolv.conf.5.html). Changing this forces a new resource to be created.
	Options pulumi.StringArrayInput `pulumi:"options"`
	// A list of search domains that DNS requests will search along. Changing this forces a new resource to be created.
	SearchDomains pulumi.StringArrayInput `pulumi:"searchDomains"`
}

func (GroupDnsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupDnsConfig)(nil)).Elem()
}

func (i GroupDnsConfigArgs) ToGroupDnsConfigOutput() GroupDnsConfigOutput {
	return i.ToGroupDnsConfigOutputWithContext(context.Background())
}

func (i GroupDnsConfigArgs) ToGroupDnsConfigOutputWithContext(ctx context.Context) GroupDnsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupDnsConfigOutput)
}

func (i GroupDnsConfigArgs) ToGroupDnsConfigPtrOutput() GroupDnsConfigPtrOutput {
	return i.ToGroupDnsConfigPtrOutputWithContext(context.Background())
}

func (i GroupDnsConfigArgs) ToGroupDnsConfigPtrOutputWithContext(ctx context.Context) GroupDnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupDnsConfigOutput).ToGroupDnsConfigPtrOutputWithContext(ctx)
}

// GroupDnsConfigPtrInput is an input type that accepts GroupDnsConfigArgs, GroupDnsConfigPtr and GroupDnsConfigPtrOutput values.
// You can construct a concrete instance of `GroupDnsConfigPtrInput` via:
//
//	        GroupDnsConfigArgs{...}
//
//	or:
//
//	        nil
type GroupDnsConfigPtrInput interface {
	pulumi.Input

	ToGroupDnsConfigPtrOutput() GroupDnsConfigPtrOutput
	ToGroupDnsConfigPtrOutputWithContext(context.Context) GroupDnsConfigPtrOutput
}

type groupDnsConfigPtrType GroupDnsConfigArgs

func GroupDnsConfigPtr(v *GroupDnsConfigArgs) GroupDnsConfigPtrInput {
	return (*groupDnsConfigPtrType)(v)
}

func (*groupDnsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupDnsConfig)(nil)).Elem()
}

func (i *groupDnsConfigPtrType) ToGroupDnsConfigPtrOutput() GroupDnsConfigPtrOutput {
	return i.ToGroupDnsConfigPtrOutputWithContext(context.Background())
}

func (i *groupDnsConfigPtrType) ToGroupDnsConfigPtrOutputWithContext(ctx context.Context) GroupDnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupDnsConfigPtrOutput)
}

type GroupDnsConfigOutput struct{ *pulumi.OutputState }

func (GroupDnsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupDnsConfig)(nil)).Elem()
}

func (o GroupDnsConfigOutput) ToGroupDnsConfigOutput() GroupDnsConfigOutput {
	return o
}

func (o GroupDnsConfigOutput) ToGroupDnsConfigOutputWithContext(ctx context.Context) GroupDnsConfigOutput {
	return o
}

func (o GroupDnsConfigOutput) ToGroupDnsConfigPtrOutput() GroupDnsConfigPtrOutput {
	return o.ToGroupDnsConfigPtrOutputWithContext(context.Background())
}

func (o GroupDnsConfigOutput) ToGroupDnsConfigPtrOutputWithContext(ctx context.Context) GroupDnsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupDnsConfig) *GroupDnsConfig {
		return &v
	}).(GroupDnsConfigPtrOutput)
}

// A list of nameservers the containers will search out to resolve requests. Changing this forces a new resource to be created.
func (o GroupDnsConfigOutput) Nameservers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupDnsConfig) []string { return v.Nameservers }).(pulumi.StringArrayOutput)
}

// A list of [resolver configuration options](https://man7.org/linux/man-pages/man5/resolv.conf.5.html). Changing this forces a new resource to be created.
func (o GroupDnsConfigOutput) Options() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupDnsConfig) []string { return v.Options }).(pulumi.StringArrayOutput)
}

// A list of search domains that DNS requests will search along. Changing this forces a new resource to be created.
func (o GroupDnsConfigOutput) SearchDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupDnsConfig) []string { return v.SearchDomains }).(pulumi.StringArrayOutput)
}

type GroupDnsConfigPtrOutput struct{ *pulumi.OutputState }

func (GroupDnsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupDnsConfig)(nil)).Elem()
}

func (o GroupDnsConfigPtrOutput) ToGroupDnsConfigPtrOutput() GroupDnsConfigPtrOutput {
	return o
}

func (o GroupDnsConfigPtrOutput) ToGroupDnsConfigPtrOutputWithContext(ctx context.Context) GroupDnsConfigPtrOutput {
	return o
}

func (o GroupDnsConfigPtrOutput) Elem() GroupDnsConfigOutput {
	return o.ApplyT(func(v *GroupDnsConfig) GroupDnsConfig {
		if v != nil {
			return *v
		}
		var ret GroupDnsConfig
		return ret
	}).(GroupDnsConfigOutput)
}

// A list of nameservers the containers will search out to resolve requests. Changing this forces a new resource to be created.
func (o GroupDnsConfigPtrOutput) Nameservers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupDnsConfig) []string {
		if v == nil {
			return nil
		}
		return v.Nameservers
	}).(pulumi.StringArrayOutput)
}

// A list of [resolver configuration options](https://man7.org/linux/man-pages/man5/resolv.conf.5.html). Changing this forces a new resource to be created.
func (o GroupDnsConfigPtrOutput) Options() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupDnsConfig) []string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringArrayOutput)
}

// A list of search domains that DNS requests will search along. Changing this forces a new resource to be created.
func (o GroupDnsConfigPtrOutput) SearchDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupDnsConfig) []string {
		if v == nil {
			return nil
		}
		return v.SearchDomains
	}).(pulumi.StringArrayOutput)
}

type GroupExposedPort struct {
	// The port number the container will expose. Changing this forces a new resource to be created.
	Port *int `pulumi:"port"`
	// The network protocol associated with port. Possible values are `TCP` & `UDP`. Changing this forces a new resource to be created. Defaults to `TCP`.
	//
	// > **Note:** Removing all `exposedPort` blocks requires setting `exposedPort = []`.
	Protocol *string `pulumi:"protocol"`
}

// GroupExposedPortInput is an input type that accepts GroupExposedPortArgs and GroupExposedPortOutput values.
// You can construct a concrete instance of `GroupExposedPortInput` via:
//
//	GroupExposedPortArgs{...}
type GroupExposedPortInput interface {
	pulumi.Input

	ToGroupExposedPortOutput() GroupExposedPortOutput
	ToGroupExposedPortOutputWithContext(context.Context) GroupExposedPortOutput
}

type GroupExposedPortArgs struct {
	// The port number the container will expose. Changing this forces a new resource to be created.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The network protocol associated with port. Possible values are `TCP` & `UDP`. Changing this forces a new resource to be created. Defaults to `TCP`.
	//
	// > **Note:** Removing all `exposedPort` blocks requires setting `exposedPort = []`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (GroupExposedPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupExposedPort)(nil)).Elem()
}

func (i GroupExposedPortArgs) ToGroupExposedPortOutput() GroupExposedPortOutput {
	return i.ToGroupExposedPortOutputWithContext(context.Background())
}

func (i GroupExposedPortArgs) ToGroupExposedPortOutputWithContext(ctx context.Context) GroupExposedPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupExposedPortOutput)
}

// GroupExposedPortArrayInput is an input type that accepts GroupExposedPortArray and GroupExposedPortArrayOutput values.
// You can construct a concrete instance of `GroupExposedPortArrayInput` via:
//
//	GroupExposedPortArray{ GroupExposedPortArgs{...} }
type GroupExposedPortArrayInput interface {
	pulumi.Input

	ToGroupExposedPortArrayOutput() GroupExposedPortArrayOutput
	ToGroupExposedPortArrayOutputWithContext(context.Context) GroupExposedPortArrayOutput
}

type GroupExposedPortArray []GroupExposedPortInput

func (GroupExposedPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupExposedPort)(nil)).Elem()
}

func (i GroupExposedPortArray) ToGroupExposedPortArrayOutput() GroupExposedPortArrayOutput {
	return i.ToGroupExposedPortArrayOutputWithContext(context.Background())
}

func (i GroupExposedPortArray) ToGroupExposedPortArrayOutputWithContext(ctx context.Context) GroupExposedPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupExposedPortArrayOutput)
}

type GroupExposedPortOutput struct{ *pulumi.OutputState }

func (GroupExposedPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupExposedPort)(nil)).Elem()
}

func (o GroupExposedPortOutput) ToGroupExposedPortOutput() GroupExposedPortOutput {
	return o
}

func (o GroupExposedPortOutput) ToGroupExposedPortOutputWithContext(ctx context.Context) GroupExposedPortOutput {
	return o
}

// The port number the container will expose. Changing this forces a new resource to be created.
func (o GroupExposedPortOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupExposedPort) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The network protocol associated with port. Possible values are `TCP` & `UDP`. Changing this forces a new resource to be created. Defaults to `TCP`.
//
// > **Note:** Removing all `exposedPort` blocks requires setting `exposedPort = []`.
func (o GroupExposedPortOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupExposedPort) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type GroupExposedPortArrayOutput struct{ *pulumi.OutputState }

func (GroupExposedPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupExposedPort)(nil)).Elem()
}

func (o GroupExposedPortArrayOutput) ToGroupExposedPortArrayOutput() GroupExposedPortArrayOutput {
	return o
}

func (o GroupExposedPortArrayOutput) ToGroupExposedPortArrayOutputWithContext(ctx context.Context) GroupExposedPortArrayOutput {
	return o
}

func (o GroupExposedPortArrayOutput) Index(i pulumi.IntInput) GroupExposedPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupExposedPort {
		return vs[0].([]GroupExposedPort)[vs[1].(int)]
	}).(GroupExposedPortOutput)
}

type GroupIdentity struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Container Group.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
	//
	// > **NOTE:** Currently you can't use a managed identity in a container group deployed to a virtual network.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId *string `pulumi:"principalId"`
	// The Tenant ID associated with this Managed Service Identity.
	TenantId *string `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this Container Group. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
	//
	// > **NOTE:** When `type` is set to `SystemAssigned`, the identity of the Principal ID can be retrieved after the container group has been created. See [documentation](https://docs.microsoft.com/azure/active-directory/managed-service-identity/overview) for more information.
	Type string `pulumi:"type"`
}

// GroupIdentityInput is an input type that accepts GroupIdentityArgs and GroupIdentityOutput values.
// You can construct a concrete instance of `GroupIdentityInput` via:
//
//	GroupIdentityArgs{...}
type GroupIdentityInput interface {
	pulumi.Input

	ToGroupIdentityOutput() GroupIdentityOutput
	ToGroupIdentityOutputWithContext(context.Context) GroupIdentityOutput
}

type GroupIdentityArgs struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Container Group.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
	//
	// > **NOTE:** Currently you can't use a managed identity in a container group deployed to a virtual network.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The Tenant ID associated with this Managed Service Identity.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this Container Group. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
	//
	// > **NOTE:** When `type` is set to `SystemAssigned`, the identity of the Principal ID can be retrieved after the container group has been created. See [documentation](https://docs.microsoft.com/azure/active-directory/managed-service-identity/overview) for more information.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GroupIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupIdentity)(nil)).Elem()
}

func (i GroupIdentityArgs) ToGroupIdentityOutput() GroupIdentityOutput {
	return i.ToGroupIdentityOutputWithContext(context.Background())
}

func (i GroupIdentityArgs) ToGroupIdentityOutputWithContext(ctx context.Context) GroupIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupIdentityOutput)
}

func (i GroupIdentityArgs) ToGroupIdentityPtrOutput() GroupIdentityPtrOutput {
	return i.ToGroupIdentityPtrOutputWithContext(context.Background())
}

func (i GroupIdentityArgs) ToGroupIdentityPtrOutputWithContext(ctx context.Context) GroupIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupIdentityOutput).ToGroupIdentityPtrOutputWithContext(ctx)
}

// GroupIdentityPtrInput is an input type that accepts GroupIdentityArgs, GroupIdentityPtr and GroupIdentityPtrOutput values.
// You can construct a concrete instance of `GroupIdentityPtrInput` via:
//
//	        GroupIdentityArgs{...}
//
//	or:
//
//	        nil
type GroupIdentityPtrInput interface {
	pulumi.Input

	ToGroupIdentityPtrOutput() GroupIdentityPtrOutput
	ToGroupIdentityPtrOutputWithContext(context.Context) GroupIdentityPtrOutput
}

type groupIdentityPtrType GroupIdentityArgs

func GroupIdentityPtr(v *GroupIdentityArgs) GroupIdentityPtrInput {
	return (*groupIdentityPtrType)(v)
}

func (*groupIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupIdentity)(nil)).Elem()
}

func (i *groupIdentityPtrType) ToGroupIdentityPtrOutput() GroupIdentityPtrOutput {
	return i.ToGroupIdentityPtrOutputWithContext(context.Background())
}

func (i *groupIdentityPtrType) ToGroupIdentityPtrOutputWithContext(ctx context.Context) GroupIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupIdentityPtrOutput)
}

type GroupIdentityOutput struct{ *pulumi.OutputState }

func (GroupIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupIdentity)(nil)).Elem()
}

func (o GroupIdentityOutput) ToGroupIdentityOutput() GroupIdentityOutput {
	return o
}

func (o GroupIdentityOutput) ToGroupIdentityOutputWithContext(ctx context.Context) GroupIdentityOutput {
	return o
}

func (o GroupIdentityOutput) ToGroupIdentityPtrOutput() GroupIdentityPtrOutput {
	return o.ToGroupIdentityPtrOutputWithContext(context.Background())
}

func (o GroupIdentityOutput) ToGroupIdentityPtrOutputWithContext(ctx context.Context) GroupIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupIdentity) *GroupIdentity {
		return &v
	}).(GroupIdentityPtrOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Container Group.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
//
// > **NOTE:** Currently you can't use a managed identity in a container group deployed to a virtual network.
func (o GroupIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this Managed Service Identity.
func (o GroupIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The Tenant ID associated with this Managed Service Identity.
func (o GroupIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Container Group. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
//
// > **NOTE:** When `type` is set to `SystemAssigned`, the identity of the Principal ID can be retrieved after the container group has been created. See [documentation](https://docs.microsoft.com/azure/active-directory/managed-service-identity/overview) for more information.
func (o GroupIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GroupIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type GroupIdentityPtrOutput struct{ *pulumi.OutputState }

func (GroupIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupIdentity)(nil)).Elem()
}

func (o GroupIdentityPtrOutput) ToGroupIdentityPtrOutput() GroupIdentityPtrOutput {
	return o
}

func (o GroupIdentityPtrOutput) ToGroupIdentityPtrOutputWithContext(ctx context.Context) GroupIdentityPtrOutput {
	return o
}

func (o GroupIdentityPtrOutput) Elem() GroupIdentityOutput {
	return o.ApplyT(func(v *GroupIdentity) GroupIdentity {
		if v != nil {
			return *v
		}
		var ret GroupIdentity
		return ret
	}).(GroupIdentityOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Container Group.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
//
// > **NOTE:** Currently you can't use a managed identity in a container group deployed to a virtual network.
func (o GroupIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this Managed Service Identity.
func (o GroupIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID associated with this Managed Service Identity.
func (o GroupIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Container Group. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
//
// > **NOTE:** When `type` is set to `SystemAssigned`, the identity of the Principal ID can be retrieved after the container group has been created. See [documentation](https://docs.microsoft.com/azure/active-directory/managed-service-identity/overview) for more information.
func (o GroupIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type GroupImageRegistryCredential struct {
	// The password with which to connect to the registry. Changing this forces a new resource to be created.
	Password *string `pulumi:"password"`
	// The address to use to connect to the registry without protocol ("https"/"http"). For example: "myacr.acr.io". Changing this forces a new resource to be created.
	Server string `pulumi:"server"`
	// The identity ID for the private registry. Changing this forces a new resource to be created.
	UserAssignedIdentityId *string `pulumi:"userAssignedIdentityId"`
	// The username with which to connect to the registry. Changing this forces a new resource to be created.
	Username *string `pulumi:"username"`
}

// GroupImageRegistryCredentialInput is an input type that accepts GroupImageRegistryCredentialArgs and GroupImageRegistryCredentialOutput values.
// You can construct a concrete instance of `GroupImageRegistryCredentialInput` via:
//
//	GroupImageRegistryCredentialArgs{...}
type GroupImageRegistryCredentialInput interface {
	pulumi.Input

	ToGroupImageRegistryCredentialOutput() GroupImageRegistryCredentialOutput
	ToGroupImageRegistryCredentialOutputWithContext(context.Context) GroupImageRegistryCredentialOutput
}

type GroupImageRegistryCredentialArgs struct {
	// The password with which to connect to the registry. Changing this forces a new resource to be created.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The address to use to connect to the registry without protocol ("https"/"http"). For example: "myacr.acr.io". Changing this forces a new resource to be created.
	Server pulumi.StringInput `pulumi:"server"`
	// The identity ID for the private registry. Changing this forces a new resource to be created.
	UserAssignedIdentityId pulumi.StringPtrInput `pulumi:"userAssignedIdentityId"`
	// The username with which to connect to the registry. Changing this forces a new resource to be created.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (GroupImageRegistryCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupImageRegistryCredential)(nil)).Elem()
}

func (i GroupImageRegistryCredentialArgs) ToGroupImageRegistryCredentialOutput() GroupImageRegistryCredentialOutput {
	return i.ToGroupImageRegistryCredentialOutputWithContext(context.Background())
}

func (i GroupImageRegistryCredentialArgs) ToGroupImageRegistryCredentialOutputWithContext(ctx context.Context) GroupImageRegistryCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupImageRegistryCredentialOutput)
}

// GroupImageRegistryCredentialArrayInput is an input type that accepts GroupImageRegistryCredentialArray and GroupImageRegistryCredentialArrayOutput values.
// You can construct a concrete instance of `GroupImageRegistryCredentialArrayInput` via:
//
//	GroupImageRegistryCredentialArray{ GroupImageRegistryCredentialArgs{...} }
type GroupImageRegistryCredentialArrayInput interface {
	pulumi.Input

	ToGroupImageRegistryCredentialArrayOutput() GroupImageRegistryCredentialArrayOutput
	ToGroupImageRegistryCredentialArrayOutputWithContext(context.Context) GroupImageRegistryCredentialArrayOutput
}

type GroupImageRegistryCredentialArray []GroupImageRegistryCredentialInput

func (GroupImageRegistryCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupImageRegistryCredential)(nil)).Elem()
}

func (i GroupImageRegistryCredentialArray) ToGroupImageRegistryCredentialArrayOutput() GroupImageRegistryCredentialArrayOutput {
	return i.ToGroupImageRegistryCredentialArrayOutputWithContext(context.Background())
}

func (i GroupImageRegistryCredentialArray) ToGroupImageRegistryCredentialArrayOutputWithContext(ctx context.Context) GroupImageRegistryCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupImageRegistryCredentialArrayOutput)
}

type GroupImageRegistryCredentialOutput struct{ *pulumi.OutputState }

func (GroupImageRegistryCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupImageRegistryCredential)(nil)).Elem()
}

func (o GroupImageRegistryCredentialOutput) ToGroupImageRegistryCredentialOutput() GroupImageRegistryCredentialOutput {
	return o
}

func (o GroupImageRegistryCredentialOutput) ToGroupImageRegistryCredentialOutputWithContext(ctx context.Context) GroupImageRegistryCredentialOutput {
	return o
}

// The password with which to connect to the registry. Changing this forces a new resource to be created.
func (o GroupImageRegistryCredentialOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupImageRegistryCredential) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The address to use to connect to the registry without protocol ("https"/"http"). For example: "myacr.acr.io". Changing this forces a new resource to be created.
func (o GroupImageRegistryCredentialOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v GroupImageRegistryCredential) string { return v.Server }).(pulumi.StringOutput)
}

// The identity ID for the private registry. Changing this forces a new resource to be created.
func (o GroupImageRegistryCredentialOutput) UserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupImageRegistryCredential) *string { return v.UserAssignedIdentityId }).(pulumi.StringPtrOutput)
}

// The username with which to connect to the registry. Changing this forces a new resource to be created.
func (o GroupImageRegistryCredentialOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupImageRegistryCredential) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GroupImageRegistryCredentialArrayOutput struct{ *pulumi.OutputState }

func (GroupImageRegistryCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupImageRegistryCredential)(nil)).Elem()
}

func (o GroupImageRegistryCredentialArrayOutput) ToGroupImageRegistryCredentialArrayOutput() GroupImageRegistryCredentialArrayOutput {
	return o
}

func (o GroupImageRegistryCredentialArrayOutput) ToGroupImageRegistryCredentialArrayOutputWithContext(ctx context.Context) GroupImageRegistryCredentialArrayOutput {
	return o
}

func (o GroupImageRegistryCredentialArrayOutput) Index(i pulumi.IntInput) GroupImageRegistryCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupImageRegistryCredential {
		return vs[0].([]GroupImageRegistryCredential)[vs[1].(int)]
	}).(GroupImageRegistryCredentialOutput)
}

type GroupInitContainer struct {
	// A list of commands which should be run on the container. Changing this forces a new resource to be created.
	Commands []string `pulumi:"commands"`
	// A list of environment variables to be set on the container. Specified as a map of name/value pairs. Changing this forces a new resource to be created.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// The container image name. Changing this forces a new resource to be created.
	Image string `pulumi:"image"`
	// Specifies the name of the Container. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
	// A list of sensitive environment variables to be set on the container. Specified as a map of name/value pairs. Changing this forces a new resource to be created.
	SecureEnvironmentVariables map[string]string `pulumi:"secureEnvironmentVariables"`
	// The definition of the security context for this container as documented in the `security` block below. Changing this forces a new resource to be created.
	Securities []GroupInitContainerSecurity `pulumi:"securities"`
	// The definition of a volume mount for this container as documented in the `volume` block below. Changing this forces a new resource to be created.
	Volumes []GroupInitContainerVolume `pulumi:"volumes"`
}

// GroupInitContainerInput is an input type that accepts GroupInitContainerArgs and GroupInitContainerOutput values.
// You can construct a concrete instance of `GroupInitContainerInput` via:
//
//	GroupInitContainerArgs{...}
type GroupInitContainerInput interface {
	pulumi.Input

	ToGroupInitContainerOutput() GroupInitContainerOutput
	ToGroupInitContainerOutputWithContext(context.Context) GroupInitContainerOutput
}

type GroupInitContainerArgs struct {
	// A list of commands which should be run on the container. Changing this forces a new resource to be created.
	Commands pulumi.StringArrayInput `pulumi:"commands"`
	// A list of environment variables to be set on the container. Specified as a map of name/value pairs. Changing this forces a new resource to be created.
	EnvironmentVariables pulumi.StringMapInput `pulumi:"environmentVariables"`
	// The container image name. Changing this forces a new resource to be created.
	Image pulumi.StringInput `pulumi:"image"`
	// Specifies the name of the Container. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of sensitive environment variables to be set on the container. Specified as a map of name/value pairs. Changing this forces a new resource to be created.
	SecureEnvironmentVariables pulumi.StringMapInput `pulumi:"secureEnvironmentVariables"`
	// The definition of the security context for this container as documented in the `security` block below. Changing this forces a new resource to be created.
	Securities GroupInitContainerSecurityArrayInput `pulumi:"securities"`
	// The definition of a volume mount for this container as documented in the `volume` block below. Changing this forces a new resource to be created.
	Volumes GroupInitContainerVolumeArrayInput `pulumi:"volumes"`
}

func (GroupInitContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupInitContainer)(nil)).Elem()
}

func (i GroupInitContainerArgs) ToGroupInitContainerOutput() GroupInitContainerOutput {
	return i.ToGroupInitContainerOutputWithContext(context.Background())
}

func (i GroupInitContainerArgs) ToGroupInitContainerOutputWithContext(ctx context.Context) GroupInitContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupInitContainerOutput)
}

// GroupInitContainerArrayInput is an input type that accepts GroupInitContainerArray and GroupInitContainerArrayOutput values.
// You can construct a concrete instance of `GroupInitContainerArrayInput` via:
//
//	GroupInitContainerArray{ GroupInitContainerArgs{...} }
type GroupInitContainerArrayInput interface {
	pulumi.Input

	ToGroupInitContainerArrayOutput() GroupInitContainerArrayOutput
	ToGroupInitContainerArrayOutputWithContext(context.Context) GroupInitContainerArrayOutput
}

type GroupInitContainerArray []GroupInitContainerInput

func (GroupInitContainerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupInitContainer)(nil)).Elem()
}

func (i GroupInitContainerArray) ToGroupInitContainerArrayOutput() GroupInitContainerArrayOutput {
	return i.ToGroupInitContainerArrayOutputWithContext(context.Background())
}

func (i GroupInitContainerArray) ToGroupInitContainerArrayOutputWithContext(ctx context.Context) GroupInitContainerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupInitContainerArrayOutput)
}

type GroupInitContainerOutput struct{ *pulumi.OutputState }

func (GroupInitContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupInitContainer)(nil)).Elem()
}

func (o GroupInitContainerOutput) ToGroupInitContainerOutput() GroupInitContainerOutput {
	return o
}

func (o GroupInitContainerOutput) ToGroupInitContainerOutputWithContext(ctx context.Context) GroupInitContainerOutput {
	return o
}

// A list of commands which should be run on the container. Changing this forces a new resource to be created.
func (o GroupInitContainerOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupInitContainer) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

// A list of environment variables to be set on the container. Specified as a map of name/value pairs. Changing this forces a new resource to be created.
func (o GroupInitContainerOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v GroupInitContainer) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// The container image name. Changing this forces a new resource to be created.
func (o GroupInitContainerOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v GroupInitContainer) string { return v.Image }).(pulumi.StringOutput)
}

// Specifies the name of the Container. Changing this forces a new resource to be created.
func (o GroupInitContainerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GroupInitContainer) string { return v.Name }).(pulumi.StringOutput)
}

// A list of sensitive environment variables to be set on the container. Specified as a map of name/value pairs. Changing this forces a new resource to be created.
func (o GroupInitContainerOutput) SecureEnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v GroupInitContainer) map[string]string { return v.SecureEnvironmentVariables }).(pulumi.StringMapOutput)
}

// The definition of the security context for this container as documented in the `security` block below. Changing this forces a new resource to be created.
func (o GroupInitContainerOutput) Securities() GroupInitContainerSecurityArrayOutput {
	return o.ApplyT(func(v GroupInitContainer) []GroupInitContainerSecurity { return v.Securities }).(GroupInitContainerSecurityArrayOutput)
}

// The definition of a volume mount for this container as documented in the `volume` block below. Changing this forces a new resource to be created.
func (o GroupInitContainerOutput) Volumes() GroupInitContainerVolumeArrayOutput {
	return o.ApplyT(func(v GroupInitContainer) []GroupInitContainerVolume { return v.Volumes }).(GroupInitContainerVolumeArrayOutput)
}

type GroupInitContainerArrayOutput struct{ *pulumi.OutputState }

func (GroupInitContainerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupInitContainer)(nil)).Elem()
}

func (o GroupInitContainerArrayOutput) ToGroupInitContainerArrayOutput() GroupInitContainerArrayOutput {
	return o
}

func (o GroupInitContainerArrayOutput) ToGroupInitContainerArrayOutputWithContext(ctx context.Context) GroupInitContainerArrayOutput {
	return o
}

func (o GroupInitContainerArrayOutput) Index(i pulumi.IntInput) GroupInitContainerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupInitContainer {
		return vs[0].([]GroupInitContainer)[vs[1].(int)]
	}).(GroupInitContainerOutput)
}

type GroupInitContainerSecurity struct {
	// Whether the container's permission is elevated to privileged? Changing this forces a new resource to be created.
	//
	// > **NOTE:** Currently, this only applies when the `osType` is `Linux` and the `sku` is `Confidential`.
	PrivilegeEnabled bool `pulumi:"privilegeEnabled"`
}

// GroupInitContainerSecurityInput is an input type that accepts GroupInitContainerSecurityArgs and GroupInitContainerSecurityOutput values.
// You can construct a concrete instance of `GroupInitContainerSecurityInput` via:
//
//	GroupInitContainerSecurityArgs{...}
type GroupInitContainerSecurityInput interface {
	pulumi.Input

	ToGroupInitContainerSecurityOutput() GroupInitContainerSecurityOutput
	ToGroupInitContainerSecurityOutputWithContext(context.Context) GroupInitContainerSecurityOutput
}

type GroupInitContainerSecurityArgs struct {
	// Whether the container's permission is elevated to privileged? Changing this forces a new resource to be created.
	//
	// > **NOTE:** Currently, this only applies when the `osType` is `Linux` and the `sku` is `Confidential`.
	PrivilegeEnabled pulumi.BoolInput `pulumi:"privilegeEnabled"`
}

func (GroupInitContainerSecurityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupInitContainerSecurity)(nil)).Elem()
}

func (i GroupInitContainerSecurityArgs) ToGroupInitContainerSecurityOutput() GroupInitContainerSecurityOutput {
	return i.ToGroupInitContainerSecurityOutputWithContext(context.Background())
}

func (i GroupInitContainerSecurityArgs) ToGroupInitContainerSecurityOutputWithContext(ctx context.Context) GroupInitContainerSecurityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupInitContainerSecurityOutput)
}

// GroupInitContainerSecurityArrayInput is an input type that accepts GroupInitContainerSecurityArray and GroupInitContainerSecurityArrayOutput values.
// You can construct a concrete instance of `GroupInitContainerSecurityArrayInput` via:
//
//	GroupInitContainerSecurityArray{ GroupInitContainerSecurityArgs{...} }
type GroupInitContainerSecurityArrayInput interface {
	pulumi.Input

	ToGroupInitContainerSecurityArrayOutput() GroupInitContainerSecurityArrayOutput
	ToGroupInitContainerSecurityArrayOutputWithContext(context.Context) GroupInitContainerSecurityArrayOutput
}

type GroupInitContainerSecurityArray []GroupInitContainerSecurityInput

func (GroupInitContainerSecurityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupInitContainerSecurity)(nil)).Elem()
}

func (i GroupInitContainerSecurityArray) ToGroupInitContainerSecurityArrayOutput() GroupInitContainerSecurityArrayOutput {
	return i.ToGroupInitContainerSecurityArrayOutputWithContext(context.Background())
}

func (i GroupInitContainerSecurityArray) ToGroupInitContainerSecurityArrayOutputWithContext(ctx context.Context) GroupInitContainerSecurityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupInitContainerSecurityArrayOutput)
}

type GroupInitContainerSecurityOutput struct{ *pulumi.OutputState }

func (GroupInitContainerSecurityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupInitContainerSecurity)(nil)).Elem()
}

func (o GroupInitContainerSecurityOutput) ToGroupInitContainerSecurityOutput() GroupInitContainerSecurityOutput {
	return o
}

func (o GroupInitContainerSecurityOutput) ToGroupInitContainerSecurityOutputWithContext(ctx context.Context) GroupInitContainerSecurityOutput {
	return o
}

// Whether the container's permission is elevated to privileged? Changing this forces a new resource to be created.
//
// > **NOTE:** Currently, this only applies when the `osType` is `Linux` and the `sku` is `Confidential`.
func (o GroupInitContainerSecurityOutput) PrivilegeEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GroupInitContainerSecurity) bool { return v.PrivilegeEnabled }).(pulumi.BoolOutput)
}

type GroupInitContainerSecurityArrayOutput struct{ *pulumi.OutputState }

func (GroupInitContainerSecurityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupInitContainerSecurity)(nil)).Elem()
}

func (o GroupInitContainerSecurityArrayOutput) ToGroupInitContainerSecurityArrayOutput() GroupInitContainerSecurityArrayOutput {
	return o
}

func (o GroupInitContainerSecurityArrayOutput) ToGroupInitContainerSecurityArrayOutputWithContext(ctx context.Context) GroupInitContainerSecurityArrayOutput {
	return o
}

func (o GroupInitContainerSecurityArrayOutput) Index(i pulumi.IntInput) GroupInitContainerSecurityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupInitContainerSecurity {
		return vs[0].([]GroupInitContainerSecurity)[vs[1].(int)]
	}).(GroupInitContainerSecurityOutput)
}

type GroupInitContainerVolume struct {
	// Boolean as to whether the mounted volume should be an empty directory. Defaults to `false`. Changing this forces a new resource to be created.
	EmptyDir *bool `pulumi:"emptyDir"`
	// A `gitRepo` block as defined below. Changing this forces a new resource to be created.
	GitRepo *GroupInitContainerVolumeGitRepo `pulumi:"gitRepo"`
	// The path on which this volume is to be mounted. Changing this forces a new resource to be created.
	MountPath string `pulumi:"mountPath"`
	// The name of the volume mount. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
	// Specify if the volume is to be mounted as read only or not. The default value is `false`. Changing this forces a new resource to be created.
	ReadOnly *bool `pulumi:"readOnly"`
	// A map of secrets that will be mounted as files in the volume. Changing this forces a new resource to be created.
	//
	// > **Note:** Exactly one of `emptyDir` volume, `gitRepo` volume, `secret` volume or storage account volume (`shareName`, `storageAccountName`, and `storageAccountKey`) must be specified.
	//
	// > **Note** when using a storage account volume, all of `shareName`, `storageAccountName`, and `storageAccountKey` must be specified.
	//
	// > **Note:** The secret values must be supplied as Base64 encoded strings. The secret values are decoded to their original values when mounted in the volume on the container.
	Secret map[string]string `pulumi:"secret"`
	// The Azure storage share that is to be mounted as a volume. This must be created on the storage account specified as above. Changing this forces a new resource to be created.
	ShareName *string `pulumi:"shareName"`
	// The access key for the Azure Storage account specified as above. Changing this forces a new resource to be created.
	StorageAccountKey *string `pulumi:"storageAccountKey"`
	// The Azure storage account from which the volume is to be mounted. Changing this forces a new resource to be created.
	StorageAccountName *string `pulumi:"storageAccountName"`
}

// GroupInitContainerVolumeInput is an input type that accepts GroupInitContainerVolumeArgs and GroupInitContainerVolumeOutput values.
// You can construct a concrete instance of `GroupInitContainerVolumeInput` via:
//
//	GroupInitContainerVolumeArgs{...}
type GroupInitContainerVolumeInput interface {
	pulumi.Input

	ToGroupInitContainerVolumeOutput() GroupInitContainerVolumeOutput
	ToGroupInitContainerVolumeOutputWithContext(context.Context) GroupInitContainerVolumeOutput
}

type GroupInitContainerVolumeArgs struct {
	// Boolean as to whether the mounted volume should be an empty directory. Defaults to `false`. Changing this forces a new resource to be created.
	EmptyDir pulumi.BoolPtrInput `pulumi:"emptyDir"`
	// A `gitRepo` block as defined below. Changing this forces a new resource to be created.
	GitRepo GroupInitContainerVolumeGitRepoPtrInput `pulumi:"gitRepo"`
	// The path on which this volume is to be mounted. Changing this forces a new resource to be created.
	MountPath pulumi.StringInput `pulumi:"mountPath"`
	// The name of the volume mount. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// Specify if the volume is to be mounted as read only or not. The default value is `false`. Changing this forces a new resource to be created.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// A map of secrets that will be mounted as files in the volume. Changing this forces a new resource to be created.
	//
	// > **Note:** Exactly one of `emptyDir` volume, `gitRepo` volume, `secret` volume or storage account volume (`shareName`, `storageAccountName`, and `storageAccountKey`) must be specified.
	//
	// > **Note** when using a storage account volume, all of `shareName`, `storageAccountName`, and `storageAccountKey` must be specified.
	//
	// > **Note:** The secret values must be supplied as Base64 encoded strings. The secret values are decoded to their original values when mounted in the volume on the container.
	Secret pulumi.StringMapInput `pulumi:"secret"`
	// The Azure storage share that is to be mounted as a volume. This must be created on the storage account specified as above. Changing this forces a new resource to be created.
	ShareName pulumi.StringPtrInput `pulumi:"shareName"`
	// The access key for the Azure Storage account specified as above. Changing this forces a new resource to be created.
	StorageAccountKey pulumi.StringPtrInput `pulumi:"storageAccountKey"`
	// The Azure storage account from which the volume is to be mounted. Changing this forces a new resource to be created.
	StorageAccountName pulumi.StringPtrInput `pulumi:"storageAccountName"`
}

func (GroupInitContainerVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupInitContainerVolume)(nil)).Elem()
}

func (i GroupInitContainerVolumeArgs) ToGroupInitContainerVolumeOutput() GroupInitContainerVolumeOutput {
	return i.ToGroupInitContainerVolumeOutputWithContext(context.Background())
}

func (i GroupInitContainerVolumeArgs) ToGroupInitContainerVolumeOutputWithContext(ctx context.Context) GroupInitContainerVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupInitContainerVolumeOutput)
}

// GroupInitContainerVolumeArrayInput is an input type that accepts GroupInitContainerVolumeArray and GroupInitContainerVolumeArrayOutput values.
// You can construct a concrete instance of `GroupInitContainerVolumeArrayInput` via:
//
//	GroupInitContainerVolumeArray{ GroupInitContainerVolumeArgs{...} }
type GroupInitContainerVolumeArrayInput interface {
	pulumi.Input

	ToGroupInitContainerVolumeArrayOutput() GroupInitContainerVolumeArrayOutput
	ToGroupInitContainerVolumeArrayOutputWithContext(context.Context) GroupInitContainerVolumeArrayOutput
}

type GroupInitContainerVolumeArray []GroupInitContainerVolumeInput

func (GroupInitContainerVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupInitContainerVolume)(nil)).Elem()
}

func (i GroupInitContainerVolumeArray) ToGroupInitContainerVolumeArrayOutput() GroupInitContainerVolumeArrayOutput {
	return i.ToGroupInitContainerVolumeArrayOutputWithContext(context.Background())
}

func (i GroupInitContainerVolumeArray) ToGroupInitContainerVolumeArrayOutputWithContext(ctx context.Context) GroupInitContainerVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupInitContainerVolumeArrayOutput)
}

type GroupInitContainerVolumeOutput struct{ *pulumi.OutputState }

func (GroupInitContainerVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupInitContainerVolume)(nil)).Elem()
}

func (o GroupInitContainerVolumeOutput) ToGroupInitContainerVolumeOutput() GroupInitContainerVolumeOutput {
	return o
}

func (o GroupInitContainerVolumeOutput) ToGroupInitContainerVolumeOutputWithContext(ctx context.Context) GroupInitContainerVolumeOutput {
	return o
}

// Boolean as to whether the mounted volume should be an empty directory. Defaults to `false`. Changing this forces a new resource to be created.
func (o GroupInitContainerVolumeOutput) EmptyDir() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GroupInitContainerVolume) *bool { return v.EmptyDir }).(pulumi.BoolPtrOutput)
}

// A `gitRepo` block as defined below. Changing this forces a new resource to be created.
func (o GroupInitContainerVolumeOutput) GitRepo() GroupInitContainerVolumeGitRepoPtrOutput {
	return o.ApplyT(func(v GroupInitContainerVolume) *GroupInitContainerVolumeGitRepo { return v.GitRepo }).(GroupInitContainerVolumeGitRepoPtrOutput)
}

// The path on which this volume is to be mounted. Changing this forces a new resource to be created.
func (o GroupInitContainerVolumeOutput) MountPath() pulumi.StringOutput {
	return o.ApplyT(func(v GroupInitContainerVolume) string { return v.MountPath }).(pulumi.StringOutput)
}

// The name of the volume mount. Changing this forces a new resource to be created.
func (o GroupInitContainerVolumeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GroupInitContainerVolume) string { return v.Name }).(pulumi.StringOutput)
}

// Specify if the volume is to be mounted as read only or not. The default value is `false`. Changing this forces a new resource to be created.
func (o GroupInitContainerVolumeOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GroupInitContainerVolume) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// A map of secrets that will be mounted as files in the volume. Changing this forces a new resource to be created.
//
// > **Note:** Exactly one of `emptyDir` volume, `gitRepo` volume, `secret` volume or storage account volume (`shareName`, `storageAccountName`, and `storageAccountKey`) must be specified.
//
// > **Note** when using a storage account volume, all of `shareName`, `storageAccountName`, and `storageAccountKey` must be specified.
//
// > **Note:** The secret values must be supplied as Base64 encoded strings. The secret values are decoded to their original values when mounted in the volume on the container.
func (o GroupInitContainerVolumeOutput) Secret() pulumi.StringMapOutput {
	return o.ApplyT(func(v GroupInitContainerVolume) map[string]string { return v.Secret }).(pulumi.StringMapOutput)
}

// The Azure storage share that is to be mounted as a volume. This must be created on the storage account specified as above. Changing this forces a new resource to be created.
func (o GroupInitContainerVolumeOutput) ShareName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupInitContainerVolume) *string { return v.ShareName }).(pulumi.StringPtrOutput)
}

// The access key for the Azure Storage account specified as above. Changing this forces a new resource to be created.
func (o GroupInitContainerVolumeOutput) StorageAccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupInitContainerVolume) *string { return v.StorageAccountKey }).(pulumi.StringPtrOutput)
}

// The Azure storage account from which the volume is to be mounted. Changing this forces a new resource to be created.
func (o GroupInitContainerVolumeOutput) StorageAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupInitContainerVolume) *string { return v.StorageAccountName }).(pulumi.StringPtrOutput)
}

type GroupInitContainerVolumeArrayOutput struct{ *pulumi.OutputState }

func (GroupInitContainerVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupInitContainerVolume)(nil)).Elem()
}

func (o GroupInitContainerVolumeArrayOutput) ToGroupInitContainerVolumeArrayOutput() GroupInitContainerVolumeArrayOutput {
	return o
}

func (o GroupInitContainerVolumeArrayOutput) ToGroupInitContainerVolumeArrayOutputWithContext(ctx context.Context) GroupInitContainerVolumeArrayOutput {
	return o
}

func (o GroupInitContainerVolumeArrayOutput) Index(i pulumi.IntInput) GroupInitContainerVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupInitContainerVolume {
		return vs[0].([]GroupInitContainerVolume)[vs[1].(int)]
	}).(GroupInitContainerVolumeOutput)
}

type GroupInitContainerVolumeGitRepo struct {
	// Specifies the directory into which the repository should be cloned. Changing this forces a new resource to be created.
	Directory *string `pulumi:"directory"`
	// Specifies the commit hash of the revision to be cloned. If unspecified, the HEAD revision is cloned. Changing this forces a new resource to be created.
	Revision *string `pulumi:"revision"`
	// Specifies the Git repository to be cloned. Changing this forces a new resource to be created.
	Url string `pulumi:"url"`
}

// GroupInitContainerVolumeGitRepoInput is an input type that accepts GroupInitContainerVolumeGitRepoArgs and GroupInitContainerVolumeGitRepoOutput values.
// You can construct a concrete instance of `GroupInitContainerVolumeGitRepoInput` via:
//
//	GroupInitContainerVolumeGitRepoArgs{...}
type GroupInitContainerVolumeGitRepoInput interface {
	pulumi.Input

	ToGroupInitContainerVolumeGitRepoOutput() GroupInitContainerVolumeGitRepoOutput
	ToGroupInitContainerVolumeGitRepoOutputWithContext(context.Context) GroupInitContainerVolumeGitRepoOutput
}

type GroupInitContainerVolumeGitRepoArgs struct {
	// Specifies the directory into which the repository should be cloned. Changing this forces a new resource to be created.
	Directory pulumi.StringPtrInput `pulumi:"directory"`
	// Specifies the commit hash of the revision to be cloned. If unspecified, the HEAD revision is cloned. Changing this forces a new resource to be created.
	Revision pulumi.StringPtrInput `pulumi:"revision"`
	// Specifies the Git repository to be cloned. Changing this forces a new resource to be created.
	Url pulumi.StringInput `pulumi:"url"`
}

func (GroupInitContainerVolumeGitRepoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupInitContainerVolumeGitRepo)(nil)).Elem()
}

func (i GroupInitContainerVolumeGitRepoArgs) ToGroupInitContainerVolumeGitRepoOutput() GroupInitContainerVolumeGitRepoOutput {
	return i.ToGroupInitContainerVolumeGitRepoOutputWithContext(context.Background())
}

func (i GroupInitContainerVolumeGitRepoArgs) ToGroupInitContainerVolumeGitRepoOutputWithContext(ctx context.Context) GroupInitContainerVolumeGitRepoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupInitContainerVolumeGitRepoOutput)
}

func (i GroupInitContainerVolumeGitRepoArgs) ToGroupInitContainerVolumeGitRepoPtrOutput() GroupInitContainerVolumeGitRepoPtrOutput {
	return i.ToGroupInitContainerVolumeGitRepoPtrOutputWithContext(context.Background())
}

func (i GroupInitContainerVolumeGitRepoArgs) ToGroupInitContainerVolumeGitRepoPtrOutputWithContext(ctx context.Context) GroupInitContainerVolumeGitRepoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupInitContainerVolumeGitRepoOutput).ToGroupInitContainerVolumeGitRepoPtrOutputWithContext(ctx)
}

// GroupInitContainerVolumeGitRepoPtrInput is an input type that accepts GroupInitContainerVolumeGitRepoArgs, GroupInitContainerVolumeGitRepoPtr and GroupInitContainerVolumeGitRepoPtrOutput values.
// You can construct a concrete instance of `GroupInitContainerVolumeGitRepoPtrInput` via:
//
//	        GroupInitContainerVolumeGitRepoArgs{...}
//
//	or:
//
//	        nil
type GroupInitContainerVolumeGitRepoPtrInput interface {
	pulumi.Input

	ToGroupInitContainerVolumeGitRepoPtrOutput() GroupInitContainerVolumeGitRepoPtrOutput
	ToGroupInitContainerVolumeGitRepoPtrOutputWithContext(context.Context) GroupInitContainerVolumeGitRepoPtrOutput
}

type groupInitContainerVolumeGitRepoPtrType GroupInitContainerVolumeGitRepoArgs

func GroupInitContainerVolumeGitRepoPtr(v *GroupInitContainerVolumeGitRepoArgs) GroupInitContainerVolumeGitRepoPtrInput {
	return (*groupInitContainerVolumeGitRepoPtrType)(v)
}

func (*groupInitContainerVolumeGitRepoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupInitContainerVolumeGitRepo)(nil)).Elem()
}

func (i *groupInitContainerVolumeGitRepoPtrType) ToGroupInitContainerVolumeGitRepoPtrOutput() GroupInitContainerVolumeGitRepoPtrOutput {
	return i.ToGroupInitContainerVolumeGitRepoPtrOutputWithContext(context.Background())
}

func (i *groupInitContainerVolumeGitRepoPtrType) ToGroupInitContainerVolumeGitRepoPtrOutputWithContext(ctx context.Context) GroupInitContainerVolumeGitRepoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupInitContainerVolumeGitRepoPtrOutput)
}

type GroupInitContainerVolumeGitRepoOutput struct{ *pulumi.OutputState }

func (GroupInitContainerVolumeGitRepoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupInitContainerVolumeGitRepo)(nil)).Elem()
}

func (o GroupInitContainerVolumeGitRepoOutput) ToGroupInitContainerVolumeGitRepoOutput() GroupInitContainerVolumeGitRepoOutput {
	return o
}

func (o GroupInitContainerVolumeGitRepoOutput) ToGroupInitContainerVolumeGitRepoOutputWithContext(ctx context.Context) GroupInitContainerVolumeGitRepoOutput {
	return o
}

func (o GroupInitContainerVolumeGitRepoOutput) ToGroupInitContainerVolumeGitRepoPtrOutput() GroupInitContainerVolumeGitRepoPtrOutput {
	return o.ToGroupInitContainerVolumeGitRepoPtrOutputWithContext(context.Background())
}

func (o GroupInitContainerVolumeGitRepoOutput) ToGroupInitContainerVolumeGitRepoPtrOutputWithContext(ctx context.Context) GroupInitContainerVolumeGitRepoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupInitContainerVolumeGitRepo) *GroupInitContainerVolumeGitRepo {
		return &v
	}).(GroupInitContainerVolumeGitRepoPtrOutput)
}

// Specifies the directory into which the repository should be cloned. Changing this forces a new resource to be created.
func (o GroupInitContainerVolumeGitRepoOutput) Directory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupInitContainerVolumeGitRepo) *string { return v.Directory }).(pulumi.StringPtrOutput)
}

// Specifies the commit hash of the revision to be cloned. If unspecified, the HEAD revision is cloned. Changing this forces a new resource to be created.
func (o GroupInitContainerVolumeGitRepoOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupInitContainerVolumeGitRepo) *string { return v.Revision }).(pulumi.StringPtrOutput)
}

// Specifies the Git repository to be cloned. Changing this forces a new resource to be created.
func (o GroupInitContainerVolumeGitRepoOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GroupInitContainerVolumeGitRepo) string { return v.Url }).(pulumi.StringOutput)
}

type GroupInitContainerVolumeGitRepoPtrOutput struct{ *pulumi.OutputState }

func (GroupInitContainerVolumeGitRepoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupInitContainerVolumeGitRepo)(nil)).Elem()
}

func (o GroupInitContainerVolumeGitRepoPtrOutput) ToGroupInitContainerVolumeGitRepoPtrOutput() GroupInitContainerVolumeGitRepoPtrOutput {
	return o
}

func (o GroupInitContainerVolumeGitRepoPtrOutput) ToGroupInitContainerVolumeGitRepoPtrOutputWithContext(ctx context.Context) GroupInitContainerVolumeGitRepoPtrOutput {
	return o
}

func (o GroupInitContainerVolumeGitRepoPtrOutput) Elem() GroupInitContainerVolumeGitRepoOutput {
	return o.ApplyT(func(v *GroupInitContainerVolumeGitRepo) GroupInitContainerVolumeGitRepo {
		if v != nil {
			return *v
		}
		var ret GroupInitContainerVolumeGitRepo
		return ret
	}).(GroupInitContainerVolumeGitRepoOutput)
}

// Specifies the directory into which the repository should be cloned. Changing this forces a new resource to be created.
func (o GroupInitContainerVolumeGitRepoPtrOutput) Directory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupInitContainerVolumeGitRepo) *string {
		if v == nil {
			return nil
		}
		return v.Directory
	}).(pulumi.StringPtrOutput)
}

// Specifies the commit hash of the revision to be cloned. If unspecified, the HEAD revision is cloned. Changing this forces a new resource to be created.
func (o GroupInitContainerVolumeGitRepoPtrOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupInitContainerVolumeGitRepo) *string {
		if v == nil {
			return nil
		}
		return v.Revision
	}).(pulumi.StringPtrOutput)
}

// Specifies the Git repository to be cloned. Changing this forces a new resource to be created.
func (o GroupInitContainerVolumeGitRepoPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupInitContainerVolumeGitRepo) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterAciConnectorLinux struct {
	// A `connectorIdentity` block is exported. The exported attributes are defined below.
	ConnectorIdentities []KubernetesClusterAciConnectorLinuxConnectorIdentity `pulumi:"connectorIdentities"`
	// The subnet name for the virtual nodes to run.
	//
	// > **Note:** At this time ACI Connectors are not supported in Azure China.
	//
	// > **Note:** AKS will add a delegation to the subnet named here. To prevent further runs from failing you should make sure that the subnet you create for virtual nodes has a delegation, like so.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := network.NewSubnet(ctx, "virtual", &network.SubnetArgs{
	// 			Delegations: network.SubnetDelegationArray{
	// 				&network.SubnetDelegationArgs{
	// 					Name: pulumi.String("aciDelegation"),
	// 					ServiceDelegation: &network.SubnetDelegationServiceDelegationArgs{
	// 						Actions: pulumi.StringArray{
	// 							pulumi.String("Microsoft.Network/virtualNetworks/subnets/action"),
	// 						},
	// 						Name: pulumi.String("Microsoft.ContainerInstance/containerGroups"),
	// 					},
	// 				},
	// 			},
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	SubnetName string `pulumi:"subnetName"`
}

// KubernetesClusterAciConnectorLinuxInput is an input type that accepts KubernetesClusterAciConnectorLinuxArgs and KubernetesClusterAciConnectorLinuxOutput values.
// You can construct a concrete instance of `KubernetesClusterAciConnectorLinuxInput` via:
//
//	KubernetesClusterAciConnectorLinuxArgs{...}
type KubernetesClusterAciConnectorLinuxInput interface {
	pulumi.Input

	ToKubernetesClusterAciConnectorLinuxOutput() KubernetesClusterAciConnectorLinuxOutput
	ToKubernetesClusterAciConnectorLinuxOutputWithContext(context.Context) KubernetesClusterAciConnectorLinuxOutput
}

type KubernetesClusterAciConnectorLinuxArgs struct {
	// A `connectorIdentity` block is exported. The exported attributes are defined below.
	ConnectorIdentities KubernetesClusterAciConnectorLinuxConnectorIdentityArrayInput `pulumi:"connectorIdentities"`
	// The subnet name for the virtual nodes to run.
	//
	// > **Note:** At this time ACI Connectors are not supported in Azure China.
	//
	// > **Note:** AKS will add a delegation to the subnet named here. To prevent further runs from failing you should make sure that the subnet you create for virtual nodes has a delegation, like so.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := network.NewSubnet(ctx, "virtual", &network.SubnetArgs{
	// 			Delegations: network.SubnetDelegationArray{
	// 				&network.SubnetDelegationArgs{
	// 					Name: pulumi.String("aciDelegation"),
	// 					ServiceDelegation: &network.SubnetDelegationServiceDelegationArgs{
	// 						Actions: pulumi.StringArray{
	// 							pulumi.String("Microsoft.Network/virtualNetworks/subnets/action"),
	// 						},
	// 						Name: pulumi.String("Microsoft.ContainerInstance/containerGroups"),
	// 					},
	// 				},
	// 			},
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	SubnetName pulumi.StringInput `pulumi:"subnetName"`
}

func (KubernetesClusterAciConnectorLinuxArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterAciConnectorLinux)(nil)).Elem()
}

func (i KubernetesClusterAciConnectorLinuxArgs) ToKubernetesClusterAciConnectorLinuxOutput() KubernetesClusterAciConnectorLinuxOutput {
	return i.ToKubernetesClusterAciConnectorLinuxOutputWithContext(context.Background())
}

func (i KubernetesClusterAciConnectorLinuxArgs) ToKubernetesClusterAciConnectorLinuxOutputWithContext(ctx context.Context) KubernetesClusterAciConnectorLinuxOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAciConnectorLinuxOutput)
}

func (i KubernetesClusterAciConnectorLinuxArgs) ToKubernetesClusterAciConnectorLinuxPtrOutput() KubernetesClusterAciConnectorLinuxPtrOutput {
	return i.ToKubernetesClusterAciConnectorLinuxPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterAciConnectorLinuxArgs) ToKubernetesClusterAciConnectorLinuxPtrOutputWithContext(ctx context.Context) KubernetesClusterAciConnectorLinuxPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAciConnectorLinuxOutput).ToKubernetesClusterAciConnectorLinuxPtrOutputWithContext(ctx)
}

// KubernetesClusterAciConnectorLinuxPtrInput is an input type that accepts KubernetesClusterAciConnectorLinuxArgs, KubernetesClusterAciConnectorLinuxPtr and KubernetesClusterAciConnectorLinuxPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterAciConnectorLinuxPtrInput` via:
//
//	        KubernetesClusterAciConnectorLinuxArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterAciConnectorLinuxPtrInput interface {
	pulumi.Input

	ToKubernetesClusterAciConnectorLinuxPtrOutput() KubernetesClusterAciConnectorLinuxPtrOutput
	ToKubernetesClusterAciConnectorLinuxPtrOutputWithContext(context.Context) KubernetesClusterAciConnectorLinuxPtrOutput
}

type kubernetesClusterAciConnectorLinuxPtrType KubernetesClusterAciConnectorLinuxArgs

func KubernetesClusterAciConnectorLinuxPtr(v *KubernetesClusterAciConnectorLinuxArgs) KubernetesClusterAciConnectorLinuxPtrInput {
	return (*kubernetesClusterAciConnectorLinuxPtrType)(v)
}

func (*kubernetesClusterAciConnectorLinuxPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterAciConnectorLinux)(nil)).Elem()
}

func (i *kubernetesClusterAciConnectorLinuxPtrType) ToKubernetesClusterAciConnectorLinuxPtrOutput() KubernetesClusterAciConnectorLinuxPtrOutput {
	return i.ToKubernetesClusterAciConnectorLinuxPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterAciConnectorLinuxPtrType) ToKubernetesClusterAciConnectorLinuxPtrOutputWithContext(ctx context.Context) KubernetesClusterAciConnectorLinuxPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAciConnectorLinuxPtrOutput)
}

type KubernetesClusterAciConnectorLinuxOutput struct{ *pulumi.OutputState }

func (KubernetesClusterAciConnectorLinuxOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterAciConnectorLinux)(nil)).Elem()
}

func (o KubernetesClusterAciConnectorLinuxOutput) ToKubernetesClusterAciConnectorLinuxOutput() KubernetesClusterAciConnectorLinuxOutput {
	return o
}

func (o KubernetesClusterAciConnectorLinuxOutput) ToKubernetesClusterAciConnectorLinuxOutputWithContext(ctx context.Context) KubernetesClusterAciConnectorLinuxOutput {
	return o
}

func (o KubernetesClusterAciConnectorLinuxOutput) ToKubernetesClusterAciConnectorLinuxPtrOutput() KubernetesClusterAciConnectorLinuxPtrOutput {
	return o.ToKubernetesClusterAciConnectorLinuxPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterAciConnectorLinuxOutput) ToKubernetesClusterAciConnectorLinuxPtrOutputWithContext(ctx context.Context) KubernetesClusterAciConnectorLinuxPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterAciConnectorLinux) *KubernetesClusterAciConnectorLinux {
		return &v
	}).(KubernetesClusterAciConnectorLinuxPtrOutput)
}

// A `connectorIdentity` block is exported. The exported attributes are defined below.
func (o KubernetesClusterAciConnectorLinuxOutput) ConnectorIdentities() KubernetesClusterAciConnectorLinuxConnectorIdentityArrayOutput {
	return o.ApplyT(func(v KubernetesClusterAciConnectorLinux) []KubernetesClusterAciConnectorLinuxConnectorIdentity {
		return v.ConnectorIdentities
	}).(KubernetesClusterAciConnectorLinuxConnectorIdentityArrayOutput)
}

// The subnet name for the virtual nodes to run.
//
// > **Note:** At this time ACI Connectors are not supported in Azure China.
//
// > **Note:** AKS will add a delegation to the subnet named here. To prevent further runs from failing you should make sure that the subnet you create for virtual nodes has a delegation, like so.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := network.NewSubnet(ctx, "virtual", &network.SubnetArgs{
//				Delegations: network.SubnetDelegationArray{
//					&network.SubnetDelegationArgs{
//						Name: pulumi.String("aciDelegation"),
//						ServiceDelegation: &network.SubnetDelegationServiceDelegationArgs{
//							Actions: pulumi.StringArray{
//								pulumi.String("Microsoft.Network/virtualNetworks/subnets/action"),
//							},
//							Name: pulumi.String("Microsoft.ContainerInstance/containerGroups"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func (o KubernetesClusterAciConnectorLinuxOutput) SubnetName() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterAciConnectorLinux) string { return v.SubnetName }).(pulumi.StringOutput)
}

type KubernetesClusterAciConnectorLinuxPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterAciConnectorLinuxPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterAciConnectorLinux)(nil)).Elem()
}

func (o KubernetesClusterAciConnectorLinuxPtrOutput) ToKubernetesClusterAciConnectorLinuxPtrOutput() KubernetesClusterAciConnectorLinuxPtrOutput {
	return o
}

func (o KubernetesClusterAciConnectorLinuxPtrOutput) ToKubernetesClusterAciConnectorLinuxPtrOutputWithContext(ctx context.Context) KubernetesClusterAciConnectorLinuxPtrOutput {
	return o
}

func (o KubernetesClusterAciConnectorLinuxPtrOutput) Elem() KubernetesClusterAciConnectorLinuxOutput {
	return o.ApplyT(func(v *KubernetesClusterAciConnectorLinux) KubernetesClusterAciConnectorLinux {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterAciConnectorLinux
		return ret
	}).(KubernetesClusterAciConnectorLinuxOutput)
}

// A `connectorIdentity` block is exported. The exported attributes are defined below.
func (o KubernetesClusterAciConnectorLinuxPtrOutput) ConnectorIdentities() KubernetesClusterAciConnectorLinuxConnectorIdentityArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterAciConnectorLinux) []KubernetesClusterAciConnectorLinuxConnectorIdentity {
		if v == nil {
			return nil
		}
		return v.ConnectorIdentities
	}).(KubernetesClusterAciConnectorLinuxConnectorIdentityArrayOutput)
}

// The subnet name for the virtual nodes to run.
//
// > **Note:** At this time ACI Connectors are not supported in Azure China.
//
// > **Note:** AKS will add a delegation to the subnet named here. To prevent further runs from failing you should make sure that the subnet you create for virtual nodes has a delegation, like so.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := network.NewSubnet(ctx, "virtual", &network.SubnetArgs{
//				Delegations: network.SubnetDelegationArray{
//					&network.SubnetDelegationArgs{
//						Name: pulumi.String("aciDelegation"),
//						ServiceDelegation: &network.SubnetDelegationServiceDelegationArgs{
//							Actions: pulumi.StringArray{
//								pulumi.String("Microsoft.Network/virtualNetworks/subnets/action"),
//							},
//							Name: pulumi.String("Microsoft.ContainerInstance/containerGroups"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func (o KubernetesClusterAciConnectorLinuxPtrOutput) SubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAciConnectorLinux) *string {
		if v == nil {
			return nil
		}
		return &v.SubnetName
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterAciConnectorLinuxConnectorIdentity struct {
	// The Client ID of the user-defined Managed Identity to be assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	ClientId *string `pulumi:"clientId"`
	// The Object ID of the user-defined Managed Identity assigned to the Kubelets.If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	ObjectId *string `pulumi:"objectId"`
	// The ID of the User Assigned Identity assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	//
	// > **Note:** When `kubeletIdentity` is enabled - The `type` field in the `identity` block must be set to `UserAssigned` and `identityIds` must be set.
	UserAssignedIdentityId *string `pulumi:"userAssignedIdentityId"`
}

// KubernetesClusterAciConnectorLinuxConnectorIdentityInput is an input type that accepts KubernetesClusterAciConnectorLinuxConnectorIdentityArgs and KubernetesClusterAciConnectorLinuxConnectorIdentityOutput values.
// You can construct a concrete instance of `KubernetesClusterAciConnectorLinuxConnectorIdentityInput` via:
//
//	KubernetesClusterAciConnectorLinuxConnectorIdentityArgs{...}
type KubernetesClusterAciConnectorLinuxConnectorIdentityInput interface {
	pulumi.Input

	ToKubernetesClusterAciConnectorLinuxConnectorIdentityOutput() KubernetesClusterAciConnectorLinuxConnectorIdentityOutput
	ToKubernetesClusterAciConnectorLinuxConnectorIdentityOutputWithContext(context.Context) KubernetesClusterAciConnectorLinuxConnectorIdentityOutput
}

type KubernetesClusterAciConnectorLinuxConnectorIdentityArgs struct {
	// The Client ID of the user-defined Managed Identity to be assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The Object ID of the user-defined Managed Identity assigned to the Kubelets.If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
	// The ID of the User Assigned Identity assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	//
	// > **Note:** When `kubeletIdentity` is enabled - The `type` field in the `identity` block must be set to `UserAssigned` and `identityIds` must be set.
	UserAssignedIdentityId pulumi.StringPtrInput `pulumi:"userAssignedIdentityId"`
}

func (KubernetesClusterAciConnectorLinuxConnectorIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterAciConnectorLinuxConnectorIdentity)(nil)).Elem()
}

func (i KubernetesClusterAciConnectorLinuxConnectorIdentityArgs) ToKubernetesClusterAciConnectorLinuxConnectorIdentityOutput() KubernetesClusterAciConnectorLinuxConnectorIdentityOutput {
	return i.ToKubernetesClusterAciConnectorLinuxConnectorIdentityOutputWithContext(context.Background())
}

func (i KubernetesClusterAciConnectorLinuxConnectorIdentityArgs) ToKubernetesClusterAciConnectorLinuxConnectorIdentityOutputWithContext(ctx context.Context) KubernetesClusterAciConnectorLinuxConnectorIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAciConnectorLinuxConnectorIdentityOutput)
}

// KubernetesClusterAciConnectorLinuxConnectorIdentityArrayInput is an input type that accepts KubernetesClusterAciConnectorLinuxConnectorIdentityArray and KubernetesClusterAciConnectorLinuxConnectorIdentityArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterAciConnectorLinuxConnectorIdentityArrayInput` via:
//
//	KubernetesClusterAciConnectorLinuxConnectorIdentityArray{ KubernetesClusterAciConnectorLinuxConnectorIdentityArgs{...} }
type KubernetesClusterAciConnectorLinuxConnectorIdentityArrayInput interface {
	pulumi.Input

	ToKubernetesClusterAciConnectorLinuxConnectorIdentityArrayOutput() KubernetesClusterAciConnectorLinuxConnectorIdentityArrayOutput
	ToKubernetesClusterAciConnectorLinuxConnectorIdentityArrayOutputWithContext(context.Context) KubernetesClusterAciConnectorLinuxConnectorIdentityArrayOutput
}

type KubernetesClusterAciConnectorLinuxConnectorIdentityArray []KubernetesClusterAciConnectorLinuxConnectorIdentityInput

func (KubernetesClusterAciConnectorLinuxConnectorIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterAciConnectorLinuxConnectorIdentity)(nil)).Elem()
}

func (i KubernetesClusterAciConnectorLinuxConnectorIdentityArray) ToKubernetesClusterAciConnectorLinuxConnectorIdentityArrayOutput() KubernetesClusterAciConnectorLinuxConnectorIdentityArrayOutput {
	return i.ToKubernetesClusterAciConnectorLinuxConnectorIdentityArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterAciConnectorLinuxConnectorIdentityArray) ToKubernetesClusterAciConnectorLinuxConnectorIdentityArrayOutputWithContext(ctx context.Context) KubernetesClusterAciConnectorLinuxConnectorIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAciConnectorLinuxConnectorIdentityArrayOutput)
}

type KubernetesClusterAciConnectorLinuxConnectorIdentityOutput struct{ *pulumi.OutputState }

func (KubernetesClusterAciConnectorLinuxConnectorIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterAciConnectorLinuxConnectorIdentity)(nil)).Elem()
}

func (o KubernetesClusterAciConnectorLinuxConnectorIdentityOutput) ToKubernetesClusterAciConnectorLinuxConnectorIdentityOutput() KubernetesClusterAciConnectorLinuxConnectorIdentityOutput {
	return o
}

func (o KubernetesClusterAciConnectorLinuxConnectorIdentityOutput) ToKubernetesClusterAciConnectorLinuxConnectorIdentityOutputWithContext(ctx context.Context) KubernetesClusterAciConnectorLinuxConnectorIdentityOutput {
	return o
}

// The Client ID of the user-defined Managed Identity to be assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
func (o KubernetesClusterAciConnectorLinuxConnectorIdentityOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAciConnectorLinuxConnectorIdentity) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The Object ID of the user-defined Managed Identity assigned to the Kubelets.If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
func (o KubernetesClusterAciConnectorLinuxConnectorIdentityOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAciConnectorLinuxConnectorIdentity) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// The ID of the User Assigned Identity assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
//
// > **Note:** When `kubeletIdentity` is enabled - The `type` field in the `identity` block must be set to `UserAssigned` and `identityIds` must be set.
func (o KubernetesClusterAciConnectorLinuxConnectorIdentityOutput) UserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAciConnectorLinuxConnectorIdentity) *string { return v.UserAssignedIdentityId }).(pulumi.StringPtrOutput)
}

type KubernetesClusterAciConnectorLinuxConnectorIdentityArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterAciConnectorLinuxConnectorIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterAciConnectorLinuxConnectorIdentity)(nil)).Elem()
}

func (o KubernetesClusterAciConnectorLinuxConnectorIdentityArrayOutput) ToKubernetesClusterAciConnectorLinuxConnectorIdentityArrayOutput() KubernetesClusterAciConnectorLinuxConnectorIdentityArrayOutput {
	return o
}

func (o KubernetesClusterAciConnectorLinuxConnectorIdentityArrayOutput) ToKubernetesClusterAciConnectorLinuxConnectorIdentityArrayOutputWithContext(ctx context.Context) KubernetesClusterAciConnectorLinuxConnectorIdentityArrayOutput {
	return o
}

func (o KubernetesClusterAciConnectorLinuxConnectorIdentityArrayOutput) Index(i pulumi.IntInput) KubernetesClusterAciConnectorLinuxConnectorIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterAciConnectorLinuxConnectorIdentity {
		return vs[0].([]KubernetesClusterAciConnectorLinuxConnectorIdentity)[vs[1].(int)]
	}).(KubernetesClusterAciConnectorLinuxConnectorIdentityOutput)
}

type KubernetesClusterApiServerAccessProfile struct {
	// Set of authorized IP ranges to allow access to API server, e.g. ["198.51.100.0/24"].
	AuthorizedIpRanges []string `pulumi:"authorizedIpRanges"`
	// The ID of the Subnet where the API server endpoint is delegated to.
	SubnetId *string `pulumi:"subnetId"`
	// Should API Server VNet Integration be enabled? For more details please visit [Use API Server VNet Integration](https://learn.microsoft.com/en-us/azure/aks/api-server-vnet-integration).
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/EnableAPIServerVnetIntegrationPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/api-server-vnet-integration#register-the-enableapiservervnetintegrationpreview-preview-feature) for more information.
	VnetIntegrationEnabled *bool `pulumi:"vnetIntegrationEnabled"`
}

// KubernetesClusterApiServerAccessProfileInput is an input type that accepts KubernetesClusterApiServerAccessProfileArgs and KubernetesClusterApiServerAccessProfileOutput values.
// You can construct a concrete instance of `KubernetesClusterApiServerAccessProfileInput` via:
//
//	KubernetesClusterApiServerAccessProfileArgs{...}
type KubernetesClusterApiServerAccessProfileInput interface {
	pulumi.Input

	ToKubernetesClusterApiServerAccessProfileOutput() KubernetesClusterApiServerAccessProfileOutput
	ToKubernetesClusterApiServerAccessProfileOutputWithContext(context.Context) KubernetesClusterApiServerAccessProfileOutput
}

type KubernetesClusterApiServerAccessProfileArgs struct {
	// Set of authorized IP ranges to allow access to API server, e.g. ["198.51.100.0/24"].
	AuthorizedIpRanges pulumi.StringArrayInput `pulumi:"authorizedIpRanges"`
	// The ID of the Subnet where the API server endpoint is delegated to.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// Should API Server VNet Integration be enabled? For more details please visit [Use API Server VNet Integration](https://learn.microsoft.com/en-us/azure/aks/api-server-vnet-integration).
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/EnableAPIServerVnetIntegrationPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/api-server-vnet-integration#register-the-enableapiservervnetintegrationpreview-preview-feature) for more information.
	VnetIntegrationEnabled pulumi.BoolPtrInput `pulumi:"vnetIntegrationEnabled"`
}

func (KubernetesClusterApiServerAccessProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterApiServerAccessProfile)(nil)).Elem()
}

func (i KubernetesClusterApiServerAccessProfileArgs) ToKubernetesClusterApiServerAccessProfileOutput() KubernetesClusterApiServerAccessProfileOutput {
	return i.ToKubernetesClusterApiServerAccessProfileOutputWithContext(context.Background())
}

func (i KubernetesClusterApiServerAccessProfileArgs) ToKubernetesClusterApiServerAccessProfileOutputWithContext(ctx context.Context) KubernetesClusterApiServerAccessProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterApiServerAccessProfileOutput)
}

func (i KubernetesClusterApiServerAccessProfileArgs) ToKubernetesClusterApiServerAccessProfilePtrOutput() KubernetesClusterApiServerAccessProfilePtrOutput {
	return i.ToKubernetesClusterApiServerAccessProfilePtrOutputWithContext(context.Background())
}

func (i KubernetesClusterApiServerAccessProfileArgs) ToKubernetesClusterApiServerAccessProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterApiServerAccessProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterApiServerAccessProfileOutput).ToKubernetesClusterApiServerAccessProfilePtrOutputWithContext(ctx)
}

// KubernetesClusterApiServerAccessProfilePtrInput is an input type that accepts KubernetesClusterApiServerAccessProfileArgs, KubernetesClusterApiServerAccessProfilePtr and KubernetesClusterApiServerAccessProfilePtrOutput values.
// You can construct a concrete instance of `KubernetesClusterApiServerAccessProfilePtrInput` via:
//
//	        KubernetesClusterApiServerAccessProfileArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterApiServerAccessProfilePtrInput interface {
	pulumi.Input

	ToKubernetesClusterApiServerAccessProfilePtrOutput() KubernetesClusterApiServerAccessProfilePtrOutput
	ToKubernetesClusterApiServerAccessProfilePtrOutputWithContext(context.Context) KubernetesClusterApiServerAccessProfilePtrOutput
}

type kubernetesClusterApiServerAccessProfilePtrType KubernetesClusterApiServerAccessProfileArgs

func KubernetesClusterApiServerAccessProfilePtr(v *KubernetesClusterApiServerAccessProfileArgs) KubernetesClusterApiServerAccessProfilePtrInput {
	return (*kubernetesClusterApiServerAccessProfilePtrType)(v)
}

func (*kubernetesClusterApiServerAccessProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterApiServerAccessProfile)(nil)).Elem()
}

func (i *kubernetesClusterApiServerAccessProfilePtrType) ToKubernetesClusterApiServerAccessProfilePtrOutput() KubernetesClusterApiServerAccessProfilePtrOutput {
	return i.ToKubernetesClusterApiServerAccessProfilePtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterApiServerAccessProfilePtrType) ToKubernetesClusterApiServerAccessProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterApiServerAccessProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterApiServerAccessProfilePtrOutput)
}

type KubernetesClusterApiServerAccessProfileOutput struct{ *pulumi.OutputState }

func (KubernetesClusterApiServerAccessProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterApiServerAccessProfile)(nil)).Elem()
}

func (o KubernetesClusterApiServerAccessProfileOutput) ToKubernetesClusterApiServerAccessProfileOutput() KubernetesClusterApiServerAccessProfileOutput {
	return o
}

func (o KubernetesClusterApiServerAccessProfileOutput) ToKubernetesClusterApiServerAccessProfileOutputWithContext(ctx context.Context) KubernetesClusterApiServerAccessProfileOutput {
	return o
}

func (o KubernetesClusterApiServerAccessProfileOutput) ToKubernetesClusterApiServerAccessProfilePtrOutput() KubernetesClusterApiServerAccessProfilePtrOutput {
	return o.ToKubernetesClusterApiServerAccessProfilePtrOutputWithContext(context.Background())
}

func (o KubernetesClusterApiServerAccessProfileOutput) ToKubernetesClusterApiServerAccessProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterApiServerAccessProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterApiServerAccessProfile) *KubernetesClusterApiServerAccessProfile {
		return &v
	}).(KubernetesClusterApiServerAccessProfilePtrOutput)
}

// Set of authorized IP ranges to allow access to API server, e.g. ["198.51.100.0/24"].
func (o KubernetesClusterApiServerAccessProfileOutput) AuthorizedIpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterApiServerAccessProfile) []string { return v.AuthorizedIpRanges }).(pulumi.StringArrayOutput)
}

// The ID of the Subnet where the API server endpoint is delegated to.
func (o KubernetesClusterApiServerAccessProfileOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterApiServerAccessProfile) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// Should API Server VNet Integration be enabled? For more details please visit [Use API Server VNet Integration](https://learn.microsoft.com/en-us/azure/aks/api-server-vnet-integration).
//
// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/EnableAPIServerVnetIntegrationPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/api-server-vnet-integration#register-the-enableapiservervnetintegrationpreview-preview-feature) for more information.
func (o KubernetesClusterApiServerAccessProfileOutput) VnetIntegrationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterApiServerAccessProfile) *bool { return v.VnetIntegrationEnabled }).(pulumi.BoolPtrOutput)
}

type KubernetesClusterApiServerAccessProfilePtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterApiServerAccessProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterApiServerAccessProfile)(nil)).Elem()
}

func (o KubernetesClusterApiServerAccessProfilePtrOutput) ToKubernetesClusterApiServerAccessProfilePtrOutput() KubernetesClusterApiServerAccessProfilePtrOutput {
	return o
}

func (o KubernetesClusterApiServerAccessProfilePtrOutput) ToKubernetesClusterApiServerAccessProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterApiServerAccessProfilePtrOutput {
	return o
}

func (o KubernetesClusterApiServerAccessProfilePtrOutput) Elem() KubernetesClusterApiServerAccessProfileOutput {
	return o.ApplyT(func(v *KubernetesClusterApiServerAccessProfile) KubernetesClusterApiServerAccessProfile {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterApiServerAccessProfile
		return ret
	}).(KubernetesClusterApiServerAccessProfileOutput)
}

// Set of authorized IP ranges to allow access to API server, e.g. ["198.51.100.0/24"].
func (o KubernetesClusterApiServerAccessProfilePtrOutput) AuthorizedIpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterApiServerAccessProfile) []string {
		if v == nil {
			return nil
		}
		return v.AuthorizedIpRanges
	}).(pulumi.StringArrayOutput)
}

// The ID of the Subnet where the API server endpoint is delegated to.
func (o KubernetesClusterApiServerAccessProfilePtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterApiServerAccessProfile) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// Should API Server VNet Integration be enabled? For more details please visit [Use API Server VNet Integration](https://learn.microsoft.com/en-us/azure/aks/api-server-vnet-integration).
//
// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/EnableAPIServerVnetIntegrationPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/api-server-vnet-integration#register-the-enableapiservervnetintegrationpreview-preview-feature) for more information.
func (o KubernetesClusterApiServerAccessProfilePtrOutput) VnetIntegrationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterApiServerAccessProfile) *bool {
		if v == nil {
			return nil
		}
		return v.VnetIntegrationEnabled
	}).(pulumi.BoolPtrOutput)
}

type KubernetesClusterAutoScalerProfile struct {
	// Detect similar node groups and balance the number of nodes between them. Defaults to `false`.
	BalanceSimilarNodeGroups *bool `pulumi:"balanceSimilarNodeGroups"`
	// Maximum number of empty nodes that can be deleted at the same time. Defaults to `10`.
	EmptyBulkDeleteMax *string `pulumi:"emptyBulkDeleteMax"`
	// Expander to use. Possible values are `least-waste`, `priority`, `most-pods` and `random`. Defaults to `random`.
	Expander *string `pulumi:"expander"`
	// Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node. Defaults to `600`.
	MaxGracefulTerminationSec *string `pulumi:"maxGracefulTerminationSec"`
	// Maximum time the autoscaler waits for a node to be provisioned. Defaults to `15m`.
	MaxNodeProvisioningTime *string `pulumi:"maxNodeProvisioningTime"`
	// Maximum Number of allowed unready nodes. Defaults to `3`.
	MaxUnreadyNodes *int `pulumi:"maxUnreadyNodes"`
	// Maximum percentage of unready nodes the cluster autoscaler will stop if the percentage is exceeded. Defaults to `45`.
	MaxUnreadyPercentage *float64 `pulumi:"maxUnreadyPercentage"`
	// For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. Defaults to `10s`.
	NewPodScaleUpDelay *string `pulumi:"newPodScaleUpDelay"`
	// How long after the scale up of AKS nodes the scale down evaluation resumes. Defaults to `10m`.
	ScaleDownDelayAfterAdd *string `pulumi:"scaleDownDelayAfterAdd"`
	// How long after node deletion that scale down evaluation resumes. Defaults to the value used for `scanInterval`.
	ScaleDownDelayAfterDelete *string `pulumi:"scaleDownDelayAfterDelete"`
	// How long after scale down failure that scale down evaluation resumes. Defaults to `3m`.
	ScaleDownDelayAfterFailure *string `pulumi:"scaleDownDelayAfterFailure"`
	// How long a node should be unneeded before it is eligible for scale down. Defaults to `10m`.
	ScaleDownUnneeded *string `pulumi:"scaleDownUnneeded"`
	// How long an unready node should be unneeded before it is eligible for scale down. Defaults to `20m`.
	ScaleDownUnready *string `pulumi:"scaleDownUnready"`
	// Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down. Defaults to `0.5`.
	ScaleDownUtilizationThreshold *string `pulumi:"scaleDownUtilizationThreshold"`
	// How often the AKS Cluster should be re-evaluated for scale up/down. Defaults to `10s`.
	ScanInterval *string `pulumi:"scanInterval"`
	// If `true` cluster autoscaler will never delete nodes with pods with local storage, for example, EmptyDir or HostPath. Defaults to `true`.
	SkipNodesWithLocalStorage *bool `pulumi:"skipNodesWithLocalStorage"`
	// If `true` cluster autoscaler will never delete nodes with pods from kube-system (except for DaemonSet or mirror pods). Defaults to `true`.
	SkipNodesWithSystemPods *bool `pulumi:"skipNodesWithSystemPods"`
}

// KubernetesClusterAutoScalerProfileInput is an input type that accepts KubernetesClusterAutoScalerProfileArgs and KubernetesClusterAutoScalerProfileOutput values.
// You can construct a concrete instance of `KubernetesClusterAutoScalerProfileInput` via:
//
//	KubernetesClusterAutoScalerProfileArgs{...}
type KubernetesClusterAutoScalerProfileInput interface {
	pulumi.Input

	ToKubernetesClusterAutoScalerProfileOutput() KubernetesClusterAutoScalerProfileOutput
	ToKubernetesClusterAutoScalerProfileOutputWithContext(context.Context) KubernetesClusterAutoScalerProfileOutput
}

type KubernetesClusterAutoScalerProfileArgs struct {
	// Detect similar node groups and balance the number of nodes between them. Defaults to `false`.
	BalanceSimilarNodeGroups pulumi.BoolPtrInput `pulumi:"balanceSimilarNodeGroups"`
	// Maximum number of empty nodes that can be deleted at the same time. Defaults to `10`.
	EmptyBulkDeleteMax pulumi.StringPtrInput `pulumi:"emptyBulkDeleteMax"`
	// Expander to use. Possible values are `least-waste`, `priority`, `most-pods` and `random`. Defaults to `random`.
	Expander pulumi.StringPtrInput `pulumi:"expander"`
	// Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node. Defaults to `600`.
	MaxGracefulTerminationSec pulumi.StringPtrInput `pulumi:"maxGracefulTerminationSec"`
	// Maximum time the autoscaler waits for a node to be provisioned. Defaults to `15m`.
	MaxNodeProvisioningTime pulumi.StringPtrInput `pulumi:"maxNodeProvisioningTime"`
	// Maximum Number of allowed unready nodes. Defaults to `3`.
	MaxUnreadyNodes pulumi.IntPtrInput `pulumi:"maxUnreadyNodes"`
	// Maximum percentage of unready nodes the cluster autoscaler will stop if the percentage is exceeded. Defaults to `45`.
	MaxUnreadyPercentage pulumi.Float64PtrInput `pulumi:"maxUnreadyPercentage"`
	// For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. Defaults to `10s`.
	NewPodScaleUpDelay pulumi.StringPtrInput `pulumi:"newPodScaleUpDelay"`
	// How long after the scale up of AKS nodes the scale down evaluation resumes. Defaults to `10m`.
	ScaleDownDelayAfterAdd pulumi.StringPtrInput `pulumi:"scaleDownDelayAfterAdd"`
	// How long after node deletion that scale down evaluation resumes. Defaults to the value used for `scanInterval`.
	ScaleDownDelayAfterDelete pulumi.StringPtrInput `pulumi:"scaleDownDelayAfterDelete"`
	// How long after scale down failure that scale down evaluation resumes. Defaults to `3m`.
	ScaleDownDelayAfterFailure pulumi.StringPtrInput `pulumi:"scaleDownDelayAfterFailure"`
	// How long a node should be unneeded before it is eligible for scale down. Defaults to `10m`.
	ScaleDownUnneeded pulumi.StringPtrInput `pulumi:"scaleDownUnneeded"`
	// How long an unready node should be unneeded before it is eligible for scale down. Defaults to `20m`.
	ScaleDownUnready pulumi.StringPtrInput `pulumi:"scaleDownUnready"`
	// Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down. Defaults to `0.5`.
	ScaleDownUtilizationThreshold pulumi.StringPtrInput `pulumi:"scaleDownUtilizationThreshold"`
	// How often the AKS Cluster should be re-evaluated for scale up/down. Defaults to `10s`.
	ScanInterval pulumi.StringPtrInput `pulumi:"scanInterval"`
	// If `true` cluster autoscaler will never delete nodes with pods with local storage, for example, EmptyDir or HostPath. Defaults to `true`.
	SkipNodesWithLocalStorage pulumi.BoolPtrInput `pulumi:"skipNodesWithLocalStorage"`
	// If `true` cluster autoscaler will never delete nodes with pods from kube-system (except for DaemonSet or mirror pods). Defaults to `true`.
	SkipNodesWithSystemPods pulumi.BoolPtrInput `pulumi:"skipNodesWithSystemPods"`
}

func (KubernetesClusterAutoScalerProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterAutoScalerProfile)(nil)).Elem()
}

func (i KubernetesClusterAutoScalerProfileArgs) ToKubernetesClusterAutoScalerProfileOutput() KubernetesClusterAutoScalerProfileOutput {
	return i.ToKubernetesClusterAutoScalerProfileOutputWithContext(context.Background())
}

func (i KubernetesClusterAutoScalerProfileArgs) ToKubernetesClusterAutoScalerProfileOutputWithContext(ctx context.Context) KubernetesClusterAutoScalerProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAutoScalerProfileOutput)
}

func (i KubernetesClusterAutoScalerProfileArgs) ToKubernetesClusterAutoScalerProfilePtrOutput() KubernetesClusterAutoScalerProfilePtrOutput {
	return i.ToKubernetesClusterAutoScalerProfilePtrOutputWithContext(context.Background())
}

func (i KubernetesClusterAutoScalerProfileArgs) ToKubernetesClusterAutoScalerProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterAutoScalerProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAutoScalerProfileOutput).ToKubernetesClusterAutoScalerProfilePtrOutputWithContext(ctx)
}

// KubernetesClusterAutoScalerProfilePtrInput is an input type that accepts KubernetesClusterAutoScalerProfileArgs, KubernetesClusterAutoScalerProfilePtr and KubernetesClusterAutoScalerProfilePtrOutput values.
// You can construct a concrete instance of `KubernetesClusterAutoScalerProfilePtrInput` via:
//
//	        KubernetesClusterAutoScalerProfileArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterAutoScalerProfilePtrInput interface {
	pulumi.Input

	ToKubernetesClusterAutoScalerProfilePtrOutput() KubernetesClusterAutoScalerProfilePtrOutput
	ToKubernetesClusterAutoScalerProfilePtrOutputWithContext(context.Context) KubernetesClusterAutoScalerProfilePtrOutput
}

type kubernetesClusterAutoScalerProfilePtrType KubernetesClusterAutoScalerProfileArgs

func KubernetesClusterAutoScalerProfilePtr(v *KubernetesClusterAutoScalerProfileArgs) KubernetesClusterAutoScalerProfilePtrInput {
	return (*kubernetesClusterAutoScalerProfilePtrType)(v)
}

func (*kubernetesClusterAutoScalerProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterAutoScalerProfile)(nil)).Elem()
}

func (i *kubernetesClusterAutoScalerProfilePtrType) ToKubernetesClusterAutoScalerProfilePtrOutput() KubernetesClusterAutoScalerProfilePtrOutput {
	return i.ToKubernetesClusterAutoScalerProfilePtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterAutoScalerProfilePtrType) ToKubernetesClusterAutoScalerProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterAutoScalerProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAutoScalerProfilePtrOutput)
}

type KubernetesClusterAutoScalerProfileOutput struct{ *pulumi.OutputState }

func (KubernetesClusterAutoScalerProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterAutoScalerProfile)(nil)).Elem()
}

func (o KubernetesClusterAutoScalerProfileOutput) ToKubernetesClusterAutoScalerProfileOutput() KubernetesClusterAutoScalerProfileOutput {
	return o
}

func (o KubernetesClusterAutoScalerProfileOutput) ToKubernetesClusterAutoScalerProfileOutputWithContext(ctx context.Context) KubernetesClusterAutoScalerProfileOutput {
	return o
}

func (o KubernetesClusterAutoScalerProfileOutput) ToKubernetesClusterAutoScalerProfilePtrOutput() KubernetesClusterAutoScalerProfilePtrOutput {
	return o.ToKubernetesClusterAutoScalerProfilePtrOutputWithContext(context.Background())
}

func (o KubernetesClusterAutoScalerProfileOutput) ToKubernetesClusterAutoScalerProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterAutoScalerProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterAutoScalerProfile) *KubernetesClusterAutoScalerProfile {
		return &v
	}).(KubernetesClusterAutoScalerProfilePtrOutput)
}

// Detect similar node groups and balance the number of nodes between them. Defaults to `false`.
func (o KubernetesClusterAutoScalerProfileOutput) BalanceSimilarNodeGroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoScalerProfile) *bool { return v.BalanceSimilarNodeGroups }).(pulumi.BoolPtrOutput)
}

// Maximum number of empty nodes that can be deleted at the same time. Defaults to `10`.
func (o KubernetesClusterAutoScalerProfileOutput) EmptyBulkDeleteMax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoScalerProfile) *string { return v.EmptyBulkDeleteMax }).(pulumi.StringPtrOutput)
}

// Expander to use. Possible values are `least-waste`, `priority`, `most-pods` and `random`. Defaults to `random`.
func (o KubernetesClusterAutoScalerProfileOutput) Expander() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoScalerProfile) *string { return v.Expander }).(pulumi.StringPtrOutput)
}

// Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node. Defaults to `600`.
func (o KubernetesClusterAutoScalerProfileOutput) MaxGracefulTerminationSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoScalerProfile) *string { return v.MaxGracefulTerminationSec }).(pulumi.StringPtrOutput)
}

// Maximum time the autoscaler waits for a node to be provisioned. Defaults to `15m`.
func (o KubernetesClusterAutoScalerProfileOutput) MaxNodeProvisioningTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoScalerProfile) *string { return v.MaxNodeProvisioningTime }).(pulumi.StringPtrOutput)
}

// Maximum Number of allowed unready nodes. Defaults to `3`.
func (o KubernetesClusterAutoScalerProfileOutput) MaxUnreadyNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoScalerProfile) *int { return v.MaxUnreadyNodes }).(pulumi.IntPtrOutput)
}

// Maximum percentage of unready nodes the cluster autoscaler will stop if the percentage is exceeded. Defaults to `45`.
func (o KubernetesClusterAutoScalerProfileOutput) MaxUnreadyPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoScalerProfile) *float64 { return v.MaxUnreadyPercentage }).(pulumi.Float64PtrOutput)
}

// For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. Defaults to `10s`.
func (o KubernetesClusterAutoScalerProfileOutput) NewPodScaleUpDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoScalerProfile) *string { return v.NewPodScaleUpDelay }).(pulumi.StringPtrOutput)
}

// How long after the scale up of AKS nodes the scale down evaluation resumes. Defaults to `10m`.
func (o KubernetesClusterAutoScalerProfileOutput) ScaleDownDelayAfterAdd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoScalerProfile) *string { return v.ScaleDownDelayAfterAdd }).(pulumi.StringPtrOutput)
}

// How long after node deletion that scale down evaluation resumes. Defaults to the value used for `scanInterval`.
func (o KubernetesClusterAutoScalerProfileOutput) ScaleDownDelayAfterDelete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoScalerProfile) *string { return v.ScaleDownDelayAfterDelete }).(pulumi.StringPtrOutput)
}

// How long after scale down failure that scale down evaluation resumes. Defaults to `3m`.
func (o KubernetesClusterAutoScalerProfileOutput) ScaleDownDelayAfterFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoScalerProfile) *string { return v.ScaleDownDelayAfterFailure }).(pulumi.StringPtrOutput)
}

// How long a node should be unneeded before it is eligible for scale down. Defaults to `10m`.
func (o KubernetesClusterAutoScalerProfileOutput) ScaleDownUnneeded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoScalerProfile) *string { return v.ScaleDownUnneeded }).(pulumi.StringPtrOutput)
}

// How long an unready node should be unneeded before it is eligible for scale down. Defaults to `20m`.
func (o KubernetesClusterAutoScalerProfileOutput) ScaleDownUnready() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoScalerProfile) *string { return v.ScaleDownUnready }).(pulumi.StringPtrOutput)
}

// Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down. Defaults to `0.5`.
func (o KubernetesClusterAutoScalerProfileOutput) ScaleDownUtilizationThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoScalerProfile) *string { return v.ScaleDownUtilizationThreshold }).(pulumi.StringPtrOutput)
}

// How often the AKS Cluster should be re-evaluated for scale up/down. Defaults to `10s`.
func (o KubernetesClusterAutoScalerProfileOutput) ScanInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoScalerProfile) *string { return v.ScanInterval }).(pulumi.StringPtrOutput)
}

// If `true` cluster autoscaler will never delete nodes with pods with local storage, for example, EmptyDir or HostPath. Defaults to `true`.
func (o KubernetesClusterAutoScalerProfileOutput) SkipNodesWithLocalStorage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoScalerProfile) *bool { return v.SkipNodesWithLocalStorage }).(pulumi.BoolPtrOutput)
}

// If `true` cluster autoscaler will never delete nodes with pods from kube-system (except for DaemonSet or mirror pods). Defaults to `true`.
func (o KubernetesClusterAutoScalerProfileOutput) SkipNodesWithSystemPods() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoScalerProfile) *bool { return v.SkipNodesWithSystemPods }).(pulumi.BoolPtrOutput)
}

type KubernetesClusterAutoScalerProfilePtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterAutoScalerProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterAutoScalerProfile)(nil)).Elem()
}

func (o KubernetesClusterAutoScalerProfilePtrOutput) ToKubernetesClusterAutoScalerProfilePtrOutput() KubernetesClusterAutoScalerProfilePtrOutput {
	return o
}

func (o KubernetesClusterAutoScalerProfilePtrOutput) ToKubernetesClusterAutoScalerProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterAutoScalerProfilePtrOutput {
	return o
}

func (o KubernetesClusterAutoScalerProfilePtrOutput) Elem() KubernetesClusterAutoScalerProfileOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoScalerProfile) KubernetesClusterAutoScalerProfile {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterAutoScalerProfile
		return ret
	}).(KubernetesClusterAutoScalerProfileOutput)
}

// Detect similar node groups and balance the number of nodes between them. Defaults to `false`.
func (o KubernetesClusterAutoScalerProfilePtrOutput) BalanceSimilarNodeGroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoScalerProfile) *bool {
		if v == nil {
			return nil
		}
		return v.BalanceSimilarNodeGroups
	}).(pulumi.BoolPtrOutput)
}

// Maximum number of empty nodes that can be deleted at the same time. Defaults to `10`.
func (o KubernetesClusterAutoScalerProfilePtrOutput) EmptyBulkDeleteMax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.EmptyBulkDeleteMax
	}).(pulumi.StringPtrOutput)
}

// Expander to use. Possible values are `least-waste`, `priority`, `most-pods` and `random`. Defaults to `random`.
func (o KubernetesClusterAutoScalerProfilePtrOutput) Expander() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.Expander
	}).(pulumi.StringPtrOutput)
}

// Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node. Defaults to `600`.
func (o KubernetesClusterAutoScalerProfilePtrOutput) MaxGracefulTerminationSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.MaxGracefulTerminationSec
	}).(pulumi.StringPtrOutput)
}

// Maximum time the autoscaler waits for a node to be provisioned. Defaults to `15m`.
func (o KubernetesClusterAutoScalerProfilePtrOutput) MaxNodeProvisioningTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.MaxNodeProvisioningTime
	}).(pulumi.StringPtrOutput)
}

// Maximum Number of allowed unready nodes. Defaults to `3`.
func (o KubernetesClusterAutoScalerProfilePtrOutput) MaxUnreadyNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoScalerProfile) *int {
		if v == nil {
			return nil
		}
		return v.MaxUnreadyNodes
	}).(pulumi.IntPtrOutput)
}

// Maximum percentage of unready nodes the cluster autoscaler will stop if the percentage is exceeded. Defaults to `45`.
func (o KubernetesClusterAutoScalerProfilePtrOutput) MaxUnreadyPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoScalerProfile) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxUnreadyPercentage
	}).(pulumi.Float64PtrOutput)
}

// For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. Defaults to `10s`.
func (o KubernetesClusterAutoScalerProfilePtrOutput) NewPodScaleUpDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.NewPodScaleUpDelay
	}).(pulumi.StringPtrOutput)
}

// How long after the scale up of AKS nodes the scale down evaluation resumes. Defaults to `10m`.
func (o KubernetesClusterAutoScalerProfilePtrOutput) ScaleDownDelayAfterAdd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.ScaleDownDelayAfterAdd
	}).(pulumi.StringPtrOutput)
}

// How long after node deletion that scale down evaluation resumes. Defaults to the value used for `scanInterval`.
func (o KubernetesClusterAutoScalerProfilePtrOutput) ScaleDownDelayAfterDelete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.ScaleDownDelayAfterDelete
	}).(pulumi.StringPtrOutput)
}

// How long after scale down failure that scale down evaluation resumes. Defaults to `3m`.
func (o KubernetesClusterAutoScalerProfilePtrOutput) ScaleDownDelayAfterFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.ScaleDownDelayAfterFailure
	}).(pulumi.StringPtrOutput)
}

// How long a node should be unneeded before it is eligible for scale down. Defaults to `10m`.
func (o KubernetesClusterAutoScalerProfilePtrOutput) ScaleDownUnneeded() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.ScaleDownUnneeded
	}).(pulumi.StringPtrOutput)
}

// How long an unready node should be unneeded before it is eligible for scale down. Defaults to `20m`.
func (o KubernetesClusterAutoScalerProfilePtrOutput) ScaleDownUnready() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.ScaleDownUnready
	}).(pulumi.StringPtrOutput)
}

// Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down. Defaults to `0.5`.
func (o KubernetesClusterAutoScalerProfilePtrOutput) ScaleDownUtilizationThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.ScaleDownUtilizationThreshold
	}).(pulumi.StringPtrOutput)
}

// How often the AKS Cluster should be re-evaluated for scale up/down. Defaults to `10s`.
func (o KubernetesClusterAutoScalerProfilePtrOutput) ScanInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.ScanInterval
	}).(pulumi.StringPtrOutput)
}

// If `true` cluster autoscaler will never delete nodes with pods with local storage, for example, EmptyDir or HostPath. Defaults to `true`.
func (o KubernetesClusterAutoScalerProfilePtrOutput) SkipNodesWithLocalStorage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoScalerProfile) *bool {
		if v == nil {
			return nil
		}
		return v.SkipNodesWithLocalStorage
	}).(pulumi.BoolPtrOutput)
}

// If `true` cluster autoscaler will never delete nodes with pods from kube-system (except for DaemonSet or mirror pods). Defaults to `true`.
func (o KubernetesClusterAutoScalerProfilePtrOutput) SkipNodesWithSystemPods() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoScalerProfile) *bool {
		if v == nil {
			return nil
		}
		return v.SkipNodesWithSystemPods
	}).(pulumi.BoolPtrOutput)
}

type KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl struct {
	// A list of Object IDs of Azure Active Directory Groups which should have Admin Role on the Cluster.
	AdminGroupObjectIds []string `pulumi:"adminGroupObjectIds"`
	// Is Role Based Access Control based on Azure AD enabled?
	AzureRbacEnabled *bool `pulumi:"azureRbacEnabled"`
	// The Client ID of an Azure Active Directory Application.
	ClientAppId *string `pulumi:"clientAppId"`
	// Is the Azure Active Directory integration Managed, meaning that Azure will create/manage the Service Principal used for integration.
	Managed *bool `pulumi:"managed"`
	// The Server ID of an Azure Active Directory Application.
	ServerAppId *string `pulumi:"serverAppId"`
	// The Server Secret of an Azure Active Directory Application.
	ServerAppSecret *string `pulumi:"serverAppSecret"`
	// The Tenant ID used for Azure Active Directory Application. If this isn't specified the Tenant ID of the current Subscription is used.
	TenantId *string `pulumi:"tenantId"`
}

// KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlInput is an input type that accepts KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArgs and KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput values.
// You can construct a concrete instance of `KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlInput` via:
//
//	KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArgs{...}
type KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlInput interface {
	pulumi.Input

	ToKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput() KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput
	ToKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutputWithContext(context.Context) KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput
}

type KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArgs struct {
	// A list of Object IDs of Azure Active Directory Groups which should have Admin Role on the Cluster.
	AdminGroupObjectIds pulumi.StringArrayInput `pulumi:"adminGroupObjectIds"`
	// Is Role Based Access Control based on Azure AD enabled?
	AzureRbacEnabled pulumi.BoolPtrInput `pulumi:"azureRbacEnabled"`
	// The Client ID of an Azure Active Directory Application.
	ClientAppId pulumi.StringPtrInput `pulumi:"clientAppId"`
	// Is the Azure Active Directory integration Managed, meaning that Azure will create/manage the Service Principal used for integration.
	Managed pulumi.BoolPtrInput `pulumi:"managed"`
	// The Server ID of an Azure Active Directory Application.
	ServerAppId pulumi.StringPtrInput `pulumi:"serverAppId"`
	// The Server Secret of an Azure Active Directory Application.
	ServerAppSecret pulumi.StringPtrInput `pulumi:"serverAppSecret"`
	// The Tenant ID used for Azure Active Directory Application. If this isn't specified the Tenant ID of the current Subscription is used.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl)(nil)).Elem()
}

func (i KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArgs) ToKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput() KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput {
	return i.ToKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutputWithContext(context.Background())
}

func (i KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArgs) ToKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutputWithContext(ctx context.Context) KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput)
}

func (i KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArgs) ToKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput() KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput {
	return i.ToKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArgs) ToKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutputWithContext(ctx context.Context) KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput).ToKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutputWithContext(ctx)
}

// KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrInput is an input type that accepts KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArgs, KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtr and KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrInput` via:
//
//	        KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrInput interface {
	pulumi.Input

	ToKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput() KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput
	ToKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutputWithContext(context.Context) KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput
}

type kubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrType KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArgs

func KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtr(v *KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArgs) KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrInput {
	return (*kubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrType)(v)
}

func (*kubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl)(nil)).Elem()
}

func (i *kubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrType) ToKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput() KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput {
	return i.ToKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrType) ToKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutputWithContext(ctx context.Context) KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput)
}

type KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput struct{ *pulumi.OutputState }

func (KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl)(nil)).Elem()
}

func (o KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput) ToKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput() KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput {
	return o
}

func (o KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput) ToKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutputWithContext(ctx context.Context) KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput {
	return o
}

func (o KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput) ToKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput() KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput {
	return o.ToKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput) ToKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutputWithContext(ctx context.Context) KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl) *KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl {
		return &v
	}).(KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput)
}

// A list of Object IDs of Azure Active Directory Groups which should have Admin Role on the Cluster.
func (o KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput) AdminGroupObjectIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl) []string {
		return v.AdminGroupObjectIds
	}).(pulumi.StringArrayOutput)
}

// Is Role Based Access Control based on Azure AD enabled?
func (o KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput) AzureRbacEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl) *bool { return v.AzureRbacEnabled }).(pulumi.BoolPtrOutput)
}

// The Client ID of an Azure Active Directory Application.
func (o KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput) ClientAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl) *string { return v.ClientAppId }).(pulumi.StringPtrOutput)
}

// Is the Azure Active Directory integration Managed, meaning that Azure will create/manage the Service Principal used for integration.
func (o KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput) Managed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl) *bool { return v.Managed }).(pulumi.BoolPtrOutput)
}

// The Server ID of an Azure Active Directory Application.
func (o KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput) ServerAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl) *string { return v.ServerAppId }).(pulumi.StringPtrOutput)
}

// The Server Secret of an Azure Active Directory Application.
func (o KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput) ServerAppSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl) *string { return v.ServerAppSecret }).(pulumi.StringPtrOutput)
}

// The Tenant ID used for Azure Active Directory Application. If this isn't specified the Tenant ID of the current Subscription is used.
func (o KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl)(nil)).Elem()
}

func (o KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput) ToKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput() KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput {
	return o
}

func (o KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput) ToKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutputWithContext(ctx context.Context) KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput {
	return o
}

func (o KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput) Elem() KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput {
	return o.ApplyT(func(v *KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl) KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl
		return ret
	}).(KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput)
}

// A list of Object IDs of Azure Active Directory Groups which should have Admin Role on the Cluster.
func (o KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput) AdminGroupObjectIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl) []string {
		if v == nil {
			return nil
		}
		return v.AdminGroupObjectIds
	}).(pulumi.StringArrayOutput)
}

// Is Role Based Access Control based on Azure AD enabled?
func (o KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput) AzureRbacEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl) *bool {
		if v == nil {
			return nil
		}
		return v.AzureRbacEnabled
	}).(pulumi.BoolPtrOutput)
}

// The Client ID of an Azure Active Directory Application.
func (o KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput) ClientAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl) *string {
		if v == nil {
			return nil
		}
		return v.ClientAppId
	}).(pulumi.StringPtrOutput)
}

// Is the Azure Active Directory integration Managed, meaning that Azure will create/manage the Service Principal used for integration.
func (o KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput) Managed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl) *bool {
		if v == nil {
			return nil
		}
		return v.Managed
	}).(pulumi.BoolPtrOutput)
}

// The Server ID of an Azure Active Directory Application.
func (o KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput) ServerAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl) *string {
		if v == nil {
			return nil
		}
		return v.ServerAppId
	}).(pulumi.StringPtrOutput)
}

// The Server Secret of an Azure Active Directory Application.
func (o KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput) ServerAppSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl) *string {
		if v == nil {
			return nil
		}
		return v.ServerAppSecret
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID used for Azure Active Directory Application. If this isn't specified the Tenant ID of the current Subscription is used.
func (o KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterConfidentialComputing struct {
	// Should the SGX quote helper be enabled?
	SgxQuoteHelperEnabled bool `pulumi:"sgxQuoteHelperEnabled"`
}

// KubernetesClusterConfidentialComputingInput is an input type that accepts KubernetesClusterConfidentialComputingArgs and KubernetesClusterConfidentialComputingOutput values.
// You can construct a concrete instance of `KubernetesClusterConfidentialComputingInput` via:
//
//	KubernetesClusterConfidentialComputingArgs{...}
type KubernetesClusterConfidentialComputingInput interface {
	pulumi.Input

	ToKubernetesClusterConfidentialComputingOutput() KubernetesClusterConfidentialComputingOutput
	ToKubernetesClusterConfidentialComputingOutputWithContext(context.Context) KubernetesClusterConfidentialComputingOutput
}

type KubernetesClusterConfidentialComputingArgs struct {
	// Should the SGX quote helper be enabled?
	SgxQuoteHelperEnabled pulumi.BoolInput `pulumi:"sgxQuoteHelperEnabled"`
}

func (KubernetesClusterConfidentialComputingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterConfidentialComputing)(nil)).Elem()
}

func (i KubernetesClusterConfidentialComputingArgs) ToKubernetesClusterConfidentialComputingOutput() KubernetesClusterConfidentialComputingOutput {
	return i.ToKubernetesClusterConfidentialComputingOutputWithContext(context.Background())
}

func (i KubernetesClusterConfidentialComputingArgs) ToKubernetesClusterConfidentialComputingOutputWithContext(ctx context.Context) KubernetesClusterConfidentialComputingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterConfidentialComputingOutput)
}

func (i KubernetesClusterConfidentialComputingArgs) ToKubernetesClusterConfidentialComputingPtrOutput() KubernetesClusterConfidentialComputingPtrOutput {
	return i.ToKubernetesClusterConfidentialComputingPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterConfidentialComputingArgs) ToKubernetesClusterConfidentialComputingPtrOutputWithContext(ctx context.Context) KubernetesClusterConfidentialComputingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterConfidentialComputingOutput).ToKubernetesClusterConfidentialComputingPtrOutputWithContext(ctx)
}

// KubernetesClusterConfidentialComputingPtrInput is an input type that accepts KubernetesClusterConfidentialComputingArgs, KubernetesClusterConfidentialComputingPtr and KubernetesClusterConfidentialComputingPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterConfidentialComputingPtrInput` via:
//
//	        KubernetesClusterConfidentialComputingArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterConfidentialComputingPtrInput interface {
	pulumi.Input

	ToKubernetesClusterConfidentialComputingPtrOutput() KubernetesClusterConfidentialComputingPtrOutput
	ToKubernetesClusterConfidentialComputingPtrOutputWithContext(context.Context) KubernetesClusterConfidentialComputingPtrOutput
}

type kubernetesClusterConfidentialComputingPtrType KubernetesClusterConfidentialComputingArgs

func KubernetesClusterConfidentialComputingPtr(v *KubernetesClusterConfidentialComputingArgs) KubernetesClusterConfidentialComputingPtrInput {
	return (*kubernetesClusterConfidentialComputingPtrType)(v)
}

func (*kubernetesClusterConfidentialComputingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterConfidentialComputing)(nil)).Elem()
}

func (i *kubernetesClusterConfidentialComputingPtrType) ToKubernetesClusterConfidentialComputingPtrOutput() KubernetesClusterConfidentialComputingPtrOutput {
	return i.ToKubernetesClusterConfidentialComputingPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterConfidentialComputingPtrType) ToKubernetesClusterConfidentialComputingPtrOutputWithContext(ctx context.Context) KubernetesClusterConfidentialComputingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterConfidentialComputingPtrOutput)
}

type KubernetesClusterConfidentialComputingOutput struct{ *pulumi.OutputState }

func (KubernetesClusterConfidentialComputingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterConfidentialComputing)(nil)).Elem()
}

func (o KubernetesClusterConfidentialComputingOutput) ToKubernetesClusterConfidentialComputingOutput() KubernetesClusterConfidentialComputingOutput {
	return o
}

func (o KubernetesClusterConfidentialComputingOutput) ToKubernetesClusterConfidentialComputingOutputWithContext(ctx context.Context) KubernetesClusterConfidentialComputingOutput {
	return o
}

func (o KubernetesClusterConfidentialComputingOutput) ToKubernetesClusterConfidentialComputingPtrOutput() KubernetesClusterConfidentialComputingPtrOutput {
	return o.ToKubernetesClusterConfidentialComputingPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterConfidentialComputingOutput) ToKubernetesClusterConfidentialComputingPtrOutputWithContext(ctx context.Context) KubernetesClusterConfidentialComputingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterConfidentialComputing) *KubernetesClusterConfidentialComputing {
		return &v
	}).(KubernetesClusterConfidentialComputingPtrOutput)
}

// Should the SGX quote helper be enabled?
func (o KubernetesClusterConfidentialComputingOutput) SgxQuoteHelperEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v KubernetesClusterConfidentialComputing) bool { return v.SgxQuoteHelperEnabled }).(pulumi.BoolOutput)
}

type KubernetesClusterConfidentialComputingPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterConfidentialComputingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterConfidentialComputing)(nil)).Elem()
}

func (o KubernetesClusterConfidentialComputingPtrOutput) ToKubernetesClusterConfidentialComputingPtrOutput() KubernetesClusterConfidentialComputingPtrOutput {
	return o
}

func (o KubernetesClusterConfidentialComputingPtrOutput) ToKubernetesClusterConfidentialComputingPtrOutputWithContext(ctx context.Context) KubernetesClusterConfidentialComputingPtrOutput {
	return o
}

func (o KubernetesClusterConfidentialComputingPtrOutput) Elem() KubernetesClusterConfidentialComputingOutput {
	return o.ApplyT(func(v *KubernetesClusterConfidentialComputing) KubernetesClusterConfidentialComputing {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterConfidentialComputing
		return ret
	}).(KubernetesClusterConfidentialComputingOutput)
}

// Should the SGX quote helper be enabled?
func (o KubernetesClusterConfidentialComputingPtrOutput) SgxQuoteHelperEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterConfidentialComputing) *bool {
		if v == nil {
			return nil
		}
		return &v.SgxQuoteHelperEnabled
	}).(pulumi.BoolPtrOutput)
}

type KubernetesClusterDefaultNodePool struct {
	// Specifies the ID of the Capacity Reservation Group within which this AKS Cluster should be created. Changing this forces a new resource to be created.
	CapacityReservationGroupId *string `pulumi:"capacityReservationGroupId"`
	// Specifies whether to trust a Custom CA.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/CustomCATrustPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/custom-certificate-authority) for more information.
	CustomCaTrustEnabled *bool `pulumi:"customCaTrustEnabled"`
	// Should [the Kubernetes Auto Scaler](https://docs.microsoft.com/azure/aks/cluster-autoscaler) be enabled for this Node Pool?
	//
	// > **Note:** This requires that the `type` is set to `VirtualMachineScaleSets`.
	//
	// > **Note:** If you're using AutoScaling, you may wish to use [`ignoreChanges` functionality](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) to ignore changes to the `nodeCount` field.
	EnableAutoScaling *bool `pulumi:"enableAutoScaling"`
	// Should the nodes in the Default Node Pool have host encryption enabled? `temporaryNameForRotation` must be specified when changing this property.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/EnableEncryptionAtHostPreview` is enabled and the Resource Provider is re-registered.
	EnableHostEncryption *bool `pulumi:"enableHostEncryption"`
	// Should nodes in this Node Pool have a Public IP Address? `temporaryNameForRotation` must be specified when changing this property.
	EnableNodePublicIp *bool `pulumi:"enableNodePublicIp"`
	// Should the nodes in this Node Pool have Federal Information Processing Standard enabled? `temporaryNameForRotation` must be specified when changing this block.
	FipsEnabled *bool `pulumi:"fipsEnabled"`
	// Specifies the GPU MIG instance profile for supported GPU VM SKU. The allowed values are `MIG1g`, `MIG2g`, `MIG3g`, `MIG4g` and `MIG7g`. Changing this forces a new resource to be created.
	GpuInstance *string `pulumi:"gpuInstance"`
	// Specifies the ID of the Host Group within which this AKS Cluster should be created. Changing this forces a new resource to be created.
	HostGroupId *string `pulumi:"hostGroupId"`
	// A `kubeletConfig` block as defined below. `temporaryNameForRotation` must be specified when changing this block.
	KubeletConfig *KubernetesClusterDefaultNodePoolKubeletConfig `pulumi:"kubeletConfig"`
	// The type of disk used by kubelet. Possible values are `OS` and `Temporary`.
	KubeletDiskType *string `pulumi:"kubeletDiskType"`
	// A `linuxOsConfig` block as defined below. `temporaryNameForRotation` must be specified when changing this block.
	LinuxOsConfig *KubernetesClusterDefaultNodePoolLinuxOsConfig `pulumi:"linuxOsConfig"`
	// The maximum number of nodes which should exist in this Node Pool. If specified this must be between `1` and `1000`.
	MaxCount *int `pulumi:"maxCount"`
	// The maximum number of pods that can run on each agent. `temporaryNameForRotation` must be specified when changing this property.
	MaxPods *int `pulumi:"maxPods"`
	// A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It cannot be specified for Windows nodes and must be a static string (i.e. will be printed raw and not executed as a script). Changing this forces a new resource to be created.
	MessageOfTheDay *string `pulumi:"messageOfTheDay"`
	// The minimum number of nodes which should exist in this Node Pool. If specified this must be between `1` and `1000`.
	MinCount *int `pulumi:"minCount"`
	// The name which should be used for the default Kubernetes Node Pool.
	Name string `pulumi:"name"`
	// The initial number of nodes which should exist in this Node Pool. If specified this must be between `1` and `1000` and between `minCount` and `maxCount`.
	//
	// > **Note:** If specified you may wish to use [`ignoreChanges` functionality](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) to ignore changes to this field.
	//
	// > **Note:** If `enableAutoScaling` is set to `false` both `minCount` and `maxCount` fields need to be set to `null` or omitted from the configuration.
	NodeCount *int `pulumi:"nodeCount"`
	// A map of Kubernetes labels which should be applied to nodes in the Default Node Pool.
	NodeLabels map[string]string `pulumi:"nodeLabels"`
	// A `nodeNetworkProfile` block as documented below.
	NodeNetworkProfile *KubernetesClusterDefaultNodePoolNodeNetworkProfile `pulumi:"nodeNetworkProfile"`
	// Resource ID for the Public IP Addresses Prefix for the nodes in this Node Pool. `enableNodePublicIp` should be `true`. Changing this forces a new resource to be created.
	NodePublicIpPrefixId *string `pulumi:"nodePublicIpPrefixId"`
	// A list of the taints added to new nodes during node pool create and scale. `temporaryNameForRotation` must be specified when changing this property.
	NodeTaints []string `pulumi:"nodeTaints"`
	// Enabling this option will taint default node pool with `CriticalAddonsOnly=true:NoSchedule` taint. `temporaryNameForRotation` must be specified when changing this property.
	OnlyCriticalAddonsEnabled *bool `pulumi:"onlyCriticalAddonsEnabled"`
	// Version of Kubernetes used for the Agents. If not specified, the default node pool will be created with the version specified by `kubernetesVersion`. If both are unspecified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as `1.22` are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in [the documentation](https://docs.microsoft.com/en-us/azure/aks/supported-kubernetes-versions?tabs=azure-cli#alias-minor-version).
	//
	// > **Note:** This version must be supported by the Kubernetes Cluster - as such the version of Kubernetes used on the Cluster/Control Plane may need to be upgraded first.
	OrchestratorVersion *string `pulumi:"orchestratorVersion"`
	// The size of the OS Disk which should be used for each agent in the Node Pool. `temporaryNameForRotation` must be specified when attempting a change.
	OsDiskSizeGb *int `pulumi:"osDiskSizeGb"`
	// The type of disk which should be used for the Operating System. Possible values are `Ephemeral` and `Managed`. Defaults to `Managed`. `temporaryNameForRotation` must be specified when attempting a change.
	OsDiskType *string `pulumi:"osDiskType"`
	// Specifies the OS SKU used by the agent pool. Possible values are `AzureLinux`, `CBLMariner`, `Mariner`, `Ubuntu`, `Windows2019` and `Windows2022`. If not specified, the default is `Ubuntu` if OSType=Linux or `Windows2019` if OSType=Windows. And the default Windows OSSKU will be changed to `Windows2022` after Windows2019 is deprecated. `temporaryNameForRotation` must be specified when attempting a change.
	OsSku *string `pulumi:"osSku"`
	// The ID of the Subnet where the pods in the default Node Pool should exist.
	PodSubnetId *string `pulumi:"podSubnetId"`
	// The ID of the Proximity Placement Group. Changing this forces a new resource to be created.
	ProximityPlacementGroupId *string `pulumi:"proximityPlacementGroupId"`
	// Specifies the autoscaling behaviour of the Kubernetes Cluster. Allowed values are `Delete` and `Deallocate`. Defaults to `Delete`.
	ScaleDownMode *string `pulumi:"scaleDownMode"`
	// The ID of the Snapshot which should be used to create this default Node Pool. `temporaryNameForRotation` must be specified when changing this property.
	SnapshotId *string `pulumi:"snapshotId"`
	// A mapping of tags to assign to the Node Pool.
	//
	// > At this time there's a bug in the AKS API where Tags for a Node Pool are not stored in the correct case - you may wish to use `ignoreChanges` functionality to ignore changes to the casing until this is fixed in the AKS API.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the name of the temporary node pool used to cycle the default node pool for VM resizing.
	TemporaryNameForRotation *string `pulumi:"temporaryNameForRotation"`
	// The type of Node Pool which should be created. Possible values are `AvailabilitySet` and `VirtualMachineScaleSets`. Defaults to `VirtualMachineScaleSets`. Changing this forces a new resource to be created.
	//
	// > **Note:** When creating a cluster that supports multiple node pools, the cluster must use `VirtualMachineScaleSets`. For more information on the limitations of clusters using multiple node pools see [the documentation](https://learn.microsoft.com/en-us/azure/aks/use-multiple-node-pools#limitations).
	Type *string `pulumi:"type"`
	// Used to specify whether the UltraSSD is enabled in the Default Node Pool. Defaults to `false`. See [the documentation](https://docs.microsoft.com/azure/aks/use-ultra-disks) for more information. `temporaryNameForRotation` must be specified when attempting a change.
	UltraSsdEnabled *bool `pulumi:"ultraSsdEnabled"`
	// A `upgradeSettings` block as documented below.
	UpgradeSettings *KubernetesClusterDefaultNodePoolUpgradeSettings `pulumi:"upgradeSettings"`
	// The size of the Virtual Machine, such as `Standard_DS2_v2`. `temporaryNameForRotation` must be specified when attempting a resize.
	VmSize string `pulumi:"vmSize"`
	// The ID of a Subnet where the Kubernetes Node Pool should exist.
	//
	// > **Note:** A Route Table must be configured on this Subnet.
	VnetSubnetId *string `pulumi:"vnetSubnetId"`
	// Specifies the workload runtime used by the node pool. Possible values are `OCIContainer` and `KataMshvVmIsolation`.
	//
	// > **Note:** Pod Sandboxing / KataVM Isolation node pools are in Public Preview - more information and details on how to opt into the preview can be found in [this article](https://learn.microsoft.com/azure/aks/use-pod-sandboxing)
	WorkloadRuntime *string `pulumi:"workloadRuntime"`
	// Specifies a list of Availability Zones in which this Kubernetes Cluster should be located. `temporaryNameForRotation` must be specified when changing this property.
	//
	// > **Note:** This requires that the `type` is set to `VirtualMachineScaleSets` and that `loadBalancerSku` is set to `standard`.
	Zones []string `pulumi:"zones"`
}

// KubernetesClusterDefaultNodePoolInput is an input type that accepts KubernetesClusterDefaultNodePoolArgs and KubernetesClusterDefaultNodePoolOutput values.
// You can construct a concrete instance of `KubernetesClusterDefaultNodePoolInput` via:
//
//	KubernetesClusterDefaultNodePoolArgs{...}
type KubernetesClusterDefaultNodePoolInput interface {
	pulumi.Input

	ToKubernetesClusterDefaultNodePoolOutput() KubernetesClusterDefaultNodePoolOutput
	ToKubernetesClusterDefaultNodePoolOutputWithContext(context.Context) KubernetesClusterDefaultNodePoolOutput
}

type KubernetesClusterDefaultNodePoolArgs struct {
	// Specifies the ID of the Capacity Reservation Group within which this AKS Cluster should be created. Changing this forces a new resource to be created.
	CapacityReservationGroupId pulumi.StringPtrInput `pulumi:"capacityReservationGroupId"`
	// Specifies whether to trust a Custom CA.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/CustomCATrustPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/custom-certificate-authority) for more information.
	CustomCaTrustEnabled pulumi.BoolPtrInput `pulumi:"customCaTrustEnabled"`
	// Should [the Kubernetes Auto Scaler](https://docs.microsoft.com/azure/aks/cluster-autoscaler) be enabled for this Node Pool?
	//
	// > **Note:** This requires that the `type` is set to `VirtualMachineScaleSets`.
	//
	// > **Note:** If you're using AutoScaling, you may wish to use [`ignoreChanges` functionality](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) to ignore changes to the `nodeCount` field.
	EnableAutoScaling pulumi.BoolPtrInput `pulumi:"enableAutoScaling"`
	// Should the nodes in the Default Node Pool have host encryption enabled? `temporaryNameForRotation` must be specified when changing this property.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/EnableEncryptionAtHostPreview` is enabled and the Resource Provider is re-registered.
	EnableHostEncryption pulumi.BoolPtrInput `pulumi:"enableHostEncryption"`
	// Should nodes in this Node Pool have a Public IP Address? `temporaryNameForRotation` must be specified when changing this property.
	EnableNodePublicIp pulumi.BoolPtrInput `pulumi:"enableNodePublicIp"`
	// Should the nodes in this Node Pool have Federal Information Processing Standard enabled? `temporaryNameForRotation` must be specified when changing this block.
	FipsEnabled pulumi.BoolPtrInput `pulumi:"fipsEnabled"`
	// Specifies the GPU MIG instance profile for supported GPU VM SKU. The allowed values are `MIG1g`, `MIG2g`, `MIG3g`, `MIG4g` and `MIG7g`. Changing this forces a new resource to be created.
	GpuInstance pulumi.StringPtrInput `pulumi:"gpuInstance"`
	// Specifies the ID of the Host Group within which this AKS Cluster should be created. Changing this forces a new resource to be created.
	HostGroupId pulumi.StringPtrInput `pulumi:"hostGroupId"`
	// A `kubeletConfig` block as defined below. `temporaryNameForRotation` must be specified when changing this block.
	KubeletConfig KubernetesClusterDefaultNodePoolKubeletConfigPtrInput `pulumi:"kubeletConfig"`
	// The type of disk used by kubelet. Possible values are `OS` and `Temporary`.
	KubeletDiskType pulumi.StringPtrInput `pulumi:"kubeletDiskType"`
	// A `linuxOsConfig` block as defined below. `temporaryNameForRotation` must be specified when changing this block.
	LinuxOsConfig KubernetesClusterDefaultNodePoolLinuxOsConfigPtrInput `pulumi:"linuxOsConfig"`
	// The maximum number of nodes which should exist in this Node Pool. If specified this must be between `1` and `1000`.
	MaxCount pulumi.IntPtrInput `pulumi:"maxCount"`
	// The maximum number of pods that can run on each agent. `temporaryNameForRotation` must be specified when changing this property.
	MaxPods pulumi.IntPtrInput `pulumi:"maxPods"`
	// A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It cannot be specified for Windows nodes and must be a static string (i.e. will be printed raw and not executed as a script). Changing this forces a new resource to be created.
	MessageOfTheDay pulumi.StringPtrInput `pulumi:"messageOfTheDay"`
	// The minimum number of nodes which should exist in this Node Pool. If specified this must be between `1` and `1000`.
	MinCount pulumi.IntPtrInput `pulumi:"minCount"`
	// The name which should be used for the default Kubernetes Node Pool.
	Name pulumi.StringInput `pulumi:"name"`
	// The initial number of nodes which should exist in this Node Pool. If specified this must be between `1` and `1000` and between `minCount` and `maxCount`.
	//
	// > **Note:** If specified you may wish to use [`ignoreChanges` functionality](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) to ignore changes to this field.
	//
	// > **Note:** If `enableAutoScaling` is set to `false` both `minCount` and `maxCount` fields need to be set to `null` or omitted from the configuration.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
	// A map of Kubernetes labels which should be applied to nodes in the Default Node Pool.
	NodeLabels pulumi.StringMapInput `pulumi:"nodeLabels"`
	// A `nodeNetworkProfile` block as documented below.
	NodeNetworkProfile KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrInput `pulumi:"nodeNetworkProfile"`
	// Resource ID for the Public IP Addresses Prefix for the nodes in this Node Pool. `enableNodePublicIp` should be `true`. Changing this forces a new resource to be created.
	NodePublicIpPrefixId pulumi.StringPtrInput `pulumi:"nodePublicIpPrefixId"`
	// A list of the taints added to new nodes during node pool create and scale. `temporaryNameForRotation` must be specified when changing this property.
	NodeTaints pulumi.StringArrayInput `pulumi:"nodeTaints"`
	// Enabling this option will taint default node pool with `CriticalAddonsOnly=true:NoSchedule` taint. `temporaryNameForRotation` must be specified when changing this property.
	OnlyCriticalAddonsEnabled pulumi.BoolPtrInput `pulumi:"onlyCriticalAddonsEnabled"`
	// Version of Kubernetes used for the Agents. If not specified, the default node pool will be created with the version specified by `kubernetesVersion`. If both are unspecified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as `1.22` are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in [the documentation](https://docs.microsoft.com/en-us/azure/aks/supported-kubernetes-versions?tabs=azure-cli#alias-minor-version).
	//
	// > **Note:** This version must be supported by the Kubernetes Cluster - as such the version of Kubernetes used on the Cluster/Control Plane may need to be upgraded first.
	OrchestratorVersion pulumi.StringPtrInput `pulumi:"orchestratorVersion"`
	// The size of the OS Disk which should be used for each agent in the Node Pool. `temporaryNameForRotation` must be specified when attempting a change.
	OsDiskSizeGb pulumi.IntPtrInput `pulumi:"osDiskSizeGb"`
	// The type of disk which should be used for the Operating System. Possible values are `Ephemeral` and `Managed`. Defaults to `Managed`. `temporaryNameForRotation` must be specified when attempting a change.
	OsDiskType pulumi.StringPtrInput `pulumi:"osDiskType"`
	// Specifies the OS SKU used by the agent pool. Possible values are `AzureLinux`, `CBLMariner`, `Mariner`, `Ubuntu`, `Windows2019` and `Windows2022`. If not specified, the default is `Ubuntu` if OSType=Linux or `Windows2019` if OSType=Windows. And the default Windows OSSKU will be changed to `Windows2022` after Windows2019 is deprecated. `temporaryNameForRotation` must be specified when attempting a change.
	OsSku pulumi.StringPtrInput `pulumi:"osSku"`
	// The ID of the Subnet where the pods in the default Node Pool should exist.
	PodSubnetId pulumi.StringPtrInput `pulumi:"podSubnetId"`
	// The ID of the Proximity Placement Group. Changing this forces a new resource to be created.
	ProximityPlacementGroupId pulumi.StringPtrInput `pulumi:"proximityPlacementGroupId"`
	// Specifies the autoscaling behaviour of the Kubernetes Cluster. Allowed values are `Delete` and `Deallocate`. Defaults to `Delete`.
	ScaleDownMode pulumi.StringPtrInput `pulumi:"scaleDownMode"`
	// The ID of the Snapshot which should be used to create this default Node Pool. `temporaryNameForRotation` must be specified when changing this property.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// A mapping of tags to assign to the Node Pool.
	//
	// > At this time there's a bug in the AKS API where Tags for a Node Pool are not stored in the correct case - you may wish to use `ignoreChanges` functionality to ignore changes to the casing until this is fixed in the AKS API.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Specifies the name of the temporary node pool used to cycle the default node pool for VM resizing.
	TemporaryNameForRotation pulumi.StringPtrInput `pulumi:"temporaryNameForRotation"`
	// The type of Node Pool which should be created. Possible values are `AvailabilitySet` and `VirtualMachineScaleSets`. Defaults to `VirtualMachineScaleSets`. Changing this forces a new resource to be created.
	//
	// > **Note:** When creating a cluster that supports multiple node pools, the cluster must use `VirtualMachineScaleSets`. For more information on the limitations of clusters using multiple node pools see [the documentation](https://learn.microsoft.com/en-us/azure/aks/use-multiple-node-pools#limitations).
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Used to specify whether the UltraSSD is enabled in the Default Node Pool. Defaults to `false`. See [the documentation](https://docs.microsoft.com/azure/aks/use-ultra-disks) for more information. `temporaryNameForRotation` must be specified when attempting a change.
	UltraSsdEnabled pulumi.BoolPtrInput `pulumi:"ultraSsdEnabled"`
	// A `upgradeSettings` block as documented below.
	UpgradeSettings KubernetesClusterDefaultNodePoolUpgradeSettingsPtrInput `pulumi:"upgradeSettings"`
	// The size of the Virtual Machine, such as `Standard_DS2_v2`. `temporaryNameForRotation` must be specified when attempting a resize.
	VmSize pulumi.StringInput `pulumi:"vmSize"`
	// The ID of a Subnet where the Kubernetes Node Pool should exist.
	//
	// > **Note:** A Route Table must be configured on this Subnet.
	VnetSubnetId pulumi.StringPtrInput `pulumi:"vnetSubnetId"`
	// Specifies the workload runtime used by the node pool. Possible values are `OCIContainer` and `KataMshvVmIsolation`.
	//
	// > **Note:** Pod Sandboxing / KataVM Isolation node pools are in Public Preview - more information and details on how to opt into the preview can be found in [this article](https://learn.microsoft.com/azure/aks/use-pod-sandboxing)
	WorkloadRuntime pulumi.StringPtrInput `pulumi:"workloadRuntime"`
	// Specifies a list of Availability Zones in which this Kubernetes Cluster should be located. `temporaryNameForRotation` must be specified when changing this property.
	//
	// > **Note:** This requires that the `type` is set to `VirtualMachineScaleSets` and that `loadBalancerSku` is set to `standard`.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (KubernetesClusterDefaultNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterDefaultNodePool)(nil)).Elem()
}

func (i KubernetesClusterDefaultNodePoolArgs) ToKubernetesClusterDefaultNodePoolOutput() KubernetesClusterDefaultNodePoolOutput {
	return i.ToKubernetesClusterDefaultNodePoolOutputWithContext(context.Background())
}

func (i KubernetesClusterDefaultNodePoolArgs) ToKubernetesClusterDefaultNodePoolOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterDefaultNodePoolOutput)
}

func (i KubernetesClusterDefaultNodePoolArgs) ToKubernetesClusterDefaultNodePoolPtrOutput() KubernetesClusterDefaultNodePoolPtrOutput {
	return i.ToKubernetesClusterDefaultNodePoolPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterDefaultNodePoolArgs) ToKubernetesClusterDefaultNodePoolPtrOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterDefaultNodePoolOutput).ToKubernetesClusterDefaultNodePoolPtrOutputWithContext(ctx)
}

// KubernetesClusterDefaultNodePoolPtrInput is an input type that accepts KubernetesClusterDefaultNodePoolArgs, KubernetesClusterDefaultNodePoolPtr and KubernetesClusterDefaultNodePoolPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterDefaultNodePoolPtrInput` via:
//
//	        KubernetesClusterDefaultNodePoolArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterDefaultNodePoolPtrInput interface {
	pulumi.Input

	ToKubernetesClusterDefaultNodePoolPtrOutput() KubernetesClusterDefaultNodePoolPtrOutput
	ToKubernetesClusterDefaultNodePoolPtrOutputWithContext(context.Context) KubernetesClusterDefaultNodePoolPtrOutput
}

type kubernetesClusterDefaultNodePoolPtrType KubernetesClusterDefaultNodePoolArgs

func KubernetesClusterDefaultNodePoolPtr(v *KubernetesClusterDefaultNodePoolArgs) KubernetesClusterDefaultNodePoolPtrInput {
	return (*kubernetesClusterDefaultNodePoolPtrType)(v)
}

func (*kubernetesClusterDefaultNodePoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterDefaultNodePool)(nil)).Elem()
}

func (i *kubernetesClusterDefaultNodePoolPtrType) ToKubernetesClusterDefaultNodePoolPtrOutput() KubernetesClusterDefaultNodePoolPtrOutput {
	return i.ToKubernetesClusterDefaultNodePoolPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterDefaultNodePoolPtrType) ToKubernetesClusterDefaultNodePoolPtrOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterDefaultNodePoolPtrOutput)
}

type KubernetesClusterDefaultNodePoolOutput struct{ *pulumi.OutputState }

func (KubernetesClusterDefaultNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterDefaultNodePool)(nil)).Elem()
}

func (o KubernetesClusterDefaultNodePoolOutput) ToKubernetesClusterDefaultNodePoolOutput() KubernetesClusterDefaultNodePoolOutput {
	return o
}

func (o KubernetesClusterDefaultNodePoolOutput) ToKubernetesClusterDefaultNodePoolOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolOutput {
	return o
}

func (o KubernetesClusterDefaultNodePoolOutput) ToKubernetesClusterDefaultNodePoolPtrOutput() KubernetesClusterDefaultNodePoolPtrOutput {
	return o.ToKubernetesClusterDefaultNodePoolPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterDefaultNodePoolOutput) ToKubernetesClusterDefaultNodePoolPtrOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterDefaultNodePool) *KubernetesClusterDefaultNodePool {
		return &v
	}).(KubernetesClusterDefaultNodePoolPtrOutput)
}

// Specifies the ID of the Capacity Reservation Group within which this AKS Cluster should be created. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolOutput) CapacityReservationGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *string { return v.CapacityReservationGroupId }).(pulumi.StringPtrOutput)
}

// Specifies whether to trust a Custom CA.
//
// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/CustomCATrustPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/custom-certificate-authority) for more information.
func (o KubernetesClusterDefaultNodePoolOutput) CustomCaTrustEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *bool { return v.CustomCaTrustEnabled }).(pulumi.BoolPtrOutput)
}

// Should [the Kubernetes Auto Scaler](https://docs.microsoft.com/azure/aks/cluster-autoscaler) be enabled for this Node Pool?
//
// > **Note:** This requires that the `type` is set to `VirtualMachineScaleSets`.
//
// > **Note:** If you're using AutoScaling, you may wish to use [`ignoreChanges` functionality](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) to ignore changes to the `nodeCount` field.
func (o KubernetesClusterDefaultNodePoolOutput) EnableAutoScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *bool { return v.EnableAutoScaling }).(pulumi.BoolPtrOutput)
}

// Should the nodes in the Default Node Pool have host encryption enabled? `temporaryNameForRotation` must be specified when changing this property.
//
// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/EnableEncryptionAtHostPreview` is enabled and the Resource Provider is re-registered.
func (o KubernetesClusterDefaultNodePoolOutput) EnableHostEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *bool { return v.EnableHostEncryption }).(pulumi.BoolPtrOutput)
}

// Should nodes in this Node Pool have a Public IP Address? `temporaryNameForRotation` must be specified when changing this property.
func (o KubernetesClusterDefaultNodePoolOutput) EnableNodePublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *bool { return v.EnableNodePublicIp }).(pulumi.BoolPtrOutput)
}

// Should the nodes in this Node Pool have Federal Information Processing Standard enabled? `temporaryNameForRotation` must be specified when changing this block.
func (o KubernetesClusterDefaultNodePoolOutput) FipsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *bool { return v.FipsEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies the GPU MIG instance profile for supported GPU VM SKU. The allowed values are `MIG1g`, `MIG2g`, `MIG3g`, `MIG4g` and `MIG7g`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolOutput) GpuInstance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *string { return v.GpuInstance }).(pulumi.StringPtrOutput)
}

// Specifies the ID of the Host Group within which this AKS Cluster should be created. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolOutput) HostGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *string { return v.HostGroupId }).(pulumi.StringPtrOutput)
}

// A `kubeletConfig` block as defined below. `temporaryNameForRotation` must be specified when changing this block.
func (o KubernetesClusterDefaultNodePoolOutput) KubeletConfig() KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *KubernetesClusterDefaultNodePoolKubeletConfig {
		return v.KubeletConfig
	}).(KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput)
}

// The type of disk used by kubelet. Possible values are `OS` and `Temporary`.
func (o KubernetesClusterDefaultNodePoolOutput) KubeletDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *string { return v.KubeletDiskType }).(pulumi.StringPtrOutput)
}

// A `linuxOsConfig` block as defined below. `temporaryNameForRotation` must be specified when changing this block.
func (o KubernetesClusterDefaultNodePoolOutput) LinuxOsConfig() KubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *KubernetesClusterDefaultNodePoolLinuxOsConfig {
		return v.LinuxOsConfig
	}).(KubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput)
}

// The maximum number of nodes which should exist in this Node Pool. If specified this must be between `1` and `1000`.
func (o KubernetesClusterDefaultNodePoolOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *int { return v.MaxCount }).(pulumi.IntPtrOutput)
}

// The maximum number of pods that can run on each agent. `temporaryNameForRotation` must be specified when changing this property.
func (o KubernetesClusterDefaultNodePoolOutput) MaxPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *int { return v.MaxPods }).(pulumi.IntPtrOutput)
}

// A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It cannot be specified for Windows nodes and must be a static string (i.e. will be printed raw and not executed as a script). Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolOutput) MessageOfTheDay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *string { return v.MessageOfTheDay }).(pulumi.StringPtrOutput)
}

// The minimum number of nodes which should exist in this Node Pool. If specified this must be between `1` and `1000`.
func (o KubernetesClusterDefaultNodePoolOutput) MinCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *int { return v.MinCount }).(pulumi.IntPtrOutput)
}

// The name which should be used for the default Kubernetes Node Pool.
func (o KubernetesClusterDefaultNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) string { return v.Name }).(pulumi.StringOutput)
}

// The initial number of nodes which should exist in this Node Pool. If specified this must be between `1` and `1000` and between `minCount` and `maxCount`.
//
// > **Note:** If specified you may wish to use [`ignoreChanges` functionality](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) to ignore changes to this field.
//
// > **Note:** If `enableAutoScaling` is set to `false` both `minCount` and `maxCount` fields need to be set to `null` or omitted from the configuration.
func (o KubernetesClusterDefaultNodePoolOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

// A map of Kubernetes labels which should be applied to nodes in the Default Node Pool.
func (o KubernetesClusterDefaultNodePoolOutput) NodeLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) map[string]string { return v.NodeLabels }).(pulumi.StringMapOutput)
}

// A `nodeNetworkProfile` block as documented below.
func (o KubernetesClusterDefaultNodePoolOutput) NodeNetworkProfile() KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *KubernetesClusterDefaultNodePoolNodeNetworkProfile {
		return v.NodeNetworkProfile
	}).(KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutput)
}

// Resource ID for the Public IP Addresses Prefix for the nodes in this Node Pool. `enableNodePublicIp` should be `true`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolOutput) NodePublicIpPrefixId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *string { return v.NodePublicIpPrefixId }).(pulumi.StringPtrOutput)
}

// A list of the taints added to new nodes during node pool create and scale. `temporaryNameForRotation` must be specified when changing this property.
func (o KubernetesClusterDefaultNodePoolOutput) NodeTaints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) []string { return v.NodeTaints }).(pulumi.StringArrayOutput)
}

// Enabling this option will taint default node pool with `CriticalAddonsOnly=true:NoSchedule` taint. `temporaryNameForRotation` must be specified when changing this property.
func (o KubernetesClusterDefaultNodePoolOutput) OnlyCriticalAddonsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *bool { return v.OnlyCriticalAddonsEnabled }).(pulumi.BoolPtrOutput)
}

// Version of Kubernetes used for the Agents. If not specified, the default node pool will be created with the version specified by `kubernetesVersion`. If both are unspecified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as `1.22` are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in [the documentation](https://docs.microsoft.com/en-us/azure/aks/supported-kubernetes-versions?tabs=azure-cli#alias-minor-version).
//
// > **Note:** This version must be supported by the Kubernetes Cluster - as such the version of Kubernetes used on the Cluster/Control Plane may need to be upgraded first.
func (o KubernetesClusterDefaultNodePoolOutput) OrchestratorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *string { return v.OrchestratorVersion }).(pulumi.StringPtrOutput)
}

// The size of the OS Disk which should be used for each agent in the Node Pool. `temporaryNameForRotation` must be specified when attempting a change.
func (o KubernetesClusterDefaultNodePoolOutput) OsDiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *int { return v.OsDiskSizeGb }).(pulumi.IntPtrOutput)
}

// The type of disk which should be used for the Operating System. Possible values are `Ephemeral` and `Managed`. Defaults to `Managed`. `temporaryNameForRotation` must be specified when attempting a change.
func (o KubernetesClusterDefaultNodePoolOutput) OsDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *string { return v.OsDiskType }).(pulumi.StringPtrOutput)
}

// Specifies the OS SKU used by the agent pool. Possible values are `AzureLinux`, `CBLMariner`, `Mariner`, `Ubuntu`, `Windows2019` and `Windows2022`. If not specified, the default is `Ubuntu` if OSType=Linux or `Windows2019` if OSType=Windows. And the default Windows OSSKU will be changed to `Windows2022` after Windows2019 is deprecated. `temporaryNameForRotation` must be specified when attempting a change.
func (o KubernetesClusterDefaultNodePoolOutput) OsSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *string { return v.OsSku }).(pulumi.StringPtrOutput)
}

// The ID of the Subnet where the pods in the default Node Pool should exist.
func (o KubernetesClusterDefaultNodePoolOutput) PodSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *string { return v.PodSubnetId }).(pulumi.StringPtrOutput)
}

// The ID of the Proximity Placement Group. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolOutput) ProximityPlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *string { return v.ProximityPlacementGroupId }).(pulumi.StringPtrOutput)
}

// Specifies the autoscaling behaviour of the Kubernetes Cluster. Allowed values are `Delete` and `Deallocate`. Defaults to `Delete`.
func (o KubernetesClusterDefaultNodePoolOutput) ScaleDownMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *string { return v.ScaleDownMode }).(pulumi.StringPtrOutput)
}

// The ID of the Snapshot which should be used to create this default Node Pool. `temporaryNameForRotation` must be specified when changing this property.
func (o KubernetesClusterDefaultNodePoolOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// A mapping of tags to assign to the Node Pool.
//
// > At this time there's a bug in the AKS API where Tags for a Node Pool are not stored in the correct case - you may wish to use `ignoreChanges` functionality to ignore changes to the casing until this is fixed in the AKS API.
func (o KubernetesClusterDefaultNodePoolOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies the name of the temporary node pool used to cycle the default node pool for VM resizing.
func (o KubernetesClusterDefaultNodePoolOutput) TemporaryNameForRotation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *string { return v.TemporaryNameForRotation }).(pulumi.StringPtrOutput)
}

// The type of Node Pool which should be created. Possible values are `AvailabilitySet` and `VirtualMachineScaleSets`. Defaults to `VirtualMachineScaleSets`. Changing this forces a new resource to be created.
//
// > **Note:** When creating a cluster that supports multiple node pools, the cluster must use `VirtualMachineScaleSets`. For more information on the limitations of clusters using multiple node pools see [the documentation](https://learn.microsoft.com/en-us/azure/aks/use-multiple-node-pools#limitations).
func (o KubernetesClusterDefaultNodePoolOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Used to specify whether the UltraSSD is enabled in the Default Node Pool. Defaults to `false`. See [the documentation](https://docs.microsoft.com/azure/aks/use-ultra-disks) for more information. `temporaryNameForRotation` must be specified when attempting a change.
func (o KubernetesClusterDefaultNodePoolOutput) UltraSsdEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *bool { return v.UltraSsdEnabled }).(pulumi.BoolPtrOutput)
}

// A `upgradeSettings` block as documented below.
func (o KubernetesClusterDefaultNodePoolOutput) UpgradeSettings() KubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *KubernetesClusterDefaultNodePoolUpgradeSettings {
		return v.UpgradeSettings
	}).(KubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutput)
}

// The size of the Virtual Machine, such as `Standard_DS2_v2`. `temporaryNameForRotation` must be specified when attempting a resize.
func (o KubernetesClusterDefaultNodePoolOutput) VmSize() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) string { return v.VmSize }).(pulumi.StringOutput)
}

// The ID of a Subnet where the Kubernetes Node Pool should exist.
//
// > **Note:** A Route Table must be configured on this Subnet.
func (o KubernetesClusterDefaultNodePoolOutput) VnetSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *string { return v.VnetSubnetId }).(pulumi.StringPtrOutput)
}

// Specifies the workload runtime used by the node pool. Possible values are `OCIContainer` and `KataMshvVmIsolation`.
//
// > **Note:** Pod Sandboxing / KataVM Isolation node pools are in Public Preview - more information and details on how to opt into the preview can be found in [this article](https://learn.microsoft.com/azure/aks/use-pod-sandboxing)
func (o KubernetesClusterDefaultNodePoolOutput) WorkloadRuntime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *string { return v.WorkloadRuntime }).(pulumi.StringPtrOutput)
}

// Specifies a list of Availability Zones in which this Kubernetes Cluster should be located. `temporaryNameForRotation` must be specified when changing this property.
//
// > **Note:** This requires that the `type` is set to `VirtualMachineScaleSets` and that `loadBalancerSku` is set to `standard`.
func (o KubernetesClusterDefaultNodePoolOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type KubernetesClusterDefaultNodePoolPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterDefaultNodePoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterDefaultNodePool)(nil)).Elem()
}

func (o KubernetesClusterDefaultNodePoolPtrOutput) ToKubernetesClusterDefaultNodePoolPtrOutput() KubernetesClusterDefaultNodePoolPtrOutput {
	return o
}

func (o KubernetesClusterDefaultNodePoolPtrOutput) ToKubernetesClusterDefaultNodePoolPtrOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolPtrOutput {
	return o
}

func (o KubernetesClusterDefaultNodePoolPtrOutput) Elem() KubernetesClusterDefaultNodePoolOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) KubernetesClusterDefaultNodePool {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterDefaultNodePool
		return ret
	}).(KubernetesClusterDefaultNodePoolOutput)
}

// Specifies the ID of the Capacity Reservation Group within which this AKS Cluster should be created. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolPtrOutput) CapacityReservationGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *string {
		if v == nil {
			return nil
		}
		return v.CapacityReservationGroupId
	}).(pulumi.StringPtrOutput)
}

// Specifies whether to trust a Custom CA.
//
// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/CustomCATrustPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/custom-certificate-authority) for more information.
func (o KubernetesClusterDefaultNodePoolPtrOutput) CustomCaTrustEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *bool {
		if v == nil {
			return nil
		}
		return v.CustomCaTrustEnabled
	}).(pulumi.BoolPtrOutput)
}

// Should [the Kubernetes Auto Scaler](https://docs.microsoft.com/azure/aks/cluster-autoscaler) be enabled for this Node Pool?
//
// > **Note:** This requires that the `type` is set to `VirtualMachineScaleSets`.
//
// > **Note:** If you're using AutoScaling, you may wish to use [`ignoreChanges` functionality](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) to ignore changes to the `nodeCount` field.
func (o KubernetesClusterDefaultNodePoolPtrOutput) EnableAutoScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAutoScaling
	}).(pulumi.BoolPtrOutput)
}

// Should the nodes in the Default Node Pool have host encryption enabled? `temporaryNameForRotation` must be specified when changing this property.
//
// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/EnableEncryptionAtHostPreview` is enabled and the Resource Provider is re-registered.
func (o KubernetesClusterDefaultNodePoolPtrOutput) EnableHostEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *bool {
		if v == nil {
			return nil
		}
		return v.EnableHostEncryption
	}).(pulumi.BoolPtrOutput)
}

// Should nodes in this Node Pool have a Public IP Address? `temporaryNameForRotation` must be specified when changing this property.
func (o KubernetesClusterDefaultNodePoolPtrOutput) EnableNodePublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *bool {
		if v == nil {
			return nil
		}
		return v.EnableNodePublicIp
	}).(pulumi.BoolPtrOutput)
}

// Should the nodes in this Node Pool have Federal Information Processing Standard enabled? `temporaryNameForRotation` must be specified when changing this block.
func (o KubernetesClusterDefaultNodePoolPtrOutput) FipsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *bool {
		if v == nil {
			return nil
		}
		return v.FipsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies the GPU MIG instance profile for supported GPU VM SKU. The allowed values are `MIG1g`, `MIG2g`, `MIG3g`, `MIG4g` and `MIG7g`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolPtrOutput) GpuInstance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *string {
		if v == nil {
			return nil
		}
		return v.GpuInstance
	}).(pulumi.StringPtrOutput)
}

// Specifies the ID of the Host Group within which this AKS Cluster should be created. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolPtrOutput) HostGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *string {
		if v == nil {
			return nil
		}
		return v.HostGroupId
	}).(pulumi.StringPtrOutput)
}

// A `kubeletConfig` block as defined below. `temporaryNameForRotation` must be specified when changing this block.
func (o KubernetesClusterDefaultNodePoolPtrOutput) KubeletConfig() KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *KubernetesClusterDefaultNodePoolKubeletConfig {
		if v == nil {
			return nil
		}
		return v.KubeletConfig
	}).(KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput)
}

// The type of disk used by kubelet. Possible values are `OS` and `Temporary`.
func (o KubernetesClusterDefaultNodePoolPtrOutput) KubeletDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *string {
		if v == nil {
			return nil
		}
		return v.KubeletDiskType
	}).(pulumi.StringPtrOutput)
}

// A `linuxOsConfig` block as defined below. `temporaryNameForRotation` must be specified when changing this block.
func (o KubernetesClusterDefaultNodePoolPtrOutput) LinuxOsConfig() KubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *KubernetesClusterDefaultNodePoolLinuxOsConfig {
		if v == nil {
			return nil
		}
		return v.LinuxOsConfig
	}).(KubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput)
}

// The maximum number of nodes which should exist in this Node Pool. If specified this must be between `1` and `1000`.
func (o KubernetesClusterDefaultNodePoolPtrOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *int {
		if v == nil {
			return nil
		}
		return v.MaxCount
	}).(pulumi.IntPtrOutput)
}

// The maximum number of pods that can run on each agent. `temporaryNameForRotation` must be specified when changing this property.
func (o KubernetesClusterDefaultNodePoolPtrOutput) MaxPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *int {
		if v == nil {
			return nil
		}
		return v.MaxPods
	}).(pulumi.IntPtrOutput)
}

// A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It cannot be specified for Windows nodes and must be a static string (i.e. will be printed raw and not executed as a script). Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolPtrOutput) MessageOfTheDay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *string {
		if v == nil {
			return nil
		}
		return v.MessageOfTheDay
	}).(pulumi.StringPtrOutput)
}

// The minimum number of nodes which should exist in this Node Pool. If specified this must be between `1` and `1000`.
func (o KubernetesClusterDefaultNodePoolPtrOutput) MinCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *int {
		if v == nil {
			return nil
		}
		return v.MinCount
	}).(pulumi.IntPtrOutput)
}

// The name which should be used for the default Kubernetes Node Pool.
func (o KubernetesClusterDefaultNodePoolPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The initial number of nodes which should exist in this Node Pool. If specified this must be between `1` and `1000` and between `minCount` and `maxCount`.
//
// > **Note:** If specified you may wish to use [`ignoreChanges` functionality](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) to ignore changes to this field.
//
// > **Note:** If `enableAutoScaling` is set to `false` both `minCount` and `maxCount` fields need to be set to `null` or omitted from the configuration.
func (o KubernetesClusterDefaultNodePoolPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

// A map of Kubernetes labels which should be applied to nodes in the Default Node Pool.
func (o KubernetesClusterDefaultNodePoolPtrOutput) NodeLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) map[string]string {
		if v == nil {
			return nil
		}
		return v.NodeLabels
	}).(pulumi.StringMapOutput)
}

// A `nodeNetworkProfile` block as documented below.
func (o KubernetesClusterDefaultNodePoolPtrOutput) NodeNetworkProfile() KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *KubernetesClusterDefaultNodePoolNodeNetworkProfile {
		if v == nil {
			return nil
		}
		return v.NodeNetworkProfile
	}).(KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutput)
}

// Resource ID for the Public IP Addresses Prefix for the nodes in this Node Pool. `enableNodePublicIp` should be `true`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolPtrOutput) NodePublicIpPrefixId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *string {
		if v == nil {
			return nil
		}
		return v.NodePublicIpPrefixId
	}).(pulumi.StringPtrOutput)
}

// A list of the taints added to new nodes during node pool create and scale. `temporaryNameForRotation` must be specified when changing this property.
func (o KubernetesClusterDefaultNodePoolPtrOutput) NodeTaints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) []string {
		if v == nil {
			return nil
		}
		return v.NodeTaints
	}).(pulumi.StringArrayOutput)
}

// Enabling this option will taint default node pool with `CriticalAddonsOnly=true:NoSchedule` taint. `temporaryNameForRotation` must be specified when changing this property.
func (o KubernetesClusterDefaultNodePoolPtrOutput) OnlyCriticalAddonsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *bool {
		if v == nil {
			return nil
		}
		return v.OnlyCriticalAddonsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Version of Kubernetes used for the Agents. If not specified, the default node pool will be created with the version specified by `kubernetesVersion`. If both are unspecified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as `1.22` are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in [the documentation](https://docs.microsoft.com/en-us/azure/aks/supported-kubernetes-versions?tabs=azure-cli#alias-minor-version).
//
// > **Note:** This version must be supported by the Kubernetes Cluster - as such the version of Kubernetes used on the Cluster/Control Plane may need to be upgraded first.
func (o KubernetesClusterDefaultNodePoolPtrOutput) OrchestratorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *string {
		if v == nil {
			return nil
		}
		return v.OrchestratorVersion
	}).(pulumi.StringPtrOutput)
}

// The size of the OS Disk which should be used for each agent in the Node Pool. `temporaryNameForRotation` must be specified when attempting a change.
func (o KubernetesClusterDefaultNodePoolPtrOutput) OsDiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *int {
		if v == nil {
			return nil
		}
		return v.OsDiskSizeGb
	}).(pulumi.IntPtrOutput)
}

// The type of disk which should be used for the Operating System. Possible values are `Ephemeral` and `Managed`. Defaults to `Managed`. `temporaryNameForRotation` must be specified when attempting a change.
func (o KubernetesClusterDefaultNodePoolPtrOutput) OsDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *string {
		if v == nil {
			return nil
		}
		return v.OsDiskType
	}).(pulumi.StringPtrOutput)
}

// Specifies the OS SKU used by the agent pool. Possible values are `AzureLinux`, `CBLMariner`, `Mariner`, `Ubuntu`, `Windows2019` and `Windows2022`. If not specified, the default is `Ubuntu` if OSType=Linux or `Windows2019` if OSType=Windows. And the default Windows OSSKU will be changed to `Windows2022` after Windows2019 is deprecated. `temporaryNameForRotation` must be specified when attempting a change.
func (o KubernetesClusterDefaultNodePoolPtrOutput) OsSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *string {
		if v == nil {
			return nil
		}
		return v.OsSku
	}).(pulumi.StringPtrOutput)
}

// The ID of the Subnet where the pods in the default Node Pool should exist.
func (o KubernetesClusterDefaultNodePoolPtrOutput) PodSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *string {
		if v == nil {
			return nil
		}
		return v.PodSubnetId
	}).(pulumi.StringPtrOutput)
}

// The ID of the Proximity Placement Group. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolPtrOutput) ProximityPlacementGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *string {
		if v == nil {
			return nil
		}
		return v.ProximityPlacementGroupId
	}).(pulumi.StringPtrOutput)
}

// Specifies the autoscaling behaviour of the Kubernetes Cluster. Allowed values are `Delete` and `Deallocate`. Defaults to `Delete`.
func (o KubernetesClusterDefaultNodePoolPtrOutput) ScaleDownMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *string {
		if v == nil {
			return nil
		}
		return v.ScaleDownMode
	}).(pulumi.StringPtrOutput)
}

// The ID of the Snapshot which should be used to create this default Node Pool. `temporaryNameForRotation` must be specified when changing this property.
func (o KubernetesClusterDefaultNodePoolPtrOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotId
	}).(pulumi.StringPtrOutput)
}

// A mapping of tags to assign to the Node Pool.
//
// > At this time there's a bug in the AKS API where Tags for a Node Pool are not stored in the correct case - you may wish to use `ignoreChanges` functionality to ignore changes to the casing until this is fixed in the AKS API.
func (o KubernetesClusterDefaultNodePoolPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Specifies the name of the temporary node pool used to cycle the default node pool for VM resizing.
func (o KubernetesClusterDefaultNodePoolPtrOutput) TemporaryNameForRotation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *string {
		if v == nil {
			return nil
		}
		return v.TemporaryNameForRotation
	}).(pulumi.StringPtrOutput)
}

// The type of Node Pool which should be created. Possible values are `AvailabilitySet` and `VirtualMachineScaleSets`. Defaults to `VirtualMachineScaleSets`. Changing this forces a new resource to be created.
//
// > **Note:** When creating a cluster that supports multiple node pools, the cluster must use `VirtualMachineScaleSets`. For more information on the limitations of clusters using multiple node pools see [the documentation](https://learn.microsoft.com/en-us/azure/aks/use-multiple-node-pools#limitations).
func (o KubernetesClusterDefaultNodePoolPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Used to specify whether the UltraSSD is enabled in the Default Node Pool. Defaults to `false`. See [the documentation](https://docs.microsoft.com/azure/aks/use-ultra-disks) for more information. `temporaryNameForRotation` must be specified when attempting a change.
func (o KubernetesClusterDefaultNodePoolPtrOutput) UltraSsdEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *bool {
		if v == nil {
			return nil
		}
		return v.UltraSsdEnabled
	}).(pulumi.BoolPtrOutput)
}

// A `upgradeSettings` block as documented below.
func (o KubernetesClusterDefaultNodePoolPtrOutput) UpgradeSettings() KubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *KubernetesClusterDefaultNodePoolUpgradeSettings {
		if v == nil {
			return nil
		}
		return v.UpgradeSettings
	}).(KubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutput)
}

// The size of the Virtual Machine, such as `Standard_DS2_v2`. `temporaryNameForRotation` must be specified when attempting a resize.
func (o KubernetesClusterDefaultNodePoolPtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *string {
		if v == nil {
			return nil
		}
		return &v.VmSize
	}).(pulumi.StringPtrOutput)
}

// The ID of a Subnet where the Kubernetes Node Pool should exist.
//
// > **Note:** A Route Table must be configured on this Subnet.
func (o KubernetesClusterDefaultNodePoolPtrOutput) VnetSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *string {
		if v == nil {
			return nil
		}
		return v.VnetSubnetId
	}).(pulumi.StringPtrOutput)
}

// Specifies the workload runtime used by the node pool. Possible values are `OCIContainer` and `KataMshvVmIsolation`.
//
// > **Note:** Pod Sandboxing / KataVM Isolation node pools are in Public Preview - more information and details on how to opt into the preview can be found in [this article](https://learn.microsoft.com/azure/aks/use-pod-sandboxing)
func (o KubernetesClusterDefaultNodePoolPtrOutput) WorkloadRuntime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *string {
		if v == nil {
			return nil
		}
		return v.WorkloadRuntime
	}).(pulumi.StringPtrOutput)
}

// Specifies a list of Availability Zones in which this Kubernetes Cluster should be located. `temporaryNameForRotation` must be specified when changing this property.
//
// > **Note:** This requires that the `type` is set to `VirtualMachineScaleSets` and that `loadBalancerSku` is set to `standard`.
func (o KubernetesClusterDefaultNodePoolPtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

type KubernetesClusterDefaultNodePoolKubeletConfig struct {
	// Specifies the allow list of unsafe sysctls command or patterns (ending in `*`).
	AllowedUnsafeSysctls []string `pulumi:"allowedUnsafeSysctls"`
	// Specifies the maximum number of container log files that can be present for a container. must be at least 2.
	ContainerLogMaxLine *int `pulumi:"containerLogMaxLine"`
	// Specifies the maximum size (e.g. 10MB) of container log file before it is rotated.
	ContainerLogMaxSizeMb *int `pulumi:"containerLogMaxSizeMb"`
	// Is CPU CFS quota enforcement for containers enabled?
	CpuCfsQuotaEnabled *bool `pulumi:"cpuCfsQuotaEnabled"`
	// Specifies the CPU CFS quota period value.
	CpuCfsQuotaPeriod *string `pulumi:"cpuCfsQuotaPeriod"`
	// Specifies the CPU Manager policy to use. Possible values are `none` and `static`,.
	CpuManagerPolicy *string `pulumi:"cpuManagerPolicy"`
	// Specifies the percent of disk usage above which image garbage collection is always run. Must be between `0` and `100`.
	ImageGcHighThreshold *int `pulumi:"imageGcHighThreshold"`
	// Specifies the percent of disk usage lower than which image garbage collection is never run. Must be between `0` and `100`.
	ImageGcLowThreshold *int `pulumi:"imageGcLowThreshold"`
	// Specifies the maximum number of processes per pod.
	PodMaxPid *int `pulumi:"podMaxPid"`
	// Specifies the Topology Manager policy to use. Possible values are `none`, `best-effort`, `restricted` or `single-numa-node`.
	TopologyManagerPolicy *string `pulumi:"topologyManagerPolicy"`
}

// KubernetesClusterDefaultNodePoolKubeletConfigInput is an input type that accepts KubernetesClusterDefaultNodePoolKubeletConfigArgs and KubernetesClusterDefaultNodePoolKubeletConfigOutput values.
// You can construct a concrete instance of `KubernetesClusterDefaultNodePoolKubeletConfigInput` via:
//
//	KubernetesClusterDefaultNodePoolKubeletConfigArgs{...}
type KubernetesClusterDefaultNodePoolKubeletConfigInput interface {
	pulumi.Input

	ToKubernetesClusterDefaultNodePoolKubeletConfigOutput() KubernetesClusterDefaultNodePoolKubeletConfigOutput
	ToKubernetesClusterDefaultNodePoolKubeletConfigOutputWithContext(context.Context) KubernetesClusterDefaultNodePoolKubeletConfigOutput
}

type KubernetesClusterDefaultNodePoolKubeletConfigArgs struct {
	// Specifies the allow list of unsafe sysctls command or patterns (ending in `*`).
	AllowedUnsafeSysctls pulumi.StringArrayInput `pulumi:"allowedUnsafeSysctls"`
	// Specifies the maximum number of container log files that can be present for a container. must be at least 2.
	ContainerLogMaxLine pulumi.IntPtrInput `pulumi:"containerLogMaxLine"`
	// Specifies the maximum size (e.g. 10MB) of container log file before it is rotated.
	ContainerLogMaxSizeMb pulumi.IntPtrInput `pulumi:"containerLogMaxSizeMb"`
	// Is CPU CFS quota enforcement for containers enabled?
	CpuCfsQuotaEnabled pulumi.BoolPtrInput `pulumi:"cpuCfsQuotaEnabled"`
	// Specifies the CPU CFS quota period value.
	CpuCfsQuotaPeriod pulumi.StringPtrInput `pulumi:"cpuCfsQuotaPeriod"`
	// Specifies the CPU Manager policy to use. Possible values are `none` and `static`,.
	CpuManagerPolicy pulumi.StringPtrInput `pulumi:"cpuManagerPolicy"`
	// Specifies the percent of disk usage above which image garbage collection is always run. Must be between `0` and `100`.
	ImageGcHighThreshold pulumi.IntPtrInput `pulumi:"imageGcHighThreshold"`
	// Specifies the percent of disk usage lower than which image garbage collection is never run. Must be between `0` and `100`.
	ImageGcLowThreshold pulumi.IntPtrInput `pulumi:"imageGcLowThreshold"`
	// Specifies the maximum number of processes per pod.
	PodMaxPid pulumi.IntPtrInput `pulumi:"podMaxPid"`
	// Specifies the Topology Manager policy to use. Possible values are `none`, `best-effort`, `restricted` or `single-numa-node`.
	TopologyManagerPolicy pulumi.StringPtrInput `pulumi:"topologyManagerPolicy"`
}

func (KubernetesClusterDefaultNodePoolKubeletConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterDefaultNodePoolKubeletConfig)(nil)).Elem()
}

func (i KubernetesClusterDefaultNodePoolKubeletConfigArgs) ToKubernetesClusterDefaultNodePoolKubeletConfigOutput() KubernetesClusterDefaultNodePoolKubeletConfigOutput {
	return i.ToKubernetesClusterDefaultNodePoolKubeletConfigOutputWithContext(context.Background())
}

func (i KubernetesClusterDefaultNodePoolKubeletConfigArgs) ToKubernetesClusterDefaultNodePoolKubeletConfigOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolKubeletConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterDefaultNodePoolKubeletConfigOutput)
}

func (i KubernetesClusterDefaultNodePoolKubeletConfigArgs) ToKubernetesClusterDefaultNodePoolKubeletConfigPtrOutput() KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput {
	return i.ToKubernetesClusterDefaultNodePoolKubeletConfigPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterDefaultNodePoolKubeletConfigArgs) ToKubernetesClusterDefaultNodePoolKubeletConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterDefaultNodePoolKubeletConfigOutput).ToKubernetesClusterDefaultNodePoolKubeletConfigPtrOutputWithContext(ctx)
}

// KubernetesClusterDefaultNodePoolKubeletConfigPtrInput is an input type that accepts KubernetesClusterDefaultNodePoolKubeletConfigArgs, KubernetesClusterDefaultNodePoolKubeletConfigPtr and KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterDefaultNodePoolKubeletConfigPtrInput` via:
//
//	        KubernetesClusterDefaultNodePoolKubeletConfigArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterDefaultNodePoolKubeletConfigPtrInput interface {
	pulumi.Input

	ToKubernetesClusterDefaultNodePoolKubeletConfigPtrOutput() KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput
	ToKubernetesClusterDefaultNodePoolKubeletConfigPtrOutputWithContext(context.Context) KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput
}

type kubernetesClusterDefaultNodePoolKubeletConfigPtrType KubernetesClusterDefaultNodePoolKubeletConfigArgs

func KubernetesClusterDefaultNodePoolKubeletConfigPtr(v *KubernetesClusterDefaultNodePoolKubeletConfigArgs) KubernetesClusterDefaultNodePoolKubeletConfigPtrInput {
	return (*kubernetesClusterDefaultNodePoolKubeletConfigPtrType)(v)
}

func (*kubernetesClusterDefaultNodePoolKubeletConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterDefaultNodePoolKubeletConfig)(nil)).Elem()
}

func (i *kubernetesClusterDefaultNodePoolKubeletConfigPtrType) ToKubernetesClusterDefaultNodePoolKubeletConfigPtrOutput() KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput {
	return i.ToKubernetesClusterDefaultNodePoolKubeletConfigPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterDefaultNodePoolKubeletConfigPtrType) ToKubernetesClusterDefaultNodePoolKubeletConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput)
}

type KubernetesClusterDefaultNodePoolKubeletConfigOutput struct{ *pulumi.OutputState }

func (KubernetesClusterDefaultNodePoolKubeletConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterDefaultNodePoolKubeletConfig)(nil)).Elem()
}

func (o KubernetesClusterDefaultNodePoolKubeletConfigOutput) ToKubernetesClusterDefaultNodePoolKubeletConfigOutput() KubernetesClusterDefaultNodePoolKubeletConfigOutput {
	return o
}

func (o KubernetesClusterDefaultNodePoolKubeletConfigOutput) ToKubernetesClusterDefaultNodePoolKubeletConfigOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolKubeletConfigOutput {
	return o
}

func (o KubernetesClusterDefaultNodePoolKubeletConfigOutput) ToKubernetesClusterDefaultNodePoolKubeletConfigPtrOutput() KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput {
	return o.ToKubernetesClusterDefaultNodePoolKubeletConfigPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterDefaultNodePoolKubeletConfigOutput) ToKubernetesClusterDefaultNodePoolKubeletConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterDefaultNodePoolKubeletConfig) *KubernetesClusterDefaultNodePoolKubeletConfig {
		return &v
	}).(KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput)
}

// Specifies the allow list of unsafe sysctls command or patterns (ending in `*`).
func (o KubernetesClusterDefaultNodePoolKubeletConfigOutput) AllowedUnsafeSysctls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolKubeletConfig) []string { return v.AllowedUnsafeSysctls }).(pulumi.StringArrayOutput)
}

// Specifies the maximum number of container log files that can be present for a container. must be at least 2.
func (o KubernetesClusterDefaultNodePoolKubeletConfigOutput) ContainerLogMaxLine() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolKubeletConfig) *int { return v.ContainerLogMaxLine }).(pulumi.IntPtrOutput)
}

// Specifies the maximum size (e.g. 10MB) of container log file before it is rotated.
func (o KubernetesClusterDefaultNodePoolKubeletConfigOutput) ContainerLogMaxSizeMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolKubeletConfig) *int { return v.ContainerLogMaxSizeMb }).(pulumi.IntPtrOutput)
}

// Is CPU CFS quota enforcement for containers enabled?
func (o KubernetesClusterDefaultNodePoolKubeletConfigOutput) CpuCfsQuotaEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolKubeletConfig) *bool { return v.CpuCfsQuotaEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies the CPU CFS quota period value.
func (o KubernetesClusterDefaultNodePoolKubeletConfigOutput) CpuCfsQuotaPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolKubeletConfig) *string { return v.CpuCfsQuotaPeriod }).(pulumi.StringPtrOutput)
}

// Specifies the CPU Manager policy to use. Possible values are `none` and `static`,.
func (o KubernetesClusterDefaultNodePoolKubeletConfigOutput) CpuManagerPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolKubeletConfig) *string { return v.CpuManagerPolicy }).(pulumi.StringPtrOutput)
}

// Specifies the percent of disk usage above which image garbage collection is always run. Must be between `0` and `100`.
func (o KubernetesClusterDefaultNodePoolKubeletConfigOutput) ImageGcHighThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolKubeletConfig) *int { return v.ImageGcHighThreshold }).(pulumi.IntPtrOutput)
}

// Specifies the percent of disk usage lower than which image garbage collection is never run. Must be between `0` and `100`.
func (o KubernetesClusterDefaultNodePoolKubeletConfigOutput) ImageGcLowThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolKubeletConfig) *int { return v.ImageGcLowThreshold }).(pulumi.IntPtrOutput)
}

// Specifies the maximum number of processes per pod.
func (o KubernetesClusterDefaultNodePoolKubeletConfigOutput) PodMaxPid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolKubeletConfig) *int { return v.PodMaxPid }).(pulumi.IntPtrOutput)
}

// Specifies the Topology Manager policy to use. Possible values are `none`, `best-effort`, `restricted` or `single-numa-node`.
func (o KubernetesClusterDefaultNodePoolKubeletConfigOutput) TopologyManagerPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolKubeletConfig) *string { return v.TopologyManagerPolicy }).(pulumi.StringPtrOutput)
}

type KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterDefaultNodePoolKubeletConfig)(nil)).Elem()
}

func (o KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput) ToKubernetesClusterDefaultNodePoolKubeletConfigPtrOutput() KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput {
	return o
}

func (o KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput) ToKubernetesClusterDefaultNodePoolKubeletConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput {
	return o
}

func (o KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput) Elem() KubernetesClusterDefaultNodePoolKubeletConfigOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolKubeletConfig) KubernetesClusterDefaultNodePoolKubeletConfig {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterDefaultNodePoolKubeletConfig
		return ret
	}).(KubernetesClusterDefaultNodePoolKubeletConfigOutput)
}

// Specifies the allow list of unsafe sysctls command or patterns (ending in `*`).
func (o KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput) AllowedUnsafeSysctls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolKubeletConfig) []string {
		if v == nil {
			return nil
		}
		return v.AllowedUnsafeSysctls
	}).(pulumi.StringArrayOutput)
}

// Specifies the maximum number of container log files that can be present for a container. must be at least 2.
func (o KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput) ContainerLogMaxLine() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolKubeletConfig) *int {
		if v == nil {
			return nil
		}
		return v.ContainerLogMaxLine
	}).(pulumi.IntPtrOutput)
}

// Specifies the maximum size (e.g. 10MB) of container log file before it is rotated.
func (o KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput) ContainerLogMaxSizeMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolKubeletConfig) *int {
		if v == nil {
			return nil
		}
		return v.ContainerLogMaxSizeMb
	}).(pulumi.IntPtrOutput)
}

// Is CPU CFS quota enforcement for containers enabled?
func (o KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput) CpuCfsQuotaEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolKubeletConfig) *bool {
		if v == nil {
			return nil
		}
		return v.CpuCfsQuotaEnabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies the CPU CFS quota period value.
func (o KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput) CpuCfsQuotaPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolKubeletConfig) *string {
		if v == nil {
			return nil
		}
		return v.CpuCfsQuotaPeriod
	}).(pulumi.StringPtrOutput)
}

// Specifies the CPU Manager policy to use. Possible values are `none` and `static`,.
func (o KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput) CpuManagerPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolKubeletConfig) *string {
		if v == nil {
			return nil
		}
		return v.CpuManagerPolicy
	}).(pulumi.StringPtrOutput)
}

// Specifies the percent of disk usage above which image garbage collection is always run. Must be between `0` and `100`.
func (o KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput) ImageGcHighThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolKubeletConfig) *int {
		if v == nil {
			return nil
		}
		return v.ImageGcHighThreshold
	}).(pulumi.IntPtrOutput)
}

// Specifies the percent of disk usage lower than which image garbage collection is never run. Must be between `0` and `100`.
func (o KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput) ImageGcLowThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolKubeletConfig) *int {
		if v == nil {
			return nil
		}
		return v.ImageGcLowThreshold
	}).(pulumi.IntPtrOutput)
}

// Specifies the maximum number of processes per pod.
func (o KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput) PodMaxPid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolKubeletConfig) *int {
		if v == nil {
			return nil
		}
		return v.PodMaxPid
	}).(pulumi.IntPtrOutput)
}

// Specifies the Topology Manager policy to use. Possible values are `none`, `best-effort`, `restricted` or `single-numa-node`.
func (o KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput) TopologyManagerPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolKubeletConfig) *string {
		if v == nil {
			return nil
		}
		return v.TopologyManagerPolicy
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterDefaultNodePoolLinuxOsConfig struct {
	// Specifies the size of the swap file on each node in MB.
	SwapFileSizeMb *int `pulumi:"swapFileSizeMb"`
	// A `sysctlConfig` block as defined below. Changing this forces a new resource to be created.
	SysctlConfig *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig `pulumi:"sysctlConfig"`
	// specifies the defrag configuration for Transparent Huge Page. Possible values are `always`, `defer`, `defer+madvise`, `madvise` and `never`.
	TransparentHugePageDefrag *string `pulumi:"transparentHugePageDefrag"`
	// Specifies the Transparent Huge Page enabled configuration. Possible values are `always`, `madvise` and `never`.
	TransparentHugePageEnabled *string `pulumi:"transparentHugePageEnabled"`
}

// KubernetesClusterDefaultNodePoolLinuxOsConfigInput is an input type that accepts KubernetesClusterDefaultNodePoolLinuxOsConfigArgs and KubernetesClusterDefaultNodePoolLinuxOsConfigOutput values.
// You can construct a concrete instance of `KubernetesClusterDefaultNodePoolLinuxOsConfigInput` via:
//
//	KubernetesClusterDefaultNodePoolLinuxOsConfigArgs{...}
type KubernetesClusterDefaultNodePoolLinuxOsConfigInput interface {
	pulumi.Input

	ToKubernetesClusterDefaultNodePoolLinuxOsConfigOutput() KubernetesClusterDefaultNodePoolLinuxOsConfigOutput
	ToKubernetesClusterDefaultNodePoolLinuxOsConfigOutputWithContext(context.Context) KubernetesClusterDefaultNodePoolLinuxOsConfigOutput
}

type KubernetesClusterDefaultNodePoolLinuxOsConfigArgs struct {
	// Specifies the size of the swap file on each node in MB.
	SwapFileSizeMb pulumi.IntPtrInput `pulumi:"swapFileSizeMb"`
	// A `sysctlConfig` block as defined below. Changing this forces a new resource to be created.
	SysctlConfig KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrInput `pulumi:"sysctlConfig"`
	// specifies the defrag configuration for Transparent Huge Page. Possible values are `always`, `defer`, `defer+madvise`, `madvise` and `never`.
	TransparentHugePageDefrag pulumi.StringPtrInput `pulumi:"transparentHugePageDefrag"`
	// Specifies the Transparent Huge Page enabled configuration. Possible values are `always`, `madvise` and `never`.
	TransparentHugePageEnabled pulumi.StringPtrInput `pulumi:"transparentHugePageEnabled"`
}

func (KubernetesClusterDefaultNodePoolLinuxOsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterDefaultNodePoolLinuxOsConfig)(nil)).Elem()
}

func (i KubernetesClusterDefaultNodePoolLinuxOsConfigArgs) ToKubernetesClusterDefaultNodePoolLinuxOsConfigOutput() KubernetesClusterDefaultNodePoolLinuxOsConfigOutput {
	return i.ToKubernetesClusterDefaultNodePoolLinuxOsConfigOutputWithContext(context.Background())
}

func (i KubernetesClusterDefaultNodePoolLinuxOsConfigArgs) ToKubernetesClusterDefaultNodePoolLinuxOsConfigOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolLinuxOsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterDefaultNodePoolLinuxOsConfigOutput)
}

func (i KubernetesClusterDefaultNodePoolLinuxOsConfigArgs) ToKubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput() KubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput {
	return i.ToKubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterDefaultNodePoolLinuxOsConfigArgs) ToKubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterDefaultNodePoolLinuxOsConfigOutput).ToKubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutputWithContext(ctx)
}

// KubernetesClusterDefaultNodePoolLinuxOsConfigPtrInput is an input type that accepts KubernetesClusterDefaultNodePoolLinuxOsConfigArgs, KubernetesClusterDefaultNodePoolLinuxOsConfigPtr and KubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterDefaultNodePoolLinuxOsConfigPtrInput` via:
//
//	        KubernetesClusterDefaultNodePoolLinuxOsConfigArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterDefaultNodePoolLinuxOsConfigPtrInput interface {
	pulumi.Input

	ToKubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput() KubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput
	ToKubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutputWithContext(context.Context) KubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput
}

type kubernetesClusterDefaultNodePoolLinuxOsConfigPtrType KubernetesClusterDefaultNodePoolLinuxOsConfigArgs

func KubernetesClusterDefaultNodePoolLinuxOsConfigPtr(v *KubernetesClusterDefaultNodePoolLinuxOsConfigArgs) KubernetesClusterDefaultNodePoolLinuxOsConfigPtrInput {
	return (*kubernetesClusterDefaultNodePoolLinuxOsConfigPtrType)(v)
}

func (*kubernetesClusterDefaultNodePoolLinuxOsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterDefaultNodePoolLinuxOsConfig)(nil)).Elem()
}

func (i *kubernetesClusterDefaultNodePoolLinuxOsConfigPtrType) ToKubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput() KubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput {
	return i.ToKubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterDefaultNodePoolLinuxOsConfigPtrType) ToKubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput)
}

type KubernetesClusterDefaultNodePoolLinuxOsConfigOutput struct{ *pulumi.OutputState }

func (KubernetesClusterDefaultNodePoolLinuxOsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterDefaultNodePoolLinuxOsConfig)(nil)).Elem()
}

func (o KubernetesClusterDefaultNodePoolLinuxOsConfigOutput) ToKubernetesClusterDefaultNodePoolLinuxOsConfigOutput() KubernetesClusterDefaultNodePoolLinuxOsConfigOutput {
	return o
}

func (o KubernetesClusterDefaultNodePoolLinuxOsConfigOutput) ToKubernetesClusterDefaultNodePoolLinuxOsConfigOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolLinuxOsConfigOutput {
	return o
}

func (o KubernetesClusterDefaultNodePoolLinuxOsConfigOutput) ToKubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput() KubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput {
	return o.ToKubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterDefaultNodePoolLinuxOsConfigOutput) ToKubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterDefaultNodePoolLinuxOsConfig) *KubernetesClusterDefaultNodePoolLinuxOsConfig {
		return &v
	}).(KubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput)
}

// Specifies the size of the swap file on each node in MB.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigOutput) SwapFileSizeMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfig) *int { return v.SwapFileSizeMb }).(pulumi.IntPtrOutput)
}

// A `sysctlConfig` block as defined below. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigOutput) SysctlConfig() KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfig) *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig {
		return v.SysctlConfig
	}).(KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput)
}

// specifies the defrag configuration for Transparent Huge Page. Possible values are `always`, `defer`, `defer+madvise`, `madvise` and `never`.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigOutput) TransparentHugePageDefrag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfig) *string { return v.TransparentHugePageDefrag }).(pulumi.StringPtrOutput)
}

// Specifies the Transparent Huge Page enabled configuration. Possible values are `always`, `madvise` and `never`.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigOutput) TransparentHugePageEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfig) *string { return v.TransparentHugePageEnabled }).(pulumi.StringPtrOutput)
}

type KubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterDefaultNodePoolLinuxOsConfig)(nil)).Elem()
}

func (o KubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput) ToKubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput() KubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput {
	return o
}

func (o KubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput) ToKubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput {
	return o
}

func (o KubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput) Elem() KubernetesClusterDefaultNodePoolLinuxOsConfigOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfig) KubernetesClusterDefaultNodePoolLinuxOsConfig {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterDefaultNodePoolLinuxOsConfig
		return ret
	}).(KubernetesClusterDefaultNodePoolLinuxOsConfigOutput)
}

// Specifies the size of the swap file on each node in MB.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput) SwapFileSizeMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfig) *int {
		if v == nil {
			return nil
		}
		return v.SwapFileSizeMb
	}).(pulumi.IntPtrOutput)
}

// A `sysctlConfig` block as defined below. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput) SysctlConfig() KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfig) *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig {
		if v == nil {
			return nil
		}
		return v.SysctlConfig
	}).(KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput)
}

// specifies the defrag configuration for Transparent Huge Page. Possible values are `always`, `defer`, `defer+madvise`, `madvise` and `never`.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput) TransparentHugePageDefrag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfig) *string {
		if v == nil {
			return nil
		}
		return v.TransparentHugePageDefrag
	}).(pulumi.StringPtrOutput)
}

// Specifies the Transparent Huge Page enabled configuration. Possible values are `always`, `madvise` and `never`.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput) TransparentHugePageEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfig) *string {
		if v == nil {
			return nil
		}
		return v.TransparentHugePageEnabled
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig struct {
	// The sysctl setting fs.aio-max-nr. Must be between `65536` and `6553500`. Changing this forces a new resource to be created.
	FsAioMaxNr *int `pulumi:"fsAioMaxNr"`
	// The sysctl setting fs.file-max. Must be between `8192` and `12000500`. Changing this forces a new resource to be created.
	FsFileMax *int `pulumi:"fsFileMax"`
	// The sysctl setting fs.inotify.max_user_watches. Must be between `781250` and `2097152`. Changing this forces a new resource to be created.
	FsInotifyMaxUserWatches *int `pulumi:"fsInotifyMaxUserWatches"`
	// The sysctl setting fs.nr_open. Must be between `8192` and `20000500`. Changing this forces a new resource to be created.
	FsNrOpen *int `pulumi:"fsNrOpen"`
	// The sysctl setting kernel.threads-max. Must be between `20` and `513785`. Changing this forces a new resource to be created.
	KernelThreadsMax *int `pulumi:"kernelThreadsMax"`
	// The sysctl setting net.core.netdev_max_backlog. Must be between `1000` and `3240000`. Changing this forces a new resource to be created.
	NetCoreNetdevMaxBacklog *int `pulumi:"netCoreNetdevMaxBacklog"`
	// The sysctl setting net.core.optmem_max. Must be between `20480` and `4194304`. Changing this forces a new resource to be created.
	NetCoreOptmemMax *int `pulumi:"netCoreOptmemMax"`
	// The sysctl setting net.core.rmem_default. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
	NetCoreRmemDefault *int `pulumi:"netCoreRmemDefault"`
	// The sysctl setting net.core.rmem_max. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
	NetCoreRmemMax *int `pulumi:"netCoreRmemMax"`
	// The sysctl setting net.core.somaxconn. Must be between `4096` and `3240000`. Changing this forces a new resource to be created.
	NetCoreSomaxconn *int `pulumi:"netCoreSomaxconn"`
	// The sysctl setting net.core.wmem_default. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
	NetCoreWmemDefault *int `pulumi:"netCoreWmemDefault"`
	// The sysctl setting net.core.wmem_max. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
	NetCoreWmemMax *int `pulumi:"netCoreWmemMax"`
	// The sysctl setting net.ipv4.ip_local_port_range max value. Must be between `32768` and `65535`. Changing this forces a new resource to be created.
	NetIpv4IpLocalPortRangeMax *int `pulumi:"netIpv4IpLocalPortRangeMax"`
	// The sysctl setting net.ipv4.ip_local_port_range min value. Must be between `1024` and `60999`. Changing this forces a new resource to be created.
	NetIpv4IpLocalPortRangeMin *int `pulumi:"netIpv4IpLocalPortRangeMin"`
	// The sysctl setting net.ipv4.neigh.default.gc_thresh1. Must be between `128` and `80000`. Changing this forces a new resource to be created.
	NetIpv4NeighDefaultGcThresh1 *int `pulumi:"netIpv4NeighDefaultGcThresh1"`
	// The sysctl setting net.ipv4.neigh.default.gc_thresh2. Must be between `512` and `90000`. Changing this forces a new resource to be created.
	NetIpv4NeighDefaultGcThresh2 *int `pulumi:"netIpv4NeighDefaultGcThresh2"`
	// The sysctl setting net.ipv4.neigh.default.gc_thresh3. Must be between `1024` and `100000`. Changing this forces a new resource to be created.
	NetIpv4NeighDefaultGcThresh3 *int `pulumi:"netIpv4NeighDefaultGcThresh3"`
	// The sysctl setting net.ipv4.tcp_fin_timeout. Must be between `5` and `120`. Changing this forces a new resource to be created.
	NetIpv4TcpFinTimeout *int `pulumi:"netIpv4TcpFinTimeout"`
	// The sysctl setting net.ipv4.tcp_keepalive_intvl. Must be between `10` and `90`. Changing this forces a new resource to be created.
	NetIpv4TcpKeepaliveIntvl *int `pulumi:"netIpv4TcpKeepaliveIntvl"`
	// The sysctl setting net.ipv4.tcp_keepalive_probes. Must be between `1` and `15`. Changing this forces a new resource to be created.
	NetIpv4TcpKeepaliveProbes *int `pulumi:"netIpv4TcpKeepaliveProbes"`
	// The sysctl setting net.ipv4.tcp_keepalive_time. Must be between `30` and `432000`. Changing this forces a new resource to be created.
	NetIpv4TcpKeepaliveTime *int `pulumi:"netIpv4TcpKeepaliveTime"`
	// The sysctl setting net.ipv4.tcp_max_syn_backlog. Must be between `128` and `3240000`. Changing this forces a new resource to be created.
	NetIpv4TcpMaxSynBacklog *int `pulumi:"netIpv4TcpMaxSynBacklog"`
	// The sysctl setting net.ipv4.tcp_max_tw_buckets. Must be between `8000` and `1440000`. Changing this forces a new resource to be created.
	NetIpv4TcpMaxTwBuckets *int `pulumi:"netIpv4TcpMaxTwBuckets"`
	// The sysctl setting net.ipv4.tcp_tw_reuse. Changing this forces a new resource to be created.
	NetIpv4TcpTwReuse *bool `pulumi:"netIpv4TcpTwReuse"`
	// The sysctl setting net.netfilter.nf_conntrack_buckets. Must be between `65536` and `524288`. Changing this forces a new resource to be created.
	NetNetfilterNfConntrackBuckets *int `pulumi:"netNetfilterNfConntrackBuckets"`
	// The sysctl setting net.netfilter.nf_conntrack_max. Must be between `131072` and `2097152`. Changing this forces a new resource to be created.
	NetNetfilterNfConntrackMax *int `pulumi:"netNetfilterNfConntrackMax"`
	// The sysctl setting vm.max_map_count. Must be between `65530` and `262144`. Changing this forces a new resource to be created.
	VmMaxMapCount *int `pulumi:"vmMaxMapCount"`
	// The sysctl setting vm.swappiness. Must be between `0` and `100`. Changing this forces a new resource to be created.
	VmSwappiness *int `pulumi:"vmSwappiness"`
	// The sysctl setting vm.vfs_cache_pressure. Must be between `0` and `100`. Changing this forces a new resource to be created.
	VmVfsCachePressure *int `pulumi:"vmVfsCachePressure"`
}

// KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigInput is an input type that accepts KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigArgs and KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput values.
// You can construct a concrete instance of `KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigInput` via:
//
//	KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigArgs{...}
type KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigInput interface {
	pulumi.Input

	ToKubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput() KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput
	ToKubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutputWithContext(context.Context) KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput
}

type KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigArgs struct {
	// The sysctl setting fs.aio-max-nr. Must be between `65536` and `6553500`. Changing this forces a new resource to be created.
	FsAioMaxNr pulumi.IntPtrInput `pulumi:"fsAioMaxNr"`
	// The sysctl setting fs.file-max. Must be between `8192` and `12000500`. Changing this forces a new resource to be created.
	FsFileMax pulumi.IntPtrInput `pulumi:"fsFileMax"`
	// The sysctl setting fs.inotify.max_user_watches. Must be between `781250` and `2097152`. Changing this forces a new resource to be created.
	FsInotifyMaxUserWatches pulumi.IntPtrInput `pulumi:"fsInotifyMaxUserWatches"`
	// The sysctl setting fs.nr_open. Must be between `8192` and `20000500`. Changing this forces a new resource to be created.
	FsNrOpen pulumi.IntPtrInput `pulumi:"fsNrOpen"`
	// The sysctl setting kernel.threads-max. Must be between `20` and `513785`. Changing this forces a new resource to be created.
	KernelThreadsMax pulumi.IntPtrInput `pulumi:"kernelThreadsMax"`
	// The sysctl setting net.core.netdev_max_backlog. Must be between `1000` and `3240000`. Changing this forces a new resource to be created.
	NetCoreNetdevMaxBacklog pulumi.IntPtrInput `pulumi:"netCoreNetdevMaxBacklog"`
	// The sysctl setting net.core.optmem_max. Must be between `20480` and `4194304`. Changing this forces a new resource to be created.
	NetCoreOptmemMax pulumi.IntPtrInput `pulumi:"netCoreOptmemMax"`
	// The sysctl setting net.core.rmem_default. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
	NetCoreRmemDefault pulumi.IntPtrInput `pulumi:"netCoreRmemDefault"`
	// The sysctl setting net.core.rmem_max. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
	NetCoreRmemMax pulumi.IntPtrInput `pulumi:"netCoreRmemMax"`
	// The sysctl setting net.core.somaxconn. Must be between `4096` and `3240000`. Changing this forces a new resource to be created.
	NetCoreSomaxconn pulumi.IntPtrInput `pulumi:"netCoreSomaxconn"`
	// The sysctl setting net.core.wmem_default. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
	NetCoreWmemDefault pulumi.IntPtrInput `pulumi:"netCoreWmemDefault"`
	// The sysctl setting net.core.wmem_max. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
	NetCoreWmemMax pulumi.IntPtrInput `pulumi:"netCoreWmemMax"`
	// The sysctl setting net.ipv4.ip_local_port_range max value. Must be between `32768` and `65535`. Changing this forces a new resource to be created.
	NetIpv4IpLocalPortRangeMax pulumi.IntPtrInput `pulumi:"netIpv4IpLocalPortRangeMax"`
	// The sysctl setting net.ipv4.ip_local_port_range min value. Must be between `1024` and `60999`. Changing this forces a new resource to be created.
	NetIpv4IpLocalPortRangeMin pulumi.IntPtrInput `pulumi:"netIpv4IpLocalPortRangeMin"`
	// The sysctl setting net.ipv4.neigh.default.gc_thresh1. Must be between `128` and `80000`. Changing this forces a new resource to be created.
	NetIpv4NeighDefaultGcThresh1 pulumi.IntPtrInput `pulumi:"netIpv4NeighDefaultGcThresh1"`
	// The sysctl setting net.ipv4.neigh.default.gc_thresh2. Must be between `512` and `90000`. Changing this forces a new resource to be created.
	NetIpv4NeighDefaultGcThresh2 pulumi.IntPtrInput `pulumi:"netIpv4NeighDefaultGcThresh2"`
	// The sysctl setting net.ipv4.neigh.default.gc_thresh3. Must be between `1024` and `100000`. Changing this forces a new resource to be created.
	NetIpv4NeighDefaultGcThresh3 pulumi.IntPtrInput `pulumi:"netIpv4NeighDefaultGcThresh3"`
	// The sysctl setting net.ipv4.tcp_fin_timeout. Must be between `5` and `120`. Changing this forces a new resource to be created.
	NetIpv4TcpFinTimeout pulumi.IntPtrInput `pulumi:"netIpv4TcpFinTimeout"`
	// The sysctl setting net.ipv4.tcp_keepalive_intvl. Must be between `10` and `90`. Changing this forces a new resource to be created.
	NetIpv4TcpKeepaliveIntvl pulumi.IntPtrInput `pulumi:"netIpv4TcpKeepaliveIntvl"`
	// The sysctl setting net.ipv4.tcp_keepalive_probes. Must be between `1` and `15`. Changing this forces a new resource to be created.
	NetIpv4TcpKeepaliveProbes pulumi.IntPtrInput `pulumi:"netIpv4TcpKeepaliveProbes"`
	// The sysctl setting net.ipv4.tcp_keepalive_time. Must be between `30` and `432000`. Changing this forces a new resource to be created.
	NetIpv4TcpKeepaliveTime pulumi.IntPtrInput `pulumi:"netIpv4TcpKeepaliveTime"`
	// The sysctl setting net.ipv4.tcp_max_syn_backlog. Must be between `128` and `3240000`. Changing this forces a new resource to be created.
	NetIpv4TcpMaxSynBacklog pulumi.IntPtrInput `pulumi:"netIpv4TcpMaxSynBacklog"`
	// The sysctl setting net.ipv4.tcp_max_tw_buckets. Must be between `8000` and `1440000`. Changing this forces a new resource to be created.
	NetIpv4TcpMaxTwBuckets pulumi.IntPtrInput `pulumi:"netIpv4TcpMaxTwBuckets"`
	// The sysctl setting net.ipv4.tcp_tw_reuse. Changing this forces a new resource to be created.
	NetIpv4TcpTwReuse pulumi.BoolPtrInput `pulumi:"netIpv4TcpTwReuse"`
	// The sysctl setting net.netfilter.nf_conntrack_buckets. Must be between `65536` and `524288`. Changing this forces a new resource to be created.
	NetNetfilterNfConntrackBuckets pulumi.IntPtrInput `pulumi:"netNetfilterNfConntrackBuckets"`
	// The sysctl setting net.netfilter.nf_conntrack_max. Must be between `131072` and `2097152`. Changing this forces a new resource to be created.
	NetNetfilterNfConntrackMax pulumi.IntPtrInput `pulumi:"netNetfilterNfConntrackMax"`
	// The sysctl setting vm.max_map_count. Must be between `65530` and `262144`. Changing this forces a new resource to be created.
	VmMaxMapCount pulumi.IntPtrInput `pulumi:"vmMaxMapCount"`
	// The sysctl setting vm.swappiness. Must be between `0` and `100`. Changing this forces a new resource to be created.
	VmSwappiness pulumi.IntPtrInput `pulumi:"vmSwappiness"`
	// The sysctl setting vm.vfs_cache_pressure. Must be between `0` and `100`. Changing this forces a new resource to be created.
	VmVfsCachePressure pulumi.IntPtrInput `pulumi:"vmVfsCachePressure"`
}

func (KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig)(nil)).Elem()
}

func (i KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigArgs) ToKubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput() KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput {
	return i.ToKubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutputWithContext(context.Background())
}

func (i KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigArgs) ToKubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput)
}

func (i KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigArgs) ToKubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput() KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput {
	return i.ToKubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigArgs) ToKubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput).ToKubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutputWithContext(ctx)
}

// KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrInput is an input type that accepts KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigArgs, KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtr and KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrInput` via:
//
//	        KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrInput interface {
	pulumi.Input

	ToKubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput() KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput
	ToKubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutputWithContext(context.Context) KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput
}

type kubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrType KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigArgs

func KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtr(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigArgs) KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrInput {
	return (*kubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrType)(v)
}

func (*kubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig)(nil)).Elem()
}

func (i *kubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrType) ToKubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput() KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput {
	return i.ToKubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrType) ToKubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput)
}

type KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput struct{ *pulumi.OutputState }

func (KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig)(nil)).Elem()
}

func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) ToKubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput() KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput {
	return o
}

func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) ToKubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput {
	return o
}

func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) ToKubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput() KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput {
	return o.ToKubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) ToKubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig {
		return &v
	}).(KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput)
}

// The sysctl setting fs.aio-max-nr. Must be between `65536` and `6553500`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) FsAioMaxNr() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int { return v.FsAioMaxNr }).(pulumi.IntPtrOutput)
}

// The sysctl setting fs.file-max. Must be between `8192` and `12000500`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) FsFileMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int { return v.FsFileMax }).(pulumi.IntPtrOutput)
}

// The sysctl setting fs.inotify.max_user_watches. Must be between `781250` and `2097152`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) FsInotifyMaxUserWatches() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		return v.FsInotifyMaxUserWatches
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting fs.nr_open. Must be between `8192` and `20000500`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) FsNrOpen() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int { return v.FsNrOpen }).(pulumi.IntPtrOutput)
}

// The sysctl setting kernel.threads-max. Must be between `20` and `513785`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) KernelThreadsMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int { return v.KernelThreadsMax }).(pulumi.IntPtrOutput)
}

// The sysctl setting net.core.netdev_max_backlog. Must be between `1000` and `3240000`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) NetCoreNetdevMaxBacklog() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		return v.NetCoreNetdevMaxBacklog
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.core.optmem_max. Must be between `20480` and `4194304`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) NetCoreOptmemMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int { return v.NetCoreOptmemMax }).(pulumi.IntPtrOutput)
}

// The sysctl setting net.core.rmem_default. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) NetCoreRmemDefault() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int { return v.NetCoreRmemDefault }).(pulumi.IntPtrOutput)
}

// The sysctl setting net.core.rmem_max. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) NetCoreRmemMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int { return v.NetCoreRmemMax }).(pulumi.IntPtrOutput)
}

// The sysctl setting net.core.somaxconn. Must be between `4096` and `3240000`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) NetCoreSomaxconn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int { return v.NetCoreSomaxconn }).(pulumi.IntPtrOutput)
}

// The sysctl setting net.core.wmem_default. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) NetCoreWmemDefault() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int { return v.NetCoreWmemDefault }).(pulumi.IntPtrOutput)
}

// The sysctl setting net.core.wmem_max. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) NetCoreWmemMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int { return v.NetCoreWmemMax }).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.ip_local_port_range max value. Must be between `32768` and `65535`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) NetIpv4IpLocalPortRangeMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		return v.NetIpv4IpLocalPortRangeMax
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.ip_local_port_range min value. Must be between `1024` and `60999`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) NetIpv4IpLocalPortRangeMin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		return v.NetIpv4IpLocalPortRangeMin
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.neigh.default.gc_thresh1. Must be between `128` and `80000`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) NetIpv4NeighDefaultGcThresh1() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		return v.NetIpv4NeighDefaultGcThresh1
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.neigh.default.gc_thresh2. Must be between `512` and `90000`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) NetIpv4NeighDefaultGcThresh2() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		return v.NetIpv4NeighDefaultGcThresh2
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.neigh.default.gc_thresh3. Must be between `1024` and `100000`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) NetIpv4NeighDefaultGcThresh3() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		return v.NetIpv4NeighDefaultGcThresh3
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.tcp_fin_timeout. Must be between `5` and `120`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) NetIpv4TcpFinTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int { return v.NetIpv4TcpFinTimeout }).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.tcp_keepalive_intvl. Must be between `10` and `90`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) NetIpv4TcpKeepaliveIntvl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		return v.NetIpv4TcpKeepaliveIntvl
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.tcp_keepalive_probes. Must be between `1` and `15`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) NetIpv4TcpKeepaliveProbes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		return v.NetIpv4TcpKeepaliveProbes
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.tcp_keepalive_time. Must be between `30` and `432000`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) NetIpv4TcpKeepaliveTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		return v.NetIpv4TcpKeepaliveTime
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.tcp_max_syn_backlog. Must be between `128` and `3240000`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) NetIpv4TcpMaxSynBacklog() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		return v.NetIpv4TcpMaxSynBacklog
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.tcp_max_tw_buckets. Must be between `8000` and `1440000`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) NetIpv4TcpMaxTwBuckets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		return v.NetIpv4TcpMaxTwBuckets
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.tcp_tw_reuse. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) NetIpv4TcpTwReuse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *bool { return v.NetIpv4TcpTwReuse }).(pulumi.BoolPtrOutput)
}

// The sysctl setting net.netfilter.nf_conntrack_buckets. Must be between `65536` and `524288`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) NetNetfilterNfConntrackBuckets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		return v.NetNetfilterNfConntrackBuckets
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.netfilter.nf_conntrack_max. Must be between `131072` and `2097152`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) NetNetfilterNfConntrackMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		return v.NetNetfilterNfConntrackMax
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting vm.max_map_count. Must be between `65530` and `262144`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) VmMaxMapCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int { return v.VmMaxMapCount }).(pulumi.IntPtrOutput)
}

// The sysctl setting vm.swappiness. Must be between `0` and `100`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) VmSwappiness() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int { return v.VmSwappiness }).(pulumi.IntPtrOutput)
}

// The sysctl setting vm.vfs_cache_pressure. Must be between `0` and `100`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput) VmVfsCachePressure() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int { return v.VmVfsCachePressure }).(pulumi.IntPtrOutput)
}

type KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig)(nil)).Elem()
}

func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) ToKubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput() KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput {
	return o
}

func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) ToKubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput {
	return o
}

func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) Elem() KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig
		return ret
	}).(KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput)
}

// The sysctl setting fs.aio-max-nr. Must be between `65536` and `6553500`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) FsAioMaxNr() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.FsAioMaxNr
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting fs.file-max. Must be between `8192` and `12000500`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) FsFileMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.FsFileMax
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting fs.inotify.max_user_watches. Must be between `781250` and `2097152`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) FsInotifyMaxUserWatches() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.FsInotifyMaxUserWatches
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting fs.nr_open. Must be between `8192` and `20000500`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) FsNrOpen() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.FsNrOpen
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting kernel.threads-max. Must be between `20` and `513785`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) KernelThreadsMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.KernelThreadsMax
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.core.netdev_max_backlog. Must be between `1000` and `3240000`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetCoreNetdevMaxBacklog() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetCoreNetdevMaxBacklog
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.core.optmem_max. Must be between `20480` and `4194304`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetCoreOptmemMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetCoreOptmemMax
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.core.rmem_default. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetCoreRmemDefault() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetCoreRmemDefault
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.core.rmem_max. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetCoreRmemMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetCoreRmemMax
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.core.somaxconn. Must be between `4096` and `3240000`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetCoreSomaxconn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetCoreSomaxconn
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.core.wmem_default. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetCoreWmemDefault() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetCoreWmemDefault
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.core.wmem_max. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetCoreWmemMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetCoreWmemMax
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.ip_local_port_range max value. Must be between `32768` and `65535`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetIpv4IpLocalPortRangeMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4IpLocalPortRangeMax
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.ip_local_port_range min value. Must be between `1024` and `60999`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetIpv4IpLocalPortRangeMin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4IpLocalPortRangeMin
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.neigh.default.gc_thresh1. Must be between `128` and `80000`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetIpv4NeighDefaultGcThresh1() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4NeighDefaultGcThresh1
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.neigh.default.gc_thresh2. Must be between `512` and `90000`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetIpv4NeighDefaultGcThresh2() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4NeighDefaultGcThresh2
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.neigh.default.gc_thresh3. Must be between `1024` and `100000`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetIpv4NeighDefaultGcThresh3() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4NeighDefaultGcThresh3
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.tcp_fin_timeout. Must be between `5` and `120`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetIpv4TcpFinTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4TcpFinTimeout
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.tcp_keepalive_intvl. Must be between `10` and `90`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetIpv4TcpKeepaliveIntvl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4TcpKeepaliveIntvl
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.tcp_keepalive_probes. Must be between `1` and `15`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetIpv4TcpKeepaliveProbes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4TcpKeepaliveProbes
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.tcp_keepalive_time. Must be between `30` and `432000`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetIpv4TcpKeepaliveTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4TcpKeepaliveTime
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.tcp_max_syn_backlog. Must be between `128` and `3240000`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetIpv4TcpMaxSynBacklog() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4TcpMaxSynBacklog
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.tcp_max_tw_buckets. Must be between `8000` and `1440000`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetIpv4TcpMaxTwBuckets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4TcpMaxTwBuckets
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.tcp_tw_reuse. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetIpv4TcpTwReuse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *bool {
		if v == nil {
			return nil
		}
		return v.NetIpv4TcpTwReuse
	}).(pulumi.BoolPtrOutput)
}

// The sysctl setting net.netfilter.nf_conntrack_buckets. Must be between `65536` and `524288`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetNetfilterNfConntrackBuckets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetNetfilterNfConntrackBuckets
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.netfilter.nf_conntrack_max. Must be between `131072` and `2097152`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetNetfilterNfConntrackMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetNetfilterNfConntrackMax
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting vm.max_map_count. Must be between `65530` and `262144`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) VmMaxMapCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.VmMaxMapCount
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting vm.swappiness. Must be between `0` and `100`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) VmSwappiness() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.VmSwappiness
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting vm.vfs_cache_pressure. Must be between `0` and `100`. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput) VmVfsCachePressure() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.VmVfsCachePressure
	}).(pulumi.IntPtrOutput)
}

type KubernetesClusterDefaultNodePoolNodeNetworkProfile struct {
	// Specifies a mapping of tags to the instance-level public IPs. Changing this forces a new resource to be created.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/NodePublicIPTagsPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/use-node-public-ips#use-public-ip-tags-on-node-public-ips-preview) for more information.
	NodePublicIpTags map[string]string `pulumi:"nodePublicIpTags"`
}

// KubernetesClusterDefaultNodePoolNodeNetworkProfileInput is an input type that accepts KubernetesClusterDefaultNodePoolNodeNetworkProfileArgs and KubernetesClusterDefaultNodePoolNodeNetworkProfileOutput values.
// You can construct a concrete instance of `KubernetesClusterDefaultNodePoolNodeNetworkProfileInput` via:
//
//	KubernetesClusterDefaultNodePoolNodeNetworkProfileArgs{...}
type KubernetesClusterDefaultNodePoolNodeNetworkProfileInput interface {
	pulumi.Input

	ToKubernetesClusterDefaultNodePoolNodeNetworkProfileOutput() KubernetesClusterDefaultNodePoolNodeNetworkProfileOutput
	ToKubernetesClusterDefaultNodePoolNodeNetworkProfileOutputWithContext(context.Context) KubernetesClusterDefaultNodePoolNodeNetworkProfileOutput
}

type KubernetesClusterDefaultNodePoolNodeNetworkProfileArgs struct {
	// Specifies a mapping of tags to the instance-level public IPs. Changing this forces a new resource to be created.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/NodePublicIPTagsPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/use-node-public-ips#use-public-ip-tags-on-node-public-ips-preview) for more information.
	NodePublicIpTags pulumi.StringMapInput `pulumi:"nodePublicIpTags"`
}

func (KubernetesClusterDefaultNodePoolNodeNetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterDefaultNodePoolNodeNetworkProfile)(nil)).Elem()
}

func (i KubernetesClusterDefaultNodePoolNodeNetworkProfileArgs) ToKubernetesClusterDefaultNodePoolNodeNetworkProfileOutput() KubernetesClusterDefaultNodePoolNodeNetworkProfileOutput {
	return i.ToKubernetesClusterDefaultNodePoolNodeNetworkProfileOutputWithContext(context.Background())
}

func (i KubernetesClusterDefaultNodePoolNodeNetworkProfileArgs) ToKubernetesClusterDefaultNodePoolNodeNetworkProfileOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolNodeNetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterDefaultNodePoolNodeNetworkProfileOutput)
}

func (i KubernetesClusterDefaultNodePoolNodeNetworkProfileArgs) ToKubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutput() KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutput {
	return i.ToKubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutputWithContext(context.Background())
}

func (i KubernetesClusterDefaultNodePoolNodeNetworkProfileArgs) ToKubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterDefaultNodePoolNodeNetworkProfileOutput).ToKubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutputWithContext(ctx)
}

// KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrInput is an input type that accepts KubernetesClusterDefaultNodePoolNodeNetworkProfileArgs, KubernetesClusterDefaultNodePoolNodeNetworkProfilePtr and KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutput values.
// You can construct a concrete instance of `KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrInput` via:
//
//	        KubernetesClusterDefaultNodePoolNodeNetworkProfileArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrInput interface {
	pulumi.Input

	ToKubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutput() KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutput
	ToKubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutputWithContext(context.Context) KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutput
}

type kubernetesClusterDefaultNodePoolNodeNetworkProfilePtrType KubernetesClusterDefaultNodePoolNodeNetworkProfileArgs

func KubernetesClusterDefaultNodePoolNodeNetworkProfilePtr(v *KubernetesClusterDefaultNodePoolNodeNetworkProfileArgs) KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrInput {
	return (*kubernetesClusterDefaultNodePoolNodeNetworkProfilePtrType)(v)
}

func (*kubernetesClusterDefaultNodePoolNodeNetworkProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterDefaultNodePoolNodeNetworkProfile)(nil)).Elem()
}

func (i *kubernetesClusterDefaultNodePoolNodeNetworkProfilePtrType) ToKubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutput() KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutput {
	return i.ToKubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterDefaultNodePoolNodeNetworkProfilePtrType) ToKubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutput)
}

type KubernetesClusterDefaultNodePoolNodeNetworkProfileOutput struct{ *pulumi.OutputState }

func (KubernetesClusterDefaultNodePoolNodeNetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterDefaultNodePoolNodeNetworkProfile)(nil)).Elem()
}

func (o KubernetesClusterDefaultNodePoolNodeNetworkProfileOutput) ToKubernetesClusterDefaultNodePoolNodeNetworkProfileOutput() KubernetesClusterDefaultNodePoolNodeNetworkProfileOutput {
	return o
}

func (o KubernetesClusterDefaultNodePoolNodeNetworkProfileOutput) ToKubernetesClusterDefaultNodePoolNodeNetworkProfileOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolNodeNetworkProfileOutput {
	return o
}

func (o KubernetesClusterDefaultNodePoolNodeNetworkProfileOutput) ToKubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutput() KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutput {
	return o.ToKubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutputWithContext(context.Background())
}

func (o KubernetesClusterDefaultNodePoolNodeNetworkProfileOutput) ToKubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterDefaultNodePoolNodeNetworkProfile) *KubernetesClusterDefaultNodePoolNodeNetworkProfile {
		return &v
	}).(KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutput)
}

// Specifies a mapping of tags to the instance-level public IPs. Changing this forces a new resource to be created.
//
// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/NodePublicIPTagsPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/use-node-public-ips#use-public-ip-tags-on-node-public-ips-preview) for more information.
func (o KubernetesClusterDefaultNodePoolNodeNetworkProfileOutput) NodePublicIpTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolNodeNetworkProfile) map[string]string {
		return v.NodePublicIpTags
	}).(pulumi.StringMapOutput)
}

type KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterDefaultNodePoolNodeNetworkProfile)(nil)).Elem()
}

func (o KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutput) ToKubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutput() KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutput {
	return o
}

func (o KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutput) ToKubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutput {
	return o
}

func (o KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutput) Elem() KubernetesClusterDefaultNodePoolNodeNetworkProfileOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolNodeNetworkProfile) KubernetesClusterDefaultNodePoolNodeNetworkProfile {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterDefaultNodePoolNodeNetworkProfile
		return ret
	}).(KubernetesClusterDefaultNodePoolNodeNetworkProfileOutput)
}

// Specifies a mapping of tags to the instance-level public IPs. Changing this forces a new resource to be created.
//
// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/NodePublicIPTagsPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/use-node-public-ips#use-public-ip-tags-on-node-public-ips-preview) for more information.
func (o KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutput) NodePublicIpTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolNodeNetworkProfile) map[string]string {
		if v == nil {
			return nil
		}
		return v.NodePublicIpTags
	}).(pulumi.StringMapOutput)
}

type KubernetesClusterDefaultNodePoolUpgradeSettings struct {
	// The maximum number or percentage of nodes which will be added to the Node Pool size during an upgrade.
	//
	// > **Note:** If a percentage is provided, the number of surge nodes is calculated from the `nodeCount` value on the current cluster. Node surge can allow a cluster to have more nodes than `maxCount` during an upgrade. Ensure that your cluster has enough [IP space](https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade) during an upgrade.
	MaxSurge string `pulumi:"maxSurge"`
}

// KubernetesClusterDefaultNodePoolUpgradeSettingsInput is an input type that accepts KubernetesClusterDefaultNodePoolUpgradeSettingsArgs and KubernetesClusterDefaultNodePoolUpgradeSettingsOutput values.
// You can construct a concrete instance of `KubernetesClusterDefaultNodePoolUpgradeSettingsInput` via:
//
//	KubernetesClusterDefaultNodePoolUpgradeSettingsArgs{...}
type KubernetesClusterDefaultNodePoolUpgradeSettingsInput interface {
	pulumi.Input

	ToKubernetesClusterDefaultNodePoolUpgradeSettingsOutput() KubernetesClusterDefaultNodePoolUpgradeSettingsOutput
	ToKubernetesClusterDefaultNodePoolUpgradeSettingsOutputWithContext(context.Context) KubernetesClusterDefaultNodePoolUpgradeSettingsOutput
}

type KubernetesClusterDefaultNodePoolUpgradeSettingsArgs struct {
	// The maximum number or percentage of nodes which will be added to the Node Pool size during an upgrade.
	//
	// > **Note:** If a percentage is provided, the number of surge nodes is calculated from the `nodeCount` value on the current cluster. Node surge can allow a cluster to have more nodes than `maxCount` during an upgrade. Ensure that your cluster has enough [IP space](https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade) during an upgrade.
	MaxSurge pulumi.StringInput `pulumi:"maxSurge"`
}

func (KubernetesClusterDefaultNodePoolUpgradeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterDefaultNodePoolUpgradeSettings)(nil)).Elem()
}

func (i KubernetesClusterDefaultNodePoolUpgradeSettingsArgs) ToKubernetesClusterDefaultNodePoolUpgradeSettingsOutput() KubernetesClusterDefaultNodePoolUpgradeSettingsOutput {
	return i.ToKubernetesClusterDefaultNodePoolUpgradeSettingsOutputWithContext(context.Background())
}

func (i KubernetesClusterDefaultNodePoolUpgradeSettingsArgs) ToKubernetesClusterDefaultNodePoolUpgradeSettingsOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolUpgradeSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterDefaultNodePoolUpgradeSettingsOutput)
}

func (i KubernetesClusterDefaultNodePoolUpgradeSettingsArgs) ToKubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutput() KubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutput {
	return i.ToKubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterDefaultNodePoolUpgradeSettingsArgs) ToKubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterDefaultNodePoolUpgradeSettingsOutput).ToKubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutputWithContext(ctx)
}

// KubernetesClusterDefaultNodePoolUpgradeSettingsPtrInput is an input type that accepts KubernetesClusterDefaultNodePoolUpgradeSettingsArgs, KubernetesClusterDefaultNodePoolUpgradeSettingsPtr and KubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterDefaultNodePoolUpgradeSettingsPtrInput` via:
//
//	        KubernetesClusterDefaultNodePoolUpgradeSettingsArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterDefaultNodePoolUpgradeSettingsPtrInput interface {
	pulumi.Input

	ToKubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutput() KubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutput
	ToKubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutputWithContext(context.Context) KubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutput
}

type kubernetesClusterDefaultNodePoolUpgradeSettingsPtrType KubernetesClusterDefaultNodePoolUpgradeSettingsArgs

func KubernetesClusterDefaultNodePoolUpgradeSettingsPtr(v *KubernetesClusterDefaultNodePoolUpgradeSettingsArgs) KubernetesClusterDefaultNodePoolUpgradeSettingsPtrInput {
	return (*kubernetesClusterDefaultNodePoolUpgradeSettingsPtrType)(v)
}

func (*kubernetesClusterDefaultNodePoolUpgradeSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterDefaultNodePoolUpgradeSettings)(nil)).Elem()
}

func (i *kubernetesClusterDefaultNodePoolUpgradeSettingsPtrType) ToKubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutput() KubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutput {
	return i.ToKubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterDefaultNodePoolUpgradeSettingsPtrType) ToKubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutput)
}

type KubernetesClusterDefaultNodePoolUpgradeSettingsOutput struct{ *pulumi.OutputState }

func (KubernetesClusterDefaultNodePoolUpgradeSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterDefaultNodePoolUpgradeSettings)(nil)).Elem()
}

func (o KubernetesClusterDefaultNodePoolUpgradeSettingsOutput) ToKubernetesClusterDefaultNodePoolUpgradeSettingsOutput() KubernetesClusterDefaultNodePoolUpgradeSettingsOutput {
	return o
}

func (o KubernetesClusterDefaultNodePoolUpgradeSettingsOutput) ToKubernetesClusterDefaultNodePoolUpgradeSettingsOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolUpgradeSettingsOutput {
	return o
}

func (o KubernetesClusterDefaultNodePoolUpgradeSettingsOutput) ToKubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutput() KubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutput {
	return o.ToKubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterDefaultNodePoolUpgradeSettingsOutput) ToKubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterDefaultNodePoolUpgradeSettings) *KubernetesClusterDefaultNodePoolUpgradeSettings {
		return &v
	}).(KubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutput)
}

// The maximum number or percentage of nodes which will be added to the Node Pool size during an upgrade.
//
// > **Note:** If a percentage is provided, the number of surge nodes is calculated from the `nodeCount` value on the current cluster. Node surge can allow a cluster to have more nodes than `maxCount` during an upgrade. Ensure that your cluster has enough [IP space](https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade) during an upgrade.
func (o KubernetesClusterDefaultNodePoolUpgradeSettingsOutput) MaxSurge() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePoolUpgradeSettings) string { return v.MaxSurge }).(pulumi.StringOutput)
}

type KubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterDefaultNodePoolUpgradeSettings)(nil)).Elem()
}

func (o KubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutput) ToKubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutput() KubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutput {
	return o
}

func (o KubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutput) ToKubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutput {
	return o
}

func (o KubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutput) Elem() KubernetesClusterDefaultNodePoolUpgradeSettingsOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolUpgradeSettings) KubernetesClusterDefaultNodePoolUpgradeSettings {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterDefaultNodePoolUpgradeSettings
		return ret
	}).(KubernetesClusterDefaultNodePoolUpgradeSettingsOutput)
}

// The maximum number or percentage of nodes which will be added to the Node Pool size during an upgrade.
//
// > **Note:** If a percentage is provided, the number of surge nodes is calculated from the `nodeCount` value on the current cluster. Node surge can allow a cluster to have more nodes than `maxCount` during an upgrade. Ensure that your cluster has enough [IP space](https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade) during an upgrade.
func (o KubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutput) MaxSurge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePoolUpgradeSettings) *string {
		if v == nil {
			return nil
		}
		return &v.MaxSurge
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterExtensionAksAssignedIdentity struct {
	// The principal ID of resource identity.
	PrincipalId *string `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId *string `pulumi:"tenantId"`
	// The identity type.
	Type *string `pulumi:"type"`
}

// KubernetesClusterExtensionAksAssignedIdentityInput is an input type that accepts KubernetesClusterExtensionAksAssignedIdentityArgs and KubernetesClusterExtensionAksAssignedIdentityOutput values.
// You can construct a concrete instance of `KubernetesClusterExtensionAksAssignedIdentityInput` via:
//
//	KubernetesClusterExtensionAksAssignedIdentityArgs{...}
type KubernetesClusterExtensionAksAssignedIdentityInput interface {
	pulumi.Input

	ToKubernetesClusterExtensionAksAssignedIdentityOutput() KubernetesClusterExtensionAksAssignedIdentityOutput
	ToKubernetesClusterExtensionAksAssignedIdentityOutputWithContext(context.Context) KubernetesClusterExtensionAksAssignedIdentityOutput
}

type KubernetesClusterExtensionAksAssignedIdentityArgs struct {
	// The principal ID of resource identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The tenant ID of resource.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The identity type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (KubernetesClusterExtensionAksAssignedIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterExtensionAksAssignedIdentity)(nil)).Elem()
}

func (i KubernetesClusterExtensionAksAssignedIdentityArgs) ToKubernetesClusterExtensionAksAssignedIdentityOutput() KubernetesClusterExtensionAksAssignedIdentityOutput {
	return i.ToKubernetesClusterExtensionAksAssignedIdentityOutputWithContext(context.Background())
}

func (i KubernetesClusterExtensionAksAssignedIdentityArgs) ToKubernetesClusterExtensionAksAssignedIdentityOutputWithContext(ctx context.Context) KubernetesClusterExtensionAksAssignedIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterExtensionAksAssignedIdentityOutput)
}

// KubernetesClusterExtensionAksAssignedIdentityArrayInput is an input type that accepts KubernetesClusterExtensionAksAssignedIdentityArray and KubernetesClusterExtensionAksAssignedIdentityArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterExtensionAksAssignedIdentityArrayInput` via:
//
//	KubernetesClusterExtensionAksAssignedIdentityArray{ KubernetesClusterExtensionAksAssignedIdentityArgs{...} }
type KubernetesClusterExtensionAksAssignedIdentityArrayInput interface {
	pulumi.Input

	ToKubernetesClusterExtensionAksAssignedIdentityArrayOutput() KubernetesClusterExtensionAksAssignedIdentityArrayOutput
	ToKubernetesClusterExtensionAksAssignedIdentityArrayOutputWithContext(context.Context) KubernetesClusterExtensionAksAssignedIdentityArrayOutput
}

type KubernetesClusterExtensionAksAssignedIdentityArray []KubernetesClusterExtensionAksAssignedIdentityInput

func (KubernetesClusterExtensionAksAssignedIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterExtensionAksAssignedIdentity)(nil)).Elem()
}

func (i KubernetesClusterExtensionAksAssignedIdentityArray) ToKubernetesClusterExtensionAksAssignedIdentityArrayOutput() KubernetesClusterExtensionAksAssignedIdentityArrayOutput {
	return i.ToKubernetesClusterExtensionAksAssignedIdentityArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterExtensionAksAssignedIdentityArray) ToKubernetesClusterExtensionAksAssignedIdentityArrayOutputWithContext(ctx context.Context) KubernetesClusterExtensionAksAssignedIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterExtensionAksAssignedIdentityArrayOutput)
}

type KubernetesClusterExtensionAksAssignedIdentityOutput struct{ *pulumi.OutputState }

func (KubernetesClusterExtensionAksAssignedIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterExtensionAksAssignedIdentity)(nil)).Elem()
}

func (o KubernetesClusterExtensionAksAssignedIdentityOutput) ToKubernetesClusterExtensionAksAssignedIdentityOutput() KubernetesClusterExtensionAksAssignedIdentityOutput {
	return o
}

func (o KubernetesClusterExtensionAksAssignedIdentityOutput) ToKubernetesClusterExtensionAksAssignedIdentityOutputWithContext(ctx context.Context) KubernetesClusterExtensionAksAssignedIdentityOutput {
	return o
}

// The principal ID of resource identity.
func (o KubernetesClusterExtensionAksAssignedIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterExtensionAksAssignedIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The tenant ID of resource.
func (o KubernetesClusterExtensionAksAssignedIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterExtensionAksAssignedIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The identity type.
func (o KubernetesClusterExtensionAksAssignedIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterExtensionAksAssignedIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KubernetesClusterExtensionAksAssignedIdentityArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterExtensionAksAssignedIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterExtensionAksAssignedIdentity)(nil)).Elem()
}

func (o KubernetesClusterExtensionAksAssignedIdentityArrayOutput) ToKubernetesClusterExtensionAksAssignedIdentityArrayOutput() KubernetesClusterExtensionAksAssignedIdentityArrayOutput {
	return o
}

func (o KubernetesClusterExtensionAksAssignedIdentityArrayOutput) ToKubernetesClusterExtensionAksAssignedIdentityArrayOutputWithContext(ctx context.Context) KubernetesClusterExtensionAksAssignedIdentityArrayOutput {
	return o
}

func (o KubernetesClusterExtensionAksAssignedIdentityArrayOutput) Index(i pulumi.IntInput) KubernetesClusterExtensionAksAssignedIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterExtensionAksAssignedIdentity {
		return vs[0].([]KubernetesClusterExtensionAksAssignedIdentity)[vs[1].(int)]
	}).(KubernetesClusterExtensionAksAssignedIdentityOutput)
}

type KubernetesClusterExtensionPlan struct {
	// Specifies the name of the plan from the marketplace. Changing this forces a new Kubernetes Cluster Extension to be created.
	Name string `pulumi:"name"`
	// Specifies the product of the plan from the marketplace. Changing this forces a new Kubernetes Cluster Extension to be created.
	Product string `pulumi:"product"`
	// Specifies the promotion code to use with the plan. Changing this forces a new Kubernetes Cluster Extension to be created.
	PromotionCode *string `pulumi:"promotionCode"`
	// Specifies the publisher of the plan. Changing this forces a new Kubernetes Cluster Extension to be created.
	Publisher string `pulumi:"publisher"`
	// Specifies the version of the plan from the marketplace. Changing this forces a new Kubernetes Cluster Extension to be created.
	//
	// > **NOTE:** When `plan` is specified, legal terms must be accepted for this item on this subscription before creating the Kubernetes Cluster Extension. The `marketplace.Agreement` resource or AZ CLI tool can be used to do this.
	Version *string `pulumi:"version"`
}

// KubernetesClusterExtensionPlanInput is an input type that accepts KubernetesClusterExtensionPlanArgs and KubernetesClusterExtensionPlanOutput values.
// You can construct a concrete instance of `KubernetesClusterExtensionPlanInput` via:
//
//	KubernetesClusterExtensionPlanArgs{...}
type KubernetesClusterExtensionPlanInput interface {
	pulumi.Input

	ToKubernetesClusterExtensionPlanOutput() KubernetesClusterExtensionPlanOutput
	ToKubernetesClusterExtensionPlanOutputWithContext(context.Context) KubernetesClusterExtensionPlanOutput
}

type KubernetesClusterExtensionPlanArgs struct {
	// Specifies the name of the plan from the marketplace. Changing this forces a new Kubernetes Cluster Extension to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the product of the plan from the marketplace. Changing this forces a new Kubernetes Cluster Extension to be created.
	Product pulumi.StringInput `pulumi:"product"`
	// Specifies the promotion code to use with the plan. Changing this forces a new Kubernetes Cluster Extension to be created.
	PromotionCode pulumi.StringPtrInput `pulumi:"promotionCode"`
	// Specifies the publisher of the plan. Changing this forces a new Kubernetes Cluster Extension to be created.
	Publisher pulumi.StringInput `pulumi:"publisher"`
	// Specifies the version of the plan from the marketplace. Changing this forces a new Kubernetes Cluster Extension to be created.
	//
	// > **NOTE:** When `plan` is specified, legal terms must be accepted for this item on this subscription before creating the Kubernetes Cluster Extension. The `marketplace.Agreement` resource or AZ CLI tool can be used to do this.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (KubernetesClusterExtensionPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterExtensionPlan)(nil)).Elem()
}

func (i KubernetesClusterExtensionPlanArgs) ToKubernetesClusterExtensionPlanOutput() KubernetesClusterExtensionPlanOutput {
	return i.ToKubernetesClusterExtensionPlanOutputWithContext(context.Background())
}

func (i KubernetesClusterExtensionPlanArgs) ToKubernetesClusterExtensionPlanOutputWithContext(ctx context.Context) KubernetesClusterExtensionPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterExtensionPlanOutput)
}

func (i KubernetesClusterExtensionPlanArgs) ToKubernetesClusterExtensionPlanPtrOutput() KubernetesClusterExtensionPlanPtrOutput {
	return i.ToKubernetesClusterExtensionPlanPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterExtensionPlanArgs) ToKubernetesClusterExtensionPlanPtrOutputWithContext(ctx context.Context) KubernetesClusterExtensionPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterExtensionPlanOutput).ToKubernetesClusterExtensionPlanPtrOutputWithContext(ctx)
}

// KubernetesClusterExtensionPlanPtrInput is an input type that accepts KubernetesClusterExtensionPlanArgs, KubernetesClusterExtensionPlanPtr and KubernetesClusterExtensionPlanPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterExtensionPlanPtrInput` via:
//
//	        KubernetesClusterExtensionPlanArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterExtensionPlanPtrInput interface {
	pulumi.Input

	ToKubernetesClusterExtensionPlanPtrOutput() KubernetesClusterExtensionPlanPtrOutput
	ToKubernetesClusterExtensionPlanPtrOutputWithContext(context.Context) KubernetesClusterExtensionPlanPtrOutput
}

type kubernetesClusterExtensionPlanPtrType KubernetesClusterExtensionPlanArgs

func KubernetesClusterExtensionPlanPtr(v *KubernetesClusterExtensionPlanArgs) KubernetesClusterExtensionPlanPtrInput {
	return (*kubernetesClusterExtensionPlanPtrType)(v)
}

func (*kubernetesClusterExtensionPlanPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterExtensionPlan)(nil)).Elem()
}

func (i *kubernetesClusterExtensionPlanPtrType) ToKubernetesClusterExtensionPlanPtrOutput() KubernetesClusterExtensionPlanPtrOutput {
	return i.ToKubernetesClusterExtensionPlanPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterExtensionPlanPtrType) ToKubernetesClusterExtensionPlanPtrOutputWithContext(ctx context.Context) KubernetesClusterExtensionPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterExtensionPlanPtrOutput)
}

type KubernetesClusterExtensionPlanOutput struct{ *pulumi.OutputState }

func (KubernetesClusterExtensionPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterExtensionPlan)(nil)).Elem()
}

func (o KubernetesClusterExtensionPlanOutput) ToKubernetesClusterExtensionPlanOutput() KubernetesClusterExtensionPlanOutput {
	return o
}

func (o KubernetesClusterExtensionPlanOutput) ToKubernetesClusterExtensionPlanOutputWithContext(ctx context.Context) KubernetesClusterExtensionPlanOutput {
	return o
}

func (o KubernetesClusterExtensionPlanOutput) ToKubernetesClusterExtensionPlanPtrOutput() KubernetesClusterExtensionPlanPtrOutput {
	return o.ToKubernetesClusterExtensionPlanPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterExtensionPlanOutput) ToKubernetesClusterExtensionPlanPtrOutputWithContext(ctx context.Context) KubernetesClusterExtensionPlanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterExtensionPlan) *KubernetesClusterExtensionPlan {
		return &v
	}).(KubernetesClusterExtensionPlanPtrOutput)
}

// Specifies the name of the plan from the marketplace. Changing this forces a new Kubernetes Cluster Extension to be created.
func (o KubernetesClusterExtensionPlanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterExtensionPlan) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the product of the plan from the marketplace. Changing this forces a new Kubernetes Cluster Extension to be created.
func (o KubernetesClusterExtensionPlanOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterExtensionPlan) string { return v.Product }).(pulumi.StringOutput)
}

// Specifies the promotion code to use with the plan. Changing this forces a new Kubernetes Cluster Extension to be created.
func (o KubernetesClusterExtensionPlanOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterExtensionPlan) *string { return v.PromotionCode }).(pulumi.StringPtrOutput)
}

// Specifies the publisher of the plan. Changing this forces a new Kubernetes Cluster Extension to be created.
func (o KubernetesClusterExtensionPlanOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterExtensionPlan) string { return v.Publisher }).(pulumi.StringOutput)
}

// Specifies the version of the plan from the marketplace. Changing this forces a new Kubernetes Cluster Extension to be created.
//
// > **NOTE:** When `plan` is specified, legal terms must be accepted for this item on this subscription before creating the Kubernetes Cluster Extension. The `marketplace.Agreement` resource or AZ CLI tool can be used to do this.
func (o KubernetesClusterExtensionPlanOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterExtensionPlan) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type KubernetesClusterExtensionPlanPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterExtensionPlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterExtensionPlan)(nil)).Elem()
}

func (o KubernetesClusterExtensionPlanPtrOutput) ToKubernetesClusterExtensionPlanPtrOutput() KubernetesClusterExtensionPlanPtrOutput {
	return o
}

func (o KubernetesClusterExtensionPlanPtrOutput) ToKubernetesClusterExtensionPlanPtrOutputWithContext(ctx context.Context) KubernetesClusterExtensionPlanPtrOutput {
	return o
}

func (o KubernetesClusterExtensionPlanPtrOutput) Elem() KubernetesClusterExtensionPlanOutput {
	return o.ApplyT(func(v *KubernetesClusterExtensionPlan) KubernetesClusterExtensionPlan {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterExtensionPlan
		return ret
	}).(KubernetesClusterExtensionPlanOutput)
}

// Specifies the name of the plan from the marketplace. Changing this forces a new Kubernetes Cluster Extension to be created.
func (o KubernetesClusterExtensionPlanPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterExtensionPlan) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies the product of the plan from the marketplace. Changing this forces a new Kubernetes Cluster Extension to be created.
func (o KubernetesClusterExtensionPlanPtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterExtensionPlan) *string {
		if v == nil {
			return nil
		}
		return &v.Product
	}).(pulumi.StringPtrOutput)
}

// Specifies the promotion code to use with the plan. Changing this forces a new Kubernetes Cluster Extension to be created.
func (o KubernetesClusterExtensionPlanPtrOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterExtensionPlan) *string {
		if v == nil {
			return nil
		}
		return v.PromotionCode
	}).(pulumi.StringPtrOutput)
}

// Specifies the publisher of the plan. Changing this forces a new Kubernetes Cluster Extension to be created.
func (o KubernetesClusterExtensionPlanPtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterExtensionPlan) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Specifies the version of the plan from the marketplace. Changing this forces a new Kubernetes Cluster Extension to be created.
//
// > **NOTE:** When `plan` is specified, legal terms must be accepted for this item on this subscription before creating the Kubernetes Cluster Extension. The `marketplace.Agreement` resource or AZ CLI tool can be used to do this.
func (o KubernetesClusterExtensionPlanPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterExtensionPlan) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterHttpProxyConfig struct {
	// The proxy address to be used when communicating over HTTP.
	HttpProxy *string `pulumi:"httpProxy"`
	// The proxy address to be used when communicating over HTTPS.
	HttpsProxy *string  `pulumi:"httpsProxy"`
	NoProxies  []string `pulumi:"noProxies"`
	// The base64 encoded alternative CA certificate content in PEM format.
	TrustedCa *string `pulumi:"trustedCa"`
}

// KubernetesClusterHttpProxyConfigInput is an input type that accepts KubernetesClusterHttpProxyConfigArgs and KubernetesClusterHttpProxyConfigOutput values.
// You can construct a concrete instance of `KubernetesClusterHttpProxyConfigInput` via:
//
//	KubernetesClusterHttpProxyConfigArgs{...}
type KubernetesClusterHttpProxyConfigInput interface {
	pulumi.Input

	ToKubernetesClusterHttpProxyConfigOutput() KubernetesClusterHttpProxyConfigOutput
	ToKubernetesClusterHttpProxyConfigOutputWithContext(context.Context) KubernetesClusterHttpProxyConfigOutput
}

type KubernetesClusterHttpProxyConfigArgs struct {
	// The proxy address to be used when communicating over HTTP.
	HttpProxy pulumi.StringPtrInput `pulumi:"httpProxy"`
	// The proxy address to be used when communicating over HTTPS.
	HttpsProxy pulumi.StringPtrInput   `pulumi:"httpsProxy"`
	NoProxies  pulumi.StringArrayInput `pulumi:"noProxies"`
	// The base64 encoded alternative CA certificate content in PEM format.
	TrustedCa pulumi.StringPtrInput `pulumi:"trustedCa"`
}

func (KubernetesClusterHttpProxyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterHttpProxyConfig)(nil)).Elem()
}

func (i KubernetesClusterHttpProxyConfigArgs) ToKubernetesClusterHttpProxyConfigOutput() KubernetesClusterHttpProxyConfigOutput {
	return i.ToKubernetesClusterHttpProxyConfigOutputWithContext(context.Background())
}

func (i KubernetesClusterHttpProxyConfigArgs) ToKubernetesClusterHttpProxyConfigOutputWithContext(ctx context.Context) KubernetesClusterHttpProxyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterHttpProxyConfigOutput)
}

func (i KubernetesClusterHttpProxyConfigArgs) ToKubernetesClusterHttpProxyConfigPtrOutput() KubernetesClusterHttpProxyConfigPtrOutput {
	return i.ToKubernetesClusterHttpProxyConfigPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterHttpProxyConfigArgs) ToKubernetesClusterHttpProxyConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterHttpProxyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterHttpProxyConfigOutput).ToKubernetesClusterHttpProxyConfigPtrOutputWithContext(ctx)
}

// KubernetesClusterHttpProxyConfigPtrInput is an input type that accepts KubernetesClusterHttpProxyConfigArgs, KubernetesClusterHttpProxyConfigPtr and KubernetesClusterHttpProxyConfigPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterHttpProxyConfigPtrInput` via:
//
//	        KubernetesClusterHttpProxyConfigArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterHttpProxyConfigPtrInput interface {
	pulumi.Input

	ToKubernetesClusterHttpProxyConfigPtrOutput() KubernetesClusterHttpProxyConfigPtrOutput
	ToKubernetesClusterHttpProxyConfigPtrOutputWithContext(context.Context) KubernetesClusterHttpProxyConfigPtrOutput
}

type kubernetesClusterHttpProxyConfigPtrType KubernetesClusterHttpProxyConfigArgs

func KubernetesClusterHttpProxyConfigPtr(v *KubernetesClusterHttpProxyConfigArgs) KubernetesClusterHttpProxyConfigPtrInput {
	return (*kubernetesClusterHttpProxyConfigPtrType)(v)
}

func (*kubernetesClusterHttpProxyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterHttpProxyConfig)(nil)).Elem()
}

func (i *kubernetesClusterHttpProxyConfigPtrType) ToKubernetesClusterHttpProxyConfigPtrOutput() KubernetesClusterHttpProxyConfigPtrOutput {
	return i.ToKubernetesClusterHttpProxyConfigPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterHttpProxyConfigPtrType) ToKubernetesClusterHttpProxyConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterHttpProxyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterHttpProxyConfigPtrOutput)
}

type KubernetesClusterHttpProxyConfigOutput struct{ *pulumi.OutputState }

func (KubernetesClusterHttpProxyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterHttpProxyConfig)(nil)).Elem()
}

func (o KubernetesClusterHttpProxyConfigOutput) ToKubernetesClusterHttpProxyConfigOutput() KubernetesClusterHttpProxyConfigOutput {
	return o
}

func (o KubernetesClusterHttpProxyConfigOutput) ToKubernetesClusterHttpProxyConfigOutputWithContext(ctx context.Context) KubernetesClusterHttpProxyConfigOutput {
	return o
}

func (o KubernetesClusterHttpProxyConfigOutput) ToKubernetesClusterHttpProxyConfigPtrOutput() KubernetesClusterHttpProxyConfigPtrOutput {
	return o.ToKubernetesClusterHttpProxyConfigPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterHttpProxyConfigOutput) ToKubernetesClusterHttpProxyConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterHttpProxyConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterHttpProxyConfig) *KubernetesClusterHttpProxyConfig {
		return &v
	}).(KubernetesClusterHttpProxyConfigPtrOutput)
}

// The proxy address to be used when communicating over HTTP.
func (o KubernetesClusterHttpProxyConfigOutput) HttpProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterHttpProxyConfig) *string { return v.HttpProxy }).(pulumi.StringPtrOutput)
}

// The proxy address to be used when communicating over HTTPS.
func (o KubernetesClusterHttpProxyConfigOutput) HttpsProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterHttpProxyConfig) *string { return v.HttpsProxy }).(pulumi.StringPtrOutput)
}

func (o KubernetesClusterHttpProxyConfigOutput) NoProxies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterHttpProxyConfig) []string { return v.NoProxies }).(pulumi.StringArrayOutput)
}

// The base64 encoded alternative CA certificate content in PEM format.
func (o KubernetesClusterHttpProxyConfigOutput) TrustedCa() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterHttpProxyConfig) *string { return v.TrustedCa }).(pulumi.StringPtrOutput)
}

type KubernetesClusterHttpProxyConfigPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterHttpProxyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterHttpProxyConfig)(nil)).Elem()
}

func (o KubernetesClusterHttpProxyConfigPtrOutput) ToKubernetesClusterHttpProxyConfigPtrOutput() KubernetesClusterHttpProxyConfigPtrOutput {
	return o
}

func (o KubernetesClusterHttpProxyConfigPtrOutput) ToKubernetesClusterHttpProxyConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterHttpProxyConfigPtrOutput {
	return o
}

func (o KubernetesClusterHttpProxyConfigPtrOutput) Elem() KubernetesClusterHttpProxyConfigOutput {
	return o.ApplyT(func(v *KubernetesClusterHttpProxyConfig) KubernetesClusterHttpProxyConfig {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterHttpProxyConfig
		return ret
	}).(KubernetesClusterHttpProxyConfigOutput)
}

// The proxy address to be used when communicating over HTTP.
func (o KubernetesClusterHttpProxyConfigPtrOutput) HttpProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterHttpProxyConfig) *string {
		if v == nil {
			return nil
		}
		return v.HttpProxy
	}).(pulumi.StringPtrOutput)
}

// The proxy address to be used when communicating over HTTPS.
func (o KubernetesClusterHttpProxyConfigPtrOutput) HttpsProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterHttpProxyConfig) *string {
		if v == nil {
			return nil
		}
		return v.HttpsProxy
	}).(pulumi.StringPtrOutput)
}

func (o KubernetesClusterHttpProxyConfigPtrOutput) NoProxies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterHttpProxyConfig) []string {
		if v == nil {
			return nil
		}
		return v.NoProxies
	}).(pulumi.StringArrayOutput)
}

// The base64 encoded alternative CA certificate content in PEM format.
func (o KubernetesClusterHttpProxyConfigPtrOutput) TrustedCa() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterHttpProxyConfig) *string {
		if v == nil {
			return nil
		}
		return v.TrustedCa
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterIdentity struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Kubernetes Cluster.
	//
	// > **Note:** This is required when `type` is set to `UserAssigned`.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId *string `pulumi:"principalId"`
	// The Tenant ID used for Azure Active Directory Application. If this isn't specified the Tenant ID of the current Subscription is used.
	TenantId *string `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this Kubernetes Cluster. Possible values are `SystemAssigned` or `UserAssigned`.
	Type string `pulumi:"type"`
}

// KubernetesClusterIdentityInput is an input type that accepts KubernetesClusterIdentityArgs and KubernetesClusterIdentityOutput values.
// You can construct a concrete instance of `KubernetesClusterIdentityInput` via:
//
//	KubernetesClusterIdentityArgs{...}
type KubernetesClusterIdentityInput interface {
	pulumi.Input

	ToKubernetesClusterIdentityOutput() KubernetesClusterIdentityOutput
	ToKubernetesClusterIdentityOutputWithContext(context.Context) KubernetesClusterIdentityOutput
}

type KubernetesClusterIdentityArgs struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Kubernetes Cluster.
	//
	// > **Note:** This is required when `type` is set to `UserAssigned`.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The Tenant ID used for Azure Active Directory Application. If this isn't specified the Tenant ID of the current Subscription is used.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this Kubernetes Cluster. Possible values are `SystemAssigned` or `UserAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (KubernetesClusterIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterIdentity)(nil)).Elem()
}

func (i KubernetesClusterIdentityArgs) ToKubernetesClusterIdentityOutput() KubernetesClusterIdentityOutput {
	return i.ToKubernetesClusterIdentityOutputWithContext(context.Background())
}

func (i KubernetesClusterIdentityArgs) ToKubernetesClusterIdentityOutputWithContext(ctx context.Context) KubernetesClusterIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterIdentityOutput)
}

func (i KubernetesClusterIdentityArgs) ToKubernetesClusterIdentityPtrOutput() KubernetesClusterIdentityPtrOutput {
	return i.ToKubernetesClusterIdentityPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterIdentityArgs) ToKubernetesClusterIdentityPtrOutputWithContext(ctx context.Context) KubernetesClusterIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterIdentityOutput).ToKubernetesClusterIdentityPtrOutputWithContext(ctx)
}

// KubernetesClusterIdentityPtrInput is an input type that accepts KubernetesClusterIdentityArgs, KubernetesClusterIdentityPtr and KubernetesClusterIdentityPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterIdentityPtrInput` via:
//
//	        KubernetesClusterIdentityArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterIdentityPtrInput interface {
	pulumi.Input

	ToKubernetesClusterIdentityPtrOutput() KubernetesClusterIdentityPtrOutput
	ToKubernetesClusterIdentityPtrOutputWithContext(context.Context) KubernetesClusterIdentityPtrOutput
}

type kubernetesClusterIdentityPtrType KubernetesClusterIdentityArgs

func KubernetesClusterIdentityPtr(v *KubernetesClusterIdentityArgs) KubernetesClusterIdentityPtrInput {
	return (*kubernetesClusterIdentityPtrType)(v)
}

func (*kubernetesClusterIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterIdentity)(nil)).Elem()
}

func (i *kubernetesClusterIdentityPtrType) ToKubernetesClusterIdentityPtrOutput() KubernetesClusterIdentityPtrOutput {
	return i.ToKubernetesClusterIdentityPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterIdentityPtrType) ToKubernetesClusterIdentityPtrOutputWithContext(ctx context.Context) KubernetesClusterIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterIdentityPtrOutput)
}

type KubernetesClusterIdentityOutput struct{ *pulumi.OutputState }

func (KubernetesClusterIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterIdentity)(nil)).Elem()
}

func (o KubernetesClusterIdentityOutput) ToKubernetesClusterIdentityOutput() KubernetesClusterIdentityOutput {
	return o
}

func (o KubernetesClusterIdentityOutput) ToKubernetesClusterIdentityOutputWithContext(ctx context.Context) KubernetesClusterIdentityOutput {
	return o
}

func (o KubernetesClusterIdentityOutput) ToKubernetesClusterIdentityPtrOutput() KubernetesClusterIdentityPtrOutput {
	return o.ToKubernetesClusterIdentityPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterIdentityOutput) ToKubernetesClusterIdentityPtrOutputWithContext(ctx context.Context) KubernetesClusterIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterIdentity) *KubernetesClusterIdentity {
		return &v
	}).(KubernetesClusterIdentityPtrOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Kubernetes Cluster.
//
// > **Note:** This is required when `type` is set to `UserAssigned`.
func (o KubernetesClusterIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this Managed Service Identity.
func (o KubernetesClusterIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The Tenant ID used for Azure Active Directory Application. If this isn't specified the Tenant ID of the current Subscription is used.
func (o KubernetesClusterIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Kubernetes Cluster. Possible values are `SystemAssigned` or `UserAssigned`.
func (o KubernetesClusterIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type KubernetesClusterIdentityPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterIdentity)(nil)).Elem()
}

func (o KubernetesClusterIdentityPtrOutput) ToKubernetesClusterIdentityPtrOutput() KubernetesClusterIdentityPtrOutput {
	return o
}

func (o KubernetesClusterIdentityPtrOutput) ToKubernetesClusterIdentityPtrOutputWithContext(ctx context.Context) KubernetesClusterIdentityPtrOutput {
	return o
}

func (o KubernetesClusterIdentityPtrOutput) Elem() KubernetesClusterIdentityOutput {
	return o.ApplyT(func(v *KubernetesClusterIdentity) KubernetesClusterIdentity {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterIdentity
		return ret
	}).(KubernetesClusterIdentityOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Kubernetes Cluster.
//
// > **Note:** This is required when `type` is set to `UserAssigned`.
func (o KubernetesClusterIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this Managed Service Identity.
func (o KubernetesClusterIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID used for Azure Active Directory Application. If this isn't specified the Tenant ID of the current Subscription is used.
func (o KubernetesClusterIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Kubernetes Cluster. Possible values are `SystemAssigned` or `UserAssigned`.
func (o KubernetesClusterIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterIngressApplicationGateway struct {
	// The ID of the Application Gateway associated with the ingress controller deployed to this Kubernetes Cluster.
	EffectiveGatewayId *string `pulumi:"effectiveGatewayId"`
	// The ID of the Application Gateway to integrate with the ingress controller of this Kubernetes Cluster. See [this](https://docs.microsoft.com/azure/application-gateway/tutorial-ingress-controller-add-on-existing) page for further details.
	GatewayId *string `pulumi:"gatewayId"`
	// The name of the Application Gateway to be used or created in the Nodepool Resource Group, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. See [this](https://docs.microsoft.com/azure/application-gateway/tutorial-ingress-controller-add-on-new) page for further details.
	GatewayName *string `pulumi:"gatewayName"`
	// An `ingressApplicationGatewayIdentity` block is exported. The exported attributes are defined below.
	IngressApplicationGatewayIdentities []KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity `pulumi:"ingressApplicationGatewayIdentities"`
	// The subnet CIDR to be used to create an Application Gateway, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. See [this](https://docs.microsoft.com/azure/application-gateway/tutorial-ingress-controller-add-on-new) page for further details.
	SubnetCidr *string `pulumi:"subnetCidr"`
	// The ID of the subnet on which to create an Application Gateway, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. See [this](https://docs.microsoft.com/azure/application-gateway/tutorial-ingress-controller-add-on-new) page for further details.
	//
	// > **Note:** Exactly one of `gatewayId`, `subnetId` or `subnetCidr` must be specified.
	//
	// > **Note:** If specifying `ingressApplicationGateway` in conjunction with `onlyCriticalAddonsEnabled`, the AGIC pod will fail to start. A separate `containerservice.KubernetesClusterNodePool` is required to run the AGIC pod successfully. This is because AGIC is classed as a "non-critical addon".
	SubnetId *string `pulumi:"subnetId"`
}

// KubernetesClusterIngressApplicationGatewayInput is an input type that accepts KubernetesClusterIngressApplicationGatewayArgs and KubernetesClusterIngressApplicationGatewayOutput values.
// You can construct a concrete instance of `KubernetesClusterIngressApplicationGatewayInput` via:
//
//	KubernetesClusterIngressApplicationGatewayArgs{...}
type KubernetesClusterIngressApplicationGatewayInput interface {
	pulumi.Input

	ToKubernetesClusterIngressApplicationGatewayOutput() KubernetesClusterIngressApplicationGatewayOutput
	ToKubernetesClusterIngressApplicationGatewayOutputWithContext(context.Context) KubernetesClusterIngressApplicationGatewayOutput
}

type KubernetesClusterIngressApplicationGatewayArgs struct {
	// The ID of the Application Gateway associated with the ingress controller deployed to this Kubernetes Cluster.
	EffectiveGatewayId pulumi.StringPtrInput `pulumi:"effectiveGatewayId"`
	// The ID of the Application Gateway to integrate with the ingress controller of this Kubernetes Cluster. See [this](https://docs.microsoft.com/azure/application-gateway/tutorial-ingress-controller-add-on-existing) page for further details.
	GatewayId pulumi.StringPtrInput `pulumi:"gatewayId"`
	// The name of the Application Gateway to be used or created in the Nodepool Resource Group, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. See [this](https://docs.microsoft.com/azure/application-gateway/tutorial-ingress-controller-add-on-new) page for further details.
	GatewayName pulumi.StringPtrInput `pulumi:"gatewayName"`
	// An `ingressApplicationGatewayIdentity` block is exported. The exported attributes are defined below.
	IngressApplicationGatewayIdentities KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayInput `pulumi:"ingressApplicationGatewayIdentities"`
	// The subnet CIDR to be used to create an Application Gateway, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. See [this](https://docs.microsoft.com/azure/application-gateway/tutorial-ingress-controller-add-on-new) page for further details.
	SubnetCidr pulumi.StringPtrInput `pulumi:"subnetCidr"`
	// The ID of the subnet on which to create an Application Gateway, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. See [this](https://docs.microsoft.com/azure/application-gateway/tutorial-ingress-controller-add-on-new) page for further details.
	//
	// > **Note:** Exactly one of `gatewayId`, `subnetId` or `subnetCidr` must be specified.
	//
	// > **Note:** If specifying `ingressApplicationGateway` in conjunction with `onlyCriticalAddonsEnabled`, the AGIC pod will fail to start. A separate `containerservice.KubernetesClusterNodePool` is required to run the AGIC pod successfully. This is because AGIC is classed as a "non-critical addon".
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (KubernetesClusterIngressApplicationGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterIngressApplicationGateway)(nil)).Elem()
}

func (i KubernetesClusterIngressApplicationGatewayArgs) ToKubernetesClusterIngressApplicationGatewayOutput() KubernetesClusterIngressApplicationGatewayOutput {
	return i.ToKubernetesClusterIngressApplicationGatewayOutputWithContext(context.Background())
}

func (i KubernetesClusterIngressApplicationGatewayArgs) ToKubernetesClusterIngressApplicationGatewayOutputWithContext(ctx context.Context) KubernetesClusterIngressApplicationGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterIngressApplicationGatewayOutput)
}

func (i KubernetesClusterIngressApplicationGatewayArgs) ToKubernetesClusterIngressApplicationGatewayPtrOutput() KubernetesClusterIngressApplicationGatewayPtrOutput {
	return i.ToKubernetesClusterIngressApplicationGatewayPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterIngressApplicationGatewayArgs) ToKubernetesClusterIngressApplicationGatewayPtrOutputWithContext(ctx context.Context) KubernetesClusterIngressApplicationGatewayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterIngressApplicationGatewayOutput).ToKubernetesClusterIngressApplicationGatewayPtrOutputWithContext(ctx)
}

// KubernetesClusterIngressApplicationGatewayPtrInput is an input type that accepts KubernetesClusterIngressApplicationGatewayArgs, KubernetesClusterIngressApplicationGatewayPtr and KubernetesClusterIngressApplicationGatewayPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterIngressApplicationGatewayPtrInput` via:
//
//	        KubernetesClusterIngressApplicationGatewayArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterIngressApplicationGatewayPtrInput interface {
	pulumi.Input

	ToKubernetesClusterIngressApplicationGatewayPtrOutput() KubernetesClusterIngressApplicationGatewayPtrOutput
	ToKubernetesClusterIngressApplicationGatewayPtrOutputWithContext(context.Context) KubernetesClusterIngressApplicationGatewayPtrOutput
}

type kubernetesClusterIngressApplicationGatewayPtrType KubernetesClusterIngressApplicationGatewayArgs

func KubernetesClusterIngressApplicationGatewayPtr(v *KubernetesClusterIngressApplicationGatewayArgs) KubernetesClusterIngressApplicationGatewayPtrInput {
	return (*kubernetesClusterIngressApplicationGatewayPtrType)(v)
}

func (*kubernetesClusterIngressApplicationGatewayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterIngressApplicationGateway)(nil)).Elem()
}

func (i *kubernetesClusterIngressApplicationGatewayPtrType) ToKubernetesClusterIngressApplicationGatewayPtrOutput() KubernetesClusterIngressApplicationGatewayPtrOutput {
	return i.ToKubernetesClusterIngressApplicationGatewayPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterIngressApplicationGatewayPtrType) ToKubernetesClusterIngressApplicationGatewayPtrOutputWithContext(ctx context.Context) KubernetesClusterIngressApplicationGatewayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterIngressApplicationGatewayPtrOutput)
}

type KubernetesClusterIngressApplicationGatewayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterIngressApplicationGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterIngressApplicationGateway)(nil)).Elem()
}

func (o KubernetesClusterIngressApplicationGatewayOutput) ToKubernetesClusterIngressApplicationGatewayOutput() KubernetesClusterIngressApplicationGatewayOutput {
	return o
}

func (o KubernetesClusterIngressApplicationGatewayOutput) ToKubernetesClusterIngressApplicationGatewayOutputWithContext(ctx context.Context) KubernetesClusterIngressApplicationGatewayOutput {
	return o
}

func (o KubernetesClusterIngressApplicationGatewayOutput) ToKubernetesClusterIngressApplicationGatewayPtrOutput() KubernetesClusterIngressApplicationGatewayPtrOutput {
	return o.ToKubernetesClusterIngressApplicationGatewayPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterIngressApplicationGatewayOutput) ToKubernetesClusterIngressApplicationGatewayPtrOutputWithContext(ctx context.Context) KubernetesClusterIngressApplicationGatewayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterIngressApplicationGateway) *KubernetesClusterIngressApplicationGateway {
		return &v
	}).(KubernetesClusterIngressApplicationGatewayPtrOutput)
}

// The ID of the Application Gateway associated with the ingress controller deployed to this Kubernetes Cluster.
func (o KubernetesClusterIngressApplicationGatewayOutput) EffectiveGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterIngressApplicationGateway) *string { return v.EffectiveGatewayId }).(pulumi.StringPtrOutput)
}

// The ID of the Application Gateway to integrate with the ingress controller of this Kubernetes Cluster. See [this](https://docs.microsoft.com/azure/application-gateway/tutorial-ingress-controller-add-on-existing) page for further details.
func (o KubernetesClusterIngressApplicationGatewayOutput) GatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterIngressApplicationGateway) *string { return v.GatewayId }).(pulumi.StringPtrOutput)
}

// The name of the Application Gateway to be used or created in the Nodepool Resource Group, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. See [this](https://docs.microsoft.com/azure/application-gateway/tutorial-ingress-controller-add-on-new) page for further details.
func (o KubernetesClusterIngressApplicationGatewayOutput) GatewayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterIngressApplicationGateway) *string { return v.GatewayName }).(pulumi.StringPtrOutput)
}

// An `ingressApplicationGatewayIdentity` block is exported. The exported attributes are defined below.
func (o KubernetesClusterIngressApplicationGatewayOutput) IngressApplicationGatewayIdentities() KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput {
	return o.ApplyT(func(v KubernetesClusterIngressApplicationGateway) []KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity {
		return v.IngressApplicationGatewayIdentities
	}).(KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput)
}

// The subnet CIDR to be used to create an Application Gateway, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. See [this](https://docs.microsoft.com/azure/application-gateway/tutorial-ingress-controller-add-on-new) page for further details.
func (o KubernetesClusterIngressApplicationGatewayOutput) SubnetCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterIngressApplicationGateway) *string { return v.SubnetCidr }).(pulumi.StringPtrOutput)
}

// The ID of the subnet on which to create an Application Gateway, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. See [this](https://docs.microsoft.com/azure/application-gateway/tutorial-ingress-controller-add-on-new) page for further details.
//
// > **Note:** Exactly one of `gatewayId`, `subnetId` or `subnetCidr` must be specified.
//
// > **Note:** If specifying `ingressApplicationGateway` in conjunction with `onlyCriticalAddonsEnabled`, the AGIC pod will fail to start. A separate `containerservice.KubernetesClusterNodePool` is required to run the AGIC pod successfully. This is because AGIC is classed as a "non-critical addon".
func (o KubernetesClusterIngressApplicationGatewayOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterIngressApplicationGateway) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type KubernetesClusterIngressApplicationGatewayPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterIngressApplicationGatewayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterIngressApplicationGateway)(nil)).Elem()
}

func (o KubernetesClusterIngressApplicationGatewayPtrOutput) ToKubernetesClusterIngressApplicationGatewayPtrOutput() KubernetesClusterIngressApplicationGatewayPtrOutput {
	return o
}

func (o KubernetesClusterIngressApplicationGatewayPtrOutput) ToKubernetesClusterIngressApplicationGatewayPtrOutputWithContext(ctx context.Context) KubernetesClusterIngressApplicationGatewayPtrOutput {
	return o
}

func (o KubernetesClusterIngressApplicationGatewayPtrOutput) Elem() KubernetesClusterIngressApplicationGatewayOutput {
	return o.ApplyT(func(v *KubernetesClusterIngressApplicationGateway) KubernetesClusterIngressApplicationGateway {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterIngressApplicationGateway
		return ret
	}).(KubernetesClusterIngressApplicationGatewayOutput)
}

// The ID of the Application Gateway associated with the ingress controller deployed to this Kubernetes Cluster.
func (o KubernetesClusterIngressApplicationGatewayPtrOutput) EffectiveGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterIngressApplicationGateway) *string {
		if v == nil {
			return nil
		}
		return v.EffectiveGatewayId
	}).(pulumi.StringPtrOutput)
}

// The ID of the Application Gateway to integrate with the ingress controller of this Kubernetes Cluster. See [this](https://docs.microsoft.com/azure/application-gateway/tutorial-ingress-controller-add-on-existing) page for further details.
func (o KubernetesClusterIngressApplicationGatewayPtrOutput) GatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterIngressApplicationGateway) *string {
		if v == nil {
			return nil
		}
		return v.GatewayId
	}).(pulumi.StringPtrOutput)
}

// The name of the Application Gateway to be used or created in the Nodepool Resource Group, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. See [this](https://docs.microsoft.com/azure/application-gateway/tutorial-ingress-controller-add-on-new) page for further details.
func (o KubernetesClusterIngressApplicationGatewayPtrOutput) GatewayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterIngressApplicationGateway) *string {
		if v == nil {
			return nil
		}
		return v.GatewayName
	}).(pulumi.StringPtrOutput)
}

// An `ingressApplicationGatewayIdentity` block is exported. The exported attributes are defined below.
func (o KubernetesClusterIngressApplicationGatewayPtrOutput) IngressApplicationGatewayIdentities() KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterIngressApplicationGateway) []KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity {
		if v == nil {
			return nil
		}
		return v.IngressApplicationGatewayIdentities
	}).(KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput)
}

// The subnet CIDR to be used to create an Application Gateway, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. See [this](https://docs.microsoft.com/azure/application-gateway/tutorial-ingress-controller-add-on-new) page for further details.
func (o KubernetesClusterIngressApplicationGatewayPtrOutput) SubnetCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterIngressApplicationGateway) *string {
		if v == nil {
			return nil
		}
		return v.SubnetCidr
	}).(pulumi.StringPtrOutput)
}

// The ID of the subnet on which to create an Application Gateway, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. See [this](https://docs.microsoft.com/azure/application-gateway/tutorial-ingress-controller-add-on-new) page for further details.
//
// > **Note:** Exactly one of `gatewayId`, `subnetId` or `subnetCidr` must be specified.
//
// > **Note:** If specifying `ingressApplicationGateway` in conjunction with `onlyCriticalAddonsEnabled`, the AGIC pod will fail to start. A separate `containerservice.KubernetesClusterNodePool` is required to run the AGIC pod successfully. This is because AGIC is classed as a "non-critical addon".
func (o KubernetesClusterIngressApplicationGatewayPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterIngressApplicationGateway) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity struct {
	// The Client ID of the user-defined Managed Identity to be assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	ClientId *string `pulumi:"clientId"`
	// The Object ID of the user-defined Managed Identity assigned to the Kubelets.If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	ObjectId *string `pulumi:"objectId"`
	// The ID of the User Assigned Identity assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	//
	// > **Note:** When `kubeletIdentity` is enabled - The `type` field in the `identity` block must be set to `UserAssigned` and `identityIds` must be set.
	UserAssignedIdentityId *string `pulumi:"userAssignedIdentityId"`
}

// KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityInput is an input type that accepts KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArgs and KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput values.
// You can construct a concrete instance of `KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityInput` via:
//
//	KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArgs{...}
type KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityInput interface {
	pulumi.Input

	ToKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput() KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput
	ToKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutputWithContext(context.Context) KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput
}

type KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArgs struct {
	// The Client ID of the user-defined Managed Identity to be assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The Object ID of the user-defined Managed Identity assigned to the Kubelets.If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
	// The ID of the User Assigned Identity assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	//
	// > **Note:** When `kubeletIdentity` is enabled - The `type` field in the `identity` block must be set to `UserAssigned` and `identityIds` must be set.
	UserAssignedIdentityId pulumi.StringPtrInput `pulumi:"userAssignedIdentityId"`
}

func (KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity)(nil)).Elem()
}

func (i KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArgs) ToKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput() KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput {
	return i.ToKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutputWithContext(context.Background())
}

func (i KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArgs) ToKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutputWithContext(ctx context.Context) KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput)
}

// KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayInput is an input type that accepts KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArray and KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayInput` via:
//
//	KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArray{ KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArgs{...} }
type KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayInput interface {
	pulumi.Input

	ToKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput() KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput
	ToKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutputWithContext(context.Context) KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput
}

type KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArray []KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityInput

func (KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity)(nil)).Elem()
}

func (i KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArray) ToKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput() KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput {
	return i.ToKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArray) ToKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutputWithContext(ctx context.Context) KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput)
}

type KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput struct{ *pulumi.OutputState }

func (KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity)(nil)).Elem()
}

func (o KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput) ToKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput() KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput {
	return o
}

func (o KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput) ToKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutputWithContext(ctx context.Context) KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput {
	return o
}

// The Client ID of the user-defined Managed Identity to be assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
func (o KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity) *string {
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The Object ID of the user-defined Managed Identity assigned to the Kubelets.If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
func (o KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity) *string {
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// The ID of the User Assigned Identity assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
//
// > **Note:** When `kubeletIdentity` is enabled - The `type` field in the `identity` block must be set to `UserAssigned` and `identityIds` must be set.
func (o KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput) UserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity) *string {
		return v.UserAssignedIdentityId
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity)(nil)).Elem()
}

func (o KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput) ToKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput() KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput {
	return o
}

func (o KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput) ToKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutputWithContext(ctx context.Context) KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput {
	return o
}

func (o KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput) Index(i pulumi.IntInput) KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity {
		return vs[0].([]KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity)[vs[1].(int)]
	}).(KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput)
}

type KubernetesClusterKeyManagementService struct {
	// Identifier of Azure Key Vault key. See [key identifier format](https://learn.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name) for more details. When Azure Key Vault key management service is enabled, this field is required and must be a valid key identifier. When `enabled` is `false`, leave the field empty.
	KeyVaultKeyId string `pulumi:"keyVaultKeyId"`
	// Network access of the key vault Network access of key vault. The possible values are `Public` and `Private`. `Public` means the key vault allows public access from all networks. `Private` means the key vault disables public access and enables private link. Defaults to `Public`.
	KeyVaultNetworkAccess *string `pulumi:"keyVaultNetworkAccess"`
}

// KubernetesClusterKeyManagementServiceInput is an input type that accepts KubernetesClusterKeyManagementServiceArgs and KubernetesClusterKeyManagementServiceOutput values.
// You can construct a concrete instance of `KubernetesClusterKeyManagementServiceInput` via:
//
//	KubernetesClusterKeyManagementServiceArgs{...}
type KubernetesClusterKeyManagementServiceInput interface {
	pulumi.Input

	ToKubernetesClusterKeyManagementServiceOutput() KubernetesClusterKeyManagementServiceOutput
	ToKubernetesClusterKeyManagementServiceOutputWithContext(context.Context) KubernetesClusterKeyManagementServiceOutput
}

type KubernetesClusterKeyManagementServiceArgs struct {
	// Identifier of Azure Key Vault key. See [key identifier format](https://learn.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name) for more details. When Azure Key Vault key management service is enabled, this field is required and must be a valid key identifier. When `enabled` is `false`, leave the field empty.
	KeyVaultKeyId pulumi.StringInput `pulumi:"keyVaultKeyId"`
	// Network access of the key vault Network access of key vault. The possible values are `Public` and `Private`. `Public` means the key vault allows public access from all networks. `Private` means the key vault disables public access and enables private link. Defaults to `Public`.
	KeyVaultNetworkAccess pulumi.StringPtrInput `pulumi:"keyVaultNetworkAccess"`
}

func (KubernetesClusterKeyManagementServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterKeyManagementService)(nil)).Elem()
}

func (i KubernetesClusterKeyManagementServiceArgs) ToKubernetesClusterKeyManagementServiceOutput() KubernetesClusterKeyManagementServiceOutput {
	return i.ToKubernetesClusterKeyManagementServiceOutputWithContext(context.Background())
}

func (i KubernetesClusterKeyManagementServiceArgs) ToKubernetesClusterKeyManagementServiceOutputWithContext(ctx context.Context) KubernetesClusterKeyManagementServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKeyManagementServiceOutput)
}

func (i KubernetesClusterKeyManagementServiceArgs) ToKubernetesClusterKeyManagementServicePtrOutput() KubernetesClusterKeyManagementServicePtrOutput {
	return i.ToKubernetesClusterKeyManagementServicePtrOutputWithContext(context.Background())
}

func (i KubernetesClusterKeyManagementServiceArgs) ToKubernetesClusterKeyManagementServicePtrOutputWithContext(ctx context.Context) KubernetesClusterKeyManagementServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKeyManagementServiceOutput).ToKubernetesClusterKeyManagementServicePtrOutputWithContext(ctx)
}

// KubernetesClusterKeyManagementServicePtrInput is an input type that accepts KubernetesClusterKeyManagementServiceArgs, KubernetesClusterKeyManagementServicePtr and KubernetesClusterKeyManagementServicePtrOutput values.
// You can construct a concrete instance of `KubernetesClusterKeyManagementServicePtrInput` via:
//
//	        KubernetesClusterKeyManagementServiceArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterKeyManagementServicePtrInput interface {
	pulumi.Input

	ToKubernetesClusterKeyManagementServicePtrOutput() KubernetesClusterKeyManagementServicePtrOutput
	ToKubernetesClusterKeyManagementServicePtrOutputWithContext(context.Context) KubernetesClusterKeyManagementServicePtrOutput
}

type kubernetesClusterKeyManagementServicePtrType KubernetesClusterKeyManagementServiceArgs

func KubernetesClusterKeyManagementServicePtr(v *KubernetesClusterKeyManagementServiceArgs) KubernetesClusterKeyManagementServicePtrInput {
	return (*kubernetesClusterKeyManagementServicePtrType)(v)
}

func (*kubernetesClusterKeyManagementServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterKeyManagementService)(nil)).Elem()
}

func (i *kubernetesClusterKeyManagementServicePtrType) ToKubernetesClusterKeyManagementServicePtrOutput() KubernetesClusterKeyManagementServicePtrOutput {
	return i.ToKubernetesClusterKeyManagementServicePtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterKeyManagementServicePtrType) ToKubernetesClusterKeyManagementServicePtrOutputWithContext(ctx context.Context) KubernetesClusterKeyManagementServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKeyManagementServicePtrOutput)
}

type KubernetesClusterKeyManagementServiceOutput struct{ *pulumi.OutputState }

func (KubernetesClusterKeyManagementServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterKeyManagementService)(nil)).Elem()
}

func (o KubernetesClusterKeyManagementServiceOutput) ToKubernetesClusterKeyManagementServiceOutput() KubernetesClusterKeyManagementServiceOutput {
	return o
}

func (o KubernetesClusterKeyManagementServiceOutput) ToKubernetesClusterKeyManagementServiceOutputWithContext(ctx context.Context) KubernetesClusterKeyManagementServiceOutput {
	return o
}

func (o KubernetesClusterKeyManagementServiceOutput) ToKubernetesClusterKeyManagementServicePtrOutput() KubernetesClusterKeyManagementServicePtrOutput {
	return o.ToKubernetesClusterKeyManagementServicePtrOutputWithContext(context.Background())
}

func (o KubernetesClusterKeyManagementServiceOutput) ToKubernetesClusterKeyManagementServicePtrOutputWithContext(ctx context.Context) KubernetesClusterKeyManagementServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterKeyManagementService) *KubernetesClusterKeyManagementService {
		return &v
	}).(KubernetesClusterKeyManagementServicePtrOutput)
}

// Identifier of Azure Key Vault key. See [key identifier format](https://learn.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name) for more details. When Azure Key Vault key management service is enabled, this field is required and must be a valid key identifier. When `enabled` is `false`, leave the field empty.
func (o KubernetesClusterKeyManagementServiceOutput) KeyVaultKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterKeyManagementService) string { return v.KeyVaultKeyId }).(pulumi.StringOutput)
}

// Network access of the key vault Network access of key vault. The possible values are `Public` and `Private`. `Public` means the key vault allows public access from all networks. `Private` means the key vault disables public access and enables private link. Defaults to `Public`.
func (o KubernetesClusterKeyManagementServiceOutput) KeyVaultNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKeyManagementService) *string { return v.KeyVaultNetworkAccess }).(pulumi.StringPtrOutput)
}

type KubernetesClusterKeyManagementServicePtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterKeyManagementServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterKeyManagementService)(nil)).Elem()
}

func (o KubernetesClusterKeyManagementServicePtrOutput) ToKubernetesClusterKeyManagementServicePtrOutput() KubernetesClusterKeyManagementServicePtrOutput {
	return o
}

func (o KubernetesClusterKeyManagementServicePtrOutput) ToKubernetesClusterKeyManagementServicePtrOutputWithContext(ctx context.Context) KubernetesClusterKeyManagementServicePtrOutput {
	return o
}

func (o KubernetesClusterKeyManagementServicePtrOutput) Elem() KubernetesClusterKeyManagementServiceOutput {
	return o.ApplyT(func(v *KubernetesClusterKeyManagementService) KubernetesClusterKeyManagementService {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterKeyManagementService
		return ret
	}).(KubernetesClusterKeyManagementServiceOutput)
}

// Identifier of Azure Key Vault key. See [key identifier format](https://learn.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name) for more details. When Azure Key Vault key management service is enabled, this field is required and must be a valid key identifier. When `enabled` is `false`, leave the field empty.
func (o KubernetesClusterKeyManagementServicePtrOutput) KeyVaultKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterKeyManagementService) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVaultKeyId
	}).(pulumi.StringPtrOutput)
}

// Network access of the key vault Network access of key vault. The possible values are `Public` and `Private`. `Public` means the key vault allows public access from all networks. `Private` means the key vault disables public access and enables private link. Defaults to `Public`.
func (o KubernetesClusterKeyManagementServicePtrOutput) KeyVaultNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterKeyManagementService) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultNetworkAccess
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterKeyVaultSecretsProvider struct {
	// An `secretIdentity` block is exported. The exported attributes are defined below.
	SecretIdentities []KubernetesClusterKeyVaultSecretsProviderSecretIdentity `pulumi:"secretIdentities"`
	// Should the secret store CSI driver on the AKS cluster be enabled?
	SecretRotationEnabled *bool `pulumi:"secretRotationEnabled"`
	// The interval to poll for secret rotation. This attribute is only set when `secretRotation` is true. Defaults to `2m`.
	//
	// > **Note:** To enable`keyVaultSecretsProvider` either `secretRotationEnabled` or `secretRotationInterval` must be specified.
	SecretRotationInterval *string `pulumi:"secretRotationInterval"`
}

// KubernetesClusterKeyVaultSecretsProviderInput is an input type that accepts KubernetesClusterKeyVaultSecretsProviderArgs and KubernetesClusterKeyVaultSecretsProviderOutput values.
// You can construct a concrete instance of `KubernetesClusterKeyVaultSecretsProviderInput` via:
//
//	KubernetesClusterKeyVaultSecretsProviderArgs{...}
type KubernetesClusterKeyVaultSecretsProviderInput interface {
	pulumi.Input

	ToKubernetesClusterKeyVaultSecretsProviderOutput() KubernetesClusterKeyVaultSecretsProviderOutput
	ToKubernetesClusterKeyVaultSecretsProviderOutputWithContext(context.Context) KubernetesClusterKeyVaultSecretsProviderOutput
}

type KubernetesClusterKeyVaultSecretsProviderArgs struct {
	// An `secretIdentity` block is exported. The exported attributes are defined below.
	SecretIdentities KubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayInput `pulumi:"secretIdentities"`
	// Should the secret store CSI driver on the AKS cluster be enabled?
	SecretRotationEnabled pulumi.BoolPtrInput `pulumi:"secretRotationEnabled"`
	// The interval to poll for secret rotation. This attribute is only set when `secretRotation` is true. Defaults to `2m`.
	//
	// > **Note:** To enable`keyVaultSecretsProvider` either `secretRotationEnabled` or `secretRotationInterval` must be specified.
	SecretRotationInterval pulumi.StringPtrInput `pulumi:"secretRotationInterval"`
}

func (KubernetesClusterKeyVaultSecretsProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterKeyVaultSecretsProvider)(nil)).Elem()
}

func (i KubernetesClusterKeyVaultSecretsProviderArgs) ToKubernetesClusterKeyVaultSecretsProviderOutput() KubernetesClusterKeyVaultSecretsProviderOutput {
	return i.ToKubernetesClusterKeyVaultSecretsProviderOutputWithContext(context.Background())
}

func (i KubernetesClusterKeyVaultSecretsProviderArgs) ToKubernetesClusterKeyVaultSecretsProviderOutputWithContext(ctx context.Context) KubernetesClusterKeyVaultSecretsProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKeyVaultSecretsProviderOutput)
}

func (i KubernetesClusterKeyVaultSecretsProviderArgs) ToKubernetesClusterKeyVaultSecretsProviderPtrOutput() KubernetesClusterKeyVaultSecretsProviderPtrOutput {
	return i.ToKubernetesClusterKeyVaultSecretsProviderPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterKeyVaultSecretsProviderArgs) ToKubernetesClusterKeyVaultSecretsProviderPtrOutputWithContext(ctx context.Context) KubernetesClusterKeyVaultSecretsProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKeyVaultSecretsProviderOutput).ToKubernetesClusterKeyVaultSecretsProviderPtrOutputWithContext(ctx)
}

// KubernetesClusterKeyVaultSecretsProviderPtrInput is an input type that accepts KubernetesClusterKeyVaultSecretsProviderArgs, KubernetesClusterKeyVaultSecretsProviderPtr and KubernetesClusterKeyVaultSecretsProviderPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterKeyVaultSecretsProviderPtrInput` via:
//
//	        KubernetesClusterKeyVaultSecretsProviderArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterKeyVaultSecretsProviderPtrInput interface {
	pulumi.Input

	ToKubernetesClusterKeyVaultSecretsProviderPtrOutput() KubernetesClusterKeyVaultSecretsProviderPtrOutput
	ToKubernetesClusterKeyVaultSecretsProviderPtrOutputWithContext(context.Context) KubernetesClusterKeyVaultSecretsProviderPtrOutput
}

type kubernetesClusterKeyVaultSecretsProviderPtrType KubernetesClusterKeyVaultSecretsProviderArgs

func KubernetesClusterKeyVaultSecretsProviderPtr(v *KubernetesClusterKeyVaultSecretsProviderArgs) KubernetesClusterKeyVaultSecretsProviderPtrInput {
	return (*kubernetesClusterKeyVaultSecretsProviderPtrType)(v)
}

func (*kubernetesClusterKeyVaultSecretsProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterKeyVaultSecretsProvider)(nil)).Elem()
}

func (i *kubernetesClusterKeyVaultSecretsProviderPtrType) ToKubernetesClusterKeyVaultSecretsProviderPtrOutput() KubernetesClusterKeyVaultSecretsProviderPtrOutput {
	return i.ToKubernetesClusterKeyVaultSecretsProviderPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterKeyVaultSecretsProviderPtrType) ToKubernetesClusterKeyVaultSecretsProviderPtrOutputWithContext(ctx context.Context) KubernetesClusterKeyVaultSecretsProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKeyVaultSecretsProviderPtrOutput)
}

type KubernetesClusterKeyVaultSecretsProviderOutput struct{ *pulumi.OutputState }

func (KubernetesClusterKeyVaultSecretsProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterKeyVaultSecretsProvider)(nil)).Elem()
}

func (o KubernetesClusterKeyVaultSecretsProviderOutput) ToKubernetesClusterKeyVaultSecretsProviderOutput() KubernetesClusterKeyVaultSecretsProviderOutput {
	return o
}

func (o KubernetesClusterKeyVaultSecretsProviderOutput) ToKubernetesClusterKeyVaultSecretsProviderOutputWithContext(ctx context.Context) KubernetesClusterKeyVaultSecretsProviderOutput {
	return o
}

func (o KubernetesClusterKeyVaultSecretsProviderOutput) ToKubernetesClusterKeyVaultSecretsProviderPtrOutput() KubernetesClusterKeyVaultSecretsProviderPtrOutput {
	return o.ToKubernetesClusterKeyVaultSecretsProviderPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterKeyVaultSecretsProviderOutput) ToKubernetesClusterKeyVaultSecretsProviderPtrOutputWithContext(ctx context.Context) KubernetesClusterKeyVaultSecretsProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterKeyVaultSecretsProvider) *KubernetesClusterKeyVaultSecretsProvider {
		return &v
	}).(KubernetesClusterKeyVaultSecretsProviderPtrOutput)
}

// An `secretIdentity` block is exported. The exported attributes are defined below.
func (o KubernetesClusterKeyVaultSecretsProviderOutput) SecretIdentities() KubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput {
	return o.ApplyT(func(v KubernetesClusterKeyVaultSecretsProvider) []KubernetesClusterKeyVaultSecretsProviderSecretIdentity {
		return v.SecretIdentities
	}).(KubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput)
}

// Should the secret store CSI driver on the AKS cluster be enabled?
func (o KubernetesClusterKeyVaultSecretsProviderOutput) SecretRotationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKeyVaultSecretsProvider) *bool { return v.SecretRotationEnabled }).(pulumi.BoolPtrOutput)
}

// The interval to poll for secret rotation. This attribute is only set when `secretRotation` is true. Defaults to `2m`.
//
// > **Note:** To enable`keyVaultSecretsProvider` either `secretRotationEnabled` or `secretRotationInterval` must be specified.
func (o KubernetesClusterKeyVaultSecretsProviderOutput) SecretRotationInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKeyVaultSecretsProvider) *string { return v.SecretRotationInterval }).(pulumi.StringPtrOutput)
}

type KubernetesClusterKeyVaultSecretsProviderPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterKeyVaultSecretsProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterKeyVaultSecretsProvider)(nil)).Elem()
}

func (o KubernetesClusterKeyVaultSecretsProviderPtrOutput) ToKubernetesClusterKeyVaultSecretsProviderPtrOutput() KubernetesClusterKeyVaultSecretsProviderPtrOutput {
	return o
}

func (o KubernetesClusterKeyVaultSecretsProviderPtrOutput) ToKubernetesClusterKeyVaultSecretsProviderPtrOutputWithContext(ctx context.Context) KubernetesClusterKeyVaultSecretsProviderPtrOutput {
	return o
}

func (o KubernetesClusterKeyVaultSecretsProviderPtrOutput) Elem() KubernetesClusterKeyVaultSecretsProviderOutput {
	return o.ApplyT(func(v *KubernetesClusterKeyVaultSecretsProvider) KubernetesClusterKeyVaultSecretsProvider {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterKeyVaultSecretsProvider
		return ret
	}).(KubernetesClusterKeyVaultSecretsProviderOutput)
}

// An `secretIdentity` block is exported. The exported attributes are defined below.
func (o KubernetesClusterKeyVaultSecretsProviderPtrOutput) SecretIdentities() KubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterKeyVaultSecretsProvider) []KubernetesClusterKeyVaultSecretsProviderSecretIdentity {
		if v == nil {
			return nil
		}
		return v.SecretIdentities
	}).(KubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput)
}

// Should the secret store CSI driver on the AKS cluster be enabled?
func (o KubernetesClusterKeyVaultSecretsProviderPtrOutput) SecretRotationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterKeyVaultSecretsProvider) *bool {
		if v == nil {
			return nil
		}
		return v.SecretRotationEnabled
	}).(pulumi.BoolPtrOutput)
}

// The interval to poll for secret rotation. This attribute is only set when `secretRotation` is true. Defaults to `2m`.
//
// > **Note:** To enable`keyVaultSecretsProvider` either `secretRotationEnabled` or `secretRotationInterval` must be specified.
func (o KubernetesClusterKeyVaultSecretsProviderPtrOutput) SecretRotationInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterKeyVaultSecretsProvider) *string {
		if v == nil {
			return nil
		}
		return v.SecretRotationInterval
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterKeyVaultSecretsProviderSecretIdentity struct {
	// The Client ID of the user-defined Managed Identity to be assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	ClientId *string `pulumi:"clientId"`
	// The Object ID of the user-defined Managed Identity assigned to the Kubelets.If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	ObjectId *string `pulumi:"objectId"`
	// The ID of the User Assigned Identity assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	//
	// > **Note:** When `kubeletIdentity` is enabled - The `type` field in the `identity` block must be set to `UserAssigned` and `identityIds` must be set.
	UserAssignedIdentityId *string `pulumi:"userAssignedIdentityId"`
}

// KubernetesClusterKeyVaultSecretsProviderSecretIdentityInput is an input type that accepts KubernetesClusterKeyVaultSecretsProviderSecretIdentityArgs and KubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput values.
// You can construct a concrete instance of `KubernetesClusterKeyVaultSecretsProviderSecretIdentityInput` via:
//
//	KubernetesClusterKeyVaultSecretsProviderSecretIdentityArgs{...}
type KubernetesClusterKeyVaultSecretsProviderSecretIdentityInput interface {
	pulumi.Input

	ToKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput() KubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput
	ToKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutputWithContext(context.Context) KubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput
}

type KubernetesClusterKeyVaultSecretsProviderSecretIdentityArgs struct {
	// The Client ID of the user-defined Managed Identity to be assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The Object ID of the user-defined Managed Identity assigned to the Kubelets.If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
	// The ID of the User Assigned Identity assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	//
	// > **Note:** When `kubeletIdentity` is enabled - The `type` field in the `identity` block must be set to `UserAssigned` and `identityIds` must be set.
	UserAssignedIdentityId pulumi.StringPtrInput `pulumi:"userAssignedIdentityId"`
}

func (KubernetesClusterKeyVaultSecretsProviderSecretIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterKeyVaultSecretsProviderSecretIdentity)(nil)).Elem()
}

func (i KubernetesClusterKeyVaultSecretsProviderSecretIdentityArgs) ToKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput() KubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput {
	return i.ToKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutputWithContext(context.Background())
}

func (i KubernetesClusterKeyVaultSecretsProviderSecretIdentityArgs) ToKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutputWithContext(ctx context.Context) KubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput)
}

// KubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayInput is an input type that accepts KubernetesClusterKeyVaultSecretsProviderSecretIdentityArray and KubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayInput` via:
//
//	KubernetesClusterKeyVaultSecretsProviderSecretIdentityArray{ KubernetesClusterKeyVaultSecretsProviderSecretIdentityArgs{...} }
type KubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayInput interface {
	pulumi.Input

	ToKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput() KubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput
	ToKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutputWithContext(context.Context) KubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput
}

type KubernetesClusterKeyVaultSecretsProviderSecretIdentityArray []KubernetesClusterKeyVaultSecretsProviderSecretIdentityInput

func (KubernetesClusterKeyVaultSecretsProviderSecretIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterKeyVaultSecretsProviderSecretIdentity)(nil)).Elem()
}

func (i KubernetesClusterKeyVaultSecretsProviderSecretIdentityArray) ToKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput() KubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput {
	return i.ToKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterKeyVaultSecretsProviderSecretIdentityArray) ToKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutputWithContext(ctx context.Context) KubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput)
}

type KubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput struct{ *pulumi.OutputState }

func (KubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterKeyVaultSecretsProviderSecretIdentity)(nil)).Elem()
}

func (o KubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput) ToKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput() KubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput {
	return o
}

func (o KubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput) ToKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutputWithContext(ctx context.Context) KubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput {
	return o
}

// The Client ID of the user-defined Managed Identity to be assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
func (o KubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKeyVaultSecretsProviderSecretIdentity) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The Object ID of the user-defined Managed Identity assigned to the Kubelets.If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
func (o KubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKeyVaultSecretsProviderSecretIdentity) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// The ID of the User Assigned Identity assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
//
// > **Note:** When `kubeletIdentity` is enabled - The `type` field in the `identity` block must be set to `UserAssigned` and `identityIds` must be set.
func (o KubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput) UserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKeyVaultSecretsProviderSecretIdentity) *string {
		return v.UserAssignedIdentityId
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterKeyVaultSecretsProviderSecretIdentity)(nil)).Elem()
}

func (o KubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput) ToKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput() KubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput {
	return o
}

func (o KubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput) ToKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutputWithContext(ctx context.Context) KubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput {
	return o
}

func (o KubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput) Index(i pulumi.IntInput) KubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterKeyVaultSecretsProviderSecretIdentity {
		return vs[0].([]KubernetesClusterKeyVaultSecretsProviderSecretIdentity)[vs[1].(int)]
	}).(KubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput)
}

type KubernetesClusterKubeAdminConfig struct {
	// Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
	ClientKey *string `pulumi:"clientKey"`
	// Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
	ClusterCaCertificate *string `pulumi:"clusterCaCertificate"`
	// The Kubernetes cluster server host.
	Host *string `pulumi:"host"`
	// A password or token used to authenticate to the Kubernetes cluster.
	Password *string `pulumi:"password"`
	// A username used to authenticate to the Kubernetes cluster.
	Username *string `pulumi:"username"`
}

// KubernetesClusterKubeAdminConfigInput is an input type that accepts KubernetesClusterKubeAdminConfigArgs and KubernetesClusterKubeAdminConfigOutput values.
// You can construct a concrete instance of `KubernetesClusterKubeAdminConfigInput` via:
//
//	KubernetesClusterKubeAdminConfigArgs{...}
type KubernetesClusterKubeAdminConfigInput interface {
	pulumi.Input

	ToKubernetesClusterKubeAdminConfigOutput() KubernetesClusterKubeAdminConfigOutput
	ToKubernetesClusterKubeAdminConfigOutputWithContext(context.Context) KubernetesClusterKubeAdminConfigOutput
}

type KubernetesClusterKubeAdminConfigArgs struct {
	// Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
	ClientKey pulumi.StringPtrInput `pulumi:"clientKey"`
	// Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
	ClusterCaCertificate pulumi.StringPtrInput `pulumi:"clusterCaCertificate"`
	// The Kubernetes cluster server host.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// A password or token used to authenticate to the Kubernetes cluster.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// A username used to authenticate to the Kubernetes cluster.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (KubernetesClusterKubeAdminConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterKubeAdminConfig)(nil)).Elem()
}

func (i KubernetesClusterKubeAdminConfigArgs) ToKubernetesClusterKubeAdminConfigOutput() KubernetesClusterKubeAdminConfigOutput {
	return i.ToKubernetesClusterKubeAdminConfigOutputWithContext(context.Background())
}

func (i KubernetesClusterKubeAdminConfigArgs) ToKubernetesClusterKubeAdminConfigOutputWithContext(ctx context.Context) KubernetesClusterKubeAdminConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKubeAdminConfigOutput)
}

// KubernetesClusterKubeAdminConfigArrayInput is an input type that accepts KubernetesClusterKubeAdminConfigArray and KubernetesClusterKubeAdminConfigArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterKubeAdminConfigArrayInput` via:
//
//	KubernetesClusterKubeAdminConfigArray{ KubernetesClusterKubeAdminConfigArgs{...} }
type KubernetesClusterKubeAdminConfigArrayInput interface {
	pulumi.Input

	ToKubernetesClusterKubeAdminConfigArrayOutput() KubernetesClusterKubeAdminConfigArrayOutput
	ToKubernetesClusterKubeAdminConfigArrayOutputWithContext(context.Context) KubernetesClusterKubeAdminConfigArrayOutput
}

type KubernetesClusterKubeAdminConfigArray []KubernetesClusterKubeAdminConfigInput

func (KubernetesClusterKubeAdminConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterKubeAdminConfig)(nil)).Elem()
}

func (i KubernetesClusterKubeAdminConfigArray) ToKubernetesClusterKubeAdminConfigArrayOutput() KubernetesClusterKubeAdminConfigArrayOutput {
	return i.ToKubernetesClusterKubeAdminConfigArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterKubeAdminConfigArray) ToKubernetesClusterKubeAdminConfigArrayOutputWithContext(ctx context.Context) KubernetesClusterKubeAdminConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKubeAdminConfigArrayOutput)
}

type KubernetesClusterKubeAdminConfigOutput struct{ *pulumi.OutputState }

func (KubernetesClusterKubeAdminConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterKubeAdminConfig)(nil)).Elem()
}

func (o KubernetesClusterKubeAdminConfigOutput) ToKubernetesClusterKubeAdminConfigOutput() KubernetesClusterKubeAdminConfigOutput {
	return o
}

func (o KubernetesClusterKubeAdminConfigOutput) ToKubernetesClusterKubeAdminConfigOutputWithContext(ctx context.Context) KubernetesClusterKubeAdminConfigOutput {
	return o
}

// Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
func (o KubernetesClusterKubeAdminConfigOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeAdminConfig) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
func (o KubernetesClusterKubeAdminConfigOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeAdminConfig) *string { return v.ClientKey }).(pulumi.StringPtrOutput)
}

// Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
func (o KubernetesClusterKubeAdminConfigOutput) ClusterCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeAdminConfig) *string { return v.ClusterCaCertificate }).(pulumi.StringPtrOutput)
}

// The Kubernetes cluster server host.
func (o KubernetesClusterKubeAdminConfigOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeAdminConfig) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// A password or token used to authenticate to the Kubernetes cluster.
func (o KubernetesClusterKubeAdminConfigOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeAdminConfig) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// A username used to authenticate to the Kubernetes cluster.
func (o KubernetesClusterKubeAdminConfigOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeAdminConfig) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type KubernetesClusterKubeAdminConfigArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterKubeAdminConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterKubeAdminConfig)(nil)).Elem()
}

func (o KubernetesClusterKubeAdminConfigArrayOutput) ToKubernetesClusterKubeAdminConfigArrayOutput() KubernetesClusterKubeAdminConfigArrayOutput {
	return o
}

func (o KubernetesClusterKubeAdminConfigArrayOutput) ToKubernetesClusterKubeAdminConfigArrayOutputWithContext(ctx context.Context) KubernetesClusterKubeAdminConfigArrayOutput {
	return o
}

func (o KubernetesClusterKubeAdminConfigArrayOutput) Index(i pulumi.IntInput) KubernetesClusterKubeAdminConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterKubeAdminConfig {
		return vs[0].([]KubernetesClusterKubeAdminConfig)[vs[1].(int)]
	}).(KubernetesClusterKubeAdminConfigOutput)
}

type KubernetesClusterKubeConfig struct {
	// Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
	ClientKey *string `pulumi:"clientKey"`
	// Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
	ClusterCaCertificate *string `pulumi:"clusterCaCertificate"`
	// The Kubernetes cluster server host.
	Host *string `pulumi:"host"`
	// A password or token used to authenticate to the Kubernetes cluster.
	Password *string `pulumi:"password"`
	// A username used to authenticate to the Kubernetes cluster.
	Username *string `pulumi:"username"`
}

// KubernetesClusterKubeConfigInput is an input type that accepts KubernetesClusterKubeConfigArgs and KubernetesClusterKubeConfigOutput values.
// You can construct a concrete instance of `KubernetesClusterKubeConfigInput` via:
//
//	KubernetesClusterKubeConfigArgs{...}
type KubernetesClusterKubeConfigInput interface {
	pulumi.Input

	ToKubernetesClusterKubeConfigOutput() KubernetesClusterKubeConfigOutput
	ToKubernetesClusterKubeConfigOutputWithContext(context.Context) KubernetesClusterKubeConfigOutput
}

type KubernetesClusterKubeConfigArgs struct {
	// Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
	ClientKey pulumi.StringPtrInput `pulumi:"clientKey"`
	// Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
	ClusterCaCertificate pulumi.StringPtrInput `pulumi:"clusterCaCertificate"`
	// The Kubernetes cluster server host.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// A password or token used to authenticate to the Kubernetes cluster.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// A username used to authenticate to the Kubernetes cluster.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (KubernetesClusterKubeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterKubeConfig)(nil)).Elem()
}

func (i KubernetesClusterKubeConfigArgs) ToKubernetesClusterKubeConfigOutput() KubernetesClusterKubeConfigOutput {
	return i.ToKubernetesClusterKubeConfigOutputWithContext(context.Background())
}

func (i KubernetesClusterKubeConfigArgs) ToKubernetesClusterKubeConfigOutputWithContext(ctx context.Context) KubernetesClusterKubeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKubeConfigOutput)
}

// KubernetesClusterKubeConfigArrayInput is an input type that accepts KubernetesClusterKubeConfigArray and KubernetesClusterKubeConfigArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterKubeConfigArrayInput` via:
//
//	KubernetesClusterKubeConfigArray{ KubernetesClusterKubeConfigArgs{...} }
type KubernetesClusterKubeConfigArrayInput interface {
	pulumi.Input

	ToKubernetesClusterKubeConfigArrayOutput() KubernetesClusterKubeConfigArrayOutput
	ToKubernetesClusterKubeConfigArrayOutputWithContext(context.Context) KubernetesClusterKubeConfigArrayOutput
}

type KubernetesClusterKubeConfigArray []KubernetesClusterKubeConfigInput

func (KubernetesClusterKubeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterKubeConfig)(nil)).Elem()
}

func (i KubernetesClusterKubeConfigArray) ToKubernetesClusterKubeConfigArrayOutput() KubernetesClusterKubeConfigArrayOutput {
	return i.ToKubernetesClusterKubeConfigArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterKubeConfigArray) ToKubernetesClusterKubeConfigArrayOutputWithContext(ctx context.Context) KubernetesClusterKubeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKubeConfigArrayOutput)
}

type KubernetesClusterKubeConfigOutput struct{ *pulumi.OutputState }

func (KubernetesClusterKubeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterKubeConfig)(nil)).Elem()
}

func (o KubernetesClusterKubeConfigOutput) ToKubernetesClusterKubeConfigOutput() KubernetesClusterKubeConfigOutput {
	return o
}

func (o KubernetesClusterKubeConfigOutput) ToKubernetesClusterKubeConfigOutputWithContext(ctx context.Context) KubernetesClusterKubeConfigOutput {
	return o
}

// Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
func (o KubernetesClusterKubeConfigOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeConfig) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
func (o KubernetesClusterKubeConfigOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeConfig) *string { return v.ClientKey }).(pulumi.StringPtrOutput)
}

// Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
func (o KubernetesClusterKubeConfigOutput) ClusterCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeConfig) *string { return v.ClusterCaCertificate }).(pulumi.StringPtrOutput)
}

// The Kubernetes cluster server host.
func (o KubernetesClusterKubeConfigOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeConfig) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// A password or token used to authenticate to the Kubernetes cluster.
func (o KubernetesClusterKubeConfigOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeConfig) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// A username used to authenticate to the Kubernetes cluster.
func (o KubernetesClusterKubeConfigOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeConfig) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type KubernetesClusterKubeConfigArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterKubeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterKubeConfig)(nil)).Elem()
}

func (o KubernetesClusterKubeConfigArrayOutput) ToKubernetesClusterKubeConfigArrayOutput() KubernetesClusterKubeConfigArrayOutput {
	return o
}

func (o KubernetesClusterKubeConfigArrayOutput) ToKubernetesClusterKubeConfigArrayOutputWithContext(ctx context.Context) KubernetesClusterKubeConfigArrayOutput {
	return o
}

func (o KubernetesClusterKubeConfigArrayOutput) Index(i pulumi.IntInput) KubernetesClusterKubeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterKubeConfig {
		return vs[0].([]KubernetesClusterKubeConfig)[vs[1].(int)]
	}).(KubernetesClusterKubeConfigOutput)
}

type KubernetesClusterKubeletIdentity struct {
	// The Client ID of the user-defined Managed Identity to be assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	ClientId *string `pulumi:"clientId"`
	// The Object ID of the user-defined Managed Identity assigned to the Kubelets.If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	ObjectId *string `pulumi:"objectId"`
	// The ID of the User Assigned Identity assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	//
	// > **Note:** When `kubeletIdentity` is enabled - The `type` field in the `identity` block must be set to `UserAssigned` and `identityIds` must be set.
	UserAssignedIdentityId *string `pulumi:"userAssignedIdentityId"`
}

// KubernetesClusterKubeletIdentityInput is an input type that accepts KubernetesClusterKubeletIdentityArgs and KubernetesClusterKubeletIdentityOutput values.
// You can construct a concrete instance of `KubernetesClusterKubeletIdentityInput` via:
//
//	KubernetesClusterKubeletIdentityArgs{...}
type KubernetesClusterKubeletIdentityInput interface {
	pulumi.Input

	ToKubernetesClusterKubeletIdentityOutput() KubernetesClusterKubeletIdentityOutput
	ToKubernetesClusterKubeletIdentityOutputWithContext(context.Context) KubernetesClusterKubeletIdentityOutput
}

type KubernetesClusterKubeletIdentityArgs struct {
	// The Client ID of the user-defined Managed Identity to be assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The Object ID of the user-defined Managed Identity assigned to the Kubelets.If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
	// The ID of the User Assigned Identity assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	//
	// > **Note:** When `kubeletIdentity` is enabled - The `type` field in the `identity` block must be set to `UserAssigned` and `identityIds` must be set.
	UserAssignedIdentityId pulumi.StringPtrInput `pulumi:"userAssignedIdentityId"`
}

func (KubernetesClusterKubeletIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterKubeletIdentity)(nil)).Elem()
}

func (i KubernetesClusterKubeletIdentityArgs) ToKubernetesClusterKubeletIdentityOutput() KubernetesClusterKubeletIdentityOutput {
	return i.ToKubernetesClusterKubeletIdentityOutputWithContext(context.Background())
}

func (i KubernetesClusterKubeletIdentityArgs) ToKubernetesClusterKubeletIdentityOutputWithContext(ctx context.Context) KubernetesClusterKubeletIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKubeletIdentityOutput)
}

func (i KubernetesClusterKubeletIdentityArgs) ToKubernetesClusterKubeletIdentityPtrOutput() KubernetesClusterKubeletIdentityPtrOutput {
	return i.ToKubernetesClusterKubeletIdentityPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterKubeletIdentityArgs) ToKubernetesClusterKubeletIdentityPtrOutputWithContext(ctx context.Context) KubernetesClusterKubeletIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKubeletIdentityOutput).ToKubernetesClusterKubeletIdentityPtrOutputWithContext(ctx)
}

// KubernetesClusterKubeletIdentityPtrInput is an input type that accepts KubernetesClusterKubeletIdentityArgs, KubernetesClusterKubeletIdentityPtr and KubernetesClusterKubeletIdentityPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterKubeletIdentityPtrInput` via:
//
//	        KubernetesClusterKubeletIdentityArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterKubeletIdentityPtrInput interface {
	pulumi.Input

	ToKubernetesClusterKubeletIdentityPtrOutput() KubernetesClusterKubeletIdentityPtrOutput
	ToKubernetesClusterKubeletIdentityPtrOutputWithContext(context.Context) KubernetesClusterKubeletIdentityPtrOutput
}

type kubernetesClusterKubeletIdentityPtrType KubernetesClusterKubeletIdentityArgs

func KubernetesClusterKubeletIdentityPtr(v *KubernetesClusterKubeletIdentityArgs) KubernetesClusterKubeletIdentityPtrInput {
	return (*kubernetesClusterKubeletIdentityPtrType)(v)
}

func (*kubernetesClusterKubeletIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterKubeletIdentity)(nil)).Elem()
}

func (i *kubernetesClusterKubeletIdentityPtrType) ToKubernetesClusterKubeletIdentityPtrOutput() KubernetesClusterKubeletIdentityPtrOutput {
	return i.ToKubernetesClusterKubeletIdentityPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterKubeletIdentityPtrType) ToKubernetesClusterKubeletIdentityPtrOutputWithContext(ctx context.Context) KubernetesClusterKubeletIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKubeletIdentityPtrOutput)
}

type KubernetesClusterKubeletIdentityOutput struct{ *pulumi.OutputState }

func (KubernetesClusterKubeletIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterKubeletIdentity)(nil)).Elem()
}

func (o KubernetesClusterKubeletIdentityOutput) ToKubernetesClusterKubeletIdentityOutput() KubernetesClusterKubeletIdentityOutput {
	return o
}

func (o KubernetesClusterKubeletIdentityOutput) ToKubernetesClusterKubeletIdentityOutputWithContext(ctx context.Context) KubernetesClusterKubeletIdentityOutput {
	return o
}

func (o KubernetesClusterKubeletIdentityOutput) ToKubernetesClusterKubeletIdentityPtrOutput() KubernetesClusterKubeletIdentityPtrOutput {
	return o.ToKubernetesClusterKubeletIdentityPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterKubeletIdentityOutput) ToKubernetesClusterKubeletIdentityPtrOutputWithContext(ctx context.Context) KubernetesClusterKubeletIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterKubeletIdentity) *KubernetesClusterKubeletIdentity {
		return &v
	}).(KubernetesClusterKubeletIdentityPtrOutput)
}

// The Client ID of the user-defined Managed Identity to be assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
func (o KubernetesClusterKubeletIdentityOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeletIdentity) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The Object ID of the user-defined Managed Identity assigned to the Kubelets.If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
func (o KubernetesClusterKubeletIdentityOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeletIdentity) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// The ID of the User Assigned Identity assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
//
// > **Note:** When `kubeletIdentity` is enabled - The `type` field in the `identity` block must be set to `UserAssigned` and `identityIds` must be set.
func (o KubernetesClusterKubeletIdentityOutput) UserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeletIdentity) *string { return v.UserAssignedIdentityId }).(pulumi.StringPtrOutput)
}

type KubernetesClusterKubeletIdentityPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterKubeletIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterKubeletIdentity)(nil)).Elem()
}

func (o KubernetesClusterKubeletIdentityPtrOutput) ToKubernetesClusterKubeletIdentityPtrOutput() KubernetesClusterKubeletIdentityPtrOutput {
	return o
}

func (o KubernetesClusterKubeletIdentityPtrOutput) ToKubernetesClusterKubeletIdentityPtrOutputWithContext(ctx context.Context) KubernetesClusterKubeletIdentityPtrOutput {
	return o
}

func (o KubernetesClusterKubeletIdentityPtrOutput) Elem() KubernetesClusterKubeletIdentityOutput {
	return o.ApplyT(func(v *KubernetesClusterKubeletIdentity) KubernetesClusterKubeletIdentity {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterKubeletIdentity
		return ret
	}).(KubernetesClusterKubeletIdentityOutput)
}

// The Client ID of the user-defined Managed Identity to be assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
func (o KubernetesClusterKubeletIdentityPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterKubeletIdentity) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The Object ID of the user-defined Managed Identity assigned to the Kubelets.If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
func (o KubernetesClusterKubeletIdentityPtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterKubeletIdentity) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// The ID of the User Assigned Identity assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
//
// > **Note:** When `kubeletIdentity` is enabled - The `type` field in the `identity` block must be set to `UserAssigned` and `identityIds` must be set.
func (o KubernetesClusterKubeletIdentityPtrOutput) UserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterKubeletIdentity) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentityId
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterLinuxProfile struct {
	// The Admin Username for the Cluster. Changing this forces a new resource to be created.
	AdminUsername string `pulumi:"adminUsername"`
	// An `sshKey` block as defined below. Only one is currently allowed. Changing this will update the key on all node pools. More information can be found in [the documentation](https://learn.microsoft.com/en-us/azure/aks/node-access#update-ssh-key-on-an-existing-aks-cluster-preview).
	SshKey KubernetesClusterLinuxProfileSshKey `pulumi:"sshKey"`
}

// KubernetesClusterLinuxProfileInput is an input type that accepts KubernetesClusterLinuxProfileArgs and KubernetesClusterLinuxProfileOutput values.
// You can construct a concrete instance of `KubernetesClusterLinuxProfileInput` via:
//
//	KubernetesClusterLinuxProfileArgs{...}
type KubernetesClusterLinuxProfileInput interface {
	pulumi.Input

	ToKubernetesClusterLinuxProfileOutput() KubernetesClusterLinuxProfileOutput
	ToKubernetesClusterLinuxProfileOutputWithContext(context.Context) KubernetesClusterLinuxProfileOutput
}

type KubernetesClusterLinuxProfileArgs struct {
	// The Admin Username for the Cluster. Changing this forces a new resource to be created.
	AdminUsername pulumi.StringInput `pulumi:"adminUsername"`
	// An `sshKey` block as defined below. Only one is currently allowed. Changing this will update the key on all node pools. More information can be found in [the documentation](https://learn.microsoft.com/en-us/azure/aks/node-access#update-ssh-key-on-an-existing-aks-cluster-preview).
	SshKey KubernetesClusterLinuxProfileSshKeyInput `pulumi:"sshKey"`
}

func (KubernetesClusterLinuxProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterLinuxProfile)(nil)).Elem()
}

func (i KubernetesClusterLinuxProfileArgs) ToKubernetesClusterLinuxProfileOutput() KubernetesClusterLinuxProfileOutput {
	return i.ToKubernetesClusterLinuxProfileOutputWithContext(context.Background())
}

func (i KubernetesClusterLinuxProfileArgs) ToKubernetesClusterLinuxProfileOutputWithContext(ctx context.Context) KubernetesClusterLinuxProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterLinuxProfileOutput)
}

func (i KubernetesClusterLinuxProfileArgs) ToKubernetesClusterLinuxProfilePtrOutput() KubernetesClusterLinuxProfilePtrOutput {
	return i.ToKubernetesClusterLinuxProfilePtrOutputWithContext(context.Background())
}

func (i KubernetesClusterLinuxProfileArgs) ToKubernetesClusterLinuxProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterLinuxProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterLinuxProfileOutput).ToKubernetesClusterLinuxProfilePtrOutputWithContext(ctx)
}

// KubernetesClusterLinuxProfilePtrInput is an input type that accepts KubernetesClusterLinuxProfileArgs, KubernetesClusterLinuxProfilePtr and KubernetesClusterLinuxProfilePtrOutput values.
// You can construct a concrete instance of `KubernetesClusterLinuxProfilePtrInput` via:
//
//	        KubernetesClusterLinuxProfileArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterLinuxProfilePtrInput interface {
	pulumi.Input

	ToKubernetesClusterLinuxProfilePtrOutput() KubernetesClusterLinuxProfilePtrOutput
	ToKubernetesClusterLinuxProfilePtrOutputWithContext(context.Context) KubernetesClusterLinuxProfilePtrOutput
}

type kubernetesClusterLinuxProfilePtrType KubernetesClusterLinuxProfileArgs

func KubernetesClusterLinuxProfilePtr(v *KubernetesClusterLinuxProfileArgs) KubernetesClusterLinuxProfilePtrInput {
	return (*kubernetesClusterLinuxProfilePtrType)(v)
}

func (*kubernetesClusterLinuxProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterLinuxProfile)(nil)).Elem()
}

func (i *kubernetesClusterLinuxProfilePtrType) ToKubernetesClusterLinuxProfilePtrOutput() KubernetesClusterLinuxProfilePtrOutput {
	return i.ToKubernetesClusterLinuxProfilePtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterLinuxProfilePtrType) ToKubernetesClusterLinuxProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterLinuxProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterLinuxProfilePtrOutput)
}

type KubernetesClusterLinuxProfileOutput struct{ *pulumi.OutputState }

func (KubernetesClusterLinuxProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterLinuxProfile)(nil)).Elem()
}

func (o KubernetesClusterLinuxProfileOutput) ToKubernetesClusterLinuxProfileOutput() KubernetesClusterLinuxProfileOutput {
	return o
}

func (o KubernetesClusterLinuxProfileOutput) ToKubernetesClusterLinuxProfileOutputWithContext(ctx context.Context) KubernetesClusterLinuxProfileOutput {
	return o
}

func (o KubernetesClusterLinuxProfileOutput) ToKubernetesClusterLinuxProfilePtrOutput() KubernetesClusterLinuxProfilePtrOutput {
	return o.ToKubernetesClusterLinuxProfilePtrOutputWithContext(context.Background())
}

func (o KubernetesClusterLinuxProfileOutput) ToKubernetesClusterLinuxProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterLinuxProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterLinuxProfile) *KubernetesClusterLinuxProfile {
		return &v
	}).(KubernetesClusterLinuxProfilePtrOutput)
}

// The Admin Username for the Cluster. Changing this forces a new resource to be created.
func (o KubernetesClusterLinuxProfileOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterLinuxProfile) string { return v.AdminUsername }).(pulumi.StringOutput)
}

// An `sshKey` block as defined below. Only one is currently allowed. Changing this will update the key on all node pools. More information can be found in [the documentation](https://learn.microsoft.com/en-us/azure/aks/node-access#update-ssh-key-on-an-existing-aks-cluster-preview).
func (o KubernetesClusterLinuxProfileOutput) SshKey() KubernetesClusterLinuxProfileSshKeyOutput {
	return o.ApplyT(func(v KubernetesClusterLinuxProfile) KubernetesClusterLinuxProfileSshKey { return v.SshKey }).(KubernetesClusterLinuxProfileSshKeyOutput)
}

type KubernetesClusterLinuxProfilePtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterLinuxProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterLinuxProfile)(nil)).Elem()
}

func (o KubernetesClusterLinuxProfilePtrOutput) ToKubernetesClusterLinuxProfilePtrOutput() KubernetesClusterLinuxProfilePtrOutput {
	return o
}

func (o KubernetesClusterLinuxProfilePtrOutput) ToKubernetesClusterLinuxProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterLinuxProfilePtrOutput {
	return o
}

func (o KubernetesClusterLinuxProfilePtrOutput) Elem() KubernetesClusterLinuxProfileOutput {
	return o.ApplyT(func(v *KubernetesClusterLinuxProfile) KubernetesClusterLinuxProfile {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterLinuxProfile
		return ret
	}).(KubernetesClusterLinuxProfileOutput)
}

// The Admin Username for the Cluster. Changing this forces a new resource to be created.
func (o KubernetesClusterLinuxProfilePtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterLinuxProfile) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// An `sshKey` block as defined below. Only one is currently allowed. Changing this will update the key on all node pools. More information can be found in [the documentation](https://learn.microsoft.com/en-us/azure/aks/node-access#update-ssh-key-on-an-existing-aks-cluster-preview).
func (o KubernetesClusterLinuxProfilePtrOutput) SshKey() KubernetesClusterLinuxProfileSshKeyPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterLinuxProfile) *KubernetesClusterLinuxProfileSshKey {
		if v == nil {
			return nil
		}
		return &v.SshKey
	}).(KubernetesClusterLinuxProfileSshKeyPtrOutput)
}

type KubernetesClusterLinuxProfileSshKey struct {
	// The Public SSH Key used to access the cluster.
	KeyData string `pulumi:"keyData"`
}

// KubernetesClusterLinuxProfileSshKeyInput is an input type that accepts KubernetesClusterLinuxProfileSshKeyArgs and KubernetesClusterLinuxProfileSshKeyOutput values.
// You can construct a concrete instance of `KubernetesClusterLinuxProfileSshKeyInput` via:
//
//	KubernetesClusterLinuxProfileSshKeyArgs{...}
type KubernetesClusterLinuxProfileSshKeyInput interface {
	pulumi.Input

	ToKubernetesClusterLinuxProfileSshKeyOutput() KubernetesClusterLinuxProfileSshKeyOutput
	ToKubernetesClusterLinuxProfileSshKeyOutputWithContext(context.Context) KubernetesClusterLinuxProfileSshKeyOutput
}

type KubernetesClusterLinuxProfileSshKeyArgs struct {
	// The Public SSH Key used to access the cluster.
	KeyData pulumi.StringInput `pulumi:"keyData"`
}

func (KubernetesClusterLinuxProfileSshKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterLinuxProfileSshKey)(nil)).Elem()
}

func (i KubernetesClusterLinuxProfileSshKeyArgs) ToKubernetesClusterLinuxProfileSshKeyOutput() KubernetesClusterLinuxProfileSshKeyOutput {
	return i.ToKubernetesClusterLinuxProfileSshKeyOutputWithContext(context.Background())
}

func (i KubernetesClusterLinuxProfileSshKeyArgs) ToKubernetesClusterLinuxProfileSshKeyOutputWithContext(ctx context.Context) KubernetesClusterLinuxProfileSshKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterLinuxProfileSshKeyOutput)
}

func (i KubernetesClusterLinuxProfileSshKeyArgs) ToKubernetesClusterLinuxProfileSshKeyPtrOutput() KubernetesClusterLinuxProfileSshKeyPtrOutput {
	return i.ToKubernetesClusterLinuxProfileSshKeyPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterLinuxProfileSshKeyArgs) ToKubernetesClusterLinuxProfileSshKeyPtrOutputWithContext(ctx context.Context) KubernetesClusterLinuxProfileSshKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterLinuxProfileSshKeyOutput).ToKubernetesClusterLinuxProfileSshKeyPtrOutputWithContext(ctx)
}

// KubernetesClusterLinuxProfileSshKeyPtrInput is an input type that accepts KubernetesClusterLinuxProfileSshKeyArgs, KubernetesClusterLinuxProfileSshKeyPtr and KubernetesClusterLinuxProfileSshKeyPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterLinuxProfileSshKeyPtrInput` via:
//
//	        KubernetesClusterLinuxProfileSshKeyArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterLinuxProfileSshKeyPtrInput interface {
	pulumi.Input

	ToKubernetesClusterLinuxProfileSshKeyPtrOutput() KubernetesClusterLinuxProfileSshKeyPtrOutput
	ToKubernetesClusterLinuxProfileSshKeyPtrOutputWithContext(context.Context) KubernetesClusterLinuxProfileSshKeyPtrOutput
}

type kubernetesClusterLinuxProfileSshKeyPtrType KubernetesClusterLinuxProfileSshKeyArgs

func KubernetesClusterLinuxProfileSshKeyPtr(v *KubernetesClusterLinuxProfileSshKeyArgs) KubernetesClusterLinuxProfileSshKeyPtrInput {
	return (*kubernetesClusterLinuxProfileSshKeyPtrType)(v)
}

func (*kubernetesClusterLinuxProfileSshKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterLinuxProfileSshKey)(nil)).Elem()
}

func (i *kubernetesClusterLinuxProfileSshKeyPtrType) ToKubernetesClusterLinuxProfileSshKeyPtrOutput() KubernetesClusterLinuxProfileSshKeyPtrOutput {
	return i.ToKubernetesClusterLinuxProfileSshKeyPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterLinuxProfileSshKeyPtrType) ToKubernetesClusterLinuxProfileSshKeyPtrOutputWithContext(ctx context.Context) KubernetesClusterLinuxProfileSshKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterLinuxProfileSshKeyPtrOutput)
}

type KubernetesClusterLinuxProfileSshKeyOutput struct{ *pulumi.OutputState }

func (KubernetesClusterLinuxProfileSshKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterLinuxProfileSshKey)(nil)).Elem()
}

func (o KubernetesClusterLinuxProfileSshKeyOutput) ToKubernetesClusterLinuxProfileSshKeyOutput() KubernetesClusterLinuxProfileSshKeyOutput {
	return o
}

func (o KubernetesClusterLinuxProfileSshKeyOutput) ToKubernetesClusterLinuxProfileSshKeyOutputWithContext(ctx context.Context) KubernetesClusterLinuxProfileSshKeyOutput {
	return o
}

func (o KubernetesClusterLinuxProfileSshKeyOutput) ToKubernetesClusterLinuxProfileSshKeyPtrOutput() KubernetesClusterLinuxProfileSshKeyPtrOutput {
	return o.ToKubernetesClusterLinuxProfileSshKeyPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterLinuxProfileSshKeyOutput) ToKubernetesClusterLinuxProfileSshKeyPtrOutputWithContext(ctx context.Context) KubernetesClusterLinuxProfileSshKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterLinuxProfileSshKey) *KubernetesClusterLinuxProfileSshKey {
		return &v
	}).(KubernetesClusterLinuxProfileSshKeyPtrOutput)
}

// The Public SSH Key used to access the cluster.
func (o KubernetesClusterLinuxProfileSshKeyOutput) KeyData() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterLinuxProfileSshKey) string { return v.KeyData }).(pulumi.StringOutput)
}

type KubernetesClusterLinuxProfileSshKeyPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterLinuxProfileSshKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterLinuxProfileSshKey)(nil)).Elem()
}

func (o KubernetesClusterLinuxProfileSshKeyPtrOutput) ToKubernetesClusterLinuxProfileSshKeyPtrOutput() KubernetesClusterLinuxProfileSshKeyPtrOutput {
	return o
}

func (o KubernetesClusterLinuxProfileSshKeyPtrOutput) ToKubernetesClusterLinuxProfileSshKeyPtrOutputWithContext(ctx context.Context) KubernetesClusterLinuxProfileSshKeyPtrOutput {
	return o
}

func (o KubernetesClusterLinuxProfileSshKeyPtrOutput) Elem() KubernetesClusterLinuxProfileSshKeyOutput {
	return o.ApplyT(func(v *KubernetesClusterLinuxProfileSshKey) KubernetesClusterLinuxProfileSshKey {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterLinuxProfileSshKey
		return ret
	}).(KubernetesClusterLinuxProfileSshKeyOutput)
}

// The Public SSH Key used to access the cluster.
func (o KubernetesClusterLinuxProfileSshKeyPtrOutput) KeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterLinuxProfileSshKey) *string {
		if v == nil {
			return nil
		}
		return &v.KeyData
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterMaintenanceWindow struct {
	// One or more `allowed` blocks as defined below.
	Alloweds []KubernetesClusterMaintenanceWindowAllowed `pulumi:"alloweds"`
	// One or more `notAllowed` block as defined below.
	NotAlloweds []KubernetesClusterMaintenanceWindowNotAllowed `pulumi:"notAlloweds"`
}

// KubernetesClusterMaintenanceWindowInput is an input type that accepts KubernetesClusterMaintenanceWindowArgs and KubernetesClusterMaintenanceWindowOutput values.
// You can construct a concrete instance of `KubernetesClusterMaintenanceWindowInput` via:
//
//	KubernetesClusterMaintenanceWindowArgs{...}
type KubernetesClusterMaintenanceWindowInput interface {
	pulumi.Input

	ToKubernetesClusterMaintenanceWindowOutput() KubernetesClusterMaintenanceWindowOutput
	ToKubernetesClusterMaintenanceWindowOutputWithContext(context.Context) KubernetesClusterMaintenanceWindowOutput
}

type KubernetesClusterMaintenanceWindowArgs struct {
	// One or more `allowed` blocks as defined below.
	Alloweds KubernetesClusterMaintenanceWindowAllowedArrayInput `pulumi:"alloweds"`
	// One or more `notAllowed` block as defined below.
	NotAlloweds KubernetesClusterMaintenanceWindowNotAllowedArrayInput `pulumi:"notAlloweds"`
}

func (KubernetesClusterMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMaintenanceWindow)(nil)).Elem()
}

func (i KubernetesClusterMaintenanceWindowArgs) ToKubernetesClusterMaintenanceWindowOutput() KubernetesClusterMaintenanceWindowOutput {
	return i.ToKubernetesClusterMaintenanceWindowOutputWithContext(context.Background())
}

func (i KubernetesClusterMaintenanceWindowArgs) ToKubernetesClusterMaintenanceWindowOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMaintenanceWindowOutput)
}

func (i KubernetesClusterMaintenanceWindowArgs) ToKubernetesClusterMaintenanceWindowPtrOutput() KubernetesClusterMaintenanceWindowPtrOutput {
	return i.ToKubernetesClusterMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterMaintenanceWindowArgs) ToKubernetesClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMaintenanceWindowOutput).ToKubernetesClusterMaintenanceWindowPtrOutputWithContext(ctx)
}

// KubernetesClusterMaintenanceWindowPtrInput is an input type that accepts KubernetesClusterMaintenanceWindowArgs, KubernetesClusterMaintenanceWindowPtr and KubernetesClusterMaintenanceWindowPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterMaintenanceWindowPtrInput` via:
//
//	        KubernetesClusterMaintenanceWindowArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterMaintenanceWindowPtrInput interface {
	pulumi.Input

	ToKubernetesClusterMaintenanceWindowPtrOutput() KubernetesClusterMaintenanceWindowPtrOutput
	ToKubernetesClusterMaintenanceWindowPtrOutputWithContext(context.Context) KubernetesClusterMaintenanceWindowPtrOutput
}

type kubernetesClusterMaintenanceWindowPtrType KubernetesClusterMaintenanceWindowArgs

func KubernetesClusterMaintenanceWindowPtr(v *KubernetesClusterMaintenanceWindowArgs) KubernetesClusterMaintenanceWindowPtrInput {
	return (*kubernetesClusterMaintenanceWindowPtrType)(v)
}

func (*kubernetesClusterMaintenanceWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterMaintenanceWindow)(nil)).Elem()
}

func (i *kubernetesClusterMaintenanceWindowPtrType) ToKubernetesClusterMaintenanceWindowPtrOutput() KubernetesClusterMaintenanceWindowPtrOutput {
	return i.ToKubernetesClusterMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterMaintenanceWindowPtrType) ToKubernetesClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMaintenanceWindowPtrOutput)
}

type KubernetesClusterMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMaintenanceWindow)(nil)).Elem()
}

func (o KubernetesClusterMaintenanceWindowOutput) ToKubernetesClusterMaintenanceWindowOutput() KubernetesClusterMaintenanceWindowOutput {
	return o
}

func (o KubernetesClusterMaintenanceWindowOutput) ToKubernetesClusterMaintenanceWindowOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowOutput {
	return o
}

func (o KubernetesClusterMaintenanceWindowOutput) ToKubernetesClusterMaintenanceWindowPtrOutput() KubernetesClusterMaintenanceWindowPtrOutput {
	return o.ToKubernetesClusterMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterMaintenanceWindowOutput) ToKubernetesClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterMaintenanceWindow) *KubernetesClusterMaintenanceWindow {
		return &v
	}).(KubernetesClusterMaintenanceWindowPtrOutput)
}

// One or more `allowed` blocks as defined below.
func (o KubernetesClusterMaintenanceWindowOutput) Alloweds() KubernetesClusterMaintenanceWindowAllowedArrayOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindow) []KubernetesClusterMaintenanceWindowAllowed {
		return v.Alloweds
	}).(KubernetesClusterMaintenanceWindowAllowedArrayOutput)
}

// One or more `notAllowed` block as defined below.
func (o KubernetesClusterMaintenanceWindowOutput) NotAlloweds() KubernetesClusterMaintenanceWindowNotAllowedArrayOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindow) []KubernetesClusterMaintenanceWindowNotAllowed {
		return v.NotAlloweds
	}).(KubernetesClusterMaintenanceWindowNotAllowedArrayOutput)
}

type KubernetesClusterMaintenanceWindowPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMaintenanceWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterMaintenanceWindow)(nil)).Elem()
}

func (o KubernetesClusterMaintenanceWindowPtrOutput) ToKubernetesClusterMaintenanceWindowPtrOutput() KubernetesClusterMaintenanceWindowPtrOutput {
	return o
}

func (o KubernetesClusterMaintenanceWindowPtrOutput) ToKubernetesClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowPtrOutput {
	return o
}

func (o KubernetesClusterMaintenanceWindowPtrOutput) Elem() KubernetesClusterMaintenanceWindowOutput {
	return o.ApplyT(func(v *KubernetesClusterMaintenanceWindow) KubernetesClusterMaintenanceWindow {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterMaintenanceWindow
		return ret
	}).(KubernetesClusterMaintenanceWindowOutput)
}

// One or more `allowed` blocks as defined below.
func (o KubernetesClusterMaintenanceWindowPtrOutput) Alloweds() KubernetesClusterMaintenanceWindowAllowedArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterMaintenanceWindow) []KubernetesClusterMaintenanceWindowAllowed {
		if v == nil {
			return nil
		}
		return v.Alloweds
	}).(KubernetesClusterMaintenanceWindowAllowedArrayOutput)
}

// One or more `notAllowed` block as defined below.
func (o KubernetesClusterMaintenanceWindowPtrOutput) NotAlloweds() KubernetesClusterMaintenanceWindowNotAllowedArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterMaintenanceWindow) []KubernetesClusterMaintenanceWindowNotAllowed {
		if v == nil {
			return nil
		}
		return v.NotAlloweds
	}).(KubernetesClusterMaintenanceWindowNotAllowedArrayOutput)
}

type KubernetesClusterMaintenanceWindowAllowed struct {
	// A day in a week. Possible values are `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` and `Saturday`.
	Day string `pulumi:"day"`
	// An array of hour slots in a day. For example, specifying `1` will allow maintenance from 1:00am to 2:00am. Specifying `1`, `2` will allow maintenance from 1:00am to 3:00m. Possible values are between `0` and `23`.
	Hours []int `pulumi:"hours"`
}

// KubernetesClusterMaintenanceWindowAllowedInput is an input type that accepts KubernetesClusterMaintenanceWindowAllowedArgs and KubernetesClusterMaintenanceWindowAllowedOutput values.
// You can construct a concrete instance of `KubernetesClusterMaintenanceWindowAllowedInput` via:
//
//	KubernetesClusterMaintenanceWindowAllowedArgs{...}
type KubernetesClusterMaintenanceWindowAllowedInput interface {
	pulumi.Input

	ToKubernetesClusterMaintenanceWindowAllowedOutput() KubernetesClusterMaintenanceWindowAllowedOutput
	ToKubernetesClusterMaintenanceWindowAllowedOutputWithContext(context.Context) KubernetesClusterMaintenanceWindowAllowedOutput
}

type KubernetesClusterMaintenanceWindowAllowedArgs struct {
	// A day in a week. Possible values are `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` and `Saturday`.
	Day pulumi.StringInput `pulumi:"day"`
	// An array of hour slots in a day. For example, specifying `1` will allow maintenance from 1:00am to 2:00am. Specifying `1`, `2` will allow maintenance from 1:00am to 3:00m. Possible values are between `0` and `23`.
	Hours pulumi.IntArrayInput `pulumi:"hours"`
}

func (KubernetesClusterMaintenanceWindowAllowedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMaintenanceWindowAllowed)(nil)).Elem()
}

func (i KubernetesClusterMaintenanceWindowAllowedArgs) ToKubernetesClusterMaintenanceWindowAllowedOutput() KubernetesClusterMaintenanceWindowAllowedOutput {
	return i.ToKubernetesClusterMaintenanceWindowAllowedOutputWithContext(context.Background())
}

func (i KubernetesClusterMaintenanceWindowAllowedArgs) ToKubernetesClusterMaintenanceWindowAllowedOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowAllowedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMaintenanceWindowAllowedOutput)
}

// KubernetesClusterMaintenanceWindowAllowedArrayInput is an input type that accepts KubernetesClusterMaintenanceWindowAllowedArray and KubernetesClusterMaintenanceWindowAllowedArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterMaintenanceWindowAllowedArrayInput` via:
//
//	KubernetesClusterMaintenanceWindowAllowedArray{ KubernetesClusterMaintenanceWindowAllowedArgs{...} }
type KubernetesClusterMaintenanceWindowAllowedArrayInput interface {
	pulumi.Input

	ToKubernetesClusterMaintenanceWindowAllowedArrayOutput() KubernetesClusterMaintenanceWindowAllowedArrayOutput
	ToKubernetesClusterMaintenanceWindowAllowedArrayOutputWithContext(context.Context) KubernetesClusterMaintenanceWindowAllowedArrayOutput
}

type KubernetesClusterMaintenanceWindowAllowedArray []KubernetesClusterMaintenanceWindowAllowedInput

func (KubernetesClusterMaintenanceWindowAllowedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterMaintenanceWindowAllowed)(nil)).Elem()
}

func (i KubernetesClusterMaintenanceWindowAllowedArray) ToKubernetesClusterMaintenanceWindowAllowedArrayOutput() KubernetesClusterMaintenanceWindowAllowedArrayOutput {
	return i.ToKubernetesClusterMaintenanceWindowAllowedArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterMaintenanceWindowAllowedArray) ToKubernetesClusterMaintenanceWindowAllowedArrayOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowAllowedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMaintenanceWindowAllowedArrayOutput)
}

type KubernetesClusterMaintenanceWindowAllowedOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMaintenanceWindowAllowedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMaintenanceWindowAllowed)(nil)).Elem()
}

func (o KubernetesClusterMaintenanceWindowAllowedOutput) ToKubernetesClusterMaintenanceWindowAllowedOutput() KubernetesClusterMaintenanceWindowAllowedOutput {
	return o
}

func (o KubernetesClusterMaintenanceWindowAllowedOutput) ToKubernetesClusterMaintenanceWindowAllowedOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowAllowedOutput {
	return o
}

// A day in a week. Possible values are `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` and `Saturday`.
func (o KubernetesClusterMaintenanceWindowAllowedOutput) Day() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindowAllowed) string { return v.Day }).(pulumi.StringOutput)
}

// An array of hour slots in a day. For example, specifying `1` will allow maintenance from 1:00am to 2:00am. Specifying `1`, `2` will allow maintenance from 1:00am to 3:00m. Possible values are between `0` and `23`.
func (o KubernetesClusterMaintenanceWindowAllowedOutput) Hours() pulumi.IntArrayOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindowAllowed) []int { return v.Hours }).(pulumi.IntArrayOutput)
}

type KubernetesClusterMaintenanceWindowAllowedArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMaintenanceWindowAllowedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterMaintenanceWindowAllowed)(nil)).Elem()
}

func (o KubernetesClusterMaintenanceWindowAllowedArrayOutput) ToKubernetesClusterMaintenanceWindowAllowedArrayOutput() KubernetesClusterMaintenanceWindowAllowedArrayOutput {
	return o
}

func (o KubernetesClusterMaintenanceWindowAllowedArrayOutput) ToKubernetesClusterMaintenanceWindowAllowedArrayOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowAllowedArrayOutput {
	return o
}

func (o KubernetesClusterMaintenanceWindowAllowedArrayOutput) Index(i pulumi.IntInput) KubernetesClusterMaintenanceWindowAllowedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterMaintenanceWindowAllowed {
		return vs[0].([]KubernetesClusterMaintenanceWindowAllowed)[vs[1].(int)]
	}).(KubernetesClusterMaintenanceWindowAllowedOutput)
}

type KubernetesClusterMaintenanceWindowAutoUpgrade struct {
	// The day of the month for the maintenance run. Required in combination with RelativeMonthly frequency. Value between 0 and 31 (inclusive).
	DayOfMonth *int `pulumi:"dayOfMonth"`
	// The day of the week for the maintenance run. Required in combination with weekly frequency. Possible values are `Friday`, `Monday`, `Saturday`, `Sunday`, `Thursday`, `Tuesday` and `Wednesday`.
	DayOfWeek *string `pulumi:"dayOfWeek"`
	// The duration of the window for maintenance to run in hours.
	Duration int `pulumi:"duration"`
	// Frequency of maintenance. Possible options are `Weekly`, `AbsoluteMonthly` and `RelativeMonthly`.
	Frequency string `pulumi:"frequency"`
	// The interval for maintenance runs. Depending on the frequency this interval is week or month based.
	Interval int `pulumi:"interval"`
	// One or more `notAllowed` block as defined below.
	NotAlloweds []KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowed `pulumi:"notAlloweds"`
	// The date on which the maintenance window begins to take effect.
	StartDate *string `pulumi:"startDate"`
	// The time for maintenance to begin, based on the timezone determined by `utcOffset`. Format is `HH:mm`.
	StartTime *string `pulumi:"startTime"`
	// Used to determine the timezone for cluster maintenance.
	UtcOffset *string `pulumi:"utcOffset"`
	// Specifies on which instance of the allowed days specified in `dayOfWeek` the maintenance occurs. Options are `First`, `Second`, `Third`, `Fourth`, and `Last`.
	// Required in combination with relative monthly frequency.
	WeekIndex *string `pulumi:"weekIndex"`
}

// KubernetesClusterMaintenanceWindowAutoUpgradeInput is an input type that accepts KubernetesClusterMaintenanceWindowAutoUpgradeArgs and KubernetesClusterMaintenanceWindowAutoUpgradeOutput values.
// You can construct a concrete instance of `KubernetesClusterMaintenanceWindowAutoUpgradeInput` via:
//
//	KubernetesClusterMaintenanceWindowAutoUpgradeArgs{...}
type KubernetesClusterMaintenanceWindowAutoUpgradeInput interface {
	pulumi.Input

	ToKubernetesClusterMaintenanceWindowAutoUpgradeOutput() KubernetesClusterMaintenanceWindowAutoUpgradeOutput
	ToKubernetesClusterMaintenanceWindowAutoUpgradeOutputWithContext(context.Context) KubernetesClusterMaintenanceWindowAutoUpgradeOutput
}

type KubernetesClusterMaintenanceWindowAutoUpgradeArgs struct {
	// The day of the month for the maintenance run. Required in combination with RelativeMonthly frequency. Value between 0 and 31 (inclusive).
	DayOfMonth pulumi.IntPtrInput `pulumi:"dayOfMonth"`
	// The day of the week for the maintenance run. Required in combination with weekly frequency. Possible values are `Friday`, `Monday`, `Saturday`, `Sunday`, `Thursday`, `Tuesday` and `Wednesday`.
	DayOfWeek pulumi.StringPtrInput `pulumi:"dayOfWeek"`
	// The duration of the window for maintenance to run in hours.
	Duration pulumi.IntInput `pulumi:"duration"`
	// Frequency of maintenance. Possible options are `Weekly`, `AbsoluteMonthly` and `RelativeMonthly`.
	Frequency pulumi.StringInput `pulumi:"frequency"`
	// The interval for maintenance runs. Depending on the frequency this interval is week or month based.
	Interval pulumi.IntInput `pulumi:"interval"`
	// One or more `notAllowed` block as defined below.
	NotAlloweds KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayInput `pulumi:"notAlloweds"`
	// The date on which the maintenance window begins to take effect.
	StartDate pulumi.StringPtrInput `pulumi:"startDate"`
	// The time for maintenance to begin, based on the timezone determined by `utcOffset`. Format is `HH:mm`.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// Used to determine the timezone for cluster maintenance.
	UtcOffset pulumi.StringPtrInput `pulumi:"utcOffset"`
	// Specifies on which instance of the allowed days specified in `dayOfWeek` the maintenance occurs. Options are `First`, `Second`, `Third`, `Fourth`, and `Last`.
	// Required in combination with relative monthly frequency.
	WeekIndex pulumi.StringPtrInput `pulumi:"weekIndex"`
}

func (KubernetesClusterMaintenanceWindowAutoUpgradeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMaintenanceWindowAutoUpgrade)(nil)).Elem()
}

func (i KubernetesClusterMaintenanceWindowAutoUpgradeArgs) ToKubernetesClusterMaintenanceWindowAutoUpgradeOutput() KubernetesClusterMaintenanceWindowAutoUpgradeOutput {
	return i.ToKubernetesClusterMaintenanceWindowAutoUpgradeOutputWithContext(context.Background())
}

func (i KubernetesClusterMaintenanceWindowAutoUpgradeArgs) ToKubernetesClusterMaintenanceWindowAutoUpgradeOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowAutoUpgradeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMaintenanceWindowAutoUpgradeOutput)
}

func (i KubernetesClusterMaintenanceWindowAutoUpgradeArgs) ToKubernetesClusterMaintenanceWindowAutoUpgradePtrOutput() KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput {
	return i.ToKubernetesClusterMaintenanceWindowAutoUpgradePtrOutputWithContext(context.Background())
}

func (i KubernetesClusterMaintenanceWindowAutoUpgradeArgs) ToKubernetesClusterMaintenanceWindowAutoUpgradePtrOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMaintenanceWindowAutoUpgradeOutput).ToKubernetesClusterMaintenanceWindowAutoUpgradePtrOutputWithContext(ctx)
}

// KubernetesClusterMaintenanceWindowAutoUpgradePtrInput is an input type that accepts KubernetesClusterMaintenanceWindowAutoUpgradeArgs, KubernetesClusterMaintenanceWindowAutoUpgradePtr and KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput values.
// You can construct a concrete instance of `KubernetesClusterMaintenanceWindowAutoUpgradePtrInput` via:
//
//	        KubernetesClusterMaintenanceWindowAutoUpgradeArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterMaintenanceWindowAutoUpgradePtrInput interface {
	pulumi.Input

	ToKubernetesClusterMaintenanceWindowAutoUpgradePtrOutput() KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput
	ToKubernetesClusterMaintenanceWindowAutoUpgradePtrOutputWithContext(context.Context) KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput
}

type kubernetesClusterMaintenanceWindowAutoUpgradePtrType KubernetesClusterMaintenanceWindowAutoUpgradeArgs

func KubernetesClusterMaintenanceWindowAutoUpgradePtr(v *KubernetesClusterMaintenanceWindowAutoUpgradeArgs) KubernetesClusterMaintenanceWindowAutoUpgradePtrInput {
	return (*kubernetesClusterMaintenanceWindowAutoUpgradePtrType)(v)
}

func (*kubernetesClusterMaintenanceWindowAutoUpgradePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterMaintenanceWindowAutoUpgrade)(nil)).Elem()
}

func (i *kubernetesClusterMaintenanceWindowAutoUpgradePtrType) ToKubernetesClusterMaintenanceWindowAutoUpgradePtrOutput() KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput {
	return i.ToKubernetesClusterMaintenanceWindowAutoUpgradePtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterMaintenanceWindowAutoUpgradePtrType) ToKubernetesClusterMaintenanceWindowAutoUpgradePtrOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput)
}

type KubernetesClusterMaintenanceWindowAutoUpgradeOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMaintenanceWindowAutoUpgradeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMaintenanceWindowAutoUpgrade)(nil)).Elem()
}

func (o KubernetesClusterMaintenanceWindowAutoUpgradeOutput) ToKubernetesClusterMaintenanceWindowAutoUpgradeOutput() KubernetesClusterMaintenanceWindowAutoUpgradeOutput {
	return o
}

func (o KubernetesClusterMaintenanceWindowAutoUpgradeOutput) ToKubernetesClusterMaintenanceWindowAutoUpgradeOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowAutoUpgradeOutput {
	return o
}

func (o KubernetesClusterMaintenanceWindowAutoUpgradeOutput) ToKubernetesClusterMaintenanceWindowAutoUpgradePtrOutput() KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput {
	return o.ToKubernetesClusterMaintenanceWindowAutoUpgradePtrOutputWithContext(context.Background())
}

func (o KubernetesClusterMaintenanceWindowAutoUpgradeOutput) ToKubernetesClusterMaintenanceWindowAutoUpgradePtrOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterMaintenanceWindowAutoUpgrade) *KubernetesClusterMaintenanceWindowAutoUpgrade {
		return &v
	}).(KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput)
}

// The day of the month for the maintenance run. Required in combination with RelativeMonthly frequency. Value between 0 and 31 (inclusive).
func (o KubernetesClusterMaintenanceWindowAutoUpgradeOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindowAutoUpgrade) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

// The day of the week for the maintenance run. Required in combination with weekly frequency. Possible values are `Friday`, `Monday`, `Saturday`, `Sunday`, `Thursday`, `Tuesday` and `Wednesday`.
func (o KubernetesClusterMaintenanceWindowAutoUpgradeOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindowAutoUpgrade) *string { return v.DayOfWeek }).(pulumi.StringPtrOutput)
}

// The duration of the window for maintenance to run in hours.
func (o KubernetesClusterMaintenanceWindowAutoUpgradeOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindowAutoUpgrade) int { return v.Duration }).(pulumi.IntOutput)
}

// Frequency of maintenance. Possible options are `Weekly`, `AbsoluteMonthly` and `RelativeMonthly`.
func (o KubernetesClusterMaintenanceWindowAutoUpgradeOutput) Frequency() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindowAutoUpgrade) string { return v.Frequency }).(pulumi.StringOutput)
}

// The interval for maintenance runs. Depending on the frequency this interval is week or month based.
func (o KubernetesClusterMaintenanceWindowAutoUpgradeOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindowAutoUpgrade) int { return v.Interval }).(pulumi.IntOutput)
}

// One or more `notAllowed` block as defined below.
func (o KubernetesClusterMaintenanceWindowAutoUpgradeOutput) NotAlloweds() KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindowAutoUpgrade) []KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowed {
		return v.NotAlloweds
	}).(KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayOutput)
}

// The date on which the maintenance window begins to take effect.
func (o KubernetesClusterMaintenanceWindowAutoUpgradeOutput) StartDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindowAutoUpgrade) *string { return v.StartDate }).(pulumi.StringPtrOutput)
}

// The time for maintenance to begin, based on the timezone determined by `utcOffset`. Format is `HH:mm`.
func (o KubernetesClusterMaintenanceWindowAutoUpgradeOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindowAutoUpgrade) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// Used to determine the timezone for cluster maintenance.
func (o KubernetesClusterMaintenanceWindowAutoUpgradeOutput) UtcOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindowAutoUpgrade) *string { return v.UtcOffset }).(pulumi.StringPtrOutput)
}

// Specifies on which instance of the allowed days specified in `dayOfWeek` the maintenance occurs. Options are `First`, `Second`, `Third`, `Fourth`, and `Last`.
// Required in combination with relative monthly frequency.
func (o KubernetesClusterMaintenanceWindowAutoUpgradeOutput) WeekIndex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindowAutoUpgrade) *string { return v.WeekIndex }).(pulumi.StringPtrOutput)
}

type KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterMaintenanceWindowAutoUpgrade)(nil)).Elem()
}

func (o KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput) ToKubernetesClusterMaintenanceWindowAutoUpgradePtrOutput() KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput {
	return o
}

func (o KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput) ToKubernetesClusterMaintenanceWindowAutoUpgradePtrOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput {
	return o
}

func (o KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput) Elem() KubernetesClusterMaintenanceWindowAutoUpgradeOutput {
	return o.ApplyT(func(v *KubernetesClusterMaintenanceWindowAutoUpgrade) KubernetesClusterMaintenanceWindowAutoUpgrade {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterMaintenanceWindowAutoUpgrade
		return ret
	}).(KubernetesClusterMaintenanceWindowAutoUpgradeOutput)
}

// The day of the month for the maintenance run. Required in combination with RelativeMonthly frequency. Value between 0 and 31 (inclusive).
func (o KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaintenanceWindowAutoUpgrade) *int {
		if v == nil {
			return nil
		}
		return v.DayOfMonth
	}).(pulumi.IntPtrOutput)
}

// The day of the week for the maintenance run. Required in combination with weekly frequency. Possible values are `Friday`, `Monday`, `Saturday`, `Sunday`, `Thursday`, `Tuesday` and `Wednesday`.
func (o KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaintenanceWindowAutoUpgrade) *string {
		if v == nil {
			return nil
		}
		return v.DayOfWeek
	}).(pulumi.StringPtrOutput)
}

// The duration of the window for maintenance to run in hours.
func (o KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaintenanceWindowAutoUpgrade) *int {
		if v == nil {
			return nil
		}
		return &v.Duration
	}).(pulumi.IntPtrOutput)
}

// Frequency of maintenance. Possible options are `Weekly`, `AbsoluteMonthly` and `RelativeMonthly`.
func (o KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput) Frequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaintenanceWindowAutoUpgrade) *string {
		if v == nil {
			return nil
		}
		return &v.Frequency
	}).(pulumi.StringPtrOutput)
}

// The interval for maintenance runs. Depending on the frequency this interval is week or month based.
func (o KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaintenanceWindowAutoUpgrade) *int {
		if v == nil {
			return nil
		}
		return &v.Interval
	}).(pulumi.IntPtrOutput)
}

// One or more `notAllowed` block as defined below.
func (o KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput) NotAlloweds() KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterMaintenanceWindowAutoUpgrade) []KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowed {
		if v == nil {
			return nil
		}
		return v.NotAlloweds
	}).(KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayOutput)
}

// The date on which the maintenance window begins to take effect.
func (o KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput) StartDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaintenanceWindowAutoUpgrade) *string {
		if v == nil {
			return nil
		}
		return v.StartDate
	}).(pulumi.StringPtrOutput)
}

// The time for maintenance to begin, based on the timezone determined by `utcOffset`. Format is `HH:mm`.
func (o KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaintenanceWindowAutoUpgrade) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// Used to determine the timezone for cluster maintenance.
func (o KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput) UtcOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaintenanceWindowAutoUpgrade) *string {
		if v == nil {
			return nil
		}
		return v.UtcOffset
	}).(pulumi.StringPtrOutput)
}

// Specifies on which instance of the allowed days specified in `dayOfWeek` the maintenance occurs. Options are `First`, `Second`, `Third`, `Fourth`, and `Last`.
// Required in combination with relative monthly frequency.
func (o KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput) WeekIndex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaintenanceWindowAutoUpgrade) *string {
		if v == nil {
			return nil
		}
		return v.WeekIndex
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowed struct {
	// The end of a time span, formatted as an RFC3339 string.
	End string `pulumi:"end"`
	// The start of a time span, formatted as an RFC3339 string.
	Start string `pulumi:"start"`
}

// KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedInput is an input type that accepts KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArgs and KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedOutput values.
// You can construct a concrete instance of `KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedInput` via:
//
//	KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArgs{...}
type KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedInput interface {
	pulumi.Input

	ToKubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedOutput() KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedOutput
	ToKubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedOutputWithContext(context.Context) KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedOutput
}

type KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArgs struct {
	// The end of a time span, formatted as an RFC3339 string.
	End pulumi.StringInput `pulumi:"end"`
	// The start of a time span, formatted as an RFC3339 string.
	Start pulumi.StringInput `pulumi:"start"`
}

func (KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowed)(nil)).Elem()
}

func (i KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArgs) ToKubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedOutput() KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedOutput {
	return i.ToKubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedOutputWithContext(context.Background())
}

func (i KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArgs) ToKubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedOutput)
}

// KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayInput is an input type that accepts KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArray and KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayInput` via:
//
//	KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArray{ KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArgs{...} }
type KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayInput interface {
	pulumi.Input

	ToKubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayOutput() KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayOutput
	ToKubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayOutputWithContext(context.Context) KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayOutput
}

type KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArray []KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedInput

func (KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowed)(nil)).Elem()
}

func (i KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArray) ToKubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayOutput() KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayOutput {
	return i.ToKubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArray) ToKubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayOutput)
}

type KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowed)(nil)).Elem()
}

func (o KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedOutput) ToKubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedOutput() KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedOutput {
	return o
}

func (o KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedOutput) ToKubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedOutput {
	return o
}

// The end of a time span, formatted as an RFC3339 string.
func (o KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedOutput) End() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowed) string { return v.End }).(pulumi.StringOutput)
}

// The start of a time span, formatted as an RFC3339 string.
func (o KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedOutput) Start() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowed) string { return v.Start }).(pulumi.StringOutput)
}

type KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowed)(nil)).Elem()
}

func (o KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayOutput) ToKubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayOutput() KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayOutput {
	return o
}

func (o KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayOutput) ToKubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayOutput {
	return o
}

func (o KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayOutput) Index(i pulumi.IntInput) KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowed {
		return vs[0].([]KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowed)[vs[1].(int)]
	}).(KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedOutput)
}

type KubernetesClusterMaintenanceWindowNodeOs struct {
	// The day of the month for the maintenance run. Required in combination with RelativeMonthly frequency. Value between 0 and 31 (inclusive).
	DayOfMonth *int `pulumi:"dayOfMonth"`
	// The day of the week for the maintenance run. Required in combination with weekly frequency. Possible values are `Friday`, `Monday`, `Saturday`, `Sunday`, `Thursday`, `Tuesday` and `Wednesday`.
	DayOfWeek *string `pulumi:"dayOfWeek"`
	// The duration of the window for maintenance to run in hours.
	Duration int `pulumi:"duration"`
	// Frequency of maintenance. Possible options are `Daily`, `Weekly`, `AbsoluteMonthly` and `RelativeMonthly`.
	Frequency string `pulumi:"frequency"`
	// The interval for maintenance runs. Depending on the frequency this interval is week or month based.
	Interval int `pulumi:"interval"`
	// One or more `notAllowed` block as defined below.
	NotAlloweds []KubernetesClusterMaintenanceWindowNodeOsNotAllowed `pulumi:"notAlloweds"`
	// The date on which the maintenance window begins to take effect.
	StartDate *string `pulumi:"startDate"`
	// The time for maintenance to begin, based on the timezone determined by `utcOffset`. Format is `HH:mm`.
	StartTime *string `pulumi:"startTime"`
	// Used to determine the timezone for cluster maintenance.
	UtcOffset *string `pulumi:"utcOffset"`
	// The week in the month used for the maintenance run. Options are `First`, `Second`, `Third`, `Fourth`, and `Last`.
	WeekIndex *string `pulumi:"weekIndex"`
}

// KubernetesClusterMaintenanceWindowNodeOsInput is an input type that accepts KubernetesClusterMaintenanceWindowNodeOsArgs and KubernetesClusterMaintenanceWindowNodeOsOutput values.
// You can construct a concrete instance of `KubernetesClusterMaintenanceWindowNodeOsInput` via:
//
//	KubernetesClusterMaintenanceWindowNodeOsArgs{...}
type KubernetesClusterMaintenanceWindowNodeOsInput interface {
	pulumi.Input

	ToKubernetesClusterMaintenanceWindowNodeOsOutput() KubernetesClusterMaintenanceWindowNodeOsOutput
	ToKubernetesClusterMaintenanceWindowNodeOsOutputWithContext(context.Context) KubernetesClusterMaintenanceWindowNodeOsOutput
}

type KubernetesClusterMaintenanceWindowNodeOsArgs struct {
	// The day of the month for the maintenance run. Required in combination with RelativeMonthly frequency. Value between 0 and 31 (inclusive).
	DayOfMonth pulumi.IntPtrInput `pulumi:"dayOfMonth"`
	// The day of the week for the maintenance run. Required in combination with weekly frequency. Possible values are `Friday`, `Monday`, `Saturday`, `Sunday`, `Thursday`, `Tuesday` and `Wednesday`.
	DayOfWeek pulumi.StringPtrInput `pulumi:"dayOfWeek"`
	// The duration of the window for maintenance to run in hours.
	Duration pulumi.IntInput `pulumi:"duration"`
	// Frequency of maintenance. Possible options are `Daily`, `Weekly`, `AbsoluteMonthly` and `RelativeMonthly`.
	Frequency pulumi.StringInput `pulumi:"frequency"`
	// The interval for maintenance runs. Depending on the frequency this interval is week or month based.
	Interval pulumi.IntInput `pulumi:"interval"`
	// One or more `notAllowed` block as defined below.
	NotAlloweds KubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayInput `pulumi:"notAlloweds"`
	// The date on which the maintenance window begins to take effect.
	StartDate pulumi.StringPtrInput `pulumi:"startDate"`
	// The time for maintenance to begin, based on the timezone determined by `utcOffset`. Format is `HH:mm`.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// Used to determine the timezone for cluster maintenance.
	UtcOffset pulumi.StringPtrInput `pulumi:"utcOffset"`
	// The week in the month used for the maintenance run. Options are `First`, `Second`, `Third`, `Fourth`, and `Last`.
	WeekIndex pulumi.StringPtrInput `pulumi:"weekIndex"`
}

func (KubernetesClusterMaintenanceWindowNodeOsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMaintenanceWindowNodeOs)(nil)).Elem()
}

func (i KubernetesClusterMaintenanceWindowNodeOsArgs) ToKubernetesClusterMaintenanceWindowNodeOsOutput() KubernetesClusterMaintenanceWindowNodeOsOutput {
	return i.ToKubernetesClusterMaintenanceWindowNodeOsOutputWithContext(context.Background())
}

func (i KubernetesClusterMaintenanceWindowNodeOsArgs) ToKubernetesClusterMaintenanceWindowNodeOsOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowNodeOsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMaintenanceWindowNodeOsOutput)
}

func (i KubernetesClusterMaintenanceWindowNodeOsArgs) ToKubernetesClusterMaintenanceWindowNodeOsPtrOutput() KubernetesClusterMaintenanceWindowNodeOsPtrOutput {
	return i.ToKubernetesClusterMaintenanceWindowNodeOsPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterMaintenanceWindowNodeOsArgs) ToKubernetesClusterMaintenanceWindowNodeOsPtrOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowNodeOsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMaintenanceWindowNodeOsOutput).ToKubernetesClusterMaintenanceWindowNodeOsPtrOutputWithContext(ctx)
}

// KubernetesClusterMaintenanceWindowNodeOsPtrInput is an input type that accepts KubernetesClusterMaintenanceWindowNodeOsArgs, KubernetesClusterMaintenanceWindowNodeOsPtr and KubernetesClusterMaintenanceWindowNodeOsPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterMaintenanceWindowNodeOsPtrInput` via:
//
//	        KubernetesClusterMaintenanceWindowNodeOsArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterMaintenanceWindowNodeOsPtrInput interface {
	pulumi.Input

	ToKubernetesClusterMaintenanceWindowNodeOsPtrOutput() KubernetesClusterMaintenanceWindowNodeOsPtrOutput
	ToKubernetesClusterMaintenanceWindowNodeOsPtrOutputWithContext(context.Context) KubernetesClusterMaintenanceWindowNodeOsPtrOutput
}

type kubernetesClusterMaintenanceWindowNodeOsPtrType KubernetesClusterMaintenanceWindowNodeOsArgs

func KubernetesClusterMaintenanceWindowNodeOsPtr(v *KubernetesClusterMaintenanceWindowNodeOsArgs) KubernetesClusterMaintenanceWindowNodeOsPtrInput {
	return (*kubernetesClusterMaintenanceWindowNodeOsPtrType)(v)
}

func (*kubernetesClusterMaintenanceWindowNodeOsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterMaintenanceWindowNodeOs)(nil)).Elem()
}

func (i *kubernetesClusterMaintenanceWindowNodeOsPtrType) ToKubernetesClusterMaintenanceWindowNodeOsPtrOutput() KubernetesClusterMaintenanceWindowNodeOsPtrOutput {
	return i.ToKubernetesClusterMaintenanceWindowNodeOsPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterMaintenanceWindowNodeOsPtrType) ToKubernetesClusterMaintenanceWindowNodeOsPtrOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowNodeOsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMaintenanceWindowNodeOsPtrOutput)
}

type KubernetesClusterMaintenanceWindowNodeOsOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMaintenanceWindowNodeOsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMaintenanceWindowNodeOs)(nil)).Elem()
}

func (o KubernetesClusterMaintenanceWindowNodeOsOutput) ToKubernetesClusterMaintenanceWindowNodeOsOutput() KubernetesClusterMaintenanceWindowNodeOsOutput {
	return o
}

func (o KubernetesClusterMaintenanceWindowNodeOsOutput) ToKubernetesClusterMaintenanceWindowNodeOsOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowNodeOsOutput {
	return o
}

func (o KubernetesClusterMaintenanceWindowNodeOsOutput) ToKubernetesClusterMaintenanceWindowNodeOsPtrOutput() KubernetesClusterMaintenanceWindowNodeOsPtrOutput {
	return o.ToKubernetesClusterMaintenanceWindowNodeOsPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterMaintenanceWindowNodeOsOutput) ToKubernetesClusterMaintenanceWindowNodeOsPtrOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowNodeOsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterMaintenanceWindowNodeOs) *KubernetesClusterMaintenanceWindowNodeOs {
		return &v
	}).(KubernetesClusterMaintenanceWindowNodeOsPtrOutput)
}

// The day of the month for the maintenance run. Required in combination with RelativeMonthly frequency. Value between 0 and 31 (inclusive).
func (o KubernetesClusterMaintenanceWindowNodeOsOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindowNodeOs) *int { return v.DayOfMonth }).(pulumi.IntPtrOutput)
}

// The day of the week for the maintenance run. Required in combination with weekly frequency. Possible values are `Friday`, `Monday`, `Saturday`, `Sunday`, `Thursday`, `Tuesday` and `Wednesday`.
func (o KubernetesClusterMaintenanceWindowNodeOsOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindowNodeOs) *string { return v.DayOfWeek }).(pulumi.StringPtrOutput)
}

// The duration of the window for maintenance to run in hours.
func (o KubernetesClusterMaintenanceWindowNodeOsOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindowNodeOs) int { return v.Duration }).(pulumi.IntOutput)
}

// Frequency of maintenance. Possible options are `Daily`, `Weekly`, `AbsoluteMonthly` and `RelativeMonthly`.
func (o KubernetesClusterMaintenanceWindowNodeOsOutput) Frequency() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindowNodeOs) string { return v.Frequency }).(pulumi.StringOutput)
}

// The interval for maintenance runs. Depending on the frequency this interval is week or month based.
func (o KubernetesClusterMaintenanceWindowNodeOsOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindowNodeOs) int { return v.Interval }).(pulumi.IntOutput)
}

// One or more `notAllowed` block as defined below.
func (o KubernetesClusterMaintenanceWindowNodeOsOutput) NotAlloweds() KubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindowNodeOs) []KubernetesClusterMaintenanceWindowNodeOsNotAllowed {
		return v.NotAlloweds
	}).(KubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayOutput)
}

// The date on which the maintenance window begins to take effect.
func (o KubernetesClusterMaintenanceWindowNodeOsOutput) StartDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindowNodeOs) *string { return v.StartDate }).(pulumi.StringPtrOutput)
}

// The time for maintenance to begin, based on the timezone determined by `utcOffset`. Format is `HH:mm`.
func (o KubernetesClusterMaintenanceWindowNodeOsOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindowNodeOs) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// Used to determine the timezone for cluster maintenance.
func (o KubernetesClusterMaintenanceWindowNodeOsOutput) UtcOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindowNodeOs) *string { return v.UtcOffset }).(pulumi.StringPtrOutput)
}

// The week in the month used for the maintenance run. Options are `First`, `Second`, `Third`, `Fourth`, and `Last`.
func (o KubernetesClusterMaintenanceWindowNodeOsOutput) WeekIndex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindowNodeOs) *string { return v.WeekIndex }).(pulumi.StringPtrOutput)
}

type KubernetesClusterMaintenanceWindowNodeOsPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMaintenanceWindowNodeOsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterMaintenanceWindowNodeOs)(nil)).Elem()
}

func (o KubernetesClusterMaintenanceWindowNodeOsPtrOutput) ToKubernetesClusterMaintenanceWindowNodeOsPtrOutput() KubernetesClusterMaintenanceWindowNodeOsPtrOutput {
	return o
}

func (o KubernetesClusterMaintenanceWindowNodeOsPtrOutput) ToKubernetesClusterMaintenanceWindowNodeOsPtrOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowNodeOsPtrOutput {
	return o
}

func (o KubernetesClusterMaintenanceWindowNodeOsPtrOutput) Elem() KubernetesClusterMaintenanceWindowNodeOsOutput {
	return o.ApplyT(func(v *KubernetesClusterMaintenanceWindowNodeOs) KubernetesClusterMaintenanceWindowNodeOs {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterMaintenanceWindowNodeOs
		return ret
	}).(KubernetesClusterMaintenanceWindowNodeOsOutput)
}

// The day of the month for the maintenance run. Required in combination with RelativeMonthly frequency. Value between 0 and 31 (inclusive).
func (o KubernetesClusterMaintenanceWindowNodeOsPtrOutput) DayOfMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaintenanceWindowNodeOs) *int {
		if v == nil {
			return nil
		}
		return v.DayOfMonth
	}).(pulumi.IntPtrOutput)
}

// The day of the week for the maintenance run. Required in combination with weekly frequency. Possible values are `Friday`, `Monday`, `Saturday`, `Sunday`, `Thursday`, `Tuesday` and `Wednesday`.
func (o KubernetesClusterMaintenanceWindowNodeOsPtrOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaintenanceWindowNodeOs) *string {
		if v == nil {
			return nil
		}
		return v.DayOfWeek
	}).(pulumi.StringPtrOutput)
}

// The duration of the window for maintenance to run in hours.
func (o KubernetesClusterMaintenanceWindowNodeOsPtrOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaintenanceWindowNodeOs) *int {
		if v == nil {
			return nil
		}
		return &v.Duration
	}).(pulumi.IntPtrOutput)
}

// Frequency of maintenance. Possible options are `Daily`, `Weekly`, `AbsoluteMonthly` and `RelativeMonthly`.
func (o KubernetesClusterMaintenanceWindowNodeOsPtrOutput) Frequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaintenanceWindowNodeOs) *string {
		if v == nil {
			return nil
		}
		return &v.Frequency
	}).(pulumi.StringPtrOutput)
}

// The interval for maintenance runs. Depending on the frequency this interval is week or month based.
func (o KubernetesClusterMaintenanceWindowNodeOsPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaintenanceWindowNodeOs) *int {
		if v == nil {
			return nil
		}
		return &v.Interval
	}).(pulumi.IntPtrOutput)
}

// One or more `notAllowed` block as defined below.
func (o KubernetesClusterMaintenanceWindowNodeOsPtrOutput) NotAlloweds() KubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterMaintenanceWindowNodeOs) []KubernetesClusterMaintenanceWindowNodeOsNotAllowed {
		if v == nil {
			return nil
		}
		return v.NotAlloweds
	}).(KubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayOutput)
}

// The date on which the maintenance window begins to take effect.
func (o KubernetesClusterMaintenanceWindowNodeOsPtrOutput) StartDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaintenanceWindowNodeOs) *string {
		if v == nil {
			return nil
		}
		return v.StartDate
	}).(pulumi.StringPtrOutput)
}

// The time for maintenance to begin, based on the timezone determined by `utcOffset`. Format is `HH:mm`.
func (o KubernetesClusterMaintenanceWindowNodeOsPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaintenanceWindowNodeOs) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// Used to determine the timezone for cluster maintenance.
func (o KubernetesClusterMaintenanceWindowNodeOsPtrOutput) UtcOffset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaintenanceWindowNodeOs) *string {
		if v == nil {
			return nil
		}
		return v.UtcOffset
	}).(pulumi.StringPtrOutput)
}

// The week in the month used for the maintenance run. Options are `First`, `Second`, `Third`, `Fourth`, and `Last`.
func (o KubernetesClusterMaintenanceWindowNodeOsPtrOutput) WeekIndex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaintenanceWindowNodeOs) *string {
		if v == nil {
			return nil
		}
		return v.WeekIndex
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterMaintenanceWindowNodeOsNotAllowed struct {
	// The end of a time span, formatted as an RFC3339 string.
	End string `pulumi:"end"`
	// The start of a time span, formatted as an RFC3339 string.
	Start string `pulumi:"start"`
}

// KubernetesClusterMaintenanceWindowNodeOsNotAllowedInput is an input type that accepts KubernetesClusterMaintenanceWindowNodeOsNotAllowedArgs and KubernetesClusterMaintenanceWindowNodeOsNotAllowedOutput values.
// You can construct a concrete instance of `KubernetesClusterMaintenanceWindowNodeOsNotAllowedInput` via:
//
//	KubernetesClusterMaintenanceWindowNodeOsNotAllowedArgs{...}
type KubernetesClusterMaintenanceWindowNodeOsNotAllowedInput interface {
	pulumi.Input

	ToKubernetesClusterMaintenanceWindowNodeOsNotAllowedOutput() KubernetesClusterMaintenanceWindowNodeOsNotAllowedOutput
	ToKubernetesClusterMaintenanceWindowNodeOsNotAllowedOutputWithContext(context.Context) KubernetesClusterMaintenanceWindowNodeOsNotAllowedOutput
}

type KubernetesClusterMaintenanceWindowNodeOsNotAllowedArgs struct {
	// The end of a time span, formatted as an RFC3339 string.
	End pulumi.StringInput `pulumi:"end"`
	// The start of a time span, formatted as an RFC3339 string.
	Start pulumi.StringInput `pulumi:"start"`
}

func (KubernetesClusterMaintenanceWindowNodeOsNotAllowedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMaintenanceWindowNodeOsNotAllowed)(nil)).Elem()
}

func (i KubernetesClusterMaintenanceWindowNodeOsNotAllowedArgs) ToKubernetesClusterMaintenanceWindowNodeOsNotAllowedOutput() KubernetesClusterMaintenanceWindowNodeOsNotAllowedOutput {
	return i.ToKubernetesClusterMaintenanceWindowNodeOsNotAllowedOutputWithContext(context.Background())
}

func (i KubernetesClusterMaintenanceWindowNodeOsNotAllowedArgs) ToKubernetesClusterMaintenanceWindowNodeOsNotAllowedOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowNodeOsNotAllowedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMaintenanceWindowNodeOsNotAllowedOutput)
}

// KubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayInput is an input type that accepts KubernetesClusterMaintenanceWindowNodeOsNotAllowedArray and KubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayInput` via:
//
//	KubernetesClusterMaintenanceWindowNodeOsNotAllowedArray{ KubernetesClusterMaintenanceWindowNodeOsNotAllowedArgs{...} }
type KubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayInput interface {
	pulumi.Input

	ToKubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayOutput() KubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayOutput
	ToKubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayOutputWithContext(context.Context) KubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayOutput
}

type KubernetesClusterMaintenanceWindowNodeOsNotAllowedArray []KubernetesClusterMaintenanceWindowNodeOsNotAllowedInput

func (KubernetesClusterMaintenanceWindowNodeOsNotAllowedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterMaintenanceWindowNodeOsNotAllowed)(nil)).Elem()
}

func (i KubernetesClusterMaintenanceWindowNodeOsNotAllowedArray) ToKubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayOutput() KubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayOutput {
	return i.ToKubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterMaintenanceWindowNodeOsNotAllowedArray) ToKubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayOutput)
}

type KubernetesClusterMaintenanceWindowNodeOsNotAllowedOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMaintenanceWindowNodeOsNotAllowedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMaintenanceWindowNodeOsNotAllowed)(nil)).Elem()
}

func (o KubernetesClusterMaintenanceWindowNodeOsNotAllowedOutput) ToKubernetesClusterMaintenanceWindowNodeOsNotAllowedOutput() KubernetesClusterMaintenanceWindowNodeOsNotAllowedOutput {
	return o
}

func (o KubernetesClusterMaintenanceWindowNodeOsNotAllowedOutput) ToKubernetesClusterMaintenanceWindowNodeOsNotAllowedOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowNodeOsNotAllowedOutput {
	return o
}

// The end of a time span, formatted as an RFC3339 string.
func (o KubernetesClusterMaintenanceWindowNodeOsNotAllowedOutput) End() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindowNodeOsNotAllowed) string { return v.End }).(pulumi.StringOutput)
}

// The start of a time span, formatted as an RFC3339 string.
func (o KubernetesClusterMaintenanceWindowNodeOsNotAllowedOutput) Start() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindowNodeOsNotAllowed) string { return v.Start }).(pulumi.StringOutput)
}

type KubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterMaintenanceWindowNodeOsNotAllowed)(nil)).Elem()
}

func (o KubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayOutput) ToKubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayOutput() KubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayOutput {
	return o
}

func (o KubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayOutput) ToKubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayOutput {
	return o
}

func (o KubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayOutput) Index(i pulumi.IntInput) KubernetesClusterMaintenanceWindowNodeOsNotAllowedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterMaintenanceWindowNodeOsNotAllowed {
		return vs[0].([]KubernetesClusterMaintenanceWindowNodeOsNotAllowed)[vs[1].(int)]
	}).(KubernetesClusterMaintenanceWindowNodeOsNotAllowedOutput)
}

type KubernetesClusterMaintenanceWindowNotAllowed struct {
	// The end of a time span, formatted as an RFC3339 string.
	End string `pulumi:"end"`
	// The start of a time span, formatted as an RFC3339 string.
	Start string `pulumi:"start"`
}

// KubernetesClusterMaintenanceWindowNotAllowedInput is an input type that accepts KubernetesClusterMaintenanceWindowNotAllowedArgs and KubernetesClusterMaintenanceWindowNotAllowedOutput values.
// You can construct a concrete instance of `KubernetesClusterMaintenanceWindowNotAllowedInput` via:
//
//	KubernetesClusterMaintenanceWindowNotAllowedArgs{...}
type KubernetesClusterMaintenanceWindowNotAllowedInput interface {
	pulumi.Input

	ToKubernetesClusterMaintenanceWindowNotAllowedOutput() KubernetesClusterMaintenanceWindowNotAllowedOutput
	ToKubernetesClusterMaintenanceWindowNotAllowedOutputWithContext(context.Context) KubernetesClusterMaintenanceWindowNotAllowedOutput
}

type KubernetesClusterMaintenanceWindowNotAllowedArgs struct {
	// The end of a time span, formatted as an RFC3339 string.
	End pulumi.StringInput `pulumi:"end"`
	// The start of a time span, formatted as an RFC3339 string.
	Start pulumi.StringInput `pulumi:"start"`
}

func (KubernetesClusterMaintenanceWindowNotAllowedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMaintenanceWindowNotAllowed)(nil)).Elem()
}

func (i KubernetesClusterMaintenanceWindowNotAllowedArgs) ToKubernetesClusterMaintenanceWindowNotAllowedOutput() KubernetesClusterMaintenanceWindowNotAllowedOutput {
	return i.ToKubernetesClusterMaintenanceWindowNotAllowedOutputWithContext(context.Background())
}

func (i KubernetesClusterMaintenanceWindowNotAllowedArgs) ToKubernetesClusterMaintenanceWindowNotAllowedOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowNotAllowedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMaintenanceWindowNotAllowedOutput)
}

// KubernetesClusterMaintenanceWindowNotAllowedArrayInput is an input type that accepts KubernetesClusterMaintenanceWindowNotAllowedArray and KubernetesClusterMaintenanceWindowNotAllowedArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterMaintenanceWindowNotAllowedArrayInput` via:
//
//	KubernetesClusterMaintenanceWindowNotAllowedArray{ KubernetesClusterMaintenanceWindowNotAllowedArgs{...} }
type KubernetesClusterMaintenanceWindowNotAllowedArrayInput interface {
	pulumi.Input

	ToKubernetesClusterMaintenanceWindowNotAllowedArrayOutput() KubernetesClusterMaintenanceWindowNotAllowedArrayOutput
	ToKubernetesClusterMaintenanceWindowNotAllowedArrayOutputWithContext(context.Context) KubernetesClusterMaintenanceWindowNotAllowedArrayOutput
}

type KubernetesClusterMaintenanceWindowNotAllowedArray []KubernetesClusterMaintenanceWindowNotAllowedInput

func (KubernetesClusterMaintenanceWindowNotAllowedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterMaintenanceWindowNotAllowed)(nil)).Elem()
}

func (i KubernetesClusterMaintenanceWindowNotAllowedArray) ToKubernetesClusterMaintenanceWindowNotAllowedArrayOutput() KubernetesClusterMaintenanceWindowNotAllowedArrayOutput {
	return i.ToKubernetesClusterMaintenanceWindowNotAllowedArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterMaintenanceWindowNotAllowedArray) ToKubernetesClusterMaintenanceWindowNotAllowedArrayOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowNotAllowedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMaintenanceWindowNotAllowedArrayOutput)
}

type KubernetesClusterMaintenanceWindowNotAllowedOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMaintenanceWindowNotAllowedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMaintenanceWindowNotAllowed)(nil)).Elem()
}

func (o KubernetesClusterMaintenanceWindowNotAllowedOutput) ToKubernetesClusterMaintenanceWindowNotAllowedOutput() KubernetesClusterMaintenanceWindowNotAllowedOutput {
	return o
}

func (o KubernetesClusterMaintenanceWindowNotAllowedOutput) ToKubernetesClusterMaintenanceWindowNotAllowedOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowNotAllowedOutput {
	return o
}

// The end of a time span, formatted as an RFC3339 string.
func (o KubernetesClusterMaintenanceWindowNotAllowedOutput) End() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindowNotAllowed) string { return v.End }).(pulumi.StringOutput)
}

// The start of a time span, formatted as an RFC3339 string.
func (o KubernetesClusterMaintenanceWindowNotAllowedOutput) Start() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenanceWindowNotAllowed) string { return v.Start }).(pulumi.StringOutput)
}

type KubernetesClusterMaintenanceWindowNotAllowedArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMaintenanceWindowNotAllowedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterMaintenanceWindowNotAllowed)(nil)).Elem()
}

func (o KubernetesClusterMaintenanceWindowNotAllowedArrayOutput) ToKubernetesClusterMaintenanceWindowNotAllowedArrayOutput() KubernetesClusterMaintenanceWindowNotAllowedArrayOutput {
	return o
}

func (o KubernetesClusterMaintenanceWindowNotAllowedArrayOutput) ToKubernetesClusterMaintenanceWindowNotAllowedArrayOutputWithContext(ctx context.Context) KubernetesClusterMaintenanceWindowNotAllowedArrayOutput {
	return o
}

func (o KubernetesClusterMaintenanceWindowNotAllowedArrayOutput) Index(i pulumi.IntInput) KubernetesClusterMaintenanceWindowNotAllowedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterMaintenanceWindowNotAllowed {
		return vs[0].([]KubernetesClusterMaintenanceWindowNotAllowed)[vs[1].(int)]
	}).(KubernetesClusterMaintenanceWindowNotAllowedOutput)
}

type KubernetesClusterMicrosoftDefender struct {
	// Specifies the ID of the Log Analytics Workspace where the audit logs collected by Microsoft Defender should be sent to.
	LogAnalyticsWorkspaceId string `pulumi:"logAnalyticsWorkspaceId"`
}

// KubernetesClusterMicrosoftDefenderInput is an input type that accepts KubernetesClusterMicrosoftDefenderArgs and KubernetesClusterMicrosoftDefenderOutput values.
// You can construct a concrete instance of `KubernetesClusterMicrosoftDefenderInput` via:
//
//	KubernetesClusterMicrosoftDefenderArgs{...}
type KubernetesClusterMicrosoftDefenderInput interface {
	pulumi.Input

	ToKubernetesClusterMicrosoftDefenderOutput() KubernetesClusterMicrosoftDefenderOutput
	ToKubernetesClusterMicrosoftDefenderOutputWithContext(context.Context) KubernetesClusterMicrosoftDefenderOutput
}

type KubernetesClusterMicrosoftDefenderArgs struct {
	// Specifies the ID of the Log Analytics Workspace where the audit logs collected by Microsoft Defender should be sent to.
	LogAnalyticsWorkspaceId pulumi.StringInput `pulumi:"logAnalyticsWorkspaceId"`
}

func (KubernetesClusterMicrosoftDefenderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMicrosoftDefender)(nil)).Elem()
}

func (i KubernetesClusterMicrosoftDefenderArgs) ToKubernetesClusterMicrosoftDefenderOutput() KubernetesClusterMicrosoftDefenderOutput {
	return i.ToKubernetesClusterMicrosoftDefenderOutputWithContext(context.Background())
}

func (i KubernetesClusterMicrosoftDefenderArgs) ToKubernetesClusterMicrosoftDefenderOutputWithContext(ctx context.Context) KubernetesClusterMicrosoftDefenderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMicrosoftDefenderOutput)
}

func (i KubernetesClusterMicrosoftDefenderArgs) ToKubernetesClusterMicrosoftDefenderPtrOutput() KubernetesClusterMicrosoftDefenderPtrOutput {
	return i.ToKubernetesClusterMicrosoftDefenderPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterMicrosoftDefenderArgs) ToKubernetesClusterMicrosoftDefenderPtrOutputWithContext(ctx context.Context) KubernetesClusterMicrosoftDefenderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMicrosoftDefenderOutput).ToKubernetesClusterMicrosoftDefenderPtrOutputWithContext(ctx)
}

// KubernetesClusterMicrosoftDefenderPtrInput is an input type that accepts KubernetesClusterMicrosoftDefenderArgs, KubernetesClusterMicrosoftDefenderPtr and KubernetesClusterMicrosoftDefenderPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterMicrosoftDefenderPtrInput` via:
//
//	        KubernetesClusterMicrosoftDefenderArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterMicrosoftDefenderPtrInput interface {
	pulumi.Input

	ToKubernetesClusterMicrosoftDefenderPtrOutput() KubernetesClusterMicrosoftDefenderPtrOutput
	ToKubernetesClusterMicrosoftDefenderPtrOutputWithContext(context.Context) KubernetesClusterMicrosoftDefenderPtrOutput
}

type kubernetesClusterMicrosoftDefenderPtrType KubernetesClusterMicrosoftDefenderArgs

func KubernetesClusterMicrosoftDefenderPtr(v *KubernetesClusterMicrosoftDefenderArgs) KubernetesClusterMicrosoftDefenderPtrInput {
	return (*kubernetesClusterMicrosoftDefenderPtrType)(v)
}

func (*kubernetesClusterMicrosoftDefenderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterMicrosoftDefender)(nil)).Elem()
}

func (i *kubernetesClusterMicrosoftDefenderPtrType) ToKubernetesClusterMicrosoftDefenderPtrOutput() KubernetesClusterMicrosoftDefenderPtrOutput {
	return i.ToKubernetesClusterMicrosoftDefenderPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterMicrosoftDefenderPtrType) ToKubernetesClusterMicrosoftDefenderPtrOutputWithContext(ctx context.Context) KubernetesClusterMicrosoftDefenderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMicrosoftDefenderPtrOutput)
}

type KubernetesClusterMicrosoftDefenderOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMicrosoftDefenderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMicrosoftDefender)(nil)).Elem()
}

func (o KubernetesClusterMicrosoftDefenderOutput) ToKubernetesClusterMicrosoftDefenderOutput() KubernetesClusterMicrosoftDefenderOutput {
	return o
}

func (o KubernetesClusterMicrosoftDefenderOutput) ToKubernetesClusterMicrosoftDefenderOutputWithContext(ctx context.Context) KubernetesClusterMicrosoftDefenderOutput {
	return o
}

func (o KubernetesClusterMicrosoftDefenderOutput) ToKubernetesClusterMicrosoftDefenderPtrOutput() KubernetesClusterMicrosoftDefenderPtrOutput {
	return o.ToKubernetesClusterMicrosoftDefenderPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterMicrosoftDefenderOutput) ToKubernetesClusterMicrosoftDefenderPtrOutputWithContext(ctx context.Context) KubernetesClusterMicrosoftDefenderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterMicrosoftDefender) *KubernetesClusterMicrosoftDefender {
		return &v
	}).(KubernetesClusterMicrosoftDefenderPtrOutput)
}

// Specifies the ID of the Log Analytics Workspace where the audit logs collected by Microsoft Defender should be sent to.
func (o KubernetesClusterMicrosoftDefenderOutput) LogAnalyticsWorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterMicrosoftDefender) string { return v.LogAnalyticsWorkspaceId }).(pulumi.StringOutput)
}

type KubernetesClusterMicrosoftDefenderPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMicrosoftDefenderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterMicrosoftDefender)(nil)).Elem()
}

func (o KubernetesClusterMicrosoftDefenderPtrOutput) ToKubernetesClusterMicrosoftDefenderPtrOutput() KubernetesClusterMicrosoftDefenderPtrOutput {
	return o
}

func (o KubernetesClusterMicrosoftDefenderPtrOutput) ToKubernetesClusterMicrosoftDefenderPtrOutputWithContext(ctx context.Context) KubernetesClusterMicrosoftDefenderPtrOutput {
	return o
}

func (o KubernetesClusterMicrosoftDefenderPtrOutput) Elem() KubernetesClusterMicrosoftDefenderOutput {
	return o.ApplyT(func(v *KubernetesClusterMicrosoftDefender) KubernetesClusterMicrosoftDefender {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterMicrosoftDefender
		return ret
	}).(KubernetesClusterMicrosoftDefenderOutput)
}

// Specifies the ID of the Log Analytics Workspace where the audit logs collected by Microsoft Defender should be sent to.
func (o KubernetesClusterMicrosoftDefenderPtrOutput) LogAnalyticsWorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMicrosoftDefender) *string {
		if v == nil {
			return nil
		}
		return &v.LogAnalyticsWorkspaceId
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterMonitorMetrics struct {
	// Specifies a comma-separated list of Kubernetes annotation keys that will be used in the resource's labels metric.
	AnnotationsAllowed *string `pulumi:"annotationsAllowed"`
	// Specifies a Comma-separated list of additional Kubernetes label keys that will be used in the resource's labels metric.
	LabelsAllowed *string `pulumi:"labelsAllowed"`
}

// KubernetesClusterMonitorMetricsInput is an input type that accepts KubernetesClusterMonitorMetricsArgs and KubernetesClusterMonitorMetricsOutput values.
// You can construct a concrete instance of `KubernetesClusterMonitorMetricsInput` via:
//
//	KubernetesClusterMonitorMetricsArgs{...}
type KubernetesClusterMonitorMetricsInput interface {
	pulumi.Input

	ToKubernetesClusterMonitorMetricsOutput() KubernetesClusterMonitorMetricsOutput
	ToKubernetesClusterMonitorMetricsOutputWithContext(context.Context) KubernetesClusterMonitorMetricsOutput
}

type KubernetesClusterMonitorMetricsArgs struct {
	// Specifies a comma-separated list of Kubernetes annotation keys that will be used in the resource's labels metric.
	AnnotationsAllowed pulumi.StringPtrInput `pulumi:"annotationsAllowed"`
	// Specifies a Comma-separated list of additional Kubernetes label keys that will be used in the resource's labels metric.
	LabelsAllowed pulumi.StringPtrInput `pulumi:"labelsAllowed"`
}

func (KubernetesClusterMonitorMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMonitorMetrics)(nil)).Elem()
}

func (i KubernetesClusterMonitorMetricsArgs) ToKubernetesClusterMonitorMetricsOutput() KubernetesClusterMonitorMetricsOutput {
	return i.ToKubernetesClusterMonitorMetricsOutputWithContext(context.Background())
}

func (i KubernetesClusterMonitorMetricsArgs) ToKubernetesClusterMonitorMetricsOutputWithContext(ctx context.Context) KubernetesClusterMonitorMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMonitorMetricsOutput)
}

func (i KubernetesClusterMonitorMetricsArgs) ToKubernetesClusterMonitorMetricsPtrOutput() KubernetesClusterMonitorMetricsPtrOutput {
	return i.ToKubernetesClusterMonitorMetricsPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterMonitorMetricsArgs) ToKubernetesClusterMonitorMetricsPtrOutputWithContext(ctx context.Context) KubernetesClusterMonitorMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMonitorMetricsOutput).ToKubernetesClusterMonitorMetricsPtrOutputWithContext(ctx)
}

// KubernetesClusterMonitorMetricsPtrInput is an input type that accepts KubernetesClusterMonitorMetricsArgs, KubernetesClusterMonitorMetricsPtr and KubernetesClusterMonitorMetricsPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterMonitorMetricsPtrInput` via:
//
//	        KubernetesClusterMonitorMetricsArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterMonitorMetricsPtrInput interface {
	pulumi.Input

	ToKubernetesClusterMonitorMetricsPtrOutput() KubernetesClusterMonitorMetricsPtrOutput
	ToKubernetesClusterMonitorMetricsPtrOutputWithContext(context.Context) KubernetesClusterMonitorMetricsPtrOutput
}

type kubernetesClusterMonitorMetricsPtrType KubernetesClusterMonitorMetricsArgs

func KubernetesClusterMonitorMetricsPtr(v *KubernetesClusterMonitorMetricsArgs) KubernetesClusterMonitorMetricsPtrInput {
	return (*kubernetesClusterMonitorMetricsPtrType)(v)
}

func (*kubernetesClusterMonitorMetricsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterMonitorMetrics)(nil)).Elem()
}

func (i *kubernetesClusterMonitorMetricsPtrType) ToKubernetesClusterMonitorMetricsPtrOutput() KubernetesClusterMonitorMetricsPtrOutput {
	return i.ToKubernetesClusterMonitorMetricsPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterMonitorMetricsPtrType) ToKubernetesClusterMonitorMetricsPtrOutputWithContext(ctx context.Context) KubernetesClusterMonitorMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMonitorMetricsPtrOutput)
}

type KubernetesClusterMonitorMetricsOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMonitorMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMonitorMetrics)(nil)).Elem()
}

func (o KubernetesClusterMonitorMetricsOutput) ToKubernetesClusterMonitorMetricsOutput() KubernetesClusterMonitorMetricsOutput {
	return o
}

func (o KubernetesClusterMonitorMetricsOutput) ToKubernetesClusterMonitorMetricsOutputWithContext(ctx context.Context) KubernetesClusterMonitorMetricsOutput {
	return o
}

func (o KubernetesClusterMonitorMetricsOutput) ToKubernetesClusterMonitorMetricsPtrOutput() KubernetesClusterMonitorMetricsPtrOutput {
	return o.ToKubernetesClusterMonitorMetricsPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterMonitorMetricsOutput) ToKubernetesClusterMonitorMetricsPtrOutputWithContext(ctx context.Context) KubernetesClusterMonitorMetricsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterMonitorMetrics) *KubernetesClusterMonitorMetrics {
		return &v
	}).(KubernetesClusterMonitorMetricsPtrOutput)
}

// Specifies a comma-separated list of Kubernetes annotation keys that will be used in the resource's labels metric.
func (o KubernetesClusterMonitorMetricsOutput) AnnotationsAllowed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMonitorMetrics) *string { return v.AnnotationsAllowed }).(pulumi.StringPtrOutput)
}

// Specifies a Comma-separated list of additional Kubernetes label keys that will be used in the resource's labels metric.
func (o KubernetesClusterMonitorMetricsOutput) LabelsAllowed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMonitorMetrics) *string { return v.LabelsAllowed }).(pulumi.StringPtrOutput)
}

type KubernetesClusterMonitorMetricsPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMonitorMetricsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterMonitorMetrics)(nil)).Elem()
}

func (o KubernetesClusterMonitorMetricsPtrOutput) ToKubernetesClusterMonitorMetricsPtrOutput() KubernetesClusterMonitorMetricsPtrOutput {
	return o
}

func (o KubernetesClusterMonitorMetricsPtrOutput) ToKubernetesClusterMonitorMetricsPtrOutputWithContext(ctx context.Context) KubernetesClusterMonitorMetricsPtrOutput {
	return o
}

func (o KubernetesClusterMonitorMetricsPtrOutput) Elem() KubernetesClusterMonitorMetricsOutput {
	return o.ApplyT(func(v *KubernetesClusterMonitorMetrics) KubernetesClusterMonitorMetrics {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterMonitorMetrics
		return ret
	}).(KubernetesClusterMonitorMetricsOutput)
}

// Specifies a comma-separated list of Kubernetes annotation keys that will be used in the resource's labels metric.
func (o KubernetesClusterMonitorMetricsPtrOutput) AnnotationsAllowed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMonitorMetrics) *string {
		if v == nil {
			return nil
		}
		return v.AnnotationsAllowed
	}).(pulumi.StringPtrOutput)
}

// Specifies a Comma-separated list of additional Kubernetes label keys that will be used in the resource's labels metric.
func (o KubernetesClusterMonitorMetricsPtrOutput) LabelsAllowed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMonitorMetrics) *string {
		if v == nil {
			return nil
		}
		return v.LabelsAllowed
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterNetworkProfile struct {
	// IP address within the Kubernetes service address range that will be used by cluster service discovery (kube-dns). Changing this forces a new resource to be created.
	DnsServiceIp *string `pulumi:"dnsServiceIp"`
	// IP address (in CIDR notation) used as the Docker bridge IP address on nodes. Changing this forces a new resource to be created.
	//
	// > **Note:** `dockerBridgeCidr` has been deprecated as the API no longer supports it and will be removed in version 4.0 of the provider.
	//
	// Deprecated: `docker_bridge_cidr` has been deprecated as the API no longer supports it and will be removed in version 4.0 of the provider.
	DockerBridgeCidr *string `pulumi:"dockerBridgeCidr"`
	// Specifies the eBPF data plane used for building the Kubernetes network. Possible value is `cilium`. Disabling this forces a new resource to be created.
	//
	// > **Note:** When `ebpfDataPlane` is set to `cilium`, the `networkPlugin` field can only be set to `azure`.
	//
	// > **Note:** When `ebpfDataPlane` is set to `cilium`, one of either `networkPluginMode = "overlay"` or `podSubnetId` must be specified.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/CiliumDataplanePreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/azure-cni-powered-by-cilium) for more information.
	EbpfDataPlane *string `pulumi:"ebpfDataPlane"`
	// Specifies a list of IP versions the Kubernetes Cluster will use to assign IP addresses to its nodes and pods. Possible values are `IPv4` and/or `IPv6`. `IPv4` must always be specified. Changing this forces a new resource to be created.
	//
	// ->**Note:** To configure dual-stack networking `ipVersions` should be set to `["IPv4", "IPv6"]`.
	//
	// ->**Note:** Dual-stack networking requires that the Preview Feature `Microsoft.ContainerService/AKS-EnableDualStack` is enabled and the Resource Provider is re-registered, see [the documentation](https://docs.microsoft.com/azure/aks/configure-kubenet-dual-stack?tabs=azure-cli%2Ckubectl#register-the-aks-enabledualstack-preview-feature) for more information.
	IpVersions []string `pulumi:"ipVersions"`
	// A `loadBalancerProfile` block as defined below. This can only be specified when `loadBalancerSku` is set to `standard`. Changing this forces a new resource to be created.
	LoadBalancerProfile *KubernetesClusterNetworkProfileLoadBalancerProfile `pulumi:"loadBalancerProfile"`
	// Specifies the SKU of the Load Balancer used for this Kubernetes Cluster. Possible values are `basic` and `standard`. Defaults to `standard`. Changing this forces a new resource to be created.
	LoadBalancerSku *string `pulumi:"loadBalancerSku"`
	// A `natGatewayProfile` block as defined below. This can only be specified when `loadBalancerSku` is set to `standard` and `outboundType` is set to `managedNATGateway` or `userAssignedNATGateway`. Changing this forces a new resource to be created.
	NatGatewayProfile *KubernetesClusterNetworkProfileNatGatewayProfile `pulumi:"natGatewayProfile"`
	// Network mode to be used with Azure CNI. Possible values are `bridge` and `transparent`. Changing this forces a new resource to be created.
	//
	// > **Note:** `networkMode` can only be set to `bridge` for existing Kubernetes Clusters and cannot be used to provision new Clusters - this will be removed by Azure in the future.
	//
	// > **Note:** This property can only be set when `networkPlugin` is set to `azure`.
	NetworkMode *string `pulumi:"networkMode"`
	// Network plugin to use for networking. Currently supported values are `azure`, `kubenet` and `none`. Changing this forces a new resource to be created.
	//
	// > **Note:** When `networkPlugin` is set to `azure` - the `podCidr` field must not be set.
	NetworkPlugin string `pulumi:"networkPlugin"`
	// Specifies the network plugin mode used for building the Kubernetes network. Possible value is `overlay`.
	//
	// > **Note:** When `networkPluginMode` is set to `overlay`, the `networkPlugin` field can only be set to `azure`. When upgrading from Azure CNI without overlay, `podSubnetId` must be specified.
	NetworkPluginMode *string `pulumi:"networkPluginMode"`
	// Sets up network policy to be used with Azure CNI. [Network policy allows us to control the traffic flow between pods](https://docs.microsoft.com/azure/aks/use-network-policies). Currently supported values are `calico`, `azure` and `cilium`.
	//
	// > **Note:** When `networkPolicy` is set to `azure`, the `networkPlugin` field can only be set to `azure`.
	//
	// > **Note:** When `networkPolicy` is set to `cilium`, the `ebpfDataPlane` field must be set to `cilium`.
	NetworkPolicy *string `pulumi:"networkPolicy"`
	// The outbound (egress) routing method which should be used for this Kubernetes Cluster. Possible values are `loadBalancer`, `userDefinedRouting`, `managedNATGateway` and `userAssignedNATGateway`. Defaults to `loadBalancer`. Changing this forces a new resource to be created.
	OutboundType *string `pulumi:"outboundType"`
	// The CIDR to use for pod IP addresses. This field can only be set when `networkPlugin` is set to `kubenet`. Changing this forces a new resource to be created.
	PodCidr *string `pulumi:"podCidr"`
	// A list of CIDRs to use for pod IP addresses. For single-stack networking a single IPv4 CIDR is expected. For dual-stack networking an IPv4 and IPv6 CIDR are expected. Changing this forces a new resource to be created.
	PodCidrs []string `pulumi:"podCidrs"`
	// The Network Range used by the Kubernetes service. Changing this forces a new resource to be created.
	ServiceCidr *string `pulumi:"serviceCidr"`
	// A list of CIDRs to use for Kubernetes services. For single-stack networking a single IPv4 CIDR is expected. For dual-stack networking an IPv4 and IPv6 CIDR are expected. Changing this forces a new resource to be created.
	//
	// > **Note:** This range should not be used by any network element on or connected to this VNet. Service address CIDR must be smaller than /12. `dockerBridgeCidr`, `dnsServiceIp` and `serviceCidr` should all be empty or all should be set.
	ServiceCidrs []string `pulumi:"serviceCidrs"`
}

// KubernetesClusterNetworkProfileInput is an input type that accepts KubernetesClusterNetworkProfileArgs and KubernetesClusterNetworkProfileOutput values.
// You can construct a concrete instance of `KubernetesClusterNetworkProfileInput` via:
//
//	KubernetesClusterNetworkProfileArgs{...}
type KubernetesClusterNetworkProfileInput interface {
	pulumi.Input

	ToKubernetesClusterNetworkProfileOutput() KubernetesClusterNetworkProfileOutput
	ToKubernetesClusterNetworkProfileOutputWithContext(context.Context) KubernetesClusterNetworkProfileOutput
}

type KubernetesClusterNetworkProfileArgs struct {
	// IP address within the Kubernetes service address range that will be used by cluster service discovery (kube-dns). Changing this forces a new resource to be created.
	DnsServiceIp pulumi.StringPtrInput `pulumi:"dnsServiceIp"`
	// IP address (in CIDR notation) used as the Docker bridge IP address on nodes. Changing this forces a new resource to be created.
	//
	// > **Note:** `dockerBridgeCidr` has been deprecated as the API no longer supports it and will be removed in version 4.0 of the provider.
	//
	// Deprecated: `docker_bridge_cidr` has been deprecated as the API no longer supports it and will be removed in version 4.0 of the provider.
	DockerBridgeCidr pulumi.StringPtrInput `pulumi:"dockerBridgeCidr"`
	// Specifies the eBPF data plane used for building the Kubernetes network. Possible value is `cilium`. Disabling this forces a new resource to be created.
	//
	// > **Note:** When `ebpfDataPlane` is set to `cilium`, the `networkPlugin` field can only be set to `azure`.
	//
	// > **Note:** When `ebpfDataPlane` is set to `cilium`, one of either `networkPluginMode = "overlay"` or `podSubnetId` must be specified.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/CiliumDataplanePreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/azure-cni-powered-by-cilium) for more information.
	EbpfDataPlane pulumi.StringPtrInput `pulumi:"ebpfDataPlane"`
	// Specifies a list of IP versions the Kubernetes Cluster will use to assign IP addresses to its nodes and pods. Possible values are `IPv4` and/or `IPv6`. `IPv4` must always be specified. Changing this forces a new resource to be created.
	//
	// ->**Note:** To configure dual-stack networking `ipVersions` should be set to `["IPv4", "IPv6"]`.
	//
	// ->**Note:** Dual-stack networking requires that the Preview Feature `Microsoft.ContainerService/AKS-EnableDualStack` is enabled and the Resource Provider is re-registered, see [the documentation](https://docs.microsoft.com/azure/aks/configure-kubenet-dual-stack?tabs=azure-cli%2Ckubectl#register-the-aks-enabledualstack-preview-feature) for more information.
	IpVersions pulumi.StringArrayInput `pulumi:"ipVersions"`
	// A `loadBalancerProfile` block as defined below. This can only be specified when `loadBalancerSku` is set to `standard`. Changing this forces a new resource to be created.
	LoadBalancerProfile KubernetesClusterNetworkProfileLoadBalancerProfilePtrInput `pulumi:"loadBalancerProfile"`
	// Specifies the SKU of the Load Balancer used for this Kubernetes Cluster. Possible values are `basic` and `standard`. Defaults to `standard`. Changing this forces a new resource to be created.
	LoadBalancerSku pulumi.StringPtrInput `pulumi:"loadBalancerSku"`
	// A `natGatewayProfile` block as defined below. This can only be specified when `loadBalancerSku` is set to `standard` and `outboundType` is set to `managedNATGateway` or `userAssignedNATGateway`. Changing this forces a new resource to be created.
	NatGatewayProfile KubernetesClusterNetworkProfileNatGatewayProfilePtrInput `pulumi:"natGatewayProfile"`
	// Network mode to be used with Azure CNI. Possible values are `bridge` and `transparent`. Changing this forces a new resource to be created.
	//
	// > **Note:** `networkMode` can only be set to `bridge` for existing Kubernetes Clusters and cannot be used to provision new Clusters - this will be removed by Azure in the future.
	//
	// > **Note:** This property can only be set when `networkPlugin` is set to `azure`.
	NetworkMode pulumi.StringPtrInput `pulumi:"networkMode"`
	// Network plugin to use for networking. Currently supported values are `azure`, `kubenet` and `none`. Changing this forces a new resource to be created.
	//
	// > **Note:** When `networkPlugin` is set to `azure` - the `podCidr` field must not be set.
	NetworkPlugin pulumi.StringInput `pulumi:"networkPlugin"`
	// Specifies the network plugin mode used for building the Kubernetes network. Possible value is `overlay`.
	//
	// > **Note:** When `networkPluginMode` is set to `overlay`, the `networkPlugin` field can only be set to `azure`. When upgrading from Azure CNI without overlay, `podSubnetId` must be specified.
	NetworkPluginMode pulumi.StringPtrInput `pulumi:"networkPluginMode"`
	// Sets up network policy to be used with Azure CNI. [Network policy allows us to control the traffic flow between pods](https://docs.microsoft.com/azure/aks/use-network-policies). Currently supported values are `calico`, `azure` and `cilium`.
	//
	// > **Note:** When `networkPolicy` is set to `azure`, the `networkPlugin` field can only be set to `azure`.
	//
	// > **Note:** When `networkPolicy` is set to `cilium`, the `ebpfDataPlane` field must be set to `cilium`.
	NetworkPolicy pulumi.StringPtrInput `pulumi:"networkPolicy"`
	// The outbound (egress) routing method which should be used for this Kubernetes Cluster. Possible values are `loadBalancer`, `userDefinedRouting`, `managedNATGateway` and `userAssignedNATGateway`. Defaults to `loadBalancer`. Changing this forces a new resource to be created.
	OutboundType pulumi.StringPtrInput `pulumi:"outboundType"`
	// The CIDR to use for pod IP addresses. This field can only be set when `networkPlugin` is set to `kubenet`. Changing this forces a new resource to be created.
	PodCidr pulumi.StringPtrInput `pulumi:"podCidr"`
	// A list of CIDRs to use for pod IP addresses. For single-stack networking a single IPv4 CIDR is expected. For dual-stack networking an IPv4 and IPv6 CIDR are expected. Changing this forces a new resource to be created.
	PodCidrs pulumi.StringArrayInput `pulumi:"podCidrs"`
	// The Network Range used by the Kubernetes service. Changing this forces a new resource to be created.
	ServiceCidr pulumi.StringPtrInput `pulumi:"serviceCidr"`
	// A list of CIDRs to use for Kubernetes services. For single-stack networking a single IPv4 CIDR is expected. For dual-stack networking an IPv4 and IPv6 CIDR are expected. Changing this forces a new resource to be created.
	//
	// > **Note:** This range should not be used by any network element on or connected to this VNet. Service address CIDR must be smaller than /12. `dockerBridgeCidr`, `dnsServiceIp` and `serviceCidr` should all be empty or all should be set.
	ServiceCidrs pulumi.StringArrayInput `pulumi:"serviceCidrs"`
}

func (KubernetesClusterNetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNetworkProfile)(nil)).Elem()
}

func (i KubernetesClusterNetworkProfileArgs) ToKubernetesClusterNetworkProfileOutput() KubernetesClusterNetworkProfileOutput {
	return i.ToKubernetesClusterNetworkProfileOutputWithContext(context.Background())
}

func (i KubernetesClusterNetworkProfileArgs) ToKubernetesClusterNetworkProfileOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNetworkProfileOutput)
}

func (i KubernetesClusterNetworkProfileArgs) ToKubernetesClusterNetworkProfilePtrOutput() KubernetesClusterNetworkProfilePtrOutput {
	return i.ToKubernetesClusterNetworkProfilePtrOutputWithContext(context.Background())
}

func (i KubernetesClusterNetworkProfileArgs) ToKubernetesClusterNetworkProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNetworkProfileOutput).ToKubernetesClusterNetworkProfilePtrOutputWithContext(ctx)
}

// KubernetesClusterNetworkProfilePtrInput is an input type that accepts KubernetesClusterNetworkProfileArgs, KubernetesClusterNetworkProfilePtr and KubernetesClusterNetworkProfilePtrOutput values.
// You can construct a concrete instance of `KubernetesClusterNetworkProfilePtrInput` via:
//
//	        KubernetesClusterNetworkProfileArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterNetworkProfilePtrInput interface {
	pulumi.Input

	ToKubernetesClusterNetworkProfilePtrOutput() KubernetesClusterNetworkProfilePtrOutput
	ToKubernetesClusterNetworkProfilePtrOutputWithContext(context.Context) KubernetesClusterNetworkProfilePtrOutput
}

type kubernetesClusterNetworkProfilePtrType KubernetesClusterNetworkProfileArgs

func KubernetesClusterNetworkProfilePtr(v *KubernetesClusterNetworkProfileArgs) KubernetesClusterNetworkProfilePtrInput {
	return (*kubernetesClusterNetworkProfilePtrType)(v)
}

func (*kubernetesClusterNetworkProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterNetworkProfile)(nil)).Elem()
}

func (i *kubernetesClusterNetworkProfilePtrType) ToKubernetesClusterNetworkProfilePtrOutput() KubernetesClusterNetworkProfilePtrOutput {
	return i.ToKubernetesClusterNetworkProfilePtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterNetworkProfilePtrType) ToKubernetesClusterNetworkProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNetworkProfilePtrOutput)
}

type KubernetesClusterNetworkProfileOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNetworkProfile)(nil)).Elem()
}

func (o KubernetesClusterNetworkProfileOutput) ToKubernetesClusterNetworkProfileOutput() KubernetesClusterNetworkProfileOutput {
	return o
}

func (o KubernetesClusterNetworkProfileOutput) ToKubernetesClusterNetworkProfileOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfileOutput {
	return o
}

func (o KubernetesClusterNetworkProfileOutput) ToKubernetesClusterNetworkProfilePtrOutput() KubernetesClusterNetworkProfilePtrOutput {
	return o.ToKubernetesClusterNetworkProfilePtrOutputWithContext(context.Background())
}

func (o KubernetesClusterNetworkProfileOutput) ToKubernetesClusterNetworkProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterNetworkProfile) *KubernetesClusterNetworkProfile {
		return &v
	}).(KubernetesClusterNetworkProfilePtrOutput)
}

// IP address within the Kubernetes service address range that will be used by cluster service discovery (kube-dns). Changing this forces a new resource to be created.
func (o KubernetesClusterNetworkProfileOutput) DnsServiceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfile) *string { return v.DnsServiceIp }).(pulumi.StringPtrOutput)
}

// IP address (in CIDR notation) used as the Docker bridge IP address on nodes. Changing this forces a new resource to be created.
//
// > **Note:** `dockerBridgeCidr` has been deprecated as the API no longer supports it and will be removed in version 4.0 of the provider.
//
// Deprecated: `docker_bridge_cidr` has been deprecated as the API no longer supports it and will be removed in version 4.0 of the provider.
func (o KubernetesClusterNetworkProfileOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfile) *string { return v.DockerBridgeCidr }).(pulumi.StringPtrOutput)
}

// Specifies the eBPF data plane used for building the Kubernetes network. Possible value is `cilium`. Disabling this forces a new resource to be created.
//
// > **Note:** When `ebpfDataPlane` is set to `cilium`, the `networkPlugin` field can only be set to `azure`.
//
// > **Note:** When `ebpfDataPlane` is set to `cilium`, one of either `networkPluginMode = "overlay"` or `podSubnetId` must be specified.
//
// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/CiliumDataplanePreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/azure-cni-powered-by-cilium) for more information.
func (o KubernetesClusterNetworkProfileOutput) EbpfDataPlane() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfile) *string { return v.EbpfDataPlane }).(pulumi.StringPtrOutput)
}

// Specifies a list of IP versions the Kubernetes Cluster will use to assign IP addresses to its nodes and pods. Possible values are `IPv4` and/or `IPv6`. `IPv4` must always be specified. Changing this forces a new resource to be created.
//
// ->**Note:** To configure dual-stack networking `ipVersions` should be set to `["IPv4", "IPv6"]`.
//
// ->**Note:** Dual-stack networking requires that the Preview Feature `Microsoft.ContainerService/AKS-EnableDualStack` is enabled and the Resource Provider is re-registered, see [the documentation](https://docs.microsoft.com/azure/aks/configure-kubenet-dual-stack?tabs=azure-cli%2Ckubectl#register-the-aks-enabledualstack-preview-feature) for more information.
func (o KubernetesClusterNetworkProfileOutput) IpVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfile) []string { return v.IpVersions }).(pulumi.StringArrayOutput)
}

// A `loadBalancerProfile` block as defined below. This can only be specified when `loadBalancerSku` is set to `standard`. Changing this forces a new resource to be created.
func (o KubernetesClusterNetworkProfileOutput) LoadBalancerProfile() KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfile) *KubernetesClusterNetworkProfileLoadBalancerProfile {
		return v.LoadBalancerProfile
	}).(KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput)
}

// Specifies the SKU of the Load Balancer used for this Kubernetes Cluster. Possible values are `basic` and `standard`. Defaults to `standard`. Changing this forces a new resource to be created.
func (o KubernetesClusterNetworkProfileOutput) LoadBalancerSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfile) *string { return v.LoadBalancerSku }).(pulumi.StringPtrOutput)
}

// A `natGatewayProfile` block as defined below. This can only be specified when `loadBalancerSku` is set to `standard` and `outboundType` is set to `managedNATGateway` or `userAssignedNATGateway`. Changing this forces a new resource to be created.
func (o KubernetesClusterNetworkProfileOutput) NatGatewayProfile() KubernetesClusterNetworkProfileNatGatewayProfilePtrOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfile) *KubernetesClusterNetworkProfileNatGatewayProfile {
		return v.NatGatewayProfile
	}).(KubernetesClusterNetworkProfileNatGatewayProfilePtrOutput)
}

// Network mode to be used with Azure CNI. Possible values are `bridge` and `transparent`. Changing this forces a new resource to be created.
//
// > **Note:** `networkMode` can only be set to `bridge` for existing Kubernetes Clusters and cannot be used to provision new Clusters - this will be removed by Azure in the future.
//
// > **Note:** This property can only be set when `networkPlugin` is set to `azure`.
func (o KubernetesClusterNetworkProfileOutput) NetworkMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfile) *string { return v.NetworkMode }).(pulumi.StringPtrOutput)
}

// Network plugin to use for networking. Currently supported values are `azure`, `kubenet` and `none`. Changing this forces a new resource to be created.
//
// > **Note:** When `networkPlugin` is set to `azure` - the `podCidr` field must not be set.
func (o KubernetesClusterNetworkProfileOutput) NetworkPlugin() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfile) string { return v.NetworkPlugin }).(pulumi.StringOutput)
}

// Specifies the network plugin mode used for building the Kubernetes network. Possible value is `overlay`.
//
// > **Note:** When `networkPluginMode` is set to `overlay`, the `networkPlugin` field can only be set to `azure`. When upgrading from Azure CNI without overlay, `podSubnetId` must be specified.
func (o KubernetesClusterNetworkProfileOutput) NetworkPluginMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfile) *string { return v.NetworkPluginMode }).(pulumi.StringPtrOutput)
}

// Sets up network policy to be used with Azure CNI. [Network policy allows us to control the traffic flow between pods](https://docs.microsoft.com/azure/aks/use-network-policies). Currently supported values are `calico`, `azure` and `cilium`.
//
// > **Note:** When `networkPolicy` is set to `azure`, the `networkPlugin` field can only be set to `azure`.
//
// > **Note:** When `networkPolicy` is set to `cilium`, the `ebpfDataPlane` field must be set to `cilium`.
func (o KubernetesClusterNetworkProfileOutput) NetworkPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfile) *string { return v.NetworkPolicy }).(pulumi.StringPtrOutput)
}

// The outbound (egress) routing method which should be used for this Kubernetes Cluster. Possible values are `loadBalancer`, `userDefinedRouting`, `managedNATGateway` and `userAssignedNATGateway`. Defaults to `loadBalancer`. Changing this forces a new resource to be created.
func (o KubernetesClusterNetworkProfileOutput) OutboundType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfile) *string { return v.OutboundType }).(pulumi.StringPtrOutput)
}

// The CIDR to use for pod IP addresses. This field can only be set when `networkPlugin` is set to `kubenet`. Changing this forces a new resource to be created.
func (o KubernetesClusterNetworkProfileOutput) PodCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfile) *string { return v.PodCidr }).(pulumi.StringPtrOutput)
}

// A list of CIDRs to use for pod IP addresses. For single-stack networking a single IPv4 CIDR is expected. For dual-stack networking an IPv4 and IPv6 CIDR are expected. Changing this forces a new resource to be created.
func (o KubernetesClusterNetworkProfileOutput) PodCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfile) []string { return v.PodCidrs }).(pulumi.StringArrayOutput)
}

// The Network Range used by the Kubernetes service. Changing this forces a new resource to be created.
func (o KubernetesClusterNetworkProfileOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfile) *string { return v.ServiceCidr }).(pulumi.StringPtrOutput)
}

// A list of CIDRs to use for Kubernetes services. For single-stack networking a single IPv4 CIDR is expected. For dual-stack networking an IPv4 and IPv6 CIDR are expected. Changing this forces a new resource to be created.
//
// > **Note:** This range should not be used by any network element on or connected to this VNet. Service address CIDR must be smaller than /12. `dockerBridgeCidr`, `dnsServiceIp` and `serviceCidr` should all be empty or all should be set.
func (o KubernetesClusterNetworkProfileOutput) ServiceCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfile) []string { return v.ServiceCidrs }).(pulumi.StringArrayOutput)
}

type KubernetesClusterNetworkProfilePtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNetworkProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterNetworkProfile)(nil)).Elem()
}

func (o KubernetesClusterNetworkProfilePtrOutput) ToKubernetesClusterNetworkProfilePtrOutput() KubernetesClusterNetworkProfilePtrOutput {
	return o
}

func (o KubernetesClusterNetworkProfilePtrOutput) ToKubernetesClusterNetworkProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfilePtrOutput {
	return o
}

func (o KubernetesClusterNetworkProfilePtrOutput) Elem() KubernetesClusterNetworkProfileOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfile) KubernetesClusterNetworkProfile {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterNetworkProfile
		return ret
	}).(KubernetesClusterNetworkProfileOutput)
}

// IP address within the Kubernetes service address range that will be used by cluster service discovery (kube-dns). Changing this forces a new resource to be created.
func (o KubernetesClusterNetworkProfilePtrOutput) DnsServiceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.DnsServiceIp
	}).(pulumi.StringPtrOutput)
}

// IP address (in CIDR notation) used as the Docker bridge IP address on nodes. Changing this forces a new resource to be created.
//
// > **Note:** `dockerBridgeCidr` has been deprecated as the API no longer supports it and will be removed in version 4.0 of the provider.
//
// Deprecated: `docker_bridge_cidr` has been deprecated as the API no longer supports it and will be removed in version 4.0 of the provider.
func (o KubernetesClusterNetworkProfilePtrOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.DockerBridgeCidr
	}).(pulumi.StringPtrOutput)
}

// Specifies the eBPF data plane used for building the Kubernetes network. Possible value is `cilium`. Disabling this forces a new resource to be created.
//
// > **Note:** When `ebpfDataPlane` is set to `cilium`, the `networkPlugin` field can only be set to `azure`.
//
// > **Note:** When `ebpfDataPlane` is set to `cilium`, one of either `networkPluginMode = "overlay"` or `podSubnetId` must be specified.
//
// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/CiliumDataplanePreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/azure-cni-powered-by-cilium) for more information.
func (o KubernetesClusterNetworkProfilePtrOutput) EbpfDataPlane() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.EbpfDataPlane
	}).(pulumi.StringPtrOutput)
}

// Specifies a list of IP versions the Kubernetes Cluster will use to assign IP addresses to its nodes and pods. Possible values are `IPv4` and/or `IPv6`. `IPv4` must always be specified. Changing this forces a new resource to be created.
//
// ->**Note:** To configure dual-stack networking `ipVersions` should be set to `["IPv4", "IPv6"]`.
//
// ->**Note:** Dual-stack networking requires that the Preview Feature `Microsoft.ContainerService/AKS-EnableDualStack` is enabled and the Resource Provider is re-registered, see [the documentation](https://docs.microsoft.com/azure/aks/configure-kubenet-dual-stack?tabs=azure-cli%2Ckubectl#register-the-aks-enabledualstack-preview-feature) for more information.
func (o KubernetesClusterNetworkProfilePtrOutput) IpVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfile) []string {
		if v == nil {
			return nil
		}
		return v.IpVersions
	}).(pulumi.StringArrayOutput)
}

// A `loadBalancerProfile` block as defined below. This can only be specified when `loadBalancerSku` is set to `standard`. Changing this forces a new resource to be created.
func (o KubernetesClusterNetworkProfilePtrOutput) LoadBalancerProfile() KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfile) *KubernetesClusterNetworkProfileLoadBalancerProfile {
		if v == nil {
			return nil
		}
		return v.LoadBalancerProfile
	}).(KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput)
}

// Specifies the SKU of the Load Balancer used for this Kubernetes Cluster. Possible values are `basic` and `standard`. Defaults to `standard`. Changing this forces a new resource to be created.
func (o KubernetesClusterNetworkProfilePtrOutput) LoadBalancerSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancerSku
	}).(pulumi.StringPtrOutput)
}

// A `natGatewayProfile` block as defined below. This can only be specified when `loadBalancerSku` is set to `standard` and `outboundType` is set to `managedNATGateway` or `userAssignedNATGateway`. Changing this forces a new resource to be created.
func (o KubernetesClusterNetworkProfilePtrOutput) NatGatewayProfile() KubernetesClusterNetworkProfileNatGatewayProfilePtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfile) *KubernetesClusterNetworkProfileNatGatewayProfile {
		if v == nil {
			return nil
		}
		return v.NatGatewayProfile
	}).(KubernetesClusterNetworkProfileNatGatewayProfilePtrOutput)
}

// Network mode to be used with Azure CNI. Possible values are `bridge` and `transparent`. Changing this forces a new resource to be created.
//
// > **Note:** `networkMode` can only be set to `bridge` for existing Kubernetes Clusters and cannot be used to provision new Clusters - this will be removed by Azure in the future.
//
// > **Note:** This property can only be set when `networkPlugin` is set to `azure`.
func (o KubernetesClusterNetworkProfilePtrOutput) NetworkMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.NetworkMode
	}).(pulumi.StringPtrOutput)
}

// Network plugin to use for networking. Currently supported values are `azure`, `kubenet` and `none`. Changing this forces a new resource to be created.
//
// > **Note:** When `networkPlugin` is set to `azure` - the `podCidr` field must not be set.
func (o KubernetesClusterNetworkProfilePtrOutput) NetworkPlugin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return &v.NetworkPlugin
	}).(pulumi.StringPtrOutput)
}

// Specifies the network plugin mode used for building the Kubernetes network. Possible value is `overlay`.
//
// > **Note:** When `networkPluginMode` is set to `overlay`, the `networkPlugin` field can only be set to `azure`. When upgrading from Azure CNI without overlay, `podSubnetId` must be specified.
func (o KubernetesClusterNetworkProfilePtrOutput) NetworkPluginMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.NetworkPluginMode
	}).(pulumi.StringPtrOutput)
}

// Sets up network policy to be used with Azure CNI. [Network policy allows us to control the traffic flow between pods](https://docs.microsoft.com/azure/aks/use-network-policies). Currently supported values are `calico`, `azure` and `cilium`.
//
// > **Note:** When `networkPolicy` is set to `azure`, the `networkPlugin` field can only be set to `azure`.
//
// > **Note:** When `networkPolicy` is set to `cilium`, the `ebpfDataPlane` field must be set to `cilium`.
func (o KubernetesClusterNetworkProfilePtrOutput) NetworkPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.NetworkPolicy
	}).(pulumi.StringPtrOutput)
}

// The outbound (egress) routing method which should be used for this Kubernetes Cluster. Possible values are `loadBalancer`, `userDefinedRouting`, `managedNATGateway` and `userAssignedNATGateway`. Defaults to `loadBalancer`. Changing this forces a new resource to be created.
func (o KubernetesClusterNetworkProfilePtrOutput) OutboundType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.OutboundType
	}).(pulumi.StringPtrOutput)
}

// The CIDR to use for pod IP addresses. This field can only be set when `networkPlugin` is set to `kubenet`. Changing this forces a new resource to be created.
func (o KubernetesClusterNetworkProfilePtrOutput) PodCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.PodCidr
	}).(pulumi.StringPtrOutput)
}

// A list of CIDRs to use for pod IP addresses. For single-stack networking a single IPv4 CIDR is expected. For dual-stack networking an IPv4 and IPv6 CIDR are expected. Changing this forces a new resource to be created.
func (o KubernetesClusterNetworkProfilePtrOutput) PodCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfile) []string {
		if v == nil {
			return nil
		}
		return v.PodCidrs
	}).(pulumi.StringArrayOutput)
}

// The Network Range used by the Kubernetes service. Changing this forces a new resource to be created.
func (o KubernetesClusterNetworkProfilePtrOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.ServiceCidr
	}).(pulumi.StringPtrOutput)
}

// A list of CIDRs to use for Kubernetes services. For single-stack networking a single IPv4 CIDR is expected. For dual-stack networking an IPv4 and IPv6 CIDR are expected. Changing this forces a new resource to be created.
//
// > **Note:** This range should not be used by any network element on or connected to this VNet. Service address CIDR must be smaller than /12. `dockerBridgeCidr`, `dnsServiceIp` and `serviceCidr` should all be empty or all should be set.
func (o KubernetesClusterNetworkProfilePtrOutput) ServiceCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfile) []string {
		if v == nil {
			return nil
		}
		return v.ServiceCidrs
	}).(pulumi.StringArrayOutput)
}

type KubernetesClusterNetworkProfileLoadBalancerProfile struct {
	// The outcome (resource IDs) of the specified arguments.
	EffectiveOutboundIps []string `pulumi:"effectiveOutboundIps"`
	// Desired outbound flow idle timeout in minutes for the cluster load balancer. Must be between `4` and `120` inclusive. Defaults to `30`.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// Count of desired managed outbound IPs for the cluster load balancer. Must be between `1` and `100` inclusive.
	ManagedOutboundIpCount *int `pulumi:"managedOutboundIpCount"`
	// The desired number of IPv6 outbound IPs created and managed by Azure for the cluster load balancer. Must be in the range of 1 to 100 (inclusive). The default value is 0 for single-stack and 1 for dual-stack.
	//
	// > **Note:** `managedOutboundIpv6Count` requires dual-stack networking. To enable dual-stack networking the Preview Feature `Microsoft.ContainerService/AKS-EnableDualStack` needs to be enabled and the Resource Provider re-registered, see [the documentation](https://docs.microsoft.com/azure/aks/configure-kubenet-dual-stack?tabs=azure-cli%2Ckubectl#register-the-aks-enabledualstack-preview-feature) for more information.
	ManagedOutboundIpv6Count *int `pulumi:"managedOutboundIpv6Count"`
	// The ID of the Public IP Addresses which should be used for outbound communication for the cluster load balancer.
	//
	// > **Note:** Set `outboundIpAddressIds` to an empty slice `[]` in order to unlink it from the cluster. Unlinking a `outboundIpAddressIds` will revert the load balancing for the cluster back to a managed one.
	OutboundIpAddressIds []string `pulumi:"outboundIpAddressIds"`
	// The ID of the outbound Public IP Address Prefixes which should be used for the cluster load balancer.
	//
	// > **Note:** Set `outboundIpPrefixIds` to an empty slice `[]` in order to unlink it from the cluster. Unlinking a `outboundIpPrefixIds` will revert the load balancing for the cluster back to a managed one.
	OutboundIpPrefixIds []string `pulumi:"outboundIpPrefixIds"`
	// Number of desired SNAT port for each VM in the clusters load balancer. Must be between `0` and `64000` inclusive. Defaults to `0`.
	OutboundPortsAllocated *int `pulumi:"outboundPortsAllocated"`
}

// KubernetesClusterNetworkProfileLoadBalancerProfileInput is an input type that accepts KubernetesClusterNetworkProfileLoadBalancerProfileArgs and KubernetesClusterNetworkProfileLoadBalancerProfileOutput values.
// You can construct a concrete instance of `KubernetesClusterNetworkProfileLoadBalancerProfileInput` via:
//
//	KubernetesClusterNetworkProfileLoadBalancerProfileArgs{...}
type KubernetesClusterNetworkProfileLoadBalancerProfileInput interface {
	pulumi.Input

	ToKubernetesClusterNetworkProfileLoadBalancerProfileOutput() KubernetesClusterNetworkProfileLoadBalancerProfileOutput
	ToKubernetesClusterNetworkProfileLoadBalancerProfileOutputWithContext(context.Context) KubernetesClusterNetworkProfileLoadBalancerProfileOutput
}

type KubernetesClusterNetworkProfileLoadBalancerProfileArgs struct {
	// The outcome (resource IDs) of the specified arguments.
	EffectiveOutboundIps pulumi.StringArrayInput `pulumi:"effectiveOutboundIps"`
	// Desired outbound flow idle timeout in minutes for the cluster load balancer. Must be between `4` and `120` inclusive. Defaults to `30`.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// Count of desired managed outbound IPs for the cluster load balancer. Must be between `1` and `100` inclusive.
	ManagedOutboundIpCount pulumi.IntPtrInput `pulumi:"managedOutboundIpCount"`
	// The desired number of IPv6 outbound IPs created and managed by Azure for the cluster load balancer. Must be in the range of 1 to 100 (inclusive). The default value is 0 for single-stack and 1 for dual-stack.
	//
	// > **Note:** `managedOutboundIpv6Count` requires dual-stack networking. To enable dual-stack networking the Preview Feature `Microsoft.ContainerService/AKS-EnableDualStack` needs to be enabled and the Resource Provider re-registered, see [the documentation](https://docs.microsoft.com/azure/aks/configure-kubenet-dual-stack?tabs=azure-cli%2Ckubectl#register-the-aks-enabledualstack-preview-feature) for more information.
	ManagedOutboundIpv6Count pulumi.IntPtrInput `pulumi:"managedOutboundIpv6Count"`
	// The ID of the Public IP Addresses which should be used for outbound communication for the cluster load balancer.
	//
	// > **Note:** Set `outboundIpAddressIds` to an empty slice `[]` in order to unlink it from the cluster. Unlinking a `outboundIpAddressIds` will revert the load balancing for the cluster back to a managed one.
	OutboundIpAddressIds pulumi.StringArrayInput `pulumi:"outboundIpAddressIds"`
	// The ID of the outbound Public IP Address Prefixes which should be used for the cluster load balancer.
	//
	// > **Note:** Set `outboundIpPrefixIds` to an empty slice `[]` in order to unlink it from the cluster. Unlinking a `outboundIpPrefixIds` will revert the load balancing for the cluster back to a managed one.
	OutboundIpPrefixIds pulumi.StringArrayInput `pulumi:"outboundIpPrefixIds"`
	// Number of desired SNAT port for each VM in the clusters load balancer. Must be between `0` and `64000` inclusive. Defaults to `0`.
	OutboundPortsAllocated pulumi.IntPtrInput `pulumi:"outboundPortsAllocated"`
}

func (KubernetesClusterNetworkProfileLoadBalancerProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNetworkProfileLoadBalancerProfile)(nil)).Elem()
}

func (i KubernetesClusterNetworkProfileLoadBalancerProfileArgs) ToKubernetesClusterNetworkProfileLoadBalancerProfileOutput() KubernetesClusterNetworkProfileLoadBalancerProfileOutput {
	return i.ToKubernetesClusterNetworkProfileLoadBalancerProfileOutputWithContext(context.Background())
}

func (i KubernetesClusterNetworkProfileLoadBalancerProfileArgs) ToKubernetesClusterNetworkProfileLoadBalancerProfileOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfileLoadBalancerProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNetworkProfileLoadBalancerProfileOutput)
}

func (i KubernetesClusterNetworkProfileLoadBalancerProfileArgs) ToKubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput() KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput {
	return i.ToKubernetesClusterNetworkProfileLoadBalancerProfilePtrOutputWithContext(context.Background())
}

func (i KubernetesClusterNetworkProfileLoadBalancerProfileArgs) ToKubernetesClusterNetworkProfileLoadBalancerProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNetworkProfileLoadBalancerProfileOutput).ToKubernetesClusterNetworkProfileLoadBalancerProfilePtrOutputWithContext(ctx)
}

// KubernetesClusterNetworkProfileLoadBalancerProfilePtrInput is an input type that accepts KubernetesClusterNetworkProfileLoadBalancerProfileArgs, KubernetesClusterNetworkProfileLoadBalancerProfilePtr and KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput values.
// You can construct a concrete instance of `KubernetesClusterNetworkProfileLoadBalancerProfilePtrInput` via:
//
//	        KubernetesClusterNetworkProfileLoadBalancerProfileArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterNetworkProfileLoadBalancerProfilePtrInput interface {
	pulumi.Input

	ToKubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput() KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput
	ToKubernetesClusterNetworkProfileLoadBalancerProfilePtrOutputWithContext(context.Context) KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput
}

type kubernetesClusterNetworkProfileLoadBalancerProfilePtrType KubernetesClusterNetworkProfileLoadBalancerProfileArgs

func KubernetesClusterNetworkProfileLoadBalancerProfilePtr(v *KubernetesClusterNetworkProfileLoadBalancerProfileArgs) KubernetesClusterNetworkProfileLoadBalancerProfilePtrInput {
	return (*kubernetesClusterNetworkProfileLoadBalancerProfilePtrType)(v)
}

func (*kubernetesClusterNetworkProfileLoadBalancerProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterNetworkProfileLoadBalancerProfile)(nil)).Elem()
}

func (i *kubernetesClusterNetworkProfileLoadBalancerProfilePtrType) ToKubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput() KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput {
	return i.ToKubernetesClusterNetworkProfileLoadBalancerProfilePtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterNetworkProfileLoadBalancerProfilePtrType) ToKubernetesClusterNetworkProfileLoadBalancerProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput)
}

type KubernetesClusterNetworkProfileLoadBalancerProfileOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNetworkProfileLoadBalancerProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNetworkProfileLoadBalancerProfile)(nil)).Elem()
}

func (o KubernetesClusterNetworkProfileLoadBalancerProfileOutput) ToKubernetesClusterNetworkProfileLoadBalancerProfileOutput() KubernetesClusterNetworkProfileLoadBalancerProfileOutput {
	return o
}

func (o KubernetesClusterNetworkProfileLoadBalancerProfileOutput) ToKubernetesClusterNetworkProfileLoadBalancerProfileOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfileLoadBalancerProfileOutput {
	return o
}

func (o KubernetesClusterNetworkProfileLoadBalancerProfileOutput) ToKubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput() KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput {
	return o.ToKubernetesClusterNetworkProfileLoadBalancerProfilePtrOutputWithContext(context.Background())
}

func (o KubernetesClusterNetworkProfileLoadBalancerProfileOutput) ToKubernetesClusterNetworkProfileLoadBalancerProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterNetworkProfileLoadBalancerProfile) *KubernetesClusterNetworkProfileLoadBalancerProfile {
		return &v
	}).(KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput)
}

// The outcome (resource IDs) of the specified arguments.
func (o KubernetesClusterNetworkProfileLoadBalancerProfileOutput) EffectiveOutboundIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfileLoadBalancerProfile) []string { return v.EffectiveOutboundIps }).(pulumi.StringArrayOutput)
}

// Desired outbound flow idle timeout in minutes for the cluster load balancer. Must be between `4` and `120` inclusive. Defaults to `30`.
func (o KubernetesClusterNetworkProfileLoadBalancerProfileOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfileLoadBalancerProfile) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// Count of desired managed outbound IPs for the cluster load balancer. Must be between `1` and `100` inclusive.
func (o KubernetesClusterNetworkProfileLoadBalancerProfileOutput) ManagedOutboundIpCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfileLoadBalancerProfile) *int { return v.ManagedOutboundIpCount }).(pulumi.IntPtrOutput)
}

// The desired number of IPv6 outbound IPs created and managed by Azure for the cluster load balancer. Must be in the range of 1 to 100 (inclusive). The default value is 0 for single-stack and 1 for dual-stack.
//
// > **Note:** `managedOutboundIpv6Count` requires dual-stack networking. To enable dual-stack networking the Preview Feature `Microsoft.ContainerService/AKS-EnableDualStack` needs to be enabled and the Resource Provider re-registered, see [the documentation](https://docs.microsoft.com/azure/aks/configure-kubenet-dual-stack?tabs=azure-cli%2Ckubectl#register-the-aks-enabledualstack-preview-feature) for more information.
func (o KubernetesClusterNetworkProfileLoadBalancerProfileOutput) ManagedOutboundIpv6Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfileLoadBalancerProfile) *int { return v.ManagedOutboundIpv6Count }).(pulumi.IntPtrOutput)
}

// The ID of the Public IP Addresses which should be used for outbound communication for the cluster load balancer.
//
// > **Note:** Set `outboundIpAddressIds` to an empty slice `[]` in order to unlink it from the cluster. Unlinking a `outboundIpAddressIds` will revert the load balancing for the cluster back to a managed one.
func (o KubernetesClusterNetworkProfileLoadBalancerProfileOutput) OutboundIpAddressIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfileLoadBalancerProfile) []string { return v.OutboundIpAddressIds }).(pulumi.StringArrayOutput)
}

// The ID of the outbound Public IP Address Prefixes which should be used for the cluster load balancer.
//
// > **Note:** Set `outboundIpPrefixIds` to an empty slice `[]` in order to unlink it from the cluster. Unlinking a `outboundIpPrefixIds` will revert the load balancing for the cluster back to a managed one.
func (o KubernetesClusterNetworkProfileLoadBalancerProfileOutput) OutboundIpPrefixIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfileLoadBalancerProfile) []string { return v.OutboundIpPrefixIds }).(pulumi.StringArrayOutput)
}

// Number of desired SNAT port for each VM in the clusters load balancer. Must be between `0` and `64000` inclusive. Defaults to `0`.
func (o KubernetesClusterNetworkProfileLoadBalancerProfileOutput) OutboundPortsAllocated() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfileLoadBalancerProfile) *int { return v.OutboundPortsAllocated }).(pulumi.IntPtrOutput)
}

type KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterNetworkProfileLoadBalancerProfile)(nil)).Elem()
}

func (o KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput) ToKubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput() KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput {
	return o
}

func (o KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput) ToKubernetesClusterNetworkProfileLoadBalancerProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput {
	return o
}

func (o KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput) Elem() KubernetesClusterNetworkProfileLoadBalancerProfileOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfileLoadBalancerProfile) KubernetesClusterNetworkProfileLoadBalancerProfile {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterNetworkProfileLoadBalancerProfile
		return ret
	}).(KubernetesClusterNetworkProfileLoadBalancerProfileOutput)
}

// The outcome (resource IDs) of the specified arguments.
func (o KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput) EffectiveOutboundIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfileLoadBalancerProfile) []string {
		if v == nil {
			return nil
		}
		return v.EffectiveOutboundIps
	}).(pulumi.StringArrayOutput)
}

// Desired outbound flow idle timeout in minutes for the cluster load balancer. Must be between `4` and `120` inclusive. Defaults to `30`.
func (o KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfileLoadBalancerProfile) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// Count of desired managed outbound IPs for the cluster load balancer. Must be between `1` and `100` inclusive.
func (o KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput) ManagedOutboundIpCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfileLoadBalancerProfile) *int {
		if v == nil {
			return nil
		}
		return v.ManagedOutboundIpCount
	}).(pulumi.IntPtrOutput)
}

// The desired number of IPv6 outbound IPs created and managed by Azure for the cluster load balancer. Must be in the range of 1 to 100 (inclusive). The default value is 0 for single-stack and 1 for dual-stack.
//
// > **Note:** `managedOutboundIpv6Count` requires dual-stack networking. To enable dual-stack networking the Preview Feature `Microsoft.ContainerService/AKS-EnableDualStack` needs to be enabled and the Resource Provider re-registered, see [the documentation](https://docs.microsoft.com/azure/aks/configure-kubenet-dual-stack?tabs=azure-cli%2Ckubectl#register-the-aks-enabledualstack-preview-feature) for more information.
func (o KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput) ManagedOutboundIpv6Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfileLoadBalancerProfile) *int {
		if v == nil {
			return nil
		}
		return v.ManagedOutboundIpv6Count
	}).(pulumi.IntPtrOutput)
}

// The ID of the Public IP Addresses which should be used for outbound communication for the cluster load balancer.
//
// > **Note:** Set `outboundIpAddressIds` to an empty slice `[]` in order to unlink it from the cluster. Unlinking a `outboundIpAddressIds` will revert the load balancing for the cluster back to a managed one.
func (o KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput) OutboundIpAddressIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfileLoadBalancerProfile) []string {
		if v == nil {
			return nil
		}
		return v.OutboundIpAddressIds
	}).(pulumi.StringArrayOutput)
}

// The ID of the outbound Public IP Address Prefixes which should be used for the cluster load balancer.
//
// > **Note:** Set `outboundIpPrefixIds` to an empty slice `[]` in order to unlink it from the cluster. Unlinking a `outboundIpPrefixIds` will revert the load balancing for the cluster back to a managed one.
func (o KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput) OutboundIpPrefixIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfileLoadBalancerProfile) []string {
		if v == nil {
			return nil
		}
		return v.OutboundIpPrefixIds
	}).(pulumi.StringArrayOutput)
}

// Number of desired SNAT port for each VM in the clusters load balancer. Must be between `0` and `64000` inclusive. Defaults to `0`.
func (o KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput) OutboundPortsAllocated() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfileLoadBalancerProfile) *int {
		if v == nil {
			return nil
		}
		return v.OutboundPortsAllocated
	}).(pulumi.IntPtrOutput)
}

type KubernetesClusterNetworkProfileNatGatewayProfile struct {
	// The outcome (resource IDs) of the specified arguments.
	EffectiveOutboundIps []string `pulumi:"effectiveOutboundIps"`
	// Desired outbound flow idle timeout in minutes for the cluster load balancer. Must be between `4` and `120` inclusive. Defaults to `4`.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// Count of desired managed outbound IPs for the cluster load balancer. Must be between `1` and `100` inclusive.
	ManagedOutboundIpCount *int `pulumi:"managedOutboundIpCount"`
}

// KubernetesClusterNetworkProfileNatGatewayProfileInput is an input type that accepts KubernetesClusterNetworkProfileNatGatewayProfileArgs and KubernetesClusterNetworkProfileNatGatewayProfileOutput values.
// You can construct a concrete instance of `KubernetesClusterNetworkProfileNatGatewayProfileInput` via:
//
//	KubernetesClusterNetworkProfileNatGatewayProfileArgs{...}
type KubernetesClusterNetworkProfileNatGatewayProfileInput interface {
	pulumi.Input

	ToKubernetesClusterNetworkProfileNatGatewayProfileOutput() KubernetesClusterNetworkProfileNatGatewayProfileOutput
	ToKubernetesClusterNetworkProfileNatGatewayProfileOutputWithContext(context.Context) KubernetesClusterNetworkProfileNatGatewayProfileOutput
}

type KubernetesClusterNetworkProfileNatGatewayProfileArgs struct {
	// The outcome (resource IDs) of the specified arguments.
	EffectiveOutboundIps pulumi.StringArrayInput `pulumi:"effectiveOutboundIps"`
	// Desired outbound flow idle timeout in minutes for the cluster load balancer. Must be between `4` and `120` inclusive. Defaults to `4`.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// Count of desired managed outbound IPs for the cluster load balancer. Must be between `1` and `100` inclusive.
	ManagedOutboundIpCount pulumi.IntPtrInput `pulumi:"managedOutboundIpCount"`
}

func (KubernetesClusterNetworkProfileNatGatewayProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNetworkProfileNatGatewayProfile)(nil)).Elem()
}

func (i KubernetesClusterNetworkProfileNatGatewayProfileArgs) ToKubernetesClusterNetworkProfileNatGatewayProfileOutput() KubernetesClusterNetworkProfileNatGatewayProfileOutput {
	return i.ToKubernetesClusterNetworkProfileNatGatewayProfileOutputWithContext(context.Background())
}

func (i KubernetesClusterNetworkProfileNatGatewayProfileArgs) ToKubernetesClusterNetworkProfileNatGatewayProfileOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfileNatGatewayProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNetworkProfileNatGatewayProfileOutput)
}

func (i KubernetesClusterNetworkProfileNatGatewayProfileArgs) ToKubernetesClusterNetworkProfileNatGatewayProfilePtrOutput() KubernetesClusterNetworkProfileNatGatewayProfilePtrOutput {
	return i.ToKubernetesClusterNetworkProfileNatGatewayProfilePtrOutputWithContext(context.Background())
}

func (i KubernetesClusterNetworkProfileNatGatewayProfileArgs) ToKubernetesClusterNetworkProfileNatGatewayProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfileNatGatewayProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNetworkProfileNatGatewayProfileOutput).ToKubernetesClusterNetworkProfileNatGatewayProfilePtrOutputWithContext(ctx)
}

// KubernetesClusterNetworkProfileNatGatewayProfilePtrInput is an input type that accepts KubernetesClusterNetworkProfileNatGatewayProfileArgs, KubernetesClusterNetworkProfileNatGatewayProfilePtr and KubernetesClusterNetworkProfileNatGatewayProfilePtrOutput values.
// You can construct a concrete instance of `KubernetesClusterNetworkProfileNatGatewayProfilePtrInput` via:
//
//	        KubernetesClusterNetworkProfileNatGatewayProfileArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterNetworkProfileNatGatewayProfilePtrInput interface {
	pulumi.Input

	ToKubernetesClusterNetworkProfileNatGatewayProfilePtrOutput() KubernetesClusterNetworkProfileNatGatewayProfilePtrOutput
	ToKubernetesClusterNetworkProfileNatGatewayProfilePtrOutputWithContext(context.Context) KubernetesClusterNetworkProfileNatGatewayProfilePtrOutput
}

type kubernetesClusterNetworkProfileNatGatewayProfilePtrType KubernetesClusterNetworkProfileNatGatewayProfileArgs

func KubernetesClusterNetworkProfileNatGatewayProfilePtr(v *KubernetesClusterNetworkProfileNatGatewayProfileArgs) KubernetesClusterNetworkProfileNatGatewayProfilePtrInput {
	return (*kubernetesClusterNetworkProfileNatGatewayProfilePtrType)(v)
}

func (*kubernetesClusterNetworkProfileNatGatewayProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterNetworkProfileNatGatewayProfile)(nil)).Elem()
}

func (i *kubernetesClusterNetworkProfileNatGatewayProfilePtrType) ToKubernetesClusterNetworkProfileNatGatewayProfilePtrOutput() KubernetesClusterNetworkProfileNatGatewayProfilePtrOutput {
	return i.ToKubernetesClusterNetworkProfileNatGatewayProfilePtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterNetworkProfileNatGatewayProfilePtrType) ToKubernetesClusterNetworkProfileNatGatewayProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfileNatGatewayProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNetworkProfileNatGatewayProfilePtrOutput)
}

type KubernetesClusterNetworkProfileNatGatewayProfileOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNetworkProfileNatGatewayProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNetworkProfileNatGatewayProfile)(nil)).Elem()
}

func (o KubernetesClusterNetworkProfileNatGatewayProfileOutput) ToKubernetesClusterNetworkProfileNatGatewayProfileOutput() KubernetesClusterNetworkProfileNatGatewayProfileOutput {
	return o
}

func (o KubernetesClusterNetworkProfileNatGatewayProfileOutput) ToKubernetesClusterNetworkProfileNatGatewayProfileOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfileNatGatewayProfileOutput {
	return o
}

func (o KubernetesClusterNetworkProfileNatGatewayProfileOutput) ToKubernetesClusterNetworkProfileNatGatewayProfilePtrOutput() KubernetesClusterNetworkProfileNatGatewayProfilePtrOutput {
	return o.ToKubernetesClusterNetworkProfileNatGatewayProfilePtrOutputWithContext(context.Background())
}

func (o KubernetesClusterNetworkProfileNatGatewayProfileOutput) ToKubernetesClusterNetworkProfileNatGatewayProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfileNatGatewayProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterNetworkProfileNatGatewayProfile) *KubernetesClusterNetworkProfileNatGatewayProfile {
		return &v
	}).(KubernetesClusterNetworkProfileNatGatewayProfilePtrOutput)
}

// The outcome (resource IDs) of the specified arguments.
func (o KubernetesClusterNetworkProfileNatGatewayProfileOutput) EffectiveOutboundIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfileNatGatewayProfile) []string { return v.EffectiveOutboundIps }).(pulumi.StringArrayOutput)
}

// Desired outbound flow idle timeout in minutes for the cluster load balancer. Must be between `4` and `120` inclusive. Defaults to `4`.
func (o KubernetesClusterNetworkProfileNatGatewayProfileOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfileNatGatewayProfile) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// Count of desired managed outbound IPs for the cluster load balancer. Must be between `1` and `100` inclusive.
func (o KubernetesClusterNetworkProfileNatGatewayProfileOutput) ManagedOutboundIpCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfileNatGatewayProfile) *int { return v.ManagedOutboundIpCount }).(pulumi.IntPtrOutput)
}

type KubernetesClusterNetworkProfileNatGatewayProfilePtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNetworkProfileNatGatewayProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterNetworkProfileNatGatewayProfile)(nil)).Elem()
}

func (o KubernetesClusterNetworkProfileNatGatewayProfilePtrOutput) ToKubernetesClusterNetworkProfileNatGatewayProfilePtrOutput() KubernetesClusterNetworkProfileNatGatewayProfilePtrOutput {
	return o
}

func (o KubernetesClusterNetworkProfileNatGatewayProfilePtrOutput) ToKubernetesClusterNetworkProfileNatGatewayProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfileNatGatewayProfilePtrOutput {
	return o
}

func (o KubernetesClusterNetworkProfileNatGatewayProfilePtrOutput) Elem() KubernetesClusterNetworkProfileNatGatewayProfileOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfileNatGatewayProfile) KubernetesClusterNetworkProfileNatGatewayProfile {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterNetworkProfileNatGatewayProfile
		return ret
	}).(KubernetesClusterNetworkProfileNatGatewayProfileOutput)
}

// The outcome (resource IDs) of the specified arguments.
func (o KubernetesClusterNetworkProfileNatGatewayProfilePtrOutput) EffectiveOutboundIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfileNatGatewayProfile) []string {
		if v == nil {
			return nil
		}
		return v.EffectiveOutboundIps
	}).(pulumi.StringArrayOutput)
}

// Desired outbound flow idle timeout in minutes for the cluster load balancer. Must be between `4` and `120` inclusive. Defaults to `4`.
func (o KubernetesClusterNetworkProfileNatGatewayProfilePtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfileNatGatewayProfile) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// Count of desired managed outbound IPs for the cluster load balancer. Must be between `1` and `100` inclusive.
func (o KubernetesClusterNetworkProfileNatGatewayProfilePtrOutput) ManagedOutboundIpCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfileNatGatewayProfile) *int {
		if v == nil {
			return nil
		}
		return v.ManagedOutboundIpCount
	}).(pulumi.IntPtrOutput)
}

type KubernetesClusterNodePoolKubeletConfig struct {
	// Specifies the allow list of unsafe sysctls command or patterns (ending in `*`). Changing this forces a new resource to be created.
	AllowedUnsafeSysctls []string `pulumi:"allowedUnsafeSysctls"`
	// Specifies the maximum number of container log files that can be present for a container. must be at least 2. Changing this forces a new resource to be created.
	ContainerLogMaxLine *int `pulumi:"containerLogMaxLine"`
	// Specifies the maximum size (e.g. 10MB) of container log file before it is rotated. Changing this forces a new resource to be created.
	ContainerLogMaxSizeMb *int `pulumi:"containerLogMaxSizeMb"`
	// Is CPU CFS quota enforcement for containers enabled? Changing this forces a new resource to be created.
	CpuCfsQuotaEnabled *bool `pulumi:"cpuCfsQuotaEnabled"`
	// Specifies the CPU CFS quota period value. Changing this forces a new resource to be created.
	CpuCfsQuotaPeriod *string `pulumi:"cpuCfsQuotaPeriod"`
	// Specifies the CPU Manager policy to use. Possible values are `none` and `static`, Changing this forces a new resource to be created.
	CpuManagerPolicy *string `pulumi:"cpuManagerPolicy"`
	// Specifies the percent of disk usage above which image garbage collection is always run. Must be between `0` and `100`. Changing this forces a new resource to be created.
	ImageGcHighThreshold *int `pulumi:"imageGcHighThreshold"`
	// Specifies the percent of disk usage lower than which image garbage collection is never run. Must be between `0` and `100`. Changing this forces a new resource to be created.
	ImageGcLowThreshold *int `pulumi:"imageGcLowThreshold"`
	// Specifies the maximum number of processes per pod. Changing this forces a new resource to be created.
	PodMaxPid *int `pulumi:"podMaxPid"`
	// Specifies the Topology Manager policy to use. Possible values are `none`, `best-effort`, `restricted` or `single-numa-node`. Changing this forces a new resource to be created.
	TopologyManagerPolicy *string `pulumi:"topologyManagerPolicy"`
}

// KubernetesClusterNodePoolKubeletConfigInput is an input type that accepts KubernetesClusterNodePoolKubeletConfigArgs and KubernetesClusterNodePoolKubeletConfigOutput values.
// You can construct a concrete instance of `KubernetesClusterNodePoolKubeletConfigInput` via:
//
//	KubernetesClusterNodePoolKubeletConfigArgs{...}
type KubernetesClusterNodePoolKubeletConfigInput interface {
	pulumi.Input

	ToKubernetesClusterNodePoolKubeletConfigOutput() KubernetesClusterNodePoolKubeletConfigOutput
	ToKubernetesClusterNodePoolKubeletConfigOutputWithContext(context.Context) KubernetesClusterNodePoolKubeletConfigOutput
}

type KubernetesClusterNodePoolKubeletConfigArgs struct {
	// Specifies the allow list of unsafe sysctls command or patterns (ending in `*`). Changing this forces a new resource to be created.
	AllowedUnsafeSysctls pulumi.StringArrayInput `pulumi:"allowedUnsafeSysctls"`
	// Specifies the maximum number of container log files that can be present for a container. must be at least 2. Changing this forces a new resource to be created.
	ContainerLogMaxLine pulumi.IntPtrInput `pulumi:"containerLogMaxLine"`
	// Specifies the maximum size (e.g. 10MB) of container log file before it is rotated. Changing this forces a new resource to be created.
	ContainerLogMaxSizeMb pulumi.IntPtrInput `pulumi:"containerLogMaxSizeMb"`
	// Is CPU CFS quota enforcement for containers enabled? Changing this forces a new resource to be created.
	CpuCfsQuotaEnabled pulumi.BoolPtrInput `pulumi:"cpuCfsQuotaEnabled"`
	// Specifies the CPU CFS quota period value. Changing this forces a new resource to be created.
	CpuCfsQuotaPeriod pulumi.StringPtrInput `pulumi:"cpuCfsQuotaPeriod"`
	// Specifies the CPU Manager policy to use. Possible values are `none` and `static`, Changing this forces a new resource to be created.
	CpuManagerPolicy pulumi.StringPtrInput `pulumi:"cpuManagerPolicy"`
	// Specifies the percent of disk usage above which image garbage collection is always run. Must be between `0` and `100`. Changing this forces a new resource to be created.
	ImageGcHighThreshold pulumi.IntPtrInput `pulumi:"imageGcHighThreshold"`
	// Specifies the percent of disk usage lower than which image garbage collection is never run. Must be between `0` and `100`. Changing this forces a new resource to be created.
	ImageGcLowThreshold pulumi.IntPtrInput `pulumi:"imageGcLowThreshold"`
	// Specifies the maximum number of processes per pod. Changing this forces a new resource to be created.
	PodMaxPid pulumi.IntPtrInput `pulumi:"podMaxPid"`
	// Specifies the Topology Manager policy to use. Possible values are `none`, `best-effort`, `restricted` or `single-numa-node`. Changing this forces a new resource to be created.
	TopologyManagerPolicy pulumi.StringPtrInput `pulumi:"topologyManagerPolicy"`
}

func (KubernetesClusterNodePoolKubeletConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNodePoolKubeletConfig)(nil)).Elem()
}

func (i KubernetesClusterNodePoolKubeletConfigArgs) ToKubernetesClusterNodePoolKubeletConfigOutput() KubernetesClusterNodePoolKubeletConfigOutput {
	return i.ToKubernetesClusterNodePoolKubeletConfigOutputWithContext(context.Background())
}

func (i KubernetesClusterNodePoolKubeletConfigArgs) ToKubernetesClusterNodePoolKubeletConfigOutputWithContext(ctx context.Context) KubernetesClusterNodePoolKubeletConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolKubeletConfigOutput)
}

func (i KubernetesClusterNodePoolKubeletConfigArgs) ToKubernetesClusterNodePoolKubeletConfigPtrOutput() KubernetesClusterNodePoolKubeletConfigPtrOutput {
	return i.ToKubernetesClusterNodePoolKubeletConfigPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterNodePoolKubeletConfigArgs) ToKubernetesClusterNodePoolKubeletConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolKubeletConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolKubeletConfigOutput).ToKubernetesClusterNodePoolKubeletConfigPtrOutputWithContext(ctx)
}

// KubernetesClusterNodePoolKubeletConfigPtrInput is an input type that accepts KubernetesClusterNodePoolKubeletConfigArgs, KubernetesClusterNodePoolKubeletConfigPtr and KubernetesClusterNodePoolKubeletConfigPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterNodePoolKubeletConfigPtrInput` via:
//
//	        KubernetesClusterNodePoolKubeletConfigArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterNodePoolKubeletConfigPtrInput interface {
	pulumi.Input

	ToKubernetesClusterNodePoolKubeletConfigPtrOutput() KubernetesClusterNodePoolKubeletConfigPtrOutput
	ToKubernetesClusterNodePoolKubeletConfigPtrOutputWithContext(context.Context) KubernetesClusterNodePoolKubeletConfigPtrOutput
}

type kubernetesClusterNodePoolKubeletConfigPtrType KubernetesClusterNodePoolKubeletConfigArgs

func KubernetesClusterNodePoolKubeletConfigPtr(v *KubernetesClusterNodePoolKubeletConfigArgs) KubernetesClusterNodePoolKubeletConfigPtrInput {
	return (*kubernetesClusterNodePoolKubeletConfigPtrType)(v)
}

func (*kubernetesClusterNodePoolKubeletConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterNodePoolKubeletConfig)(nil)).Elem()
}

func (i *kubernetesClusterNodePoolKubeletConfigPtrType) ToKubernetesClusterNodePoolKubeletConfigPtrOutput() KubernetesClusterNodePoolKubeletConfigPtrOutput {
	return i.ToKubernetesClusterNodePoolKubeletConfigPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterNodePoolKubeletConfigPtrType) ToKubernetesClusterNodePoolKubeletConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolKubeletConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolKubeletConfigPtrOutput)
}

type KubernetesClusterNodePoolKubeletConfigOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNodePoolKubeletConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNodePoolKubeletConfig)(nil)).Elem()
}

func (o KubernetesClusterNodePoolKubeletConfigOutput) ToKubernetesClusterNodePoolKubeletConfigOutput() KubernetesClusterNodePoolKubeletConfigOutput {
	return o
}

func (o KubernetesClusterNodePoolKubeletConfigOutput) ToKubernetesClusterNodePoolKubeletConfigOutputWithContext(ctx context.Context) KubernetesClusterNodePoolKubeletConfigOutput {
	return o
}

func (o KubernetesClusterNodePoolKubeletConfigOutput) ToKubernetesClusterNodePoolKubeletConfigPtrOutput() KubernetesClusterNodePoolKubeletConfigPtrOutput {
	return o.ToKubernetesClusterNodePoolKubeletConfigPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterNodePoolKubeletConfigOutput) ToKubernetesClusterNodePoolKubeletConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolKubeletConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterNodePoolKubeletConfig) *KubernetesClusterNodePoolKubeletConfig {
		return &v
	}).(KubernetesClusterNodePoolKubeletConfigPtrOutput)
}

// Specifies the allow list of unsafe sysctls command or patterns (ending in `*`). Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolKubeletConfigOutput) AllowedUnsafeSysctls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolKubeletConfig) []string { return v.AllowedUnsafeSysctls }).(pulumi.StringArrayOutput)
}

// Specifies the maximum number of container log files that can be present for a container. must be at least 2. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolKubeletConfigOutput) ContainerLogMaxLine() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolKubeletConfig) *int { return v.ContainerLogMaxLine }).(pulumi.IntPtrOutput)
}

// Specifies the maximum size (e.g. 10MB) of container log file before it is rotated. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolKubeletConfigOutput) ContainerLogMaxSizeMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolKubeletConfig) *int { return v.ContainerLogMaxSizeMb }).(pulumi.IntPtrOutput)
}

// Is CPU CFS quota enforcement for containers enabled? Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolKubeletConfigOutput) CpuCfsQuotaEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolKubeletConfig) *bool { return v.CpuCfsQuotaEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies the CPU CFS quota period value. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolKubeletConfigOutput) CpuCfsQuotaPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolKubeletConfig) *string { return v.CpuCfsQuotaPeriod }).(pulumi.StringPtrOutput)
}

// Specifies the CPU Manager policy to use. Possible values are `none` and `static`, Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolKubeletConfigOutput) CpuManagerPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolKubeletConfig) *string { return v.CpuManagerPolicy }).(pulumi.StringPtrOutput)
}

// Specifies the percent of disk usage above which image garbage collection is always run. Must be between `0` and `100`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolKubeletConfigOutput) ImageGcHighThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolKubeletConfig) *int { return v.ImageGcHighThreshold }).(pulumi.IntPtrOutput)
}

// Specifies the percent of disk usage lower than which image garbage collection is never run. Must be between `0` and `100`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolKubeletConfigOutput) ImageGcLowThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolKubeletConfig) *int { return v.ImageGcLowThreshold }).(pulumi.IntPtrOutput)
}

// Specifies the maximum number of processes per pod. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolKubeletConfigOutput) PodMaxPid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolKubeletConfig) *int { return v.PodMaxPid }).(pulumi.IntPtrOutput)
}

// Specifies the Topology Manager policy to use. Possible values are `none`, `best-effort`, `restricted` or `single-numa-node`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolKubeletConfigOutput) TopologyManagerPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolKubeletConfig) *string { return v.TopologyManagerPolicy }).(pulumi.StringPtrOutput)
}

type KubernetesClusterNodePoolKubeletConfigPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNodePoolKubeletConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterNodePoolKubeletConfig)(nil)).Elem()
}

func (o KubernetesClusterNodePoolKubeletConfigPtrOutput) ToKubernetesClusterNodePoolKubeletConfigPtrOutput() KubernetesClusterNodePoolKubeletConfigPtrOutput {
	return o
}

func (o KubernetesClusterNodePoolKubeletConfigPtrOutput) ToKubernetesClusterNodePoolKubeletConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolKubeletConfigPtrOutput {
	return o
}

func (o KubernetesClusterNodePoolKubeletConfigPtrOutput) Elem() KubernetesClusterNodePoolKubeletConfigOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolKubeletConfig) KubernetesClusterNodePoolKubeletConfig {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterNodePoolKubeletConfig
		return ret
	}).(KubernetesClusterNodePoolKubeletConfigOutput)
}

// Specifies the allow list of unsafe sysctls command or patterns (ending in `*`). Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolKubeletConfigPtrOutput) AllowedUnsafeSysctls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolKubeletConfig) []string {
		if v == nil {
			return nil
		}
		return v.AllowedUnsafeSysctls
	}).(pulumi.StringArrayOutput)
}

// Specifies the maximum number of container log files that can be present for a container. must be at least 2. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolKubeletConfigPtrOutput) ContainerLogMaxLine() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolKubeletConfig) *int {
		if v == nil {
			return nil
		}
		return v.ContainerLogMaxLine
	}).(pulumi.IntPtrOutput)
}

// Specifies the maximum size (e.g. 10MB) of container log file before it is rotated. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolKubeletConfigPtrOutput) ContainerLogMaxSizeMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolKubeletConfig) *int {
		if v == nil {
			return nil
		}
		return v.ContainerLogMaxSizeMb
	}).(pulumi.IntPtrOutput)
}

// Is CPU CFS quota enforcement for containers enabled? Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolKubeletConfigPtrOutput) CpuCfsQuotaEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolKubeletConfig) *bool {
		if v == nil {
			return nil
		}
		return v.CpuCfsQuotaEnabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies the CPU CFS quota period value. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolKubeletConfigPtrOutput) CpuCfsQuotaPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolKubeletConfig) *string {
		if v == nil {
			return nil
		}
		return v.CpuCfsQuotaPeriod
	}).(pulumi.StringPtrOutput)
}

// Specifies the CPU Manager policy to use. Possible values are `none` and `static`, Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolKubeletConfigPtrOutput) CpuManagerPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolKubeletConfig) *string {
		if v == nil {
			return nil
		}
		return v.CpuManagerPolicy
	}).(pulumi.StringPtrOutput)
}

// Specifies the percent of disk usage above which image garbage collection is always run. Must be between `0` and `100`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolKubeletConfigPtrOutput) ImageGcHighThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolKubeletConfig) *int {
		if v == nil {
			return nil
		}
		return v.ImageGcHighThreshold
	}).(pulumi.IntPtrOutput)
}

// Specifies the percent of disk usage lower than which image garbage collection is never run. Must be between `0` and `100`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolKubeletConfigPtrOutput) ImageGcLowThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolKubeletConfig) *int {
		if v == nil {
			return nil
		}
		return v.ImageGcLowThreshold
	}).(pulumi.IntPtrOutput)
}

// Specifies the maximum number of processes per pod. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolKubeletConfigPtrOutput) PodMaxPid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolKubeletConfig) *int {
		if v == nil {
			return nil
		}
		return v.PodMaxPid
	}).(pulumi.IntPtrOutput)
}

// Specifies the Topology Manager policy to use. Possible values are `none`, `best-effort`, `restricted` or `single-numa-node`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolKubeletConfigPtrOutput) TopologyManagerPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolKubeletConfig) *string {
		if v == nil {
			return nil
		}
		return v.TopologyManagerPolicy
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterNodePoolLinuxOsConfig struct {
	// Specifies the size of swap file on each node in MB. Changing this forces a new resource to be created.
	SwapFileSizeMb *int `pulumi:"swapFileSizeMb"`
	// A `sysctlConfig` block as defined below. Changing this forces a new resource to be created.
	SysctlConfig *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig `pulumi:"sysctlConfig"`
	// specifies the defrag configuration for Transparent Huge Page. Possible values are `always`, `defer`, `defer+madvise`, `madvise` and `never`. Changing this forces a new resource to be created.
	TransparentHugePageDefrag *string `pulumi:"transparentHugePageDefrag"`
	// Specifies the Transparent Huge Page enabled configuration. Possible values are `always`, `madvise` and `never`. Changing this forces a new resource to be created.
	TransparentHugePageEnabled *string `pulumi:"transparentHugePageEnabled"`
}

// KubernetesClusterNodePoolLinuxOsConfigInput is an input type that accepts KubernetesClusterNodePoolLinuxOsConfigArgs and KubernetesClusterNodePoolLinuxOsConfigOutput values.
// You can construct a concrete instance of `KubernetesClusterNodePoolLinuxOsConfigInput` via:
//
//	KubernetesClusterNodePoolLinuxOsConfigArgs{...}
type KubernetesClusterNodePoolLinuxOsConfigInput interface {
	pulumi.Input

	ToKubernetesClusterNodePoolLinuxOsConfigOutput() KubernetesClusterNodePoolLinuxOsConfigOutput
	ToKubernetesClusterNodePoolLinuxOsConfigOutputWithContext(context.Context) KubernetesClusterNodePoolLinuxOsConfigOutput
}

type KubernetesClusterNodePoolLinuxOsConfigArgs struct {
	// Specifies the size of swap file on each node in MB. Changing this forces a new resource to be created.
	SwapFileSizeMb pulumi.IntPtrInput `pulumi:"swapFileSizeMb"`
	// A `sysctlConfig` block as defined below. Changing this forces a new resource to be created.
	SysctlConfig KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrInput `pulumi:"sysctlConfig"`
	// specifies the defrag configuration for Transparent Huge Page. Possible values are `always`, `defer`, `defer+madvise`, `madvise` and `never`. Changing this forces a new resource to be created.
	TransparentHugePageDefrag pulumi.StringPtrInput `pulumi:"transparentHugePageDefrag"`
	// Specifies the Transparent Huge Page enabled configuration. Possible values are `always`, `madvise` and `never`. Changing this forces a new resource to be created.
	TransparentHugePageEnabled pulumi.StringPtrInput `pulumi:"transparentHugePageEnabled"`
}

func (KubernetesClusterNodePoolLinuxOsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNodePoolLinuxOsConfig)(nil)).Elem()
}

func (i KubernetesClusterNodePoolLinuxOsConfigArgs) ToKubernetesClusterNodePoolLinuxOsConfigOutput() KubernetesClusterNodePoolLinuxOsConfigOutput {
	return i.ToKubernetesClusterNodePoolLinuxOsConfigOutputWithContext(context.Background())
}

func (i KubernetesClusterNodePoolLinuxOsConfigArgs) ToKubernetesClusterNodePoolLinuxOsConfigOutputWithContext(ctx context.Context) KubernetesClusterNodePoolLinuxOsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolLinuxOsConfigOutput)
}

func (i KubernetesClusterNodePoolLinuxOsConfigArgs) ToKubernetesClusterNodePoolLinuxOsConfigPtrOutput() KubernetesClusterNodePoolLinuxOsConfigPtrOutput {
	return i.ToKubernetesClusterNodePoolLinuxOsConfigPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterNodePoolLinuxOsConfigArgs) ToKubernetesClusterNodePoolLinuxOsConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolLinuxOsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolLinuxOsConfigOutput).ToKubernetesClusterNodePoolLinuxOsConfigPtrOutputWithContext(ctx)
}

// KubernetesClusterNodePoolLinuxOsConfigPtrInput is an input type that accepts KubernetesClusterNodePoolLinuxOsConfigArgs, KubernetesClusterNodePoolLinuxOsConfigPtr and KubernetesClusterNodePoolLinuxOsConfigPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterNodePoolLinuxOsConfigPtrInput` via:
//
//	        KubernetesClusterNodePoolLinuxOsConfigArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterNodePoolLinuxOsConfigPtrInput interface {
	pulumi.Input

	ToKubernetesClusterNodePoolLinuxOsConfigPtrOutput() KubernetesClusterNodePoolLinuxOsConfigPtrOutput
	ToKubernetesClusterNodePoolLinuxOsConfigPtrOutputWithContext(context.Context) KubernetesClusterNodePoolLinuxOsConfigPtrOutput
}

type kubernetesClusterNodePoolLinuxOsConfigPtrType KubernetesClusterNodePoolLinuxOsConfigArgs

func KubernetesClusterNodePoolLinuxOsConfigPtr(v *KubernetesClusterNodePoolLinuxOsConfigArgs) KubernetesClusterNodePoolLinuxOsConfigPtrInput {
	return (*kubernetesClusterNodePoolLinuxOsConfigPtrType)(v)
}

func (*kubernetesClusterNodePoolLinuxOsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterNodePoolLinuxOsConfig)(nil)).Elem()
}

func (i *kubernetesClusterNodePoolLinuxOsConfigPtrType) ToKubernetesClusterNodePoolLinuxOsConfigPtrOutput() KubernetesClusterNodePoolLinuxOsConfigPtrOutput {
	return i.ToKubernetesClusterNodePoolLinuxOsConfigPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterNodePoolLinuxOsConfigPtrType) ToKubernetesClusterNodePoolLinuxOsConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolLinuxOsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolLinuxOsConfigPtrOutput)
}

type KubernetesClusterNodePoolLinuxOsConfigOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNodePoolLinuxOsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNodePoolLinuxOsConfig)(nil)).Elem()
}

func (o KubernetesClusterNodePoolLinuxOsConfigOutput) ToKubernetesClusterNodePoolLinuxOsConfigOutput() KubernetesClusterNodePoolLinuxOsConfigOutput {
	return o
}

func (o KubernetesClusterNodePoolLinuxOsConfigOutput) ToKubernetesClusterNodePoolLinuxOsConfigOutputWithContext(ctx context.Context) KubernetesClusterNodePoolLinuxOsConfigOutput {
	return o
}

func (o KubernetesClusterNodePoolLinuxOsConfigOutput) ToKubernetesClusterNodePoolLinuxOsConfigPtrOutput() KubernetesClusterNodePoolLinuxOsConfigPtrOutput {
	return o.ToKubernetesClusterNodePoolLinuxOsConfigPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterNodePoolLinuxOsConfigOutput) ToKubernetesClusterNodePoolLinuxOsConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolLinuxOsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterNodePoolLinuxOsConfig) *KubernetesClusterNodePoolLinuxOsConfig {
		return &v
	}).(KubernetesClusterNodePoolLinuxOsConfigPtrOutput)
}

// Specifies the size of swap file on each node in MB. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigOutput) SwapFileSizeMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfig) *int { return v.SwapFileSizeMb }).(pulumi.IntPtrOutput)
}

// A `sysctlConfig` block as defined below. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigOutput) SysctlConfig() KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfig) *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig {
		return v.SysctlConfig
	}).(KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput)
}

// specifies the defrag configuration for Transparent Huge Page. Possible values are `always`, `defer`, `defer+madvise`, `madvise` and `never`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigOutput) TransparentHugePageDefrag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfig) *string { return v.TransparentHugePageDefrag }).(pulumi.StringPtrOutput)
}

// Specifies the Transparent Huge Page enabled configuration. Possible values are `always`, `madvise` and `never`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigOutput) TransparentHugePageEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfig) *string { return v.TransparentHugePageEnabled }).(pulumi.StringPtrOutput)
}

type KubernetesClusterNodePoolLinuxOsConfigPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNodePoolLinuxOsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterNodePoolLinuxOsConfig)(nil)).Elem()
}

func (o KubernetesClusterNodePoolLinuxOsConfigPtrOutput) ToKubernetesClusterNodePoolLinuxOsConfigPtrOutput() KubernetesClusterNodePoolLinuxOsConfigPtrOutput {
	return o
}

func (o KubernetesClusterNodePoolLinuxOsConfigPtrOutput) ToKubernetesClusterNodePoolLinuxOsConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolLinuxOsConfigPtrOutput {
	return o
}

func (o KubernetesClusterNodePoolLinuxOsConfigPtrOutput) Elem() KubernetesClusterNodePoolLinuxOsConfigOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfig) KubernetesClusterNodePoolLinuxOsConfig {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterNodePoolLinuxOsConfig
		return ret
	}).(KubernetesClusterNodePoolLinuxOsConfigOutput)
}

// Specifies the size of swap file on each node in MB. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigPtrOutput) SwapFileSizeMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfig) *int {
		if v == nil {
			return nil
		}
		return v.SwapFileSizeMb
	}).(pulumi.IntPtrOutput)
}

// A `sysctlConfig` block as defined below. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigPtrOutput) SysctlConfig() KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfig) *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig {
		if v == nil {
			return nil
		}
		return v.SysctlConfig
	}).(KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput)
}

// specifies the defrag configuration for Transparent Huge Page. Possible values are `always`, `defer`, `defer+madvise`, `madvise` and `never`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigPtrOutput) TransparentHugePageDefrag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfig) *string {
		if v == nil {
			return nil
		}
		return v.TransparentHugePageDefrag
	}).(pulumi.StringPtrOutput)
}

// Specifies the Transparent Huge Page enabled configuration. Possible values are `always`, `madvise` and `never`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigPtrOutput) TransparentHugePageEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfig) *string {
		if v == nil {
			return nil
		}
		return v.TransparentHugePageEnabled
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterNodePoolLinuxOsConfigSysctlConfig struct {
	// The sysctl setting fs.aio-max-nr. Must be between `65536` and `6553500`. Changing this forces a new resource to be created.
	FsAioMaxNr *int `pulumi:"fsAioMaxNr"`
	// The sysctl setting fs.file-max. Must be between `8192` and `12000500`. Changing this forces a new resource to be created.
	FsFileMax *int `pulumi:"fsFileMax"`
	// The sysctl setting fs.inotify.max_user_watches. Must be between `781250` and `2097152`. Changing this forces a new resource to be created.
	FsInotifyMaxUserWatches *int `pulumi:"fsInotifyMaxUserWatches"`
	// The sysctl setting fs.nr_open. Must be between `8192` and `20000500`. Changing this forces a new resource to be created.
	FsNrOpen *int `pulumi:"fsNrOpen"`
	// The sysctl setting kernel.threads-max. Must be between `20` and `513785`. Changing this forces a new resource to be created.
	KernelThreadsMax *int `pulumi:"kernelThreadsMax"`
	// The sysctl setting net.core.netdev_max_backlog. Must be between `1000` and `3240000`. Changing this forces a new resource to be created.
	NetCoreNetdevMaxBacklog *int `pulumi:"netCoreNetdevMaxBacklog"`
	// The sysctl setting net.core.optmem_max. Must be between `20480` and `4194304`. Changing this forces a new resource to be created.
	NetCoreOptmemMax *int `pulumi:"netCoreOptmemMax"`
	// The sysctl setting net.core.rmem_default. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
	NetCoreRmemDefault *int `pulumi:"netCoreRmemDefault"`
	// The sysctl setting net.core.rmem_max. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
	NetCoreRmemMax *int `pulumi:"netCoreRmemMax"`
	// The sysctl setting net.core.somaxconn. Must be between `4096` and `3240000`. Changing this forces a new resource to be created.
	NetCoreSomaxconn *int `pulumi:"netCoreSomaxconn"`
	// The sysctl setting net.core.wmem_default. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
	NetCoreWmemDefault *int `pulumi:"netCoreWmemDefault"`
	// The sysctl setting net.core.wmem_max. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
	NetCoreWmemMax *int `pulumi:"netCoreWmemMax"`
	// The sysctl setting net.ipv4.ip_local_port_range max value. Must be between `32768` and `65535`. Changing this forces a new resource to be created.
	NetIpv4IpLocalPortRangeMax *int `pulumi:"netIpv4IpLocalPortRangeMax"`
	// The sysctl setting net.ipv4.ip_local_port_range min value. Must be between `1024` and `60999`. Changing this forces a new resource to be created.
	NetIpv4IpLocalPortRangeMin *int `pulumi:"netIpv4IpLocalPortRangeMin"`
	// The sysctl setting net.ipv4.neigh.default.gc_thresh1. Must be between `128` and `80000`. Changing this forces a new resource to be created.
	NetIpv4NeighDefaultGcThresh1 *int `pulumi:"netIpv4NeighDefaultGcThresh1"`
	// The sysctl setting net.ipv4.neigh.default.gc_thresh2. Must be between `512` and `90000`. Changing this forces a new resource to be created.
	NetIpv4NeighDefaultGcThresh2 *int `pulumi:"netIpv4NeighDefaultGcThresh2"`
	// The sysctl setting net.ipv4.neigh.default.gc_thresh3. Must be between `1024` and `100000`. Changing this forces a new resource to be created.
	NetIpv4NeighDefaultGcThresh3 *int `pulumi:"netIpv4NeighDefaultGcThresh3"`
	// The sysctl setting net.ipv4.tcp_fin_timeout. Must be between `5` and `120`. Changing this forces a new resource to be created.
	NetIpv4TcpFinTimeout *int `pulumi:"netIpv4TcpFinTimeout"`
	// The sysctl setting net.ipv4.tcp_keepalive_intvl. Must be between `10` and `90`. Changing this forces a new resource to be created.
	NetIpv4TcpKeepaliveIntvl *int `pulumi:"netIpv4TcpKeepaliveIntvl"`
	// The sysctl setting net.ipv4.tcp_keepalive_probes. Must be between `1` and `15`. Changing this forces a new resource to be created.
	NetIpv4TcpKeepaliveProbes *int `pulumi:"netIpv4TcpKeepaliveProbes"`
	// The sysctl setting net.ipv4.tcp_keepalive_time. Must be between `30` and `432000`. Changing this forces a new resource to be created.
	NetIpv4TcpKeepaliveTime *int `pulumi:"netIpv4TcpKeepaliveTime"`
	// The sysctl setting net.ipv4.tcp_max_syn_backlog. Must be between `128` and `3240000`. Changing this forces a new resource to be created.
	NetIpv4TcpMaxSynBacklog *int `pulumi:"netIpv4TcpMaxSynBacklog"`
	// The sysctl setting net.ipv4.tcp_max_tw_buckets. Must be between `8000` and `1440000`. Changing this forces a new resource to be created.
	NetIpv4TcpMaxTwBuckets *int `pulumi:"netIpv4TcpMaxTwBuckets"`
	// Is sysctl setting net.ipv4.tcp_tw_reuse enabled? Changing this forces a new resource to be created.
	NetIpv4TcpTwReuse *bool `pulumi:"netIpv4TcpTwReuse"`
	// The sysctl setting net.netfilter.nf_conntrack_buckets. Must be between `65536` and `524288`. Changing this forces a new resource to be created.
	NetNetfilterNfConntrackBuckets *int `pulumi:"netNetfilterNfConntrackBuckets"`
	// The sysctl setting net.netfilter.nf_conntrack_max. Must be between `131072` and `2097152`. Changing this forces a new resource to be created.
	NetNetfilterNfConntrackMax *int `pulumi:"netNetfilterNfConntrackMax"`
	// The sysctl setting vm.max_map_count. Must be between `65530` and `262144`. Changing this forces a new resource to be created.
	VmMaxMapCount *int `pulumi:"vmMaxMapCount"`
	// The sysctl setting vm.swappiness. Must be between `0` and `100`. Changing this forces a new resource to be created.
	VmSwappiness *int `pulumi:"vmSwappiness"`
	// The sysctl setting vm.vfs_cache_pressure. Must be between `0` and `100`. Changing this forces a new resource to be created.
	VmVfsCachePressure *int `pulumi:"vmVfsCachePressure"`
}

// KubernetesClusterNodePoolLinuxOsConfigSysctlConfigInput is an input type that accepts KubernetesClusterNodePoolLinuxOsConfigSysctlConfigArgs and KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput values.
// You can construct a concrete instance of `KubernetesClusterNodePoolLinuxOsConfigSysctlConfigInput` via:
//
//	KubernetesClusterNodePoolLinuxOsConfigSysctlConfigArgs{...}
type KubernetesClusterNodePoolLinuxOsConfigSysctlConfigInput interface {
	pulumi.Input

	ToKubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput() KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput
	ToKubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutputWithContext(context.Context) KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput
}

type KubernetesClusterNodePoolLinuxOsConfigSysctlConfigArgs struct {
	// The sysctl setting fs.aio-max-nr. Must be between `65536` and `6553500`. Changing this forces a new resource to be created.
	FsAioMaxNr pulumi.IntPtrInput `pulumi:"fsAioMaxNr"`
	// The sysctl setting fs.file-max. Must be between `8192` and `12000500`. Changing this forces a new resource to be created.
	FsFileMax pulumi.IntPtrInput `pulumi:"fsFileMax"`
	// The sysctl setting fs.inotify.max_user_watches. Must be between `781250` and `2097152`. Changing this forces a new resource to be created.
	FsInotifyMaxUserWatches pulumi.IntPtrInput `pulumi:"fsInotifyMaxUserWatches"`
	// The sysctl setting fs.nr_open. Must be between `8192` and `20000500`. Changing this forces a new resource to be created.
	FsNrOpen pulumi.IntPtrInput `pulumi:"fsNrOpen"`
	// The sysctl setting kernel.threads-max. Must be between `20` and `513785`. Changing this forces a new resource to be created.
	KernelThreadsMax pulumi.IntPtrInput `pulumi:"kernelThreadsMax"`
	// The sysctl setting net.core.netdev_max_backlog. Must be between `1000` and `3240000`. Changing this forces a new resource to be created.
	NetCoreNetdevMaxBacklog pulumi.IntPtrInput `pulumi:"netCoreNetdevMaxBacklog"`
	// The sysctl setting net.core.optmem_max. Must be between `20480` and `4194304`. Changing this forces a new resource to be created.
	NetCoreOptmemMax pulumi.IntPtrInput `pulumi:"netCoreOptmemMax"`
	// The sysctl setting net.core.rmem_default. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
	NetCoreRmemDefault pulumi.IntPtrInput `pulumi:"netCoreRmemDefault"`
	// The sysctl setting net.core.rmem_max. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
	NetCoreRmemMax pulumi.IntPtrInput `pulumi:"netCoreRmemMax"`
	// The sysctl setting net.core.somaxconn. Must be between `4096` and `3240000`. Changing this forces a new resource to be created.
	NetCoreSomaxconn pulumi.IntPtrInput `pulumi:"netCoreSomaxconn"`
	// The sysctl setting net.core.wmem_default. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
	NetCoreWmemDefault pulumi.IntPtrInput `pulumi:"netCoreWmemDefault"`
	// The sysctl setting net.core.wmem_max. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
	NetCoreWmemMax pulumi.IntPtrInput `pulumi:"netCoreWmemMax"`
	// The sysctl setting net.ipv4.ip_local_port_range max value. Must be between `32768` and `65535`. Changing this forces a new resource to be created.
	NetIpv4IpLocalPortRangeMax pulumi.IntPtrInput `pulumi:"netIpv4IpLocalPortRangeMax"`
	// The sysctl setting net.ipv4.ip_local_port_range min value. Must be between `1024` and `60999`. Changing this forces a new resource to be created.
	NetIpv4IpLocalPortRangeMin pulumi.IntPtrInput `pulumi:"netIpv4IpLocalPortRangeMin"`
	// The sysctl setting net.ipv4.neigh.default.gc_thresh1. Must be between `128` and `80000`. Changing this forces a new resource to be created.
	NetIpv4NeighDefaultGcThresh1 pulumi.IntPtrInput `pulumi:"netIpv4NeighDefaultGcThresh1"`
	// The sysctl setting net.ipv4.neigh.default.gc_thresh2. Must be between `512` and `90000`. Changing this forces a new resource to be created.
	NetIpv4NeighDefaultGcThresh2 pulumi.IntPtrInput `pulumi:"netIpv4NeighDefaultGcThresh2"`
	// The sysctl setting net.ipv4.neigh.default.gc_thresh3. Must be between `1024` and `100000`. Changing this forces a new resource to be created.
	NetIpv4NeighDefaultGcThresh3 pulumi.IntPtrInput `pulumi:"netIpv4NeighDefaultGcThresh3"`
	// The sysctl setting net.ipv4.tcp_fin_timeout. Must be between `5` and `120`. Changing this forces a new resource to be created.
	NetIpv4TcpFinTimeout pulumi.IntPtrInput `pulumi:"netIpv4TcpFinTimeout"`
	// The sysctl setting net.ipv4.tcp_keepalive_intvl. Must be between `10` and `90`. Changing this forces a new resource to be created.
	NetIpv4TcpKeepaliveIntvl pulumi.IntPtrInput `pulumi:"netIpv4TcpKeepaliveIntvl"`
	// The sysctl setting net.ipv4.tcp_keepalive_probes. Must be between `1` and `15`. Changing this forces a new resource to be created.
	NetIpv4TcpKeepaliveProbes pulumi.IntPtrInput `pulumi:"netIpv4TcpKeepaliveProbes"`
	// The sysctl setting net.ipv4.tcp_keepalive_time. Must be between `30` and `432000`. Changing this forces a new resource to be created.
	NetIpv4TcpKeepaliveTime pulumi.IntPtrInput `pulumi:"netIpv4TcpKeepaliveTime"`
	// The sysctl setting net.ipv4.tcp_max_syn_backlog. Must be between `128` and `3240000`. Changing this forces a new resource to be created.
	NetIpv4TcpMaxSynBacklog pulumi.IntPtrInput `pulumi:"netIpv4TcpMaxSynBacklog"`
	// The sysctl setting net.ipv4.tcp_max_tw_buckets. Must be between `8000` and `1440000`. Changing this forces a new resource to be created.
	NetIpv4TcpMaxTwBuckets pulumi.IntPtrInput `pulumi:"netIpv4TcpMaxTwBuckets"`
	// Is sysctl setting net.ipv4.tcp_tw_reuse enabled? Changing this forces a new resource to be created.
	NetIpv4TcpTwReuse pulumi.BoolPtrInput `pulumi:"netIpv4TcpTwReuse"`
	// The sysctl setting net.netfilter.nf_conntrack_buckets. Must be between `65536` and `524288`. Changing this forces a new resource to be created.
	NetNetfilterNfConntrackBuckets pulumi.IntPtrInput `pulumi:"netNetfilterNfConntrackBuckets"`
	// The sysctl setting net.netfilter.nf_conntrack_max. Must be between `131072` and `2097152`. Changing this forces a new resource to be created.
	NetNetfilterNfConntrackMax pulumi.IntPtrInput `pulumi:"netNetfilterNfConntrackMax"`
	// The sysctl setting vm.max_map_count. Must be between `65530` and `262144`. Changing this forces a new resource to be created.
	VmMaxMapCount pulumi.IntPtrInput `pulumi:"vmMaxMapCount"`
	// The sysctl setting vm.swappiness. Must be between `0` and `100`. Changing this forces a new resource to be created.
	VmSwappiness pulumi.IntPtrInput `pulumi:"vmSwappiness"`
	// The sysctl setting vm.vfs_cache_pressure. Must be between `0` and `100`. Changing this forces a new resource to be created.
	VmVfsCachePressure pulumi.IntPtrInput `pulumi:"vmVfsCachePressure"`
}

func (KubernetesClusterNodePoolLinuxOsConfigSysctlConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNodePoolLinuxOsConfigSysctlConfig)(nil)).Elem()
}

func (i KubernetesClusterNodePoolLinuxOsConfigSysctlConfigArgs) ToKubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput() KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput {
	return i.ToKubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutputWithContext(context.Background())
}

func (i KubernetesClusterNodePoolLinuxOsConfigSysctlConfigArgs) ToKubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutputWithContext(ctx context.Context) KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput)
}

func (i KubernetesClusterNodePoolLinuxOsConfigSysctlConfigArgs) ToKubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput() KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput {
	return i.ToKubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterNodePoolLinuxOsConfigSysctlConfigArgs) ToKubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput).ToKubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutputWithContext(ctx)
}

// KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrInput is an input type that accepts KubernetesClusterNodePoolLinuxOsConfigSysctlConfigArgs, KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtr and KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrInput` via:
//
//	        KubernetesClusterNodePoolLinuxOsConfigSysctlConfigArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrInput interface {
	pulumi.Input

	ToKubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput() KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput
	ToKubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutputWithContext(context.Context) KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput
}

type kubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrType KubernetesClusterNodePoolLinuxOsConfigSysctlConfigArgs

func KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtr(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfigArgs) KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrInput {
	return (*kubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrType)(v)
}

func (*kubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterNodePoolLinuxOsConfigSysctlConfig)(nil)).Elem()
}

func (i *kubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrType) ToKubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput() KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput {
	return i.ToKubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrType) ToKubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput)
}

type KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNodePoolLinuxOsConfigSysctlConfig)(nil)).Elem()
}

func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) ToKubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput() KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput {
	return o
}

func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) ToKubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutputWithContext(ctx context.Context) KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput {
	return o
}

func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) ToKubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput() KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput {
	return o.ToKubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) ToKubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig {
		return &v
	}).(KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput)
}

// The sysctl setting fs.aio-max-nr. Must be between `65536` and `6553500`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) FsAioMaxNr() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int { return v.FsAioMaxNr }).(pulumi.IntPtrOutput)
}

// The sysctl setting fs.file-max. Must be between `8192` and `12000500`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) FsFileMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int { return v.FsFileMax }).(pulumi.IntPtrOutput)
}

// The sysctl setting fs.inotify.max_user_watches. Must be between `781250` and `2097152`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) FsInotifyMaxUserWatches() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int { return v.FsInotifyMaxUserWatches }).(pulumi.IntPtrOutput)
}

// The sysctl setting fs.nr_open. Must be between `8192` and `20000500`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) FsNrOpen() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int { return v.FsNrOpen }).(pulumi.IntPtrOutput)
}

// The sysctl setting kernel.threads-max. Must be between `20` and `513785`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) KernelThreadsMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int { return v.KernelThreadsMax }).(pulumi.IntPtrOutput)
}

// The sysctl setting net.core.netdev_max_backlog. Must be between `1000` and `3240000`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) NetCoreNetdevMaxBacklog() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int { return v.NetCoreNetdevMaxBacklog }).(pulumi.IntPtrOutput)
}

// The sysctl setting net.core.optmem_max. Must be between `20480` and `4194304`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) NetCoreOptmemMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int { return v.NetCoreOptmemMax }).(pulumi.IntPtrOutput)
}

// The sysctl setting net.core.rmem_default. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) NetCoreRmemDefault() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int { return v.NetCoreRmemDefault }).(pulumi.IntPtrOutput)
}

// The sysctl setting net.core.rmem_max. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) NetCoreRmemMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int { return v.NetCoreRmemMax }).(pulumi.IntPtrOutput)
}

// The sysctl setting net.core.somaxconn. Must be between `4096` and `3240000`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) NetCoreSomaxconn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int { return v.NetCoreSomaxconn }).(pulumi.IntPtrOutput)
}

// The sysctl setting net.core.wmem_default. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) NetCoreWmemDefault() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int { return v.NetCoreWmemDefault }).(pulumi.IntPtrOutput)
}

// The sysctl setting net.core.wmem_max. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) NetCoreWmemMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int { return v.NetCoreWmemMax }).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.ip_local_port_range max value. Must be between `32768` and `65535`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) NetIpv4IpLocalPortRangeMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int { return v.NetIpv4IpLocalPortRangeMax }).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.ip_local_port_range min value. Must be between `1024` and `60999`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) NetIpv4IpLocalPortRangeMin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int { return v.NetIpv4IpLocalPortRangeMin }).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.neigh.default.gc_thresh1. Must be between `128` and `80000`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) NetIpv4NeighDefaultGcThresh1() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int { return v.NetIpv4NeighDefaultGcThresh1 }).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.neigh.default.gc_thresh2. Must be between `512` and `90000`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) NetIpv4NeighDefaultGcThresh2() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int { return v.NetIpv4NeighDefaultGcThresh2 }).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.neigh.default.gc_thresh3. Must be between `1024` and `100000`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) NetIpv4NeighDefaultGcThresh3() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int { return v.NetIpv4NeighDefaultGcThresh3 }).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.tcp_fin_timeout. Must be between `5` and `120`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) NetIpv4TcpFinTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int { return v.NetIpv4TcpFinTimeout }).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.tcp_keepalive_intvl. Must be between `10` and `90`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) NetIpv4TcpKeepaliveIntvl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int { return v.NetIpv4TcpKeepaliveIntvl }).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.tcp_keepalive_probes. Must be between `1` and `15`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) NetIpv4TcpKeepaliveProbes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int { return v.NetIpv4TcpKeepaliveProbes }).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.tcp_keepalive_time. Must be between `30` and `432000`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) NetIpv4TcpKeepaliveTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int { return v.NetIpv4TcpKeepaliveTime }).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.tcp_max_syn_backlog. Must be between `128` and `3240000`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) NetIpv4TcpMaxSynBacklog() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int { return v.NetIpv4TcpMaxSynBacklog }).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.tcp_max_tw_buckets. Must be between `8000` and `1440000`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) NetIpv4TcpMaxTwBuckets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int { return v.NetIpv4TcpMaxTwBuckets }).(pulumi.IntPtrOutput)
}

// Is sysctl setting net.ipv4.tcp_tw_reuse enabled? Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) NetIpv4TcpTwReuse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *bool { return v.NetIpv4TcpTwReuse }).(pulumi.BoolPtrOutput)
}

// The sysctl setting net.netfilter.nf_conntrack_buckets. Must be between `65536` and `524288`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) NetNetfilterNfConntrackBuckets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int {
		return v.NetNetfilterNfConntrackBuckets
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.netfilter.nf_conntrack_max. Must be between `131072` and `2097152`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) NetNetfilterNfConntrackMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int { return v.NetNetfilterNfConntrackMax }).(pulumi.IntPtrOutput)
}

// The sysctl setting vm.max_map_count. Must be between `65530` and `262144`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) VmMaxMapCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int { return v.VmMaxMapCount }).(pulumi.IntPtrOutput)
}

// The sysctl setting vm.swappiness. Must be between `0` and `100`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) VmSwappiness() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int { return v.VmSwappiness }).(pulumi.IntPtrOutput)
}

// The sysctl setting vm.vfs_cache_pressure. Must be between `0` and `100`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput) VmVfsCachePressure() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int { return v.VmVfsCachePressure }).(pulumi.IntPtrOutput)
}

type KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterNodePoolLinuxOsConfigSysctlConfig)(nil)).Elem()
}

func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) ToKubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput() KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput {
	return o
}

func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) ToKubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput {
	return o
}

func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) Elem() KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) KubernetesClusterNodePoolLinuxOsConfigSysctlConfig {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterNodePoolLinuxOsConfigSysctlConfig
		return ret
	}).(KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput)
}

// The sysctl setting fs.aio-max-nr. Must be between `65536` and `6553500`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) FsAioMaxNr() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.FsAioMaxNr
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting fs.file-max. Must be between `8192` and `12000500`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) FsFileMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.FsFileMax
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting fs.inotify.max_user_watches. Must be between `781250` and `2097152`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) FsInotifyMaxUserWatches() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.FsInotifyMaxUserWatches
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting fs.nr_open. Must be between `8192` and `20000500`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) FsNrOpen() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.FsNrOpen
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting kernel.threads-max. Must be between `20` and `513785`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) KernelThreadsMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.KernelThreadsMax
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.core.netdev_max_backlog. Must be between `1000` and `3240000`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetCoreNetdevMaxBacklog() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetCoreNetdevMaxBacklog
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.core.optmem_max. Must be between `20480` and `4194304`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetCoreOptmemMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetCoreOptmemMax
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.core.rmem_default. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetCoreRmemDefault() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetCoreRmemDefault
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.core.rmem_max. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetCoreRmemMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetCoreRmemMax
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.core.somaxconn. Must be between `4096` and `3240000`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetCoreSomaxconn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetCoreSomaxconn
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.core.wmem_default. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetCoreWmemDefault() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetCoreWmemDefault
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.core.wmem_max. Must be between `212992` and `134217728`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetCoreWmemMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetCoreWmemMax
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.ip_local_port_range max value. Must be between `32768` and `65535`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetIpv4IpLocalPortRangeMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4IpLocalPortRangeMax
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.ip_local_port_range min value. Must be between `1024` and `60999`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetIpv4IpLocalPortRangeMin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4IpLocalPortRangeMin
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.neigh.default.gc_thresh1. Must be between `128` and `80000`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetIpv4NeighDefaultGcThresh1() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4NeighDefaultGcThresh1
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.neigh.default.gc_thresh2. Must be between `512` and `90000`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetIpv4NeighDefaultGcThresh2() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4NeighDefaultGcThresh2
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.neigh.default.gc_thresh3. Must be between `1024` and `100000`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetIpv4NeighDefaultGcThresh3() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4NeighDefaultGcThresh3
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.tcp_fin_timeout. Must be between `5` and `120`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetIpv4TcpFinTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4TcpFinTimeout
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.tcp_keepalive_intvl. Must be between `10` and `90`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetIpv4TcpKeepaliveIntvl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4TcpKeepaliveIntvl
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.tcp_keepalive_probes. Must be between `1` and `15`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetIpv4TcpKeepaliveProbes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4TcpKeepaliveProbes
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.tcp_keepalive_time. Must be between `30` and `432000`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetIpv4TcpKeepaliveTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4TcpKeepaliveTime
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.tcp_max_syn_backlog. Must be between `128` and `3240000`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetIpv4TcpMaxSynBacklog() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4TcpMaxSynBacklog
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.ipv4.tcp_max_tw_buckets. Must be between `8000` and `1440000`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetIpv4TcpMaxTwBuckets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4TcpMaxTwBuckets
	}).(pulumi.IntPtrOutput)
}

// Is sysctl setting net.ipv4.tcp_tw_reuse enabled? Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetIpv4TcpTwReuse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *bool {
		if v == nil {
			return nil
		}
		return v.NetIpv4TcpTwReuse
	}).(pulumi.BoolPtrOutput)
}

// The sysctl setting net.netfilter.nf_conntrack_buckets. Must be between `65536` and `524288`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetNetfilterNfConntrackBuckets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetNetfilterNfConntrackBuckets
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting net.netfilter.nf_conntrack_max. Must be between `131072` and `2097152`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) NetNetfilterNfConntrackMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetNetfilterNfConntrackMax
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting vm.max_map_count. Must be between `65530` and `262144`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) VmMaxMapCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.VmMaxMapCount
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting vm.swappiness. Must be between `0` and `100`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) VmSwappiness() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.VmSwappiness
	}).(pulumi.IntPtrOutput)
}

// The sysctl setting vm.vfs_cache_pressure. Must be between `0` and `100`. Changing this forces a new resource to be created.
func (o KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput) VmVfsCachePressure() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolLinuxOsConfigSysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.VmVfsCachePressure
	}).(pulumi.IntPtrOutput)
}

type KubernetesClusterNodePoolNodeNetworkProfile struct {
	// Specifies a mapping of tags to the instance-level public IPs. Changing this forces a new resource to be created.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/NodePublicIPTagsPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/azure/aks/use-node-public-ips#use-public-ip-tags-on-node-public-ips-preview) for more information.
	NodePublicIpTags map[string]string `pulumi:"nodePublicIpTags"`
}

// KubernetesClusterNodePoolNodeNetworkProfileInput is an input type that accepts KubernetesClusterNodePoolNodeNetworkProfileArgs and KubernetesClusterNodePoolNodeNetworkProfileOutput values.
// You can construct a concrete instance of `KubernetesClusterNodePoolNodeNetworkProfileInput` via:
//
//	KubernetesClusterNodePoolNodeNetworkProfileArgs{...}
type KubernetesClusterNodePoolNodeNetworkProfileInput interface {
	pulumi.Input

	ToKubernetesClusterNodePoolNodeNetworkProfileOutput() KubernetesClusterNodePoolNodeNetworkProfileOutput
	ToKubernetesClusterNodePoolNodeNetworkProfileOutputWithContext(context.Context) KubernetesClusterNodePoolNodeNetworkProfileOutput
}

type KubernetesClusterNodePoolNodeNetworkProfileArgs struct {
	// Specifies a mapping of tags to the instance-level public IPs. Changing this forces a new resource to be created.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/NodePublicIPTagsPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/azure/aks/use-node-public-ips#use-public-ip-tags-on-node-public-ips-preview) for more information.
	NodePublicIpTags pulumi.StringMapInput `pulumi:"nodePublicIpTags"`
}

func (KubernetesClusterNodePoolNodeNetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNodePoolNodeNetworkProfile)(nil)).Elem()
}

func (i KubernetesClusterNodePoolNodeNetworkProfileArgs) ToKubernetesClusterNodePoolNodeNetworkProfileOutput() KubernetesClusterNodePoolNodeNetworkProfileOutput {
	return i.ToKubernetesClusterNodePoolNodeNetworkProfileOutputWithContext(context.Background())
}

func (i KubernetesClusterNodePoolNodeNetworkProfileArgs) ToKubernetesClusterNodePoolNodeNetworkProfileOutputWithContext(ctx context.Context) KubernetesClusterNodePoolNodeNetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolNodeNetworkProfileOutput)
}

func (i KubernetesClusterNodePoolNodeNetworkProfileArgs) ToKubernetesClusterNodePoolNodeNetworkProfilePtrOutput() KubernetesClusterNodePoolNodeNetworkProfilePtrOutput {
	return i.ToKubernetesClusterNodePoolNodeNetworkProfilePtrOutputWithContext(context.Background())
}

func (i KubernetesClusterNodePoolNodeNetworkProfileArgs) ToKubernetesClusterNodePoolNodeNetworkProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolNodeNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolNodeNetworkProfileOutput).ToKubernetesClusterNodePoolNodeNetworkProfilePtrOutputWithContext(ctx)
}

// KubernetesClusterNodePoolNodeNetworkProfilePtrInput is an input type that accepts KubernetesClusterNodePoolNodeNetworkProfileArgs, KubernetesClusterNodePoolNodeNetworkProfilePtr and KubernetesClusterNodePoolNodeNetworkProfilePtrOutput values.
// You can construct a concrete instance of `KubernetesClusterNodePoolNodeNetworkProfilePtrInput` via:
//
//	        KubernetesClusterNodePoolNodeNetworkProfileArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterNodePoolNodeNetworkProfilePtrInput interface {
	pulumi.Input

	ToKubernetesClusterNodePoolNodeNetworkProfilePtrOutput() KubernetesClusterNodePoolNodeNetworkProfilePtrOutput
	ToKubernetesClusterNodePoolNodeNetworkProfilePtrOutputWithContext(context.Context) KubernetesClusterNodePoolNodeNetworkProfilePtrOutput
}

type kubernetesClusterNodePoolNodeNetworkProfilePtrType KubernetesClusterNodePoolNodeNetworkProfileArgs

func KubernetesClusterNodePoolNodeNetworkProfilePtr(v *KubernetesClusterNodePoolNodeNetworkProfileArgs) KubernetesClusterNodePoolNodeNetworkProfilePtrInput {
	return (*kubernetesClusterNodePoolNodeNetworkProfilePtrType)(v)
}

func (*kubernetesClusterNodePoolNodeNetworkProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterNodePoolNodeNetworkProfile)(nil)).Elem()
}

func (i *kubernetesClusterNodePoolNodeNetworkProfilePtrType) ToKubernetesClusterNodePoolNodeNetworkProfilePtrOutput() KubernetesClusterNodePoolNodeNetworkProfilePtrOutput {
	return i.ToKubernetesClusterNodePoolNodeNetworkProfilePtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterNodePoolNodeNetworkProfilePtrType) ToKubernetesClusterNodePoolNodeNetworkProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolNodeNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolNodeNetworkProfilePtrOutput)
}

type KubernetesClusterNodePoolNodeNetworkProfileOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNodePoolNodeNetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNodePoolNodeNetworkProfile)(nil)).Elem()
}

func (o KubernetesClusterNodePoolNodeNetworkProfileOutput) ToKubernetesClusterNodePoolNodeNetworkProfileOutput() KubernetesClusterNodePoolNodeNetworkProfileOutput {
	return o
}

func (o KubernetesClusterNodePoolNodeNetworkProfileOutput) ToKubernetesClusterNodePoolNodeNetworkProfileOutputWithContext(ctx context.Context) KubernetesClusterNodePoolNodeNetworkProfileOutput {
	return o
}

func (o KubernetesClusterNodePoolNodeNetworkProfileOutput) ToKubernetesClusterNodePoolNodeNetworkProfilePtrOutput() KubernetesClusterNodePoolNodeNetworkProfilePtrOutput {
	return o.ToKubernetesClusterNodePoolNodeNetworkProfilePtrOutputWithContext(context.Background())
}

func (o KubernetesClusterNodePoolNodeNetworkProfileOutput) ToKubernetesClusterNodePoolNodeNetworkProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolNodeNetworkProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterNodePoolNodeNetworkProfile) *KubernetesClusterNodePoolNodeNetworkProfile {
		return &v
	}).(KubernetesClusterNodePoolNodeNetworkProfilePtrOutput)
}

// Specifies a mapping of tags to the instance-level public IPs. Changing this forces a new resource to be created.
//
// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/NodePublicIPTagsPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/azure/aks/use-node-public-ips#use-public-ip-tags-on-node-public-ips-preview) for more information.
func (o KubernetesClusterNodePoolNodeNetworkProfileOutput) NodePublicIpTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolNodeNetworkProfile) map[string]string { return v.NodePublicIpTags }).(pulumi.StringMapOutput)
}

type KubernetesClusterNodePoolNodeNetworkProfilePtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNodePoolNodeNetworkProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterNodePoolNodeNetworkProfile)(nil)).Elem()
}

func (o KubernetesClusterNodePoolNodeNetworkProfilePtrOutput) ToKubernetesClusterNodePoolNodeNetworkProfilePtrOutput() KubernetesClusterNodePoolNodeNetworkProfilePtrOutput {
	return o
}

func (o KubernetesClusterNodePoolNodeNetworkProfilePtrOutput) ToKubernetesClusterNodePoolNodeNetworkProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolNodeNetworkProfilePtrOutput {
	return o
}

func (o KubernetesClusterNodePoolNodeNetworkProfilePtrOutput) Elem() KubernetesClusterNodePoolNodeNetworkProfileOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolNodeNetworkProfile) KubernetesClusterNodePoolNodeNetworkProfile {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterNodePoolNodeNetworkProfile
		return ret
	}).(KubernetesClusterNodePoolNodeNetworkProfileOutput)
}

// Specifies a mapping of tags to the instance-level public IPs. Changing this forces a new resource to be created.
//
// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/NodePublicIPTagsPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/azure/aks/use-node-public-ips#use-public-ip-tags-on-node-public-ips-preview) for more information.
func (o KubernetesClusterNodePoolNodeNetworkProfilePtrOutput) NodePublicIpTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolNodeNetworkProfile) map[string]string {
		if v == nil {
			return nil
		}
		return v.NodePublicIpTags
	}).(pulumi.StringMapOutput)
}

type KubernetesClusterNodePoolUpgradeSettings struct {
	// The maximum number or percentage of nodes which will be added to the Node Pool size during an upgrade.
	MaxSurge string `pulumi:"maxSurge"`
}

// KubernetesClusterNodePoolUpgradeSettingsInput is an input type that accepts KubernetesClusterNodePoolUpgradeSettingsArgs and KubernetesClusterNodePoolUpgradeSettingsOutput values.
// You can construct a concrete instance of `KubernetesClusterNodePoolUpgradeSettingsInput` via:
//
//	KubernetesClusterNodePoolUpgradeSettingsArgs{...}
type KubernetesClusterNodePoolUpgradeSettingsInput interface {
	pulumi.Input

	ToKubernetesClusterNodePoolUpgradeSettingsOutput() KubernetesClusterNodePoolUpgradeSettingsOutput
	ToKubernetesClusterNodePoolUpgradeSettingsOutputWithContext(context.Context) KubernetesClusterNodePoolUpgradeSettingsOutput
}

type KubernetesClusterNodePoolUpgradeSettingsArgs struct {
	// The maximum number or percentage of nodes which will be added to the Node Pool size during an upgrade.
	MaxSurge pulumi.StringInput `pulumi:"maxSurge"`
}

func (KubernetesClusterNodePoolUpgradeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNodePoolUpgradeSettings)(nil)).Elem()
}

func (i KubernetesClusterNodePoolUpgradeSettingsArgs) ToKubernetesClusterNodePoolUpgradeSettingsOutput() KubernetesClusterNodePoolUpgradeSettingsOutput {
	return i.ToKubernetesClusterNodePoolUpgradeSettingsOutputWithContext(context.Background())
}

func (i KubernetesClusterNodePoolUpgradeSettingsArgs) ToKubernetesClusterNodePoolUpgradeSettingsOutputWithContext(ctx context.Context) KubernetesClusterNodePoolUpgradeSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolUpgradeSettingsOutput)
}

func (i KubernetesClusterNodePoolUpgradeSettingsArgs) ToKubernetesClusterNodePoolUpgradeSettingsPtrOutput() KubernetesClusterNodePoolUpgradeSettingsPtrOutput {
	return i.ToKubernetesClusterNodePoolUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterNodePoolUpgradeSettingsArgs) ToKubernetesClusterNodePoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolUpgradeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolUpgradeSettingsOutput).ToKubernetesClusterNodePoolUpgradeSettingsPtrOutputWithContext(ctx)
}

// KubernetesClusterNodePoolUpgradeSettingsPtrInput is an input type that accepts KubernetesClusterNodePoolUpgradeSettingsArgs, KubernetesClusterNodePoolUpgradeSettingsPtr and KubernetesClusterNodePoolUpgradeSettingsPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterNodePoolUpgradeSettingsPtrInput` via:
//
//	        KubernetesClusterNodePoolUpgradeSettingsArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterNodePoolUpgradeSettingsPtrInput interface {
	pulumi.Input

	ToKubernetesClusterNodePoolUpgradeSettingsPtrOutput() KubernetesClusterNodePoolUpgradeSettingsPtrOutput
	ToKubernetesClusterNodePoolUpgradeSettingsPtrOutputWithContext(context.Context) KubernetesClusterNodePoolUpgradeSettingsPtrOutput
}

type kubernetesClusterNodePoolUpgradeSettingsPtrType KubernetesClusterNodePoolUpgradeSettingsArgs

func KubernetesClusterNodePoolUpgradeSettingsPtr(v *KubernetesClusterNodePoolUpgradeSettingsArgs) KubernetesClusterNodePoolUpgradeSettingsPtrInput {
	return (*kubernetesClusterNodePoolUpgradeSettingsPtrType)(v)
}

func (*kubernetesClusterNodePoolUpgradeSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterNodePoolUpgradeSettings)(nil)).Elem()
}

func (i *kubernetesClusterNodePoolUpgradeSettingsPtrType) ToKubernetesClusterNodePoolUpgradeSettingsPtrOutput() KubernetesClusterNodePoolUpgradeSettingsPtrOutput {
	return i.ToKubernetesClusterNodePoolUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterNodePoolUpgradeSettingsPtrType) ToKubernetesClusterNodePoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolUpgradeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolUpgradeSettingsPtrOutput)
}

type KubernetesClusterNodePoolUpgradeSettingsOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNodePoolUpgradeSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNodePoolUpgradeSettings)(nil)).Elem()
}

func (o KubernetesClusterNodePoolUpgradeSettingsOutput) ToKubernetesClusterNodePoolUpgradeSettingsOutput() KubernetesClusterNodePoolUpgradeSettingsOutput {
	return o
}

func (o KubernetesClusterNodePoolUpgradeSettingsOutput) ToKubernetesClusterNodePoolUpgradeSettingsOutputWithContext(ctx context.Context) KubernetesClusterNodePoolUpgradeSettingsOutput {
	return o
}

func (o KubernetesClusterNodePoolUpgradeSettingsOutput) ToKubernetesClusterNodePoolUpgradeSettingsPtrOutput() KubernetesClusterNodePoolUpgradeSettingsPtrOutput {
	return o.ToKubernetesClusterNodePoolUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterNodePoolUpgradeSettingsOutput) ToKubernetesClusterNodePoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolUpgradeSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterNodePoolUpgradeSettings) *KubernetesClusterNodePoolUpgradeSettings {
		return &v
	}).(KubernetesClusterNodePoolUpgradeSettingsPtrOutput)
}

// The maximum number or percentage of nodes which will be added to the Node Pool size during an upgrade.
func (o KubernetesClusterNodePoolUpgradeSettingsOutput) MaxSurge() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolUpgradeSettings) string { return v.MaxSurge }).(pulumi.StringOutput)
}

type KubernetesClusterNodePoolUpgradeSettingsPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNodePoolUpgradeSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterNodePoolUpgradeSettings)(nil)).Elem()
}

func (o KubernetesClusterNodePoolUpgradeSettingsPtrOutput) ToKubernetesClusterNodePoolUpgradeSettingsPtrOutput() KubernetesClusterNodePoolUpgradeSettingsPtrOutput {
	return o
}

func (o KubernetesClusterNodePoolUpgradeSettingsPtrOutput) ToKubernetesClusterNodePoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolUpgradeSettingsPtrOutput {
	return o
}

func (o KubernetesClusterNodePoolUpgradeSettingsPtrOutput) Elem() KubernetesClusterNodePoolUpgradeSettingsOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolUpgradeSettings) KubernetesClusterNodePoolUpgradeSettings {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterNodePoolUpgradeSettings
		return ret
	}).(KubernetesClusterNodePoolUpgradeSettingsOutput)
}

// The maximum number or percentage of nodes which will be added to the Node Pool size during an upgrade.
func (o KubernetesClusterNodePoolUpgradeSettingsPtrOutput) MaxSurge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolUpgradeSettings) *string {
		if v == nil {
			return nil
		}
		return &v.MaxSurge
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterNodePoolWindowsProfile struct {
	// Should the Windows nodes in this Node Pool have outbound NAT enabled? Defaults to `true`. Changing this forces a new resource to be created.
	//
	// > **Note:** If a percentage is provided, the number of surge nodes is calculated from the current node count on the cluster. Node surge can allow a cluster to have more nodes than `maxCount` during an upgrade. Ensure that your cluster has enough [IP space](https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade) during an upgrade.
	OutboundNatEnabled *bool `pulumi:"outboundNatEnabled"`
}

// KubernetesClusterNodePoolWindowsProfileInput is an input type that accepts KubernetesClusterNodePoolWindowsProfileArgs and KubernetesClusterNodePoolWindowsProfileOutput values.
// You can construct a concrete instance of `KubernetesClusterNodePoolWindowsProfileInput` via:
//
//	KubernetesClusterNodePoolWindowsProfileArgs{...}
type KubernetesClusterNodePoolWindowsProfileInput interface {
	pulumi.Input

	ToKubernetesClusterNodePoolWindowsProfileOutput() KubernetesClusterNodePoolWindowsProfileOutput
	ToKubernetesClusterNodePoolWindowsProfileOutputWithContext(context.Context) KubernetesClusterNodePoolWindowsProfileOutput
}

type KubernetesClusterNodePoolWindowsProfileArgs struct {
	// Should the Windows nodes in this Node Pool have outbound NAT enabled? Defaults to `true`. Changing this forces a new resource to be created.
	//
	// > **Note:** If a percentage is provided, the number of surge nodes is calculated from the current node count on the cluster. Node surge can allow a cluster to have more nodes than `maxCount` during an upgrade. Ensure that your cluster has enough [IP space](https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade) during an upgrade.
	OutboundNatEnabled pulumi.BoolPtrInput `pulumi:"outboundNatEnabled"`
}

func (KubernetesClusterNodePoolWindowsProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNodePoolWindowsProfile)(nil)).Elem()
}

func (i KubernetesClusterNodePoolWindowsProfileArgs) ToKubernetesClusterNodePoolWindowsProfileOutput() KubernetesClusterNodePoolWindowsProfileOutput {
	return i.ToKubernetesClusterNodePoolWindowsProfileOutputWithContext(context.Background())
}

func (i KubernetesClusterNodePoolWindowsProfileArgs) ToKubernetesClusterNodePoolWindowsProfileOutputWithContext(ctx context.Context) KubernetesClusterNodePoolWindowsProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolWindowsProfileOutput)
}

func (i KubernetesClusterNodePoolWindowsProfileArgs) ToKubernetesClusterNodePoolWindowsProfilePtrOutput() KubernetesClusterNodePoolWindowsProfilePtrOutput {
	return i.ToKubernetesClusterNodePoolWindowsProfilePtrOutputWithContext(context.Background())
}

func (i KubernetesClusterNodePoolWindowsProfileArgs) ToKubernetesClusterNodePoolWindowsProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolWindowsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolWindowsProfileOutput).ToKubernetesClusterNodePoolWindowsProfilePtrOutputWithContext(ctx)
}

// KubernetesClusterNodePoolWindowsProfilePtrInput is an input type that accepts KubernetesClusterNodePoolWindowsProfileArgs, KubernetesClusterNodePoolWindowsProfilePtr and KubernetesClusterNodePoolWindowsProfilePtrOutput values.
// You can construct a concrete instance of `KubernetesClusterNodePoolWindowsProfilePtrInput` via:
//
//	        KubernetesClusterNodePoolWindowsProfileArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterNodePoolWindowsProfilePtrInput interface {
	pulumi.Input

	ToKubernetesClusterNodePoolWindowsProfilePtrOutput() KubernetesClusterNodePoolWindowsProfilePtrOutput
	ToKubernetesClusterNodePoolWindowsProfilePtrOutputWithContext(context.Context) KubernetesClusterNodePoolWindowsProfilePtrOutput
}

type kubernetesClusterNodePoolWindowsProfilePtrType KubernetesClusterNodePoolWindowsProfileArgs

func KubernetesClusterNodePoolWindowsProfilePtr(v *KubernetesClusterNodePoolWindowsProfileArgs) KubernetesClusterNodePoolWindowsProfilePtrInput {
	return (*kubernetesClusterNodePoolWindowsProfilePtrType)(v)
}

func (*kubernetesClusterNodePoolWindowsProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterNodePoolWindowsProfile)(nil)).Elem()
}

func (i *kubernetesClusterNodePoolWindowsProfilePtrType) ToKubernetesClusterNodePoolWindowsProfilePtrOutput() KubernetesClusterNodePoolWindowsProfilePtrOutput {
	return i.ToKubernetesClusterNodePoolWindowsProfilePtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterNodePoolWindowsProfilePtrType) ToKubernetesClusterNodePoolWindowsProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolWindowsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolWindowsProfilePtrOutput)
}

type KubernetesClusterNodePoolWindowsProfileOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNodePoolWindowsProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNodePoolWindowsProfile)(nil)).Elem()
}

func (o KubernetesClusterNodePoolWindowsProfileOutput) ToKubernetesClusterNodePoolWindowsProfileOutput() KubernetesClusterNodePoolWindowsProfileOutput {
	return o
}

func (o KubernetesClusterNodePoolWindowsProfileOutput) ToKubernetesClusterNodePoolWindowsProfileOutputWithContext(ctx context.Context) KubernetesClusterNodePoolWindowsProfileOutput {
	return o
}

func (o KubernetesClusterNodePoolWindowsProfileOutput) ToKubernetesClusterNodePoolWindowsProfilePtrOutput() KubernetesClusterNodePoolWindowsProfilePtrOutput {
	return o.ToKubernetesClusterNodePoolWindowsProfilePtrOutputWithContext(context.Background())
}

func (o KubernetesClusterNodePoolWindowsProfileOutput) ToKubernetesClusterNodePoolWindowsProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolWindowsProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterNodePoolWindowsProfile) *KubernetesClusterNodePoolWindowsProfile {
		return &v
	}).(KubernetesClusterNodePoolWindowsProfilePtrOutput)
}

// Should the Windows nodes in this Node Pool have outbound NAT enabled? Defaults to `true`. Changing this forces a new resource to be created.
//
// > **Note:** If a percentage is provided, the number of surge nodes is calculated from the current node count on the cluster. Node surge can allow a cluster to have more nodes than `maxCount` during an upgrade. Ensure that your cluster has enough [IP space](https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade) during an upgrade.
func (o KubernetesClusterNodePoolWindowsProfileOutput) OutboundNatEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolWindowsProfile) *bool { return v.OutboundNatEnabled }).(pulumi.BoolPtrOutput)
}

type KubernetesClusterNodePoolWindowsProfilePtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNodePoolWindowsProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterNodePoolWindowsProfile)(nil)).Elem()
}

func (o KubernetesClusterNodePoolWindowsProfilePtrOutput) ToKubernetesClusterNodePoolWindowsProfilePtrOutput() KubernetesClusterNodePoolWindowsProfilePtrOutput {
	return o
}

func (o KubernetesClusterNodePoolWindowsProfilePtrOutput) ToKubernetesClusterNodePoolWindowsProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolWindowsProfilePtrOutput {
	return o
}

func (o KubernetesClusterNodePoolWindowsProfilePtrOutput) Elem() KubernetesClusterNodePoolWindowsProfileOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolWindowsProfile) KubernetesClusterNodePoolWindowsProfile {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterNodePoolWindowsProfile
		return ret
	}).(KubernetesClusterNodePoolWindowsProfileOutput)
}

// Should the Windows nodes in this Node Pool have outbound NAT enabled? Defaults to `true`. Changing this forces a new resource to be created.
//
// > **Note:** If a percentage is provided, the number of surge nodes is calculated from the current node count on the cluster. Node surge can allow a cluster to have more nodes than `maxCount` during an upgrade. Ensure that your cluster has enough [IP space](https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade) during an upgrade.
func (o KubernetesClusterNodePoolWindowsProfilePtrOutput) OutboundNatEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePoolWindowsProfile) *bool {
		if v == nil {
			return nil
		}
		return v.OutboundNatEnabled
	}).(pulumi.BoolPtrOutput)
}

type KubernetesClusterOmsAgent struct {
	// The ID of the Log Analytics Workspace which the OMS Agent should send data to.
	LogAnalyticsWorkspaceId string `pulumi:"logAnalyticsWorkspaceId"`
	// Is managed identity authentication for monitoring enabled?
	MsiAuthForMonitoringEnabled *bool `pulumi:"msiAuthForMonitoringEnabled"`
	// An `omsAgentIdentity` block is exported. The exported attributes are defined below.
	OmsAgentIdentities []KubernetesClusterOmsAgentOmsAgentIdentity `pulumi:"omsAgentIdentities"`
}

// KubernetesClusterOmsAgentInput is an input type that accepts KubernetesClusterOmsAgentArgs and KubernetesClusterOmsAgentOutput values.
// You can construct a concrete instance of `KubernetesClusterOmsAgentInput` via:
//
//	KubernetesClusterOmsAgentArgs{...}
type KubernetesClusterOmsAgentInput interface {
	pulumi.Input

	ToKubernetesClusterOmsAgentOutput() KubernetesClusterOmsAgentOutput
	ToKubernetesClusterOmsAgentOutputWithContext(context.Context) KubernetesClusterOmsAgentOutput
}

type KubernetesClusterOmsAgentArgs struct {
	// The ID of the Log Analytics Workspace which the OMS Agent should send data to.
	LogAnalyticsWorkspaceId pulumi.StringInput `pulumi:"logAnalyticsWorkspaceId"`
	// Is managed identity authentication for monitoring enabled?
	MsiAuthForMonitoringEnabled pulumi.BoolPtrInput `pulumi:"msiAuthForMonitoringEnabled"`
	// An `omsAgentIdentity` block is exported. The exported attributes are defined below.
	OmsAgentIdentities KubernetesClusterOmsAgentOmsAgentIdentityArrayInput `pulumi:"omsAgentIdentities"`
}

func (KubernetesClusterOmsAgentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterOmsAgent)(nil)).Elem()
}

func (i KubernetesClusterOmsAgentArgs) ToKubernetesClusterOmsAgentOutput() KubernetesClusterOmsAgentOutput {
	return i.ToKubernetesClusterOmsAgentOutputWithContext(context.Background())
}

func (i KubernetesClusterOmsAgentArgs) ToKubernetesClusterOmsAgentOutputWithContext(ctx context.Context) KubernetesClusterOmsAgentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterOmsAgentOutput)
}

func (i KubernetesClusterOmsAgentArgs) ToKubernetesClusterOmsAgentPtrOutput() KubernetesClusterOmsAgentPtrOutput {
	return i.ToKubernetesClusterOmsAgentPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterOmsAgentArgs) ToKubernetesClusterOmsAgentPtrOutputWithContext(ctx context.Context) KubernetesClusterOmsAgentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterOmsAgentOutput).ToKubernetesClusterOmsAgentPtrOutputWithContext(ctx)
}

// KubernetesClusterOmsAgentPtrInput is an input type that accepts KubernetesClusterOmsAgentArgs, KubernetesClusterOmsAgentPtr and KubernetesClusterOmsAgentPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterOmsAgentPtrInput` via:
//
//	        KubernetesClusterOmsAgentArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterOmsAgentPtrInput interface {
	pulumi.Input

	ToKubernetesClusterOmsAgentPtrOutput() KubernetesClusterOmsAgentPtrOutput
	ToKubernetesClusterOmsAgentPtrOutputWithContext(context.Context) KubernetesClusterOmsAgentPtrOutput
}

type kubernetesClusterOmsAgentPtrType KubernetesClusterOmsAgentArgs

func KubernetesClusterOmsAgentPtr(v *KubernetesClusterOmsAgentArgs) KubernetesClusterOmsAgentPtrInput {
	return (*kubernetesClusterOmsAgentPtrType)(v)
}

func (*kubernetesClusterOmsAgentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterOmsAgent)(nil)).Elem()
}

func (i *kubernetesClusterOmsAgentPtrType) ToKubernetesClusterOmsAgentPtrOutput() KubernetesClusterOmsAgentPtrOutput {
	return i.ToKubernetesClusterOmsAgentPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterOmsAgentPtrType) ToKubernetesClusterOmsAgentPtrOutputWithContext(ctx context.Context) KubernetesClusterOmsAgentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterOmsAgentPtrOutput)
}

type KubernetesClusterOmsAgentOutput struct{ *pulumi.OutputState }

func (KubernetesClusterOmsAgentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterOmsAgent)(nil)).Elem()
}

func (o KubernetesClusterOmsAgentOutput) ToKubernetesClusterOmsAgentOutput() KubernetesClusterOmsAgentOutput {
	return o
}

func (o KubernetesClusterOmsAgentOutput) ToKubernetesClusterOmsAgentOutputWithContext(ctx context.Context) KubernetesClusterOmsAgentOutput {
	return o
}

func (o KubernetesClusterOmsAgentOutput) ToKubernetesClusterOmsAgentPtrOutput() KubernetesClusterOmsAgentPtrOutput {
	return o.ToKubernetesClusterOmsAgentPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterOmsAgentOutput) ToKubernetesClusterOmsAgentPtrOutputWithContext(ctx context.Context) KubernetesClusterOmsAgentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterOmsAgent) *KubernetesClusterOmsAgent {
		return &v
	}).(KubernetesClusterOmsAgentPtrOutput)
}

// The ID of the Log Analytics Workspace which the OMS Agent should send data to.
func (o KubernetesClusterOmsAgentOutput) LogAnalyticsWorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterOmsAgent) string { return v.LogAnalyticsWorkspaceId }).(pulumi.StringOutput)
}

// Is managed identity authentication for monitoring enabled?
func (o KubernetesClusterOmsAgentOutput) MsiAuthForMonitoringEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterOmsAgent) *bool { return v.MsiAuthForMonitoringEnabled }).(pulumi.BoolPtrOutput)
}

// An `omsAgentIdentity` block is exported. The exported attributes are defined below.
func (o KubernetesClusterOmsAgentOutput) OmsAgentIdentities() KubernetesClusterOmsAgentOmsAgentIdentityArrayOutput {
	return o.ApplyT(func(v KubernetesClusterOmsAgent) []KubernetesClusterOmsAgentOmsAgentIdentity {
		return v.OmsAgentIdentities
	}).(KubernetesClusterOmsAgentOmsAgentIdentityArrayOutput)
}

type KubernetesClusterOmsAgentPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterOmsAgentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterOmsAgent)(nil)).Elem()
}

func (o KubernetesClusterOmsAgentPtrOutput) ToKubernetesClusterOmsAgentPtrOutput() KubernetesClusterOmsAgentPtrOutput {
	return o
}

func (o KubernetesClusterOmsAgentPtrOutput) ToKubernetesClusterOmsAgentPtrOutputWithContext(ctx context.Context) KubernetesClusterOmsAgentPtrOutput {
	return o
}

func (o KubernetesClusterOmsAgentPtrOutput) Elem() KubernetesClusterOmsAgentOutput {
	return o.ApplyT(func(v *KubernetesClusterOmsAgent) KubernetesClusterOmsAgent {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterOmsAgent
		return ret
	}).(KubernetesClusterOmsAgentOutput)
}

// The ID of the Log Analytics Workspace which the OMS Agent should send data to.
func (o KubernetesClusterOmsAgentPtrOutput) LogAnalyticsWorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterOmsAgent) *string {
		if v == nil {
			return nil
		}
		return &v.LogAnalyticsWorkspaceId
	}).(pulumi.StringPtrOutput)
}

// Is managed identity authentication for monitoring enabled?
func (o KubernetesClusterOmsAgentPtrOutput) MsiAuthForMonitoringEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterOmsAgent) *bool {
		if v == nil {
			return nil
		}
		return v.MsiAuthForMonitoringEnabled
	}).(pulumi.BoolPtrOutput)
}

// An `omsAgentIdentity` block is exported. The exported attributes are defined below.
func (o KubernetesClusterOmsAgentPtrOutput) OmsAgentIdentities() KubernetesClusterOmsAgentOmsAgentIdentityArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterOmsAgent) []KubernetesClusterOmsAgentOmsAgentIdentity {
		if v == nil {
			return nil
		}
		return v.OmsAgentIdentities
	}).(KubernetesClusterOmsAgentOmsAgentIdentityArrayOutput)
}

type KubernetesClusterOmsAgentOmsAgentIdentity struct {
	// The Client ID of the user-defined Managed Identity to be assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	ClientId *string `pulumi:"clientId"`
	// The Object ID of the user-defined Managed Identity assigned to the Kubelets.If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	ObjectId *string `pulumi:"objectId"`
	// The ID of the User Assigned Identity assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	//
	// > **Note:** When `kubeletIdentity` is enabled - The `type` field in the `identity` block must be set to `UserAssigned` and `identityIds` must be set.
	UserAssignedIdentityId *string `pulumi:"userAssignedIdentityId"`
}

// KubernetesClusterOmsAgentOmsAgentIdentityInput is an input type that accepts KubernetesClusterOmsAgentOmsAgentIdentityArgs and KubernetesClusterOmsAgentOmsAgentIdentityOutput values.
// You can construct a concrete instance of `KubernetesClusterOmsAgentOmsAgentIdentityInput` via:
//
//	KubernetesClusterOmsAgentOmsAgentIdentityArgs{...}
type KubernetesClusterOmsAgentOmsAgentIdentityInput interface {
	pulumi.Input

	ToKubernetesClusterOmsAgentOmsAgentIdentityOutput() KubernetesClusterOmsAgentOmsAgentIdentityOutput
	ToKubernetesClusterOmsAgentOmsAgentIdentityOutputWithContext(context.Context) KubernetesClusterOmsAgentOmsAgentIdentityOutput
}

type KubernetesClusterOmsAgentOmsAgentIdentityArgs struct {
	// The Client ID of the user-defined Managed Identity to be assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The Object ID of the user-defined Managed Identity assigned to the Kubelets.If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
	// The ID of the User Assigned Identity assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	//
	// > **Note:** When `kubeletIdentity` is enabled - The `type` field in the `identity` block must be set to `UserAssigned` and `identityIds` must be set.
	UserAssignedIdentityId pulumi.StringPtrInput `pulumi:"userAssignedIdentityId"`
}

func (KubernetesClusterOmsAgentOmsAgentIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterOmsAgentOmsAgentIdentity)(nil)).Elem()
}

func (i KubernetesClusterOmsAgentOmsAgentIdentityArgs) ToKubernetesClusterOmsAgentOmsAgentIdentityOutput() KubernetesClusterOmsAgentOmsAgentIdentityOutput {
	return i.ToKubernetesClusterOmsAgentOmsAgentIdentityOutputWithContext(context.Background())
}

func (i KubernetesClusterOmsAgentOmsAgentIdentityArgs) ToKubernetesClusterOmsAgentOmsAgentIdentityOutputWithContext(ctx context.Context) KubernetesClusterOmsAgentOmsAgentIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterOmsAgentOmsAgentIdentityOutput)
}

// KubernetesClusterOmsAgentOmsAgentIdentityArrayInput is an input type that accepts KubernetesClusterOmsAgentOmsAgentIdentityArray and KubernetesClusterOmsAgentOmsAgentIdentityArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterOmsAgentOmsAgentIdentityArrayInput` via:
//
//	KubernetesClusterOmsAgentOmsAgentIdentityArray{ KubernetesClusterOmsAgentOmsAgentIdentityArgs{...} }
type KubernetesClusterOmsAgentOmsAgentIdentityArrayInput interface {
	pulumi.Input

	ToKubernetesClusterOmsAgentOmsAgentIdentityArrayOutput() KubernetesClusterOmsAgentOmsAgentIdentityArrayOutput
	ToKubernetesClusterOmsAgentOmsAgentIdentityArrayOutputWithContext(context.Context) KubernetesClusterOmsAgentOmsAgentIdentityArrayOutput
}

type KubernetesClusterOmsAgentOmsAgentIdentityArray []KubernetesClusterOmsAgentOmsAgentIdentityInput

func (KubernetesClusterOmsAgentOmsAgentIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterOmsAgentOmsAgentIdentity)(nil)).Elem()
}

func (i KubernetesClusterOmsAgentOmsAgentIdentityArray) ToKubernetesClusterOmsAgentOmsAgentIdentityArrayOutput() KubernetesClusterOmsAgentOmsAgentIdentityArrayOutput {
	return i.ToKubernetesClusterOmsAgentOmsAgentIdentityArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterOmsAgentOmsAgentIdentityArray) ToKubernetesClusterOmsAgentOmsAgentIdentityArrayOutputWithContext(ctx context.Context) KubernetesClusterOmsAgentOmsAgentIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterOmsAgentOmsAgentIdentityArrayOutput)
}

type KubernetesClusterOmsAgentOmsAgentIdentityOutput struct{ *pulumi.OutputState }

func (KubernetesClusterOmsAgentOmsAgentIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterOmsAgentOmsAgentIdentity)(nil)).Elem()
}

func (o KubernetesClusterOmsAgentOmsAgentIdentityOutput) ToKubernetesClusterOmsAgentOmsAgentIdentityOutput() KubernetesClusterOmsAgentOmsAgentIdentityOutput {
	return o
}

func (o KubernetesClusterOmsAgentOmsAgentIdentityOutput) ToKubernetesClusterOmsAgentOmsAgentIdentityOutputWithContext(ctx context.Context) KubernetesClusterOmsAgentOmsAgentIdentityOutput {
	return o
}

// The Client ID of the user-defined Managed Identity to be assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
func (o KubernetesClusterOmsAgentOmsAgentIdentityOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterOmsAgentOmsAgentIdentity) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The Object ID of the user-defined Managed Identity assigned to the Kubelets.If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
func (o KubernetesClusterOmsAgentOmsAgentIdentityOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterOmsAgentOmsAgentIdentity) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// The ID of the User Assigned Identity assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
//
// > **Note:** When `kubeletIdentity` is enabled - The `type` field in the `identity` block must be set to `UserAssigned` and `identityIds` must be set.
func (o KubernetesClusterOmsAgentOmsAgentIdentityOutput) UserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterOmsAgentOmsAgentIdentity) *string { return v.UserAssignedIdentityId }).(pulumi.StringPtrOutput)
}

type KubernetesClusterOmsAgentOmsAgentIdentityArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterOmsAgentOmsAgentIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterOmsAgentOmsAgentIdentity)(nil)).Elem()
}

func (o KubernetesClusterOmsAgentOmsAgentIdentityArrayOutput) ToKubernetesClusterOmsAgentOmsAgentIdentityArrayOutput() KubernetesClusterOmsAgentOmsAgentIdentityArrayOutput {
	return o
}

func (o KubernetesClusterOmsAgentOmsAgentIdentityArrayOutput) ToKubernetesClusterOmsAgentOmsAgentIdentityArrayOutputWithContext(ctx context.Context) KubernetesClusterOmsAgentOmsAgentIdentityArrayOutput {
	return o
}

func (o KubernetesClusterOmsAgentOmsAgentIdentityArrayOutput) Index(i pulumi.IntInput) KubernetesClusterOmsAgentOmsAgentIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterOmsAgentOmsAgentIdentity {
		return vs[0].([]KubernetesClusterOmsAgentOmsAgentIdentity)[vs[1].(int)]
	}).(KubernetesClusterOmsAgentOmsAgentIdentityOutput)
}

type KubernetesClusterServiceMeshProfile struct {
	// Is Istio External Ingress Gateway enabled?
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/AzureServiceMeshPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/istio-deploy-addon#register-the-azureservicemeshpreview-feature-flag) for more information.
	//
	// > **NOTE:** Currently only one Internal Ingress Gateway and one External Ingress Gateway are allowed per cluster
	ExternalIngressGatewayEnabled *bool `pulumi:"externalIngressGatewayEnabled"`
	// Is Istio Internal Ingress Gateway enabled?
	InternalIngressGatewayEnabled *bool `pulumi:"internalIngressGatewayEnabled"`
	// The mode of the service mesh. Possible value is `Istio`.
	Mode string `pulumi:"mode"`
}

// KubernetesClusterServiceMeshProfileInput is an input type that accepts KubernetesClusterServiceMeshProfileArgs and KubernetesClusterServiceMeshProfileOutput values.
// You can construct a concrete instance of `KubernetesClusterServiceMeshProfileInput` via:
//
//	KubernetesClusterServiceMeshProfileArgs{...}
type KubernetesClusterServiceMeshProfileInput interface {
	pulumi.Input

	ToKubernetesClusterServiceMeshProfileOutput() KubernetesClusterServiceMeshProfileOutput
	ToKubernetesClusterServiceMeshProfileOutputWithContext(context.Context) KubernetesClusterServiceMeshProfileOutput
}

type KubernetesClusterServiceMeshProfileArgs struct {
	// Is Istio External Ingress Gateway enabled?
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/AzureServiceMeshPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/istio-deploy-addon#register-the-azureservicemeshpreview-feature-flag) for more information.
	//
	// > **NOTE:** Currently only one Internal Ingress Gateway and one External Ingress Gateway are allowed per cluster
	ExternalIngressGatewayEnabled pulumi.BoolPtrInput `pulumi:"externalIngressGatewayEnabled"`
	// Is Istio Internal Ingress Gateway enabled?
	InternalIngressGatewayEnabled pulumi.BoolPtrInput `pulumi:"internalIngressGatewayEnabled"`
	// The mode of the service mesh. Possible value is `Istio`.
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (KubernetesClusterServiceMeshProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterServiceMeshProfile)(nil)).Elem()
}

func (i KubernetesClusterServiceMeshProfileArgs) ToKubernetesClusterServiceMeshProfileOutput() KubernetesClusterServiceMeshProfileOutput {
	return i.ToKubernetesClusterServiceMeshProfileOutputWithContext(context.Background())
}

func (i KubernetesClusterServiceMeshProfileArgs) ToKubernetesClusterServiceMeshProfileOutputWithContext(ctx context.Context) KubernetesClusterServiceMeshProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterServiceMeshProfileOutput)
}

func (i KubernetesClusterServiceMeshProfileArgs) ToKubernetesClusterServiceMeshProfilePtrOutput() KubernetesClusterServiceMeshProfilePtrOutput {
	return i.ToKubernetesClusterServiceMeshProfilePtrOutputWithContext(context.Background())
}

func (i KubernetesClusterServiceMeshProfileArgs) ToKubernetesClusterServiceMeshProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterServiceMeshProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterServiceMeshProfileOutput).ToKubernetesClusterServiceMeshProfilePtrOutputWithContext(ctx)
}

// KubernetesClusterServiceMeshProfilePtrInput is an input type that accepts KubernetesClusterServiceMeshProfileArgs, KubernetesClusterServiceMeshProfilePtr and KubernetesClusterServiceMeshProfilePtrOutput values.
// You can construct a concrete instance of `KubernetesClusterServiceMeshProfilePtrInput` via:
//
//	        KubernetesClusterServiceMeshProfileArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterServiceMeshProfilePtrInput interface {
	pulumi.Input

	ToKubernetesClusterServiceMeshProfilePtrOutput() KubernetesClusterServiceMeshProfilePtrOutput
	ToKubernetesClusterServiceMeshProfilePtrOutputWithContext(context.Context) KubernetesClusterServiceMeshProfilePtrOutput
}

type kubernetesClusterServiceMeshProfilePtrType KubernetesClusterServiceMeshProfileArgs

func KubernetesClusterServiceMeshProfilePtr(v *KubernetesClusterServiceMeshProfileArgs) KubernetesClusterServiceMeshProfilePtrInput {
	return (*kubernetesClusterServiceMeshProfilePtrType)(v)
}

func (*kubernetesClusterServiceMeshProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterServiceMeshProfile)(nil)).Elem()
}

func (i *kubernetesClusterServiceMeshProfilePtrType) ToKubernetesClusterServiceMeshProfilePtrOutput() KubernetesClusterServiceMeshProfilePtrOutput {
	return i.ToKubernetesClusterServiceMeshProfilePtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterServiceMeshProfilePtrType) ToKubernetesClusterServiceMeshProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterServiceMeshProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterServiceMeshProfilePtrOutput)
}

type KubernetesClusterServiceMeshProfileOutput struct{ *pulumi.OutputState }

func (KubernetesClusterServiceMeshProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterServiceMeshProfile)(nil)).Elem()
}

func (o KubernetesClusterServiceMeshProfileOutput) ToKubernetesClusterServiceMeshProfileOutput() KubernetesClusterServiceMeshProfileOutput {
	return o
}

func (o KubernetesClusterServiceMeshProfileOutput) ToKubernetesClusterServiceMeshProfileOutputWithContext(ctx context.Context) KubernetesClusterServiceMeshProfileOutput {
	return o
}

func (o KubernetesClusterServiceMeshProfileOutput) ToKubernetesClusterServiceMeshProfilePtrOutput() KubernetesClusterServiceMeshProfilePtrOutput {
	return o.ToKubernetesClusterServiceMeshProfilePtrOutputWithContext(context.Background())
}

func (o KubernetesClusterServiceMeshProfileOutput) ToKubernetesClusterServiceMeshProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterServiceMeshProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterServiceMeshProfile) *KubernetesClusterServiceMeshProfile {
		return &v
	}).(KubernetesClusterServiceMeshProfilePtrOutput)
}

// Is Istio External Ingress Gateway enabled?
//
// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/AzureServiceMeshPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/istio-deploy-addon#register-the-azureservicemeshpreview-feature-flag) for more information.
//
// > **NOTE:** Currently only one Internal Ingress Gateway and one External Ingress Gateway are allowed per cluster
func (o KubernetesClusterServiceMeshProfileOutput) ExternalIngressGatewayEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterServiceMeshProfile) *bool { return v.ExternalIngressGatewayEnabled }).(pulumi.BoolPtrOutput)
}

// Is Istio Internal Ingress Gateway enabled?
func (o KubernetesClusterServiceMeshProfileOutput) InternalIngressGatewayEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterServiceMeshProfile) *bool { return v.InternalIngressGatewayEnabled }).(pulumi.BoolPtrOutput)
}

// The mode of the service mesh. Possible value is `Istio`.
func (o KubernetesClusterServiceMeshProfileOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterServiceMeshProfile) string { return v.Mode }).(pulumi.StringOutput)
}

type KubernetesClusterServiceMeshProfilePtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterServiceMeshProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterServiceMeshProfile)(nil)).Elem()
}

func (o KubernetesClusterServiceMeshProfilePtrOutput) ToKubernetesClusterServiceMeshProfilePtrOutput() KubernetesClusterServiceMeshProfilePtrOutput {
	return o
}

func (o KubernetesClusterServiceMeshProfilePtrOutput) ToKubernetesClusterServiceMeshProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterServiceMeshProfilePtrOutput {
	return o
}

func (o KubernetesClusterServiceMeshProfilePtrOutput) Elem() KubernetesClusterServiceMeshProfileOutput {
	return o.ApplyT(func(v *KubernetesClusterServiceMeshProfile) KubernetesClusterServiceMeshProfile {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterServiceMeshProfile
		return ret
	}).(KubernetesClusterServiceMeshProfileOutput)
}

// Is Istio External Ingress Gateway enabled?
//
// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/AzureServiceMeshPreview` is enabled and the Resource Provider is re-registered, see [the documentation](https://learn.microsoft.com/en-us/azure/aks/istio-deploy-addon#register-the-azureservicemeshpreview-feature-flag) for more information.
//
// > **NOTE:** Currently only one Internal Ingress Gateway and one External Ingress Gateway are allowed per cluster
func (o KubernetesClusterServiceMeshProfilePtrOutput) ExternalIngressGatewayEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterServiceMeshProfile) *bool {
		if v == nil {
			return nil
		}
		return v.ExternalIngressGatewayEnabled
	}).(pulumi.BoolPtrOutput)
}

// Is Istio Internal Ingress Gateway enabled?
func (o KubernetesClusterServiceMeshProfilePtrOutput) InternalIngressGatewayEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterServiceMeshProfile) *bool {
		if v == nil {
			return nil
		}
		return v.InternalIngressGatewayEnabled
	}).(pulumi.BoolPtrOutput)
}

// The mode of the service mesh. Possible value is `Istio`.
func (o KubernetesClusterServiceMeshProfilePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterServiceMeshProfile) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterServicePrincipal struct {
	// The Client ID for the Service Principal.
	ClientId string `pulumi:"clientId"`
	// The Client Secret for the Service Principal.
	ClientSecret string `pulumi:"clientSecret"`
}

// KubernetesClusterServicePrincipalInput is an input type that accepts KubernetesClusterServicePrincipalArgs and KubernetesClusterServicePrincipalOutput values.
// You can construct a concrete instance of `KubernetesClusterServicePrincipalInput` via:
//
//	KubernetesClusterServicePrincipalArgs{...}
type KubernetesClusterServicePrincipalInput interface {
	pulumi.Input

	ToKubernetesClusterServicePrincipalOutput() KubernetesClusterServicePrincipalOutput
	ToKubernetesClusterServicePrincipalOutputWithContext(context.Context) KubernetesClusterServicePrincipalOutput
}

type KubernetesClusterServicePrincipalArgs struct {
	// The Client ID for the Service Principal.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The Client Secret for the Service Principal.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
}

func (KubernetesClusterServicePrincipalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterServicePrincipal)(nil)).Elem()
}

func (i KubernetesClusterServicePrincipalArgs) ToKubernetesClusterServicePrincipalOutput() KubernetesClusterServicePrincipalOutput {
	return i.ToKubernetesClusterServicePrincipalOutputWithContext(context.Background())
}

func (i KubernetesClusterServicePrincipalArgs) ToKubernetesClusterServicePrincipalOutputWithContext(ctx context.Context) KubernetesClusterServicePrincipalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterServicePrincipalOutput)
}

func (i KubernetesClusterServicePrincipalArgs) ToKubernetesClusterServicePrincipalPtrOutput() KubernetesClusterServicePrincipalPtrOutput {
	return i.ToKubernetesClusterServicePrincipalPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterServicePrincipalArgs) ToKubernetesClusterServicePrincipalPtrOutputWithContext(ctx context.Context) KubernetesClusterServicePrincipalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterServicePrincipalOutput).ToKubernetesClusterServicePrincipalPtrOutputWithContext(ctx)
}

// KubernetesClusterServicePrincipalPtrInput is an input type that accepts KubernetesClusterServicePrincipalArgs, KubernetesClusterServicePrincipalPtr and KubernetesClusterServicePrincipalPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterServicePrincipalPtrInput` via:
//
//	        KubernetesClusterServicePrincipalArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterServicePrincipalPtrInput interface {
	pulumi.Input

	ToKubernetesClusterServicePrincipalPtrOutput() KubernetesClusterServicePrincipalPtrOutput
	ToKubernetesClusterServicePrincipalPtrOutputWithContext(context.Context) KubernetesClusterServicePrincipalPtrOutput
}

type kubernetesClusterServicePrincipalPtrType KubernetesClusterServicePrincipalArgs

func KubernetesClusterServicePrincipalPtr(v *KubernetesClusterServicePrincipalArgs) KubernetesClusterServicePrincipalPtrInput {
	return (*kubernetesClusterServicePrincipalPtrType)(v)
}

func (*kubernetesClusterServicePrincipalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterServicePrincipal)(nil)).Elem()
}

func (i *kubernetesClusterServicePrincipalPtrType) ToKubernetesClusterServicePrincipalPtrOutput() KubernetesClusterServicePrincipalPtrOutput {
	return i.ToKubernetesClusterServicePrincipalPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterServicePrincipalPtrType) ToKubernetesClusterServicePrincipalPtrOutputWithContext(ctx context.Context) KubernetesClusterServicePrincipalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterServicePrincipalPtrOutput)
}

type KubernetesClusterServicePrincipalOutput struct{ *pulumi.OutputState }

func (KubernetesClusterServicePrincipalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterServicePrincipal)(nil)).Elem()
}

func (o KubernetesClusterServicePrincipalOutput) ToKubernetesClusterServicePrincipalOutput() KubernetesClusterServicePrincipalOutput {
	return o
}

func (o KubernetesClusterServicePrincipalOutput) ToKubernetesClusterServicePrincipalOutputWithContext(ctx context.Context) KubernetesClusterServicePrincipalOutput {
	return o
}

func (o KubernetesClusterServicePrincipalOutput) ToKubernetesClusterServicePrincipalPtrOutput() KubernetesClusterServicePrincipalPtrOutput {
	return o.ToKubernetesClusterServicePrincipalPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterServicePrincipalOutput) ToKubernetesClusterServicePrincipalPtrOutputWithContext(ctx context.Context) KubernetesClusterServicePrincipalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterServicePrincipal) *KubernetesClusterServicePrincipal {
		return &v
	}).(KubernetesClusterServicePrincipalPtrOutput)
}

// The Client ID for the Service Principal.
func (o KubernetesClusterServicePrincipalOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterServicePrincipal) string { return v.ClientId }).(pulumi.StringOutput)
}

// The Client Secret for the Service Principal.
func (o KubernetesClusterServicePrincipalOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterServicePrincipal) string { return v.ClientSecret }).(pulumi.StringOutput)
}

type KubernetesClusterServicePrincipalPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterServicePrincipalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterServicePrincipal)(nil)).Elem()
}

func (o KubernetesClusterServicePrincipalPtrOutput) ToKubernetesClusterServicePrincipalPtrOutput() KubernetesClusterServicePrincipalPtrOutput {
	return o
}

func (o KubernetesClusterServicePrincipalPtrOutput) ToKubernetesClusterServicePrincipalPtrOutputWithContext(ctx context.Context) KubernetesClusterServicePrincipalPtrOutput {
	return o
}

func (o KubernetesClusterServicePrincipalPtrOutput) Elem() KubernetesClusterServicePrincipalOutput {
	return o.ApplyT(func(v *KubernetesClusterServicePrincipal) KubernetesClusterServicePrincipal {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterServicePrincipal
		return ret
	}).(KubernetesClusterServicePrincipalOutput)
}

// The Client ID for the Service Principal.
func (o KubernetesClusterServicePrincipalPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterServicePrincipal) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The Client Secret for the Service Principal.
func (o KubernetesClusterServicePrincipalPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterServicePrincipal) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterStorageProfile struct {
	// Is the Blob CSI driver enabled? Defaults to `false`.
	BlobDriverEnabled *bool `pulumi:"blobDriverEnabled"`
	// Is the Disk CSI driver enabled? Defaults to `true`.
	DiskDriverEnabled *bool `pulumi:"diskDriverEnabled"`
	// Disk CSI Driver version to be used. Possible values are `v1` and `v2`. Defaults to `v1`.
	//
	// > **Note:** `Azure Disk CSI driver v2` is currently in [Public Preview](https://azure.microsoft.com/en-us/updates/public-preview-azure-disk-csi-driver-v2-in-aks/) on an opt-in basis. To use it, the feature `EnableAzureDiskCSIDriverV2` for namespace `Microsoft.ContainerService` must be requested.
	DiskDriverVersion *string `pulumi:"diskDriverVersion"`
	// Is the File CSI driver enabled? Defaults to `true`.
	FileDriverEnabled *bool `pulumi:"fileDriverEnabled"`
	// Is the Snapshot Controller enabled? Defaults to `true`.
	SnapshotControllerEnabled *bool `pulumi:"snapshotControllerEnabled"`
}

// KubernetesClusterStorageProfileInput is an input type that accepts KubernetesClusterStorageProfileArgs and KubernetesClusterStorageProfileOutput values.
// You can construct a concrete instance of `KubernetesClusterStorageProfileInput` via:
//
//	KubernetesClusterStorageProfileArgs{...}
type KubernetesClusterStorageProfileInput interface {
	pulumi.Input

	ToKubernetesClusterStorageProfileOutput() KubernetesClusterStorageProfileOutput
	ToKubernetesClusterStorageProfileOutputWithContext(context.Context) KubernetesClusterStorageProfileOutput
}

type KubernetesClusterStorageProfileArgs struct {
	// Is the Blob CSI driver enabled? Defaults to `false`.
	BlobDriverEnabled pulumi.BoolPtrInput `pulumi:"blobDriverEnabled"`
	// Is the Disk CSI driver enabled? Defaults to `true`.
	DiskDriverEnabled pulumi.BoolPtrInput `pulumi:"diskDriverEnabled"`
	// Disk CSI Driver version to be used. Possible values are `v1` and `v2`. Defaults to `v1`.
	//
	// > **Note:** `Azure Disk CSI driver v2` is currently in [Public Preview](https://azure.microsoft.com/en-us/updates/public-preview-azure-disk-csi-driver-v2-in-aks/) on an opt-in basis. To use it, the feature `EnableAzureDiskCSIDriverV2` for namespace `Microsoft.ContainerService` must be requested.
	DiskDriverVersion pulumi.StringPtrInput `pulumi:"diskDriverVersion"`
	// Is the File CSI driver enabled? Defaults to `true`.
	FileDriverEnabled pulumi.BoolPtrInput `pulumi:"fileDriverEnabled"`
	// Is the Snapshot Controller enabled? Defaults to `true`.
	SnapshotControllerEnabled pulumi.BoolPtrInput `pulumi:"snapshotControllerEnabled"`
}

func (KubernetesClusterStorageProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterStorageProfile)(nil)).Elem()
}

func (i KubernetesClusterStorageProfileArgs) ToKubernetesClusterStorageProfileOutput() KubernetesClusterStorageProfileOutput {
	return i.ToKubernetesClusterStorageProfileOutputWithContext(context.Background())
}

func (i KubernetesClusterStorageProfileArgs) ToKubernetesClusterStorageProfileOutputWithContext(ctx context.Context) KubernetesClusterStorageProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterStorageProfileOutput)
}

func (i KubernetesClusterStorageProfileArgs) ToKubernetesClusterStorageProfilePtrOutput() KubernetesClusterStorageProfilePtrOutput {
	return i.ToKubernetesClusterStorageProfilePtrOutputWithContext(context.Background())
}

func (i KubernetesClusterStorageProfileArgs) ToKubernetesClusterStorageProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterStorageProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterStorageProfileOutput).ToKubernetesClusterStorageProfilePtrOutputWithContext(ctx)
}

// KubernetesClusterStorageProfilePtrInput is an input type that accepts KubernetesClusterStorageProfileArgs, KubernetesClusterStorageProfilePtr and KubernetesClusterStorageProfilePtrOutput values.
// You can construct a concrete instance of `KubernetesClusterStorageProfilePtrInput` via:
//
//	        KubernetesClusterStorageProfileArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterStorageProfilePtrInput interface {
	pulumi.Input

	ToKubernetesClusterStorageProfilePtrOutput() KubernetesClusterStorageProfilePtrOutput
	ToKubernetesClusterStorageProfilePtrOutputWithContext(context.Context) KubernetesClusterStorageProfilePtrOutput
}

type kubernetesClusterStorageProfilePtrType KubernetesClusterStorageProfileArgs

func KubernetesClusterStorageProfilePtr(v *KubernetesClusterStorageProfileArgs) KubernetesClusterStorageProfilePtrInput {
	return (*kubernetesClusterStorageProfilePtrType)(v)
}

func (*kubernetesClusterStorageProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterStorageProfile)(nil)).Elem()
}

func (i *kubernetesClusterStorageProfilePtrType) ToKubernetesClusterStorageProfilePtrOutput() KubernetesClusterStorageProfilePtrOutput {
	return i.ToKubernetesClusterStorageProfilePtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterStorageProfilePtrType) ToKubernetesClusterStorageProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterStorageProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterStorageProfilePtrOutput)
}

type KubernetesClusterStorageProfileOutput struct{ *pulumi.OutputState }

func (KubernetesClusterStorageProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterStorageProfile)(nil)).Elem()
}

func (o KubernetesClusterStorageProfileOutput) ToKubernetesClusterStorageProfileOutput() KubernetesClusterStorageProfileOutput {
	return o
}

func (o KubernetesClusterStorageProfileOutput) ToKubernetesClusterStorageProfileOutputWithContext(ctx context.Context) KubernetesClusterStorageProfileOutput {
	return o
}

func (o KubernetesClusterStorageProfileOutput) ToKubernetesClusterStorageProfilePtrOutput() KubernetesClusterStorageProfilePtrOutput {
	return o.ToKubernetesClusterStorageProfilePtrOutputWithContext(context.Background())
}

func (o KubernetesClusterStorageProfileOutput) ToKubernetesClusterStorageProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterStorageProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterStorageProfile) *KubernetesClusterStorageProfile {
		return &v
	}).(KubernetesClusterStorageProfilePtrOutput)
}

// Is the Blob CSI driver enabled? Defaults to `false`.
func (o KubernetesClusterStorageProfileOutput) BlobDriverEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterStorageProfile) *bool { return v.BlobDriverEnabled }).(pulumi.BoolPtrOutput)
}

// Is the Disk CSI driver enabled? Defaults to `true`.
func (o KubernetesClusterStorageProfileOutput) DiskDriverEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterStorageProfile) *bool { return v.DiskDriverEnabled }).(pulumi.BoolPtrOutput)
}

// Disk CSI Driver version to be used. Possible values are `v1` and `v2`. Defaults to `v1`.
//
// > **Note:** `Azure Disk CSI driver v2` is currently in [Public Preview](https://azure.microsoft.com/en-us/updates/public-preview-azure-disk-csi-driver-v2-in-aks/) on an opt-in basis. To use it, the feature `EnableAzureDiskCSIDriverV2` for namespace `Microsoft.ContainerService` must be requested.
func (o KubernetesClusterStorageProfileOutput) DiskDriverVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterStorageProfile) *string { return v.DiskDriverVersion }).(pulumi.StringPtrOutput)
}

// Is the File CSI driver enabled? Defaults to `true`.
func (o KubernetesClusterStorageProfileOutput) FileDriverEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterStorageProfile) *bool { return v.FileDriverEnabled }).(pulumi.BoolPtrOutput)
}

// Is the Snapshot Controller enabled? Defaults to `true`.
func (o KubernetesClusterStorageProfileOutput) SnapshotControllerEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterStorageProfile) *bool { return v.SnapshotControllerEnabled }).(pulumi.BoolPtrOutput)
}

type KubernetesClusterStorageProfilePtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterStorageProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterStorageProfile)(nil)).Elem()
}

func (o KubernetesClusterStorageProfilePtrOutput) ToKubernetesClusterStorageProfilePtrOutput() KubernetesClusterStorageProfilePtrOutput {
	return o
}

func (o KubernetesClusterStorageProfilePtrOutput) ToKubernetesClusterStorageProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterStorageProfilePtrOutput {
	return o
}

func (o KubernetesClusterStorageProfilePtrOutput) Elem() KubernetesClusterStorageProfileOutput {
	return o.ApplyT(func(v *KubernetesClusterStorageProfile) KubernetesClusterStorageProfile {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterStorageProfile
		return ret
	}).(KubernetesClusterStorageProfileOutput)
}

// Is the Blob CSI driver enabled? Defaults to `false`.
func (o KubernetesClusterStorageProfilePtrOutput) BlobDriverEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterStorageProfile) *bool {
		if v == nil {
			return nil
		}
		return v.BlobDriverEnabled
	}).(pulumi.BoolPtrOutput)
}

// Is the Disk CSI driver enabled? Defaults to `true`.
func (o KubernetesClusterStorageProfilePtrOutput) DiskDriverEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterStorageProfile) *bool {
		if v == nil {
			return nil
		}
		return v.DiskDriverEnabled
	}).(pulumi.BoolPtrOutput)
}

// Disk CSI Driver version to be used. Possible values are `v1` and `v2`. Defaults to `v1`.
//
// > **Note:** `Azure Disk CSI driver v2` is currently in [Public Preview](https://azure.microsoft.com/en-us/updates/public-preview-azure-disk-csi-driver-v2-in-aks/) on an opt-in basis. To use it, the feature `EnableAzureDiskCSIDriverV2` for namespace `Microsoft.ContainerService` must be requested.
func (o KubernetesClusterStorageProfilePtrOutput) DiskDriverVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterStorageProfile) *string {
		if v == nil {
			return nil
		}
		return v.DiskDriverVersion
	}).(pulumi.StringPtrOutput)
}

// Is the File CSI driver enabled? Defaults to `true`.
func (o KubernetesClusterStorageProfilePtrOutput) FileDriverEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterStorageProfile) *bool {
		if v == nil {
			return nil
		}
		return v.FileDriverEnabled
	}).(pulumi.BoolPtrOutput)
}

// Is the Snapshot Controller enabled? Defaults to `true`.
func (o KubernetesClusterStorageProfilePtrOutput) SnapshotControllerEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterStorageProfile) *bool {
		if v == nil {
			return nil
		}
		return v.SnapshotControllerEnabled
	}).(pulumi.BoolPtrOutput)
}

type KubernetesClusterWebAppRouting struct {
	// Specifies the ID of the DNS Zone in which DNS entries are created for applications deployed to the cluster when Web App Routing is enabled. For Bring-Your-Own DNS zones this property should be set to an empty string `""`.
	DnsZoneId string `pulumi:"dnsZoneId"`
	// A `webAppRoutingIdentity` block is exported. The exported attributes are defined below.
	WebAppRoutingIdentities []KubernetesClusterWebAppRoutingWebAppRoutingIdentity `pulumi:"webAppRoutingIdentities"`
}

// KubernetesClusterWebAppRoutingInput is an input type that accepts KubernetesClusterWebAppRoutingArgs and KubernetesClusterWebAppRoutingOutput values.
// You can construct a concrete instance of `KubernetesClusterWebAppRoutingInput` via:
//
//	KubernetesClusterWebAppRoutingArgs{...}
type KubernetesClusterWebAppRoutingInput interface {
	pulumi.Input

	ToKubernetesClusterWebAppRoutingOutput() KubernetesClusterWebAppRoutingOutput
	ToKubernetesClusterWebAppRoutingOutputWithContext(context.Context) KubernetesClusterWebAppRoutingOutput
}

type KubernetesClusterWebAppRoutingArgs struct {
	// Specifies the ID of the DNS Zone in which DNS entries are created for applications deployed to the cluster when Web App Routing is enabled. For Bring-Your-Own DNS zones this property should be set to an empty string `""`.
	DnsZoneId pulumi.StringInput `pulumi:"dnsZoneId"`
	// A `webAppRoutingIdentity` block is exported. The exported attributes are defined below.
	WebAppRoutingIdentities KubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayInput `pulumi:"webAppRoutingIdentities"`
}

func (KubernetesClusterWebAppRoutingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterWebAppRouting)(nil)).Elem()
}

func (i KubernetesClusterWebAppRoutingArgs) ToKubernetesClusterWebAppRoutingOutput() KubernetesClusterWebAppRoutingOutput {
	return i.ToKubernetesClusterWebAppRoutingOutputWithContext(context.Background())
}

func (i KubernetesClusterWebAppRoutingArgs) ToKubernetesClusterWebAppRoutingOutputWithContext(ctx context.Context) KubernetesClusterWebAppRoutingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterWebAppRoutingOutput)
}

func (i KubernetesClusterWebAppRoutingArgs) ToKubernetesClusterWebAppRoutingPtrOutput() KubernetesClusterWebAppRoutingPtrOutput {
	return i.ToKubernetesClusterWebAppRoutingPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterWebAppRoutingArgs) ToKubernetesClusterWebAppRoutingPtrOutputWithContext(ctx context.Context) KubernetesClusterWebAppRoutingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterWebAppRoutingOutput).ToKubernetesClusterWebAppRoutingPtrOutputWithContext(ctx)
}

// KubernetesClusterWebAppRoutingPtrInput is an input type that accepts KubernetesClusterWebAppRoutingArgs, KubernetesClusterWebAppRoutingPtr and KubernetesClusterWebAppRoutingPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterWebAppRoutingPtrInput` via:
//
//	        KubernetesClusterWebAppRoutingArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterWebAppRoutingPtrInput interface {
	pulumi.Input

	ToKubernetesClusterWebAppRoutingPtrOutput() KubernetesClusterWebAppRoutingPtrOutput
	ToKubernetesClusterWebAppRoutingPtrOutputWithContext(context.Context) KubernetesClusterWebAppRoutingPtrOutput
}

type kubernetesClusterWebAppRoutingPtrType KubernetesClusterWebAppRoutingArgs

func KubernetesClusterWebAppRoutingPtr(v *KubernetesClusterWebAppRoutingArgs) KubernetesClusterWebAppRoutingPtrInput {
	return (*kubernetesClusterWebAppRoutingPtrType)(v)
}

func (*kubernetesClusterWebAppRoutingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterWebAppRouting)(nil)).Elem()
}

func (i *kubernetesClusterWebAppRoutingPtrType) ToKubernetesClusterWebAppRoutingPtrOutput() KubernetesClusterWebAppRoutingPtrOutput {
	return i.ToKubernetesClusterWebAppRoutingPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterWebAppRoutingPtrType) ToKubernetesClusterWebAppRoutingPtrOutputWithContext(ctx context.Context) KubernetesClusterWebAppRoutingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterWebAppRoutingPtrOutput)
}

type KubernetesClusterWebAppRoutingOutput struct{ *pulumi.OutputState }

func (KubernetesClusterWebAppRoutingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterWebAppRouting)(nil)).Elem()
}

func (o KubernetesClusterWebAppRoutingOutput) ToKubernetesClusterWebAppRoutingOutput() KubernetesClusterWebAppRoutingOutput {
	return o
}

func (o KubernetesClusterWebAppRoutingOutput) ToKubernetesClusterWebAppRoutingOutputWithContext(ctx context.Context) KubernetesClusterWebAppRoutingOutput {
	return o
}

func (o KubernetesClusterWebAppRoutingOutput) ToKubernetesClusterWebAppRoutingPtrOutput() KubernetesClusterWebAppRoutingPtrOutput {
	return o.ToKubernetesClusterWebAppRoutingPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterWebAppRoutingOutput) ToKubernetesClusterWebAppRoutingPtrOutputWithContext(ctx context.Context) KubernetesClusterWebAppRoutingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterWebAppRouting) *KubernetesClusterWebAppRouting {
		return &v
	}).(KubernetesClusterWebAppRoutingPtrOutput)
}

// Specifies the ID of the DNS Zone in which DNS entries are created for applications deployed to the cluster when Web App Routing is enabled. For Bring-Your-Own DNS zones this property should be set to an empty string `""`.
func (o KubernetesClusterWebAppRoutingOutput) DnsZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterWebAppRouting) string { return v.DnsZoneId }).(pulumi.StringOutput)
}

// A `webAppRoutingIdentity` block is exported. The exported attributes are defined below.
func (o KubernetesClusterWebAppRoutingOutput) WebAppRoutingIdentities() KubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayOutput {
	return o.ApplyT(func(v KubernetesClusterWebAppRouting) []KubernetesClusterWebAppRoutingWebAppRoutingIdentity {
		return v.WebAppRoutingIdentities
	}).(KubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayOutput)
}

type KubernetesClusterWebAppRoutingPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterWebAppRoutingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterWebAppRouting)(nil)).Elem()
}

func (o KubernetesClusterWebAppRoutingPtrOutput) ToKubernetesClusterWebAppRoutingPtrOutput() KubernetesClusterWebAppRoutingPtrOutput {
	return o
}

func (o KubernetesClusterWebAppRoutingPtrOutput) ToKubernetesClusterWebAppRoutingPtrOutputWithContext(ctx context.Context) KubernetesClusterWebAppRoutingPtrOutput {
	return o
}

func (o KubernetesClusterWebAppRoutingPtrOutput) Elem() KubernetesClusterWebAppRoutingOutput {
	return o.ApplyT(func(v *KubernetesClusterWebAppRouting) KubernetesClusterWebAppRouting {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterWebAppRouting
		return ret
	}).(KubernetesClusterWebAppRoutingOutput)
}

// Specifies the ID of the DNS Zone in which DNS entries are created for applications deployed to the cluster when Web App Routing is enabled. For Bring-Your-Own DNS zones this property should be set to an empty string `""`.
func (o KubernetesClusterWebAppRoutingPtrOutput) DnsZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterWebAppRouting) *string {
		if v == nil {
			return nil
		}
		return &v.DnsZoneId
	}).(pulumi.StringPtrOutput)
}

// A `webAppRoutingIdentity` block is exported. The exported attributes are defined below.
func (o KubernetesClusterWebAppRoutingPtrOutput) WebAppRoutingIdentities() KubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterWebAppRouting) []KubernetesClusterWebAppRoutingWebAppRoutingIdentity {
		if v == nil {
			return nil
		}
		return v.WebAppRoutingIdentities
	}).(KubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayOutput)
}

type KubernetesClusterWebAppRoutingWebAppRoutingIdentity struct {
	// The Client ID of the user-defined Managed Identity to be assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	ClientId *string `pulumi:"clientId"`
	// The Object ID of the user-defined Managed Identity assigned to the Kubelets.If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	ObjectId *string `pulumi:"objectId"`
	// The ID of the User Assigned Identity assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	//
	// > **Note:** When `kubeletIdentity` is enabled - The `type` field in the `identity` block must be set to `UserAssigned` and `identityIds` must be set.
	UserAssignedIdentityId *string `pulumi:"userAssignedIdentityId"`
}

// KubernetesClusterWebAppRoutingWebAppRoutingIdentityInput is an input type that accepts KubernetesClusterWebAppRoutingWebAppRoutingIdentityArgs and KubernetesClusterWebAppRoutingWebAppRoutingIdentityOutput values.
// You can construct a concrete instance of `KubernetesClusterWebAppRoutingWebAppRoutingIdentityInput` via:
//
//	KubernetesClusterWebAppRoutingWebAppRoutingIdentityArgs{...}
type KubernetesClusterWebAppRoutingWebAppRoutingIdentityInput interface {
	pulumi.Input

	ToKubernetesClusterWebAppRoutingWebAppRoutingIdentityOutput() KubernetesClusterWebAppRoutingWebAppRoutingIdentityOutput
	ToKubernetesClusterWebAppRoutingWebAppRoutingIdentityOutputWithContext(context.Context) KubernetesClusterWebAppRoutingWebAppRoutingIdentityOutput
}

type KubernetesClusterWebAppRoutingWebAppRoutingIdentityArgs struct {
	// The Client ID of the user-defined Managed Identity to be assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The Object ID of the user-defined Managed Identity assigned to the Kubelets.If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
	// The ID of the User Assigned Identity assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
	//
	// > **Note:** When `kubeletIdentity` is enabled - The `type` field in the `identity` block must be set to `UserAssigned` and `identityIds` must be set.
	UserAssignedIdentityId pulumi.StringPtrInput `pulumi:"userAssignedIdentityId"`
}

func (KubernetesClusterWebAppRoutingWebAppRoutingIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterWebAppRoutingWebAppRoutingIdentity)(nil)).Elem()
}

func (i KubernetesClusterWebAppRoutingWebAppRoutingIdentityArgs) ToKubernetesClusterWebAppRoutingWebAppRoutingIdentityOutput() KubernetesClusterWebAppRoutingWebAppRoutingIdentityOutput {
	return i.ToKubernetesClusterWebAppRoutingWebAppRoutingIdentityOutputWithContext(context.Background())
}

func (i KubernetesClusterWebAppRoutingWebAppRoutingIdentityArgs) ToKubernetesClusterWebAppRoutingWebAppRoutingIdentityOutputWithContext(ctx context.Context) KubernetesClusterWebAppRoutingWebAppRoutingIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterWebAppRoutingWebAppRoutingIdentityOutput)
}

// KubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayInput is an input type that accepts KubernetesClusterWebAppRoutingWebAppRoutingIdentityArray and KubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayInput` via:
//
//	KubernetesClusterWebAppRoutingWebAppRoutingIdentityArray{ KubernetesClusterWebAppRoutingWebAppRoutingIdentityArgs{...} }
type KubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayInput interface {
	pulumi.Input

	ToKubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayOutput() KubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayOutput
	ToKubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayOutputWithContext(context.Context) KubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayOutput
}

type KubernetesClusterWebAppRoutingWebAppRoutingIdentityArray []KubernetesClusterWebAppRoutingWebAppRoutingIdentityInput

func (KubernetesClusterWebAppRoutingWebAppRoutingIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterWebAppRoutingWebAppRoutingIdentity)(nil)).Elem()
}

func (i KubernetesClusterWebAppRoutingWebAppRoutingIdentityArray) ToKubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayOutput() KubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayOutput {
	return i.ToKubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterWebAppRoutingWebAppRoutingIdentityArray) ToKubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayOutputWithContext(ctx context.Context) KubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayOutput)
}

type KubernetesClusterWebAppRoutingWebAppRoutingIdentityOutput struct{ *pulumi.OutputState }

func (KubernetesClusterWebAppRoutingWebAppRoutingIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterWebAppRoutingWebAppRoutingIdentity)(nil)).Elem()
}

func (o KubernetesClusterWebAppRoutingWebAppRoutingIdentityOutput) ToKubernetesClusterWebAppRoutingWebAppRoutingIdentityOutput() KubernetesClusterWebAppRoutingWebAppRoutingIdentityOutput {
	return o
}

func (o KubernetesClusterWebAppRoutingWebAppRoutingIdentityOutput) ToKubernetesClusterWebAppRoutingWebAppRoutingIdentityOutputWithContext(ctx context.Context) KubernetesClusterWebAppRoutingWebAppRoutingIdentityOutput {
	return o
}

// The Client ID of the user-defined Managed Identity to be assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
func (o KubernetesClusterWebAppRoutingWebAppRoutingIdentityOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterWebAppRoutingWebAppRoutingIdentity) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The Object ID of the user-defined Managed Identity assigned to the Kubelets.If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
func (o KubernetesClusterWebAppRoutingWebAppRoutingIdentityOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterWebAppRoutingWebAppRoutingIdentity) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// The ID of the User Assigned Identity assigned to the Kubelets. If not specified a Managed Identity is created automatically. Changing this forces a new resource to be created.
//
// > **Note:** When `kubeletIdentity` is enabled - The `type` field in the `identity` block must be set to `UserAssigned` and `identityIds` must be set.
func (o KubernetesClusterWebAppRoutingWebAppRoutingIdentityOutput) UserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterWebAppRoutingWebAppRoutingIdentity) *string { return v.UserAssignedIdentityId }).(pulumi.StringPtrOutput)
}

type KubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterWebAppRoutingWebAppRoutingIdentity)(nil)).Elem()
}

func (o KubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayOutput) ToKubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayOutput() KubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayOutput {
	return o
}

func (o KubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayOutput) ToKubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayOutputWithContext(ctx context.Context) KubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayOutput {
	return o
}

func (o KubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayOutput) Index(i pulumi.IntInput) KubernetesClusterWebAppRoutingWebAppRoutingIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterWebAppRoutingWebAppRoutingIdentity {
		return vs[0].([]KubernetesClusterWebAppRoutingWebAppRoutingIdentity)[vs[1].(int)]
	}).(KubernetesClusterWebAppRoutingWebAppRoutingIdentityOutput)
}

type KubernetesClusterWindowsProfile struct {
	// The Admin Password for Windows VMs. Length must be between 14 and 123 characters.
	AdminPassword *string `pulumi:"adminPassword"`
	// The Admin Username for Windows VMs. Changing this forces a new resource to be created.
	AdminUsername string `pulumi:"adminUsername"`
	// A `gmsa` block as defined below.
	Gmsa *KubernetesClusterWindowsProfileGmsa `pulumi:"gmsa"`
	// Specifies the type of on-premise license which should be used for Node Pool Windows Virtual Machine. At this time the only possible value is `Windows_Server`.
	License *string `pulumi:"license"`
}

// KubernetesClusterWindowsProfileInput is an input type that accepts KubernetesClusterWindowsProfileArgs and KubernetesClusterWindowsProfileOutput values.
// You can construct a concrete instance of `KubernetesClusterWindowsProfileInput` via:
//
//	KubernetesClusterWindowsProfileArgs{...}
type KubernetesClusterWindowsProfileInput interface {
	pulumi.Input

	ToKubernetesClusterWindowsProfileOutput() KubernetesClusterWindowsProfileOutput
	ToKubernetesClusterWindowsProfileOutputWithContext(context.Context) KubernetesClusterWindowsProfileOutput
}

type KubernetesClusterWindowsProfileArgs struct {
	// The Admin Password for Windows VMs. Length must be between 14 and 123 characters.
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// The Admin Username for Windows VMs. Changing this forces a new resource to be created.
	AdminUsername pulumi.StringInput `pulumi:"adminUsername"`
	// A `gmsa` block as defined below.
	Gmsa KubernetesClusterWindowsProfileGmsaPtrInput `pulumi:"gmsa"`
	// Specifies the type of on-premise license which should be used for Node Pool Windows Virtual Machine. At this time the only possible value is `Windows_Server`.
	License pulumi.StringPtrInput `pulumi:"license"`
}

func (KubernetesClusterWindowsProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterWindowsProfile)(nil)).Elem()
}

func (i KubernetesClusterWindowsProfileArgs) ToKubernetesClusterWindowsProfileOutput() KubernetesClusterWindowsProfileOutput {
	return i.ToKubernetesClusterWindowsProfileOutputWithContext(context.Background())
}

func (i KubernetesClusterWindowsProfileArgs) ToKubernetesClusterWindowsProfileOutputWithContext(ctx context.Context) KubernetesClusterWindowsProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterWindowsProfileOutput)
}

func (i KubernetesClusterWindowsProfileArgs) ToKubernetesClusterWindowsProfilePtrOutput() KubernetesClusterWindowsProfilePtrOutput {
	return i.ToKubernetesClusterWindowsProfilePtrOutputWithContext(context.Background())
}

func (i KubernetesClusterWindowsProfileArgs) ToKubernetesClusterWindowsProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterWindowsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterWindowsProfileOutput).ToKubernetesClusterWindowsProfilePtrOutputWithContext(ctx)
}

// KubernetesClusterWindowsProfilePtrInput is an input type that accepts KubernetesClusterWindowsProfileArgs, KubernetesClusterWindowsProfilePtr and KubernetesClusterWindowsProfilePtrOutput values.
// You can construct a concrete instance of `KubernetesClusterWindowsProfilePtrInput` via:
//
//	        KubernetesClusterWindowsProfileArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterWindowsProfilePtrInput interface {
	pulumi.Input

	ToKubernetesClusterWindowsProfilePtrOutput() KubernetesClusterWindowsProfilePtrOutput
	ToKubernetesClusterWindowsProfilePtrOutputWithContext(context.Context) KubernetesClusterWindowsProfilePtrOutput
}

type kubernetesClusterWindowsProfilePtrType KubernetesClusterWindowsProfileArgs

func KubernetesClusterWindowsProfilePtr(v *KubernetesClusterWindowsProfileArgs) KubernetesClusterWindowsProfilePtrInput {
	return (*kubernetesClusterWindowsProfilePtrType)(v)
}

func (*kubernetesClusterWindowsProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterWindowsProfile)(nil)).Elem()
}

func (i *kubernetesClusterWindowsProfilePtrType) ToKubernetesClusterWindowsProfilePtrOutput() KubernetesClusterWindowsProfilePtrOutput {
	return i.ToKubernetesClusterWindowsProfilePtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterWindowsProfilePtrType) ToKubernetesClusterWindowsProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterWindowsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterWindowsProfilePtrOutput)
}

type KubernetesClusterWindowsProfileOutput struct{ *pulumi.OutputState }

func (KubernetesClusterWindowsProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterWindowsProfile)(nil)).Elem()
}

func (o KubernetesClusterWindowsProfileOutput) ToKubernetesClusterWindowsProfileOutput() KubernetesClusterWindowsProfileOutput {
	return o
}

func (o KubernetesClusterWindowsProfileOutput) ToKubernetesClusterWindowsProfileOutputWithContext(ctx context.Context) KubernetesClusterWindowsProfileOutput {
	return o
}

func (o KubernetesClusterWindowsProfileOutput) ToKubernetesClusterWindowsProfilePtrOutput() KubernetesClusterWindowsProfilePtrOutput {
	return o.ToKubernetesClusterWindowsProfilePtrOutputWithContext(context.Background())
}

func (o KubernetesClusterWindowsProfileOutput) ToKubernetesClusterWindowsProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterWindowsProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterWindowsProfile) *KubernetesClusterWindowsProfile {
		return &v
	}).(KubernetesClusterWindowsProfilePtrOutput)
}

// The Admin Password for Windows VMs. Length must be between 14 and 123 characters.
func (o KubernetesClusterWindowsProfileOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterWindowsProfile) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// The Admin Username for Windows VMs. Changing this forces a new resource to be created.
func (o KubernetesClusterWindowsProfileOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterWindowsProfile) string { return v.AdminUsername }).(pulumi.StringOutput)
}

// A `gmsa` block as defined below.
func (o KubernetesClusterWindowsProfileOutput) Gmsa() KubernetesClusterWindowsProfileGmsaPtrOutput {
	return o.ApplyT(func(v KubernetesClusterWindowsProfile) *KubernetesClusterWindowsProfileGmsa { return v.Gmsa }).(KubernetesClusterWindowsProfileGmsaPtrOutput)
}

// Specifies the type of on-premise license which should be used for Node Pool Windows Virtual Machine. At this time the only possible value is `Windows_Server`.
func (o KubernetesClusterWindowsProfileOutput) License() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterWindowsProfile) *string { return v.License }).(pulumi.StringPtrOutput)
}

type KubernetesClusterWindowsProfilePtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterWindowsProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterWindowsProfile)(nil)).Elem()
}

func (o KubernetesClusterWindowsProfilePtrOutput) ToKubernetesClusterWindowsProfilePtrOutput() KubernetesClusterWindowsProfilePtrOutput {
	return o
}

func (o KubernetesClusterWindowsProfilePtrOutput) ToKubernetesClusterWindowsProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterWindowsProfilePtrOutput {
	return o
}

func (o KubernetesClusterWindowsProfilePtrOutput) Elem() KubernetesClusterWindowsProfileOutput {
	return o.ApplyT(func(v *KubernetesClusterWindowsProfile) KubernetesClusterWindowsProfile {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterWindowsProfile
		return ret
	}).(KubernetesClusterWindowsProfileOutput)
}

// The Admin Password for Windows VMs. Length must be between 14 and 123 characters.
func (o KubernetesClusterWindowsProfilePtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterWindowsProfile) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// The Admin Username for Windows VMs. Changing this forces a new resource to be created.
func (o KubernetesClusterWindowsProfilePtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterWindowsProfile) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// A `gmsa` block as defined below.
func (o KubernetesClusterWindowsProfilePtrOutput) Gmsa() KubernetesClusterWindowsProfileGmsaPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterWindowsProfile) *KubernetesClusterWindowsProfileGmsa {
		if v == nil {
			return nil
		}
		return v.Gmsa
	}).(KubernetesClusterWindowsProfileGmsaPtrOutput)
}

// Specifies the type of on-premise license which should be used for Node Pool Windows Virtual Machine. At this time the only possible value is `Windows_Server`.
func (o KubernetesClusterWindowsProfilePtrOutput) License() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterWindowsProfile) *string {
		if v == nil {
			return nil
		}
		return v.License
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterWindowsProfileGmsa struct {
	// Specifies the DNS server for Windows gMSA. Set this to an empty string if you have configured the DNS server in the VNet which was used to create the managed cluster.
	DnsServer string `pulumi:"dnsServer"`
	// Specifies the root domain name for Windows gMSA. Set this to an empty string if you have configured the DNS server in the VNet which was used to create the managed cluster.
	//
	// > **Note:** The properties `dnsServer` and `rootDomain` must both either be set or unset, i.e. empty.
	RootDomain string `pulumi:"rootDomain"`
}

// KubernetesClusterWindowsProfileGmsaInput is an input type that accepts KubernetesClusterWindowsProfileGmsaArgs and KubernetesClusterWindowsProfileGmsaOutput values.
// You can construct a concrete instance of `KubernetesClusterWindowsProfileGmsaInput` via:
//
//	KubernetesClusterWindowsProfileGmsaArgs{...}
type KubernetesClusterWindowsProfileGmsaInput interface {
	pulumi.Input

	ToKubernetesClusterWindowsProfileGmsaOutput() KubernetesClusterWindowsProfileGmsaOutput
	ToKubernetesClusterWindowsProfileGmsaOutputWithContext(context.Context) KubernetesClusterWindowsProfileGmsaOutput
}

type KubernetesClusterWindowsProfileGmsaArgs struct {
	// Specifies the DNS server for Windows gMSA. Set this to an empty string if you have configured the DNS server in the VNet which was used to create the managed cluster.
	DnsServer pulumi.StringInput `pulumi:"dnsServer"`
	// Specifies the root domain name for Windows gMSA. Set this to an empty string if you have configured the DNS server in the VNet which was used to create the managed cluster.
	//
	// > **Note:** The properties `dnsServer` and `rootDomain` must both either be set or unset, i.e. empty.
	RootDomain pulumi.StringInput `pulumi:"rootDomain"`
}

func (KubernetesClusterWindowsProfileGmsaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterWindowsProfileGmsa)(nil)).Elem()
}

func (i KubernetesClusterWindowsProfileGmsaArgs) ToKubernetesClusterWindowsProfileGmsaOutput() KubernetesClusterWindowsProfileGmsaOutput {
	return i.ToKubernetesClusterWindowsProfileGmsaOutputWithContext(context.Background())
}

func (i KubernetesClusterWindowsProfileGmsaArgs) ToKubernetesClusterWindowsProfileGmsaOutputWithContext(ctx context.Context) KubernetesClusterWindowsProfileGmsaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterWindowsProfileGmsaOutput)
}

func (i KubernetesClusterWindowsProfileGmsaArgs) ToKubernetesClusterWindowsProfileGmsaPtrOutput() KubernetesClusterWindowsProfileGmsaPtrOutput {
	return i.ToKubernetesClusterWindowsProfileGmsaPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterWindowsProfileGmsaArgs) ToKubernetesClusterWindowsProfileGmsaPtrOutputWithContext(ctx context.Context) KubernetesClusterWindowsProfileGmsaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterWindowsProfileGmsaOutput).ToKubernetesClusterWindowsProfileGmsaPtrOutputWithContext(ctx)
}

// KubernetesClusterWindowsProfileGmsaPtrInput is an input type that accepts KubernetesClusterWindowsProfileGmsaArgs, KubernetesClusterWindowsProfileGmsaPtr and KubernetesClusterWindowsProfileGmsaPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterWindowsProfileGmsaPtrInput` via:
//
//	        KubernetesClusterWindowsProfileGmsaArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterWindowsProfileGmsaPtrInput interface {
	pulumi.Input

	ToKubernetesClusterWindowsProfileGmsaPtrOutput() KubernetesClusterWindowsProfileGmsaPtrOutput
	ToKubernetesClusterWindowsProfileGmsaPtrOutputWithContext(context.Context) KubernetesClusterWindowsProfileGmsaPtrOutput
}

type kubernetesClusterWindowsProfileGmsaPtrType KubernetesClusterWindowsProfileGmsaArgs

func KubernetesClusterWindowsProfileGmsaPtr(v *KubernetesClusterWindowsProfileGmsaArgs) KubernetesClusterWindowsProfileGmsaPtrInput {
	return (*kubernetesClusterWindowsProfileGmsaPtrType)(v)
}

func (*kubernetesClusterWindowsProfileGmsaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterWindowsProfileGmsa)(nil)).Elem()
}

func (i *kubernetesClusterWindowsProfileGmsaPtrType) ToKubernetesClusterWindowsProfileGmsaPtrOutput() KubernetesClusterWindowsProfileGmsaPtrOutput {
	return i.ToKubernetesClusterWindowsProfileGmsaPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterWindowsProfileGmsaPtrType) ToKubernetesClusterWindowsProfileGmsaPtrOutputWithContext(ctx context.Context) KubernetesClusterWindowsProfileGmsaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterWindowsProfileGmsaPtrOutput)
}

type KubernetesClusterWindowsProfileGmsaOutput struct{ *pulumi.OutputState }

func (KubernetesClusterWindowsProfileGmsaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterWindowsProfileGmsa)(nil)).Elem()
}

func (o KubernetesClusterWindowsProfileGmsaOutput) ToKubernetesClusterWindowsProfileGmsaOutput() KubernetesClusterWindowsProfileGmsaOutput {
	return o
}

func (o KubernetesClusterWindowsProfileGmsaOutput) ToKubernetesClusterWindowsProfileGmsaOutputWithContext(ctx context.Context) KubernetesClusterWindowsProfileGmsaOutput {
	return o
}

func (o KubernetesClusterWindowsProfileGmsaOutput) ToKubernetesClusterWindowsProfileGmsaPtrOutput() KubernetesClusterWindowsProfileGmsaPtrOutput {
	return o.ToKubernetesClusterWindowsProfileGmsaPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterWindowsProfileGmsaOutput) ToKubernetesClusterWindowsProfileGmsaPtrOutputWithContext(ctx context.Context) KubernetesClusterWindowsProfileGmsaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterWindowsProfileGmsa) *KubernetesClusterWindowsProfileGmsa {
		return &v
	}).(KubernetesClusterWindowsProfileGmsaPtrOutput)
}

// Specifies the DNS server for Windows gMSA. Set this to an empty string if you have configured the DNS server in the VNet which was used to create the managed cluster.
func (o KubernetesClusterWindowsProfileGmsaOutput) DnsServer() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterWindowsProfileGmsa) string { return v.DnsServer }).(pulumi.StringOutput)
}

// Specifies the root domain name for Windows gMSA. Set this to an empty string if you have configured the DNS server in the VNet which was used to create the managed cluster.
//
// > **Note:** The properties `dnsServer` and `rootDomain` must both either be set or unset, i.e. empty.
func (o KubernetesClusterWindowsProfileGmsaOutput) RootDomain() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterWindowsProfileGmsa) string { return v.RootDomain }).(pulumi.StringOutput)
}

type KubernetesClusterWindowsProfileGmsaPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterWindowsProfileGmsaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterWindowsProfileGmsa)(nil)).Elem()
}

func (o KubernetesClusterWindowsProfileGmsaPtrOutput) ToKubernetesClusterWindowsProfileGmsaPtrOutput() KubernetesClusterWindowsProfileGmsaPtrOutput {
	return o
}

func (o KubernetesClusterWindowsProfileGmsaPtrOutput) ToKubernetesClusterWindowsProfileGmsaPtrOutputWithContext(ctx context.Context) KubernetesClusterWindowsProfileGmsaPtrOutput {
	return o
}

func (o KubernetesClusterWindowsProfileGmsaPtrOutput) Elem() KubernetesClusterWindowsProfileGmsaOutput {
	return o.ApplyT(func(v *KubernetesClusterWindowsProfileGmsa) KubernetesClusterWindowsProfileGmsa {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterWindowsProfileGmsa
		return ret
	}).(KubernetesClusterWindowsProfileGmsaOutput)
}

// Specifies the DNS server for Windows gMSA. Set this to an empty string if you have configured the DNS server in the VNet which was used to create the managed cluster.
func (o KubernetesClusterWindowsProfileGmsaPtrOutput) DnsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterWindowsProfileGmsa) *string {
		if v == nil {
			return nil
		}
		return &v.DnsServer
	}).(pulumi.StringPtrOutput)
}

// Specifies the root domain name for Windows gMSA. Set this to an empty string if you have configured the DNS server in the VNet which was used to create the managed cluster.
//
// > **Note:** The properties `dnsServer` and `rootDomain` must both either be set or unset, i.e. empty.
func (o KubernetesClusterWindowsProfileGmsaPtrOutput) RootDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterWindowsProfileGmsa) *string {
		if v == nil {
			return nil
		}
		return &v.RootDomain
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterWorkloadAutoscalerProfile struct {
	// Specifies whether KEDA Autoscaler can be used for workloads.
	KedaEnabled *bool `pulumi:"kedaEnabled"`
	// Which resources values should be controlled.
	VerticalPodAutoscalerControlledValues *string `pulumi:"verticalPodAutoscalerControlledValues"`
	// Specifies whether Vertical Pod Autoscaler should be enabled.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/AKS-VPAPreview` is enabled and the Resource Provider is re-registered, see the documentation for more information.
	VerticalPodAutoscalerEnabled *bool `pulumi:"verticalPodAutoscalerEnabled"`
	// How the autoscaler applies changes to pod resources.
	VerticalPodAutoscalerUpdateMode *string `pulumi:"verticalPodAutoscalerUpdateMode"`
}

// KubernetesClusterWorkloadAutoscalerProfileInput is an input type that accepts KubernetesClusterWorkloadAutoscalerProfileArgs and KubernetesClusterWorkloadAutoscalerProfileOutput values.
// You can construct a concrete instance of `KubernetesClusterWorkloadAutoscalerProfileInput` via:
//
//	KubernetesClusterWorkloadAutoscalerProfileArgs{...}
type KubernetesClusterWorkloadAutoscalerProfileInput interface {
	pulumi.Input

	ToKubernetesClusterWorkloadAutoscalerProfileOutput() KubernetesClusterWorkloadAutoscalerProfileOutput
	ToKubernetesClusterWorkloadAutoscalerProfileOutputWithContext(context.Context) KubernetesClusterWorkloadAutoscalerProfileOutput
}

type KubernetesClusterWorkloadAutoscalerProfileArgs struct {
	// Specifies whether KEDA Autoscaler can be used for workloads.
	KedaEnabled pulumi.BoolPtrInput `pulumi:"kedaEnabled"`
	// Which resources values should be controlled.
	VerticalPodAutoscalerControlledValues pulumi.StringPtrInput `pulumi:"verticalPodAutoscalerControlledValues"`
	// Specifies whether Vertical Pod Autoscaler should be enabled.
	//
	// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/AKS-VPAPreview` is enabled and the Resource Provider is re-registered, see the documentation for more information.
	VerticalPodAutoscalerEnabled pulumi.BoolPtrInput `pulumi:"verticalPodAutoscalerEnabled"`
	// How the autoscaler applies changes to pod resources.
	VerticalPodAutoscalerUpdateMode pulumi.StringPtrInput `pulumi:"verticalPodAutoscalerUpdateMode"`
}

func (KubernetesClusterWorkloadAutoscalerProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterWorkloadAutoscalerProfile)(nil)).Elem()
}

func (i KubernetesClusterWorkloadAutoscalerProfileArgs) ToKubernetesClusterWorkloadAutoscalerProfileOutput() KubernetesClusterWorkloadAutoscalerProfileOutput {
	return i.ToKubernetesClusterWorkloadAutoscalerProfileOutputWithContext(context.Background())
}

func (i KubernetesClusterWorkloadAutoscalerProfileArgs) ToKubernetesClusterWorkloadAutoscalerProfileOutputWithContext(ctx context.Context) KubernetesClusterWorkloadAutoscalerProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterWorkloadAutoscalerProfileOutput)
}

func (i KubernetesClusterWorkloadAutoscalerProfileArgs) ToKubernetesClusterWorkloadAutoscalerProfilePtrOutput() KubernetesClusterWorkloadAutoscalerProfilePtrOutput {
	return i.ToKubernetesClusterWorkloadAutoscalerProfilePtrOutputWithContext(context.Background())
}

func (i KubernetesClusterWorkloadAutoscalerProfileArgs) ToKubernetesClusterWorkloadAutoscalerProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterWorkloadAutoscalerProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterWorkloadAutoscalerProfileOutput).ToKubernetesClusterWorkloadAutoscalerProfilePtrOutputWithContext(ctx)
}

// KubernetesClusterWorkloadAutoscalerProfilePtrInput is an input type that accepts KubernetesClusterWorkloadAutoscalerProfileArgs, KubernetesClusterWorkloadAutoscalerProfilePtr and KubernetesClusterWorkloadAutoscalerProfilePtrOutput values.
// You can construct a concrete instance of `KubernetesClusterWorkloadAutoscalerProfilePtrInput` via:
//
//	        KubernetesClusterWorkloadAutoscalerProfileArgs{...}
//
//	or:
//
//	        nil
type KubernetesClusterWorkloadAutoscalerProfilePtrInput interface {
	pulumi.Input

	ToKubernetesClusterWorkloadAutoscalerProfilePtrOutput() KubernetesClusterWorkloadAutoscalerProfilePtrOutput
	ToKubernetesClusterWorkloadAutoscalerProfilePtrOutputWithContext(context.Context) KubernetesClusterWorkloadAutoscalerProfilePtrOutput
}

type kubernetesClusterWorkloadAutoscalerProfilePtrType KubernetesClusterWorkloadAutoscalerProfileArgs

func KubernetesClusterWorkloadAutoscalerProfilePtr(v *KubernetesClusterWorkloadAutoscalerProfileArgs) KubernetesClusterWorkloadAutoscalerProfilePtrInput {
	return (*kubernetesClusterWorkloadAutoscalerProfilePtrType)(v)
}

func (*kubernetesClusterWorkloadAutoscalerProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterWorkloadAutoscalerProfile)(nil)).Elem()
}

func (i *kubernetesClusterWorkloadAutoscalerProfilePtrType) ToKubernetesClusterWorkloadAutoscalerProfilePtrOutput() KubernetesClusterWorkloadAutoscalerProfilePtrOutput {
	return i.ToKubernetesClusterWorkloadAutoscalerProfilePtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterWorkloadAutoscalerProfilePtrType) ToKubernetesClusterWorkloadAutoscalerProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterWorkloadAutoscalerProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterWorkloadAutoscalerProfilePtrOutput)
}

type KubernetesClusterWorkloadAutoscalerProfileOutput struct{ *pulumi.OutputState }

func (KubernetesClusterWorkloadAutoscalerProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterWorkloadAutoscalerProfile)(nil)).Elem()
}

func (o KubernetesClusterWorkloadAutoscalerProfileOutput) ToKubernetesClusterWorkloadAutoscalerProfileOutput() KubernetesClusterWorkloadAutoscalerProfileOutput {
	return o
}

func (o KubernetesClusterWorkloadAutoscalerProfileOutput) ToKubernetesClusterWorkloadAutoscalerProfileOutputWithContext(ctx context.Context) KubernetesClusterWorkloadAutoscalerProfileOutput {
	return o
}

func (o KubernetesClusterWorkloadAutoscalerProfileOutput) ToKubernetesClusterWorkloadAutoscalerProfilePtrOutput() KubernetesClusterWorkloadAutoscalerProfilePtrOutput {
	return o.ToKubernetesClusterWorkloadAutoscalerProfilePtrOutputWithContext(context.Background())
}

func (o KubernetesClusterWorkloadAutoscalerProfileOutput) ToKubernetesClusterWorkloadAutoscalerProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterWorkloadAutoscalerProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterWorkloadAutoscalerProfile) *KubernetesClusterWorkloadAutoscalerProfile {
		return &v
	}).(KubernetesClusterWorkloadAutoscalerProfilePtrOutput)
}

// Specifies whether KEDA Autoscaler can be used for workloads.
func (o KubernetesClusterWorkloadAutoscalerProfileOutput) KedaEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterWorkloadAutoscalerProfile) *bool { return v.KedaEnabled }).(pulumi.BoolPtrOutput)
}

// Which resources values should be controlled.
func (o KubernetesClusterWorkloadAutoscalerProfileOutput) VerticalPodAutoscalerControlledValues() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterWorkloadAutoscalerProfile) *string {
		return v.VerticalPodAutoscalerControlledValues
	}).(pulumi.StringPtrOutput)
}

// Specifies whether Vertical Pod Autoscaler should be enabled.
//
// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/AKS-VPAPreview` is enabled and the Resource Provider is re-registered, see the documentation for more information.
func (o KubernetesClusterWorkloadAutoscalerProfileOutput) VerticalPodAutoscalerEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterWorkloadAutoscalerProfile) *bool { return v.VerticalPodAutoscalerEnabled }).(pulumi.BoolPtrOutput)
}

// How the autoscaler applies changes to pod resources.
func (o KubernetesClusterWorkloadAutoscalerProfileOutput) VerticalPodAutoscalerUpdateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterWorkloadAutoscalerProfile) *string { return v.VerticalPodAutoscalerUpdateMode }).(pulumi.StringPtrOutput)
}

type KubernetesClusterWorkloadAutoscalerProfilePtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterWorkloadAutoscalerProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterWorkloadAutoscalerProfile)(nil)).Elem()
}

func (o KubernetesClusterWorkloadAutoscalerProfilePtrOutput) ToKubernetesClusterWorkloadAutoscalerProfilePtrOutput() KubernetesClusterWorkloadAutoscalerProfilePtrOutput {
	return o
}

func (o KubernetesClusterWorkloadAutoscalerProfilePtrOutput) ToKubernetesClusterWorkloadAutoscalerProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterWorkloadAutoscalerProfilePtrOutput {
	return o
}

func (o KubernetesClusterWorkloadAutoscalerProfilePtrOutput) Elem() KubernetesClusterWorkloadAutoscalerProfileOutput {
	return o.ApplyT(func(v *KubernetesClusterWorkloadAutoscalerProfile) KubernetesClusterWorkloadAutoscalerProfile {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterWorkloadAutoscalerProfile
		return ret
	}).(KubernetesClusterWorkloadAutoscalerProfileOutput)
}

// Specifies whether KEDA Autoscaler can be used for workloads.
func (o KubernetesClusterWorkloadAutoscalerProfilePtrOutput) KedaEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterWorkloadAutoscalerProfile) *bool {
		if v == nil {
			return nil
		}
		return v.KedaEnabled
	}).(pulumi.BoolPtrOutput)
}

// Which resources values should be controlled.
func (o KubernetesClusterWorkloadAutoscalerProfilePtrOutput) VerticalPodAutoscalerControlledValues() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterWorkloadAutoscalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.VerticalPodAutoscalerControlledValues
	}).(pulumi.StringPtrOutput)
}

// Specifies whether Vertical Pod Autoscaler should be enabled.
//
// > **Note:** This requires that the Preview Feature `Microsoft.ContainerService/AKS-VPAPreview` is enabled and the Resource Provider is re-registered, see the documentation for more information.
func (o KubernetesClusterWorkloadAutoscalerProfilePtrOutput) VerticalPodAutoscalerEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterWorkloadAutoscalerProfile) *bool {
		if v == nil {
			return nil
		}
		return v.VerticalPodAutoscalerEnabled
	}).(pulumi.BoolPtrOutput)
}

// How the autoscaler applies changes to pod resources.
func (o KubernetesClusterWorkloadAutoscalerProfilePtrOutput) VerticalPodAutoscalerUpdateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterWorkloadAutoscalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.VerticalPodAutoscalerUpdateMode
	}).(pulumi.StringPtrOutput)
}

type KubernetesFleetManagerHubProfile struct {
	DnsPrefix         string  `pulumi:"dnsPrefix"`
	Fqdn              *string `pulumi:"fqdn"`
	KubernetesVersion *string `pulumi:"kubernetesVersion"`
}

// KubernetesFleetManagerHubProfileInput is an input type that accepts KubernetesFleetManagerHubProfileArgs and KubernetesFleetManagerHubProfileOutput values.
// You can construct a concrete instance of `KubernetesFleetManagerHubProfileInput` via:
//
//	KubernetesFleetManagerHubProfileArgs{...}
type KubernetesFleetManagerHubProfileInput interface {
	pulumi.Input

	ToKubernetesFleetManagerHubProfileOutput() KubernetesFleetManagerHubProfileOutput
	ToKubernetesFleetManagerHubProfileOutputWithContext(context.Context) KubernetesFleetManagerHubProfileOutput
}

type KubernetesFleetManagerHubProfileArgs struct {
	DnsPrefix         pulumi.StringInput    `pulumi:"dnsPrefix"`
	Fqdn              pulumi.StringPtrInput `pulumi:"fqdn"`
	KubernetesVersion pulumi.StringPtrInput `pulumi:"kubernetesVersion"`
}

func (KubernetesFleetManagerHubProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesFleetManagerHubProfile)(nil)).Elem()
}

func (i KubernetesFleetManagerHubProfileArgs) ToKubernetesFleetManagerHubProfileOutput() KubernetesFleetManagerHubProfileOutput {
	return i.ToKubernetesFleetManagerHubProfileOutputWithContext(context.Background())
}

func (i KubernetesFleetManagerHubProfileArgs) ToKubernetesFleetManagerHubProfileOutputWithContext(ctx context.Context) KubernetesFleetManagerHubProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesFleetManagerHubProfileOutput)
}

func (i KubernetesFleetManagerHubProfileArgs) ToKubernetesFleetManagerHubProfilePtrOutput() KubernetesFleetManagerHubProfilePtrOutput {
	return i.ToKubernetesFleetManagerHubProfilePtrOutputWithContext(context.Background())
}

func (i KubernetesFleetManagerHubProfileArgs) ToKubernetesFleetManagerHubProfilePtrOutputWithContext(ctx context.Context) KubernetesFleetManagerHubProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesFleetManagerHubProfileOutput).ToKubernetesFleetManagerHubProfilePtrOutputWithContext(ctx)
}

// KubernetesFleetManagerHubProfilePtrInput is an input type that accepts KubernetesFleetManagerHubProfileArgs, KubernetesFleetManagerHubProfilePtr and KubernetesFleetManagerHubProfilePtrOutput values.
// You can construct a concrete instance of `KubernetesFleetManagerHubProfilePtrInput` via:
//
//	        KubernetesFleetManagerHubProfileArgs{...}
//
//	or:
//
//	        nil
type KubernetesFleetManagerHubProfilePtrInput interface {
	pulumi.Input

	ToKubernetesFleetManagerHubProfilePtrOutput() KubernetesFleetManagerHubProfilePtrOutput
	ToKubernetesFleetManagerHubProfilePtrOutputWithContext(context.Context) KubernetesFleetManagerHubProfilePtrOutput
}

type kubernetesFleetManagerHubProfilePtrType KubernetesFleetManagerHubProfileArgs

func KubernetesFleetManagerHubProfilePtr(v *KubernetesFleetManagerHubProfileArgs) KubernetesFleetManagerHubProfilePtrInput {
	return (*kubernetesFleetManagerHubProfilePtrType)(v)
}

func (*kubernetesFleetManagerHubProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesFleetManagerHubProfile)(nil)).Elem()
}

func (i *kubernetesFleetManagerHubProfilePtrType) ToKubernetesFleetManagerHubProfilePtrOutput() KubernetesFleetManagerHubProfilePtrOutput {
	return i.ToKubernetesFleetManagerHubProfilePtrOutputWithContext(context.Background())
}

func (i *kubernetesFleetManagerHubProfilePtrType) ToKubernetesFleetManagerHubProfilePtrOutputWithContext(ctx context.Context) KubernetesFleetManagerHubProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesFleetManagerHubProfilePtrOutput)
}

type KubernetesFleetManagerHubProfileOutput struct{ *pulumi.OutputState }

func (KubernetesFleetManagerHubProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesFleetManagerHubProfile)(nil)).Elem()
}

func (o KubernetesFleetManagerHubProfileOutput) ToKubernetesFleetManagerHubProfileOutput() KubernetesFleetManagerHubProfileOutput {
	return o
}

func (o KubernetesFleetManagerHubProfileOutput) ToKubernetesFleetManagerHubProfileOutputWithContext(ctx context.Context) KubernetesFleetManagerHubProfileOutput {
	return o
}

func (o KubernetesFleetManagerHubProfileOutput) ToKubernetesFleetManagerHubProfilePtrOutput() KubernetesFleetManagerHubProfilePtrOutput {
	return o.ToKubernetesFleetManagerHubProfilePtrOutputWithContext(context.Background())
}

func (o KubernetesFleetManagerHubProfileOutput) ToKubernetesFleetManagerHubProfilePtrOutputWithContext(ctx context.Context) KubernetesFleetManagerHubProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesFleetManagerHubProfile) *KubernetesFleetManagerHubProfile {
		return &v
	}).(KubernetesFleetManagerHubProfilePtrOutput)
}

func (o KubernetesFleetManagerHubProfileOutput) DnsPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesFleetManagerHubProfile) string { return v.DnsPrefix }).(pulumi.StringOutput)
}

func (o KubernetesFleetManagerHubProfileOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesFleetManagerHubProfile) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

func (o KubernetesFleetManagerHubProfileOutput) KubernetesVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesFleetManagerHubProfile) *string { return v.KubernetesVersion }).(pulumi.StringPtrOutput)
}

type KubernetesFleetManagerHubProfilePtrOutput struct{ *pulumi.OutputState }

func (KubernetesFleetManagerHubProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesFleetManagerHubProfile)(nil)).Elem()
}

func (o KubernetesFleetManagerHubProfilePtrOutput) ToKubernetesFleetManagerHubProfilePtrOutput() KubernetesFleetManagerHubProfilePtrOutput {
	return o
}

func (o KubernetesFleetManagerHubProfilePtrOutput) ToKubernetesFleetManagerHubProfilePtrOutputWithContext(ctx context.Context) KubernetesFleetManagerHubProfilePtrOutput {
	return o
}

func (o KubernetesFleetManagerHubProfilePtrOutput) Elem() KubernetesFleetManagerHubProfileOutput {
	return o.ApplyT(func(v *KubernetesFleetManagerHubProfile) KubernetesFleetManagerHubProfile {
		if v != nil {
			return *v
		}
		var ret KubernetesFleetManagerHubProfile
		return ret
	}).(KubernetesFleetManagerHubProfileOutput)
}

func (o KubernetesFleetManagerHubProfilePtrOutput) DnsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesFleetManagerHubProfile) *string {
		if v == nil {
			return nil
		}
		return &v.DnsPrefix
	}).(pulumi.StringPtrOutput)
}

func (o KubernetesFleetManagerHubProfilePtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesFleetManagerHubProfile) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

func (o KubernetesFleetManagerHubProfilePtrOutput) KubernetesVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesFleetManagerHubProfile) *string {
		if v == nil {
			return nil
		}
		return v.KubernetesVersion
	}).(pulumi.StringPtrOutput)
}

type RegistryEncryption struct {
	// Boolean value that indicates whether encryption is enabled.
	Enabled *bool `pulumi:"enabled"`
	// The client ID of the managed identity associated with the encryption key.
	//
	// > **NOTE** The managed identity used in `encryption` also needs to be part of the `identity` block under `identityIds`
	IdentityClientId string `pulumi:"identityClientId"`
	// The ID of the Key Vault Key.
	KeyVaultKeyId string `pulumi:"keyVaultKeyId"`
}

// RegistryEncryptionInput is an input type that accepts RegistryEncryptionArgs and RegistryEncryptionOutput values.
// You can construct a concrete instance of `RegistryEncryptionInput` via:
//
//	RegistryEncryptionArgs{...}
type RegistryEncryptionInput interface {
	pulumi.Input

	ToRegistryEncryptionOutput() RegistryEncryptionOutput
	ToRegistryEncryptionOutputWithContext(context.Context) RegistryEncryptionOutput
}

type RegistryEncryptionArgs struct {
	// Boolean value that indicates whether encryption is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The client ID of the managed identity associated with the encryption key.
	//
	// > **NOTE** The managed identity used in `encryption` also needs to be part of the `identity` block under `identityIds`
	IdentityClientId pulumi.StringInput `pulumi:"identityClientId"`
	// The ID of the Key Vault Key.
	KeyVaultKeyId pulumi.StringInput `pulumi:"keyVaultKeyId"`
}

func (RegistryEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEncryption)(nil)).Elem()
}

func (i RegistryEncryptionArgs) ToRegistryEncryptionOutput() RegistryEncryptionOutput {
	return i.ToRegistryEncryptionOutputWithContext(context.Background())
}

func (i RegistryEncryptionArgs) ToRegistryEncryptionOutputWithContext(ctx context.Context) RegistryEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEncryptionOutput)
}

func (i RegistryEncryptionArgs) ToRegistryEncryptionPtrOutput() RegistryEncryptionPtrOutput {
	return i.ToRegistryEncryptionPtrOutputWithContext(context.Background())
}

func (i RegistryEncryptionArgs) ToRegistryEncryptionPtrOutputWithContext(ctx context.Context) RegistryEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEncryptionOutput).ToRegistryEncryptionPtrOutputWithContext(ctx)
}

// RegistryEncryptionPtrInput is an input type that accepts RegistryEncryptionArgs, RegistryEncryptionPtr and RegistryEncryptionPtrOutput values.
// You can construct a concrete instance of `RegistryEncryptionPtrInput` via:
//
//	        RegistryEncryptionArgs{...}
//
//	or:
//
//	        nil
type RegistryEncryptionPtrInput interface {
	pulumi.Input

	ToRegistryEncryptionPtrOutput() RegistryEncryptionPtrOutput
	ToRegistryEncryptionPtrOutputWithContext(context.Context) RegistryEncryptionPtrOutput
}

type registryEncryptionPtrType RegistryEncryptionArgs

func RegistryEncryptionPtr(v *RegistryEncryptionArgs) RegistryEncryptionPtrInput {
	return (*registryEncryptionPtrType)(v)
}

func (*registryEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEncryption)(nil)).Elem()
}

func (i *registryEncryptionPtrType) ToRegistryEncryptionPtrOutput() RegistryEncryptionPtrOutput {
	return i.ToRegistryEncryptionPtrOutputWithContext(context.Background())
}

func (i *registryEncryptionPtrType) ToRegistryEncryptionPtrOutputWithContext(ctx context.Context) RegistryEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEncryptionPtrOutput)
}

type RegistryEncryptionOutput struct{ *pulumi.OutputState }

func (RegistryEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEncryption)(nil)).Elem()
}

func (o RegistryEncryptionOutput) ToRegistryEncryptionOutput() RegistryEncryptionOutput {
	return o
}

func (o RegistryEncryptionOutput) ToRegistryEncryptionOutputWithContext(ctx context.Context) RegistryEncryptionOutput {
	return o
}

func (o RegistryEncryptionOutput) ToRegistryEncryptionPtrOutput() RegistryEncryptionPtrOutput {
	return o.ToRegistryEncryptionPtrOutputWithContext(context.Background())
}

func (o RegistryEncryptionOutput) ToRegistryEncryptionPtrOutputWithContext(ctx context.Context) RegistryEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryEncryption) *RegistryEncryption {
		return &v
	}).(RegistryEncryptionPtrOutput)
}

// Boolean value that indicates whether encryption is enabled.
func (o RegistryEncryptionOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RegistryEncryption) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The client ID of the managed identity associated with the encryption key.
//
// > **NOTE** The managed identity used in `encryption` also needs to be part of the `identity` block under `identityIds`
func (o RegistryEncryptionOutput) IdentityClientId() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryEncryption) string { return v.IdentityClientId }).(pulumi.StringOutput)
}

// The ID of the Key Vault Key.
func (o RegistryEncryptionOutput) KeyVaultKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryEncryption) string { return v.KeyVaultKeyId }).(pulumi.StringOutput)
}

type RegistryEncryptionPtrOutput struct{ *pulumi.OutputState }

func (RegistryEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEncryption)(nil)).Elem()
}

func (o RegistryEncryptionPtrOutput) ToRegistryEncryptionPtrOutput() RegistryEncryptionPtrOutput {
	return o
}

func (o RegistryEncryptionPtrOutput) ToRegistryEncryptionPtrOutputWithContext(ctx context.Context) RegistryEncryptionPtrOutput {
	return o
}

func (o RegistryEncryptionPtrOutput) Elem() RegistryEncryptionOutput {
	return o.ApplyT(func(v *RegistryEncryption) RegistryEncryption {
		if v != nil {
			return *v
		}
		var ret RegistryEncryption
		return ret
	}).(RegistryEncryptionOutput)
}

// Boolean value that indicates whether encryption is enabled.
func (o RegistryEncryptionPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RegistryEncryption) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The client ID of the managed identity associated with the encryption key.
//
// > **NOTE** The managed identity used in `encryption` also needs to be part of the `identity` block under `identityIds`
func (o RegistryEncryptionPtrOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryEncryption) *string {
		if v == nil {
			return nil
		}
		return &v.IdentityClientId
	}).(pulumi.StringPtrOutput)
}

// The ID of the Key Vault Key.
func (o RegistryEncryptionPtrOutput) KeyVaultKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryEncryption) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVaultKeyId
	}).(pulumi.StringPtrOutput)
}

type RegistryGeoreplication struct {
	// A location where the container registry should be geo-replicated.
	Location string `pulumi:"location"`
	// Whether regional endpoint is enabled for this Container Registry?
	RegionalEndpointEnabled *bool `pulumi:"regionalEndpointEnabled"`
	// A mapping of tags to assign to this replication location.
	Tags map[string]string `pulumi:"tags"`
	// Whether zone redundancy is enabled for this replication location? Defaults to `false`.
	//
	// > **NOTE:** Changing the `zoneRedundancyEnabled` forces the a underlying replication to be created.
	ZoneRedundancyEnabled *bool `pulumi:"zoneRedundancyEnabled"`
}

// RegistryGeoreplicationInput is an input type that accepts RegistryGeoreplicationArgs and RegistryGeoreplicationOutput values.
// You can construct a concrete instance of `RegistryGeoreplicationInput` via:
//
//	RegistryGeoreplicationArgs{...}
type RegistryGeoreplicationInput interface {
	pulumi.Input

	ToRegistryGeoreplicationOutput() RegistryGeoreplicationOutput
	ToRegistryGeoreplicationOutputWithContext(context.Context) RegistryGeoreplicationOutput
}

type RegistryGeoreplicationArgs struct {
	// A location where the container registry should be geo-replicated.
	Location pulumi.StringInput `pulumi:"location"`
	// Whether regional endpoint is enabled for this Container Registry?
	RegionalEndpointEnabled pulumi.BoolPtrInput `pulumi:"regionalEndpointEnabled"`
	// A mapping of tags to assign to this replication location.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Whether zone redundancy is enabled for this replication location? Defaults to `false`.
	//
	// > **NOTE:** Changing the `zoneRedundancyEnabled` forces the a underlying replication to be created.
	ZoneRedundancyEnabled pulumi.BoolPtrInput `pulumi:"zoneRedundancyEnabled"`
}

func (RegistryGeoreplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryGeoreplication)(nil)).Elem()
}

func (i RegistryGeoreplicationArgs) ToRegistryGeoreplicationOutput() RegistryGeoreplicationOutput {
	return i.ToRegistryGeoreplicationOutputWithContext(context.Background())
}

func (i RegistryGeoreplicationArgs) ToRegistryGeoreplicationOutputWithContext(ctx context.Context) RegistryGeoreplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryGeoreplicationOutput)
}

// RegistryGeoreplicationArrayInput is an input type that accepts RegistryGeoreplicationArray and RegistryGeoreplicationArrayOutput values.
// You can construct a concrete instance of `RegistryGeoreplicationArrayInput` via:
//
//	RegistryGeoreplicationArray{ RegistryGeoreplicationArgs{...} }
type RegistryGeoreplicationArrayInput interface {
	pulumi.Input

	ToRegistryGeoreplicationArrayOutput() RegistryGeoreplicationArrayOutput
	ToRegistryGeoreplicationArrayOutputWithContext(context.Context) RegistryGeoreplicationArrayOutput
}

type RegistryGeoreplicationArray []RegistryGeoreplicationInput

func (RegistryGeoreplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryGeoreplication)(nil)).Elem()
}

func (i RegistryGeoreplicationArray) ToRegistryGeoreplicationArrayOutput() RegistryGeoreplicationArrayOutput {
	return i.ToRegistryGeoreplicationArrayOutputWithContext(context.Background())
}

func (i RegistryGeoreplicationArray) ToRegistryGeoreplicationArrayOutputWithContext(ctx context.Context) RegistryGeoreplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryGeoreplicationArrayOutput)
}

type RegistryGeoreplicationOutput struct{ *pulumi.OutputState }

func (RegistryGeoreplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryGeoreplication)(nil)).Elem()
}

func (o RegistryGeoreplicationOutput) ToRegistryGeoreplicationOutput() RegistryGeoreplicationOutput {
	return o
}

func (o RegistryGeoreplicationOutput) ToRegistryGeoreplicationOutputWithContext(ctx context.Context) RegistryGeoreplicationOutput {
	return o
}

// A location where the container registry should be geo-replicated.
func (o RegistryGeoreplicationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryGeoreplication) string { return v.Location }).(pulumi.StringOutput)
}

// Whether regional endpoint is enabled for this Container Registry?
func (o RegistryGeoreplicationOutput) RegionalEndpointEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RegistryGeoreplication) *bool { return v.RegionalEndpointEnabled }).(pulumi.BoolPtrOutput)
}

// A mapping of tags to assign to this replication location.
func (o RegistryGeoreplicationOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RegistryGeoreplication) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Whether zone redundancy is enabled for this replication location? Defaults to `false`.
//
// > **NOTE:** Changing the `zoneRedundancyEnabled` forces the a underlying replication to be created.
func (o RegistryGeoreplicationOutput) ZoneRedundancyEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RegistryGeoreplication) *bool { return v.ZoneRedundancyEnabled }).(pulumi.BoolPtrOutput)
}

type RegistryGeoreplicationArrayOutput struct{ *pulumi.OutputState }

func (RegistryGeoreplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryGeoreplication)(nil)).Elem()
}

func (o RegistryGeoreplicationArrayOutput) ToRegistryGeoreplicationArrayOutput() RegistryGeoreplicationArrayOutput {
	return o
}

func (o RegistryGeoreplicationArrayOutput) ToRegistryGeoreplicationArrayOutputWithContext(ctx context.Context) RegistryGeoreplicationArrayOutput {
	return o
}

func (o RegistryGeoreplicationArrayOutput) Index(i pulumi.IntInput) RegistryGeoreplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegistryGeoreplication {
		return vs[0].([]RegistryGeoreplication)[vs[1].(int)]
	}).(RegistryGeoreplicationOutput)
}

type RegistryIdentity struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Container Registry.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId *string `pulumi:"principalId"`
	// The Tenant ID associated with this Managed Service Identity.
	TenantId *string `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this Container Registry. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
	Type string `pulumi:"type"`
}

// RegistryIdentityInput is an input type that accepts RegistryIdentityArgs and RegistryIdentityOutput values.
// You can construct a concrete instance of `RegistryIdentityInput` via:
//
//	RegistryIdentityArgs{...}
type RegistryIdentityInput interface {
	pulumi.Input

	ToRegistryIdentityOutput() RegistryIdentityOutput
	ToRegistryIdentityOutputWithContext(context.Context) RegistryIdentityOutput
}

type RegistryIdentityArgs struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Container Registry.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The Tenant ID associated with this Managed Service Identity.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this Container Registry. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
	Type pulumi.StringInput `pulumi:"type"`
}

func (RegistryIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryIdentity)(nil)).Elem()
}

func (i RegistryIdentityArgs) ToRegistryIdentityOutput() RegistryIdentityOutput {
	return i.ToRegistryIdentityOutputWithContext(context.Background())
}

func (i RegistryIdentityArgs) ToRegistryIdentityOutputWithContext(ctx context.Context) RegistryIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryIdentityOutput)
}

func (i RegistryIdentityArgs) ToRegistryIdentityPtrOutput() RegistryIdentityPtrOutput {
	return i.ToRegistryIdentityPtrOutputWithContext(context.Background())
}

func (i RegistryIdentityArgs) ToRegistryIdentityPtrOutputWithContext(ctx context.Context) RegistryIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryIdentityOutput).ToRegistryIdentityPtrOutputWithContext(ctx)
}

// RegistryIdentityPtrInput is an input type that accepts RegistryIdentityArgs, RegistryIdentityPtr and RegistryIdentityPtrOutput values.
// You can construct a concrete instance of `RegistryIdentityPtrInput` via:
//
//	        RegistryIdentityArgs{...}
//
//	or:
//
//	        nil
type RegistryIdentityPtrInput interface {
	pulumi.Input

	ToRegistryIdentityPtrOutput() RegistryIdentityPtrOutput
	ToRegistryIdentityPtrOutputWithContext(context.Context) RegistryIdentityPtrOutput
}

type registryIdentityPtrType RegistryIdentityArgs

func RegistryIdentityPtr(v *RegistryIdentityArgs) RegistryIdentityPtrInput {
	return (*registryIdentityPtrType)(v)
}

func (*registryIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryIdentity)(nil)).Elem()
}

func (i *registryIdentityPtrType) ToRegistryIdentityPtrOutput() RegistryIdentityPtrOutput {
	return i.ToRegistryIdentityPtrOutputWithContext(context.Background())
}

func (i *registryIdentityPtrType) ToRegistryIdentityPtrOutputWithContext(ctx context.Context) RegistryIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryIdentityPtrOutput)
}

type RegistryIdentityOutput struct{ *pulumi.OutputState }

func (RegistryIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryIdentity)(nil)).Elem()
}

func (o RegistryIdentityOutput) ToRegistryIdentityOutput() RegistryIdentityOutput {
	return o
}

func (o RegistryIdentityOutput) ToRegistryIdentityOutputWithContext(ctx context.Context) RegistryIdentityOutput {
	return o
}

func (o RegistryIdentityOutput) ToRegistryIdentityPtrOutput() RegistryIdentityPtrOutput {
	return o.ToRegistryIdentityPtrOutputWithContext(context.Background())
}

func (o RegistryIdentityOutput) ToRegistryIdentityPtrOutputWithContext(ctx context.Context) RegistryIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryIdentity) *RegistryIdentity {
		return &v
	}).(RegistryIdentityPtrOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Container Registry.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
func (o RegistryIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RegistryIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this Managed Service Identity.
func (o RegistryIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The Tenant ID associated with this Managed Service Identity.
func (o RegistryIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Container Registry. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
func (o RegistryIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type RegistryIdentityPtrOutput struct{ *pulumi.OutputState }

func (RegistryIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryIdentity)(nil)).Elem()
}

func (o RegistryIdentityPtrOutput) ToRegistryIdentityPtrOutput() RegistryIdentityPtrOutput {
	return o
}

func (o RegistryIdentityPtrOutput) ToRegistryIdentityPtrOutputWithContext(ctx context.Context) RegistryIdentityPtrOutput {
	return o
}

func (o RegistryIdentityPtrOutput) Elem() RegistryIdentityOutput {
	return o.ApplyT(func(v *RegistryIdentity) RegistryIdentity {
		if v != nil {
			return *v
		}
		var ret RegistryIdentity
		return ret
	}).(RegistryIdentityOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Container Registry.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
func (o RegistryIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RegistryIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this Managed Service Identity.
func (o RegistryIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID associated with this Managed Service Identity.
func (o RegistryIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Container Registry. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
func (o RegistryIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type RegistryNetworkRuleSet struct {
	// The behaviour for requests matching no rules. Either `Allow` or `Deny`. Defaults to `Allow`
	DefaultAction *string `pulumi:"defaultAction"`
	// One or more `ipRule` blocks as defined below.
	IpRules []RegistryNetworkRuleSetIpRule `pulumi:"ipRules"`
	// One or more `virtualNetwork` blocks as defined below.
	//
	// > **NOTE:** `networkRuleSet` is only supported with the `Premium` SKU at this time.
	//
	// > **NOTE:** Azure automatically configures Network Rules - to remove these you'll need to specify an `networkRuleSet` block with `defaultAction` set to `Deny`.
	VirtualNetworks []RegistryNetworkRuleSetVirtualNetwork `pulumi:"virtualNetworks"`
}

// RegistryNetworkRuleSetInput is an input type that accepts RegistryNetworkRuleSetArgs and RegistryNetworkRuleSetOutput values.
// You can construct a concrete instance of `RegistryNetworkRuleSetInput` via:
//
//	RegistryNetworkRuleSetArgs{...}
type RegistryNetworkRuleSetInput interface {
	pulumi.Input

	ToRegistryNetworkRuleSetOutput() RegistryNetworkRuleSetOutput
	ToRegistryNetworkRuleSetOutputWithContext(context.Context) RegistryNetworkRuleSetOutput
}

type RegistryNetworkRuleSetArgs struct {
	// The behaviour for requests matching no rules. Either `Allow` or `Deny`. Defaults to `Allow`
	DefaultAction pulumi.StringPtrInput `pulumi:"defaultAction"`
	// One or more `ipRule` blocks as defined below.
	IpRules RegistryNetworkRuleSetIpRuleArrayInput `pulumi:"ipRules"`
	// One or more `virtualNetwork` blocks as defined below.
	//
	// > **NOTE:** `networkRuleSet` is only supported with the `Premium` SKU at this time.
	//
	// > **NOTE:** Azure automatically configures Network Rules - to remove these you'll need to specify an `networkRuleSet` block with `defaultAction` set to `Deny`.
	VirtualNetworks RegistryNetworkRuleSetVirtualNetworkArrayInput `pulumi:"virtualNetworks"`
}

func (RegistryNetworkRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryNetworkRuleSet)(nil)).Elem()
}

func (i RegistryNetworkRuleSetArgs) ToRegistryNetworkRuleSetOutput() RegistryNetworkRuleSetOutput {
	return i.ToRegistryNetworkRuleSetOutputWithContext(context.Background())
}

func (i RegistryNetworkRuleSetArgs) ToRegistryNetworkRuleSetOutputWithContext(ctx context.Context) RegistryNetworkRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryNetworkRuleSetOutput)
}

func (i RegistryNetworkRuleSetArgs) ToRegistryNetworkRuleSetPtrOutput() RegistryNetworkRuleSetPtrOutput {
	return i.ToRegistryNetworkRuleSetPtrOutputWithContext(context.Background())
}

func (i RegistryNetworkRuleSetArgs) ToRegistryNetworkRuleSetPtrOutputWithContext(ctx context.Context) RegistryNetworkRuleSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryNetworkRuleSetOutput).ToRegistryNetworkRuleSetPtrOutputWithContext(ctx)
}

// RegistryNetworkRuleSetPtrInput is an input type that accepts RegistryNetworkRuleSetArgs, RegistryNetworkRuleSetPtr and RegistryNetworkRuleSetPtrOutput values.
// You can construct a concrete instance of `RegistryNetworkRuleSetPtrInput` via:
//
//	        RegistryNetworkRuleSetArgs{...}
//
//	or:
//
//	        nil
type RegistryNetworkRuleSetPtrInput interface {
	pulumi.Input

	ToRegistryNetworkRuleSetPtrOutput() RegistryNetworkRuleSetPtrOutput
	ToRegistryNetworkRuleSetPtrOutputWithContext(context.Context) RegistryNetworkRuleSetPtrOutput
}

type registryNetworkRuleSetPtrType RegistryNetworkRuleSetArgs

func RegistryNetworkRuleSetPtr(v *RegistryNetworkRuleSetArgs) RegistryNetworkRuleSetPtrInput {
	return (*registryNetworkRuleSetPtrType)(v)
}

func (*registryNetworkRuleSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryNetworkRuleSet)(nil)).Elem()
}

func (i *registryNetworkRuleSetPtrType) ToRegistryNetworkRuleSetPtrOutput() RegistryNetworkRuleSetPtrOutput {
	return i.ToRegistryNetworkRuleSetPtrOutputWithContext(context.Background())
}

func (i *registryNetworkRuleSetPtrType) ToRegistryNetworkRuleSetPtrOutputWithContext(ctx context.Context) RegistryNetworkRuleSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryNetworkRuleSetPtrOutput)
}

type RegistryNetworkRuleSetOutput struct{ *pulumi.OutputState }

func (RegistryNetworkRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryNetworkRuleSet)(nil)).Elem()
}

func (o RegistryNetworkRuleSetOutput) ToRegistryNetworkRuleSetOutput() RegistryNetworkRuleSetOutput {
	return o
}

func (o RegistryNetworkRuleSetOutput) ToRegistryNetworkRuleSetOutputWithContext(ctx context.Context) RegistryNetworkRuleSetOutput {
	return o
}

func (o RegistryNetworkRuleSetOutput) ToRegistryNetworkRuleSetPtrOutput() RegistryNetworkRuleSetPtrOutput {
	return o.ToRegistryNetworkRuleSetPtrOutputWithContext(context.Background())
}

func (o RegistryNetworkRuleSetOutput) ToRegistryNetworkRuleSetPtrOutputWithContext(ctx context.Context) RegistryNetworkRuleSetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryNetworkRuleSet) *RegistryNetworkRuleSet {
		return &v
	}).(RegistryNetworkRuleSetPtrOutput)
}

// The behaviour for requests matching no rules. Either `Allow` or `Deny`. Defaults to `Allow`
func (o RegistryNetworkRuleSetOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryNetworkRuleSet) *string { return v.DefaultAction }).(pulumi.StringPtrOutput)
}

// One or more `ipRule` blocks as defined below.
func (o RegistryNetworkRuleSetOutput) IpRules() RegistryNetworkRuleSetIpRuleArrayOutput {
	return o.ApplyT(func(v RegistryNetworkRuleSet) []RegistryNetworkRuleSetIpRule { return v.IpRules }).(RegistryNetworkRuleSetIpRuleArrayOutput)
}

// One or more `virtualNetwork` blocks as defined below.
//
// > **NOTE:** `networkRuleSet` is only supported with the `Premium` SKU at this time.
//
// > **NOTE:** Azure automatically configures Network Rules - to remove these you'll need to specify an `networkRuleSet` block with `defaultAction` set to `Deny`.
func (o RegistryNetworkRuleSetOutput) VirtualNetworks() RegistryNetworkRuleSetVirtualNetworkArrayOutput {
	return o.ApplyT(func(v RegistryNetworkRuleSet) []RegistryNetworkRuleSetVirtualNetwork { return v.VirtualNetworks }).(RegistryNetworkRuleSetVirtualNetworkArrayOutput)
}

type RegistryNetworkRuleSetPtrOutput struct{ *pulumi.OutputState }

func (RegistryNetworkRuleSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryNetworkRuleSet)(nil)).Elem()
}

func (o RegistryNetworkRuleSetPtrOutput) ToRegistryNetworkRuleSetPtrOutput() RegistryNetworkRuleSetPtrOutput {
	return o
}

func (o RegistryNetworkRuleSetPtrOutput) ToRegistryNetworkRuleSetPtrOutputWithContext(ctx context.Context) RegistryNetworkRuleSetPtrOutput {
	return o
}

func (o RegistryNetworkRuleSetPtrOutput) Elem() RegistryNetworkRuleSetOutput {
	return o.ApplyT(func(v *RegistryNetworkRuleSet) RegistryNetworkRuleSet {
		if v != nil {
			return *v
		}
		var ret RegistryNetworkRuleSet
		return ret
	}).(RegistryNetworkRuleSetOutput)
}

// The behaviour for requests matching no rules. Either `Allow` or `Deny`. Defaults to `Allow`
func (o RegistryNetworkRuleSetPtrOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryNetworkRuleSet) *string {
		if v == nil {
			return nil
		}
		return v.DefaultAction
	}).(pulumi.StringPtrOutput)
}

// One or more `ipRule` blocks as defined below.
func (o RegistryNetworkRuleSetPtrOutput) IpRules() RegistryNetworkRuleSetIpRuleArrayOutput {
	return o.ApplyT(func(v *RegistryNetworkRuleSet) []RegistryNetworkRuleSetIpRule {
		if v == nil {
			return nil
		}
		return v.IpRules
	}).(RegistryNetworkRuleSetIpRuleArrayOutput)
}

// One or more `virtualNetwork` blocks as defined below.
//
// > **NOTE:** `networkRuleSet` is only supported with the `Premium` SKU at this time.
//
// > **NOTE:** Azure automatically configures Network Rules - to remove these you'll need to specify an `networkRuleSet` block with `defaultAction` set to `Deny`.
func (o RegistryNetworkRuleSetPtrOutput) VirtualNetworks() RegistryNetworkRuleSetVirtualNetworkArrayOutput {
	return o.ApplyT(func(v *RegistryNetworkRuleSet) []RegistryNetworkRuleSetVirtualNetwork {
		if v == nil {
			return nil
		}
		return v.VirtualNetworks
	}).(RegistryNetworkRuleSetVirtualNetworkArrayOutput)
}

type RegistryNetworkRuleSetIpRule struct {
	// The behaviour for requests matching this rule. At this time the only supported value is `Allow`
	Action string `pulumi:"action"`
	// The CIDR block from which requests will match the rule.
	IpRange string `pulumi:"ipRange"`
}

// RegistryNetworkRuleSetIpRuleInput is an input type that accepts RegistryNetworkRuleSetIpRuleArgs and RegistryNetworkRuleSetIpRuleOutput values.
// You can construct a concrete instance of `RegistryNetworkRuleSetIpRuleInput` via:
//
//	RegistryNetworkRuleSetIpRuleArgs{...}
type RegistryNetworkRuleSetIpRuleInput interface {
	pulumi.Input

	ToRegistryNetworkRuleSetIpRuleOutput() RegistryNetworkRuleSetIpRuleOutput
	ToRegistryNetworkRuleSetIpRuleOutputWithContext(context.Context) RegistryNetworkRuleSetIpRuleOutput
}

type RegistryNetworkRuleSetIpRuleArgs struct {
	// The behaviour for requests matching this rule. At this time the only supported value is `Allow`
	Action pulumi.StringInput `pulumi:"action"`
	// The CIDR block from which requests will match the rule.
	IpRange pulumi.StringInput `pulumi:"ipRange"`
}

func (RegistryNetworkRuleSetIpRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryNetworkRuleSetIpRule)(nil)).Elem()
}

func (i RegistryNetworkRuleSetIpRuleArgs) ToRegistryNetworkRuleSetIpRuleOutput() RegistryNetworkRuleSetIpRuleOutput {
	return i.ToRegistryNetworkRuleSetIpRuleOutputWithContext(context.Background())
}

func (i RegistryNetworkRuleSetIpRuleArgs) ToRegistryNetworkRuleSetIpRuleOutputWithContext(ctx context.Context) RegistryNetworkRuleSetIpRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryNetworkRuleSetIpRuleOutput)
}

// RegistryNetworkRuleSetIpRuleArrayInput is an input type that accepts RegistryNetworkRuleSetIpRuleArray and RegistryNetworkRuleSetIpRuleArrayOutput values.
// You can construct a concrete instance of `RegistryNetworkRuleSetIpRuleArrayInput` via:
//
//	RegistryNetworkRuleSetIpRuleArray{ RegistryNetworkRuleSetIpRuleArgs{...} }
type RegistryNetworkRuleSetIpRuleArrayInput interface {
	pulumi.Input

	ToRegistryNetworkRuleSetIpRuleArrayOutput() RegistryNetworkRuleSetIpRuleArrayOutput
	ToRegistryNetworkRuleSetIpRuleArrayOutputWithContext(context.Context) RegistryNetworkRuleSetIpRuleArrayOutput
}

type RegistryNetworkRuleSetIpRuleArray []RegistryNetworkRuleSetIpRuleInput

func (RegistryNetworkRuleSetIpRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryNetworkRuleSetIpRule)(nil)).Elem()
}

func (i RegistryNetworkRuleSetIpRuleArray) ToRegistryNetworkRuleSetIpRuleArrayOutput() RegistryNetworkRuleSetIpRuleArrayOutput {
	return i.ToRegistryNetworkRuleSetIpRuleArrayOutputWithContext(context.Background())
}

func (i RegistryNetworkRuleSetIpRuleArray) ToRegistryNetworkRuleSetIpRuleArrayOutputWithContext(ctx context.Context) RegistryNetworkRuleSetIpRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryNetworkRuleSetIpRuleArrayOutput)
}

type RegistryNetworkRuleSetIpRuleOutput struct{ *pulumi.OutputState }

func (RegistryNetworkRuleSetIpRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryNetworkRuleSetIpRule)(nil)).Elem()
}

func (o RegistryNetworkRuleSetIpRuleOutput) ToRegistryNetworkRuleSetIpRuleOutput() RegistryNetworkRuleSetIpRuleOutput {
	return o
}

func (o RegistryNetworkRuleSetIpRuleOutput) ToRegistryNetworkRuleSetIpRuleOutputWithContext(ctx context.Context) RegistryNetworkRuleSetIpRuleOutput {
	return o
}

// The behaviour for requests matching this rule. At this time the only supported value is `Allow`
func (o RegistryNetworkRuleSetIpRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryNetworkRuleSetIpRule) string { return v.Action }).(pulumi.StringOutput)
}

// The CIDR block from which requests will match the rule.
func (o RegistryNetworkRuleSetIpRuleOutput) IpRange() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryNetworkRuleSetIpRule) string { return v.IpRange }).(pulumi.StringOutput)
}

type RegistryNetworkRuleSetIpRuleArrayOutput struct{ *pulumi.OutputState }

func (RegistryNetworkRuleSetIpRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryNetworkRuleSetIpRule)(nil)).Elem()
}

func (o RegistryNetworkRuleSetIpRuleArrayOutput) ToRegistryNetworkRuleSetIpRuleArrayOutput() RegistryNetworkRuleSetIpRuleArrayOutput {
	return o
}

func (o RegistryNetworkRuleSetIpRuleArrayOutput) ToRegistryNetworkRuleSetIpRuleArrayOutputWithContext(ctx context.Context) RegistryNetworkRuleSetIpRuleArrayOutput {
	return o
}

func (o RegistryNetworkRuleSetIpRuleArrayOutput) Index(i pulumi.IntInput) RegistryNetworkRuleSetIpRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegistryNetworkRuleSetIpRule {
		return vs[0].([]RegistryNetworkRuleSetIpRule)[vs[1].(int)]
	}).(RegistryNetworkRuleSetIpRuleOutput)
}

type RegistryNetworkRuleSetVirtualNetwork struct {
	// The behaviour for requests matching this rule. At this time the only supported value is `Allow`
	Action string `pulumi:"action"`
	// The subnet id from which requests will match the rule.
	SubnetId string `pulumi:"subnetId"`
}

// RegistryNetworkRuleSetVirtualNetworkInput is an input type that accepts RegistryNetworkRuleSetVirtualNetworkArgs and RegistryNetworkRuleSetVirtualNetworkOutput values.
// You can construct a concrete instance of `RegistryNetworkRuleSetVirtualNetworkInput` via:
//
//	RegistryNetworkRuleSetVirtualNetworkArgs{...}
type RegistryNetworkRuleSetVirtualNetworkInput interface {
	pulumi.Input

	ToRegistryNetworkRuleSetVirtualNetworkOutput() RegistryNetworkRuleSetVirtualNetworkOutput
	ToRegistryNetworkRuleSetVirtualNetworkOutputWithContext(context.Context) RegistryNetworkRuleSetVirtualNetworkOutput
}

type RegistryNetworkRuleSetVirtualNetworkArgs struct {
	// The behaviour for requests matching this rule. At this time the only supported value is `Allow`
	Action pulumi.StringInput `pulumi:"action"`
	// The subnet id from which requests will match the rule.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (RegistryNetworkRuleSetVirtualNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryNetworkRuleSetVirtualNetwork)(nil)).Elem()
}

func (i RegistryNetworkRuleSetVirtualNetworkArgs) ToRegistryNetworkRuleSetVirtualNetworkOutput() RegistryNetworkRuleSetVirtualNetworkOutput {
	return i.ToRegistryNetworkRuleSetVirtualNetworkOutputWithContext(context.Background())
}

func (i RegistryNetworkRuleSetVirtualNetworkArgs) ToRegistryNetworkRuleSetVirtualNetworkOutputWithContext(ctx context.Context) RegistryNetworkRuleSetVirtualNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryNetworkRuleSetVirtualNetworkOutput)
}

// RegistryNetworkRuleSetVirtualNetworkArrayInput is an input type that accepts RegistryNetworkRuleSetVirtualNetworkArray and RegistryNetworkRuleSetVirtualNetworkArrayOutput values.
// You can construct a concrete instance of `RegistryNetworkRuleSetVirtualNetworkArrayInput` via:
//
//	RegistryNetworkRuleSetVirtualNetworkArray{ RegistryNetworkRuleSetVirtualNetworkArgs{...} }
type RegistryNetworkRuleSetVirtualNetworkArrayInput interface {
	pulumi.Input

	ToRegistryNetworkRuleSetVirtualNetworkArrayOutput() RegistryNetworkRuleSetVirtualNetworkArrayOutput
	ToRegistryNetworkRuleSetVirtualNetworkArrayOutputWithContext(context.Context) RegistryNetworkRuleSetVirtualNetworkArrayOutput
}

type RegistryNetworkRuleSetVirtualNetworkArray []RegistryNetworkRuleSetVirtualNetworkInput

func (RegistryNetworkRuleSetVirtualNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryNetworkRuleSetVirtualNetwork)(nil)).Elem()
}

func (i RegistryNetworkRuleSetVirtualNetworkArray) ToRegistryNetworkRuleSetVirtualNetworkArrayOutput() RegistryNetworkRuleSetVirtualNetworkArrayOutput {
	return i.ToRegistryNetworkRuleSetVirtualNetworkArrayOutputWithContext(context.Background())
}

func (i RegistryNetworkRuleSetVirtualNetworkArray) ToRegistryNetworkRuleSetVirtualNetworkArrayOutputWithContext(ctx context.Context) RegistryNetworkRuleSetVirtualNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryNetworkRuleSetVirtualNetworkArrayOutput)
}

type RegistryNetworkRuleSetVirtualNetworkOutput struct{ *pulumi.OutputState }

func (RegistryNetworkRuleSetVirtualNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryNetworkRuleSetVirtualNetwork)(nil)).Elem()
}

func (o RegistryNetworkRuleSetVirtualNetworkOutput) ToRegistryNetworkRuleSetVirtualNetworkOutput() RegistryNetworkRuleSetVirtualNetworkOutput {
	return o
}

func (o RegistryNetworkRuleSetVirtualNetworkOutput) ToRegistryNetworkRuleSetVirtualNetworkOutputWithContext(ctx context.Context) RegistryNetworkRuleSetVirtualNetworkOutput {
	return o
}

// The behaviour for requests matching this rule. At this time the only supported value is `Allow`
func (o RegistryNetworkRuleSetVirtualNetworkOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryNetworkRuleSetVirtualNetwork) string { return v.Action }).(pulumi.StringOutput)
}

// The subnet id from which requests will match the rule.
func (o RegistryNetworkRuleSetVirtualNetworkOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryNetworkRuleSetVirtualNetwork) string { return v.SubnetId }).(pulumi.StringOutput)
}

type RegistryNetworkRuleSetVirtualNetworkArrayOutput struct{ *pulumi.OutputState }

func (RegistryNetworkRuleSetVirtualNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryNetworkRuleSetVirtualNetwork)(nil)).Elem()
}

func (o RegistryNetworkRuleSetVirtualNetworkArrayOutput) ToRegistryNetworkRuleSetVirtualNetworkArrayOutput() RegistryNetworkRuleSetVirtualNetworkArrayOutput {
	return o
}

func (o RegistryNetworkRuleSetVirtualNetworkArrayOutput) ToRegistryNetworkRuleSetVirtualNetworkArrayOutputWithContext(ctx context.Context) RegistryNetworkRuleSetVirtualNetworkArrayOutput {
	return o
}

func (o RegistryNetworkRuleSetVirtualNetworkArrayOutput) Index(i pulumi.IntInput) RegistryNetworkRuleSetVirtualNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegistryNetworkRuleSetVirtualNetwork {
		return vs[0].([]RegistryNetworkRuleSetVirtualNetwork)[vs[1].(int)]
	}).(RegistryNetworkRuleSetVirtualNetworkOutput)
}

type RegistryRetentionPolicy struct {
	// The number of days to retain an untagged manifest after which it gets purged. Default is `7`.
	Days *int `pulumi:"days"`
	// Boolean value that indicates whether the policy is enabled.
	Enabled *bool `pulumi:"enabled"`
}

// RegistryRetentionPolicyInput is an input type that accepts RegistryRetentionPolicyArgs and RegistryRetentionPolicyOutput values.
// You can construct a concrete instance of `RegistryRetentionPolicyInput` via:
//
//	RegistryRetentionPolicyArgs{...}
type RegistryRetentionPolicyInput interface {
	pulumi.Input

	ToRegistryRetentionPolicyOutput() RegistryRetentionPolicyOutput
	ToRegistryRetentionPolicyOutputWithContext(context.Context) RegistryRetentionPolicyOutput
}

type RegistryRetentionPolicyArgs struct {
	// The number of days to retain an untagged manifest after which it gets purged. Default is `7`.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// Boolean value that indicates whether the policy is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (RegistryRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryRetentionPolicy)(nil)).Elem()
}

func (i RegistryRetentionPolicyArgs) ToRegistryRetentionPolicyOutput() RegistryRetentionPolicyOutput {
	return i.ToRegistryRetentionPolicyOutputWithContext(context.Background())
}

func (i RegistryRetentionPolicyArgs) ToRegistryRetentionPolicyOutputWithContext(ctx context.Context) RegistryRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryRetentionPolicyOutput)
}

func (i RegistryRetentionPolicyArgs) ToRegistryRetentionPolicyPtrOutput() RegistryRetentionPolicyPtrOutput {
	return i.ToRegistryRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i RegistryRetentionPolicyArgs) ToRegistryRetentionPolicyPtrOutputWithContext(ctx context.Context) RegistryRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryRetentionPolicyOutput).ToRegistryRetentionPolicyPtrOutputWithContext(ctx)
}

// RegistryRetentionPolicyPtrInput is an input type that accepts RegistryRetentionPolicyArgs, RegistryRetentionPolicyPtr and RegistryRetentionPolicyPtrOutput values.
// You can construct a concrete instance of `RegistryRetentionPolicyPtrInput` via:
//
//	        RegistryRetentionPolicyArgs{...}
//
//	or:
//
//	        nil
type RegistryRetentionPolicyPtrInput interface {
	pulumi.Input

	ToRegistryRetentionPolicyPtrOutput() RegistryRetentionPolicyPtrOutput
	ToRegistryRetentionPolicyPtrOutputWithContext(context.Context) RegistryRetentionPolicyPtrOutput
}

type registryRetentionPolicyPtrType RegistryRetentionPolicyArgs

func RegistryRetentionPolicyPtr(v *RegistryRetentionPolicyArgs) RegistryRetentionPolicyPtrInput {
	return (*registryRetentionPolicyPtrType)(v)
}

func (*registryRetentionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryRetentionPolicy)(nil)).Elem()
}

func (i *registryRetentionPolicyPtrType) ToRegistryRetentionPolicyPtrOutput() RegistryRetentionPolicyPtrOutput {
	return i.ToRegistryRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i *registryRetentionPolicyPtrType) ToRegistryRetentionPolicyPtrOutputWithContext(ctx context.Context) RegistryRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryRetentionPolicyPtrOutput)
}

type RegistryRetentionPolicyOutput struct{ *pulumi.OutputState }

func (RegistryRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryRetentionPolicy)(nil)).Elem()
}

func (o RegistryRetentionPolicyOutput) ToRegistryRetentionPolicyOutput() RegistryRetentionPolicyOutput {
	return o
}

func (o RegistryRetentionPolicyOutput) ToRegistryRetentionPolicyOutputWithContext(ctx context.Context) RegistryRetentionPolicyOutput {
	return o
}

func (o RegistryRetentionPolicyOutput) ToRegistryRetentionPolicyPtrOutput() RegistryRetentionPolicyPtrOutput {
	return o.ToRegistryRetentionPolicyPtrOutputWithContext(context.Background())
}

func (o RegistryRetentionPolicyOutput) ToRegistryRetentionPolicyPtrOutputWithContext(ctx context.Context) RegistryRetentionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryRetentionPolicy) *RegistryRetentionPolicy {
		return &v
	}).(RegistryRetentionPolicyPtrOutput)
}

// The number of days to retain an untagged manifest after which it gets purged. Default is `7`.
func (o RegistryRetentionPolicyOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RegistryRetentionPolicy) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// Boolean value that indicates whether the policy is enabled.
func (o RegistryRetentionPolicyOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RegistryRetentionPolicy) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type RegistryRetentionPolicyPtrOutput struct{ *pulumi.OutputState }

func (RegistryRetentionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryRetentionPolicy)(nil)).Elem()
}

func (o RegistryRetentionPolicyPtrOutput) ToRegistryRetentionPolicyPtrOutput() RegistryRetentionPolicyPtrOutput {
	return o
}

func (o RegistryRetentionPolicyPtrOutput) ToRegistryRetentionPolicyPtrOutputWithContext(ctx context.Context) RegistryRetentionPolicyPtrOutput {
	return o
}

func (o RegistryRetentionPolicyPtrOutput) Elem() RegistryRetentionPolicyOutput {
	return o.ApplyT(func(v *RegistryRetentionPolicy) RegistryRetentionPolicy {
		if v != nil {
			return *v
		}
		var ret RegistryRetentionPolicy
		return ret
	}).(RegistryRetentionPolicyOutput)
}

// The number of days to retain an untagged manifest after which it gets purged. Default is `7`.
func (o RegistryRetentionPolicyPtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RegistryRetentionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// Boolean value that indicates whether the policy is enabled.
func (o RegistryRetentionPolicyPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RegistryRetentionPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type RegistryTaskAgentSetting struct {
	// The number of cores required for the Container Registry Task.
	Cpu int `pulumi:"cpu"`
}

// RegistryTaskAgentSettingInput is an input type that accepts RegistryTaskAgentSettingArgs and RegistryTaskAgentSettingOutput values.
// You can construct a concrete instance of `RegistryTaskAgentSettingInput` via:
//
//	RegistryTaskAgentSettingArgs{...}
type RegistryTaskAgentSettingInput interface {
	pulumi.Input

	ToRegistryTaskAgentSettingOutput() RegistryTaskAgentSettingOutput
	ToRegistryTaskAgentSettingOutputWithContext(context.Context) RegistryTaskAgentSettingOutput
}

type RegistryTaskAgentSettingArgs struct {
	// The number of cores required for the Container Registry Task.
	Cpu pulumi.IntInput `pulumi:"cpu"`
}

func (RegistryTaskAgentSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTaskAgentSetting)(nil)).Elem()
}

func (i RegistryTaskAgentSettingArgs) ToRegistryTaskAgentSettingOutput() RegistryTaskAgentSettingOutput {
	return i.ToRegistryTaskAgentSettingOutputWithContext(context.Background())
}

func (i RegistryTaskAgentSettingArgs) ToRegistryTaskAgentSettingOutputWithContext(ctx context.Context) RegistryTaskAgentSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskAgentSettingOutput)
}

func (i RegistryTaskAgentSettingArgs) ToRegistryTaskAgentSettingPtrOutput() RegistryTaskAgentSettingPtrOutput {
	return i.ToRegistryTaskAgentSettingPtrOutputWithContext(context.Background())
}

func (i RegistryTaskAgentSettingArgs) ToRegistryTaskAgentSettingPtrOutputWithContext(ctx context.Context) RegistryTaskAgentSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskAgentSettingOutput).ToRegistryTaskAgentSettingPtrOutputWithContext(ctx)
}

// RegistryTaskAgentSettingPtrInput is an input type that accepts RegistryTaskAgentSettingArgs, RegistryTaskAgentSettingPtr and RegistryTaskAgentSettingPtrOutput values.
// You can construct a concrete instance of `RegistryTaskAgentSettingPtrInput` via:
//
//	        RegistryTaskAgentSettingArgs{...}
//
//	or:
//
//	        nil
type RegistryTaskAgentSettingPtrInput interface {
	pulumi.Input

	ToRegistryTaskAgentSettingPtrOutput() RegistryTaskAgentSettingPtrOutput
	ToRegistryTaskAgentSettingPtrOutputWithContext(context.Context) RegistryTaskAgentSettingPtrOutput
}

type registryTaskAgentSettingPtrType RegistryTaskAgentSettingArgs

func RegistryTaskAgentSettingPtr(v *RegistryTaskAgentSettingArgs) RegistryTaskAgentSettingPtrInput {
	return (*registryTaskAgentSettingPtrType)(v)
}

func (*registryTaskAgentSettingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryTaskAgentSetting)(nil)).Elem()
}

func (i *registryTaskAgentSettingPtrType) ToRegistryTaskAgentSettingPtrOutput() RegistryTaskAgentSettingPtrOutput {
	return i.ToRegistryTaskAgentSettingPtrOutputWithContext(context.Background())
}

func (i *registryTaskAgentSettingPtrType) ToRegistryTaskAgentSettingPtrOutputWithContext(ctx context.Context) RegistryTaskAgentSettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskAgentSettingPtrOutput)
}

type RegistryTaskAgentSettingOutput struct{ *pulumi.OutputState }

func (RegistryTaskAgentSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTaskAgentSetting)(nil)).Elem()
}

func (o RegistryTaskAgentSettingOutput) ToRegistryTaskAgentSettingOutput() RegistryTaskAgentSettingOutput {
	return o
}

func (o RegistryTaskAgentSettingOutput) ToRegistryTaskAgentSettingOutputWithContext(ctx context.Context) RegistryTaskAgentSettingOutput {
	return o
}

func (o RegistryTaskAgentSettingOutput) ToRegistryTaskAgentSettingPtrOutput() RegistryTaskAgentSettingPtrOutput {
	return o.ToRegistryTaskAgentSettingPtrOutputWithContext(context.Background())
}

func (o RegistryTaskAgentSettingOutput) ToRegistryTaskAgentSettingPtrOutputWithContext(ctx context.Context) RegistryTaskAgentSettingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryTaskAgentSetting) *RegistryTaskAgentSetting {
		return &v
	}).(RegistryTaskAgentSettingPtrOutput)
}

// The number of cores required for the Container Registry Task.
func (o RegistryTaskAgentSettingOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v RegistryTaskAgentSetting) int { return v.Cpu }).(pulumi.IntOutput)
}

type RegistryTaskAgentSettingPtrOutput struct{ *pulumi.OutputState }

func (RegistryTaskAgentSettingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryTaskAgentSetting)(nil)).Elem()
}

func (o RegistryTaskAgentSettingPtrOutput) ToRegistryTaskAgentSettingPtrOutput() RegistryTaskAgentSettingPtrOutput {
	return o
}

func (o RegistryTaskAgentSettingPtrOutput) ToRegistryTaskAgentSettingPtrOutputWithContext(ctx context.Context) RegistryTaskAgentSettingPtrOutput {
	return o
}

func (o RegistryTaskAgentSettingPtrOutput) Elem() RegistryTaskAgentSettingOutput {
	return o.ApplyT(func(v *RegistryTaskAgentSetting) RegistryTaskAgentSetting {
		if v != nil {
			return *v
		}
		var ret RegistryTaskAgentSetting
		return ret
	}).(RegistryTaskAgentSettingOutput)
}

// The number of cores required for the Container Registry Task.
func (o RegistryTaskAgentSettingPtrOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RegistryTaskAgentSetting) *int {
		if v == nil {
			return nil
		}
		return &v.Cpu
	}).(pulumi.IntPtrOutput)
}

type RegistryTaskBaseImageTrigger struct {
	// Should the trigger be enabled? Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// The name which should be used for this trigger.
	Name string `pulumi:"name"`
	// The type of the trigger. Possible values are `All` and `Runtime`.
	Type string `pulumi:"type"`
	// The endpoint URL for receiving the trigger.
	UpdateTriggerEndpoint *string `pulumi:"updateTriggerEndpoint"`
	// Type of payload body for the trigger. Possible values are `Default` and `Token`.
	UpdateTriggerPayloadType *string `pulumi:"updateTriggerPayloadType"`
}

// RegistryTaskBaseImageTriggerInput is an input type that accepts RegistryTaskBaseImageTriggerArgs and RegistryTaskBaseImageTriggerOutput values.
// You can construct a concrete instance of `RegistryTaskBaseImageTriggerInput` via:
//
//	RegistryTaskBaseImageTriggerArgs{...}
type RegistryTaskBaseImageTriggerInput interface {
	pulumi.Input

	ToRegistryTaskBaseImageTriggerOutput() RegistryTaskBaseImageTriggerOutput
	ToRegistryTaskBaseImageTriggerOutputWithContext(context.Context) RegistryTaskBaseImageTriggerOutput
}

type RegistryTaskBaseImageTriggerArgs struct {
	// Should the trigger be enabled? Defaults to `true`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The name which should be used for this trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the trigger. Possible values are `All` and `Runtime`.
	Type pulumi.StringInput `pulumi:"type"`
	// The endpoint URL for receiving the trigger.
	UpdateTriggerEndpoint pulumi.StringPtrInput `pulumi:"updateTriggerEndpoint"`
	// Type of payload body for the trigger. Possible values are `Default` and `Token`.
	UpdateTriggerPayloadType pulumi.StringPtrInput `pulumi:"updateTriggerPayloadType"`
}

func (RegistryTaskBaseImageTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTaskBaseImageTrigger)(nil)).Elem()
}

func (i RegistryTaskBaseImageTriggerArgs) ToRegistryTaskBaseImageTriggerOutput() RegistryTaskBaseImageTriggerOutput {
	return i.ToRegistryTaskBaseImageTriggerOutputWithContext(context.Background())
}

func (i RegistryTaskBaseImageTriggerArgs) ToRegistryTaskBaseImageTriggerOutputWithContext(ctx context.Context) RegistryTaskBaseImageTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskBaseImageTriggerOutput)
}

func (i RegistryTaskBaseImageTriggerArgs) ToRegistryTaskBaseImageTriggerPtrOutput() RegistryTaskBaseImageTriggerPtrOutput {
	return i.ToRegistryTaskBaseImageTriggerPtrOutputWithContext(context.Background())
}

func (i RegistryTaskBaseImageTriggerArgs) ToRegistryTaskBaseImageTriggerPtrOutputWithContext(ctx context.Context) RegistryTaskBaseImageTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskBaseImageTriggerOutput).ToRegistryTaskBaseImageTriggerPtrOutputWithContext(ctx)
}

// RegistryTaskBaseImageTriggerPtrInput is an input type that accepts RegistryTaskBaseImageTriggerArgs, RegistryTaskBaseImageTriggerPtr and RegistryTaskBaseImageTriggerPtrOutput values.
// You can construct a concrete instance of `RegistryTaskBaseImageTriggerPtrInput` via:
//
//	        RegistryTaskBaseImageTriggerArgs{...}
//
//	or:
//
//	        nil
type RegistryTaskBaseImageTriggerPtrInput interface {
	pulumi.Input

	ToRegistryTaskBaseImageTriggerPtrOutput() RegistryTaskBaseImageTriggerPtrOutput
	ToRegistryTaskBaseImageTriggerPtrOutputWithContext(context.Context) RegistryTaskBaseImageTriggerPtrOutput
}

type registryTaskBaseImageTriggerPtrType RegistryTaskBaseImageTriggerArgs

func RegistryTaskBaseImageTriggerPtr(v *RegistryTaskBaseImageTriggerArgs) RegistryTaskBaseImageTriggerPtrInput {
	return (*registryTaskBaseImageTriggerPtrType)(v)
}

func (*registryTaskBaseImageTriggerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryTaskBaseImageTrigger)(nil)).Elem()
}

func (i *registryTaskBaseImageTriggerPtrType) ToRegistryTaskBaseImageTriggerPtrOutput() RegistryTaskBaseImageTriggerPtrOutput {
	return i.ToRegistryTaskBaseImageTriggerPtrOutputWithContext(context.Background())
}

func (i *registryTaskBaseImageTriggerPtrType) ToRegistryTaskBaseImageTriggerPtrOutputWithContext(ctx context.Context) RegistryTaskBaseImageTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskBaseImageTriggerPtrOutput)
}

type RegistryTaskBaseImageTriggerOutput struct{ *pulumi.OutputState }

func (RegistryTaskBaseImageTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTaskBaseImageTrigger)(nil)).Elem()
}

func (o RegistryTaskBaseImageTriggerOutput) ToRegistryTaskBaseImageTriggerOutput() RegistryTaskBaseImageTriggerOutput {
	return o
}

func (o RegistryTaskBaseImageTriggerOutput) ToRegistryTaskBaseImageTriggerOutputWithContext(ctx context.Context) RegistryTaskBaseImageTriggerOutput {
	return o
}

func (o RegistryTaskBaseImageTriggerOutput) ToRegistryTaskBaseImageTriggerPtrOutput() RegistryTaskBaseImageTriggerPtrOutput {
	return o.ToRegistryTaskBaseImageTriggerPtrOutputWithContext(context.Background())
}

func (o RegistryTaskBaseImageTriggerOutput) ToRegistryTaskBaseImageTriggerPtrOutputWithContext(ctx context.Context) RegistryTaskBaseImageTriggerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryTaskBaseImageTrigger) *RegistryTaskBaseImageTrigger {
		return &v
	}).(RegistryTaskBaseImageTriggerPtrOutput)
}

// Should the trigger be enabled? Defaults to `true`.
func (o RegistryTaskBaseImageTriggerOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RegistryTaskBaseImageTrigger) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The name which should be used for this trigger.
func (o RegistryTaskBaseImageTriggerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryTaskBaseImageTrigger) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the trigger. Possible values are `All` and `Runtime`.
func (o RegistryTaskBaseImageTriggerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryTaskBaseImageTrigger) string { return v.Type }).(pulumi.StringOutput)
}

// The endpoint URL for receiving the trigger.
func (o RegistryTaskBaseImageTriggerOutput) UpdateTriggerEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryTaskBaseImageTrigger) *string { return v.UpdateTriggerEndpoint }).(pulumi.StringPtrOutput)
}

// Type of payload body for the trigger. Possible values are `Default` and `Token`.
func (o RegistryTaskBaseImageTriggerOutput) UpdateTriggerPayloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryTaskBaseImageTrigger) *string { return v.UpdateTriggerPayloadType }).(pulumi.StringPtrOutput)
}

type RegistryTaskBaseImageTriggerPtrOutput struct{ *pulumi.OutputState }

func (RegistryTaskBaseImageTriggerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryTaskBaseImageTrigger)(nil)).Elem()
}

func (o RegistryTaskBaseImageTriggerPtrOutput) ToRegistryTaskBaseImageTriggerPtrOutput() RegistryTaskBaseImageTriggerPtrOutput {
	return o
}

func (o RegistryTaskBaseImageTriggerPtrOutput) ToRegistryTaskBaseImageTriggerPtrOutputWithContext(ctx context.Context) RegistryTaskBaseImageTriggerPtrOutput {
	return o
}

func (o RegistryTaskBaseImageTriggerPtrOutput) Elem() RegistryTaskBaseImageTriggerOutput {
	return o.ApplyT(func(v *RegistryTaskBaseImageTrigger) RegistryTaskBaseImageTrigger {
		if v != nil {
			return *v
		}
		var ret RegistryTaskBaseImageTrigger
		return ret
	}).(RegistryTaskBaseImageTriggerOutput)
}

// Should the trigger be enabled? Defaults to `true`.
func (o RegistryTaskBaseImageTriggerPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RegistryTaskBaseImageTrigger) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The name which should be used for this trigger.
func (o RegistryTaskBaseImageTriggerPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryTaskBaseImageTrigger) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of the trigger. Possible values are `All` and `Runtime`.
func (o RegistryTaskBaseImageTriggerPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryTaskBaseImageTrigger) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The endpoint URL for receiving the trigger.
func (o RegistryTaskBaseImageTriggerPtrOutput) UpdateTriggerEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryTaskBaseImageTrigger) *string {
		if v == nil {
			return nil
		}
		return v.UpdateTriggerEndpoint
	}).(pulumi.StringPtrOutput)
}

// Type of payload body for the trigger. Possible values are `Default` and `Token`.
func (o RegistryTaskBaseImageTriggerPtrOutput) UpdateTriggerPayloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryTaskBaseImageTrigger) *string {
		if v == nil {
			return nil
		}
		return v.UpdateTriggerPayloadType
	}).(pulumi.StringPtrOutput)
}

type RegistryTaskDockerStep struct {
	// Specifies a map of arguments to be used when executing this step.
	Arguments map[string]string `pulumi:"arguments"`
	// Should the image cache be enabled? Defaults to `true`.
	CacheEnabled *bool `pulumi:"cacheEnabled"`
	// The token (Git PAT or SAS token of storage account blob) associated with the context for this step.
	ContextAccessToken string `pulumi:"contextAccessToken"`
	// The URL (absolute or relative) of the source context for this step. If the context is an url you can reference a specific branch or folder via `#branch:folder`.
	ContextPath string `pulumi:"contextPath"`
	// The Dockerfile path relative to the source context.
	DockerfilePath string `pulumi:"dockerfilePath"`
	// Specifies a list of fully qualified image names including the repository and tag.
	ImageNames []string `pulumi:"imageNames"`
	// Should the image built be pushed to the registry or not? Defaults to `true`.
	PushEnabled *bool `pulumi:"pushEnabled"`
	// Specifies a map of *secret* arguments to be used when executing this step.
	SecretArguments map[string]string `pulumi:"secretArguments"`
	// The name of the target build stage for the docker build.
	Target *string `pulumi:"target"`
}

// RegistryTaskDockerStepInput is an input type that accepts RegistryTaskDockerStepArgs and RegistryTaskDockerStepOutput values.
// You can construct a concrete instance of `RegistryTaskDockerStepInput` via:
//
//	RegistryTaskDockerStepArgs{...}
type RegistryTaskDockerStepInput interface {
	pulumi.Input

	ToRegistryTaskDockerStepOutput() RegistryTaskDockerStepOutput
	ToRegistryTaskDockerStepOutputWithContext(context.Context) RegistryTaskDockerStepOutput
}

type RegistryTaskDockerStepArgs struct {
	// Specifies a map of arguments to be used when executing this step.
	Arguments pulumi.StringMapInput `pulumi:"arguments"`
	// Should the image cache be enabled? Defaults to `true`.
	CacheEnabled pulumi.BoolPtrInput `pulumi:"cacheEnabled"`
	// The token (Git PAT or SAS token of storage account blob) associated with the context for this step.
	ContextAccessToken pulumi.StringInput `pulumi:"contextAccessToken"`
	// The URL (absolute or relative) of the source context for this step. If the context is an url you can reference a specific branch or folder via `#branch:folder`.
	ContextPath pulumi.StringInput `pulumi:"contextPath"`
	// The Dockerfile path relative to the source context.
	DockerfilePath pulumi.StringInput `pulumi:"dockerfilePath"`
	// Specifies a list of fully qualified image names including the repository and tag.
	ImageNames pulumi.StringArrayInput `pulumi:"imageNames"`
	// Should the image built be pushed to the registry or not? Defaults to `true`.
	PushEnabled pulumi.BoolPtrInput `pulumi:"pushEnabled"`
	// Specifies a map of *secret* arguments to be used when executing this step.
	SecretArguments pulumi.StringMapInput `pulumi:"secretArguments"`
	// The name of the target build stage for the docker build.
	Target pulumi.StringPtrInput `pulumi:"target"`
}

func (RegistryTaskDockerStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTaskDockerStep)(nil)).Elem()
}

func (i RegistryTaskDockerStepArgs) ToRegistryTaskDockerStepOutput() RegistryTaskDockerStepOutput {
	return i.ToRegistryTaskDockerStepOutputWithContext(context.Background())
}

func (i RegistryTaskDockerStepArgs) ToRegistryTaskDockerStepOutputWithContext(ctx context.Context) RegistryTaskDockerStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskDockerStepOutput)
}

func (i RegistryTaskDockerStepArgs) ToRegistryTaskDockerStepPtrOutput() RegistryTaskDockerStepPtrOutput {
	return i.ToRegistryTaskDockerStepPtrOutputWithContext(context.Background())
}

func (i RegistryTaskDockerStepArgs) ToRegistryTaskDockerStepPtrOutputWithContext(ctx context.Context) RegistryTaskDockerStepPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskDockerStepOutput).ToRegistryTaskDockerStepPtrOutputWithContext(ctx)
}

// RegistryTaskDockerStepPtrInput is an input type that accepts RegistryTaskDockerStepArgs, RegistryTaskDockerStepPtr and RegistryTaskDockerStepPtrOutput values.
// You can construct a concrete instance of `RegistryTaskDockerStepPtrInput` via:
//
//	        RegistryTaskDockerStepArgs{...}
//
//	or:
//
//	        nil
type RegistryTaskDockerStepPtrInput interface {
	pulumi.Input

	ToRegistryTaskDockerStepPtrOutput() RegistryTaskDockerStepPtrOutput
	ToRegistryTaskDockerStepPtrOutputWithContext(context.Context) RegistryTaskDockerStepPtrOutput
}

type registryTaskDockerStepPtrType RegistryTaskDockerStepArgs

func RegistryTaskDockerStepPtr(v *RegistryTaskDockerStepArgs) RegistryTaskDockerStepPtrInput {
	return (*registryTaskDockerStepPtrType)(v)
}

func (*registryTaskDockerStepPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryTaskDockerStep)(nil)).Elem()
}

func (i *registryTaskDockerStepPtrType) ToRegistryTaskDockerStepPtrOutput() RegistryTaskDockerStepPtrOutput {
	return i.ToRegistryTaskDockerStepPtrOutputWithContext(context.Background())
}

func (i *registryTaskDockerStepPtrType) ToRegistryTaskDockerStepPtrOutputWithContext(ctx context.Context) RegistryTaskDockerStepPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskDockerStepPtrOutput)
}

type RegistryTaskDockerStepOutput struct{ *pulumi.OutputState }

func (RegistryTaskDockerStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTaskDockerStep)(nil)).Elem()
}

func (o RegistryTaskDockerStepOutput) ToRegistryTaskDockerStepOutput() RegistryTaskDockerStepOutput {
	return o
}

func (o RegistryTaskDockerStepOutput) ToRegistryTaskDockerStepOutputWithContext(ctx context.Context) RegistryTaskDockerStepOutput {
	return o
}

func (o RegistryTaskDockerStepOutput) ToRegistryTaskDockerStepPtrOutput() RegistryTaskDockerStepPtrOutput {
	return o.ToRegistryTaskDockerStepPtrOutputWithContext(context.Background())
}

func (o RegistryTaskDockerStepOutput) ToRegistryTaskDockerStepPtrOutputWithContext(ctx context.Context) RegistryTaskDockerStepPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryTaskDockerStep) *RegistryTaskDockerStep {
		return &v
	}).(RegistryTaskDockerStepPtrOutput)
}

// Specifies a map of arguments to be used when executing this step.
func (o RegistryTaskDockerStepOutput) Arguments() pulumi.StringMapOutput {
	return o.ApplyT(func(v RegistryTaskDockerStep) map[string]string { return v.Arguments }).(pulumi.StringMapOutput)
}

// Should the image cache be enabled? Defaults to `true`.
func (o RegistryTaskDockerStepOutput) CacheEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RegistryTaskDockerStep) *bool { return v.CacheEnabled }).(pulumi.BoolPtrOutput)
}

// The token (Git PAT or SAS token of storage account blob) associated with the context for this step.
func (o RegistryTaskDockerStepOutput) ContextAccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryTaskDockerStep) string { return v.ContextAccessToken }).(pulumi.StringOutput)
}

// The URL (absolute or relative) of the source context for this step. If the context is an url you can reference a specific branch or folder via `#branch:folder`.
func (o RegistryTaskDockerStepOutput) ContextPath() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryTaskDockerStep) string { return v.ContextPath }).(pulumi.StringOutput)
}

// The Dockerfile path relative to the source context.
func (o RegistryTaskDockerStepOutput) DockerfilePath() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryTaskDockerStep) string { return v.DockerfilePath }).(pulumi.StringOutput)
}

// Specifies a list of fully qualified image names including the repository and tag.
func (o RegistryTaskDockerStepOutput) ImageNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RegistryTaskDockerStep) []string { return v.ImageNames }).(pulumi.StringArrayOutput)
}

// Should the image built be pushed to the registry or not? Defaults to `true`.
func (o RegistryTaskDockerStepOutput) PushEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RegistryTaskDockerStep) *bool { return v.PushEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies a map of *secret* arguments to be used when executing this step.
func (o RegistryTaskDockerStepOutput) SecretArguments() pulumi.StringMapOutput {
	return o.ApplyT(func(v RegistryTaskDockerStep) map[string]string { return v.SecretArguments }).(pulumi.StringMapOutput)
}

// The name of the target build stage for the docker build.
func (o RegistryTaskDockerStepOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryTaskDockerStep) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type RegistryTaskDockerStepPtrOutput struct{ *pulumi.OutputState }

func (RegistryTaskDockerStepPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryTaskDockerStep)(nil)).Elem()
}

func (o RegistryTaskDockerStepPtrOutput) ToRegistryTaskDockerStepPtrOutput() RegistryTaskDockerStepPtrOutput {
	return o
}

func (o RegistryTaskDockerStepPtrOutput) ToRegistryTaskDockerStepPtrOutputWithContext(ctx context.Context) RegistryTaskDockerStepPtrOutput {
	return o
}

func (o RegistryTaskDockerStepPtrOutput) Elem() RegistryTaskDockerStepOutput {
	return o.ApplyT(func(v *RegistryTaskDockerStep) RegistryTaskDockerStep {
		if v != nil {
			return *v
		}
		var ret RegistryTaskDockerStep
		return ret
	}).(RegistryTaskDockerStepOutput)
}

// Specifies a map of arguments to be used when executing this step.
func (o RegistryTaskDockerStepPtrOutput) Arguments() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RegistryTaskDockerStep) map[string]string {
		if v == nil {
			return nil
		}
		return v.Arguments
	}).(pulumi.StringMapOutput)
}

// Should the image cache be enabled? Defaults to `true`.
func (o RegistryTaskDockerStepPtrOutput) CacheEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RegistryTaskDockerStep) *bool {
		if v == nil {
			return nil
		}
		return v.CacheEnabled
	}).(pulumi.BoolPtrOutput)
}

// The token (Git PAT or SAS token of storage account blob) associated with the context for this step.
func (o RegistryTaskDockerStepPtrOutput) ContextAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryTaskDockerStep) *string {
		if v == nil {
			return nil
		}
		return &v.ContextAccessToken
	}).(pulumi.StringPtrOutput)
}

// The URL (absolute or relative) of the source context for this step. If the context is an url you can reference a specific branch or folder via `#branch:folder`.
func (o RegistryTaskDockerStepPtrOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryTaskDockerStep) *string {
		if v == nil {
			return nil
		}
		return &v.ContextPath
	}).(pulumi.StringPtrOutput)
}

// The Dockerfile path relative to the source context.
func (o RegistryTaskDockerStepPtrOutput) DockerfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryTaskDockerStep) *string {
		if v == nil {
			return nil
		}
		return &v.DockerfilePath
	}).(pulumi.StringPtrOutput)
}

// Specifies a list of fully qualified image names including the repository and tag.
func (o RegistryTaskDockerStepPtrOutput) ImageNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RegistryTaskDockerStep) []string {
		if v == nil {
			return nil
		}
		return v.ImageNames
	}).(pulumi.StringArrayOutput)
}

// Should the image built be pushed to the registry or not? Defaults to `true`.
func (o RegistryTaskDockerStepPtrOutput) PushEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RegistryTaskDockerStep) *bool {
		if v == nil {
			return nil
		}
		return v.PushEnabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies a map of *secret* arguments to be used when executing this step.
func (o RegistryTaskDockerStepPtrOutput) SecretArguments() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RegistryTaskDockerStep) map[string]string {
		if v == nil {
			return nil
		}
		return v.SecretArguments
	}).(pulumi.StringMapOutput)
}

// The name of the target build stage for the docker build.
func (o RegistryTaskDockerStepPtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryTaskDockerStep) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

type RegistryTaskEncodedStep struct {
	// The token (Git PAT or SAS token of storage account blob) associated with the context for this step.
	ContextAccessToken *string `pulumi:"contextAccessToken"`
	// The URL (absolute or relative) of the source context for this step.
	ContextPath *string `pulumi:"contextPath"`
	// Specifies a map of secret values that can be passed when running a task.
	SecretValues map[string]string `pulumi:"secretValues"`
	// The (optionally base64 encoded) content of the build template.
	TaskContent string `pulumi:"taskContent"`
	// The (optionally base64 encoded) content of the build parameters.
	ValueContent *string `pulumi:"valueContent"`
	// Specifies a map of values that can be passed when running a task.
	Values map[string]string `pulumi:"values"`
}

// RegistryTaskEncodedStepInput is an input type that accepts RegistryTaskEncodedStepArgs and RegistryTaskEncodedStepOutput values.
// You can construct a concrete instance of `RegistryTaskEncodedStepInput` via:
//
//	RegistryTaskEncodedStepArgs{...}
type RegistryTaskEncodedStepInput interface {
	pulumi.Input

	ToRegistryTaskEncodedStepOutput() RegistryTaskEncodedStepOutput
	ToRegistryTaskEncodedStepOutputWithContext(context.Context) RegistryTaskEncodedStepOutput
}

type RegistryTaskEncodedStepArgs struct {
	// The token (Git PAT or SAS token of storage account blob) associated with the context for this step.
	ContextAccessToken pulumi.StringPtrInput `pulumi:"contextAccessToken"`
	// The URL (absolute or relative) of the source context for this step.
	ContextPath pulumi.StringPtrInput `pulumi:"contextPath"`
	// Specifies a map of secret values that can be passed when running a task.
	SecretValues pulumi.StringMapInput `pulumi:"secretValues"`
	// The (optionally base64 encoded) content of the build template.
	TaskContent pulumi.StringInput `pulumi:"taskContent"`
	// The (optionally base64 encoded) content of the build parameters.
	ValueContent pulumi.StringPtrInput `pulumi:"valueContent"`
	// Specifies a map of values that can be passed when running a task.
	Values pulumi.StringMapInput `pulumi:"values"`
}

func (RegistryTaskEncodedStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTaskEncodedStep)(nil)).Elem()
}

func (i RegistryTaskEncodedStepArgs) ToRegistryTaskEncodedStepOutput() RegistryTaskEncodedStepOutput {
	return i.ToRegistryTaskEncodedStepOutputWithContext(context.Background())
}

func (i RegistryTaskEncodedStepArgs) ToRegistryTaskEncodedStepOutputWithContext(ctx context.Context) RegistryTaskEncodedStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskEncodedStepOutput)
}

func (i RegistryTaskEncodedStepArgs) ToRegistryTaskEncodedStepPtrOutput() RegistryTaskEncodedStepPtrOutput {
	return i.ToRegistryTaskEncodedStepPtrOutputWithContext(context.Background())
}

func (i RegistryTaskEncodedStepArgs) ToRegistryTaskEncodedStepPtrOutputWithContext(ctx context.Context) RegistryTaskEncodedStepPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskEncodedStepOutput).ToRegistryTaskEncodedStepPtrOutputWithContext(ctx)
}

// RegistryTaskEncodedStepPtrInput is an input type that accepts RegistryTaskEncodedStepArgs, RegistryTaskEncodedStepPtr and RegistryTaskEncodedStepPtrOutput values.
// You can construct a concrete instance of `RegistryTaskEncodedStepPtrInput` via:
//
//	        RegistryTaskEncodedStepArgs{...}
//
//	or:
//
//	        nil
type RegistryTaskEncodedStepPtrInput interface {
	pulumi.Input

	ToRegistryTaskEncodedStepPtrOutput() RegistryTaskEncodedStepPtrOutput
	ToRegistryTaskEncodedStepPtrOutputWithContext(context.Context) RegistryTaskEncodedStepPtrOutput
}

type registryTaskEncodedStepPtrType RegistryTaskEncodedStepArgs

func RegistryTaskEncodedStepPtr(v *RegistryTaskEncodedStepArgs) RegistryTaskEncodedStepPtrInput {
	return (*registryTaskEncodedStepPtrType)(v)
}

func (*registryTaskEncodedStepPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryTaskEncodedStep)(nil)).Elem()
}

func (i *registryTaskEncodedStepPtrType) ToRegistryTaskEncodedStepPtrOutput() RegistryTaskEncodedStepPtrOutput {
	return i.ToRegistryTaskEncodedStepPtrOutputWithContext(context.Background())
}

func (i *registryTaskEncodedStepPtrType) ToRegistryTaskEncodedStepPtrOutputWithContext(ctx context.Context) RegistryTaskEncodedStepPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskEncodedStepPtrOutput)
}

type RegistryTaskEncodedStepOutput struct{ *pulumi.OutputState }

func (RegistryTaskEncodedStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTaskEncodedStep)(nil)).Elem()
}

func (o RegistryTaskEncodedStepOutput) ToRegistryTaskEncodedStepOutput() RegistryTaskEncodedStepOutput {
	return o
}

func (o RegistryTaskEncodedStepOutput) ToRegistryTaskEncodedStepOutputWithContext(ctx context.Context) RegistryTaskEncodedStepOutput {
	return o
}

func (o RegistryTaskEncodedStepOutput) ToRegistryTaskEncodedStepPtrOutput() RegistryTaskEncodedStepPtrOutput {
	return o.ToRegistryTaskEncodedStepPtrOutputWithContext(context.Background())
}

func (o RegistryTaskEncodedStepOutput) ToRegistryTaskEncodedStepPtrOutputWithContext(ctx context.Context) RegistryTaskEncodedStepPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryTaskEncodedStep) *RegistryTaskEncodedStep {
		return &v
	}).(RegistryTaskEncodedStepPtrOutput)
}

// The token (Git PAT or SAS token of storage account blob) associated with the context for this step.
func (o RegistryTaskEncodedStepOutput) ContextAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryTaskEncodedStep) *string { return v.ContextAccessToken }).(pulumi.StringPtrOutput)
}

// The URL (absolute or relative) of the source context for this step.
func (o RegistryTaskEncodedStepOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryTaskEncodedStep) *string { return v.ContextPath }).(pulumi.StringPtrOutput)
}

// Specifies a map of secret values that can be passed when running a task.
func (o RegistryTaskEncodedStepOutput) SecretValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v RegistryTaskEncodedStep) map[string]string { return v.SecretValues }).(pulumi.StringMapOutput)
}

// The (optionally base64 encoded) content of the build template.
func (o RegistryTaskEncodedStepOutput) TaskContent() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryTaskEncodedStep) string { return v.TaskContent }).(pulumi.StringOutput)
}

// The (optionally base64 encoded) content of the build parameters.
func (o RegistryTaskEncodedStepOutput) ValueContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryTaskEncodedStep) *string { return v.ValueContent }).(pulumi.StringPtrOutput)
}

// Specifies a map of values that can be passed when running a task.
func (o RegistryTaskEncodedStepOutput) Values() pulumi.StringMapOutput {
	return o.ApplyT(func(v RegistryTaskEncodedStep) map[string]string { return v.Values }).(pulumi.StringMapOutput)
}

type RegistryTaskEncodedStepPtrOutput struct{ *pulumi.OutputState }

func (RegistryTaskEncodedStepPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryTaskEncodedStep)(nil)).Elem()
}

func (o RegistryTaskEncodedStepPtrOutput) ToRegistryTaskEncodedStepPtrOutput() RegistryTaskEncodedStepPtrOutput {
	return o
}

func (o RegistryTaskEncodedStepPtrOutput) ToRegistryTaskEncodedStepPtrOutputWithContext(ctx context.Context) RegistryTaskEncodedStepPtrOutput {
	return o
}

func (o RegistryTaskEncodedStepPtrOutput) Elem() RegistryTaskEncodedStepOutput {
	return o.ApplyT(func(v *RegistryTaskEncodedStep) RegistryTaskEncodedStep {
		if v != nil {
			return *v
		}
		var ret RegistryTaskEncodedStep
		return ret
	}).(RegistryTaskEncodedStepOutput)
}

// The token (Git PAT or SAS token of storage account blob) associated with the context for this step.
func (o RegistryTaskEncodedStepPtrOutput) ContextAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryTaskEncodedStep) *string {
		if v == nil {
			return nil
		}
		return v.ContextAccessToken
	}).(pulumi.StringPtrOutput)
}

// The URL (absolute or relative) of the source context for this step.
func (o RegistryTaskEncodedStepPtrOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryTaskEncodedStep) *string {
		if v == nil {
			return nil
		}
		return v.ContextPath
	}).(pulumi.StringPtrOutput)
}

// Specifies a map of secret values that can be passed when running a task.
func (o RegistryTaskEncodedStepPtrOutput) SecretValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RegistryTaskEncodedStep) map[string]string {
		if v == nil {
			return nil
		}
		return v.SecretValues
	}).(pulumi.StringMapOutput)
}

// The (optionally base64 encoded) content of the build template.
func (o RegistryTaskEncodedStepPtrOutput) TaskContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryTaskEncodedStep) *string {
		if v == nil {
			return nil
		}
		return &v.TaskContent
	}).(pulumi.StringPtrOutput)
}

// The (optionally base64 encoded) content of the build parameters.
func (o RegistryTaskEncodedStepPtrOutput) ValueContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryTaskEncodedStep) *string {
		if v == nil {
			return nil
		}
		return v.ValueContent
	}).(pulumi.StringPtrOutput)
}

// Specifies a map of values that can be passed when running a task.
func (o RegistryTaskEncodedStepPtrOutput) Values() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RegistryTaskEncodedStep) map[string]string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringMapOutput)
}

type RegistryTaskFileStep struct {
	// The token (Git PAT or SAS token of storage account blob) associated with the context for this step.
	ContextAccessToken *string `pulumi:"contextAccessToken"`
	// The URL (absolute or relative) of the source context for this step.
	ContextPath *string `pulumi:"contextPath"`
	// Specifies a map of secret values that can be passed when running a task.
	SecretValues map[string]string `pulumi:"secretValues"`
	// The task template file path relative to the source context.
	TaskFilePath string `pulumi:"taskFilePath"`
	// The parameters file path relative to the source context.
	ValueFilePath *string `pulumi:"valueFilePath"`
	// Specifies a map of values that can be passed when running a task.
	Values map[string]string `pulumi:"values"`
}

// RegistryTaskFileStepInput is an input type that accepts RegistryTaskFileStepArgs and RegistryTaskFileStepOutput values.
// You can construct a concrete instance of `RegistryTaskFileStepInput` via:
//
//	RegistryTaskFileStepArgs{...}
type RegistryTaskFileStepInput interface {
	pulumi.Input

	ToRegistryTaskFileStepOutput() RegistryTaskFileStepOutput
	ToRegistryTaskFileStepOutputWithContext(context.Context) RegistryTaskFileStepOutput
}

type RegistryTaskFileStepArgs struct {
	// The token (Git PAT or SAS token of storage account blob) associated with the context for this step.
	ContextAccessToken pulumi.StringPtrInput `pulumi:"contextAccessToken"`
	// The URL (absolute or relative) of the source context for this step.
	ContextPath pulumi.StringPtrInput `pulumi:"contextPath"`
	// Specifies a map of secret values that can be passed when running a task.
	SecretValues pulumi.StringMapInput `pulumi:"secretValues"`
	// The task template file path relative to the source context.
	TaskFilePath pulumi.StringInput `pulumi:"taskFilePath"`
	// The parameters file path relative to the source context.
	ValueFilePath pulumi.StringPtrInput `pulumi:"valueFilePath"`
	// Specifies a map of values that can be passed when running a task.
	Values pulumi.StringMapInput `pulumi:"values"`
}

func (RegistryTaskFileStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTaskFileStep)(nil)).Elem()
}

func (i RegistryTaskFileStepArgs) ToRegistryTaskFileStepOutput() RegistryTaskFileStepOutput {
	return i.ToRegistryTaskFileStepOutputWithContext(context.Background())
}

func (i RegistryTaskFileStepArgs) ToRegistryTaskFileStepOutputWithContext(ctx context.Context) RegistryTaskFileStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskFileStepOutput)
}

func (i RegistryTaskFileStepArgs) ToRegistryTaskFileStepPtrOutput() RegistryTaskFileStepPtrOutput {
	return i.ToRegistryTaskFileStepPtrOutputWithContext(context.Background())
}

func (i RegistryTaskFileStepArgs) ToRegistryTaskFileStepPtrOutputWithContext(ctx context.Context) RegistryTaskFileStepPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskFileStepOutput).ToRegistryTaskFileStepPtrOutputWithContext(ctx)
}

// RegistryTaskFileStepPtrInput is an input type that accepts RegistryTaskFileStepArgs, RegistryTaskFileStepPtr and RegistryTaskFileStepPtrOutput values.
// You can construct a concrete instance of `RegistryTaskFileStepPtrInput` via:
//
//	        RegistryTaskFileStepArgs{...}
//
//	or:
//
//	        nil
type RegistryTaskFileStepPtrInput interface {
	pulumi.Input

	ToRegistryTaskFileStepPtrOutput() RegistryTaskFileStepPtrOutput
	ToRegistryTaskFileStepPtrOutputWithContext(context.Context) RegistryTaskFileStepPtrOutput
}

type registryTaskFileStepPtrType RegistryTaskFileStepArgs

func RegistryTaskFileStepPtr(v *RegistryTaskFileStepArgs) RegistryTaskFileStepPtrInput {
	return (*registryTaskFileStepPtrType)(v)
}

func (*registryTaskFileStepPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryTaskFileStep)(nil)).Elem()
}

func (i *registryTaskFileStepPtrType) ToRegistryTaskFileStepPtrOutput() RegistryTaskFileStepPtrOutput {
	return i.ToRegistryTaskFileStepPtrOutputWithContext(context.Background())
}

func (i *registryTaskFileStepPtrType) ToRegistryTaskFileStepPtrOutputWithContext(ctx context.Context) RegistryTaskFileStepPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskFileStepPtrOutput)
}

type RegistryTaskFileStepOutput struct{ *pulumi.OutputState }

func (RegistryTaskFileStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTaskFileStep)(nil)).Elem()
}

func (o RegistryTaskFileStepOutput) ToRegistryTaskFileStepOutput() RegistryTaskFileStepOutput {
	return o
}

func (o RegistryTaskFileStepOutput) ToRegistryTaskFileStepOutputWithContext(ctx context.Context) RegistryTaskFileStepOutput {
	return o
}

func (o RegistryTaskFileStepOutput) ToRegistryTaskFileStepPtrOutput() RegistryTaskFileStepPtrOutput {
	return o.ToRegistryTaskFileStepPtrOutputWithContext(context.Background())
}

func (o RegistryTaskFileStepOutput) ToRegistryTaskFileStepPtrOutputWithContext(ctx context.Context) RegistryTaskFileStepPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryTaskFileStep) *RegistryTaskFileStep {
		return &v
	}).(RegistryTaskFileStepPtrOutput)
}

// The token (Git PAT or SAS token of storage account blob) associated with the context for this step.
func (o RegistryTaskFileStepOutput) ContextAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryTaskFileStep) *string { return v.ContextAccessToken }).(pulumi.StringPtrOutput)
}

// The URL (absolute or relative) of the source context for this step.
func (o RegistryTaskFileStepOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryTaskFileStep) *string { return v.ContextPath }).(pulumi.StringPtrOutput)
}

// Specifies a map of secret values that can be passed when running a task.
func (o RegistryTaskFileStepOutput) SecretValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v RegistryTaskFileStep) map[string]string { return v.SecretValues }).(pulumi.StringMapOutput)
}

// The task template file path relative to the source context.
func (o RegistryTaskFileStepOutput) TaskFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryTaskFileStep) string { return v.TaskFilePath }).(pulumi.StringOutput)
}

// The parameters file path relative to the source context.
func (o RegistryTaskFileStepOutput) ValueFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryTaskFileStep) *string { return v.ValueFilePath }).(pulumi.StringPtrOutput)
}

// Specifies a map of values that can be passed when running a task.
func (o RegistryTaskFileStepOutput) Values() pulumi.StringMapOutput {
	return o.ApplyT(func(v RegistryTaskFileStep) map[string]string { return v.Values }).(pulumi.StringMapOutput)
}

type RegistryTaskFileStepPtrOutput struct{ *pulumi.OutputState }

func (RegistryTaskFileStepPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryTaskFileStep)(nil)).Elem()
}

func (o RegistryTaskFileStepPtrOutput) ToRegistryTaskFileStepPtrOutput() RegistryTaskFileStepPtrOutput {
	return o
}

func (o RegistryTaskFileStepPtrOutput) ToRegistryTaskFileStepPtrOutputWithContext(ctx context.Context) RegistryTaskFileStepPtrOutput {
	return o
}

func (o RegistryTaskFileStepPtrOutput) Elem() RegistryTaskFileStepOutput {
	return o.ApplyT(func(v *RegistryTaskFileStep) RegistryTaskFileStep {
		if v != nil {
			return *v
		}
		var ret RegistryTaskFileStep
		return ret
	}).(RegistryTaskFileStepOutput)
}

// The token (Git PAT or SAS token of storage account blob) associated with the context for this step.
func (o RegistryTaskFileStepPtrOutput) ContextAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryTaskFileStep) *string {
		if v == nil {
			return nil
		}
		return v.ContextAccessToken
	}).(pulumi.StringPtrOutput)
}

// The URL (absolute or relative) of the source context for this step.
func (o RegistryTaskFileStepPtrOutput) ContextPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryTaskFileStep) *string {
		if v == nil {
			return nil
		}
		return v.ContextPath
	}).(pulumi.StringPtrOutput)
}

// Specifies a map of secret values that can be passed when running a task.
func (o RegistryTaskFileStepPtrOutput) SecretValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RegistryTaskFileStep) map[string]string {
		if v == nil {
			return nil
		}
		return v.SecretValues
	}).(pulumi.StringMapOutput)
}

// The task template file path relative to the source context.
func (o RegistryTaskFileStepPtrOutput) TaskFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryTaskFileStep) *string {
		if v == nil {
			return nil
		}
		return &v.TaskFilePath
	}).(pulumi.StringPtrOutput)
}

// The parameters file path relative to the source context.
func (o RegistryTaskFileStepPtrOutput) ValueFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryTaskFileStep) *string {
		if v == nil {
			return nil
		}
		return v.ValueFilePath
	}).(pulumi.StringPtrOutput)
}

// Specifies a map of values that can be passed when running a task.
func (o RegistryTaskFileStepPtrOutput) Values() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RegistryTaskFileStep) map[string]string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringMapOutput)
}

type RegistryTaskIdentity struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Container Registry Task.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId *string `pulumi:"principalId"`
	// The Tenant ID associated with this Managed Service Identity.
	TenantId *string `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this Container Registry Task. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
	Type string `pulumi:"type"`
}

// RegistryTaskIdentityInput is an input type that accepts RegistryTaskIdentityArgs and RegistryTaskIdentityOutput values.
// You can construct a concrete instance of `RegistryTaskIdentityInput` via:
//
//	RegistryTaskIdentityArgs{...}
type RegistryTaskIdentityInput interface {
	pulumi.Input

	ToRegistryTaskIdentityOutput() RegistryTaskIdentityOutput
	ToRegistryTaskIdentityOutputWithContext(context.Context) RegistryTaskIdentityOutput
}

type RegistryTaskIdentityArgs struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Container Registry Task.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The Tenant ID associated with this Managed Service Identity.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this Container Registry Task. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
	Type pulumi.StringInput `pulumi:"type"`
}

func (RegistryTaskIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTaskIdentity)(nil)).Elem()
}

func (i RegistryTaskIdentityArgs) ToRegistryTaskIdentityOutput() RegistryTaskIdentityOutput {
	return i.ToRegistryTaskIdentityOutputWithContext(context.Background())
}

func (i RegistryTaskIdentityArgs) ToRegistryTaskIdentityOutputWithContext(ctx context.Context) RegistryTaskIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskIdentityOutput)
}

func (i RegistryTaskIdentityArgs) ToRegistryTaskIdentityPtrOutput() RegistryTaskIdentityPtrOutput {
	return i.ToRegistryTaskIdentityPtrOutputWithContext(context.Background())
}

func (i RegistryTaskIdentityArgs) ToRegistryTaskIdentityPtrOutputWithContext(ctx context.Context) RegistryTaskIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskIdentityOutput).ToRegistryTaskIdentityPtrOutputWithContext(ctx)
}

// RegistryTaskIdentityPtrInput is an input type that accepts RegistryTaskIdentityArgs, RegistryTaskIdentityPtr and RegistryTaskIdentityPtrOutput values.
// You can construct a concrete instance of `RegistryTaskIdentityPtrInput` via:
//
//	        RegistryTaskIdentityArgs{...}
//
//	or:
//
//	        nil
type RegistryTaskIdentityPtrInput interface {
	pulumi.Input

	ToRegistryTaskIdentityPtrOutput() RegistryTaskIdentityPtrOutput
	ToRegistryTaskIdentityPtrOutputWithContext(context.Context) RegistryTaskIdentityPtrOutput
}

type registryTaskIdentityPtrType RegistryTaskIdentityArgs

func RegistryTaskIdentityPtr(v *RegistryTaskIdentityArgs) RegistryTaskIdentityPtrInput {
	return (*registryTaskIdentityPtrType)(v)
}

func (*registryTaskIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryTaskIdentity)(nil)).Elem()
}

func (i *registryTaskIdentityPtrType) ToRegistryTaskIdentityPtrOutput() RegistryTaskIdentityPtrOutput {
	return i.ToRegistryTaskIdentityPtrOutputWithContext(context.Background())
}

func (i *registryTaskIdentityPtrType) ToRegistryTaskIdentityPtrOutputWithContext(ctx context.Context) RegistryTaskIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskIdentityPtrOutput)
}

type RegistryTaskIdentityOutput struct{ *pulumi.OutputState }

func (RegistryTaskIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTaskIdentity)(nil)).Elem()
}

func (o RegistryTaskIdentityOutput) ToRegistryTaskIdentityOutput() RegistryTaskIdentityOutput {
	return o
}

func (o RegistryTaskIdentityOutput) ToRegistryTaskIdentityOutputWithContext(ctx context.Context) RegistryTaskIdentityOutput {
	return o
}

func (o RegistryTaskIdentityOutput) ToRegistryTaskIdentityPtrOutput() RegistryTaskIdentityPtrOutput {
	return o.ToRegistryTaskIdentityPtrOutputWithContext(context.Background())
}

func (o RegistryTaskIdentityOutput) ToRegistryTaskIdentityPtrOutputWithContext(ctx context.Context) RegistryTaskIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryTaskIdentity) *RegistryTaskIdentity {
		return &v
	}).(RegistryTaskIdentityPtrOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Container Registry Task.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
func (o RegistryTaskIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RegistryTaskIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this Managed Service Identity.
func (o RegistryTaskIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryTaskIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The Tenant ID associated with this Managed Service Identity.
func (o RegistryTaskIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryTaskIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Container Registry Task. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
func (o RegistryTaskIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryTaskIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type RegistryTaskIdentityPtrOutput struct{ *pulumi.OutputState }

func (RegistryTaskIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryTaskIdentity)(nil)).Elem()
}

func (o RegistryTaskIdentityPtrOutput) ToRegistryTaskIdentityPtrOutput() RegistryTaskIdentityPtrOutput {
	return o
}

func (o RegistryTaskIdentityPtrOutput) ToRegistryTaskIdentityPtrOutputWithContext(ctx context.Context) RegistryTaskIdentityPtrOutput {
	return o
}

func (o RegistryTaskIdentityPtrOutput) Elem() RegistryTaskIdentityOutput {
	return o.ApplyT(func(v *RegistryTaskIdentity) RegistryTaskIdentity {
		if v != nil {
			return *v
		}
		var ret RegistryTaskIdentity
		return ret
	}).(RegistryTaskIdentityOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Container Registry Task.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
func (o RegistryTaskIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RegistryTaskIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this Managed Service Identity.
func (o RegistryTaskIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryTaskIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID associated with this Managed Service Identity.
func (o RegistryTaskIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryTaskIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Container Registry Task. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
func (o RegistryTaskIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryTaskIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type RegistryTaskPlatform struct {
	// The OS architecture. Possible values are `amd64`, `x86`, `386`, `arm` and `arm64`.
	Architecture *string `pulumi:"architecture"`
	// The operating system type required for the task. Possible values are `Windows` and `Linux`.
	Os string `pulumi:"os"`
	// The variant of the CPU. Possible values are `v6`, `v7`, `v8`.
	Variant *string `pulumi:"variant"`
}

// RegistryTaskPlatformInput is an input type that accepts RegistryTaskPlatformArgs and RegistryTaskPlatformOutput values.
// You can construct a concrete instance of `RegistryTaskPlatformInput` via:
//
//	RegistryTaskPlatformArgs{...}
type RegistryTaskPlatformInput interface {
	pulumi.Input

	ToRegistryTaskPlatformOutput() RegistryTaskPlatformOutput
	ToRegistryTaskPlatformOutputWithContext(context.Context) RegistryTaskPlatformOutput
}

type RegistryTaskPlatformArgs struct {
	// The OS architecture. Possible values are `amd64`, `x86`, `386`, `arm` and `arm64`.
	Architecture pulumi.StringPtrInput `pulumi:"architecture"`
	// The operating system type required for the task. Possible values are `Windows` and `Linux`.
	Os pulumi.StringInput `pulumi:"os"`
	// The variant of the CPU. Possible values are `v6`, `v7`, `v8`.
	Variant pulumi.StringPtrInput `pulumi:"variant"`
}

func (RegistryTaskPlatformArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTaskPlatform)(nil)).Elem()
}

func (i RegistryTaskPlatformArgs) ToRegistryTaskPlatformOutput() RegistryTaskPlatformOutput {
	return i.ToRegistryTaskPlatformOutputWithContext(context.Background())
}

func (i RegistryTaskPlatformArgs) ToRegistryTaskPlatformOutputWithContext(ctx context.Context) RegistryTaskPlatformOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskPlatformOutput)
}

func (i RegistryTaskPlatformArgs) ToRegistryTaskPlatformPtrOutput() RegistryTaskPlatformPtrOutput {
	return i.ToRegistryTaskPlatformPtrOutputWithContext(context.Background())
}

func (i RegistryTaskPlatformArgs) ToRegistryTaskPlatformPtrOutputWithContext(ctx context.Context) RegistryTaskPlatformPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskPlatformOutput).ToRegistryTaskPlatformPtrOutputWithContext(ctx)
}

// RegistryTaskPlatformPtrInput is an input type that accepts RegistryTaskPlatformArgs, RegistryTaskPlatformPtr and RegistryTaskPlatformPtrOutput values.
// You can construct a concrete instance of `RegistryTaskPlatformPtrInput` via:
//
//	        RegistryTaskPlatformArgs{...}
//
//	or:
//
//	        nil
type RegistryTaskPlatformPtrInput interface {
	pulumi.Input

	ToRegistryTaskPlatformPtrOutput() RegistryTaskPlatformPtrOutput
	ToRegistryTaskPlatformPtrOutputWithContext(context.Context) RegistryTaskPlatformPtrOutput
}

type registryTaskPlatformPtrType RegistryTaskPlatformArgs

func RegistryTaskPlatformPtr(v *RegistryTaskPlatformArgs) RegistryTaskPlatformPtrInput {
	return (*registryTaskPlatformPtrType)(v)
}

func (*registryTaskPlatformPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryTaskPlatform)(nil)).Elem()
}

func (i *registryTaskPlatformPtrType) ToRegistryTaskPlatformPtrOutput() RegistryTaskPlatformPtrOutput {
	return i.ToRegistryTaskPlatformPtrOutputWithContext(context.Background())
}

func (i *registryTaskPlatformPtrType) ToRegistryTaskPlatformPtrOutputWithContext(ctx context.Context) RegistryTaskPlatformPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskPlatformPtrOutput)
}

type RegistryTaskPlatformOutput struct{ *pulumi.OutputState }

func (RegistryTaskPlatformOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTaskPlatform)(nil)).Elem()
}

func (o RegistryTaskPlatformOutput) ToRegistryTaskPlatformOutput() RegistryTaskPlatformOutput {
	return o
}

func (o RegistryTaskPlatformOutput) ToRegistryTaskPlatformOutputWithContext(ctx context.Context) RegistryTaskPlatformOutput {
	return o
}

func (o RegistryTaskPlatformOutput) ToRegistryTaskPlatformPtrOutput() RegistryTaskPlatformPtrOutput {
	return o.ToRegistryTaskPlatformPtrOutputWithContext(context.Background())
}

func (o RegistryTaskPlatformOutput) ToRegistryTaskPlatformPtrOutputWithContext(ctx context.Context) RegistryTaskPlatformPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryTaskPlatform) *RegistryTaskPlatform {
		return &v
	}).(RegistryTaskPlatformPtrOutput)
}

// The OS architecture. Possible values are `amd64`, `x86`, `386`, `arm` and `arm64`.
func (o RegistryTaskPlatformOutput) Architecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryTaskPlatform) *string { return v.Architecture }).(pulumi.StringPtrOutput)
}

// The operating system type required for the task. Possible values are `Windows` and `Linux`.
func (o RegistryTaskPlatformOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryTaskPlatform) string { return v.Os }).(pulumi.StringOutput)
}

// The variant of the CPU. Possible values are `v6`, `v7`, `v8`.
func (o RegistryTaskPlatformOutput) Variant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryTaskPlatform) *string { return v.Variant }).(pulumi.StringPtrOutput)
}

type RegistryTaskPlatformPtrOutput struct{ *pulumi.OutputState }

func (RegistryTaskPlatformPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryTaskPlatform)(nil)).Elem()
}

func (o RegistryTaskPlatformPtrOutput) ToRegistryTaskPlatformPtrOutput() RegistryTaskPlatformPtrOutput {
	return o
}

func (o RegistryTaskPlatformPtrOutput) ToRegistryTaskPlatformPtrOutputWithContext(ctx context.Context) RegistryTaskPlatformPtrOutput {
	return o
}

func (o RegistryTaskPlatformPtrOutput) Elem() RegistryTaskPlatformOutput {
	return o.ApplyT(func(v *RegistryTaskPlatform) RegistryTaskPlatform {
		if v != nil {
			return *v
		}
		var ret RegistryTaskPlatform
		return ret
	}).(RegistryTaskPlatformOutput)
}

// The OS architecture. Possible values are `amd64`, `x86`, `386`, `arm` and `arm64`.
func (o RegistryTaskPlatformPtrOutput) Architecture() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryTaskPlatform) *string {
		if v == nil {
			return nil
		}
		return v.Architecture
	}).(pulumi.StringPtrOutput)
}

// The operating system type required for the task. Possible values are `Windows` and `Linux`.
func (o RegistryTaskPlatformPtrOutput) Os() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryTaskPlatform) *string {
		if v == nil {
			return nil
		}
		return &v.Os
	}).(pulumi.StringPtrOutput)
}

// The variant of the CPU. Possible values are `v6`, `v7`, `v8`.
func (o RegistryTaskPlatformPtrOutput) Variant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryTaskPlatform) *string {
		if v == nil {
			return nil
		}
		return v.Variant
	}).(pulumi.StringPtrOutput)
}

type RegistryTaskRegistryCredential struct {
	// One or more `custom` blocks as defined above.
	Customs []RegistryTaskRegistryCredentialCustom `pulumi:"customs"`
	// One `source` block as defined below.
	Source *RegistryTaskRegistryCredentialSource `pulumi:"source"`
}

// RegistryTaskRegistryCredentialInput is an input type that accepts RegistryTaskRegistryCredentialArgs and RegistryTaskRegistryCredentialOutput values.
// You can construct a concrete instance of `RegistryTaskRegistryCredentialInput` via:
//
//	RegistryTaskRegistryCredentialArgs{...}
type RegistryTaskRegistryCredentialInput interface {
	pulumi.Input

	ToRegistryTaskRegistryCredentialOutput() RegistryTaskRegistryCredentialOutput
	ToRegistryTaskRegistryCredentialOutputWithContext(context.Context) RegistryTaskRegistryCredentialOutput
}

type RegistryTaskRegistryCredentialArgs struct {
	// One or more `custom` blocks as defined above.
	Customs RegistryTaskRegistryCredentialCustomArrayInput `pulumi:"customs"`
	// One `source` block as defined below.
	Source RegistryTaskRegistryCredentialSourcePtrInput `pulumi:"source"`
}

func (RegistryTaskRegistryCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTaskRegistryCredential)(nil)).Elem()
}

func (i RegistryTaskRegistryCredentialArgs) ToRegistryTaskRegistryCredentialOutput() RegistryTaskRegistryCredentialOutput {
	return i.ToRegistryTaskRegistryCredentialOutputWithContext(context.Background())
}

func (i RegistryTaskRegistryCredentialArgs) ToRegistryTaskRegistryCredentialOutputWithContext(ctx context.Context) RegistryTaskRegistryCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskRegistryCredentialOutput)
}

func (i RegistryTaskRegistryCredentialArgs) ToRegistryTaskRegistryCredentialPtrOutput() RegistryTaskRegistryCredentialPtrOutput {
	return i.ToRegistryTaskRegistryCredentialPtrOutputWithContext(context.Background())
}

func (i RegistryTaskRegistryCredentialArgs) ToRegistryTaskRegistryCredentialPtrOutputWithContext(ctx context.Context) RegistryTaskRegistryCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskRegistryCredentialOutput).ToRegistryTaskRegistryCredentialPtrOutputWithContext(ctx)
}

// RegistryTaskRegistryCredentialPtrInput is an input type that accepts RegistryTaskRegistryCredentialArgs, RegistryTaskRegistryCredentialPtr and RegistryTaskRegistryCredentialPtrOutput values.
// You can construct a concrete instance of `RegistryTaskRegistryCredentialPtrInput` via:
//
//	        RegistryTaskRegistryCredentialArgs{...}
//
//	or:
//
//	        nil
type RegistryTaskRegistryCredentialPtrInput interface {
	pulumi.Input

	ToRegistryTaskRegistryCredentialPtrOutput() RegistryTaskRegistryCredentialPtrOutput
	ToRegistryTaskRegistryCredentialPtrOutputWithContext(context.Context) RegistryTaskRegistryCredentialPtrOutput
}

type registryTaskRegistryCredentialPtrType RegistryTaskRegistryCredentialArgs

func RegistryTaskRegistryCredentialPtr(v *RegistryTaskRegistryCredentialArgs) RegistryTaskRegistryCredentialPtrInput {
	return (*registryTaskRegistryCredentialPtrType)(v)
}

func (*registryTaskRegistryCredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryTaskRegistryCredential)(nil)).Elem()
}

func (i *registryTaskRegistryCredentialPtrType) ToRegistryTaskRegistryCredentialPtrOutput() RegistryTaskRegistryCredentialPtrOutput {
	return i.ToRegistryTaskRegistryCredentialPtrOutputWithContext(context.Background())
}

func (i *registryTaskRegistryCredentialPtrType) ToRegistryTaskRegistryCredentialPtrOutputWithContext(ctx context.Context) RegistryTaskRegistryCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskRegistryCredentialPtrOutput)
}

type RegistryTaskRegistryCredentialOutput struct{ *pulumi.OutputState }

func (RegistryTaskRegistryCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTaskRegistryCredential)(nil)).Elem()
}

func (o RegistryTaskRegistryCredentialOutput) ToRegistryTaskRegistryCredentialOutput() RegistryTaskRegistryCredentialOutput {
	return o
}

func (o RegistryTaskRegistryCredentialOutput) ToRegistryTaskRegistryCredentialOutputWithContext(ctx context.Context) RegistryTaskRegistryCredentialOutput {
	return o
}

func (o RegistryTaskRegistryCredentialOutput) ToRegistryTaskRegistryCredentialPtrOutput() RegistryTaskRegistryCredentialPtrOutput {
	return o.ToRegistryTaskRegistryCredentialPtrOutputWithContext(context.Background())
}

func (o RegistryTaskRegistryCredentialOutput) ToRegistryTaskRegistryCredentialPtrOutputWithContext(ctx context.Context) RegistryTaskRegistryCredentialPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryTaskRegistryCredential) *RegistryTaskRegistryCredential {
		return &v
	}).(RegistryTaskRegistryCredentialPtrOutput)
}

// One or more `custom` blocks as defined above.
func (o RegistryTaskRegistryCredentialOutput) Customs() RegistryTaskRegistryCredentialCustomArrayOutput {
	return o.ApplyT(func(v RegistryTaskRegistryCredential) []RegistryTaskRegistryCredentialCustom { return v.Customs }).(RegistryTaskRegistryCredentialCustomArrayOutput)
}

// One `source` block as defined below.
func (o RegistryTaskRegistryCredentialOutput) Source() RegistryTaskRegistryCredentialSourcePtrOutput {
	return o.ApplyT(func(v RegistryTaskRegistryCredential) *RegistryTaskRegistryCredentialSource { return v.Source }).(RegistryTaskRegistryCredentialSourcePtrOutput)
}

type RegistryTaskRegistryCredentialPtrOutput struct{ *pulumi.OutputState }

func (RegistryTaskRegistryCredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryTaskRegistryCredential)(nil)).Elem()
}

func (o RegistryTaskRegistryCredentialPtrOutput) ToRegistryTaskRegistryCredentialPtrOutput() RegistryTaskRegistryCredentialPtrOutput {
	return o
}

func (o RegistryTaskRegistryCredentialPtrOutput) ToRegistryTaskRegistryCredentialPtrOutputWithContext(ctx context.Context) RegistryTaskRegistryCredentialPtrOutput {
	return o
}

func (o RegistryTaskRegistryCredentialPtrOutput) Elem() RegistryTaskRegistryCredentialOutput {
	return o.ApplyT(func(v *RegistryTaskRegistryCredential) RegistryTaskRegistryCredential {
		if v != nil {
			return *v
		}
		var ret RegistryTaskRegistryCredential
		return ret
	}).(RegistryTaskRegistryCredentialOutput)
}

// One or more `custom` blocks as defined above.
func (o RegistryTaskRegistryCredentialPtrOutput) Customs() RegistryTaskRegistryCredentialCustomArrayOutput {
	return o.ApplyT(func(v *RegistryTaskRegistryCredential) []RegistryTaskRegistryCredentialCustom {
		if v == nil {
			return nil
		}
		return v.Customs
	}).(RegistryTaskRegistryCredentialCustomArrayOutput)
}

// One `source` block as defined below.
func (o RegistryTaskRegistryCredentialPtrOutput) Source() RegistryTaskRegistryCredentialSourcePtrOutput {
	return o.ApplyT(func(v *RegistryTaskRegistryCredential) *RegistryTaskRegistryCredentialSource {
		if v == nil {
			return nil
		}
		return v.Source
	}).(RegistryTaskRegistryCredentialSourcePtrOutput)
}

type RegistryTaskRegistryCredentialCustom struct {
	// The managed identity assigned to this custom credential. For user assigned identity, the value is the client ID of the identity. For system assigned identity, the value is `[system]`.
	Identity *string `pulumi:"identity"`
	// The login server of the custom Container Registry.
	LoginServer string `pulumi:"loginServer"`
	// The password for logging into the custom Container Registry. It can be either a plain text of password, or a Keyvault Secret ID.
	Password *string `pulumi:"password"`
	// The username for logging into the custom Container Registry. It can be either a plain text of username, or a Keyvault Secret ID.
	Username *string `pulumi:"username"`
}

// RegistryTaskRegistryCredentialCustomInput is an input type that accepts RegistryTaskRegistryCredentialCustomArgs and RegistryTaskRegistryCredentialCustomOutput values.
// You can construct a concrete instance of `RegistryTaskRegistryCredentialCustomInput` via:
//
//	RegistryTaskRegistryCredentialCustomArgs{...}
type RegistryTaskRegistryCredentialCustomInput interface {
	pulumi.Input

	ToRegistryTaskRegistryCredentialCustomOutput() RegistryTaskRegistryCredentialCustomOutput
	ToRegistryTaskRegistryCredentialCustomOutputWithContext(context.Context) RegistryTaskRegistryCredentialCustomOutput
}

type RegistryTaskRegistryCredentialCustomArgs struct {
	// The managed identity assigned to this custom credential. For user assigned identity, the value is the client ID of the identity. For system assigned identity, the value is `[system]`.
	Identity pulumi.StringPtrInput `pulumi:"identity"`
	// The login server of the custom Container Registry.
	LoginServer pulumi.StringInput `pulumi:"loginServer"`
	// The password for logging into the custom Container Registry. It can be either a plain text of password, or a Keyvault Secret ID.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The username for logging into the custom Container Registry. It can be either a plain text of username, or a Keyvault Secret ID.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (RegistryTaskRegistryCredentialCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTaskRegistryCredentialCustom)(nil)).Elem()
}

func (i RegistryTaskRegistryCredentialCustomArgs) ToRegistryTaskRegistryCredentialCustomOutput() RegistryTaskRegistryCredentialCustomOutput {
	return i.ToRegistryTaskRegistryCredentialCustomOutputWithContext(context.Background())
}

func (i RegistryTaskRegistryCredentialCustomArgs) ToRegistryTaskRegistryCredentialCustomOutputWithContext(ctx context.Context) RegistryTaskRegistryCredentialCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskRegistryCredentialCustomOutput)
}

// RegistryTaskRegistryCredentialCustomArrayInput is an input type that accepts RegistryTaskRegistryCredentialCustomArray and RegistryTaskRegistryCredentialCustomArrayOutput values.
// You can construct a concrete instance of `RegistryTaskRegistryCredentialCustomArrayInput` via:
//
//	RegistryTaskRegistryCredentialCustomArray{ RegistryTaskRegistryCredentialCustomArgs{...} }
type RegistryTaskRegistryCredentialCustomArrayInput interface {
	pulumi.Input

	ToRegistryTaskRegistryCredentialCustomArrayOutput() RegistryTaskRegistryCredentialCustomArrayOutput
	ToRegistryTaskRegistryCredentialCustomArrayOutputWithContext(context.Context) RegistryTaskRegistryCredentialCustomArrayOutput
}

type RegistryTaskRegistryCredentialCustomArray []RegistryTaskRegistryCredentialCustomInput

func (RegistryTaskRegistryCredentialCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryTaskRegistryCredentialCustom)(nil)).Elem()
}

func (i RegistryTaskRegistryCredentialCustomArray) ToRegistryTaskRegistryCredentialCustomArrayOutput() RegistryTaskRegistryCredentialCustomArrayOutput {
	return i.ToRegistryTaskRegistryCredentialCustomArrayOutputWithContext(context.Background())
}

func (i RegistryTaskRegistryCredentialCustomArray) ToRegistryTaskRegistryCredentialCustomArrayOutputWithContext(ctx context.Context) RegistryTaskRegistryCredentialCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskRegistryCredentialCustomArrayOutput)
}

type RegistryTaskRegistryCredentialCustomOutput struct{ *pulumi.OutputState }

func (RegistryTaskRegistryCredentialCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTaskRegistryCredentialCustom)(nil)).Elem()
}

func (o RegistryTaskRegistryCredentialCustomOutput) ToRegistryTaskRegistryCredentialCustomOutput() RegistryTaskRegistryCredentialCustomOutput {
	return o
}

func (o RegistryTaskRegistryCredentialCustomOutput) ToRegistryTaskRegistryCredentialCustomOutputWithContext(ctx context.Context) RegistryTaskRegistryCredentialCustomOutput {
	return o
}

// The managed identity assigned to this custom credential. For user assigned identity, the value is the client ID of the identity. For system assigned identity, the value is `[system]`.
func (o RegistryTaskRegistryCredentialCustomOutput) Identity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryTaskRegistryCredentialCustom) *string { return v.Identity }).(pulumi.StringPtrOutput)
}

// The login server of the custom Container Registry.
func (o RegistryTaskRegistryCredentialCustomOutput) LoginServer() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryTaskRegistryCredentialCustom) string { return v.LoginServer }).(pulumi.StringOutput)
}

// The password for logging into the custom Container Registry. It can be either a plain text of password, or a Keyvault Secret ID.
func (o RegistryTaskRegistryCredentialCustomOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryTaskRegistryCredentialCustom) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The username for logging into the custom Container Registry. It can be either a plain text of username, or a Keyvault Secret ID.
func (o RegistryTaskRegistryCredentialCustomOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryTaskRegistryCredentialCustom) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type RegistryTaskRegistryCredentialCustomArrayOutput struct{ *pulumi.OutputState }

func (RegistryTaskRegistryCredentialCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryTaskRegistryCredentialCustom)(nil)).Elem()
}

func (o RegistryTaskRegistryCredentialCustomArrayOutput) ToRegistryTaskRegistryCredentialCustomArrayOutput() RegistryTaskRegistryCredentialCustomArrayOutput {
	return o
}

func (o RegistryTaskRegistryCredentialCustomArrayOutput) ToRegistryTaskRegistryCredentialCustomArrayOutputWithContext(ctx context.Context) RegistryTaskRegistryCredentialCustomArrayOutput {
	return o
}

func (o RegistryTaskRegistryCredentialCustomArrayOutput) Index(i pulumi.IntInput) RegistryTaskRegistryCredentialCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegistryTaskRegistryCredentialCustom {
		return vs[0].([]RegistryTaskRegistryCredentialCustom)[vs[1].(int)]
	}).(RegistryTaskRegistryCredentialCustomOutput)
}

type RegistryTaskRegistryCredentialSource struct {
	// The login mode for the source registry. Possible values are `None` and `Default`.
	LoginMode string `pulumi:"loginMode"`
}

// RegistryTaskRegistryCredentialSourceInput is an input type that accepts RegistryTaskRegistryCredentialSourceArgs and RegistryTaskRegistryCredentialSourceOutput values.
// You can construct a concrete instance of `RegistryTaskRegistryCredentialSourceInput` via:
//
//	RegistryTaskRegistryCredentialSourceArgs{...}
type RegistryTaskRegistryCredentialSourceInput interface {
	pulumi.Input

	ToRegistryTaskRegistryCredentialSourceOutput() RegistryTaskRegistryCredentialSourceOutput
	ToRegistryTaskRegistryCredentialSourceOutputWithContext(context.Context) RegistryTaskRegistryCredentialSourceOutput
}

type RegistryTaskRegistryCredentialSourceArgs struct {
	// The login mode for the source registry. Possible values are `None` and `Default`.
	LoginMode pulumi.StringInput `pulumi:"loginMode"`
}

func (RegistryTaskRegistryCredentialSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTaskRegistryCredentialSource)(nil)).Elem()
}

func (i RegistryTaskRegistryCredentialSourceArgs) ToRegistryTaskRegistryCredentialSourceOutput() RegistryTaskRegistryCredentialSourceOutput {
	return i.ToRegistryTaskRegistryCredentialSourceOutputWithContext(context.Background())
}

func (i RegistryTaskRegistryCredentialSourceArgs) ToRegistryTaskRegistryCredentialSourceOutputWithContext(ctx context.Context) RegistryTaskRegistryCredentialSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskRegistryCredentialSourceOutput)
}

func (i RegistryTaskRegistryCredentialSourceArgs) ToRegistryTaskRegistryCredentialSourcePtrOutput() RegistryTaskRegistryCredentialSourcePtrOutput {
	return i.ToRegistryTaskRegistryCredentialSourcePtrOutputWithContext(context.Background())
}

func (i RegistryTaskRegistryCredentialSourceArgs) ToRegistryTaskRegistryCredentialSourcePtrOutputWithContext(ctx context.Context) RegistryTaskRegistryCredentialSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskRegistryCredentialSourceOutput).ToRegistryTaskRegistryCredentialSourcePtrOutputWithContext(ctx)
}

// RegistryTaskRegistryCredentialSourcePtrInput is an input type that accepts RegistryTaskRegistryCredentialSourceArgs, RegistryTaskRegistryCredentialSourcePtr and RegistryTaskRegistryCredentialSourcePtrOutput values.
// You can construct a concrete instance of `RegistryTaskRegistryCredentialSourcePtrInput` via:
//
//	        RegistryTaskRegistryCredentialSourceArgs{...}
//
//	or:
//
//	        nil
type RegistryTaskRegistryCredentialSourcePtrInput interface {
	pulumi.Input

	ToRegistryTaskRegistryCredentialSourcePtrOutput() RegistryTaskRegistryCredentialSourcePtrOutput
	ToRegistryTaskRegistryCredentialSourcePtrOutputWithContext(context.Context) RegistryTaskRegistryCredentialSourcePtrOutput
}

type registryTaskRegistryCredentialSourcePtrType RegistryTaskRegistryCredentialSourceArgs

func RegistryTaskRegistryCredentialSourcePtr(v *RegistryTaskRegistryCredentialSourceArgs) RegistryTaskRegistryCredentialSourcePtrInput {
	return (*registryTaskRegistryCredentialSourcePtrType)(v)
}

func (*registryTaskRegistryCredentialSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryTaskRegistryCredentialSource)(nil)).Elem()
}

func (i *registryTaskRegistryCredentialSourcePtrType) ToRegistryTaskRegistryCredentialSourcePtrOutput() RegistryTaskRegistryCredentialSourcePtrOutput {
	return i.ToRegistryTaskRegistryCredentialSourcePtrOutputWithContext(context.Background())
}

func (i *registryTaskRegistryCredentialSourcePtrType) ToRegistryTaskRegistryCredentialSourcePtrOutputWithContext(ctx context.Context) RegistryTaskRegistryCredentialSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskRegistryCredentialSourcePtrOutput)
}

type RegistryTaskRegistryCredentialSourceOutput struct{ *pulumi.OutputState }

func (RegistryTaskRegistryCredentialSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTaskRegistryCredentialSource)(nil)).Elem()
}

func (o RegistryTaskRegistryCredentialSourceOutput) ToRegistryTaskRegistryCredentialSourceOutput() RegistryTaskRegistryCredentialSourceOutput {
	return o
}

func (o RegistryTaskRegistryCredentialSourceOutput) ToRegistryTaskRegistryCredentialSourceOutputWithContext(ctx context.Context) RegistryTaskRegistryCredentialSourceOutput {
	return o
}

func (o RegistryTaskRegistryCredentialSourceOutput) ToRegistryTaskRegistryCredentialSourcePtrOutput() RegistryTaskRegistryCredentialSourcePtrOutput {
	return o.ToRegistryTaskRegistryCredentialSourcePtrOutputWithContext(context.Background())
}

func (o RegistryTaskRegistryCredentialSourceOutput) ToRegistryTaskRegistryCredentialSourcePtrOutputWithContext(ctx context.Context) RegistryTaskRegistryCredentialSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryTaskRegistryCredentialSource) *RegistryTaskRegistryCredentialSource {
		return &v
	}).(RegistryTaskRegistryCredentialSourcePtrOutput)
}

// The login mode for the source registry. Possible values are `None` and `Default`.
func (o RegistryTaskRegistryCredentialSourceOutput) LoginMode() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryTaskRegistryCredentialSource) string { return v.LoginMode }).(pulumi.StringOutput)
}

type RegistryTaskRegistryCredentialSourcePtrOutput struct{ *pulumi.OutputState }

func (RegistryTaskRegistryCredentialSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryTaskRegistryCredentialSource)(nil)).Elem()
}

func (o RegistryTaskRegistryCredentialSourcePtrOutput) ToRegistryTaskRegistryCredentialSourcePtrOutput() RegistryTaskRegistryCredentialSourcePtrOutput {
	return o
}

func (o RegistryTaskRegistryCredentialSourcePtrOutput) ToRegistryTaskRegistryCredentialSourcePtrOutputWithContext(ctx context.Context) RegistryTaskRegistryCredentialSourcePtrOutput {
	return o
}

func (o RegistryTaskRegistryCredentialSourcePtrOutput) Elem() RegistryTaskRegistryCredentialSourceOutput {
	return o.ApplyT(func(v *RegistryTaskRegistryCredentialSource) RegistryTaskRegistryCredentialSource {
		if v != nil {
			return *v
		}
		var ret RegistryTaskRegistryCredentialSource
		return ret
	}).(RegistryTaskRegistryCredentialSourceOutput)
}

// The login mode for the source registry. Possible values are `None` and `Default`.
func (o RegistryTaskRegistryCredentialSourcePtrOutput) LoginMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryTaskRegistryCredentialSource) *string {
		if v == nil {
			return nil
		}
		return &v.LoginMode
	}).(pulumi.StringPtrOutput)
}

type RegistryTaskSourceTrigger struct {
	// A `authentication` block as defined above.
	Authentication *RegistryTaskSourceTriggerAuthentication `pulumi:"authentication"`
	// The branch name of the source code.
	Branch *string `pulumi:"branch"`
	// Should the trigger be enabled? Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// Specifies a list of source events corresponding to the trigger. Possible values are `commit` and `pullrequest`.
	Events []string `pulumi:"events"`
	// The name which should be used for this trigger.
	Name string `pulumi:"name"`
	// The full URL to the source code repository.
	RepositoryUrl string `pulumi:"repositoryUrl"`
	// The type of the source control service. Possible values are `Github` and `VisualStudioTeamService`.
	SourceType string `pulumi:"sourceType"`
}

// RegistryTaskSourceTriggerInput is an input type that accepts RegistryTaskSourceTriggerArgs and RegistryTaskSourceTriggerOutput values.
// You can construct a concrete instance of `RegistryTaskSourceTriggerInput` via:
//
//	RegistryTaskSourceTriggerArgs{...}
type RegistryTaskSourceTriggerInput interface {
	pulumi.Input

	ToRegistryTaskSourceTriggerOutput() RegistryTaskSourceTriggerOutput
	ToRegistryTaskSourceTriggerOutputWithContext(context.Context) RegistryTaskSourceTriggerOutput
}

type RegistryTaskSourceTriggerArgs struct {
	// A `authentication` block as defined above.
	Authentication RegistryTaskSourceTriggerAuthenticationPtrInput `pulumi:"authentication"`
	// The branch name of the source code.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Should the trigger be enabled? Defaults to `true`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Specifies a list of source events corresponding to the trigger. Possible values are `commit` and `pullrequest`.
	Events pulumi.StringArrayInput `pulumi:"events"`
	// The name which should be used for this trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The full URL to the source code repository.
	RepositoryUrl pulumi.StringInput `pulumi:"repositoryUrl"`
	// The type of the source control service. Possible values are `Github` and `VisualStudioTeamService`.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
}

func (RegistryTaskSourceTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTaskSourceTrigger)(nil)).Elem()
}

func (i RegistryTaskSourceTriggerArgs) ToRegistryTaskSourceTriggerOutput() RegistryTaskSourceTriggerOutput {
	return i.ToRegistryTaskSourceTriggerOutputWithContext(context.Background())
}

func (i RegistryTaskSourceTriggerArgs) ToRegistryTaskSourceTriggerOutputWithContext(ctx context.Context) RegistryTaskSourceTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskSourceTriggerOutput)
}

// RegistryTaskSourceTriggerArrayInput is an input type that accepts RegistryTaskSourceTriggerArray and RegistryTaskSourceTriggerArrayOutput values.
// You can construct a concrete instance of `RegistryTaskSourceTriggerArrayInput` via:
//
//	RegistryTaskSourceTriggerArray{ RegistryTaskSourceTriggerArgs{...} }
type RegistryTaskSourceTriggerArrayInput interface {
	pulumi.Input

	ToRegistryTaskSourceTriggerArrayOutput() RegistryTaskSourceTriggerArrayOutput
	ToRegistryTaskSourceTriggerArrayOutputWithContext(context.Context) RegistryTaskSourceTriggerArrayOutput
}

type RegistryTaskSourceTriggerArray []RegistryTaskSourceTriggerInput

func (RegistryTaskSourceTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryTaskSourceTrigger)(nil)).Elem()
}

func (i RegistryTaskSourceTriggerArray) ToRegistryTaskSourceTriggerArrayOutput() RegistryTaskSourceTriggerArrayOutput {
	return i.ToRegistryTaskSourceTriggerArrayOutputWithContext(context.Background())
}

func (i RegistryTaskSourceTriggerArray) ToRegistryTaskSourceTriggerArrayOutputWithContext(ctx context.Context) RegistryTaskSourceTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskSourceTriggerArrayOutput)
}

type RegistryTaskSourceTriggerOutput struct{ *pulumi.OutputState }

func (RegistryTaskSourceTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTaskSourceTrigger)(nil)).Elem()
}

func (o RegistryTaskSourceTriggerOutput) ToRegistryTaskSourceTriggerOutput() RegistryTaskSourceTriggerOutput {
	return o
}

func (o RegistryTaskSourceTriggerOutput) ToRegistryTaskSourceTriggerOutputWithContext(ctx context.Context) RegistryTaskSourceTriggerOutput {
	return o
}

// A `authentication` block as defined above.
func (o RegistryTaskSourceTriggerOutput) Authentication() RegistryTaskSourceTriggerAuthenticationPtrOutput {
	return o.ApplyT(func(v RegistryTaskSourceTrigger) *RegistryTaskSourceTriggerAuthentication { return v.Authentication }).(RegistryTaskSourceTriggerAuthenticationPtrOutput)
}

// The branch name of the source code.
func (o RegistryTaskSourceTriggerOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryTaskSourceTrigger) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Should the trigger be enabled? Defaults to `true`.
func (o RegistryTaskSourceTriggerOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RegistryTaskSourceTrigger) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Specifies a list of source events corresponding to the trigger. Possible values are `commit` and `pullrequest`.
func (o RegistryTaskSourceTriggerOutput) Events() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RegistryTaskSourceTrigger) []string { return v.Events }).(pulumi.StringArrayOutput)
}

// The name which should be used for this trigger.
func (o RegistryTaskSourceTriggerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryTaskSourceTrigger) string { return v.Name }).(pulumi.StringOutput)
}

// The full URL to the source code repository.
func (o RegistryTaskSourceTriggerOutput) RepositoryUrl() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryTaskSourceTrigger) string { return v.RepositoryUrl }).(pulumi.StringOutput)
}

// The type of the source control service. Possible values are `Github` and `VisualStudioTeamService`.
func (o RegistryTaskSourceTriggerOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryTaskSourceTrigger) string { return v.SourceType }).(pulumi.StringOutput)
}

type RegistryTaskSourceTriggerArrayOutput struct{ *pulumi.OutputState }

func (RegistryTaskSourceTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryTaskSourceTrigger)(nil)).Elem()
}

func (o RegistryTaskSourceTriggerArrayOutput) ToRegistryTaskSourceTriggerArrayOutput() RegistryTaskSourceTriggerArrayOutput {
	return o
}

func (o RegistryTaskSourceTriggerArrayOutput) ToRegistryTaskSourceTriggerArrayOutputWithContext(ctx context.Context) RegistryTaskSourceTriggerArrayOutput {
	return o
}

func (o RegistryTaskSourceTriggerArrayOutput) Index(i pulumi.IntInput) RegistryTaskSourceTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegistryTaskSourceTrigger {
		return vs[0].([]RegistryTaskSourceTrigger)[vs[1].(int)]
	}).(RegistryTaskSourceTriggerOutput)
}

type RegistryTaskSourceTriggerAuthentication struct {
	// Time in seconds that the token remains valid.
	ExpireInSeconds *int `pulumi:"expireInSeconds"`
	// The refresh token used to refresh the access token.
	RefreshToken *string `pulumi:"refreshToken"`
	// The scope of the access token.
	Scope *string `pulumi:"scope"`
	// The access token used to access the source control provider.
	Token string `pulumi:"token"`
	// The type of the token. Possible values are `PAT` (personal access token) and `OAuth`.
	TokenType string `pulumi:"tokenType"`
}

// RegistryTaskSourceTriggerAuthenticationInput is an input type that accepts RegistryTaskSourceTriggerAuthenticationArgs and RegistryTaskSourceTriggerAuthenticationOutput values.
// You can construct a concrete instance of `RegistryTaskSourceTriggerAuthenticationInput` via:
//
//	RegistryTaskSourceTriggerAuthenticationArgs{...}
type RegistryTaskSourceTriggerAuthenticationInput interface {
	pulumi.Input

	ToRegistryTaskSourceTriggerAuthenticationOutput() RegistryTaskSourceTriggerAuthenticationOutput
	ToRegistryTaskSourceTriggerAuthenticationOutputWithContext(context.Context) RegistryTaskSourceTriggerAuthenticationOutput
}

type RegistryTaskSourceTriggerAuthenticationArgs struct {
	// Time in seconds that the token remains valid.
	ExpireInSeconds pulumi.IntPtrInput `pulumi:"expireInSeconds"`
	// The refresh token used to refresh the access token.
	RefreshToken pulumi.StringPtrInput `pulumi:"refreshToken"`
	// The scope of the access token.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The access token used to access the source control provider.
	Token pulumi.StringInput `pulumi:"token"`
	// The type of the token. Possible values are `PAT` (personal access token) and `OAuth`.
	TokenType pulumi.StringInput `pulumi:"tokenType"`
}

func (RegistryTaskSourceTriggerAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTaskSourceTriggerAuthentication)(nil)).Elem()
}

func (i RegistryTaskSourceTriggerAuthenticationArgs) ToRegistryTaskSourceTriggerAuthenticationOutput() RegistryTaskSourceTriggerAuthenticationOutput {
	return i.ToRegistryTaskSourceTriggerAuthenticationOutputWithContext(context.Background())
}

func (i RegistryTaskSourceTriggerAuthenticationArgs) ToRegistryTaskSourceTriggerAuthenticationOutputWithContext(ctx context.Context) RegistryTaskSourceTriggerAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskSourceTriggerAuthenticationOutput)
}

func (i RegistryTaskSourceTriggerAuthenticationArgs) ToRegistryTaskSourceTriggerAuthenticationPtrOutput() RegistryTaskSourceTriggerAuthenticationPtrOutput {
	return i.ToRegistryTaskSourceTriggerAuthenticationPtrOutputWithContext(context.Background())
}

func (i RegistryTaskSourceTriggerAuthenticationArgs) ToRegistryTaskSourceTriggerAuthenticationPtrOutputWithContext(ctx context.Context) RegistryTaskSourceTriggerAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskSourceTriggerAuthenticationOutput).ToRegistryTaskSourceTriggerAuthenticationPtrOutputWithContext(ctx)
}

// RegistryTaskSourceTriggerAuthenticationPtrInput is an input type that accepts RegistryTaskSourceTriggerAuthenticationArgs, RegistryTaskSourceTriggerAuthenticationPtr and RegistryTaskSourceTriggerAuthenticationPtrOutput values.
// You can construct a concrete instance of `RegistryTaskSourceTriggerAuthenticationPtrInput` via:
//
//	        RegistryTaskSourceTriggerAuthenticationArgs{...}
//
//	or:
//
//	        nil
type RegistryTaskSourceTriggerAuthenticationPtrInput interface {
	pulumi.Input

	ToRegistryTaskSourceTriggerAuthenticationPtrOutput() RegistryTaskSourceTriggerAuthenticationPtrOutput
	ToRegistryTaskSourceTriggerAuthenticationPtrOutputWithContext(context.Context) RegistryTaskSourceTriggerAuthenticationPtrOutput
}

type registryTaskSourceTriggerAuthenticationPtrType RegistryTaskSourceTriggerAuthenticationArgs

func RegistryTaskSourceTriggerAuthenticationPtr(v *RegistryTaskSourceTriggerAuthenticationArgs) RegistryTaskSourceTriggerAuthenticationPtrInput {
	return (*registryTaskSourceTriggerAuthenticationPtrType)(v)
}

func (*registryTaskSourceTriggerAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryTaskSourceTriggerAuthentication)(nil)).Elem()
}

func (i *registryTaskSourceTriggerAuthenticationPtrType) ToRegistryTaskSourceTriggerAuthenticationPtrOutput() RegistryTaskSourceTriggerAuthenticationPtrOutput {
	return i.ToRegistryTaskSourceTriggerAuthenticationPtrOutputWithContext(context.Background())
}

func (i *registryTaskSourceTriggerAuthenticationPtrType) ToRegistryTaskSourceTriggerAuthenticationPtrOutputWithContext(ctx context.Context) RegistryTaskSourceTriggerAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskSourceTriggerAuthenticationPtrOutput)
}

type RegistryTaskSourceTriggerAuthenticationOutput struct{ *pulumi.OutputState }

func (RegistryTaskSourceTriggerAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTaskSourceTriggerAuthentication)(nil)).Elem()
}

func (o RegistryTaskSourceTriggerAuthenticationOutput) ToRegistryTaskSourceTriggerAuthenticationOutput() RegistryTaskSourceTriggerAuthenticationOutput {
	return o
}

func (o RegistryTaskSourceTriggerAuthenticationOutput) ToRegistryTaskSourceTriggerAuthenticationOutputWithContext(ctx context.Context) RegistryTaskSourceTriggerAuthenticationOutput {
	return o
}

func (o RegistryTaskSourceTriggerAuthenticationOutput) ToRegistryTaskSourceTriggerAuthenticationPtrOutput() RegistryTaskSourceTriggerAuthenticationPtrOutput {
	return o.ToRegistryTaskSourceTriggerAuthenticationPtrOutputWithContext(context.Background())
}

func (o RegistryTaskSourceTriggerAuthenticationOutput) ToRegistryTaskSourceTriggerAuthenticationPtrOutputWithContext(ctx context.Context) RegistryTaskSourceTriggerAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryTaskSourceTriggerAuthentication) *RegistryTaskSourceTriggerAuthentication {
		return &v
	}).(RegistryTaskSourceTriggerAuthenticationPtrOutput)
}

// Time in seconds that the token remains valid.
func (o RegistryTaskSourceTriggerAuthenticationOutput) ExpireInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RegistryTaskSourceTriggerAuthentication) *int { return v.ExpireInSeconds }).(pulumi.IntPtrOutput)
}

// The refresh token used to refresh the access token.
func (o RegistryTaskSourceTriggerAuthenticationOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryTaskSourceTriggerAuthentication) *string { return v.RefreshToken }).(pulumi.StringPtrOutput)
}

// The scope of the access token.
func (o RegistryTaskSourceTriggerAuthenticationOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryTaskSourceTriggerAuthentication) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The access token used to access the source control provider.
func (o RegistryTaskSourceTriggerAuthenticationOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryTaskSourceTriggerAuthentication) string { return v.Token }).(pulumi.StringOutput)
}

// The type of the token. Possible values are `PAT` (personal access token) and `OAuth`.
func (o RegistryTaskSourceTriggerAuthenticationOutput) TokenType() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryTaskSourceTriggerAuthentication) string { return v.TokenType }).(pulumi.StringOutput)
}

type RegistryTaskSourceTriggerAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (RegistryTaskSourceTriggerAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryTaskSourceTriggerAuthentication)(nil)).Elem()
}

func (o RegistryTaskSourceTriggerAuthenticationPtrOutput) ToRegistryTaskSourceTriggerAuthenticationPtrOutput() RegistryTaskSourceTriggerAuthenticationPtrOutput {
	return o
}

func (o RegistryTaskSourceTriggerAuthenticationPtrOutput) ToRegistryTaskSourceTriggerAuthenticationPtrOutputWithContext(ctx context.Context) RegistryTaskSourceTriggerAuthenticationPtrOutput {
	return o
}

func (o RegistryTaskSourceTriggerAuthenticationPtrOutput) Elem() RegistryTaskSourceTriggerAuthenticationOutput {
	return o.ApplyT(func(v *RegistryTaskSourceTriggerAuthentication) RegistryTaskSourceTriggerAuthentication {
		if v != nil {
			return *v
		}
		var ret RegistryTaskSourceTriggerAuthentication
		return ret
	}).(RegistryTaskSourceTriggerAuthenticationOutput)
}

// Time in seconds that the token remains valid.
func (o RegistryTaskSourceTriggerAuthenticationPtrOutput) ExpireInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RegistryTaskSourceTriggerAuthentication) *int {
		if v == nil {
			return nil
		}
		return v.ExpireInSeconds
	}).(pulumi.IntPtrOutput)
}

// The refresh token used to refresh the access token.
func (o RegistryTaskSourceTriggerAuthenticationPtrOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryTaskSourceTriggerAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RefreshToken
	}).(pulumi.StringPtrOutput)
}

// The scope of the access token.
func (o RegistryTaskSourceTriggerAuthenticationPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryTaskSourceTriggerAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// The access token used to access the source control provider.
func (o RegistryTaskSourceTriggerAuthenticationPtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryTaskSourceTriggerAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Token
	}).(pulumi.StringPtrOutput)
}

// The type of the token. Possible values are `PAT` (personal access token) and `OAuth`.
func (o RegistryTaskSourceTriggerAuthenticationPtrOutput) TokenType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryTaskSourceTriggerAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.TokenType
	}).(pulumi.StringPtrOutput)
}

type RegistryTaskTimerTrigger struct {
	// Should the trigger be enabled? Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// The name which should be used for this trigger.
	Name string `pulumi:"name"`
	// The CRON expression for the task schedule.
	Schedule string `pulumi:"schedule"`
}

// RegistryTaskTimerTriggerInput is an input type that accepts RegistryTaskTimerTriggerArgs and RegistryTaskTimerTriggerOutput values.
// You can construct a concrete instance of `RegistryTaskTimerTriggerInput` via:
//
//	RegistryTaskTimerTriggerArgs{...}
type RegistryTaskTimerTriggerInput interface {
	pulumi.Input

	ToRegistryTaskTimerTriggerOutput() RegistryTaskTimerTriggerOutput
	ToRegistryTaskTimerTriggerOutputWithContext(context.Context) RegistryTaskTimerTriggerOutput
}

type RegistryTaskTimerTriggerArgs struct {
	// Should the trigger be enabled? Defaults to `true`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The name which should be used for this trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The CRON expression for the task schedule.
	Schedule pulumi.StringInput `pulumi:"schedule"`
}

func (RegistryTaskTimerTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTaskTimerTrigger)(nil)).Elem()
}

func (i RegistryTaskTimerTriggerArgs) ToRegistryTaskTimerTriggerOutput() RegistryTaskTimerTriggerOutput {
	return i.ToRegistryTaskTimerTriggerOutputWithContext(context.Background())
}

func (i RegistryTaskTimerTriggerArgs) ToRegistryTaskTimerTriggerOutputWithContext(ctx context.Context) RegistryTaskTimerTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskTimerTriggerOutput)
}

// RegistryTaskTimerTriggerArrayInput is an input type that accepts RegistryTaskTimerTriggerArray and RegistryTaskTimerTriggerArrayOutput values.
// You can construct a concrete instance of `RegistryTaskTimerTriggerArrayInput` via:
//
//	RegistryTaskTimerTriggerArray{ RegistryTaskTimerTriggerArgs{...} }
type RegistryTaskTimerTriggerArrayInput interface {
	pulumi.Input

	ToRegistryTaskTimerTriggerArrayOutput() RegistryTaskTimerTriggerArrayOutput
	ToRegistryTaskTimerTriggerArrayOutputWithContext(context.Context) RegistryTaskTimerTriggerArrayOutput
}

type RegistryTaskTimerTriggerArray []RegistryTaskTimerTriggerInput

func (RegistryTaskTimerTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryTaskTimerTrigger)(nil)).Elem()
}

func (i RegistryTaskTimerTriggerArray) ToRegistryTaskTimerTriggerArrayOutput() RegistryTaskTimerTriggerArrayOutput {
	return i.ToRegistryTaskTimerTriggerArrayOutputWithContext(context.Background())
}

func (i RegistryTaskTimerTriggerArray) ToRegistryTaskTimerTriggerArrayOutputWithContext(ctx context.Context) RegistryTaskTimerTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTaskTimerTriggerArrayOutput)
}

type RegistryTaskTimerTriggerOutput struct{ *pulumi.OutputState }

func (RegistryTaskTimerTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTaskTimerTrigger)(nil)).Elem()
}

func (o RegistryTaskTimerTriggerOutput) ToRegistryTaskTimerTriggerOutput() RegistryTaskTimerTriggerOutput {
	return o
}

func (o RegistryTaskTimerTriggerOutput) ToRegistryTaskTimerTriggerOutputWithContext(ctx context.Context) RegistryTaskTimerTriggerOutput {
	return o
}

// Should the trigger be enabled? Defaults to `true`.
func (o RegistryTaskTimerTriggerOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RegistryTaskTimerTrigger) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The name which should be used for this trigger.
func (o RegistryTaskTimerTriggerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryTaskTimerTrigger) string { return v.Name }).(pulumi.StringOutput)
}

// The CRON expression for the task schedule.
func (o RegistryTaskTimerTriggerOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryTaskTimerTrigger) string { return v.Schedule }).(pulumi.StringOutput)
}

type RegistryTaskTimerTriggerArrayOutput struct{ *pulumi.OutputState }

func (RegistryTaskTimerTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryTaskTimerTrigger)(nil)).Elem()
}

func (o RegistryTaskTimerTriggerArrayOutput) ToRegistryTaskTimerTriggerArrayOutput() RegistryTaskTimerTriggerArrayOutput {
	return o
}

func (o RegistryTaskTimerTriggerArrayOutput) ToRegistryTaskTimerTriggerArrayOutputWithContext(ctx context.Context) RegistryTaskTimerTriggerArrayOutput {
	return o
}

func (o RegistryTaskTimerTriggerArrayOutput) Index(i pulumi.IntInput) RegistryTaskTimerTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegistryTaskTimerTrigger {
		return vs[0].([]RegistryTaskTimerTrigger)[vs[1].(int)]
	}).(RegistryTaskTimerTriggerOutput)
}

type RegistryTrustPolicy struct {
	// Boolean value that indicates whether the policy is enabled.
	Enabled *bool `pulumi:"enabled"`
}

// RegistryTrustPolicyInput is an input type that accepts RegistryTrustPolicyArgs and RegistryTrustPolicyOutput values.
// You can construct a concrete instance of `RegistryTrustPolicyInput` via:
//
//	RegistryTrustPolicyArgs{...}
type RegistryTrustPolicyInput interface {
	pulumi.Input

	ToRegistryTrustPolicyOutput() RegistryTrustPolicyOutput
	ToRegistryTrustPolicyOutputWithContext(context.Context) RegistryTrustPolicyOutput
}

type RegistryTrustPolicyArgs struct {
	// Boolean value that indicates whether the policy is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (RegistryTrustPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTrustPolicy)(nil)).Elem()
}

func (i RegistryTrustPolicyArgs) ToRegistryTrustPolicyOutput() RegistryTrustPolicyOutput {
	return i.ToRegistryTrustPolicyOutputWithContext(context.Background())
}

func (i RegistryTrustPolicyArgs) ToRegistryTrustPolicyOutputWithContext(ctx context.Context) RegistryTrustPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTrustPolicyOutput)
}

func (i RegistryTrustPolicyArgs) ToRegistryTrustPolicyPtrOutput() RegistryTrustPolicyPtrOutput {
	return i.ToRegistryTrustPolicyPtrOutputWithContext(context.Background())
}

func (i RegistryTrustPolicyArgs) ToRegistryTrustPolicyPtrOutputWithContext(ctx context.Context) RegistryTrustPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTrustPolicyOutput).ToRegistryTrustPolicyPtrOutputWithContext(ctx)
}

// RegistryTrustPolicyPtrInput is an input type that accepts RegistryTrustPolicyArgs, RegistryTrustPolicyPtr and RegistryTrustPolicyPtrOutput values.
// You can construct a concrete instance of `RegistryTrustPolicyPtrInput` via:
//
//	        RegistryTrustPolicyArgs{...}
//
//	or:
//
//	        nil
type RegistryTrustPolicyPtrInput interface {
	pulumi.Input

	ToRegistryTrustPolicyPtrOutput() RegistryTrustPolicyPtrOutput
	ToRegistryTrustPolicyPtrOutputWithContext(context.Context) RegistryTrustPolicyPtrOutput
}

type registryTrustPolicyPtrType RegistryTrustPolicyArgs

func RegistryTrustPolicyPtr(v *RegistryTrustPolicyArgs) RegistryTrustPolicyPtrInput {
	return (*registryTrustPolicyPtrType)(v)
}

func (*registryTrustPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryTrustPolicy)(nil)).Elem()
}

func (i *registryTrustPolicyPtrType) ToRegistryTrustPolicyPtrOutput() RegistryTrustPolicyPtrOutput {
	return i.ToRegistryTrustPolicyPtrOutputWithContext(context.Background())
}

func (i *registryTrustPolicyPtrType) ToRegistryTrustPolicyPtrOutputWithContext(ctx context.Context) RegistryTrustPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTrustPolicyPtrOutput)
}

type RegistryTrustPolicyOutput struct{ *pulumi.OutputState }

func (RegistryTrustPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTrustPolicy)(nil)).Elem()
}

func (o RegistryTrustPolicyOutput) ToRegistryTrustPolicyOutput() RegistryTrustPolicyOutput {
	return o
}

func (o RegistryTrustPolicyOutput) ToRegistryTrustPolicyOutputWithContext(ctx context.Context) RegistryTrustPolicyOutput {
	return o
}

func (o RegistryTrustPolicyOutput) ToRegistryTrustPolicyPtrOutput() RegistryTrustPolicyPtrOutput {
	return o.ToRegistryTrustPolicyPtrOutputWithContext(context.Background())
}

func (o RegistryTrustPolicyOutput) ToRegistryTrustPolicyPtrOutputWithContext(ctx context.Context) RegistryTrustPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryTrustPolicy) *RegistryTrustPolicy {
		return &v
	}).(RegistryTrustPolicyPtrOutput)
}

// Boolean value that indicates whether the policy is enabled.
func (o RegistryTrustPolicyOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RegistryTrustPolicy) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type RegistryTrustPolicyPtrOutput struct{ *pulumi.OutputState }

func (RegistryTrustPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryTrustPolicy)(nil)).Elem()
}

func (o RegistryTrustPolicyPtrOutput) ToRegistryTrustPolicyPtrOutput() RegistryTrustPolicyPtrOutput {
	return o
}

func (o RegistryTrustPolicyPtrOutput) ToRegistryTrustPolicyPtrOutputWithContext(ctx context.Context) RegistryTrustPolicyPtrOutput {
	return o
}

func (o RegistryTrustPolicyPtrOutput) Elem() RegistryTrustPolicyOutput {
	return o.ApplyT(func(v *RegistryTrustPolicy) RegistryTrustPolicy {
		if v != nil {
			return *v
		}
		var ret RegistryTrustPolicy
		return ret
	}).(RegistryTrustPolicyOutput)
}

// Boolean value that indicates whether the policy is enabled.
func (o RegistryTrustPolicyPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RegistryTrustPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type TokenPasswordPassword1 struct {
	// The expiration date of the password in RFC3339 format. Changing this forces a new resource to be created.
	Expiry *string `pulumi:"expiry"`
	// The value of the password (Sensitive).
	Value *string `pulumi:"value"`
}

// TokenPasswordPassword1Input is an input type that accepts TokenPasswordPassword1Args and TokenPasswordPassword1Output values.
// You can construct a concrete instance of `TokenPasswordPassword1Input` via:
//
//	TokenPasswordPassword1Args{...}
type TokenPasswordPassword1Input interface {
	pulumi.Input

	ToTokenPasswordPassword1Output() TokenPasswordPassword1Output
	ToTokenPasswordPassword1OutputWithContext(context.Context) TokenPasswordPassword1Output
}

type TokenPasswordPassword1Args struct {
	// The expiration date of the password in RFC3339 format. Changing this forces a new resource to be created.
	Expiry pulumi.StringPtrInput `pulumi:"expiry"`
	// The value of the password (Sensitive).
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TokenPasswordPassword1Args) ElementType() reflect.Type {
	return reflect.TypeOf((*TokenPasswordPassword1)(nil)).Elem()
}

func (i TokenPasswordPassword1Args) ToTokenPasswordPassword1Output() TokenPasswordPassword1Output {
	return i.ToTokenPasswordPassword1OutputWithContext(context.Background())
}

func (i TokenPasswordPassword1Args) ToTokenPasswordPassword1OutputWithContext(ctx context.Context) TokenPasswordPassword1Output {
	return pulumi.ToOutputWithContext(ctx, i).(TokenPasswordPassword1Output)
}

func (i TokenPasswordPassword1Args) ToTokenPasswordPassword1PtrOutput() TokenPasswordPassword1PtrOutput {
	return i.ToTokenPasswordPassword1PtrOutputWithContext(context.Background())
}

func (i TokenPasswordPassword1Args) ToTokenPasswordPassword1PtrOutputWithContext(ctx context.Context) TokenPasswordPassword1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TokenPasswordPassword1Output).ToTokenPasswordPassword1PtrOutputWithContext(ctx)
}

// TokenPasswordPassword1PtrInput is an input type that accepts TokenPasswordPassword1Args, TokenPasswordPassword1Ptr and TokenPasswordPassword1PtrOutput values.
// You can construct a concrete instance of `TokenPasswordPassword1PtrInput` via:
//
//	        TokenPasswordPassword1Args{...}
//
//	or:
//
//	        nil
type TokenPasswordPassword1PtrInput interface {
	pulumi.Input

	ToTokenPasswordPassword1PtrOutput() TokenPasswordPassword1PtrOutput
	ToTokenPasswordPassword1PtrOutputWithContext(context.Context) TokenPasswordPassword1PtrOutput
}

type tokenPasswordPassword1PtrType TokenPasswordPassword1Args

func TokenPasswordPassword1Ptr(v *TokenPasswordPassword1Args) TokenPasswordPassword1PtrInput {
	return (*tokenPasswordPassword1PtrType)(v)
}

func (*tokenPasswordPassword1PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TokenPasswordPassword1)(nil)).Elem()
}

func (i *tokenPasswordPassword1PtrType) ToTokenPasswordPassword1PtrOutput() TokenPasswordPassword1PtrOutput {
	return i.ToTokenPasswordPassword1PtrOutputWithContext(context.Background())
}

func (i *tokenPasswordPassword1PtrType) ToTokenPasswordPassword1PtrOutputWithContext(ctx context.Context) TokenPasswordPassword1PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TokenPasswordPassword1PtrOutput)
}

type TokenPasswordPassword1Output struct{ *pulumi.OutputState }

func (TokenPasswordPassword1Output) ElementType() reflect.Type {
	return reflect.TypeOf((*TokenPasswordPassword1)(nil)).Elem()
}

func (o TokenPasswordPassword1Output) ToTokenPasswordPassword1Output() TokenPasswordPassword1Output {
	return o
}

func (o TokenPasswordPassword1Output) ToTokenPasswordPassword1OutputWithContext(ctx context.Context) TokenPasswordPassword1Output {
	return o
}

func (o TokenPasswordPassword1Output) ToTokenPasswordPassword1PtrOutput() TokenPasswordPassword1PtrOutput {
	return o.ToTokenPasswordPassword1PtrOutputWithContext(context.Background())
}

func (o TokenPasswordPassword1Output) ToTokenPasswordPassword1PtrOutputWithContext(ctx context.Context) TokenPasswordPassword1PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TokenPasswordPassword1) *TokenPasswordPassword1 {
		return &v
	}).(TokenPasswordPassword1PtrOutput)
}

// The expiration date of the password in RFC3339 format. Changing this forces a new resource to be created.
func (o TokenPasswordPassword1Output) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TokenPasswordPassword1) *string { return v.Expiry }).(pulumi.StringPtrOutput)
}

// The value of the password (Sensitive).
func (o TokenPasswordPassword1Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TokenPasswordPassword1) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TokenPasswordPassword1PtrOutput struct{ *pulumi.OutputState }

func (TokenPasswordPassword1PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TokenPasswordPassword1)(nil)).Elem()
}

func (o TokenPasswordPassword1PtrOutput) ToTokenPasswordPassword1PtrOutput() TokenPasswordPassword1PtrOutput {
	return o
}

func (o TokenPasswordPassword1PtrOutput) ToTokenPasswordPassword1PtrOutputWithContext(ctx context.Context) TokenPasswordPassword1PtrOutput {
	return o
}

func (o TokenPasswordPassword1PtrOutput) Elem() TokenPasswordPassword1Output {
	return o.ApplyT(func(v *TokenPasswordPassword1) TokenPasswordPassword1 {
		if v != nil {
			return *v
		}
		var ret TokenPasswordPassword1
		return ret
	}).(TokenPasswordPassword1Output)
}

// The expiration date of the password in RFC3339 format. Changing this forces a new resource to be created.
func (o TokenPasswordPassword1PtrOutput) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TokenPasswordPassword1) *string {
		if v == nil {
			return nil
		}
		return v.Expiry
	}).(pulumi.StringPtrOutput)
}

// The value of the password (Sensitive).
func (o TokenPasswordPassword1PtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TokenPasswordPassword1) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type TokenPasswordPassword2 struct {
	// The expiration date of the password in RFC3339 format. Changing this forces a new resource to be created.
	Expiry *string `pulumi:"expiry"`
	// The value of the password (Sensitive).
	Value *string `pulumi:"value"`
}

// TokenPasswordPassword2Input is an input type that accepts TokenPasswordPassword2Args and TokenPasswordPassword2Output values.
// You can construct a concrete instance of `TokenPasswordPassword2Input` via:
//
//	TokenPasswordPassword2Args{...}
type TokenPasswordPassword2Input interface {
	pulumi.Input

	ToTokenPasswordPassword2Output() TokenPasswordPassword2Output
	ToTokenPasswordPassword2OutputWithContext(context.Context) TokenPasswordPassword2Output
}

type TokenPasswordPassword2Args struct {
	// The expiration date of the password in RFC3339 format. Changing this forces a new resource to be created.
	Expiry pulumi.StringPtrInput `pulumi:"expiry"`
	// The value of the password (Sensitive).
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TokenPasswordPassword2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*TokenPasswordPassword2)(nil)).Elem()
}

func (i TokenPasswordPassword2Args) ToTokenPasswordPassword2Output() TokenPasswordPassword2Output {
	return i.ToTokenPasswordPassword2OutputWithContext(context.Background())
}

func (i TokenPasswordPassword2Args) ToTokenPasswordPassword2OutputWithContext(ctx context.Context) TokenPasswordPassword2Output {
	return pulumi.ToOutputWithContext(ctx, i).(TokenPasswordPassword2Output)
}

func (i TokenPasswordPassword2Args) ToTokenPasswordPassword2PtrOutput() TokenPasswordPassword2PtrOutput {
	return i.ToTokenPasswordPassword2PtrOutputWithContext(context.Background())
}

func (i TokenPasswordPassword2Args) ToTokenPasswordPassword2PtrOutputWithContext(ctx context.Context) TokenPasswordPassword2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TokenPasswordPassword2Output).ToTokenPasswordPassword2PtrOutputWithContext(ctx)
}

// TokenPasswordPassword2PtrInput is an input type that accepts TokenPasswordPassword2Args, TokenPasswordPassword2Ptr and TokenPasswordPassword2PtrOutput values.
// You can construct a concrete instance of `TokenPasswordPassword2PtrInput` via:
//
//	        TokenPasswordPassword2Args{...}
//
//	or:
//
//	        nil
type TokenPasswordPassword2PtrInput interface {
	pulumi.Input

	ToTokenPasswordPassword2PtrOutput() TokenPasswordPassword2PtrOutput
	ToTokenPasswordPassword2PtrOutputWithContext(context.Context) TokenPasswordPassword2PtrOutput
}

type tokenPasswordPassword2PtrType TokenPasswordPassword2Args

func TokenPasswordPassword2Ptr(v *TokenPasswordPassword2Args) TokenPasswordPassword2PtrInput {
	return (*tokenPasswordPassword2PtrType)(v)
}

func (*tokenPasswordPassword2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TokenPasswordPassword2)(nil)).Elem()
}

func (i *tokenPasswordPassword2PtrType) ToTokenPasswordPassword2PtrOutput() TokenPasswordPassword2PtrOutput {
	return i.ToTokenPasswordPassword2PtrOutputWithContext(context.Background())
}

func (i *tokenPasswordPassword2PtrType) ToTokenPasswordPassword2PtrOutputWithContext(ctx context.Context) TokenPasswordPassword2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TokenPasswordPassword2PtrOutput)
}

type TokenPasswordPassword2Output struct{ *pulumi.OutputState }

func (TokenPasswordPassword2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*TokenPasswordPassword2)(nil)).Elem()
}

func (o TokenPasswordPassword2Output) ToTokenPasswordPassword2Output() TokenPasswordPassword2Output {
	return o
}

func (o TokenPasswordPassword2Output) ToTokenPasswordPassword2OutputWithContext(ctx context.Context) TokenPasswordPassword2Output {
	return o
}

func (o TokenPasswordPassword2Output) ToTokenPasswordPassword2PtrOutput() TokenPasswordPassword2PtrOutput {
	return o.ToTokenPasswordPassword2PtrOutputWithContext(context.Background())
}

func (o TokenPasswordPassword2Output) ToTokenPasswordPassword2PtrOutputWithContext(ctx context.Context) TokenPasswordPassword2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TokenPasswordPassword2) *TokenPasswordPassword2 {
		return &v
	}).(TokenPasswordPassword2PtrOutput)
}

// The expiration date of the password in RFC3339 format. Changing this forces a new resource to be created.
func (o TokenPasswordPassword2Output) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TokenPasswordPassword2) *string { return v.Expiry }).(pulumi.StringPtrOutput)
}

// The value of the password (Sensitive).
func (o TokenPasswordPassword2Output) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TokenPasswordPassword2) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TokenPasswordPassword2PtrOutput struct{ *pulumi.OutputState }

func (TokenPasswordPassword2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TokenPasswordPassword2)(nil)).Elem()
}

func (o TokenPasswordPassword2PtrOutput) ToTokenPasswordPassword2PtrOutput() TokenPasswordPassword2PtrOutput {
	return o
}

func (o TokenPasswordPassword2PtrOutput) ToTokenPasswordPassword2PtrOutputWithContext(ctx context.Context) TokenPasswordPassword2PtrOutput {
	return o
}

func (o TokenPasswordPassword2PtrOutput) Elem() TokenPasswordPassword2Output {
	return o.ApplyT(func(v *TokenPasswordPassword2) TokenPasswordPassword2 {
		if v != nil {
			return *v
		}
		var ret TokenPasswordPassword2
		return ret
	}).(TokenPasswordPassword2Output)
}

// The expiration date of the password in RFC3339 format. Changing this forces a new resource to be created.
func (o TokenPasswordPassword2PtrOutput) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TokenPasswordPassword2) *string {
		if v == nil {
			return nil
		}
		return v.Expiry
	}).(pulumi.StringPtrOutput)
}

// The value of the password (Sensitive).
func (o TokenPasswordPassword2PtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TokenPasswordPassword2) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type GetClusterNodePoolUpgradeSetting struct {
	// The maximum number or percentage of nodes which will be added to the Node Pool size during an upgrade.
	MaxSurge string `pulumi:"maxSurge"`
}

// GetClusterNodePoolUpgradeSettingInput is an input type that accepts GetClusterNodePoolUpgradeSettingArgs and GetClusterNodePoolUpgradeSettingOutput values.
// You can construct a concrete instance of `GetClusterNodePoolUpgradeSettingInput` via:
//
//	GetClusterNodePoolUpgradeSettingArgs{...}
type GetClusterNodePoolUpgradeSettingInput interface {
	pulumi.Input

	ToGetClusterNodePoolUpgradeSettingOutput() GetClusterNodePoolUpgradeSettingOutput
	ToGetClusterNodePoolUpgradeSettingOutputWithContext(context.Context) GetClusterNodePoolUpgradeSettingOutput
}

type GetClusterNodePoolUpgradeSettingArgs struct {
	// The maximum number or percentage of nodes which will be added to the Node Pool size during an upgrade.
	MaxSurge pulumi.StringInput `pulumi:"maxSurge"`
}

func (GetClusterNodePoolUpgradeSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolUpgradeSetting)(nil)).Elem()
}

func (i GetClusterNodePoolUpgradeSettingArgs) ToGetClusterNodePoolUpgradeSettingOutput() GetClusterNodePoolUpgradeSettingOutput {
	return i.ToGetClusterNodePoolUpgradeSettingOutputWithContext(context.Background())
}

func (i GetClusterNodePoolUpgradeSettingArgs) ToGetClusterNodePoolUpgradeSettingOutputWithContext(ctx context.Context) GetClusterNodePoolUpgradeSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolUpgradeSettingOutput)
}

// GetClusterNodePoolUpgradeSettingArrayInput is an input type that accepts GetClusterNodePoolUpgradeSettingArray and GetClusterNodePoolUpgradeSettingArrayOutput values.
// You can construct a concrete instance of `GetClusterNodePoolUpgradeSettingArrayInput` via:
//
//	GetClusterNodePoolUpgradeSettingArray{ GetClusterNodePoolUpgradeSettingArgs{...} }
type GetClusterNodePoolUpgradeSettingArrayInput interface {
	pulumi.Input

	ToGetClusterNodePoolUpgradeSettingArrayOutput() GetClusterNodePoolUpgradeSettingArrayOutput
	ToGetClusterNodePoolUpgradeSettingArrayOutputWithContext(context.Context) GetClusterNodePoolUpgradeSettingArrayOutput
}

type GetClusterNodePoolUpgradeSettingArray []GetClusterNodePoolUpgradeSettingInput

func (GetClusterNodePoolUpgradeSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolUpgradeSetting)(nil)).Elem()
}

func (i GetClusterNodePoolUpgradeSettingArray) ToGetClusterNodePoolUpgradeSettingArrayOutput() GetClusterNodePoolUpgradeSettingArrayOutput {
	return i.ToGetClusterNodePoolUpgradeSettingArrayOutputWithContext(context.Background())
}

func (i GetClusterNodePoolUpgradeSettingArray) ToGetClusterNodePoolUpgradeSettingArrayOutputWithContext(ctx context.Context) GetClusterNodePoolUpgradeSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterNodePoolUpgradeSettingArrayOutput)
}

type GetClusterNodePoolUpgradeSettingOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolUpgradeSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterNodePoolUpgradeSetting)(nil)).Elem()
}

func (o GetClusterNodePoolUpgradeSettingOutput) ToGetClusterNodePoolUpgradeSettingOutput() GetClusterNodePoolUpgradeSettingOutput {
	return o
}

func (o GetClusterNodePoolUpgradeSettingOutput) ToGetClusterNodePoolUpgradeSettingOutputWithContext(ctx context.Context) GetClusterNodePoolUpgradeSettingOutput {
	return o
}

// The maximum number or percentage of nodes which will be added to the Node Pool size during an upgrade.
func (o GetClusterNodePoolUpgradeSettingOutput) MaxSurge() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterNodePoolUpgradeSetting) string { return v.MaxSurge }).(pulumi.StringOutput)
}

type GetClusterNodePoolUpgradeSettingArrayOutput struct{ *pulumi.OutputState }

func (GetClusterNodePoolUpgradeSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterNodePoolUpgradeSetting)(nil)).Elem()
}

func (o GetClusterNodePoolUpgradeSettingArrayOutput) ToGetClusterNodePoolUpgradeSettingArrayOutput() GetClusterNodePoolUpgradeSettingArrayOutput {
	return o
}

func (o GetClusterNodePoolUpgradeSettingArrayOutput) ToGetClusterNodePoolUpgradeSettingArrayOutputWithContext(ctx context.Context) GetClusterNodePoolUpgradeSettingArrayOutput {
	return o
}

func (o GetClusterNodePoolUpgradeSettingArrayOutput) Index(i pulumi.IntInput) GetClusterNodePoolUpgradeSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterNodePoolUpgradeSetting {
		return vs[0].([]GetClusterNodePoolUpgradeSetting)[vs[1].(int)]
	}).(GetClusterNodePoolUpgradeSettingOutput)
}

type GetGroupIdentity struct {
	// The list of User Assigned Managed Identity IDs assigned to this Container Group.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID of the System Assigned Managed Service Identity that is configured on this Container Group.
	PrincipalId string `pulumi:"principalId"`
	// The Tenant ID of the System Assigned Managed Service Identity that is configured on this Container Group.
	TenantId string `pulumi:"tenantId"`
	// Type of Managed Service Identity configured on this Container Group.
	Type string `pulumi:"type"`
}

// GetGroupIdentityInput is an input type that accepts GetGroupIdentityArgs and GetGroupIdentityOutput values.
// You can construct a concrete instance of `GetGroupIdentityInput` via:
//
//	GetGroupIdentityArgs{...}
type GetGroupIdentityInput interface {
	pulumi.Input

	ToGetGroupIdentityOutput() GetGroupIdentityOutput
	ToGetGroupIdentityOutputWithContext(context.Context) GetGroupIdentityOutput
}

type GetGroupIdentityArgs struct {
	// The list of User Assigned Managed Identity IDs assigned to this Container Group.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID of the System Assigned Managed Service Identity that is configured on this Container Group.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The Tenant ID of the System Assigned Managed Service Identity that is configured on this Container Group.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// Type of Managed Service Identity configured on this Container Group.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetGroupIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupIdentity)(nil)).Elem()
}

func (i GetGroupIdentityArgs) ToGetGroupIdentityOutput() GetGroupIdentityOutput {
	return i.ToGetGroupIdentityOutputWithContext(context.Background())
}

func (i GetGroupIdentityArgs) ToGetGroupIdentityOutputWithContext(ctx context.Context) GetGroupIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupIdentityOutput)
}

// GetGroupIdentityArrayInput is an input type that accepts GetGroupIdentityArray and GetGroupIdentityArrayOutput values.
// You can construct a concrete instance of `GetGroupIdentityArrayInput` via:
//
//	GetGroupIdentityArray{ GetGroupIdentityArgs{...} }
type GetGroupIdentityArrayInput interface {
	pulumi.Input

	ToGetGroupIdentityArrayOutput() GetGroupIdentityArrayOutput
	ToGetGroupIdentityArrayOutputWithContext(context.Context) GetGroupIdentityArrayOutput
}

type GetGroupIdentityArray []GetGroupIdentityInput

func (GetGroupIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupIdentity)(nil)).Elem()
}

func (i GetGroupIdentityArray) ToGetGroupIdentityArrayOutput() GetGroupIdentityArrayOutput {
	return i.ToGetGroupIdentityArrayOutputWithContext(context.Background())
}

func (i GetGroupIdentityArray) ToGetGroupIdentityArrayOutputWithContext(ctx context.Context) GetGroupIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupIdentityArrayOutput)
}

type GetGroupIdentityOutput struct{ *pulumi.OutputState }

func (GetGroupIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupIdentity)(nil)).Elem()
}

func (o GetGroupIdentityOutput) ToGetGroupIdentityOutput() GetGroupIdentityOutput {
	return o
}

func (o GetGroupIdentityOutput) ToGetGroupIdentityOutputWithContext(ctx context.Context) GetGroupIdentityOutput {
	return o
}

// The list of User Assigned Managed Identity IDs assigned to this Container Group.
func (o GetGroupIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGroupIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID of the System Assigned Managed Service Identity that is configured on this Container Group.
func (o GetGroupIdentityOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupIdentity) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The Tenant ID of the System Assigned Managed Service Identity that is configured on this Container Group.
func (o GetGroupIdentityOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupIdentity) string { return v.TenantId }).(pulumi.StringOutput)
}

// Type of Managed Service Identity configured on this Container Group.
func (o GetGroupIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type GetGroupIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetGroupIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupIdentity)(nil)).Elem()
}

func (o GetGroupIdentityArrayOutput) ToGetGroupIdentityArrayOutput() GetGroupIdentityArrayOutput {
	return o
}

func (o GetGroupIdentityArrayOutput) ToGetGroupIdentityArrayOutputWithContext(ctx context.Context) GetGroupIdentityArrayOutput {
	return o
}

func (o GetGroupIdentityArrayOutput) Index(i pulumi.IntInput) GetGroupIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupIdentity {
		return vs[0].([]GetGroupIdentity)[vs[1].(int)]
	}).(GetGroupIdentityOutput)
}

type GetKubernetesClusterAciConnectorLinux struct {
	// The subnet name for the virtual nodes to run.
	SubnetName string `pulumi:"subnetName"`
}

// GetKubernetesClusterAciConnectorLinuxInput is an input type that accepts GetKubernetesClusterAciConnectorLinuxArgs and GetKubernetesClusterAciConnectorLinuxOutput values.
// You can construct a concrete instance of `GetKubernetesClusterAciConnectorLinuxInput` via:
//
//	GetKubernetesClusterAciConnectorLinuxArgs{...}
type GetKubernetesClusterAciConnectorLinuxInput interface {
	pulumi.Input

	ToGetKubernetesClusterAciConnectorLinuxOutput() GetKubernetesClusterAciConnectorLinuxOutput
	ToGetKubernetesClusterAciConnectorLinuxOutputWithContext(context.Context) GetKubernetesClusterAciConnectorLinuxOutput
}

type GetKubernetesClusterAciConnectorLinuxArgs struct {
	// The subnet name for the virtual nodes to run.
	SubnetName pulumi.StringInput `pulumi:"subnetName"`
}

func (GetKubernetesClusterAciConnectorLinuxArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterAciConnectorLinux)(nil)).Elem()
}

func (i GetKubernetesClusterAciConnectorLinuxArgs) ToGetKubernetesClusterAciConnectorLinuxOutput() GetKubernetesClusterAciConnectorLinuxOutput {
	return i.ToGetKubernetesClusterAciConnectorLinuxOutputWithContext(context.Background())
}

func (i GetKubernetesClusterAciConnectorLinuxArgs) ToGetKubernetesClusterAciConnectorLinuxOutputWithContext(ctx context.Context) GetKubernetesClusterAciConnectorLinuxOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterAciConnectorLinuxOutput)
}

// GetKubernetesClusterAciConnectorLinuxArrayInput is an input type that accepts GetKubernetesClusterAciConnectorLinuxArray and GetKubernetesClusterAciConnectorLinuxArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterAciConnectorLinuxArrayInput` via:
//
//	GetKubernetesClusterAciConnectorLinuxArray{ GetKubernetesClusterAciConnectorLinuxArgs{...} }
type GetKubernetesClusterAciConnectorLinuxArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterAciConnectorLinuxArrayOutput() GetKubernetesClusterAciConnectorLinuxArrayOutput
	ToGetKubernetesClusterAciConnectorLinuxArrayOutputWithContext(context.Context) GetKubernetesClusterAciConnectorLinuxArrayOutput
}

type GetKubernetesClusterAciConnectorLinuxArray []GetKubernetesClusterAciConnectorLinuxInput

func (GetKubernetesClusterAciConnectorLinuxArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterAciConnectorLinux)(nil)).Elem()
}

func (i GetKubernetesClusterAciConnectorLinuxArray) ToGetKubernetesClusterAciConnectorLinuxArrayOutput() GetKubernetesClusterAciConnectorLinuxArrayOutput {
	return i.ToGetKubernetesClusterAciConnectorLinuxArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterAciConnectorLinuxArray) ToGetKubernetesClusterAciConnectorLinuxArrayOutputWithContext(ctx context.Context) GetKubernetesClusterAciConnectorLinuxArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterAciConnectorLinuxArrayOutput)
}

type GetKubernetesClusterAciConnectorLinuxOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterAciConnectorLinuxOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterAciConnectorLinux)(nil)).Elem()
}

func (o GetKubernetesClusterAciConnectorLinuxOutput) ToGetKubernetesClusterAciConnectorLinuxOutput() GetKubernetesClusterAciConnectorLinuxOutput {
	return o
}

func (o GetKubernetesClusterAciConnectorLinuxOutput) ToGetKubernetesClusterAciConnectorLinuxOutputWithContext(ctx context.Context) GetKubernetesClusterAciConnectorLinuxOutput {
	return o
}

// The subnet name for the virtual nodes to run.
func (o GetKubernetesClusterAciConnectorLinuxOutput) SubnetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterAciConnectorLinux) string { return v.SubnetName }).(pulumi.StringOutput)
}

type GetKubernetesClusterAciConnectorLinuxArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterAciConnectorLinuxArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterAciConnectorLinux)(nil)).Elem()
}

func (o GetKubernetesClusterAciConnectorLinuxArrayOutput) ToGetKubernetesClusterAciConnectorLinuxArrayOutput() GetKubernetesClusterAciConnectorLinuxArrayOutput {
	return o
}

func (o GetKubernetesClusterAciConnectorLinuxArrayOutput) ToGetKubernetesClusterAciConnectorLinuxArrayOutputWithContext(ctx context.Context) GetKubernetesClusterAciConnectorLinuxArrayOutput {
	return o
}

func (o GetKubernetesClusterAciConnectorLinuxArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterAciConnectorLinuxOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterAciConnectorLinux {
		return vs[0].([]GetKubernetesClusterAciConnectorLinux)[vs[1].(int)]
	}).(GetKubernetesClusterAciConnectorLinuxOutput)
}

type GetKubernetesClusterAgentPoolProfile struct {
	// The number of Agents (VMs) in the Pool.
	Count int `pulumi:"count"`
	// If the auto-scaler is enabled.
	EnableAutoScaling bool `pulumi:"enableAutoScaling"`
	// If the Public IPs for the nodes in this Agent Pool are enabled.
	EnableNodePublicIp bool `pulumi:"enableNodePublicIp"`
	// Maximum number of nodes for auto-scaling
	MaxCount int `pulumi:"maxCount"`
	// The maximum number of pods that can run on each agent.
	MaxPods int `pulumi:"maxPods"`
	// Minimum number of nodes for auto-scaling
	MinCount int `pulumi:"minCount"`
	// The name of the managed Kubernetes Cluster.
	Name       string            `pulumi:"name"`
	NodeLabels map[string]string `pulumi:"nodeLabels"`
	// Resource ID for the Public IP Addresses Prefix for the nodes in this Agent Pool.
	NodePublicIpPrefixId string   `pulumi:"nodePublicIpPrefixId"`
	NodeTaints           []string `pulumi:"nodeTaints"`
	// Kubernetes version used for the Agents.
	OrchestratorVersion string `pulumi:"orchestratorVersion"`
	// The size of the Agent VM's Operating System Disk in GB.
	OsDiskSizeGb int `pulumi:"osDiskSizeGb"`
	// The Operating System used for the Agents.
	OsType string `pulumi:"osType"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of Managed Service Identity that is configured on this Kubernetes Cluster.
	Type string `pulumi:"type"`
	// A `upgradeSettings` block as documented below.
	UpgradeSettings []GetKubernetesClusterAgentPoolProfileUpgradeSetting `pulumi:"upgradeSettings"`
	// The size of each VM in the Agent Pool (e.g. `Standard_F1`).
	VmSize string `pulumi:"vmSize"`
	// The ID of the Subnet where the Agents in the Pool are provisioned.
	VnetSubnetId string `pulumi:"vnetSubnetId"`
	// A list of Availability Zones in which this Kubernetes Cluster is located.
	Zones []string `pulumi:"zones"`
}

// GetKubernetesClusterAgentPoolProfileInput is an input type that accepts GetKubernetesClusterAgentPoolProfileArgs and GetKubernetesClusterAgentPoolProfileOutput values.
// You can construct a concrete instance of `GetKubernetesClusterAgentPoolProfileInput` via:
//
//	GetKubernetesClusterAgentPoolProfileArgs{...}
type GetKubernetesClusterAgentPoolProfileInput interface {
	pulumi.Input

	ToGetKubernetesClusterAgentPoolProfileOutput() GetKubernetesClusterAgentPoolProfileOutput
	ToGetKubernetesClusterAgentPoolProfileOutputWithContext(context.Context) GetKubernetesClusterAgentPoolProfileOutput
}

type GetKubernetesClusterAgentPoolProfileArgs struct {
	// The number of Agents (VMs) in the Pool.
	Count pulumi.IntInput `pulumi:"count"`
	// If the auto-scaler is enabled.
	EnableAutoScaling pulumi.BoolInput `pulumi:"enableAutoScaling"`
	// If the Public IPs for the nodes in this Agent Pool are enabled.
	EnableNodePublicIp pulumi.BoolInput `pulumi:"enableNodePublicIp"`
	// Maximum number of nodes for auto-scaling
	MaxCount pulumi.IntInput `pulumi:"maxCount"`
	// The maximum number of pods that can run on each agent.
	MaxPods pulumi.IntInput `pulumi:"maxPods"`
	// Minimum number of nodes for auto-scaling
	MinCount pulumi.IntInput `pulumi:"minCount"`
	// The name of the managed Kubernetes Cluster.
	Name       pulumi.StringInput    `pulumi:"name"`
	NodeLabels pulumi.StringMapInput `pulumi:"nodeLabels"`
	// Resource ID for the Public IP Addresses Prefix for the nodes in this Agent Pool.
	NodePublicIpPrefixId pulumi.StringInput      `pulumi:"nodePublicIpPrefixId"`
	NodeTaints           pulumi.StringArrayInput `pulumi:"nodeTaints"`
	// Kubernetes version used for the Agents.
	OrchestratorVersion pulumi.StringInput `pulumi:"orchestratorVersion"`
	// The size of the Agent VM's Operating System Disk in GB.
	OsDiskSizeGb pulumi.IntInput `pulumi:"osDiskSizeGb"`
	// The Operating System used for the Agents.
	OsType pulumi.StringInput `pulumi:"osType"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The type of Managed Service Identity that is configured on this Kubernetes Cluster.
	Type pulumi.StringInput `pulumi:"type"`
	// A `upgradeSettings` block as documented below.
	UpgradeSettings GetKubernetesClusterAgentPoolProfileUpgradeSettingArrayInput `pulumi:"upgradeSettings"`
	// The size of each VM in the Agent Pool (e.g. `Standard_F1`).
	VmSize pulumi.StringInput `pulumi:"vmSize"`
	// The ID of the Subnet where the Agents in the Pool are provisioned.
	VnetSubnetId pulumi.StringInput `pulumi:"vnetSubnetId"`
	// A list of Availability Zones in which this Kubernetes Cluster is located.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (GetKubernetesClusterAgentPoolProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterAgentPoolProfile)(nil)).Elem()
}

func (i GetKubernetesClusterAgentPoolProfileArgs) ToGetKubernetesClusterAgentPoolProfileOutput() GetKubernetesClusterAgentPoolProfileOutput {
	return i.ToGetKubernetesClusterAgentPoolProfileOutputWithContext(context.Background())
}

func (i GetKubernetesClusterAgentPoolProfileArgs) ToGetKubernetesClusterAgentPoolProfileOutputWithContext(ctx context.Context) GetKubernetesClusterAgentPoolProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterAgentPoolProfileOutput)
}

// GetKubernetesClusterAgentPoolProfileArrayInput is an input type that accepts GetKubernetesClusterAgentPoolProfileArray and GetKubernetesClusterAgentPoolProfileArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterAgentPoolProfileArrayInput` via:
//
//	GetKubernetesClusterAgentPoolProfileArray{ GetKubernetesClusterAgentPoolProfileArgs{...} }
type GetKubernetesClusterAgentPoolProfileArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterAgentPoolProfileArrayOutput() GetKubernetesClusterAgentPoolProfileArrayOutput
	ToGetKubernetesClusterAgentPoolProfileArrayOutputWithContext(context.Context) GetKubernetesClusterAgentPoolProfileArrayOutput
}

type GetKubernetesClusterAgentPoolProfileArray []GetKubernetesClusterAgentPoolProfileInput

func (GetKubernetesClusterAgentPoolProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterAgentPoolProfile)(nil)).Elem()
}

func (i GetKubernetesClusterAgentPoolProfileArray) ToGetKubernetesClusterAgentPoolProfileArrayOutput() GetKubernetesClusterAgentPoolProfileArrayOutput {
	return i.ToGetKubernetesClusterAgentPoolProfileArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterAgentPoolProfileArray) ToGetKubernetesClusterAgentPoolProfileArrayOutputWithContext(ctx context.Context) GetKubernetesClusterAgentPoolProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterAgentPoolProfileArrayOutput)
}

type GetKubernetesClusterAgentPoolProfileOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterAgentPoolProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterAgentPoolProfile)(nil)).Elem()
}

func (o GetKubernetesClusterAgentPoolProfileOutput) ToGetKubernetesClusterAgentPoolProfileOutput() GetKubernetesClusterAgentPoolProfileOutput {
	return o
}

func (o GetKubernetesClusterAgentPoolProfileOutput) ToGetKubernetesClusterAgentPoolProfileOutputWithContext(ctx context.Context) GetKubernetesClusterAgentPoolProfileOutput {
	return o
}

// The number of Agents (VMs) in the Pool.
func (o GetKubernetesClusterAgentPoolProfileOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) int { return v.Count }).(pulumi.IntOutput)
}

// If the auto-scaler is enabled.
func (o GetKubernetesClusterAgentPoolProfileOutput) EnableAutoScaling() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) bool { return v.EnableAutoScaling }).(pulumi.BoolOutput)
}

// If the Public IPs for the nodes in this Agent Pool are enabled.
func (o GetKubernetesClusterAgentPoolProfileOutput) EnableNodePublicIp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) bool { return v.EnableNodePublicIp }).(pulumi.BoolOutput)
}

// Maximum number of nodes for auto-scaling
func (o GetKubernetesClusterAgentPoolProfileOutput) MaxCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) int { return v.MaxCount }).(pulumi.IntOutput)
}

// The maximum number of pods that can run on each agent.
func (o GetKubernetesClusterAgentPoolProfileOutput) MaxPods() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) int { return v.MaxPods }).(pulumi.IntOutput)
}

// Minimum number of nodes for auto-scaling
func (o GetKubernetesClusterAgentPoolProfileOutput) MinCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) int { return v.MinCount }).(pulumi.IntOutput)
}

// The name of the managed Kubernetes Cluster.
func (o GetKubernetesClusterAgentPoolProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetKubernetesClusterAgentPoolProfileOutput) NodeLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) map[string]string { return v.NodeLabels }).(pulumi.StringMapOutput)
}

// Resource ID for the Public IP Addresses Prefix for the nodes in this Agent Pool.
func (o GetKubernetesClusterAgentPoolProfileOutput) NodePublicIpPrefixId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) string { return v.NodePublicIpPrefixId }).(pulumi.StringOutput)
}

func (o GetKubernetesClusterAgentPoolProfileOutput) NodeTaints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) []string { return v.NodeTaints }).(pulumi.StringArrayOutput)
}

// Kubernetes version used for the Agents.
func (o GetKubernetesClusterAgentPoolProfileOutput) OrchestratorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) string { return v.OrchestratorVersion }).(pulumi.StringOutput)
}

// The size of the Agent VM's Operating System Disk in GB.
func (o GetKubernetesClusterAgentPoolProfileOutput) OsDiskSizeGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) int { return v.OsDiskSizeGb }).(pulumi.IntOutput)
}

// The Operating System used for the Agents.
func (o GetKubernetesClusterAgentPoolProfileOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) string { return v.OsType }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
func (o GetKubernetesClusterAgentPoolProfileOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of Managed Service Identity that is configured on this Kubernetes Cluster.
func (o GetKubernetesClusterAgentPoolProfileOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) string { return v.Type }).(pulumi.StringOutput)
}

// A `upgradeSettings` block as documented below.
func (o GetKubernetesClusterAgentPoolProfileOutput) UpgradeSettings() GetKubernetesClusterAgentPoolProfileUpgradeSettingArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) []GetKubernetesClusterAgentPoolProfileUpgradeSetting {
		return v.UpgradeSettings
	}).(GetKubernetesClusterAgentPoolProfileUpgradeSettingArrayOutput)
}

// The size of each VM in the Agent Pool (e.g. `Standard_F1`).
func (o GetKubernetesClusterAgentPoolProfileOutput) VmSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) string { return v.VmSize }).(pulumi.StringOutput)
}

// The ID of the Subnet where the Agents in the Pool are provisioned.
func (o GetKubernetesClusterAgentPoolProfileOutput) VnetSubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) string { return v.VnetSubnetId }).(pulumi.StringOutput)
}

// A list of Availability Zones in which this Kubernetes Cluster is located.
func (o GetKubernetesClusterAgentPoolProfileOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type GetKubernetesClusterAgentPoolProfileArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterAgentPoolProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterAgentPoolProfile)(nil)).Elem()
}

func (o GetKubernetesClusterAgentPoolProfileArrayOutput) ToGetKubernetesClusterAgentPoolProfileArrayOutput() GetKubernetesClusterAgentPoolProfileArrayOutput {
	return o
}

func (o GetKubernetesClusterAgentPoolProfileArrayOutput) ToGetKubernetesClusterAgentPoolProfileArrayOutputWithContext(ctx context.Context) GetKubernetesClusterAgentPoolProfileArrayOutput {
	return o
}

func (o GetKubernetesClusterAgentPoolProfileArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterAgentPoolProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterAgentPoolProfile {
		return vs[0].([]GetKubernetesClusterAgentPoolProfile)[vs[1].(int)]
	}).(GetKubernetesClusterAgentPoolProfileOutput)
}

type GetKubernetesClusterAgentPoolProfileUpgradeSetting struct {
	// The maximum number or percentage of nodes that will be added to the Node Pool size during an upgrade.
	MaxSurge string `pulumi:"maxSurge"`
}

// GetKubernetesClusterAgentPoolProfileUpgradeSettingInput is an input type that accepts GetKubernetesClusterAgentPoolProfileUpgradeSettingArgs and GetKubernetesClusterAgentPoolProfileUpgradeSettingOutput values.
// You can construct a concrete instance of `GetKubernetesClusterAgentPoolProfileUpgradeSettingInput` via:
//
//	GetKubernetesClusterAgentPoolProfileUpgradeSettingArgs{...}
type GetKubernetesClusterAgentPoolProfileUpgradeSettingInput interface {
	pulumi.Input

	ToGetKubernetesClusterAgentPoolProfileUpgradeSettingOutput() GetKubernetesClusterAgentPoolProfileUpgradeSettingOutput
	ToGetKubernetesClusterAgentPoolProfileUpgradeSettingOutputWithContext(context.Context) GetKubernetesClusterAgentPoolProfileUpgradeSettingOutput
}

type GetKubernetesClusterAgentPoolProfileUpgradeSettingArgs struct {
	// The maximum number or percentage of nodes that will be added to the Node Pool size during an upgrade.
	MaxSurge pulumi.StringInput `pulumi:"maxSurge"`
}

func (GetKubernetesClusterAgentPoolProfileUpgradeSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterAgentPoolProfileUpgradeSetting)(nil)).Elem()
}

func (i GetKubernetesClusterAgentPoolProfileUpgradeSettingArgs) ToGetKubernetesClusterAgentPoolProfileUpgradeSettingOutput() GetKubernetesClusterAgentPoolProfileUpgradeSettingOutput {
	return i.ToGetKubernetesClusterAgentPoolProfileUpgradeSettingOutputWithContext(context.Background())
}

func (i GetKubernetesClusterAgentPoolProfileUpgradeSettingArgs) ToGetKubernetesClusterAgentPoolProfileUpgradeSettingOutputWithContext(ctx context.Context) GetKubernetesClusterAgentPoolProfileUpgradeSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterAgentPoolProfileUpgradeSettingOutput)
}

// GetKubernetesClusterAgentPoolProfileUpgradeSettingArrayInput is an input type that accepts GetKubernetesClusterAgentPoolProfileUpgradeSettingArray and GetKubernetesClusterAgentPoolProfileUpgradeSettingArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterAgentPoolProfileUpgradeSettingArrayInput` via:
//
//	GetKubernetesClusterAgentPoolProfileUpgradeSettingArray{ GetKubernetesClusterAgentPoolProfileUpgradeSettingArgs{...} }
type GetKubernetesClusterAgentPoolProfileUpgradeSettingArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterAgentPoolProfileUpgradeSettingArrayOutput() GetKubernetesClusterAgentPoolProfileUpgradeSettingArrayOutput
	ToGetKubernetesClusterAgentPoolProfileUpgradeSettingArrayOutputWithContext(context.Context) GetKubernetesClusterAgentPoolProfileUpgradeSettingArrayOutput
}

type GetKubernetesClusterAgentPoolProfileUpgradeSettingArray []GetKubernetesClusterAgentPoolProfileUpgradeSettingInput

func (GetKubernetesClusterAgentPoolProfileUpgradeSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterAgentPoolProfileUpgradeSetting)(nil)).Elem()
}

func (i GetKubernetesClusterAgentPoolProfileUpgradeSettingArray) ToGetKubernetesClusterAgentPoolProfileUpgradeSettingArrayOutput() GetKubernetesClusterAgentPoolProfileUpgradeSettingArrayOutput {
	return i.ToGetKubernetesClusterAgentPoolProfileUpgradeSettingArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterAgentPoolProfileUpgradeSettingArray) ToGetKubernetesClusterAgentPoolProfileUpgradeSettingArrayOutputWithContext(ctx context.Context) GetKubernetesClusterAgentPoolProfileUpgradeSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterAgentPoolProfileUpgradeSettingArrayOutput)
}

type GetKubernetesClusterAgentPoolProfileUpgradeSettingOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterAgentPoolProfileUpgradeSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterAgentPoolProfileUpgradeSetting)(nil)).Elem()
}

func (o GetKubernetesClusterAgentPoolProfileUpgradeSettingOutput) ToGetKubernetesClusterAgentPoolProfileUpgradeSettingOutput() GetKubernetesClusterAgentPoolProfileUpgradeSettingOutput {
	return o
}

func (o GetKubernetesClusterAgentPoolProfileUpgradeSettingOutput) ToGetKubernetesClusterAgentPoolProfileUpgradeSettingOutputWithContext(ctx context.Context) GetKubernetesClusterAgentPoolProfileUpgradeSettingOutput {
	return o
}

// The maximum number or percentage of nodes that will be added to the Node Pool size during an upgrade.
func (o GetKubernetesClusterAgentPoolProfileUpgradeSettingOutput) MaxSurge() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfileUpgradeSetting) string { return v.MaxSurge }).(pulumi.StringOutput)
}

type GetKubernetesClusterAgentPoolProfileUpgradeSettingArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterAgentPoolProfileUpgradeSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterAgentPoolProfileUpgradeSetting)(nil)).Elem()
}

func (o GetKubernetesClusterAgentPoolProfileUpgradeSettingArrayOutput) ToGetKubernetesClusterAgentPoolProfileUpgradeSettingArrayOutput() GetKubernetesClusterAgentPoolProfileUpgradeSettingArrayOutput {
	return o
}

func (o GetKubernetesClusterAgentPoolProfileUpgradeSettingArrayOutput) ToGetKubernetesClusterAgentPoolProfileUpgradeSettingArrayOutputWithContext(ctx context.Context) GetKubernetesClusterAgentPoolProfileUpgradeSettingArrayOutput {
	return o
}

func (o GetKubernetesClusterAgentPoolProfileUpgradeSettingArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterAgentPoolProfileUpgradeSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterAgentPoolProfileUpgradeSetting {
		return vs[0].([]GetKubernetesClusterAgentPoolProfileUpgradeSetting)[vs[1].(int)]
	}).(GetKubernetesClusterAgentPoolProfileUpgradeSettingOutput)
}

type GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControl struct {
	// A list of Object IDs of Azure Active Directory Groups which should have Admin Role on the Cluster.
	AdminGroupObjectIds []string `pulumi:"adminGroupObjectIds"`
	// Is Role Based Access Control based on Azure AD enabled?
	AzureRbacEnabled bool `pulumi:"azureRbacEnabled"`
	// The Client ID of an Azure Active Directory Application.
	ClientAppId string `pulumi:"clientAppId"`
	// Is the Azure Active Directory integration Managed, meaning that Azure will create/manage the Service Principal used for integration?
	Managed bool `pulumi:"managed"`
	// The Server ID of an Azure Active Directory Application.
	ServerAppId string `pulumi:"serverAppId"`
	// The Tenant ID of the System Assigned Managed Service Identity that is configured on this Kubernetes Cluster.
	TenantId string `pulumi:"tenantId"`
}

// GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlInput is an input type that accepts GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArgs and GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput values.
// You can construct a concrete instance of `GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlInput` via:
//
//	GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArgs{...}
type GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlInput interface {
	pulumi.Input

	ToGetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput() GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput
	ToGetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutputWithContext(context.Context) GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput
}

type GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArgs struct {
	// A list of Object IDs of Azure Active Directory Groups which should have Admin Role on the Cluster.
	AdminGroupObjectIds pulumi.StringArrayInput `pulumi:"adminGroupObjectIds"`
	// Is Role Based Access Control based on Azure AD enabled?
	AzureRbacEnabled pulumi.BoolInput `pulumi:"azureRbacEnabled"`
	// The Client ID of an Azure Active Directory Application.
	ClientAppId pulumi.StringInput `pulumi:"clientAppId"`
	// Is the Azure Active Directory integration Managed, meaning that Azure will create/manage the Service Principal used for integration?
	Managed pulumi.BoolInput `pulumi:"managed"`
	// The Server ID of an Azure Active Directory Application.
	ServerAppId pulumi.StringInput `pulumi:"serverAppId"`
	// The Tenant ID of the System Assigned Managed Service Identity that is configured on this Kubernetes Cluster.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControl)(nil)).Elem()
}

func (i GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArgs) ToGetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput() GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput {
	return i.ToGetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutputWithContext(context.Background())
}

func (i GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArgs) ToGetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutputWithContext(ctx context.Context) GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput)
}

// GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArrayInput is an input type that accepts GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArray and GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArrayInput` via:
//
//	GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArray{ GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArgs{...} }
type GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArrayOutput() GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArrayOutput
	ToGetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArrayOutputWithContext(context.Context) GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArrayOutput
}

type GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArray []GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlInput

func (GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControl)(nil)).Elem()
}

func (i GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArray) ToGetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArrayOutput() GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArrayOutput {
	return i.ToGetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArray) ToGetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArrayOutputWithContext(ctx context.Context) GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArrayOutput)
}

type GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControl)(nil)).Elem()
}

func (o GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput) ToGetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput() GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput {
	return o
}

func (o GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput) ToGetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutputWithContext(ctx context.Context) GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput {
	return o
}

// A list of Object IDs of Azure Active Directory Groups which should have Admin Role on the Cluster.
func (o GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput) AdminGroupObjectIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControl) []string {
		return v.AdminGroupObjectIds
	}).(pulumi.StringArrayOutput)
}

// Is Role Based Access Control based on Azure AD enabled?
func (o GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput) AzureRbacEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControl) bool { return v.AzureRbacEnabled }).(pulumi.BoolOutput)
}

// The Client ID of an Azure Active Directory Application.
func (o GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput) ClientAppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControl) string { return v.ClientAppId }).(pulumi.StringOutput)
}

// Is the Azure Active Directory integration Managed, meaning that Azure will create/manage the Service Principal used for integration?
func (o GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput) Managed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControl) bool { return v.Managed }).(pulumi.BoolOutput)
}

// The Server ID of an Azure Active Directory Application.
func (o GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput) ServerAppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControl) string { return v.ServerAppId }).(pulumi.StringOutput)
}

// The Tenant ID of the System Assigned Managed Service Identity that is configured on this Kubernetes Cluster.
func (o GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControl) string { return v.TenantId }).(pulumi.StringOutput)
}

type GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControl)(nil)).Elem()
}

func (o GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArrayOutput) ToGetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArrayOutput() GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArrayOutput {
	return o
}

func (o GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArrayOutput) ToGetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArrayOutputWithContext(ctx context.Context) GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArrayOutput {
	return o
}

func (o GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControl {
		return vs[0].([]GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControl)[vs[1].(int)]
	}).(GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput)
}

type GetKubernetesClusterIdentity struct {
	// The list of User Assigned Managed Identity IDs assigned to this Kubernetes Cluster.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID of the System Assigned Managed Service Identity that is configured on this Kubernetes Cluster.
	PrincipalId string `pulumi:"principalId"`
	// The Tenant ID of the System Assigned Managed Service Identity that is configured on this Kubernetes Cluster.
	TenantId string `pulumi:"tenantId"`
	// The type of Managed Service Identity that is configured on this Kubernetes Cluster.
	Type string `pulumi:"type"`
}

// GetKubernetesClusterIdentityInput is an input type that accepts GetKubernetesClusterIdentityArgs and GetKubernetesClusterIdentityOutput values.
// You can construct a concrete instance of `GetKubernetesClusterIdentityInput` via:
//
//	GetKubernetesClusterIdentityArgs{...}
type GetKubernetesClusterIdentityInput interface {
	pulumi.Input

	ToGetKubernetesClusterIdentityOutput() GetKubernetesClusterIdentityOutput
	ToGetKubernetesClusterIdentityOutputWithContext(context.Context) GetKubernetesClusterIdentityOutput
}

type GetKubernetesClusterIdentityArgs struct {
	// The list of User Assigned Managed Identity IDs assigned to this Kubernetes Cluster.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID of the System Assigned Managed Service Identity that is configured on this Kubernetes Cluster.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The Tenant ID of the System Assigned Managed Service Identity that is configured on this Kubernetes Cluster.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The type of Managed Service Identity that is configured on this Kubernetes Cluster.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetKubernetesClusterIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterIdentity)(nil)).Elem()
}

func (i GetKubernetesClusterIdentityArgs) ToGetKubernetesClusterIdentityOutput() GetKubernetesClusterIdentityOutput {
	return i.ToGetKubernetesClusterIdentityOutputWithContext(context.Background())
}

func (i GetKubernetesClusterIdentityArgs) ToGetKubernetesClusterIdentityOutputWithContext(ctx context.Context) GetKubernetesClusterIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterIdentityOutput)
}

// GetKubernetesClusterIdentityArrayInput is an input type that accepts GetKubernetesClusterIdentityArray and GetKubernetesClusterIdentityArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterIdentityArrayInput` via:
//
//	GetKubernetesClusterIdentityArray{ GetKubernetesClusterIdentityArgs{...} }
type GetKubernetesClusterIdentityArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterIdentityArrayOutput() GetKubernetesClusterIdentityArrayOutput
	ToGetKubernetesClusterIdentityArrayOutputWithContext(context.Context) GetKubernetesClusterIdentityArrayOutput
}

type GetKubernetesClusterIdentityArray []GetKubernetesClusterIdentityInput

func (GetKubernetesClusterIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterIdentity)(nil)).Elem()
}

func (i GetKubernetesClusterIdentityArray) ToGetKubernetesClusterIdentityArrayOutput() GetKubernetesClusterIdentityArrayOutput {
	return i.ToGetKubernetesClusterIdentityArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterIdentityArray) ToGetKubernetesClusterIdentityArrayOutputWithContext(ctx context.Context) GetKubernetesClusterIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterIdentityArrayOutput)
}

type GetKubernetesClusterIdentityOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterIdentity)(nil)).Elem()
}

func (o GetKubernetesClusterIdentityOutput) ToGetKubernetesClusterIdentityOutput() GetKubernetesClusterIdentityOutput {
	return o
}

func (o GetKubernetesClusterIdentityOutput) ToGetKubernetesClusterIdentityOutputWithContext(ctx context.Context) GetKubernetesClusterIdentityOutput {
	return o
}

// The list of User Assigned Managed Identity IDs assigned to this Kubernetes Cluster.
func (o GetKubernetesClusterIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID of the System Assigned Managed Service Identity that is configured on this Kubernetes Cluster.
func (o GetKubernetesClusterIdentityOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterIdentity) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The Tenant ID of the System Assigned Managed Service Identity that is configured on this Kubernetes Cluster.
func (o GetKubernetesClusterIdentityOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterIdentity) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of Managed Service Identity that is configured on this Kubernetes Cluster.
func (o GetKubernetesClusterIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type GetKubernetesClusterIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterIdentity)(nil)).Elem()
}

func (o GetKubernetesClusterIdentityArrayOutput) ToGetKubernetesClusterIdentityArrayOutput() GetKubernetesClusterIdentityArrayOutput {
	return o
}

func (o GetKubernetesClusterIdentityArrayOutput) ToGetKubernetesClusterIdentityArrayOutputWithContext(ctx context.Context) GetKubernetesClusterIdentityArrayOutput {
	return o
}

func (o GetKubernetesClusterIdentityArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterIdentity {
		return vs[0].([]GetKubernetesClusterIdentity)[vs[1].(int)]
	}).(GetKubernetesClusterIdentityOutput)
}

type GetKubernetesClusterIngressApplicationGateway struct {
	// The ID of the Application Gateway associated with the ingress controller deployed to this Kubernetes Cluster.
	EffectiveGatewayId string `pulumi:"effectiveGatewayId"`
	// The ID of the Application Gateway integrated with the ingress controller of this Kubernetes Cluster. This attribute is only set when gatewayId is specified when configuring the `ingressApplicationGateway` addon.
	GatewayId   string `pulumi:"gatewayId"`
	GatewayName string `pulumi:"gatewayName"`
	// An `ingressApplicationGatewayIdentity` block as defined below.
	IngressApplicationGatewayIdentities []GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity `pulumi:"ingressApplicationGatewayIdentities"`
	// The subnet CIDR used to create an Application Gateway, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. This attribute is only set when `subnetCidr` is specified when configuring the `ingressApplicationGateway` addon.
	SubnetCidr string `pulumi:"subnetCidr"`
	// The ID of the subnet on which to create an Application Gateway, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. This attribute is only set when `subnetId` is specified when configuring the `ingressApplicationGateway` addon.
	SubnetId string `pulumi:"subnetId"`
}

// GetKubernetesClusterIngressApplicationGatewayInput is an input type that accepts GetKubernetesClusterIngressApplicationGatewayArgs and GetKubernetesClusterIngressApplicationGatewayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterIngressApplicationGatewayInput` via:
//
//	GetKubernetesClusterIngressApplicationGatewayArgs{...}
type GetKubernetesClusterIngressApplicationGatewayInput interface {
	pulumi.Input

	ToGetKubernetesClusterIngressApplicationGatewayOutput() GetKubernetesClusterIngressApplicationGatewayOutput
	ToGetKubernetesClusterIngressApplicationGatewayOutputWithContext(context.Context) GetKubernetesClusterIngressApplicationGatewayOutput
}

type GetKubernetesClusterIngressApplicationGatewayArgs struct {
	// The ID of the Application Gateway associated with the ingress controller deployed to this Kubernetes Cluster.
	EffectiveGatewayId pulumi.StringInput `pulumi:"effectiveGatewayId"`
	// The ID of the Application Gateway integrated with the ingress controller of this Kubernetes Cluster. This attribute is only set when gatewayId is specified when configuring the `ingressApplicationGateway` addon.
	GatewayId   pulumi.StringInput `pulumi:"gatewayId"`
	GatewayName pulumi.StringInput `pulumi:"gatewayName"`
	// An `ingressApplicationGatewayIdentity` block as defined below.
	IngressApplicationGatewayIdentities GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayInput `pulumi:"ingressApplicationGatewayIdentities"`
	// The subnet CIDR used to create an Application Gateway, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. This attribute is only set when `subnetCidr` is specified when configuring the `ingressApplicationGateway` addon.
	SubnetCidr pulumi.StringInput `pulumi:"subnetCidr"`
	// The ID of the subnet on which to create an Application Gateway, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. This attribute is only set when `subnetId` is specified when configuring the `ingressApplicationGateway` addon.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetKubernetesClusterIngressApplicationGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterIngressApplicationGateway)(nil)).Elem()
}

func (i GetKubernetesClusterIngressApplicationGatewayArgs) ToGetKubernetesClusterIngressApplicationGatewayOutput() GetKubernetesClusterIngressApplicationGatewayOutput {
	return i.ToGetKubernetesClusterIngressApplicationGatewayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterIngressApplicationGatewayArgs) ToGetKubernetesClusterIngressApplicationGatewayOutputWithContext(ctx context.Context) GetKubernetesClusterIngressApplicationGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterIngressApplicationGatewayOutput)
}

// GetKubernetesClusterIngressApplicationGatewayArrayInput is an input type that accepts GetKubernetesClusterIngressApplicationGatewayArray and GetKubernetesClusterIngressApplicationGatewayArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterIngressApplicationGatewayArrayInput` via:
//
//	GetKubernetesClusterIngressApplicationGatewayArray{ GetKubernetesClusterIngressApplicationGatewayArgs{...} }
type GetKubernetesClusterIngressApplicationGatewayArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterIngressApplicationGatewayArrayOutput() GetKubernetesClusterIngressApplicationGatewayArrayOutput
	ToGetKubernetesClusterIngressApplicationGatewayArrayOutputWithContext(context.Context) GetKubernetesClusterIngressApplicationGatewayArrayOutput
}

type GetKubernetesClusterIngressApplicationGatewayArray []GetKubernetesClusterIngressApplicationGatewayInput

func (GetKubernetesClusterIngressApplicationGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterIngressApplicationGateway)(nil)).Elem()
}

func (i GetKubernetesClusterIngressApplicationGatewayArray) ToGetKubernetesClusterIngressApplicationGatewayArrayOutput() GetKubernetesClusterIngressApplicationGatewayArrayOutput {
	return i.ToGetKubernetesClusterIngressApplicationGatewayArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterIngressApplicationGatewayArray) ToGetKubernetesClusterIngressApplicationGatewayArrayOutputWithContext(ctx context.Context) GetKubernetesClusterIngressApplicationGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterIngressApplicationGatewayArrayOutput)
}

type GetKubernetesClusterIngressApplicationGatewayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterIngressApplicationGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterIngressApplicationGateway)(nil)).Elem()
}

func (o GetKubernetesClusterIngressApplicationGatewayOutput) ToGetKubernetesClusterIngressApplicationGatewayOutput() GetKubernetesClusterIngressApplicationGatewayOutput {
	return o
}

func (o GetKubernetesClusterIngressApplicationGatewayOutput) ToGetKubernetesClusterIngressApplicationGatewayOutputWithContext(ctx context.Context) GetKubernetesClusterIngressApplicationGatewayOutput {
	return o
}

// The ID of the Application Gateway associated with the ingress controller deployed to this Kubernetes Cluster.
func (o GetKubernetesClusterIngressApplicationGatewayOutput) EffectiveGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterIngressApplicationGateway) string { return v.EffectiveGatewayId }).(pulumi.StringOutput)
}

// The ID of the Application Gateway integrated with the ingress controller of this Kubernetes Cluster. This attribute is only set when gatewayId is specified when configuring the `ingressApplicationGateway` addon.
func (o GetKubernetesClusterIngressApplicationGatewayOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterIngressApplicationGateway) string { return v.GatewayId }).(pulumi.StringOutput)
}

func (o GetKubernetesClusterIngressApplicationGatewayOutput) GatewayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterIngressApplicationGateway) string { return v.GatewayName }).(pulumi.StringOutput)
}

// An `ingressApplicationGatewayIdentity` block as defined below.
func (o GetKubernetesClusterIngressApplicationGatewayOutput) IngressApplicationGatewayIdentities() GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterIngressApplicationGateway) []GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity {
		return v.IngressApplicationGatewayIdentities
	}).(GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput)
}

// The subnet CIDR used to create an Application Gateway, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. This attribute is only set when `subnetCidr` is specified when configuring the `ingressApplicationGateway` addon.
func (o GetKubernetesClusterIngressApplicationGatewayOutput) SubnetCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterIngressApplicationGateway) string { return v.SubnetCidr }).(pulumi.StringOutput)
}

// The ID of the subnet on which to create an Application Gateway, which in turn will be integrated with the ingress controller of this Kubernetes Cluster. This attribute is only set when `subnetId` is specified when configuring the `ingressApplicationGateway` addon.
func (o GetKubernetesClusterIngressApplicationGatewayOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterIngressApplicationGateway) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetKubernetesClusterIngressApplicationGatewayArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterIngressApplicationGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterIngressApplicationGateway)(nil)).Elem()
}

func (o GetKubernetesClusterIngressApplicationGatewayArrayOutput) ToGetKubernetesClusterIngressApplicationGatewayArrayOutput() GetKubernetesClusterIngressApplicationGatewayArrayOutput {
	return o
}

func (o GetKubernetesClusterIngressApplicationGatewayArrayOutput) ToGetKubernetesClusterIngressApplicationGatewayArrayOutputWithContext(ctx context.Context) GetKubernetesClusterIngressApplicationGatewayArrayOutput {
	return o
}

func (o GetKubernetesClusterIngressApplicationGatewayArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterIngressApplicationGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterIngressApplicationGateway {
		return vs[0].([]GetKubernetesClusterIngressApplicationGateway)[vs[1].(int)]
	}).(GetKubernetesClusterIngressApplicationGatewayOutput)
}

type GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity struct {
	// The Client ID of the user-defined Managed Identity assigned to the Kubelets.
	ClientId string `pulumi:"clientId"`
	// The Object ID of the user-defined Managed Identity assigned to the Kubelets.
	ObjectId string `pulumi:"objectId"`
	// The ID of the User Assigned Identity assigned to the Kubelets.
	UserAssignedIdentityId string `pulumi:"userAssignedIdentityId"`
}

// GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityInput is an input type that accepts GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArgs and GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput values.
// You can construct a concrete instance of `GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityInput` via:
//
//	GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArgs{...}
type GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityInput interface {
	pulumi.Input

	ToGetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput() GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput
	ToGetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutputWithContext(context.Context) GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput
}

type GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArgs struct {
	// The Client ID of the user-defined Managed Identity assigned to the Kubelets.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The Object ID of the user-defined Managed Identity assigned to the Kubelets.
	ObjectId pulumi.StringInput `pulumi:"objectId"`
	// The ID of the User Assigned Identity assigned to the Kubelets.
	UserAssignedIdentityId pulumi.StringInput `pulumi:"userAssignedIdentityId"`
}

func (GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity)(nil)).Elem()
}

func (i GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArgs) ToGetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput() GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput {
	return i.ToGetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutputWithContext(context.Background())
}

func (i GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArgs) ToGetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutputWithContext(ctx context.Context) GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput)
}

// GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayInput is an input type that accepts GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArray and GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayInput` via:
//
//	GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArray{ GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArgs{...} }
type GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput() GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput
	ToGetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutputWithContext(context.Context) GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput
}

type GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArray []GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityInput

func (GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity)(nil)).Elem()
}

func (i GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArray) ToGetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput() GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput {
	return i.ToGetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArray) ToGetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutputWithContext(ctx context.Context) GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput)
}

type GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity)(nil)).Elem()
}

func (o GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput) ToGetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput() GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput {
	return o
}

func (o GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput) ToGetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutputWithContext(ctx context.Context) GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput {
	return o
}

// The Client ID of the user-defined Managed Identity assigned to the Kubelets.
func (o GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

// The Object ID of the user-defined Managed Identity assigned to the Kubelets.
func (o GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput) ObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity) string {
		return v.ObjectId
	}).(pulumi.StringOutput)
}

// The ID of the User Assigned Identity assigned to the Kubelets.
func (o GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput) UserAssignedIdentityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity) string {
		return v.UserAssignedIdentityId
	}).(pulumi.StringOutput)
}

type GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity)(nil)).Elem()
}

func (o GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput) ToGetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput() GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput {
	return o
}

func (o GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput) ToGetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutputWithContext(ctx context.Context) GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput {
	return o
}

func (o GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity {
		return vs[0].([]GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity)[vs[1].(int)]
	}).(GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput)
}

type GetKubernetesClusterKeyManagementService struct {
	// Identifier of Azure Key Vault key. See [key identifier format](https://learn.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name) for more details.
	KeyVaultKeyId string `pulumi:"keyVaultKeyId"`
	// Network access of the key vault. The possible values are `Public` and `Private`. `Public` means the key vault allows public access from all networks. `Private` means the key vault disables public access and enables private link.
	KeyVaultNetworkAccess string `pulumi:"keyVaultNetworkAccess"`
}

// GetKubernetesClusterKeyManagementServiceInput is an input type that accepts GetKubernetesClusterKeyManagementServiceArgs and GetKubernetesClusterKeyManagementServiceOutput values.
// You can construct a concrete instance of `GetKubernetesClusterKeyManagementServiceInput` via:
//
//	GetKubernetesClusterKeyManagementServiceArgs{...}
type GetKubernetesClusterKeyManagementServiceInput interface {
	pulumi.Input

	ToGetKubernetesClusterKeyManagementServiceOutput() GetKubernetesClusterKeyManagementServiceOutput
	ToGetKubernetesClusterKeyManagementServiceOutputWithContext(context.Context) GetKubernetesClusterKeyManagementServiceOutput
}

type GetKubernetesClusterKeyManagementServiceArgs struct {
	// Identifier of Azure Key Vault key. See [key identifier format](https://learn.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name) for more details.
	KeyVaultKeyId pulumi.StringInput `pulumi:"keyVaultKeyId"`
	// Network access of the key vault. The possible values are `Public` and `Private`. `Public` means the key vault allows public access from all networks. `Private` means the key vault disables public access and enables private link.
	KeyVaultNetworkAccess pulumi.StringInput `pulumi:"keyVaultNetworkAccess"`
}

func (GetKubernetesClusterKeyManagementServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterKeyManagementService)(nil)).Elem()
}

func (i GetKubernetesClusterKeyManagementServiceArgs) ToGetKubernetesClusterKeyManagementServiceOutput() GetKubernetesClusterKeyManagementServiceOutput {
	return i.ToGetKubernetesClusterKeyManagementServiceOutputWithContext(context.Background())
}

func (i GetKubernetesClusterKeyManagementServiceArgs) ToGetKubernetesClusterKeyManagementServiceOutputWithContext(ctx context.Context) GetKubernetesClusterKeyManagementServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterKeyManagementServiceOutput)
}

// GetKubernetesClusterKeyManagementServiceArrayInput is an input type that accepts GetKubernetesClusterKeyManagementServiceArray and GetKubernetesClusterKeyManagementServiceArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterKeyManagementServiceArrayInput` via:
//
//	GetKubernetesClusterKeyManagementServiceArray{ GetKubernetesClusterKeyManagementServiceArgs{...} }
type GetKubernetesClusterKeyManagementServiceArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterKeyManagementServiceArrayOutput() GetKubernetesClusterKeyManagementServiceArrayOutput
	ToGetKubernetesClusterKeyManagementServiceArrayOutputWithContext(context.Context) GetKubernetesClusterKeyManagementServiceArrayOutput
}

type GetKubernetesClusterKeyManagementServiceArray []GetKubernetesClusterKeyManagementServiceInput

func (GetKubernetesClusterKeyManagementServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterKeyManagementService)(nil)).Elem()
}

func (i GetKubernetesClusterKeyManagementServiceArray) ToGetKubernetesClusterKeyManagementServiceArrayOutput() GetKubernetesClusterKeyManagementServiceArrayOutput {
	return i.ToGetKubernetesClusterKeyManagementServiceArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterKeyManagementServiceArray) ToGetKubernetesClusterKeyManagementServiceArrayOutputWithContext(ctx context.Context) GetKubernetesClusterKeyManagementServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterKeyManagementServiceArrayOutput)
}

type GetKubernetesClusterKeyManagementServiceOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterKeyManagementServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterKeyManagementService)(nil)).Elem()
}

func (o GetKubernetesClusterKeyManagementServiceOutput) ToGetKubernetesClusterKeyManagementServiceOutput() GetKubernetesClusterKeyManagementServiceOutput {
	return o
}

func (o GetKubernetesClusterKeyManagementServiceOutput) ToGetKubernetesClusterKeyManagementServiceOutputWithContext(ctx context.Context) GetKubernetesClusterKeyManagementServiceOutput {
	return o
}

// Identifier of Azure Key Vault key. See [key identifier format](https://learn.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name) for more details.
func (o GetKubernetesClusterKeyManagementServiceOutput) KeyVaultKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKeyManagementService) string { return v.KeyVaultKeyId }).(pulumi.StringOutput)
}

// Network access of the key vault. The possible values are `Public` and `Private`. `Public` means the key vault allows public access from all networks. `Private` means the key vault disables public access and enables private link.
func (o GetKubernetesClusterKeyManagementServiceOutput) KeyVaultNetworkAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKeyManagementService) string { return v.KeyVaultNetworkAccess }).(pulumi.StringOutput)
}

type GetKubernetesClusterKeyManagementServiceArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterKeyManagementServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterKeyManagementService)(nil)).Elem()
}

func (o GetKubernetesClusterKeyManagementServiceArrayOutput) ToGetKubernetesClusterKeyManagementServiceArrayOutput() GetKubernetesClusterKeyManagementServiceArrayOutput {
	return o
}

func (o GetKubernetesClusterKeyManagementServiceArrayOutput) ToGetKubernetesClusterKeyManagementServiceArrayOutputWithContext(ctx context.Context) GetKubernetesClusterKeyManagementServiceArrayOutput {
	return o
}

func (o GetKubernetesClusterKeyManagementServiceArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterKeyManagementServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterKeyManagementService {
		return vs[0].([]GetKubernetesClusterKeyManagementService)[vs[1].(int)]
	}).(GetKubernetesClusterKeyManagementServiceOutput)
}

type GetKubernetesClusterKeyVaultSecretsProvider struct {
	// A `secretIdentity` block as documented below.
	SecretIdentities []GetKubernetesClusterKeyVaultSecretsProviderSecretIdentity `pulumi:"secretIdentities"`
	// Is secret rotation enabled?
	SecretRotationEnabled bool `pulumi:"secretRotationEnabled"`
	// The interval to poll for secret rotation.
	SecretRotationInterval string `pulumi:"secretRotationInterval"`
}

// GetKubernetesClusterKeyVaultSecretsProviderInput is an input type that accepts GetKubernetesClusterKeyVaultSecretsProviderArgs and GetKubernetesClusterKeyVaultSecretsProviderOutput values.
// You can construct a concrete instance of `GetKubernetesClusterKeyVaultSecretsProviderInput` via:
//
//	GetKubernetesClusterKeyVaultSecretsProviderArgs{...}
type GetKubernetesClusterKeyVaultSecretsProviderInput interface {
	pulumi.Input

	ToGetKubernetesClusterKeyVaultSecretsProviderOutput() GetKubernetesClusterKeyVaultSecretsProviderOutput
	ToGetKubernetesClusterKeyVaultSecretsProviderOutputWithContext(context.Context) GetKubernetesClusterKeyVaultSecretsProviderOutput
}

type GetKubernetesClusterKeyVaultSecretsProviderArgs struct {
	// A `secretIdentity` block as documented below.
	SecretIdentities GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayInput `pulumi:"secretIdentities"`
	// Is secret rotation enabled?
	SecretRotationEnabled pulumi.BoolInput `pulumi:"secretRotationEnabled"`
	// The interval to poll for secret rotation.
	SecretRotationInterval pulumi.StringInput `pulumi:"secretRotationInterval"`
}

func (GetKubernetesClusterKeyVaultSecretsProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterKeyVaultSecretsProvider)(nil)).Elem()
}

func (i GetKubernetesClusterKeyVaultSecretsProviderArgs) ToGetKubernetesClusterKeyVaultSecretsProviderOutput() GetKubernetesClusterKeyVaultSecretsProviderOutput {
	return i.ToGetKubernetesClusterKeyVaultSecretsProviderOutputWithContext(context.Background())
}

func (i GetKubernetesClusterKeyVaultSecretsProviderArgs) ToGetKubernetesClusterKeyVaultSecretsProviderOutputWithContext(ctx context.Context) GetKubernetesClusterKeyVaultSecretsProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterKeyVaultSecretsProviderOutput)
}

// GetKubernetesClusterKeyVaultSecretsProviderArrayInput is an input type that accepts GetKubernetesClusterKeyVaultSecretsProviderArray and GetKubernetesClusterKeyVaultSecretsProviderArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterKeyVaultSecretsProviderArrayInput` via:
//
//	GetKubernetesClusterKeyVaultSecretsProviderArray{ GetKubernetesClusterKeyVaultSecretsProviderArgs{...} }
type GetKubernetesClusterKeyVaultSecretsProviderArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterKeyVaultSecretsProviderArrayOutput() GetKubernetesClusterKeyVaultSecretsProviderArrayOutput
	ToGetKubernetesClusterKeyVaultSecretsProviderArrayOutputWithContext(context.Context) GetKubernetesClusterKeyVaultSecretsProviderArrayOutput
}

type GetKubernetesClusterKeyVaultSecretsProviderArray []GetKubernetesClusterKeyVaultSecretsProviderInput

func (GetKubernetesClusterKeyVaultSecretsProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterKeyVaultSecretsProvider)(nil)).Elem()
}

func (i GetKubernetesClusterKeyVaultSecretsProviderArray) ToGetKubernetesClusterKeyVaultSecretsProviderArrayOutput() GetKubernetesClusterKeyVaultSecretsProviderArrayOutput {
	return i.ToGetKubernetesClusterKeyVaultSecretsProviderArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterKeyVaultSecretsProviderArray) ToGetKubernetesClusterKeyVaultSecretsProviderArrayOutputWithContext(ctx context.Context) GetKubernetesClusterKeyVaultSecretsProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterKeyVaultSecretsProviderArrayOutput)
}

type GetKubernetesClusterKeyVaultSecretsProviderOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterKeyVaultSecretsProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterKeyVaultSecretsProvider)(nil)).Elem()
}

func (o GetKubernetesClusterKeyVaultSecretsProviderOutput) ToGetKubernetesClusterKeyVaultSecretsProviderOutput() GetKubernetesClusterKeyVaultSecretsProviderOutput {
	return o
}

func (o GetKubernetesClusterKeyVaultSecretsProviderOutput) ToGetKubernetesClusterKeyVaultSecretsProviderOutputWithContext(ctx context.Context) GetKubernetesClusterKeyVaultSecretsProviderOutput {
	return o
}

// A `secretIdentity` block as documented below.
func (o GetKubernetesClusterKeyVaultSecretsProviderOutput) SecretIdentities() GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterKeyVaultSecretsProvider) []GetKubernetesClusterKeyVaultSecretsProviderSecretIdentity {
		return v.SecretIdentities
	}).(GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput)
}

// Is secret rotation enabled?
func (o GetKubernetesClusterKeyVaultSecretsProviderOutput) SecretRotationEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterKeyVaultSecretsProvider) bool { return v.SecretRotationEnabled }).(pulumi.BoolOutput)
}

// The interval to poll for secret rotation.
func (o GetKubernetesClusterKeyVaultSecretsProviderOutput) SecretRotationInterval() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKeyVaultSecretsProvider) string { return v.SecretRotationInterval }).(pulumi.StringOutput)
}

type GetKubernetesClusterKeyVaultSecretsProviderArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterKeyVaultSecretsProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterKeyVaultSecretsProvider)(nil)).Elem()
}

func (o GetKubernetesClusterKeyVaultSecretsProviderArrayOutput) ToGetKubernetesClusterKeyVaultSecretsProviderArrayOutput() GetKubernetesClusterKeyVaultSecretsProviderArrayOutput {
	return o
}

func (o GetKubernetesClusterKeyVaultSecretsProviderArrayOutput) ToGetKubernetesClusterKeyVaultSecretsProviderArrayOutputWithContext(ctx context.Context) GetKubernetesClusterKeyVaultSecretsProviderArrayOutput {
	return o
}

func (o GetKubernetesClusterKeyVaultSecretsProviderArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterKeyVaultSecretsProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterKeyVaultSecretsProvider {
		return vs[0].([]GetKubernetesClusterKeyVaultSecretsProvider)[vs[1].(int)]
	}).(GetKubernetesClusterKeyVaultSecretsProviderOutput)
}

type GetKubernetesClusterKeyVaultSecretsProviderSecretIdentity struct {
	// The Client ID of the user-defined Managed Identity assigned to the Kubelets.
	ClientId string `pulumi:"clientId"`
	// The Object ID of the user-defined Managed Identity assigned to the Kubelets.
	ObjectId string `pulumi:"objectId"`
	// The ID of the User Assigned Identity assigned to the Kubelets.
	UserAssignedIdentityId string `pulumi:"userAssignedIdentityId"`
}

// GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityInput is an input type that accepts GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArgs and GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput values.
// You can construct a concrete instance of `GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityInput` via:
//
//	GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArgs{...}
type GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityInput interface {
	pulumi.Input

	ToGetKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput() GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput
	ToGetKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutputWithContext(context.Context) GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput
}

type GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArgs struct {
	// The Client ID of the user-defined Managed Identity assigned to the Kubelets.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The Object ID of the user-defined Managed Identity assigned to the Kubelets.
	ObjectId pulumi.StringInput `pulumi:"objectId"`
	// The ID of the User Assigned Identity assigned to the Kubelets.
	UserAssignedIdentityId pulumi.StringInput `pulumi:"userAssignedIdentityId"`
}

func (GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterKeyVaultSecretsProviderSecretIdentity)(nil)).Elem()
}

func (i GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArgs) ToGetKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput() GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput {
	return i.ToGetKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutputWithContext(context.Background())
}

func (i GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArgs) ToGetKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutputWithContext(ctx context.Context) GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput)
}

// GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayInput is an input type that accepts GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArray and GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayInput` via:
//
//	GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArray{ GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArgs{...} }
type GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput() GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput
	ToGetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutputWithContext(context.Context) GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput
}

type GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArray []GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityInput

func (GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterKeyVaultSecretsProviderSecretIdentity)(nil)).Elem()
}

func (i GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArray) ToGetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput() GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput {
	return i.ToGetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArray) ToGetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutputWithContext(ctx context.Context) GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput)
}

type GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterKeyVaultSecretsProviderSecretIdentity)(nil)).Elem()
}

func (o GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput) ToGetKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput() GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput {
	return o
}

func (o GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput) ToGetKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutputWithContext(ctx context.Context) GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput {
	return o
}

// The Client ID of the user-defined Managed Identity assigned to the Kubelets.
func (o GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKeyVaultSecretsProviderSecretIdentity) string { return v.ClientId }).(pulumi.StringOutput)
}

// The Object ID of the user-defined Managed Identity assigned to the Kubelets.
func (o GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput) ObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKeyVaultSecretsProviderSecretIdentity) string { return v.ObjectId }).(pulumi.StringOutput)
}

// The ID of the User Assigned Identity assigned to the Kubelets.
func (o GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput) UserAssignedIdentityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKeyVaultSecretsProviderSecretIdentity) string {
		return v.UserAssignedIdentityId
	}).(pulumi.StringOutput)
}

type GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterKeyVaultSecretsProviderSecretIdentity)(nil)).Elem()
}

func (o GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput) ToGetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput() GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput {
	return o
}

func (o GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput) ToGetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutputWithContext(ctx context.Context) GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput {
	return o
}

func (o GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterKeyVaultSecretsProviderSecretIdentity {
		return vs[0].([]GetKubernetesClusterKeyVaultSecretsProviderSecretIdentity)[vs[1].(int)]
	}).(GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput)
}

type GetKubernetesClusterKubeAdminConfig struct {
	// Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
	ClientCertificate string `pulumi:"clientCertificate"`
	// Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
	ClientKey string `pulumi:"clientKey"`
	// Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
	ClusterCaCertificate string `pulumi:"clusterCaCertificate"`
	// The Kubernetes cluster server host.
	Host string `pulumi:"host"`
	// A password or token used to authenticate to the Kubernetes cluster.
	Password string `pulumi:"password"`
	// A username used to authenticate to the Kubernetes cluster.
	Username string `pulumi:"username"`
}

// GetKubernetesClusterKubeAdminConfigInput is an input type that accepts GetKubernetesClusterKubeAdminConfigArgs and GetKubernetesClusterKubeAdminConfigOutput values.
// You can construct a concrete instance of `GetKubernetesClusterKubeAdminConfigInput` via:
//
//	GetKubernetesClusterKubeAdminConfigArgs{...}
type GetKubernetesClusterKubeAdminConfigInput interface {
	pulumi.Input

	ToGetKubernetesClusterKubeAdminConfigOutput() GetKubernetesClusterKubeAdminConfigOutput
	ToGetKubernetesClusterKubeAdminConfigOutputWithContext(context.Context) GetKubernetesClusterKubeAdminConfigOutput
}

type GetKubernetesClusterKubeAdminConfigArgs struct {
	// Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
	ClientCertificate pulumi.StringInput `pulumi:"clientCertificate"`
	// Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
	ClientKey pulumi.StringInput `pulumi:"clientKey"`
	// Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
	ClusterCaCertificate pulumi.StringInput `pulumi:"clusterCaCertificate"`
	// The Kubernetes cluster server host.
	Host pulumi.StringInput `pulumi:"host"`
	// A password or token used to authenticate to the Kubernetes cluster.
	Password pulumi.StringInput `pulumi:"password"`
	// A username used to authenticate to the Kubernetes cluster.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetKubernetesClusterKubeAdminConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterKubeAdminConfig)(nil)).Elem()
}

func (i GetKubernetesClusterKubeAdminConfigArgs) ToGetKubernetesClusterKubeAdminConfigOutput() GetKubernetesClusterKubeAdminConfigOutput {
	return i.ToGetKubernetesClusterKubeAdminConfigOutputWithContext(context.Background())
}

func (i GetKubernetesClusterKubeAdminConfigArgs) ToGetKubernetesClusterKubeAdminConfigOutputWithContext(ctx context.Context) GetKubernetesClusterKubeAdminConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterKubeAdminConfigOutput)
}

// GetKubernetesClusterKubeAdminConfigArrayInput is an input type that accepts GetKubernetesClusterKubeAdminConfigArray and GetKubernetesClusterKubeAdminConfigArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterKubeAdminConfigArrayInput` via:
//
//	GetKubernetesClusterKubeAdminConfigArray{ GetKubernetesClusterKubeAdminConfigArgs{...} }
type GetKubernetesClusterKubeAdminConfigArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterKubeAdminConfigArrayOutput() GetKubernetesClusterKubeAdminConfigArrayOutput
	ToGetKubernetesClusterKubeAdminConfigArrayOutputWithContext(context.Context) GetKubernetesClusterKubeAdminConfigArrayOutput
}

type GetKubernetesClusterKubeAdminConfigArray []GetKubernetesClusterKubeAdminConfigInput

func (GetKubernetesClusterKubeAdminConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterKubeAdminConfig)(nil)).Elem()
}

func (i GetKubernetesClusterKubeAdminConfigArray) ToGetKubernetesClusterKubeAdminConfigArrayOutput() GetKubernetesClusterKubeAdminConfigArrayOutput {
	return i.ToGetKubernetesClusterKubeAdminConfigArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterKubeAdminConfigArray) ToGetKubernetesClusterKubeAdminConfigArrayOutputWithContext(ctx context.Context) GetKubernetesClusterKubeAdminConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterKubeAdminConfigArrayOutput)
}

type GetKubernetesClusterKubeAdminConfigOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterKubeAdminConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterKubeAdminConfig)(nil)).Elem()
}

func (o GetKubernetesClusterKubeAdminConfigOutput) ToGetKubernetesClusterKubeAdminConfigOutput() GetKubernetesClusterKubeAdminConfigOutput {
	return o
}

func (o GetKubernetesClusterKubeAdminConfigOutput) ToGetKubernetesClusterKubeAdminConfigOutputWithContext(ctx context.Context) GetKubernetesClusterKubeAdminConfigOutput {
	return o
}

// Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
func (o GetKubernetesClusterKubeAdminConfigOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeAdminConfig) string { return v.ClientCertificate }).(pulumi.StringOutput)
}

// Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
func (o GetKubernetesClusterKubeAdminConfigOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeAdminConfig) string { return v.ClientKey }).(pulumi.StringOutput)
}

// Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
func (o GetKubernetesClusterKubeAdminConfigOutput) ClusterCaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeAdminConfig) string { return v.ClusterCaCertificate }).(pulumi.StringOutput)
}

// The Kubernetes cluster server host.
func (o GetKubernetesClusterKubeAdminConfigOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeAdminConfig) string { return v.Host }).(pulumi.StringOutput)
}

// A password or token used to authenticate to the Kubernetes cluster.
func (o GetKubernetesClusterKubeAdminConfigOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeAdminConfig) string { return v.Password }).(pulumi.StringOutput)
}

// A username used to authenticate to the Kubernetes cluster.
func (o GetKubernetesClusterKubeAdminConfigOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeAdminConfig) string { return v.Username }).(pulumi.StringOutput)
}

type GetKubernetesClusterKubeAdminConfigArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterKubeAdminConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterKubeAdminConfig)(nil)).Elem()
}

func (o GetKubernetesClusterKubeAdminConfigArrayOutput) ToGetKubernetesClusterKubeAdminConfigArrayOutput() GetKubernetesClusterKubeAdminConfigArrayOutput {
	return o
}

func (o GetKubernetesClusterKubeAdminConfigArrayOutput) ToGetKubernetesClusterKubeAdminConfigArrayOutputWithContext(ctx context.Context) GetKubernetesClusterKubeAdminConfigArrayOutput {
	return o
}

func (o GetKubernetesClusterKubeAdminConfigArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterKubeAdminConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterKubeAdminConfig {
		return vs[0].([]GetKubernetesClusterKubeAdminConfig)[vs[1].(int)]
	}).(GetKubernetesClusterKubeAdminConfigOutput)
}

type GetKubernetesClusterKubeConfig struct {
	// Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
	ClientCertificate string `pulumi:"clientCertificate"`
	// Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
	ClientKey string `pulumi:"clientKey"`
	// Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
	ClusterCaCertificate string `pulumi:"clusterCaCertificate"`
	// The Kubernetes cluster server host.
	Host string `pulumi:"host"`
	// A password or token used to authenticate to the Kubernetes cluster.
	Password string `pulumi:"password"`
	// A username used to authenticate to the Kubernetes cluster.
	Username string `pulumi:"username"`
}

// GetKubernetesClusterKubeConfigInput is an input type that accepts GetKubernetesClusterKubeConfigArgs and GetKubernetesClusterKubeConfigOutput values.
// You can construct a concrete instance of `GetKubernetesClusterKubeConfigInput` via:
//
//	GetKubernetesClusterKubeConfigArgs{...}
type GetKubernetesClusterKubeConfigInput interface {
	pulumi.Input

	ToGetKubernetesClusterKubeConfigOutput() GetKubernetesClusterKubeConfigOutput
	ToGetKubernetesClusterKubeConfigOutputWithContext(context.Context) GetKubernetesClusterKubeConfigOutput
}

type GetKubernetesClusterKubeConfigArgs struct {
	// Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
	ClientCertificate pulumi.StringInput `pulumi:"clientCertificate"`
	// Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
	ClientKey pulumi.StringInput `pulumi:"clientKey"`
	// Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
	ClusterCaCertificate pulumi.StringInput `pulumi:"clusterCaCertificate"`
	// The Kubernetes cluster server host.
	Host pulumi.StringInput `pulumi:"host"`
	// A password or token used to authenticate to the Kubernetes cluster.
	Password pulumi.StringInput `pulumi:"password"`
	// A username used to authenticate to the Kubernetes cluster.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetKubernetesClusterKubeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterKubeConfig)(nil)).Elem()
}

func (i GetKubernetesClusterKubeConfigArgs) ToGetKubernetesClusterKubeConfigOutput() GetKubernetesClusterKubeConfigOutput {
	return i.ToGetKubernetesClusterKubeConfigOutputWithContext(context.Background())
}

func (i GetKubernetesClusterKubeConfigArgs) ToGetKubernetesClusterKubeConfigOutputWithContext(ctx context.Context) GetKubernetesClusterKubeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterKubeConfigOutput)
}

// GetKubernetesClusterKubeConfigArrayInput is an input type that accepts GetKubernetesClusterKubeConfigArray and GetKubernetesClusterKubeConfigArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterKubeConfigArrayInput` via:
//
//	GetKubernetesClusterKubeConfigArray{ GetKubernetesClusterKubeConfigArgs{...} }
type GetKubernetesClusterKubeConfigArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterKubeConfigArrayOutput() GetKubernetesClusterKubeConfigArrayOutput
	ToGetKubernetesClusterKubeConfigArrayOutputWithContext(context.Context) GetKubernetesClusterKubeConfigArrayOutput
}

type GetKubernetesClusterKubeConfigArray []GetKubernetesClusterKubeConfigInput

func (GetKubernetesClusterKubeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterKubeConfig)(nil)).Elem()
}

func (i GetKubernetesClusterKubeConfigArray) ToGetKubernetesClusterKubeConfigArrayOutput() GetKubernetesClusterKubeConfigArrayOutput {
	return i.ToGetKubernetesClusterKubeConfigArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterKubeConfigArray) ToGetKubernetesClusterKubeConfigArrayOutputWithContext(ctx context.Context) GetKubernetesClusterKubeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterKubeConfigArrayOutput)
}

type GetKubernetesClusterKubeConfigOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterKubeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterKubeConfig)(nil)).Elem()
}

func (o GetKubernetesClusterKubeConfigOutput) ToGetKubernetesClusterKubeConfigOutput() GetKubernetesClusterKubeConfigOutput {
	return o
}

func (o GetKubernetesClusterKubeConfigOutput) ToGetKubernetesClusterKubeConfigOutputWithContext(ctx context.Context) GetKubernetesClusterKubeConfigOutput {
	return o
}

// Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
func (o GetKubernetesClusterKubeConfigOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeConfig) string { return v.ClientCertificate }).(pulumi.StringOutput)
}

// Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
func (o GetKubernetesClusterKubeConfigOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeConfig) string { return v.ClientKey }).(pulumi.StringOutput)
}

// Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
func (o GetKubernetesClusterKubeConfigOutput) ClusterCaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeConfig) string { return v.ClusterCaCertificate }).(pulumi.StringOutput)
}

// The Kubernetes cluster server host.
func (o GetKubernetesClusterKubeConfigOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeConfig) string { return v.Host }).(pulumi.StringOutput)
}

// A password or token used to authenticate to the Kubernetes cluster.
func (o GetKubernetesClusterKubeConfigOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeConfig) string { return v.Password }).(pulumi.StringOutput)
}

// A username used to authenticate to the Kubernetes cluster.
func (o GetKubernetesClusterKubeConfigOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeConfig) string { return v.Username }).(pulumi.StringOutput)
}

type GetKubernetesClusterKubeConfigArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterKubeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterKubeConfig)(nil)).Elem()
}

func (o GetKubernetesClusterKubeConfigArrayOutput) ToGetKubernetesClusterKubeConfigArrayOutput() GetKubernetesClusterKubeConfigArrayOutput {
	return o
}

func (o GetKubernetesClusterKubeConfigArrayOutput) ToGetKubernetesClusterKubeConfigArrayOutputWithContext(ctx context.Context) GetKubernetesClusterKubeConfigArrayOutput {
	return o
}

func (o GetKubernetesClusterKubeConfigArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterKubeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterKubeConfig {
		return vs[0].([]GetKubernetesClusterKubeConfig)[vs[1].(int)]
	}).(GetKubernetesClusterKubeConfigOutput)
}

type GetKubernetesClusterKubeletIdentity struct {
	// The Client ID of the user-defined Managed Identity assigned to the Kubelets.
	ClientId string `pulumi:"clientId"`
	// The Object ID of the user-defined Managed Identity assigned to the Kubelets.
	ObjectId string `pulumi:"objectId"`
	// The ID of the User Assigned Identity assigned to the Kubelets.
	UserAssignedIdentityId string `pulumi:"userAssignedIdentityId"`
}

// GetKubernetesClusterKubeletIdentityInput is an input type that accepts GetKubernetesClusterKubeletIdentityArgs and GetKubernetesClusterKubeletIdentityOutput values.
// You can construct a concrete instance of `GetKubernetesClusterKubeletIdentityInput` via:
//
//	GetKubernetesClusterKubeletIdentityArgs{...}
type GetKubernetesClusterKubeletIdentityInput interface {
	pulumi.Input

	ToGetKubernetesClusterKubeletIdentityOutput() GetKubernetesClusterKubeletIdentityOutput
	ToGetKubernetesClusterKubeletIdentityOutputWithContext(context.Context) GetKubernetesClusterKubeletIdentityOutput
}

type GetKubernetesClusterKubeletIdentityArgs struct {
	// The Client ID of the user-defined Managed Identity assigned to the Kubelets.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The Object ID of the user-defined Managed Identity assigned to the Kubelets.
	ObjectId pulumi.StringInput `pulumi:"objectId"`
	// The ID of the User Assigned Identity assigned to the Kubelets.
	UserAssignedIdentityId pulumi.StringInput `pulumi:"userAssignedIdentityId"`
}

func (GetKubernetesClusterKubeletIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterKubeletIdentity)(nil)).Elem()
}

func (i GetKubernetesClusterKubeletIdentityArgs) ToGetKubernetesClusterKubeletIdentityOutput() GetKubernetesClusterKubeletIdentityOutput {
	return i.ToGetKubernetesClusterKubeletIdentityOutputWithContext(context.Background())
}

func (i GetKubernetesClusterKubeletIdentityArgs) ToGetKubernetesClusterKubeletIdentityOutputWithContext(ctx context.Context) GetKubernetesClusterKubeletIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterKubeletIdentityOutput)
}

// GetKubernetesClusterKubeletIdentityArrayInput is an input type that accepts GetKubernetesClusterKubeletIdentityArray and GetKubernetesClusterKubeletIdentityArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterKubeletIdentityArrayInput` via:
//
//	GetKubernetesClusterKubeletIdentityArray{ GetKubernetesClusterKubeletIdentityArgs{...} }
type GetKubernetesClusterKubeletIdentityArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterKubeletIdentityArrayOutput() GetKubernetesClusterKubeletIdentityArrayOutput
	ToGetKubernetesClusterKubeletIdentityArrayOutputWithContext(context.Context) GetKubernetesClusterKubeletIdentityArrayOutput
}

type GetKubernetesClusterKubeletIdentityArray []GetKubernetesClusterKubeletIdentityInput

func (GetKubernetesClusterKubeletIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterKubeletIdentity)(nil)).Elem()
}

func (i GetKubernetesClusterKubeletIdentityArray) ToGetKubernetesClusterKubeletIdentityArrayOutput() GetKubernetesClusterKubeletIdentityArrayOutput {
	return i.ToGetKubernetesClusterKubeletIdentityArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterKubeletIdentityArray) ToGetKubernetesClusterKubeletIdentityArrayOutputWithContext(ctx context.Context) GetKubernetesClusterKubeletIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterKubeletIdentityArrayOutput)
}

type GetKubernetesClusterKubeletIdentityOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterKubeletIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterKubeletIdentity)(nil)).Elem()
}

func (o GetKubernetesClusterKubeletIdentityOutput) ToGetKubernetesClusterKubeletIdentityOutput() GetKubernetesClusterKubeletIdentityOutput {
	return o
}

func (o GetKubernetesClusterKubeletIdentityOutput) ToGetKubernetesClusterKubeletIdentityOutputWithContext(ctx context.Context) GetKubernetesClusterKubeletIdentityOutput {
	return o
}

// The Client ID of the user-defined Managed Identity assigned to the Kubelets.
func (o GetKubernetesClusterKubeletIdentityOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeletIdentity) string { return v.ClientId }).(pulumi.StringOutput)
}

// The Object ID of the user-defined Managed Identity assigned to the Kubelets.
func (o GetKubernetesClusterKubeletIdentityOutput) ObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeletIdentity) string { return v.ObjectId }).(pulumi.StringOutput)
}

// The ID of the User Assigned Identity assigned to the Kubelets.
func (o GetKubernetesClusterKubeletIdentityOutput) UserAssignedIdentityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeletIdentity) string { return v.UserAssignedIdentityId }).(pulumi.StringOutput)
}

type GetKubernetesClusterKubeletIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterKubeletIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterKubeletIdentity)(nil)).Elem()
}

func (o GetKubernetesClusterKubeletIdentityArrayOutput) ToGetKubernetesClusterKubeletIdentityArrayOutput() GetKubernetesClusterKubeletIdentityArrayOutput {
	return o
}

func (o GetKubernetesClusterKubeletIdentityArrayOutput) ToGetKubernetesClusterKubeletIdentityArrayOutputWithContext(ctx context.Context) GetKubernetesClusterKubeletIdentityArrayOutput {
	return o
}

func (o GetKubernetesClusterKubeletIdentityArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterKubeletIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterKubeletIdentity {
		return vs[0].([]GetKubernetesClusterKubeletIdentity)[vs[1].(int)]
	}).(GetKubernetesClusterKubeletIdentityOutput)
}

type GetKubernetesClusterLinuxProfile struct {
	// The username associated with the administrator account of the Windows VMs.
	AdminUsername string `pulumi:"adminUsername"`
	// An `sshKey` block as defined below.
	SshKeys []GetKubernetesClusterLinuxProfileSshKey `pulumi:"sshKeys"`
}

// GetKubernetesClusterLinuxProfileInput is an input type that accepts GetKubernetesClusterLinuxProfileArgs and GetKubernetesClusterLinuxProfileOutput values.
// You can construct a concrete instance of `GetKubernetesClusterLinuxProfileInput` via:
//
//	GetKubernetesClusterLinuxProfileArgs{...}
type GetKubernetesClusterLinuxProfileInput interface {
	pulumi.Input

	ToGetKubernetesClusterLinuxProfileOutput() GetKubernetesClusterLinuxProfileOutput
	ToGetKubernetesClusterLinuxProfileOutputWithContext(context.Context) GetKubernetesClusterLinuxProfileOutput
}

type GetKubernetesClusterLinuxProfileArgs struct {
	// The username associated with the administrator account of the Windows VMs.
	AdminUsername pulumi.StringInput `pulumi:"adminUsername"`
	// An `sshKey` block as defined below.
	SshKeys GetKubernetesClusterLinuxProfileSshKeyArrayInput `pulumi:"sshKeys"`
}

func (GetKubernetesClusterLinuxProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterLinuxProfile)(nil)).Elem()
}

func (i GetKubernetesClusterLinuxProfileArgs) ToGetKubernetesClusterLinuxProfileOutput() GetKubernetesClusterLinuxProfileOutput {
	return i.ToGetKubernetesClusterLinuxProfileOutputWithContext(context.Background())
}

func (i GetKubernetesClusterLinuxProfileArgs) ToGetKubernetesClusterLinuxProfileOutputWithContext(ctx context.Context) GetKubernetesClusterLinuxProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterLinuxProfileOutput)
}

// GetKubernetesClusterLinuxProfileArrayInput is an input type that accepts GetKubernetesClusterLinuxProfileArray and GetKubernetesClusterLinuxProfileArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterLinuxProfileArrayInput` via:
//
//	GetKubernetesClusterLinuxProfileArray{ GetKubernetesClusterLinuxProfileArgs{...} }
type GetKubernetesClusterLinuxProfileArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterLinuxProfileArrayOutput() GetKubernetesClusterLinuxProfileArrayOutput
	ToGetKubernetesClusterLinuxProfileArrayOutputWithContext(context.Context) GetKubernetesClusterLinuxProfileArrayOutput
}

type GetKubernetesClusterLinuxProfileArray []GetKubernetesClusterLinuxProfileInput

func (GetKubernetesClusterLinuxProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterLinuxProfile)(nil)).Elem()
}

func (i GetKubernetesClusterLinuxProfileArray) ToGetKubernetesClusterLinuxProfileArrayOutput() GetKubernetesClusterLinuxProfileArrayOutput {
	return i.ToGetKubernetesClusterLinuxProfileArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterLinuxProfileArray) ToGetKubernetesClusterLinuxProfileArrayOutputWithContext(ctx context.Context) GetKubernetesClusterLinuxProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterLinuxProfileArrayOutput)
}

type GetKubernetesClusterLinuxProfileOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterLinuxProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterLinuxProfile)(nil)).Elem()
}

func (o GetKubernetesClusterLinuxProfileOutput) ToGetKubernetesClusterLinuxProfileOutput() GetKubernetesClusterLinuxProfileOutput {
	return o
}

func (o GetKubernetesClusterLinuxProfileOutput) ToGetKubernetesClusterLinuxProfileOutputWithContext(ctx context.Context) GetKubernetesClusterLinuxProfileOutput {
	return o
}

// The username associated with the administrator account of the Windows VMs.
func (o GetKubernetesClusterLinuxProfileOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterLinuxProfile) string { return v.AdminUsername }).(pulumi.StringOutput)
}

// An `sshKey` block as defined below.
func (o GetKubernetesClusterLinuxProfileOutput) SshKeys() GetKubernetesClusterLinuxProfileSshKeyArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterLinuxProfile) []GetKubernetesClusterLinuxProfileSshKey { return v.SshKeys }).(GetKubernetesClusterLinuxProfileSshKeyArrayOutput)
}

type GetKubernetesClusterLinuxProfileArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterLinuxProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterLinuxProfile)(nil)).Elem()
}

func (o GetKubernetesClusterLinuxProfileArrayOutput) ToGetKubernetesClusterLinuxProfileArrayOutput() GetKubernetesClusterLinuxProfileArrayOutput {
	return o
}

func (o GetKubernetesClusterLinuxProfileArrayOutput) ToGetKubernetesClusterLinuxProfileArrayOutputWithContext(ctx context.Context) GetKubernetesClusterLinuxProfileArrayOutput {
	return o
}

func (o GetKubernetesClusterLinuxProfileArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterLinuxProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterLinuxProfile {
		return vs[0].([]GetKubernetesClusterLinuxProfile)[vs[1].(int)]
	}).(GetKubernetesClusterLinuxProfileOutput)
}

type GetKubernetesClusterLinuxProfileSshKey struct {
	// The Public SSH Key used to access the cluster.
	KeyData string `pulumi:"keyData"`
}

// GetKubernetesClusterLinuxProfileSshKeyInput is an input type that accepts GetKubernetesClusterLinuxProfileSshKeyArgs and GetKubernetesClusterLinuxProfileSshKeyOutput values.
// You can construct a concrete instance of `GetKubernetesClusterLinuxProfileSshKeyInput` via:
//
//	GetKubernetesClusterLinuxProfileSshKeyArgs{...}
type GetKubernetesClusterLinuxProfileSshKeyInput interface {
	pulumi.Input

	ToGetKubernetesClusterLinuxProfileSshKeyOutput() GetKubernetesClusterLinuxProfileSshKeyOutput
	ToGetKubernetesClusterLinuxProfileSshKeyOutputWithContext(context.Context) GetKubernetesClusterLinuxProfileSshKeyOutput
}

type GetKubernetesClusterLinuxProfileSshKeyArgs struct {
	// The Public SSH Key used to access the cluster.
	KeyData pulumi.StringInput `pulumi:"keyData"`
}

func (GetKubernetesClusterLinuxProfileSshKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterLinuxProfileSshKey)(nil)).Elem()
}

func (i GetKubernetesClusterLinuxProfileSshKeyArgs) ToGetKubernetesClusterLinuxProfileSshKeyOutput() GetKubernetesClusterLinuxProfileSshKeyOutput {
	return i.ToGetKubernetesClusterLinuxProfileSshKeyOutputWithContext(context.Background())
}

func (i GetKubernetesClusterLinuxProfileSshKeyArgs) ToGetKubernetesClusterLinuxProfileSshKeyOutputWithContext(ctx context.Context) GetKubernetesClusterLinuxProfileSshKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterLinuxProfileSshKeyOutput)
}

// GetKubernetesClusterLinuxProfileSshKeyArrayInput is an input type that accepts GetKubernetesClusterLinuxProfileSshKeyArray and GetKubernetesClusterLinuxProfileSshKeyArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterLinuxProfileSshKeyArrayInput` via:
//
//	GetKubernetesClusterLinuxProfileSshKeyArray{ GetKubernetesClusterLinuxProfileSshKeyArgs{...} }
type GetKubernetesClusterLinuxProfileSshKeyArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterLinuxProfileSshKeyArrayOutput() GetKubernetesClusterLinuxProfileSshKeyArrayOutput
	ToGetKubernetesClusterLinuxProfileSshKeyArrayOutputWithContext(context.Context) GetKubernetesClusterLinuxProfileSshKeyArrayOutput
}

type GetKubernetesClusterLinuxProfileSshKeyArray []GetKubernetesClusterLinuxProfileSshKeyInput

func (GetKubernetesClusterLinuxProfileSshKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterLinuxProfileSshKey)(nil)).Elem()
}

func (i GetKubernetesClusterLinuxProfileSshKeyArray) ToGetKubernetesClusterLinuxProfileSshKeyArrayOutput() GetKubernetesClusterLinuxProfileSshKeyArrayOutput {
	return i.ToGetKubernetesClusterLinuxProfileSshKeyArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterLinuxProfileSshKeyArray) ToGetKubernetesClusterLinuxProfileSshKeyArrayOutputWithContext(ctx context.Context) GetKubernetesClusterLinuxProfileSshKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterLinuxProfileSshKeyArrayOutput)
}

type GetKubernetesClusterLinuxProfileSshKeyOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterLinuxProfileSshKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterLinuxProfileSshKey)(nil)).Elem()
}

func (o GetKubernetesClusterLinuxProfileSshKeyOutput) ToGetKubernetesClusterLinuxProfileSshKeyOutput() GetKubernetesClusterLinuxProfileSshKeyOutput {
	return o
}

func (o GetKubernetesClusterLinuxProfileSshKeyOutput) ToGetKubernetesClusterLinuxProfileSshKeyOutputWithContext(ctx context.Context) GetKubernetesClusterLinuxProfileSshKeyOutput {
	return o
}

// The Public SSH Key used to access the cluster.
func (o GetKubernetesClusterLinuxProfileSshKeyOutput) KeyData() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterLinuxProfileSshKey) string { return v.KeyData }).(pulumi.StringOutput)
}

type GetKubernetesClusterLinuxProfileSshKeyArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterLinuxProfileSshKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterLinuxProfileSshKey)(nil)).Elem()
}

func (o GetKubernetesClusterLinuxProfileSshKeyArrayOutput) ToGetKubernetesClusterLinuxProfileSshKeyArrayOutput() GetKubernetesClusterLinuxProfileSshKeyArrayOutput {
	return o
}

func (o GetKubernetesClusterLinuxProfileSshKeyArrayOutput) ToGetKubernetesClusterLinuxProfileSshKeyArrayOutputWithContext(ctx context.Context) GetKubernetesClusterLinuxProfileSshKeyArrayOutput {
	return o
}

func (o GetKubernetesClusterLinuxProfileSshKeyArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterLinuxProfileSshKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterLinuxProfileSshKey {
		return vs[0].([]GetKubernetesClusterLinuxProfileSshKey)[vs[1].(int)]
	}).(GetKubernetesClusterLinuxProfileSshKeyOutput)
}

type GetKubernetesClusterMicrosoftDefender struct {
	// The ID of the Log Analytics Workspace to which the OMS Agent should send data.
	LogAnalyticsWorkspaceId string `pulumi:"logAnalyticsWorkspaceId"`
}

// GetKubernetesClusterMicrosoftDefenderInput is an input type that accepts GetKubernetesClusterMicrosoftDefenderArgs and GetKubernetesClusterMicrosoftDefenderOutput values.
// You can construct a concrete instance of `GetKubernetesClusterMicrosoftDefenderInput` via:
//
//	GetKubernetesClusterMicrosoftDefenderArgs{...}
type GetKubernetesClusterMicrosoftDefenderInput interface {
	pulumi.Input

	ToGetKubernetesClusterMicrosoftDefenderOutput() GetKubernetesClusterMicrosoftDefenderOutput
	ToGetKubernetesClusterMicrosoftDefenderOutputWithContext(context.Context) GetKubernetesClusterMicrosoftDefenderOutput
}

type GetKubernetesClusterMicrosoftDefenderArgs struct {
	// The ID of the Log Analytics Workspace to which the OMS Agent should send data.
	LogAnalyticsWorkspaceId pulumi.StringInput `pulumi:"logAnalyticsWorkspaceId"`
}

func (GetKubernetesClusterMicrosoftDefenderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterMicrosoftDefender)(nil)).Elem()
}

func (i GetKubernetesClusterMicrosoftDefenderArgs) ToGetKubernetesClusterMicrosoftDefenderOutput() GetKubernetesClusterMicrosoftDefenderOutput {
	return i.ToGetKubernetesClusterMicrosoftDefenderOutputWithContext(context.Background())
}

func (i GetKubernetesClusterMicrosoftDefenderArgs) ToGetKubernetesClusterMicrosoftDefenderOutputWithContext(ctx context.Context) GetKubernetesClusterMicrosoftDefenderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterMicrosoftDefenderOutput)
}

// GetKubernetesClusterMicrosoftDefenderArrayInput is an input type that accepts GetKubernetesClusterMicrosoftDefenderArray and GetKubernetesClusterMicrosoftDefenderArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterMicrosoftDefenderArrayInput` via:
//
//	GetKubernetesClusterMicrosoftDefenderArray{ GetKubernetesClusterMicrosoftDefenderArgs{...} }
type GetKubernetesClusterMicrosoftDefenderArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterMicrosoftDefenderArrayOutput() GetKubernetesClusterMicrosoftDefenderArrayOutput
	ToGetKubernetesClusterMicrosoftDefenderArrayOutputWithContext(context.Context) GetKubernetesClusterMicrosoftDefenderArrayOutput
}

type GetKubernetesClusterMicrosoftDefenderArray []GetKubernetesClusterMicrosoftDefenderInput

func (GetKubernetesClusterMicrosoftDefenderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterMicrosoftDefender)(nil)).Elem()
}

func (i GetKubernetesClusterMicrosoftDefenderArray) ToGetKubernetesClusterMicrosoftDefenderArrayOutput() GetKubernetesClusterMicrosoftDefenderArrayOutput {
	return i.ToGetKubernetesClusterMicrosoftDefenderArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterMicrosoftDefenderArray) ToGetKubernetesClusterMicrosoftDefenderArrayOutputWithContext(ctx context.Context) GetKubernetesClusterMicrosoftDefenderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterMicrosoftDefenderArrayOutput)
}

type GetKubernetesClusterMicrosoftDefenderOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterMicrosoftDefenderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterMicrosoftDefender)(nil)).Elem()
}

func (o GetKubernetesClusterMicrosoftDefenderOutput) ToGetKubernetesClusterMicrosoftDefenderOutput() GetKubernetesClusterMicrosoftDefenderOutput {
	return o
}

func (o GetKubernetesClusterMicrosoftDefenderOutput) ToGetKubernetesClusterMicrosoftDefenderOutputWithContext(ctx context.Context) GetKubernetesClusterMicrosoftDefenderOutput {
	return o
}

// The ID of the Log Analytics Workspace to which the OMS Agent should send data.
func (o GetKubernetesClusterMicrosoftDefenderOutput) LogAnalyticsWorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterMicrosoftDefender) string { return v.LogAnalyticsWorkspaceId }).(pulumi.StringOutput)
}

type GetKubernetesClusterMicrosoftDefenderArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterMicrosoftDefenderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterMicrosoftDefender)(nil)).Elem()
}

func (o GetKubernetesClusterMicrosoftDefenderArrayOutput) ToGetKubernetesClusterMicrosoftDefenderArrayOutput() GetKubernetesClusterMicrosoftDefenderArrayOutput {
	return o
}

func (o GetKubernetesClusterMicrosoftDefenderArrayOutput) ToGetKubernetesClusterMicrosoftDefenderArrayOutputWithContext(ctx context.Context) GetKubernetesClusterMicrosoftDefenderArrayOutput {
	return o
}

func (o GetKubernetesClusterMicrosoftDefenderArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterMicrosoftDefenderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterMicrosoftDefender {
		return vs[0].([]GetKubernetesClusterMicrosoftDefender)[vs[1].(int)]
	}).(GetKubernetesClusterMicrosoftDefenderOutput)
}

type GetKubernetesClusterNetworkProfile struct {
	// IP address within the Kubernetes service address range used by cluster service discovery (kube-dns).
	DnsServiceIp string `pulumi:"dnsServiceIp"`
	// IP address (in CIDR notation) used as the Docker bridge IP address on nodes.
	DockerBridgeCidr string `pulumi:"dockerBridgeCidr"`
	LoadBalancerSku  string `pulumi:"loadBalancerSku"`
	// Network plugin used such as `azure` or `kubenet`.
	NetworkPlugin string `pulumi:"networkPlugin"`
	// Network policy to be used with Azure CNI. e.g. `calico` or `azure`
	NetworkPolicy string `pulumi:"networkPolicy"`
	// The CIDR used for pod IP addresses.
	PodCidr string `pulumi:"podCidr"`
	// Network range used by the Kubernetes service.
	ServiceCidr string `pulumi:"serviceCidr"`
}

// GetKubernetesClusterNetworkProfileInput is an input type that accepts GetKubernetesClusterNetworkProfileArgs and GetKubernetesClusterNetworkProfileOutput values.
// You can construct a concrete instance of `GetKubernetesClusterNetworkProfileInput` via:
//
//	GetKubernetesClusterNetworkProfileArgs{...}
type GetKubernetesClusterNetworkProfileInput interface {
	pulumi.Input

	ToGetKubernetesClusterNetworkProfileOutput() GetKubernetesClusterNetworkProfileOutput
	ToGetKubernetesClusterNetworkProfileOutputWithContext(context.Context) GetKubernetesClusterNetworkProfileOutput
}

type GetKubernetesClusterNetworkProfileArgs struct {
	// IP address within the Kubernetes service address range used by cluster service discovery (kube-dns).
	DnsServiceIp pulumi.StringInput `pulumi:"dnsServiceIp"`
	// IP address (in CIDR notation) used as the Docker bridge IP address on nodes.
	DockerBridgeCidr pulumi.StringInput `pulumi:"dockerBridgeCidr"`
	LoadBalancerSku  pulumi.StringInput `pulumi:"loadBalancerSku"`
	// Network plugin used such as `azure` or `kubenet`.
	NetworkPlugin pulumi.StringInput `pulumi:"networkPlugin"`
	// Network policy to be used with Azure CNI. e.g. `calico` or `azure`
	NetworkPolicy pulumi.StringInput `pulumi:"networkPolicy"`
	// The CIDR used for pod IP addresses.
	PodCidr pulumi.StringInput `pulumi:"podCidr"`
	// Network range used by the Kubernetes service.
	ServiceCidr pulumi.StringInput `pulumi:"serviceCidr"`
}

func (GetKubernetesClusterNetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterNetworkProfile)(nil)).Elem()
}

func (i GetKubernetesClusterNetworkProfileArgs) ToGetKubernetesClusterNetworkProfileOutput() GetKubernetesClusterNetworkProfileOutput {
	return i.ToGetKubernetesClusterNetworkProfileOutputWithContext(context.Background())
}

func (i GetKubernetesClusterNetworkProfileArgs) ToGetKubernetesClusterNetworkProfileOutputWithContext(ctx context.Context) GetKubernetesClusterNetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterNetworkProfileOutput)
}

// GetKubernetesClusterNetworkProfileArrayInput is an input type that accepts GetKubernetesClusterNetworkProfileArray and GetKubernetesClusterNetworkProfileArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterNetworkProfileArrayInput` via:
//
//	GetKubernetesClusterNetworkProfileArray{ GetKubernetesClusterNetworkProfileArgs{...} }
type GetKubernetesClusterNetworkProfileArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterNetworkProfileArrayOutput() GetKubernetesClusterNetworkProfileArrayOutput
	ToGetKubernetesClusterNetworkProfileArrayOutputWithContext(context.Context) GetKubernetesClusterNetworkProfileArrayOutput
}

type GetKubernetesClusterNetworkProfileArray []GetKubernetesClusterNetworkProfileInput

func (GetKubernetesClusterNetworkProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterNetworkProfile)(nil)).Elem()
}

func (i GetKubernetesClusterNetworkProfileArray) ToGetKubernetesClusterNetworkProfileArrayOutput() GetKubernetesClusterNetworkProfileArrayOutput {
	return i.ToGetKubernetesClusterNetworkProfileArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterNetworkProfileArray) ToGetKubernetesClusterNetworkProfileArrayOutputWithContext(ctx context.Context) GetKubernetesClusterNetworkProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterNetworkProfileArrayOutput)
}

type GetKubernetesClusterNetworkProfileOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterNetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterNetworkProfile)(nil)).Elem()
}

func (o GetKubernetesClusterNetworkProfileOutput) ToGetKubernetesClusterNetworkProfileOutput() GetKubernetesClusterNetworkProfileOutput {
	return o
}

func (o GetKubernetesClusterNetworkProfileOutput) ToGetKubernetesClusterNetworkProfileOutputWithContext(ctx context.Context) GetKubernetesClusterNetworkProfileOutput {
	return o
}

// IP address within the Kubernetes service address range used by cluster service discovery (kube-dns).
func (o GetKubernetesClusterNetworkProfileOutput) DnsServiceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNetworkProfile) string { return v.DnsServiceIp }).(pulumi.StringOutput)
}

// IP address (in CIDR notation) used as the Docker bridge IP address on nodes.
func (o GetKubernetesClusterNetworkProfileOutput) DockerBridgeCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNetworkProfile) string { return v.DockerBridgeCidr }).(pulumi.StringOutput)
}

func (o GetKubernetesClusterNetworkProfileOutput) LoadBalancerSku() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNetworkProfile) string { return v.LoadBalancerSku }).(pulumi.StringOutput)
}

// Network plugin used such as `azure` or `kubenet`.
func (o GetKubernetesClusterNetworkProfileOutput) NetworkPlugin() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNetworkProfile) string { return v.NetworkPlugin }).(pulumi.StringOutput)
}

// Network policy to be used with Azure CNI. e.g. `calico` or `azure`
func (o GetKubernetesClusterNetworkProfileOutput) NetworkPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNetworkProfile) string { return v.NetworkPolicy }).(pulumi.StringOutput)
}

// The CIDR used for pod IP addresses.
func (o GetKubernetesClusterNetworkProfileOutput) PodCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNetworkProfile) string { return v.PodCidr }).(pulumi.StringOutput)
}

// Network range used by the Kubernetes service.
func (o GetKubernetesClusterNetworkProfileOutput) ServiceCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNetworkProfile) string { return v.ServiceCidr }).(pulumi.StringOutput)
}

type GetKubernetesClusterNetworkProfileArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterNetworkProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterNetworkProfile)(nil)).Elem()
}

func (o GetKubernetesClusterNetworkProfileArrayOutput) ToGetKubernetesClusterNetworkProfileArrayOutput() GetKubernetesClusterNetworkProfileArrayOutput {
	return o
}

func (o GetKubernetesClusterNetworkProfileArrayOutput) ToGetKubernetesClusterNetworkProfileArrayOutputWithContext(ctx context.Context) GetKubernetesClusterNetworkProfileArrayOutput {
	return o
}

func (o GetKubernetesClusterNetworkProfileArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterNetworkProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterNetworkProfile {
		return vs[0].([]GetKubernetesClusterNetworkProfile)[vs[1].(int)]
	}).(GetKubernetesClusterNetworkProfileOutput)
}

type GetKubernetesClusterOmsAgent struct {
	// The ID of the Log Analytics Workspace to which the OMS Agent should send data.
	LogAnalyticsWorkspaceId string `pulumi:"logAnalyticsWorkspaceId"`
	// Is managed identity authentication for monitoring enabled?
	MsiAuthForMonitoringEnabled bool `pulumi:"msiAuthForMonitoringEnabled"`
	// An `omsAgentIdentity` block as defined below.
	OmsAgentIdentities []GetKubernetesClusterOmsAgentOmsAgentIdentity `pulumi:"omsAgentIdentities"`
}

// GetKubernetesClusterOmsAgentInput is an input type that accepts GetKubernetesClusterOmsAgentArgs and GetKubernetesClusterOmsAgentOutput values.
// You can construct a concrete instance of `GetKubernetesClusterOmsAgentInput` via:
//
//	GetKubernetesClusterOmsAgentArgs{...}
type GetKubernetesClusterOmsAgentInput interface {
	pulumi.Input

	ToGetKubernetesClusterOmsAgentOutput() GetKubernetesClusterOmsAgentOutput
	ToGetKubernetesClusterOmsAgentOutputWithContext(context.Context) GetKubernetesClusterOmsAgentOutput
}

type GetKubernetesClusterOmsAgentArgs struct {
	// The ID of the Log Analytics Workspace to which the OMS Agent should send data.
	LogAnalyticsWorkspaceId pulumi.StringInput `pulumi:"logAnalyticsWorkspaceId"`
	// Is managed identity authentication for monitoring enabled?
	MsiAuthForMonitoringEnabled pulumi.BoolInput `pulumi:"msiAuthForMonitoringEnabled"`
	// An `omsAgentIdentity` block as defined below.
	OmsAgentIdentities GetKubernetesClusterOmsAgentOmsAgentIdentityArrayInput `pulumi:"omsAgentIdentities"`
}

func (GetKubernetesClusterOmsAgentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterOmsAgent)(nil)).Elem()
}

func (i GetKubernetesClusterOmsAgentArgs) ToGetKubernetesClusterOmsAgentOutput() GetKubernetesClusterOmsAgentOutput {
	return i.ToGetKubernetesClusterOmsAgentOutputWithContext(context.Background())
}

func (i GetKubernetesClusterOmsAgentArgs) ToGetKubernetesClusterOmsAgentOutputWithContext(ctx context.Context) GetKubernetesClusterOmsAgentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterOmsAgentOutput)
}

// GetKubernetesClusterOmsAgentArrayInput is an input type that accepts GetKubernetesClusterOmsAgentArray and GetKubernetesClusterOmsAgentArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterOmsAgentArrayInput` via:
//
//	GetKubernetesClusterOmsAgentArray{ GetKubernetesClusterOmsAgentArgs{...} }
type GetKubernetesClusterOmsAgentArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterOmsAgentArrayOutput() GetKubernetesClusterOmsAgentArrayOutput
	ToGetKubernetesClusterOmsAgentArrayOutputWithContext(context.Context) GetKubernetesClusterOmsAgentArrayOutput
}

type GetKubernetesClusterOmsAgentArray []GetKubernetesClusterOmsAgentInput

func (GetKubernetesClusterOmsAgentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterOmsAgent)(nil)).Elem()
}

func (i GetKubernetesClusterOmsAgentArray) ToGetKubernetesClusterOmsAgentArrayOutput() GetKubernetesClusterOmsAgentArrayOutput {
	return i.ToGetKubernetesClusterOmsAgentArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterOmsAgentArray) ToGetKubernetesClusterOmsAgentArrayOutputWithContext(ctx context.Context) GetKubernetesClusterOmsAgentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterOmsAgentArrayOutput)
}

type GetKubernetesClusterOmsAgentOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterOmsAgentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterOmsAgent)(nil)).Elem()
}

func (o GetKubernetesClusterOmsAgentOutput) ToGetKubernetesClusterOmsAgentOutput() GetKubernetesClusterOmsAgentOutput {
	return o
}

func (o GetKubernetesClusterOmsAgentOutput) ToGetKubernetesClusterOmsAgentOutputWithContext(ctx context.Context) GetKubernetesClusterOmsAgentOutput {
	return o
}

// The ID of the Log Analytics Workspace to which the OMS Agent should send data.
func (o GetKubernetesClusterOmsAgentOutput) LogAnalyticsWorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterOmsAgent) string { return v.LogAnalyticsWorkspaceId }).(pulumi.StringOutput)
}

// Is managed identity authentication for monitoring enabled?
func (o GetKubernetesClusterOmsAgentOutput) MsiAuthForMonitoringEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterOmsAgent) bool { return v.MsiAuthForMonitoringEnabled }).(pulumi.BoolOutput)
}

// An `omsAgentIdentity` block as defined below.
func (o GetKubernetesClusterOmsAgentOutput) OmsAgentIdentities() GetKubernetesClusterOmsAgentOmsAgentIdentityArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterOmsAgent) []GetKubernetesClusterOmsAgentOmsAgentIdentity {
		return v.OmsAgentIdentities
	}).(GetKubernetesClusterOmsAgentOmsAgentIdentityArrayOutput)
}

type GetKubernetesClusterOmsAgentArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterOmsAgentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterOmsAgent)(nil)).Elem()
}

func (o GetKubernetesClusterOmsAgentArrayOutput) ToGetKubernetesClusterOmsAgentArrayOutput() GetKubernetesClusterOmsAgentArrayOutput {
	return o
}

func (o GetKubernetesClusterOmsAgentArrayOutput) ToGetKubernetesClusterOmsAgentArrayOutputWithContext(ctx context.Context) GetKubernetesClusterOmsAgentArrayOutput {
	return o
}

func (o GetKubernetesClusterOmsAgentArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterOmsAgentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterOmsAgent {
		return vs[0].([]GetKubernetesClusterOmsAgent)[vs[1].(int)]
	}).(GetKubernetesClusterOmsAgentOutput)
}

type GetKubernetesClusterOmsAgentOmsAgentIdentity struct {
	// The Client ID of the user-defined Managed Identity assigned to the Kubelets.
	ClientId string `pulumi:"clientId"`
	// The Object ID of the user-defined Managed Identity assigned to the Kubelets.
	ObjectId string `pulumi:"objectId"`
	// The ID of the User Assigned Identity assigned to the Kubelets.
	UserAssignedIdentityId string `pulumi:"userAssignedIdentityId"`
}

// GetKubernetesClusterOmsAgentOmsAgentIdentityInput is an input type that accepts GetKubernetesClusterOmsAgentOmsAgentIdentityArgs and GetKubernetesClusterOmsAgentOmsAgentIdentityOutput values.
// You can construct a concrete instance of `GetKubernetesClusterOmsAgentOmsAgentIdentityInput` via:
//
//	GetKubernetesClusterOmsAgentOmsAgentIdentityArgs{...}
type GetKubernetesClusterOmsAgentOmsAgentIdentityInput interface {
	pulumi.Input

	ToGetKubernetesClusterOmsAgentOmsAgentIdentityOutput() GetKubernetesClusterOmsAgentOmsAgentIdentityOutput
	ToGetKubernetesClusterOmsAgentOmsAgentIdentityOutputWithContext(context.Context) GetKubernetesClusterOmsAgentOmsAgentIdentityOutput
}

type GetKubernetesClusterOmsAgentOmsAgentIdentityArgs struct {
	// The Client ID of the user-defined Managed Identity assigned to the Kubelets.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The Object ID of the user-defined Managed Identity assigned to the Kubelets.
	ObjectId pulumi.StringInput `pulumi:"objectId"`
	// The ID of the User Assigned Identity assigned to the Kubelets.
	UserAssignedIdentityId pulumi.StringInput `pulumi:"userAssignedIdentityId"`
}

func (GetKubernetesClusterOmsAgentOmsAgentIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterOmsAgentOmsAgentIdentity)(nil)).Elem()
}

func (i GetKubernetesClusterOmsAgentOmsAgentIdentityArgs) ToGetKubernetesClusterOmsAgentOmsAgentIdentityOutput() GetKubernetesClusterOmsAgentOmsAgentIdentityOutput {
	return i.ToGetKubernetesClusterOmsAgentOmsAgentIdentityOutputWithContext(context.Background())
}

func (i GetKubernetesClusterOmsAgentOmsAgentIdentityArgs) ToGetKubernetesClusterOmsAgentOmsAgentIdentityOutputWithContext(ctx context.Context) GetKubernetesClusterOmsAgentOmsAgentIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterOmsAgentOmsAgentIdentityOutput)
}

// GetKubernetesClusterOmsAgentOmsAgentIdentityArrayInput is an input type that accepts GetKubernetesClusterOmsAgentOmsAgentIdentityArray and GetKubernetesClusterOmsAgentOmsAgentIdentityArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterOmsAgentOmsAgentIdentityArrayInput` via:
//
//	GetKubernetesClusterOmsAgentOmsAgentIdentityArray{ GetKubernetesClusterOmsAgentOmsAgentIdentityArgs{...} }
type GetKubernetesClusterOmsAgentOmsAgentIdentityArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterOmsAgentOmsAgentIdentityArrayOutput() GetKubernetesClusterOmsAgentOmsAgentIdentityArrayOutput
	ToGetKubernetesClusterOmsAgentOmsAgentIdentityArrayOutputWithContext(context.Context) GetKubernetesClusterOmsAgentOmsAgentIdentityArrayOutput
}

type GetKubernetesClusterOmsAgentOmsAgentIdentityArray []GetKubernetesClusterOmsAgentOmsAgentIdentityInput

func (GetKubernetesClusterOmsAgentOmsAgentIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterOmsAgentOmsAgentIdentity)(nil)).Elem()
}

func (i GetKubernetesClusterOmsAgentOmsAgentIdentityArray) ToGetKubernetesClusterOmsAgentOmsAgentIdentityArrayOutput() GetKubernetesClusterOmsAgentOmsAgentIdentityArrayOutput {
	return i.ToGetKubernetesClusterOmsAgentOmsAgentIdentityArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterOmsAgentOmsAgentIdentityArray) ToGetKubernetesClusterOmsAgentOmsAgentIdentityArrayOutputWithContext(ctx context.Context) GetKubernetesClusterOmsAgentOmsAgentIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterOmsAgentOmsAgentIdentityArrayOutput)
}

type GetKubernetesClusterOmsAgentOmsAgentIdentityOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterOmsAgentOmsAgentIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterOmsAgentOmsAgentIdentity)(nil)).Elem()
}

func (o GetKubernetesClusterOmsAgentOmsAgentIdentityOutput) ToGetKubernetesClusterOmsAgentOmsAgentIdentityOutput() GetKubernetesClusterOmsAgentOmsAgentIdentityOutput {
	return o
}

func (o GetKubernetesClusterOmsAgentOmsAgentIdentityOutput) ToGetKubernetesClusterOmsAgentOmsAgentIdentityOutputWithContext(ctx context.Context) GetKubernetesClusterOmsAgentOmsAgentIdentityOutput {
	return o
}

// The Client ID of the user-defined Managed Identity assigned to the Kubelets.
func (o GetKubernetesClusterOmsAgentOmsAgentIdentityOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterOmsAgentOmsAgentIdentity) string { return v.ClientId }).(pulumi.StringOutput)
}

// The Object ID of the user-defined Managed Identity assigned to the Kubelets.
func (o GetKubernetesClusterOmsAgentOmsAgentIdentityOutput) ObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterOmsAgentOmsAgentIdentity) string { return v.ObjectId }).(pulumi.StringOutput)
}

// The ID of the User Assigned Identity assigned to the Kubelets.
func (o GetKubernetesClusterOmsAgentOmsAgentIdentityOutput) UserAssignedIdentityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterOmsAgentOmsAgentIdentity) string { return v.UserAssignedIdentityId }).(pulumi.StringOutput)
}

type GetKubernetesClusterOmsAgentOmsAgentIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterOmsAgentOmsAgentIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterOmsAgentOmsAgentIdentity)(nil)).Elem()
}

func (o GetKubernetesClusterOmsAgentOmsAgentIdentityArrayOutput) ToGetKubernetesClusterOmsAgentOmsAgentIdentityArrayOutput() GetKubernetesClusterOmsAgentOmsAgentIdentityArrayOutput {
	return o
}

func (o GetKubernetesClusterOmsAgentOmsAgentIdentityArrayOutput) ToGetKubernetesClusterOmsAgentOmsAgentIdentityArrayOutputWithContext(ctx context.Context) GetKubernetesClusterOmsAgentOmsAgentIdentityArrayOutput {
	return o
}

func (o GetKubernetesClusterOmsAgentOmsAgentIdentityArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterOmsAgentOmsAgentIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterOmsAgentOmsAgentIdentity {
		return vs[0].([]GetKubernetesClusterOmsAgentOmsAgentIdentity)[vs[1].(int)]
	}).(GetKubernetesClusterOmsAgentOmsAgentIdentityOutput)
}

type GetKubernetesClusterServiceMeshProfile struct {
	// Is Istio External Ingress Gateway enabled?
	ExternalIngressGatewayEnabled bool `pulumi:"externalIngressGatewayEnabled"`
	// Is Istio Internal Ingress Gateway enabled?
	InternalIngressGatewayEnabled bool `pulumi:"internalIngressGatewayEnabled"`
	// The mode of the service mesh.
	Mode string `pulumi:"mode"`
}

// GetKubernetesClusterServiceMeshProfileInput is an input type that accepts GetKubernetesClusterServiceMeshProfileArgs and GetKubernetesClusterServiceMeshProfileOutput values.
// You can construct a concrete instance of `GetKubernetesClusterServiceMeshProfileInput` via:
//
//	GetKubernetesClusterServiceMeshProfileArgs{...}
type GetKubernetesClusterServiceMeshProfileInput interface {
	pulumi.Input

	ToGetKubernetesClusterServiceMeshProfileOutput() GetKubernetesClusterServiceMeshProfileOutput
	ToGetKubernetesClusterServiceMeshProfileOutputWithContext(context.Context) GetKubernetesClusterServiceMeshProfileOutput
}

type GetKubernetesClusterServiceMeshProfileArgs struct {
	// Is Istio External Ingress Gateway enabled?
	ExternalIngressGatewayEnabled pulumi.BoolInput `pulumi:"externalIngressGatewayEnabled"`
	// Is Istio Internal Ingress Gateway enabled?
	InternalIngressGatewayEnabled pulumi.BoolInput `pulumi:"internalIngressGatewayEnabled"`
	// The mode of the service mesh.
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetKubernetesClusterServiceMeshProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterServiceMeshProfile)(nil)).Elem()
}

func (i GetKubernetesClusterServiceMeshProfileArgs) ToGetKubernetesClusterServiceMeshProfileOutput() GetKubernetesClusterServiceMeshProfileOutput {
	return i.ToGetKubernetesClusterServiceMeshProfileOutputWithContext(context.Background())
}

func (i GetKubernetesClusterServiceMeshProfileArgs) ToGetKubernetesClusterServiceMeshProfileOutputWithContext(ctx context.Context) GetKubernetesClusterServiceMeshProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterServiceMeshProfileOutput)
}

// GetKubernetesClusterServiceMeshProfileArrayInput is an input type that accepts GetKubernetesClusterServiceMeshProfileArray and GetKubernetesClusterServiceMeshProfileArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterServiceMeshProfileArrayInput` via:
//
//	GetKubernetesClusterServiceMeshProfileArray{ GetKubernetesClusterServiceMeshProfileArgs{...} }
type GetKubernetesClusterServiceMeshProfileArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterServiceMeshProfileArrayOutput() GetKubernetesClusterServiceMeshProfileArrayOutput
	ToGetKubernetesClusterServiceMeshProfileArrayOutputWithContext(context.Context) GetKubernetesClusterServiceMeshProfileArrayOutput
}

type GetKubernetesClusterServiceMeshProfileArray []GetKubernetesClusterServiceMeshProfileInput

func (GetKubernetesClusterServiceMeshProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterServiceMeshProfile)(nil)).Elem()
}

func (i GetKubernetesClusterServiceMeshProfileArray) ToGetKubernetesClusterServiceMeshProfileArrayOutput() GetKubernetesClusterServiceMeshProfileArrayOutput {
	return i.ToGetKubernetesClusterServiceMeshProfileArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterServiceMeshProfileArray) ToGetKubernetesClusterServiceMeshProfileArrayOutputWithContext(ctx context.Context) GetKubernetesClusterServiceMeshProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterServiceMeshProfileArrayOutput)
}

type GetKubernetesClusterServiceMeshProfileOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterServiceMeshProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterServiceMeshProfile)(nil)).Elem()
}

func (o GetKubernetesClusterServiceMeshProfileOutput) ToGetKubernetesClusterServiceMeshProfileOutput() GetKubernetesClusterServiceMeshProfileOutput {
	return o
}

func (o GetKubernetesClusterServiceMeshProfileOutput) ToGetKubernetesClusterServiceMeshProfileOutputWithContext(ctx context.Context) GetKubernetesClusterServiceMeshProfileOutput {
	return o
}

// Is Istio External Ingress Gateway enabled?
func (o GetKubernetesClusterServiceMeshProfileOutput) ExternalIngressGatewayEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterServiceMeshProfile) bool { return v.ExternalIngressGatewayEnabled }).(pulumi.BoolOutput)
}

// Is Istio Internal Ingress Gateway enabled?
func (o GetKubernetesClusterServiceMeshProfileOutput) InternalIngressGatewayEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterServiceMeshProfile) bool { return v.InternalIngressGatewayEnabled }).(pulumi.BoolOutput)
}

// The mode of the service mesh.
func (o GetKubernetesClusterServiceMeshProfileOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterServiceMeshProfile) string { return v.Mode }).(pulumi.StringOutput)
}

type GetKubernetesClusterServiceMeshProfileArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterServiceMeshProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterServiceMeshProfile)(nil)).Elem()
}

func (o GetKubernetesClusterServiceMeshProfileArrayOutput) ToGetKubernetesClusterServiceMeshProfileArrayOutput() GetKubernetesClusterServiceMeshProfileArrayOutput {
	return o
}

func (o GetKubernetesClusterServiceMeshProfileArrayOutput) ToGetKubernetesClusterServiceMeshProfileArrayOutputWithContext(ctx context.Context) GetKubernetesClusterServiceMeshProfileArrayOutput {
	return o
}

func (o GetKubernetesClusterServiceMeshProfileArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterServiceMeshProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterServiceMeshProfile {
		return vs[0].([]GetKubernetesClusterServiceMeshProfile)[vs[1].(int)]
	}).(GetKubernetesClusterServiceMeshProfileOutput)
}

type GetKubernetesClusterServicePrincipal struct {
	// The Client ID of the user-defined Managed Identity assigned to the Kubelets.
	ClientId string `pulumi:"clientId"`
}

// GetKubernetesClusterServicePrincipalInput is an input type that accepts GetKubernetesClusterServicePrincipalArgs and GetKubernetesClusterServicePrincipalOutput values.
// You can construct a concrete instance of `GetKubernetesClusterServicePrincipalInput` via:
//
//	GetKubernetesClusterServicePrincipalArgs{...}
type GetKubernetesClusterServicePrincipalInput interface {
	pulumi.Input

	ToGetKubernetesClusterServicePrincipalOutput() GetKubernetesClusterServicePrincipalOutput
	ToGetKubernetesClusterServicePrincipalOutputWithContext(context.Context) GetKubernetesClusterServicePrincipalOutput
}

type GetKubernetesClusterServicePrincipalArgs struct {
	// The Client ID of the user-defined Managed Identity assigned to the Kubelets.
	ClientId pulumi.StringInput `pulumi:"clientId"`
}

func (GetKubernetesClusterServicePrincipalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterServicePrincipal)(nil)).Elem()
}

func (i GetKubernetesClusterServicePrincipalArgs) ToGetKubernetesClusterServicePrincipalOutput() GetKubernetesClusterServicePrincipalOutput {
	return i.ToGetKubernetesClusterServicePrincipalOutputWithContext(context.Background())
}

func (i GetKubernetesClusterServicePrincipalArgs) ToGetKubernetesClusterServicePrincipalOutputWithContext(ctx context.Context) GetKubernetesClusterServicePrincipalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterServicePrincipalOutput)
}

// GetKubernetesClusterServicePrincipalArrayInput is an input type that accepts GetKubernetesClusterServicePrincipalArray and GetKubernetesClusterServicePrincipalArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterServicePrincipalArrayInput` via:
//
//	GetKubernetesClusterServicePrincipalArray{ GetKubernetesClusterServicePrincipalArgs{...} }
type GetKubernetesClusterServicePrincipalArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterServicePrincipalArrayOutput() GetKubernetesClusterServicePrincipalArrayOutput
	ToGetKubernetesClusterServicePrincipalArrayOutputWithContext(context.Context) GetKubernetesClusterServicePrincipalArrayOutput
}

type GetKubernetesClusterServicePrincipalArray []GetKubernetesClusterServicePrincipalInput

func (GetKubernetesClusterServicePrincipalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterServicePrincipal)(nil)).Elem()
}

func (i GetKubernetesClusterServicePrincipalArray) ToGetKubernetesClusterServicePrincipalArrayOutput() GetKubernetesClusterServicePrincipalArrayOutput {
	return i.ToGetKubernetesClusterServicePrincipalArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterServicePrincipalArray) ToGetKubernetesClusterServicePrincipalArrayOutputWithContext(ctx context.Context) GetKubernetesClusterServicePrincipalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterServicePrincipalArrayOutput)
}

type GetKubernetesClusterServicePrincipalOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterServicePrincipalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterServicePrincipal)(nil)).Elem()
}

func (o GetKubernetesClusterServicePrincipalOutput) ToGetKubernetesClusterServicePrincipalOutput() GetKubernetesClusterServicePrincipalOutput {
	return o
}

func (o GetKubernetesClusterServicePrincipalOutput) ToGetKubernetesClusterServicePrincipalOutputWithContext(ctx context.Context) GetKubernetesClusterServicePrincipalOutput {
	return o
}

// The Client ID of the user-defined Managed Identity assigned to the Kubelets.
func (o GetKubernetesClusterServicePrincipalOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterServicePrincipal) string { return v.ClientId }).(pulumi.StringOutput)
}

type GetKubernetesClusterServicePrincipalArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterServicePrincipalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterServicePrincipal)(nil)).Elem()
}

func (o GetKubernetesClusterServicePrincipalArrayOutput) ToGetKubernetesClusterServicePrincipalArrayOutput() GetKubernetesClusterServicePrincipalArrayOutput {
	return o
}

func (o GetKubernetesClusterServicePrincipalArrayOutput) ToGetKubernetesClusterServicePrincipalArrayOutputWithContext(ctx context.Context) GetKubernetesClusterServicePrincipalArrayOutput {
	return o
}

func (o GetKubernetesClusterServicePrincipalArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterServicePrincipalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterServicePrincipal {
		return vs[0].([]GetKubernetesClusterServicePrincipal)[vs[1].(int)]
	}).(GetKubernetesClusterServicePrincipalOutput)
}

type GetKubernetesClusterStorageProfile struct {
	// Is the Blob CSI driver enabled?
	BlobDriverEnabled bool `pulumi:"blobDriverEnabled"`
	// Is the Disk CSI driver enabled?
	DiskDriverEnabled bool `pulumi:"diskDriverEnabled"`
	// The configured Disk CSI Driver version.
	DiskDriverVersion string `pulumi:"diskDriverVersion"`
	// Is the File CSI driver enabled?
	FileDriverEnabled bool `pulumi:"fileDriverEnabled"`
	// Is the Snapshot Controller enabled?
	SnapshotControllerEnabled bool `pulumi:"snapshotControllerEnabled"`
}

// GetKubernetesClusterStorageProfileInput is an input type that accepts GetKubernetesClusterStorageProfileArgs and GetKubernetesClusterStorageProfileOutput values.
// You can construct a concrete instance of `GetKubernetesClusterStorageProfileInput` via:
//
//	GetKubernetesClusterStorageProfileArgs{...}
type GetKubernetesClusterStorageProfileInput interface {
	pulumi.Input

	ToGetKubernetesClusterStorageProfileOutput() GetKubernetesClusterStorageProfileOutput
	ToGetKubernetesClusterStorageProfileOutputWithContext(context.Context) GetKubernetesClusterStorageProfileOutput
}

type GetKubernetesClusterStorageProfileArgs struct {
	// Is the Blob CSI driver enabled?
	BlobDriverEnabled pulumi.BoolInput `pulumi:"blobDriverEnabled"`
	// Is the Disk CSI driver enabled?
	DiskDriverEnabled pulumi.BoolInput `pulumi:"diskDriverEnabled"`
	// The configured Disk CSI Driver version.
	DiskDriverVersion pulumi.StringInput `pulumi:"diskDriverVersion"`
	// Is the File CSI driver enabled?
	FileDriverEnabled pulumi.BoolInput `pulumi:"fileDriverEnabled"`
	// Is the Snapshot Controller enabled?
	SnapshotControllerEnabled pulumi.BoolInput `pulumi:"snapshotControllerEnabled"`
}

func (GetKubernetesClusterStorageProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterStorageProfile)(nil)).Elem()
}

func (i GetKubernetesClusterStorageProfileArgs) ToGetKubernetesClusterStorageProfileOutput() GetKubernetesClusterStorageProfileOutput {
	return i.ToGetKubernetesClusterStorageProfileOutputWithContext(context.Background())
}

func (i GetKubernetesClusterStorageProfileArgs) ToGetKubernetesClusterStorageProfileOutputWithContext(ctx context.Context) GetKubernetesClusterStorageProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterStorageProfileOutput)
}

// GetKubernetesClusterStorageProfileArrayInput is an input type that accepts GetKubernetesClusterStorageProfileArray and GetKubernetesClusterStorageProfileArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterStorageProfileArrayInput` via:
//
//	GetKubernetesClusterStorageProfileArray{ GetKubernetesClusterStorageProfileArgs{...} }
type GetKubernetesClusterStorageProfileArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterStorageProfileArrayOutput() GetKubernetesClusterStorageProfileArrayOutput
	ToGetKubernetesClusterStorageProfileArrayOutputWithContext(context.Context) GetKubernetesClusterStorageProfileArrayOutput
}

type GetKubernetesClusterStorageProfileArray []GetKubernetesClusterStorageProfileInput

func (GetKubernetesClusterStorageProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterStorageProfile)(nil)).Elem()
}

func (i GetKubernetesClusterStorageProfileArray) ToGetKubernetesClusterStorageProfileArrayOutput() GetKubernetesClusterStorageProfileArrayOutput {
	return i.ToGetKubernetesClusterStorageProfileArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterStorageProfileArray) ToGetKubernetesClusterStorageProfileArrayOutputWithContext(ctx context.Context) GetKubernetesClusterStorageProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterStorageProfileArrayOutput)
}

type GetKubernetesClusterStorageProfileOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterStorageProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterStorageProfile)(nil)).Elem()
}

func (o GetKubernetesClusterStorageProfileOutput) ToGetKubernetesClusterStorageProfileOutput() GetKubernetesClusterStorageProfileOutput {
	return o
}

func (o GetKubernetesClusterStorageProfileOutput) ToGetKubernetesClusterStorageProfileOutputWithContext(ctx context.Context) GetKubernetesClusterStorageProfileOutput {
	return o
}

// Is the Blob CSI driver enabled?
func (o GetKubernetesClusterStorageProfileOutput) BlobDriverEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterStorageProfile) bool { return v.BlobDriverEnabled }).(pulumi.BoolOutput)
}

// Is the Disk CSI driver enabled?
func (o GetKubernetesClusterStorageProfileOutput) DiskDriverEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterStorageProfile) bool { return v.DiskDriverEnabled }).(pulumi.BoolOutput)
}

// The configured Disk CSI Driver version.
func (o GetKubernetesClusterStorageProfileOutput) DiskDriverVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterStorageProfile) string { return v.DiskDriverVersion }).(pulumi.StringOutput)
}

// Is the File CSI driver enabled?
func (o GetKubernetesClusterStorageProfileOutput) FileDriverEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterStorageProfile) bool { return v.FileDriverEnabled }).(pulumi.BoolOutput)
}

// Is the Snapshot Controller enabled?
func (o GetKubernetesClusterStorageProfileOutput) SnapshotControllerEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterStorageProfile) bool { return v.SnapshotControllerEnabled }).(pulumi.BoolOutput)
}

type GetKubernetesClusterStorageProfileArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterStorageProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterStorageProfile)(nil)).Elem()
}

func (o GetKubernetesClusterStorageProfileArrayOutput) ToGetKubernetesClusterStorageProfileArrayOutput() GetKubernetesClusterStorageProfileArrayOutput {
	return o
}

func (o GetKubernetesClusterStorageProfileArrayOutput) ToGetKubernetesClusterStorageProfileArrayOutputWithContext(ctx context.Context) GetKubernetesClusterStorageProfileArrayOutput {
	return o
}

func (o GetKubernetesClusterStorageProfileArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterStorageProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterStorageProfile {
		return vs[0].([]GetKubernetesClusterStorageProfile)[vs[1].(int)]
	}).(GetKubernetesClusterStorageProfileOutput)
}

type GetKubernetesClusterWindowsProfile struct {
	// The username associated with the administrator account of the Windows VMs.
	AdminUsername string `pulumi:"adminUsername"`
}

// GetKubernetesClusterWindowsProfileInput is an input type that accepts GetKubernetesClusterWindowsProfileArgs and GetKubernetesClusterWindowsProfileOutput values.
// You can construct a concrete instance of `GetKubernetesClusterWindowsProfileInput` via:
//
//	GetKubernetesClusterWindowsProfileArgs{...}
type GetKubernetesClusterWindowsProfileInput interface {
	pulumi.Input

	ToGetKubernetesClusterWindowsProfileOutput() GetKubernetesClusterWindowsProfileOutput
	ToGetKubernetesClusterWindowsProfileOutputWithContext(context.Context) GetKubernetesClusterWindowsProfileOutput
}

type GetKubernetesClusterWindowsProfileArgs struct {
	// The username associated with the administrator account of the Windows VMs.
	AdminUsername pulumi.StringInput `pulumi:"adminUsername"`
}

func (GetKubernetesClusterWindowsProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterWindowsProfile)(nil)).Elem()
}

func (i GetKubernetesClusterWindowsProfileArgs) ToGetKubernetesClusterWindowsProfileOutput() GetKubernetesClusterWindowsProfileOutput {
	return i.ToGetKubernetesClusterWindowsProfileOutputWithContext(context.Background())
}

func (i GetKubernetesClusterWindowsProfileArgs) ToGetKubernetesClusterWindowsProfileOutputWithContext(ctx context.Context) GetKubernetesClusterWindowsProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterWindowsProfileOutput)
}

// GetKubernetesClusterWindowsProfileArrayInput is an input type that accepts GetKubernetesClusterWindowsProfileArray and GetKubernetesClusterWindowsProfileArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterWindowsProfileArrayInput` via:
//
//	GetKubernetesClusterWindowsProfileArray{ GetKubernetesClusterWindowsProfileArgs{...} }
type GetKubernetesClusterWindowsProfileArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterWindowsProfileArrayOutput() GetKubernetesClusterWindowsProfileArrayOutput
	ToGetKubernetesClusterWindowsProfileArrayOutputWithContext(context.Context) GetKubernetesClusterWindowsProfileArrayOutput
}

type GetKubernetesClusterWindowsProfileArray []GetKubernetesClusterWindowsProfileInput

func (GetKubernetesClusterWindowsProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterWindowsProfile)(nil)).Elem()
}

func (i GetKubernetesClusterWindowsProfileArray) ToGetKubernetesClusterWindowsProfileArrayOutput() GetKubernetesClusterWindowsProfileArrayOutput {
	return i.ToGetKubernetesClusterWindowsProfileArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterWindowsProfileArray) ToGetKubernetesClusterWindowsProfileArrayOutputWithContext(ctx context.Context) GetKubernetesClusterWindowsProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterWindowsProfileArrayOutput)
}

type GetKubernetesClusterWindowsProfileOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterWindowsProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterWindowsProfile)(nil)).Elem()
}

func (o GetKubernetesClusterWindowsProfileOutput) ToGetKubernetesClusterWindowsProfileOutput() GetKubernetesClusterWindowsProfileOutput {
	return o
}

func (o GetKubernetesClusterWindowsProfileOutput) ToGetKubernetesClusterWindowsProfileOutputWithContext(ctx context.Context) GetKubernetesClusterWindowsProfileOutput {
	return o
}

// The username associated with the administrator account of the Windows VMs.
func (o GetKubernetesClusterWindowsProfileOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterWindowsProfile) string { return v.AdminUsername }).(pulumi.StringOutput)
}

type GetKubernetesClusterWindowsProfileArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterWindowsProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterWindowsProfile)(nil)).Elem()
}

func (o GetKubernetesClusterWindowsProfileArrayOutput) ToGetKubernetesClusterWindowsProfileArrayOutput() GetKubernetesClusterWindowsProfileArrayOutput {
	return o
}

func (o GetKubernetesClusterWindowsProfileArrayOutput) ToGetKubernetesClusterWindowsProfileArrayOutputWithContext(ctx context.Context) GetKubernetesClusterWindowsProfileArrayOutput {
	return o
}

func (o GetKubernetesClusterWindowsProfileArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterWindowsProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterWindowsProfile {
		return vs[0].([]GetKubernetesClusterWindowsProfile)[vs[1].(int)]
	}).(GetKubernetesClusterWindowsProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectedRegistryNotificationInput)(nil)).Elem(), ConnectedRegistryNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectedRegistryNotificationArrayInput)(nil)).Elem(), ConnectedRegistryNotificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FluxConfigurationBlobStorageInput)(nil)).Elem(), FluxConfigurationBlobStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FluxConfigurationBlobStoragePtrInput)(nil)).Elem(), FluxConfigurationBlobStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FluxConfigurationBlobStorageManagedIdentityInput)(nil)).Elem(), FluxConfigurationBlobStorageManagedIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FluxConfigurationBlobStorageManagedIdentityPtrInput)(nil)).Elem(), FluxConfigurationBlobStorageManagedIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FluxConfigurationBlobStorageServicePrincipalInput)(nil)).Elem(), FluxConfigurationBlobStorageServicePrincipalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FluxConfigurationBlobStorageServicePrincipalPtrInput)(nil)).Elem(), FluxConfigurationBlobStorageServicePrincipalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FluxConfigurationBucketInput)(nil)).Elem(), FluxConfigurationBucketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FluxConfigurationBucketPtrInput)(nil)).Elem(), FluxConfigurationBucketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FluxConfigurationGitRepositoryInput)(nil)).Elem(), FluxConfigurationGitRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FluxConfigurationGitRepositoryPtrInput)(nil)).Elem(), FluxConfigurationGitRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FluxConfigurationKustomizationInput)(nil)).Elem(), FluxConfigurationKustomizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FluxConfigurationKustomizationArrayInput)(nil)).Elem(), FluxConfigurationKustomizationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupContainerInput)(nil)).Elem(), GroupContainerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupContainerArrayInput)(nil)).Elem(), GroupContainerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupContainerGpuInput)(nil)).Elem(), GroupContainerGpuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupContainerGpuPtrInput)(nil)).Elem(), GroupContainerGpuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupContainerGpuLimitInput)(nil)).Elem(), GroupContainerGpuLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupContainerGpuLimitPtrInput)(nil)).Elem(), GroupContainerGpuLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupContainerLivenessProbeInput)(nil)).Elem(), GroupContainerLivenessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupContainerLivenessProbePtrInput)(nil)).Elem(), GroupContainerLivenessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupContainerLivenessProbeHttpGetInput)(nil)).Elem(), GroupContainerLivenessProbeHttpGetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupContainerLivenessProbeHttpGetArrayInput)(nil)).Elem(), GroupContainerLivenessProbeHttpGetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupContainerPortInput)(nil)).Elem(), GroupContainerPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupContainerPortArrayInput)(nil)).Elem(), GroupContainerPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupContainerReadinessProbeInput)(nil)).Elem(), GroupContainerReadinessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupContainerReadinessProbePtrInput)(nil)).Elem(), GroupContainerReadinessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupContainerReadinessProbeHttpGetInput)(nil)).Elem(), GroupContainerReadinessProbeHttpGetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupContainerReadinessProbeHttpGetArrayInput)(nil)).Elem(), GroupContainerReadinessProbeHttpGetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupContainerSecurityInput)(nil)).Elem(), GroupContainerSecurityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupContainerSecurityArrayInput)(nil)).Elem(), GroupContainerSecurityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupContainerVolumeInput)(nil)).Elem(), GroupContainerVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupContainerVolumeArrayInput)(nil)).Elem(), GroupContainerVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupContainerVolumeGitRepoInput)(nil)).Elem(), GroupContainerVolumeGitRepoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupContainerVolumeGitRepoPtrInput)(nil)).Elem(), GroupContainerVolumeGitRepoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupDiagnosticsInput)(nil)).Elem(), GroupDiagnosticsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupDiagnosticsPtrInput)(nil)).Elem(), GroupDiagnosticsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupDiagnosticsLogAnalyticsInput)(nil)).Elem(), GroupDiagnosticsLogAnalyticsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupDiagnosticsLogAnalyticsPtrInput)(nil)).Elem(), GroupDiagnosticsLogAnalyticsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupDnsConfigInput)(nil)).Elem(), GroupDnsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupDnsConfigPtrInput)(nil)).Elem(), GroupDnsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupExposedPortInput)(nil)).Elem(), GroupExposedPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupExposedPortArrayInput)(nil)).Elem(), GroupExposedPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupIdentityInput)(nil)).Elem(), GroupIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupIdentityPtrInput)(nil)).Elem(), GroupIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupImageRegistryCredentialInput)(nil)).Elem(), GroupImageRegistryCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupImageRegistryCredentialArrayInput)(nil)).Elem(), GroupImageRegistryCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupInitContainerInput)(nil)).Elem(), GroupInitContainerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupInitContainerArrayInput)(nil)).Elem(), GroupInitContainerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupInitContainerSecurityInput)(nil)).Elem(), GroupInitContainerSecurityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupInitContainerSecurityArrayInput)(nil)).Elem(), GroupInitContainerSecurityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupInitContainerVolumeInput)(nil)).Elem(), GroupInitContainerVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupInitContainerVolumeArrayInput)(nil)).Elem(), GroupInitContainerVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupInitContainerVolumeGitRepoInput)(nil)).Elem(), GroupInitContainerVolumeGitRepoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupInitContainerVolumeGitRepoPtrInput)(nil)).Elem(), GroupInitContainerVolumeGitRepoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterAciConnectorLinuxInput)(nil)).Elem(), KubernetesClusterAciConnectorLinuxArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterAciConnectorLinuxPtrInput)(nil)).Elem(), KubernetesClusterAciConnectorLinuxArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterAciConnectorLinuxConnectorIdentityInput)(nil)).Elem(), KubernetesClusterAciConnectorLinuxConnectorIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterAciConnectorLinuxConnectorIdentityArrayInput)(nil)).Elem(), KubernetesClusterAciConnectorLinuxConnectorIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterApiServerAccessProfileInput)(nil)).Elem(), KubernetesClusterApiServerAccessProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterApiServerAccessProfilePtrInput)(nil)).Elem(), KubernetesClusterApiServerAccessProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterAutoScalerProfileInput)(nil)).Elem(), KubernetesClusterAutoScalerProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterAutoScalerProfilePtrInput)(nil)).Elem(), KubernetesClusterAutoScalerProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlInput)(nil)).Elem(), KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrInput)(nil)).Elem(), KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterConfidentialComputingInput)(nil)).Elem(), KubernetesClusterConfidentialComputingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterConfidentialComputingPtrInput)(nil)).Elem(), KubernetesClusterConfidentialComputingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterDefaultNodePoolInput)(nil)).Elem(), KubernetesClusterDefaultNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterDefaultNodePoolPtrInput)(nil)).Elem(), KubernetesClusterDefaultNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterDefaultNodePoolKubeletConfigInput)(nil)).Elem(), KubernetesClusterDefaultNodePoolKubeletConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterDefaultNodePoolKubeletConfigPtrInput)(nil)).Elem(), KubernetesClusterDefaultNodePoolKubeletConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterDefaultNodePoolLinuxOsConfigInput)(nil)).Elem(), KubernetesClusterDefaultNodePoolLinuxOsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterDefaultNodePoolLinuxOsConfigPtrInput)(nil)).Elem(), KubernetesClusterDefaultNodePoolLinuxOsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigInput)(nil)).Elem(), KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrInput)(nil)).Elem(), KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterDefaultNodePoolNodeNetworkProfileInput)(nil)).Elem(), KubernetesClusterDefaultNodePoolNodeNetworkProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrInput)(nil)).Elem(), KubernetesClusterDefaultNodePoolNodeNetworkProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterDefaultNodePoolUpgradeSettingsInput)(nil)).Elem(), KubernetesClusterDefaultNodePoolUpgradeSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterDefaultNodePoolUpgradeSettingsPtrInput)(nil)).Elem(), KubernetesClusterDefaultNodePoolUpgradeSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterExtensionAksAssignedIdentityInput)(nil)).Elem(), KubernetesClusterExtensionAksAssignedIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterExtensionAksAssignedIdentityArrayInput)(nil)).Elem(), KubernetesClusterExtensionAksAssignedIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterExtensionPlanInput)(nil)).Elem(), KubernetesClusterExtensionPlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterExtensionPlanPtrInput)(nil)).Elem(), KubernetesClusterExtensionPlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterHttpProxyConfigInput)(nil)).Elem(), KubernetesClusterHttpProxyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterHttpProxyConfigPtrInput)(nil)).Elem(), KubernetesClusterHttpProxyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterIdentityInput)(nil)).Elem(), KubernetesClusterIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterIdentityPtrInput)(nil)).Elem(), KubernetesClusterIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterIngressApplicationGatewayInput)(nil)).Elem(), KubernetesClusterIngressApplicationGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterIngressApplicationGatewayPtrInput)(nil)).Elem(), KubernetesClusterIngressApplicationGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityInput)(nil)).Elem(), KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayInput)(nil)).Elem(), KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterKeyManagementServiceInput)(nil)).Elem(), KubernetesClusterKeyManagementServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterKeyManagementServicePtrInput)(nil)).Elem(), KubernetesClusterKeyManagementServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterKeyVaultSecretsProviderInput)(nil)).Elem(), KubernetesClusterKeyVaultSecretsProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterKeyVaultSecretsProviderPtrInput)(nil)).Elem(), KubernetesClusterKeyVaultSecretsProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterKeyVaultSecretsProviderSecretIdentityInput)(nil)).Elem(), KubernetesClusterKeyVaultSecretsProviderSecretIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayInput)(nil)).Elem(), KubernetesClusterKeyVaultSecretsProviderSecretIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterKubeAdminConfigInput)(nil)).Elem(), KubernetesClusterKubeAdminConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterKubeAdminConfigArrayInput)(nil)).Elem(), KubernetesClusterKubeAdminConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterKubeConfigInput)(nil)).Elem(), KubernetesClusterKubeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterKubeConfigArrayInput)(nil)).Elem(), KubernetesClusterKubeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterKubeletIdentityInput)(nil)).Elem(), KubernetesClusterKubeletIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterKubeletIdentityPtrInput)(nil)).Elem(), KubernetesClusterKubeletIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterLinuxProfileInput)(nil)).Elem(), KubernetesClusterLinuxProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterLinuxProfilePtrInput)(nil)).Elem(), KubernetesClusterLinuxProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterLinuxProfileSshKeyInput)(nil)).Elem(), KubernetesClusterLinuxProfileSshKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterLinuxProfileSshKeyPtrInput)(nil)).Elem(), KubernetesClusterLinuxProfileSshKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterMaintenanceWindowInput)(nil)).Elem(), KubernetesClusterMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterMaintenanceWindowPtrInput)(nil)).Elem(), KubernetesClusterMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterMaintenanceWindowAllowedInput)(nil)).Elem(), KubernetesClusterMaintenanceWindowAllowedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterMaintenanceWindowAllowedArrayInput)(nil)).Elem(), KubernetesClusterMaintenanceWindowAllowedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterMaintenanceWindowAutoUpgradeInput)(nil)).Elem(), KubernetesClusterMaintenanceWindowAutoUpgradeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterMaintenanceWindowAutoUpgradePtrInput)(nil)).Elem(), KubernetesClusterMaintenanceWindowAutoUpgradeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedInput)(nil)).Elem(), KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayInput)(nil)).Elem(), KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterMaintenanceWindowNodeOsInput)(nil)).Elem(), KubernetesClusterMaintenanceWindowNodeOsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterMaintenanceWindowNodeOsPtrInput)(nil)).Elem(), KubernetesClusterMaintenanceWindowNodeOsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterMaintenanceWindowNodeOsNotAllowedInput)(nil)).Elem(), KubernetesClusterMaintenanceWindowNodeOsNotAllowedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayInput)(nil)).Elem(), KubernetesClusterMaintenanceWindowNodeOsNotAllowedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterMaintenanceWindowNotAllowedInput)(nil)).Elem(), KubernetesClusterMaintenanceWindowNotAllowedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterMaintenanceWindowNotAllowedArrayInput)(nil)).Elem(), KubernetesClusterMaintenanceWindowNotAllowedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterMicrosoftDefenderInput)(nil)).Elem(), KubernetesClusterMicrosoftDefenderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterMicrosoftDefenderPtrInput)(nil)).Elem(), KubernetesClusterMicrosoftDefenderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterMonitorMetricsInput)(nil)).Elem(), KubernetesClusterMonitorMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterMonitorMetricsPtrInput)(nil)).Elem(), KubernetesClusterMonitorMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterNetworkProfileInput)(nil)).Elem(), KubernetesClusterNetworkProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterNetworkProfilePtrInput)(nil)).Elem(), KubernetesClusterNetworkProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterNetworkProfileLoadBalancerProfileInput)(nil)).Elem(), KubernetesClusterNetworkProfileLoadBalancerProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterNetworkProfileLoadBalancerProfilePtrInput)(nil)).Elem(), KubernetesClusterNetworkProfileLoadBalancerProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterNetworkProfileNatGatewayProfileInput)(nil)).Elem(), KubernetesClusterNetworkProfileNatGatewayProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterNetworkProfileNatGatewayProfilePtrInput)(nil)).Elem(), KubernetesClusterNetworkProfileNatGatewayProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterNodePoolKubeletConfigInput)(nil)).Elem(), KubernetesClusterNodePoolKubeletConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterNodePoolKubeletConfigPtrInput)(nil)).Elem(), KubernetesClusterNodePoolKubeletConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterNodePoolLinuxOsConfigInput)(nil)).Elem(), KubernetesClusterNodePoolLinuxOsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterNodePoolLinuxOsConfigPtrInput)(nil)).Elem(), KubernetesClusterNodePoolLinuxOsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterNodePoolLinuxOsConfigSysctlConfigInput)(nil)).Elem(), KubernetesClusterNodePoolLinuxOsConfigSysctlConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrInput)(nil)).Elem(), KubernetesClusterNodePoolLinuxOsConfigSysctlConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterNodePoolNodeNetworkProfileInput)(nil)).Elem(), KubernetesClusterNodePoolNodeNetworkProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterNodePoolNodeNetworkProfilePtrInput)(nil)).Elem(), KubernetesClusterNodePoolNodeNetworkProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterNodePoolUpgradeSettingsInput)(nil)).Elem(), KubernetesClusterNodePoolUpgradeSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterNodePoolUpgradeSettingsPtrInput)(nil)).Elem(), KubernetesClusterNodePoolUpgradeSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterNodePoolWindowsProfileInput)(nil)).Elem(), KubernetesClusterNodePoolWindowsProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterNodePoolWindowsProfilePtrInput)(nil)).Elem(), KubernetesClusterNodePoolWindowsProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterOmsAgentInput)(nil)).Elem(), KubernetesClusterOmsAgentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterOmsAgentPtrInput)(nil)).Elem(), KubernetesClusterOmsAgentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterOmsAgentOmsAgentIdentityInput)(nil)).Elem(), KubernetesClusterOmsAgentOmsAgentIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterOmsAgentOmsAgentIdentityArrayInput)(nil)).Elem(), KubernetesClusterOmsAgentOmsAgentIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterServiceMeshProfileInput)(nil)).Elem(), KubernetesClusterServiceMeshProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterServiceMeshProfilePtrInput)(nil)).Elem(), KubernetesClusterServiceMeshProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterServicePrincipalInput)(nil)).Elem(), KubernetesClusterServicePrincipalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterServicePrincipalPtrInput)(nil)).Elem(), KubernetesClusterServicePrincipalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterStorageProfileInput)(nil)).Elem(), KubernetesClusterStorageProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterStorageProfilePtrInput)(nil)).Elem(), KubernetesClusterStorageProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterWebAppRoutingInput)(nil)).Elem(), KubernetesClusterWebAppRoutingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterWebAppRoutingPtrInput)(nil)).Elem(), KubernetesClusterWebAppRoutingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterWebAppRoutingWebAppRoutingIdentityInput)(nil)).Elem(), KubernetesClusterWebAppRoutingWebAppRoutingIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayInput)(nil)).Elem(), KubernetesClusterWebAppRoutingWebAppRoutingIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterWindowsProfileInput)(nil)).Elem(), KubernetesClusterWindowsProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterWindowsProfilePtrInput)(nil)).Elem(), KubernetesClusterWindowsProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterWindowsProfileGmsaInput)(nil)).Elem(), KubernetesClusterWindowsProfileGmsaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterWindowsProfileGmsaPtrInput)(nil)).Elem(), KubernetesClusterWindowsProfileGmsaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterWorkloadAutoscalerProfileInput)(nil)).Elem(), KubernetesClusterWorkloadAutoscalerProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterWorkloadAutoscalerProfilePtrInput)(nil)).Elem(), KubernetesClusterWorkloadAutoscalerProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesFleetManagerHubProfileInput)(nil)).Elem(), KubernetesFleetManagerHubProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesFleetManagerHubProfilePtrInput)(nil)).Elem(), KubernetesFleetManagerHubProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryEncryptionInput)(nil)).Elem(), RegistryEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryEncryptionPtrInput)(nil)).Elem(), RegistryEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryGeoreplicationInput)(nil)).Elem(), RegistryGeoreplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryGeoreplicationArrayInput)(nil)).Elem(), RegistryGeoreplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryIdentityInput)(nil)).Elem(), RegistryIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryIdentityPtrInput)(nil)).Elem(), RegistryIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryNetworkRuleSetInput)(nil)).Elem(), RegistryNetworkRuleSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryNetworkRuleSetPtrInput)(nil)).Elem(), RegistryNetworkRuleSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryNetworkRuleSetIpRuleInput)(nil)).Elem(), RegistryNetworkRuleSetIpRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryNetworkRuleSetIpRuleArrayInput)(nil)).Elem(), RegistryNetworkRuleSetIpRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryNetworkRuleSetVirtualNetworkInput)(nil)).Elem(), RegistryNetworkRuleSetVirtualNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryNetworkRuleSetVirtualNetworkArrayInput)(nil)).Elem(), RegistryNetworkRuleSetVirtualNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryRetentionPolicyInput)(nil)).Elem(), RegistryRetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryRetentionPolicyPtrInput)(nil)).Elem(), RegistryRetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTaskAgentSettingInput)(nil)).Elem(), RegistryTaskAgentSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTaskAgentSettingPtrInput)(nil)).Elem(), RegistryTaskAgentSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTaskBaseImageTriggerInput)(nil)).Elem(), RegistryTaskBaseImageTriggerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTaskBaseImageTriggerPtrInput)(nil)).Elem(), RegistryTaskBaseImageTriggerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTaskDockerStepInput)(nil)).Elem(), RegistryTaskDockerStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTaskDockerStepPtrInput)(nil)).Elem(), RegistryTaskDockerStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTaskEncodedStepInput)(nil)).Elem(), RegistryTaskEncodedStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTaskEncodedStepPtrInput)(nil)).Elem(), RegistryTaskEncodedStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTaskFileStepInput)(nil)).Elem(), RegistryTaskFileStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTaskFileStepPtrInput)(nil)).Elem(), RegistryTaskFileStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTaskIdentityInput)(nil)).Elem(), RegistryTaskIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTaskIdentityPtrInput)(nil)).Elem(), RegistryTaskIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTaskPlatformInput)(nil)).Elem(), RegistryTaskPlatformArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTaskPlatformPtrInput)(nil)).Elem(), RegistryTaskPlatformArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTaskRegistryCredentialInput)(nil)).Elem(), RegistryTaskRegistryCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTaskRegistryCredentialPtrInput)(nil)).Elem(), RegistryTaskRegistryCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTaskRegistryCredentialCustomInput)(nil)).Elem(), RegistryTaskRegistryCredentialCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTaskRegistryCredentialCustomArrayInput)(nil)).Elem(), RegistryTaskRegistryCredentialCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTaskRegistryCredentialSourceInput)(nil)).Elem(), RegistryTaskRegistryCredentialSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTaskRegistryCredentialSourcePtrInput)(nil)).Elem(), RegistryTaskRegistryCredentialSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTaskSourceTriggerInput)(nil)).Elem(), RegistryTaskSourceTriggerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTaskSourceTriggerArrayInput)(nil)).Elem(), RegistryTaskSourceTriggerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTaskSourceTriggerAuthenticationInput)(nil)).Elem(), RegistryTaskSourceTriggerAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTaskSourceTriggerAuthenticationPtrInput)(nil)).Elem(), RegistryTaskSourceTriggerAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTaskTimerTriggerInput)(nil)).Elem(), RegistryTaskTimerTriggerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTaskTimerTriggerArrayInput)(nil)).Elem(), RegistryTaskTimerTriggerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTrustPolicyInput)(nil)).Elem(), RegistryTrustPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTrustPolicyPtrInput)(nil)).Elem(), RegistryTrustPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TokenPasswordPassword1Input)(nil)).Elem(), TokenPasswordPassword1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*TokenPasswordPassword1PtrInput)(nil)).Elem(), TokenPasswordPassword1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*TokenPasswordPassword2Input)(nil)).Elem(), TokenPasswordPassword2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*TokenPasswordPassword2PtrInput)(nil)).Elem(), TokenPasswordPassword2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolUpgradeSettingInput)(nil)).Elem(), GetClusterNodePoolUpgradeSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterNodePoolUpgradeSettingArrayInput)(nil)).Elem(), GetClusterNodePoolUpgradeSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupIdentityInput)(nil)).Elem(), GetGroupIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupIdentityArrayInput)(nil)).Elem(), GetGroupIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterAciConnectorLinuxInput)(nil)).Elem(), GetKubernetesClusterAciConnectorLinuxArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterAciConnectorLinuxArrayInput)(nil)).Elem(), GetKubernetesClusterAciConnectorLinuxArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterAgentPoolProfileInput)(nil)).Elem(), GetKubernetesClusterAgentPoolProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterAgentPoolProfileArrayInput)(nil)).Elem(), GetKubernetesClusterAgentPoolProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterAgentPoolProfileUpgradeSettingInput)(nil)).Elem(), GetKubernetesClusterAgentPoolProfileUpgradeSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterAgentPoolProfileUpgradeSettingArrayInput)(nil)).Elem(), GetKubernetesClusterAgentPoolProfileUpgradeSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlInput)(nil)).Elem(), GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArrayInput)(nil)).Elem(), GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterIdentityInput)(nil)).Elem(), GetKubernetesClusterIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterIdentityArrayInput)(nil)).Elem(), GetKubernetesClusterIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterIngressApplicationGatewayInput)(nil)).Elem(), GetKubernetesClusterIngressApplicationGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterIngressApplicationGatewayArrayInput)(nil)).Elem(), GetKubernetesClusterIngressApplicationGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityInput)(nil)).Elem(), GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayInput)(nil)).Elem(), GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterKeyManagementServiceInput)(nil)).Elem(), GetKubernetesClusterKeyManagementServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterKeyManagementServiceArrayInput)(nil)).Elem(), GetKubernetesClusterKeyManagementServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterKeyVaultSecretsProviderInput)(nil)).Elem(), GetKubernetesClusterKeyVaultSecretsProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterKeyVaultSecretsProviderArrayInput)(nil)).Elem(), GetKubernetesClusterKeyVaultSecretsProviderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityInput)(nil)).Elem(), GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayInput)(nil)).Elem(), GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterKubeAdminConfigInput)(nil)).Elem(), GetKubernetesClusterKubeAdminConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterKubeAdminConfigArrayInput)(nil)).Elem(), GetKubernetesClusterKubeAdminConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterKubeConfigInput)(nil)).Elem(), GetKubernetesClusterKubeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterKubeConfigArrayInput)(nil)).Elem(), GetKubernetesClusterKubeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterKubeletIdentityInput)(nil)).Elem(), GetKubernetesClusterKubeletIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterKubeletIdentityArrayInput)(nil)).Elem(), GetKubernetesClusterKubeletIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterLinuxProfileInput)(nil)).Elem(), GetKubernetesClusterLinuxProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterLinuxProfileArrayInput)(nil)).Elem(), GetKubernetesClusterLinuxProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterLinuxProfileSshKeyInput)(nil)).Elem(), GetKubernetesClusterLinuxProfileSshKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterLinuxProfileSshKeyArrayInput)(nil)).Elem(), GetKubernetesClusterLinuxProfileSshKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterMicrosoftDefenderInput)(nil)).Elem(), GetKubernetesClusterMicrosoftDefenderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterMicrosoftDefenderArrayInput)(nil)).Elem(), GetKubernetesClusterMicrosoftDefenderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterNetworkProfileInput)(nil)).Elem(), GetKubernetesClusterNetworkProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterNetworkProfileArrayInput)(nil)).Elem(), GetKubernetesClusterNetworkProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterOmsAgentInput)(nil)).Elem(), GetKubernetesClusterOmsAgentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterOmsAgentArrayInput)(nil)).Elem(), GetKubernetesClusterOmsAgentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterOmsAgentOmsAgentIdentityInput)(nil)).Elem(), GetKubernetesClusterOmsAgentOmsAgentIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterOmsAgentOmsAgentIdentityArrayInput)(nil)).Elem(), GetKubernetesClusterOmsAgentOmsAgentIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterServiceMeshProfileInput)(nil)).Elem(), GetKubernetesClusterServiceMeshProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterServiceMeshProfileArrayInput)(nil)).Elem(), GetKubernetesClusterServiceMeshProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterServicePrincipalInput)(nil)).Elem(), GetKubernetesClusterServicePrincipalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterServicePrincipalArrayInput)(nil)).Elem(), GetKubernetesClusterServicePrincipalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterStorageProfileInput)(nil)).Elem(), GetKubernetesClusterStorageProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterStorageProfileArrayInput)(nil)).Elem(), GetKubernetesClusterStorageProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterWindowsProfileInput)(nil)).Elem(), GetKubernetesClusterWindowsProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterWindowsProfileArrayInput)(nil)).Elem(), GetKubernetesClusterWindowsProfileArray{})
	pulumi.RegisterOutputType(ConnectedRegistryNotificationOutput{})
	pulumi.RegisterOutputType(ConnectedRegistryNotificationArrayOutput{})
	pulumi.RegisterOutputType(FluxConfigurationBlobStorageOutput{})
	pulumi.RegisterOutputType(FluxConfigurationBlobStoragePtrOutput{})
	pulumi.RegisterOutputType(FluxConfigurationBlobStorageManagedIdentityOutput{})
	pulumi.RegisterOutputType(FluxConfigurationBlobStorageManagedIdentityPtrOutput{})
	pulumi.RegisterOutputType(FluxConfigurationBlobStorageServicePrincipalOutput{})
	pulumi.RegisterOutputType(FluxConfigurationBlobStorageServicePrincipalPtrOutput{})
	pulumi.RegisterOutputType(FluxConfigurationBucketOutput{})
	pulumi.RegisterOutputType(FluxConfigurationBucketPtrOutput{})
	pulumi.RegisterOutputType(FluxConfigurationGitRepositoryOutput{})
	pulumi.RegisterOutputType(FluxConfigurationGitRepositoryPtrOutput{})
	pulumi.RegisterOutputType(FluxConfigurationKustomizationOutput{})
	pulumi.RegisterOutputType(FluxConfigurationKustomizationArrayOutput{})
	pulumi.RegisterOutputType(GroupContainerOutput{})
	pulumi.RegisterOutputType(GroupContainerArrayOutput{})
	pulumi.RegisterOutputType(GroupContainerGpuOutput{})
	pulumi.RegisterOutputType(GroupContainerGpuPtrOutput{})
	pulumi.RegisterOutputType(GroupContainerGpuLimitOutput{})
	pulumi.RegisterOutputType(GroupContainerGpuLimitPtrOutput{})
	pulumi.RegisterOutputType(GroupContainerLivenessProbeOutput{})
	pulumi.RegisterOutputType(GroupContainerLivenessProbePtrOutput{})
	pulumi.RegisterOutputType(GroupContainerLivenessProbeHttpGetOutput{})
	pulumi.RegisterOutputType(GroupContainerLivenessProbeHttpGetArrayOutput{})
	pulumi.RegisterOutputType(GroupContainerPortOutput{})
	pulumi.RegisterOutputType(GroupContainerPortArrayOutput{})
	pulumi.RegisterOutputType(GroupContainerReadinessProbeOutput{})
	pulumi.RegisterOutputType(GroupContainerReadinessProbePtrOutput{})
	pulumi.RegisterOutputType(GroupContainerReadinessProbeHttpGetOutput{})
	pulumi.RegisterOutputType(GroupContainerReadinessProbeHttpGetArrayOutput{})
	pulumi.RegisterOutputType(GroupContainerSecurityOutput{})
	pulumi.RegisterOutputType(GroupContainerSecurityArrayOutput{})
	pulumi.RegisterOutputType(GroupContainerVolumeOutput{})
	pulumi.RegisterOutputType(GroupContainerVolumeArrayOutput{})
	pulumi.RegisterOutputType(GroupContainerVolumeGitRepoOutput{})
	pulumi.RegisterOutputType(GroupContainerVolumeGitRepoPtrOutput{})
	pulumi.RegisterOutputType(GroupDiagnosticsOutput{})
	pulumi.RegisterOutputType(GroupDiagnosticsPtrOutput{})
	pulumi.RegisterOutputType(GroupDiagnosticsLogAnalyticsOutput{})
	pulumi.RegisterOutputType(GroupDiagnosticsLogAnalyticsPtrOutput{})
	pulumi.RegisterOutputType(GroupDnsConfigOutput{})
	pulumi.RegisterOutputType(GroupDnsConfigPtrOutput{})
	pulumi.RegisterOutputType(GroupExposedPortOutput{})
	pulumi.RegisterOutputType(GroupExposedPortArrayOutput{})
	pulumi.RegisterOutputType(GroupIdentityOutput{})
	pulumi.RegisterOutputType(GroupIdentityPtrOutput{})
	pulumi.RegisterOutputType(GroupImageRegistryCredentialOutput{})
	pulumi.RegisterOutputType(GroupImageRegistryCredentialArrayOutput{})
	pulumi.RegisterOutputType(GroupInitContainerOutput{})
	pulumi.RegisterOutputType(GroupInitContainerArrayOutput{})
	pulumi.RegisterOutputType(GroupInitContainerSecurityOutput{})
	pulumi.RegisterOutputType(GroupInitContainerSecurityArrayOutput{})
	pulumi.RegisterOutputType(GroupInitContainerVolumeOutput{})
	pulumi.RegisterOutputType(GroupInitContainerVolumeArrayOutput{})
	pulumi.RegisterOutputType(GroupInitContainerVolumeGitRepoOutput{})
	pulumi.RegisterOutputType(GroupInitContainerVolumeGitRepoPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterAciConnectorLinuxOutput{})
	pulumi.RegisterOutputType(KubernetesClusterAciConnectorLinuxPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterAciConnectorLinuxConnectorIdentityOutput{})
	pulumi.RegisterOutputType(KubernetesClusterAciConnectorLinuxConnectorIdentityArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterApiServerAccessProfileOutput{})
	pulumi.RegisterOutputType(KubernetesClusterApiServerAccessProfilePtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterAutoScalerProfileOutput{})
	pulumi.RegisterOutputType(KubernetesClusterAutoScalerProfilePtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput{})
	pulumi.RegisterOutputType(KubernetesClusterAzureActiveDirectoryRoleBasedAccessControlPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterConfidentialComputingOutput{})
	pulumi.RegisterOutputType(KubernetesClusterConfidentialComputingPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterDefaultNodePoolOutput{})
	pulumi.RegisterOutputType(KubernetesClusterDefaultNodePoolPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterDefaultNodePoolKubeletConfigOutput{})
	pulumi.RegisterOutputType(KubernetesClusterDefaultNodePoolKubeletConfigPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterDefaultNodePoolLinuxOsConfigOutput{})
	pulumi.RegisterOutputType(KubernetesClusterDefaultNodePoolLinuxOsConfigPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigOutput{})
	pulumi.RegisterOutputType(KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterDefaultNodePoolNodeNetworkProfileOutput{})
	pulumi.RegisterOutputType(KubernetesClusterDefaultNodePoolNodeNetworkProfilePtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterDefaultNodePoolUpgradeSettingsOutput{})
	pulumi.RegisterOutputType(KubernetesClusterDefaultNodePoolUpgradeSettingsPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterExtensionAksAssignedIdentityOutput{})
	pulumi.RegisterOutputType(KubernetesClusterExtensionAksAssignedIdentityArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterExtensionPlanOutput{})
	pulumi.RegisterOutputType(KubernetesClusterExtensionPlanPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterHttpProxyConfigOutput{})
	pulumi.RegisterOutputType(KubernetesClusterHttpProxyConfigPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterIdentityOutput{})
	pulumi.RegisterOutputType(KubernetesClusterIdentityPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterIngressApplicationGatewayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterIngressApplicationGatewayPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput{})
	pulumi.RegisterOutputType(KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterKeyManagementServiceOutput{})
	pulumi.RegisterOutputType(KubernetesClusterKeyManagementServicePtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterKeyVaultSecretsProviderOutput{})
	pulumi.RegisterOutputType(KubernetesClusterKeyVaultSecretsProviderPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput{})
	pulumi.RegisterOutputType(KubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterKubeAdminConfigOutput{})
	pulumi.RegisterOutputType(KubernetesClusterKubeAdminConfigArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterKubeConfigOutput{})
	pulumi.RegisterOutputType(KubernetesClusterKubeConfigArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterKubeletIdentityOutput{})
	pulumi.RegisterOutputType(KubernetesClusterKubeletIdentityPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterLinuxProfileOutput{})
	pulumi.RegisterOutputType(KubernetesClusterLinuxProfilePtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterLinuxProfileSshKeyOutput{})
	pulumi.RegisterOutputType(KubernetesClusterLinuxProfileSshKeyPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMaintenanceWindowPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMaintenanceWindowAllowedOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMaintenanceWindowAllowedArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMaintenanceWindowAutoUpgradeOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMaintenanceWindowAutoUpgradePtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowedArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMaintenanceWindowNodeOsOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMaintenanceWindowNodeOsPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMaintenanceWindowNodeOsNotAllowedOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMaintenanceWindowNodeOsNotAllowedArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMaintenanceWindowNotAllowedOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMaintenanceWindowNotAllowedArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMicrosoftDefenderOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMicrosoftDefenderPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMonitorMetricsOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMonitorMetricsPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNetworkProfileOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNetworkProfilePtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNetworkProfileLoadBalancerProfileOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNetworkProfileNatGatewayProfileOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNetworkProfileNatGatewayProfilePtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNodePoolKubeletConfigOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNodePoolKubeletConfigPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNodePoolLinuxOsConfigOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNodePoolLinuxOsConfigPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNodePoolLinuxOsConfigSysctlConfigOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNodePoolLinuxOsConfigSysctlConfigPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNodePoolNodeNetworkProfileOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNodePoolNodeNetworkProfilePtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNodePoolUpgradeSettingsOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNodePoolUpgradeSettingsPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNodePoolWindowsProfileOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNodePoolWindowsProfilePtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterOmsAgentOutput{})
	pulumi.RegisterOutputType(KubernetesClusterOmsAgentPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterOmsAgentOmsAgentIdentityOutput{})
	pulumi.RegisterOutputType(KubernetesClusterOmsAgentOmsAgentIdentityArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterServiceMeshProfileOutput{})
	pulumi.RegisterOutputType(KubernetesClusterServiceMeshProfilePtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterServicePrincipalOutput{})
	pulumi.RegisterOutputType(KubernetesClusterServicePrincipalPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterStorageProfileOutput{})
	pulumi.RegisterOutputType(KubernetesClusterStorageProfilePtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterWebAppRoutingOutput{})
	pulumi.RegisterOutputType(KubernetesClusterWebAppRoutingPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterWebAppRoutingWebAppRoutingIdentityOutput{})
	pulumi.RegisterOutputType(KubernetesClusterWebAppRoutingWebAppRoutingIdentityArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterWindowsProfileOutput{})
	pulumi.RegisterOutputType(KubernetesClusterWindowsProfilePtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterWindowsProfileGmsaOutput{})
	pulumi.RegisterOutputType(KubernetesClusterWindowsProfileGmsaPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterWorkloadAutoscalerProfileOutput{})
	pulumi.RegisterOutputType(KubernetesClusterWorkloadAutoscalerProfilePtrOutput{})
	pulumi.RegisterOutputType(KubernetesFleetManagerHubProfileOutput{})
	pulumi.RegisterOutputType(KubernetesFleetManagerHubProfilePtrOutput{})
	pulumi.RegisterOutputType(RegistryEncryptionOutput{})
	pulumi.RegisterOutputType(RegistryEncryptionPtrOutput{})
	pulumi.RegisterOutputType(RegistryGeoreplicationOutput{})
	pulumi.RegisterOutputType(RegistryGeoreplicationArrayOutput{})
	pulumi.RegisterOutputType(RegistryIdentityOutput{})
	pulumi.RegisterOutputType(RegistryIdentityPtrOutput{})
	pulumi.RegisterOutputType(RegistryNetworkRuleSetOutput{})
	pulumi.RegisterOutputType(RegistryNetworkRuleSetPtrOutput{})
	pulumi.RegisterOutputType(RegistryNetworkRuleSetIpRuleOutput{})
	pulumi.RegisterOutputType(RegistryNetworkRuleSetIpRuleArrayOutput{})
	pulumi.RegisterOutputType(RegistryNetworkRuleSetVirtualNetworkOutput{})
	pulumi.RegisterOutputType(RegistryNetworkRuleSetVirtualNetworkArrayOutput{})
	pulumi.RegisterOutputType(RegistryRetentionPolicyOutput{})
	pulumi.RegisterOutputType(RegistryRetentionPolicyPtrOutput{})
	pulumi.RegisterOutputType(RegistryTaskAgentSettingOutput{})
	pulumi.RegisterOutputType(RegistryTaskAgentSettingPtrOutput{})
	pulumi.RegisterOutputType(RegistryTaskBaseImageTriggerOutput{})
	pulumi.RegisterOutputType(RegistryTaskBaseImageTriggerPtrOutput{})
	pulumi.RegisterOutputType(RegistryTaskDockerStepOutput{})
	pulumi.RegisterOutputType(RegistryTaskDockerStepPtrOutput{})
	pulumi.RegisterOutputType(RegistryTaskEncodedStepOutput{})
	pulumi.RegisterOutputType(RegistryTaskEncodedStepPtrOutput{})
	pulumi.RegisterOutputType(RegistryTaskFileStepOutput{})
	pulumi.RegisterOutputType(RegistryTaskFileStepPtrOutput{})
	pulumi.RegisterOutputType(RegistryTaskIdentityOutput{})
	pulumi.RegisterOutputType(RegistryTaskIdentityPtrOutput{})
	pulumi.RegisterOutputType(RegistryTaskPlatformOutput{})
	pulumi.RegisterOutputType(RegistryTaskPlatformPtrOutput{})
	pulumi.RegisterOutputType(RegistryTaskRegistryCredentialOutput{})
	pulumi.RegisterOutputType(RegistryTaskRegistryCredentialPtrOutput{})
	pulumi.RegisterOutputType(RegistryTaskRegistryCredentialCustomOutput{})
	pulumi.RegisterOutputType(RegistryTaskRegistryCredentialCustomArrayOutput{})
	pulumi.RegisterOutputType(RegistryTaskRegistryCredentialSourceOutput{})
	pulumi.RegisterOutputType(RegistryTaskRegistryCredentialSourcePtrOutput{})
	pulumi.RegisterOutputType(RegistryTaskSourceTriggerOutput{})
	pulumi.RegisterOutputType(RegistryTaskSourceTriggerArrayOutput{})
	pulumi.RegisterOutputType(RegistryTaskSourceTriggerAuthenticationOutput{})
	pulumi.RegisterOutputType(RegistryTaskSourceTriggerAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(RegistryTaskTimerTriggerOutput{})
	pulumi.RegisterOutputType(RegistryTaskTimerTriggerArrayOutput{})
	pulumi.RegisterOutputType(RegistryTrustPolicyOutput{})
	pulumi.RegisterOutputType(RegistryTrustPolicyPtrOutput{})
	pulumi.RegisterOutputType(TokenPasswordPassword1Output{})
	pulumi.RegisterOutputType(TokenPasswordPassword1PtrOutput{})
	pulumi.RegisterOutputType(TokenPasswordPassword2Output{})
	pulumi.RegisterOutputType(TokenPasswordPassword2PtrOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolUpgradeSettingOutput{})
	pulumi.RegisterOutputType(GetClusterNodePoolUpgradeSettingArrayOutput{})
	pulumi.RegisterOutputType(GetGroupIdentityOutput{})
	pulumi.RegisterOutputType(GetGroupIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterAciConnectorLinuxOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterAciConnectorLinuxArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterAgentPoolProfileOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterAgentPoolProfileArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterAgentPoolProfileUpgradeSettingOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterAgentPoolProfileUpgradeSettingArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterAzureActiveDirectoryRoleBasedAccessControlArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterIdentityOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterIngressApplicationGatewayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterIngressApplicationGatewayArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterKeyManagementServiceOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterKeyManagementServiceArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterKeyVaultSecretsProviderOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterKeyVaultSecretsProviderArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterKeyVaultSecretsProviderSecretIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterKubeAdminConfigOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterKubeAdminConfigArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterKubeConfigOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterKubeConfigArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterKubeletIdentityOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterKubeletIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterLinuxProfileOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterLinuxProfileArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterLinuxProfileSshKeyOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterLinuxProfileSshKeyArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterMicrosoftDefenderOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterMicrosoftDefenderArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterNetworkProfileOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterNetworkProfileArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterOmsAgentOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterOmsAgentArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterOmsAgentOmsAgentIdentityOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterOmsAgentOmsAgentIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterServiceMeshProfileOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterServiceMeshProfileArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterServicePrincipalOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterServicePrincipalArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterStorageProfileOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterStorageProfileArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterWindowsProfileOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterWindowsProfileArrayOutput{})
}
