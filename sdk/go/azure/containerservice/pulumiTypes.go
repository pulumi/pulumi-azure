// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package containerservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type GroupContainer struct {
	// A list of commands which should be run on the container. Changing this forces a new resource to be created.
	Commands []string `pulumi:"commands"`
	// The required number of CPU cores of the containers. Changing this forces a new resource to be created.
	Cpu float64 `pulumi:"cpu"`
	// A list of environment variables to be set on the container. Specified as a map of name/value pairs. Changing this forces a new resource to be created.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// A `gpu` block as defined below. Changing this forces a new resource to be created.
	Gpu *GroupContainerGpu `pulumi:"gpu"`
	// The container image name. Changing this forces a new resource to be created.
	Image string `pulumi:"image"`
	// The definition of a readiness probe for this container as documented in the `livenessProbe` block below. Changing this forces a new resource to be created.
	LivenessProbe *GroupContainerLivenessProbe `pulumi:"livenessProbe"`
	// The required memory of the containers in GB. Changing this forces a new resource to be created.
	Memory float64 `pulumi:"memory"`
	// Specifies the name of the Container Group. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
	// A set of public ports for the container. Changing this forces a new resource to be created. Set as documented in the `ports` block below.
	Ports []GroupContainerPort `pulumi:"ports"`
	// The definition of a readiness probe for this container as documented in the `readinessProbe` block below. Changing this forces a new resource to be created.
	ReadinessProbe *GroupContainerReadinessProbe `pulumi:"readinessProbe"`
	// A list of sensitive environment variables to be set on the container. Specified as a map of name/value pairs. Changing this forces a new resource to be created.
	SecureEnvironmentVariables map[string]string `pulumi:"secureEnvironmentVariables"`
	// The definition of a volume mount for this container as documented in the `volume` block below. Changing this forces a new resource to be created.
	Volumes []GroupContainerVolume `pulumi:"volumes"`
}

// GroupContainerInput is an input type that accepts GroupContainerArgs and GroupContainerOutput values.
// You can construct a concrete instance of `GroupContainerInput` via:
//
// 		 GroupContainerArgs{...}
//
type GroupContainerInput interface {
	pulumi.Input

	ToGroupContainerOutput() GroupContainerOutput
	ToGroupContainerOutputWithContext(context.Context) GroupContainerOutput
}

type GroupContainerArgs struct {
	// A list of commands which should be run on the container. Changing this forces a new resource to be created.
	Commands pulumi.StringArrayInput `pulumi:"commands"`
	// The required number of CPU cores of the containers. Changing this forces a new resource to be created.
	Cpu pulumi.Float64Input `pulumi:"cpu"`
	// A list of environment variables to be set on the container. Specified as a map of name/value pairs. Changing this forces a new resource to be created.
	EnvironmentVariables pulumi.StringMapInput `pulumi:"environmentVariables"`
	// A `gpu` block as defined below. Changing this forces a new resource to be created.
	Gpu GroupContainerGpuPtrInput `pulumi:"gpu"`
	// The container image name. Changing this forces a new resource to be created.
	Image pulumi.StringInput `pulumi:"image"`
	// The definition of a readiness probe for this container as documented in the `livenessProbe` block below. Changing this forces a new resource to be created.
	LivenessProbe GroupContainerLivenessProbePtrInput `pulumi:"livenessProbe"`
	// The required memory of the containers in GB. Changing this forces a new resource to be created.
	Memory pulumi.Float64Input `pulumi:"memory"`
	// Specifies the name of the Container Group. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// A set of public ports for the container. Changing this forces a new resource to be created. Set as documented in the `ports` block below.
	Ports GroupContainerPortArrayInput `pulumi:"ports"`
	// The definition of a readiness probe for this container as documented in the `readinessProbe` block below. Changing this forces a new resource to be created.
	ReadinessProbe GroupContainerReadinessProbePtrInput `pulumi:"readinessProbe"`
	// A list of sensitive environment variables to be set on the container. Specified as a map of name/value pairs. Changing this forces a new resource to be created.
	SecureEnvironmentVariables pulumi.StringMapInput `pulumi:"secureEnvironmentVariables"`
	// The definition of a volume mount for this container as documented in the `volume` block below. Changing this forces a new resource to be created.
	Volumes GroupContainerVolumeArrayInput `pulumi:"volumes"`
}

func (GroupContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainer)(nil)).Elem()
}

func (i GroupContainerArgs) ToGroupContainerOutput() GroupContainerOutput {
	return i.ToGroupContainerOutputWithContext(context.Background())
}

func (i GroupContainerArgs) ToGroupContainerOutputWithContext(ctx context.Context) GroupContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerOutput)
}

// GroupContainerArrayInput is an input type that accepts GroupContainerArray and GroupContainerArrayOutput values.
// You can construct a concrete instance of `GroupContainerArrayInput` via:
//
// 		 GroupContainerArray{ GroupContainerArgs{...} }
//
type GroupContainerArrayInput interface {
	pulumi.Input

	ToGroupContainerArrayOutput() GroupContainerArrayOutput
	ToGroupContainerArrayOutputWithContext(context.Context) GroupContainerArrayOutput
}

type GroupContainerArray []GroupContainerInput

func (GroupContainerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupContainer)(nil)).Elem()
}

func (i GroupContainerArray) ToGroupContainerArrayOutput() GroupContainerArrayOutput {
	return i.ToGroupContainerArrayOutputWithContext(context.Background())
}

func (i GroupContainerArray) ToGroupContainerArrayOutputWithContext(ctx context.Context) GroupContainerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerArrayOutput)
}

type GroupContainerOutput struct{ *pulumi.OutputState }

func (GroupContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainer)(nil)).Elem()
}

func (o GroupContainerOutput) ToGroupContainerOutput() GroupContainerOutput {
	return o
}

func (o GroupContainerOutput) ToGroupContainerOutputWithContext(ctx context.Context) GroupContainerOutput {
	return o
}

// A list of commands which should be run on the container. Changing this forces a new resource to be created.
func (o GroupContainerOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupContainer) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

// The required number of CPU cores of the containers. Changing this forces a new resource to be created.
func (o GroupContainerOutput) Cpu() pulumi.Float64Output {
	return o.ApplyT(func(v GroupContainer) float64 { return v.Cpu }).(pulumi.Float64Output)
}

// A list of environment variables to be set on the container. Specified as a map of name/value pairs. Changing this forces a new resource to be created.
func (o GroupContainerOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v GroupContainer) map[string]string { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// A `gpu` block as defined below. Changing this forces a new resource to be created.
func (o GroupContainerOutput) Gpu() GroupContainerGpuPtrOutput {
	return o.ApplyT(func(v GroupContainer) *GroupContainerGpu { return v.Gpu }).(GroupContainerGpuPtrOutput)
}

// The container image name. Changing this forces a new resource to be created.
func (o GroupContainerOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v GroupContainer) string { return v.Image }).(pulumi.StringOutput)
}

// The definition of a readiness probe for this container as documented in the `livenessProbe` block below. Changing this forces a new resource to be created.
func (o GroupContainerOutput) LivenessProbe() GroupContainerLivenessProbePtrOutput {
	return o.ApplyT(func(v GroupContainer) *GroupContainerLivenessProbe { return v.LivenessProbe }).(GroupContainerLivenessProbePtrOutput)
}

// The required memory of the containers in GB. Changing this forces a new resource to be created.
func (o GroupContainerOutput) Memory() pulumi.Float64Output {
	return o.ApplyT(func(v GroupContainer) float64 { return v.Memory }).(pulumi.Float64Output)
}

// Specifies the name of the Container Group. Changing this forces a new resource to be created.
func (o GroupContainerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GroupContainer) string { return v.Name }).(pulumi.StringOutput)
}

// A set of public ports for the container. Changing this forces a new resource to be created. Set as documented in the `ports` block below.
func (o GroupContainerOutput) Ports() GroupContainerPortArrayOutput {
	return o.ApplyT(func(v GroupContainer) []GroupContainerPort { return v.Ports }).(GroupContainerPortArrayOutput)
}

// The definition of a readiness probe for this container as documented in the `readinessProbe` block below. Changing this forces a new resource to be created.
func (o GroupContainerOutput) ReadinessProbe() GroupContainerReadinessProbePtrOutput {
	return o.ApplyT(func(v GroupContainer) *GroupContainerReadinessProbe { return v.ReadinessProbe }).(GroupContainerReadinessProbePtrOutput)
}

// A list of sensitive environment variables to be set on the container. Specified as a map of name/value pairs. Changing this forces a new resource to be created.
func (o GroupContainerOutput) SecureEnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v GroupContainer) map[string]string { return v.SecureEnvironmentVariables }).(pulumi.StringMapOutput)
}

// The definition of a volume mount for this container as documented in the `volume` block below. Changing this forces a new resource to be created.
func (o GroupContainerOutput) Volumes() GroupContainerVolumeArrayOutput {
	return o.ApplyT(func(v GroupContainer) []GroupContainerVolume { return v.Volumes }).(GroupContainerVolumeArrayOutput)
}

type GroupContainerArrayOutput struct{ *pulumi.OutputState }

func (GroupContainerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupContainer)(nil)).Elem()
}

func (o GroupContainerArrayOutput) ToGroupContainerArrayOutput() GroupContainerArrayOutput {
	return o
}

func (o GroupContainerArrayOutput) ToGroupContainerArrayOutputWithContext(ctx context.Context) GroupContainerArrayOutput {
	return o
}

func (o GroupContainerArrayOutput) Index(i pulumi.IntInput) GroupContainerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupContainer {
		return vs[0].([]GroupContainer)[vs[1].(int)]
	}).(GroupContainerOutput)
}

type GroupContainerGpu struct {
	// The number of GPUs which should be assigned to this container. Allowed values are `1`, `2`, or `4`. Changing this forces a new resource to be created.
	Count *int `pulumi:"count"`
	// The Sku which should be used for the GPU. Possible values are `K80`, `P100`, or `V100`. Changing this forces a new resource to be created.
	Sku *string `pulumi:"sku"`
}

// GroupContainerGpuInput is an input type that accepts GroupContainerGpuArgs and GroupContainerGpuOutput values.
// You can construct a concrete instance of `GroupContainerGpuInput` via:
//
// 		 GroupContainerGpuArgs{...}
//
type GroupContainerGpuInput interface {
	pulumi.Input

	ToGroupContainerGpuOutput() GroupContainerGpuOutput
	ToGroupContainerGpuOutputWithContext(context.Context) GroupContainerGpuOutput
}

type GroupContainerGpuArgs struct {
	// The number of GPUs which should be assigned to this container. Allowed values are `1`, `2`, or `4`. Changing this forces a new resource to be created.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// The Sku which should be used for the GPU. Possible values are `K80`, `P100`, or `V100`. Changing this forces a new resource to be created.
	Sku pulumi.StringPtrInput `pulumi:"sku"`
}

func (GroupContainerGpuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerGpu)(nil)).Elem()
}

func (i GroupContainerGpuArgs) ToGroupContainerGpuOutput() GroupContainerGpuOutput {
	return i.ToGroupContainerGpuOutputWithContext(context.Background())
}

func (i GroupContainerGpuArgs) ToGroupContainerGpuOutputWithContext(ctx context.Context) GroupContainerGpuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerGpuOutput)
}

func (i GroupContainerGpuArgs) ToGroupContainerGpuPtrOutput() GroupContainerGpuPtrOutput {
	return i.ToGroupContainerGpuPtrOutputWithContext(context.Background())
}

func (i GroupContainerGpuArgs) ToGroupContainerGpuPtrOutputWithContext(ctx context.Context) GroupContainerGpuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerGpuOutput).ToGroupContainerGpuPtrOutputWithContext(ctx)
}

// GroupContainerGpuPtrInput is an input type that accepts GroupContainerGpuArgs, GroupContainerGpuPtr and GroupContainerGpuPtrOutput values.
// You can construct a concrete instance of `GroupContainerGpuPtrInput` via:
//
// 		 GroupContainerGpuArgs{...}
//
//  or:
//
// 		 nil
//
type GroupContainerGpuPtrInput interface {
	pulumi.Input

	ToGroupContainerGpuPtrOutput() GroupContainerGpuPtrOutput
	ToGroupContainerGpuPtrOutputWithContext(context.Context) GroupContainerGpuPtrOutput
}

type groupContainerGpuPtrType GroupContainerGpuArgs

func GroupContainerGpuPtr(v *GroupContainerGpuArgs) GroupContainerGpuPtrInput {
	return (*groupContainerGpuPtrType)(v)
}

func (*groupContainerGpuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupContainerGpu)(nil)).Elem()
}

func (i *groupContainerGpuPtrType) ToGroupContainerGpuPtrOutput() GroupContainerGpuPtrOutput {
	return i.ToGroupContainerGpuPtrOutputWithContext(context.Background())
}

func (i *groupContainerGpuPtrType) ToGroupContainerGpuPtrOutputWithContext(ctx context.Context) GroupContainerGpuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerGpuPtrOutput)
}

type GroupContainerGpuOutput struct{ *pulumi.OutputState }

func (GroupContainerGpuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerGpu)(nil)).Elem()
}

func (o GroupContainerGpuOutput) ToGroupContainerGpuOutput() GroupContainerGpuOutput {
	return o
}

func (o GroupContainerGpuOutput) ToGroupContainerGpuOutputWithContext(ctx context.Context) GroupContainerGpuOutput {
	return o
}

func (o GroupContainerGpuOutput) ToGroupContainerGpuPtrOutput() GroupContainerGpuPtrOutput {
	return o.ToGroupContainerGpuPtrOutputWithContext(context.Background())
}

func (o GroupContainerGpuOutput) ToGroupContainerGpuPtrOutputWithContext(ctx context.Context) GroupContainerGpuPtrOutput {
	return o.ApplyT(func(v GroupContainerGpu) *GroupContainerGpu {
		return &v
	}).(GroupContainerGpuPtrOutput)
}

// The number of GPUs which should be assigned to this container. Allowed values are `1`, `2`, or `4`. Changing this forces a new resource to be created.
func (o GroupContainerGpuOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupContainerGpu) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// The Sku which should be used for the GPU. Possible values are `K80`, `P100`, or `V100`. Changing this forces a new resource to be created.
func (o GroupContainerGpuOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupContainerGpu) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

type GroupContainerGpuPtrOutput struct{ *pulumi.OutputState }

func (GroupContainerGpuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupContainerGpu)(nil)).Elem()
}

func (o GroupContainerGpuPtrOutput) ToGroupContainerGpuPtrOutput() GroupContainerGpuPtrOutput {
	return o
}

func (o GroupContainerGpuPtrOutput) ToGroupContainerGpuPtrOutputWithContext(ctx context.Context) GroupContainerGpuPtrOutput {
	return o
}

func (o GroupContainerGpuPtrOutput) Elem() GroupContainerGpuOutput {
	return o.ApplyT(func(v *GroupContainerGpu) GroupContainerGpu { return *v }).(GroupContainerGpuOutput)
}

// The number of GPUs which should be assigned to this container. Allowed values are `1`, `2`, or `4`. Changing this forces a new resource to be created.
func (o GroupContainerGpuPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupContainerGpu) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// The Sku which should be used for the GPU. Possible values are `K80`, `P100`, or `V100`. Changing this forces a new resource to be created.
func (o GroupContainerGpuPtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupContainerGpu) *string {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(pulumi.StringPtrOutput)
}

type GroupContainerLivenessProbe struct {
	// Commands to be run to validate container readiness. Changing this forces a new resource to be created.
	Execs []string `pulumi:"execs"`
	// How many times to try the probe before restarting the container (liveness probe) or marking the container as unhealthy (readiness probe). The default value is `3` and the minimum value is `1`. Changing this forces a new resource to be created.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// The definition of the httpget for this container as documented in the `httpget` block below. Changing this forces a new resource to be created.
	HttpGets []GroupContainerLivenessProbeHttpGet `pulumi:"httpGets"`
	// Number of seconds after the container has started before liveness or readiness probes are initiated. Changing this forces a new resource to be created.
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. The default value is `10` and the minimum value is `1`. Changing this forces a new resource to be created.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. The default value is `1` and the minimum value is `1`. Changing this forces a new resource to be created.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// Number of seconds after which the probe times out. The default value is `1` and the minimum value is `1`. Changing this forces a new resource to be created.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// GroupContainerLivenessProbeInput is an input type that accepts GroupContainerLivenessProbeArgs and GroupContainerLivenessProbeOutput values.
// You can construct a concrete instance of `GroupContainerLivenessProbeInput` via:
//
// 		 GroupContainerLivenessProbeArgs{...}
//
type GroupContainerLivenessProbeInput interface {
	pulumi.Input

	ToGroupContainerLivenessProbeOutput() GroupContainerLivenessProbeOutput
	ToGroupContainerLivenessProbeOutputWithContext(context.Context) GroupContainerLivenessProbeOutput
}

type GroupContainerLivenessProbeArgs struct {
	// Commands to be run to validate container readiness. Changing this forces a new resource to be created.
	Execs pulumi.StringArrayInput `pulumi:"execs"`
	// How many times to try the probe before restarting the container (liveness probe) or marking the container as unhealthy (readiness probe). The default value is `3` and the minimum value is `1`. Changing this forces a new resource to be created.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// The definition of the httpget for this container as documented in the `httpget` block below. Changing this forces a new resource to be created.
	HttpGets GroupContainerLivenessProbeHttpGetArrayInput `pulumi:"httpGets"`
	// Number of seconds after the container has started before liveness or readiness probes are initiated. Changing this forces a new resource to be created.
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. The default value is `10` and the minimum value is `1`. Changing this forces a new resource to be created.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. The default value is `1` and the minimum value is `1`. Changing this forces a new resource to be created.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// Number of seconds after which the probe times out. The default value is `1` and the minimum value is `1`. Changing this forces a new resource to be created.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (GroupContainerLivenessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerLivenessProbe)(nil)).Elem()
}

func (i GroupContainerLivenessProbeArgs) ToGroupContainerLivenessProbeOutput() GroupContainerLivenessProbeOutput {
	return i.ToGroupContainerLivenessProbeOutputWithContext(context.Background())
}

func (i GroupContainerLivenessProbeArgs) ToGroupContainerLivenessProbeOutputWithContext(ctx context.Context) GroupContainerLivenessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerLivenessProbeOutput)
}

func (i GroupContainerLivenessProbeArgs) ToGroupContainerLivenessProbePtrOutput() GroupContainerLivenessProbePtrOutput {
	return i.ToGroupContainerLivenessProbePtrOutputWithContext(context.Background())
}

func (i GroupContainerLivenessProbeArgs) ToGroupContainerLivenessProbePtrOutputWithContext(ctx context.Context) GroupContainerLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerLivenessProbeOutput).ToGroupContainerLivenessProbePtrOutputWithContext(ctx)
}

// GroupContainerLivenessProbePtrInput is an input type that accepts GroupContainerLivenessProbeArgs, GroupContainerLivenessProbePtr and GroupContainerLivenessProbePtrOutput values.
// You can construct a concrete instance of `GroupContainerLivenessProbePtrInput` via:
//
// 		 GroupContainerLivenessProbeArgs{...}
//
//  or:
//
// 		 nil
//
type GroupContainerLivenessProbePtrInput interface {
	pulumi.Input

	ToGroupContainerLivenessProbePtrOutput() GroupContainerLivenessProbePtrOutput
	ToGroupContainerLivenessProbePtrOutputWithContext(context.Context) GroupContainerLivenessProbePtrOutput
}

type groupContainerLivenessProbePtrType GroupContainerLivenessProbeArgs

func GroupContainerLivenessProbePtr(v *GroupContainerLivenessProbeArgs) GroupContainerLivenessProbePtrInput {
	return (*groupContainerLivenessProbePtrType)(v)
}

func (*groupContainerLivenessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupContainerLivenessProbe)(nil)).Elem()
}

func (i *groupContainerLivenessProbePtrType) ToGroupContainerLivenessProbePtrOutput() GroupContainerLivenessProbePtrOutput {
	return i.ToGroupContainerLivenessProbePtrOutputWithContext(context.Background())
}

func (i *groupContainerLivenessProbePtrType) ToGroupContainerLivenessProbePtrOutputWithContext(ctx context.Context) GroupContainerLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerLivenessProbePtrOutput)
}

type GroupContainerLivenessProbeOutput struct{ *pulumi.OutputState }

func (GroupContainerLivenessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerLivenessProbe)(nil)).Elem()
}

func (o GroupContainerLivenessProbeOutput) ToGroupContainerLivenessProbeOutput() GroupContainerLivenessProbeOutput {
	return o
}

func (o GroupContainerLivenessProbeOutput) ToGroupContainerLivenessProbeOutputWithContext(ctx context.Context) GroupContainerLivenessProbeOutput {
	return o
}

func (o GroupContainerLivenessProbeOutput) ToGroupContainerLivenessProbePtrOutput() GroupContainerLivenessProbePtrOutput {
	return o.ToGroupContainerLivenessProbePtrOutputWithContext(context.Background())
}

func (o GroupContainerLivenessProbeOutput) ToGroupContainerLivenessProbePtrOutputWithContext(ctx context.Context) GroupContainerLivenessProbePtrOutput {
	return o.ApplyT(func(v GroupContainerLivenessProbe) *GroupContainerLivenessProbe {
		return &v
	}).(GroupContainerLivenessProbePtrOutput)
}

// Commands to be run to validate container readiness. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbeOutput) Execs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupContainerLivenessProbe) []string { return v.Execs }).(pulumi.StringArrayOutput)
}

// How many times to try the probe before restarting the container (liveness probe) or marking the container as unhealthy (readiness probe). The default value is `3` and the minimum value is `1`. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbeOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupContainerLivenessProbe) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// The definition of the httpget for this container as documented in the `httpget` block below. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbeOutput) HttpGets() GroupContainerLivenessProbeHttpGetArrayOutput {
	return o.ApplyT(func(v GroupContainerLivenessProbe) []GroupContainerLivenessProbeHttpGet { return v.HttpGets }).(GroupContainerLivenessProbeHttpGetArrayOutput)
}

// Number of seconds after the container has started before liveness or readiness probes are initiated. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbeOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupContainerLivenessProbe) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. The default value is `10` and the minimum value is `1`. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbeOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupContainerLivenessProbe) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. The default value is `1` and the minimum value is `1`. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbeOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupContainerLivenessProbe) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// Number of seconds after which the probe times out. The default value is `1` and the minimum value is `1`. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbeOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupContainerLivenessProbe) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type GroupContainerLivenessProbePtrOutput struct{ *pulumi.OutputState }

func (GroupContainerLivenessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupContainerLivenessProbe)(nil)).Elem()
}

func (o GroupContainerLivenessProbePtrOutput) ToGroupContainerLivenessProbePtrOutput() GroupContainerLivenessProbePtrOutput {
	return o
}

func (o GroupContainerLivenessProbePtrOutput) ToGroupContainerLivenessProbePtrOutputWithContext(ctx context.Context) GroupContainerLivenessProbePtrOutput {
	return o
}

func (o GroupContainerLivenessProbePtrOutput) Elem() GroupContainerLivenessProbeOutput {
	return o.ApplyT(func(v *GroupContainerLivenessProbe) GroupContainerLivenessProbe { return *v }).(GroupContainerLivenessProbeOutput)
}

// Commands to be run to validate container readiness. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbePtrOutput) Execs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupContainerLivenessProbe) []string {
		if v == nil {
			return nil
		}
		return v.Execs
	}).(pulumi.StringArrayOutput)
}

// How many times to try the probe before restarting the container (liveness probe) or marking the container as unhealthy (readiness probe). The default value is `3` and the minimum value is `1`. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupContainerLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// The definition of the httpget for this container as documented in the `httpget` block below. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbePtrOutput) HttpGets() GroupContainerLivenessProbeHttpGetArrayOutput {
	return o.ApplyT(func(v *GroupContainerLivenessProbe) []GroupContainerLivenessProbeHttpGet {
		if v == nil {
			return nil
		}
		return v.HttpGets
	}).(GroupContainerLivenessProbeHttpGetArrayOutput)
}

// Number of seconds after the container has started before liveness or readiness probes are initiated. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupContainerLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. The default value is `10` and the minimum value is `1`. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupContainerLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. The default value is `1` and the minimum value is `1`. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupContainerLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds after which the probe times out. The default value is `1` and the minimum value is `1`. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupContainerLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

type GroupContainerLivenessProbeHttpGet struct {
	// Path to access on the HTTP server. Changing this forces a new resource to be created.
	Path *string `pulumi:"path"`
	// The port number the container will expose. Changing this forces a new resource to be created.
	Port *int `pulumi:"port"`
	// Scheme to use for connecting to the host. Possible values are `Http` and `Https`. Changing this forces a new resource to be created.
	Scheme *string `pulumi:"scheme"`
}

// GroupContainerLivenessProbeHttpGetInput is an input type that accepts GroupContainerLivenessProbeHttpGetArgs and GroupContainerLivenessProbeHttpGetOutput values.
// You can construct a concrete instance of `GroupContainerLivenessProbeHttpGetInput` via:
//
// 		 GroupContainerLivenessProbeHttpGetArgs{...}
//
type GroupContainerLivenessProbeHttpGetInput interface {
	pulumi.Input

	ToGroupContainerLivenessProbeHttpGetOutput() GroupContainerLivenessProbeHttpGetOutput
	ToGroupContainerLivenessProbeHttpGetOutputWithContext(context.Context) GroupContainerLivenessProbeHttpGetOutput
}

type GroupContainerLivenessProbeHttpGetArgs struct {
	// Path to access on the HTTP server. Changing this forces a new resource to be created.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port number the container will expose. Changing this forces a new resource to be created.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Scheme to use for connecting to the host. Possible values are `Http` and `Https`. Changing this forces a new resource to be created.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
}

func (GroupContainerLivenessProbeHttpGetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerLivenessProbeHttpGet)(nil)).Elem()
}

func (i GroupContainerLivenessProbeHttpGetArgs) ToGroupContainerLivenessProbeHttpGetOutput() GroupContainerLivenessProbeHttpGetOutput {
	return i.ToGroupContainerLivenessProbeHttpGetOutputWithContext(context.Background())
}

func (i GroupContainerLivenessProbeHttpGetArgs) ToGroupContainerLivenessProbeHttpGetOutputWithContext(ctx context.Context) GroupContainerLivenessProbeHttpGetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerLivenessProbeHttpGetOutput)
}

// GroupContainerLivenessProbeHttpGetArrayInput is an input type that accepts GroupContainerLivenessProbeHttpGetArray and GroupContainerLivenessProbeHttpGetArrayOutput values.
// You can construct a concrete instance of `GroupContainerLivenessProbeHttpGetArrayInput` via:
//
// 		 GroupContainerLivenessProbeHttpGetArray{ GroupContainerLivenessProbeHttpGetArgs{...} }
//
type GroupContainerLivenessProbeHttpGetArrayInput interface {
	pulumi.Input

	ToGroupContainerLivenessProbeHttpGetArrayOutput() GroupContainerLivenessProbeHttpGetArrayOutput
	ToGroupContainerLivenessProbeHttpGetArrayOutputWithContext(context.Context) GroupContainerLivenessProbeHttpGetArrayOutput
}

type GroupContainerLivenessProbeHttpGetArray []GroupContainerLivenessProbeHttpGetInput

func (GroupContainerLivenessProbeHttpGetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupContainerLivenessProbeHttpGet)(nil)).Elem()
}

func (i GroupContainerLivenessProbeHttpGetArray) ToGroupContainerLivenessProbeHttpGetArrayOutput() GroupContainerLivenessProbeHttpGetArrayOutput {
	return i.ToGroupContainerLivenessProbeHttpGetArrayOutputWithContext(context.Background())
}

func (i GroupContainerLivenessProbeHttpGetArray) ToGroupContainerLivenessProbeHttpGetArrayOutputWithContext(ctx context.Context) GroupContainerLivenessProbeHttpGetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerLivenessProbeHttpGetArrayOutput)
}

type GroupContainerLivenessProbeHttpGetOutput struct{ *pulumi.OutputState }

func (GroupContainerLivenessProbeHttpGetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerLivenessProbeHttpGet)(nil)).Elem()
}

func (o GroupContainerLivenessProbeHttpGetOutput) ToGroupContainerLivenessProbeHttpGetOutput() GroupContainerLivenessProbeHttpGetOutput {
	return o
}

func (o GroupContainerLivenessProbeHttpGetOutput) ToGroupContainerLivenessProbeHttpGetOutputWithContext(ctx context.Context) GroupContainerLivenessProbeHttpGetOutput {
	return o
}

// Path to access on the HTTP server. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbeHttpGetOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupContainerLivenessProbeHttpGet) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port number the container will expose. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbeHttpGetOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupContainerLivenessProbeHttpGet) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Scheme to use for connecting to the host. Possible values are `Http` and `Https`. Changing this forces a new resource to be created.
func (o GroupContainerLivenessProbeHttpGetOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupContainerLivenessProbeHttpGet) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type GroupContainerLivenessProbeHttpGetArrayOutput struct{ *pulumi.OutputState }

func (GroupContainerLivenessProbeHttpGetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupContainerLivenessProbeHttpGet)(nil)).Elem()
}

func (o GroupContainerLivenessProbeHttpGetArrayOutput) ToGroupContainerLivenessProbeHttpGetArrayOutput() GroupContainerLivenessProbeHttpGetArrayOutput {
	return o
}

func (o GroupContainerLivenessProbeHttpGetArrayOutput) ToGroupContainerLivenessProbeHttpGetArrayOutputWithContext(ctx context.Context) GroupContainerLivenessProbeHttpGetArrayOutput {
	return o
}

func (o GroupContainerLivenessProbeHttpGetArrayOutput) Index(i pulumi.IntInput) GroupContainerLivenessProbeHttpGetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupContainerLivenessProbeHttpGet {
		return vs[0].([]GroupContainerLivenessProbeHttpGet)[vs[1].(int)]
	}).(GroupContainerLivenessProbeHttpGetOutput)
}

type GroupContainerPort struct {
	// The port number the container will expose. Changing this forces a new resource to be created.
	Port *int `pulumi:"port"`
	// The network protocol associated with port. Possible values are `TCP` & `UDP`. Changing this forces a new resource to be created.
	Protocol *string `pulumi:"protocol"`
}

// GroupContainerPortInput is an input type that accepts GroupContainerPortArgs and GroupContainerPortOutput values.
// You can construct a concrete instance of `GroupContainerPortInput` via:
//
// 		 GroupContainerPortArgs{...}
//
type GroupContainerPortInput interface {
	pulumi.Input

	ToGroupContainerPortOutput() GroupContainerPortOutput
	ToGroupContainerPortOutputWithContext(context.Context) GroupContainerPortOutput
}

type GroupContainerPortArgs struct {
	// The port number the container will expose. Changing this forces a new resource to be created.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The network protocol associated with port. Possible values are `TCP` & `UDP`. Changing this forces a new resource to be created.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (GroupContainerPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerPort)(nil)).Elem()
}

func (i GroupContainerPortArgs) ToGroupContainerPortOutput() GroupContainerPortOutput {
	return i.ToGroupContainerPortOutputWithContext(context.Background())
}

func (i GroupContainerPortArgs) ToGroupContainerPortOutputWithContext(ctx context.Context) GroupContainerPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerPortOutput)
}

// GroupContainerPortArrayInput is an input type that accepts GroupContainerPortArray and GroupContainerPortArrayOutput values.
// You can construct a concrete instance of `GroupContainerPortArrayInput` via:
//
// 		 GroupContainerPortArray{ GroupContainerPortArgs{...} }
//
type GroupContainerPortArrayInput interface {
	pulumi.Input

	ToGroupContainerPortArrayOutput() GroupContainerPortArrayOutput
	ToGroupContainerPortArrayOutputWithContext(context.Context) GroupContainerPortArrayOutput
}

type GroupContainerPortArray []GroupContainerPortInput

func (GroupContainerPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupContainerPort)(nil)).Elem()
}

func (i GroupContainerPortArray) ToGroupContainerPortArrayOutput() GroupContainerPortArrayOutput {
	return i.ToGroupContainerPortArrayOutputWithContext(context.Background())
}

func (i GroupContainerPortArray) ToGroupContainerPortArrayOutputWithContext(ctx context.Context) GroupContainerPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerPortArrayOutput)
}

type GroupContainerPortOutput struct{ *pulumi.OutputState }

func (GroupContainerPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerPort)(nil)).Elem()
}

func (o GroupContainerPortOutput) ToGroupContainerPortOutput() GroupContainerPortOutput {
	return o
}

func (o GroupContainerPortOutput) ToGroupContainerPortOutputWithContext(ctx context.Context) GroupContainerPortOutput {
	return o
}

// The port number the container will expose. Changing this forces a new resource to be created.
func (o GroupContainerPortOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupContainerPort) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The network protocol associated with port. Possible values are `TCP` & `UDP`. Changing this forces a new resource to be created.
func (o GroupContainerPortOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupContainerPort) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type GroupContainerPortArrayOutput struct{ *pulumi.OutputState }

func (GroupContainerPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupContainerPort)(nil)).Elem()
}

func (o GroupContainerPortArrayOutput) ToGroupContainerPortArrayOutput() GroupContainerPortArrayOutput {
	return o
}

func (o GroupContainerPortArrayOutput) ToGroupContainerPortArrayOutputWithContext(ctx context.Context) GroupContainerPortArrayOutput {
	return o
}

func (o GroupContainerPortArrayOutput) Index(i pulumi.IntInput) GroupContainerPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupContainerPort {
		return vs[0].([]GroupContainerPort)[vs[1].(int)]
	}).(GroupContainerPortOutput)
}

type GroupContainerReadinessProbe struct {
	// Commands to be run to validate container readiness. Changing this forces a new resource to be created.
	Execs []string `pulumi:"execs"`
	// How many times to try the probe before restarting the container (liveness probe) or marking the container as unhealthy (readiness probe). The default value is `3` and the minimum value is `1`. Changing this forces a new resource to be created.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// The definition of the httpget for this container as documented in the `httpget` block below. Changing this forces a new resource to be created.
	HttpGets []GroupContainerReadinessProbeHttpGet `pulumi:"httpGets"`
	// Number of seconds after the container has started before liveness or readiness probes are initiated. Changing this forces a new resource to be created.
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. The default value is `10` and the minimum value is `1`. Changing this forces a new resource to be created.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. The default value is `1` and the minimum value is `1`. Changing this forces a new resource to be created.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// Number of seconds after which the probe times out. The default value is `1` and the minimum value is `1`. Changing this forces a new resource to be created.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// GroupContainerReadinessProbeInput is an input type that accepts GroupContainerReadinessProbeArgs and GroupContainerReadinessProbeOutput values.
// You can construct a concrete instance of `GroupContainerReadinessProbeInput` via:
//
// 		 GroupContainerReadinessProbeArgs{...}
//
type GroupContainerReadinessProbeInput interface {
	pulumi.Input

	ToGroupContainerReadinessProbeOutput() GroupContainerReadinessProbeOutput
	ToGroupContainerReadinessProbeOutputWithContext(context.Context) GroupContainerReadinessProbeOutput
}

type GroupContainerReadinessProbeArgs struct {
	// Commands to be run to validate container readiness. Changing this forces a new resource to be created.
	Execs pulumi.StringArrayInput `pulumi:"execs"`
	// How many times to try the probe before restarting the container (liveness probe) or marking the container as unhealthy (readiness probe). The default value is `3` and the minimum value is `1`. Changing this forces a new resource to be created.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// The definition of the httpget for this container as documented in the `httpget` block below. Changing this forces a new resource to be created.
	HttpGets GroupContainerReadinessProbeHttpGetArrayInput `pulumi:"httpGets"`
	// Number of seconds after the container has started before liveness or readiness probes are initiated. Changing this forces a new resource to be created.
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe. The default value is `10` and the minimum value is `1`. Changing this forces a new resource to be created.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. The default value is `1` and the minimum value is `1`. Changing this forces a new resource to be created.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// Number of seconds after which the probe times out. The default value is `1` and the minimum value is `1`. Changing this forces a new resource to be created.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (GroupContainerReadinessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerReadinessProbe)(nil)).Elem()
}

func (i GroupContainerReadinessProbeArgs) ToGroupContainerReadinessProbeOutput() GroupContainerReadinessProbeOutput {
	return i.ToGroupContainerReadinessProbeOutputWithContext(context.Background())
}

func (i GroupContainerReadinessProbeArgs) ToGroupContainerReadinessProbeOutputWithContext(ctx context.Context) GroupContainerReadinessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerReadinessProbeOutput)
}

func (i GroupContainerReadinessProbeArgs) ToGroupContainerReadinessProbePtrOutput() GroupContainerReadinessProbePtrOutput {
	return i.ToGroupContainerReadinessProbePtrOutputWithContext(context.Background())
}

func (i GroupContainerReadinessProbeArgs) ToGroupContainerReadinessProbePtrOutputWithContext(ctx context.Context) GroupContainerReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerReadinessProbeOutput).ToGroupContainerReadinessProbePtrOutputWithContext(ctx)
}

// GroupContainerReadinessProbePtrInput is an input type that accepts GroupContainerReadinessProbeArgs, GroupContainerReadinessProbePtr and GroupContainerReadinessProbePtrOutput values.
// You can construct a concrete instance of `GroupContainerReadinessProbePtrInput` via:
//
// 		 GroupContainerReadinessProbeArgs{...}
//
//  or:
//
// 		 nil
//
type GroupContainerReadinessProbePtrInput interface {
	pulumi.Input

	ToGroupContainerReadinessProbePtrOutput() GroupContainerReadinessProbePtrOutput
	ToGroupContainerReadinessProbePtrOutputWithContext(context.Context) GroupContainerReadinessProbePtrOutput
}

type groupContainerReadinessProbePtrType GroupContainerReadinessProbeArgs

func GroupContainerReadinessProbePtr(v *GroupContainerReadinessProbeArgs) GroupContainerReadinessProbePtrInput {
	return (*groupContainerReadinessProbePtrType)(v)
}

func (*groupContainerReadinessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupContainerReadinessProbe)(nil)).Elem()
}

func (i *groupContainerReadinessProbePtrType) ToGroupContainerReadinessProbePtrOutput() GroupContainerReadinessProbePtrOutput {
	return i.ToGroupContainerReadinessProbePtrOutputWithContext(context.Background())
}

func (i *groupContainerReadinessProbePtrType) ToGroupContainerReadinessProbePtrOutputWithContext(ctx context.Context) GroupContainerReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerReadinessProbePtrOutput)
}

type GroupContainerReadinessProbeOutput struct{ *pulumi.OutputState }

func (GroupContainerReadinessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerReadinessProbe)(nil)).Elem()
}

func (o GroupContainerReadinessProbeOutput) ToGroupContainerReadinessProbeOutput() GroupContainerReadinessProbeOutput {
	return o
}

func (o GroupContainerReadinessProbeOutput) ToGroupContainerReadinessProbeOutputWithContext(ctx context.Context) GroupContainerReadinessProbeOutput {
	return o
}

func (o GroupContainerReadinessProbeOutput) ToGroupContainerReadinessProbePtrOutput() GroupContainerReadinessProbePtrOutput {
	return o.ToGroupContainerReadinessProbePtrOutputWithContext(context.Background())
}

func (o GroupContainerReadinessProbeOutput) ToGroupContainerReadinessProbePtrOutputWithContext(ctx context.Context) GroupContainerReadinessProbePtrOutput {
	return o.ApplyT(func(v GroupContainerReadinessProbe) *GroupContainerReadinessProbe {
		return &v
	}).(GroupContainerReadinessProbePtrOutput)
}

// Commands to be run to validate container readiness. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbeOutput) Execs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupContainerReadinessProbe) []string { return v.Execs }).(pulumi.StringArrayOutput)
}

// How many times to try the probe before restarting the container (liveness probe) or marking the container as unhealthy (readiness probe). The default value is `3` and the minimum value is `1`. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbeOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupContainerReadinessProbe) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// The definition of the httpget for this container as documented in the `httpget` block below. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbeOutput) HttpGets() GroupContainerReadinessProbeHttpGetArrayOutput {
	return o.ApplyT(func(v GroupContainerReadinessProbe) []GroupContainerReadinessProbeHttpGet { return v.HttpGets }).(GroupContainerReadinessProbeHttpGetArrayOutput)
}

// Number of seconds after the container has started before liveness or readiness probes are initiated. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbeOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupContainerReadinessProbe) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. The default value is `10` and the minimum value is `1`. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbeOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupContainerReadinessProbe) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. The default value is `1` and the minimum value is `1`. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbeOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupContainerReadinessProbe) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// Number of seconds after which the probe times out. The default value is `1` and the minimum value is `1`. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbeOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupContainerReadinessProbe) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type GroupContainerReadinessProbePtrOutput struct{ *pulumi.OutputState }

func (GroupContainerReadinessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupContainerReadinessProbe)(nil)).Elem()
}

func (o GroupContainerReadinessProbePtrOutput) ToGroupContainerReadinessProbePtrOutput() GroupContainerReadinessProbePtrOutput {
	return o
}

func (o GroupContainerReadinessProbePtrOutput) ToGroupContainerReadinessProbePtrOutputWithContext(ctx context.Context) GroupContainerReadinessProbePtrOutput {
	return o
}

func (o GroupContainerReadinessProbePtrOutput) Elem() GroupContainerReadinessProbeOutput {
	return o.ApplyT(func(v *GroupContainerReadinessProbe) GroupContainerReadinessProbe { return *v }).(GroupContainerReadinessProbeOutput)
}

// Commands to be run to validate container readiness. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbePtrOutput) Execs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupContainerReadinessProbe) []string {
		if v == nil {
			return nil
		}
		return v.Execs
	}).(pulumi.StringArrayOutput)
}

// How many times to try the probe before restarting the container (liveness probe) or marking the container as unhealthy (readiness probe). The default value is `3` and the minimum value is `1`. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupContainerReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// The definition of the httpget for this container as documented in the `httpget` block below. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbePtrOutput) HttpGets() GroupContainerReadinessProbeHttpGetArrayOutput {
	return o.ApplyT(func(v *GroupContainerReadinessProbe) []GroupContainerReadinessProbeHttpGet {
		if v == nil {
			return nil
		}
		return v.HttpGets
	}).(GroupContainerReadinessProbeHttpGetArrayOutput)
}

// Number of seconds after the container has started before liveness or readiness probes are initiated. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupContainerReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe. The default value is `10` and the minimum value is `1`. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupContainerReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed. The default value is `1` and the minimum value is `1`. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupContainerReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// Number of seconds after which the probe times out. The default value is `1` and the minimum value is `1`. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupContainerReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

type GroupContainerReadinessProbeHttpGet struct {
	// Path to access on the HTTP server. Changing this forces a new resource to be created.
	Path *string `pulumi:"path"`
	// The port number the container will expose. Changing this forces a new resource to be created.
	Port *int `pulumi:"port"`
	// Scheme to use for connecting to the host. Possible values are `Http` and `Https`. Changing this forces a new resource to be created.
	Scheme *string `pulumi:"scheme"`
}

// GroupContainerReadinessProbeHttpGetInput is an input type that accepts GroupContainerReadinessProbeHttpGetArgs and GroupContainerReadinessProbeHttpGetOutput values.
// You can construct a concrete instance of `GroupContainerReadinessProbeHttpGetInput` via:
//
// 		 GroupContainerReadinessProbeHttpGetArgs{...}
//
type GroupContainerReadinessProbeHttpGetInput interface {
	pulumi.Input

	ToGroupContainerReadinessProbeHttpGetOutput() GroupContainerReadinessProbeHttpGetOutput
	ToGroupContainerReadinessProbeHttpGetOutputWithContext(context.Context) GroupContainerReadinessProbeHttpGetOutput
}

type GroupContainerReadinessProbeHttpGetArgs struct {
	// Path to access on the HTTP server. Changing this forces a new resource to be created.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port number the container will expose. Changing this forces a new resource to be created.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Scheme to use for connecting to the host. Possible values are `Http` and `Https`. Changing this forces a new resource to be created.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
}

func (GroupContainerReadinessProbeHttpGetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerReadinessProbeHttpGet)(nil)).Elem()
}

func (i GroupContainerReadinessProbeHttpGetArgs) ToGroupContainerReadinessProbeHttpGetOutput() GroupContainerReadinessProbeHttpGetOutput {
	return i.ToGroupContainerReadinessProbeHttpGetOutputWithContext(context.Background())
}

func (i GroupContainerReadinessProbeHttpGetArgs) ToGroupContainerReadinessProbeHttpGetOutputWithContext(ctx context.Context) GroupContainerReadinessProbeHttpGetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerReadinessProbeHttpGetOutput)
}

// GroupContainerReadinessProbeHttpGetArrayInput is an input type that accepts GroupContainerReadinessProbeHttpGetArray and GroupContainerReadinessProbeHttpGetArrayOutput values.
// You can construct a concrete instance of `GroupContainerReadinessProbeHttpGetArrayInput` via:
//
// 		 GroupContainerReadinessProbeHttpGetArray{ GroupContainerReadinessProbeHttpGetArgs{...} }
//
type GroupContainerReadinessProbeHttpGetArrayInput interface {
	pulumi.Input

	ToGroupContainerReadinessProbeHttpGetArrayOutput() GroupContainerReadinessProbeHttpGetArrayOutput
	ToGroupContainerReadinessProbeHttpGetArrayOutputWithContext(context.Context) GroupContainerReadinessProbeHttpGetArrayOutput
}

type GroupContainerReadinessProbeHttpGetArray []GroupContainerReadinessProbeHttpGetInput

func (GroupContainerReadinessProbeHttpGetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupContainerReadinessProbeHttpGet)(nil)).Elem()
}

func (i GroupContainerReadinessProbeHttpGetArray) ToGroupContainerReadinessProbeHttpGetArrayOutput() GroupContainerReadinessProbeHttpGetArrayOutput {
	return i.ToGroupContainerReadinessProbeHttpGetArrayOutputWithContext(context.Background())
}

func (i GroupContainerReadinessProbeHttpGetArray) ToGroupContainerReadinessProbeHttpGetArrayOutputWithContext(ctx context.Context) GroupContainerReadinessProbeHttpGetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerReadinessProbeHttpGetArrayOutput)
}

type GroupContainerReadinessProbeHttpGetOutput struct{ *pulumi.OutputState }

func (GroupContainerReadinessProbeHttpGetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerReadinessProbeHttpGet)(nil)).Elem()
}

func (o GroupContainerReadinessProbeHttpGetOutput) ToGroupContainerReadinessProbeHttpGetOutput() GroupContainerReadinessProbeHttpGetOutput {
	return o
}

func (o GroupContainerReadinessProbeHttpGetOutput) ToGroupContainerReadinessProbeHttpGetOutputWithContext(ctx context.Context) GroupContainerReadinessProbeHttpGetOutput {
	return o
}

// Path to access on the HTTP server. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbeHttpGetOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupContainerReadinessProbeHttpGet) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port number the container will expose. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbeHttpGetOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupContainerReadinessProbeHttpGet) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Scheme to use for connecting to the host. Possible values are `Http` and `Https`. Changing this forces a new resource to be created.
func (o GroupContainerReadinessProbeHttpGetOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupContainerReadinessProbeHttpGet) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type GroupContainerReadinessProbeHttpGetArrayOutput struct{ *pulumi.OutputState }

func (GroupContainerReadinessProbeHttpGetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupContainerReadinessProbeHttpGet)(nil)).Elem()
}

func (o GroupContainerReadinessProbeHttpGetArrayOutput) ToGroupContainerReadinessProbeHttpGetArrayOutput() GroupContainerReadinessProbeHttpGetArrayOutput {
	return o
}

func (o GroupContainerReadinessProbeHttpGetArrayOutput) ToGroupContainerReadinessProbeHttpGetArrayOutputWithContext(ctx context.Context) GroupContainerReadinessProbeHttpGetArrayOutput {
	return o
}

func (o GroupContainerReadinessProbeHttpGetArrayOutput) Index(i pulumi.IntInput) GroupContainerReadinessProbeHttpGetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupContainerReadinessProbeHttpGet {
		return vs[0].([]GroupContainerReadinessProbeHttpGet)[vs[1].(int)]
	}).(GroupContainerReadinessProbeHttpGetOutput)
}

type GroupContainerVolume struct {
	// The path on which this volume is to be mounted. Changing this forces a new resource to be created.
	MountPath string `pulumi:"mountPath"`
	// Specifies the name of the Container Group. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
	// Specify if the volume is to be mounted as read only or not. The default value is `false`. Changing this forces a new resource to be created.
	ReadOnly *bool `pulumi:"readOnly"`
	// The Azure storage share that is to be mounted as a volume. This must be created on the storage account specified as above. Changing this forces a new resource to be created.
	ShareName string `pulumi:"shareName"`
	// The access key for the Azure Storage account specified as above. Changing this forces a new resource to be created.
	StorageAccountKey string `pulumi:"storageAccountKey"`
	// The Azure storage account from which the volume is to be mounted. Changing this forces a new resource to be created.
	StorageAccountName string `pulumi:"storageAccountName"`
}

// GroupContainerVolumeInput is an input type that accepts GroupContainerVolumeArgs and GroupContainerVolumeOutput values.
// You can construct a concrete instance of `GroupContainerVolumeInput` via:
//
// 		 GroupContainerVolumeArgs{...}
//
type GroupContainerVolumeInput interface {
	pulumi.Input

	ToGroupContainerVolumeOutput() GroupContainerVolumeOutput
	ToGroupContainerVolumeOutputWithContext(context.Context) GroupContainerVolumeOutput
}

type GroupContainerVolumeArgs struct {
	// The path on which this volume is to be mounted. Changing this forces a new resource to be created.
	MountPath pulumi.StringInput `pulumi:"mountPath"`
	// Specifies the name of the Container Group. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// Specify if the volume is to be mounted as read only or not. The default value is `false`. Changing this forces a new resource to be created.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// The Azure storage share that is to be mounted as a volume. This must be created on the storage account specified as above. Changing this forces a new resource to be created.
	ShareName pulumi.StringInput `pulumi:"shareName"`
	// The access key for the Azure Storage account specified as above. Changing this forces a new resource to be created.
	StorageAccountKey pulumi.StringInput `pulumi:"storageAccountKey"`
	// The Azure storage account from which the volume is to be mounted. Changing this forces a new resource to be created.
	StorageAccountName pulumi.StringInput `pulumi:"storageAccountName"`
}

func (GroupContainerVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerVolume)(nil)).Elem()
}

func (i GroupContainerVolumeArgs) ToGroupContainerVolumeOutput() GroupContainerVolumeOutput {
	return i.ToGroupContainerVolumeOutputWithContext(context.Background())
}

func (i GroupContainerVolumeArgs) ToGroupContainerVolumeOutputWithContext(ctx context.Context) GroupContainerVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerVolumeOutput)
}

// GroupContainerVolumeArrayInput is an input type that accepts GroupContainerVolumeArray and GroupContainerVolumeArrayOutput values.
// You can construct a concrete instance of `GroupContainerVolumeArrayInput` via:
//
// 		 GroupContainerVolumeArray{ GroupContainerVolumeArgs{...} }
//
type GroupContainerVolumeArrayInput interface {
	pulumi.Input

	ToGroupContainerVolumeArrayOutput() GroupContainerVolumeArrayOutput
	ToGroupContainerVolumeArrayOutputWithContext(context.Context) GroupContainerVolumeArrayOutput
}

type GroupContainerVolumeArray []GroupContainerVolumeInput

func (GroupContainerVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupContainerVolume)(nil)).Elem()
}

func (i GroupContainerVolumeArray) ToGroupContainerVolumeArrayOutput() GroupContainerVolumeArrayOutput {
	return i.ToGroupContainerVolumeArrayOutputWithContext(context.Background())
}

func (i GroupContainerVolumeArray) ToGroupContainerVolumeArrayOutputWithContext(ctx context.Context) GroupContainerVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupContainerVolumeArrayOutput)
}

type GroupContainerVolumeOutput struct{ *pulumi.OutputState }

func (GroupContainerVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupContainerVolume)(nil)).Elem()
}

func (o GroupContainerVolumeOutput) ToGroupContainerVolumeOutput() GroupContainerVolumeOutput {
	return o
}

func (o GroupContainerVolumeOutput) ToGroupContainerVolumeOutputWithContext(ctx context.Context) GroupContainerVolumeOutput {
	return o
}

// The path on which this volume is to be mounted. Changing this forces a new resource to be created.
func (o GroupContainerVolumeOutput) MountPath() pulumi.StringOutput {
	return o.ApplyT(func(v GroupContainerVolume) string { return v.MountPath }).(pulumi.StringOutput)
}

// Specifies the name of the Container Group. Changing this forces a new resource to be created.
func (o GroupContainerVolumeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GroupContainerVolume) string { return v.Name }).(pulumi.StringOutput)
}

// Specify if the volume is to be mounted as read only or not. The default value is `false`. Changing this forces a new resource to be created.
func (o GroupContainerVolumeOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GroupContainerVolume) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// The Azure storage share that is to be mounted as a volume. This must be created on the storage account specified as above. Changing this forces a new resource to be created.
func (o GroupContainerVolumeOutput) ShareName() pulumi.StringOutput {
	return o.ApplyT(func(v GroupContainerVolume) string { return v.ShareName }).(pulumi.StringOutput)
}

// The access key for the Azure Storage account specified as above. Changing this forces a new resource to be created.
func (o GroupContainerVolumeOutput) StorageAccountKey() pulumi.StringOutput {
	return o.ApplyT(func(v GroupContainerVolume) string { return v.StorageAccountKey }).(pulumi.StringOutput)
}

// The Azure storage account from which the volume is to be mounted. Changing this forces a new resource to be created.
func (o GroupContainerVolumeOutput) StorageAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GroupContainerVolume) string { return v.StorageAccountName }).(pulumi.StringOutput)
}

type GroupContainerVolumeArrayOutput struct{ *pulumi.OutputState }

func (GroupContainerVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupContainerVolume)(nil)).Elem()
}

func (o GroupContainerVolumeArrayOutput) ToGroupContainerVolumeArrayOutput() GroupContainerVolumeArrayOutput {
	return o
}

func (o GroupContainerVolumeArrayOutput) ToGroupContainerVolumeArrayOutputWithContext(ctx context.Context) GroupContainerVolumeArrayOutput {
	return o
}

func (o GroupContainerVolumeArrayOutput) Index(i pulumi.IntInput) GroupContainerVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupContainerVolume {
		return vs[0].([]GroupContainerVolume)[vs[1].(int)]
	}).(GroupContainerVolumeOutput)
}

type GroupDiagnostics struct {
	// A `logAnalytics` block as defined below. Changing this forces a new resource to be created.
	LogAnalytics GroupDiagnosticsLogAnalytics `pulumi:"logAnalytics"`
}

// GroupDiagnosticsInput is an input type that accepts GroupDiagnosticsArgs and GroupDiagnosticsOutput values.
// You can construct a concrete instance of `GroupDiagnosticsInput` via:
//
// 		 GroupDiagnosticsArgs{...}
//
type GroupDiagnosticsInput interface {
	pulumi.Input

	ToGroupDiagnosticsOutput() GroupDiagnosticsOutput
	ToGroupDiagnosticsOutputWithContext(context.Context) GroupDiagnosticsOutput
}

type GroupDiagnosticsArgs struct {
	// A `logAnalytics` block as defined below. Changing this forces a new resource to be created.
	LogAnalytics GroupDiagnosticsLogAnalyticsInput `pulumi:"logAnalytics"`
}

func (GroupDiagnosticsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupDiagnostics)(nil)).Elem()
}

func (i GroupDiagnosticsArgs) ToGroupDiagnosticsOutput() GroupDiagnosticsOutput {
	return i.ToGroupDiagnosticsOutputWithContext(context.Background())
}

func (i GroupDiagnosticsArgs) ToGroupDiagnosticsOutputWithContext(ctx context.Context) GroupDiagnosticsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupDiagnosticsOutput)
}

func (i GroupDiagnosticsArgs) ToGroupDiagnosticsPtrOutput() GroupDiagnosticsPtrOutput {
	return i.ToGroupDiagnosticsPtrOutputWithContext(context.Background())
}

func (i GroupDiagnosticsArgs) ToGroupDiagnosticsPtrOutputWithContext(ctx context.Context) GroupDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupDiagnosticsOutput).ToGroupDiagnosticsPtrOutputWithContext(ctx)
}

// GroupDiagnosticsPtrInput is an input type that accepts GroupDiagnosticsArgs, GroupDiagnosticsPtr and GroupDiagnosticsPtrOutput values.
// You can construct a concrete instance of `GroupDiagnosticsPtrInput` via:
//
// 		 GroupDiagnosticsArgs{...}
//
//  or:
//
// 		 nil
//
type GroupDiagnosticsPtrInput interface {
	pulumi.Input

	ToGroupDiagnosticsPtrOutput() GroupDiagnosticsPtrOutput
	ToGroupDiagnosticsPtrOutputWithContext(context.Context) GroupDiagnosticsPtrOutput
}

type groupDiagnosticsPtrType GroupDiagnosticsArgs

func GroupDiagnosticsPtr(v *GroupDiagnosticsArgs) GroupDiagnosticsPtrInput {
	return (*groupDiagnosticsPtrType)(v)
}

func (*groupDiagnosticsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupDiagnostics)(nil)).Elem()
}

func (i *groupDiagnosticsPtrType) ToGroupDiagnosticsPtrOutput() GroupDiagnosticsPtrOutput {
	return i.ToGroupDiagnosticsPtrOutputWithContext(context.Background())
}

func (i *groupDiagnosticsPtrType) ToGroupDiagnosticsPtrOutputWithContext(ctx context.Context) GroupDiagnosticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupDiagnosticsPtrOutput)
}

type GroupDiagnosticsOutput struct{ *pulumi.OutputState }

func (GroupDiagnosticsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupDiagnostics)(nil)).Elem()
}

func (o GroupDiagnosticsOutput) ToGroupDiagnosticsOutput() GroupDiagnosticsOutput {
	return o
}

func (o GroupDiagnosticsOutput) ToGroupDiagnosticsOutputWithContext(ctx context.Context) GroupDiagnosticsOutput {
	return o
}

func (o GroupDiagnosticsOutput) ToGroupDiagnosticsPtrOutput() GroupDiagnosticsPtrOutput {
	return o.ToGroupDiagnosticsPtrOutputWithContext(context.Background())
}

func (o GroupDiagnosticsOutput) ToGroupDiagnosticsPtrOutputWithContext(ctx context.Context) GroupDiagnosticsPtrOutput {
	return o.ApplyT(func(v GroupDiagnostics) *GroupDiagnostics {
		return &v
	}).(GroupDiagnosticsPtrOutput)
}

// A `logAnalytics` block as defined below. Changing this forces a new resource to be created.
func (o GroupDiagnosticsOutput) LogAnalytics() GroupDiagnosticsLogAnalyticsOutput {
	return o.ApplyT(func(v GroupDiagnostics) GroupDiagnosticsLogAnalytics { return v.LogAnalytics }).(GroupDiagnosticsLogAnalyticsOutput)
}

type GroupDiagnosticsPtrOutput struct{ *pulumi.OutputState }

func (GroupDiagnosticsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupDiagnostics)(nil)).Elem()
}

func (o GroupDiagnosticsPtrOutput) ToGroupDiagnosticsPtrOutput() GroupDiagnosticsPtrOutput {
	return o
}

func (o GroupDiagnosticsPtrOutput) ToGroupDiagnosticsPtrOutputWithContext(ctx context.Context) GroupDiagnosticsPtrOutput {
	return o
}

func (o GroupDiagnosticsPtrOutput) Elem() GroupDiagnosticsOutput {
	return o.ApplyT(func(v *GroupDiagnostics) GroupDiagnostics { return *v }).(GroupDiagnosticsOutput)
}

// A `logAnalytics` block as defined below. Changing this forces a new resource to be created.
func (o GroupDiagnosticsPtrOutput) LogAnalytics() GroupDiagnosticsLogAnalyticsPtrOutput {
	return o.ApplyT(func(v *GroupDiagnostics) *GroupDiagnosticsLogAnalytics {
		if v == nil {
			return nil
		}
		return &v.LogAnalytics
	}).(GroupDiagnosticsLogAnalyticsPtrOutput)
}

type GroupDiagnosticsLogAnalytics struct {
	// The log type which should be used. Possible values are `ContainerInsights` and `ContainerInstanceLogs`. Changing this forces a new resource to be created.
	LogType *string `pulumi:"logType"`
	// Any metadata required for Log Analytics. Changing this forces a new resource to be created.
	Metadata map[string]string `pulumi:"metadata"`
	// The Workspace ID of the Log Analytics Workspace. Changing this forces a new resource to be created.
	WorkspaceId string `pulumi:"workspaceId"`
	// The Workspace Key of the Log Analytics Workspace. Changing this forces a new resource to be created.
	WorkspaceKey string `pulumi:"workspaceKey"`
}

// GroupDiagnosticsLogAnalyticsInput is an input type that accepts GroupDiagnosticsLogAnalyticsArgs and GroupDiagnosticsLogAnalyticsOutput values.
// You can construct a concrete instance of `GroupDiagnosticsLogAnalyticsInput` via:
//
// 		 GroupDiagnosticsLogAnalyticsArgs{...}
//
type GroupDiagnosticsLogAnalyticsInput interface {
	pulumi.Input

	ToGroupDiagnosticsLogAnalyticsOutput() GroupDiagnosticsLogAnalyticsOutput
	ToGroupDiagnosticsLogAnalyticsOutputWithContext(context.Context) GroupDiagnosticsLogAnalyticsOutput
}

type GroupDiagnosticsLogAnalyticsArgs struct {
	// The log type which should be used. Possible values are `ContainerInsights` and `ContainerInstanceLogs`. Changing this forces a new resource to be created.
	LogType pulumi.StringPtrInput `pulumi:"logType"`
	// Any metadata required for Log Analytics. Changing this forces a new resource to be created.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// The Workspace ID of the Log Analytics Workspace. Changing this forces a new resource to be created.
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
	// The Workspace Key of the Log Analytics Workspace. Changing this forces a new resource to be created.
	WorkspaceKey pulumi.StringInput `pulumi:"workspaceKey"`
}

func (GroupDiagnosticsLogAnalyticsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupDiagnosticsLogAnalytics)(nil)).Elem()
}

func (i GroupDiagnosticsLogAnalyticsArgs) ToGroupDiagnosticsLogAnalyticsOutput() GroupDiagnosticsLogAnalyticsOutput {
	return i.ToGroupDiagnosticsLogAnalyticsOutputWithContext(context.Background())
}

func (i GroupDiagnosticsLogAnalyticsArgs) ToGroupDiagnosticsLogAnalyticsOutputWithContext(ctx context.Context) GroupDiagnosticsLogAnalyticsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupDiagnosticsLogAnalyticsOutput)
}

func (i GroupDiagnosticsLogAnalyticsArgs) ToGroupDiagnosticsLogAnalyticsPtrOutput() GroupDiagnosticsLogAnalyticsPtrOutput {
	return i.ToGroupDiagnosticsLogAnalyticsPtrOutputWithContext(context.Background())
}

func (i GroupDiagnosticsLogAnalyticsArgs) ToGroupDiagnosticsLogAnalyticsPtrOutputWithContext(ctx context.Context) GroupDiagnosticsLogAnalyticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupDiagnosticsLogAnalyticsOutput).ToGroupDiagnosticsLogAnalyticsPtrOutputWithContext(ctx)
}

// GroupDiagnosticsLogAnalyticsPtrInput is an input type that accepts GroupDiagnosticsLogAnalyticsArgs, GroupDiagnosticsLogAnalyticsPtr and GroupDiagnosticsLogAnalyticsPtrOutput values.
// You can construct a concrete instance of `GroupDiagnosticsLogAnalyticsPtrInput` via:
//
// 		 GroupDiagnosticsLogAnalyticsArgs{...}
//
//  or:
//
// 		 nil
//
type GroupDiagnosticsLogAnalyticsPtrInput interface {
	pulumi.Input

	ToGroupDiagnosticsLogAnalyticsPtrOutput() GroupDiagnosticsLogAnalyticsPtrOutput
	ToGroupDiagnosticsLogAnalyticsPtrOutputWithContext(context.Context) GroupDiagnosticsLogAnalyticsPtrOutput
}

type groupDiagnosticsLogAnalyticsPtrType GroupDiagnosticsLogAnalyticsArgs

func GroupDiagnosticsLogAnalyticsPtr(v *GroupDiagnosticsLogAnalyticsArgs) GroupDiagnosticsLogAnalyticsPtrInput {
	return (*groupDiagnosticsLogAnalyticsPtrType)(v)
}

func (*groupDiagnosticsLogAnalyticsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupDiagnosticsLogAnalytics)(nil)).Elem()
}

func (i *groupDiagnosticsLogAnalyticsPtrType) ToGroupDiagnosticsLogAnalyticsPtrOutput() GroupDiagnosticsLogAnalyticsPtrOutput {
	return i.ToGroupDiagnosticsLogAnalyticsPtrOutputWithContext(context.Background())
}

func (i *groupDiagnosticsLogAnalyticsPtrType) ToGroupDiagnosticsLogAnalyticsPtrOutputWithContext(ctx context.Context) GroupDiagnosticsLogAnalyticsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupDiagnosticsLogAnalyticsPtrOutput)
}

type GroupDiagnosticsLogAnalyticsOutput struct{ *pulumi.OutputState }

func (GroupDiagnosticsLogAnalyticsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupDiagnosticsLogAnalytics)(nil)).Elem()
}

func (o GroupDiagnosticsLogAnalyticsOutput) ToGroupDiagnosticsLogAnalyticsOutput() GroupDiagnosticsLogAnalyticsOutput {
	return o
}

func (o GroupDiagnosticsLogAnalyticsOutput) ToGroupDiagnosticsLogAnalyticsOutputWithContext(ctx context.Context) GroupDiagnosticsLogAnalyticsOutput {
	return o
}

func (o GroupDiagnosticsLogAnalyticsOutput) ToGroupDiagnosticsLogAnalyticsPtrOutput() GroupDiagnosticsLogAnalyticsPtrOutput {
	return o.ToGroupDiagnosticsLogAnalyticsPtrOutputWithContext(context.Background())
}

func (o GroupDiagnosticsLogAnalyticsOutput) ToGroupDiagnosticsLogAnalyticsPtrOutputWithContext(ctx context.Context) GroupDiagnosticsLogAnalyticsPtrOutput {
	return o.ApplyT(func(v GroupDiagnosticsLogAnalytics) *GroupDiagnosticsLogAnalytics {
		return &v
	}).(GroupDiagnosticsLogAnalyticsPtrOutput)
}

// The log type which should be used. Possible values are `ContainerInsights` and `ContainerInstanceLogs`. Changing this forces a new resource to be created.
func (o GroupDiagnosticsLogAnalyticsOutput) LogType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupDiagnosticsLogAnalytics) *string { return v.LogType }).(pulumi.StringPtrOutput)
}

// Any metadata required for Log Analytics. Changing this forces a new resource to be created.
func (o GroupDiagnosticsLogAnalyticsOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v GroupDiagnosticsLogAnalytics) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// The Workspace ID of the Log Analytics Workspace. Changing this forces a new resource to be created.
func (o GroupDiagnosticsLogAnalyticsOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GroupDiagnosticsLogAnalytics) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

// The Workspace Key of the Log Analytics Workspace. Changing this forces a new resource to be created.
func (o GroupDiagnosticsLogAnalyticsOutput) WorkspaceKey() pulumi.StringOutput {
	return o.ApplyT(func(v GroupDiagnosticsLogAnalytics) string { return v.WorkspaceKey }).(pulumi.StringOutput)
}

type GroupDiagnosticsLogAnalyticsPtrOutput struct{ *pulumi.OutputState }

func (GroupDiagnosticsLogAnalyticsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupDiagnosticsLogAnalytics)(nil)).Elem()
}

func (o GroupDiagnosticsLogAnalyticsPtrOutput) ToGroupDiagnosticsLogAnalyticsPtrOutput() GroupDiagnosticsLogAnalyticsPtrOutput {
	return o
}

func (o GroupDiagnosticsLogAnalyticsPtrOutput) ToGroupDiagnosticsLogAnalyticsPtrOutputWithContext(ctx context.Context) GroupDiagnosticsLogAnalyticsPtrOutput {
	return o
}

func (o GroupDiagnosticsLogAnalyticsPtrOutput) Elem() GroupDiagnosticsLogAnalyticsOutput {
	return o.ApplyT(func(v *GroupDiagnosticsLogAnalytics) GroupDiagnosticsLogAnalytics { return *v }).(GroupDiagnosticsLogAnalyticsOutput)
}

// The log type which should be used. Possible values are `ContainerInsights` and `ContainerInstanceLogs`. Changing this forces a new resource to be created.
func (o GroupDiagnosticsLogAnalyticsPtrOutput) LogType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupDiagnosticsLogAnalytics) *string {
		if v == nil {
			return nil
		}
		return v.LogType
	}).(pulumi.StringPtrOutput)
}

// Any metadata required for Log Analytics. Changing this forces a new resource to be created.
func (o GroupDiagnosticsLogAnalyticsPtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GroupDiagnosticsLogAnalytics) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// The Workspace ID of the Log Analytics Workspace. Changing this forces a new resource to be created.
func (o GroupDiagnosticsLogAnalyticsPtrOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupDiagnosticsLogAnalytics) *string {
		if v == nil {
			return nil
		}
		return &v.WorkspaceId
	}).(pulumi.StringPtrOutput)
}

// The Workspace Key of the Log Analytics Workspace. Changing this forces a new resource to be created.
func (o GroupDiagnosticsLogAnalyticsPtrOutput) WorkspaceKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupDiagnosticsLogAnalytics) *string {
		if v == nil {
			return nil
		}
		return &v.WorkspaceKey
	}).(pulumi.StringPtrOutput)
}

type GroupIdentity struct {
	// Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`. Changing this forces a new resource to be created.
	IdentityIds []string `pulumi:"identityIds"`
	PrincipalId *string  `pulumi:"principalId"`
	// The Managed Service Identity Type of this container group. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identityIds` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities. Changing this forces a new resource to be created.
	Type string `pulumi:"type"`
}

// GroupIdentityInput is an input type that accepts GroupIdentityArgs and GroupIdentityOutput values.
// You can construct a concrete instance of `GroupIdentityInput` via:
//
// 		 GroupIdentityArgs{...}
//
type GroupIdentityInput interface {
	pulumi.Input

	ToGroupIdentityOutput() GroupIdentityOutput
	ToGroupIdentityOutputWithContext(context.Context) GroupIdentityOutput
}

type GroupIdentityArgs struct {
	// Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`. Changing this forces a new resource to be created.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	PrincipalId pulumi.StringPtrInput   `pulumi:"principalId"`
	// The Managed Service Identity Type of this container group. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identityIds` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities. Changing this forces a new resource to be created.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GroupIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupIdentity)(nil)).Elem()
}

func (i GroupIdentityArgs) ToGroupIdentityOutput() GroupIdentityOutput {
	return i.ToGroupIdentityOutputWithContext(context.Background())
}

func (i GroupIdentityArgs) ToGroupIdentityOutputWithContext(ctx context.Context) GroupIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupIdentityOutput)
}

func (i GroupIdentityArgs) ToGroupIdentityPtrOutput() GroupIdentityPtrOutput {
	return i.ToGroupIdentityPtrOutputWithContext(context.Background())
}

func (i GroupIdentityArgs) ToGroupIdentityPtrOutputWithContext(ctx context.Context) GroupIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupIdentityOutput).ToGroupIdentityPtrOutputWithContext(ctx)
}

// GroupIdentityPtrInput is an input type that accepts GroupIdentityArgs, GroupIdentityPtr and GroupIdentityPtrOutput values.
// You can construct a concrete instance of `GroupIdentityPtrInput` via:
//
// 		 GroupIdentityArgs{...}
//
//  or:
//
// 		 nil
//
type GroupIdentityPtrInput interface {
	pulumi.Input

	ToGroupIdentityPtrOutput() GroupIdentityPtrOutput
	ToGroupIdentityPtrOutputWithContext(context.Context) GroupIdentityPtrOutput
}

type groupIdentityPtrType GroupIdentityArgs

func GroupIdentityPtr(v *GroupIdentityArgs) GroupIdentityPtrInput {
	return (*groupIdentityPtrType)(v)
}

func (*groupIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupIdentity)(nil)).Elem()
}

func (i *groupIdentityPtrType) ToGroupIdentityPtrOutput() GroupIdentityPtrOutput {
	return i.ToGroupIdentityPtrOutputWithContext(context.Background())
}

func (i *groupIdentityPtrType) ToGroupIdentityPtrOutputWithContext(ctx context.Context) GroupIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupIdentityPtrOutput)
}

type GroupIdentityOutput struct{ *pulumi.OutputState }

func (GroupIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupIdentity)(nil)).Elem()
}

func (o GroupIdentityOutput) ToGroupIdentityOutput() GroupIdentityOutput {
	return o
}

func (o GroupIdentityOutput) ToGroupIdentityOutputWithContext(ctx context.Context) GroupIdentityOutput {
	return o
}

func (o GroupIdentityOutput) ToGroupIdentityPtrOutput() GroupIdentityPtrOutput {
	return o.ToGroupIdentityPtrOutputWithContext(context.Background())
}

func (o GroupIdentityOutput) ToGroupIdentityPtrOutputWithContext(ctx context.Context) GroupIdentityPtrOutput {
	return o.ApplyT(func(v GroupIdentity) *GroupIdentity {
		return &v
	}).(GroupIdentityPtrOutput)
}

// Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`. Changing this forces a new resource to be created.
func (o GroupIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

func (o GroupIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The Managed Service Identity Type of this container group. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identityIds` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities. Changing this forces a new resource to be created.
func (o GroupIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GroupIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type GroupIdentityPtrOutput struct{ *pulumi.OutputState }

func (GroupIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupIdentity)(nil)).Elem()
}

func (o GroupIdentityPtrOutput) ToGroupIdentityPtrOutput() GroupIdentityPtrOutput {
	return o
}

func (o GroupIdentityPtrOutput) ToGroupIdentityPtrOutputWithContext(ctx context.Context) GroupIdentityPtrOutput {
	return o
}

func (o GroupIdentityPtrOutput) Elem() GroupIdentityOutput {
	return o.ApplyT(func(v *GroupIdentity) GroupIdentity { return *v }).(GroupIdentityOutput)
}

// Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`. Changing this forces a new resource to be created.
func (o GroupIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

func (o GroupIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Managed Service Identity Type of this container group. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identityIds` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities. Changing this forces a new resource to be created.
func (o GroupIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type GroupImageRegistryCredential struct {
	// The password with which to connect to the registry. Changing this forces a new resource to be created.
	Password string `pulumi:"password"`
	// The address to use to connect to the registry without protocol ("https"/"http"). For example: "myacr.acr.io". Changing this forces a new resource to be created.
	Server string `pulumi:"server"`
	// The username with which to connect to the registry. Changing this forces a new resource to be created.
	Username string `pulumi:"username"`
}

// GroupImageRegistryCredentialInput is an input type that accepts GroupImageRegistryCredentialArgs and GroupImageRegistryCredentialOutput values.
// You can construct a concrete instance of `GroupImageRegistryCredentialInput` via:
//
// 		 GroupImageRegistryCredentialArgs{...}
//
type GroupImageRegistryCredentialInput interface {
	pulumi.Input

	ToGroupImageRegistryCredentialOutput() GroupImageRegistryCredentialOutput
	ToGroupImageRegistryCredentialOutputWithContext(context.Context) GroupImageRegistryCredentialOutput
}

type GroupImageRegistryCredentialArgs struct {
	// The password with which to connect to the registry. Changing this forces a new resource to be created.
	Password pulumi.StringInput `pulumi:"password"`
	// The address to use to connect to the registry without protocol ("https"/"http"). For example: "myacr.acr.io". Changing this forces a new resource to be created.
	Server pulumi.StringInput `pulumi:"server"`
	// The username with which to connect to the registry. Changing this forces a new resource to be created.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GroupImageRegistryCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupImageRegistryCredential)(nil)).Elem()
}

func (i GroupImageRegistryCredentialArgs) ToGroupImageRegistryCredentialOutput() GroupImageRegistryCredentialOutput {
	return i.ToGroupImageRegistryCredentialOutputWithContext(context.Background())
}

func (i GroupImageRegistryCredentialArgs) ToGroupImageRegistryCredentialOutputWithContext(ctx context.Context) GroupImageRegistryCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupImageRegistryCredentialOutput)
}

// GroupImageRegistryCredentialArrayInput is an input type that accepts GroupImageRegistryCredentialArray and GroupImageRegistryCredentialArrayOutput values.
// You can construct a concrete instance of `GroupImageRegistryCredentialArrayInput` via:
//
// 		 GroupImageRegistryCredentialArray{ GroupImageRegistryCredentialArgs{...} }
//
type GroupImageRegistryCredentialArrayInput interface {
	pulumi.Input

	ToGroupImageRegistryCredentialArrayOutput() GroupImageRegistryCredentialArrayOutput
	ToGroupImageRegistryCredentialArrayOutputWithContext(context.Context) GroupImageRegistryCredentialArrayOutput
}

type GroupImageRegistryCredentialArray []GroupImageRegistryCredentialInput

func (GroupImageRegistryCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupImageRegistryCredential)(nil)).Elem()
}

func (i GroupImageRegistryCredentialArray) ToGroupImageRegistryCredentialArrayOutput() GroupImageRegistryCredentialArrayOutput {
	return i.ToGroupImageRegistryCredentialArrayOutputWithContext(context.Background())
}

func (i GroupImageRegistryCredentialArray) ToGroupImageRegistryCredentialArrayOutputWithContext(ctx context.Context) GroupImageRegistryCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupImageRegistryCredentialArrayOutput)
}

type GroupImageRegistryCredentialOutput struct{ *pulumi.OutputState }

func (GroupImageRegistryCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupImageRegistryCredential)(nil)).Elem()
}

func (o GroupImageRegistryCredentialOutput) ToGroupImageRegistryCredentialOutput() GroupImageRegistryCredentialOutput {
	return o
}

func (o GroupImageRegistryCredentialOutput) ToGroupImageRegistryCredentialOutputWithContext(ctx context.Context) GroupImageRegistryCredentialOutput {
	return o
}

// The password with which to connect to the registry. Changing this forces a new resource to be created.
func (o GroupImageRegistryCredentialOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GroupImageRegistryCredential) string { return v.Password }).(pulumi.StringOutput)
}

// The address to use to connect to the registry without protocol ("https"/"http"). For example: "myacr.acr.io". Changing this forces a new resource to be created.
func (o GroupImageRegistryCredentialOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v GroupImageRegistryCredential) string { return v.Server }).(pulumi.StringOutput)
}

// The username with which to connect to the registry. Changing this forces a new resource to be created.
func (o GroupImageRegistryCredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GroupImageRegistryCredential) string { return v.Username }).(pulumi.StringOutput)
}

type GroupImageRegistryCredentialArrayOutput struct{ *pulumi.OutputState }

func (GroupImageRegistryCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupImageRegistryCredential)(nil)).Elem()
}

func (o GroupImageRegistryCredentialArrayOutput) ToGroupImageRegistryCredentialArrayOutput() GroupImageRegistryCredentialArrayOutput {
	return o
}

func (o GroupImageRegistryCredentialArrayOutput) ToGroupImageRegistryCredentialArrayOutputWithContext(ctx context.Context) GroupImageRegistryCredentialArrayOutput {
	return o
}

func (o GroupImageRegistryCredentialArrayOutput) Index(i pulumi.IntInput) GroupImageRegistryCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupImageRegistryCredential {
		return vs[0].([]GroupImageRegistryCredential)[vs[1].(int)]
	}).(GroupImageRegistryCredentialOutput)
}

type KubernetesClusterAddonProfile struct {
	// A `aciConnectorLinux` block. For more details, please visit [Create and configure an AKS cluster to use virtual nodes](https://docs.microsoft.com/en-us/azure/aks/virtual-nodes-portal).
	AciConnectorLinux *KubernetesClusterAddonProfileAciConnectorLinux `pulumi:"aciConnectorLinux"`
	// A `azurePolicy` block as defined below. For more details please visit [Understand Azure Policy for Azure Kubernetes Service](https://docs.microsoft.com/en-ie/azure/governance/policy/concepts/rego-for-aks)
	AzurePolicy *KubernetesClusterAddonProfileAzurePolicy `pulumi:"azurePolicy"`
	// A `httpApplicationRouting` block as defined below.
	HttpApplicationRouting *KubernetesClusterAddonProfileHttpApplicationRouting `pulumi:"httpApplicationRouting"`
	// A `kubeDashboard` block as defined below.
	KubeDashboard *KubernetesClusterAddonProfileKubeDashboard `pulumi:"kubeDashboard"`
	// A `omsAgent` block as defined below. For more details, please visit [How to onboard Azure Monitor for containers](https://docs.microsoft.com/en-us/azure/monitoring/monitoring-container-insights-onboard).
	OmsAgent *KubernetesClusterAddonProfileOmsAgent `pulumi:"omsAgent"`
}

// KubernetesClusterAddonProfileInput is an input type that accepts KubernetesClusterAddonProfileArgs and KubernetesClusterAddonProfileOutput values.
// You can construct a concrete instance of `KubernetesClusterAddonProfileInput` via:
//
// 		 KubernetesClusterAddonProfileArgs{...}
//
type KubernetesClusterAddonProfileInput interface {
	pulumi.Input

	ToKubernetesClusterAddonProfileOutput() KubernetesClusterAddonProfileOutput
	ToKubernetesClusterAddonProfileOutputWithContext(context.Context) KubernetesClusterAddonProfileOutput
}

type KubernetesClusterAddonProfileArgs struct {
	// A `aciConnectorLinux` block. For more details, please visit [Create and configure an AKS cluster to use virtual nodes](https://docs.microsoft.com/en-us/azure/aks/virtual-nodes-portal).
	AciConnectorLinux KubernetesClusterAddonProfileAciConnectorLinuxPtrInput `pulumi:"aciConnectorLinux"`
	// A `azurePolicy` block as defined below. For more details please visit [Understand Azure Policy for Azure Kubernetes Service](https://docs.microsoft.com/en-ie/azure/governance/policy/concepts/rego-for-aks)
	AzurePolicy KubernetesClusterAddonProfileAzurePolicyPtrInput `pulumi:"azurePolicy"`
	// A `httpApplicationRouting` block as defined below.
	HttpApplicationRouting KubernetesClusterAddonProfileHttpApplicationRoutingPtrInput `pulumi:"httpApplicationRouting"`
	// A `kubeDashboard` block as defined below.
	KubeDashboard KubernetesClusterAddonProfileKubeDashboardPtrInput `pulumi:"kubeDashboard"`
	// A `omsAgent` block as defined below. For more details, please visit [How to onboard Azure Monitor for containers](https://docs.microsoft.com/en-us/azure/monitoring/monitoring-container-insights-onboard).
	OmsAgent KubernetesClusterAddonProfileOmsAgentPtrInput `pulumi:"omsAgent"`
}

func (KubernetesClusterAddonProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterAddonProfile)(nil)).Elem()
}

func (i KubernetesClusterAddonProfileArgs) ToKubernetesClusterAddonProfileOutput() KubernetesClusterAddonProfileOutput {
	return i.ToKubernetesClusterAddonProfileOutputWithContext(context.Background())
}

func (i KubernetesClusterAddonProfileArgs) ToKubernetesClusterAddonProfileOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAddonProfileOutput)
}

func (i KubernetesClusterAddonProfileArgs) ToKubernetesClusterAddonProfilePtrOutput() KubernetesClusterAddonProfilePtrOutput {
	return i.ToKubernetesClusterAddonProfilePtrOutputWithContext(context.Background())
}

func (i KubernetesClusterAddonProfileArgs) ToKubernetesClusterAddonProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterAddonProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAddonProfileOutput).ToKubernetesClusterAddonProfilePtrOutputWithContext(ctx)
}

// KubernetesClusterAddonProfilePtrInput is an input type that accepts KubernetesClusterAddonProfileArgs, KubernetesClusterAddonProfilePtr and KubernetesClusterAddonProfilePtrOutput values.
// You can construct a concrete instance of `KubernetesClusterAddonProfilePtrInput` via:
//
// 		 KubernetesClusterAddonProfileArgs{...}
//
//  or:
//
// 		 nil
//
type KubernetesClusterAddonProfilePtrInput interface {
	pulumi.Input

	ToKubernetesClusterAddonProfilePtrOutput() KubernetesClusterAddonProfilePtrOutput
	ToKubernetesClusterAddonProfilePtrOutputWithContext(context.Context) KubernetesClusterAddonProfilePtrOutput
}

type kubernetesClusterAddonProfilePtrType KubernetesClusterAddonProfileArgs

func KubernetesClusterAddonProfilePtr(v *KubernetesClusterAddonProfileArgs) KubernetesClusterAddonProfilePtrInput {
	return (*kubernetesClusterAddonProfilePtrType)(v)
}

func (*kubernetesClusterAddonProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterAddonProfile)(nil)).Elem()
}

func (i *kubernetesClusterAddonProfilePtrType) ToKubernetesClusterAddonProfilePtrOutput() KubernetesClusterAddonProfilePtrOutput {
	return i.ToKubernetesClusterAddonProfilePtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterAddonProfilePtrType) ToKubernetesClusterAddonProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterAddonProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAddonProfilePtrOutput)
}

type KubernetesClusterAddonProfileOutput struct{ *pulumi.OutputState }

func (KubernetesClusterAddonProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterAddonProfile)(nil)).Elem()
}

func (o KubernetesClusterAddonProfileOutput) ToKubernetesClusterAddonProfileOutput() KubernetesClusterAddonProfileOutput {
	return o
}

func (o KubernetesClusterAddonProfileOutput) ToKubernetesClusterAddonProfileOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileOutput {
	return o
}

func (o KubernetesClusterAddonProfileOutput) ToKubernetesClusterAddonProfilePtrOutput() KubernetesClusterAddonProfilePtrOutput {
	return o.ToKubernetesClusterAddonProfilePtrOutputWithContext(context.Background())
}

func (o KubernetesClusterAddonProfileOutput) ToKubernetesClusterAddonProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterAddonProfilePtrOutput {
	return o.ApplyT(func(v KubernetesClusterAddonProfile) *KubernetesClusterAddonProfile {
		return &v
	}).(KubernetesClusterAddonProfilePtrOutput)
}

// A `aciConnectorLinux` block. For more details, please visit [Create and configure an AKS cluster to use virtual nodes](https://docs.microsoft.com/en-us/azure/aks/virtual-nodes-portal).
func (o KubernetesClusterAddonProfileOutput) AciConnectorLinux() KubernetesClusterAddonProfileAciConnectorLinuxPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAddonProfile) *KubernetesClusterAddonProfileAciConnectorLinux {
		return v.AciConnectorLinux
	}).(KubernetesClusterAddonProfileAciConnectorLinuxPtrOutput)
}

// A `azurePolicy` block as defined below. For more details please visit [Understand Azure Policy for Azure Kubernetes Service](https://docs.microsoft.com/en-ie/azure/governance/policy/concepts/rego-for-aks)
func (o KubernetesClusterAddonProfileOutput) AzurePolicy() KubernetesClusterAddonProfileAzurePolicyPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAddonProfile) *KubernetesClusterAddonProfileAzurePolicy { return v.AzurePolicy }).(KubernetesClusterAddonProfileAzurePolicyPtrOutput)
}

// A `httpApplicationRouting` block as defined below.
func (o KubernetesClusterAddonProfileOutput) HttpApplicationRouting() KubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAddonProfile) *KubernetesClusterAddonProfileHttpApplicationRouting {
		return v.HttpApplicationRouting
	}).(KubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput)
}

// A `kubeDashboard` block as defined below.
func (o KubernetesClusterAddonProfileOutput) KubeDashboard() KubernetesClusterAddonProfileKubeDashboardPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAddonProfile) *KubernetesClusterAddonProfileKubeDashboard {
		return v.KubeDashboard
	}).(KubernetesClusterAddonProfileKubeDashboardPtrOutput)
}

// A `omsAgent` block as defined below. For more details, please visit [How to onboard Azure Monitor for containers](https://docs.microsoft.com/en-us/azure/monitoring/monitoring-container-insights-onboard).
func (o KubernetesClusterAddonProfileOutput) OmsAgent() KubernetesClusterAddonProfileOmsAgentPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAddonProfile) *KubernetesClusterAddonProfileOmsAgent { return v.OmsAgent }).(KubernetesClusterAddonProfileOmsAgentPtrOutput)
}

type KubernetesClusterAddonProfilePtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterAddonProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterAddonProfile)(nil)).Elem()
}

func (o KubernetesClusterAddonProfilePtrOutput) ToKubernetesClusterAddonProfilePtrOutput() KubernetesClusterAddonProfilePtrOutput {
	return o
}

func (o KubernetesClusterAddonProfilePtrOutput) ToKubernetesClusterAddonProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterAddonProfilePtrOutput {
	return o
}

func (o KubernetesClusterAddonProfilePtrOutput) Elem() KubernetesClusterAddonProfileOutput {
	return o.ApplyT(func(v *KubernetesClusterAddonProfile) KubernetesClusterAddonProfile { return *v }).(KubernetesClusterAddonProfileOutput)
}

// A `aciConnectorLinux` block. For more details, please visit [Create and configure an AKS cluster to use virtual nodes](https://docs.microsoft.com/en-us/azure/aks/virtual-nodes-portal).
func (o KubernetesClusterAddonProfilePtrOutput) AciConnectorLinux() KubernetesClusterAddonProfileAciConnectorLinuxPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAddonProfile) *KubernetesClusterAddonProfileAciConnectorLinux {
		if v == nil {
			return nil
		}
		return v.AciConnectorLinux
	}).(KubernetesClusterAddonProfileAciConnectorLinuxPtrOutput)
}

// A `azurePolicy` block as defined below. For more details please visit [Understand Azure Policy for Azure Kubernetes Service](https://docs.microsoft.com/en-ie/azure/governance/policy/concepts/rego-for-aks)
func (o KubernetesClusterAddonProfilePtrOutput) AzurePolicy() KubernetesClusterAddonProfileAzurePolicyPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAddonProfile) *KubernetesClusterAddonProfileAzurePolicy {
		if v == nil {
			return nil
		}
		return v.AzurePolicy
	}).(KubernetesClusterAddonProfileAzurePolicyPtrOutput)
}

// A `httpApplicationRouting` block as defined below.
func (o KubernetesClusterAddonProfilePtrOutput) HttpApplicationRouting() KubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAddonProfile) *KubernetesClusterAddonProfileHttpApplicationRouting {
		if v == nil {
			return nil
		}
		return v.HttpApplicationRouting
	}).(KubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput)
}

// A `kubeDashboard` block as defined below.
func (o KubernetesClusterAddonProfilePtrOutput) KubeDashboard() KubernetesClusterAddonProfileKubeDashboardPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAddonProfile) *KubernetesClusterAddonProfileKubeDashboard {
		if v == nil {
			return nil
		}
		return v.KubeDashboard
	}).(KubernetesClusterAddonProfileKubeDashboardPtrOutput)
}

// A `omsAgent` block as defined below. For more details, please visit [How to onboard Azure Monitor for containers](https://docs.microsoft.com/en-us/azure/monitoring/monitoring-container-insights-onboard).
func (o KubernetesClusterAddonProfilePtrOutput) OmsAgent() KubernetesClusterAddonProfileOmsAgentPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAddonProfile) *KubernetesClusterAddonProfileOmsAgent {
		if v == nil {
			return nil
		}
		return v.OmsAgent
	}).(KubernetesClusterAddonProfileOmsAgentPtrOutput)
}

type KubernetesClusterAddonProfileAciConnectorLinux struct {
	// Is the virtual node addon enabled?
	Enabled bool `pulumi:"enabled"`
	// The subnet name for the virtual nodes to run. This is required when `aciConnectorLinux` `enabled` argument is set to `true`.
	SubnetName *string `pulumi:"subnetName"`
}

// KubernetesClusterAddonProfileAciConnectorLinuxInput is an input type that accepts KubernetesClusterAddonProfileAciConnectorLinuxArgs and KubernetesClusterAddonProfileAciConnectorLinuxOutput values.
// You can construct a concrete instance of `KubernetesClusterAddonProfileAciConnectorLinuxInput` via:
//
// 		 KubernetesClusterAddonProfileAciConnectorLinuxArgs{...}
//
type KubernetesClusterAddonProfileAciConnectorLinuxInput interface {
	pulumi.Input

	ToKubernetesClusterAddonProfileAciConnectorLinuxOutput() KubernetesClusterAddonProfileAciConnectorLinuxOutput
	ToKubernetesClusterAddonProfileAciConnectorLinuxOutputWithContext(context.Context) KubernetesClusterAddonProfileAciConnectorLinuxOutput
}

type KubernetesClusterAddonProfileAciConnectorLinuxArgs struct {
	// Is the virtual node addon enabled?
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The subnet name for the virtual nodes to run. This is required when `aciConnectorLinux` `enabled` argument is set to `true`.
	SubnetName pulumi.StringPtrInput `pulumi:"subnetName"`
}

func (KubernetesClusterAddonProfileAciConnectorLinuxArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterAddonProfileAciConnectorLinux)(nil)).Elem()
}

func (i KubernetesClusterAddonProfileAciConnectorLinuxArgs) ToKubernetesClusterAddonProfileAciConnectorLinuxOutput() KubernetesClusterAddonProfileAciConnectorLinuxOutput {
	return i.ToKubernetesClusterAddonProfileAciConnectorLinuxOutputWithContext(context.Background())
}

func (i KubernetesClusterAddonProfileAciConnectorLinuxArgs) ToKubernetesClusterAddonProfileAciConnectorLinuxOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileAciConnectorLinuxOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAddonProfileAciConnectorLinuxOutput)
}

func (i KubernetesClusterAddonProfileAciConnectorLinuxArgs) ToKubernetesClusterAddonProfileAciConnectorLinuxPtrOutput() KubernetesClusterAddonProfileAciConnectorLinuxPtrOutput {
	return i.ToKubernetesClusterAddonProfileAciConnectorLinuxPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterAddonProfileAciConnectorLinuxArgs) ToKubernetesClusterAddonProfileAciConnectorLinuxPtrOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileAciConnectorLinuxPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAddonProfileAciConnectorLinuxOutput).ToKubernetesClusterAddonProfileAciConnectorLinuxPtrOutputWithContext(ctx)
}

// KubernetesClusterAddonProfileAciConnectorLinuxPtrInput is an input type that accepts KubernetesClusterAddonProfileAciConnectorLinuxArgs, KubernetesClusterAddonProfileAciConnectorLinuxPtr and KubernetesClusterAddonProfileAciConnectorLinuxPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterAddonProfileAciConnectorLinuxPtrInput` via:
//
// 		 KubernetesClusterAddonProfileAciConnectorLinuxArgs{...}
//
//  or:
//
// 		 nil
//
type KubernetesClusterAddonProfileAciConnectorLinuxPtrInput interface {
	pulumi.Input

	ToKubernetesClusterAddonProfileAciConnectorLinuxPtrOutput() KubernetesClusterAddonProfileAciConnectorLinuxPtrOutput
	ToKubernetesClusterAddonProfileAciConnectorLinuxPtrOutputWithContext(context.Context) KubernetesClusterAddonProfileAciConnectorLinuxPtrOutput
}

type kubernetesClusterAddonProfileAciConnectorLinuxPtrType KubernetesClusterAddonProfileAciConnectorLinuxArgs

func KubernetesClusterAddonProfileAciConnectorLinuxPtr(v *KubernetesClusterAddonProfileAciConnectorLinuxArgs) KubernetesClusterAddonProfileAciConnectorLinuxPtrInput {
	return (*kubernetesClusterAddonProfileAciConnectorLinuxPtrType)(v)
}

func (*kubernetesClusterAddonProfileAciConnectorLinuxPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterAddonProfileAciConnectorLinux)(nil)).Elem()
}

func (i *kubernetesClusterAddonProfileAciConnectorLinuxPtrType) ToKubernetesClusterAddonProfileAciConnectorLinuxPtrOutput() KubernetesClusterAddonProfileAciConnectorLinuxPtrOutput {
	return i.ToKubernetesClusterAddonProfileAciConnectorLinuxPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterAddonProfileAciConnectorLinuxPtrType) ToKubernetesClusterAddonProfileAciConnectorLinuxPtrOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileAciConnectorLinuxPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAddonProfileAciConnectorLinuxPtrOutput)
}

type KubernetesClusterAddonProfileAciConnectorLinuxOutput struct{ *pulumi.OutputState }

func (KubernetesClusterAddonProfileAciConnectorLinuxOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterAddonProfileAciConnectorLinux)(nil)).Elem()
}

func (o KubernetesClusterAddonProfileAciConnectorLinuxOutput) ToKubernetesClusterAddonProfileAciConnectorLinuxOutput() KubernetesClusterAddonProfileAciConnectorLinuxOutput {
	return o
}

func (o KubernetesClusterAddonProfileAciConnectorLinuxOutput) ToKubernetesClusterAddonProfileAciConnectorLinuxOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileAciConnectorLinuxOutput {
	return o
}

func (o KubernetesClusterAddonProfileAciConnectorLinuxOutput) ToKubernetesClusterAddonProfileAciConnectorLinuxPtrOutput() KubernetesClusterAddonProfileAciConnectorLinuxPtrOutput {
	return o.ToKubernetesClusterAddonProfileAciConnectorLinuxPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterAddonProfileAciConnectorLinuxOutput) ToKubernetesClusterAddonProfileAciConnectorLinuxPtrOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileAciConnectorLinuxPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAddonProfileAciConnectorLinux) *KubernetesClusterAddonProfileAciConnectorLinux {
		return &v
	}).(KubernetesClusterAddonProfileAciConnectorLinuxPtrOutput)
}

// Is the virtual node addon enabled?
func (o KubernetesClusterAddonProfileAciConnectorLinuxOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v KubernetesClusterAddonProfileAciConnectorLinux) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The subnet name for the virtual nodes to run. This is required when `aciConnectorLinux` `enabled` argument is set to `true`.
func (o KubernetesClusterAddonProfileAciConnectorLinuxOutput) SubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAddonProfileAciConnectorLinux) *string { return v.SubnetName }).(pulumi.StringPtrOutput)
}

type KubernetesClusterAddonProfileAciConnectorLinuxPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterAddonProfileAciConnectorLinuxPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterAddonProfileAciConnectorLinux)(nil)).Elem()
}

func (o KubernetesClusterAddonProfileAciConnectorLinuxPtrOutput) ToKubernetesClusterAddonProfileAciConnectorLinuxPtrOutput() KubernetesClusterAddonProfileAciConnectorLinuxPtrOutput {
	return o
}

func (o KubernetesClusterAddonProfileAciConnectorLinuxPtrOutput) ToKubernetesClusterAddonProfileAciConnectorLinuxPtrOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileAciConnectorLinuxPtrOutput {
	return o
}

func (o KubernetesClusterAddonProfileAciConnectorLinuxPtrOutput) Elem() KubernetesClusterAddonProfileAciConnectorLinuxOutput {
	return o.ApplyT(func(v *KubernetesClusterAddonProfileAciConnectorLinux) KubernetesClusterAddonProfileAciConnectorLinux {
		return *v
	}).(KubernetesClusterAddonProfileAciConnectorLinuxOutput)
}

// Is the virtual node addon enabled?
func (o KubernetesClusterAddonProfileAciConnectorLinuxPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAddonProfileAciConnectorLinux) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The subnet name for the virtual nodes to run. This is required when `aciConnectorLinux` `enabled` argument is set to `true`.
func (o KubernetesClusterAddonProfileAciConnectorLinuxPtrOutput) SubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAddonProfileAciConnectorLinux) *string {
		if v == nil {
			return nil
		}
		return v.SubnetName
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterAddonProfileAzurePolicy struct {
	// Is the Azure Policy for Kubernetes Add On enabled?
	Enabled bool `pulumi:"enabled"`
}

// KubernetesClusterAddonProfileAzurePolicyInput is an input type that accepts KubernetesClusterAddonProfileAzurePolicyArgs and KubernetesClusterAddonProfileAzurePolicyOutput values.
// You can construct a concrete instance of `KubernetesClusterAddonProfileAzurePolicyInput` via:
//
// 		 KubernetesClusterAddonProfileAzurePolicyArgs{...}
//
type KubernetesClusterAddonProfileAzurePolicyInput interface {
	pulumi.Input

	ToKubernetesClusterAddonProfileAzurePolicyOutput() KubernetesClusterAddonProfileAzurePolicyOutput
	ToKubernetesClusterAddonProfileAzurePolicyOutputWithContext(context.Context) KubernetesClusterAddonProfileAzurePolicyOutput
}

type KubernetesClusterAddonProfileAzurePolicyArgs struct {
	// Is the Azure Policy for Kubernetes Add On enabled?
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (KubernetesClusterAddonProfileAzurePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterAddonProfileAzurePolicy)(nil)).Elem()
}

func (i KubernetesClusterAddonProfileAzurePolicyArgs) ToKubernetesClusterAddonProfileAzurePolicyOutput() KubernetesClusterAddonProfileAzurePolicyOutput {
	return i.ToKubernetesClusterAddonProfileAzurePolicyOutputWithContext(context.Background())
}

func (i KubernetesClusterAddonProfileAzurePolicyArgs) ToKubernetesClusterAddonProfileAzurePolicyOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileAzurePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAddonProfileAzurePolicyOutput)
}

func (i KubernetesClusterAddonProfileAzurePolicyArgs) ToKubernetesClusterAddonProfileAzurePolicyPtrOutput() KubernetesClusterAddonProfileAzurePolicyPtrOutput {
	return i.ToKubernetesClusterAddonProfileAzurePolicyPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterAddonProfileAzurePolicyArgs) ToKubernetesClusterAddonProfileAzurePolicyPtrOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileAzurePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAddonProfileAzurePolicyOutput).ToKubernetesClusterAddonProfileAzurePolicyPtrOutputWithContext(ctx)
}

// KubernetesClusterAddonProfileAzurePolicyPtrInput is an input type that accepts KubernetesClusterAddonProfileAzurePolicyArgs, KubernetesClusterAddonProfileAzurePolicyPtr and KubernetesClusterAddonProfileAzurePolicyPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterAddonProfileAzurePolicyPtrInput` via:
//
// 		 KubernetesClusterAddonProfileAzurePolicyArgs{...}
//
//  or:
//
// 		 nil
//
type KubernetesClusterAddonProfileAzurePolicyPtrInput interface {
	pulumi.Input

	ToKubernetesClusterAddonProfileAzurePolicyPtrOutput() KubernetesClusterAddonProfileAzurePolicyPtrOutput
	ToKubernetesClusterAddonProfileAzurePolicyPtrOutputWithContext(context.Context) KubernetesClusterAddonProfileAzurePolicyPtrOutput
}

type kubernetesClusterAddonProfileAzurePolicyPtrType KubernetesClusterAddonProfileAzurePolicyArgs

func KubernetesClusterAddonProfileAzurePolicyPtr(v *KubernetesClusterAddonProfileAzurePolicyArgs) KubernetesClusterAddonProfileAzurePolicyPtrInput {
	return (*kubernetesClusterAddonProfileAzurePolicyPtrType)(v)
}

func (*kubernetesClusterAddonProfileAzurePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterAddonProfileAzurePolicy)(nil)).Elem()
}

func (i *kubernetesClusterAddonProfileAzurePolicyPtrType) ToKubernetesClusterAddonProfileAzurePolicyPtrOutput() KubernetesClusterAddonProfileAzurePolicyPtrOutput {
	return i.ToKubernetesClusterAddonProfileAzurePolicyPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterAddonProfileAzurePolicyPtrType) ToKubernetesClusterAddonProfileAzurePolicyPtrOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileAzurePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAddonProfileAzurePolicyPtrOutput)
}

type KubernetesClusterAddonProfileAzurePolicyOutput struct{ *pulumi.OutputState }

func (KubernetesClusterAddonProfileAzurePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterAddonProfileAzurePolicy)(nil)).Elem()
}

func (o KubernetesClusterAddonProfileAzurePolicyOutput) ToKubernetesClusterAddonProfileAzurePolicyOutput() KubernetesClusterAddonProfileAzurePolicyOutput {
	return o
}

func (o KubernetesClusterAddonProfileAzurePolicyOutput) ToKubernetesClusterAddonProfileAzurePolicyOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileAzurePolicyOutput {
	return o
}

func (o KubernetesClusterAddonProfileAzurePolicyOutput) ToKubernetesClusterAddonProfileAzurePolicyPtrOutput() KubernetesClusterAddonProfileAzurePolicyPtrOutput {
	return o.ToKubernetesClusterAddonProfileAzurePolicyPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterAddonProfileAzurePolicyOutput) ToKubernetesClusterAddonProfileAzurePolicyPtrOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileAzurePolicyPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAddonProfileAzurePolicy) *KubernetesClusterAddonProfileAzurePolicy {
		return &v
	}).(KubernetesClusterAddonProfileAzurePolicyPtrOutput)
}

// Is the Azure Policy for Kubernetes Add On enabled?
func (o KubernetesClusterAddonProfileAzurePolicyOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v KubernetesClusterAddonProfileAzurePolicy) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type KubernetesClusterAddonProfileAzurePolicyPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterAddonProfileAzurePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterAddonProfileAzurePolicy)(nil)).Elem()
}

func (o KubernetesClusterAddonProfileAzurePolicyPtrOutput) ToKubernetesClusterAddonProfileAzurePolicyPtrOutput() KubernetesClusterAddonProfileAzurePolicyPtrOutput {
	return o
}

func (o KubernetesClusterAddonProfileAzurePolicyPtrOutput) ToKubernetesClusterAddonProfileAzurePolicyPtrOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileAzurePolicyPtrOutput {
	return o
}

func (o KubernetesClusterAddonProfileAzurePolicyPtrOutput) Elem() KubernetesClusterAddonProfileAzurePolicyOutput {
	return o.ApplyT(func(v *KubernetesClusterAddonProfileAzurePolicy) KubernetesClusterAddonProfileAzurePolicy { return *v }).(KubernetesClusterAddonProfileAzurePolicyOutput)
}

// Is the Azure Policy for Kubernetes Add On enabled?
func (o KubernetesClusterAddonProfileAzurePolicyPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAddonProfileAzurePolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type KubernetesClusterAddonProfileHttpApplicationRouting struct {
	// Is HTTP Application Routing Enabled? Changing this forces a new resource to be created.
	Enabled bool `pulumi:"enabled"`
	// The Zone Name of the HTTP Application Routing.
	HttpApplicationRoutingZoneName *string `pulumi:"httpApplicationRoutingZoneName"`
}

// KubernetesClusterAddonProfileHttpApplicationRoutingInput is an input type that accepts KubernetesClusterAddonProfileHttpApplicationRoutingArgs and KubernetesClusterAddonProfileHttpApplicationRoutingOutput values.
// You can construct a concrete instance of `KubernetesClusterAddonProfileHttpApplicationRoutingInput` via:
//
// 		 KubernetesClusterAddonProfileHttpApplicationRoutingArgs{...}
//
type KubernetesClusterAddonProfileHttpApplicationRoutingInput interface {
	pulumi.Input

	ToKubernetesClusterAddonProfileHttpApplicationRoutingOutput() KubernetesClusterAddonProfileHttpApplicationRoutingOutput
	ToKubernetesClusterAddonProfileHttpApplicationRoutingOutputWithContext(context.Context) KubernetesClusterAddonProfileHttpApplicationRoutingOutput
}

type KubernetesClusterAddonProfileHttpApplicationRoutingArgs struct {
	// Is HTTP Application Routing Enabled? Changing this forces a new resource to be created.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The Zone Name of the HTTP Application Routing.
	HttpApplicationRoutingZoneName pulumi.StringPtrInput `pulumi:"httpApplicationRoutingZoneName"`
}

func (KubernetesClusterAddonProfileHttpApplicationRoutingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterAddonProfileHttpApplicationRouting)(nil)).Elem()
}

func (i KubernetesClusterAddonProfileHttpApplicationRoutingArgs) ToKubernetesClusterAddonProfileHttpApplicationRoutingOutput() KubernetesClusterAddonProfileHttpApplicationRoutingOutput {
	return i.ToKubernetesClusterAddonProfileHttpApplicationRoutingOutputWithContext(context.Background())
}

func (i KubernetesClusterAddonProfileHttpApplicationRoutingArgs) ToKubernetesClusterAddonProfileHttpApplicationRoutingOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileHttpApplicationRoutingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAddonProfileHttpApplicationRoutingOutput)
}

func (i KubernetesClusterAddonProfileHttpApplicationRoutingArgs) ToKubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput() KubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput {
	return i.ToKubernetesClusterAddonProfileHttpApplicationRoutingPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterAddonProfileHttpApplicationRoutingArgs) ToKubernetesClusterAddonProfileHttpApplicationRoutingPtrOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAddonProfileHttpApplicationRoutingOutput).ToKubernetesClusterAddonProfileHttpApplicationRoutingPtrOutputWithContext(ctx)
}

// KubernetesClusterAddonProfileHttpApplicationRoutingPtrInput is an input type that accepts KubernetesClusterAddonProfileHttpApplicationRoutingArgs, KubernetesClusterAddonProfileHttpApplicationRoutingPtr and KubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterAddonProfileHttpApplicationRoutingPtrInput` via:
//
// 		 KubernetesClusterAddonProfileHttpApplicationRoutingArgs{...}
//
//  or:
//
// 		 nil
//
type KubernetesClusterAddonProfileHttpApplicationRoutingPtrInput interface {
	pulumi.Input

	ToKubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput() KubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput
	ToKubernetesClusterAddonProfileHttpApplicationRoutingPtrOutputWithContext(context.Context) KubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput
}

type kubernetesClusterAddonProfileHttpApplicationRoutingPtrType KubernetesClusterAddonProfileHttpApplicationRoutingArgs

func KubernetesClusterAddonProfileHttpApplicationRoutingPtr(v *KubernetesClusterAddonProfileHttpApplicationRoutingArgs) KubernetesClusterAddonProfileHttpApplicationRoutingPtrInput {
	return (*kubernetesClusterAddonProfileHttpApplicationRoutingPtrType)(v)
}

func (*kubernetesClusterAddonProfileHttpApplicationRoutingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterAddonProfileHttpApplicationRouting)(nil)).Elem()
}

func (i *kubernetesClusterAddonProfileHttpApplicationRoutingPtrType) ToKubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput() KubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput {
	return i.ToKubernetesClusterAddonProfileHttpApplicationRoutingPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterAddonProfileHttpApplicationRoutingPtrType) ToKubernetesClusterAddonProfileHttpApplicationRoutingPtrOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput)
}

type KubernetesClusterAddonProfileHttpApplicationRoutingOutput struct{ *pulumi.OutputState }

func (KubernetesClusterAddonProfileHttpApplicationRoutingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterAddonProfileHttpApplicationRouting)(nil)).Elem()
}

func (o KubernetesClusterAddonProfileHttpApplicationRoutingOutput) ToKubernetesClusterAddonProfileHttpApplicationRoutingOutput() KubernetesClusterAddonProfileHttpApplicationRoutingOutput {
	return o
}

func (o KubernetesClusterAddonProfileHttpApplicationRoutingOutput) ToKubernetesClusterAddonProfileHttpApplicationRoutingOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileHttpApplicationRoutingOutput {
	return o
}

func (o KubernetesClusterAddonProfileHttpApplicationRoutingOutput) ToKubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput() KubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput {
	return o.ToKubernetesClusterAddonProfileHttpApplicationRoutingPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterAddonProfileHttpApplicationRoutingOutput) ToKubernetesClusterAddonProfileHttpApplicationRoutingPtrOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAddonProfileHttpApplicationRouting) *KubernetesClusterAddonProfileHttpApplicationRouting {
		return &v
	}).(KubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput)
}

// Is HTTP Application Routing Enabled? Changing this forces a new resource to be created.
func (o KubernetesClusterAddonProfileHttpApplicationRoutingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v KubernetesClusterAddonProfileHttpApplicationRouting) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The Zone Name of the HTTP Application Routing.
func (o KubernetesClusterAddonProfileHttpApplicationRoutingOutput) HttpApplicationRoutingZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAddonProfileHttpApplicationRouting) *string {
		return v.HttpApplicationRoutingZoneName
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterAddonProfileHttpApplicationRouting)(nil)).Elem()
}

func (o KubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput) ToKubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput() KubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput {
	return o
}

func (o KubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput) ToKubernetesClusterAddonProfileHttpApplicationRoutingPtrOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput {
	return o
}

func (o KubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput) Elem() KubernetesClusterAddonProfileHttpApplicationRoutingOutput {
	return o.ApplyT(func(v *KubernetesClusterAddonProfileHttpApplicationRouting) KubernetesClusterAddonProfileHttpApplicationRouting {
		return *v
	}).(KubernetesClusterAddonProfileHttpApplicationRoutingOutput)
}

// Is HTTP Application Routing Enabled? Changing this forces a new resource to be created.
func (o KubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAddonProfileHttpApplicationRouting) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The Zone Name of the HTTP Application Routing.
func (o KubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput) HttpApplicationRoutingZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAddonProfileHttpApplicationRouting) *string {
		if v == nil {
			return nil
		}
		return v.HttpApplicationRoutingZoneName
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterAddonProfileKubeDashboard struct {
	// Is the Kubernetes Dashboard enabled?
	Enabled bool `pulumi:"enabled"`
}

// KubernetesClusterAddonProfileKubeDashboardInput is an input type that accepts KubernetesClusterAddonProfileKubeDashboardArgs and KubernetesClusterAddonProfileKubeDashboardOutput values.
// You can construct a concrete instance of `KubernetesClusterAddonProfileKubeDashboardInput` via:
//
// 		 KubernetesClusterAddonProfileKubeDashboardArgs{...}
//
type KubernetesClusterAddonProfileKubeDashboardInput interface {
	pulumi.Input

	ToKubernetesClusterAddonProfileKubeDashboardOutput() KubernetesClusterAddonProfileKubeDashboardOutput
	ToKubernetesClusterAddonProfileKubeDashboardOutputWithContext(context.Context) KubernetesClusterAddonProfileKubeDashboardOutput
}

type KubernetesClusterAddonProfileKubeDashboardArgs struct {
	// Is the Kubernetes Dashboard enabled?
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (KubernetesClusterAddonProfileKubeDashboardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterAddonProfileKubeDashboard)(nil)).Elem()
}

func (i KubernetesClusterAddonProfileKubeDashboardArgs) ToKubernetesClusterAddonProfileKubeDashboardOutput() KubernetesClusterAddonProfileKubeDashboardOutput {
	return i.ToKubernetesClusterAddonProfileKubeDashboardOutputWithContext(context.Background())
}

func (i KubernetesClusterAddonProfileKubeDashboardArgs) ToKubernetesClusterAddonProfileKubeDashboardOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileKubeDashboardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAddonProfileKubeDashboardOutput)
}

func (i KubernetesClusterAddonProfileKubeDashboardArgs) ToKubernetesClusterAddonProfileKubeDashboardPtrOutput() KubernetesClusterAddonProfileKubeDashboardPtrOutput {
	return i.ToKubernetesClusterAddonProfileKubeDashboardPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterAddonProfileKubeDashboardArgs) ToKubernetesClusterAddonProfileKubeDashboardPtrOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileKubeDashboardPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAddonProfileKubeDashboardOutput).ToKubernetesClusterAddonProfileKubeDashboardPtrOutputWithContext(ctx)
}

// KubernetesClusterAddonProfileKubeDashboardPtrInput is an input type that accepts KubernetesClusterAddonProfileKubeDashboardArgs, KubernetesClusterAddonProfileKubeDashboardPtr and KubernetesClusterAddonProfileKubeDashboardPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterAddonProfileKubeDashboardPtrInput` via:
//
// 		 KubernetesClusterAddonProfileKubeDashboardArgs{...}
//
//  or:
//
// 		 nil
//
type KubernetesClusterAddonProfileKubeDashboardPtrInput interface {
	pulumi.Input

	ToKubernetesClusterAddonProfileKubeDashboardPtrOutput() KubernetesClusterAddonProfileKubeDashboardPtrOutput
	ToKubernetesClusterAddonProfileKubeDashboardPtrOutputWithContext(context.Context) KubernetesClusterAddonProfileKubeDashboardPtrOutput
}

type kubernetesClusterAddonProfileKubeDashboardPtrType KubernetesClusterAddonProfileKubeDashboardArgs

func KubernetesClusterAddonProfileKubeDashboardPtr(v *KubernetesClusterAddonProfileKubeDashboardArgs) KubernetesClusterAddonProfileKubeDashboardPtrInput {
	return (*kubernetesClusterAddonProfileKubeDashboardPtrType)(v)
}

func (*kubernetesClusterAddonProfileKubeDashboardPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterAddonProfileKubeDashboard)(nil)).Elem()
}

func (i *kubernetesClusterAddonProfileKubeDashboardPtrType) ToKubernetesClusterAddonProfileKubeDashboardPtrOutput() KubernetesClusterAddonProfileKubeDashboardPtrOutput {
	return i.ToKubernetesClusterAddonProfileKubeDashboardPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterAddonProfileKubeDashboardPtrType) ToKubernetesClusterAddonProfileKubeDashboardPtrOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileKubeDashboardPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAddonProfileKubeDashboardPtrOutput)
}

type KubernetesClusterAddonProfileKubeDashboardOutput struct{ *pulumi.OutputState }

func (KubernetesClusterAddonProfileKubeDashboardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterAddonProfileKubeDashboard)(nil)).Elem()
}

func (o KubernetesClusterAddonProfileKubeDashboardOutput) ToKubernetesClusterAddonProfileKubeDashboardOutput() KubernetesClusterAddonProfileKubeDashboardOutput {
	return o
}

func (o KubernetesClusterAddonProfileKubeDashboardOutput) ToKubernetesClusterAddonProfileKubeDashboardOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileKubeDashboardOutput {
	return o
}

func (o KubernetesClusterAddonProfileKubeDashboardOutput) ToKubernetesClusterAddonProfileKubeDashboardPtrOutput() KubernetesClusterAddonProfileKubeDashboardPtrOutput {
	return o.ToKubernetesClusterAddonProfileKubeDashboardPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterAddonProfileKubeDashboardOutput) ToKubernetesClusterAddonProfileKubeDashboardPtrOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileKubeDashboardPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAddonProfileKubeDashboard) *KubernetesClusterAddonProfileKubeDashboard {
		return &v
	}).(KubernetesClusterAddonProfileKubeDashboardPtrOutput)
}

// Is the Kubernetes Dashboard enabled?
func (o KubernetesClusterAddonProfileKubeDashboardOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v KubernetesClusterAddonProfileKubeDashboard) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type KubernetesClusterAddonProfileKubeDashboardPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterAddonProfileKubeDashboardPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterAddonProfileKubeDashboard)(nil)).Elem()
}

func (o KubernetesClusterAddonProfileKubeDashboardPtrOutput) ToKubernetesClusterAddonProfileKubeDashboardPtrOutput() KubernetesClusterAddonProfileKubeDashboardPtrOutput {
	return o
}

func (o KubernetesClusterAddonProfileKubeDashboardPtrOutput) ToKubernetesClusterAddonProfileKubeDashboardPtrOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileKubeDashboardPtrOutput {
	return o
}

func (o KubernetesClusterAddonProfileKubeDashboardPtrOutput) Elem() KubernetesClusterAddonProfileKubeDashboardOutput {
	return o.ApplyT(func(v *KubernetesClusterAddonProfileKubeDashboard) KubernetesClusterAddonProfileKubeDashboard {
		return *v
	}).(KubernetesClusterAddonProfileKubeDashboardOutput)
}

// Is the Kubernetes Dashboard enabled?
func (o KubernetesClusterAddonProfileKubeDashboardPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAddonProfileKubeDashboard) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type KubernetesClusterAddonProfileOmsAgent struct {
	// Is the OMS Agent Enabled?
	Enabled bool `pulumi:"enabled"`
	// The ID of the Log Analytics Workspace which the OMS Agent should send data to. Must be present if `enabled` is `true`.
	LogAnalyticsWorkspaceId *string `pulumi:"logAnalyticsWorkspaceId"`
}

// KubernetesClusterAddonProfileOmsAgentInput is an input type that accepts KubernetesClusterAddonProfileOmsAgentArgs and KubernetesClusterAddonProfileOmsAgentOutput values.
// You can construct a concrete instance of `KubernetesClusterAddonProfileOmsAgentInput` via:
//
// 		 KubernetesClusterAddonProfileOmsAgentArgs{...}
//
type KubernetesClusterAddonProfileOmsAgentInput interface {
	pulumi.Input

	ToKubernetesClusterAddonProfileOmsAgentOutput() KubernetesClusterAddonProfileOmsAgentOutput
	ToKubernetesClusterAddonProfileOmsAgentOutputWithContext(context.Context) KubernetesClusterAddonProfileOmsAgentOutput
}

type KubernetesClusterAddonProfileOmsAgentArgs struct {
	// Is the OMS Agent Enabled?
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The ID of the Log Analytics Workspace which the OMS Agent should send data to. Must be present if `enabled` is `true`.
	LogAnalyticsWorkspaceId pulumi.StringPtrInput `pulumi:"logAnalyticsWorkspaceId"`
}

func (KubernetesClusterAddonProfileOmsAgentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterAddonProfileOmsAgent)(nil)).Elem()
}

func (i KubernetesClusterAddonProfileOmsAgentArgs) ToKubernetesClusterAddonProfileOmsAgentOutput() KubernetesClusterAddonProfileOmsAgentOutput {
	return i.ToKubernetesClusterAddonProfileOmsAgentOutputWithContext(context.Background())
}

func (i KubernetesClusterAddonProfileOmsAgentArgs) ToKubernetesClusterAddonProfileOmsAgentOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileOmsAgentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAddonProfileOmsAgentOutput)
}

func (i KubernetesClusterAddonProfileOmsAgentArgs) ToKubernetesClusterAddonProfileOmsAgentPtrOutput() KubernetesClusterAddonProfileOmsAgentPtrOutput {
	return i.ToKubernetesClusterAddonProfileOmsAgentPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterAddonProfileOmsAgentArgs) ToKubernetesClusterAddonProfileOmsAgentPtrOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileOmsAgentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAddonProfileOmsAgentOutput).ToKubernetesClusterAddonProfileOmsAgentPtrOutputWithContext(ctx)
}

// KubernetesClusterAddonProfileOmsAgentPtrInput is an input type that accepts KubernetesClusterAddonProfileOmsAgentArgs, KubernetesClusterAddonProfileOmsAgentPtr and KubernetesClusterAddonProfileOmsAgentPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterAddonProfileOmsAgentPtrInput` via:
//
// 		 KubernetesClusterAddonProfileOmsAgentArgs{...}
//
//  or:
//
// 		 nil
//
type KubernetesClusterAddonProfileOmsAgentPtrInput interface {
	pulumi.Input

	ToKubernetesClusterAddonProfileOmsAgentPtrOutput() KubernetesClusterAddonProfileOmsAgentPtrOutput
	ToKubernetesClusterAddonProfileOmsAgentPtrOutputWithContext(context.Context) KubernetesClusterAddonProfileOmsAgentPtrOutput
}

type kubernetesClusterAddonProfileOmsAgentPtrType KubernetesClusterAddonProfileOmsAgentArgs

func KubernetesClusterAddonProfileOmsAgentPtr(v *KubernetesClusterAddonProfileOmsAgentArgs) KubernetesClusterAddonProfileOmsAgentPtrInput {
	return (*kubernetesClusterAddonProfileOmsAgentPtrType)(v)
}

func (*kubernetesClusterAddonProfileOmsAgentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterAddonProfileOmsAgent)(nil)).Elem()
}

func (i *kubernetesClusterAddonProfileOmsAgentPtrType) ToKubernetesClusterAddonProfileOmsAgentPtrOutput() KubernetesClusterAddonProfileOmsAgentPtrOutput {
	return i.ToKubernetesClusterAddonProfileOmsAgentPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterAddonProfileOmsAgentPtrType) ToKubernetesClusterAddonProfileOmsAgentPtrOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileOmsAgentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAddonProfileOmsAgentPtrOutput)
}

type KubernetesClusterAddonProfileOmsAgentOutput struct{ *pulumi.OutputState }

func (KubernetesClusterAddonProfileOmsAgentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterAddonProfileOmsAgent)(nil)).Elem()
}

func (o KubernetesClusterAddonProfileOmsAgentOutput) ToKubernetesClusterAddonProfileOmsAgentOutput() KubernetesClusterAddonProfileOmsAgentOutput {
	return o
}

func (o KubernetesClusterAddonProfileOmsAgentOutput) ToKubernetesClusterAddonProfileOmsAgentOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileOmsAgentOutput {
	return o
}

func (o KubernetesClusterAddonProfileOmsAgentOutput) ToKubernetesClusterAddonProfileOmsAgentPtrOutput() KubernetesClusterAddonProfileOmsAgentPtrOutput {
	return o.ToKubernetesClusterAddonProfileOmsAgentPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterAddonProfileOmsAgentOutput) ToKubernetesClusterAddonProfileOmsAgentPtrOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileOmsAgentPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAddonProfileOmsAgent) *KubernetesClusterAddonProfileOmsAgent {
		return &v
	}).(KubernetesClusterAddonProfileOmsAgentPtrOutput)
}

// Is the OMS Agent Enabled?
func (o KubernetesClusterAddonProfileOmsAgentOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v KubernetesClusterAddonProfileOmsAgent) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The ID of the Log Analytics Workspace which the OMS Agent should send data to. Must be present if `enabled` is `true`.
func (o KubernetesClusterAddonProfileOmsAgentOutput) LogAnalyticsWorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAddonProfileOmsAgent) *string { return v.LogAnalyticsWorkspaceId }).(pulumi.StringPtrOutput)
}

type KubernetesClusterAddonProfileOmsAgentPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterAddonProfileOmsAgentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterAddonProfileOmsAgent)(nil)).Elem()
}

func (o KubernetesClusterAddonProfileOmsAgentPtrOutput) ToKubernetesClusterAddonProfileOmsAgentPtrOutput() KubernetesClusterAddonProfileOmsAgentPtrOutput {
	return o
}

func (o KubernetesClusterAddonProfileOmsAgentPtrOutput) ToKubernetesClusterAddonProfileOmsAgentPtrOutputWithContext(ctx context.Context) KubernetesClusterAddonProfileOmsAgentPtrOutput {
	return o
}

func (o KubernetesClusterAddonProfileOmsAgentPtrOutput) Elem() KubernetesClusterAddonProfileOmsAgentOutput {
	return o.ApplyT(func(v *KubernetesClusterAddonProfileOmsAgent) KubernetesClusterAddonProfileOmsAgent { return *v }).(KubernetesClusterAddonProfileOmsAgentOutput)
}

// Is the OMS Agent Enabled?
func (o KubernetesClusterAddonProfileOmsAgentPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAddonProfileOmsAgent) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The ID of the Log Analytics Workspace which the OMS Agent should send data to. Must be present if `enabled` is `true`.
func (o KubernetesClusterAddonProfileOmsAgentPtrOutput) LogAnalyticsWorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAddonProfileOmsAgent) *string {
		if v == nil {
			return nil
		}
		return v.LogAnalyticsWorkspaceId
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterDefaultNodePool struct {
	// A list of Availability Zones across which the Node Pool should be spread.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Should [the Kubernetes Auto Scaler](https://docs.microsoft.com/en-us/azure/aks/cluster-autoscaler) be enabled for this Node Pool? Defaults to `false`.
	EnableAutoScaling *bool `pulumi:"enableAutoScaling"`
	// Should nodes in this Node Pool have a Public IP Address? Defaults to `false`.
	EnableNodePublicIp *bool `pulumi:"enableNodePublicIp"`
	// The maximum number of nodes which should exist in this Node Pool. If specified this must be between `1` and `100`.
	MaxCount *int `pulumi:"maxCount"`
	// The maximum number of pods that can run on each agent. Changing this forces a new resource to be created.
	MaxPods *int `pulumi:"maxPods"`
	// The minimum number of nodes which should exist in this Node Pool. If specified this must be between `1` and `100`.
	MinCount *int `pulumi:"minCount"`
	// The name which should be used for the default Kubernetes Node Pool. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
	// The initial number of nodes which should exist in this Node Pool. If specified this must be between `1` and `100` and between `minCount` and `maxCount`.
	NodeCount *int `pulumi:"nodeCount"`
	// A map of Kubernetes labels which should be applied to nodes in the Default Node Pool.
	NodeLabels map[string]string `pulumi:"nodeLabels"`
	// A list of Kubernetes taints which should be applied to nodes in the agent pool (e.g `key=value:NoSchedule`).
	NodeTaints []string `pulumi:"nodeTaints"`
	// The size of the OS Disk which should be used for each agent in the Node Pool. Changing this forces a new resource to be created.
	OsDiskSizeGb *int `pulumi:"osDiskSizeGb"`
	// A mapping of tags to assign to the Node Pool.
	Tags map[string]string `pulumi:"tags"`
	// The type of Node Pool which should be created. Possible values are `AvailabilitySet` and `VirtualMachineScaleSets`. Defaults to `VirtualMachineScaleSets`.
	Type *string `pulumi:"type"`
	// The size of the Virtual Machine, such as `Standard_DS2_v2`.
	VmSize string `pulumi:"vmSize"`
	// The ID of a Subnet where the Kubernetes Node Pool should exist. Changing this forces a new resource to be created.
	VnetSubnetId *string `pulumi:"vnetSubnetId"`
}

// KubernetesClusterDefaultNodePoolInput is an input type that accepts KubernetesClusterDefaultNodePoolArgs and KubernetesClusterDefaultNodePoolOutput values.
// You can construct a concrete instance of `KubernetesClusterDefaultNodePoolInput` via:
//
// 		 KubernetesClusterDefaultNodePoolArgs{...}
//
type KubernetesClusterDefaultNodePoolInput interface {
	pulumi.Input

	ToKubernetesClusterDefaultNodePoolOutput() KubernetesClusterDefaultNodePoolOutput
	ToKubernetesClusterDefaultNodePoolOutputWithContext(context.Context) KubernetesClusterDefaultNodePoolOutput
}

type KubernetesClusterDefaultNodePoolArgs struct {
	// A list of Availability Zones across which the Node Pool should be spread.
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// Should [the Kubernetes Auto Scaler](https://docs.microsoft.com/en-us/azure/aks/cluster-autoscaler) be enabled for this Node Pool? Defaults to `false`.
	EnableAutoScaling pulumi.BoolPtrInput `pulumi:"enableAutoScaling"`
	// Should nodes in this Node Pool have a Public IP Address? Defaults to `false`.
	EnableNodePublicIp pulumi.BoolPtrInput `pulumi:"enableNodePublicIp"`
	// The maximum number of nodes which should exist in this Node Pool. If specified this must be between `1` and `100`.
	MaxCount pulumi.IntPtrInput `pulumi:"maxCount"`
	// The maximum number of pods that can run on each agent. Changing this forces a new resource to be created.
	MaxPods pulumi.IntPtrInput `pulumi:"maxPods"`
	// The minimum number of nodes which should exist in this Node Pool. If specified this must be between `1` and `100`.
	MinCount pulumi.IntPtrInput `pulumi:"minCount"`
	// The name which should be used for the default Kubernetes Node Pool. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// The initial number of nodes which should exist in this Node Pool. If specified this must be between `1` and `100` and between `minCount` and `maxCount`.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
	// A map of Kubernetes labels which should be applied to nodes in the Default Node Pool.
	NodeLabels pulumi.StringMapInput `pulumi:"nodeLabels"`
	// A list of Kubernetes taints which should be applied to nodes in the agent pool (e.g `key=value:NoSchedule`).
	NodeTaints pulumi.StringArrayInput `pulumi:"nodeTaints"`
	// The size of the OS Disk which should be used for each agent in the Node Pool. Changing this forces a new resource to be created.
	OsDiskSizeGb pulumi.IntPtrInput `pulumi:"osDiskSizeGb"`
	// A mapping of tags to assign to the Node Pool.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The type of Node Pool which should be created. Possible values are `AvailabilitySet` and `VirtualMachineScaleSets`. Defaults to `VirtualMachineScaleSets`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The size of the Virtual Machine, such as `Standard_DS2_v2`.
	VmSize pulumi.StringInput `pulumi:"vmSize"`
	// The ID of a Subnet where the Kubernetes Node Pool should exist. Changing this forces a new resource to be created.
	VnetSubnetId pulumi.StringPtrInput `pulumi:"vnetSubnetId"`
}

func (KubernetesClusterDefaultNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterDefaultNodePool)(nil)).Elem()
}

func (i KubernetesClusterDefaultNodePoolArgs) ToKubernetesClusterDefaultNodePoolOutput() KubernetesClusterDefaultNodePoolOutput {
	return i.ToKubernetesClusterDefaultNodePoolOutputWithContext(context.Background())
}

func (i KubernetesClusterDefaultNodePoolArgs) ToKubernetesClusterDefaultNodePoolOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterDefaultNodePoolOutput)
}

func (i KubernetesClusterDefaultNodePoolArgs) ToKubernetesClusterDefaultNodePoolPtrOutput() KubernetesClusterDefaultNodePoolPtrOutput {
	return i.ToKubernetesClusterDefaultNodePoolPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterDefaultNodePoolArgs) ToKubernetesClusterDefaultNodePoolPtrOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterDefaultNodePoolOutput).ToKubernetesClusterDefaultNodePoolPtrOutputWithContext(ctx)
}

// KubernetesClusterDefaultNodePoolPtrInput is an input type that accepts KubernetesClusterDefaultNodePoolArgs, KubernetesClusterDefaultNodePoolPtr and KubernetesClusterDefaultNodePoolPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterDefaultNodePoolPtrInput` via:
//
// 		 KubernetesClusterDefaultNodePoolArgs{...}
//
//  or:
//
// 		 nil
//
type KubernetesClusterDefaultNodePoolPtrInput interface {
	pulumi.Input

	ToKubernetesClusterDefaultNodePoolPtrOutput() KubernetesClusterDefaultNodePoolPtrOutput
	ToKubernetesClusterDefaultNodePoolPtrOutputWithContext(context.Context) KubernetesClusterDefaultNodePoolPtrOutput
}

type kubernetesClusterDefaultNodePoolPtrType KubernetesClusterDefaultNodePoolArgs

func KubernetesClusterDefaultNodePoolPtr(v *KubernetesClusterDefaultNodePoolArgs) KubernetesClusterDefaultNodePoolPtrInput {
	return (*kubernetesClusterDefaultNodePoolPtrType)(v)
}

func (*kubernetesClusterDefaultNodePoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterDefaultNodePool)(nil)).Elem()
}

func (i *kubernetesClusterDefaultNodePoolPtrType) ToKubernetesClusterDefaultNodePoolPtrOutput() KubernetesClusterDefaultNodePoolPtrOutput {
	return i.ToKubernetesClusterDefaultNodePoolPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterDefaultNodePoolPtrType) ToKubernetesClusterDefaultNodePoolPtrOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterDefaultNodePoolPtrOutput)
}

type KubernetesClusterDefaultNodePoolOutput struct{ *pulumi.OutputState }

func (KubernetesClusterDefaultNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterDefaultNodePool)(nil)).Elem()
}

func (o KubernetesClusterDefaultNodePoolOutput) ToKubernetesClusterDefaultNodePoolOutput() KubernetesClusterDefaultNodePoolOutput {
	return o
}

func (o KubernetesClusterDefaultNodePoolOutput) ToKubernetesClusterDefaultNodePoolOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolOutput {
	return o
}

func (o KubernetesClusterDefaultNodePoolOutput) ToKubernetesClusterDefaultNodePoolPtrOutput() KubernetesClusterDefaultNodePoolPtrOutput {
	return o.ToKubernetesClusterDefaultNodePoolPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterDefaultNodePoolOutput) ToKubernetesClusterDefaultNodePoolPtrOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *KubernetesClusterDefaultNodePool {
		return &v
	}).(KubernetesClusterDefaultNodePoolPtrOutput)
}

// A list of Availability Zones across which the Node Pool should be spread.
func (o KubernetesClusterDefaultNodePoolOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// Should [the Kubernetes Auto Scaler](https://docs.microsoft.com/en-us/azure/aks/cluster-autoscaler) be enabled for this Node Pool? Defaults to `false`.
func (o KubernetesClusterDefaultNodePoolOutput) EnableAutoScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *bool { return v.EnableAutoScaling }).(pulumi.BoolPtrOutput)
}

// Should nodes in this Node Pool have a Public IP Address? Defaults to `false`.
func (o KubernetesClusterDefaultNodePoolOutput) EnableNodePublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *bool { return v.EnableNodePublicIp }).(pulumi.BoolPtrOutput)
}

// The maximum number of nodes which should exist in this Node Pool. If specified this must be between `1` and `100`.
func (o KubernetesClusterDefaultNodePoolOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *int { return v.MaxCount }).(pulumi.IntPtrOutput)
}

// The maximum number of pods that can run on each agent. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolOutput) MaxPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *int { return v.MaxPods }).(pulumi.IntPtrOutput)
}

// The minimum number of nodes which should exist in this Node Pool. If specified this must be between `1` and `100`.
func (o KubernetesClusterDefaultNodePoolOutput) MinCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *int { return v.MinCount }).(pulumi.IntPtrOutput)
}

// The name which should be used for the default Kubernetes Node Pool. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) string { return v.Name }).(pulumi.StringOutput)
}

// The initial number of nodes which should exist in this Node Pool. If specified this must be between `1` and `100` and between `minCount` and `maxCount`.
func (o KubernetesClusterDefaultNodePoolOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

// A map of Kubernetes labels which should be applied to nodes in the Default Node Pool.
func (o KubernetesClusterDefaultNodePoolOutput) NodeLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) map[string]string { return v.NodeLabels }).(pulumi.StringMapOutput)
}

// A list of Kubernetes taints which should be applied to nodes in the agent pool (e.g `key=value:NoSchedule`).
func (o KubernetesClusterDefaultNodePoolOutput) NodeTaints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) []string { return v.NodeTaints }).(pulumi.StringArrayOutput)
}

// The size of the OS Disk which should be used for each agent in the Node Pool. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolOutput) OsDiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *int { return v.OsDiskSizeGb }).(pulumi.IntPtrOutput)
}

// A mapping of tags to assign to the Node Pool.
func (o KubernetesClusterDefaultNodePoolOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of Node Pool which should be created. Possible values are `AvailabilitySet` and `VirtualMachineScaleSets`. Defaults to `VirtualMachineScaleSets`.
func (o KubernetesClusterDefaultNodePoolOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The size of the Virtual Machine, such as `Standard_DS2_v2`.
func (o KubernetesClusterDefaultNodePoolOutput) VmSize() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) string { return v.VmSize }).(pulumi.StringOutput)
}

// The ID of a Subnet where the Kubernetes Node Pool should exist. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolOutput) VnetSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterDefaultNodePool) *string { return v.VnetSubnetId }).(pulumi.StringPtrOutput)
}

type KubernetesClusterDefaultNodePoolPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterDefaultNodePoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterDefaultNodePool)(nil)).Elem()
}

func (o KubernetesClusterDefaultNodePoolPtrOutput) ToKubernetesClusterDefaultNodePoolPtrOutput() KubernetesClusterDefaultNodePoolPtrOutput {
	return o
}

func (o KubernetesClusterDefaultNodePoolPtrOutput) ToKubernetesClusterDefaultNodePoolPtrOutputWithContext(ctx context.Context) KubernetesClusterDefaultNodePoolPtrOutput {
	return o
}

func (o KubernetesClusterDefaultNodePoolPtrOutput) Elem() KubernetesClusterDefaultNodePoolOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) KubernetesClusterDefaultNodePool { return *v }).(KubernetesClusterDefaultNodePoolOutput)
}

// A list of Availability Zones across which the Node Pool should be spread.
func (o KubernetesClusterDefaultNodePoolPtrOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) []string {
		if v == nil {
			return nil
		}
		return v.AvailabilityZones
	}).(pulumi.StringArrayOutput)
}

// Should [the Kubernetes Auto Scaler](https://docs.microsoft.com/en-us/azure/aks/cluster-autoscaler) be enabled for this Node Pool? Defaults to `false`.
func (o KubernetesClusterDefaultNodePoolPtrOutput) EnableAutoScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAutoScaling
	}).(pulumi.BoolPtrOutput)
}

// Should nodes in this Node Pool have a Public IP Address? Defaults to `false`.
func (o KubernetesClusterDefaultNodePoolPtrOutput) EnableNodePublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *bool {
		if v == nil {
			return nil
		}
		return v.EnableNodePublicIp
	}).(pulumi.BoolPtrOutput)
}

// The maximum number of nodes which should exist in this Node Pool. If specified this must be between `1` and `100`.
func (o KubernetesClusterDefaultNodePoolPtrOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *int {
		if v == nil {
			return nil
		}
		return v.MaxCount
	}).(pulumi.IntPtrOutput)
}

// The maximum number of pods that can run on each agent. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolPtrOutput) MaxPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *int {
		if v == nil {
			return nil
		}
		return v.MaxPods
	}).(pulumi.IntPtrOutput)
}

// The minimum number of nodes which should exist in this Node Pool. If specified this must be between `1` and `100`.
func (o KubernetesClusterDefaultNodePoolPtrOutput) MinCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *int {
		if v == nil {
			return nil
		}
		return v.MinCount
	}).(pulumi.IntPtrOutput)
}

// The name which should be used for the default Kubernetes Node Pool. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The initial number of nodes which should exist in this Node Pool. If specified this must be between `1` and `100` and between `minCount` and `maxCount`.
func (o KubernetesClusterDefaultNodePoolPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

// A map of Kubernetes labels which should be applied to nodes in the Default Node Pool.
func (o KubernetesClusterDefaultNodePoolPtrOutput) NodeLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) map[string]string {
		if v == nil {
			return nil
		}
		return v.NodeLabels
	}).(pulumi.StringMapOutput)
}

// A list of Kubernetes taints which should be applied to nodes in the agent pool (e.g `key=value:NoSchedule`).
func (o KubernetesClusterDefaultNodePoolPtrOutput) NodeTaints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) []string {
		if v == nil {
			return nil
		}
		return v.NodeTaints
	}).(pulumi.StringArrayOutput)
}

// The size of the OS Disk which should be used for each agent in the Node Pool. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolPtrOutput) OsDiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *int {
		if v == nil {
			return nil
		}
		return v.OsDiskSizeGb
	}).(pulumi.IntPtrOutput)
}

// A mapping of tags to assign to the Node Pool.
func (o KubernetesClusterDefaultNodePoolPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// The type of Node Pool which should be created. Possible values are `AvailabilitySet` and `VirtualMachineScaleSets`. Defaults to `VirtualMachineScaleSets`.
func (o KubernetesClusterDefaultNodePoolPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The size of the Virtual Machine, such as `Standard_DS2_v2`.
func (o KubernetesClusterDefaultNodePoolPtrOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *string {
		if v == nil {
			return nil
		}
		return &v.VmSize
	}).(pulumi.StringPtrOutput)
}

// The ID of a Subnet where the Kubernetes Node Pool should exist. Changing this forces a new resource to be created.
func (o KubernetesClusterDefaultNodePoolPtrOutput) VnetSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterDefaultNodePool) *string {
		if v == nil {
			return nil
		}
		return v.VnetSubnetId
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterIdentity struct {
	// The principal id of the system assigned identity which is used by master components.
	PrincipalId *string `pulumi:"principalId"`
	// The Tenant ID used for Azure Active Directory Application. If this isn't specified the Tenant ID of the current Subscription is used.
	TenantId *string `pulumi:"tenantId"`
	// The type of identity used for the managed cluster. At this time the only supported value is `SystemAssigned`.
	Type string `pulumi:"type"`
}

// KubernetesClusterIdentityInput is an input type that accepts KubernetesClusterIdentityArgs and KubernetesClusterIdentityOutput values.
// You can construct a concrete instance of `KubernetesClusterIdentityInput` via:
//
// 		 KubernetesClusterIdentityArgs{...}
//
type KubernetesClusterIdentityInput interface {
	pulumi.Input

	ToKubernetesClusterIdentityOutput() KubernetesClusterIdentityOutput
	ToKubernetesClusterIdentityOutputWithContext(context.Context) KubernetesClusterIdentityOutput
}

type KubernetesClusterIdentityArgs struct {
	// The principal id of the system assigned identity which is used by master components.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The Tenant ID used for Azure Active Directory Application. If this isn't specified the Tenant ID of the current Subscription is used.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The type of identity used for the managed cluster. At this time the only supported value is `SystemAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (KubernetesClusterIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterIdentity)(nil)).Elem()
}

func (i KubernetesClusterIdentityArgs) ToKubernetesClusterIdentityOutput() KubernetesClusterIdentityOutput {
	return i.ToKubernetesClusterIdentityOutputWithContext(context.Background())
}

func (i KubernetesClusterIdentityArgs) ToKubernetesClusterIdentityOutputWithContext(ctx context.Context) KubernetesClusterIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterIdentityOutput)
}

func (i KubernetesClusterIdentityArgs) ToKubernetesClusterIdentityPtrOutput() KubernetesClusterIdentityPtrOutput {
	return i.ToKubernetesClusterIdentityPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterIdentityArgs) ToKubernetesClusterIdentityPtrOutputWithContext(ctx context.Context) KubernetesClusterIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterIdentityOutput).ToKubernetesClusterIdentityPtrOutputWithContext(ctx)
}

// KubernetesClusterIdentityPtrInput is an input type that accepts KubernetesClusterIdentityArgs, KubernetesClusterIdentityPtr and KubernetesClusterIdentityPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterIdentityPtrInput` via:
//
// 		 KubernetesClusterIdentityArgs{...}
//
//  or:
//
// 		 nil
//
type KubernetesClusterIdentityPtrInput interface {
	pulumi.Input

	ToKubernetesClusterIdentityPtrOutput() KubernetesClusterIdentityPtrOutput
	ToKubernetesClusterIdentityPtrOutputWithContext(context.Context) KubernetesClusterIdentityPtrOutput
}

type kubernetesClusterIdentityPtrType KubernetesClusterIdentityArgs

func KubernetesClusterIdentityPtr(v *KubernetesClusterIdentityArgs) KubernetesClusterIdentityPtrInput {
	return (*kubernetesClusterIdentityPtrType)(v)
}

func (*kubernetesClusterIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterIdentity)(nil)).Elem()
}

func (i *kubernetesClusterIdentityPtrType) ToKubernetesClusterIdentityPtrOutput() KubernetesClusterIdentityPtrOutput {
	return i.ToKubernetesClusterIdentityPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterIdentityPtrType) ToKubernetesClusterIdentityPtrOutputWithContext(ctx context.Context) KubernetesClusterIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterIdentityPtrOutput)
}

type KubernetesClusterIdentityOutput struct{ *pulumi.OutputState }

func (KubernetesClusterIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterIdentity)(nil)).Elem()
}

func (o KubernetesClusterIdentityOutput) ToKubernetesClusterIdentityOutput() KubernetesClusterIdentityOutput {
	return o
}

func (o KubernetesClusterIdentityOutput) ToKubernetesClusterIdentityOutputWithContext(ctx context.Context) KubernetesClusterIdentityOutput {
	return o
}

func (o KubernetesClusterIdentityOutput) ToKubernetesClusterIdentityPtrOutput() KubernetesClusterIdentityPtrOutput {
	return o.ToKubernetesClusterIdentityPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterIdentityOutput) ToKubernetesClusterIdentityPtrOutputWithContext(ctx context.Context) KubernetesClusterIdentityPtrOutput {
	return o.ApplyT(func(v KubernetesClusterIdentity) *KubernetesClusterIdentity {
		return &v
	}).(KubernetesClusterIdentityPtrOutput)
}

// The principal id of the system assigned identity which is used by master components.
func (o KubernetesClusterIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The Tenant ID used for Azure Active Directory Application. If this isn't specified the Tenant ID of the current Subscription is used.
func (o KubernetesClusterIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The type of identity used for the managed cluster. At this time the only supported value is `SystemAssigned`.
func (o KubernetesClusterIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type KubernetesClusterIdentityPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterIdentity)(nil)).Elem()
}

func (o KubernetesClusterIdentityPtrOutput) ToKubernetesClusterIdentityPtrOutput() KubernetesClusterIdentityPtrOutput {
	return o
}

func (o KubernetesClusterIdentityPtrOutput) ToKubernetesClusterIdentityPtrOutputWithContext(ctx context.Context) KubernetesClusterIdentityPtrOutput {
	return o
}

func (o KubernetesClusterIdentityPtrOutput) Elem() KubernetesClusterIdentityOutput {
	return o.ApplyT(func(v *KubernetesClusterIdentity) KubernetesClusterIdentity { return *v }).(KubernetesClusterIdentityOutput)
}

// The principal id of the system assigned identity which is used by master components.
func (o KubernetesClusterIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID used for Azure Active Directory Application. If this isn't specified the Tenant ID of the current Subscription is used.
func (o KubernetesClusterIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of identity used for the managed cluster. At this time the only supported value is `SystemAssigned`.
func (o KubernetesClusterIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterKubeAdminConfig struct {
	// Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
	ClientKey *string `pulumi:"clientKey"`
	// Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
	ClusterCaCertificate *string `pulumi:"clusterCaCertificate"`
	// The Kubernetes cluster server host.
	Host *string `pulumi:"host"`
	// A password or token used to authenticate to the Kubernetes cluster.
	Password *string `pulumi:"password"`
	// A username used to authenticate to the Kubernetes cluster.
	Username *string `pulumi:"username"`
}

// KubernetesClusterKubeAdminConfigInput is an input type that accepts KubernetesClusterKubeAdminConfigArgs and KubernetesClusterKubeAdminConfigOutput values.
// You can construct a concrete instance of `KubernetesClusterKubeAdminConfigInput` via:
//
// 		 KubernetesClusterKubeAdminConfigArgs{...}
//
type KubernetesClusterKubeAdminConfigInput interface {
	pulumi.Input

	ToKubernetesClusterKubeAdminConfigOutput() KubernetesClusterKubeAdminConfigOutput
	ToKubernetesClusterKubeAdminConfigOutputWithContext(context.Context) KubernetesClusterKubeAdminConfigOutput
}

type KubernetesClusterKubeAdminConfigArgs struct {
	// Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
	ClientKey pulumi.StringPtrInput `pulumi:"clientKey"`
	// Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
	ClusterCaCertificate pulumi.StringPtrInput `pulumi:"clusterCaCertificate"`
	// The Kubernetes cluster server host.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// A password or token used to authenticate to the Kubernetes cluster.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// A username used to authenticate to the Kubernetes cluster.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (KubernetesClusterKubeAdminConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterKubeAdminConfig)(nil)).Elem()
}

func (i KubernetesClusterKubeAdminConfigArgs) ToKubernetesClusterKubeAdminConfigOutput() KubernetesClusterKubeAdminConfigOutput {
	return i.ToKubernetesClusterKubeAdminConfigOutputWithContext(context.Background())
}

func (i KubernetesClusterKubeAdminConfigArgs) ToKubernetesClusterKubeAdminConfigOutputWithContext(ctx context.Context) KubernetesClusterKubeAdminConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKubeAdminConfigOutput)
}

// KubernetesClusterKubeAdminConfigArrayInput is an input type that accepts KubernetesClusterKubeAdminConfigArray and KubernetesClusterKubeAdminConfigArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterKubeAdminConfigArrayInput` via:
//
// 		 KubernetesClusterKubeAdminConfigArray{ KubernetesClusterKubeAdminConfigArgs{...} }
//
type KubernetesClusterKubeAdminConfigArrayInput interface {
	pulumi.Input

	ToKubernetesClusterKubeAdminConfigArrayOutput() KubernetesClusterKubeAdminConfigArrayOutput
	ToKubernetesClusterKubeAdminConfigArrayOutputWithContext(context.Context) KubernetesClusterKubeAdminConfigArrayOutput
}

type KubernetesClusterKubeAdminConfigArray []KubernetesClusterKubeAdminConfigInput

func (KubernetesClusterKubeAdminConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterKubeAdminConfig)(nil)).Elem()
}

func (i KubernetesClusterKubeAdminConfigArray) ToKubernetesClusterKubeAdminConfigArrayOutput() KubernetesClusterKubeAdminConfigArrayOutput {
	return i.ToKubernetesClusterKubeAdminConfigArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterKubeAdminConfigArray) ToKubernetesClusterKubeAdminConfigArrayOutputWithContext(ctx context.Context) KubernetesClusterKubeAdminConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKubeAdminConfigArrayOutput)
}

type KubernetesClusterKubeAdminConfigOutput struct{ *pulumi.OutputState }

func (KubernetesClusterKubeAdminConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterKubeAdminConfig)(nil)).Elem()
}

func (o KubernetesClusterKubeAdminConfigOutput) ToKubernetesClusterKubeAdminConfigOutput() KubernetesClusterKubeAdminConfigOutput {
	return o
}

func (o KubernetesClusterKubeAdminConfigOutput) ToKubernetesClusterKubeAdminConfigOutputWithContext(ctx context.Context) KubernetesClusterKubeAdminConfigOutput {
	return o
}

// Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
func (o KubernetesClusterKubeAdminConfigOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeAdminConfig) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
func (o KubernetesClusterKubeAdminConfigOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeAdminConfig) *string { return v.ClientKey }).(pulumi.StringPtrOutput)
}

// Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
func (o KubernetesClusterKubeAdminConfigOutput) ClusterCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeAdminConfig) *string { return v.ClusterCaCertificate }).(pulumi.StringPtrOutput)
}

// The Kubernetes cluster server host.
func (o KubernetesClusterKubeAdminConfigOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeAdminConfig) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// A password or token used to authenticate to the Kubernetes cluster.
func (o KubernetesClusterKubeAdminConfigOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeAdminConfig) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// A username used to authenticate to the Kubernetes cluster.
func (o KubernetesClusterKubeAdminConfigOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeAdminConfig) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type KubernetesClusterKubeAdminConfigArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterKubeAdminConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterKubeAdminConfig)(nil)).Elem()
}

func (o KubernetesClusterKubeAdminConfigArrayOutput) ToKubernetesClusterKubeAdminConfigArrayOutput() KubernetesClusterKubeAdminConfigArrayOutput {
	return o
}

func (o KubernetesClusterKubeAdminConfigArrayOutput) ToKubernetesClusterKubeAdminConfigArrayOutputWithContext(ctx context.Context) KubernetesClusterKubeAdminConfigArrayOutput {
	return o
}

func (o KubernetesClusterKubeAdminConfigArrayOutput) Index(i pulumi.IntInput) KubernetesClusterKubeAdminConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterKubeAdminConfig {
		return vs[0].([]KubernetesClusterKubeAdminConfig)[vs[1].(int)]
	}).(KubernetesClusterKubeAdminConfigOutput)
}

type KubernetesClusterKubeConfig struct {
	// Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
	ClientKey *string `pulumi:"clientKey"`
	// Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
	ClusterCaCertificate *string `pulumi:"clusterCaCertificate"`
	// The Kubernetes cluster server host.
	Host *string `pulumi:"host"`
	// A password or token used to authenticate to the Kubernetes cluster.
	Password *string `pulumi:"password"`
	// A username used to authenticate to the Kubernetes cluster.
	Username *string `pulumi:"username"`
}

// KubernetesClusterKubeConfigInput is an input type that accepts KubernetesClusterKubeConfigArgs and KubernetesClusterKubeConfigOutput values.
// You can construct a concrete instance of `KubernetesClusterKubeConfigInput` via:
//
// 		 KubernetesClusterKubeConfigArgs{...}
//
type KubernetesClusterKubeConfigInput interface {
	pulumi.Input

	ToKubernetesClusterKubeConfigOutput() KubernetesClusterKubeConfigOutput
	ToKubernetesClusterKubeConfigOutputWithContext(context.Context) KubernetesClusterKubeConfigOutput
}

type KubernetesClusterKubeConfigArgs struct {
	// Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
	ClientKey pulumi.StringPtrInput `pulumi:"clientKey"`
	// Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
	ClusterCaCertificate pulumi.StringPtrInput `pulumi:"clusterCaCertificate"`
	// The Kubernetes cluster server host.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// A password or token used to authenticate to the Kubernetes cluster.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// A username used to authenticate to the Kubernetes cluster.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (KubernetesClusterKubeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterKubeConfig)(nil)).Elem()
}

func (i KubernetesClusterKubeConfigArgs) ToKubernetesClusterKubeConfigOutput() KubernetesClusterKubeConfigOutput {
	return i.ToKubernetesClusterKubeConfigOutputWithContext(context.Background())
}

func (i KubernetesClusterKubeConfigArgs) ToKubernetesClusterKubeConfigOutputWithContext(ctx context.Context) KubernetesClusterKubeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKubeConfigOutput)
}

// KubernetesClusterKubeConfigArrayInput is an input type that accepts KubernetesClusterKubeConfigArray and KubernetesClusterKubeConfigArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterKubeConfigArrayInput` via:
//
// 		 KubernetesClusterKubeConfigArray{ KubernetesClusterKubeConfigArgs{...} }
//
type KubernetesClusterKubeConfigArrayInput interface {
	pulumi.Input

	ToKubernetesClusterKubeConfigArrayOutput() KubernetesClusterKubeConfigArrayOutput
	ToKubernetesClusterKubeConfigArrayOutputWithContext(context.Context) KubernetesClusterKubeConfigArrayOutput
}

type KubernetesClusterKubeConfigArray []KubernetesClusterKubeConfigInput

func (KubernetesClusterKubeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterKubeConfig)(nil)).Elem()
}

func (i KubernetesClusterKubeConfigArray) ToKubernetesClusterKubeConfigArrayOutput() KubernetesClusterKubeConfigArrayOutput {
	return i.ToKubernetesClusterKubeConfigArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterKubeConfigArray) ToKubernetesClusterKubeConfigArrayOutputWithContext(ctx context.Context) KubernetesClusterKubeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKubeConfigArrayOutput)
}

type KubernetesClusterKubeConfigOutput struct{ *pulumi.OutputState }

func (KubernetesClusterKubeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterKubeConfig)(nil)).Elem()
}

func (o KubernetesClusterKubeConfigOutput) ToKubernetesClusterKubeConfigOutput() KubernetesClusterKubeConfigOutput {
	return o
}

func (o KubernetesClusterKubeConfigOutput) ToKubernetesClusterKubeConfigOutputWithContext(ctx context.Context) KubernetesClusterKubeConfigOutput {
	return o
}

// Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
func (o KubernetesClusterKubeConfigOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeConfig) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
func (o KubernetesClusterKubeConfigOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeConfig) *string { return v.ClientKey }).(pulumi.StringPtrOutput)
}

// Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
func (o KubernetesClusterKubeConfigOutput) ClusterCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeConfig) *string { return v.ClusterCaCertificate }).(pulumi.StringPtrOutput)
}

// The Kubernetes cluster server host.
func (o KubernetesClusterKubeConfigOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeConfig) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// A password or token used to authenticate to the Kubernetes cluster.
func (o KubernetesClusterKubeConfigOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeConfig) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// A username used to authenticate to the Kubernetes cluster.
func (o KubernetesClusterKubeConfigOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeConfig) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type KubernetesClusterKubeConfigArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterKubeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterKubeConfig)(nil)).Elem()
}

func (o KubernetesClusterKubeConfigArrayOutput) ToKubernetesClusterKubeConfigArrayOutput() KubernetesClusterKubeConfigArrayOutput {
	return o
}

func (o KubernetesClusterKubeConfigArrayOutput) ToKubernetesClusterKubeConfigArrayOutputWithContext(ctx context.Context) KubernetesClusterKubeConfigArrayOutput {
	return o
}

func (o KubernetesClusterKubeConfigArrayOutput) Index(i pulumi.IntInput) KubernetesClusterKubeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterKubeConfig {
		return vs[0].([]KubernetesClusterKubeConfig)[vs[1].(int)]
	}).(KubernetesClusterKubeConfigOutput)
}

type KubernetesClusterKubeletIdentity struct {
	// The Client ID for the Service Principal.
	ClientId *string `pulumi:"clientId"`
	// The Object ID of the user-defined Managed Identity assigned to the Kubelets.
	ObjectId *string `pulumi:"objectId"`
	// The ID of the User Assigned Identity assigned to the Kubelets.
	UserAssignedIdentityId *string `pulumi:"userAssignedIdentityId"`
}

// KubernetesClusterKubeletIdentityInput is an input type that accepts KubernetesClusterKubeletIdentityArgs and KubernetesClusterKubeletIdentityOutput values.
// You can construct a concrete instance of `KubernetesClusterKubeletIdentityInput` via:
//
// 		 KubernetesClusterKubeletIdentityArgs{...}
//
type KubernetesClusterKubeletIdentityInput interface {
	pulumi.Input

	ToKubernetesClusterKubeletIdentityOutput() KubernetesClusterKubeletIdentityOutput
	ToKubernetesClusterKubeletIdentityOutputWithContext(context.Context) KubernetesClusterKubeletIdentityOutput
}

type KubernetesClusterKubeletIdentityArgs struct {
	// The Client ID for the Service Principal.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The Object ID of the user-defined Managed Identity assigned to the Kubelets.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
	// The ID of the User Assigned Identity assigned to the Kubelets.
	UserAssignedIdentityId pulumi.StringPtrInput `pulumi:"userAssignedIdentityId"`
}

func (KubernetesClusterKubeletIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterKubeletIdentity)(nil)).Elem()
}

func (i KubernetesClusterKubeletIdentityArgs) ToKubernetesClusterKubeletIdentityOutput() KubernetesClusterKubeletIdentityOutput {
	return i.ToKubernetesClusterKubeletIdentityOutputWithContext(context.Background())
}

func (i KubernetesClusterKubeletIdentityArgs) ToKubernetesClusterKubeletIdentityOutputWithContext(ctx context.Context) KubernetesClusterKubeletIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKubeletIdentityOutput)
}

// KubernetesClusterKubeletIdentityArrayInput is an input type that accepts KubernetesClusterKubeletIdentityArray and KubernetesClusterKubeletIdentityArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterKubeletIdentityArrayInput` via:
//
// 		 KubernetesClusterKubeletIdentityArray{ KubernetesClusterKubeletIdentityArgs{...} }
//
type KubernetesClusterKubeletIdentityArrayInput interface {
	pulumi.Input

	ToKubernetesClusterKubeletIdentityArrayOutput() KubernetesClusterKubeletIdentityArrayOutput
	ToKubernetesClusterKubeletIdentityArrayOutputWithContext(context.Context) KubernetesClusterKubeletIdentityArrayOutput
}

type KubernetesClusterKubeletIdentityArray []KubernetesClusterKubeletIdentityInput

func (KubernetesClusterKubeletIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterKubeletIdentity)(nil)).Elem()
}

func (i KubernetesClusterKubeletIdentityArray) ToKubernetesClusterKubeletIdentityArrayOutput() KubernetesClusterKubeletIdentityArrayOutput {
	return i.ToKubernetesClusterKubeletIdentityArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterKubeletIdentityArray) ToKubernetesClusterKubeletIdentityArrayOutputWithContext(ctx context.Context) KubernetesClusterKubeletIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKubeletIdentityArrayOutput)
}

type KubernetesClusterKubeletIdentityOutput struct{ *pulumi.OutputState }

func (KubernetesClusterKubeletIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterKubeletIdentity)(nil)).Elem()
}

func (o KubernetesClusterKubeletIdentityOutput) ToKubernetesClusterKubeletIdentityOutput() KubernetesClusterKubeletIdentityOutput {
	return o
}

func (o KubernetesClusterKubeletIdentityOutput) ToKubernetesClusterKubeletIdentityOutputWithContext(ctx context.Context) KubernetesClusterKubeletIdentityOutput {
	return o
}

// The Client ID for the Service Principal.
func (o KubernetesClusterKubeletIdentityOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeletIdentity) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The Object ID of the user-defined Managed Identity assigned to the Kubelets.
func (o KubernetesClusterKubeletIdentityOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeletIdentity) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// The ID of the User Assigned Identity assigned to the Kubelets.
func (o KubernetesClusterKubeletIdentityOutput) UserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeletIdentity) *string { return v.UserAssignedIdentityId }).(pulumi.StringPtrOutput)
}

type KubernetesClusterKubeletIdentityArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterKubeletIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterKubeletIdentity)(nil)).Elem()
}

func (o KubernetesClusterKubeletIdentityArrayOutput) ToKubernetesClusterKubeletIdentityArrayOutput() KubernetesClusterKubeletIdentityArrayOutput {
	return o
}

func (o KubernetesClusterKubeletIdentityArrayOutput) ToKubernetesClusterKubeletIdentityArrayOutputWithContext(ctx context.Context) KubernetesClusterKubeletIdentityArrayOutput {
	return o
}

func (o KubernetesClusterKubeletIdentityArrayOutput) Index(i pulumi.IntInput) KubernetesClusterKubeletIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterKubeletIdentity {
		return vs[0].([]KubernetesClusterKubeletIdentity)[vs[1].(int)]
	}).(KubernetesClusterKubeletIdentityOutput)
}

type KubernetesClusterLinuxProfile struct {
	// The Admin Username for the Cluster. Changing this forces a new resource to be created.
	AdminUsername string `pulumi:"adminUsername"`
	// An `sshKey` block. Only one is currently allowed. Changing this forces a new resource to be created.
	SshKey KubernetesClusterLinuxProfileSshKey `pulumi:"sshKey"`
}

// KubernetesClusterLinuxProfileInput is an input type that accepts KubernetesClusterLinuxProfileArgs and KubernetesClusterLinuxProfileOutput values.
// You can construct a concrete instance of `KubernetesClusterLinuxProfileInput` via:
//
// 		 KubernetesClusterLinuxProfileArgs{...}
//
type KubernetesClusterLinuxProfileInput interface {
	pulumi.Input

	ToKubernetesClusterLinuxProfileOutput() KubernetesClusterLinuxProfileOutput
	ToKubernetesClusterLinuxProfileOutputWithContext(context.Context) KubernetesClusterLinuxProfileOutput
}

type KubernetesClusterLinuxProfileArgs struct {
	// The Admin Username for the Cluster. Changing this forces a new resource to be created.
	AdminUsername pulumi.StringInput `pulumi:"adminUsername"`
	// An `sshKey` block. Only one is currently allowed. Changing this forces a new resource to be created.
	SshKey KubernetesClusterLinuxProfileSshKeyInput `pulumi:"sshKey"`
}

func (KubernetesClusterLinuxProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterLinuxProfile)(nil)).Elem()
}

func (i KubernetesClusterLinuxProfileArgs) ToKubernetesClusterLinuxProfileOutput() KubernetesClusterLinuxProfileOutput {
	return i.ToKubernetesClusterLinuxProfileOutputWithContext(context.Background())
}

func (i KubernetesClusterLinuxProfileArgs) ToKubernetesClusterLinuxProfileOutputWithContext(ctx context.Context) KubernetesClusterLinuxProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterLinuxProfileOutput)
}

func (i KubernetesClusterLinuxProfileArgs) ToKubernetesClusterLinuxProfilePtrOutput() KubernetesClusterLinuxProfilePtrOutput {
	return i.ToKubernetesClusterLinuxProfilePtrOutputWithContext(context.Background())
}

func (i KubernetesClusterLinuxProfileArgs) ToKubernetesClusterLinuxProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterLinuxProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterLinuxProfileOutput).ToKubernetesClusterLinuxProfilePtrOutputWithContext(ctx)
}

// KubernetesClusterLinuxProfilePtrInput is an input type that accepts KubernetesClusterLinuxProfileArgs, KubernetesClusterLinuxProfilePtr and KubernetesClusterLinuxProfilePtrOutput values.
// You can construct a concrete instance of `KubernetesClusterLinuxProfilePtrInput` via:
//
// 		 KubernetesClusterLinuxProfileArgs{...}
//
//  or:
//
// 		 nil
//
type KubernetesClusterLinuxProfilePtrInput interface {
	pulumi.Input

	ToKubernetesClusterLinuxProfilePtrOutput() KubernetesClusterLinuxProfilePtrOutput
	ToKubernetesClusterLinuxProfilePtrOutputWithContext(context.Context) KubernetesClusterLinuxProfilePtrOutput
}

type kubernetesClusterLinuxProfilePtrType KubernetesClusterLinuxProfileArgs

func KubernetesClusterLinuxProfilePtr(v *KubernetesClusterLinuxProfileArgs) KubernetesClusterLinuxProfilePtrInput {
	return (*kubernetesClusterLinuxProfilePtrType)(v)
}

func (*kubernetesClusterLinuxProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterLinuxProfile)(nil)).Elem()
}

func (i *kubernetesClusterLinuxProfilePtrType) ToKubernetesClusterLinuxProfilePtrOutput() KubernetesClusterLinuxProfilePtrOutput {
	return i.ToKubernetesClusterLinuxProfilePtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterLinuxProfilePtrType) ToKubernetesClusterLinuxProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterLinuxProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterLinuxProfilePtrOutput)
}

type KubernetesClusterLinuxProfileOutput struct{ *pulumi.OutputState }

func (KubernetesClusterLinuxProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterLinuxProfile)(nil)).Elem()
}

func (o KubernetesClusterLinuxProfileOutput) ToKubernetesClusterLinuxProfileOutput() KubernetesClusterLinuxProfileOutput {
	return o
}

func (o KubernetesClusterLinuxProfileOutput) ToKubernetesClusterLinuxProfileOutputWithContext(ctx context.Context) KubernetesClusterLinuxProfileOutput {
	return o
}

func (o KubernetesClusterLinuxProfileOutput) ToKubernetesClusterLinuxProfilePtrOutput() KubernetesClusterLinuxProfilePtrOutput {
	return o.ToKubernetesClusterLinuxProfilePtrOutputWithContext(context.Background())
}

func (o KubernetesClusterLinuxProfileOutput) ToKubernetesClusterLinuxProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterLinuxProfilePtrOutput {
	return o.ApplyT(func(v KubernetesClusterLinuxProfile) *KubernetesClusterLinuxProfile {
		return &v
	}).(KubernetesClusterLinuxProfilePtrOutput)
}

// The Admin Username for the Cluster. Changing this forces a new resource to be created.
func (o KubernetesClusterLinuxProfileOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterLinuxProfile) string { return v.AdminUsername }).(pulumi.StringOutput)
}

// An `sshKey` block. Only one is currently allowed. Changing this forces a new resource to be created.
func (o KubernetesClusterLinuxProfileOutput) SshKey() KubernetesClusterLinuxProfileSshKeyOutput {
	return o.ApplyT(func(v KubernetesClusterLinuxProfile) KubernetesClusterLinuxProfileSshKey { return v.SshKey }).(KubernetesClusterLinuxProfileSshKeyOutput)
}

type KubernetesClusterLinuxProfilePtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterLinuxProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterLinuxProfile)(nil)).Elem()
}

func (o KubernetesClusterLinuxProfilePtrOutput) ToKubernetesClusterLinuxProfilePtrOutput() KubernetesClusterLinuxProfilePtrOutput {
	return o
}

func (o KubernetesClusterLinuxProfilePtrOutput) ToKubernetesClusterLinuxProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterLinuxProfilePtrOutput {
	return o
}

func (o KubernetesClusterLinuxProfilePtrOutput) Elem() KubernetesClusterLinuxProfileOutput {
	return o.ApplyT(func(v *KubernetesClusterLinuxProfile) KubernetesClusterLinuxProfile { return *v }).(KubernetesClusterLinuxProfileOutput)
}

// The Admin Username for the Cluster. Changing this forces a new resource to be created.
func (o KubernetesClusterLinuxProfilePtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterLinuxProfile) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// An `sshKey` block. Only one is currently allowed. Changing this forces a new resource to be created.
func (o KubernetesClusterLinuxProfilePtrOutput) SshKey() KubernetesClusterLinuxProfileSshKeyPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterLinuxProfile) *KubernetesClusterLinuxProfileSshKey {
		if v == nil {
			return nil
		}
		return &v.SshKey
	}).(KubernetesClusterLinuxProfileSshKeyPtrOutput)
}

type KubernetesClusterLinuxProfileSshKey struct {
	// The Public SSH Key used to access the cluster. Changing this forces a new resource to be created.
	KeyData string `pulumi:"keyData"`
}

// KubernetesClusterLinuxProfileSshKeyInput is an input type that accepts KubernetesClusterLinuxProfileSshKeyArgs and KubernetesClusterLinuxProfileSshKeyOutput values.
// You can construct a concrete instance of `KubernetesClusterLinuxProfileSshKeyInput` via:
//
// 		 KubernetesClusterLinuxProfileSshKeyArgs{...}
//
type KubernetesClusterLinuxProfileSshKeyInput interface {
	pulumi.Input

	ToKubernetesClusterLinuxProfileSshKeyOutput() KubernetesClusterLinuxProfileSshKeyOutput
	ToKubernetesClusterLinuxProfileSshKeyOutputWithContext(context.Context) KubernetesClusterLinuxProfileSshKeyOutput
}

type KubernetesClusterLinuxProfileSshKeyArgs struct {
	// The Public SSH Key used to access the cluster. Changing this forces a new resource to be created.
	KeyData pulumi.StringInput `pulumi:"keyData"`
}

func (KubernetesClusterLinuxProfileSshKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterLinuxProfileSshKey)(nil)).Elem()
}

func (i KubernetesClusterLinuxProfileSshKeyArgs) ToKubernetesClusterLinuxProfileSshKeyOutput() KubernetesClusterLinuxProfileSshKeyOutput {
	return i.ToKubernetesClusterLinuxProfileSshKeyOutputWithContext(context.Background())
}

func (i KubernetesClusterLinuxProfileSshKeyArgs) ToKubernetesClusterLinuxProfileSshKeyOutputWithContext(ctx context.Context) KubernetesClusterLinuxProfileSshKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterLinuxProfileSshKeyOutput)
}

func (i KubernetesClusterLinuxProfileSshKeyArgs) ToKubernetesClusterLinuxProfileSshKeyPtrOutput() KubernetesClusterLinuxProfileSshKeyPtrOutput {
	return i.ToKubernetesClusterLinuxProfileSshKeyPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterLinuxProfileSshKeyArgs) ToKubernetesClusterLinuxProfileSshKeyPtrOutputWithContext(ctx context.Context) KubernetesClusterLinuxProfileSshKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterLinuxProfileSshKeyOutput).ToKubernetesClusterLinuxProfileSshKeyPtrOutputWithContext(ctx)
}

// KubernetesClusterLinuxProfileSshKeyPtrInput is an input type that accepts KubernetesClusterLinuxProfileSshKeyArgs, KubernetesClusterLinuxProfileSshKeyPtr and KubernetesClusterLinuxProfileSshKeyPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterLinuxProfileSshKeyPtrInput` via:
//
// 		 KubernetesClusterLinuxProfileSshKeyArgs{...}
//
//  or:
//
// 		 nil
//
type KubernetesClusterLinuxProfileSshKeyPtrInput interface {
	pulumi.Input

	ToKubernetesClusterLinuxProfileSshKeyPtrOutput() KubernetesClusterLinuxProfileSshKeyPtrOutput
	ToKubernetesClusterLinuxProfileSshKeyPtrOutputWithContext(context.Context) KubernetesClusterLinuxProfileSshKeyPtrOutput
}

type kubernetesClusterLinuxProfileSshKeyPtrType KubernetesClusterLinuxProfileSshKeyArgs

func KubernetesClusterLinuxProfileSshKeyPtr(v *KubernetesClusterLinuxProfileSshKeyArgs) KubernetesClusterLinuxProfileSshKeyPtrInput {
	return (*kubernetesClusterLinuxProfileSshKeyPtrType)(v)
}

func (*kubernetesClusterLinuxProfileSshKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterLinuxProfileSshKey)(nil)).Elem()
}

func (i *kubernetesClusterLinuxProfileSshKeyPtrType) ToKubernetesClusterLinuxProfileSshKeyPtrOutput() KubernetesClusterLinuxProfileSshKeyPtrOutput {
	return i.ToKubernetesClusterLinuxProfileSshKeyPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterLinuxProfileSshKeyPtrType) ToKubernetesClusterLinuxProfileSshKeyPtrOutputWithContext(ctx context.Context) KubernetesClusterLinuxProfileSshKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterLinuxProfileSshKeyPtrOutput)
}

type KubernetesClusterLinuxProfileSshKeyOutput struct{ *pulumi.OutputState }

func (KubernetesClusterLinuxProfileSshKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterLinuxProfileSshKey)(nil)).Elem()
}

func (o KubernetesClusterLinuxProfileSshKeyOutput) ToKubernetesClusterLinuxProfileSshKeyOutput() KubernetesClusterLinuxProfileSshKeyOutput {
	return o
}

func (o KubernetesClusterLinuxProfileSshKeyOutput) ToKubernetesClusterLinuxProfileSshKeyOutputWithContext(ctx context.Context) KubernetesClusterLinuxProfileSshKeyOutput {
	return o
}

func (o KubernetesClusterLinuxProfileSshKeyOutput) ToKubernetesClusterLinuxProfileSshKeyPtrOutput() KubernetesClusterLinuxProfileSshKeyPtrOutput {
	return o.ToKubernetesClusterLinuxProfileSshKeyPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterLinuxProfileSshKeyOutput) ToKubernetesClusterLinuxProfileSshKeyPtrOutputWithContext(ctx context.Context) KubernetesClusterLinuxProfileSshKeyPtrOutput {
	return o.ApplyT(func(v KubernetesClusterLinuxProfileSshKey) *KubernetesClusterLinuxProfileSshKey {
		return &v
	}).(KubernetesClusterLinuxProfileSshKeyPtrOutput)
}

// The Public SSH Key used to access the cluster. Changing this forces a new resource to be created.
func (o KubernetesClusterLinuxProfileSshKeyOutput) KeyData() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterLinuxProfileSshKey) string { return v.KeyData }).(pulumi.StringOutput)
}

type KubernetesClusterLinuxProfileSshKeyPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterLinuxProfileSshKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterLinuxProfileSshKey)(nil)).Elem()
}

func (o KubernetesClusterLinuxProfileSshKeyPtrOutput) ToKubernetesClusterLinuxProfileSshKeyPtrOutput() KubernetesClusterLinuxProfileSshKeyPtrOutput {
	return o
}

func (o KubernetesClusterLinuxProfileSshKeyPtrOutput) ToKubernetesClusterLinuxProfileSshKeyPtrOutputWithContext(ctx context.Context) KubernetesClusterLinuxProfileSshKeyPtrOutput {
	return o
}

func (o KubernetesClusterLinuxProfileSshKeyPtrOutput) Elem() KubernetesClusterLinuxProfileSshKeyOutput {
	return o.ApplyT(func(v *KubernetesClusterLinuxProfileSshKey) KubernetesClusterLinuxProfileSshKey { return *v }).(KubernetesClusterLinuxProfileSshKeyOutput)
}

// The Public SSH Key used to access the cluster. Changing this forces a new resource to be created.
func (o KubernetesClusterLinuxProfileSshKeyPtrOutput) KeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterLinuxProfileSshKey) *string {
		if v == nil {
			return nil
		}
		return &v.KeyData
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterNetworkProfile struct {
	// IP address within the Kubernetes service address range that will be used by cluster service discovery (kube-dns). Changing this forces a new resource to be created.
	DnsServiceIp *string `pulumi:"dnsServiceIp"`
	// IP address (in CIDR notation) used as the Docker bridge IP address on nodes. Changing this forces a new resource to be created.
	DockerBridgeCidr *string `pulumi:"dockerBridgeCidr"`
	// A `loadBalancerProfile` block. This can only be specified when `loadBalancerSku` is set to `Standard`.
	LoadBalancerProfile *KubernetesClusterNetworkProfileLoadBalancerProfile `pulumi:"loadBalancerProfile"`
	// Specifies the SKU of the Load Balancer used for this Kubernetes Cluster. Possible values are `Basic` and `Standard`. Defaults to `Standard`.
	LoadBalancerSku *string `pulumi:"loadBalancerSku"`
	// Network plugin to use for networking. Currently supported values are `azure` and `kubenet`. Changing this forces a new resource to be created.
	NetworkPlugin string `pulumi:"networkPlugin"`
	// Sets up network policy to be used with Azure CNI. [Network policy allows us to control the traffic flow between pods](https://docs.microsoft.com/en-us/azure/aks/use-network-policies). Currently supported values are `calico` and `azure`. Changing this forces a new resource to be created.
	NetworkPolicy *string `pulumi:"networkPolicy"`
	// The outbound (egress) routing method which should be used for this Kubernetes Cluster. Possible values are `loadBalancer` and `userDefinedRouting`. Defaults to `loadBalancer`.
	OutboundType *string `pulumi:"outboundType"`
	// The CIDR to use for pod IP addresses. This field can only be set when `networkPlugin` is set to `kubenet`. Changing this forces a new resource to be created.
	PodCidr *string `pulumi:"podCidr"`
	// The Network Range used by the Kubernetes service. Changing this forces a new resource to be created.
	ServiceCidr *string `pulumi:"serviceCidr"`
}

// KubernetesClusterNetworkProfileInput is an input type that accepts KubernetesClusterNetworkProfileArgs and KubernetesClusterNetworkProfileOutput values.
// You can construct a concrete instance of `KubernetesClusterNetworkProfileInput` via:
//
// 		 KubernetesClusterNetworkProfileArgs{...}
//
type KubernetesClusterNetworkProfileInput interface {
	pulumi.Input

	ToKubernetesClusterNetworkProfileOutput() KubernetesClusterNetworkProfileOutput
	ToKubernetesClusterNetworkProfileOutputWithContext(context.Context) KubernetesClusterNetworkProfileOutput
}

type KubernetesClusterNetworkProfileArgs struct {
	// IP address within the Kubernetes service address range that will be used by cluster service discovery (kube-dns). Changing this forces a new resource to be created.
	DnsServiceIp pulumi.StringPtrInput `pulumi:"dnsServiceIp"`
	// IP address (in CIDR notation) used as the Docker bridge IP address on nodes. Changing this forces a new resource to be created.
	DockerBridgeCidr pulumi.StringPtrInput `pulumi:"dockerBridgeCidr"`
	// A `loadBalancerProfile` block. This can only be specified when `loadBalancerSku` is set to `Standard`.
	LoadBalancerProfile KubernetesClusterNetworkProfileLoadBalancerProfilePtrInput `pulumi:"loadBalancerProfile"`
	// Specifies the SKU of the Load Balancer used for this Kubernetes Cluster. Possible values are `Basic` and `Standard`. Defaults to `Standard`.
	LoadBalancerSku pulumi.StringPtrInput `pulumi:"loadBalancerSku"`
	// Network plugin to use for networking. Currently supported values are `azure` and `kubenet`. Changing this forces a new resource to be created.
	NetworkPlugin pulumi.StringInput `pulumi:"networkPlugin"`
	// Sets up network policy to be used with Azure CNI. [Network policy allows us to control the traffic flow between pods](https://docs.microsoft.com/en-us/azure/aks/use-network-policies). Currently supported values are `calico` and `azure`. Changing this forces a new resource to be created.
	NetworkPolicy pulumi.StringPtrInput `pulumi:"networkPolicy"`
	// The outbound (egress) routing method which should be used for this Kubernetes Cluster. Possible values are `loadBalancer` and `userDefinedRouting`. Defaults to `loadBalancer`.
	OutboundType pulumi.StringPtrInput `pulumi:"outboundType"`
	// The CIDR to use for pod IP addresses. This field can only be set when `networkPlugin` is set to `kubenet`. Changing this forces a new resource to be created.
	PodCidr pulumi.StringPtrInput `pulumi:"podCidr"`
	// The Network Range used by the Kubernetes service. Changing this forces a new resource to be created.
	ServiceCidr pulumi.StringPtrInput `pulumi:"serviceCidr"`
}

func (KubernetesClusterNetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNetworkProfile)(nil)).Elem()
}

func (i KubernetesClusterNetworkProfileArgs) ToKubernetesClusterNetworkProfileOutput() KubernetesClusterNetworkProfileOutput {
	return i.ToKubernetesClusterNetworkProfileOutputWithContext(context.Background())
}

func (i KubernetesClusterNetworkProfileArgs) ToKubernetesClusterNetworkProfileOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNetworkProfileOutput)
}

func (i KubernetesClusterNetworkProfileArgs) ToKubernetesClusterNetworkProfilePtrOutput() KubernetesClusterNetworkProfilePtrOutput {
	return i.ToKubernetesClusterNetworkProfilePtrOutputWithContext(context.Background())
}

func (i KubernetesClusterNetworkProfileArgs) ToKubernetesClusterNetworkProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNetworkProfileOutput).ToKubernetesClusterNetworkProfilePtrOutputWithContext(ctx)
}

// KubernetesClusterNetworkProfilePtrInput is an input type that accepts KubernetesClusterNetworkProfileArgs, KubernetesClusterNetworkProfilePtr and KubernetesClusterNetworkProfilePtrOutput values.
// You can construct a concrete instance of `KubernetesClusterNetworkProfilePtrInput` via:
//
// 		 KubernetesClusterNetworkProfileArgs{...}
//
//  or:
//
// 		 nil
//
type KubernetesClusterNetworkProfilePtrInput interface {
	pulumi.Input

	ToKubernetesClusterNetworkProfilePtrOutput() KubernetesClusterNetworkProfilePtrOutput
	ToKubernetesClusterNetworkProfilePtrOutputWithContext(context.Context) KubernetesClusterNetworkProfilePtrOutput
}

type kubernetesClusterNetworkProfilePtrType KubernetesClusterNetworkProfileArgs

func KubernetesClusterNetworkProfilePtr(v *KubernetesClusterNetworkProfileArgs) KubernetesClusterNetworkProfilePtrInput {
	return (*kubernetesClusterNetworkProfilePtrType)(v)
}

func (*kubernetesClusterNetworkProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterNetworkProfile)(nil)).Elem()
}

func (i *kubernetesClusterNetworkProfilePtrType) ToKubernetesClusterNetworkProfilePtrOutput() KubernetesClusterNetworkProfilePtrOutput {
	return i.ToKubernetesClusterNetworkProfilePtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterNetworkProfilePtrType) ToKubernetesClusterNetworkProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNetworkProfilePtrOutput)
}

type KubernetesClusterNetworkProfileOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNetworkProfile)(nil)).Elem()
}

func (o KubernetesClusterNetworkProfileOutput) ToKubernetesClusterNetworkProfileOutput() KubernetesClusterNetworkProfileOutput {
	return o
}

func (o KubernetesClusterNetworkProfileOutput) ToKubernetesClusterNetworkProfileOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfileOutput {
	return o
}

func (o KubernetesClusterNetworkProfileOutput) ToKubernetesClusterNetworkProfilePtrOutput() KubernetesClusterNetworkProfilePtrOutput {
	return o.ToKubernetesClusterNetworkProfilePtrOutputWithContext(context.Background())
}

func (o KubernetesClusterNetworkProfileOutput) ToKubernetesClusterNetworkProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfilePtrOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfile) *KubernetesClusterNetworkProfile {
		return &v
	}).(KubernetesClusterNetworkProfilePtrOutput)
}

// IP address within the Kubernetes service address range that will be used by cluster service discovery (kube-dns). Changing this forces a new resource to be created.
func (o KubernetesClusterNetworkProfileOutput) DnsServiceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfile) *string { return v.DnsServiceIp }).(pulumi.StringPtrOutput)
}

// IP address (in CIDR notation) used as the Docker bridge IP address on nodes. Changing this forces a new resource to be created.
func (o KubernetesClusterNetworkProfileOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfile) *string { return v.DockerBridgeCidr }).(pulumi.StringPtrOutput)
}

// A `loadBalancerProfile` block. This can only be specified when `loadBalancerSku` is set to `Standard`.
func (o KubernetesClusterNetworkProfileOutput) LoadBalancerProfile() KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfile) *KubernetesClusterNetworkProfileLoadBalancerProfile {
		return v.LoadBalancerProfile
	}).(KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput)
}

// Specifies the SKU of the Load Balancer used for this Kubernetes Cluster. Possible values are `Basic` and `Standard`. Defaults to `Standard`.
func (o KubernetesClusterNetworkProfileOutput) LoadBalancerSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfile) *string { return v.LoadBalancerSku }).(pulumi.StringPtrOutput)
}

// Network plugin to use for networking. Currently supported values are `azure` and `kubenet`. Changing this forces a new resource to be created.
func (o KubernetesClusterNetworkProfileOutput) NetworkPlugin() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfile) string { return v.NetworkPlugin }).(pulumi.StringOutput)
}

// Sets up network policy to be used with Azure CNI. [Network policy allows us to control the traffic flow between pods](https://docs.microsoft.com/en-us/azure/aks/use-network-policies). Currently supported values are `calico` and `azure`. Changing this forces a new resource to be created.
func (o KubernetesClusterNetworkProfileOutput) NetworkPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfile) *string { return v.NetworkPolicy }).(pulumi.StringPtrOutput)
}

// The outbound (egress) routing method which should be used for this Kubernetes Cluster. Possible values are `loadBalancer` and `userDefinedRouting`. Defaults to `loadBalancer`.
func (o KubernetesClusterNetworkProfileOutput) OutboundType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfile) *string { return v.OutboundType }).(pulumi.StringPtrOutput)
}

// The CIDR to use for pod IP addresses. This field can only be set when `networkPlugin` is set to `kubenet`. Changing this forces a new resource to be created.
func (o KubernetesClusterNetworkProfileOutput) PodCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfile) *string { return v.PodCidr }).(pulumi.StringPtrOutput)
}

// The Network Range used by the Kubernetes service. Changing this forces a new resource to be created.
func (o KubernetesClusterNetworkProfileOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfile) *string { return v.ServiceCidr }).(pulumi.StringPtrOutput)
}

type KubernetesClusterNetworkProfilePtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNetworkProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterNetworkProfile)(nil)).Elem()
}

func (o KubernetesClusterNetworkProfilePtrOutput) ToKubernetesClusterNetworkProfilePtrOutput() KubernetesClusterNetworkProfilePtrOutput {
	return o
}

func (o KubernetesClusterNetworkProfilePtrOutput) ToKubernetesClusterNetworkProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfilePtrOutput {
	return o
}

func (o KubernetesClusterNetworkProfilePtrOutput) Elem() KubernetesClusterNetworkProfileOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfile) KubernetesClusterNetworkProfile { return *v }).(KubernetesClusterNetworkProfileOutput)
}

// IP address within the Kubernetes service address range that will be used by cluster service discovery (kube-dns). Changing this forces a new resource to be created.
func (o KubernetesClusterNetworkProfilePtrOutput) DnsServiceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.DnsServiceIp
	}).(pulumi.StringPtrOutput)
}

// IP address (in CIDR notation) used as the Docker bridge IP address on nodes. Changing this forces a new resource to be created.
func (o KubernetesClusterNetworkProfilePtrOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.DockerBridgeCidr
	}).(pulumi.StringPtrOutput)
}

// A `loadBalancerProfile` block. This can only be specified when `loadBalancerSku` is set to `Standard`.
func (o KubernetesClusterNetworkProfilePtrOutput) LoadBalancerProfile() KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfile) *KubernetesClusterNetworkProfileLoadBalancerProfile {
		if v == nil {
			return nil
		}
		return v.LoadBalancerProfile
	}).(KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput)
}

// Specifies the SKU of the Load Balancer used for this Kubernetes Cluster. Possible values are `Basic` and `Standard`. Defaults to `Standard`.
func (o KubernetesClusterNetworkProfilePtrOutput) LoadBalancerSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancerSku
	}).(pulumi.StringPtrOutput)
}

// Network plugin to use for networking. Currently supported values are `azure` and `kubenet`. Changing this forces a new resource to be created.
func (o KubernetesClusterNetworkProfilePtrOutput) NetworkPlugin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return &v.NetworkPlugin
	}).(pulumi.StringPtrOutput)
}

// Sets up network policy to be used with Azure CNI. [Network policy allows us to control the traffic flow between pods](https://docs.microsoft.com/en-us/azure/aks/use-network-policies). Currently supported values are `calico` and `azure`. Changing this forces a new resource to be created.
func (o KubernetesClusterNetworkProfilePtrOutput) NetworkPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.NetworkPolicy
	}).(pulumi.StringPtrOutput)
}

// The outbound (egress) routing method which should be used for this Kubernetes Cluster. Possible values are `loadBalancer` and `userDefinedRouting`. Defaults to `loadBalancer`.
func (o KubernetesClusterNetworkProfilePtrOutput) OutboundType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.OutboundType
	}).(pulumi.StringPtrOutput)
}

// The CIDR to use for pod IP addresses. This field can only be set when `networkPlugin` is set to `kubenet`. Changing this forces a new resource to be created.
func (o KubernetesClusterNetworkProfilePtrOutput) PodCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.PodCidr
	}).(pulumi.StringPtrOutput)
}

// The Network Range used by the Kubernetes service. Changing this forces a new resource to be created.
func (o KubernetesClusterNetworkProfilePtrOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.ServiceCidr
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterNetworkProfileLoadBalancerProfile struct {
	// The outcome (resource IDs) of the specified arguments.
	EffectiveOutboundIps []string `pulumi:"effectiveOutboundIps"`
	// Count of desired managed outbound IPs for the cluster load balancer. Must be in the range of [1, 100].
	ManagedOutboundIpCount *int `pulumi:"managedOutboundIpCount"`
	// The ID of the Public IP Addresses which should be used for outbound communication for the cluster load balancer.
	OutboundIpAddressIds []string `pulumi:"outboundIpAddressIds"`
	// The ID of the outbound Public IP Address Prefixes which should be used for the cluster load balancer.
	OutboundIpPrefixIds []string `pulumi:"outboundIpPrefixIds"`
}

// KubernetesClusterNetworkProfileLoadBalancerProfileInput is an input type that accepts KubernetesClusterNetworkProfileLoadBalancerProfileArgs and KubernetesClusterNetworkProfileLoadBalancerProfileOutput values.
// You can construct a concrete instance of `KubernetesClusterNetworkProfileLoadBalancerProfileInput` via:
//
// 		 KubernetesClusterNetworkProfileLoadBalancerProfileArgs{...}
//
type KubernetesClusterNetworkProfileLoadBalancerProfileInput interface {
	pulumi.Input

	ToKubernetesClusterNetworkProfileLoadBalancerProfileOutput() KubernetesClusterNetworkProfileLoadBalancerProfileOutput
	ToKubernetesClusterNetworkProfileLoadBalancerProfileOutputWithContext(context.Context) KubernetesClusterNetworkProfileLoadBalancerProfileOutput
}

type KubernetesClusterNetworkProfileLoadBalancerProfileArgs struct {
	// The outcome (resource IDs) of the specified arguments.
	EffectiveOutboundIps pulumi.StringArrayInput `pulumi:"effectiveOutboundIps"`
	// Count of desired managed outbound IPs for the cluster load balancer. Must be in the range of [1, 100].
	ManagedOutboundIpCount pulumi.IntPtrInput `pulumi:"managedOutboundIpCount"`
	// The ID of the Public IP Addresses which should be used for outbound communication for the cluster load balancer.
	OutboundIpAddressIds pulumi.StringArrayInput `pulumi:"outboundIpAddressIds"`
	// The ID of the outbound Public IP Address Prefixes which should be used for the cluster load balancer.
	OutboundIpPrefixIds pulumi.StringArrayInput `pulumi:"outboundIpPrefixIds"`
}

func (KubernetesClusterNetworkProfileLoadBalancerProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNetworkProfileLoadBalancerProfile)(nil)).Elem()
}

func (i KubernetesClusterNetworkProfileLoadBalancerProfileArgs) ToKubernetesClusterNetworkProfileLoadBalancerProfileOutput() KubernetesClusterNetworkProfileLoadBalancerProfileOutput {
	return i.ToKubernetesClusterNetworkProfileLoadBalancerProfileOutputWithContext(context.Background())
}

func (i KubernetesClusterNetworkProfileLoadBalancerProfileArgs) ToKubernetesClusterNetworkProfileLoadBalancerProfileOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfileLoadBalancerProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNetworkProfileLoadBalancerProfileOutput)
}

func (i KubernetesClusterNetworkProfileLoadBalancerProfileArgs) ToKubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput() KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput {
	return i.ToKubernetesClusterNetworkProfileLoadBalancerProfilePtrOutputWithContext(context.Background())
}

func (i KubernetesClusterNetworkProfileLoadBalancerProfileArgs) ToKubernetesClusterNetworkProfileLoadBalancerProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNetworkProfileLoadBalancerProfileOutput).ToKubernetesClusterNetworkProfileLoadBalancerProfilePtrOutputWithContext(ctx)
}

// KubernetesClusterNetworkProfileLoadBalancerProfilePtrInput is an input type that accepts KubernetesClusterNetworkProfileLoadBalancerProfileArgs, KubernetesClusterNetworkProfileLoadBalancerProfilePtr and KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput values.
// You can construct a concrete instance of `KubernetesClusterNetworkProfileLoadBalancerProfilePtrInput` via:
//
// 		 KubernetesClusterNetworkProfileLoadBalancerProfileArgs{...}
//
//  or:
//
// 		 nil
//
type KubernetesClusterNetworkProfileLoadBalancerProfilePtrInput interface {
	pulumi.Input

	ToKubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput() KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput
	ToKubernetesClusterNetworkProfileLoadBalancerProfilePtrOutputWithContext(context.Context) KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput
}

type kubernetesClusterNetworkProfileLoadBalancerProfilePtrType KubernetesClusterNetworkProfileLoadBalancerProfileArgs

func KubernetesClusterNetworkProfileLoadBalancerProfilePtr(v *KubernetesClusterNetworkProfileLoadBalancerProfileArgs) KubernetesClusterNetworkProfileLoadBalancerProfilePtrInput {
	return (*kubernetesClusterNetworkProfileLoadBalancerProfilePtrType)(v)
}

func (*kubernetesClusterNetworkProfileLoadBalancerProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterNetworkProfileLoadBalancerProfile)(nil)).Elem()
}

func (i *kubernetesClusterNetworkProfileLoadBalancerProfilePtrType) ToKubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput() KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput {
	return i.ToKubernetesClusterNetworkProfileLoadBalancerProfilePtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterNetworkProfileLoadBalancerProfilePtrType) ToKubernetesClusterNetworkProfileLoadBalancerProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput)
}

type KubernetesClusterNetworkProfileLoadBalancerProfileOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNetworkProfileLoadBalancerProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNetworkProfileLoadBalancerProfile)(nil)).Elem()
}

func (o KubernetesClusterNetworkProfileLoadBalancerProfileOutput) ToKubernetesClusterNetworkProfileLoadBalancerProfileOutput() KubernetesClusterNetworkProfileLoadBalancerProfileOutput {
	return o
}

func (o KubernetesClusterNetworkProfileLoadBalancerProfileOutput) ToKubernetesClusterNetworkProfileLoadBalancerProfileOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfileLoadBalancerProfileOutput {
	return o
}

func (o KubernetesClusterNetworkProfileLoadBalancerProfileOutput) ToKubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput() KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput {
	return o.ToKubernetesClusterNetworkProfileLoadBalancerProfilePtrOutputWithContext(context.Background())
}

func (o KubernetesClusterNetworkProfileLoadBalancerProfileOutput) ToKubernetesClusterNetworkProfileLoadBalancerProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfileLoadBalancerProfile) *KubernetesClusterNetworkProfileLoadBalancerProfile {
		return &v
	}).(KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput)
}

// The outcome (resource IDs) of the specified arguments.
func (o KubernetesClusterNetworkProfileLoadBalancerProfileOutput) EffectiveOutboundIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfileLoadBalancerProfile) []string { return v.EffectiveOutboundIps }).(pulumi.StringArrayOutput)
}

// Count of desired managed outbound IPs for the cluster load balancer. Must be in the range of [1, 100].
func (o KubernetesClusterNetworkProfileLoadBalancerProfileOutput) ManagedOutboundIpCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfileLoadBalancerProfile) *int { return v.ManagedOutboundIpCount }).(pulumi.IntPtrOutput)
}

// The ID of the Public IP Addresses which should be used for outbound communication for the cluster load balancer.
func (o KubernetesClusterNetworkProfileLoadBalancerProfileOutput) OutboundIpAddressIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfileLoadBalancerProfile) []string { return v.OutboundIpAddressIds }).(pulumi.StringArrayOutput)
}

// The ID of the outbound Public IP Address Prefixes which should be used for the cluster load balancer.
func (o KubernetesClusterNetworkProfileLoadBalancerProfileOutput) OutboundIpPrefixIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterNetworkProfileLoadBalancerProfile) []string { return v.OutboundIpPrefixIds }).(pulumi.StringArrayOutput)
}

type KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterNetworkProfileLoadBalancerProfile)(nil)).Elem()
}

func (o KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput) ToKubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput() KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput {
	return o
}

func (o KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput) ToKubernetesClusterNetworkProfileLoadBalancerProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput {
	return o
}

func (o KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput) Elem() KubernetesClusterNetworkProfileLoadBalancerProfileOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfileLoadBalancerProfile) KubernetesClusterNetworkProfileLoadBalancerProfile {
		return *v
	}).(KubernetesClusterNetworkProfileLoadBalancerProfileOutput)
}

// The outcome (resource IDs) of the specified arguments.
func (o KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput) EffectiveOutboundIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfileLoadBalancerProfile) []string {
		if v == nil {
			return nil
		}
		return v.EffectiveOutboundIps
	}).(pulumi.StringArrayOutput)
}

// Count of desired managed outbound IPs for the cluster load balancer. Must be in the range of [1, 100].
func (o KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput) ManagedOutboundIpCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfileLoadBalancerProfile) *int {
		if v == nil {
			return nil
		}
		return v.ManagedOutboundIpCount
	}).(pulumi.IntPtrOutput)
}

// The ID of the Public IP Addresses which should be used for outbound communication for the cluster load balancer.
func (o KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput) OutboundIpAddressIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfileLoadBalancerProfile) []string {
		if v == nil {
			return nil
		}
		return v.OutboundIpAddressIds
	}).(pulumi.StringArrayOutput)
}

// The ID of the outbound Public IP Address Prefixes which should be used for the cluster load balancer.
func (o KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput) OutboundIpPrefixIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterNetworkProfileLoadBalancerProfile) []string {
		if v == nil {
			return nil
		}
		return v.OutboundIpPrefixIds
	}).(pulumi.StringArrayOutput)
}

type KubernetesClusterRoleBasedAccessControl struct {
	// An `azureActiveDirectory` block.
	AzureActiveDirectory *KubernetesClusterRoleBasedAccessControlAzureActiveDirectory `pulumi:"azureActiveDirectory"`
	// Is Role Based Access Control Enabled? Changing this forces a new resource to be created.
	Enabled bool `pulumi:"enabled"`
}

// KubernetesClusterRoleBasedAccessControlInput is an input type that accepts KubernetesClusterRoleBasedAccessControlArgs and KubernetesClusterRoleBasedAccessControlOutput values.
// You can construct a concrete instance of `KubernetesClusterRoleBasedAccessControlInput` via:
//
// 		 KubernetesClusterRoleBasedAccessControlArgs{...}
//
type KubernetesClusterRoleBasedAccessControlInput interface {
	pulumi.Input

	ToKubernetesClusterRoleBasedAccessControlOutput() KubernetesClusterRoleBasedAccessControlOutput
	ToKubernetesClusterRoleBasedAccessControlOutputWithContext(context.Context) KubernetesClusterRoleBasedAccessControlOutput
}

type KubernetesClusterRoleBasedAccessControlArgs struct {
	// An `azureActiveDirectory` block.
	AzureActiveDirectory KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrInput `pulumi:"azureActiveDirectory"`
	// Is Role Based Access Control Enabled? Changing this forces a new resource to be created.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (KubernetesClusterRoleBasedAccessControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterRoleBasedAccessControl)(nil)).Elem()
}

func (i KubernetesClusterRoleBasedAccessControlArgs) ToKubernetesClusterRoleBasedAccessControlOutput() KubernetesClusterRoleBasedAccessControlOutput {
	return i.ToKubernetesClusterRoleBasedAccessControlOutputWithContext(context.Background())
}

func (i KubernetesClusterRoleBasedAccessControlArgs) ToKubernetesClusterRoleBasedAccessControlOutputWithContext(ctx context.Context) KubernetesClusterRoleBasedAccessControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterRoleBasedAccessControlOutput)
}

func (i KubernetesClusterRoleBasedAccessControlArgs) ToKubernetesClusterRoleBasedAccessControlPtrOutput() KubernetesClusterRoleBasedAccessControlPtrOutput {
	return i.ToKubernetesClusterRoleBasedAccessControlPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterRoleBasedAccessControlArgs) ToKubernetesClusterRoleBasedAccessControlPtrOutputWithContext(ctx context.Context) KubernetesClusterRoleBasedAccessControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterRoleBasedAccessControlOutput).ToKubernetesClusterRoleBasedAccessControlPtrOutputWithContext(ctx)
}

// KubernetesClusterRoleBasedAccessControlPtrInput is an input type that accepts KubernetesClusterRoleBasedAccessControlArgs, KubernetesClusterRoleBasedAccessControlPtr and KubernetesClusterRoleBasedAccessControlPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterRoleBasedAccessControlPtrInput` via:
//
// 		 KubernetesClusterRoleBasedAccessControlArgs{...}
//
//  or:
//
// 		 nil
//
type KubernetesClusterRoleBasedAccessControlPtrInput interface {
	pulumi.Input

	ToKubernetesClusterRoleBasedAccessControlPtrOutput() KubernetesClusterRoleBasedAccessControlPtrOutput
	ToKubernetesClusterRoleBasedAccessControlPtrOutputWithContext(context.Context) KubernetesClusterRoleBasedAccessControlPtrOutput
}

type kubernetesClusterRoleBasedAccessControlPtrType KubernetesClusterRoleBasedAccessControlArgs

func KubernetesClusterRoleBasedAccessControlPtr(v *KubernetesClusterRoleBasedAccessControlArgs) KubernetesClusterRoleBasedAccessControlPtrInput {
	return (*kubernetesClusterRoleBasedAccessControlPtrType)(v)
}

func (*kubernetesClusterRoleBasedAccessControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterRoleBasedAccessControl)(nil)).Elem()
}

func (i *kubernetesClusterRoleBasedAccessControlPtrType) ToKubernetesClusterRoleBasedAccessControlPtrOutput() KubernetesClusterRoleBasedAccessControlPtrOutput {
	return i.ToKubernetesClusterRoleBasedAccessControlPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterRoleBasedAccessControlPtrType) ToKubernetesClusterRoleBasedAccessControlPtrOutputWithContext(ctx context.Context) KubernetesClusterRoleBasedAccessControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterRoleBasedAccessControlPtrOutput)
}

type KubernetesClusterRoleBasedAccessControlOutput struct{ *pulumi.OutputState }

func (KubernetesClusterRoleBasedAccessControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterRoleBasedAccessControl)(nil)).Elem()
}

func (o KubernetesClusterRoleBasedAccessControlOutput) ToKubernetesClusterRoleBasedAccessControlOutput() KubernetesClusterRoleBasedAccessControlOutput {
	return o
}

func (o KubernetesClusterRoleBasedAccessControlOutput) ToKubernetesClusterRoleBasedAccessControlOutputWithContext(ctx context.Context) KubernetesClusterRoleBasedAccessControlOutput {
	return o
}

func (o KubernetesClusterRoleBasedAccessControlOutput) ToKubernetesClusterRoleBasedAccessControlPtrOutput() KubernetesClusterRoleBasedAccessControlPtrOutput {
	return o.ToKubernetesClusterRoleBasedAccessControlPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterRoleBasedAccessControlOutput) ToKubernetesClusterRoleBasedAccessControlPtrOutputWithContext(ctx context.Context) KubernetesClusterRoleBasedAccessControlPtrOutput {
	return o.ApplyT(func(v KubernetesClusterRoleBasedAccessControl) *KubernetesClusterRoleBasedAccessControl {
		return &v
	}).(KubernetesClusterRoleBasedAccessControlPtrOutput)
}

// An `azureActiveDirectory` block.
func (o KubernetesClusterRoleBasedAccessControlOutput) AzureActiveDirectory() KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput {
	return o.ApplyT(func(v KubernetesClusterRoleBasedAccessControl) *KubernetesClusterRoleBasedAccessControlAzureActiveDirectory {
		return v.AzureActiveDirectory
	}).(KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput)
}

// Is Role Based Access Control Enabled? Changing this forces a new resource to be created.
func (o KubernetesClusterRoleBasedAccessControlOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v KubernetesClusterRoleBasedAccessControl) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type KubernetesClusterRoleBasedAccessControlPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterRoleBasedAccessControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterRoleBasedAccessControl)(nil)).Elem()
}

func (o KubernetesClusterRoleBasedAccessControlPtrOutput) ToKubernetesClusterRoleBasedAccessControlPtrOutput() KubernetesClusterRoleBasedAccessControlPtrOutput {
	return o
}

func (o KubernetesClusterRoleBasedAccessControlPtrOutput) ToKubernetesClusterRoleBasedAccessControlPtrOutputWithContext(ctx context.Context) KubernetesClusterRoleBasedAccessControlPtrOutput {
	return o
}

func (o KubernetesClusterRoleBasedAccessControlPtrOutput) Elem() KubernetesClusterRoleBasedAccessControlOutput {
	return o.ApplyT(func(v *KubernetesClusterRoleBasedAccessControl) KubernetesClusterRoleBasedAccessControl { return *v }).(KubernetesClusterRoleBasedAccessControlOutput)
}

// An `azureActiveDirectory` block.
func (o KubernetesClusterRoleBasedAccessControlPtrOutput) AzureActiveDirectory() KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterRoleBasedAccessControl) *KubernetesClusterRoleBasedAccessControlAzureActiveDirectory {
		if v == nil {
			return nil
		}
		return v.AzureActiveDirectory
	}).(KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput)
}

// Is Role Based Access Control Enabled? Changing this forces a new resource to be created.
func (o KubernetesClusterRoleBasedAccessControlPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterRoleBasedAccessControl) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type KubernetesClusterRoleBasedAccessControlAzureActiveDirectory struct {
	// The Client ID of an Azure Active Directory Application.
	ClientAppId string `pulumi:"clientAppId"`
	// The Server ID of an Azure Active Directory Application.
	ServerAppId string `pulumi:"serverAppId"`
	// The Server Secret of an Azure Active Directory Application.
	ServerAppSecret string `pulumi:"serverAppSecret"`
	// The Tenant ID used for Azure Active Directory Application. If this isn't specified the Tenant ID of the current Subscription is used.
	TenantId *string `pulumi:"tenantId"`
}

// KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryInput is an input type that accepts KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArgs and KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput values.
// You can construct a concrete instance of `KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryInput` via:
//
// 		 KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArgs{...}
//
type KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryInput interface {
	pulumi.Input

	ToKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput() KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput
	ToKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutputWithContext(context.Context) KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput
}

type KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArgs struct {
	// The Client ID of an Azure Active Directory Application.
	ClientAppId pulumi.StringInput `pulumi:"clientAppId"`
	// The Server ID of an Azure Active Directory Application.
	ServerAppId pulumi.StringInput `pulumi:"serverAppId"`
	// The Server Secret of an Azure Active Directory Application.
	ServerAppSecret pulumi.StringInput `pulumi:"serverAppSecret"`
	// The Tenant ID used for Azure Active Directory Application. If this isn't specified the Tenant ID of the current Subscription is used.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterRoleBasedAccessControlAzureActiveDirectory)(nil)).Elem()
}

func (i KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArgs) ToKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput() KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput {
	return i.ToKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutputWithContext(context.Background())
}

func (i KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArgs) ToKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutputWithContext(ctx context.Context) KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput)
}

func (i KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArgs) ToKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput() KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput {
	return i.ToKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArgs) ToKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutputWithContext(ctx context.Context) KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput).ToKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutputWithContext(ctx)
}

// KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrInput is an input type that accepts KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArgs, KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtr and KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrInput` via:
//
// 		 KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArgs{...}
//
//  or:
//
// 		 nil
//
type KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrInput interface {
	pulumi.Input

	ToKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput() KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput
	ToKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutputWithContext(context.Context) KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput
}

type kubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrType KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArgs

func KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtr(v *KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArgs) KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrInput {
	return (*kubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrType)(v)
}

func (*kubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterRoleBasedAccessControlAzureActiveDirectory)(nil)).Elem()
}

func (i *kubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrType) ToKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput() KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput {
	return i.ToKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrType) ToKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutputWithContext(ctx context.Context) KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput)
}

type KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput struct{ *pulumi.OutputState }

func (KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterRoleBasedAccessControlAzureActiveDirectory)(nil)).Elem()
}

func (o KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput) ToKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput() KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput {
	return o
}

func (o KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput) ToKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutputWithContext(ctx context.Context) KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput {
	return o
}

func (o KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput) ToKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput() KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput {
	return o.ToKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput) ToKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutputWithContext(ctx context.Context) KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput {
	return o.ApplyT(func(v KubernetesClusterRoleBasedAccessControlAzureActiveDirectory) *KubernetesClusterRoleBasedAccessControlAzureActiveDirectory {
		return &v
	}).(KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput)
}

// The Client ID of an Azure Active Directory Application.
func (o KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput) ClientAppId() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterRoleBasedAccessControlAzureActiveDirectory) string { return v.ClientAppId }).(pulumi.StringOutput)
}

// The Server ID of an Azure Active Directory Application.
func (o KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput) ServerAppId() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterRoleBasedAccessControlAzureActiveDirectory) string { return v.ServerAppId }).(pulumi.StringOutput)
}

// The Server Secret of an Azure Active Directory Application.
func (o KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput) ServerAppSecret() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterRoleBasedAccessControlAzureActiveDirectory) string { return v.ServerAppSecret }).(pulumi.StringOutput)
}

// The Tenant ID used for Azure Active Directory Application. If this isn't specified the Tenant ID of the current Subscription is used.
func (o KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterRoleBasedAccessControlAzureActiveDirectory) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterRoleBasedAccessControlAzureActiveDirectory)(nil)).Elem()
}

func (o KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput) ToKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput() KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput {
	return o
}

func (o KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput) ToKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutputWithContext(ctx context.Context) KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput {
	return o
}

func (o KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput) Elem() KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput {
	return o.ApplyT(func(v *KubernetesClusterRoleBasedAccessControlAzureActiveDirectory) KubernetesClusterRoleBasedAccessControlAzureActiveDirectory {
		return *v
	}).(KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput)
}

// The Client ID of an Azure Active Directory Application.
func (o KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput) ClientAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterRoleBasedAccessControlAzureActiveDirectory) *string {
		if v == nil {
			return nil
		}
		return &v.ClientAppId
	}).(pulumi.StringPtrOutput)
}

// The Server ID of an Azure Active Directory Application.
func (o KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput) ServerAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterRoleBasedAccessControlAzureActiveDirectory) *string {
		if v == nil {
			return nil
		}
		return &v.ServerAppId
	}).(pulumi.StringPtrOutput)
}

// The Server Secret of an Azure Active Directory Application.
func (o KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput) ServerAppSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterRoleBasedAccessControlAzureActiveDirectory) *string {
		if v == nil {
			return nil
		}
		return &v.ServerAppSecret
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID used for Azure Active Directory Application. If this isn't specified the Tenant ID of the current Subscription is used.
func (o KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterRoleBasedAccessControlAzureActiveDirectory) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterServicePrincipal struct {
	// The Client ID for the Service Principal.
	ClientId string `pulumi:"clientId"`
	// The Client Secret for the Service Principal.
	ClientSecret string `pulumi:"clientSecret"`
}

// KubernetesClusterServicePrincipalInput is an input type that accepts KubernetesClusterServicePrincipalArgs and KubernetesClusterServicePrincipalOutput values.
// You can construct a concrete instance of `KubernetesClusterServicePrincipalInput` via:
//
// 		 KubernetesClusterServicePrincipalArgs{...}
//
type KubernetesClusterServicePrincipalInput interface {
	pulumi.Input

	ToKubernetesClusterServicePrincipalOutput() KubernetesClusterServicePrincipalOutput
	ToKubernetesClusterServicePrincipalOutputWithContext(context.Context) KubernetesClusterServicePrincipalOutput
}

type KubernetesClusterServicePrincipalArgs struct {
	// The Client ID for the Service Principal.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The Client Secret for the Service Principal.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
}

func (KubernetesClusterServicePrincipalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterServicePrincipal)(nil)).Elem()
}

func (i KubernetesClusterServicePrincipalArgs) ToKubernetesClusterServicePrincipalOutput() KubernetesClusterServicePrincipalOutput {
	return i.ToKubernetesClusterServicePrincipalOutputWithContext(context.Background())
}

func (i KubernetesClusterServicePrincipalArgs) ToKubernetesClusterServicePrincipalOutputWithContext(ctx context.Context) KubernetesClusterServicePrincipalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterServicePrincipalOutput)
}

func (i KubernetesClusterServicePrincipalArgs) ToKubernetesClusterServicePrincipalPtrOutput() KubernetesClusterServicePrincipalPtrOutput {
	return i.ToKubernetesClusterServicePrincipalPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterServicePrincipalArgs) ToKubernetesClusterServicePrincipalPtrOutputWithContext(ctx context.Context) KubernetesClusterServicePrincipalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterServicePrincipalOutput).ToKubernetesClusterServicePrincipalPtrOutputWithContext(ctx)
}

// KubernetesClusterServicePrincipalPtrInput is an input type that accepts KubernetesClusterServicePrincipalArgs, KubernetesClusterServicePrincipalPtr and KubernetesClusterServicePrincipalPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterServicePrincipalPtrInput` via:
//
// 		 KubernetesClusterServicePrincipalArgs{...}
//
//  or:
//
// 		 nil
//
type KubernetesClusterServicePrincipalPtrInput interface {
	pulumi.Input

	ToKubernetesClusterServicePrincipalPtrOutput() KubernetesClusterServicePrincipalPtrOutput
	ToKubernetesClusterServicePrincipalPtrOutputWithContext(context.Context) KubernetesClusterServicePrincipalPtrOutput
}

type kubernetesClusterServicePrincipalPtrType KubernetesClusterServicePrincipalArgs

func KubernetesClusterServicePrincipalPtr(v *KubernetesClusterServicePrincipalArgs) KubernetesClusterServicePrincipalPtrInput {
	return (*kubernetesClusterServicePrincipalPtrType)(v)
}

func (*kubernetesClusterServicePrincipalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterServicePrincipal)(nil)).Elem()
}

func (i *kubernetesClusterServicePrincipalPtrType) ToKubernetesClusterServicePrincipalPtrOutput() KubernetesClusterServicePrincipalPtrOutput {
	return i.ToKubernetesClusterServicePrincipalPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterServicePrincipalPtrType) ToKubernetesClusterServicePrincipalPtrOutputWithContext(ctx context.Context) KubernetesClusterServicePrincipalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterServicePrincipalPtrOutput)
}

type KubernetesClusterServicePrincipalOutput struct{ *pulumi.OutputState }

func (KubernetesClusterServicePrincipalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterServicePrincipal)(nil)).Elem()
}

func (o KubernetesClusterServicePrincipalOutput) ToKubernetesClusterServicePrincipalOutput() KubernetesClusterServicePrincipalOutput {
	return o
}

func (o KubernetesClusterServicePrincipalOutput) ToKubernetesClusterServicePrincipalOutputWithContext(ctx context.Context) KubernetesClusterServicePrincipalOutput {
	return o
}

func (o KubernetesClusterServicePrincipalOutput) ToKubernetesClusterServicePrincipalPtrOutput() KubernetesClusterServicePrincipalPtrOutput {
	return o.ToKubernetesClusterServicePrincipalPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterServicePrincipalOutput) ToKubernetesClusterServicePrincipalPtrOutputWithContext(ctx context.Context) KubernetesClusterServicePrincipalPtrOutput {
	return o.ApplyT(func(v KubernetesClusterServicePrincipal) *KubernetesClusterServicePrincipal {
		return &v
	}).(KubernetesClusterServicePrincipalPtrOutput)
}

// The Client ID for the Service Principal.
func (o KubernetesClusterServicePrincipalOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterServicePrincipal) string { return v.ClientId }).(pulumi.StringOutput)
}

// The Client Secret for the Service Principal.
func (o KubernetesClusterServicePrincipalOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterServicePrincipal) string { return v.ClientSecret }).(pulumi.StringOutput)
}

type KubernetesClusterServicePrincipalPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterServicePrincipalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterServicePrincipal)(nil)).Elem()
}

func (o KubernetesClusterServicePrincipalPtrOutput) ToKubernetesClusterServicePrincipalPtrOutput() KubernetesClusterServicePrincipalPtrOutput {
	return o
}

func (o KubernetesClusterServicePrincipalPtrOutput) ToKubernetesClusterServicePrincipalPtrOutputWithContext(ctx context.Context) KubernetesClusterServicePrincipalPtrOutput {
	return o
}

func (o KubernetesClusterServicePrincipalPtrOutput) Elem() KubernetesClusterServicePrincipalOutput {
	return o.ApplyT(func(v *KubernetesClusterServicePrincipal) KubernetesClusterServicePrincipal { return *v }).(KubernetesClusterServicePrincipalOutput)
}

// The Client ID for the Service Principal.
func (o KubernetesClusterServicePrincipalPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterServicePrincipal) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The Client Secret for the Service Principal.
func (o KubernetesClusterServicePrincipalPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterServicePrincipal) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterWindowsProfile struct {
	// The Admin Password for Windows VMs.
	AdminPassword *string `pulumi:"adminPassword"`
	// The Admin Username for Windows VMs.
	AdminUsername string `pulumi:"adminUsername"`
}

// KubernetesClusterWindowsProfileInput is an input type that accepts KubernetesClusterWindowsProfileArgs and KubernetesClusterWindowsProfileOutput values.
// You can construct a concrete instance of `KubernetesClusterWindowsProfileInput` via:
//
// 		 KubernetesClusterWindowsProfileArgs{...}
//
type KubernetesClusterWindowsProfileInput interface {
	pulumi.Input

	ToKubernetesClusterWindowsProfileOutput() KubernetesClusterWindowsProfileOutput
	ToKubernetesClusterWindowsProfileOutputWithContext(context.Context) KubernetesClusterWindowsProfileOutput
}

type KubernetesClusterWindowsProfileArgs struct {
	// The Admin Password for Windows VMs.
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// The Admin Username for Windows VMs.
	AdminUsername pulumi.StringInput `pulumi:"adminUsername"`
}

func (KubernetesClusterWindowsProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterWindowsProfile)(nil)).Elem()
}

func (i KubernetesClusterWindowsProfileArgs) ToKubernetesClusterWindowsProfileOutput() KubernetesClusterWindowsProfileOutput {
	return i.ToKubernetesClusterWindowsProfileOutputWithContext(context.Background())
}

func (i KubernetesClusterWindowsProfileArgs) ToKubernetesClusterWindowsProfileOutputWithContext(ctx context.Context) KubernetesClusterWindowsProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterWindowsProfileOutput)
}

func (i KubernetesClusterWindowsProfileArgs) ToKubernetesClusterWindowsProfilePtrOutput() KubernetesClusterWindowsProfilePtrOutput {
	return i.ToKubernetesClusterWindowsProfilePtrOutputWithContext(context.Background())
}

func (i KubernetesClusterWindowsProfileArgs) ToKubernetesClusterWindowsProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterWindowsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterWindowsProfileOutput).ToKubernetesClusterWindowsProfilePtrOutputWithContext(ctx)
}

// KubernetesClusterWindowsProfilePtrInput is an input type that accepts KubernetesClusterWindowsProfileArgs, KubernetesClusterWindowsProfilePtr and KubernetesClusterWindowsProfilePtrOutput values.
// You can construct a concrete instance of `KubernetesClusterWindowsProfilePtrInput` via:
//
// 		 KubernetesClusterWindowsProfileArgs{...}
//
//  or:
//
// 		 nil
//
type KubernetesClusterWindowsProfilePtrInput interface {
	pulumi.Input

	ToKubernetesClusterWindowsProfilePtrOutput() KubernetesClusterWindowsProfilePtrOutput
	ToKubernetesClusterWindowsProfilePtrOutputWithContext(context.Context) KubernetesClusterWindowsProfilePtrOutput
}

type kubernetesClusterWindowsProfilePtrType KubernetesClusterWindowsProfileArgs

func KubernetesClusterWindowsProfilePtr(v *KubernetesClusterWindowsProfileArgs) KubernetesClusterWindowsProfilePtrInput {
	return (*kubernetesClusterWindowsProfilePtrType)(v)
}

func (*kubernetesClusterWindowsProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterWindowsProfile)(nil)).Elem()
}

func (i *kubernetesClusterWindowsProfilePtrType) ToKubernetesClusterWindowsProfilePtrOutput() KubernetesClusterWindowsProfilePtrOutput {
	return i.ToKubernetesClusterWindowsProfilePtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterWindowsProfilePtrType) ToKubernetesClusterWindowsProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterWindowsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterWindowsProfilePtrOutput)
}

type KubernetesClusterWindowsProfileOutput struct{ *pulumi.OutputState }

func (KubernetesClusterWindowsProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterWindowsProfile)(nil)).Elem()
}

func (o KubernetesClusterWindowsProfileOutput) ToKubernetesClusterWindowsProfileOutput() KubernetesClusterWindowsProfileOutput {
	return o
}

func (o KubernetesClusterWindowsProfileOutput) ToKubernetesClusterWindowsProfileOutputWithContext(ctx context.Context) KubernetesClusterWindowsProfileOutput {
	return o
}

func (o KubernetesClusterWindowsProfileOutput) ToKubernetesClusterWindowsProfilePtrOutput() KubernetesClusterWindowsProfilePtrOutput {
	return o.ToKubernetesClusterWindowsProfilePtrOutputWithContext(context.Background())
}

func (o KubernetesClusterWindowsProfileOutput) ToKubernetesClusterWindowsProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterWindowsProfilePtrOutput {
	return o.ApplyT(func(v KubernetesClusterWindowsProfile) *KubernetesClusterWindowsProfile {
		return &v
	}).(KubernetesClusterWindowsProfilePtrOutput)
}

// The Admin Password for Windows VMs.
func (o KubernetesClusterWindowsProfileOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterWindowsProfile) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// The Admin Username for Windows VMs.
func (o KubernetesClusterWindowsProfileOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterWindowsProfile) string { return v.AdminUsername }).(pulumi.StringOutput)
}

type KubernetesClusterWindowsProfilePtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterWindowsProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterWindowsProfile)(nil)).Elem()
}

func (o KubernetesClusterWindowsProfilePtrOutput) ToKubernetesClusterWindowsProfilePtrOutput() KubernetesClusterWindowsProfilePtrOutput {
	return o
}

func (o KubernetesClusterWindowsProfilePtrOutput) ToKubernetesClusterWindowsProfilePtrOutputWithContext(ctx context.Context) KubernetesClusterWindowsProfilePtrOutput {
	return o
}

func (o KubernetesClusterWindowsProfilePtrOutput) Elem() KubernetesClusterWindowsProfileOutput {
	return o.ApplyT(func(v *KubernetesClusterWindowsProfile) KubernetesClusterWindowsProfile { return *v }).(KubernetesClusterWindowsProfileOutput)
}

// The Admin Password for Windows VMs.
func (o KubernetesClusterWindowsProfilePtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterWindowsProfile) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// The Admin Username for Windows VMs.
func (o KubernetesClusterWindowsProfilePtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterWindowsProfile) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

type RegistryNetworkRuleSet struct {
	// The behaviour for requests matching no rules. Either `Allow` or `Deny`. Defaults to `Allow`
	DefaultAction *string `pulumi:"defaultAction"`
	// One or more `ipRule` blocks as defined below.
	IpRules []RegistryNetworkRuleSetIpRule `pulumi:"ipRules"`
	// One or more `virtualNetwork` blocks as defined below.
	VirtualNetworks []RegistryNetworkRuleSetVirtualNetwork `pulumi:"virtualNetworks"`
}

// RegistryNetworkRuleSetInput is an input type that accepts RegistryNetworkRuleSetArgs and RegistryNetworkRuleSetOutput values.
// You can construct a concrete instance of `RegistryNetworkRuleSetInput` via:
//
// 		 RegistryNetworkRuleSetArgs{...}
//
type RegistryNetworkRuleSetInput interface {
	pulumi.Input

	ToRegistryNetworkRuleSetOutput() RegistryNetworkRuleSetOutput
	ToRegistryNetworkRuleSetOutputWithContext(context.Context) RegistryNetworkRuleSetOutput
}

type RegistryNetworkRuleSetArgs struct {
	// The behaviour for requests matching no rules. Either `Allow` or `Deny`. Defaults to `Allow`
	DefaultAction pulumi.StringPtrInput `pulumi:"defaultAction"`
	// One or more `ipRule` blocks as defined below.
	IpRules RegistryNetworkRuleSetIpRuleArrayInput `pulumi:"ipRules"`
	// One or more `virtualNetwork` blocks as defined below.
	VirtualNetworks RegistryNetworkRuleSetVirtualNetworkArrayInput `pulumi:"virtualNetworks"`
}

func (RegistryNetworkRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryNetworkRuleSet)(nil)).Elem()
}

func (i RegistryNetworkRuleSetArgs) ToRegistryNetworkRuleSetOutput() RegistryNetworkRuleSetOutput {
	return i.ToRegistryNetworkRuleSetOutputWithContext(context.Background())
}

func (i RegistryNetworkRuleSetArgs) ToRegistryNetworkRuleSetOutputWithContext(ctx context.Context) RegistryNetworkRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryNetworkRuleSetOutput)
}

func (i RegistryNetworkRuleSetArgs) ToRegistryNetworkRuleSetPtrOutput() RegistryNetworkRuleSetPtrOutput {
	return i.ToRegistryNetworkRuleSetPtrOutputWithContext(context.Background())
}

func (i RegistryNetworkRuleSetArgs) ToRegistryNetworkRuleSetPtrOutputWithContext(ctx context.Context) RegistryNetworkRuleSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryNetworkRuleSetOutput).ToRegistryNetworkRuleSetPtrOutputWithContext(ctx)
}

// RegistryNetworkRuleSetPtrInput is an input type that accepts RegistryNetworkRuleSetArgs, RegistryNetworkRuleSetPtr and RegistryNetworkRuleSetPtrOutput values.
// You can construct a concrete instance of `RegistryNetworkRuleSetPtrInput` via:
//
// 		 RegistryNetworkRuleSetArgs{...}
//
//  or:
//
// 		 nil
//
type RegistryNetworkRuleSetPtrInput interface {
	pulumi.Input

	ToRegistryNetworkRuleSetPtrOutput() RegistryNetworkRuleSetPtrOutput
	ToRegistryNetworkRuleSetPtrOutputWithContext(context.Context) RegistryNetworkRuleSetPtrOutput
}

type registryNetworkRuleSetPtrType RegistryNetworkRuleSetArgs

func RegistryNetworkRuleSetPtr(v *RegistryNetworkRuleSetArgs) RegistryNetworkRuleSetPtrInput {
	return (*registryNetworkRuleSetPtrType)(v)
}

func (*registryNetworkRuleSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryNetworkRuleSet)(nil)).Elem()
}

func (i *registryNetworkRuleSetPtrType) ToRegistryNetworkRuleSetPtrOutput() RegistryNetworkRuleSetPtrOutput {
	return i.ToRegistryNetworkRuleSetPtrOutputWithContext(context.Background())
}

func (i *registryNetworkRuleSetPtrType) ToRegistryNetworkRuleSetPtrOutputWithContext(ctx context.Context) RegistryNetworkRuleSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryNetworkRuleSetPtrOutput)
}

type RegistryNetworkRuleSetOutput struct{ *pulumi.OutputState }

func (RegistryNetworkRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryNetworkRuleSet)(nil)).Elem()
}

func (o RegistryNetworkRuleSetOutput) ToRegistryNetworkRuleSetOutput() RegistryNetworkRuleSetOutput {
	return o
}

func (o RegistryNetworkRuleSetOutput) ToRegistryNetworkRuleSetOutputWithContext(ctx context.Context) RegistryNetworkRuleSetOutput {
	return o
}

func (o RegistryNetworkRuleSetOutput) ToRegistryNetworkRuleSetPtrOutput() RegistryNetworkRuleSetPtrOutput {
	return o.ToRegistryNetworkRuleSetPtrOutputWithContext(context.Background())
}

func (o RegistryNetworkRuleSetOutput) ToRegistryNetworkRuleSetPtrOutputWithContext(ctx context.Context) RegistryNetworkRuleSetPtrOutput {
	return o.ApplyT(func(v RegistryNetworkRuleSet) *RegistryNetworkRuleSet {
		return &v
	}).(RegistryNetworkRuleSetPtrOutput)
}

// The behaviour for requests matching no rules. Either `Allow` or `Deny`. Defaults to `Allow`
func (o RegistryNetworkRuleSetOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryNetworkRuleSet) *string { return v.DefaultAction }).(pulumi.StringPtrOutput)
}

// One or more `ipRule` blocks as defined below.
func (o RegistryNetworkRuleSetOutput) IpRules() RegistryNetworkRuleSetIpRuleArrayOutput {
	return o.ApplyT(func(v RegistryNetworkRuleSet) []RegistryNetworkRuleSetIpRule { return v.IpRules }).(RegistryNetworkRuleSetIpRuleArrayOutput)
}

// One or more `virtualNetwork` blocks as defined below.
func (o RegistryNetworkRuleSetOutput) VirtualNetworks() RegistryNetworkRuleSetVirtualNetworkArrayOutput {
	return o.ApplyT(func(v RegistryNetworkRuleSet) []RegistryNetworkRuleSetVirtualNetwork { return v.VirtualNetworks }).(RegistryNetworkRuleSetVirtualNetworkArrayOutput)
}

type RegistryNetworkRuleSetPtrOutput struct{ *pulumi.OutputState }

func (RegistryNetworkRuleSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryNetworkRuleSet)(nil)).Elem()
}

func (o RegistryNetworkRuleSetPtrOutput) ToRegistryNetworkRuleSetPtrOutput() RegistryNetworkRuleSetPtrOutput {
	return o
}

func (o RegistryNetworkRuleSetPtrOutput) ToRegistryNetworkRuleSetPtrOutputWithContext(ctx context.Context) RegistryNetworkRuleSetPtrOutput {
	return o
}

func (o RegistryNetworkRuleSetPtrOutput) Elem() RegistryNetworkRuleSetOutput {
	return o.ApplyT(func(v *RegistryNetworkRuleSet) RegistryNetworkRuleSet { return *v }).(RegistryNetworkRuleSetOutput)
}

// The behaviour for requests matching no rules. Either `Allow` or `Deny`. Defaults to `Allow`
func (o RegistryNetworkRuleSetPtrOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryNetworkRuleSet) *string {
		if v == nil {
			return nil
		}
		return v.DefaultAction
	}).(pulumi.StringPtrOutput)
}

// One or more `ipRule` blocks as defined below.
func (o RegistryNetworkRuleSetPtrOutput) IpRules() RegistryNetworkRuleSetIpRuleArrayOutput {
	return o.ApplyT(func(v *RegistryNetworkRuleSet) []RegistryNetworkRuleSetIpRule {
		if v == nil {
			return nil
		}
		return v.IpRules
	}).(RegistryNetworkRuleSetIpRuleArrayOutput)
}

// One or more `virtualNetwork` blocks as defined below.
func (o RegistryNetworkRuleSetPtrOutput) VirtualNetworks() RegistryNetworkRuleSetVirtualNetworkArrayOutput {
	return o.ApplyT(func(v *RegistryNetworkRuleSet) []RegistryNetworkRuleSetVirtualNetwork {
		if v == nil {
			return nil
		}
		return v.VirtualNetworks
	}).(RegistryNetworkRuleSetVirtualNetworkArrayOutput)
}

type RegistryNetworkRuleSetIpRule struct {
	// The behaviour for requests matching this rule. At this time the only supported value is `Allow`
	Action string `pulumi:"action"`
	// The CIDR block from which requests will match the rule.
	IpRange string `pulumi:"ipRange"`
}

// RegistryNetworkRuleSetIpRuleInput is an input type that accepts RegistryNetworkRuleSetIpRuleArgs and RegistryNetworkRuleSetIpRuleOutput values.
// You can construct a concrete instance of `RegistryNetworkRuleSetIpRuleInput` via:
//
// 		 RegistryNetworkRuleSetIpRuleArgs{...}
//
type RegistryNetworkRuleSetIpRuleInput interface {
	pulumi.Input

	ToRegistryNetworkRuleSetIpRuleOutput() RegistryNetworkRuleSetIpRuleOutput
	ToRegistryNetworkRuleSetIpRuleOutputWithContext(context.Context) RegistryNetworkRuleSetIpRuleOutput
}

type RegistryNetworkRuleSetIpRuleArgs struct {
	// The behaviour for requests matching this rule. At this time the only supported value is `Allow`
	Action pulumi.StringInput `pulumi:"action"`
	// The CIDR block from which requests will match the rule.
	IpRange pulumi.StringInput `pulumi:"ipRange"`
}

func (RegistryNetworkRuleSetIpRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryNetworkRuleSetIpRule)(nil)).Elem()
}

func (i RegistryNetworkRuleSetIpRuleArgs) ToRegistryNetworkRuleSetIpRuleOutput() RegistryNetworkRuleSetIpRuleOutput {
	return i.ToRegistryNetworkRuleSetIpRuleOutputWithContext(context.Background())
}

func (i RegistryNetworkRuleSetIpRuleArgs) ToRegistryNetworkRuleSetIpRuleOutputWithContext(ctx context.Context) RegistryNetworkRuleSetIpRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryNetworkRuleSetIpRuleOutput)
}

// RegistryNetworkRuleSetIpRuleArrayInput is an input type that accepts RegistryNetworkRuleSetIpRuleArray and RegistryNetworkRuleSetIpRuleArrayOutput values.
// You can construct a concrete instance of `RegistryNetworkRuleSetIpRuleArrayInput` via:
//
// 		 RegistryNetworkRuleSetIpRuleArray{ RegistryNetworkRuleSetIpRuleArgs{...} }
//
type RegistryNetworkRuleSetIpRuleArrayInput interface {
	pulumi.Input

	ToRegistryNetworkRuleSetIpRuleArrayOutput() RegistryNetworkRuleSetIpRuleArrayOutput
	ToRegistryNetworkRuleSetIpRuleArrayOutputWithContext(context.Context) RegistryNetworkRuleSetIpRuleArrayOutput
}

type RegistryNetworkRuleSetIpRuleArray []RegistryNetworkRuleSetIpRuleInput

func (RegistryNetworkRuleSetIpRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryNetworkRuleSetIpRule)(nil)).Elem()
}

func (i RegistryNetworkRuleSetIpRuleArray) ToRegistryNetworkRuleSetIpRuleArrayOutput() RegistryNetworkRuleSetIpRuleArrayOutput {
	return i.ToRegistryNetworkRuleSetIpRuleArrayOutputWithContext(context.Background())
}

func (i RegistryNetworkRuleSetIpRuleArray) ToRegistryNetworkRuleSetIpRuleArrayOutputWithContext(ctx context.Context) RegistryNetworkRuleSetIpRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryNetworkRuleSetIpRuleArrayOutput)
}

type RegistryNetworkRuleSetIpRuleOutput struct{ *pulumi.OutputState }

func (RegistryNetworkRuleSetIpRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryNetworkRuleSetIpRule)(nil)).Elem()
}

func (o RegistryNetworkRuleSetIpRuleOutput) ToRegistryNetworkRuleSetIpRuleOutput() RegistryNetworkRuleSetIpRuleOutput {
	return o
}

func (o RegistryNetworkRuleSetIpRuleOutput) ToRegistryNetworkRuleSetIpRuleOutputWithContext(ctx context.Context) RegistryNetworkRuleSetIpRuleOutput {
	return o
}

// The behaviour for requests matching this rule. At this time the only supported value is `Allow`
func (o RegistryNetworkRuleSetIpRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryNetworkRuleSetIpRule) string { return v.Action }).(pulumi.StringOutput)
}

// The CIDR block from which requests will match the rule.
func (o RegistryNetworkRuleSetIpRuleOutput) IpRange() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryNetworkRuleSetIpRule) string { return v.IpRange }).(pulumi.StringOutput)
}

type RegistryNetworkRuleSetIpRuleArrayOutput struct{ *pulumi.OutputState }

func (RegistryNetworkRuleSetIpRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryNetworkRuleSetIpRule)(nil)).Elem()
}

func (o RegistryNetworkRuleSetIpRuleArrayOutput) ToRegistryNetworkRuleSetIpRuleArrayOutput() RegistryNetworkRuleSetIpRuleArrayOutput {
	return o
}

func (o RegistryNetworkRuleSetIpRuleArrayOutput) ToRegistryNetworkRuleSetIpRuleArrayOutputWithContext(ctx context.Context) RegistryNetworkRuleSetIpRuleArrayOutput {
	return o
}

func (o RegistryNetworkRuleSetIpRuleArrayOutput) Index(i pulumi.IntInput) RegistryNetworkRuleSetIpRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegistryNetworkRuleSetIpRule {
		return vs[0].([]RegistryNetworkRuleSetIpRule)[vs[1].(int)]
	}).(RegistryNetworkRuleSetIpRuleOutput)
}

type RegistryNetworkRuleSetVirtualNetwork struct {
	// The behaviour for requests matching this rule. At this time the only supported value is `Allow`
	Action string `pulumi:"action"`
	// The subnet id from which requests will match the rule.
	SubnetId string `pulumi:"subnetId"`
}

// RegistryNetworkRuleSetVirtualNetworkInput is an input type that accepts RegistryNetworkRuleSetVirtualNetworkArgs and RegistryNetworkRuleSetVirtualNetworkOutput values.
// You can construct a concrete instance of `RegistryNetworkRuleSetVirtualNetworkInput` via:
//
// 		 RegistryNetworkRuleSetVirtualNetworkArgs{...}
//
type RegistryNetworkRuleSetVirtualNetworkInput interface {
	pulumi.Input

	ToRegistryNetworkRuleSetVirtualNetworkOutput() RegistryNetworkRuleSetVirtualNetworkOutput
	ToRegistryNetworkRuleSetVirtualNetworkOutputWithContext(context.Context) RegistryNetworkRuleSetVirtualNetworkOutput
}

type RegistryNetworkRuleSetVirtualNetworkArgs struct {
	// The behaviour for requests matching this rule. At this time the only supported value is `Allow`
	Action pulumi.StringInput `pulumi:"action"`
	// The subnet id from which requests will match the rule.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (RegistryNetworkRuleSetVirtualNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryNetworkRuleSetVirtualNetwork)(nil)).Elem()
}

func (i RegistryNetworkRuleSetVirtualNetworkArgs) ToRegistryNetworkRuleSetVirtualNetworkOutput() RegistryNetworkRuleSetVirtualNetworkOutput {
	return i.ToRegistryNetworkRuleSetVirtualNetworkOutputWithContext(context.Background())
}

func (i RegistryNetworkRuleSetVirtualNetworkArgs) ToRegistryNetworkRuleSetVirtualNetworkOutputWithContext(ctx context.Context) RegistryNetworkRuleSetVirtualNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryNetworkRuleSetVirtualNetworkOutput)
}

// RegistryNetworkRuleSetVirtualNetworkArrayInput is an input type that accepts RegistryNetworkRuleSetVirtualNetworkArray and RegistryNetworkRuleSetVirtualNetworkArrayOutput values.
// You can construct a concrete instance of `RegistryNetworkRuleSetVirtualNetworkArrayInput` via:
//
// 		 RegistryNetworkRuleSetVirtualNetworkArray{ RegistryNetworkRuleSetVirtualNetworkArgs{...} }
//
type RegistryNetworkRuleSetVirtualNetworkArrayInput interface {
	pulumi.Input

	ToRegistryNetworkRuleSetVirtualNetworkArrayOutput() RegistryNetworkRuleSetVirtualNetworkArrayOutput
	ToRegistryNetworkRuleSetVirtualNetworkArrayOutputWithContext(context.Context) RegistryNetworkRuleSetVirtualNetworkArrayOutput
}

type RegistryNetworkRuleSetVirtualNetworkArray []RegistryNetworkRuleSetVirtualNetworkInput

func (RegistryNetworkRuleSetVirtualNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryNetworkRuleSetVirtualNetwork)(nil)).Elem()
}

func (i RegistryNetworkRuleSetVirtualNetworkArray) ToRegistryNetworkRuleSetVirtualNetworkArrayOutput() RegistryNetworkRuleSetVirtualNetworkArrayOutput {
	return i.ToRegistryNetworkRuleSetVirtualNetworkArrayOutputWithContext(context.Background())
}

func (i RegistryNetworkRuleSetVirtualNetworkArray) ToRegistryNetworkRuleSetVirtualNetworkArrayOutputWithContext(ctx context.Context) RegistryNetworkRuleSetVirtualNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryNetworkRuleSetVirtualNetworkArrayOutput)
}

type RegistryNetworkRuleSetVirtualNetworkOutput struct{ *pulumi.OutputState }

func (RegistryNetworkRuleSetVirtualNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryNetworkRuleSetVirtualNetwork)(nil)).Elem()
}

func (o RegistryNetworkRuleSetVirtualNetworkOutput) ToRegistryNetworkRuleSetVirtualNetworkOutput() RegistryNetworkRuleSetVirtualNetworkOutput {
	return o
}

func (o RegistryNetworkRuleSetVirtualNetworkOutput) ToRegistryNetworkRuleSetVirtualNetworkOutputWithContext(ctx context.Context) RegistryNetworkRuleSetVirtualNetworkOutput {
	return o
}

// The behaviour for requests matching this rule. At this time the only supported value is `Allow`
func (o RegistryNetworkRuleSetVirtualNetworkOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryNetworkRuleSetVirtualNetwork) string { return v.Action }).(pulumi.StringOutput)
}

// The subnet id from which requests will match the rule.
func (o RegistryNetworkRuleSetVirtualNetworkOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v RegistryNetworkRuleSetVirtualNetwork) string { return v.SubnetId }).(pulumi.StringOutput)
}

type RegistryNetworkRuleSetVirtualNetworkArrayOutput struct{ *pulumi.OutputState }

func (RegistryNetworkRuleSetVirtualNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryNetworkRuleSetVirtualNetwork)(nil)).Elem()
}

func (o RegistryNetworkRuleSetVirtualNetworkArrayOutput) ToRegistryNetworkRuleSetVirtualNetworkArrayOutput() RegistryNetworkRuleSetVirtualNetworkArrayOutput {
	return o
}

func (o RegistryNetworkRuleSetVirtualNetworkArrayOutput) ToRegistryNetworkRuleSetVirtualNetworkArrayOutputWithContext(ctx context.Context) RegistryNetworkRuleSetVirtualNetworkArrayOutput {
	return o
}

func (o RegistryNetworkRuleSetVirtualNetworkArrayOutput) Index(i pulumi.IntInput) RegistryNetworkRuleSetVirtualNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegistryNetworkRuleSetVirtualNetwork {
		return vs[0].([]RegistryNetworkRuleSetVirtualNetwork)[vs[1].(int)]
	}).(RegistryNetworkRuleSetVirtualNetworkOutput)
}

type GetKubernetesClusterAddonProfile struct {
	// A `azurePolicy` block.
	AzurePolicies []GetKubernetesClusterAddonProfileAzurePolicy `pulumi:"azurePolicies"`
	// A `httpApplicationRouting` block.
	HttpApplicationRoutings []GetKubernetesClusterAddonProfileHttpApplicationRouting `pulumi:"httpApplicationRoutings"`
	// A `kubeDashboard` block.
	KubeDashboards []GetKubernetesClusterAddonProfileKubeDashboard `pulumi:"kubeDashboards"`
	// A `omsAgent` block.
	OmsAgents []GetKubernetesClusterAddonProfileOmsAgent `pulumi:"omsAgents"`
}

// GetKubernetesClusterAddonProfileInput is an input type that accepts GetKubernetesClusterAddonProfileArgs and GetKubernetesClusterAddonProfileOutput values.
// You can construct a concrete instance of `GetKubernetesClusterAddonProfileInput` via:
//
// 		 GetKubernetesClusterAddonProfileArgs{...}
//
type GetKubernetesClusterAddonProfileInput interface {
	pulumi.Input

	ToGetKubernetesClusterAddonProfileOutput() GetKubernetesClusterAddonProfileOutput
	ToGetKubernetesClusterAddonProfileOutputWithContext(context.Context) GetKubernetesClusterAddonProfileOutput
}

type GetKubernetesClusterAddonProfileArgs struct {
	// A `azurePolicy` block.
	AzurePolicies GetKubernetesClusterAddonProfileAzurePolicyArrayInput `pulumi:"azurePolicies"`
	// A `httpApplicationRouting` block.
	HttpApplicationRoutings GetKubernetesClusterAddonProfileHttpApplicationRoutingArrayInput `pulumi:"httpApplicationRoutings"`
	// A `kubeDashboard` block.
	KubeDashboards GetKubernetesClusterAddonProfileKubeDashboardArrayInput `pulumi:"kubeDashboards"`
	// A `omsAgent` block.
	OmsAgents GetKubernetesClusterAddonProfileOmsAgentArrayInput `pulumi:"omsAgents"`
}

func (GetKubernetesClusterAddonProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterAddonProfile)(nil)).Elem()
}

func (i GetKubernetesClusterAddonProfileArgs) ToGetKubernetesClusterAddonProfileOutput() GetKubernetesClusterAddonProfileOutput {
	return i.ToGetKubernetesClusterAddonProfileOutputWithContext(context.Background())
}

func (i GetKubernetesClusterAddonProfileArgs) ToGetKubernetesClusterAddonProfileOutputWithContext(ctx context.Context) GetKubernetesClusterAddonProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterAddonProfileOutput)
}

// GetKubernetesClusterAddonProfileArrayInput is an input type that accepts GetKubernetesClusterAddonProfileArray and GetKubernetesClusterAddonProfileArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterAddonProfileArrayInput` via:
//
// 		 GetKubernetesClusterAddonProfileArray{ GetKubernetesClusterAddonProfileArgs{...} }
//
type GetKubernetesClusterAddonProfileArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterAddonProfileArrayOutput() GetKubernetesClusterAddonProfileArrayOutput
	ToGetKubernetesClusterAddonProfileArrayOutputWithContext(context.Context) GetKubernetesClusterAddonProfileArrayOutput
}

type GetKubernetesClusterAddonProfileArray []GetKubernetesClusterAddonProfileInput

func (GetKubernetesClusterAddonProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterAddonProfile)(nil)).Elem()
}

func (i GetKubernetesClusterAddonProfileArray) ToGetKubernetesClusterAddonProfileArrayOutput() GetKubernetesClusterAddonProfileArrayOutput {
	return i.ToGetKubernetesClusterAddonProfileArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterAddonProfileArray) ToGetKubernetesClusterAddonProfileArrayOutputWithContext(ctx context.Context) GetKubernetesClusterAddonProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterAddonProfileArrayOutput)
}

type GetKubernetesClusterAddonProfileOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterAddonProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterAddonProfile)(nil)).Elem()
}

func (o GetKubernetesClusterAddonProfileOutput) ToGetKubernetesClusterAddonProfileOutput() GetKubernetesClusterAddonProfileOutput {
	return o
}

func (o GetKubernetesClusterAddonProfileOutput) ToGetKubernetesClusterAddonProfileOutputWithContext(ctx context.Context) GetKubernetesClusterAddonProfileOutput {
	return o
}

// A `azurePolicy` block.
func (o GetKubernetesClusterAddonProfileOutput) AzurePolicies() GetKubernetesClusterAddonProfileAzurePolicyArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterAddonProfile) []GetKubernetesClusterAddonProfileAzurePolicy {
		return v.AzurePolicies
	}).(GetKubernetesClusterAddonProfileAzurePolicyArrayOutput)
}

// A `httpApplicationRouting` block.
func (o GetKubernetesClusterAddonProfileOutput) HttpApplicationRoutings() GetKubernetesClusterAddonProfileHttpApplicationRoutingArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterAddonProfile) []GetKubernetesClusterAddonProfileHttpApplicationRouting {
		return v.HttpApplicationRoutings
	}).(GetKubernetesClusterAddonProfileHttpApplicationRoutingArrayOutput)
}

// A `kubeDashboard` block.
func (o GetKubernetesClusterAddonProfileOutput) KubeDashboards() GetKubernetesClusterAddonProfileKubeDashboardArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterAddonProfile) []GetKubernetesClusterAddonProfileKubeDashboard {
		return v.KubeDashboards
	}).(GetKubernetesClusterAddonProfileKubeDashboardArrayOutput)
}

// A `omsAgent` block.
func (o GetKubernetesClusterAddonProfileOutput) OmsAgents() GetKubernetesClusterAddonProfileOmsAgentArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterAddonProfile) []GetKubernetesClusterAddonProfileOmsAgent {
		return v.OmsAgents
	}).(GetKubernetesClusterAddonProfileOmsAgentArrayOutput)
}

type GetKubernetesClusterAddonProfileArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterAddonProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterAddonProfile)(nil)).Elem()
}

func (o GetKubernetesClusterAddonProfileArrayOutput) ToGetKubernetesClusterAddonProfileArrayOutput() GetKubernetesClusterAddonProfileArrayOutput {
	return o
}

func (o GetKubernetesClusterAddonProfileArrayOutput) ToGetKubernetesClusterAddonProfileArrayOutputWithContext(ctx context.Context) GetKubernetesClusterAddonProfileArrayOutput {
	return o
}

func (o GetKubernetesClusterAddonProfileArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterAddonProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterAddonProfile {
		return vs[0].([]GetKubernetesClusterAddonProfile)[vs[1].(int)]
	}).(GetKubernetesClusterAddonProfileOutput)
}

type GetKubernetesClusterAddonProfileAzurePolicy struct {
	// Is Role Based Access Control enabled?
	Enabled bool `pulumi:"enabled"`
}

// GetKubernetesClusterAddonProfileAzurePolicyInput is an input type that accepts GetKubernetesClusterAddonProfileAzurePolicyArgs and GetKubernetesClusterAddonProfileAzurePolicyOutput values.
// You can construct a concrete instance of `GetKubernetesClusterAddonProfileAzurePolicyInput` via:
//
// 		 GetKubernetesClusterAddonProfileAzurePolicyArgs{...}
//
type GetKubernetesClusterAddonProfileAzurePolicyInput interface {
	pulumi.Input

	ToGetKubernetesClusterAddonProfileAzurePolicyOutput() GetKubernetesClusterAddonProfileAzurePolicyOutput
	ToGetKubernetesClusterAddonProfileAzurePolicyOutputWithContext(context.Context) GetKubernetesClusterAddonProfileAzurePolicyOutput
}

type GetKubernetesClusterAddonProfileAzurePolicyArgs struct {
	// Is Role Based Access Control enabled?
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetKubernetesClusterAddonProfileAzurePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterAddonProfileAzurePolicy)(nil)).Elem()
}

func (i GetKubernetesClusterAddonProfileAzurePolicyArgs) ToGetKubernetesClusterAddonProfileAzurePolicyOutput() GetKubernetesClusterAddonProfileAzurePolicyOutput {
	return i.ToGetKubernetesClusterAddonProfileAzurePolicyOutputWithContext(context.Background())
}

func (i GetKubernetesClusterAddonProfileAzurePolicyArgs) ToGetKubernetesClusterAddonProfileAzurePolicyOutputWithContext(ctx context.Context) GetKubernetesClusterAddonProfileAzurePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterAddonProfileAzurePolicyOutput)
}

// GetKubernetesClusterAddonProfileAzurePolicyArrayInput is an input type that accepts GetKubernetesClusterAddonProfileAzurePolicyArray and GetKubernetesClusterAddonProfileAzurePolicyArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterAddonProfileAzurePolicyArrayInput` via:
//
// 		 GetKubernetesClusterAddonProfileAzurePolicyArray{ GetKubernetesClusterAddonProfileAzurePolicyArgs{...} }
//
type GetKubernetesClusterAddonProfileAzurePolicyArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterAddonProfileAzurePolicyArrayOutput() GetKubernetesClusterAddonProfileAzurePolicyArrayOutput
	ToGetKubernetesClusterAddonProfileAzurePolicyArrayOutputWithContext(context.Context) GetKubernetesClusterAddonProfileAzurePolicyArrayOutput
}

type GetKubernetesClusterAddonProfileAzurePolicyArray []GetKubernetesClusterAddonProfileAzurePolicyInput

func (GetKubernetesClusterAddonProfileAzurePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterAddonProfileAzurePolicy)(nil)).Elem()
}

func (i GetKubernetesClusterAddonProfileAzurePolicyArray) ToGetKubernetesClusterAddonProfileAzurePolicyArrayOutput() GetKubernetesClusterAddonProfileAzurePolicyArrayOutput {
	return i.ToGetKubernetesClusterAddonProfileAzurePolicyArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterAddonProfileAzurePolicyArray) ToGetKubernetesClusterAddonProfileAzurePolicyArrayOutputWithContext(ctx context.Context) GetKubernetesClusterAddonProfileAzurePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterAddonProfileAzurePolicyArrayOutput)
}

type GetKubernetesClusterAddonProfileAzurePolicyOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterAddonProfileAzurePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterAddonProfileAzurePolicy)(nil)).Elem()
}

func (o GetKubernetesClusterAddonProfileAzurePolicyOutput) ToGetKubernetesClusterAddonProfileAzurePolicyOutput() GetKubernetesClusterAddonProfileAzurePolicyOutput {
	return o
}

func (o GetKubernetesClusterAddonProfileAzurePolicyOutput) ToGetKubernetesClusterAddonProfileAzurePolicyOutputWithContext(ctx context.Context) GetKubernetesClusterAddonProfileAzurePolicyOutput {
	return o
}

// Is Role Based Access Control enabled?
func (o GetKubernetesClusterAddonProfileAzurePolicyOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterAddonProfileAzurePolicy) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetKubernetesClusterAddonProfileAzurePolicyArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterAddonProfileAzurePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterAddonProfileAzurePolicy)(nil)).Elem()
}

func (o GetKubernetesClusterAddonProfileAzurePolicyArrayOutput) ToGetKubernetesClusterAddonProfileAzurePolicyArrayOutput() GetKubernetesClusterAddonProfileAzurePolicyArrayOutput {
	return o
}

func (o GetKubernetesClusterAddonProfileAzurePolicyArrayOutput) ToGetKubernetesClusterAddonProfileAzurePolicyArrayOutputWithContext(ctx context.Context) GetKubernetesClusterAddonProfileAzurePolicyArrayOutput {
	return o
}

func (o GetKubernetesClusterAddonProfileAzurePolicyArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterAddonProfileAzurePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterAddonProfileAzurePolicy {
		return vs[0].([]GetKubernetesClusterAddonProfileAzurePolicy)[vs[1].(int)]
	}).(GetKubernetesClusterAddonProfileAzurePolicyOutput)
}

type GetKubernetesClusterAddonProfileHttpApplicationRouting struct {
	// Is Role Based Access Control enabled?
	Enabled bool `pulumi:"enabled"`
	// The Zone Name of the HTTP Application Routing.
	HttpApplicationRoutingZoneName string `pulumi:"httpApplicationRoutingZoneName"`
}

// GetKubernetesClusterAddonProfileHttpApplicationRoutingInput is an input type that accepts GetKubernetesClusterAddonProfileHttpApplicationRoutingArgs and GetKubernetesClusterAddonProfileHttpApplicationRoutingOutput values.
// You can construct a concrete instance of `GetKubernetesClusterAddonProfileHttpApplicationRoutingInput` via:
//
// 		 GetKubernetesClusterAddonProfileHttpApplicationRoutingArgs{...}
//
type GetKubernetesClusterAddonProfileHttpApplicationRoutingInput interface {
	pulumi.Input

	ToGetKubernetesClusterAddonProfileHttpApplicationRoutingOutput() GetKubernetesClusterAddonProfileHttpApplicationRoutingOutput
	ToGetKubernetesClusterAddonProfileHttpApplicationRoutingOutputWithContext(context.Context) GetKubernetesClusterAddonProfileHttpApplicationRoutingOutput
}

type GetKubernetesClusterAddonProfileHttpApplicationRoutingArgs struct {
	// Is Role Based Access Control enabled?
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The Zone Name of the HTTP Application Routing.
	HttpApplicationRoutingZoneName pulumi.StringInput `pulumi:"httpApplicationRoutingZoneName"`
}

func (GetKubernetesClusterAddonProfileHttpApplicationRoutingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterAddonProfileHttpApplicationRouting)(nil)).Elem()
}

func (i GetKubernetesClusterAddonProfileHttpApplicationRoutingArgs) ToGetKubernetesClusterAddonProfileHttpApplicationRoutingOutput() GetKubernetesClusterAddonProfileHttpApplicationRoutingOutput {
	return i.ToGetKubernetesClusterAddonProfileHttpApplicationRoutingOutputWithContext(context.Background())
}

func (i GetKubernetesClusterAddonProfileHttpApplicationRoutingArgs) ToGetKubernetesClusterAddonProfileHttpApplicationRoutingOutputWithContext(ctx context.Context) GetKubernetesClusterAddonProfileHttpApplicationRoutingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterAddonProfileHttpApplicationRoutingOutput)
}

// GetKubernetesClusterAddonProfileHttpApplicationRoutingArrayInput is an input type that accepts GetKubernetesClusterAddonProfileHttpApplicationRoutingArray and GetKubernetesClusterAddonProfileHttpApplicationRoutingArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterAddonProfileHttpApplicationRoutingArrayInput` via:
//
// 		 GetKubernetesClusterAddonProfileHttpApplicationRoutingArray{ GetKubernetesClusterAddonProfileHttpApplicationRoutingArgs{...} }
//
type GetKubernetesClusterAddonProfileHttpApplicationRoutingArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterAddonProfileHttpApplicationRoutingArrayOutput() GetKubernetesClusterAddonProfileHttpApplicationRoutingArrayOutput
	ToGetKubernetesClusterAddonProfileHttpApplicationRoutingArrayOutputWithContext(context.Context) GetKubernetesClusterAddonProfileHttpApplicationRoutingArrayOutput
}

type GetKubernetesClusterAddonProfileHttpApplicationRoutingArray []GetKubernetesClusterAddonProfileHttpApplicationRoutingInput

func (GetKubernetesClusterAddonProfileHttpApplicationRoutingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterAddonProfileHttpApplicationRouting)(nil)).Elem()
}

func (i GetKubernetesClusterAddonProfileHttpApplicationRoutingArray) ToGetKubernetesClusterAddonProfileHttpApplicationRoutingArrayOutput() GetKubernetesClusterAddonProfileHttpApplicationRoutingArrayOutput {
	return i.ToGetKubernetesClusterAddonProfileHttpApplicationRoutingArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterAddonProfileHttpApplicationRoutingArray) ToGetKubernetesClusterAddonProfileHttpApplicationRoutingArrayOutputWithContext(ctx context.Context) GetKubernetesClusterAddonProfileHttpApplicationRoutingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterAddonProfileHttpApplicationRoutingArrayOutput)
}

type GetKubernetesClusterAddonProfileHttpApplicationRoutingOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterAddonProfileHttpApplicationRoutingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterAddonProfileHttpApplicationRouting)(nil)).Elem()
}

func (o GetKubernetesClusterAddonProfileHttpApplicationRoutingOutput) ToGetKubernetesClusterAddonProfileHttpApplicationRoutingOutput() GetKubernetesClusterAddonProfileHttpApplicationRoutingOutput {
	return o
}

func (o GetKubernetesClusterAddonProfileHttpApplicationRoutingOutput) ToGetKubernetesClusterAddonProfileHttpApplicationRoutingOutputWithContext(ctx context.Context) GetKubernetesClusterAddonProfileHttpApplicationRoutingOutput {
	return o
}

// Is Role Based Access Control enabled?
func (o GetKubernetesClusterAddonProfileHttpApplicationRoutingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterAddonProfileHttpApplicationRouting) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The Zone Name of the HTTP Application Routing.
func (o GetKubernetesClusterAddonProfileHttpApplicationRoutingOutput) HttpApplicationRoutingZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterAddonProfileHttpApplicationRouting) string {
		return v.HttpApplicationRoutingZoneName
	}).(pulumi.StringOutput)
}

type GetKubernetesClusterAddonProfileHttpApplicationRoutingArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterAddonProfileHttpApplicationRoutingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterAddonProfileHttpApplicationRouting)(nil)).Elem()
}

func (o GetKubernetesClusterAddonProfileHttpApplicationRoutingArrayOutput) ToGetKubernetesClusterAddonProfileHttpApplicationRoutingArrayOutput() GetKubernetesClusterAddonProfileHttpApplicationRoutingArrayOutput {
	return o
}

func (o GetKubernetesClusterAddonProfileHttpApplicationRoutingArrayOutput) ToGetKubernetesClusterAddonProfileHttpApplicationRoutingArrayOutputWithContext(ctx context.Context) GetKubernetesClusterAddonProfileHttpApplicationRoutingArrayOutput {
	return o
}

func (o GetKubernetesClusterAddonProfileHttpApplicationRoutingArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterAddonProfileHttpApplicationRoutingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterAddonProfileHttpApplicationRouting {
		return vs[0].([]GetKubernetesClusterAddonProfileHttpApplicationRouting)[vs[1].(int)]
	}).(GetKubernetesClusterAddonProfileHttpApplicationRoutingOutput)
}

type GetKubernetesClusterAddonProfileKubeDashboard struct {
	// Is Role Based Access Control enabled?
	Enabled bool `pulumi:"enabled"`
}

// GetKubernetesClusterAddonProfileKubeDashboardInput is an input type that accepts GetKubernetesClusterAddonProfileKubeDashboardArgs and GetKubernetesClusterAddonProfileKubeDashboardOutput values.
// You can construct a concrete instance of `GetKubernetesClusterAddonProfileKubeDashboardInput` via:
//
// 		 GetKubernetesClusterAddonProfileKubeDashboardArgs{...}
//
type GetKubernetesClusterAddonProfileKubeDashboardInput interface {
	pulumi.Input

	ToGetKubernetesClusterAddonProfileKubeDashboardOutput() GetKubernetesClusterAddonProfileKubeDashboardOutput
	ToGetKubernetesClusterAddonProfileKubeDashboardOutputWithContext(context.Context) GetKubernetesClusterAddonProfileKubeDashboardOutput
}

type GetKubernetesClusterAddonProfileKubeDashboardArgs struct {
	// Is Role Based Access Control enabled?
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetKubernetesClusterAddonProfileKubeDashboardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterAddonProfileKubeDashboard)(nil)).Elem()
}

func (i GetKubernetesClusterAddonProfileKubeDashboardArgs) ToGetKubernetesClusterAddonProfileKubeDashboardOutput() GetKubernetesClusterAddonProfileKubeDashboardOutput {
	return i.ToGetKubernetesClusterAddonProfileKubeDashboardOutputWithContext(context.Background())
}

func (i GetKubernetesClusterAddonProfileKubeDashboardArgs) ToGetKubernetesClusterAddonProfileKubeDashboardOutputWithContext(ctx context.Context) GetKubernetesClusterAddonProfileKubeDashboardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterAddonProfileKubeDashboardOutput)
}

// GetKubernetesClusterAddonProfileKubeDashboardArrayInput is an input type that accepts GetKubernetesClusterAddonProfileKubeDashboardArray and GetKubernetesClusterAddonProfileKubeDashboardArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterAddonProfileKubeDashboardArrayInput` via:
//
// 		 GetKubernetesClusterAddonProfileKubeDashboardArray{ GetKubernetesClusterAddonProfileKubeDashboardArgs{...} }
//
type GetKubernetesClusterAddonProfileKubeDashboardArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterAddonProfileKubeDashboardArrayOutput() GetKubernetesClusterAddonProfileKubeDashboardArrayOutput
	ToGetKubernetesClusterAddonProfileKubeDashboardArrayOutputWithContext(context.Context) GetKubernetesClusterAddonProfileKubeDashboardArrayOutput
}

type GetKubernetesClusterAddonProfileKubeDashboardArray []GetKubernetesClusterAddonProfileKubeDashboardInput

func (GetKubernetesClusterAddonProfileKubeDashboardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterAddonProfileKubeDashboard)(nil)).Elem()
}

func (i GetKubernetesClusterAddonProfileKubeDashboardArray) ToGetKubernetesClusterAddonProfileKubeDashboardArrayOutput() GetKubernetesClusterAddonProfileKubeDashboardArrayOutput {
	return i.ToGetKubernetesClusterAddonProfileKubeDashboardArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterAddonProfileKubeDashboardArray) ToGetKubernetesClusterAddonProfileKubeDashboardArrayOutputWithContext(ctx context.Context) GetKubernetesClusterAddonProfileKubeDashboardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterAddonProfileKubeDashboardArrayOutput)
}

type GetKubernetesClusterAddonProfileKubeDashboardOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterAddonProfileKubeDashboardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterAddonProfileKubeDashboard)(nil)).Elem()
}

func (o GetKubernetesClusterAddonProfileKubeDashboardOutput) ToGetKubernetesClusterAddonProfileKubeDashboardOutput() GetKubernetesClusterAddonProfileKubeDashboardOutput {
	return o
}

func (o GetKubernetesClusterAddonProfileKubeDashboardOutput) ToGetKubernetesClusterAddonProfileKubeDashboardOutputWithContext(ctx context.Context) GetKubernetesClusterAddonProfileKubeDashboardOutput {
	return o
}

// Is Role Based Access Control enabled?
func (o GetKubernetesClusterAddonProfileKubeDashboardOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterAddonProfileKubeDashboard) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetKubernetesClusterAddonProfileKubeDashboardArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterAddonProfileKubeDashboardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterAddonProfileKubeDashboard)(nil)).Elem()
}

func (o GetKubernetesClusterAddonProfileKubeDashboardArrayOutput) ToGetKubernetesClusterAddonProfileKubeDashboardArrayOutput() GetKubernetesClusterAddonProfileKubeDashboardArrayOutput {
	return o
}

func (o GetKubernetesClusterAddonProfileKubeDashboardArrayOutput) ToGetKubernetesClusterAddonProfileKubeDashboardArrayOutputWithContext(ctx context.Context) GetKubernetesClusterAddonProfileKubeDashboardArrayOutput {
	return o
}

func (o GetKubernetesClusterAddonProfileKubeDashboardArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterAddonProfileKubeDashboardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterAddonProfileKubeDashboard {
		return vs[0].([]GetKubernetesClusterAddonProfileKubeDashboard)[vs[1].(int)]
	}).(GetKubernetesClusterAddonProfileKubeDashboardOutput)
}

type GetKubernetesClusterAddonProfileOmsAgent struct {
	// Is Role Based Access Control enabled?
	Enabled bool `pulumi:"enabled"`
	// The ID of the Log Analytics Workspace which the OMS Agent should send data to.
	LogAnalyticsWorkspaceId string `pulumi:"logAnalyticsWorkspaceId"`
}

// GetKubernetesClusterAddonProfileOmsAgentInput is an input type that accepts GetKubernetesClusterAddonProfileOmsAgentArgs and GetKubernetesClusterAddonProfileOmsAgentOutput values.
// You can construct a concrete instance of `GetKubernetesClusterAddonProfileOmsAgentInput` via:
//
// 		 GetKubernetesClusterAddonProfileOmsAgentArgs{...}
//
type GetKubernetesClusterAddonProfileOmsAgentInput interface {
	pulumi.Input

	ToGetKubernetesClusterAddonProfileOmsAgentOutput() GetKubernetesClusterAddonProfileOmsAgentOutput
	ToGetKubernetesClusterAddonProfileOmsAgentOutputWithContext(context.Context) GetKubernetesClusterAddonProfileOmsAgentOutput
}

type GetKubernetesClusterAddonProfileOmsAgentArgs struct {
	// Is Role Based Access Control enabled?
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The ID of the Log Analytics Workspace which the OMS Agent should send data to.
	LogAnalyticsWorkspaceId pulumi.StringInput `pulumi:"logAnalyticsWorkspaceId"`
}

func (GetKubernetesClusterAddonProfileOmsAgentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterAddonProfileOmsAgent)(nil)).Elem()
}

func (i GetKubernetesClusterAddonProfileOmsAgentArgs) ToGetKubernetesClusterAddonProfileOmsAgentOutput() GetKubernetesClusterAddonProfileOmsAgentOutput {
	return i.ToGetKubernetesClusterAddonProfileOmsAgentOutputWithContext(context.Background())
}

func (i GetKubernetesClusterAddonProfileOmsAgentArgs) ToGetKubernetesClusterAddonProfileOmsAgentOutputWithContext(ctx context.Context) GetKubernetesClusterAddonProfileOmsAgentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterAddonProfileOmsAgentOutput)
}

// GetKubernetesClusterAddonProfileOmsAgentArrayInput is an input type that accepts GetKubernetesClusterAddonProfileOmsAgentArray and GetKubernetesClusterAddonProfileOmsAgentArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterAddonProfileOmsAgentArrayInput` via:
//
// 		 GetKubernetesClusterAddonProfileOmsAgentArray{ GetKubernetesClusterAddonProfileOmsAgentArgs{...} }
//
type GetKubernetesClusterAddonProfileOmsAgentArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterAddonProfileOmsAgentArrayOutput() GetKubernetesClusterAddonProfileOmsAgentArrayOutput
	ToGetKubernetesClusterAddonProfileOmsAgentArrayOutputWithContext(context.Context) GetKubernetesClusterAddonProfileOmsAgentArrayOutput
}

type GetKubernetesClusterAddonProfileOmsAgentArray []GetKubernetesClusterAddonProfileOmsAgentInput

func (GetKubernetesClusterAddonProfileOmsAgentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterAddonProfileOmsAgent)(nil)).Elem()
}

func (i GetKubernetesClusterAddonProfileOmsAgentArray) ToGetKubernetesClusterAddonProfileOmsAgentArrayOutput() GetKubernetesClusterAddonProfileOmsAgentArrayOutput {
	return i.ToGetKubernetesClusterAddonProfileOmsAgentArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterAddonProfileOmsAgentArray) ToGetKubernetesClusterAddonProfileOmsAgentArrayOutputWithContext(ctx context.Context) GetKubernetesClusterAddonProfileOmsAgentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterAddonProfileOmsAgentArrayOutput)
}

type GetKubernetesClusterAddonProfileOmsAgentOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterAddonProfileOmsAgentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterAddonProfileOmsAgent)(nil)).Elem()
}

func (o GetKubernetesClusterAddonProfileOmsAgentOutput) ToGetKubernetesClusterAddonProfileOmsAgentOutput() GetKubernetesClusterAddonProfileOmsAgentOutput {
	return o
}

func (o GetKubernetesClusterAddonProfileOmsAgentOutput) ToGetKubernetesClusterAddonProfileOmsAgentOutputWithContext(ctx context.Context) GetKubernetesClusterAddonProfileOmsAgentOutput {
	return o
}

// Is Role Based Access Control enabled?
func (o GetKubernetesClusterAddonProfileOmsAgentOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterAddonProfileOmsAgent) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The ID of the Log Analytics Workspace which the OMS Agent should send data to.
func (o GetKubernetesClusterAddonProfileOmsAgentOutput) LogAnalyticsWorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterAddonProfileOmsAgent) string { return v.LogAnalyticsWorkspaceId }).(pulumi.StringOutput)
}

type GetKubernetesClusterAddonProfileOmsAgentArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterAddonProfileOmsAgentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterAddonProfileOmsAgent)(nil)).Elem()
}

func (o GetKubernetesClusterAddonProfileOmsAgentArrayOutput) ToGetKubernetesClusterAddonProfileOmsAgentArrayOutput() GetKubernetesClusterAddonProfileOmsAgentArrayOutput {
	return o
}

func (o GetKubernetesClusterAddonProfileOmsAgentArrayOutput) ToGetKubernetesClusterAddonProfileOmsAgentArrayOutputWithContext(ctx context.Context) GetKubernetesClusterAddonProfileOmsAgentArrayOutput {
	return o
}

func (o GetKubernetesClusterAddonProfileOmsAgentArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterAddonProfileOmsAgentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterAddonProfileOmsAgent {
		return vs[0].([]GetKubernetesClusterAddonProfileOmsAgent)[vs[1].(int)]
	}).(GetKubernetesClusterAddonProfileOmsAgentOutput)
}

type GetKubernetesClusterAgentPoolProfile struct {
	// The availability zones used for the nodes.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// The number of Agents (VM's) in the Pool.
	Count int `pulumi:"count"`
	// If the auto-scaler is enabled.
	EnableAutoScaling  bool  `pulumi:"enableAutoScaling"`
	EnableNodePublicIp *bool `pulumi:"enableNodePublicIp"`
	// Maximum number of nodes for auto-scaling
	MaxCount int `pulumi:"maxCount"`
	// The maximum number of pods that can run on each agent.
	MaxPods int `pulumi:"maxPods"`
	// Minimum number of nodes for auto-scaling
	MinCount int `pulumi:"minCount"`
	// The name of the managed Kubernetes Cluster.
	Name       string            `pulumi:"name"`
	NodeLabels map[string]string `pulumi:"nodeLabels"`
	// The list of Kubernetes taints which are applied to nodes in the agent pool
	NodeTaints []string `pulumi:"nodeTaints"`
	// The size of the Agent VM's Operating System Disk in GB.
	OsDiskSizeGb int `pulumi:"osDiskSizeGb"`
	// The Operating System used for the Agents.
	OsType string `pulumi:"osType"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of the Agent Pool.
	Type string `pulumi:"type"`
	// The size of each VM in the Agent Pool (e.g. `Standard_F1`).
	VmSize string `pulumi:"vmSize"`
	// The ID of the Subnet where the Agents in the Pool are provisioned.
	VnetSubnetId string `pulumi:"vnetSubnetId"`
}

// GetKubernetesClusterAgentPoolProfileInput is an input type that accepts GetKubernetesClusterAgentPoolProfileArgs and GetKubernetesClusterAgentPoolProfileOutput values.
// You can construct a concrete instance of `GetKubernetesClusterAgentPoolProfileInput` via:
//
// 		 GetKubernetesClusterAgentPoolProfileArgs{...}
//
type GetKubernetesClusterAgentPoolProfileInput interface {
	pulumi.Input

	ToGetKubernetesClusterAgentPoolProfileOutput() GetKubernetesClusterAgentPoolProfileOutput
	ToGetKubernetesClusterAgentPoolProfileOutputWithContext(context.Context) GetKubernetesClusterAgentPoolProfileOutput
}

type GetKubernetesClusterAgentPoolProfileArgs struct {
	// The availability zones used for the nodes.
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// The number of Agents (VM's) in the Pool.
	Count pulumi.IntInput `pulumi:"count"`
	// If the auto-scaler is enabled.
	EnableAutoScaling  pulumi.BoolInput    `pulumi:"enableAutoScaling"`
	EnableNodePublicIp pulumi.BoolPtrInput `pulumi:"enableNodePublicIp"`
	// Maximum number of nodes for auto-scaling
	MaxCount pulumi.IntInput `pulumi:"maxCount"`
	// The maximum number of pods that can run on each agent.
	MaxPods pulumi.IntInput `pulumi:"maxPods"`
	// Minimum number of nodes for auto-scaling
	MinCount pulumi.IntInput `pulumi:"minCount"`
	// The name of the managed Kubernetes Cluster.
	Name       pulumi.StringInput    `pulumi:"name"`
	NodeLabels pulumi.StringMapInput `pulumi:"nodeLabels"`
	// The list of Kubernetes taints which are applied to nodes in the agent pool
	NodeTaints pulumi.StringArrayInput `pulumi:"nodeTaints"`
	// The size of the Agent VM's Operating System Disk in GB.
	OsDiskSizeGb pulumi.IntInput `pulumi:"osDiskSizeGb"`
	// The Operating System used for the Agents.
	OsType pulumi.StringInput `pulumi:"osType"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The type of the Agent Pool.
	Type pulumi.StringInput `pulumi:"type"`
	// The size of each VM in the Agent Pool (e.g. `Standard_F1`).
	VmSize pulumi.StringInput `pulumi:"vmSize"`
	// The ID of the Subnet where the Agents in the Pool are provisioned.
	VnetSubnetId pulumi.StringInput `pulumi:"vnetSubnetId"`
}

func (GetKubernetesClusterAgentPoolProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterAgentPoolProfile)(nil)).Elem()
}

func (i GetKubernetesClusterAgentPoolProfileArgs) ToGetKubernetesClusterAgentPoolProfileOutput() GetKubernetesClusterAgentPoolProfileOutput {
	return i.ToGetKubernetesClusterAgentPoolProfileOutputWithContext(context.Background())
}

func (i GetKubernetesClusterAgentPoolProfileArgs) ToGetKubernetesClusterAgentPoolProfileOutputWithContext(ctx context.Context) GetKubernetesClusterAgentPoolProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterAgentPoolProfileOutput)
}

// GetKubernetesClusterAgentPoolProfileArrayInput is an input type that accepts GetKubernetesClusterAgentPoolProfileArray and GetKubernetesClusterAgentPoolProfileArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterAgentPoolProfileArrayInput` via:
//
// 		 GetKubernetesClusterAgentPoolProfileArray{ GetKubernetesClusterAgentPoolProfileArgs{...} }
//
type GetKubernetesClusterAgentPoolProfileArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterAgentPoolProfileArrayOutput() GetKubernetesClusterAgentPoolProfileArrayOutput
	ToGetKubernetesClusterAgentPoolProfileArrayOutputWithContext(context.Context) GetKubernetesClusterAgentPoolProfileArrayOutput
}

type GetKubernetesClusterAgentPoolProfileArray []GetKubernetesClusterAgentPoolProfileInput

func (GetKubernetesClusterAgentPoolProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterAgentPoolProfile)(nil)).Elem()
}

func (i GetKubernetesClusterAgentPoolProfileArray) ToGetKubernetesClusterAgentPoolProfileArrayOutput() GetKubernetesClusterAgentPoolProfileArrayOutput {
	return i.ToGetKubernetesClusterAgentPoolProfileArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterAgentPoolProfileArray) ToGetKubernetesClusterAgentPoolProfileArrayOutputWithContext(ctx context.Context) GetKubernetesClusterAgentPoolProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterAgentPoolProfileArrayOutput)
}

type GetKubernetesClusterAgentPoolProfileOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterAgentPoolProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterAgentPoolProfile)(nil)).Elem()
}

func (o GetKubernetesClusterAgentPoolProfileOutput) ToGetKubernetesClusterAgentPoolProfileOutput() GetKubernetesClusterAgentPoolProfileOutput {
	return o
}

func (o GetKubernetesClusterAgentPoolProfileOutput) ToGetKubernetesClusterAgentPoolProfileOutputWithContext(ctx context.Context) GetKubernetesClusterAgentPoolProfileOutput {
	return o
}

// The availability zones used for the nodes.
func (o GetKubernetesClusterAgentPoolProfileOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// The number of Agents (VM's) in the Pool.
func (o GetKubernetesClusterAgentPoolProfileOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) int { return v.Count }).(pulumi.IntOutput)
}

// If the auto-scaler is enabled.
func (o GetKubernetesClusterAgentPoolProfileOutput) EnableAutoScaling() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) bool { return v.EnableAutoScaling }).(pulumi.BoolOutput)
}

func (o GetKubernetesClusterAgentPoolProfileOutput) EnableNodePublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) *bool { return v.EnableNodePublicIp }).(pulumi.BoolPtrOutput)
}

// Maximum number of nodes for auto-scaling
func (o GetKubernetesClusterAgentPoolProfileOutput) MaxCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) int { return v.MaxCount }).(pulumi.IntOutput)
}

// The maximum number of pods that can run on each agent.
func (o GetKubernetesClusterAgentPoolProfileOutput) MaxPods() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) int { return v.MaxPods }).(pulumi.IntOutput)
}

// Minimum number of nodes for auto-scaling
func (o GetKubernetesClusterAgentPoolProfileOutput) MinCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) int { return v.MinCount }).(pulumi.IntOutput)
}

// The name of the managed Kubernetes Cluster.
func (o GetKubernetesClusterAgentPoolProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetKubernetesClusterAgentPoolProfileOutput) NodeLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) map[string]string { return v.NodeLabels }).(pulumi.StringMapOutput)
}

// The list of Kubernetes taints which are applied to nodes in the agent pool
func (o GetKubernetesClusterAgentPoolProfileOutput) NodeTaints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) []string { return v.NodeTaints }).(pulumi.StringArrayOutput)
}

// The size of the Agent VM's Operating System Disk in GB.
func (o GetKubernetesClusterAgentPoolProfileOutput) OsDiskSizeGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) int { return v.OsDiskSizeGb }).(pulumi.IntOutput)
}

// The Operating System used for the Agents.
func (o GetKubernetesClusterAgentPoolProfileOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) string { return v.OsType }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
func (o GetKubernetesClusterAgentPoolProfileOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the Agent Pool.
func (o GetKubernetesClusterAgentPoolProfileOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) string { return v.Type }).(pulumi.StringOutput)
}

// The size of each VM in the Agent Pool (e.g. `Standard_F1`).
func (o GetKubernetesClusterAgentPoolProfileOutput) VmSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) string { return v.VmSize }).(pulumi.StringOutput)
}

// The ID of the Subnet where the Agents in the Pool are provisioned.
func (o GetKubernetesClusterAgentPoolProfileOutput) VnetSubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterAgentPoolProfile) string { return v.VnetSubnetId }).(pulumi.StringOutput)
}

type GetKubernetesClusterAgentPoolProfileArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterAgentPoolProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterAgentPoolProfile)(nil)).Elem()
}

func (o GetKubernetesClusterAgentPoolProfileArrayOutput) ToGetKubernetesClusterAgentPoolProfileArrayOutput() GetKubernetesClusterAgentPoolProfileArrayOutput {
	return o
}

func (o GetKubernetesClusterAgentPoolProfileArrayOutput) ToGetKubernetesClusterAgentPoolProfileArrayOutputWithContext(ctx context.Context) GetKubernetesClusterAgentPoolProfileArrayOutput {
	return o
}

func (o GetKubernetesClusterAgentPoolProfileArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterAgentPoolProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterAgentPoolProfile {
		return vs[0].([]GetKubernetesClusterAgentPoolProfile)[vs[1].(int)]
	}).(GetKubernetesClusterAgentPoolProfileOutput)
}

type GetKubernetesClusterKubeAdminConfig struct {
	// Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
	ClientCertificate string `pulumi:"clientCertificate"`
	// Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
	ClientKey string `pulumi:"clientKey"`
	// Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
	ClusterCaCertificate string `pulumi:"clusterCaCertificate"`
	// The Kubernetes cluster server host.
	Host string `pulumi:"host"`
	// A password or token used to authenticate to the Kubernetes cluster.
	Password string `pulumi:"password"`
	// A username used to authenticate to the Kubernetes cluster.
	Username string `pulumi:"username"`
}

// GetKubernetesClusterKubeAdminConfigInput is an input type that accepts GetKubernetesClusterKubeAdminConfigArgs and GetKubernetesClusterKubeAdminConfigOutput values.
// You can construct a concrete instance of `GetKubernetesClusterKubeAdminConfigInput` via:
//
// 		 GetKubernetesClusterKubeAdminConfigArgs{...}
//
type GetKubernetesClusterKubeAdminConfigInput interface {
	pulumi.Input

	ToGetKubernetesClusterKubeAdminConfigOutput() GetKubernetesClusterKubeAdminConfigOutput
	ToGetKubernetesClusterKubeAdminConfigOutputWithContext(context.Context) GetKubernetesClusterKubeAdminConfigOutput
}

type GetKubernetesClusterKubeAdminConfigArgs struct {
	// Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
	ClientCertificate pulumi.StringInput `pulumi:"clientCertificate"`
	// Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
	ClientKey pulumi.StringInput `pulumi:"clientKey"`
	// Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
	ClusterCaCertificate pulumi.StringInput `pulumi:"clusterCaCertificate"`
	// The Kubernetes cluster server host.
	Host pulumi.StringInput `pulumi:"host"`
	// A password or token used to authenticate to the Kubernetes cluster.
	Password pulumi.StringInput `pulumi:"password"`
	// A username used to authenticate to the Kubernetes cluster.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetKubernetesClusterKubeAdminConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterKubeAdminConfig)(nil)).Elem()
}

func (i GetKubernetesClusterKubeAdminConfigArgs) ToGetKubernetesClusterKubeAdminConfigOutput() GetKubernetesClusterKubeAdminConfigOutput {
	return i.ToGetKubernetesClusterKubeAdminConfigOutputWithContext(context.Background())
}

func (i GetKubernetesClusterKubeAdminConfigArgs) ToGetKubernetesClusterKubeAdminConfigOutputWithContext(ctx context.Context) GetKubernetesClusterKubeAdminConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterKubeAdminConfigOutput)
}

// GetKubernetesClusterKubeAdminConfigArrayInput is an input type that accepts GetKubernetesClusterKubeAdminConfigArray and GetKubernetesClusterKubeAdminConfigArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterKubeAdminConfigArrayInput` via:
//
// 		 GetKubernetesClusterKubeAdminConfigArray{ GetKubernetesClusterKubeAdminConfigArgs{...} }
//
type GetKubernetesClusterKubeAdminConfigArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterKubeAdminConfigArrayOutput() GetKubernetesClusterKubeAdminConfigArrayOutput
	ToGetKubernetesClusterKubeAdminConfigArrayOutputWithContext(context.Context) GetKubernetesClusterKubeAdminConfigArrayOutput
}

type GetKubernetesClusterKubeAdminConfigArray []GetKubernetesClusterKubeAdminConfigInput

func (GetKubernetesClusterKubeAdminConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterKubeAdminConfig)(nil)).Elem()
}

func (i GetKubernetesClusterKubeAdminConfigArray) ToGetKubernetesClusterKubeAdminConfigArrayOutput() GetKubernetesClusterKubeAdminConfigArrayOutput {
	return i.ToGetKubernetesClusterKubeAdminConfigArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterKubeAdminConfigArray) ToGetKubernetesClusterKubeAdminConfigArrayOutputWithContext(ctx context.Context) GetKubernetesClusterKubeAdminConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterKubeAdminConfigArrayOutput)
}

type GetKubernetesClusterKubeAdminConfigOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterKubeAdminConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterKubeAdminConfig)(nil)).Elem()
}

func (o GetKubernetesClusterKubeAdminConfigOutput) ToGetKubernetesClusterKubeAdminConfigOutput() GetKubernetesClusterKubeAdminConfigOutput {
	return o
}

func (o GetKubernetesClusterKubeAdminConfigOutput) ToGetKubernetesClusterKubeAdminConfigOutputWithContext(ctx context.Context) GetKubernetesClusterKubeAdminConfigOutput {
	return o
}

// Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
func (o GetKubernetesClusterKubeAdminConfigOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeAdminConfig) string { return v.ClientCertificate }).(pulumi.StringOutput)
}

// Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
func (o GetKubernetesClusterKubeAdminConfigOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeAdminConfig) string { return v.ClientKey }).(pulumi.StringOutput)
}

// Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
func (o GetKubernetesClusterKubeAdminConfigOutput) ClusterCaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeAdminConfig) string { return v.ClusterCaCertificate }).(pulumi.StringOutput)
}

// The Kubernetes cluster server host.
func (o GetKubernetesClusterKubeAdminConfigOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeAdminConfig) string { return v.Host }).(pulumi.StringOutput)
}

// A password or token used to authenticate to the Kubernetes cluster.
func (o GetKubernetesClusterKubeAdminConfigOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeAdminConfig) string { return v.Password }).(pulumi.StringOutput)
}

// A username used to authenticate to the Kubernetes cluster.
func (o GetKubernetesClusterKubeAdminConfigOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeAdminConfig) string { return v.Username }).(pulumi.StringOutput)
}

type GetKubernetesClusterKubeAdminConfigArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterKubeAdminConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterKubeAdminConfig)(nil)).Elem()
}

func (o GetKubernetesClusterKubeAdminConfigArrayOutput) ToGetKubernetesClusterKubeAdminConfigArrayOutput() GetKubernetesClusterKubeAdminConfigArrayOutput {
	return o
}

func (o GetKubernetesClusterKubeAdminConfigArrayOutput) ToGetKubernetesClusterKubeAdminConfigArrayOutputWithContext(ctx context.Context) GetKubernetesClusterKubeAdminConfigArrayOutput {
	return o
}

func (o GetKubernetesClusterKubeAdminConfigArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterKubeAdminConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterKubeAdminConfig {
		return vs[0].([]GetKubernetesClusterKubeAdminConfig)[vs[1].(int)]
	}).(GetKubernetesClusterKubeAdminConfigOutput)
}

type GetKubernetesClusterKubeConfig struct {
	// Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
	ClientCertificate string `pulumi:"clientCertificate"`
	// Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
	ClientKey string `pulumi:"clientKey"`
	// Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
	ClusterCaCertificate string `pulumi:"clusterCaCertificate"`
	// The Kubernetes cluster server host.
	Host string `pulumi:"host"`
	// A password or token used to authenticate to the Kubernetes cluster.
	Password string `pulumi:"password"`
	// A username used to authenticate to the Kubernetes cluster.
	Username string `pulumi:"username"`
}

// GetKubernetesClusterKubeConfigInput is an input type that accepts GetKubernetesClusterKubeConfigArgs and GetKubernetesClusterKubeConfigOutput values.
// You can construct a concrete instance of `GetKubernetesClusterKubeConfigInput` via:
//
// 		 GetKubernetesClusterKubeConfigArgs{...}
//
type GetKubernetesClusterKubeConfigInput interface {
	pulumi.Input

	ToGetKubernetesClusterKubeConfigOutput() GetKubernetesClusterKubeConfigOutput
	ToGetKubernetesClusterKubeConfigOutputWithContext(context.Context) GetKubernetesClusterKubeConfigOutput
}

type GetKubernetesClusterKubeConfigArgs struct {
	// Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
	ClientCertificate pulumi.StringInput `pulumi:"clientCertificate"`
	// Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
	ClientKey pulumi.StringInput `pulumi:"clientKey"`
	// Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
	ClusterCaCertificate pulumi.StringInput `pulumi:"clusterCaCertificate"`
	// The Kubernetes cluster server host.
	Host pulumi.StringInput `pulumi:"host"`
	// A password or token used to authenticate to the Kubernetes cluster.
	Password pulumi.StringInput `pulumi:"password"`
	// A username used to authenticate to the Kubernetes cluster.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetKubernetesClusterKubeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterKubeConfig)(nil)).Elem()
}

func (i GetKubernetesClusterKubeConfigArgs) ToGetKubernetesClusterKubeConfigOutput() GetKubernetesClusterKubeConfigOutput {
	return i.ToGetKubernetesClusterKubeConfigOutputWithContext(context.Background())
}

func (i GetKubernetesClusterKubeConfigArgs) ToGetKubernetesClusterKubeConfigOutputWithContext(ctx context.Context) GetKubernetesClusterKubeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterKubeConfigOutput)
}

// GetKubernetesClusterKubeConfigArrayInput is an input type that accepts GetKubernetesClusterKubeConfigArray and GetKubernetesClusterKubeConfigArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterKubeConfigArrayInput` via:
//
// 		 GetKubernetesClusterKubeConfigArray{ GetKubernetesClusterKubeConfigArgs{...} }
//
type GetKubernetesClusterKubeConfigArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterKubeConfigArrayOutput() GetKubernetesClusterKubeConfigArrayOutput
	ToGetKubernetesClusterKubeConfigArrayOutputWithContext(context.Context) GetKubernetesClusterKubeConfigArrayOutput
}

type GetKubernetesClusterKubeConfigArray []GetKubernetesClusterKubeConfigInput

func (GetKubernetesClusterKubeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterKubeConfig)(nil)).Elem()
}

func (i GetKubernetesClusterKubeConfigArray) ToGetKubernetesClusterKubeConfigArrayOutput() GetKubernetesClusterKubeConfigArrayOutput {
	return i.ToGetKubernetesClusterKubeConfigArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterKubeConfigArray) ToGetKubernetesClusterKubeConfigArrayOutputWithContext(ctx context.Context) GetKubernetesClusterKubeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterKubeConfigArrayOutput)
}

type GetKubernetesClusterKubeConfigOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterKubeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterKubeConfig)(nil)).Elem()
}

func (o GetKubernetesClusterKubeConfigOutput) ToGetKubernetesClusterKubeConfigOutput() GetKubernetesClusterKubeConfigOutput {
	return o
}

func (o GetKubernetesClusterKubeConfigOutput) ToGetKubernetesClusterKubeConfigOutputWithContext(ctx context.Context) GetKubernetesClusterKubeConfigOutput {
	return o
}

// Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
func (o GetKubernetesClusterKubeConfigOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeConfig) string { return v.ClientCertificate }).(pulumi.StringOutput)
}

// Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
func (o GetKubernetesClusterKubeConfigOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeConfig) string { return v.ClientKey }).(pulumi.StringOutput)
}

// Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
func (o GetKubernetesClusterKubeConfigOutput) ClusterCaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeConfig) string { return v.ClusterCaCertificate }).(pulumi.StringOutput)
}

// The Kubernetes cluster server host.
func (o GetKubernetesClusterKubeConfigOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeConfig) string { return v.Host }).(pulumi.StringOutput)
}

// A password or token used to authenticate to the Kubernetes cluster.
func (o GetKubernetesClusterKubeConfigOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeConfig) string { return v.Password }).(pulumi.StringOutput)
}

// A username used to authenticate to the Kubernetes cluster.
func (o GetKubernetesClusterKubeConfigOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeConfig) string { return v.Username }).(pulumi.StringOutput)
}

type GetKubernetesClusterKubeConfigArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterKubeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterKubeConfig)(nil)).Elem()
}

func (o GetKubernetesClusterKubeConfigArrayOutput) ToGetKubernetesClusterKubeConfigArrayOutput() GetKubernetesClusterKubeConfigArrayOutput {
	return o
}

func (o GetKubernetesClusterKubeConfigArrayOutput) ToGetKubernetesClusterKubeConfigArrayOutputWithContext(ctx context.Context) GetKubernetesClusterKubeConfigArrayOutput {
	return o
}

func (o GetKubernetesClusterKubeConfigArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterKubeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterKubeConfig {
		return vs[0].([]GetKubernetesClusterKubeConfig)[vs[1].(int)]
	}).(GetKubernetesClusterKubeConfigOutput)
}

type GetKubernetesClusterLinuxProfile struct {
	// The username associated with the administrator account of the Windows VMs.
	AdminUsername string `pulumi:"adminUsername"`
	// An `sshKey` block as defined below.
	SshKeys []GetKubernetesClusterLinuxProfileSshKey `pulumi:"sshKeys"`
}

// GetKubernetesClusterLinuxProfileInput is an input type that accepts GetKubernetesClusterLinuxProfileArgs and GetKubernetesClusterLinuxProfileOutput values.
// You can construct a concrete instance of `GetKubernetesClusterLinuxProfileInput` via:
//
// 		 GetKubernetesClusterLinuxProfileArgs{...}
//
type GetKubernetesClusterLinuxProfileInput interface {
	pulumi.Input

	ToGetKubernetesClusterLinuxProfileOutput() GetKubernetesClusterLinuxProfileOutput
	ToGetKubernetesClusterLinuxProfileOutputWithContext(context.Context) GetKubernetesClusterLinuxProfileOutput
}

type GetKubernetesClusterLinuxProfileArgs struct {
	// The username associated with the administrator account of the Windows VMs.
	AdminUsername pulumi.StringInput `pulumi:"adminUsername"`
	// An `sshKey` block as defined below.
	SshKeys GetKubernetesClusterLinuxProfileSshKeyArrayInput `pulumi:"sshKeys"`
}

func (GetKubernetesClusterLinuxProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterLinuxProfile)(nil)).Elem()
}

func (i GetKubernetesClusterLinuxProfileArgs) ToGetKubernetesClusterLinuxProfileOutput() GetKubernetesClusterLinuxProfileOutput {
	return i.ToGetKubernetesClusterLinuxProfileOutputWithContext(context.Background())
}

func (i GetKubernetesClusterLinuxProfileArgs) ToGetKubernetesClusterLinuxProfileOutputWithContext(ctx context.Context) GetKubernetesClusterLinuxProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterLinuxProfileOutput)
}

// GetKubernetesClusterLinuxProfileArrayInput is an input type that accepts GetKubernetesClusterLinuxProfileArray and GetKubernetesClusterLinuxProfileArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterLinuxProfileArrayInput` via:
//
// 		 GetKubernetesClusterLinuxProfileArray{ GetKubernetesClusterLinuxProfileArgs{...} }
//
type GetKubernetesClusterLinuxProfileArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterLinuxProfileArrayOutput() GetKubernetesClusterLinuxProfileArrayOutput
	ToGetKubernetesClusterLinuxProfileArrayOutputWithContext(context.Context) GetKubernetesClusterLinuxProfileArrayOutput
}

type GetKubernetesClusterLinuxProfileArray []GetKubernetesClusterLinuxProfileInput

func (GetKubernetesClusterLinuxProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterLinuxProfile)(nil)).Elem()
}

func (i GetKubernetesClusterLinuxProfileArray) ToGetKubernetesClusterLinuxProfileArrayOutput() GetKubernetesClusterLinuxProfileArrayOutput {
	return i.ToGetKubernetesClusterLinuxProfileArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterLinuxProfileArray) ToGetKubernetesClusterLinuxProfileArrayOutputWithContext(ctx context.Context) GetKubernetesClusterLinuxProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterLinuxProfileArrayOutput)
}

type GetKubernetesClusterLinuxProfileOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterLinuxProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterLinuxProfile)(nil)).Elem()
}

func (o GetKubernetesClusterLinuxProfileOutput) ToGetKubernetesClusterLinuxProfileOutput() GetKubernetesClusterLinuxProfileOutput {
	return o
}

func (o GetKubernetesClusterLinuxProfileOutput) ToGetKubernetesClusterLinuxProfileOutputWithContext(ctx context.Context) GetKubernetesClusterLinuxProfileOutput {
	return o
}

// The username associated with the administrator account of the Windows VMs.
func (o GetKubernetesClusterLinuxProfileOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterLinuxProfile) string { return v.AdminUsername }).(pulumi.StringOutput)
}

// An `sshKey` block as defined below.
func (o GetKubernetesClusterLinuxProfileOutput) SshKeys() GetKubernetesClusterLinuxProfileSshKeyArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterLinuxProfile) []GetKubernetesClusterLinuxProfileSshKey { return v.SshKeys }).(GetKubernetesClusterLinuxProfileSshKeyArrayOutput)
}

type GetKubernetesClusterLinuxProfileArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterLinuxProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterLinuxProfile)(nil)).Elem()
}

func (o GetKubernetesClusterLinuxProfileArrayOutput) ToGetKubernetesClusterLinuxProfileArrayOutput() GetKubernetesClusterLinuxProfileArrayOutput {
	return o
}

func (o GetKubernetesClusterLinuxProfileArrayOutput) ToGetKubernetesClusterLinuxProfileArrayOutputWithContext(ctx context.Context) GetKubernetesClusterLinuxProfileArrayOutput {
	return o
}

func (o GetKubernetesClusterLinuxProfileArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterLinuxProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterLinuxProfile {
		return vs[0].([]GetKubernetesClusterLinuxProfile)[vs[1].(int)]
	}).(GetKubernetesClusterLinuxProfileOutput)
}

type GetKubernetesClusterLinuxProfileSshKey struct {
	// The Public SSH Key used to access the cluster.
	KeyData string `pulumi:"keyData"`
}

// GetKubernetesClusterLinuxProfileSshKeyInput is an input type that accepts GetKubernetesClusterLinuxProfileSshKeyArgs and GetKubernetesClusterLinuxProfileSshKeyOutput values.
// You can construct a concrete instance of `GetKubernetesClusterLinuxProfileSshKeyInput` via:
//
// 		 GetKubernetesClusterLinuxProfileSshKeyArgs{...}
//
type GetKubernetesClusterLinuxProfileSshKeyInput interface {
	pulumi.Input

	ToGetKubernetesClusterLinuxProfileSshKeyOutput() GetKubernetesClusterLinuxProfileSshKeyOutput
	ToGetKubernetesClusterLinuxProfileSshKeyOutputWithContext(context.Context) GetKubernetesClusterLinuxProfileSshKeyOutput
}

type GetKubernetesClusterLinuxProfileSshKeyArgs struct {
	// The Public SSH Key used to access the cluster.
	KeyData pulumi.StringInput `pulumi:"keyData"`
}

func (GetKubernetesClusterLinuxProfileSshKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterLinuxProfileSshKey)(nil)).Elem()
}

func (i GetKubernetesClusterLinuxProfileSshKeyArgs) ToGetKubernetesClusterLinuxProfileSshKeyOutput() GetKubernetesClusterLinuxProfileSshKeyOutput {
	return i.ToGetKubernetesClusterLinuxProfileSshKeyOutputWithContext(context.Background())
}

func (i GetKubernetesClusterLinuxProfileSshKeyArgs) ToGetKubernetesClusterLinuxProfileSshKeyOutputWithContext(ctx context.Context) GetKubernetesClusterLinuxProfileSshKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterLinuxProfileSshKeyOutput)
}

// GetKubernetesClusterLinuxProfileSshKeyArrayInput is an input type that accepts GetKubernetesClusterLinuxProfileSshKeyArray and GetKubernetesClusterLinuxProfileSshKeyArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterLinuxProfileSshKeyArrayInput` via:
//
// 		 GetKubernetesClusterLinuxProfileSshKeyArray{ GetKubernetesClusterLinuxProfileSshKeyArgs{...} }
//
type GetKubernetesClusterLinuxProfileSshKeyArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterLinuxProfileSshKeyArrayOutput() GetKubernetesClusterLinuxProfileSshKeyArrayOutput
	ToGetKubernetesClusterLinuxProfileSshKeyArrayOutputWithContext(context.Context) GetKubernetesClusterLinuxProfileSshKeyArrayOutput
}

type GetKubernetesClusterLinuxProfileSshKeyArray []GetKubernetesClusterLinuxProfileSshKeyInput

func (GetKubernetesClusterLinuxProfileSshKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterLinuxProfileSshKey)(nil)).Elem()
}

func (i GetKubernetesClusterLinuxProfileSshKeyArray) ToGetKubernetesClusterLinuxProfileSshKeyArrayOutput() GetKubernetesClusterLinuxProfileSshKeyArrayOutput {
	return i.ToGetKubernetesClusterLinuxProfileSshKeyArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterLinuxProfileSshKeyArray) ToGetKubernetesClusterLinuxProfileSshKeyArrayOutputWithContext(ctx context.Context) GetKubernetesClusterLinuxProfileSshKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterLinuxProfileSshKeyArrayOutput)
}

type GetKubernetesClusterLinuxProfileSshKeyOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterLinuxProfileSshKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterLinuxProfileSshKey)(nil)).Elem()
}

func (o GetKubernetesClusterLinuxProfileSshKeyOutput) ToGetKubernetesClusterLinuxProfileSshKeyOutput() GetKubernetesClusterLinuxProfileSshKeyOutput {
	return o
}

func (o GetKubernetesClusterLinuxProfileSshKeyOutput) ToGetKubernetesClusterLinuxProfileSshKeyOutputWithContext(ctx context.Context) GetKubernetesClusterLinuxProfileSshKeyOutput {
	return o
}

// The Public SSH Key used to access the cluster.
func (o GetKubernetesClusterLinuxProfileSshKeyOutput) KeyData() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterLinuxProfileSshKey) string { return v.KeyData }).(pulumi.StringOutput)
}

type GetKubernetesClusterLinuxProfileSshKeyArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterLinuxProfileSshKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterLinuxProfileSshKey)(nil)).Elem()
}

func (o GetKubernetesClusterLinuxProfileSshKeyArrayOutput) ToGetKubernetesClusterLinuxProfileSshKeyArrayOutput() GetKubernetesClusterLinuxProfileSshKeyArrayOutput {
	return o
}

func (o GetKubernetesClusterLinuxProfileSshKeyArrayOutput) ToGetKubernetesClusterLinuxProfileSshKeyArrayOutputWithContext(ctx context.Context) GetKubernetesClusterLinuxProfileSshKeyArrayOutput {
	return o
}

func (o GetKubernetesClusterLinuxProfileSshKeyArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterLinuxProfileSshKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterLinuxProfileSshKey {
		return vs[0].([]GetKubernetesClusterLinuxProfileSshKey)[vs[1].(int)]
	}).(GetKubernetesClusterLinuxProfileSshKeyOutput)
}

type GetKubernetesClusterNetworkProfile struct {
	// IP address within the Kubernetes service address range used by cluster service discovery (kube-dns).
	DnsServiceIp string `pulumi:"dnsServiceIp"`
	// IP address (in CIDR notation) used as the Docker bridge IP address on nodes.
	DockerBridgeCidr string `pulumi:"dockerBridgeCidr"`
	LoadBalancerSku  string `pulumi:"loadBalancerSku"`
	// Network plugin used such as `azure` or `kubenet`.
	NetworkPlugin string `pulumi:"networkPlugin"`
	// Network policy to be used with Azure CNI. Eg: `calico` or `azure`
	NetworkPolicy string `pulumi:"networkPolicy"`
	// The CIDR used for pod IP addresses.
	PodCidr string `pulumi:"podCidr"`
	// Network range used by the Kubernetes service.
	ServiceCidr string `pulumi:"serviceCidr"`
}

// GetKubernetesClusterNetworkProfileInput is an input type that accepts GetKubernetesClusterNetworkProfileArgs and GetKubernetesClusterNetworkProfileOutput values.
// You can construct a concrete instance of `GetKubernetesClusterNetworkProfileInput` via:
//
// 		 GetKubernetesClusterNetworkProfileArgs{...}
//
type GetKubernetesClusterNetworkProfileInput interface {
	pulumi.Input

	ToGetKubernetesClusterNetworkProfileOutput() GetKubernetesClusterNetworkProfileOutput
	ToGetKubernetesClusterNetworkProfileOutputWithContext(context.Context) GetKubernetesClusterNetworkProfileOutput
}

type GetKubernetesClusterNetworkProfileArgs struct {
	// IP address within the Kubernetes service address range used by cluster service discovery (kube-dns).
	DnsServiceIp pulumi.StringInput `pulumi:"dnsServiceIp"`
	// IP address (in CIDR notation) used as the Docker bridge IP address on nodes.
	DockerBridgeCidr pulumi.StringInput `pulumi:"dockerBridgeCidr"`
	LoadBalancerSku  pulumi.StringInput `pulumi:"loadBalancerSku"`
	// Network plugin used such as `azure` or `kubenet`.
	NetworkPlugin pulumi.StringInput `pulumi:"networkPlugin"`
	// Network policy to be used with Azure CNI. Eg: `calico` or `azure`
	NetworkPolicy pulumi.StringInput `pulumi:"networkPolicy"`
	// The CIDR used for pod IP addresses.
	PodCidr pulumi.StringInput `pulumi:"podCidr"`
	// Network range used by the Kubernetes service.
	ServiceCidr pulumi.StringInput `pulumi:"serviceCidr"`
}

func (GetKubernetesClusterNetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterNetworkProfile)(nil)).Elem()
}

func (i GetKubernetesClusterNetworkProfileArgs) ToGetKubernetesClusterNetworkProfileOutput() GetKubernetesClusterNetworkProfileOutput {
	return i.ToGetKubernetesClusterNetworkProfileOutputWithContext(context.Background())
}

func (i GetKubernetesClusterNetworkProfileArgs) ToGetKubernetesClusterNetworkProfileOutputWithContext(ctx context.Context) GetKubernetesClusterNetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterNetworkProfileOutput)
}

// GetKubernetesClusterNetworkProfileArrayInput is an input type that accepts GetKubernetesClusterNetworkProfileArray and GetKubernetesClusterNetworkProfileArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterNetworkProfileArrayInput` via:
//
// 		 GetKubernetesClusterNetworkProfileArray{ GetKubernetesClusterNetworkProfileArgs{...} }
//
type GetKubernetesClusterNetworkProfileArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterNetworkProfileArrayOutput() GetKubernetesClusterNetworkProfileArrayOutput
	ToGetKubernetesClusterNetworkProfileArrayOutputWithContext(context.Context) GetKubernetesClusterNetworkProfileArrayOutput
}

type GetKubernetesClusterNetworkProfileArray []GetKubernetesClusterNetworkProfileInput

func (GetKubernetesClusterNetworkProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterNetworkProfile)(nil)).Elem()
}

func (i GetKubernetesClusterNetworkProfileArray) ToGetKubernetesClusterNetworkProfileArrayOutput() GetKubernetesClusterNetworkProfileArrayOutput {
	return i.ToGetKubernetesClusterNetworkProfileArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterNetworkProfileArray) ToGetKubernetesClusterNetworkProfileArrayOutputWithContext(ctx context.Context) GetKubernetesClusterNetworkProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterNetworkProfileArrayOutput)
}

type GetKubernetesClusterNetworkProfileOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterNetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterNetworkProfile)(nil)).Elem()
}

func (o GetKubernetesClusterNetworkProfileOutput) ToGetKubernetesClusterNetworkProfileOutput() GetKubernetesClusterNetworkProfileOutput {
	return o
}

func (o GetKubernetesClusterNetworkProfileOutput) ToGetKubernetesClusterNetworkProfileOutputWithContext(ctx context.Context) GetKubernetesClusterNetworkProfileOutput {
	return o
}

// IP address within the Kubernetes service address range used by cluster service discovery (kube-dns).
func (o GetKubernetesClusterNetworkProfileOutput) DnsServiceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNetworkProfile) string { return v.DnsServiceIp }).(pulumi.StringOutput)
}

// IP address (in CIDR notation) used as the Docker bridge IP address on nodes.
func (o GetKubernetesClusterNetworkProfileOutput) DockerBridgeCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNetworkProfile) string { return v.DockerBridgeCidr }).(pulumi.StringOutput)
}

func (o GetKubernetesClusterNetworkProfileOutput) LoadBalancerSku() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNetworkProfile) string { return v.LoadBalancerSku }).(pulumi.StringOutput)
}

// Network plugin used such as `azure` or `kubenet`.
func (o GetKubernetesClusterNetworkProfileOutput) NetworkPlugin() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNetworkProfile) string { return v.NetworkPlugin }).(pulumi.StringOutput)
}

// Network policy to be used with Azure CNI. Eg: `calico` or `azure`
func (o GetKubernetesClusterNetworkProfileOutput) NetworkPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNetworkProfile) string { return v.NetworkPolicy }).(pulumi.StringOutput)
}

// The CIDR used for pod IP addresses.
func (o GetKubernetesClusterNetworkProfileOutput) PodCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNetworkProfile) string { return v.PodCidr }).(pulumi.StringOutput)
}

// Network range used by the Kubernetes service.
func (o GetKubernetesClusterNetworkProfileOutput) ServiceCidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNetworkProfile) string { return v.ServiceCidr }).(pulumi.StringOutput)
}

type GetKubernetesClusterNetworkProfileArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterNetworkProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterNetworkProfile)(nil)).Elem()
}

func (o GetKubernetesClusterNetworkProfileArrayOutput) ToGetKubernetesClusterNetworkProfileArrayOutput() GetKubernetesClusterNetworkProfileArrayOutput {
	return o
}

func (o GetKubernetesClusterNetworkProfileArrayOutput) ToGetKubernetesClusterNetworkProfileArrayOutputWithContext(ctx context.Context) GetKubernetesClusterNetworkProfileArrayOutput {
	return o
}

func (o GetKubernetesClusterNetworkProfileArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterNetworkProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterNetworkProfile {
		return vs[0].([]GetKubernetesClusterNetworkProfile)[vs[1].(int)]
	}).(GetKubernetesClusterNetworkProfileOutput)
}

type GetKubernetesClusterRoleBasedAccessControl struct {
	// A `azureActiveDirectory` block as documented above.
	AzureActiveDirectories []GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectory `pulumi:"azureActiveDirectories"`
	// Is Role Based Access Control enabled?
	Enabled bool `pulumi:"enabled"`
}

// GetKubernetesClusterRoleBasedAccessControlInput is an input type that accepts GetKubernetesClusterRoleBasedAccessControlArgs and GetKubernetesClusterRoleBasedAccessControlOutput values.
// You can construct a concrete instance of `GetKubernetesClusterRoleBasedAccessControlInput` via:
//
// 		 GetKubernetesClusterRoleBasedAccessControlArgs{...}
//
type GetKubernetesClusterRoleBasedAccessControlInput interface {
	pulumi.Input

	ToGetKubernetesClusterRoleBasedAccessControlOutput() GetKubernetesClusterRoleBasedAccessControlOutput
	ToGetKubernetesClusterRoleBasedAccessControlOutputWithContext(context.Context) GetKubernetesClusterRoleBasedAccessControlOutput
}

type GetKubernetesClusterRoleBasedAccessControlArgs struct {
	// A `azureActiveDirectory` block as documented above.
	AzureActiveDirectories GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArrayInput `pulumi:"azureActiveDirectories"`
	// Is Role Based Access Control enabled?
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetKubernetesClusterRoleBasedAccessControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterRoleBasedAccessControl)(nil)).Elem()
}

func (i GetKubernetesClusterRoleBasedAccessControlArgs) ToGetKubernetesClusterRoleBasedAccessControlOutput() GetKubernetesClusterRoleBasedAccessControlOutput {
	return i.ToGetKubernetesClusterRoleBasedAccessControlOutputWithContext(context.Background())
}

func (i GetKubernetesClusterRoleBasedAccessControlArgs) ToGetKubernetesClusterRoleBasedAccessControlOutputWithContext(ctx context.Context) GetKubernetesClusterRoleBasedAccessControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterRoleBasedAccessControlOutput)
}

// GetKubernetesClusterRoleBasedAccessControlArrayInput is an input type that accepts GetKubernetesClusterRoleBasedAccessControlArray and GetKubernetesClusterRoleBasedAccessControlArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterRoleBasedAccessControlArrayInput` via:
//
// 		 GetKubernetesClusterRoleBasedAccessControlArray{ GetKubernetesClusterRoleBasedAccessControlArgs{...} }
//
type GetKubernetesClusterRoleBasedAccessControlArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterRoleBasedAccessControlArrayOutput() GetKubernetesClusterRoleBasedAccessControlArrayOutput
	ToGetKubernetesClusterRoleBasedAccessControlArrayOutputWithContext(context.Context) GetKubernetesClusterRoleBasedAccessControlArrayOutput
}

type GetKubernetesClusterRoleBasedAccessControlArray []GetKubernetesClusterRoleBasedAccessControlInput

func (GetKubernetesClusterRoleBasedAccessControlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterRoleBasedAccessControl)(nil)).Elem()
}

func (i GetKubernetesClusterRoleBasedAccessControlArray) ToGetKubernetesClusterRoleBasedAccessControlArrayOutput() GetKubernetesClusterRoleBasedAccessControlArrayOutput {
	return i.ToGetKubernetesClusterRoleBasedAccessControlArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterRoleBasedAccessControlArray) ToGetKubernetesClusterRoleBasedAccessControlArrayOutputWithContext(ctx context.Context) GetKubernetesClusterRoleBasedAccessControlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterRoleBasedAccessControlArrayOutput)
}

type GetKubernetesClusterRoleBasedAccessControlOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterRoleBasedAccessControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterRoleBasedAccessControl)(nil)).Elem()
}

func (o GetKubernetesClusterRoleBasedAccessControlOutput) ToGetKubernetesClusterRoleBasedAccessControlOutput() GetKubernetesClusterRoleBasedAccessControlOutput {
	return o
}

func (o GetKubernetesClusterRoleBasedAccessControlOutput) ToGetKubernetesClusterRoleBasedAccessControlOutputWithContext(ctx context.Context) GetKubernetesClusterRoleBasedAccessControlOutput {
	return o
}

// A `azureActiveDirectory` block as documented above.
func (o GetKubernetesClusterRoleBasedAccessControlOutput) AzureActiveDirectories() GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterRoleBasedAccessControl) []GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectory {
		return v.AzureActiveDirectories
	}).(GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArrayOutput)
}

// Is Role Based Access Control enabled?
func (o GetKubernetesClusterRoleBasedAccessControlOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterRoleBasedAccessControl) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetKubernetesClusterRoleBasedAccessControlArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterRoleBasedAccessControlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterRoleBasedAccessControl)(nil)).Elem()
}

func (o GetKubernetesClusterRoleBasedAccessControlArrayOutput) ToGetKubernetesClusterRoleBasedAccessControlArrayOutput() GetKubernetesClusterRoleBasedAccessControlArrayOutput {
	return o
}

func (o GetKubernetesClusterRoleBasedAccessControlArrayOutput) ToGetKubernetesClusterRoleBasedAccessControlArrayOutputWithContext(ctx context.Context) GetKubernetesClusterRoleBasedAccessControlArrayOutput {
	return o
}

func (o GetKubernetesClusterRoleBasedAccessControlArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterRoleBasedAccessControlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterRoleBasedAccessControl {
		return vs[0].([]GetKubernetesClusterRoleBasedAccessControl)[vs[1].(int)]
	}).(GetKubernetesClusterRoleBasedAccessControlOutput)
}

type GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectory struct {
	// The Client ID of an Azure Active Directory Application.
	ClientAppId string `pulumi:"clientAppId"`
	// The Server ID of an Azure Active Directory Application.
	ServerAppId string `pulumi:"serverAppId"`
	// The Tenant ID used for Azure Active Directory Application.
	TenantId string `pulumi:"tenantId"`
}

// GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryInput is an input type that accepts GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArgs and GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput values.
// You can construct a concrete instance of `GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryInput` via:
//
// 		 GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArgs{...}
//
type GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryInput interface {
	pulumi.Input

	ToGetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput() GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput
	ToGetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutputWithContext(context.Context) GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput
}

type GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArgs struct {
	// The Client ID of an Azure Active Directory Application.
	ClientAppId pulumi.StringInput `pulumi:"clientAppId"`
	// The Server ID of an Azure Active Directory Application.
	ServerAppId pulumi.StringInput `pulumi:"serverAppId"`
	// The Tenant ID used for Azure Active Directory Application.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectory)(nil)).Elem()
}

func (i GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArgs) ToGetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput() GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput {
	return i.ToGetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutputWithContext(context.Background())
}

func (i GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArgs) ToGetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutputWithContext(ctx context.Context) GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput)
}

// GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArrayInput is an input type that accepts GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArray and GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArrayInput` via:
//
// 		 GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArray{ GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArgs{...} }
//
type GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArrayOutput() GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArrayOutput
	ToGetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArrayOutputWithContext(context.Context) GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArrayOutput
}

type GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArray []GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryInput

func (GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectory)(nil)).Elem()
}

func (i GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArray) ToGetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArrayOutput() GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArrayOutput {
	return i.ToGetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArray) ToGetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArrayOutputWithContext(ctx context.Context) GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArrayOutput)
}

type GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectory)(nil)).Elem()
}

func (o GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput) ToGetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput() GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput {
	return o
}

func (o GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput) ToGetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutputWithContext(ctx context.Context) GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput {
	return o
}

// The Client ID of an Azure Active Directory Application.
func (o GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput) ClientAppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectory) string { return v.ClientAppId }).(pulumi.StringOutput)
}

// The Server ID of an Azure Active Directory Application.
func (o GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput) ServerAppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectory) string { return v.ServerAppId }).(pulumi.StringOutput)
}

// The Tenant ID used for Azure Active Directory Application.
func (o GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectory) string { return v.TenantId }).(pulumi.StringOutput)
}

type GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectory)(nil)).Elem()
}

func (o GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArrayOutput) ToGetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArrayOutput() GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArrayOutput {
	return o
}

func (o GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArrayOutput) ToGetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArrayOutputWithContext(ctx context.Context) GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArrayOutput {
	return o
}

func (o GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectory {
		return vs[0].([]GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectory)[vs[1].(int)]
	}).(GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput)
}

type GetKubernetesClusterServicePrincipal struct {
	// The Client ID of the Service Principal used by this Managed Kubernetes Cluster.
	ClientId string `pulumi:"clientId"`
}

// GetKubernetesClusterServicePrincipalInput is an input type that accepts GetKubernetesClusterServicePrincipalArgs and GetKubernetesClusterServicePrincipalOutput values.
// You can construct a concrete instance of `GetKubernetesClusterServicePrincipalInput` via:
//
// 		 GetKubernetesClusterServicePrincipalArgs{...}
//
type GetKubernetesClusterServicePrincipalInput interface {
	pulumi.Input

	ToGetKubernetesClusterServicePrincipalOutput() GetKubernetesClusterServicePrincipalOutput
	ToGetKubernetesClusterServicePrincipalOutputWithContext(context.Context) GetKubernetesClusterServicePrincipalOutput
}

type GetKubernetesClusterServicePrincipalArgs struct {
	// The Client ID of the Service Principal used by this Managed Kubernetes Cluster.
	ClientId pulumi.StringInput `pulumi:"clientId"`
}

func (GetKubernetesClusterServicePrincipalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterServicePrincipal)(nil)).Elem()
}

func (i GetKubernetesClusterServicePrincipalArgs) ToGetKubernetesClusterServicePrincipalOutput() GetKubernetesClusterServicePrincipalOutput {
	return i.ToGetKubernetesClusterServicePrincipalOutputWithContext(context.Background())
}

func (i GetKubernetesClusterServicePrincipalArgs) ToGetKubernetesClusterServicePrincipalOutputWithContext(ctx context.Context) GetKubernetesClusterServicePrincipalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterServicePrincipalOutput)
}

// GetKubernetesClusterServicePrincipalArrayInput is an input type that accepts GetKubernetesClusterServicePrincipalArray and GetKubernetesClusterServicePrincipalArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterServicePrincipalArrayInput` via:
//
// 		 GetKubernetesClusterServicePrincipalArray{ GetKubernetesClusterServicePrincipalArgs{...} }
//
type GetKubernetesClusterServicePrincipalArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterServicePrincipalArrayOutput() GetKubernetesClusterServicePrincipalArrayOutput
	ToGetKubernetesClusterServicePrincipalArrayOutputWithContext(context.Context) GetKubernetesClusterServicePrincipalArrayOutput
}

type GetKubernetesClusterServicePrincipalArray []GetKubernetesClusterServicePrincipalInput

func (GetKubernetesClusterServicePrincipalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterServicePrincipal)(nil)).Elem()
}

func (i GetKubernetesClusterServicePrincipalArray) ToGetKubernetesClusterServicePrincipalArrayOutput() GetKubernetesClusterServicePrincipalArrayOutput {
	return i.ToGetKubernetesClusterServicePrincipalArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterServicePrincipalArray) ToGetKubernetesClusterServicePrincipalArrayOutputWithContext(ctx context.Context) GetKubernetesClusterServicePrincipalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterServicePrincipalArrayOutput)
}

type GetKubernetesClusterServicePrincipalOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterServicePrincipalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterServicePrincipal)(nil)).Elem()
}

func (o GetKubernetesClusterServicePrincipalOutput) ToGetKubernetesClusterServicePrincipalOutput() GetKubernetesClusterServicePrincipalOutput {
	return o
}

func (o GetKubernetesClusterServicePrincipalOutput) ToGetKubernetesClusterServicePrincipalOutputWithContext(ctx context.Context) GetKubernetesClusterServicePrincipalOutput {
	return o
}

// The Client ID of the Service Principal used by this Managed Kubernetes Cluster.
func (o GetKubernetesClusterServicePrincipalOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterServicePrincipal) string { return v.ClientId }).(pulumi.StringOutput)
}

type GetKubernetesClusterServicePrincipalArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterServicePrincipalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterServicePrincipal)(nil)).Elem()
}

func (o GetKubernetesClusterServicePrincipalArrayOutput) ToGetKubernetesClusterServicePrincipalArrayOutput() GetKubernetesClusterServicePrincipalArrayOutput {
	return o
}

func (o GetKubernetesClusterServicePrincipalArrayOutput) ToGetKubernetesClusterServicePrincipalArrayOutputWithContext(ctx context.Context) GetKubernetesClusterServicePrincipalArrayOutput {
	return o
}

func (o GetKubernetesClusterServicePrincipalArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterServicePrincipalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterServicePrincipal {
		return vs[0].([]GetKubernetesClusterServicePrincipal)[vs[1].(int)]
	}).(GetKubernetesClusterServicePrincipalOutput)
}

type GetKubernetesClusterWindowsProfile struct {
	// The username associated with the administrator account of the Windows VMs.
	AdminUsername string `pulumi:"adminUsername"`
}

// GetKubernetesClusterWindowsProfileInput is an input type that accepts GetKubernetesClusterWindowsProfileArgs and GetKubernetesClusterWindowsProfileOutput values.
// You can construct a concrete instance of `GetKubernetesClusterWindowsProfileInput` via:
//
// 		 GetKubernetesClusterWindowsProfileArgs{...}
//
type GetKubernetesClusterWindowsProfileInput interface {
	pulumi.Input

	ToGetKubernetesClusterWindowsProfileOutput() GetKubernetesClusterWindowsProfileOutput
	ToGetKubernetesClusterWindowsProfileOutputWithContext(context.Context) GetKubernetesClusterWindowsProfileOutput
}

type GetKubernetesClusterWindowsProfileArgs struct {
	// The username associated with the administrator account of the Windows VMs.
	AdminUsername pulumi.StringInput `pulumi:"adminUsername"`
}

func (GetKubernetesClusterWindowsProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterWindowsProfile)(nil)).Elem()
}

func (i GetKubernetesClusterWindowsProfileArgs) ToGetKubernetesClusterWindowsProfileOutput() GetKubernetesClusterWindowsProfileOutput {
	return i.ToGetKubernetesClusterWindowsProfileOutputWithContext(context.Background())
}

func (i GetKubernetesClusterWindowsProfileArgs) ToGetKubernetesClusterWindowsProfileOutputWithContext(ctx context.Context) GetKubernetesClusterWindowsProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterWindowsProfileOutput)
}

// GetKubernetesClusterWindowsProfileArrayInput is an input type that accepts GetKubernetesClusterWindowsProfileArray and GetKubernetesClusterWindowsProfileArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterWindowsProfileArrayInput` via:
//
// 		 GetKubernetesClusterWindowsProfileArray{ GetKubernetesClusterWindowsProfileArgs{...} }
//
type GetKubernetesClusterWindowsProfileArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterWindowsProfileArrayOutput() GetKubernetesClusterWindowsProfileArrayOutput
	ToGetKubernetesClusterWindowsProfileArrayOutputWithContext(context.Context) GetKubernetesClusterWindowsProfileArrayOutput
}

type GetKubernetesClusterWindowsProfileArray []GetKubernetesClusterWindowsProfileInput

func (GetKubernetesClusterWindowsProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterWindowsProfile)(nil)).Elem()
}

func (i GetKubernetesClusterWindowsProfileArray) ToGetKubernetesClusterWindowsProfileArrayOutput() GetKubernetesClusterWindowsProfileArrayOutput {
	return i.ToGetKubernetesClusterWindowsProfileArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterWindowsProfileArray) ToGetKubernetesClusterWindowsProfileArrayOutputWithContext(ctx context.Context) GetKubernetesClusterWindowsProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterWindowsProfileArrayOutput)
}

type GetKubernetesClusterWindowsProfileOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterWindowsProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterWindowsProfile)(nil)).Elem()
}

func (o GetKubernetesClusterWindowsProfileOutput) ToGetKubernetesClusterWindowsProfileOutput() GetKubernetesClusterWindowsProfileOutput {
	return o
}

func (o GetKubernetesClusterWindowsProfileOutput) ToGetKubernetesClusterWindowsProfileOutputWithContext(ctx context.Context) GetKubernetesClusterWindowsProfileOutput {
	return o
}

// The username associated with the administrator account of the Windows VMs.
func (o GetKubernetesClusterWindowsProfileOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterWindowsProfile) string { return v.AdminUsername }).(pulumi.StringOutput)
}

type GetKubernetesClusterWindowsProfileArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterWindowsProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterWindowsProfile)(nil)).Elem()
}

func (o GetKubernetesClusterWindowsProfileArrayOutput) ToGetKubernetesClusterWindowsProfileArrayOutput() GetKubernetesClusterWindowsProfileArrayOutput {
	return o
}

func (o GetKubernetesClusterWindowsProfileArrayOutput) ToGetKubernetesClusterWindowsProfileArrayOutputWithContext(ctx context.Context) GetKubernetesClusterWindowsProfileArrayOutput {
	return o
}

func (o GetKubernetesClusterWindowsProfileArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterWindowsProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterWindowsProfile {
		return vs[0].([]GetKubernetesClusterWindowsProfile)[vs[1].(int)]
	}).(GetKubernetesClusterWindowsProfileOutput)
}

func init() {
	pulumi.RegisterOutputType(GroupContainerOutput{})
	pulumi.RegisterOutputType(GroupContainerArrayOutput{})
	pulumi.RegisterOutputType(GroupContainerGpuOutput{})
	pulumi.RegisterOutputType(GroupContainerGpuPtrOutput{})
	pulumi.RegisterOutputType(GroupContainerLivenessProbeOutput{})
	pulumi.RegisterOutputType(GroupContainerLivenessProbePtrOutput{})
	pulumi.RegisterOutputType(GroupContainerLivenessProbeHttpGetOutput{})
	pulumi.RegisterOutputType(GroupContainerLivenessProbeHttpGetArrayOutput{})
	pulumi.RegisterOutputType(GroupContainerPortOutput{})
	pulumi.RegisterOutputType(GroupContainerPortArrayOutput{})
	pulumi.RegisterOutputType(GroupContainerReadinessProbeOutput{})
	pulumi.RegisterOutputType(GroupContainerReadinessProbePtrOutput{})
	pulumi.RegisterOutputType(GroupContainerReadinessProbeHttpGetOutput{})
	pulumi.RegisterOutputType(GroupContainerReadinessProbeHttpGetArrayOutput{})
	pulumi.RegisterOutputType(GroupContainerVolumeOutput{})
	pulumi.RegisterOutputType(GroupContainerVolumeArrayOutput{})
	pulumi.RegisterOutputType(GroupDiagnosticsOutput{})
	pulumi.RegisterOutputType(GroupDiagnosticsPtrOutput{})
	pulumi.RegisterOutputType(GroupDiagnosticsLogAnalyticsOutput{})
	pulumi.RegisterOutputType(GroupDiagnosticsLogAnalyticsPtrOutput{})
	pulumi.RegisterOutputType(GroupIdentityOutput{})
	pulumi.RegisterOutputType(GroupIdentityPtrOutput{})
	pulumi.RegisterOutputType(GroupImageRegistryCredentialOutput{})
	pulumi.RegisterOutputType(GroupImageRegistryCredentialArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterAddonProfileOutput{})
	pulumi.RegisterOutputType(KubernetesClusterAddonProfilePtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterAddonProfileAciConnectorLinuxOutput{})
	pulumi.RegisterOutputType(KubernetesClusterAddonProfileAciConnectorLinuxPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterAddonProfileAzurePolicyOutput{})
	pulumi.RegisterOutputType(KubernetesClusterAddonProfileAzurePolicyPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterAddonProfileHttpApplicationRoutingOutput{})
	pulumi.RegisterOutputType(KubernetesClusterAddonProfileHttpApplicationRoutingPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterAddonProfileKubeDashboardOutput{})
	pulumi.RegisterOutputType(KubernetesClusterAddonProfileKubeDashboardPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterAddonProfileOmsAgentOutput{})
	pulumi.RegisterOutputType(KubernetesClusterAddonProfileOmsAgentPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterDefaultNodePoolOutput{})
	pulumi.RegisterOutputType(KubernetesClusterDefaultNodePoolPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterIdentityOutput{})
	pulumi.RegisterOutputType(KubernetesClusterIdentityPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterKubeAdminConfigOutput{})
	pulumi.RegisterOutputType(KubernetesClusterKubeAdminConfigArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterKubeConfigOutput{})
	pulumi.RegisterOutputType(KubernetesClusterKubeConfigArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterKubeletIdentityOutput{})
	pulumi.RegisterOutputType(KubernetesClusterKubeletIdentityArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterLinuxProfileOutput{})
	pulumi.RegisterOutputType(KubernetesClusterLinuxProfilePtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterLinuxProfileSshKeyOutput{})
	pulumi.RegisterOutputType(KubernetesClusterLinuxProfileSshKeyPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNetworkProfileOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNetworkProfilePtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNetworkProfileLoadBalancerProfileOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNetworkProfileLoadBalancerProfilePtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterRoleBasedAccessControlOutput{})
	pulumi.RegisterOutputType(KubernetesClusterRoleBasedAccessControlPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput{})
	pulumi.RegisterOutputType(KubernetesClusterRoleBasedAccessControlAzureActiveDirectoryPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterServicePrincipalOutput{})
	pulumi.RegisterOutputType(KubernetesClusterServicePrincipalPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterWindowsProfileOutput{})
	pulumi.RegisterOutputType(KubernetesClusterWindowsProfilePtrOutput{})
	pulumi.RegisterOutputType(RegistryNetworkRuleSetOutput{})
	pulumi.RegisterOutputType(RegistryNetworkRuleSetPtrOutput{})
	pulumi.RegisterOutputType(RegistryNetworkRuleSetIpRuleOutput{})
	pulumi.RegisterOutputType(RegistryNetworkRuleSetIpRuleArrayOutput{})
	pulumi.RegisterOutputType(RegistryNetworkRuleSetVirtualNetworkOutput{})
	pulumi.RegisterOutputType(RegistryNetworkRuleSetVirtualNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterAddonProfileOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterAddonProfileArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterAddonProfileAzurePolicyOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterAddonProfileAzurePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterAddonProfileHttpApplicationRoutingOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterAddonProfileHttpApplicationRoutingArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterAddonProfileKubeDashboardOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterAddonProfileKubeDashboardArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterAddonProfileOmsAgentOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterAddonProfileOmsAgentArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterAgentPoolProfileOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterAgentPoolProfileArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterKubeAdminConfigOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterKubeAdminConfigArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterKubeConfigOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterKubeConfigArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterLinuxProfileOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterLinuxProfileArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterLinuxProfileSshKeyOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterLinuxProfileSshKeyArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterNetworkProfileOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterNetworkProfileArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterRoleBasedAccessControlOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterRoleBasedAccessControlArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterRoleBasedAccessControlAzureActiveDirectoryArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterServicePrincipalOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterServicePrincipalArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterWindowsProfileOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterWindowsProfileArrayOutput{})
}
