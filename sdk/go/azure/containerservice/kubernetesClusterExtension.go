// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerservice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Kubernetes Cluster Extension.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/containerservice"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleKubernetesCluster, err := containerservice.NewKubernetesCluster(ctx, "exampleKubernetesCluster", &containerservice.KubernetesClusterArgs{
//				Location:          pulumi.String("West Europe"),
//				ResourceGroupName: exampleResourceGroup.Name,
//				DnsPrefix:         pulumi.String("example-aks"),
//				DefaultNodePool: &containerservice.KubernetesClusterDefaultNodePoolArgs{
//					Name:      pulumi.String("default"),
//					NodeCount: pulumi.Int(1),
//					VmSize:    pulumi.String("Standard_DS2_v2"),
//				},
//				Identity: &containerservice.KubernetesClusterIdentityArgs{
//					Type: pulumi.String("SystemAssigned"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = containerservice.NewKubernetesClusterExtension(ctx, "exampleKubernetesClusterExtension", &containerservice.KubernetesClusterExtensionArgs{
//				ClusterId:     exampleKubernetesCluster.ID(),
//				ExtensionType: pulumi.String("microsoft.flux"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Kubernetes Cluster Extension can be imported using the `resource id` for different `cluster_resource_name`, e.g.
//
// ```sh
//
//	$ pulumi import azure:containerservice/kubernetesClusterExtension:KubernetesClusterExtension example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.ContainerService/managedClusters/cluster1/providers/Microsoft.KubernetesConfiguration/extensions/extension1
//
// ```
type KubernetesClusterExtension struct {
	pulumi.CustomResourceState

	// An `aksAssignedIdentity` block as defined below.
	AksAssignedIdentities KubernetesClusterExtensionAksAssignedIdentityArrayOutput `pulumi:"aksAssignedIdentities"`
	// Specifies the Cluster ID. Changing this forces a new Kubernetes Cluster Extension to be created.
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// Configuration settings that are sensitive, as name-value pairs for configuring this extension.
	ConfigurationProtectedSettings pulumi.StringMapOutput `pulumi:"configurationProtectedSettings"`
	// Configuration settings, as name-value pairs for configuring this extension.
	ConfigurationSettings pulumi.StringMapOutput `pulumi:"configurationSettings"`
	// The current version of the extension.
	CurrentVersion pulumi.StringOutput `pulumi:"currentVersion"`
	// Specifies the type of extension. It must be one of the extension types registered with Microsoft.KubernetesConfiguration by the Extension publisher. For more information, please refer to [Available Extensions for AKS](https://learn.microsoft.com/en-us/azure/aks/cluster-extensions?tabs=azure-cli#currently-available-extensions). Changing this forces a new Kubernetes Cluster Extension to be created.
	ExtensionType pulumi.StringOutput `pulumi:"extensionType"`
	// Specifies the name which should be used for this Kubernetes Cluster Extension. Changing this forces a new Kubernetes Cluster Extension to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// A `plan` block as defined below. Changing this forces a new resource to be created.
	Plan KubernetesClusterExtensionPlanPtrOutput `pulumi:"plan"`
	// Namespace where the extension release must be placed for a cluster scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Kubernetes Cluster Extension to be created.
	ReleaseNamespace pulumi.StringOutput `pulumi:"releaseNamespace"`
	// The release train used by this extension. Possible values include but are not limited to `Stable`, `Preview`. Changing this forces a new Kubernetes Cluster Extension to be created.
	ReleaseTrain pulumi.StringOutput `pulumi:"releaseTrain"`
	// Namespace where the extension will be created for a namespace scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Kubernetes Cluster Extension to be created.
	TargetNamespace pulumi.StringOutput `pulumi:"targetNamespace"`
	// User-specified version that the extension should pin to. If it is not set, Azure will use the latest version and auto upgrade it. Changing this forces a new Kubernetes Cluster Extension to be created.
	Version pulumi.StringPtrOutput `pulumi:"version"`
}

// NewKubernetesClusterExtension registers a new resource with the given unique name, arguments, and options.
func NewKubernetesClusterExtension(ctx *pulumi.Context,
	name string, args *KubernetesClusterExtensionArgs, opts ...pulumi.ResourceOption) (*KubernetesClusterExtension, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.ExtensionType == nil {
		return nil, errors.New("invalid value for required argument 'ExtensionType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource KubernetesClusterExtension
	err := ctx.RegisterResource("azure:containerservice/kubernetesClusterExtension:KubernetesClusterExtension", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKubernetesClusterExtension gets an existing KubernetesClusterExtension resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKubernetesClusterExtension(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KubernetesClusterExtensionState, opts ...pulumi.ResourceOption) (*KubernetesClusterExtension, error) {
	var resource KubernetesClusterExtension
	err := ctx.ReadResource("azure:containerservice/kubernetesClusterExtension:KubernetesClusterExtension", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KubernetesClusterExtension resources.
type kubernetesClusterExtensionState struct {
	// An `aksAssignedIdentity` block as defined below.
	AksAssignedIdentities []KubernetesClusterExtensionAksAssignedIdentity `pulumi:"aksAssignedIdentities"`
	// Specifies the Cluster ID. Changing this forces a new Kubernetes Cluster Extension to be created.
	ClusterId *string `pulumi:"clusterId"`
	// Configuration settings that are sensitive, as name-value pairs for configuring this extension.
	ConfigurationProtectedSettings map[string]string `pulumi:"configurationProtectedSettings"`
	// Configuration settings, as name-value pairs for configuring this extension.
	ConfigurationSettings map[string]string `pulumi:"configurationSettings"`
	// The current version of the extension.
	CurrentVersion *string `pulumi:"currentVersion"`
	// Specifies the type of extension. It must be one of the extension types registered with Microsoft.KubernetesConfiguration by the Extension publisher. For more information, please refer to [Available Extensions for AKS](https://learn.microsoft.com/en-us/azure/aks/cluster-extensions?tabs=azure-cli#currently-available-extensions). Changing this forces a new Kubernetes Cluster Extension to be created.
	ExtensionType *string `pulumi:"extensionType"`
	// Specifies the name which should be used for this Kubernetes Cluster Extension. Changing this forces a new Kubernetes Cluster Extension to be created.
	Name *string `pulumi:"name"`
	// A `plan` block as defined below. Changing this forces a new resource to be created.
	Plan *KubernetesClusterExtensionPlan `pulumi:"plan"`
	// Namespace where the extension release must be placed for a cluster scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Kubernetes Cluster Extension to be created.
	ReleaseNamespace *string `pulumi:"releaseNamespace"`
	// The release train used by this extension. Possible values include but are not limited to `Stable`, `Preview`. Changing this forces a new Kubernetes Cluster Extension to be created.
	ReleaseTrain *string `pulumi:"releaseTrain"`
	// Namespace where the extension will be created for a namespace scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Kubernetes Cluster Extension to be created.
	TargetNamespace *string `pulumi:"targetNamespace"`
	// User-specified version that the extension should pin to. If it is not set, Azure will use the latest version and auto upgrade it. Changing this forces a new Kubernetes Cluster Extension to be created.
	Version *string `pulumi:"version"`
}

type KubernetesClusterExtensionState struct {
	// An `aksAssignedIdentity` block as defined below.
	AksAssignedIdentities KubernetesClusterExtensionAksAssignedIdentityArrayInput
	// Specifies the Cluster ID. Changing this forces a new Kubernetes Cluster Extension to be created.
	ClusterId pulumi.StringPtrInput
	// Configuration settings that are sensitive, as name-value pairs for configuring this extension.
	ConfigurationProtectedSettings pulumi.StringMapInput
	// Configuration settings, as name-value pairs for configuring this extension.
	ConfigurationSettings pulumi.StringMapInput
	// The current version of the extension.
	CurrentVersion pulumi.StringPtrInput
	// Specifies the type of extension. It must be one of the extension types registered with Microsoft.KubernetesConfiguration by the Extension publisher. For more information, please refer to [Available Extensions for AKS](https://learn.microsoft.com/en-us/azure/aks/cluster-extensions?tabs=azure-cli#currently-available-extensions). Changing this forces a new Kubernetes Cluster Extension to be created.
	ExtensionType pulumi.StringPtrInput
	// Specifies the name which should be used for this Kubernetes Cluster Extension. Changing this forces a new Kubernetes Cluster Extension to be created.
	Name pulumi.StringPtrInput
	// A `plan` block as defined below. Changing this forces a new resource to be created.
	Plan KubernetesClusterExtensionPlanPtrInput
	// Namespace where the extension release must be placed for a cluster scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Kubernetes Cluster Extension to be created.
	ReleaseNamespace pulumi.StringPtrInput
	// The release train used by this extension. Possible values include but are not limited to `Stable`, `Preview`. Changing this forces a new Kubernetes Cluster Extension to be created.
	ReleaseTrain pulumi.StringPtrInput
	// Namespace where the extension will be created for a namespace scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Kubernetes Cluster Extension to be created.
	TargetNamespace pulumi.StringPtrInput
	// User-specified version that the extension should pin to. If it is not set, Azure will use the latest version and auto upgrade it. Changing this forces a new Kubernetes Cluster Extension to be created.
	Version pulumi.StringPtrInput
}

func (KubernetesClusterExtensionState) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesClusterExtensionState)(nil)).Elem()
}

type kubernetesClusterExtensionArgs struct {
	// Specifies the Cluster ID. Changing this forces a new Kubernetes Cluster Extension to be created.
	ClusterId string `pulumi:"clusterId"`
	// Configuration settings that are sensitive, as name-value pairs for configuring this extension.
	ConfigurationProtectedSettings map[string]string `pulumi:"configurationProtectedSettings"`
	// Configuration settings, as name-value pairs for configuring this extension.
	ConfigurationSettings map[string]string `pulumi:"configurationSettings"`
	// Specifies the type of extension. It must be one of the extension types registered with Microsoft.KubernetesConfiguration by the Extension publisher. For more information, please refer to [Available Extensions for AKS](https://learn.microsoft.com/en-us/azure/aks/cluster-extensions?tabs=azure-cli#currently-available-extensions). Changing this forces a new Kubernetes Cluster Extension to be created.
	ExtensionType string `pulumi:"extensionType"`
	// Specifies the name which should be used for this Kubernetes Cluster Extension. Changing this forces a new Kubernetes Cluster Extension to be created.
	Name *string `pulumi:"name"`
	// A `plan` block as defined below. Changing this forces a new resource to be created.
	Plan *KubernetesClusterExtensionPlan `pulumi:"plan"`
	// Namespace where the extension release must be placed for a cluster scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Kubernetes Cluster Extension to be created.
	ReleaseNamespace *string `pulumi:"releaseNamespace"`
	// The release train used by this extension. Possible values include but are not limited to `Stable`, `Preview`. Changing this forces a new Kubernetes Cluster Extension to be created.
	ReleaseTrain *string `pulumi:"releaseTrain"`
	// Namespace where the extension will be created for a namespace scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Kubernetes Cluster Extension to be created.
	TargetNamespace *string `pulumi:"targetNamespace"`
	// User-specified version that the extension should pin to. If it is not set, Azure will use the latest version and auto upgrade it. Changing this forces a new Kubernetes Cluster Extension to be created.
	Version *string `pulumi:"version"`
}

// The set of arguments for constructing a KubernetesClusterExtension resource.
type KubernetesClusterExtensionArgs struct {
	// Specifies the Cluster ID. Changing this forces a new Kubernetes Cluster Extension to be created.
	ClusterId pulumi.StringInput
	// Configuration settings that are sensitive, as name-value pairs for configuring this extension.
	ConfigurationProtectedSettings pulumi.StringMapInput
	// Configuration settings, as name-value pairs for configuring this extension.
	ConfigurationSettings pulumi.StringMapInput
	// Specifies the type of extension. It must be one of the extension types registered with Microsoft.KubernetesConfiguration by the Extension publisher. For more information, please refer to [Available Extensions for AKS](https://learn.microsoft.com/en-us/azure/aks/cluster-extensions?tabs=azure-cli#currently-available-extensions). Changing this forces a new Kubernetes Cluster Extension to be created.
	ExtensionType pulumi.StringInput
	// Specifies the name which should be used for this Kubernetes Cluster Extension. Changing this forces a new Kubernetes Cluster Extension to be created.
	Name pulumi.StringPtrInput
	// A `plan` block as defined below. Changing this forces a new resource to be created.
	Plan KubernetesClusterExtensionPlanPtrInput
	// Namespace where the extension release must be placed for a cluster scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Kubernetes Cluster Extension to be created.
	ReleaseNamespace pulumi.StringPtrInput
	// The release train used by this extension. Possible values include but are not limited to `Stable`, `Preview`. Changing this forces a new Kubernetes Cluster Extension to be created.
	ReleaseTrain pulumi.StringPtrInput
	// Namespace where the extension will be created for a namespace scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Kubernetes Cluster Extension to be created.
	TargetNamespace pulumi.StringPtrInput
	// User-specified version that the extension should pin to. If it is not set, Azure will use the latest version and auto upgrade it. Changing this forces a new Kubernetes Cluster Extension to be created.
	Version pulumi.StringPtrInput
}

func (KubernetesClusterExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesClusterExtensionArgs)(nil)).Elem()
}

type KubernetesClusterExtensionInput interface {
	pulumi.Input

	ToKubernetesClusterExtensionOutput() KubernetesClusterExtensionOutput
	ToKubernetesClusterExtensionOutputWithContext(ctx context.Context) KubernetesClusterExtensionOutput
}

func (*KubernetesClusterExtension) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterExtension)(nil)).Elem()
}

func (i *KubernetesClusterExtension) ToKubernetesClusterExtensionOutput() KubernetesClusterExtensionOutput {
	return i.ToKubernetesClusterExtensionOutputWithContext(context.Background())
}

func (i *KubernetesClusterExtension) ToKubernetesClusterExtensionOutputWithContext(ctx context.Context) KubernetesClusterExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterExtensionOutput)
}

// KubernetesClusterExtensionArrayInput is an input type that accepts KubernetesClusterExtensionArray and KubernetesClusterExtensionArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterExtensionArrayInput` via:
//
//	KubernetesClusterExtensionArray{ KubernetesClusterExtensionArgs{...} }
type KubernetesClusterExtensionArrayInput interface {
	pulumi.Input

	ToKubernetesClusterExtensionArrayOutput() KubernetesClusterExtensionArrayOutput
	ToKubernetesClusterExtensionArrayOutputWithContext(context.Context) KubernetesClusterExtensionArrayOutput
}

type KubernetesClusterExtensionArray []KubernetesClusterExtensionInput

func (KubernetesClusterExtensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KubernetesClusterExtension)(nil)).Elem()
}

func (i KubernetesClusterExtensionArray) ToKubernetesClusterExtensionArrayOutput() KubernetesClusterExtensionArrayOutput {
	return i.ToKubernetesClusterExtensionArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterExtensionArray) ToKubernetesClusterExtensionArrayOutputWithContext(ctx context.Context) KubernetesClusterExtensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterExtensionArrayOutput)
}

// KubernetesClusterExtensionMapInput is an input type that accepts KubernetesClusterExtensionMap and KubernetesClusterExtensionMapOutput values.
// You can construct a concrete instance of `KubernetesClusterExtensionMapInput` via:
//
//	KubernetesClusterExtensionMap{ "key": KubernetesClusterExtensionArgs{...} }
type KubernetesClusterExtensionMapInput interface {
	pulumi.Input

	ToKubernetesClusterExtensionMapOutput() KubernetesClusterExtensionMapOutput
	ToKubernetesClusterExtensionMapOutputWithContext(context.Context) KubernetesClusterExtensionMapOutput
}

type KubernetesClusterExtensionMap map[string]KubernetesClusterExtensionInput

func (KubernetesClusterExtensionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KubernetesClusterExtension)(nil)).Elem()
}

func (i KubernetesClusterExtensionMap) ToKubernetesClusterExtensionMapOutput() KubernetesClusterExtensionMapOutput {
	return i.ToKubernetesClusterExtensionMapOutputWithContext(context.Background())
}

func (i KubernetesClusterExtensionMap) ToKubernetesClusterExtensionMapOutputWithContext(ctx context.Context) KubernetesClusterExtensionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterExtensionMapOutput)
}

type KubernetesClusterExtensionOutput struct{ *pulumi.OutputState }

func (KubernetesClusterExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterExtension)(nil)).Elem()
}

func (o KubernetesClusterExtensionOutput) ToKubernetesClusterExtensionOutput() KubernetesClusterExtensionOutput {
	return o
}

func (o KubernetesClusterExtensionOutput) ToKubernetesClusterExtensionOutputWithContext(ctx context.Context) KubernetesClusterExtensionOutput {
	return o
}

// An `aksAssignedIdentity` block as defined below.
func (o KubernetesClusterExtensionOutput) AksAssignedIdentities() KubernetesClusterExtensionAksAssignedIdentityArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterExtension) KubernetesClusterExtensionAksAssignedIdentityArrayOutput {
		return v.AksAssignedIdentities
	}).(KubernetesClusterExtensionAksAssignedIdentityArrayOutput)
}

// Specifies the Cluster ID. Changing this forces a new Kubernetes Cluster Extension to be created.
func (o KubernetesClusterExtensionOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesClusterExtension) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// Configuration settings that are sensitive, as name-value pairs for configuring this extension.
func (o KubernetesClusterExtensionOutput) ConfigurationProtectedSettings() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KubernetesClusterExtension) pulumi.StringMapOutput { return v.ConfigurationProtectedSettings }).(pulumi.StringMapOutput)
}

// Configuration settings, as name-value pairs for configuring this extension.
func (o KubernetesClusterExtensionOutput) ConfigurationSettings() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KubernetesClusterExtension) pulumi.StringMapOutput { return v.ConfigurationSettings }).(pulumi.StringMapOutput)
}

// The current version of the extension.
func (o KubernetesClusterExtensionOutput) CurrentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesClusterExtension) pulumi.StringOutput { return v.CurrentVersion }).(pulumi.StringOutput)
}

// Specifies the type of extension. It must be one of the extension types registered with Microsoft.KubernetesConfiguration by the Extension publisher. For more information, please refer to [Available Extensions for AKS](https://learn.microsoft.com/en-us/azure/aks/cluster-extensions?tabs=azure-cli#currently-available-extensions). Changing this forces a new Kubernetes Cluster Extension to be created.
func (o KubernetesClusterExtensionOutput) ExtensionType() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesClusterExtension) pulumi.StringOutput { return v.ExtensionType }).(pulumi.StringOutput)
}

// Specifies the name which should be used for this Kubernetes Cluster Extension. Changing this forces a new Kubernetes Cluster Extension to be created.
func (o KubernetesClusterExtensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesClusterExtension) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A `plan` block as defined below. Changing this forces a new resource to be created.
func (o KubernetesClusterExtensionOutput) Plan() KubernetesClusterExtensionPlanPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterExtension) KubernetesClusterExtensionPlanPtrOutput { return v.Plan }).(KubernetesClusterExtensionPlanPtrOutput)
}

// Namespace where the extension release must be placed for a cluster scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Kubernetes Cluster Extension to be created.
func (o KubernetesClusterExtensionOutput) ReleaseNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesClusterExtension) pulumi.StringOutput { return v.ReleaseNamespace }).(pulumi.StringOutput)
}

// The release train used by this extension. Possible values include but are not limited to `Stable`, `Preview`. Changing this forces a new Kubernetes Cluster Extension to be created.
func (o KubernetesClusterExtensionOutput) ReleaseTrain() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesClusterExtension) pulumi.StringOutput { return v.ReleaseTrain }).(pulumi.StringOutput)
}

// Namespace where the extension will be created for a namespace scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Kubernetes Cluster Extension to be created.
func (o KubernetesClusterExtensionOutput) TargetNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v *KubernetesClusterExtension) pulumi.StringOutput { return v.TargetNamespace }).(pulumi.StringOutput)
}

// User-specified version that the extension should pin to. If it is not set, Azure will use the latest version and auto upgrade it. Changing this forces a new Kubernetes Cluster Extension to be created.
func (o KubernetesClusterExtensionOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterExtension) pulumi.StringPtrOutput { return v.Version }).(pulumi.StringPtrOutput)
}

type KubernetesClusterExtensionArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterExtensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KubernetesClusterExtension)(nil)).Elem()
}

func (o KubernetesClusterExtensionArrayOutput) ToKubernetesClusterExtensionArrayOutput() KubernetesClusterExtensionArrayOutput {
	return o
}

func (o KubernetesClusterExtensionArrayOutput) ToKubernetesClusterExtensionArrayOutputWithContext(ctx context.Context) KubernetesClusterExtensionArrayOutput {
	return o
}

func (o KubernetesClusterExtensionArrayOutput) Index(i pulumi.IntInput) KubernetesClusterExtensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KubernetesClusterExtension {
		return vs[0].([]*KubernetesClusterExtension)[vs[1].(int)]
	}).(KubernetesClusterExtensionOutput)
}

type KubernetesClusterExtensionMapOutput struct{ *pulumi.OutputState }

func (KubernetesClusterExtensionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KubernetesClusterExtension)(nil)).Elem()
}

func (o KubernetesClusterExtensionMapOutput) ToKubernetesClusterExtensionMapOutput() KubernetesClusterExtensionMapOutput {
	return o
}

func (o KubernetesClusterExtensionMapOutput) ToKubernetesClusterExtensionMapOutputWithContext(ctx context.Context) KubernetesClusterExtensionMapOutput {
	return o
}

func (o KubernetesClusterExtensionMapOutput) MapIndex(k pulumi.StringInput) KubernetesClusterExtensionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KubernetesClusterExtension {
		return vs[0].(map[string]*KubernetesClusterExtension)[vs[1].(string)]
	}).(KubernetesClusterExtensionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterExtensionInput)(nil)).Elem(), &KubernetesClusterExtension{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterExtensionArrayInput)(nil)).Elem(), KubernetesClusterExtensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterExtensionMapInput)(nil)).Elem(), KubernetesClusterExtensionMap{})
	pulumi.RegisterOutputType(KubernetesClusterExtensionOutput{})
	pulumi.RegisterOutputType(KubernetesClusterExtensionArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterExtensionMapOutput{})
}
