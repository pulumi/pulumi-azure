// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Kubernetes Fleet Manager.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/containerservice"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := containerservice.GetFleetManager(ctx, &containerservice.GetFleetManagerArgs{
//				Name:              "example",
//				ResourceGroupName: "example-resource-group",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", example.Id)
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This data source uses the following Azure API Providers:
//
// * `Microsoft.ContainerService` - 2024-04-01
func GetFleetManager(ctx *pulumi.Context, args *GetFleetManagerArgs, opts ...pulumi.InvokeOption) (*GetFleetManagerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetFleetManagerResult
	err := ctx.Invoke("azure:containerservice/getFleetManager:getFleetManager", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFleetManager.
type GetFleetManagerArgs struct {
	// The name of this Kubernetes Fleet Manager.
	Name string `pulumi:"name"`
	// The name of the Resource Group where the Kubernetes Fleet Manager exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getFleetManager.
type GetFleetManagerResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Azure Region where the Kubernetes Fleet Manager exists.
	Location          string `pulumi:"location"`
	Name              string `pulumi:"name"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A mapping of tags assigned to the Kubernetes Fleet Manager.
	Tags map[string]string `pulumi:"tags"`
}

func GetFleetManagerOutput(ctx *pulumi.Context, args GetFleetManagerOutputArgs, opts ...pulumi.InvokeOption) GetFleetManagerResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetFleetManagerResultOutput, error) {
			args := v.(GetFleetManagerArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure:containerservice/getFleetManager:getFleetManager", args, GetFleetManagerResultOutput{}, options).(GetFleetManagerResultOutput), nil
		}).(GetFleetManagerResultOutput)
}

// A collection of arguments for invoking getFleetManager.
type GetFleetManagerOutputArgs struct {
	// The name of this Kubernetes Fleet Manager.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Resource Group where the Kubernetes Fleet Manager exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetFleetManagerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFleetManagerArgs)(nil)).Elem()
}

// A collection of values returned by getFleetManager.
type GetFleetManagerResultOutput struct{ *pulumi.OutputState }

func (GetFleetManagerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFleetManagerResult)(nil)).Elem()
}

func (o GetFleetManagerResultOutput) ToGetFleetManagerResultOutput() GetFleetManagerResultOutput {
	return o
}

func (o GetFleetManagerResultOutput) ToGetFleetManagerResultOutputWithContext(ctx context.Context) GetFleetManagerResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetFleetManagerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFleetManagerResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Azure Region where the Kubernetes Fleet Manager exists.
func (o GetFleetManagerResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetFleetManagerResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o GetFleetManagerResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFleetManagerResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetFleetManagerResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFleetManagerResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A mapping of tags assigned to the Kubernetes Fleet Manager.
func (o GetFleetManagerResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetFleetManagerResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFleetManagerResultOutput{})
}
