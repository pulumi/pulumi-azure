// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerservice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Kubernetes Fleet Update Run.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/containerservice"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-rg"),
//				Location: pulumi.String("westeurope"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleKubernetesFleetManager, err := containerservice.NewKubernetesFleetManager(ctx, "example", &containerservice.KubernetesFleetManagerArgs{
//				Location:          example.Location,
//				Name:              pulumi.String("example"),
//				ResourceGroupName: example.Name,
//			})
//			if err != nil {
//				return err
//			}
//			exampleKubernetesCluster, err := containerservice.NewKubernetesCluster(ctx, "example", &containerservice.KubernetesClusterArgs{
//				Name:              pulumi.String("example"),
//				Location:          example.Location,
//				ResourceGroupName: example.Name,
//				DnsPrefix:         pulumi.String("example"),
//				DefaultNodePool: &containerservice.KubernetesClusterDefaultNodePoolArgs{
//					Name:      pulumi.String("default"),
//					NodeCount: pulumi.Int(1),
//					VmSize:    pulumi.String("Standard_DS2_v2"),
//				},
//				Identity: &containerservice.KubernetesClusterIdentityArgs{
//					Type: pulumi.String("SystemAssigned"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = containerservice.NewFleetMember(ctx, "example", &containerservice.FleetMemberArgs{
//				Name:                pulumi.String("example"),
//				KubernetesFleetId:   exampleKubernetesFleetManager.ID(),
//				KubernetesClusterId: exampleKubernetesCluster.ID(),
//				Group:               pulumi.String("example-group"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = containerservice.NewFleetUpdateRun(ctx, "example", &containerservice.FleetUpdateRunArgs{
//				Name:                     pulumi.String("example"),
//				KubernetesFleetManagerId: exampleKubernetesFleetManager.ID(),
//				ManagedClusterUpdate: &containerservice.FleetUpdateRunManagedClusterUpdateArgs{
//					Upgrade: &containerservice.FleetUpdateRunManagedClusterUpdateUpgradeArgs{
//						Type:              pulumi.String("Full"),
//						KubernetesVersion: pulumi.String("1.27"),
//					},
//					NodeImageSelection: &containerservice.FleetUpdateRunManagedClusterUpdateNodeImageSelectionArgs{
//						Type: pulumi.String("Latest"),
//					},
//				},
//				Stages: containerservice.FleetUpdateRunStageArray{
//					&containerservice.FleetUpdateRunStageArgs{
//						Name: pulumi.String("example"),
//						Groups: containerservice.FleetUpdateRunStageGroupArray{
//							&containerservice.FleetUpdateRunStageGroupArgs{
//								Name: pulumi.String("example-group"),
//							},
//						},
//						AfterStageWaitInSeconds: pulumi.Int(21),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Kubernetes Fleet Update Runs can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:containerservice/fleetUpdateRun:FleetUpdateRun example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resourceGroup1/providers/Microsoft.ContainerService/fleets/fleet1/updateRuns/updateRun1
// ```
type FleetUpdateRun struct {
	pulumi.CustomResourceState

	// The ID of the Fleet Update Strategy. Only one of `fleetUpdateStrategyId` or `stage` can be specified.
	FleetUpdateStrategyId pulumi.StringPtrOutput `pulumi:"fleetUpdateStrategyId"`
	// The ID of the Fleet Manager. Changing this forces a new Kubernetes Fleet Update Run to be created.
	KubernetesFleetManagerId pulumi.StringOutput `pulumi:"kubernetesFleetManagerId"`
	// A `managedClusterUpdate` block as defined below.
	ManagedClusterUpdate FleetUpdateRunManagedClusterUpdateOutput `pulumi:"managedClusterUpdate"`
	// The name which should be used for this Kubernetes Fleet Update Run. Changing this forces a new Kubernetes Fleet Update Run to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// One or more `stage` blocks as defined below. Only one of `stage` or `fleetUpdateStrategyId` can be specified.
	Stages FleetUpdateRunStageArrayOutput `pulumi:"stages"`
}

// NewFleetUpdateRun registers a new resource with the given unique name, arguments, and options.
func NewFleetUpdateRun(ctx *pulumi.Context,
	name string, args *FleetUpdateRunArgs, opts ...pulumi.ResourceOption) (*FleetUpdateRun, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.KubernetesFleetManagerId == nil {
		return nil, errors.New("invalid value for required argument 'KubernetesFleetManagerId'")
	}
	if args.ManagedClusterUpdate == nil {
		return nil, errors.New("invalid value for required argument 'ManagedClusterUpdate'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FleetUpdateRun
	err := ctx.RegisterResource("azure:containerservice/fleetUpdateRun:FleetUpdateRun", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFleetUpdateRun gets an existing FleetUpdateRun resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFleetUpdateRun(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FleetUpdateRunState, opts ...pulumi.ResourceOption) (*FleetUpdateRun, error) {
	var resource FleetUpdateRun
	err := ctx.ReadResource("azure:containerservice/fleetUpdateRun:FleetUpdateRun", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FleetUpdateRun resources.
type fleetUpdateRunState struct {
	// The ID of the Fleet Update Strategy. Only one of `fleetUpdateStrategyId` or `stage` can be specified.
	FleetUpdateStrategyId *string `pulumi:"fleetUpdateStrategyId"`
	// The ID of the Fleet Manager. Changing this forces a new Kubernetes Fleet Update Run to be created.
	KubernetesFleetManagerId *string `pulumi:"kubernetesFleetManagerId"`
	// A `managedClusterUpdate` block as defined below.
	ManagedClusterUpdate *FleetUpdateRunManagedClusterUpdate `pulumi:"managedClusterUpdate"`
	// The name which should be used for this Kubernetes Fleet Update Run. Changing this forces a new Kubernetes Fleet Update Run to be created.
	Name *string `pulumi:"name"`
	// One or more `stage` blocks as defined below. Only one of `stage` or `fleetUpdateStrategyId` can be specified.
	Stages []FleetUpdateRunStage `pulumi:"stages"`
}

type FleetUpdateRunState struct {
	// The ID of the Fleet Update Strategy. Only one of `fleetUpdateStrategyId` or `stage` can be specified.
	FleetUpdateStrategyId pulumi.StringPtrInput
	// The ID of the Fleet Manager. Changing this forces a new Kubernetes Fleet Update Run to be created.
	KubernetesFleetManagerId pulumi.StringPtrInput
	// A `managedClusterUpdate` block as defined below.
	ManagedClusterUpdate FleetUpdateRunManagedClusterUpdatePtrInput
	// The name which should be used for this Kubernetes Fleet Update Run. Changing this forces a new Kubernetes Fleet Update Run to be created.
	Name pulumi.StringPtrInput
	// One or more `stage` blocks as defined below. Only one of `stage` or `fleetUpdateStrategyId` can be specified.
	Stages FleetUpdateRunStageArrayInput
}

func (FleetUpdateRunState) ElementType() reflect.Type {
	return reflect.TypeOf((*fleetUpdateRunState)(nil)).Elem()
}

type fleetUpdateRunArgs struct {
	// The ID of the Fleet Update Strategy. Only one of `fleetUpdateStrategyId` or `stage` can be specified.
	FleetUpdateStrategyId *string `pulumi:"fleetUpdateStrategyId"`
	// The ID of the Fleet Manager. Changing this forces a new Kubernetes Fleet Update Run to be created.
	KubernetesFleetManagerId string `pulumi:"kubernetesFleetManagerId"`
	// A `managedClusterUpdate` block as defined below.
	ManagedClusterUpdate FleetUpdateRunManagedClusterUpdate `pulumi:"managedClusterUpdate"`
	// The name which should be used for this Kubernetes Fleet Update Run. Changing this forces a new Kubernetes Fleet Update Run to be created.
	Name *string `pulumi:"name"`
	// One or more `stage` blocks as defined below. Only one of `stage` or `fleetUpdateStrategyId` can be specified.
	Stages []FleetUpdateRunStage `pulumi:"stages"`
}

// The set of arguments for constructing a FleetUpdateRun resource.
type FleetUpdateRunArgs struct {
	// The ID of the Fleet Update Strategy. Only one of `fleetUpdateStrategyId` or `stage` can be specified.
	FleetUpdateStrategyId pulumi.StringPtrInput
	// The ID of the Fleet Manager. Changing this forces a new Kubernetes Fleet Update Run to be created.
	KubernetesFleetManagerId pulumi.StringInput
	// A `managedClusterUpdate` block as defined below.
	ManagedClusterUpdate FleetUpdateRunManagedClusterUpdateInput
	// The name which should be used for this Kubernetes Fleet Update Run. Changing this forces a new Kubernetes Fleet Update Run to be created.
	Name pulumi.StringPtrInput
	// One or more `stage` blocks as defined below. Only one of `stage` or `fleetUpdateStrategyId` can be specified.
	Stages FleetUpdateRunStageArrayInput
}

func (FleetUpdateRunArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fleetUpdateRunArgs)(nil)).Elem()
}

type FleetUpdateRunInput interface {
	pulumi.Input

	ToFleetUpdateRunOutput() FleetUpdateRunOutput
	ToFleetUpdateRunOutputWithContext(ctx context.Context) FleetUpdateRunOutput
}

func (*FleetUpdateRun) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetUpdateRun)(nil)).Elem()
}

func (i *FleetUpdateRun) ToFleetUpdateRunOutput() FleetUpdateRunOutput {
	return i.ToFleetUpdateRunOutputWithContext(context.Background())
}

func (i *FleetUpdateRun) ToFleetUpdateRunOutputWithContext(ctx context.Context) FleetUpdateRunOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetUpdateRunOutput)
}

// FleetUpdateRunArrayInput is an input type that accepts FleetUpdateRunArray and FleetUpdateRunArrayOutput values.
// You can construct a concrete instance of `FleetUpdateRunArrayInput` via:
//
//	FleetUpdateRunArray{ FleetUpdateRunArgs{...} }
type FleetUpdateRunArrayInput interface {
	pulumi.Input

	ToFleetUpdateRunArrayOutput() FleetUpdateRunArrayOutput
	ToFleetUpdateRunArrayOutputWithContext(context.Context) FleetUpdateRunArrayOutput
}

type FleetUpdateRunArray []FleetUpdateRunInput

func (FleetUpdateRunArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FleetUpdateRun)(nil)).Elem()
}

func (i FleetUpdateRunArray) ToFleetUpdateRunArrayOutput() FleetUpdateRunArrayOutput {
	return i.ToFleetUpdateRunArrayOutputWithContext(context.Background())
}

func (i FleetUpdateRunArray) ToFleetUpdateRunArrayOutputWithContext(ctx context.Context) FleetUpdateRunArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetUpdateRunArrayOutput)
}

// FleetUpdateRunMapInput is an input type that accepts FleetUpdateRunMap and FleetUpdateRunMapOutput values.
// You can construct a concrete instance of `FleetUpdateRunMapInput` via:
//
//	FleetUpdateRunMap{ "key": FleetUpdateRunArgs{...} }
type FleetUpdateRunMapInput interface {
	pulumi.Input

	ToFleetUpdateRunMapOutput() FleetUpdateRunMapOutput
	ToFleetUpdateRunMapOutputWithContext(context.Context) FleetUpdateRunMapOutput
}

type FleetUpdateRunMap map[string]FleetUpdateRunInput

func (FleetUpdateRunMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FleetUpdateRun)(nil)).Elem()
}

func (i FleetUpdateRunMap) ToFleetUpdateRunMapOutput() FleetUpdateRunMapOutput {
	return i.ToFleetUpdateRunMapOutputWithContext(context.Background())
}

func (i FleetUpdateRunMap) ToFleetUpdateRunMapOutputWithContext(ctx context.Context) FleetUpdateRunMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetUpdateRunMapOutput)
}

type FleetUpdateRunOutput struct{ *pulumi.OutputState }

func (FleetUpdateRunOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetUpdateRun)(nil)).Elem()
}

func (o FleetUpdateRunOutput) ToFleetUpdateRunOutput() FleetUpdateRunOutput {
	return o
}

func (o FleetUpdateRunOutput) ToFleetUpdateRunOutputWithContext(ctx context.Context) FleetUpdateRunOutput {
	return o
}

// The ID of the Fleet Update Strategy. Only one of `fleetUpdateStrategyId` or `stage` can be specified.
func (o FleetUpdateRunOutput) FleetUpdateStrategyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FleetUpdateRun) pulumi.StringPtrOutput { return v.FleetUpdateStrategyId }).(pulumi.StringPtrOutput)
}

// The ID of the Fleet Manager. Changing this forces a new Kubernetes Fleet Update Run to be created.
func (o FleetUpdateRunOutput) KubernetesFleetManagerId() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetUpdateRun) pulumi.StringOutput { return v.KubernetesFleetManagerId }).(pulumi.StringOutput)
}

// A `managedClusterUpdate` block as defined below.
func (o FleetUpdateRunOutput) ManagedClusterUpdate() FleetUpdateRunManagedClusterUpdateOutput {
	return o.ApplyT(func(v *FleetUpdateRun) FleetUpdateRunManagedClusterUpdateOutput { return v.ManagedClusterUpdate }).(FleetUpdateRunManagedClusterUpdateOutput)
}

// The name which should be used for this Kubernetes Fleet Update Run. Changing this forces a new Kubernetes Fleet Update Run to be created.
func (o FleetUpdateRunOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FleetUpdateRun) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// One or more `stage` blocks as defined below. Only one of `stage` or `fleetUpdateStrategyId` can be specified.
func (o FleetUpdateRunOutput) Stages() FleetUpdateRunStageArrayOutput {
	return o.ApplyT(func(v *FleetUpdateRun) FleetUpdateRunStageArrayOutput { return v.Stages }).(FleetUpdateRunStageArrayOutput)
}

type FleetUpdateRunArrayOutput struct{ *pulumi.OutputState }

func (FleetUpdateRunArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FleetUpdateRun)(nil)).Elem()
}

func (o FleetUpdateRunArrayOutput) ToFleetUpdateRunArrayOutput() FleetUpdateRunArrayOutput {
	return o
}

func (o FleetUpdateRunArrayOutput) ToFleetUpdateRunArrayOutputWithContext(ctx context.Context) FleetUpdateRunArrayOutput {
	return o
}

func (o FleetUpdateRunArrayOutput) Index(i pulumi.IntInput) FleetUpdateRunOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FleetUpdateRun {
		return vs[0].([]*FleetUpdateRun)[vs[1].(int)]
	}).(FleetUpdateRunOutput)
}

type FleetUpdateRunMapOutput struct{ *pulumi.OutputState }

func (FleetUpdateRunMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FleetUpdateRun)(nil)).Elem()
}

func (o FleetUpdateRunMapOutput) ToFleetUpdateRunMapOutput() FleetUpdateRunMapOutput {
	return o
}

func (o FleetUpdateRunMapOutput) ToFleetUpdateRunMapOutputWithContext(ctx context.Context) FleetUpdateRunMapOutput {
	return o
}

func (o FleetUpdateRunMapOutput) MapIndex(k pulumi.StringInput) FleetUpdateRunOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FleetUpdateRun {
		return vs[0].(map[string]*FleetUpdateRun)[vs[1].(string)]
	}).(FleetUpdateRunOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FleetUpdateRunInput)(nil)).Elem(), &FleetUpdateRun{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetUpdateRunArrayInput)(nil)).Elem(), FleetUpdateRunArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetUpdateRunMapInput)(nil)).Elem(), FleetUpdateRunMap{})
	pulumi.RegisterOutputType(FleetUpdateRunOutput{})
	pulumi.RegisterOutputType(FleetUpdateRunArrayOutput{})
	pulumi.RegisterOutputType(FleetUpdateRunMapOutput{})
}
