// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Customer Managed Key for a Databricks Workspace root DBFS
//
// !>**IMPORTANT:** This resource has been deprecated and will be removed from the 4.0 Azure provider. Please use the `databricks.WorkspaceRootDbfsCustomerManagedKey` resource instead.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/databricks"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/keyvault"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			current, err := core.GetClientConfig(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleWorkspace, err := databricks.NewWorkspace(ctx, "exampleWorkspace", &databricks.WorkspaceArgs{
//				ResourceGroupName:         exampleResourceGroup.Name,
//				Location:                  exampleResourceGroup.Location,
//				Sku:                       pulumi.String("premium"),
//				CustomerManagedKeyEnabled: pulumi.Bool(true),
//				Tags: pulumi.StringMap{
//					"Environment": pulumi.String("Production"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleKeyVault, err := keyvault.NewKeyVault(ctx, "exampleKeyVault", &keyvault.KeyVaultArgs{
//				Location:                exampleResourceGroup.Location,
//				ResourceGroupName:       exampleResourceGroup.Name,
//				TenantId:                *pulumi.String(current.TenantId),
//				SkuName:                 pulumi.String("premium"),
//				PurgeProtectionEnabled:  pulumi.Bool(true),
//				SoftDeleteRetentionDays: pulumi.Int(7),
//			})
//			if err != nil {
//				return err
//			}
//			terraform, err := keyvault.NewAccessPolicy(ctx, "terraform", &keyvault.AccessPolicyArgs{
//				KeyVaultId: exampleKeyVault.ID(),
//				TenantId:   exampleKeyVault.TenantId,
//				ObjectId:   *pulumi.String(current.ObjectId),
//				KeyPermissions: pulumi.StringArray{
//					pulumi.String("Create"),
//					pulumi.String("Delete"),
//					pulumi.String("Get"),
//					pulumi.String("Purge"),
//					pulumi.String("Recover"),
//					pulumi.String("Update"),
//					pulumi.String("List"),
//					pulumi.String("Decrypt"),
//					pulumi.String("Sign"),
//					pulumi.String("GetRotationPolicy"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleKey, err := keyvault.NewKey(ctx, "exampleKey", &keyvault.KeyArgs{
//				KeyVaultId: exampleKeyVault.ID(),
//				KeyType:    pulumi.String("RSA"),
//				KeySize:    pulumi.Int(2048),
//				KeyOpts: pulumi.StringArray{
//					pulumi.String("decrypt"),
//					pulumi.String("encrypt"),
//					pulumi.String("sign"),
//					pulumi.String("unwrapKey"),
//					pulumi.String("verify"),
//					pulumi.String("wrapKey"),
//				},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				terraform,
//			}))
//			if err != nil {
//				return err
//			}
//			databricks, err := keyvault.NewAccessPolicy(ctx, "databricks", &keyvault.AccessPolicyArgs{
//				KeyVaultId: exampleKeyVault.ID(),
//				TenantId: exampleWorkspace.StorageAccountIdentities.ApplyT(func(storageAccountIdentities []databricks.WorkspaceStorageAccountIdentity) (*string, error) {
//					return &storageAccountIdentities[0].TenantId, nil
//				}).(pulumi.StringPtrOutput),
//				ObjectId: exampleWorkspace.StorageAccountIdentities.ApplyT(func(storageAccountIdentities []databricks.WorkspaceStorageAccountIdentity) (*string, error) {
//					return &storageAccountIdentities[0].PrincipalId, nil
//				}).(pulumi.StringPtrOutput),
//				KeyPermissions: pulumi.StringArray{
//					pulumi.String("Create"),
//					pulumi.String("Delete"),
//					pulumi.String("Get"),
//					pulumi.String("Purge"),
//					pulumi.String("Recover"),
//					pulumi.String("Update"),
//					pulumi.String("List"),
//					pulumi.String("Decrypt"),
//					pulumi.String("Sign"),
//				},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				exampleWorkspace,
//			}))
//			if err != nil {
//				return err
//			}
//			_, err = databricks.NewWorkspaceRootDbfsCustomerManagedKey(ctx, "exampleWorkspaceRootDbfsCustomerManagedKey", &databricks.WorkspaceRootDbfsCustomerManagedKeyArgs{
//				WorkspaceId:   exampleWorkspace.ID(),
//				KeyVaultKeyId: exampleKey.ID(),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				databricks,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## Example HCL Configurations
//
// * Databricks Workspace with Root Databricks File System Customer Managed Keys
// * Databricks Workspace with Customer Managed Keys for Managed Services
// * Databricks Workspace with Private Endpoint, Customer Managed Keys for Managed Services and Root Databricks File System Customer Managed Keys
//
// ## Import
//
// Databricks Workspace Customer Managed Key can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:databricks/workspaceCustomerManagedKey:WorkspaceCustomerManagedKey workspace1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Databricks/workspaces/workspace1
//
// ```
type WorkspaceCustomerManagedKey struct {
	pulumi.CustomResourceState

	// The ID of the Key Vault.
	KeyVaultKeyId pulumi.StringOutput `pulumi:"keyVaultKeyId"`
	// The ID of the Databricks Workspace..
	//
	// Deprecated: this resource has been deprecated in favour of the `azurerm_databricks_workspace_root_dbfs_customer_managed_key` resource and will be removed from the v4.0 azurerm provider.
	WorkspaceId pulumi.StringOutput `pulumi:"workspaceId"`
}

// NewWorkspaceCustomerManagedKey registers a new resource with the given unique name, arguments, and options.
func NewWorkspaceCustomerManagedKey(ctx *pulumi.Context,
	name string, args *WorkspaceCustomerManagedKeyArgs, opts ...pulumi.ResourceOption) (*WorkspaceCustomerManagedKey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.KeyVaultKeyId == nil {
		return nil, errors.New("invalid value for required argument 'KeyVaultKeyId'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkspaceCustomerManagedKey
	err := ctx.RegisterResource("azure:databricks/workspaceCustomerManagedKey:WorkspaceCustomerManagedKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkspaceCustomerManagedKey gets an existing WorkspaceCustomerManagedKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkspaceCustomerManagedKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkspaceCustomerManagedKeyState, opts ...pulumi.ResourceOption) (*WorkspaceCustomerManagedKey, error) {
	var resource WorkspaceCustomerManagedKey
	err := ctx.ReadResource("azure:databricks/workspaceCustomerManagedKey:WorkspaceCustomerManagedKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkspaceCustomerManagedKey resources.
type workspaceCustomerManagedKeyState struct {
	// The ID of the Key Vault.
	KeyVaultKeyId *string `pulumi:"keyVaultKeyId"`
	// The ID of the Databricks Workspace..
	//
	// Deprecated: this resource has been deprecated in favour of the `azurerm_databricks_workspace_root_dbfs_customer_managed_key` resource and will be removed from the v4.0 azurerm provider.
	WorkspaceId *string `pulumi:"workspaceId"`
}

type WorkspaceCustomerManagedKeyState struct {
	// The ID of the Key Vault.
	KeyVaultKeyId pulumi.StringPtrInput
	// The ID of the Databricks Workspace..
	//
	// Deprecated: this resource has been deprecated in favour of the `azurerm_databricks_workspace_root_dbfs_customer_managed_key` resource and will be removed from the v4.0 azurerm provider.
	WorkspaceId pulumi.StringPtrInput
}

func (WorkspaceCustomerManagedKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceCustomerManagedKeyState)(nil)).Elem()
}

type workspaceCustomerManagedKeyArgs struct {
	// The ID of the Key Vault.
	KeyVaultKeyId string `pulumi:"keyVaultKeyId"`
	// The ID of the Databricks Workspace..
	//
	// Deprecated: this resource has been deprecated in favour of the `azurerm_databricks_workspace_root_dbfs_customer_managed_key` resource and will be removed from the v4.0 azurerm provider.
	WorkspaceId string `pulumi:"workspaceId"`
}

// The set of arguments for constructing a WorkspaceCustomerManagedKey resource.
type WorkspaceCustomerManagedKeyArgs struct {
	// The ID of the Key Vault.
	KeyVaultKeyId pulumi.StringInput
	// The ID of the Databricks Workspace..
	//
	// Deprecated: this resource has been deprecated in favour of the `azurerm_databricks_workspace_root_dbfs_customer_managed_key` resource and will be removed from the v4.0 azurerm provider.
	WorkspaceId pulumi.StringInput
}

func (WorkspaceCustomerManagedKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceCustomerManagedKeyArgs)(nil)).Elem()
}

type WorkspaceCustomerManagedKeyInput interface {
	pulumi.Input

	ToWorkspaceCustomerManagedKeyOutput() WorkspaceCustomerManagedKeyOutput
	ToWorkspaceCustomerManagedKeyOutputWithContext(ctx context.Context) WorkspaceCustomerManagedKeyOutput
}

func (*WorkspaceCustomerManagedKey) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceCustomerManagedKey)(nil)).Elem()
}

func (i *WorkspaceCustomerManagedKey) ToWorkspaceCustomerManagedKeyOutput() WorkspaceCustomerManagedKeyOutput {
	return i.ToWorkspaceCustomerManagedKeyOutputWithContext(context.Background())
}

func (i *WorkspaceCustomerManagedKey) ToWorkspaceCustomerManagedKeyOutputWithContext(ctx context.Context) WorkspaceCustomerManagedKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceCustomerManagedKeyOutput)
}

// WorkspaceCustomerManagedKeyArrayInput is an input type that accepts WorkspaceCustomerManagedKeyArray and WorkspaceCustomerManagedKeyArrayOutput values.
// You can construct a concrete instance of `WorkspaceCustomerManagedKeyArrayInput` via:
//
//	WorkspaceCustomerManagedKeyArray{ WorkspaceCustomerManagedKeyArgs{...} }
type WorkspaceCustomerManagedKeyArrayInput interface {
	pulumi.Input

	ToWorkspaceCustomerManagedKeyArrayOutput() WorkspaceCustomerManagedKeyArrayOutput
	ToWorkspaceCustomerManagedKeyArrayOutputWithContext(context.Context) WorkspaceCustomerManagedKeyArrayOutput
}

type WorkspaceCustomerManagedKeyArray []WorkspaceCustomerManagedKeyInput

func (WorkspaceCustomerManagedKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkspaceCustomerManagedKey)(nil)).Elem()
}

func (i WorkspaceCustomerManagedKeyArray) ToWorkspaceCustomerManagedKeyArrayOutput() WorkspaceCustomerManagedKeyArrayOutput {
	return i.ToWorkspaceCustomerManagedKeyArrayOutputWithContext(context.Background())
}

func (i WorkspaceCustomerManagedKeyArray) ToWorkspaceCustomerManagedKeyArrayOutputWithContext(ctx context.Context) WorkspaceCustomerManagedKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceCustomerManagedKeyArrayOutput)
}

// WorkspaceCustomerManagedKeyMapInput is an input type that accepts WorkspaceCustomerManagedKeyMap and WorkspaceCustomerManagedKeyMapOutput values.
// You can construct a concrete instance of `WorkspaceCustomerManagedKeyMapInput` via:
//
//	WorkspaceCustomerManagedKeyMap{ "key": WorkspaceCustomerManagedKeyArgs{...} }
type WorkspaceCustomerManagedKeyMapInput interface {
	pulumi.Input

	ToWorkspaceCustomerManagedKeyMapOutput() WorkspaceCustomerManagedKeyMapOutput
	ToWorkspaceCustomerManagedKeyMapOutputWithContext(context.Context) WorkspaceCustomerManagedKeyMapOutput
}

type WorkspaceCustomerManagedKeyMap map[string]WorkspaceCustomerManagedKeyInput

func (WorkspaceCustomerManagedKeyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkspaceCustomerManagedKey)(nil)).Elem()
}

func (i WorkspaceCustomerManagedKeyMap) ToWorkspaceCustomerManagedKeyMapOutput() WorkspaceCustomerManagedKeyMapOutput {
	return i.ToWorkspaceCustomerManagedKeyMapOutputWithContext(context.Background())
}

func (i WorkspaceCustomerManagedKeyMap) ToWorkspaceCustomerManagedKeyMapOutputWithContext(ctx context.Context) WorkspaceCustomerManagedKeyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceCustomerManagedKeyMapOutput)
}

type WorkspaceCustomerManagedKeyOutput struct{ *pulumi.OutputState }

func (WorkspaceCustomerManagedKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceCustomerManagedKey)(nil)).Elem()
}

func (o WorkspaceCustomerManagedKeyOutput) ToWorkspaceCustomerManagedKeyOutput() WorkspaceCustomerManagedKeyOutput {
	return o
}

func (o WorkspaceCustomerManagedKeyOutput) ToWorkspaceCustomerManagedKeyOutputWithContext(ctx context.Context) WorkspaceCustomerManagedKeyOutput {
	return o
}

// The ID of the Key Vault.
func (o WorkspaceCustomerManagedKeyOutput) KeyVaultKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceCustomerManagedKey) pulumi.StringOutput { return v.KeyVaultKeyId }).(pulumi.StringOutput)
}

// The ID of the Databricks Workspace..
//
// Deprecated: this resource has been deprecated in favour of the `azurerm_databricks_workspace_root_dbfs_customer_managed_key` resource and will be removed from the v4.0 azurerm provider.
func (o WorkspaceCustomerManagedKeyOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceCustomerManagedKey) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type WorkspaceCustomerManagedKeyArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceCustomerManagedKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkspaceCustomerManagedKey)(nil)).Elem()
}

func (o WorkspaceCustomerManagedKeyArrayOutput) ToWorkspaceCustomerManagedKeyArrayOutput() WorkspaceCustomerManagedKeyArrayOutput {
	return o
}

func (o WorkspaceCustomerManagedKeyArrayOutput) ToWorkspaceCustomerManagedKeyArrayOutputWithContext(ctx context.Context) WorkspaceCustomerManagedKeyArrayOutput {
	return o
}

func (o WorkspaceCustomerManagedKeyArrayOutput) Index(i pulumi.IntInput) WorkspaceCustomerManagedKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkspaceCustomerManagedKey {
		return vs[0].([]*WorkspaceCustomerManagedKey)[vs[1].(int)]
	}).(WorkspaceCustomerManagedKeyOutput)
}

type WorkspaceCustomerManagedKeyMapOutput struct{ *pulumi.OutputState }

func (WorkspaceCustomerManagedKeyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkspaceCustomerManagedKey)(nil)).Elem()
}

func (o WorkspaceCustomerManagedKeyMapOutput) ToWorkspaceCustomerManagedKeyMapOutput() WorkspaceCustomerManagedKeyMapOutput {
	return o
}

func (o WorkspaceCustomerManagedKeyMapOutput) ToWorkspaceCustomerManagedKeyMapOutputWithContext(ctx context.Context) WorkspaceCustomerManagedKeyMapOutput {
	return o
}

func (o WorkspaceCustomerManagedKeyMapOutput) MapIndex(k pulumi.StringInput) WorkspaceCustomerManagedKeyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkspaceCustomerManagedKey {
		return vs[0].(map[string]*WorkspaceCustomerManagedKey)[vs[1].(string)]
	}).(WorkspaceCustomerManagedKeyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceCustomerManagedKeyInput)(nil)).Elem(), &WorkspaceCustomerManagedKey{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceCustomerManagedKeyArrayInput)(nil)).Elem(), WorkspaceCustomerManagedKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceCustomerManagedKeyMapInput)(nil)).Elem(), WorkspaceCustomerManagedKeyMap{})
	pulumi.RegisterOutputType(WorkspaceCustomerManagedKeyOutput{})
	pulumi.RegisterOutputType(WorkspaceCustomerManagedKeyArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceCustomerManagedKeyMapOutput{})
}
