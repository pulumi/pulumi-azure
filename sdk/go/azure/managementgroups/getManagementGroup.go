// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package managementgroups

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Management Group.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/management"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := management.LookupGroup(ctx, &management.LookupGroupArgs{
//				Name: pulumi.StringRef("00000000-0000-0000-0000-000000000000"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("displayName", example.DisplayName)
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: azure.managementgroups.getManagementGroup has been deprecated in favor of azure.management.getGroup
func LookupManagementGroup(ctx *pulumi.Context, args *LookupManagementGroupArgs, opts ...pulumi.InvokeOption) (*LookupManagementGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupManagementGroupResult
	err := ctx.Invoke("azure:managementgroups/getManagementGroup:getManagementGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagementGroup.
type LookupManagementGroupArgs struct {
	// Specifies the display name of this Management Group.
	//
	// > **NOTE** Whilst multiple management groups may share the same display name, when filtering, the provider expects a single management group to be found with this name.
	DisplayName *string `pulumi:"displayName"`
	// Specifies the name or UUID of this Management Group.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getManagementGroup.
type LookupManagementGroupResult struct {
	// A list of Management Group IDs which directly or indirectly belong to this Management Group.
	AllManagementGroupIds []string `pulumi:"allManagementGroupIds"`
	// A list of Subscription IDs which are assigned to this Management Group or its children Management Groups.
	AllSubscriptionIds []string `pulumi:"allSubscriptionIds"`
	DisplayName        string   `pulumi:"displayName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of Management Group IDs which directly belong to this Management Group.
	ManagementGroupIds []string `pulumi:"managementGroupIds"`
	Name               string   `pulumi:"name"`
	// The ID of any Parent Management Group.
	ParentManagementGroupId string `pulumi:"parentManagementGroupId"`
	// A list of Subscription IDs which are directly assigned to this Management Group.
	SubscriptionIds []string `pulumi:"subscriptionIds"`
}

func LookupManagementGroupOutput(ctx *pulumi.Context, args LookupManagementGroupOutputArgs, opts ...pulumi.InvokeOption) LookupManagementGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupManagementGroupResult, error) {
			args := v.(LookupManagementGroupArgs)
			r, err := LookupManagementGroup(ctx, &args, opts...)
			var s LookupManagementGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupManagementGroupResultOutput)
}

// A collection of arguments for invoking getManagementGroup.
type LookupManagementGroupOutputArgs struct {
	// Specifies the display name of this Management Group.
	//
	// > **NOTE** Whilst multiple management groups may share the same display name, when filtering, the provider expects a single management group to be found with this name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Specifies the name or UUID of this Management Group.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupManagementGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagementGroupArgs)(nil)).Elem()
}

// A collection of values returned by getManagementGroup.
type LookupManagementGroupResultOutput struct{ *pulumi.OutputState }

func (LookupManagementGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagementGroupResult)(nil)).Elem()
}

func (o LookupManagementGroupResultOutput) ToLookupManagementGroupResultOutput() LookupManagementGroupResultOutput {
	return o
}

func (o LookupManagementGroupResultOutput) ToLookupManagementGroupResultOutputWithContext(ctx context.Context) LookupManagementGroupResultOutput {
	return o
}

// A list of Management Group IDs which directly or indirectly belong to this Management Group.
func (o LookupManagementGroupResultOutput) AllManagementGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupManagementGroupResult) []string { return v.AllManagementGroupIds }).(pulumi.StringArrayOutput)
}

// A list of Subscription IDs which are assigned to this Management Group or its children Management Groups.
func (o LookupManagementGroupResultOutput) AllSubscriptionIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupManagementGroupResult) []string { return v.AllSubscriptionIds }).(pulumi.StringArrayOutput)
}

func (o LookupManagementGroupResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagementGroupResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupManagementGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagementGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of Management Group IDs which directly belong to this Management Group.
func (o LookupManagementGroupResultOutput) ManagementGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupManagementGroupResult) []string { return v.ManagementGroupIds }).(pulumi.StringArrayOutput)
}

func (o LookupManagementGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagementGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of any Parent Management Group.
func (o LookupManagementGroupResultOutput) ParentManagementGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagementGroupResult) string { return v.ParentManagementGroupId }).(pulumi.StringOutput)
}

// A list of Subscription IDs which are directly assigned to this Management Group.
func (o LookupManagementGroupResultOutput) SubscriptionIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupManagementGroupResult) []string { return v.SubscriptionIds }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupManagementGroupResultOutput{})
}
