// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bot

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Facebook integration for a Bot Channel
//
// > **Note** A bot can only have a single Facebook Channel associated with it.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/bot"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			current, err := core.GetClientConfig(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleChannelsRegistration, err := bot.NewChannelsRegistration(ctx, "exampleChannelsRegistration", &bot.ChannelsRegistrationArgs{
//				Location:          pulumi.String("global"),
//				ResourceGroupName: exampleResourceGroup.Name,
//				Sku:               pulumi.String("F0"),
//				MicrosoftAppId:    *pulumi.String(current.ClientId),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = bot.NewChannelFacebook(ctx, "exampleChannelFacebook", &bot.ChannelFacebookArgs{
//				BotName:                   exampleChannelsRegistration.Name,
//				Location:                  exampleChannelsRegistration.Location,
//				ResourceGroupName:         exampleResourceGroup.Name,
//				FacebookApplicationId:     pulumi.String("563490254873576"),
//				FacebookApplicationSecret: pulumi.String("8976d2536445ad5b976dee8437b9beb0"),
//				Pages: bot.ChannelFacebookPageArray{
//					&bot.ChannelFacebookPageArgs{
//						Id:          pulumi.String("876248795081953"),
//						AccessToken: pulumi.String("CGGCec3UAFPMBAKwK3Ft8SEpO8ZCuvpNBI5DClaJCDfqJj2BgEHCKxcY0FDarmUQap6XxpZC9GWCW4nZCzjcKosAZAP7SO44X8Q8gAntbDIXgYUBGp9xtS8wUkwgKPobUePcOOVFkvClxvYZByuiQxoTiK9fQ9jZCPEorbmZCsKDZAx4VLnrNwCTZAPUwXxO61gfq4ZD"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The Facebook Integration for a Bot Channel can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:bot/channelFacebook:ChannelFacebook example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.BotService/botServices/botService1/channels/FacebookChannel
//
// ```
type ChannelFacebook struct {
	pulumi.CustomResourceState

	// The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
	BotName pulumi.StringOutput `pulumi:"botName"`
	// The Facebook Application ID for the Facebook Channel.
	FacebookApplicationId pulumi.StringOutput `pulumi:"facebookApplicationId"`
	// The Facebook Application Secret for the Facebook Channel.
	FacebookApplicationSecret pulumi.StringOutput `pulumi:"facebookApplicationSecret"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// One or more `page` blocks as defined below.
	Pages ChannelFacebookPageArrayOutput `pulumi:"pages"`
	// The name of the resource group where the Facebook Channel should be created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
}

// NewChannelFacebook registers a new resource with the given unique name, arguments, and options.
func NewChannelFacebook(ctx *pulumi.Context,
	name string, args *ChannelFacebookArgs, opts ...pulumi.ResourceOption) (*ChannelFacebook, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BotName == nil {
		return nil, errors.New("invalid value for required argument 'BotName'")
	}
	if args.FacebookApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'FacebookApplicationId'")
	}
	if args.FacebookApplicationSecret == nil {
		return nil, errors.New("invalid value for required argument 'FacebookApplicationSecret'")
	}
	if args.Pages == nil {
		return nil, errors.New("invalid value for required argument 'Pages'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.FacebookApplicationSecret != nil {
		args.FacebookApplicationSecret = pulumi.ToSecret(args.FacebookApplicationSecret).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"facebookApplicationSecret",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ChannelFacebook
	err := ctx.RegisterResource("azure:bot/channelFacebook:ChannelFacebook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetChannelFacebook gets an existing ChannelFacebook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetChannelFacebook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ChannelFacebookState, opts ...pulumi.ResourceOption) (*ChannelFacebook, error) {
	var resource ChannelFacebook
	err := ctx.ReadResource("azure:bot/channelFacebook:ChannelFacebook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ChannelFacebook resources.
type channelFacebookState struct {
	// The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
	BotName *string `pulumi:"botName"`
	// The Facebook Application ID for the Facebook Channel.
	FacebookApplicationId *string `pulumi:"facebookApplicationId"`
	// The Facebook Application Secret for the Facebook Channel.
	FacebookApplicationSecret *string `pulumi:"facebookApplicationSecret"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// One or more `page` blocks as defined below.
	Pages []ChannelFacebookPage `pulumi:"pages"`
	// The name of the resource group where the Facebook Channel should be created. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
}

type ChannelFacebookState struct {
	// The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
	BotName pulumi.StringPtrInput
	// The Facebook Application ID for the Facebook Channel.
	FacebookApplicationId pulumi.StringPtrInput
	// The Facebook Application Secret for the Facebook Channel.
	FacebookApplicationSecret pulumi.StringPtrInput
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// One or more `page` blocks as defined below.
	Pages ChannelFacebookPageArrayInput
	// The name of the resource group where the Facebook Channel should be created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
}

func (ChannelFacebookState) ElementType() reflect.Type {
	return reflect.TypeOf((*channelFacebookState)(nil)).Elem()
}

type channelFacebookArgs struct {
	// The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
	BotName string `pulumi:"botName"`
	// The Facebook Application ID for the Facebook Channel.
	FacebookApplicationId string `pulumi:"facebookApplicationId"`
	// The Facebook Application Secret for the Facebook Channel.
	FacebookApplicationSecret string `pulumi:"facebookApplicationSecret"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// One or more `page` blocks as defined below.
	Pages []ChannelFacebookPage `pulumi:"pages"`
	// The name of the resource group where the Facebook Channel should be created. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a ChannelFacebook resource.
type ChannelFacebookArgs struct {
	// The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
	BotName pulumi.StringInput
	// The Facebook Application ID for the Facebook Channel.
	FacebookApplicationId pulumi.StringInput
	// The Facebook Application Secret for the Facebook Channel.
	FacebookApplicationSecret pulumi.StringInput
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// One or more `page` blocks as defined below.
	Pages ChannelFacebookPageArrayInput
	// The name of the resource group where the Facebook Channel should be created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
}

func (ChannelFacebookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*channelFacebookArgs)(nil)).Elem()
}

type ChannelFacebookInput interface {
	pulumi.Input

	ToChannelFacebookOutput() ChannelFacebookOutput
	ToChannelFacebookOutputWithContext(ctx context.Context) ChannelFacebookOutput
}

func (*ChannelFacebook) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelFacebook)(nil)).Elem()
}

func (i *ChannelFacebook) ToChannelFacebookOutput() ChannelFacebookOutput {
	return i.ToChannelFacebookOutputWithContext(context.Background())
}

func (i *ChannelFacebook) ToChannelFacebookOutputWithContext(ctx context.Context) ChannelFacebookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFacebookOutput)
}

// ChannelFacebookArrayInput is an input type that accepts ChannelFacebookArray and ChannelFacebookArrayOutput values.
// You can construct a concrete instance of `ChannelFacebookArrayInput` via:
//
//	ChannelFacebookArray{ ChannelFacebookArgs{...} }
type ChannelFacebookArrayInput interface {
	pulumi.Input

	ToChannelFacebookArrayOutput() ChannelFacebookArrayOutput
	ToChannelFacebookArrayOutputWithContext(context.Context) ChannelFacebookArrayOutput
}

type ChannelFacebookArray []ChannelFacebookInput

func (ChannelFacebookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ChannelFacebook)(nil)).Elem()
}

func (i ChannelFacebookArray) ToChannelFacebookArrayOutput() ChannelFacebookArrayOutput {
	return i.ToChannelFacebookArrayOutputWithContext(context.Background())
}

func (i ChannelFacebookArray) ToChannelFacebookArrayOutputWithContext(ctx context.Context) ChannelFacebookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFacebookArrayOutput)
}

// ChannelFacebookMapInput is an input type that accepts ChannelFacebookMap and ChannelFacebookMapOutput values.
// You can construct a concrete instance of `ChannelFacebookMapInput` via:
//
//	ChannelFacebookMap{ "key": ChannelFacebookArgs{...} }
type ChannelFacebookMapInput interface {
	pulumi.Input

	ToChannelFacebookMapOutput() ChannelFacebookMapOutput
	ToChannelFacebookMapOutputWithContext(context.Context) ChannelFacebookMapOutput
}

type ChannelFacebookMap map[string]ChannelFacebookInput

func (ChannelFacebookMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ChannelFacebook)(nil)).Elem()
}

func (i ChannelFacebookMap) ToChannelFacebookMapOutput() ChannelFacebookMapOutput {
	return i.ToChannelFacebookMapOutputWithContext(context.Background())
}

func (i ChannelFacebookMap) ToChannelFacebookMapOutputWithContext(ctx context.Context) ChannelFacebookMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelFacebookMapOutput)
}

type ChannelFacebookOutput struct{ *pulumi.OutputState }

func (ChannelFacebookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelFacebook)(nil)).Elem()
}

func (o ChannelFacebookOutput) ToChannelFacebookOutput() ChannelFacebookOutput {
	return o
}

func (o ChannelFacebookOutput) ToChannelFacebookOutputWithContext(ctx context.Context) ChannelFacebookOutput {
	return o
}

// The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
func (o ChannelFacebookOutput) BotName() pulumi.StringOutput {
	return o.ApplyT(func(v *ChannelFacebook) pulumi.StringOutput { return v.BotName }).(pulumi.StringOutput)
}

// The Facebook Application ID for the Facebook Channel.
func (o ChannelFacebookOutput) FacebookApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *ChannelFacebook) pulumi.StringOutput { return v.FacebookApplicationId }).(pulumi.StringOutput)
}

// The Facebook Application Secret for the Facebook Channel.
func (o ChannelFacebookOutput) FacebookApplicationSecret() pulumi.StringOutput {
	return o.ApplyT(func(v *ChannelFacebook) pulumi.StringOutput { return v.FacebookApplicationSecret }).(pulumi.StringOutput)
}

// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
func (o ChannelFacebookOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ChannelFacebook) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// One or more `page` blocks as defined below.
func (o ChannelFacebookOutput) Pages() ChannelFacebookPageArrayOutput {
	return o.ApplyT(func(v *ChannelFacebook) ChannelFacebookPageArrayOutput { return v.Pages }).(ChannelFacebookPageArrayOutput)
}

// The name of the resource group where the Facebook Channel should be created. Changing this forces a new resource to be created.
func (o ChannelFacebookOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *ChannelFacebook) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

type ChannelFacebookArrayOutput struct{ *pulumi.OutputState }

func (ChannelFacebookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ChannelFacebook)(nil)).Elem()
}

func (o ChannelFacebookArrayOutput) ToChannelFacebookArrayOutput() ChannelFacebookArrayOutput {
	return o
}

func (o ChannelFacebookArrayOutput) ToChannelFacebookArrayOutputWithContext(ctx context.Context) ChannelFacebookArrayOutput {
	return o
}

func (o ChannelFacebookArrayOutput) Index(i pulumi.IntInput) ChannelFacebookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ChannelFacebook {
		return vs[0].([]*ChannelFacebook)[vs[1].(int)]
	}).(ChannelFacebookOutput)
}

type ChannelFacebookMapOutput struct{ *pulumi.OutputState }

func (ChannelFacebookMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ChannelFacebook)(nil)).Elem()
}

func (o ChannelFacebookMapOutput) ToChannelFacebookMapOutput() ChannelFacebookMapOutput {
	return o
}

func (o ChannelFacebookMapOutput) ToChannelFacebookMapOutputWithContext(ctx context.Context) ChannelFacebookMapOutput {
	return o
}

func (o ChannelFacebookMapOutput) MapIndex(k pulumi.StringInput) ChannelFacebookOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ChannelFacebook {
		return vs[0].(map[string]*ChannelFacebook)[vs[1].(string)]
	}).(ChannelFacebookOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelFacebookInput)(nil)).Elem(), &ChannelFacebook{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelFacebookArrayInput)(nil)).Elem(), ChannelFacebookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelFacebookMapInput)(nil)).Elem(), ChannelFacebookMap{})
	pulumi.RegisterOutputType(ChannelFacebookOutput{})
	pulumi.RegisterOutputType(ChannelFacebookArrayOutput{})
	pulumi.RegisterOutputType(ChannelFacebookMapOutput{})
}
