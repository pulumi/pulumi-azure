// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package bot

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages a Bot Connection.
type Connection struct {
	pulumi.CustomResourceState

	// The name of the Bot Resource this connection will be associated with. Changing this forces a new resource to be created.
	BotName pulumi.StringOutput `pulumi:"botName"`
	// The Client ID that will be used to authenticate with the service provider.
	ClientId pulumi.StringOutput `pulumi:"clientId"`
	// The Client Secret that will be used to authenticate with the service provider.
	ClientSecret pulumi.StringOutput `pulumi:"clientSecret"`
	// The supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// Specifies the name of the Bot Connection. Changing this forces a new resource to be created. Must be globally unique.
	Name pulumi.StringOutput `pulumi:"name"`
	// A map of additional parameters to apply to the connection.
	Parameters pulumi.StringMapOutput `pulumi:"parameters"`
	// The name of the resource group in which to create the Bot Connection. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The Scopes at which the connection should be applied.
	Scopes pulumi.StringPtrOutput `pulumi:"scopes"`
	// The name of the service provider that will be associated with this connection. Changing this forces a new resource to be created.
	ServiceProviderName pulumi.StringOutput `pulumi:"serviceProviderName"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewConnection registers a new resource with the given unique name, arguments, and options.
func NewConnection(ctx *pulumi.Context,
	name string, args *ConnectionArgs, opts ...pulumi.ResourceOption) (*Connection, error) {
	if args == nil || args.BotName == nil {
		return nil, errors.New("missing required argument 'BotName'")
	}
	if args == nil || args.ClientId == nil {
		return nil, errors.New("missing required argument 'ClientId'")
	}
	if args == nil || args.ClientSecret == nil {
		return nil, errors.New("missing required argument 'ClientSecret'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.ServiceProviderName == nil {
		return nil, errors.New("missing required argument 'ServiceProviderName'")
	}
	if args == nil {
		args = &ConnectionArgs{}
	}
	var resource Connection
	err := ctx.RegisterResource("azure:bot/connection:Connection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnection gets an existing Connection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConnectionState, opts ...pulumi.ResourceOption) (*Connection, error) {
	var resource Connection
	err := ctx.ReadResource("azure:bot/connection:Connection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Connection resources.
type connectionState struct {
	// The name of the Bot Resource this connection will be associated with. Changing this forces a new resource to be created.
	BotName *string `pulumi:"botName"`
	// The Client ID that will be used to authenticate with the service provider.
	ClientId *string `pulumi:"clientId"`
	// The Client Secret that will be used to authenticate with the service provider.
	ClientSecret *string `pulumi:"clientSecret"`
	// The supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of the Bot Connection. Changing this forces a new resource to be created. Must be globally unique.
	Name *string `pulumi:"name"`
	// A map of additional parameters to apply to the connection.
	Parameters map[string]string `pulumi:"parameters"`
	// The name of the resource group in which to create the Bot Connection. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The Scopes at which the connection should be applied.
	Scopes *string `pulumi:"scopes"`
	// The name of the service provider that will be associated with this connection. Changing this forces a new resource to be created.
	ServiceProviderName *string `pulumi:"serviceProviderName"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

type ConnectionState struct {
	// The name of the Bot Resource this connection will be associated with. Changing this forces a new resource to be created.
	BotName pulumi.StringPtrInput
	// The Client ID that will be used to authenticate with the service provider.
	ClientId pulumi.StringPtrInput
	// The Client Secret that will be used to authenticate with the service provider.
	ClientSecret pulumi.StringPtrInput
	// The supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of the Bot Connection. Changing this forces a new resource to be created. Must be globally unique.
	Name pulumi.StringPtrInput
	// A map of additional parameters to apply to the connection.
	Parameters pulumi.StringMapInput
	// The name of the resource group in which to create the Bot Connection. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The Scopes at which the connection should be applied.
	Scopes pulumi.StringPtrInput
	// The name of the service provider that will be associated with this connection. Changing this forces a new resource to be created.
	ServiceProviderName pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
}

func (ConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionState)(nil)).Elem()
}

type connectionArgs struct {
	// The name of the Bot Resource this connection will be associated with. Changing this forces a new resource to be created.
	BotName string `pulumi:"botName"`
	// The Client ID that will be used to authenticate with the service provider.
	ClientId string `pulumi:"clientId"`
	// The Client Secret that will be used to authenticate with the service provider.
	ClientSecret string `pulumi:"clientSecret"`
	// The supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of the Bot Connection. Changing this forces a new resource to be created. Must be globally unique.
	Name *string `pulumi:"name"`
	// A map of additional parameters to apply to the connection.
	Parameters map[string]string `pulumi:"parameters"`
	// The name of the resource group in which to create the Bot Connection. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The Scopes at which the connection should be applied.
	Scopes *string `pulumi:"scopes"`
	// The name of the service provider that will be associated with this connection. Changing this forces a new resource to be created.
	ServiceProviderName string `pulumi:"serviceProviderName"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Connection resource.
type ConnectionArgs struct {
	// The name of the Bot Resource this connection will be associated with. Changing this forces a new resource to be created.
	BotName pulumi.StringInput
	// The Client ID that will be used to authenticate with the service provider.
	ClientId pulumi.StringInput
	// The Client Secret that will be used to authenticate with the service provider.
	ClientSecret pulumi.StringInput
	// The supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of the Bot Connection. Changing this forces a new resource to be created. Must be globally unique.
	Name pulumi.StringPtrInput
	// A map of additional parameters to apply to the connection.
	Parameters pulumi.StringMapInput
	// The name of the resource group in which to create the Bot Connection. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// The Scopes at which the connection should be applied.
	Scopes pulumi.StringPtrInput
	// The name of the service provider that will be associated with this connection. Changing this forces a new resource to be created.
	ServiceProviderName pulumi.StringInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
}

func (ConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionArgs)(nil)).Elem()
}
