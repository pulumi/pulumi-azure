// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package bot

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a Bot Channels Registration.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/bot_channels_registration.html.markdown.
type ChannelsRegistration struct {
	s *pulumi.ResourceState
}

// NewChannelsRegistration registers a new resource with the given unique name, arguments, and options.
func NewChannelsRegistration(ctx *pulumi.Context,
	name string, args *ChannelsRegistrationArgs, opts ...pulumi.ResourceOpt) (*ChannelsRegistration, error) {
	if args == nil || args.MicrosoftAppId == nil {
		return nil, errors.New("missing required argument 'MicrosoftAppId'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.Sku == nil {
		return nil, errors.New("missing required argument 'Sku'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["developerAppInsightsApiKey"] = nil
		inputs["developerAppInsightsApplicationId"] = nil
		inputs["developerAppInsightsKey"] = nil
		inputs["displayName"] = nil
		inputs["endpoint"] = nil
		inputs["location"] = nil
		inputs["microsoftAppId"] = nil
		inputs["name"] = nil
		inputs["resourceGroupName"] = nil
		inputs["sku"] = nil
		inputs["tags"] = nil
	} else {
		inputs["developerAppInsightsApiKey"] = args.DeveloperAppInsightsApiKey
		inputs["developerAppInsightsApplicationId"] = args.DeveloperAppInsightsApplicationId
		inputs["developerAppInsightsKey"] = args.DeveloperAppInsightsKey
		inputs["displayName"] = args.DisplayName
		inputs["endpoint"] = args.Endpoint
		inputs["location"] = args.Location
		inputs["microsoftAppId"] = args.MicrosoftAppId
		inputs["name"] = args.Name
		inputs["resourceGroupName"] = args.ResourceGroupName
		inputs["sku"] = args.Sku
		inputs["tags"] = args.Tags
	}
	s, err := ctx.RegisterResource("azure:bot/channelsRegistration:ChannelsRegistration", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ChannelsRegistration{s: s}, nil
}

// GetChannelsRegistration gets an existing ChannelsRegistration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetChannelsRegistration(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ChannelsRegistrationState, opts ...pulumi.ResourceOpt) (*ChannelsRegistration, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["developerAppInsightsApiKey"] = state.DeveloperAppInsightsApiKey
		inputs["developerAppInsightsApplicationId"] = state.DeveloperAppInsightsApplicationId
		inputs["developerAppInsightsKey"] = state.DeveloperAppInsightsKey
		inputs["displayName"] = state.DisplayName
		inputs["endpoint"] = state.Endpoint
		inputs["location"] = state.Location
		inputs["microsoftAppId"] = state.MicrosoftAppId
		inputs["name"] = state.Name
		inputs["resourceGroupName"] = state.ResourceGroupName
		inputs["sku"] = state.Sku
		inputs["tags"] = state.Tags
	}
	s, err := ctx.ReadResource("azure:bot/channelsRegistration:ChannelsRegistration", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ChannelsRegistration{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *ChannelsRegistration) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *ChannelsRegistration) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The Application Insights API Key to associate with the Bot Channels Registration.
func (r *ChannelsRegistration) DeveloperAppInsightsApiKey() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["developerAppInsightsApiKey"])
}

// The Application Insights Application ID to associate with the Bot Channels Registration.
func (r *ChannelsRegistration) DeveloperAppInsightsApplicationId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["developerAppInsightsApplicationId"])
}

// The Application Insights Key to associate with the Bot Channels Registration.
func (r *ChannelsRegistration) DeveloperAppInsightsKey() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["developerAppInsightsKey"])
}

// The name of the Bot Channels Registration will be displayed as. This defaults to `name` if not specified. 
func (r *ChannelsRegistration) DisplayName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["displayName"])
}

// The Bot Channels Registration endpoint.
func (r *ChannelsRegistration) Endpoint() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["endpoint"])
}

// The supported Azure location where the resource exists. Changing this forces a new resource to be created.
func (r *ChannelsRegistration) Location() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["location"])
}

// The Microsoft Application ID for the Bot Channels Registration. Changing this forces a new resource to be created.
func (r *ChannelsRegistration) MicrosoftAppId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["microsoftAppId"])
}

// Specifies the name of the Bot Channels Registration. Changing this forces a new resource to be created. Must be globally unique.
func (r *ChannelsRegistration) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// The name of the resource group in which to create the Bot Channels Registration. Changing this forces a new resource to be created.
func (r *ChannelsRegistration) ResourceGroupName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["resourceGroupName"])
}

// The SKU of the Bot Channels Registration. Valid values include `F0` or `S1`. Changing this forces a new resource to be created.
func (r *ChannelsRegistration) Sku() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["sku"])
}

// A mapping of tags to assign to the resource.
func (r *ChannelsRegistration) Tags() pulumi.MapOutput {
	return (pulumi.MapOutput)(r.s.State["tags"])
}

// Input properties used for looking up and filtering ChannelsRegistration resources.
type ChannelsRegistrationState struct {
	// The Application Insights API Key to associate with the Bot Channels Registration.
	DeveloperAppInsightsApiKey interface{}
	// The Application Insights Application ID to associate with the Bot Channels Registration.
	DeveloperAppInsightsApplicationId interface{}
	// The Application Insights Key to associate with the Bot Channels Registration.
	DeveloperAppInsightsKey interface{}
	// The name of the Bot Channels Registration will be displayed as. This defaults to `name` if not specified. 
	DisplayName interface{}
	// The Bot Channels Registration endpoint.
	Endpoint interface{}
	// The supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location interface{}
	// The Microsoft Application ID for the Bot Channels Registration. Changing this forces a new resource to be created.
	MicrosoftAppId interface{}
	// Specifies the name of the Bot Channels Registration. Changing this forces a new resource to be created. Must be globally unique.
	Name interface{}
	// The name of the resource group in which to create the Bot Channels Registration. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// The SKU of the Bot Channels Registration. Valid values include `F0` or `S1`. Changing this forces a new resource to be created.
	Sku interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
}

// The set of arguments for constructing a ChannelsRegistration resource.
type ChannelsRegistrationArgs struct {
	// The Application Insights API Key to associate with the Bot Channels Registration.
	DeveloperAppInsightsApiKey interface{}
	// The Application Insights Application ID to associate with the Bot Channels Registration.
	DeveloperAppInsightsApplicationId interface{}
	// The Application Insights Key to associate with the Bot Channels Registration.
	DeveloperAppInsightsKey interface{}
	// The name of the Bot Channels Registration will be displayed as. This defaults to `name` if not specified. 
	DisplayName interface{}
	// The Bot Channels Registration endpoint.
	Endpoint interface{}
	// The supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location interface{}
	// The Microsoft Application ID for the Bot Channels Registration. Changing this forces a new resource to be created.
	MicrosoftAppId interface{}
	// Specifies the name of the Bot Channels Registration. Changing this forces a new resource to be created. Must be globally unique.
	Name interface{}
	// The name of the resource group in which to create the Bot Channels Registration. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// The SKU of the Bot Channels Registration. Valid values include `F0` or `S1`. Changing this forces a new resource to be created.
	Sku interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
}
