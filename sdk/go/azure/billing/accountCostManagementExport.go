// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package billing

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Cost Management Export for a Billing Account.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/billing"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleAccount, err := storage.NewAccount(ctx, "exampleAccount", &storage.AccountArgs{
//				ResourceGroupName:      exampleResourceGroup.Name,
//				Location:               exampleResourceGroup.Location,
//				AccountTier:            pulumi.String("Standard"),
//				AccountReplicationType: pulumi.String("LRS"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleContainer, err := storage.NewContainer(ctx, "exampleContainer", &storage.ContainerArgs{
//				StorageAccountName: exampleAccount.Name,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = billing.NewAccountCostManagementExport(ctx, "exampleAccountCostManagementExport", &billing.AccountCostManagementExportArgs{
//				BillingAccountId:          pulumi.String("example"),
//				RecurrenceType:            pulumi.String("Monthly"),
//				RecurrencePeriodStartDate: pulumi.String("2020-08-18T00:00:00Z"),
//				RecurrencePeriodEndDate:   pulumi.String("2020-09-18T00:00:00Z"),
//				ExportDataStorageLocation: &billing.AccountCostManagementExportExportDataStorageLocationArgs{
//					ContainerId:    exampleContainer.ResourceManagerId,
//					RootFolderPath: pulumi.String("/root/updated"),
//				},
//				ExportDataOptions: &billing.AccountCostManagementExportExportDataOptionsArgs{
//					Type:      pulumi.String("Usage"),
//					TimeFrame: pulumi.String("WeekToDate"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Billing Account Cost Management Exports can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:billing/accountCostManagementExport:AccountCostManagementExport example /providers/Microsoft.Billing/billingAccounts/12345678/providers/Microsoft.CostManagement/exports/export1
//
// ```
type AccountCostManagementExport struct {
	pulumi.CustomResourceState

	// Is the cost management export active? Default is `true`.
	Active pulumi.BoolPtrOutput `pulumi:"active"`
	// The id of the billing account on which to create an export. Changing this forces a new resource to be created.
	BillingAccountId pulumi.StringOutput `pulumi:"billingAccountId"`
	// A `exportDataOptions` block as defined below.
	ExportDataOptions AccountCostManagementExportExportDataOptionsOutput `pulumi:"exportDataOptions"`
	// A `exportDataStorageLocation` block as defined below.
	ExportDataStorageLocation AccountCostManagementExportExportDataStorageLocationOutput `pulumi:"exportDataStorageLocation"`
	// Specifies the name of the Cost Management Export. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The date the export will stop capturing information.
	RecurrencePeriodEndDate pulumi.StringOutput `pulumi:"recurrencePeriodEndDate"`
	// The date the export will start capturing information.
	RecurrencePeriodStartDate pulumi.StringOutput `pulumi:"recurrencePeriodStartDate"`
	// How often the requested information will be exported. Valid values include `Annually`, `Daily`, `Monthly`, `Weekly`.
	RecurrenceType pulumi.StringOutput `pulumi:"recurrenceType"`
}

// NewAccountCostManagementExport registers a new resource with the given unique name, arguments, and options.
func NewAccountCostManagementExport(ctx *pulumi.Context,
	name string, args *AccountCostManagementExportArgs, opts ...pulumi.ResourceOption) (*AccountCostManagementExport, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BillingAccountId == nil {
		return nil, errors.New("invalid value for required argument 'BillingAccountId'")
	}
	if args.ExportDataOptions == nil {
		return nil, errors.New("invalid value for required argument 'ExportDataOptions'")
	}
	if args.ExportDataStorageLocation == nil {
		return nil, errors.New("invalid value for required argument 'ExportDataStorageLocation'")
	}
	if args.RecurrencePeriodEndDate == nil {
		return nil, errors.New("invalid value for required argument 'RecurrencePeriodEndDate'")
	}
	if args.RecurrencePeriodStartDate == nil {
		return nil, errors.New("invalid value for required argument 'RecurrencePeriodStartDate'")
	}
	if args.RecurrenceType == nil {
		return nil, errors.New("invalid value for required argument 'RecurrenceType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AccountCostManagementExport
	err := ctx.RegisterResource("azure:billing/accountCostManagementExport:AccountCostManagementExport", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountCostManagementExport gets an existing AccountCostManagementExport resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountCostManagementExport(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountCostManagementExportState, opts ...pulumi.ResourceOption) (*AccountCostManagementExport, error) {
	var resource AccountCostManagementExport
	err := ctx.ReadResource("azure:billing/accountCostManagementExport:AccountCostManagementExport", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountCostManagementExport resources.
type accountCostManagementExportState struct {
	// Is the cost management export active? Default is `true`.
	Active *bool `pulumi:"active"`
	// The id of the billing account on which to create an export. Changing this forces a new resource to be created.
	BillingAccountId *string `pulumi:"billingAccountId"`
	// A `exportDataOptions` block as defined below.
	ExportDataOptions *AccountCostManagementExportExportDataOptions `pulumi:"exportDataOptions"`
	// A `exportDataStorageLocation` block as defined below.
	ExportDataStorageLocation *AccountCostManagementExportExportDataStorageLocation `pulumi:"exportDataStorageLocation"`
	// Specifies the name of the Cost Management Export. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The date the export will stop capturing information.
	RecurrencePeriodEndDate *string `pulumi:"recurrencePeriodEndDate"`
	// The date the export will start capturing information.
	RecurrencePeriodStartDate *string `pulumi:"recurrencePeriodStartDate"`
	// How often the requested information will be exported. Valid values include `Annually`, `Daily`, `Monthly`, `Weekly`.
	RecurrenceType *string `pulumi:"recurrenceType"`
}

type AccountCostManagementExportState struct {
	// Is the cost management export active? Default is `true`.
	Active pulumi.BoolPtrInput
	// The id of the billing account on which to create an export. Changing this forces a new resource to be created.
	BillingAccountId pulumi.StringPtrInput
	// A `exportDataOptions` block as defined below.
	ExportDataOptions AccountCostManagementExportExportDataOptionsPtrInput
	// A `exportDataStorageLocation` block as defined below.
	ExportDataStorageLocation AccountCostManagementExportExportDataStorageLocationPtrInput
	// Specifies the name of the Cost Management Export. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The date the export will stop capturing information.
	RecurrencePeriodEndDate pulumi.StringPtrInput
	// The date the export will start capturing information.
	RecurrencePeriodStartDate pulumi.StringPtrInput
	// How often the requested information will be exported. Valid values include `Annually`, `Daily`, `Monthly`, `Weekly`.
	RecurrenceType pulumi.StringPtrInput
}

func (AccountCostManagementExportState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountCostManagementExportState)(nil)).Elem()
}

type accountCostManagementExportArgs struct {
	// Is the cost management export active? Default is `true`.
	Active *bool `pulumi:"active"`
	// The id of the billing account on which to create an export. Changing this forces a new resource to be created.
	BillingAccountId string `pulumi:"billingAccountId"`
	// A `exportDataOptions` block as defined below.
	ExportDataOptions AccountCostManagementExportExportDataOptions `pulumi:"exportDataOptions"`
	// A `exportDataStorageLocation` block as defined below.
	ExportDataStorageLocation AccountCostManagementExportExportDataStorageLocation `pulumi:"exportDataStorageLocation"`
	// Specifies the name of the Cost Management Export. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The date the export will stop capturing information.
	RecurrencePeriodEndDate string `pulumi:"recurrencePeriodEndDate"`
	// The date the export will start capturing information.
	RecurrencePeriodStartDate string `pulumi:"recurrencePeriodStartDate"`
	// How often the requested information will be exported. Valid values include `Annually`, `Daily`, `Monthly`, `Weekly`.
	RecurrenceType string `pulumi:"recurrenceType"`
}

// The set of arguments for constructing a AccountCostManagementExport resource.
type AccountCostManagementExportArgs struct {
	// Is the cost management export active? Default is `true`.
	Active pulumi.BoolPtrInput
	// The id of the billing account on which to create an export. Changing this forces a new resource to be created.
	BillingAccountId pulumi.StringInput
	// A `exportDataOptions` block as defined below.
	ExportDataOptions AccountCostManagementExportExportDataOptionsInput
	// A `exportDataStorageLocation` block as defined below.
	ExportDataStorageLocation AccountCostManagementExportExportDataStorageLocationInput
	// Specifies the name of the Cost Management Export. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The date the export will stop capturing information.
	RecurrencePeriodEndDate pulumi.StringInput
	// The date the export will start capturing information.
	RecurrencePeriodStartDate pulumi.StringInput
	// How often the requested information will be exported. Valid values include `Annually`, `Daily`, `Monthly`, `Weekly`.
	RecurrenceType pulumi.StringInput
}

func (AccountCostManagementExportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountCostManagementExportArgs)(nil)).Elem()
}

type AccountCostManagementExportInput interface {
	pulumi.Input

	ToAccountCostManagementExportOutput() AccountCostManagementExportOutput
	ToAccountCostManagementExportOutputWithContext(ctx context.Context) AccountCostManagementExportOutput
}

func (*AccountCostManagementExport) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountCostManagementExport)(nil)).Elem()
}

func (i *AccountCostManagementExport) ToAccountCostManagementExportOutput() AccountCostManagementExportOutput {
	return i.ToAccountCostManagementExportOutputWithContext(context.Background())
}

func (i *AccountCostManagementExport) ToAccountCostManagementExportOutputWithContext(ctx context.Context) AccountCostManagementExportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountCostManagementExportOutput)
}

// AccountCostManagementExportArrayInput is an input type that accepts AccountCostManagementExportArray and AccountCostManagementExportArrayOutput values.
// You can construct a concrete instance of `AccountCostManagementExportArrayInput` via:
//
//	AccountCostManagementExportArray{ AccountCostManagementExportArgs{...} }
type AccountCostManagementExportArrayInput interface {
	pulumi.Input

	ToAccountCostManagementExportArrayOutput() AccountCostManagementExportArrayOutput
	ToAccountCostManagementExportArrayOutputWithContext(context.Context) AccountCostManagementExportArrayOutput
}

type AccountCostManagementExportArray []AccountCostManagementExportInput

func (AccountCostManagementExportArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountCostManagementExport)(nil)).Elem()
}

func (i AccountCostManagementExportArray) ToAccountCostManagementExportArrayOutput() AccountCostManagementExportArrayOutput {
	return i.ToAccountCostManagementExportArrayOutputWithContext(context.Background())
}

func (i AccountCostManagementExportArray) ToAccountCostManagementExportArrayOutputWithContext(ctx context.Context) AccountCostManagementExportArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountCostManagementExportArrayOutput)
}

// AccountCostManagementExportMapInput is an input type that accepts AccountCostManagementExportMap and AccountCostManagementExportMapOutput values.
// You can construct a concrete instance of `AccountCostManagementExportMapInput` via:
//
//	AccountCostManagementExportMap{ "key": AccountCostManagementExportArgs{...} }
type AccountCostManagementExportMapInput interface {
	pulumi.Input

	ToAccountCostManagementExportMapOutput() AccountCostManagementExportMapOutput
	ToAccountCostManagementExportMapOutputWithContext(context.Context) AccountCostManagementExportMapOutput
}

type AccountCostManagementExportMap map[string]AccountCostManagementExportInput

func (AccountCostManagementExportMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountCostManagementExport)(nil)).Elem()
}

func (i AccountCostManagementExportMap) ToAccountCostManagementExportMapOutput() AccountCostManagementExportMapOutput {
	return i.ToAccountCostManagementExportMapOutputWithContext(context.Background())
}

func (i AccountCostManagementExportMap) ToAccountCostManagementExportMapOutputWithContext(ctx context.Context) AccountCostManagementExportMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountCostManagementExportMapOutput)
}

type AccountCostManagementExportOutput struct{ *pulumi.OutputState }

func (AccountCostManagementExportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountCostManagementExport)(nil)).Elem()
}

func (o AccountCostManagementExportOutput) ToAccountCostManagementExportOutput() AccountCostManagementExportOutput {
	return o
}

func (o AccountCostManagementExportOutput) ToAccountCostManagementExportOutputWithContext(ctx context.Context) AccountCostManagementExportOutput {
	return o
}

// Is the cost management export active? Default is `true`.
func (o AccountCostManagementExportOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccountCostManagementExport) pulumi.BoolPtrOutput { return v.Active }).(pulumi.BoolPtrOutput)
}

// The id of the billing account on which to create an export. Changing this forces a new resource to be created.
func (o AccountCostManagementExportOutput) BillingAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountCostManagementExport) pulumi.StringOutput { return v.BillingAccountId }).(pulumi.StringOutput)
}

// A `exportDataOptions` block as defined below.
func (o AccountCostManagementExportOutput) ExportDataOptions() AccountCostManagementExportExportDataOptionsOutput {
	return o.ApplyT(func(v *AccountCostManagementExport) AccountCostManagementExportExportDataOptionsOutput {
		return v.ExportDataOptions
	}).(AccountCostManagementExportExportDataOptionsOutput)
}

// A `exportDataStorageLocation` block as defined below.
func (o AccountCostManagementExportOutput) ExportDataStorageLocation() AccountCostManagementExportExportDataStorageLocationOutput {
	return o.ApplyT(func(v *AccountCostManagementExport) AccountCostManagementExportExportDataStorageLocationOutput {
		return v.ExportDataStorageLocation
	}).(AccountCostManagementExportExportDataStorageLocationOutput)
}

// Specifies the name of the Cost Management Export. Changing this forces a new resource to be created.
func (o AccountCostManagementExportOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountCostManagementExport) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The date the export will stop capturing information.
func (o AccountCostManagementExportOutput) RecurrencePeriodEndDate() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountCostManagementExport) pulumi.StringOutput { return v.RecurrencePeriodEndDate }).(pulumi.StringOutput)
}

// The date the export will start capturing information.
func (o AccountCostManagementExportOutput) RecurrencePeriodStartDate() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountCostManagementExport) pulumi.StringOutput { return v.RecurrencePeriodStartDate }).(pulumi.StringOutput)
}

// How often the requested information will be exported. Valid values include `Annually`, `Daily`, `Monthly`, `Weekly`.
func (o AccountCostManagementExportOutput) RecurrenceType() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountCostManagementExport) pulumi.StringOutput { return v.RecurrenceType }).(pulumi.StringOutput)
}

type AccountCostManagementExportArrayOutput struct{ *pulumi.OutputState }

func (AccountCostManagementExportArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountCostManagementExport)(nil)).Elem()
}

func (o AccountCostManagementExportArrayOutput) ToAccountCostManagementExportArrayOutput() AccountCostManagementExportArrayOutput {
	return o
}

func (o AccountCostManagementExportArrayOutput) ToAccountCostManagementExportArrayOutputWithContext(ctx context.Context) AccountCostManagementExportArrayOutput {
	return o
}

func (o AccountCostManagementExportArrayOutput) Index(i pulumi.IntInput) AccountCostManagementExportOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccountCostManagementExport {
		return vs[0].([]*AccountCostManagementExport)[vs[1].(int)]
	}).(AccountCostManagementExportOutput)
}

type AccountCostManagementExportMapOutput struct{ *pulumi.OutputState }

func (AccountCostManagementExportMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountCostManagementExport)(nil)).Elem()
}

func (o AccountCostManagementExportMapOutput) ToAccountCostManagementExportMapOutput() AccountCostManagementExportMapOutput {
	return o
}

func (o AccountCostManagementExportMapOutput) ToAccountCostManagementExportMapOutputWithContext(ctx context.Context) AccountCostManagementExportMapOutput {
	return o
}

func (o AccountCostManagementExportMapOutput) MapIndex(k pulumi.StringInput) AccountCostManagementExportOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccountCostManagementExport {
		return vs[0].(map[string]*AccountCostManagementExport)[vs[1].(string)]
	}).(AccountCostManagementExportOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountCostManagementExportInput)(nil)).Elem(), &AccountCostManagementExport{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountCostManagementExportArrayInput)(nil)).Elem(), AccountCostManagementExportArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountCostManagementExportMapInput)(nil)).Elem(), AccountCostManagementExportMap{})
	pulumi.RegisterOutputType(AccountCostManagementExportOutput{})
	pulumi.RegisterOutputType(AccountCostManagementExportArrayOutput{})
	pulumi.RegisterOutputType(AccountCostManagementExportMapOutput{})
}
