// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package postgresql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ServerSku struct {
	Capacity int `pulumi:"capacity"`
	Family string `pulumi:"family"`
	// Specifies the name of the PostgreSQL Server. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
	Tier string `pulumi:"tier"`
}

type ServerSkuInput interface {
	pulumi.Input

	ToServerSkuOutput() ServerSkuOutput
	ToServerSkuOutputWithContext(context.Context) ServerSkuOutput
}

type ServerSkuArgs struct {
	Capacity pulumi.IntInput `pulumi:"capacity"`
	Family pulumi.StringInput `pulumi:"family"`
	// Specifies the name of the PostgreSQL Server. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (ServerSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerSku)(nil)).Elem()
}

func (i ServerSkuArgs) ToServerSkuOutput() ServerSkuOutput {
	return i.ToServerSkuOutputWithContext(context.Background())
}

func (i ServerSkuArgs) ToServerSkuOutputWithContext(ctx context.Context) ServerSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerSkuOutput)
}

func (i ServerSkuArgs) ToServerSkuPtrOutput() ServerSkuPtrOutput {
	return i.ToServerSkuPtrOutputWithContext(context.Background())
}

func (i ServerSkuArgs) ToServerSkuPtrOutputWithContext(ctx context.Context) ServerSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerSkuOutput).ToServerSkuPtrOutputWithContext(ctx)
}

type ServerSkuPtrInput interface {
	pulumi.Input

	ToServerSkuPtrOutput() ServerSkuPtrOutput
	ToServerSkuPtrOutputWithContext(context.Context) ServerSkuPtrOutput
}

type serverSkuPtrType ServerSkuArgs

func ServerSkuPtr(v *ServerSkuArgs) ServerSkuPtrInput {	return (*serverSkuPtrType)(v)
}

func (*serverSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerSku)(nil)).Elem()
}

func (i *serverSkuPtrType) ToServerSkuPtrOutput() ServerSkuPtrOutput {
	return i.ToServerSkuPtrOutputWithContext(context.Background())
}

func (i *serverSkuPtrType) ToServerSkuPtrOutputWithContext(ctx context.Context) ServerSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerSkuPtrOutput)
}

type ServerSkuOutput struct { *pulumi.OutputState }

func (ServerSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerSku)(nil)).Elem()
}

func (o ServerSkuOutput) ToServerSkuOutput() ServerSkuOutput {
	return o
}

func (o ServerSkuOutput) ToServerSkuOutputWithContext(ctx context.Context) ServerSkuOutput {
	return o
}

func (o ServerSkuOutput) ToServerSkuPtrOutput() ServerSkuPtrOutput {
	return o.ToServerSkuPtrOutputWithContext(context.Background())
}

func (o ServerSkuOutput) ToServerSkuPtrOutputWithContext(ctx context.Context) ServerSkuPtrOutput {
	return o.ApplyT(func(v ServerSku) *ServerSku {
		return &v
	}).(ServerSkuPtrOutput)
}
func (o ServerSkuOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func (v ServerSku) int { return v.Capacity }).(pulumi.IntOutput)
}

func (o ServerSkuOutput) Family() pulumi.StringOutput {
	return o.ApplyT(func (v ServerSku) string { return v.Family }).(pulumi.StringOutput)
}

// Specifies the name of the PostgreSQL Server. Changing this forces a new resource to be created.
func (o ServerSkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v ServerSku) string { return v.Name }).(pulumi.StringOutput)
}

func (o ServerSkuOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func (v ServerSku) string { return v.Tier }).(pulumi.StringOutput)
}

type ServerSkuPtrOutput struct { *pulumi.OutputState}

func (ServerSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerSku)(nil)).Elem()
}

func (o ServerSkuPtrOutput) ToServerSkuPtrOutput() ServerSkuPtrOutput {
	return o
}

func (o ServerSkuPtrOutput) ToServerSkuPtrOutputWithContext(ctx context.Context) ServerSkuPtrOutput {
	return o
}

func (o ServerSkuPtrOutput) Elem() ServerSkuOutput {
	return o.ApplyT(func (v *ServerSku) ServerSku { return *v }).(ServerSkuOutput)
}

func (o ServerSkuPtrOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func (v ServerSku) int { return v.Capacity }).(pulumi.IntOutput)
}

func (o ServerSkuPtrOutput) Family() pulumi.StringOutput {
	return o.ApplyT(func (v ServerSku) string { return v.Family }).(pulumi.StringOutput)
}

// Specifies the name of the PostgreSQL Server. Changing this forces a new resource to be created.
func (o ServerSkuPtrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v ServerSku) string { return v.Name }).(pulumi.StringOutput)
}

func (o ServerSkuPtrOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func (v ServerSku) string { return v.Tier }).(pulumi.StringOutput)
}

type ServerStorageProfile struct {
	// Enable/Disable auto-growing of the storage. Valid values for this property are `Enabled` or `Disabled`. Storage auto-grow prevents your server from running out of storage and becoming read-only. If storage auto grow is enabled, the storage automatically grows without impacting the workload. The default value if not explicitly specified is `Enabled`.  
	AutoGrow *string `pulumi:"autoGrow"`
	// Backup retention days for the server, supported values are between `7` and `35` days.
	BackupRetentionDays *int `pulumi:"backupRetentionDays"`
	// Enable/Disable Geo-redundant for server backup. Valid values for this property are `Enabled` or `Disabled`, not supported for the `basic` tier.  This allows you to choose between locally redundant or geo-redundant backup storage in the General Purpose and Memory Optimized tiers. When the backups are stored in geo-redundant backup storage, they are not only stored within the region in which your server is hosted, but are also replicated to a paired data center. This provides better protection and ability to restore your server in a different region in the event of a disaster. The Basic tier only offers locally redundant backup storage.
	GeoRedundantBackup *string `pulumi:"geoRedundantBackup"`
	// Max storage allowed for a server. Possible values are between `5120` MB(5GB) and `1048576` MB(1TB) for the Basic SKU and between `5120` MB(5GB) and `4194304` MB(4TB) for General Purpose/Memory Optimized SKUs. For more information see the [product documentation](https://docs.microsoft.com/en-us/rest/api/postgresql/servers/create#StorageProfile).
	StorageMb int `pulumi:"storageMb"`
}

type ServerStorageProfileInput interface {
	pulumi.Input

	ToServerStorageProfileOutput() ServerStorageProfileOutput
	ToServerStorageProfileOutputWithContext(context.Context) ServerStorageProfileOutput
}

type ServerStorageProfileArgs struct {
	// Enable/Disable auto-growing of the storage. Valid values for this property are `Enabled` or `Disabled`. Storage auto-grow prevents your server from running out of storage and becoming read-only. If storage auto grow is enabled, the storage automatically grows without impacting the workload. The default value if not explicitly specified is `Enabled`.  
	AutoGrow pulumi.StringPtrInput `pulumi:"autoGrow"`
	// Backup retention days for the server, supported values are between `7` and `35` days.
	BackupRetentionDays pulumi.IntPtrInput `pulumi:"backupRetentionDays"`
	// Enable/Disable Geo-redundant for server backup. Valid values for this property are `Enabled` or `Disabled`, not supported for the `basic` tier.  This allows you to choose between locally redundant or geo-redundant backup storage in the General Purpose and Memory Optimized tiers. When the backups are stored in geo-redundant backup storage, they are not only stored within the region in which your server is hosted, but are also replicated to a paired data center. This provides better protection and ability to restore your server in a different region in the event of a disaster. The Basic tier only offers locally redundant backup storage.
	GeoRedundantBackup pulumi.StringPtrInput `pulumi:"geoRedundantBackup"`
	// Max storage allowed for a server. Possible values are between `5120` MB(5GB) and `1048576` MB(1TB) for the Basic SKU and between `5120` MB(5GB) and `4194304` MB(4TB) for General Purpose/Memory Optimized SKUs. For more information see the [product documentation](https://docs.microsoft.com/en-us/rest/api/postgresql/servers/create#StorageProfile).
	StorageMb pulumi.IntInput `pulumi:"storageMb"`
}

func (ServerStorageProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerStorageProfile)(nil)).Elem()
}

func (i ServerStorageProfileArgs) ToServerStorageProfileOutput() ServerStorageProfileOutput {
	return i.ToServerStorageProfileOutputWithContext(context.Background())
}

func (i ServerStorageProfileArgs) ToServerStorageProfileOutputWithContext(ctx context.Context) ServerStorageProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerStorageProfileOutput)
}

func (i ServerStorageProfileArgs) ToServerStorageProfilePtrOutput() ServerStorageProfilePtrOutput {
	return i.ToServerStorageProfilePtrOutputWithContext(context.Background())
}

func (i ServerStorageProfileArgs) ToServerStorageProfilePtrOutputWithContext(ctx context.Context) ServerStorageProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerStorageProfileOutput).ToServerStorageProfilePtrOutputWithContext(ctx)
}

type ServerStorageProfilePtrInput interface {
	pulumi.Input

	ToServerStorageProfilePtrOutput() ServerStorageProfilePtrOutput
	ToServerStorageProfilePtrOutputWithContext(context.Context) ServerStorageProfilePtrOutput
}

type serverStorageProfilePtrType ServerStorageProfileArgs

func ServerStorageProfilePtr(v *ServerStorageProfileArgs) ServerStorageProfilePtrInput {	return (*serverStorageProfilePtrType)(v)
}

func (*serverStorageProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerStorageProfile)(nil)).Elem()
}

func (i *serverStorageProfilePtrType) ToServerStorageProfilePtrOutput() ServerStorageProfilePtrOutput {
	return i.ToServerStorageProfilePtrOutputWithContext(context.Background())
}

func (i *serverStorageProfilePtrType) ToServerStorageProfilePtrOutputWithContext(ctx context.Context) ServerStorageProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerStorageProfilePtrOutput)
}

type ServerStorageProfileOutput struct { *pulumi.OutputState }

func (ServerStorageProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerStorageProfile)(nil)).Elem()
}

func (o ServerStorageProfileOutput) ToServerStorageProfileOutput() ServerStorageProfileOutput {
	return o
}

func (o ServerStorageProfileOutput) ToServerStorageProfileOutputWithContext(ctx context.Context) ServerStorageProfileOutput {
	return o
}

func (o ServerStorageProfileOutput) ToServerStorageProfilePtrOutput() ServerStorageProfilePtrOutput {
	return o.ToServerStorageProfilePtrOutputWithContext(context.Background())
}

func (o ServerStorageProfileOutput) ToServerStorageProfilePtrOutputWithContext(ctx context.Context) ServerStorageProfilePtrOutput {
	return o.ApplyT(func(v ServerStorageProfile) *ServerStorageProfile {
		return &v
	}).(ServerStorageProfilePtrOutput)
}
// Enable/Disable auto-growing of the storage. Valid values for this property are `Enabled` or `Disabled`. Storage auto-grow prevents your server from running out of storage and becoming read-only. If storage auto grow is enabled, the storage automatically grows without impacting the workload. The default value if not explicitly specified is `Enabled`.  
func (o ServerStorageProfileOutput) AutoGrow() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServerStorageProfile) *string { return v.AutoGrow }).(pulumi.StringPtrOutput)
}

// Backup retention days for the server, supported values are between `7` and `35` days.
func (o ServerStorageProfileOutput) BackupRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServerStorageProfile) *int { return v.BackupRetentionDays }).(pulumi.IntPtrOutput)
}

// Enable/Disable Geo-redundant for server backup. Valid values for this property are `Enabled` or `Disabled`, not supported for the `basic` tier.  This allows you to choose between locally redundant or geo-redundant backup storage in the General Purpose and Memory Optimized tiers. When the backups are stored in geo-redundant backup storage, they are not only stored within the region in which your server is hosted, but are also replicated to a paired data center. This provides better protection and ability to restore your server in a different region in the event of a disaster. The Basic tier only offers locally redundant backup storage.
func (o ServerStorageProfileOutput) GeoRedundantBackup() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServerStorageProfile) *string { return v.GeoRedundantBackup }).(pulumi.StringPtrOutput)
}

// Max storage allowed for a server. Possible values are between `5120` MB(5GB) and `1048576` MB(1TB) for the Basic SKU and between `5120` MB(5GB) and `4194304` MB(4TB) for General Purpose/Memory Optimized SKUs. For more information see the [product documentation](https://docs.microsoft.com/en-us/rest/api/postgresql/servers/create#StorageProfile).
func (o ServerStorageProfileOutput) StorageMb() pulumi.IntOutput {
	return o.ApplyT(func (v ServerStorageProfile) int { return v.StorageMb }).(pulumi.IntOutput)
}

type ServerStorageProfilePtrOutput struct { *pulumi.OutputState}

func (ServerStorageProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerStorageProfile)(nil)).Elem()
}

func (o ServerStorageProfilePtrOutput) ToServerStorageProfilePtrOutput() ServerStorageProfilePtrOutput {
	return o
}

func (o ServerStorageProfilePtrOutput) ToServerStorageProfilePtrOutputWithContext(ctx context.Context) ServerStorageProfilePtrOutput {
	return o
}

func (o ServerStorageProfilePtrOutput) Elem() ServerStorageProfileOutput {
	return o.ApplyT(func (v *ServerStorageProfile) ServerStorageProfile { return *v }).(ServerStorageProfileOutput)
}

// Enable/Disable auto-growing of the storage. Valid values for this property are `Enabled` or `Disabled`. Storage auto-grow prevents your server from running out of storage and becoming read-only. If storage auto grow is enabled, the storage automatically grows without impacting the workload. The default value if not explicitly specified is `Enabled`.  
func (o ServerStorageProfilePtrOutput) AutoGrow() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServerStorageProfile) *string { return v.AutoGrow }).(pulumi.StringPtrOutput)
}

// Backup retention days for the server, supported values are between `7` and `35` days.
func (o ServerStorageProfilePtrOutput) BackupRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServerStorageProfile) *int { return v.BackupRetentionDays }).(pulumi.IntPtrOutput)
}

// Enable/Disable Geo-redundant for server backup. Valid values for this property are `Enabled` or `Disabled`, not supported for the `basic` tier.  This allows you to choose between locally redundant or geo-redundant backup storage in the General Purpose and Memory Optimized tiers. When the backups are stored in geo-redundant backup storage, they are not only stored within the region in which your server is hosted, but are also replicated to a paired data center. This provides better protection and ability to restore your server in a different region in the event of a disaster. The Basic tier only offers locally redundant backup storage.
func (o ServerStorageProfilePtrOutput) GeoRedundantBackup() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServerStorageProfile) *string { return v.GeoRedundantBackup }).(pulumi.StringPtrOutput)
}

// Max storage allowed for a server. Possible values are between `5120` MB(5GB) and `1048576` MB(1TB) for the Basic SKU and between `5120` MB(5GB) and `4194304` MB(4TB) for General Purpose/Memory Optimized SKUs. For more information see the [product documentation](https://docs.microsoft.com/en-us/rest/api/postgresql/servers/create#StorageProfile).
func (o ServerStorageProfilePtrOutput) StorageMb() pulumi.IntOutput {
	return o.ApplyT(func (v ServerStorageProfile) int { return v.StorageMb }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(ServerSkuOutput{})
	pulumi.RegisterOutputType(ServerSkuPtrOutput{})
	pulumi.RegisterOutputType(ServerStorageProfileOutput{})
	pulumi.RegisterOutputType(ServerStorageProfilePtrOutput{})
}
