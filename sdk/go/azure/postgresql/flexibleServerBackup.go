// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package postgresql

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a PostgreSQL Flexible Server Backup.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/postgresql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resources"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleFlexibleServer, err := postgresql.NewFlexibleServer(ctx, "example", &postgresql.FlexibleServerArgs{
//				Name:                  pulumi.String("example-fs"),
//				ResourceGroupName:     example.Name,
//				Location:              example.Location,
//				AdministratorLogin:    pulumi.String("adminTerraform"),
//				AdministratorPassword: pulumi.String("QAZwsx123"),
//				Version:               pulumi.String("12"),
//				SkuName:               pulumi.String("GP_Standard_D2s_v3"),
//				Zone:                  pulumi.String("2"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = postgresql.NewFlexibleServerBackup(ctx, "example", &postgresql.FlexibleServerBackupArgs{
//				Name:     pulumi.String("example-pfsb"),
//				ServerId: exampleFlexibleServer.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This resource uses the following Azure API Providers:
//
// * `Microsoft.DBforPostgreSQL` - 2024-08-01
//
// ## Import
//
// An existing PostgreSQL Flexible Server Backup can be imported into Pulumi using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:postgresql/flexibleServerBackup:FlexibleServerBackup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DBforPostgreSQL/flexibleServers/fs1/backups/backup1
// ```
type FlexibleServerBackup struct {
	pulumi.CustomResourceState

	// The Time (ISO8601 format) at which the backup was completed.
	CompletedTime pulumi.StringOutput `pulumi:"completedTime"`
	// Specifies the name of this PostgreSQL Flexible Server Backup. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the PostgreSQL Flexible Server from which to create this PostgreSQL Flexible Server Backup. Changing this forces a new resource to be created.
	ServerId pulumi.StringOutput `pulumi:"serverId"`
}

// NewFlexibleServerBackup registers a new resource with the given unique name, arguments, and options.
func NewFlexibleServerBackup(ctx *pulumi.Context,
	name string, args *FlexibleServerBackupArgs, opts ...pulumi.ResourceOption) (*FlexibleServerBackup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ServerId == nil {
		return nil, errors.New("invalid value for required argument 'ServerId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FlexibleServerBackup
	err := ctx.RegisterResource("azure:postgresql/flexibleServerBackup:FlexibleServerBackup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFlexibleServerBackup gets an existing FlexibleServerBackup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFlexibleServerBackup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FlexibleServerBackupState, opts ...pulumi.ResourceOption) (*FlexibleServerBackup, error) {
	var resource FlexibleServerBackup
	err := ctx.ReadResource("azure:postgresql/flexibleServerBackup:FlexibleServerBackup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FlexibleServerBackup resources.
type flexibleServerBackupState struct {
	// The Time (ISO8601 format) at which the backup was completed.
	CompletedTime *string `pulumi:"completedTime"`
	// Specifies the name of this PostgreSQL Flexible Server Backup. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The ID of the PostgreSQL Flexible Server from which to create this PostgreSQL Flexible Server Backup. Changing this forces a new resource to be created.
	ServerId *string `pulumi:"serverId"`
}

type FlexibleServerBackupState struct {
	// The Time (ISO8601 format) at which the backup was completed.
	CompletedTime pulumi.StringPtrInput
	// Specifies the name of this PostgreSQL Flexible Server Backup. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The ID of the PostgreSQL Flexible Server from which to create this PostgreSQL Flexible Server Backup. Changing this forces a new resource to be created.
	ServerId pulumi.StringPtrInput
}

func (FlexibleServerBackupState) ElementType() reflect.Type {
	return reflect.TypeOf((*flexibleServerBackupState)(nil)).Elem()
}

type flexibleServerBackupArgs struct {
	// Specifies the name of this PostgreSQL Flexible Server Backup. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The ID of the PostgreSQL Flexible Server from which to create this PostgreSQL Flexible Server Backup. Changing this forces a new resource to be created.
	ServerId string `pulumi:"serverId"`
}

// The set of arguments for constructing a FlexibleServerBackup resource.
type FlexibleServerBackupArgs struct {
	// Specifies the name of this PostgreSQL Flexible Server Backup. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The ID of the PostgreSQL Flexible Server from which to create this PostgreSQL Flexible Server Backup. Changing this forces a new resource to be created.
	ServerId pulumi.StringInput
}

func (FlexibleServerBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*flexibleServerBackupArgs)(nil)).Elem()
}

type FlexibleServerBackupInput interface {
	pulumi.Input

	ToFlexibleServerBackupOutput() FlexibleServerBackupOutput
	ToFlexibleServerBackupOutputWithContext(ctx context.Context) FlexibleServerBackupOutput
}

func (*FlexibleServerBackup) ElementType() reflect.Type {
	return reflect.TypeOf((**FlexibleServerBackup)(nil)).Elem()
}

func (i *FlexibleServerBackup) ToFlexibleServerBackupOutput() FlexibleServerBackupOutput {
	return i.ToFlexibleServerBackupOutputWithContext(context.Background())
}

func (i *FlexibleServerBackup) ToFlexibleServerBackupOutputWithContext(ctx context.Context) FlexibleServerBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlexibleServerBackupOutput)
}

// FlexibleServerBackupArrayInput is an input type that accepts FlexibleServerBackupArray and FlexibleServerBackupArrayOutput values.
// You can construct a concrete instance of `FlexibleServerBackupArrayInput` via:
//
//	FlexibleServerBackupArray{ FlexibleServerBackupArgs{...} }
type FlexibleServerBackupArrayInput interface {
	pulumi.Input

	ToFlexibleServerBackupArrayOutput() FlexibleServerBackupArrayOutput
	ToFlexibleServerBackupArrayOutputWithContext(context.Context) FlexibleServerBackupArrayOutput
}

type FlexibleServerBackupArray []FlexibleServerBackupInput

func (FlexibleServerBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FlexibleServerBackup)(nil)).Elem()
}

func (i FlexibleServerBackupArray) ToFlexibleServerBackupArrayOutput() FlexibleServerBackupArrayOutput {
	return i.ToFlexibleServerBackupArrayOutputWithContext(context.Background())
}

func (i FlexibleServerBackupArray) ToFlexibleServerBackupArrayOutputWithContext(ctx context.Context) FlexibleServerBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlexibleServerBackupArrayOutput)
}

// FlexibleServerBackupMapInput is an input type that accepts FlexibleServerBackupMap and FlexibleServerBackupMapOutput values.
// You can construct a concrete instance of `FlexibleServerBackupMapInput` via:
//
//	FlexibleServerBackupMap{ "key": FlexibleServerBackupArgs{...} }
type FlexibleServerBackupMapInput interface {
	pulumi.Input

	ToFlexibleServerBackupMapOutput() FlexibleServerBackupMapOutput
	ToFlexibleServerBackupMapOutputWithContext(context.Context) FlexibleServerBackupMapOutput
}

type FlexibleServerBackupMap map[string]FlexibleServerBackupInput

func (FlexibleServerBackupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FlexibleServerBackup)(nil)).Elem()
}

func (i FlexibleServerBackupMap) ToFlexibleServerBackupMapOutput() FlexibleServerBackupMapOutput {
	return i.ToFlexibleServerBackupMapOutputWithContext(context.Background())
}

func (i FlexibleServerBackupMap) ToFlexibleServerBackupMapOutputWithContext(ctx context.Context) FlexibleServerBackupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlexibleServerBackupMapOutput)
}

type FlexibleServerBackupOutput struct{ *pulumi.OutputState }

func (FlexibleServerBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlexibleServerBackup)(nil)).Elem()
}

func (o FlexibleServerBackupOutput) ToFlexibleServerBackupOutput() FlexibleServerBackupOutput {
	return o
}

func (o FlexibleServerBackupOutput) ToFlexibleServerBackupOutputWithContext(ctx context.Context) FlexibleServerBackupOutput {
	return o
}

// The Time (ISO8601 format) at which the backup was completed.
func (o FlexibleServerBackupOutput) CompletedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *FlexibleServerBackup) pulumi.StringOutput { return v.CompletedTime }).(pulumi.StringOutput)
}

// Specifies the name of this PostgreSQL Flexible Server Backup. Changing this forces a new resource to be created.
func (o FlexibleServerBackupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FlexibleServerBackup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the PostgreSQL Flexible Server from which to create this PostgreSQL Flexible Server Backup. Changing this forces a new resource to be created.
func (o FlexibleServerBackupOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v *FlexibleServerBackup) pulumi.StringOutput { return v.ServerId }).(pulumi.StringOutput)
}

type FlexibleServerBackupArrayOutput struct{ *pulumi.OutputState }

func (FlexibleServerBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FlexibleServerBackup)(nil)).Elem()
}

func (o FlexibleServerBackupArrayOutput) ToFlexibleServerBackupArrayOutput() FlexibleServerBackupArrayOutput {
	return o
}

func (o FlexibleServerBackupArrayOutput) ToFlexibleServerBackupArrayOutputWithContext(ctx context.Context) FlexibleServerBackupArrayOutput {
	return o
}

func (o FlexibleServerBackupArrayOutput) Index(i pulumi.IntInput) FlexibleServerBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FlexibleServerBackup {
		return vs[0].([]*FlexibleServerBackup)[vs[1].(int)]
	}).(FlexibleServerBackupOutput)
}

type FlexibleServerBackupMapOutput struct{ *pulumi.OutputState }

func (FlexibleServerBackupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FlexibleServerBackup)(nil)).Elem()
}

func (o FlexibleServerBackupMapOutput) ToFlexibleServerBackupMapOutput() FlexibleServerBackupMapOutput {
	return o
}

func (o FlexibleServerBackupMapOutput) ToFlexibleServerBackupMapOutputWithContext(ctx context.Context) FlexibleServerBackupMapOutput {
	return o
}

func (o FlexibleServerBackupMapOutput) MapIndex(k pulumi.StringInput) FlexibleServerBackupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FlexibleServerBackup {
		return vs[0].(map[string]*FlexibleServerBackup)[vs[1].(string)]
	}).(FlexibleServerBackupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FlexibleServerBackupInput)(nil)).Elem(), &FlexibleServerBackup{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlexibleServerBackupArrayInput)(nil)).Elem(), FlexibleServerBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlexibleServerBackupMapInput)(nil)).Elem(), FlexibleServerBackupMap{})
	pulumi.RegisterOutputType(FlexibleServerBackupOutput{})
	pulumi.RegisterOutputType(FlexibleServerBackupArrayOutput{})
	pulumi.RegisterOutputType(FlexibleServerBackupMapOutput{})
}
