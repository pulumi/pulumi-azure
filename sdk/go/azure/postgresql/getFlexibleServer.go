// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package postgresql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing PostgreSQL Flexible Server.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/postgresql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := postgresql.LookupFlexibleServer(ctx, &postgresql.LookupFlexibleServerArgs{
//				Name:              "existing-postgresql-fs",
//				ResourceGroupName: "existing-postgresql-resgroup",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", example.Id)
//			return nil
//		})
//	}
//
// ```
func LookupFlexibleServer(ctx *pulumi.Context, args *LookupFlexibleServerArgs, opts ...pulumi.InvokeOption) (*LookupFlexibleServerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFlexibleServerResult
	err := ctx.Invoke("azure:postgresql/getFlexibleServer:getFlexibleServer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFlexibleServer.
type LookupFlexibleServerArgs struct {
	// The name of this PostgreSQL Flexible Server.
	Name string `pulumi:"name"`
	// The name of the Resource Group where the PostgreSQL Flexible Server exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getFlexibleServer.
type LookupFlexibleServerResult struct {
	// The Administrator login for the PostgreSQL Flexible Server.
	AdministratorLogin string `pulumi:"administratorLogin"`
	// Is the storage auto grow for PostgreSQL Flexible Server enabled?
	AutoGrowEnabled bool `pulumi:"autoGrowEnabled"`
	// The backup retention days for the PostgreSQL Flexible Server.
	BackupRetentionDays int `pulumi:"backupRetentionDays"`
	// The ID of the virtual network subnet to create the PostgreSQL Flexible Server.
	DelegatedSubnetId string `pulumi:"delegatedSubnetId"`
	// The FQDN of the PostgreSQL Flexible Server.
	Fqdn string `pulumi:"fqdn"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Azure Region where the PostgreSQL Flexible Server exists.
	Location string `pulumi:"location"`
	Name     string `pulumi:"name"`
	// Is public network access enabled?
	PublicNetworkAccessEnabled bool   `pulumi:"publicNetworkAccessEnabled"`
	ResourceGroupName          string `pulumi:"resourceGroupName"`
	// The SKU Name for the PostgreSQL Flexible Server. The name of the SKU, follows the `tier` + `name` pattern (e.g. `B_Standard_B1ms`, `GP_Standard_D2s_v3`, `MO_Standard_E4s_v3`).
	SkuName string `pulumi:"skuName"`
	// The max storage allowed for the PostgreSQL Flexible Server.
	StorageMb int `pulumi:"storageMb"`
	// A mapping of tags assigned to the PostgreSQL Flexible Server.
	Tags map[string]string `pulumi:"tags"`
	// The version of PostgreSQL Flexible Server to use.
	Version string `pulumi:"version"`
}

func LookupFlexibleServerOutput(ctx *pulumi.Context, args LookupFlexibleServerOutputArgs, opts ...pulumi.InvokeOption) LookupFlexibleServerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFlexibleServerResult, error) {
			args := v.(LookupFlexibleServerArgs)
			r, err := LookupFlexibleServer(ctx, &args, opts...)
			var s LookupFlexibleServerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFlexibleServerResultOutput)
}

// A collection of arguments for invoking getFlexibleServer.
type LookupFlexibleServerOutputArgs struct {
	// The name of this PostgreSQL Flexible Server.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Resource Group where the PostgreSQL Flexible Server exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupFlexibleServerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFlexibleServerArgs)(nil)).Elem()
}

// A collection of values returned by getFlexibleServer.
type LookupFlexibleServerResultOutput struct{ *pulumi.OutputState }

func (LookupFlexibleServerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFlexibleServerResult)(nil)).Elem()
}

func (o LookupFlexibleServerResultOutput) ToLookupFlexibleServerResultOutput() LookupFlexibleServerResultOutput {
	return o
}

func (o LookupFlexibleServerResultOutput) ToLookupFlexibleServerResultOutputWithContext(ctx context.Context) LookupFlexibleServerResultOutput {
	return o
}

// The Administrator login for the PostgreSQL Flexible Server.
func (o LookupFlexibleServerResultOutput) AdministratorLogin() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlexibleServerResult) string { return v.AdministratorLogin }).(pulumi.StringOutput)
}

// Is the storage auto grow for PostgreSQL Flexible Server enabled?
func (o LookupFlexibleServerResultOutput) AutoGrowEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupFlexibleServerResult) bool { return v.AutoGrowEnabled }).(pulumi.BoolOutput)
}

// The backup retention days for the PostgreSQL Flexible Server.
func (o LookupFlexibleServerResultOutput) BackupRetentionDays() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFlexibleServerResult) int { return v.BackupRetentionDays }).(pulumi.IntOutput)
}

// The ID of the virtual network subnet to create the PostgreSQL Flexible Server.
func (o LookupFlexibleServerResultOutput) DelegatedSubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlexibleServerResult) string { return v.DelegatedSubnetId }).(pulumi.StringOutput)
}

// The FQDN of the PostgreSQL Flexible Server.
func (o LookupFlexibleServerResultOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlexibleServerResult) string { return v.Fqdn }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupFlexibleServerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlexibleServerResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Azure Region where the PostgreSQL Flexible Server exists.
func (o LookupFlexibleServerResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlexibleServerResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupFlexibleServerResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlexibleServerResult) string { return v.Name }).(pulumi.StringOutput)
}

// Is public network access enabled?
func (o LookupFlexibleServerResultOutput) PublicNetworkAccessEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupFlexibleServerResult) bool { return v.PublicNetworkAccessEnabled }).(pulumi.BoolOutput)
}

func (o LookupFlexibleServerResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlexibleServerResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The SKU Name for the PostgreSQL Flexible Server. The name of the SKU, follows the `tier` + `name` pattern (e.g. `B_Standard_B1ms`, `GP_Standard_D2s_v3`, `MO_Standard_E4s_v3`).
func (o LookupFlexibleServerResultOutput) SkuName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlexibleServerResult) string { return v.SkuName }).(pulumi.StringOutput)
}

// The max storage allowed for the PostgreSQL Flexible Server.
func (o LookupFlexibleServerResultOutput) StorageMb() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFlexibleServerResult) int { return v.StorageMb }).(pulumi.IntOutput)
}

// A mapping of tags assigned to the PostgreSQL Flexible Server.
func (o LookupFlexibleServerResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupFlexibleServerResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The version of PostgreSQL Flexible Server to use.
func (o LookupFlexibleServerResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlexibleServerResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFlexibleServerResultOutput{})
}
