// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package postgresql

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a PostgreSQL Flexible Server.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/postgresql"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/privatedns"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resources"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "example", &network.VirtualNetworkArgs{
//				Name:              pulumi.String("example-vn"),
//				Location:          example.Location,
//				ResourceGroupName: example.Name,
//				AddressSpaces: pulumi.StringArray{
//					pulumi.String("10.0.0.0/16"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleSubnet, err := network.NewSubnet(ctx, "example", &network.SubnetArgs{
//				Name:               pulumi.String("example-sn"),
//				ResourceGroupName:  example.Name,
//				VirtualNetworkName: exampleVirtualNetwork.Name,
//				AddressPrefixes: pulumi.StringArray{
//					pulumi.String("10.0.2.0/24"),
//				},
//				ServiceEndpoints: pulumi.StringArray{
//					pulumi.String("Microsoft.Storage"),
//				},
//				Delegations: network.SubnetDelegationArray{
//					&network.SubnetDelegationArgs{
//						Name: pulumi.String("fs"),
//						ServiceDelegation: &network.SubnetDelegationServiceDelegationArgs{
//							Name: pulumi.String("Microsoft.DBforPostgreSQL/flexibleServers"),
//							Actions: pulumi.StringArray{
//								pulumi.String("Microsoft.Network/virtualNetworks/subnets/join/action"),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleZone, err := privatedns.NewZone(ctx, "example", &privatedns.ZoneArgs{
//				Name:              pulumi.String("example.postgres.database.azure.com"),
//				ResourceGroupName: example.Name,
//			})
//			if err != nil {
//				return err
//			}
//			exampleZoneVirtualNetworkLink, err := privatedns.NewZoneVirtualNetworkLink(ctx, "example", &privatedns.ZoneVirtualNetworkLinkArgs{
//				Name:               pulumi.String("exampleVnetZone.com"),
//				PrivateDnsZoneName: exampleZone.Name,
//				VirtualNetworkId:   exampleVirtualNetwork.ID(),
//				ResourceGroupName:  example.Name,
//			}, pulumi.DependsOn([]pulumi.Resource{
//				exampleSubnet,
//			}))
//			if err != nil {
//				return err
//			}
//			_, err = postgresql.NewFlexibleServer(ctx, "example", &postgresql.FlexibleServerArgs{
//				Name:                       pulumi.String("example-psqlflexibleserver"),
//				ResourceGroupName:          example.Name,
//				Location:                   example.Location,
//				Version:                    pulumi.String("12"),
//				DelegatedSubnetId:          exampleSubnet.ID(),
//				PrivateDnsZoneId:           exampleZone.ID(),
//				PublicNetworkAccessEnabled: pulumi.Bool(false),
//				AdministratorLogin:         pulumi.String("psqladmin"),
//				AdministratorPassword:      pulumi.String("H@Sh1CoR3!"),
//				Zone:                       pulumi.String("1"),
//				StorageMb:                  pulumi.Int(32768),
//				StorageTier:                pulumi.String("P30"),
//				SkuName:                    pulumi.String("GP_Standard_D4s_v3"),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				exampleZoneVirtualNetworkLink,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## `storageTier` defaults based on `storageMb`
//
// | `storageMb` | GiB   | TiB | Default | Supported `storageTier`'s           | Provisioned `IOPS`  |
// |:------------:|:-----:|:---:|:-------:|:------------------------------------:|:-------------------:|
// | 32768        | 32    |  -  | P4      | P4, P6, P10, P15, P20, P30, P40, P50 | 120                 |
// | 65536        | 64    |  -  | P6      | P6, P10, P15, P20, P30, P40, P50     | 240                 |
// | 131072       | 128   |  -  | P10     | P10, P15, P20, P30, P40, P50         | 500                 |
// | 262144       | 256   |  -  | P15     | P15, P20, P30, P40, P50              | 1,100               |
// | 524288       | 512   |  -  | P20     | P20, P30, P40, P50                   | 2,300               |
// | 1048576      | 1024  |  1  | P30     | P30, P40, P50                        | 5,000               |
// | 2097152      | 2048  |  2  | P40     | P40, P50                             | 7,500               |
// | 4193280      | 4095  |  4  | P50     | P50                                  | 7,500               |
// | 4194304      | 4096  |  4  | P50     | P50                                  | 7,500               |
// | 8388608      | 8192  |  8  | P60     | P60, P70                             | 16,000              |
// | 16777216     | 16384 |  16 | P70     | P70, P80                             | 18,000              |
// | 33553408     | 32767 |  32 | P80     | P80                                  | 20,000              |
//
// > **Note:** Host Caching (ReadOnly and Read/Write) is supported on disk sizes less than 4194304 MiB. This means any disk that is provisioned up to 4193280 MiB can take advantage of Host Caching. Host caching is not supported for disk sizes larger than 4193280 MiB. For example, a P50 premium disk provisioned at 4193280 GiB can take advantage of Host caching while a P50 disk provisioned at 4194304 MiB cannot. Moving from a smaller disk size to a larger disk size, greater than 4193280 MiB, will cause the disk to lose the disk caching ability.
//
// ***
//
// ## Import
//
// PostgreSQL Flexible Servers can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:postgresql/flexibleServer:FlexibleServer example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.DBforPostgreSQL/flexibleServers/server1
// ```
type FlexibleServer struct {
	pulumi.CustomResourceState

	// The Administrator login for the PostgreSQL Flexible Server. Required when `createMode` is `Default` and `authentication.password_auth_enabled` is `true`.
	//
	// > **Note:** Once `administratorLogin` is specified, changing this forces a new PostgreSQL Flexible Server to be created.
	//
	// > **Note:** To create with `administratorLogin` specified or update with it first specified , `authentication.password_auth_enabled` must be set to `true`.
	AdministratorLogin pulumi.StringOutput `pulumi:"administratorLogin"`
	// The Password associated with the `administratorLogin` for the PostgreSQL Flexible Server. Required when `createMode` is `Default` and `authentication.password_auth_enabled` is `true`.
	AdministratorPassword pulumi.StringPtrOutput `pulumi:"administratorPassword"`
	// An `authentication` block as defined below.
	Authentication FlexibleServerAuthenticationOutput `pulumi:"authentication"`
	// Is the storage auto grow for PostgreSQL Flexible Server enabled? Defaults to `false`.
	AutoGrowEnabled pulumi.BoolPtrOutput `pulumi:"autoGrowEnabled"`
	// The backup retention days for the PostgreSQL Flexible Server. Possible values are between `7` and `35` days.
	BackupRetentionDays pulumi.IntOutput `pulumi:"backupRetentionDays"`
	// The creation mode which can be used to restore or replicate existing servers. Possible values are `Default`, `GeoRestore`, `PointInTimeRestore`, `Replica` and `Update`. Changing this forces a new PostgreSQL Flexible Server to be created.
	//
	// > **Note:** `createMode` cannot be changed once it's set since it's a parameter at creation.
	//
	// > **Note:** While creating the resource, `createMode` cannot be set to `Update`.
	CreateMode pulumi.StringPtrOutput `pulumi:"createMode"`
	// A `customerManagedKey` block as defined below. Changing this forces a new resource to be created.
	CustomerManagedKey FlexibleServerCustomerManagedKeyPtrOutput `pulumi:"customerManagedKey"`
	// The ID of the virtual network subnet to create the PostgreSQL Flexible Server. The provided subnet should not have any other resource deployed in it and this subnet will be delegated to the PostgreSQL Flexible Server, if not already delegated. Changing this forces a new PostgreSQL Flexible Server to be created.
	DelegatedSubnetId pulumi.StringPtrOutput `pulumi:"delegatedSubnetId"`
	// The FQDN of the PostgreSQL Flexible Server.
	Fqdn pulumi.StringOutput `pulumi:"fqdn"`
	// Is Geo-Redundant backup enabled on the PostgreSQL Flexible Server. Defaults to `false`. Changing this forces a new PostgreSQL Flexible Server to be created.
	GeoRedundantBackupEnabled pulumi.BoolPtrOutput `pulumi:"geoRedundantBackupEnabled"`
	// A `highAvailability` block as defined below.
	HighAvailability FlexibleServerHighAvailabilityPtrOutput `pulumi:"highAvailability"`
	// An `identity` block as defined below.
	Identity FlexibleServerIdentityPtrOutput `pulumi:"identity"`
	// The Azure Region where the PostgreSQL Flexible Server should exist. Changing this forces a new PostgreSQL Flexible Server to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// A `maintenanceWindow` block as defined below.
	MaintenanceWindow FlexibleServerMaintenanceWindowPtrOutput `pulumi:"maintenanceWindow"`
	// The name which should be used for this PostgreSQL Flexible Server. Changing this forces a new PostgreSQL Flexible Server to be created.
	//
	// > **Note** This must be unique across the entire Azure service, not just within the resource group.
	Name pulumi.StringOutput `pulumi:"name"`
	// The point in time to restore from `sourceServerId` when `createMode` is `GeoRestore`, `PointInTimeRestore`. Changing this forces a new PostgreSQL Flexible Server to be created.
	PointInTimeRestoreTimeInUtc pulumi.StringPtrOutput `pulumi:"pointInTimeRestoreTimeInUtc"`
	// The ID of the private DNS zone to create the PostgreSQL Flexible Server.
	//
	// > **Note:** There will be a breaking change from upstream service at 15th July 2021, the `privateDnsZoneId` will be required when setting a `delegatedSubnetId`. For existing flexible servers who don't want to be recreated, you need to provide the `privateDnsZoneId` to the service team to manually migrate to the specified private DNS zone. The `privatedns.Zone` should end with suffix `.postgres.database.azure.com`.
	PrivateDnsZoneId pulumi.StringOutput `pulumi:"privateDnsZoneId"`
	// Specifies whether this PostgreSQL Flexible Server is publicly accessible. Defaults to `true`.
	//
	// > **Note:** `publicNetworkAccessEnabled` must be set to `false` when `delegatedSubnetId` and `privateDnsZoneId` have a value.
	PublicNetworkAccessEnabled pulumi.BoolPtrOutput `pulumi:"publicNetworkAccessEnabled"`
	// The replication role for the PostgreSQL Flexible Server. Possible value is `None`.
	//
	// > **Note:** The `replicationRole` cannot be set while creating and only can be updated to `None` for replica server.
	ReplicationRole pulumi.StringPtrOutput `pulumi:"replicationRole"`
	// The name of the Resource Group where the PostgreSQL Flexible Server should exist. Changing this forces a new PostgreSQL Flexible Server to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The SKU Name for the PostgreSQL Flexible Server. The name of the SKU, follows the `tier` + `name` pattern (e.g. `B_Standard_B1ms`, `GP_Standard_D2s_v3`, `MO_Standard_E4s_v3`).
	SkuName pulumi.StringOutput `pulumi:"skuName"`
	// The resource ID of the source PostgreSQL Flexible Server to be restored. Required when `createMode` is `GeoRestore`, `PointInTimeRestore` or `Replica`. Changing this forces a new PostgreSQL Flexible Server to be created.
	SourceServerId pulumi.StringPtrOutput `pulumi:"sourceServerId"`
	// The max storage allowed for the PostgreSQL Flexible Server. Possible values are `32768`, `65536`, `131072`, `262144`, `524288`, `1048576`, `2097152`, `4193280`, `4194304`, `8388608`, `16777216` and `33553408`.
	//
	// > **Note:** If the `storageMb` field is undefined on the initial deployment of the PostgreSQL Flexible Server resource it will default to `32768`. If the `storageMb` field has been defined and then removed, the `storageMb` field will retain the previously defined value.
	//
	// > **Note:** The `storageMb` can only be scaled up, for example, you can scale the `storageMb` from `32768` to `65536`, but not from `65536` to `32768`.
	StorageMb pulumi.IntOutput `pulumi:"storageMb"`
	// The name of storage performance tier for IOPS of the PostgreSQL Flexible Server. Possible values are `P4`, `P6`, `P10`, `P15`,`P20`, `P30`,`P40`, `P50`,`P60`, `P70` or `P80`. Default value is dependant on the `storageMb` value. Please see the `storageTier` defaults based on `storageMb` table below.
	//
	// > **Note:** The `storageTier` can be scaled once every 12 hours, this restriction is in place to ensure stability and performance after any changes to your PostgreSQL Flexible Server's configuration.
	StorageTier pulumi.StringOutput `pulumi:"storageTier"`
	// A mapping of tags which should be assigned to the PostgreSQL Flexible Server.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The version of PostgreSQL Flexible Server to use. Possible values are `11`,`12`, `13`, `14`, `15` and `16`. Required when `createMode` is `Default`.
	//
	// > **Note:** When `createMode` is `Update`, upgrading version wouldn't force a new resource to be created.
	Version pulumi.StringOutput    `pulumi:"version"`
	Zone    pulumi.StringPtrOutput `pulumi:"zone"`
}

// NewFlexibleServer registers a new resource with the given unique name, arguments, and options.
func NewFlexibleServer(ctx *pulumi.Context,
	name string, args *FlexibleServerArgs, opts ...pulumi.ResourceOption) (*FlexibleServer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.AdministratorPassword != nil {
		args.AdministratorPassword = pulumi.ToSecret(args.AdministratorPassword).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"administratorPassword",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FlexibleServer
	err := ctx.RegisterResource("azure:postgresql/flexibleServer:FlexibleServer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFlexibleServer gets an existing FlexibleServer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFlexibleServer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FlexibleServerState, opts ...pulumi.ResourceOption) (*FlexibleServer, error) {
	var resource FlexibleServer
	err := ctx.ReadResource("azure:postgresql/flexibleServer:FlexibleServer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FlexibleServer resources.
type flexibleServerState struct {
	// The Administrator login for the PostgreSQL Flexible Server. Required when `createMode` is `Default` and `authentication.password_auth_enabled` is `true`.
	//
	// > **Note:** Once `administratorLogin` is specified, changing this forces a new PostgreSQL Flexible Server to be created.
	//
	// > **Note:** To create with `administratorLogin` specified or update with it first specified , `authentication.password_auth_enabled` must be set to `true`.
	AdministratorLogin *string `pulumi:"administratorLogin"`
	// The Password associated with the `administratorLogin` for the PostgreSQL Flexible Server. Required when `createMode` is `Default` and `authentication.password_auth_enabled` is `true`.
	AdministratorPassword *string `pulumi:"administratorPassword"`
	// An `authentication` block as defined below.
	Authentication *FlexibleServerAuthentication `pulumi:"authentication"`
	// Is the storage auto grow for PostgreSQL Flexible Server enabled? Defaults to `false`.
	AutoGrowEnabled *bool `pulumi:"autoGrowEnabled"`
	// The backup retention days for the PostgreSQL Flexible Server. Possible values are between `7` and `35` days.
	BackupRetentionDays *int `pulumi:"backupRetentionDays"`
	// The creation mode which can be used to restore or replicate existing servers. Possible values are `Default`, `GeoRestore`, `PointInTimeRestore`, `Replica` and `Update`. Changing this forces a new PostgreSQL Flexible Server to be created.
	//
	// > **Note:** `createMode` cannot be changed once it's set since it's a parameter at creation.
	//
	// > **Note:** While creating the resource, `createMode` cannot be set to `Update`.
	CreateMode *string `pulumi:"createMode"`
	// A `customerManagedKey` block as defined below. Changing this forces a new resource to be created.
	CustomerManagedKey *FlexibleServerCustomerManagedKey `pulumi:"customerManagedKey"`
	// The ID of the virtual network subnet to create the PostgreSQL Flexible Server. The provided subnet should not have any other resource deployed in it and this subnet will be delegated to the PostgreSQL Flexible Server, if not already delegated. Changing this forces a new PostgreSQL Flexible Server to be created.
	DelegatedSubnetId *string `pulumi:"delegatedSubnetId"`
	// The FQDN of the PostgreSQL Flexible Server.
	Fqdn *string `pulumi:"fqdn"`
	// Is Geo-Redundant backup enabled on the PostgreSQL Flexible Server. Defaults to `false`. Changing this forces a new PostgreSQL Flexible Server to be created.
	GeoRedundantBackupEnabled *bool `pulumi:"geoRedundantBackupEnabled"`
	// A `highAvailability` block as defined below.
	HighAvailability *FlexibleServerHighAvailability `pulumi:"highAvailability"`
	// An `identity` block as defined below.
	Identity *FlexibleServerIdentity `pulumi:"identity"`
	// The Azure Region where the PostgreSQL Flexible Server should exist. Changing this forces a new PostgreSQL Flexible Server to be created.
	Location *string `pulumi:"location"`
	// A `maintenanceWindow` block as defined below.
	MaintenanceWindow *FlexibleServerMaintenanceWindow `pulumi:"maintenanceWindow"`
	// The name which should be used for this PostgreSQL Flexible Server. Changing this forces a new PostgreSQL Flexible Server to be created.
	//
	// > **Note** This must be unique across the entire Azure service, not just within the resource group.
	Name *string `pulumi:"name"`
	// The point in time to restore from `sourceServerId` when `createMode` is `GeoRestore`, `PointInTimeRestore`. Changing this forces a new PostgreSQL Flexible Server to be created.
	PointInTimeRestoreTimeInUtc *string `pulumi:"pointInTimeRestoreTimeInUtc"`
	// The ID of the private DNS zone to create the PostgreSQL Flexible Server.
	//
	// > **Note:** There will be a breaking change from upstream service at 15th July 2021, the `privateDnsZoneId` will be required when setting a `delegatedSubnetId`. For existing flexible servers who don't want to be recreated, you need to provide the `privateDnsZoneId` to the service team to manually migrate to the specified private DNS zone. The `privatedns.Zone` should end with suffix `.postgres.database.azure.com`.
	PrivateDnsZoneId *string `pulumi:"privateDnsZoneId"`
	// Specifies whether this PostgreSQL Flexible Server is publicly accessible. Defaults to `true`.
	//
	// > **Note:** `publicNetworkAccessEnabled` must be set to `false` when `delegatedSubnetId` and `privateDnsZoneId` have a value.
	PublicNetworkAccessEnabled *bool `pulumi:"publicNetworkAccessEnabled"`
	// The replication role for the PostgreSQL Flexible Server. Possible value is `None`.
	//
	// > **Note:** The `replicationRole` cannot be set while creating and only can be updated to `None` for replica server.
	ReplicationRole *string `pulumi:"replicationRole"`
	// The name of the Resource Group where the PostgreSQL Flexible Server should exist. Changing this forces a new PostgreSQL Flexible Server to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The SKU Name for the PostgreSQL Flexible Server. The name of the SKU, follows the `tier` + `name` pattern (e.g. `B_Standard_B1ms`, `GP_Standard_D2s_v3`, `MO_Standard_E4s_v3`).
	SkuName *string `pulumi:"skuName"`
	// The resource ID of the source PostgreSQL Flexible Server to be restored. Required when `createMode` is `GeoRestore`, `PointInTimeRestore` or `Replica`. Changing this forces a new PostgreSQL Flexible Server to be created.
	SourceServerId *string `pulumi:"sourceServerId"`
	// The max storage allowed for the PostgreSQL Flexible Server. Possible values are `32768`, `65536`, `131072`, `262144`, `524288`, `1048576`, `2097152`, `4193280`, `4194304`, `8388608`, `16777216` and `33553408`.
	//
	// > **Note:** If the `storageMb` field is undefined on the initial deployment of the PostgreSQL Flexible Server resource it will default to `32768`. If the `storageMb` field has been defined and then removed, the `storageMb` field will retain the previously defined value.
	//
	// > **Note:** The `storageMb` can only be scaled up, for example, you can scale the `storageMb` from `32768` to `65536`, but not from `65536` to `32768`.
	StorageMb *int `pulumi:"storageMb"`
	// The name of storage performance tier for IOPS of the PostgreSQL Flexible Server. Possible values are `P4`, `P6`, `P10`, `P15`,`P20`, `P30`,`P40`, `P50`,`P60`, `P70` or `P80`. Default value is dependant on the `storageMb` value. Please see the `storageTier` defaults based on `storageMb` table below.
	//
	// > **Note:** The `storageTier` can be scaled once every 12 hours, this restriction is in place to ensure stability and performance after any changes to your PostgreSQL Flexible Server's configuration.
	StorageTier *string `pulumi:"storageTier"`
	// A mapping of tags which should be assigned to the PostgreSQL Flexible Server.
	Tags map[string]string `pulumi:"tags"`
	// The version of PostgreSQL Flexible Server to use. Possible values are `11`,`12`, `13`, `14`, `15` and `16`. Required when `createMode` is `Default`.
	//
	// > **Note:** When `createMode` is `Update`, upgrading version wouldn't force a new resource to be created.
	Version *string `pulumi:"version"`
	Zone    *string `pulumi:"zone"`
}

type FlexibleServerState struct {
	// The Administrator login for the PostgreSQL Flexible Server. Required when `createMode` is `Default` and `authentication.password_auth_enabled` is `true`.
	//
	// > **Note:** Once `administratorLogin` is specified, changing this forces a new PostgreSQL Flexible Server to be created.
	//
	// > **Note:** To create with `administratorLogin` specified or update with it first specified , `authentication.password_auth_enabled` must be set to `true`.
	AdministratorLogin pulumi.StringPtrInput
	// The Password associated with the `administratorLogin` for the PostgreSQL Flexible Server. Required when `createMode` is `Default` and `authentication.password_auth_enabled` is `true`.
	AdministratorPassword pulumi.StringPtrInput
	// An `authentication` block as defined below.
	Authentication FlexibleServerAuthenticationPtrInput
	// Is the storage auto grow for PostgreSQL Flexible Server enabled? Defaults to `false`.
	AutoGrowEnabled pulumi.BoolPtrInput
	// The backup retention days for the PostgreSQL Flexible Server. Possible values are between `7` and `35` days.
	BackupRetentionDays pulumi.IntPtrInput
	// The creation mode which can be used to restore or replicate existing servers. Possible values are `Default`, `GeoRestore`, `PointInTimeRestore`, `Replica` and `Update`. Changing this forces a new PostgreSQL Flexible Server to be created.
	//
	// > **Note:** `createMode` cannot be changed once it's set since it's a parameter at creation.
	//
	// > **Note:** While creating the resource, `createMode` cannot be set to `Update`.
	CreateMode pulumi.StringPtrInput
	// A `customerManagedKey` block as defined below. Changing this forces a new resource to be created.
	CustomerManagedKey FlexibleServerCustomerManagedKeyPtrInput
	// The ID of the virtual network subnet to create the PostgreSQL Flexible Server. The provided subnet should not have any other resource deployed in it and this subnet will be delegated to the PostgreSQL Flexible Server, if not already delegated. Changing this forces a new PostgreSQL Flexible Server to be created.
	DelegatedSubnetId pulumi.StringPtrInput
	// The FQDN of the PostgreSQL Flexible Server.
	Fqdn pulumi.StringPtrInput
	// Is Geo-Redundant backup enabled on the PostgreSQL Flexible Server. Defaults to `false`. Changing this forces a new PostgreSQL Flexible Server to be created.
	GeoRedundantBackupEnabled pulumi.BoolPtrInput
	// A `highAvailability` block as defined below.
	HighAvailability FlexibleServerHighAvailabilityPtrInput
	// An `identity` block as defined below.
	Identity FlexibleServerIdentityPtrInput
	// The Azure Region where the PostgreSQL Flexible Server should exist. Changing this forces a new PostgreSQL Flexible Server to be created.
	Location pulumi.StringPtrInput
	// A `maintenanceWindow` block as defined below.
	MaintenanceWindow FlexibleServerMaintenanceWindowPtrInput
	// The name which should be used for this PostgreSQL Flexible Server. Changing this forces a new PostgreSQL Flexible Server to be created.
	//
	// > **Note** This must be unique across the entire Azure service, not just within the resource group.
	Name pulumi.StringPtrInput
	// The point in time to restore from `sourceServerId` when `createMode` is `GeoRestore`, `PointInTimeRestore`. Changing this forces a new PostgreSQL Flexible Server to be created.
	PointInTimeRestoreTimeInUtc pulumi.StringPtrInput
	// The ID of the private DNS zone to create the PostgreSQL Flexible Server.
	//
	// > **Note:** There will be a breaking change from upstream service at 15th July 2021, the `privateDnsZoneId` will be required when setting a `delegatedSubnetId`. For existing flexible servers who don't want to be recreated, you need to provide the `privateDnsZoneId` to the service team to manually migrate to the specified private DNS zone. The `privatedns.Zone` should end with suffix `.postgres.database.azure.com`.
	PrivateDnsZoneId pulumi.StringPtrInput
	// Specifies whether this PostgreSQL Flexible Server is publicly accessible. Defaults to `true`.
	//
	// > **Note:** `publicNetworkAccessEnabled` must be set to `false` when `delegatedSubnetId` and `privateDnsZoneId` have a value.
	PublicNetworkAccessEnabled pulumi.BoolPtrInput
	// The replication role for the PostgreSQL Flexible Server. Possible value is `None`.
	//
	// > **Note:** The `replicationRole` cannot be set while creating and only can be updated to `None` for replica server.
	ReplicationRole pulumi.StringPtrInput
	// The name of the Resource Group where the PostgreSQL Flexible Server should exist. Changing this forces a new PostgreSQL Flexible Server to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The SKU Name for the PostgreSQL Flexible Server. The name of the SKU, follows the `tier` + `name` pattern (e.g. `B_Standard_B1ms`, `GP_Standard_D2s_v3`, `MO_Standard_E4s_v3`).
	SkuName pulumi.StringPtrInput
	// The resource ID of the source PostgreSQL Flexible Server to be restored. Required when `createMode` is `GeoRestore`, `PointInTimeRestore` or `Replica`. Changing this forces a new PostgreSQL Flexible Server to be created.
	SourceServerId pulumi.StringPtrInput
	// The max storage allowed for the PostgreSQL Flexible Server. Possible values are `32768`, `65536`, `131072`, `262144`, `524288`, `1048576`, `2097152`, `4193280`, `4194304`, `8388608`, `16777216` and `33553408`.
	//
	// > **Note:** If the `storageMb` field is undefined on the initial deployment of the PostgreSQL Flexible Server resource it will default to `32768`. If the `storageMb` field has been defined and then removed, the `storageMb` field will retain the previously defined value.
	//
	// > **Note:** The `storageMb` can only be scaled up, for example, you can scale the `storageMb` from `32768` to `65536`, but not from `65536` to `32768`.
	StorageMb pulumi.IntPtrInput
	// The name of storage performance tier for IOPS of the PostgreSQL Flexible Server. Possible values are `P4`, `P6`, `P10`, `P15`,`P20`, `P30`,`P40`, `P50`,`P60`, `P70` or `P80`. Default value is dependant on the `storageMb` value. Please see the `storageTier` defaults based on `storageMb` table below.
	//
	// > **Note:** The `storageTier` can be scaled once every 12 hours, this restriction is in place to ensure stability and performance after any changes to your PostgreSQL Flexible Server's configuration.
	StorageTier pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the PostgreSQL Flexible Server.
	Tags pulumi.StringMapInput
	// The version of PostgreSQL Flexible Server to use. Possible values are `11`,`12`, `13`, `14`, `15` and `16`. Required when `createMode` is `Default`.
	//
	// > **Note:** When `createMode` is `Update`, upgrading version wouldn't force a new resource to be created.
	Version pulumi.StringPtrInput
	Zone    pulumi.StringPtrInput
}

func (FlexibleServerState) ElementType() reflect.Type {
	return reflect.TypeOf((*flexibleServerState)(nil)).Elem()
}

type flexibleServerArgs struct {
	// The Administrator login for the PostgreSQL Flexible Server. Required when `createMode` is `Default` and `authentication.password_auth_enabled` is `true`.
	//
	// > **Note:** Once `administratorLogin` is specified, changing this forces a new PostgreSQL Flexible Server to be created.
	//
	// > **Note:** To create with `administratorLogin` specified or update with it first specified , `authentication.password_auth_enabled` must be set to `true`.
	AdministratorLogin *string `pulumi:"administratorLogin"`
	// The Password associated with the `administratorLogin` for the PostgreSQL Flexible Server. Required when `createMode` is `Default` and `authentication.password_auth_enabled` is `true`.
	AdministratorPassword *string `pulumi:"administratorPassword"`
	// An `authentication` block as defined below.
	Authentication *FlexibleServerAuthentication `pulumi:"authentication"`
	// Is the storage auto grow for PostgreSQL Flexible Server enabled? Defaults to `false`.
	AutoGrowEnabled *bool `pulumi:"autoGrowEnabled"`
	// The backup retention days for the PostgreSQL Flexible Server. Possible values are between `7` and `35` days.
	BackupRetentionDays *int `pulumi:"backupRetentionDays"`
	// The creation mode which can be used to restore or replicate existing servers. Possible values are `Default`, `GeoRestore`, `PointInTimeRestore`, `Replica` and `Update`. Changing this forces a new PostgreSQL Flexible Server to be created.
	//
	// > **Note:** `createMode` cannot be changed once it's set since it's a parameter at creation.
	//
	// > **Note:** While creating the resource, `createMode` cannot be set to `Update`.
	CreateMode *string `pulumi:"createMode"`
	// A `customerManagedKey` block as defined below. Changing this forces a new resource to be created.
	CustomerManagedKey *FlexibleServerCustomerManagedKey `pulumi:"customerManagedKey"`
	// The ID of the virtual network subnet to create the PostgreSQL Flexible Server. The provided subnet should not have any other resource deployed in it and this subnet will be delegated to the PostgreSQL Flexible Server, if not already delegated. Changing this forces a new PostgreSQL Flexible Server to be created.
	DelegatedSubnetId *string `pulumi:"delegatedSubnetId"`
	// Is Geo-Redundant backup enabled on the PostgreSQL Flexible Server. Defaults to `false`. Changing this forces a new PostgreSQL Flexible Server to be created.
	GeoRedundantBackupEnabled *bool `pulumi:"geoRedundantBackupEnabled"`
	// A `highAvailability` block as defined below.
	HighAvailability *FlexibleServerHighAvailability `pulumi:"highAvailability"`
	// An `identity` block as defined below.
	Identity *FlexibleServerIdentity `pulumi:"identity"`
	// The Azure Region where the PostgreSQL Flexible Server should exist. Changing this forces a new PostgreSQL Flexible Server to be created.
	Location *string `pulumi:"location"`
	// A `maintenanceWindow` block as defined below.
	MaintenanceWindow *FlexibleServerMaintenanceWindow `pulumi:"maintenanceWindow"`
	// The name which should be used for this PostgreSQL Flexible Server. Changing this forces a new PostgreSQL Flexible Server to be created.
	//
	// > **Note** This must be unique across the entire Azure service, not just within the resource group.
	Name *string `pulumi:"name"`
	// The point in time to restore from `sourceServerId` when `createMode` is `GeoRestore`, `PointInTimeRestore`. Changing this forces a new PostgreSQL Flexible Server to be created.
	PointInTimeRestoreTimeInUtc *string `pulumi:"pointInTimeRestoreTimeInUtc"`
	// The ID of the private DNS zone to create the PostgreSQL Flexible Server.
	//
	// > **Note:** There will be a breaking change from upstream service at 15th July 2021, the `privateDnsZoneId` will be required when setting a `delegatedSubnetId`. For existing flexible servers who don't want to be recreated, you need to provide the `privateDnsZoneId` to the service team to manually migrate to the specified private DNS zone. The `privatedns.Zone` should end with suffix `.postgres.database.azure.com`.
	PrivateDnsZoneId *string `pulumi:"privateDnsZoneId"`
	// Specifies whether this PostgreSQL Flexible Server is publicly accessible. Defaults to `true`.
	//
	// > **Note:** `publicNetworkAccessEnabled` must be set to `false` when `delegatedSubnetId` and `privateDnsZoneId` have a value.
	PublicNetworkAccessEnabled *bool `pulumi:"publicNetworkAccessEnabled"`
	// The replication role for the PostgreSQL Flexible Server. Possible value is `None`.
	//
	// > **Note:** The `replicationRole` cannot be set while creating and only can be updated to `None` for replica server.
	ReplicationRole *string `pulumi:"replicationRole"`
	// The name of the Resource Group where the PostgreSQL Flexible Server should exist. Changing this forces a new PostgreSQL Flexible Server to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The SKU Name for the PostgreSQL Flexible Server. The name of the SKU, follows the `tier` + `name` pattern (e.g. `B_Standard_B1ms`, `GP_Standard_D2s_v3`, `MO_Standard_E4s_v3`).
	SkuName *string `pulumi:"skuName"`
	// The resource ID of the source PostgreSQL Flexible Server to be restored. Required when `createMode` is `GeoRestore`, `PointInTimeRestore` or `Replica`. Changing this forces a new PostgreSQL Flexible Server to be created.
	SourceServerId *string `pulumi:"sourceServerId"`
	// The max storage allowed for the PostgreSQL Flexible Server. Possible values are `32768`, `65536`, `131072`, `262144`, `524288`, `1048576`, `2097152`, `4193280`, `4194304`, `8388608`, `16777216` and `33553408`.
	//
	// > **Note:** If the `storageMb` field is undefined on the initial deployment of the PostgreSQL Flexible Server resource it will default to `32768`. If the `storageMb` field has been defined and then removed, the `storageMb` field will retain the previously defined value.
	//
	// > **Note:** The `storageMb` can only be scaled up, for example, you can scale the `storageMb` from `32768` to `65536`, but not from `65536` to `32768`.
	StorageMb *int `pulumi:"storageMb"`
	// The name of storage performance tier for IOPS of the PostgreSQL Flexible Server. Possible values are `P4`, `P6`, `P10`, `P15`,`P20`, `P30`,`P40`, `P50`,`P60`, `P70` or `P80`. Default value is dependant on the `storageMb` value. Please see the `storageTier` defaults based on `storageMb` table below.
	//
	// > **Note:** The `storageTier` can be scaled once every 12 hours, this restriction is in place to ensure stability and performance after any changes to your PostgreSQL Flexible Server's configuration.
	StorageTier *string `pulumi:"storageTier"`
	// A mapping of tags which should be assigned to the PostgreSQL Flexible Server.
	Tags map[string]string `pulumi:"tags"`
	// The version of PostgreSQL Flexible Server to use. Possible values are `11`,`12`, `13`, `14`, `15` and `16`. Required when `createMode` is `Default`.
	//
	// > **Note:** When `createMode` is `Update`, upgrading version wouldn't force a new resource to be created.
	Version *string `pulumi:"version"`
	Zone    *string `pulumi:"zone"`
}

// The set of arguments for constructing a FlexibleServer resource.
type FlexibleServerArgs struct {
	// The Administrator login for the PostgreSQL Flexible Server. Required when `createMode` is `Default` and `authentication.password_auth_enabled` is `true`.
	//
	// > **Note:** Once `administratorLogin` is specified, changing this forces a new PostgreSQL Flexible Server to be created.
	//
	// > **Note:** To create with `administratorLogin` specified or update with it first specified , `authentication.password_auth_enabled` must be set to `true`.
	AdministratorLogin pulumi.StringPtrInput
	// The Password associated with the `administratorLogin` for the PostgreSQL Flexible Server. Required when `createMode` is `Default` and `authentication.password_auth_enabled` is `true`.
	AdministratorPassword pulumi.StringPtrInput
	// An `authentication` block as defined below.
	Authentication FlexibleServerAuthenticationPtrInput
	// Is the storage auto grow for PostgreSQL Flexible Server enabled? Defaults to `false`.
	AutoGrowEnabled pulumi.BoolPtrInput
	// The backup retention days for the PostgreSQL Flexible Server. Possible values are between `7` and `35` days.
	BackupRetentionDays pulumi.IntPtrInput
	// The creation mode which can be used to restore or replicate existing servers. Possible values are `Default`, `GeoRestore`, `PointInTimeRestore`, `Replica` and `Update`. Changing this forces a new PostgreSQL Flexible Server to be created.
	//
	// > **Note:** `createMode` cannot be changed once it's set since it's a parameter at creation.
	//
	// > **Note:** While creating the resource, `createMode` cannot be set to `Update`.
	CreateMode pulumi.StringPtrInput
	// A `customerManagedKey` block as defined below. Changing this forces a new resource to be created.
	CustomerManagedKey FlexibleServerCustomerManagedKeyPtrInput
	// The ID of the virtual network subnet to create the PostgreSQL Flexible Server. The provided subnet should not have any other resource deployed in it and this subnet will be delegated to the PostgreSQL Flexible Server, if not already delegated. Changing this forces a new PostgreSQL Flexible Server to be created.
	DelegatedSubnetId pulumi.StringPtrInput
	// Is Geo-Redundant backup enabled on the PostgreSQL Flexible Server. Defaults to `false`. Changing this forces a new PostgreSQL Flexible Server to be created.
	GeoRedundantBackupEnabled pulumi.BoolPtrInput
	// A `highAvailability` block as defined below.
	HighAvailability FlexibleServerHighAvailabilityPtrInput
	// An `identity` block as defined below.
	Identity FlexibleServerIdentityPtrInput
	// The Azure Region where the PostgreSQL Flexible Server should exist. Changing this forces a new PostgreSQL Flexible Server to be created.
	Location pulumi.StringPtrInput
	// A `maintenanceWindow` block as defined below.
	MaintenanceWindow FlexibleServerMaintenanceWindowPtrInput
	// The name which should be used for this PostgreSQL Flexible Server. Changing this forces a new PostgreSQL Flexible Server to be created.
	//
	// > **Note** This must be unique across the entire Azure service, not just within the resource group.
	Name pulumi.StringPtrInput
	// The point in time to restore from `sourceServerId` when `createMode` is `GeoRestore`, `PointInTimeRestore`. Changing this forces a new PostgreSQL Flexible Server to be created.
	PointInTimeRestoreTimeInUtc pulumi.StringPtrInput
	// The ID of the private DNS zone to create the PostgreSQL Flexible Server.
	//
	// > **Note:** There will be a breaking change from upstream service at 15th July 2021, the `privateDnsZoneId` will be required when setting a `delegatedSubnetId`. For existing flexible servers who don't want to be recreated, you need to provide the `privateDnsZoneId` to the service team to manually migrate to the specified private DNS zone. The `privatedns.Zone` should end with suffix `.postgres.database.azure.com`.
	PrivateDnsZoneId pulumi.StringPtrInput
	// Specifies whether this PostgreSQL Flexible Server is publicly accessible. Defaults to `true`.
	//
	// > **Note:** `publicNetworkAccessEnabled` must be set to `false` when `delegatedSubnetId` and `privateDnsZoneId` have a value.
	PublicNetworkAccessEnabled pulumi.BoolPtrInput
	// The replication role for the PostgreSQL Flexible Server. Possible value is `None`.
	//
	// > **Note:** The `replicationRole` cannot be set while creating and only can be updated to `None` for replica server.
	ReplicationRole pulumi.StringPtrInput
	// The name of the Resource Group where the PostgreSQL Flexible Server should exist. Changing this forces a new PostgreSQL Flexible Server to be created.
	ResourceGroupName pulumi.StringInput
	// The SKU Name for the PostgreSQL Flexible Server. The name of the SKU, follows the `tier` + `name` pattern (e.g. `B_Standard_B1ms`, `GP_Standard_D2s_v3`, `MO_Standard_E4s_v3`).
	SkuName pulumi.StringPtrInput
	// The resource ID of the source PostgreSQL Flexible Server to be restored. Required when `createMode` is `GeoRestore`, `PointInTimeRestore` or `Replica`. Changing this forces a new PostgreSQL Flexible Server to be created.
	SourceServerId pulumi.StringPtrInput
	// The max storage allowed for the PostgreSQL Flexible Server. Possible values are `32768`, `65536`, `131072`, `262144`, `524288`, `1048576`, `2097152`, `4193280`, `4194304`, `8388608`, `16777216` and `33553408`.
	//
	// > **Note:** If the `storageMb` field is undefined on the initial deployment of the PostgreSQL Flexible Server resource it will default to `32768`. If the `storageMb` field has been defined and then removed, the `storageMb` field will retain the previously defined value.
	//
	// > **Note:** The `storageMb` can only be scaled up, for example, you can scale the `storageMb` from `32768` to `65536`, but not from `65536` to `32768`.
	StorageMb pulumi.IntPtrInput
	// The name of storage performance tier for IOPS of the PostgreSQL Flexible Server. Possible values are `P4`, `P6`, `P10`, `P15`,`P20`, `P30`,`P40`, `P50`,`P60`, `P70` or `P80`. Default value is dependant on the `storageMb` value. Please see the `storageTier` defaults based on `storageMb` table below.
	//
	// > **Note:** The `storageTier` can be scaled once every 12 hours, this restriction is in place to ensure stability and performance after any changes to your PostgreSQL Flexible Server's configuration.
	StorageTier pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the PostgreSQL Flexible Server.
	Tags pulumi.StringMapInput
	// The version of PostgreSQL Flexible Server to use. Possible values are `11`,`12`, `13`, `14`, `15` and `16`. Required when `createMode` is `Default`.
	//
	// > **Note:** When `createMode` is `Update`, upgrading version wouldn't force a new resource to be created.
	Version pulumi.StringPtrInput
	Zone    pulumi.StringPtrInput
}

func (FlexibleServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*flexibleServerArgs)(nil)).Elem()
}

type FlexibleServerInput interface {
	pulumi.Input

	ToFlexibleServerOutput() FlexibleServerOutput
	ToFlexibleServerOutputWithContext(ctx context.Context) FlexibleServerOutput
}

func (*FlexibleServer) ElementType() reflect.Type {
	return reflect.TypeOf((**FlexibleServer)(nil)).Elem()
}

func (i *FlexibleServer) ToFlexibleServerOutput() FlexibleServerOutput {
	return i.ToFlexibleServerOutputWithContext(context.Background())
}

func (i *FlexibleServer) ToFlexibleServerOutputWithContext(ctx context.Context) FlexibleServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlexibleServerOutput)
}

// FlexibleServerArrayInput is an input type that accepts FlexibleServerArray and FlexibleServerArrayOutput values.
// You can construct a concrete instance of `FlexibleServerArrayInput` via:
//
//	FlexibleServerArray{ FlexibleServerArgs{...} }
type FlexibleServerArrayInput interface {
	pulumi.Input

	ToFlexibleServerArrayOutput() FlexibleServerArrayOutput
	ToFlexibleServerArrayOutputWithContext(context.Context) FlexibleServerArrayOutput
}

type FlexibleServerArray []FlexibleServerInput

func (FlexibleServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FlexibleServer)(nil)).Elem()
}

func (i FlexibleServerArray) ToFlexibleServerArrayOutput() FlexibleServerArrayOutput {
	return i.ToFlexibleServerArrayOutputWithContext(context.Background())
}

func (i FlexibleServerArray) ToFlexibleServerArrayOutputWithContext(ctx context.Context) FlexibleServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlexibleServerArrayOutput)
}

// FlexibleServerMapInput is an input type that accepts FlexibleServerMap and FlexibleServerMapOutput values.
// You can construct a concrete instance of `FlexibleServerMapInput` via:
//
//	FlexibleServerMap{ "key": FlexibleServerArgs{...} }
type FlexibleServerMapInput interface {
	pulumi.Input

	ToFlexibleServerMapOutput() FlexibleServerMapOutput
	ToFlexibleServerMapOutputWithContext(context.Context) FlexibleServerMapOutput
}

type FlexibleServerMap map[string]FlexibleServerInput

func (FlexibleServerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FlexibleServer)(nil)).Elem()
}

func (i FlexibleServerMap) ToFlexibleServerMapOutput() FlexibleServerMapOutput {
	return i.ToFlexibleServerMapOutputWithContext(context.Background())
}

func (i FlexibleServerMap) ToFlexibleServerMapOutputWithContext(ctx context.Context) FlexibleServerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlexibleServerMapOutput)
}

type FlexibleServerOutput struct{ *pulumi.OutputState }

func (FlexibleServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlexibleServer)(nil)).Elem()
}

func (o FlexibleServerOutput) ToFlexibleServerOutput() FlexibleServerOutput {
	return o
}

func (o FlexibleServerOutput) ToFlexibleServerOutputWithContext(ctx context.Context) FlexibleServerOutput {
	return o
}

// The Administrator login for the PostgreSQL Flexible Server. Required when `createMode` is `Default` and `authentication.password_auth_enabled` is `true`.
//
// > **Note:** Once `administratorLogin` is specified, changing this forces a new PostgreSQL Flexible Server to be created.
//
// > **Note:** To create with `administratorLogin` specified or update with it first specified , `authentication.password_auth_enabled` must be set to `true`.
func (o FlexibleServerOutput) AdministratorLogin() pulumi.StringOutput {
	return o.ApplyT(func(v *FlexibleServer) pulumi.StringOutput { return v.AdministratorLogin }).(pulumi.StringOutput)
}

// The Password associated with the `administratorLogin` for the PostgreSQL Flexible Server. Required when `createMode` is `Default` and `authentication.password_auth_enabled` is `true`.
func (o FlexibleServerOutput) AdministratorPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlexibleServer) pulumi.StringPtrOutput { return v.AdministratorPassword }).(pulumi.StringPtrOutput)
}

// An `authentication` block as defined below.
func (o FlexibleServerOutput) Authentication() FlexibleServerAuthenticationOutput {
	return o.ApplyT(func(v *FlexibleServer) FlexibleServerAuthenticationOutput { return v.Authentication }).(FlexibleServerAuthenticationOutput)
}

// Is the storage auto grow for PostgreSQL Flexible Server enabled? Defaults to `false`.
func (o FlexibleServerOutput) AutoGrowEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlexibleServer) pulumi.BoolPtrOutput { return v.AutoGrowEnabled }).(pulumi.BoolPtrOutput)
}

// The backup retention days for the PostgreSQL Flexible Server. Possible values are between `7` and `35` days.
func (o FlexibleServerOutput) BackupRetentionDays() pulumi.IntOutput {
	return o.ApplyT(func(v *FlexibleServer) pulumi.IntOutput { return v.BackupRetentionDays }).(pulumi.IntOutput)
}

// The creation mode which can be used to restore or replicate existing servers. Possible values are `Default`, `GeoRestore`, `PointInTimeRestore`, `Replica` and `Update`. Changing this forces a new PostgreSQL Flexible Server to be created.
//
// > **Note:** `createMode` cannot be changed once it's set since it's a parameter at creation.
//
// > **Note:** While creating the resource, `createMode` cannot be set to `Update`.
func (o FlexibleServerOutput) CreateMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlexibleServer) pulumi.StringPtrOutput { return v.CreateMode }).(pulumi.StringPtrOutput)
}

// A `customerManagedKey` block as defined below. Changing this forces a new resource to be created.
func (o FlexibleServerOutput) CustomerManagedKey() FlexibleServerCustomerManagedKeyPtrOutput {
	return o.ApplyT(func(v *FlexibleServer) FlexibleServerCustomerManagedKeyPtrOutput { return v.CustomerManagedKey }).(FlexibleServerCustomerManagedKeyPtrOutput)
}

// The ID of the virtual network subnet to create the PostgreSQL Flexible Server. The provided subnet should not have any other resource deployed in it and this subnet will be delegated to the PostgreSQL Flexible Server, if not already delegated. Changing this forces a new PostgreSQL Flexible Server to be created.
func (o FlexibleServerOutput) DelegatedSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlexibleServer) pulumi.StringPtrOutput { return v.DelegatedSubnetId }).(pulumi.StringPtrOutput)
}

// The FQDN of the PostgreSQL Flexible Server.
func (o FlexibleServerOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v *FlexibleServer) pulumi.StringOutput { return v.Fqdn }).(pulumi.StringOutput)
}

// Is Geo-Redundant backup enabled on the PostgreSQL Flexible Server. Defaults to `false`. Changing this forces a new PostgreSQL Flexible Server to be created.
func (o FlexibleServerOutput) GeoRedundantBackupEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlexibleServer) pulumi.BoolPtrOutput { return v.GeoRedundantBackupEnabled }).(pulumi.BoolPtrOutput)
}

// A `highAvailability` block as defined below.
func (o FlexibleServerOutput) HighAvailability() FlexibleServerHighAvailabilityPtrOutput {
	return o.ApplyT(func(v *FlexibleServer) FlexibleServerHighAvailabilityPtrOutput { return v.HighAvailability }).(FlexibleServerHighAvailabilityPtrOutput)
}

// An `identity` block as defined below.
func (o FlexibleServerOutput) Identity() FlexibleServerIdentityPtrOutput {
	return o.ApplyT(func(v *FlexibleServer) FlexibleServerIdentityPtrOutput { return v.Identity }).(FlexibleServerIdentityPtrOutput)
}

// The Azure Region where the PostgreSQL Flexible Server should exist. Changing this forces a new PostgreSQL Flexible Server to be created.
func (o FlexibleServerOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *FlexibleServer) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// A `maintenanceWindow` block as defined below.
func (o FlexibleServerOutput) MaintenanceWindow() FlexibleServerMaintenanceWindowPtrOutput {
	return o.ApplyT(func(v *FlexibleServer) FlexibleServerMaintenanceWindowPtrOutput { return v.MaintenanceWindow }).(FlexibleServerMaintenanceWindowPtrOutput)
}

// The name which should be used for this PostgreSQL Flexible Server. Changing this forces a new PostgreSQL Flexible Server to be created.
//
// > **Note** This must be unique across the entire Azure service, not just within the resource group.
func (o FlexibleServerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FlexibleServer) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The point in time to restore from `sourceServerId` when `createMode` is `GeoRestore`, `PointInTimeRestore`. Changing this forces a new PostgreSQL Flexible Server to be created.
func (o FlexibleServerOutput) PointInTimeRestoreTimeInUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlexibleServer) pulumi.StringPtrOutput { return v.PointInTimeRestoreTimeInUtc }).(pulumi.StringPtrOutput)
}

// The ID of the private DNS zone to create the PostgreSQL Flexible Server.
//
// > **Note:** There will be a breaking change from upstream service at 15th July 2021, the `privateDnsZoneId` will be required when setting a `delegatedSubnetId`. For existing flexible servers who don't want to be recreated, you need to provide the `privateDnsZoneId` to the service team to manually migrate to the specified private DNS zone. The `privatedns.Zone` should end with suffix `.postgres.database.azure.com`.
func (o FlexibleServerOutput) PrivateDnsZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *FlexibleServer) pulumi.StringOutput { return v.PrivateDnsZoneId }).(pulumi.StringOutput)
}

// Specifies whether this PostgreSQL Flexible Server is publicly accessible. Defaults to `true`.
//
// > **Note:** `publicNetworkAccessEnabled` must be set to `false` when `delegatedSubnetId` and `privateDnsZoneId` have a value.
func (o FlexibleServerOutput) PublicNetworkAccessEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlexibleServer) pulumi.BoolPtrOutput { return v.PublicNetworkAccessEnabled }).(pulumi.BoolPtrOutput)
}

// The replication role for the PostgreSQL Flexible Server. Possible value is `None`.
//
// > **Note:** The `replicationRole` cannot be set while creating and only can be updated to `None` for replica server.
func (o FlexibleServerOutput) ReplicationRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlexibleServer) pulumi.StringPtrOutput { return v.ReplicationRole }).(pulumi.StringPtrOutput)
}

// The name of the Resource Group where the PostgreSQL Flexible Server should exist. Changing this forces a new PostgreSQL Flexible Server to be created.
func (o FlexibleServerOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *FlexibleServer) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The SKU Name for the PostgreSQL Flexible Server. The name of the SKU, follows the `tier` + `name` pattern (e.g. `B_Standard_B1ms`, `GP_Standard_D2s_v3`, `MO_Standard_E4s_v3`).
func (o FlexibleServerOutput) SkuName() pulumi.StringOutput {
	return o.ApplyT(func(v *FlexibleServer) pulumi.StringOutput { return v.SkuName }).(pulumi.StringOutput)
}

// The resource ID of the source PostgreSQL Flexible Server to be restored. Required when `createMode` is `GeoRestore`, `PointInTimeRestore` or `Replica`. Changing this forces a new PostgreSQL Flexible Server to be created.
func (o FlexibleServerOutput) SourceServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlexibleServer) pulumi.StringPtrOutput { return v.SourceServerId }).(pulumi.StringPtrOutput)
}

// The max storage allowed for the PostgreSQL Flexible Server. Possible values are `32768`, `65536`, `131072`, `262144`, `524288`, `1048576`, `2097152`, `4193280`, `4194304`, `8388608`, `16777216` and `33553408`.
//
// > **Note:** If the `storageMb` field is undefined on the initial deployment of the PostgreSQL Flexible Server resource it will default to `32768`. If the `storageMb` field has been defined and then removed, the `storageMb` field will retain the previously defined value.
//
// > **Note:** The `storageMb` can only be scaled up, for example, you can scale the `storageMb` from `32768` to `65536`, but not from `65536` to `32768`.
func (o FlexibleServerOutput) StorageMb() pulumi.IntOutput {
	return o.ApplyT(func(v *FlexibleServer) pulumi.IntOutput { return v.StorageMb }).(pulumi.IntOutput)
}

// The name of storage performance tier for IOPS of the PostgreSQL Flexible Server. Possible values are `P4`, `P6`, `P10`, `P15`,`P20`, `P30`,`P40`, `P50`,`P60`, `P70` or `P80`. Default value is dependant on the `storageMb` value. Please see the `storageTier` defaults based on `storageMb` table below.
//
// > **Note:** The `storageTier` can be scaled once every 12 hours, this restriction is in place to ensure stability and performance after any changes to your PostgreSQL Flexible Server's configuration.
func (o FlexibleServerOutput) StorageTier() pulumi.StringOutput {
	return o.ApplyT(func(v *FlexibleServer) pulumi.StringOutput { return v.StorageTier }).(pulumi.StringOutput)
}

// A mapping of tags which should be assigned to the PostgreSQL Flexible Server.
func (o FlexibleServerOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FlexibleServer) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The version of PostgreSQL Flexible Server to use. Possible values are `11`,`12`, `13`, `14`, `15` and `16`. Required when `createMode` is `Default`.
//
// > **Note:** When `createMode` is `Update`, upgrading version wouldn't force a new resource to be created.
func (o FlexibleServerOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *FlexibleServer) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

func (o FlexibleServerOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlexibleServer) pulumi.StringPtrOutput { return v.Zone }).(pulumi.StringPtrOutput)
}

type FlexibleServerArrayOutput struct{ *pulumi.OutputState }

func (FlexibleServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FlexibleServer)(nil)).Elem()
}

func (o FlexibleServerArrayOutput) ToFlexibleServerArrayOutput() FlexibleServerArrayOutput {
	return o
}

func (o FlexibleServerArrayOutput) ToFlexibleServerArrayOutputWithContext(ctx context.Context) FlexibleServerArrayOutput {
	return o
}

func (o FlexibleServerArrayOutput) Index(i pulumi.IntInput) FlexibleServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FlexibleServer {
		return vs[0].([]*FlexibleServer)[vs[1].(int)]
	}).(FlexibleServerOutput)
}

type FlexibleServerMapOutput struct{ *pulumi.OutputState }

func (FlexibleServerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FlexibleServer)(nil)).Elem()
}

func (o FlexibleServerMapOutput) ToFlexibleServerMapOutput() FlexibleServerMapOutput {
	return o
}

func (o FlexibleServerMapOutput) ToFlexibleServerMapOutputWithContext(ctx context.Context) FlexibleServerMapOutput {
	return o
}

func (o FlexibleServerMapOutput) MapIndex(k pulumi.StringInput) FlexibleServerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FlexibleServer {
		return vs[0].(map[string]*FlexibleServer)[vs[1].(string)]
	}).(FlexibleServerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FlexibleServerInput)(nil)).Elem(), &FlexibleServer{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlexibleServerArrayInput)(nil)).Elem(), FlexibleServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlexibleServerMapInput)(nil)).Elem(), FlexibleServerMap{})
	pulumi.RegisterOutputType(FlexibleServerOutput{})
	pulumi.RegisterOutputType(FlexibleServerArrayOutput{})
	pulumi.RegisterOutputType(FlexibleServerMapOutput{})
}
