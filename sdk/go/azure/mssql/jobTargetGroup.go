// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mssql

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Job Target Group.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/mssql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example"),
//				Location: pulumi.String("westeurope"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleServer, err := mssql.NewServer(ctx, "example", &mssql.ServerArgs{
//				Name:                       pulumi.String("example-server"),
//				Location:                   example.Location,
//				ResourceGroupName:          example.Name,
//				Version:                    pulumi.String("12.0"),
//				AdministratorLogin:         pulumi.String("4dm1n157r470r"),
//				AdministratorLoginPassword: pulumi.String("4-v3ry-53cr37-p455w0rd"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleDatabase, err := mssql.NewDatabase(ctx, "example", &mssql.DatabaseArgs{
//				Name:      pulumi.String("example-db"),
//				ServerId:  exampleServer.ID(),
//				Collation: pulumi.String("SQL_Latin1_General_CP1_CI_AS"),
//				SkuName:   pulumi.String("S1"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleJobAgent, err := mssql.NewJobAgent(ctx, "example", &mssql.JobAgentArgs{
//				Name:       pulumi.String("example-job-agent"),
//				Location:   example.Location,
//				DatabaseId: exampleDatabase.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			exampleJobCredential, err := mssql.NewJobCredential(ctx, "example", &mssql.JobCredentialArgs{
//				Name:       pulumi.String("example-job-credential"),
//				JobAgentId: exampleJobAgent.ID(),
//				Username:   pulumi.String("testusername"),
//				Password:   pulumi.String("testpassword"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = mssql.NewJobTargetGroup(ctx, "example", &mssql.JobTargetGroupArgs{
//				Name:       pulumi.String("example-target-group"),
//				JobAgentId: exampleJobAgent.ID(),
//				JobTargets: mssql.JobTargetGroupJobTargetArray{
//					&mssql.JobTargetGroupJobTargetArgs{
//						ServerName:      exampleServer.Name,
//						JobCredentialId: exampleJobCredential.ID(),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This resource uses the following Azure API Providers:
//
// * `Microsoft.Sql`: 2023-08-01-preview
//
// ## Import
//
// Job Target Groups can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:mssql/jobTargetGroup:JobTargetGroup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Sql/servers/myserver1/jobAgents/myjobagent1/targetGroups/mytargetgroup1
// ```
type JobTargetGroup struct {
	pulumi.CustomResourceState

	// The ID of the Elastic Job Agent. Changing this forces a new Job Target Group to be created.
	JobAgentId pulumi.StringOutput `pulumi:"jobAgentId"`
	// One or more `jobTarget` blocks as defined below.
	JobTargets JobTargetGroupJobTargetArrayOutput `pulumi:"jobTargets"`
	// The name which should be used for this Job Target Group. Changing this forces a new Job Target Group to be created.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewJobTargetGroup registers a new resource with the given unique name, arguments, and options.
func NewJobTargetGroup(ctx *pulumi.Context,
	name string, args *JobTargetGroupArgs, opts ...pulumi.ResourceOption) (*JobTargetGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.JobAgentId == nil {
		return nil, errors.New("invalid value for required argument 'JobAgentId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource JobTargetGroup
	err := ctx.RegisterResource("azure:mssql/jobTargetGroup:JobTargetGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJobTargetGroup gets an existing JobTargetGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJobTargetGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *JobTargetGroupState, opts ...pulumi.ResourceOption) (*JobTargetGroup, error) {
	var resource JobTargetGroup
	err := ctx.ReadResource("azure:mssql/jobTargetGroup:JobTargetGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering JobTargetGroup resources.
type jobTargetGroupState struct {
	// The ID of the Elastic Job Agent. Changing this forces a new Job Target Group to be created.
	JobAgentId *string `pulumi:"jobAgentId"`
	// One or more `jobTarget` blocks as defined below.
	JobTargets []JobTargetGroupJobTarget `pulumi:"jobTargets"`
	// The name which should be used for this Job Target Group. Changing this forces a new Job Target Group to be created.
	Name *string `pulumi:"name"`
}

type JobTargetGroupState struct {
	// The ID of the Elastic Job Agent. Changing this forces a new Job Target Group to be created.
	JobAgentId pulumi.StringPtrInput
	// One or more `jobTarget` blocks as defined below.
	JobTargets JobTargetGroupJobTargetArrayInput
	// The name which should be used for this Job Target Group. Changing this forces a new Job Target Group to be created.
	Name pulumi.StringPtrInput
}

func (JobTargetGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*jobTargetGroupState)(nil)).Elem()
}

type jobTargetGroupArgs struct {
	// The ID of the Elastic Job Agent. Changing this forces a new Job Target Group to be created.
	JobAgentId string `pulumi:"jobAgentId"`
	// One or more `jobTarget` blocks as defined below.
	JobTargets []JobTargetGroupJobTarget `pulumi:"jobTargets"`
	// The name which should be used for this Job Target Group. Changing this forces a new Job Target Group to be created.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a JobTargetGroup resource.
type JobTargetGroupArgs struct {
	// The ID of the Elastic Job Agent. Changing this forces a new Job Target Group to be created.
	JobAgentId pulumi.StringInput
	// One or more `jobTarget` blocks as defined below.
	JobTargets JobTargetGroupJobTargetArrayInput
	// The name which should be used for this Job Target Group. Changing this forces a new Job Target Group to be created.
	Name pulumi.StringPtrInput
}

func (JobTargetGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*jobTargetGroupArgs)(nil)).Elem()
}

type JobTargetGroupInput interface {
	pulumi.Input

	ToJobTargetGroupOutput() JobTargetGroupOutput
	ToJobTargetGroupOutputWithContext(ctx context.Context) JobTargetGroupOutput
}

func (*JobTargetGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**JobTargetGroup)(nil)).Elem()
}

func (i *JobTargetGroup) ToJobTargetGroupOutput() JobTargetGroupOutput {
	return i.ToJobTargetGroupOutputWithContext(context.Background())
}

func (i *JobTargetGroup) ToJobTargetGroupOutputWithContext(ctx context.Context) JobTargetGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTargetGroupOutput)
}

// JobTargetGroupArrayInput is an input type that accepts JobTargetGroupArray and JobTargetGroupArrayOutput values.
// You can construct a concrete instance of `JobTargetGroupArrayInput` via:
//
//	JobTargetGroupArray{ JobTargetGroupArgs{...} }
type JobTargetGroupArrayInput interface {
	pulumi.Input

	ToJobTargetGroupArrayOutput() JobTargetGroupArrayOutput
	ToJobTargetGroupArrayOutputWithContext(context.Context) JobTargetGroupArrayOutput
}

type JobTargetGroupArray []JobTargetGroupInput

func (JobTargetGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*JobTargetGroup)(nil)).Elem()
}

func (i JobTargetGroupArray) ToJobTargetGroupArrayOutput() JobTargetGroupArrayOutput {
	return i.ToJobTargetGroupArrayOutputWithContext(context.Background())
}

func (i JobTargetGroupArray) ToJobTargetGroupArrayOutputWithContext(ctx context.Context) JobTargetGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTargetGroupArrayOutput)
}

// JobTargetGroupMapInput is an input type that accepts JobTargetGroupMap and JobTargetGroupMapOutput values.
// You can construct a concrete instance of `JobTargetGroupMapInput` via:
//
//	JobTargetGroupMap{ "key": JobTargetGroupArgs{...} }
type JobTargetGroupMapInput interface {
	pulumi.Input

	ToJobTargetGroupMapOutput() JobTargetGroupMapOutput
	ToJobTargetGroupMapOutputWithContext(context.Context) JobTargetGroupMapOutput
}

type JobTargetGroupMap map[string]JobTargetGroupInput

func (JobTargetGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*JobTargetGroup)(nil)).Elem()
}

func (i JobTargetGroupMap) ToJobTargetGroupMapOutput() JobTargetGroupMapOutput {
	return i.ToJobTargetGroupMapOutputWithContext(context.Background())
}

func (i JobTargetGroupMap) ToJobTargetGroupMapOutputWithContext(ctx context.Context) JobTargetGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTargetGroupMapOutput)
}

type JobTargetGroupOutput struct{ *pulumi.OutputState }

func (JobTargetGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobTargetGroup)(nil)).Elem()
}

func (o JobTargetGroupOutput) ToJobTargetGroupOutput() JobTargetGroupOutput {
	return o
}

func (o JobTargetGroupOutput) ToJobTargetGroupOutputWithContext(ctx context.Context) JobTargetGroupOutput {
	return o
}

// The ID of the Elastic Job Agent. Changing this forces a new Job Target Group to be created.
func (o JobTargetGroupOutput) JobAgentId() pulumi.StringOutput {
	return o.ApplyT(func(v *JobTargetGroup) pulumi.StringOutput { return v.JobAgentId }).(pulumi.StringOutput)
}

// One or more `jobTarget` blocks as defined below.
func (o JobTargetGroupOutput) JobTargets() JobTargetGroupJobTargetArrayOutput {
	return o.ApplyT(func(v *JobTargetGroup) JobTargetGroupJobTargetArrayOutput { return v.JobTargets }).(JobTargetGroupJobTargetArrayOutput)
}

// The name which should be used for this Job Target Group. Changing this forces a new Job Target Group to be created.
func (o JobTargetGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *JobTargetGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type JobTargetGroupArrayOutput struct{ *pulumi.OutputState }

func (JobTargetGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*JobTargetGroup)(nil)).Elem()
}

func (o JobTargetGroupArrayOutput) ToJobTargetGroupArrayOutput() JobTargetGroupArrayOutput {
	return o
}

func (o JobTargetGroupArrayOutput) ToJobTargetGroupArrayOutputWithContext(ctx context.Context) JobTargetGroupArrayOutput {
	return o
}

func (o JobTargetGroupArrayOutput) Index(i pulumi.IntInput) JobTargetGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *JobTargetGroup {
		return vs[0].([]*JobTargetGroup)[vs[1].(int)]
	}).(JobTargetGroupOutput)
}

type JobTargetGroupMapOutput struct{ *pulumi.OutputState }

func (JobTargetGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*JobTargetGroup)(nil)).Elem()
}

func (o JobTargetGroupMapOutput) ToJobTargetGroupMapOutput() JobTargetGroupMapOutput {
	return o
}

func (o JobTargetGroupMapOutput) ToJobTargetGroupMapOutputWithContext(ctx context.Context) JobTargetGroupMapOutput {
	return o
}

func (o JobTargetGroupMapOutput) MapIndex(k pulumi.StringInput) JobTargetGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *JobTargetGroup {
		return vs[0].(map[string]*JobTargetGroup)[vs[1].(string)]
	}).(JobTargetGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*JobTargetGroupInput)(nil)).Elem(), &JobTargetGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobTargetGroupArrayInput)(nil)).Elem(), JobTargetGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobTargetGroupMapInput)(nil)).Elem(), JobTargetGroupMap{})
	pulumi.RegisterOutputType(JobTargetGroupOutput{})
	pulumi.RegisterOutputType(JobTargetGroupArrayOutput{})
	pulumi.RegisterOutputType(JobTargetGroupMapOutput{})
}
