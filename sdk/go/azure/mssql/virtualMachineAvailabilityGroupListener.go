// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mssql

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Microsoft SQL Virtual Machine Availability Group Listener.
//
// ## Import
//
// Microsoft SQL Virtual Machine Availability Group Listeners can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:mssql/virtualMachineAvailabilityGroupListener:VirtualMachineAvailabilityGroupListener example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/vmgroup1/availabilityGroupListeners/listener1
//
// ```
type VirtualMachineAvailabilityGroupListener struct {
	pulumi.CustomResourceState

	// The name of the Availability Group. Changing this forces a new resource to be created.
	AvailabilityGroupName pulumi.StringPtrOutput `pulumi:"availabilityGroupName"`
	// A `loadBalancerConfiguration` block as defined below. Changing this forces a new resource to be created.
	//
	// > **NOTE:** Either one of `loadBalancerConfiguration` or `multiSubnetIpConfiguration` must be specified.
	LoadBalancerConfiguration VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput `pulumi:"loadBalancerConfiguration"`
	// One or more `multiSubnetIpConfiguration` blocks as defined below. Changing this forces a new resource to be created.
	MultiSubnetIpConfigurations VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayOutput `pulumi:"multiSubnetIpConfigurations"`
	// The name which should be used for the Microsoft SQL Virtual Machine Availability Group Listener. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The port of the listener. Changing this forces a new resource to be created.
	Port pulumi.IntPtrOutput `pulumi:"port"`
	// One or more `replica` blocks as defined below. Changing this forces a new resource to be created.
	Replicas VirtualMachineAvailabilityGroupListenerReplicaArrayOutput `pulumi:"replicas"`
	// The ID of the SQL Virtual Machine Group to create the listener. Changing this forces a new resource to be created.
	SqlVirtualMachineGroupId pulumi.StringOutput `pulumi:"sqlVirtualMachineGroupId"`
}

// NewVirtualMachineAvailabilityGroupListener registers a new resource with the given unique name, arguments, and options.
func NewVirtualMachineAvailabilityGroupListener(ctx *pulumi.Context,
	name string, args *VirtualMachineAvailabilityGroupListenerArgs, opts ...pulumi.ResourceOption) (*VirtualMachineAvailabilityGroupListener, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Replicas == nil {
		return nil, errors.New("invalid value for required argument 'Replicas'")
	}
	if args.SqlVirtualMachineGroupId == nil {
		return nil, errors.New("invalid value for required argument 'SqlVirtualMachineGroupId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VirtualMachineAvailabilityGroupListener
	err := ctx.RegisterResource("azure:mssql/virtualMachineAvailabilityGroupListener:VirtualMachineAvailabilityGroupListener", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVirtualMachineAvailabilityGroupListener gets an existing VirtualMachineAvailabilityGroupListener resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVirtualMachineAvailabilityGroupListener(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VirtualMachineAvailabilityGroupListenerState, opts ...pulumi.ResourceOption) (*VirtualMachineAvailabilityGroupListener, error) {
	var resource VirtualMachineAvailabilityGroupListener
	err := ctx.ReadResource("azure:mssql/virtualMachineAvailabilityGroupListener:VirtualMachineAvailabilityGroupListener", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VirtualMachineAvailabilityGroupListener resources.
type virtualMachineAvailabilityGroupListenerState struct {
	// The name of the Availability Group. Changing this forces a new resource to be created.
	AvailabilityGroupName *string `pulumi:"availabilityGroupName"`
	// A `loadBalancerConfiguration` block as defined below. Changing this forces a new resource to be created.
	//
	// > **NOTE:** Either one of `loadBalancerConfiguration` or `multiSubnetIpConfiguration` must be specified.
	LoadBalancerConfiguration *VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration `pulumi:"loadBalancerConfiguration"`
	// One or more `multiSubnetIpConfiguration` blocks as defined below. Changing this forces a new resource to be created.
	MultiSubnetIpConfigurations []VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfiguration `pulumi:"multiSubnetIpConfigurations"`
	// The name which should be used for the Microsoft SQL Virtual Machine Availability Group Listener. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The port of the listener. Changing this forces a new resource to be created.
	Port *int `pulumi:"port"`
	// One or more `replica` blocks as defined below. Changing this forces a new resource to be created.
	Replicas []VirtualMachineAvailabilityGroupListenerReplica `pulumi:"replicas"`
	// The ID of the SQL Virtual Machine Group to create the listener. Changing this forces a new resource to be created.
	SqlVirtualMachineGroupId *string `pulumi:"sqlVirtualMachineGroupId"`
}

type VirtualMachineAvailabilityGroupListenerState struct {
	// The name of the Availability Group. Changing this forces a new resource to be created.
	AvailabilityGroupName pulumi.StringPtrInput
	// A `loadBalancerConfiguration` block as defined below. Changing this forces a new resource to be created.
	//
	// > **NOTE:** Either one of `loadBalancerConfiguration` or `multiSubnetIpConfiguration` must be specified.
	LoadBalancerConfiguration VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrInput
	// One or more `multiSubnetIpConfiguration` blocks as defined below. Changing this forces a new resource to be created.
	MultiSubnetIpConfigurations VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayInput
	// The name which should be used for the Microsoft SQL Virtual Machine Availability Group Listener. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The port of the listener. Changing this forces a new resource to be created.
	Port pulumi.IntPtrInput
	// One or more `replica` blocks as defined below. Changing this forces a new resource to be created.
	Replicas VirtualMachineAvailabilityGroupListenerReplicaArrayInput
	// The ID of the SQL Virtual Machine Group to create the listener. Changing this forces a new resource to be created.
	SqlVirtualMachineGroupId pulumi.StringPtrInput
}

func (VirtualMachineAvailabilityGroupListenerState) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualMachineAvailabilityGroupListenerState)(nil)).Elem()
}

type virtualMachineAvailabilityGroupListenerArgs struct {
	// The name of the Availability Group. Changing this forces a new resource to be created.
	AvailabilityGroupName *string `pulumi:"availabilityGroupName"`
	// A `loadBalancerConfiguration` block as defined below. Changing this forces a new resource to be created.
	//
	// > **NOTE:** Either one of `loadBalancerConfiguration` or `multiSubnetIpConfiguration` must be specified.
	LoadBalancerConfiguration *VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration `pulumi:"loadBalancerConfiguration"`
	// One or more `multiSubnetIpConfiguration` blocks as defined below. Changing this forces a new resource to be created.
	MultiSubnetIpConfigurations []VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfiguration `pulumi:"multiSubnetIpConfigurations"`
	// The name which should be used for the Microsoft SQL Virtual Machine Availability Group Listener. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The port of the listener. Changing this forces a new resource to be created.
	Port *int `pulumi:"port"`
	// One or more `replica` blocks as defined below. Changing this forces a new resource to be created.
	Replicas []VirtualMachineAvailabilityGroupListenerReplica `pulumi:"replicas"`
	// The ID of the SQL Virtual Machine Group to create the listener. Changing this forces a new resource to be created.
	SqlVirtualMachineGroupId string `pulumi:"sqlVirtualMachineGroupId"`
}

// The set of arguments for constructing a VirtualMachineAvailabilityGroupListener resource.
type VirtualMachineAvailabilityGroupListenerArgs struct {
	// The name of the Availability Group. Changing this forces a new resource to be created.
	AvailabilityGroupName pulumi.StringPtrInput
	// A `loadBalancerConfiguration` block as defined below. Changing this forces a new resource to be created.
	//
	// > **NOTE:** Either one of `loadBalancerConfiguration` or `multiSubnetIpConfiguration` must be specified.
	LoadBalancerConfiguration VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrInput
	// One or more `multiSubnetIpConfiguration` blocks as defined below. Changing this forces a new resource to be created.
	MultiSubnetIpConfigurations VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayInput
	// The name which should be used for the Microsoft SQL Virtual Machine Availability Group Listener. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The port of the listener. Changing this forces a new resource to be created.
	Port pulumi.IntPtrInput
	// One or more `replica` blocks as defined below. Changing this forces a new resource to be created.
	Replicas VirtualMachineAvailabilityGroupListenerReplicaArrayInput
	// The ID of the SQL Virtual Machine Group to create the listener. Changing this forces a new resource to be created.
	SqlVirtualMachineGroupId pulumi.StringInput
}

func (VirtualMachineAvailabilityGroupListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualMachineAvailabilityGroupListenerArgs)(nil)).Elem()
}

type VirtualMachineAvailabilityGroupListenerInput interface {
	pulumi.Input

	ToVirtualMachineAvailabilityGroupListenerOutput() VirtualMachineAvailabilityGroupListenerOutput
	ToVirtualMachineAvailabilityGroupListenerOutputWithContext(ctx context.Context) VirtualMachineAvailabilityGroupListenerOutput
}

func (*VirtualMachineAvailabilityGroupListener) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineAvailabilityGroupListener)(nil)).Elem()
}

func (i *VirtualMachineAvailabilityGroupListener) ToVirtualMachineAvailabilityGroupListenerOutput() VirtualMachineAvailabilityGroupListenerOutput {
	return i.ToVirtualMachineAvailabilityGroupListenerOutputWithContext(context.Background())
}

func (i *VirtualMachineAvailabilityGroupListener) ToVirtualMachineAvailabilityGroupListenerOutputWithContext(ctx context.Context) VirtualMachineAvailabilityGroupListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAvailabilityGroupListenerOutput)
}

// VirtualMachineAvailabilityGroupListenerArrayInput is an input type that accepts VirtualMachineAvailabilityGroupListenerArray and VirtualMachineAvailabilityGroupListenerArrayOutput values.
// You can construct a concrete instance of `VirtualMachineAvailabilityGroupListenerArrayInput` via:
//
//	VirtualMachineAvailabilityGroupListenerArray{ VirtualMachineAvailabilityGroupListenerArgs{...} }
type VirtualMachineAvailabilityGroupListenerArrayInput interface {
	pulumi.Input

	ToVirtualMachineAvailabilityGroupListenerArrayOutput() VirtualMachineAvailabilityGroupListenerArrayOutput
	ToVirtualMachineAvailabilityGroupListenerArrayOutputWithContext(context.Context) VirtualMachineAvailabilityGroupListenerArrayOutput
}

type VirtualMachineAvailabilityGroupListenerArray []VirtualMachineAvailabilityGroupListenerInput

func (VirtualMachineAvailabilityGroupListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VirtualMachineAvailabilityGroupListener)(nil)).Elem()
}

func (i VirtualMachineAvailabilityGroupListenerArray) ToVirtualMachineAvailabilityGroupListenerArrayOutput() VirtualMachineAvailabilityGroupListenerArrayOutput {
	return i.ToVirtualMachineAvailabilityGroupListenerArrayOutputWithContext(context.Background())
}

func (i VirtualMachineAvailabilityGroupListenerArray) ToVirtualMachineAvailabilityGroupListenerArrayOutputWithContext(ctx context.Context) VirtualMachineAvailabilityGroupListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAvailabilityGroupListenerArrayOutput)
}

// VirtualMachineAvailabilityGroupListenerMapInput is an input type that accepts VirtualMachineAvailabilityGroupListenerMap and VirtualMachineAvailabilityGroupListenerMapOutput values.
// You can construct a concrete instance of `VirtualMachineAvailabilityGroupListenerMapInput` via:
//
//	VirtualMachineAvailabilityGroupListenerMap{ "key": VirtualMachineAvailabilityGroupListenerArgs{...} }
type VirtualMachineAvailabilityGroupListenerMapInput interface {
	pulumi.Input

	ToVirtualMachineAvailabilityGroupListenerMapOutput() VirtualMachineAvailabilityGroupListenerMapOutput
	ToVirtualMachineAvailabilityGroupListenerMapOutputWithContext(context.Context) VirtualMachineAvailabilityGroupListenerMapOutput
}

type VirtualMachineAvailabilityGroupListenerMap map[string]VirtualMachineAvailabilityGroupListenerInput

func (VirtualMachineAvailabilityGroupListenerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VirtualMachineAvailabilityGroupListener)(nil)).Elem()
}

func (i VirtualMachineAvailabilityGroupListenerMap) ToVirtualMachineAvailabilityGroupListenerMapOutput() VirtualMachineAvailabilityGroupListenerMapOutput {
	return i.ToVirtualMachineAvailabilityGroupListenerMapOutputWithContext(context.Background())
}

func (i VirtualMachineAvailabilityGroupListenerMap) ToVirtualMachineAvailabilityGroupListenerMapOutputWithContext(ctx context.Context) VirtualMachineAvailabilityGroupListenerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAvailabilityGroupListenerMapOutput)
}

type VirtualMachineAvailabilityGroupListenerOutput struct{ *pulumi.OutputState }

func (VirtualMachineAvailabilityGroupListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineAvailabilityGroupListener)(nil)).Elem()
}

func (o VirtualMachineAvailabilityGroupListenerOutput) ToVirtualMachineAvailabilityGroupListenerOutput() VirtualMachineAvailabilityGroupListenerOutput {
	return o
}

func (o VirtualMachineAvailabilityGroupListenerOutput) ToVirtualMachineAvailabilityGroupListenerOutputWithContext(ctx context.Context) VirtualMachineAvailabilityGroupListenerOutput {
	return o
}

// The name of the Availability Group. Changing this forces a new resource to be created.
func (o VirtualMachineAvailabilityGroupListenerOutput) AvailabilityGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAvailabilityGroupListener) pulumi.StringPtrOutput {
		return v.AvailabilityGroupName
	}).(pulumi.StringPtrOutput)
}

// A `loadBalancerConfiguration` block as defined below. Changing this forces a new resource to be created.
//
// > **NOTE:** Either one of `loadBalancerConfiguration` or `multiSubnetIpConfiguration` must be specified.
func (o VirtualMachineAvailabilityGroupListenerOutput) LoadBalancerConfiguration() VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAvailabilityGroupListener) VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput {
		return v.LoadBalancerConfiguration
	}).(VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput)
}

// One or more `multiSubnetIpConfiguration` blocks as defined below. Changing this forces a new resource to be created.
func (o VirtualMachineAvailabilityGroupListenerOutput) MultiSubnetIpConfigurations() VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayOutput {
	return o.ApplyT(func(v *VirtualMachineAvailabilityGroupListener) VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayOutput {
		return v.MultiSubnetIpConfigurations
	}).(VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayOutput)
}

// The name which should be used for the Microsoft SQL Virtual Machine Availability Group Listener. Changing this forces a new resource to be created.
func (o VirtualMachineAvailabilityGroupListenerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineAvailabilityGroupListener) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The port of the listener. Changing this forces a new resource to be created.
func (o VirtualMachineAvailabilityGroupListenerOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAvailabilityGroupListener) pulumi.IntPtrOutput { return v.Port }).(pulumi.IntPtrOutput)
}

// One or more `replica` blocks as defined below. Changing this forces a new resource to be created.
func (o VirtualMachineAvailabilityGroupListenerOutput) Replicas() VirtualMachineAvailabilityGroupListenerReplicaArrayOutput {
	return o.ApplyT(func(v *VirtualMachineAvailabilityGroupListener) VirtualMachineAvailabilityGroupListenerReplicaArrayOutput {
		return v.Replicas
	}).(VirtualMachineAvailabilityGroupListenerReplicaArrayOutput)
}

// The ID of the SQL Virtual Machine Group to create the listener. Changing this forces a new resource to be created.
func (o VirtualMachineAvailabilityGroupListenerOutput) SqlVirtualMachineGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineAvailabilityGroupListener) pulumi.StringOutput {
		return v.SqlVirtualMachineGroupId
	}).(pulumi.StringOutput)
}

type VirtualMachineAvailabilityGroupListenerArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineAvailabilityGroupListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VirtualMachineAvailabilityGroupListener)(nil)).Elem()
}

func (o VirtualMachineAvailabilityGroupListenerArrayOutput) ToVirtualMachineAvailabilityGroupListenerArrayOutput() VirtualMachineAvailabilityGroupListenerArrayOutput {
	return o
}

func (o VirtualMachineAvailabilityGroupListenerArrayOutput) ToVirtualMachineAvailabilityGroupListenerArrayOutputWithContext(ctx context.Context) VirtualMachineAvailabilityGroupListenerArrayOutput {
	return o
}

func (o VirtualMachineAvailabilityGroupListenerArrayOutput) Index(i pulumi.IntInput) VirtualMachineAvailabilityGroupListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VirtualMachineAvailabilityGroupListener {
		return vs[0].([]*VirtualMachineAvailabilityGroupListener)[vs[1].(int)]
	}).(VirtualMachineAvailabilityGroupListenerOutput)
}

type VirtualMachineAvailabilityGroupListenerMapOutput struct{ *pulumi.OutputState }

func (VirtualMachineAvailabilityGroupListenerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VirtualMachineAvailabilityGroupListener)(nil)).Elem()
}

func (o VirtualMachineAvailabilityGroupListenerMapOutput) ToVirtualMachineAvailabilityGroupListenerMapOutput() VirtualMachineAvailabilityGroupListenerMapOutput {
	return o
}

func (o VirtualMachineAvailabilityGroupListenerMapOutput) ToVirtualMachineAvailabilityGroupListenerMapOutputWithContext(ctx context.Context) VirtualMachineAvailabilityGroupListenerMapOutput {
	return o
}

func (o VirtualMachineAvailabilityGroupListenerMapOutput) MapIndex(k pulumi.StringInput) VirtualMachineAvailabilityGroupListenerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VirtualMachineAvailabilityGroupListener {
		return vs[0].(map[string]*VirtualMachineAvailabilityGroupListener)[vs[1].(string)]
	}).(VirtualMachineAvailabilityGroupListenerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineAvailabilityGroupListenerInput)(nil)).Elem(), &VirtualMachineAvailabilityGroupListener{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineAvailabilityGroupListenerArrayInput)(nil)).Elem(), VirtualMachineAvailabilityGroupListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineAvailabilityGroupListenerMapInput)(nil)).Elem(), VirtualMachineAvailabilityGroupListenerMap{})
	pulumi.RegisterOutputType(VirtualMachineAvailabilityGroupListenerOutput{})
	pulumi.RegisterOutputType(VirtualMachineAvailabilityGroupListenerArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineAvailabilityGroupListenerMapOutput{})
}
