// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mssql

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Allows you to manage an Azure SQL Outbound Firewall Rule.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/mssql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleServer, err := mssql.NewServer(ctx, "exampleServer", &mssql.ServerArgs{
//				ResourceGroupName:                 exampleResourceGroup.Name,
//				Location:                          exampleResourceGroup.Location,
//				Version:                           pulumi.String("12.0"),
//				AdministratorLogin:                pulumi.String("4dm1n157r470r"),
//				AdministratorLoginPassword:        pulumi.String("4-v3ry-53cr37-p455w0rd"),
//				OutboundNetworkRestrictionEnabled: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = mssql.NewOutboundFirewallRule(ctx, "exampleOutboundFirewallRule", &mssql.OutboundFirewallRuleArgs{
//				ServerId: exampleServer.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// SQL Outbound Firewall Rules can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:mssql/outboundFirewallRule:OutboundFirewallRule rule1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.Sql/servers/myserver/outboundFirewallRules/fqdn1
//
// ```
type OutboundFirewallRule struct {
	pulumi.CustomResourceState

	// The name of the outbound firewall rule. This should be a FQDN. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource ID of the SQL Server on which to create the Outbound Firewall Rule. Changing this forces a new resource to be created.
	ServerId pulumi.StringOutput `pulumi:"serverId"`
}

// NewOutboundFirewallRule registers a new resource with the given unique name, arguments, and options.
func NewOutboundFirewallRule(ctx *pulumi.Context,
	name string, args *OutboundFirewallRuleArgs, opts ...pulumi.ResourceOption) (*OutboundFirewallRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ServerId == nil {
		return nil, errors.New("invalid value for required argument 'ServerId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OutboundFirewallRule
	err := ctx.RegisterResource("azure:mssql/outboundFirewallRule:OutboundFirewallRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOutboundFirewallRule gets an existing OutboundFirewallRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOutboundFirewallRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OutboundFirewallRuleState, opts ...pulumi.ResourceOption) (*OutboundFirewallRule, error) {
	var resource OutboundFirewallRule
	err := ctx.ReadResource("azure:mssql/outboundFirewallRule:OutboundFirewallRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OutboundFirewallRule resources.
type outboundFirewallRuleState struct {
	// The name of the outbound firewall rule. This should be a FQDN. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The resource ID of the SQL Server on which to create the Outbound Firewall Rule. Changing this forces a new resource to be created.
	ServerId *string `pulumi:"serverId"`
}

type OutboundFirewallRuleState struct {
	// The name of the outbound firewall rule. This should be a FQDN. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The resource ID of the SQL Server on which to create the Outbound Firewall Rule. Changing this forces a new resource to be created.
	ServerId pulumi.StringPtrInput
}

func (OutboundFirewallRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*outboundFirewallRuleState)(nil)).Elem()
}

type outboundFirewallRuleArgs struct {
	// The name of the outbound firewall rule. This should be a FQDN. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The resource ID of the SQL Server on which to create the Outbound Firewall Rule. Changing this forces a new resource to be created.
	ServerId string `pulumi:"serverId"`
}

// The set of arguments for constructing a OutboundFirewallRule resource.
type OutboundFirewallRuleArgs struct {
	// The name of the outbound firewall rule. This should be a FQDN. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The resource ID of the SQL Server on which to create the Outbound Firewall Rule. Changing this forces a new resource to be created.
	ServerId pulumi.StringInput
}

func (OutboundFirewallRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*outboundFirewallRuleArgs)(nil)).Elem()
}

type OutboundFirewallRuleInput interface {
	pulumi.Input

	ToOutboundFirewallRuleOutput() OutboundFirewallRuleOutput
	ToOutboundFirewallRuleOutputWithContext(ctx context.Context) OutboundFirewallRuleOutput
}

func (*OutboundFirewallRule) ElementType() reflect.Type {
	return reflect.TypeOf((**OutboundFirewallRule)(nil)).Elem()
}

func (i *OutboundFirewallRule) ToOutboundFirewallRuleOutput() OutboundFirewallRuleOutput {
	return i.ToOutboundFirewallRuleOutputWithContext(context.Background())
}

func (i *OutboundFirewallRule) ToOutboundFirewallRuleOutputWithContext(ctx context.Context) OutboundFirewallRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundFirewallRuleOutput)
}

// OutboundFirewallRuleArrayInput is an input type that accepts OutboundFirewallRuleArray and OutboundFirewallRuleArrayOutput values.
// You can construct a concrete instance of `OutboundFirewallRuleArrayInput` via:
//
//	OutboundFirewallRuleArray{ OutboundFirewallRuleArgs{...} }
type OutboundFirewallRuleArrayInput interface {
	pulumi.Input

	ToOutboundFirewallRuleArrayOutput() OutboundFirewallRuleArrayOutput
	ToOutboundFirewallRuleArrayOutputWithContext(context.Context) OutboundFirewallRuleArrayOutput
}

type OutboundFirewallRuleArray []OutboundFirewallRuleInput

func (OutboundFirewallRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OutboundFirewallRule)(nil)).Elem()
}

func (i OutboundFirewallRuleArray) ToOutboundFirewallRuleArrayOutput() OutboundFirewallRuleArrayOutput {
	return i.ToOutboundFirewallRuleArrayOutputWithContext(context.Background())
}

func (i OutboundFirewallRuleArray) ToOutboundFirewallRuleArrayOutputWithContext(ctx context.Context) OutboundFirewallRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundFirewallRuleArrayOutput)
}

// OutboundFirewallRuleMapInput is an input type that accepts OutboundFirewallRuleMap and OutboundFirewallRuleMapOutput values.
// You can construct a concrete instance of `OutboundFirewallRuleMapInput` via:
//
//	OutboundFirewallRuleMap{ "key": OutboundFirewallRuleArgs{...} }
type OutboundFirewallRuleMapInput interface {
	pulumi.Input

	ToOutboundFirewallRuleMapOutput() OutboundFirewallRuleMapOutput
	ToOutboundFirewallRuleMapOutputWithContext(context.Context) OutboundFirewallRuleMapOutput
}

type OutboundFirewallRuleMap map[string]OutboundFirewallRuleInput

func (OutboundFirewallRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OutboundFirewallRule)(nil)).Elem()
}

func (i OutboundFirewallRuleMap) ToOutboundFirewallRuleMapOutput() OutboundFirewallRuleMapOutput {
	return i.ToOutboundFirewallRuleMapOutputWithContext(context.Background())
}

func (i OutboundFirewallRuleMap) ToOutboundFirewallRuleMapOutputWithContext(ctx context.Context) OutboundFirewallRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundFirewallRuleMapOutput)
}

type OutboundFirewallRuleOutput struct{ *pulumi.OutputState }

func (OutboundFirewallRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OutboundFirewallRule)(nil)).Elem()
}

func (o OutboundFirewallRuleOutput) ToOutboundFirewallRuleOutput() OutboundFirewallRuleOutput {
	return o
}

func (o OutboundFirewallRuleOutput) ToOutboundFirewallRuleOutputWithContext(ctx context.Context) OutboundFirewallRuleOutput {
	return o
}

// The name of the outbound firewall rule. This should be a FQDN. Changing this forces a new resource to be created.
func (o OutboundFirewallRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OutboundFirewallRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource ID of the SQL Server on which to create the Outbound Firewall Rule. Changing this forces a new resource to be created.
func (o OutboundFirewallRuleOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v *OutboundFirewallRule) pulumi.StringOutput { return v.ServerId }).(pulumi.StringOutput)
}

type OutboundFirewallRuleArrayOutput struct{ *pulumi.OutputState }

func (OutboundFirewallRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OutboundFirewallRule)(nil)).Elem()
}

func (o OutboundFirewallRuleArrayOutput) ToOutboundFirewallRuleArrayOutput() OutboundFirewallRuleArrayOutput {
	return o
}

func (o OutboundFirewallRuleArrayOutput) ToOutboundFirewallRuleArrayOutputWithContext(ctx context.Context) OutboundFirewallRuleArrayOutput {
	return o
}

func (o OutboundFirewallRuleArrayOutput) Index(i pulumi.IntInput) OutboundFirewallRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OutboundFirewallRule {
		return vs[0].([]*OutboundFirewallRule)[vs[1].(int)]
	}).(OutboundFirewallRuleOutput)
}

type OutboundFirewallRuleMapOutput struct{ *pulumi.OutputState }

func (OutboundFirewallRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OutboundFirewallRule)(nil)).Elem()
}

func (o OutboundFirewallRuleMapOutput) ToOutboundFirewallRuleMapOutput() OutboundFirewallRuleMapOutput {
	return o
}

func (o OutboundFirewallRuleMapOutput) ToOutboundFirewallRuleMapOutputWithContext(ctx context.Context) OutboundFirewallRuleMapOutput {
	return o
}

func (o OutboundFirewallRuleMapOutput) MapIndex(k pulumi.StringInput) OutboundFirewallRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OutboundFirewallRule {
		return vs[0].(map[string]*OutboundFirewallRule)[vs[1].(string)]
	}).(OutboundFirewallRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OutboundFirewallRuleInput)(nil)).Elem(), &OutboundFirewallRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*OutboundFirewallRuleArrayInput)(nil)).Elem(), OutboundFirewallRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OutboundFirewallRuleMapInput)(nil)).Elem(), OutboundFirewallRuleMap{})
	pulumi.RegisterOutputType(OutboundFirewallRuleOutput{})
	pulumi.RegisterOutputType(OutboundFirewallRuleArrayOutput{})
	pulumi.RegisterOutputType(OutboundFirewallRuleMapOutput{})
}
