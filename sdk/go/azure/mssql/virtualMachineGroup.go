// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mssql

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Microsoft SQL Virtual Machine Group.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/mssql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = mssql.NewVirtualMachineGroup(ctx, "exampleVirtualMachineGroup", &mssql.VirtualMachineGroupArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				SqlImageOffer:     pulumi.String("SQL2017-WS2016"),
//				SqlImageSku:       pulumi.String("Developer"),
//				WsfcDomainProfile: &mssql.VirtualMachineGroupWsfcDomainProfileArgs{
//					Fqdn:              pulumi.String("testdomain.com"),
//					ClusterSubnetType: pulumi.String("SingleSubnet"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Microsoft SQL Virtual Machine Groups can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:mssql/virtualMachineGroup:VirtualMachineGroup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/vmgroup1
//
// ```
type VirtualMachineGroup struct {
	pulumi.CustomResourceState

	// The Azure Region where the Microsoft SQL Virtual Machine Group should exist. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name which should be used for the Microsoft SQL Virtual Machine Group. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the Resource Group where the Microsoft SQL Virtual Machine Group should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The offer type of the marketplace image cluster to be used by the SQL Virtual Machine Group. Changing this forces a new resource to be created.
	SqlImageOffer pulumi.StringOutput `pulumi:"sqlImageOffer"`
	// The sku type of the marketplace image cluster to be used by the SQL Virtual Machine Group. Possible values are `Developer` and `Enterprise`.
	SqlImageSku pulumi.StringOutput `pulumi:"sqlImageSku"`
	// A mapping of tags which should be assigned to the Microsoft SQL Virtual Machine Group.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A `wsfcDomainProfile` block as defined below.
	WsfcDomainProfile VirtualMachineGroupWsfcDomainProfileOutput `pulumi:"wsfcDomainProfile"`
}

// NewVirtualMachineGroup registers a new resource with the given unique name, arguments, and options.
func NewVirtualMachineGroup(ctx *pulumi.Context,
	name string, args *VirtualMachineGroupArgs, opts ...pulumi.ResourceOption) (*VirtualMachineGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SqlImageOffer == nil {
		return nil, errors.New("invalid value for required argument 'SqlImageOffer'")
	}
	if args.SqlImageSku == nil {
		return nil, errors.New("invalid value for required argument 'SqlImageSku'")
	}
	if args.WsfcDomainProfile == nil {
		return nil, errors.New("invalid value for required argument 'WsfcDomainProfile'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VirtualMachineGroup
	err := ctx.RegisterResource("azure:mssql/virtualMachineGroup:VirtualMachineGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVirtualMachineGroup gets an existing VirtualMachineGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVirtualMachineGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VirtualMachineGroupState, opts ...pulumi.ResourceOption) (*VirtualMachineGroup, error) {
	var resource VirtualMachineGroup
	err := ctx.ReadResource("azure:mssql/virtualMachineGroup:VirtualMachineGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VirtualMachineGroup resources.
type virtualMachineGroupState struct {
	// The Azure Region where the Microsoft SQL Virtual Machine Group should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for the Microsoft SQL Virtual Machine Group. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group where the Microsoft SQL Virtual Machine Group should exist. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The offer type of the marketplace image cluster to be used by the SQL Virtual Machine Group. Changing this forces a new resource to be created.
	SqlImageOffer *string `pulumi:"sqlImageOffer"`
	// The sku type of the marketplace image cluster to be used by the SQL Virtual Machine Group. Possible values are `Developer` and `Enterprise`.
	SqlImageSku *string `pulumi:"sqlImageSku"`
	// A mapping of tags which should be assigned to the Microsoft SQL Virtual Machine Group.
	Tags map[string]string `pulumi:"tags"`
	// A `wsfcDomainProfile` block as defined below.
	WsfcDomainProfile *VirtualMachineGroupWsfcDomainProfile `pulumi:"wsfcDomainProfile"`
}

type VirtualMachineGroupState struct {
	// The Azure Region where the Microsoft SQL Virtual Machine Group should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for the Microsoft SQL Virtual Machine Group. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group where the Microsoft SQL Virtual Machine Group should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The offer type of the marketplace image cluster to be used by the SQL Virtual Machine Group. Changing this forces a new resource to be created.
	SqlImageOffer pulumi.StringPtrInput
	// The sku type of the marketplace image cluster to be used by the SQL Virtual Machine Group. Possible values are `Developer` and `Enterprise`.
	SqlImageSku pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Microsoft SQL Virtual Machine Group.
	Tags pulumi.StringMapInput
	// A `wsfcDomainProfile` block as defined below.
	WsfcDomainProfile VirtualMachineGroupWsfcDomainProfilePtrInput
}

func (VirtualMachineGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualMachineGroupState)(nil)).Elem()
}

type virtualMachineGroupArgs struct {
	// The Azure Region where the Microsoft SQL Virtual Machine Group should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for the Microsoft SQL Virtual Machine Group. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group where the Microsoft SQL Virtual Machine Group should exist. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The offer type of the marketplace image cluster to be used by the SQL Virtual Machine Group. Changing this forces a new resource to be created.
	SqlImageOffer string `pulumi:"sqlImageOffer"`
	// The sku type of the marketplace image cluster to be used by the SQL Virtual Machine Group. Possible values are `Developer` and `Enterprise`.
	SqlImageSku string `pulumi:"sqlImageSku"`
	// A mapping of tags which should be assigned to the Microsoft SQL Virtual Machine Group.
	Tags map[string]string `pulumi:"tags"`
	// A `wsfcDomainProfile` block as defined below.
	WsfcDomainProfile VirtualMachineGroupWsfcDomainProfile `pulumi:"wsfcDomainProfile"`
}

// The set of arguments for constructing a VirtualMachineGroup resource.
type VirtualMachineGroupArgs struct {
	// The Azure Region where the Microsoft SQL Virtual Machine Group should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for the Microsoft SQL Virtual Machine Group. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group where the Microsoft SQL Virtual Machine Group should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// The offer type of the marketplace image cluster to be used by the SQL Virtual Machine Group. Changing this forces a new resource to be created.
	SqlImageOffer pulumi.StringInput
	// The sku type of the marketplace image cluster to be used by the SQL Virtual Machine Group. Possible values are `Developer` and `Enterprise`.
	SqlImageSku pulumi.StringInput
	// A mapping of tags which should be assigned to the Microsoft SQL Virtual Machine Group.
	Tags pulumi.StringMapInput
	// A `wsfcDomainProfile` block as defined below.
	WsfcDomainProfile VirtualMachineGroupWsfcDomainProfileInput
}

func (VirtualMachineGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualMachineGroupArgs)(nil)).Elem()
}

type VirtualMachineGroupInput interface {
	pulumi.Input

	ToVirtualMachineGroupOutput() VirtualMachineGroupOutput
	ToVirtualMachineGroupOutputWithContext(ctx context.Context) VirtualMachineGroupOutput
}

func (*VirtualMachineGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineGroup)(nil)).Elem()
}

func (i *VirtualMachineGroup) ToVirtualMachineGroupOutput() VirtualMachineGroupOutput {
	return i.ToVirtualMachineGroupOutputWithContext(context.Background())
}

func (i *VirtualMachineGroup) ToVirtualMachineGroupOutputWithContext(ctx context.Context) VirtualMachineGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineGroupOutput)
}

// VirtualMachineGroupArrayInput is an input type that accepts VirtualMachineGroupArray and VirtualMachineGroupArrayOutput values.
// You can construct a concrete instance of `VirtualMachineGroupArrayInput` via:
//
//	VirtualMachineGroupArray{ VirtualMachineGroupArgs{...} }
type VirtualMachineGroupArrayInput interface {
	pulumi.Input

	ToVirtualMachineGroupArrayOutput() VirtualMachineGroupArrayOutput
	ToVirtualMachineGroupArrayOutputWithContext(context.Context) VirtualMachineGroupArrayOutput
}

type VirtualMachineGroupArray []VirtualMachineGroupInput

func (VirtualMachineGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VirtualMachineGroup)(nil)).Elem()
}

func (i VirtualMachineGroupArray) ToVirtualMachineGroupArrayOutput() VirtualMachineGroupArrayOutput {
	return i.ToVirtualMachineGroupArrayOutputWithContext(context.Background())
}

func (i VirtualMachineGroupArray) ToVirtualMachineGroupArrayOutputWithContext(ctx context.Context) VirtualMachineGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineGroupArrayOutput)
}

// VirtualMachineGroupMapInput is an input type that accepts VirtualMachineGroupMap and VirtualMachineGroupMapOutput values.
// You can construct a concrete instance of `VirtualMachineGroupMapInput` via:
//
//	VirtualMachineGroupMap{ "key": VirtualMachineGroupArgs{...} }
type VirtualMachineGroupMapInput interface {
	pulumi.Input

	ToVirtualMachineGroupMapOutput() VirtualMachineGroupMapOutput
	ToVirtualMachineGroupMapOutputWithContext(context.Context) VirtualMachineGroupMapOutput
}

type VirtualMachineGroupMap map[string]VirtualMachineGroupInput

func (VirtualMachineGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VirtualMachineGroup)(nil)).Elem()
}

func (i VirtualMachineGroupMap) ToVirtualMachineGroupMapOutput() VirtualMachineGroupMapOutput {
	return i.ToVirtualMachineGroupMapOutputWithContext(context.Background())
}

func (i VirtualMachineGroupMap) ToVirtualMachineGroupMapOutputWithContext(ctx context.Context) VirtualMachineGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineGroupMapOutput)
}

type VirtualMachineGroupOutput struct{ *pulumi.OutputState }

func (VirtualMachineGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineGroup)(nil)).Elem()
}

func (o VirtualMachineGroupOutput) ToVirtualMachineGroupOutput() VirtualMachineGroupOutput {
	return o
}

func (o VirtualMachineGroupOutput) ToVirtualMachineGroupOutputWithContext(ctx context.Context) VirtualMachineGroupOutput {
	return o
}

// The Azure Region where the Microsoft SQL Virtual Machine Group should exist. Changing this forces a new resource to be created.
func (o VirtualMachineGroupOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineGroup) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name which should be used for the Microsoft SQL Virtual Machine Group. Changing this forces a new resource to be created.
func (o VirtualMachineGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the Resource Group where the Microsoft SQL Virtual Machine Group should exist. Changing this forces a new resource to be created.
func (o VirtualMachineGroupOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineGroup) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The offer type of the marketplace image cluster to be used by the SQL Virtual Machine Group. Changing this forces a new resource to be created.
func (o VirtualMachineGroupOutput) SqlImageOffer() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineGroup) pulumi.StringOutput { return v.SqlImageOffer }).(pulumi.StringOutput)
}

// The sku type of the marketplace image cluster to be used by the SQL Virtual Machine Group. Possible values are `Developer` and `Enterprise`.
func (o VirtualMachineGroupOutput) SqlImageSku() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineGroup) pulumi.StringOutput { return v.SqlImageSku }).(pulumi.StringOutput)
}

// A mapping of tags which should be assigned to the Microsoft SQL Virtual Machine Group.
func (o VirtualMachineGroupOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualMachineGroup) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A `wsfcDomainProfile` block as defined below.
func (o VirtualMachineGroupOutput) WsfcDomainProfile() VirtualMachineGroupWsfcDomainProfileOutput {
	return o.ApplyT(func(v *VirtualMachineGroup) VirtualMachineGroupWsfcDomainProfileOutput { return v.WsfcDomainProfile }).(VirtualMachineGroupWsfcDomainProfileOutput)
}

type VirtualMachineGroupArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VirtualMachineGroup)(nil)).Elem()
}

func (o VirtualMachineGroupArrayOutput) ToVirtualMachineGroupArrayOutput() VirtualMachineGroupArrayOutput {
	return o
}

func (o VirtualMachineGroupArrayOutput) ToVirtualMachineGroupArrayOutputWithContext(ctx context.Context) VirtualMachineGroupArrayOutput {
	return o
}

func (o VirtualMachineGroupArrayOutput) Index(i pulumi.IntInput) VirtualMachineGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VirtualMachineGroup {
		return vs[0].([]*VirtualMachineGroup)[vs[1].(int)]
	}).(VirtualMachineGroupOutput)
}

type VirtualMachineGroupMapOutput struct{ *pulumi.OutputState }

func (VirtualMachineGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VirtualMachineGroup)(nil)).Elem()
}

func (o VirtualMachineGroupMapOutput) ToVirtualMachineGroupMapOutput() VirtualMachineGroupMapOutput {
	return o
}

func (o VirtualMachineGroupMapOutput) ToVirtualMachineGroupMapOutputWithContext(ctx context.Context) VirtualMachineGroupMapOutput {
	return o
}

func (o VirtualMachineGroupMapOutput) MapIndex(k pulumi.StringInput) VirtualMachineGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VirtualMachineGroup {
		return vs[0].(map[string]*VirtualMachineGroup)[vs[1].(string)]
	}).(VirtualMachineGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineGroupInput)(nil)).Elem(), &VirtualMachineGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineGroupArrayInput)(nil)).Elem(), VirtualMachineGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineGroupMapInput)(nil)).Elem(), VirtualMachineGroupMap{})
	pulumi.RegisterOutputType(VirtualMachineGroupOutput{})
	pulumi.RegisterOutputType(VirtualMachineGroupArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineGroupMapOutput{})
}
