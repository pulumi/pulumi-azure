// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mssql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Azure SQL Azure Managed Database.
func LookupManagedDatabase(ctx *pulumi.Context, args *LookupManagedDatabaseArgs, opts ...pulumi.InvokeOption) (*LookupManagedDatabaseResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupManagedDatabaseResult
	err := ctx.Invoke("azure:mssql/getManagedDatabase:getManagedDatabase", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedDatabase.
type LookupManagedDatabaseArgs struct {
	// The SQL Managed Instance ID.
	ManagedInstanceId string `pulumi:"managedInstanceId"`
	// The name of this Azure SQL Azure Managed Database.
	Name string `pulumi:"name"`
}

// A collection of values returned by getManagedDatabase.
type LookupManagedDatabaseResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A `longTermRetentionPolicy` block as defined below.
	LongTermRetentionPolicies []GetManagedDatabaseLongTermRetentionPolicy `pulumi:"longTermRetentionPolicies"`
	ManagedInstanceId         string                                      `pulumi:"managedInstanceId"`
	// The name of the Managed Instance.
	ManagedInstanceName string `pulumi:"managedInstanceName"`
	Name                string `pulumi:"name"`
	// A `pointInTimeRestore` block as defined below.
	PointInTimeRestores []GetManagedDatabasePointInTimeRestore `pulumi:"pointInTimeRestores"`
	// The name of the Resource Group where the Azure SQL Azure Managed Instance exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The backup retention period in days. This is how many days Point-in-Time Restore will be supported.
	ShortTermRetentionDays int `pulumi:"shortTermRetentionDays"`
}

func LookupManagedDatabaseOutput(ctx *pulumi.Context, args LookupManagedDatabaseOutputArgs, opts ...pulumi.InvokeOption) LookupManagedDatabaseResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupManagedDatabaseResultOutput, error) {
			args := v.(LookupManagedDatabaseArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupManagedDatabaseResult
			secret, deps, err := ctx.InvokePackageRawWithDeps("azure:mssql/getManagedDatabase:getManagedDatabase", args, &rv, "", opts...)
			if err != nil {
				return LookupManagedDatabaseResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupManagedDatabaseResultOutput)
			output = pulumi.OutputWithDependencies(ctx.Context(), output, deps...).(LookupManagedDatabaseResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupManagedDatabaseResultOutput), nil
			}
			return output, nil
		}).(LookupManagedDatabaseResultOutput)
}

// A collection of arguments for invoking getManagedDatabase.
type LookupManagedDatabaseOutputArgs struct {
	// The SQL Managed Instance ID.
	ManagedInstanceId pulumi.StringInput `pulumi:"managedInstanceId"`
	// The name of this Azure SQL Azure Managed Database.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupManagedDatabaseOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedDatabaseArgs)(nil)).Elem()
}

// A collection of values returned by getManagedDatabase.
type LookupManagedDatabaseResultOutput struct{ *pulumi.OutputState }

func (LookupManagedDatabaseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedDatabaseResult)(nil)).Elem()
}

func (o LookupManagedDatabaseResultOutput) ToLookupManagedDatabaseResultOutput() LookupManagedDatabaseResultOutput {
	return o
}

func (o LookupManagedDatabaseResultOutput) ToLookupManagedDatabaseResultOutputWithContext(ctx context.Context) LookupManagedDatabaseResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupManagedDatabaseResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedDatabaseResult) string { return v.Id }).(pulumi.StringOutput)
}

// A `longTermRetentionPolicy` block as defined below.
func (o LookupManagedDatabaseResultOutput) LongTermRetentionPolicies() GetManagedDatabaseLongTermRetentionPolicyArrayOutput {
	return o.ApplyT(func(v LookupManagedDatabaseResult) []GetManagedDatabaseLongTermRetentionPolicy {
		return v.LongTermRetentionPolicies
	}).(GetManagedDatabaseLongTermRetentionPolicyArrayOutput)
}

func (o LookupManagedDatabaseResultOutput) ManagedInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedDatabaseResult) string { return v.ManagedInstanceId }).(pulumi.StringOutput)
}

// The name of the Managed Instance.
func (o LookupManagedDatabaseResultOutput) ManagedInstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedDatabaseResult) string { return v.ManagedInstanceName }).(pulumi.StringOutput)
}

func (o LookupManagedDatabaseResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedDatabaseResult) string { return v.Name }).(pulumi.StringOutput)
}

// A `pointInTimeRestore` block as defined below.
func (o LookupManagedDatabaseResultOutput) PointInTimeRestores() GetManagedDatabasePointInTimeRestoreArrayOutput {
	return o.ApplyT(func(v LookupManagedDatabaseResult) []GetManagedDatabasePointInTimeRestore {
		return v.PointInTimeRestores
	}).(GetManagedDatabasePointInTimeRestoreArrayOutput)
}

// The name of the Resource Group where the Azure SQL Azure Managed Instance exists.
func (o LookupManagedDatabaseResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedDatabaseResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The backup retention period in days. This is how many days Point-in-Time Restore will be supported.
func (o LookupManagedDatabaseResultOutput) ShortTermRetentionDays() pulumi.IntOutput {
	return o.ApplyT(func(v LookupManagedDatabaseResult) int { return v.ShortTermRetentionDays }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupManagedDatabaseResultOutput{})
}
