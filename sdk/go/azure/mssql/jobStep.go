// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mssql

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an Elastic Job Step.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/mssql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example"),
//				Location: pulumi.String("westeurope"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleServer, err := mssql.NewServer(ctx, "example", &mssql.ServerArgs{
//				Name:                       pulumi.String("example-server"),
//				Location:                   example.Location,
//				ResourceGroupName:          example.Name,
//				Version:                    pulumi.String("12.0"),
//				AdministratorLogin:         pulumi.String("4dm1n157r470r"),
//				AdministratorLoginPassword: pulumi.String("4-v3ry-53cr37-p455w0rd"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleDatabase, err := mssql.NewDatabase(ctx, "example", &mssql.DatabaseArgs{
//				Name:      pulumi.String("example-db"),
//				ServerId:  exampleServer.ID(),
//				Collation: pulumi.String("SQL_Latin1_General_CP1_CI_AS"),
//				SkuName:   pulumi.String("S1"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleJobAgent, err := mssql.NewJobAgent(ctx, "example", &mssql.JobAgentArgs{
//				Name:       pulumi.String("example-job-agent"),
//				Location:   example.Location,
//				DatabaseId: exampleDatabase.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			exampleJobCredential, err := mssql.NewJobCredential(ctx, "example", &mssql.JobCredentialArgs{
//				Name:       pulumi.String("example-job-credential"),
//				JobAgentId: exampleJobAgent.ID(),
//				Username:   pulumi.String("testusername"),
//				Password:   pulumi.String("testpassword"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleJobTargetGroup, err := mssql.NewJobTargetGroup(ctx, "example", &mssql.JobTargetGroupArgs{
//				Name:       pulumi.String("example-target-group"),
//				JobAgentId: exampleJobAgent.ID(),
//				JobTargets: mssql.JobTargetGroupJobTargetArray{
//					&mssql.JobTargetGroupJobTargetArgs{
//						ServerName:      exampleServer.Name,
//						DatabaseName:    exampleDatabase.Name,
//						JobCredentialId: exampleJobCredential.ID(),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleJob, err := mssql.NewJob(ctx, "example", &mssql.JobArgs{
//				Name:        pulumi.String("example-job"),
//				JobAgentId:  exampleJobAgent.ID(),
//				Description: pulumi.String("example description"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = mssql.NewJobStep(ctx, "test", &mssql.JobStepArgs{
//				Name:             pulumi.String("example-job-step"),
//				JobId:            exampleJob.ID(),
//				JobCredentialId:  exampleJobCredential.ID(),
//				JobTargetGroupId: exampleJobTargetGroup.ID(),
//				JobStepIndex:     pulumi.Int(1),
//				SqlScript: pulumi.String(`IF NOT EXISTS (SELECT * FROM sys.objects WHERE [name] = N'Pets')
//	  CREATE TABLE Pets (
//	    Animal NVARCHAR(50),
//	    Name NVARCHAR(50),
//	  );
//
// `),
//
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This resource uses the following Azure API Providers:
//
// * `Microsoft.Sql`: 2023-08-01-preview
//
// ## Import
//
// Elastic Job Steps can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:mssql/jobStep:JobStep example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Sql/servers/myserver1/jobAgents/myjobagent1/jobs/myjob1/steps/myjobstep1
// ```
type JobStep struct {
	pulumi.CustomResourceState

	// The initial retry interval in seconds. Defaults to `1`.
	InitialRetryIntervalSeconds pulumi.IntPtrOutput `pulumi:"initialRetryIntervalSeconds"`
	// The ID of the Elastic Job Credential to use when executing this Elastic Job Step.
	JobCredentialId pulumi.StringOutput `pulumi:"jobCredentialId"`
	// The ID of the Elastic Job. Changing this forces a new Elastic Job Step to be created.
	JobId pulumi.StringOutput `pulumi:"jobId"`
	// The index at which to insert this Elastic Job Step into the Elastic Job.
	//
	// > **Note:** This value must be greater than or equal to 1 and less than or equal to the number of job steps in the Elastic Job.
	JobStepIndex pulumi.IntOutput `pulumi:"jobStepIndex"`
	// The ID of the Elastic Job Target Group.
	JobTargetGroupId pulumi.StringOutput `pulumi:"jobTargetGroupId"`
	// The maximum retry interval in seconds. Defaults to `120`.
	//
	// > **Note:** `maximumRetryIntervalSeconds` must be greater than `initialRetryIntervalSeconds`.
	MaximumRetryIntervalSeconds pulumi.IntPtrOutput `pulumi:"maximumRetryIntervalSeconds"`
	// The name which should be used for this Elastic Job Step. Changing this forces a new Elastic Job Step to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// An `outputTarget` block as defined below.
	OutputTarget JobStepOutputTargetPtrOutput `pulumi:"outputTarget"`
	// The number of retry attempts. Defaults to `10`.
	RetryAttempts pulumi.IntPtrOutput `pulumi:"retryAttempts"`
	// The multiplier for time between retries. Defaults to `2`.
	RetryIntervalBackoffMultiplier pulumi.Float64PtrOutput `pulumi:"retryIntervalBackoffMultiplier"`
	// The T-SQL script to be executed by this Elastic Job Step.
	//
	// > **Note:** While Azure places no restrictions on the script provided here, it is recommended to ensure the script is idempotent.
	SqlScript pulumi.StringOutput `pulumi:"sqlScript"`
	// The execution timeout in seconds for this Elastic Job Step. Defaults to `43200`.
	TimeoutSeconds pulumi.IntPtrOutput `pulumi:"timeoutSeconds"`
}

// NewJobStep registers a new resource with the given unique name, arguments, and options.
func NewJobStep(ctx *pulumi.Context,
	name string, args *JobStepArgs, opts ...pulumi.ResourceOption) (*JobStep, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.JobCredentialId == nil {
		return nil, errors.New("invalid value for required argument 'JobCredentialId'")
	}
	if args.JobId == nil {
		return nil, errors.New("invalid value for required argument 'JobId'")
	}
	if args.JobStepIndex == nil {
		return nil, errors.New("invalid value for required argument 'JobStepIndex'")
	}
	if args.JobTargetGroupId == nil {
		return nil, errors.New("invalid value for required argument 'JobTargetGroupId'")
	}
	if args.SqlScript == nil {
		return nil, errors.New("invalid value for required argument 'SqlScript'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource JobStep
	err := ctx.RegisterResource("azure:mssql/jobStep:JobStep", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJobStep gets an existing JobStep resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJobStep(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *JobStepState, opts ...pulumi.ResourceOption) (*JobStep, error) {
	var resource JobStep
	err := ctx.ReadResource("azure:mssql/jobStep:JobStep", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering JobStep resources.
type jobStepState struct {
	// The initial retry interval in seconds. Defaults to `1`.
	InitialRetryIntervalSeconds *int `pulumi:"initialRetryIntervalSeconds"`
	// The ID of the Elastic Job Credential to use when executing this Elastic Job Step.
	JobCredentialId *string `pulumi:"jobCredentialId"`
	// The ID of the Elastic Job. Changing this forces a new Elastic Job Step to be created.
	JobId *string `pulumi:"jobId"`
	// The index at which to insert this Elastic Job Step into the Elastic Job.
	//
	// > **Note:** This value must be greater than or equal to 1 and less than or equal to the number of job steps in the Elastic Job.
	JobStepIndex *int `pulumi:"jobStepIndex"`
	// The ID of the Elastic Job Target Group.
	JobTargetGroupId *string `pulumi:"jobTargetGroupId"`
	// The maximum retry interval in seconds. Defaults to `120`.
	//
	// > **Note:** `maximumRetryIntervalSeconds` must be greater than `initialRetryIntervalSeconds`.
	MaximumRetryIntervalSeconds *int `pulumi:"maximumRetryIntervalSeconds"`
	// The name which should be used for this Elastic Job Step. Changing this forces a new Elastic Job Step to be created.
	Name *string `pulumi:"name"`
	// An `outputTarget` block as defined below.
	OutputTarget *JobStepOutputTarget `pulumi:"outputTarget"`
	// The number of retry attempts. Defaults to `10`.
	RetryAttempts *int `pulumi:"retryAttempts"`
	// The multiplier for time between retries. Defaults to `2`.
	RetryIntervalBackoffMultiplier *float64 `pulumi:"retryIntervalBackoffMultiplier"`
	// The T-SQL script to be executed by this Elastic Job Step.
	//
	// > **Note:** While Azure places no restrictions on the script provided here, it is recommended to ensure the script is idempotent.
	SqlScript *string `pulumi:"sqlScript"`
	// The execution timeout in seconds for this Elastic Job Step. Defaults to `43200`.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

type JobStepState struct {
	// The initial retry interval in seconds. Defaults to `1`.
	InitialRetryIntervalSeconds pulumi.IntPtrInput
	// The ID of the Elastic Job Credential to use when executing this Elastic Job Step.
	JobCredentialId pulumi.StringPtrInput
	// The ID of the Elastic Job. Changing this forces a new Elastic Job Step to be created.
	JobId pulumi.StringPtrInput
	// The index at which to insert this Elastic Job Step into the Elastic Job.
	//
	// > **Note:** This value must be greater than or equal to 1 and less than or equal to the number of job steps in the Elastic Job.
	JobStepIndex pulumi.IntPtrInput
	// The ID of the Elastic Job Target Group.
	JobTargetGroupId pulumi.StringPtrInput
	// The maximum retry interval in seconds. Defaults to `120`.
	//
	// > **Note:** `maximumRetryIntervalSeconds` must be greater than `initialRetryIntervalSeconds`.
	MaximumRetryIntervalSeconds pulumi.IntPtrInput
	// The name which should be used for this Elastic Job Step. Changing this forces a new Elastic Job Step to be created.
	Name pulumi.StringPtrInput
	// An `outputTarget` block as defined below.
	OutputTarget JobStepOutputTargetPtrInput
	// The number of retry attempts. Defaults to `10`.
	RetryAttempts pulumi.IntPtrInput
	// The multiplier for time between retries. Defaults to `2`.
	RetryIntervalBackoffMultiplier pulumi.Float64PtrInput
	// The T-SQL script to be executed by this Elastic Job Step.
	//
	// > **Note:** While Azure places no restrictions on the script provided here, it is recommended to ensure the script is idempotent.
	SqlScript pulumi.StringPtrInput
	// The execution timeout in seconds for this Elastic Job Step. Defaults to `43200`.
	TimeoutSeconds pulumi.IntPtrInput
}

func (JobStepState) ElementType() reflect.Type {
	return reflect.TypeOf((*jobStepState)(nil)).Elem()
}

type jobStepArgs struct {
	// The initial retry interval in seconds. Defaults to `1`.
	InitialRetryIntervalSeconds *int `pulumi:"initialRetryIntervalSeconds"`
	// The ID of the Elastic Job Credential to use when executing this Elastic Job Step.
	JobCredentialId string `pulumi:"jobCredentialId"`
	// The ID of the Elastic Job. Changing this forces a new Elastic Job Step to be created.
	JobId string `pulumi:"jobId"`
	// The index at which to insert this Elastic Job Step into the Elastic Job.
	//
	// > **Note:** This value must be greater than or equal to 1 and less than or equal to the number of job steps in the Elastic Job.
	JobStepIndex int `pulumi:"jobStepIndex"`
	// The ID of the Elastic Job Target Group.
	JobTargetGroupId string `pulumi:"jobTargetGroupId"`
	// The maximum retry interval in seconds. Defaults to `120`.
	//
	// > **Note:** `maximumRetryIntervalSeconds` must be greater than `initialRetryIntervalSeconds`.
	MaximumRetryIntervalSeconds *int `pulumi:"maximumRetryIntervalSeconds"`
	// The name which should be used for this Elastic Job Step. Changing this forces a new Elastic Job Step to be created.
	Name *string `pulumi:"name"`
	// An `outputTarget` block as defined below.
	OutputTarget *JobStepOutputTarget `pulumi:"outputTarget"`
	// The number of retry attempts. Defaults to `10`.
	RetryAttempts *int `pulumi:"retryAttempts"`
	// The multiplier for time between retries. Defaults to `2`.
	RetryIntervalBackoffMultiplier *float64 `pulumi:"retryIntervalBackoffMultiplier"`
	// The T-SQL script to be executed by this Elastic Job Step.
	//
	// > **Note:** While Azure places no restrictions on the script provided here, it is recommended to ensure the script is idempotent.
	SqlScript string `pulumi:"sqlScript"`
	// The execution timeout in seconds for this Elastic Job Step. Defaults to `43200`.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// The set of arguments for constructing a JobStep resource.
type JobStepArgs struct {
	// The initial retry interval in seconds. Defaults to `1`.
	InitialRetryIntervalSeconds pulumi.IntPtrInput
	// The ID of the Elastic Job Credential to use when executing this Elastic Job Step.
	JobCredentialId pulumi.StringInput
	// The ID of the Elastic Job. Changing this forces a new Elastic Job Step to be created.
	JobId pulumi.StringInput
	// The index at which to insert this Elastic Job Step into the Elastic Job.
	//
	// > **Note:** This value must be greater than or equal to 1 and less than or equal to the number of job steps in the Elastic Job.
	JobStepIndex pulumi.IntInput
	// The ID of the Elastic Job Target Group.
	JobTargetGroupId pulumi.StringInput
	// The maximum retry interval in seconds. Defaults to `120`.
	//
	// > **Note:** `maximumRetryIntervalSeconds` must be greater than `initialRetryIntervalSeconds`.
	MaximumRetryIntervalSeconds pulumi.IntPtrInput
	// The name which should be used for this Elastic Job Step. Changing this forces a new Elastic Job Step to be created.
	Name pulumi.StringPtrInput
	// An `outputTarget` block as defined below.
	OutputTarget JobStepOutputTargetPtrInput
	// The number of retry attempts. Defaults to `10`.
	RetryAttempts pulumi.IntPtrInput
	// The multiplier for time between retries. Defaults to `2`.
	RetryIntervalBackoffMultiplier pulumi.Float64PtrInput
	// The T-SQL script to be executed by this Elastic Job Step.
	//
	// > **Note:** While Azure places no restrictions on the script provided here, it is recommended to ensure the script is idempotent.
	SqlScript pulumi.StringInput
	// The execution timeout in seconds for this Elastic Job Step. Defaults to `43200`.
	TimeoutSeconds pulumi.IntPtrInput
}

func (JobStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*jobStepArgs)(nil)).Elem()
}

type JobStepInput interface {
	pulumi.Input

	ToJobStepOutput() JobStepOutput
	ToJobStepOutputWithContext(ctx context.Context) JobStepOutput
}

func (*JobStep) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStep)(nil)).Elem()
}

func (i *JobStep) ToJobStepOutput() JobStepOutput {
	return i.ToJobStepOutputWithContext(context.Background())
}

func (i *JobStep) ToJobStepOutputWithContext(ctx context.Context) JobStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStepOutput)
}

// JobStepArrayInput is an input type that accepts JobStepArray and JobStepArrayOutput values.
// You can construct a concrete instance of `JobStepArrayInput` via:
//
//	JobStepArray{ JobStepArgs{...} }
type JobStepArrayInput interface {
	pulumi.Input

	ToJobStepArrayOutput() JobStepArrayOutput
	ToJobStepArrayOutputWithContext(context.Context) JobStepArrayOutput
}

type JobStepArray []JobStepInput

func (JobStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*JobStep)(nil)).Elem()
}

func (i JobStepArray) ToJobStepArrayOutput() JobStepArrayOutput {
	return i.ToJobStepArrayOutputWithContext(context.Background())
}

func (i JobStepArray) ToJobStepArrayOutputWithContext(ctx context.Context) JobStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStepArrayOutput)
}

// JobStepMapInput is an input type that accepts JobStepMap and JobStepMapOutput values.
// You can construct a concrete instance of `JobStepMapInput` via:
//
//	JobStepMap{ "key": JobStepArgs{...} }
type JobStepMapInput interface {
	pulumi.Input

	ToJobStepMapOutput() JobStepMapOutput
	ToJobStepMapOutputWithContext(context.Context) JobStepMapOutput
}

type JobStepMap map[string]JobStepInput

func (JobStepMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*JobStep)(nil)).Elem()
}

func (i JobStepMap) ToJobStepMapOutput() JobStepMapOutput {
	return i.ToJobStepMapOutputWithContext(context.Background())
}

func (i JobStepMap) ToJobStepMapOutputWithContext(ctx context.Context) JobStepMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStepMapOutput)
}

type JobStepOutput struct{ *pulumi.OutputState }

func (JobStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStep)(nil)).Elem()
}

func (o JobStepOutput) ToJobStepOutput() JobStepOutput {
	return o
}

func (o JobStepOutput) ToJobStepOutputWithContext(ctx context.Context) JobStepOutput {
	return o
}

// The initial retry interval in seconds. Defaults to `1`.
func (o JobStepOutput) InitialRetryIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobStep) pulumi.IntPtrOutput { return v.InitialRetryIntervalSeconds }).(pulumi.IntPtrOutput)
}

// The ID of the Elastic Job Credential to use when executing this Elastic Job Step.
func (o JobStepOutput) JobCredentialId() pulumi.StringOutput {
	return o.ApplyT(func(v *JobStep) pulumi.StringOutput { return v.JobCredentialId }).(pulumi.StringOutput)
}

// The ID of the Elastic Job. Changing this forces a new Elastic Job Step to be created.
func (o JobStepOutput) JobId() pulumi.StringOutput {
	return o.ApplyT(func(v *JobStep) pulumi.StringOutput { return v.JobId }).(pulumi.StringOutput)
}

// The index at which to insert this Elastic Job Step into the Elastic Job.
//
// > **Note:** This value must be greater than or equal to 1 and less than or equal to the number of job steps in the Elastic Job.
func (o JobStepOutput) JobStepIndex() pulumi.IntOutput {
	return o.ApplyT(func(v *JobStep) pulumi.IntOutput { return v.JobStepIndex }).(pulumi.IntOutput)
}

// The ID of the Elastic Job Target Group.
func (o JobStepOutput) JobTargetGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *JobStep) pulumi.StringOutput { return v.JobTargetGroupId }).(pulumi.StringOutput)
}

// The maximum retry interval in seconds. Defaults to `120`.
//
// > **Note:** `maximumRetryIntervalSeconds` must be greater than `initialRetryIntervalSeconds`.
func (o JobStepOutput) MaximumRetryIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobStep) pulumi.IntPtrOutput { return v.MaximumRetryIntervalSeconds }).(pulumi.IntPtrOutput)
}

// The name which should be used for this Elastic Job Step. Changing this forces a new Elastic Job Step to be created.
func (o JobStepOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *JobStep) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// An `outputTarget` block as defined below.
func (o JobStepOutput) OutputTarget() JobStepOutputTargetPtrOutput {
	return o.ApplyT(func(v *JobStep) JobStepOutputTargetPtrOutput { return v.OutputTarget }).(JobStepOutputTargetPtrOutput)
}

// The number of retry attempts. Defaults to `10`.
func (o JobStepOutput) RetryAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobStep) pulumi.IntPtrOutput { return v.RetryAttempts }).(pulumi.IntPtrOutput)
}

// The multiplier for time between retries. Defaults to `2`.
func (o JobStepOutput) RetryIntervalBackoffMultiplier() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *JobStep) pulumi.Float64PtrOutput { return v.RetryIntervalBackoffMultiplier }).(pulumi.Float64PtrOutput)
}

// The T-SQL script to be executed by this Elastic Job Step.
//
// > **Note:** While Azure places no restrictions on the script provided here, it is recommended to ensure the script is idempotent.
func (o JobStepOutput) SqlScript() pulumi.StringOutput {
	return o.ApplyT(func(v *JobStep) pulumi.StringOutput { return v.SqlScript }).(pulumi.StringOutput)
}

// The execution timeout in seconds for this Elastic Job Step. Defaults to `43200`.
func (o JobStepOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobStep) pulumi.IntPtrOutput { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type JobStepArrayOutput struct{ *pulumi.OutputState }

func (JobStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*JobStep)(nil)).Elem()
}

func (o JobStepArrayOutput) ToJobStepArrayOutput() JobStepArrayOutput {
	return o
}

func (o JobStepArrayOutput) ToJobStepArrayOutputWithContext(ctx context.Context) JobStepArrayOutput {
	return o
}

func (o JobStepArrayOutput) Index(i pulumi.IntInput) JobStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *JobStep {
		return vs[0].([]*JobStep)[vs[1].(int)]
	}).(JobStepOutput)
}

type JobStepMapOutput struct{ *pulumi.OutputState }

func (JobStepMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*JobStep)(nil)).Elem()
}

func (o JobStepMapOutput) ToJobStepMapOutput() JobStepMapOutput {
	return o
}

func (o JobStepMapOutput) ToJobStepMapOutputWithContext(ctx context.Context) JobStepMapOutput {
	return o
}

func (o JobStepMapOutput) MapIndex(k pulumi.StringInput) JobStepOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *JobStep {
		return vs[0].(map[string]*JobStep)[vs[1].(string)]
	}).(JobStepOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*JobStepInput)(nil)).Elem(), &JobStep{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobStepArrayInput)(nil)).Elem(), JobStepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobStepMapInput)(nil)).Elem(), JobStepMap{})
	pulumi.RegisterOutputType(JobStepOutput{})
	pulumi.RegisterOutputType(JobStepArrayOutput{})
	pulumi.RegisterOutputType(JobStepMapOutput{})
}
