// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mssql

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	core/resourceGroup "github.com/pulumi/pulumi-azure/sdk/v1/go/azure/core/resourceGroup"
//	mssql/managedDatabase "github.com/pulumi/pulumi-azure/sdk/v1/go/azure/mssql/managedDatabase"
//	mssql/managedInstance "github.com/pulumi/pulumi-azure/sdk/v1/go/azure/mssql/managedInstance"
//	network/subnet "github.com/pulumi/pulumi-azure/sdk/v1/go/azure/network/subnet"
//	network/virtualNetwork "github.com/pulumi/pulumi-azure/sdk/v1/go/azure/network/virtualNetwork"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// example, err := core/resourceGroup.NewResourceGroup(ctx, "example", &core/resourceGroup.ResourceGroupArgs{
// Name: "example",
// Location: "West Europe",
// })
// if err != nil {
// return err
// }
// exampleVirtualNetwork, err := network/virtualNetwork.NewVirtualNetwork(ctx, "example", &network/virtualNetwork.VirtualNetworkArgs{
// Name: "example",
// Location: example.Location,
// ResourceGroupName: example.Name,
// AddressSpaces: []string{
// "10.0.0.0/16",
// },
// })
// if err != nil {
// return err
// }
// exampleSubnet, err := network/subnet.NewSubnet(ctx, "example", &network/subnet.SubnetArgs{
// Name: "example",
// ResourceGroupName: example.Name,
// VirtualNetworkName: exampleVirtualNetwork.Name,
// AddressPrefixes: []string{
// "10.0.2.0/24",
// },
// })
// if err != nil {
// return err
// }
// exampleManagedInstance, err := mssql/managedInstance.NewManagedInstance(ctx, "example", &mssql/managedInstance.ManagedInstanceArgs{
// Name: "managedsqlinstance",
// ResourceGroupName: example.Name,
// Location: example.Location,
// LicenseType: "BasePrice",
// SkuName: "GP_Gen5",
// StorageSizeInGb: 32,
// SubnetId: exampleSubnet.Id,
// Vcores: 4,
// AdministratorLogin: "msadministrator",
// AdministratorLoginPassword: "thisIsDog11",
// })
// if err != nil {
// return err
// }
// _, err = mssql/managedDatabase.NewManagedDatabase(ctx, "example", &mssql/managedDatabase.ManagedDatabaseArgs{
// Name: "example",
// ManagedInstanceId: exampleManagedInstance.Id,
// })
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
//
// ## Import
//
// SQL Managed Databases can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:mssql/managedDatabase:ManagedDatabase example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.Sql/managedInstances/myserver/databases/mydatabase
// ```
type ManagedDatabase struct {
	pulumi.CustomResourceState

	// A `longTermRetentionPolicy` block as defined below.
	LongTermRetentionPolicy ManagedDatabaseLongTermRetentionPolicyOutput `pulumi:"longTermRetentionPolicy"`
	// The ID of the Azure SQL Managed Instance on which to create this Managed Database. Changing this forces a new resource to be created.
	ManagedInstanceId pulumi.StringOutput `pulumi:"managedInstanceId"`
	// The name of the Managed Database to create. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// A `pointInTimeRestore` block as defined below.
	PointInTimeRestore ManagedDatabasePointInTimeRestorePtrOutput `pulumi:"pointInTimeRestore"`
	// The backup retention period in days. This is how many days Point-in-Time Restore will be supported.
	ShortTermRetentionDays pulumi.IntPtrOutput `pulumi:"shortTermRetentionDays"`
}

// NewManagedDatabase registers a new resource with the given unique name, arguments, and options.
func NewManagedDatabase(ctx *pulumi.Context,
	name string, args *ManagedDatabaseArgs, opts ...pulumi.ResourceOption) (*ManagedDatabase, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ManagedInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'ManagedInstanceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ManagedDatabase
	err := ctx.RegisterResource("azure:mssql/managedDatabase:ManagedDatabase", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedDatabase gets an existing ManagedDatabase resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedDatabase(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedDatabaseState, opts ...pulumi.ResourceOption) (*ManagedDatabase, error) {
	var resource ManagedDatabase
	err := ctx.ReadResource("azure:mssql/managedDatabase:ManagedDatabase", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedDatabase resources.
type managedDatabaseState struct {
	// A `longTermRetentionPolicy` block as defined below.
	LongTermRetentionPolicy *ManagedDatabaseLongTermRetentionPolicy `pulumi:"longTermRetentionPolicy"`
	// The ID of the Azure SQL Managed Instance on which to create this Managed Database. Changing this forces a new resource to be created.
	ManagedInstanceId *string `pulumi:"managedInstanceId"`
	// The name of the Managed Database to create. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A `pointInTimeRestore` block as defined below.
	PointInTimeRestore *ManagedDatabasePointInTimeRestore `pulumi:"pointInTimeRestore"`
	// The backup retention period in days. This is how many days Point-in-Time Restore will be supported.
	ShortTermRetentionDays *int `pulumi:"shortTermRetentionDays"`
}

type ManagedDatabaseState struct {
	// A `longTermRetentionPolicy` block as defined below.
	LongTermRetentionPolicy ManagedDatabaseLongTermRetentionPolicyPtrInput
	// The ID of the Azure SQL Managed Instance on which to create this Managed Database. Changing this forces a new resource to be created.
	ManagedInstanceId pulumi.StringPtrInput
	// The name of the Managed Database to create. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A `pointInTimeRestore` block as defined below.
	PointInTimeRestore ManagedDatabasePointInTimeRestorePtrInput
	// The backup retention period in days. This is how many days Point-in-Time Restore will be supported.
	ShortTermRetentionDays pulumi.IntPtrInput
}

func (ManagedDatabaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedDatabaseState)(nil)).Elem()
}

type managedDatabaseArgs struct {
	// A `longTermRetentionPolicy` block as defined below.
	LongTermRetentionPolicy *ManagedDatabaseLongTermRetentionPolicy `pulumi:"longTermRetentionPolicy"`
	// The ID of the Azure SQL Managed Instance on which to create this Managed Database. Changing this forces a new resource to be created.
	ManagedInstanceId string `pulumi:"managedInstanceId"`
	// The name of the Managed Database to create. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A `pointInTimeRestore` block as defined below.
	PointInTimeRestore *ManagedDatabasePointInTimeRestore `pulumi:"pointInTimeRestore"`
	// The backup retention period in days. This is how many days Point-in-Time Restore will be supported.
	ShortTermRetentionDays *int `pulumi:"shortTermRetentionDays"`
}

// The set of arguments for constructing a ManagedDatabase resource.
type ManagedDatabaseArgs struct {
	// A `longTermRetentionPolicy` block as defined below.
	LongTermRetentionPolicy ManagedDatabaseLongTermRetentionPolicyPtrInput
	// The ID of the Azure SQL Managed Instance on which to create this Managed Database. Changing this forces a new resource to be created.
	ManagedInstanceId pulumi.StringInput
	// The name of the Managed Database to create. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A `pointInTimeRestore` block as defined below.
	PointInTimeRestore ManagedDatabasePointInTimeRestorePtrInput
	// The backup retention period in days. This is how many days Point-in-Time Restore will be supported.
	ShortTermRetentionDays pulumi.IntPtrInput
}

func (ManagedDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedDatabaseArgs)(nil)).Elem()
}

type ManagedDatabaseInput interface {
	pulumi.Input

	ToManagedDatabaseOutput() ManagedDatabaseOutput
	ToManagedDatabaseOutputWithContext(ctx context.Context) ManagedDatabaseOutput
}

func (*ManagedDatabase) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabase)(nil)).Elem()
}

func (i *ManagedDatabase) ToManagedDatabaseOutput() ManagedDatabaseOutput {
	return i.ToManagedDatabaseOutputWithContext(context.Background())
}

func (i *ManagedDatabase) ToManagedDatabaseOutputWithContext(ctx context.Context) ManagedDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOutput)
}

// ManagedDatabaseArrayInput is an input type that accepts ManagedDatabaseArray and ManagedDatabaseArrayOutput values.
// You can construct a concrete instance of `ManagedDatabaseArrayInput` via:
//
//	ManagedDatabaseArray{ ManagedDatabaseArgs{...} }
type ManagedDatabaseArrayInput interface {
	pulumi.Input

	ToManagedDatabaseArrayOutput() ManagedDatabaseArrayOutput
	ToManagedDatabaseArrayOutputWithContext(context.Context) ManagedDatabaseArrayOutput
}

type ManagedDatabaseArray []ManagedDatabaseInput

func (ManagedDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedDatabase)(nil)).Elem()
}

func (i ManagedDatabaseArray) ToManagedDatabaseArrayOutput() ManagedDatabaseArrayOutput {
	return i.ToManagedDatabaseArrayOutputWithContext(context.Background())
}

func (i ManagedDatabaseArray) ToManagedDatabaseArrayOutputWithContext(ctx context.Context) ManagedDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseArrayOutput)
}

// ManagedDatabaseMapInput is an input type that accepts ManagedDatabaseMap and ManagedDatabaseMapOutput values.
// You can construct a concrete instance of `ManagedDatabaseMapInput` via:
//
//	ManagedDatabaseMap{ "key": ManagedDatabaseArgs{...} }
type ManagedDatabaseMapInput interface {
	pulumi.Input

	ToManagedDatabaseMapOutput() ManagedDatabaseMapOutput
	ToManagedDatabaseMapOutputWithContext(context.Context) ManagedDatabaseMapOutput
}

type ManagedDatabaseMap map[string]ManagedDatabaseInput

func (ManagedDatabaseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedDatabase)(nil)).Elem()
}

func (i ManagedDatabaseMap) ToManagedDatabaseMapOutput() ManagedDatabaseMapOutput {
	return i.ToManagedDatabaseMapOutputWithContext(context.Background())
}

func (i ManagedDatabaseMap) ToManagedDatabaseMapOutputWithContext(ctx context.Context) ManagedDatabaseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseMapOutput)
}

type ManagedDatabaseOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabase)(nil)).Elem()
}

func (o ManagedDatabaseOutput) ToManagedDatabaseOutput() ManagedDatabaseOutput {
	return o
}

func (o ManagedDatabaseOutput) ToManagedDatabaseOutputWithContext(ctx context.Context) ManagedDatabaseOutput {
	return o
}

// A `longTermRetentionPolicy` block as defined below.
func (o ManagedDatabaseOutput) LongTermRetentionPolicy() ManagedDatabaseLongTermRetentionPolicyOutput {
	return o.ApplyT(func(v *ManagedDatabase) ManagedDatabaseLongTermRetentionPolicyOutput {
		return v.LongTermRetentionPolicy
	}).(ManagedDatabaseLongTermRetentionPolicyOutput)
}

// The ID of the Azure SQL Managed Instance on which to create this Managed Database. Changing this forces a new resource to be created.
func (o ManagedDatabaseOutput) ManagedInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedDatabase) pulumi.StringOutput { return v.ManagedInstanceId }).(pulumi.StringOutput)
}

// The name of the Managed Database to create. Changing this forces a new resource to be created.
func (o ManagedDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedDatabase) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A `pointInTimeRestore` block as defined below.
func (o ManagedDatabaseOutput) PointInTimeRestore() ManagedDatabasePointInTimeRestorePtrOutput {
	return o.ApplyT(func(v *ManagedDatabase) ManagedDatabasePointInTimeRestorePtrOutput { return v.PointInTimeRestore }).(ManagedDatabasePointInTimeRestorePtrOutput)
}

// The backup retention period in days. This is how many days Point-in-Time Restore will be supported.
func (o ManagedDatabaseOutput) ShortTermRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabase) pulumi.IntPtrOutput { return v.ShortTermRetentionDays }).(pulumi.IntPtrOutput)
}

type ManagedDatabaseArrayOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedDatabase)(nil)).Elem()
}

func (o ManagedDatabaseArrayOutput) ToManagedDatabaseArrayOutput() ManagedDatabaseArrayOutput {
	return o
}

func (o ManagedDatabaseArrayOutput) ToManagedDatabaseArrayOutputWithContext(ctx context.Context) ManagedDatabaseArrayOutput {
	return o
}

func (o ManagedDatabaseArrayOutput) Index(i pulumi.IntInput) ManagedDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ManagedDatabase {
		return vs[0].([]*ManagedDatabase)[vs[1].(int)]
	}).(ManagedDatabaseOutput)
}

type ManagedDatabaseMapOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedDatabase)(nil)).Elem()
}

func (o ManagedDatabaseMapOutput) ToManagedDatabaseMapOutput() ManagedDatabaseMapOutput {
	return o
}

func (o ManagedDatabaseMapOutput) ToManagedDatabaseMapOutputWithContext(ctx context.Context) ManagedDatabaseMapOutput {
	return o
}

func (o ManagedDatabaseMapOutput) MapIndex(k pulumi.StringInput) ManagedDatabaseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ManagedDatabase {
		return vs[0].(map[string]*ManagedDatabase)[vs[1].(string)]
	}).(ManagedDatabaseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseInput)(nil)).Elem(), &ManagedDatabase{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseArrayInput)(nil)).Elem(), ManagedDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseMapInput)(nil)).Elem(), ManagedDatabaseMap{})
	pulumi.RegisterOutputType(ManagedDatabaseOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseArrayOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseMapOutput{})
}
