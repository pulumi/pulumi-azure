// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package mssql

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages a Database Vulnerability Assessment Rule Baseline.
//
// > **NOTE** Database Vulnerability Assessment is currently only available for MS SQL databases.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"fmt"
//
// 	"github.com/pulumi/pulumi-azure/sdk/v3/go/azure/core"
// 	"github.com/pulumi/pulumi-azure/sdk/v3/go/azure/mssql"
// 	"github.com/pulumi/pulumi-azure/sdk/v3/go/azure/sql"
// 	"github.com/pulumi/pulumi-azure/sdk/v3/go/azure/storage"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
// 			Location: pulumi.String("West US"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleSqlServer, err := sql.NewSqlServer(ctx, "exampleSqlServer", &sql.SqlServerArgs{
// 			ResourceGroupName:          exampleResourceGroup.Name,
// 			Location:                   exampleResourceGroup.Location,
// 			Version:                    pulumi.String("12.0"),
// 			AdministratorLogin:         pulumi.String("4dm1n157r470r"),
// 			AdministratorLoginPassword: pulumi.String("4-v3ry-53cr37-p455w0rd"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleAccount, err := storage.NewAccount(ctx, "exampleAccount", &storage.AccountArgs{
// 			ResourceGroupName:      exampleResourceGroup.Name,
// 			Location:               exampleResourceGroup.Location,
// 			AccountTier:            pulumi.String("Standard"),
// 			AccountReplicationType: pulumi.String("GRS"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleContainer, err := storage.NewContainer(ctx, "exampleContainer", &storage.ContainerArgs{
// 			StorageAccountName:  exampleAccount.Name,
// 			ContainerAccessType: pulumi.String("private"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleServerSecurityAlertPolicy, err := mssql.NewServerSecurityAlertPolicy(ctx, "exampleServerSecurityAlertPolicy", &mssql.ServerSecurityAlertPolicyArgs{
// 			ResourceGroupName: exampleResourceGroup.Name,
// 			ServerName:        exampleSqlServer.Name,
// 			State:             pulumi.String("Enabled"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleDatabase, err := sql.NewDatabase(ctx, "exampleDatabase", &sql.DatabaseArgs{
// 			ResourceGroupName: exampleResourceGroup.Name,
// 			ServerName:        exampleSqlServer.Name,
// 			Location:          exampleResourceGroup.Location,
// 			Edition:           pulumi.String("Standard"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleServerVulnerabilityAssessment, err := mssql.NewServerVulnerabilityAssessment(ctx, "exampleServerVulnerabilityAssessment", &mssql.ServerVulnerabilityAssessmentArgs{
// 			ServerSecurityAlertPolicyId: exampleServerSecurityAlertPolicy.ID(),
// 			StorageContainerPath: pulumi.All(exampleAccount.PrimaryBlobEndpoint, exampleContainer.Name).ApplyT(func(_args []interface{}) (string, error) {
// 				primaryBlobEndpoint := _args[0].(string)
// 				name := _args[1].(string)
// 				return fmt.Sprintf("%v%v%v", primaryBlobEndpoint, name, "/"), nil
// 			}).(pulumi.StringOutput),
// 			StorageAccountAccessKey: exampleAccount.PrimaryAccessKey,
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = mssql.NewDatabaseVulnerabilityAssessmentRuleBaseline(ctx, "exampleDatabaseVulnerabilityAssessmentRuleBaseline", &mssql.DatabaseVulnerabilityAssessmentRuleBaselineArgs{
// 			ServerVulnerabilityAssessmentId: exampleServerVulnerabilityAssessment.ID(),
// 			DatabaseName:                    exampleDatabase.Name,
// 			RuleId:                          pulumi.String("VA2065"),
// 			BaselineName:                    pulumi.String("master"),
// 			BaselineResults: mssql.DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArray{
// 				&mssql.DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArgs{
// 					Results: pulumi.StringArray{
// 						pulumi.String("allowedip1"),
// 						pulumi.String("123.123.123.123"),
// 						pulumi.String("123.123.123.123"),
// 					},
// 				},
// 				&mssql.DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArgs{
// 					Results: pulumi.StringArray{
// 						pulumi.String("allowedip2"),
// 						pulumi.String("255.255.255.255"),
// 						pulumi.String("255.255.255.255"),
// 					},
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Database Vulnerability Assessment Rule Baseline can be imported using the `resource id`, e.g.
//
// ```sh
//  $ pulumi import azure:mssql/databaseVulnerabilityAssessmentRuleBaseline:DatabaseVulnerabilityAssessmentRuleBaseline example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/acceptanceTestResourceGroup1/providers/Microsoft.Sql/servers/mssqlserver/databases/mysqldatabase/vulnerabilityAssessments/Default/rules/VA2065/baselines/master
// ```
type DatabaseVulnerabilityAssessmentRuleBaseline struct {
	pulumi.CustomResourceState

	// The name of the vulnerability assessment rule baseline. Valid options are `default` and `master`. `default` implies a baseline on a database level rule and `master` for server level rule. Defaults to `default`. Changing this forces a new resource to be created.
	BaselineName pulumi.StringPtrOutput `pulumi:"baselineName"`
	// A `baselineResult` block as documented below. Multiple blocks can be defined.
	BaselineResults DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput `pulumi:"baselineResults"`
	// Specifies the name of the MS SQL Database. Changing this forces a new resource to be created.
	DatabaseName pulumi.StringOutput `pulumi:"databaseName"`
	// The vulnerability assessment rule ID. Changing this forces a new resource to be created.
	RuleId pulumi.StringOutput `pulumi:"ruleId"`
	// The Vulnerability Assessment ID of the MS SQL Server. Changing this forces a new resource to be created.
	ServerVulnerabilityAssessmentId pulumi.StringOutput `pulumi:"serverVulnerabilityAssessmentId"`
}

// NewDatabaseVulnerabilityAssessmentRuleBaseline registers a new resource with the given unique name, arguments, and options.
func NewDatabaseVulnerabilityAssessmentRuleBaseline(ctx *pulumi.Context,
	name string, args *DatabaseVulnerabilityAssessmentRuleBaselineArgs, opts ...pulumi.ResourceOption) (*DatabaseVulnerabilityAssessmentRuleBaseline, error) {
	if args == nil || args.BaselineResults == nil {
		return nil, errors.New("missing required argument 'BaselineResults'")
	}
	if args == nil || args.DatabaseName == nil {
		return nil, errors.New("missing required argument 'DatabaseName'")
	}
	if args == nil || args.RuleId == nil {
		return nil, errors.New("missing required argument 'RuleId'")
	}
	if args == nil || args.ServerVulnerabilityAssessmentId == nil {
		return nil, errors.New("missing required argument 'ServerVulnerabilityAssessmentId'")
	}
	if args == nil {
		args = &DatabaseVulnerabilityAssessmentRuleBaselineArgs{}
	}
	var resource DatabaseVulnerabilityAssessmentRuleBaseline
	err := ctx.RegisterResource("azure:mssql/databaseVulnerabilityAssessmentRuleBaseline:DatabaseVulnerabilityAssessmentRuleBaseline", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabaseVulnerabilityAssessmentRuleBaseline gets an existing DatabaseVulnerabilityAssessmentRuleBaseline resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabaseVulnerabilityAssessmentRuleBaseline(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabaseVulnerabilityAssessmentRuleBaselineState, opts ...pulumi.ResourceOption) (*DatabaseVulnerabilityAssessmentRuleBaseline, error) {
	var resource DatabaseVulnerabilityAssessmentRuleBaseline
	err := ctx.ReadResource("azure:mssql/databaseVulnerabilityAssessmentRuleBaseline:DatabaseVulnerabilityAssessmentRuleBaseline", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatabaseVulnerabilityAssessmentRuleBaseline resources.
type databaseVulnerabilityAssessmentRuleBaselineState struct {
	// The name of the vulnerability assessment rule baseline. Valid options are `default` and `master`. `default` implies a baseline on a database level rule and `master` for server level rule. Defaults to `default`. Changing this forces a new resource to be created.
	BaselineName *string `pulumi:"baselineName"`
	// A `baselineResult` block as documented below. Multiple blocks can be defined.
	BaselineResults []DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult `pulumi:"baselineResults"`
	// Specifies the name of the MS SQL Database. Changing this forces a new resource to be created.
	DatabaseName *string `pulumi:"databaseName"`
	// The vulnerability assessment rule ID. Changing this forces a new resource to be created.
	RuleId *string `pulumi:"ruleId"`
	// The Vulnerability Assessment ID of the MS SQL Server. Changing this forces a new resource to be created.
	ServerVulnerabilityAssessmentId *string `pulumi:"serverVulnerabilityAssessmentId"`
}

type DatabaseVulnerabilityAssessmentRuleBaselineState struct {
	// The name of the vulnerability assessment rule baseline. Valid options are `default` and `master`. `default` implies a baseline on a database level rule and `master` for server level rule. Defaults to `default`. Changing this forces a new resource to be created.
	BaselineName pulumi.StringPtrInput
	// A `baselineResult` block as documented below. Multiple blocks can be defined.
	BaselineResults DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayInput
	// Specifies the name of the MS SQL Database. Changing this forces a new resource to be created.
	DatabaseName pulumi.StringPtrInput
	// The vulnerability assessment rule ID. Changing this forces a new resource to be created.
	RuleId pulumi.StringPtrInput
	// The Vulnerability Assessment ID of the MS SQL Server. Changing this forces a new resource to be created.
	ServerVulnerabilityAssessmentId pulumi.StringPtrInput
}

func (DatabaseVulnerabilityAssessmentRuleBaselineState) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseVulnerabilityAssessmentRuleBaselineState)(nil)).Elem()
}

type databaseVulnerabilityAssessmentRuleBaselineArgs struct {
	// The name of the vulnerability assessment rule baseline. Valid options are `default` and `master`. `default` implies a baseline on a database level rule and `master` for server level rule. Defaults to `default`. Changing this forces a new resource to be created.
	BaselineName *string `pulumi:"baselineName"`
	// A `baselineResult` block as documented below. Multiple blocks can be defined.
	BaselineResults []DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult `pulumi:"baselineResults"`
	// Specifies the name of the MS SQL Database. Changing this forces a new resource to be created.
	DatabaseName string `pulumi:"databaseName"`
	// The vulnerability assessment rule ID. Changing this forces a new resource to be created.
	RuleId string `pulumi:"ruleId"`
	// The Vulnerability Assessment ID of the MS SQL Server. Changing this forces a new resource to be created.
	ServerVulnerabilityAssessmentId string `pulumi:"serverVulnerabilityAssessmentId"`
}

// The set of arguments for constructing a DatabaseVulnerabilityAssessmentRuleBaseline resource.
type DatabaseVulnerabilityAssessmentRuleBaselineArgs struct {
	// The name of the vulnerability assessment rule baseline. Valid options are `default` and `master`. `default` implies a baseline on a database level rule and `master` for server level rule. Defaults to `default`. Changing this forces a new resource to be created.
	BaselineName pulumi.StringPtrInput
	// A `baselineResult` block as documented below. Multiple blocks can be defined.
	BaselineResults DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayInput
	// Specifies the name of the MS SQL Database. Changing this forces a new resource to be created.
	DatabaseName pulumi.StringInput
	// The vulnerability assessment rule ID. Changing this forces a new resource to be created.
	RuleId pulumi.StringInput
	// The Vulnerability Assessment ID of the MS SQL Server. Changing this forces a new resource to be created.
	ServerVulnerabilityAssessmentId pulumi.StringInput
}

func (DatabaseVulnerabilityAssessmentRuleBaselineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseVulnerabilityAssessmentRuleBaselineArgs)(nil)).Elem()
}

type DatabaseVulnerabilityAssessmentRuleBaselineInput interface {
	pulumi.Input

	ToDatabaseVulnerabilityAssessmentRuleBaselineOutput() DatabaseVulnerabilityAssessmentRuleBaselineOutput
	ToDatabaseVulnerabilityAssessmentRuleBaselineOutputWithContext(ctx context.Context) DatabaseVulnerabilityAssessmentRuleBaselineOutput
}

func (DatabaseVulnerabilityAssessmentRuleBaseline) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseVulnerabilityAssessmentRuleBaseline)(nil)).Elem()
}

func (i DatabaseVulnerabilityAssessmentRuleBaseline) ToDatabaseVulnerabilityAssessmentRuleBaselineOutput() DatabaseVulnerabilityAssessmentRuleBaselineOutput {
	return i.ToDatabaseVulnerabilityAssessmentRuleBaselineOutputWithContext(context.Background())
}

func (i DatabaseVulnerabilityAssessmentRuleBaseline) ToDatabaseVulnerabilityAssessmentRuleBaselineOutputWithContext(ctx context.Context) DatabaseVulnerabilityAssessmentRuleBaselineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseVulnerabilityAssessmentRuleBaselineOutput)
}

type DatabaseVulnerabilityAssessmentRuleBaselineOutput struct {
	*pulumi.OutputState
}

func (DatabaseVulnerabilityAssessmentRuleBaselineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseVulnerabilityAssessmentRuleBaselineOutput)(nil)).Elem()
}

func (o DatabaseVulnerabilityAssessmentRuleBaselineOutput) ToDatabaseVulnerabilityAssessmentRuleBaselineOutput() DatabaseVulnerabilityAssessmentRuleBaselineOutput {
	return o
}

func (o DatabaseVulnerabilityAssessmentRuleBaselineOutput) ToDatabaseVulnerabilityAssessmentRuleBaselineOutputWithContext(ctx context.Context) DatabaseVulnerabilityAssessmentRuleBaselineOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(DatabaseVulnerabilityAssessmentRuleBaselineOutput{})
}
