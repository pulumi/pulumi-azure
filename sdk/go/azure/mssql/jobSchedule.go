// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mssql

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an Elastic Job Schedule.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/mssql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resource-group"),
//				Location: pulumi.String("East US"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleServer, err := mssql.NewServer(ctx, "example", &mssql.ServerArgs{
//				Name:                       pulumi.String("example-server"),
//				ResourceGroupName:          example.Name,
//				Location:                   example.Location,
//				Version:                    pulumi.String("12.0"),
//				AdministratorLogin:         pulumi.String("4dm1n157r470r"),
//				AdministratorLoginPassword: pulumi.String("4-v3ry-53cr37-p455w0rd"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleDatabase, err := mssql.NewDatabase(ctx, "example", &mssql.DatabaseArgs{
//				Name:      pulumi.String("example-db"),
//				ServerId:  exampleServer.ID(),
//				Collation: pulumi.String("SQL_Latin1_General_CP1_CI_AS"),
//				SkuName:   pulumi.String("S1"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleJobAgent, err := mssql.NewJobAgent(ctx, "example", &mssql.JobAgentArgs{
//				Name:       pulumi.String("example-job-agent"),
//				Location:   example.Location,
//				DatabaseId: exampleDatabase.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = mssql.NewJobCredential(ctx, "example", &mssql.JobCredentialArgs{
//				Name:       pulumi.String("example-job-credential"),
//				JobAgentId: exampleJobAgent.ID(),
//				Username:   pulumi.String("my-username"),
//				Password:   pulumi.String("MyP4ssw0rd!!!"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleJob, err := mssql.NewJob(ctx, "example", &mssql.JobArgs{
//				Name:       pulumi.String("example-job"),
//				JobAgentId: exampleJobAgent.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = mssql.NewJobSchedule(ctx, "example", &mssql.JobScheduleArgs{
//				JobId:     exampleJob.ID(),
//				Type:      pulumi.String("Recurring"),
//				Enabled:   pulumi.Bool(true),
//				EndTime:   pulumi.String("2025-12-01T00:00:00Z"),
//				Interval:  pulumi.String("PT5M"),
//				StartTime: pulumi.String("2025-01-01T00:00:00Z"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Elastic Job Schedules can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:mssql/jobSchedule:JobSchedule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Sql/servers/myserver1/jobAgents/myjobagent1/jobs/myjob1
// ```
type JobSchedule struct {
	pulumi.CustomResourceState

	// Should the Elastic Job Schedule be enabled? Defaults to `false`.
	//
	// > **Note:** When `type` is set to `Once` and `enabled` is set to `true`, it's recommended to add `enabled` to `ignoreChanges`. This is because Azure will set `enabled` to `false` once the job has executed.
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// The end time of the schedule. Must be in RFC3339 format.
	EndTime pulumi.StringOutput `pulumi:"endTime"`
	// The interval between job executions. Must be in ISO8601 duration format.
	Interval pulumi.StringPtrOutput `pulumi:"interval"`
	// The ID of the Elastic Job. Changing this forces a new Elastic Job Schedule to be created.
	JobId pulumi.StringOutput `pulumi:"jobId"`
	// The start time of the schedule. Must be in RFC3339 format.
	StartTime pulumi.StringOutput `pulumi:"startTime"`
	// The type of schedule. Possible values are `Once` and `Recurring`.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewJobSchedule registers a new resource with the given unique name, arguments, and options.
func NewJobSchedule(ctx *pulumi.Context,
	name string, args *JobScheduleArgs, opts ...pulumi.ResourceOption) (*JobSchedule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.JobId == nil {
		return nil, errors.New("invalid value for required argument 'JobId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource JobSchedule
	err := ctx.RegisterResource("azure:mssql/jobSchedule:JobSchedule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJobSchedule gets an existing JobSchedule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJobSchedule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *JobScheduleState, opts ...pulumi.ResourceOption) (*JobSchedule, error) {
	var resource JobSchedule
	err := ctx.ReadResource("azure:mssql/jobSchedule:JobSchedule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering JobSchedule resources.
type jobScheduleState struct {
	// Should the Elastic Job Schedule be enabled? Defaults to `false`.
	//
	// > **Note:** When `type` is set to `Once` and `enabled` is set to `true`, it's recommended to add `enabled` to `ignoreChanges`. This is because Azure will set `enabled` to `false` once the job has executed.
	Enabled *bool `pulumi:"enabled"`
	// The end time of the schedule. Must be in RFC3339 format.
	EndTime *string `pulumi:"endTime"`
	// The interval between job executions. Must be in ISO8601 duration format.
	Interval *string `pulumi:"interval"`
	// The ID of the Elastic Job. Changing this forces a new Elastic Job Schedule to be created.
	JobId *string `pulumi:"jobId"`
	// The start time of the schedule. Must be in RFC3339 format.
	StartTime *string `pulumi:"startTime"`
	// The type of schedule. Possible values are `Once` and `Recurring`.
	Type *string `pulumi:"type"`
}

type JobScheduleState struct {
	// Should the Elastic Job Schedule be enabled? Defaults to `false`.
	//
	// > **Note:** When `type` is set to `Once` and `enabled` is set to `true`, it's recommended to add `enabled` to `ignoreChanges`. This is because Azure will set `enabled` to `false` once the job has executed.
	Enabled pulumi.BoolPtrInput
	// The end time of the schedule. Must be in RFC3339 format.
	EndTime pulumi.StringPtrInput
	// The interval between job executions. Must be in ISO8601 duration format.
	Interval pulumi.StringPtrInput
	// The ID of the Elastic Job. Changing this forces a new Elastic Job Schedule to be created.
	JobId pulumi.StringPtrInput
	// The start time of the schedule. Must be in RFC3339 format.
	StartTime pulumi.StringPtrInput
	// The type of schedule. Possible values are `Once` and `Recurring`.
	Type pulumi.StringPtrInput
}

func (JobScheduleState) ElementType() reflect.Type {
	return reflect.TypeOf((*jobScheduleState)(nil)).Elem()
}

type jobScheduleArgs struct {
	// Should the Elastic Job Schedule be enabled? Defaults to `false`.
	//
	// > **Note:** When `type` is set to `Once` and `enabled` is set to `true`, it's recommended to add `enabled` to `ignoreChanges`. This is because Azure will set `enabled` to `false` once the job has executed.
	Enabled *bool `pulumi:"enabled"`
	// The end time of the schedule. Must be in RFC3339 format.
	EndTime *string `pulumi:"endTime"`
	// The interval between job executions. Must be in ISO8601 duration format.
	Interval *string `pulumi:"interval"`
	// The ID of the Elastic Job. Changing this forces a new Elastic Job Schedule to be created.
	JobId string `pulumi:"jobId"`
	// The start time of the schedule. Must be in RFC3339 format.
	StartTime *string `pulumi:"startTime"`
	// The type of schedule. Possible values are `Once` and `Recurring`.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a JobSchedule resource.
type JobScheduleArgs struct {
	// Should the Elastic Job Schedule be enabled? Defaults to `false`.
	//
	// > **Note:** When `type` is set to `Once` and `enabled` is set to `true`, it's recommended to add `enabled` to `ignoreChanges`. This is because Azure will set `enabled` to `false` once the job has executed.
	Enabled pulumi.BoolPtrInput
	// The end time of the schedule. Must be in RFC3339 format.
	EndTime pulumi.StringPtrInput
	// The interval between job executions. Must be in ISO8601 duration format.
	Interval pulumi.StringPtrInput
	// The ID of the Elastic Job. Changing this forces a new Elastic Job Schedule to be created.
	JobId pulumi.StringInput
	// The start time of the schedule. Must be in RFC3339 format.
	StartTime pulumi.StringPtrInput
	// The type of schedule. Possible values are `Once` and `Recurring`.
	Type pulumi.StringInput
}

func (JobScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*jobScheduleArgs)(nil)).Elem()
}

type JobScheduleInput interface {
	pulumi.Input

	ToJobScheduleOutput() JobScheduleOutput
	ToJobScheduleOutputWithContext(ctx context.Context) JobScheduleOutput
}

func (*JobSchedule) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSchedule)(nil)).Elem()
}

func (i *JobSchedule) ToJobScheduleOutput() JobScheduleOutput {
	return i.ToJobScheduleOutputWithContext(context.Background())
}

func (i *JobSchedule) ToJobScheduleOutputWithContext(ctx context.Context) JobScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobScheduleOutput)
}

// JobScheduleArrayInput is an input type that accepts JobScheduleArray and JobScheduleArrayOutput values.
// You can construct a concrete instance of `JobScheduleArrayInput` via:
//
//	JobScheduleArray{ JobScheduleArgs{...} }
type JobScheduleArrayInput interface {
	pulumi.Input

	ToJobScheduleArrayOutput() JobScheduleArrayOutput
	ToJobScheduleArrayOutputWithContext(context.Context) JobScheduleArrayOutput
}

type JobScheduleArray []JobScheduleInput

func (JobScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*JobSchedule)(nil)).Elem()
}

func (i JobScheduleArray) ToJobScheduleArrayOutput() JobScheduleArrayOutput {
	return i.ToJobScheduleArrayOutputWithContext(context.Background())
}

func (i JobScheduleArray) ToJobScheduleArrayOutputWithContext(ctx context.Context) JobScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobScheduleArrayOutput)
}

// JobScheduleMapInput is an input type that accepts JobScheduleMap and JobScheduleMapOutput values.
// You can construct a concrete instance of `JobScheduleMapInput` via:
//
//	JobScheduleMap{ "key": JobScheduleArgs{...} }
type JobScheduleMapInput interface {
	pulumi.Input

	ToJobScheduleMapOutput() JobScheduleMapOutput
	ToJobScheduleMapOutputWithContext(context.Context) JobScheduleMapOutput
}

type JobScheduleMap map[string]JobScheduleInput

func (JobScheduleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*JobSchedule)(nil)).Elem()
}

func (i JobScheduleMap) ToJobScheduleMapOutput() JobScheduleMapOutput {
	return i.ToJobScheduleMapOutputWithContext(context.Background())
}

func (i JobScheduleMap) ToJobScheduleMapOutputWithContext(ctx context.Context) JobScheduleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobScheduleMapOutput)
}

type JobScheduleOutput struct{ *pulumi.OutputState }

func (JobScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSchedule)(nil)).Elem()
}

func (o JobScheduleOutput) ToJobScheduleOutput() JobScheduleOutput {
	return o
}

func (o JobScheduleOutput) ToJobScheduleOutputWithContext(ctx context.Context) JobScheduleOutput {
	return o
}

// Should the Elastic Job Schedule be enabled? Defaults to `false`.
//
// > **Note:** When `type` is set to `Once` and `enabled` is set to `true`, it's recommended to add `enabled` to `ignoreChanges`. This is because Azure will set `enabled` to `false` once the job has executed.
func (o JobScheduleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *JobSchedule) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// The end time of the schedule. Must be in RFC3339 format.
func (o JobScheduleOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v *JobSchedule) pulumi.StringOutput { return v.EndTime }).(pulumi.StringOutput)
}

// The interval between job executions. Must be in ISO8601 duration format.
func (o JobScheduleOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobSchedule) pulumi.StringPtrOutput { return v.Interval }).(pulumi.StringPtrOutput)
}

// The ID of the Elastic Job. Changing this forces a new Elastic Job Schedule to be created.
func (o JobScheduleOutput) JobId() pulumi.StringOutput {
	return o.ApplyT(func(v *JobSchedule) pulumi.StringOutput { return v.JobId }).(pulumi.StringOutput)
}

// The start time of the schedule. Must be in RFC3339 format.
func (o JobScheduleOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v *JobSchedule) pulumi.StringOutput { return v.StartTime }).(pulumi.StringOutput)
}

// The type of schedule. Possible values are `Once` and `Recurring`.
func (o JobScheduleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *JobSchedule) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type JobScheduleArrayOutput struct{ *pulumi.OutputState }

func (JobScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*JobSchedule)(nil)).Elem()
}

func (o JobScheduleArrayOutput) ToJobScheduleArrayOutput() JobScheduleArrayOutput {
	return o
}

func (o JobScheduleArrayOutput) ToJobScheduleArrayOutputWithContext(ctx context.Context) JobScheduleArrayOutput {
	return o
}

func (o JobScheduleArrayOutput) Index(i pulumi.IntInput) JobScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *JobSchedule {
		return vs[0].([]*JobSchedule)[vs[1].(int)]
	}).(JobScheduleOutput)
}

type JobScheduleMapOutput struct{ *pulumi.OutputState }

func (JobScheduleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*JobSchedule)(nil)).Elem()
}

func (o JobScheduleMapOutput) ToJobScheduleMapOutput() JobScheduleMapOutput {
	return o
}

func (o JobScheduleMapOutput) ToJobScheduleMapOutputWithContext(ctx context.Context) JobScheduleMapOutput {
	return o
}

func (o JobScheduleMapOutput) MapIndex(k pulumi.StringInput) JobScheduleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *JobSchedule {
		return vs[0].(map[string]*JobSchedule)[vs[1].(string)]
	}).(JobScheduleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*JobScheduleInput)(nil)).Elem(), &JobSchedule{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobScheduleArrayInput)(nil)).Elem(), JobScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobScheduleMapInput)(nil)).Elem(), JobScheduleMap{})
	pulumi.RegisterOutputType(JobScheduleOutput{})
	pulumi.RegisterOutputType(JobScheduleArrayOutput{})
	pulumi.RegisterOutputType(JobScheduleMapOutput{})
}
