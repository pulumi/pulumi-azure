// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mssql

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages Start Stop Schedules for an MS SQL Managed Instance.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/mssql"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("database-rg"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleNetworkSecurityGroup, err := network.NewNetworkSecurityGroup(ctx, "example", &network.NetworkSecurityGroupArgs{
//				Name:              pulumi.String("mi-security-group"),
//				Location:          example.Location,
//				ResourceGroupName: example.Name,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = network.NewNetworkSecurityRule(ctx, "allow_management_inbound", &network.NetworkSecurityRuleArgs{
//				Name:            pulumi.String("allow_management_inbound"),
//				Priority:        pulumi.Int(106),
//				Direction:       pulumi.String("Inbound"),
//				Access:          pulumi.String("Allow"),
//				Protocol:        pulumi.String("Tcp"),
//				SourcePortRange: pulumi.String("*"),
//				DestinationPortRanges: pulumi.StringArray{
//					pulumi.String("9000"),
//					pulumi.String("9003"),
//					pulumi.String("1438"),
//					pulumi.String("1440"),
//					pulumi.String("1452"),
//				},
//				SourceAddressPrefix:      pulumi.String("*"),
//				DestinationAddressPrefix: pulumi.String("*"),
//				ResourceGroupName:        example.Name,
//				NetworkSecurityGroupName: exampleNetworkSecurityGroup.Name,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = network.NewNetworkSecurityRule(ctx, "allow_misubnet_inbound", &network.NetworkSecurityRuleArgs{
//				Name:                     pulumi.String("allow_misubnet_inbound"),
//				Priority:                 pulumi.Int(200),
//				Direction:                pulumi.String("Inbound"),
//				Access:                   pulumi.String("Allow"),
//				Protocol:                 pulumi.String("*"),
//				SourcePortRange:          pulumi.String("*"),
//				DestinationPortRange:     pulumi.String("*"),
//				SourceAddressPrefix:      pulumi.String("10.0.0.0/24"),
//				DestinationAddressPrefix: pulumi.String("*"),
//				ResourceGroupName:        example.Name,
//				NetworkSecurityGroupName: exampleNetworkSecurityGroup.Name,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = network.NewNetworkSecurityRule(ctx, "allow_health_probe_inbound", &network.NetworkSecurityRuleArgs{
//				Name:                     pulumi.String("allow_health_probe_inbound"),
//				Priority:                 pulumi.Int(300),
//				Direction:                pulumi.String("Inbound"),
//				Access:                   pulumi.String("Allow"),
//				Protocol:                 pulumi.String("*"),
//				SourcePortRange:          pulumi.String("*"),
//				DestinationPortRange:     pulumi.String("*"),
//				SourceAddressPrefix:      pulumi.String("AzureLoadBalancer"),
//				DestinationAddressPrefix: pulumi.String("*"),
//				ResourceGroupName:        example.Name,
//				NetworkSecurityGroupName: exampleNetworkSecurityGroup.Name,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = network.NewNetworkSecurityRule(ctx, "allow_tds_inbound", &network.NetworkSecurityRuleArgs{
//				Name:                     pulumi.String("allow_tds_inbound"),
//				Priority:                 pulumi.Int(1000),
//				Direction:                pulumi.String("Inbound"),
//				Access:                   pulumi.String("Allow"),
//				Protocol:                 pulumi.String("Tcp"),
//				SourcePortRange:          pulumi.String("*"),
//				DestinationPortRange:     pulumi.String("1433"),
//				SourceAddressPrefix:      pulumi.String("VirtualNetwork"),
//				DestinationAddressPrefix: pulumi.String("*"),
//				ResourceGroupName:        example.Name,
//				NetworkSecurityGroupName: exampleNetworkSecurityGroup.Name,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = network.NewNetworkSecurityRule(ctx, "deny_all_inbound", &network.NetworkSecurityRuleArgs{
//				Name:                     pulumi.String("deny_all_inbound"),
//				Priority:                 pulumi.Int(4096),
//				Direction:                pulumi.String("Inbound"),
//				Access:                   pulumi.String("Deny"),
//				Protocol:                 pulumi.String("*"),
//				SourcePortRange:          pulumi.String("*"),
//				DestinationPortRange:     pulumi.String("*"),
//				SourceAddressPrefix:      pulumi.String("*"),
//				DestinationAddressPrefix: pulumi.String("*"),
//				ResourceGroupName:        example.Name,
//				NetworkSecurityGroupName: exampleNetworkSecurityGroup.Name,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = network.NewNetworkSecurityRule(ctx, "allow_management_outbound", &network.NetworkSecurityRuleArgs{
//				Name:            pulumi.String("allow_management_outbound"),
//				Priority:        pulumi.Int(102),
//				Direction:       pulumi.String("Outbound"),
//				Access:          pulumi.String("Allow"),
//				Protocol:        pulumi.String("Tcp"),
//				SourcePortRange: pulumi.String("*"),
//				DestinationPortRanges: pulumi.StringArray{
//					pulumi.String("80"),
//					pulumi.String("443"),
//					pulumi.String("12000"),
//				},
//				SourceAddressPrefix:      pulumi.String("*"),
//				DestinationAddressPrefix: pulumi.String("*"),
//				ResourceGroupName:        example.Name,
//				NetworkSecurityGroupName: exampleNetworkSecurityGroup.Name,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = network.NewNetworkSecurityRule(ctx, "allow_misubnet_outbound", &network.NetworkSecurityRuleArgs{
//				Name:                     pulumi.String("allow_misubnet_outbound"),
//				Priority:                 pulumi.Int(200),
//				Direction:                pulumi.String("Outbound"),
//				Access:                   pulumi.String("Allow"),
//				Protocol:                 pulumi.String("*"),
//				SourcePortRange:          pulumi.String("*"),
//				DestinationPortRange:     pulumi.String("*"),
//				SourceAddressPrefix:      pulumi.String("10.0.0.0/24"),
//				DestinationAddressPrefix: pulumi.String("*"),
//				ResourceGroupName:        example.Name,
//				NetworkSecurityGroupName: exampleNetworkSecurityGroup.Name,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = network.NewNetworkSecurityRule(ctx, "deny_all_outbound", &network.NetworkSecurityRuleArgs{
//				Name:                     pulumi.String("deny_all_outbound"),
//				Priority:                 pulumi.Int(4096),
//				Direction:                pulumi.String("Outbound"),
//				Access:                   pulumi.String("Deny"),
//				Protocol:                 pulumi.String("*"),
//				SourcePortRange:          pulumi.String("*"),
//				DestinationPortRange:     pulumi.String("*"),
//				SourceAddressPrefix:      pulumi.String("*"),
//				DestinationAddressPrefix: pulumi.String("*"),
//				ResourceGroupName:        example.Name,
//				NetworkSecurityGroupName: exampleNetworkSecurityGroup.Name,
//			})
//			if err != nil {
//				return err
//			}
//			exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "example", &network.VirtualNetworkArgs{
//				Name:              pulumi.String("vnet-mi"),
//				ResourceGroupName: example.Name,
//				AddressSpaces: pulumi.StringArray{
//					pulumi.String("10.0.0.0/16"),
//				},
//				Location: example.Location,
//			})
//			if err != nil {
//				return err
//			}
//			exampleSubnet, err := network.NewSubnet(ctx, "example", &network.SubnetArgs{
//				Name:               pulumi.String("subnet-mi"),
//				ResourceGroupName:  example.Name,
//				VirtualNetworkName: exampleVirtualNetwork.Name,
//				AddressPrefixes: pulumi.StringArray{
//					pulumi.String("10.0.0.0/24"),
//				},
//				Delegations: network.SubnetDelegationArray{
//					&network.SubnetDelegationArgs{
//						Name: pulumi.String("managedinstancedelegation"),
//						ServiceDelegation: &network.SubnetDelegationServiceDelegationArgs{
//							Name: pulumi.String("Microsoft.Sql/managedInstances"),
//							Actions: pulumi.StringArray{
//								pulumi.String("Microsoft.Network/virtualNetworks/subnets/join/action"),
//								pulumi.String("Microsoft.Network/virtualNetworks/subnets/prepareNetworkPolicies/action"),
//								pulumi.String("Microsoft.Network/virtualNetworks/subnets/unprepareNetworkPolicies/action"),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleSubnetNetworkSecurityGroupAssociation, err := network.NewSubnetNetworkSecurityGroupAssociation(ctx, "example", &network.SubnetNetworkSecurityGroupAssociationArgs{
//				SubnetId:               exampleSubnet.ID(),
//				NetworkSecurityGroupId: exampleNetworkSecurityGroup.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			exampleRouteTable, err := network.NewRouteTable(ctx, "example", &network.RouteTableArgs{
//				Name:                       pulumi.String("routetable-mi"),
//				Location:                   example.Location,
//				ResourceGroupName:          example.Name,
//				DisableBgpRoutePropagation: false,
//			}, pulumi.DependsOn([]pulumi.Resource{
//				exampleSubnet,
//			}))
//			if err != nil {
//				return err
//			}
//			exampleSubnetRouteTableAssociation, err := network.NewSubnetRouteTableAssociation(ctx, "example", &network.SubnetRouteTableAssociationArgs{
//				SubnetId:     exampleSubnet.ID(),
//				RouteTableId: exampleRouteTable.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			exampleManagedInstance, err := mssql.NewManagedInstance(ctx, "example", &mssql.ManagedInstanceArgs{
//				Name:                       pulumi.String("managedsqlinstance"),
//				ResourceGroupName:          example.Name,
//				Location:                   example.Location,
//				LicenseType:                pulumi.String("BasePrice"),
//				SkuName:                    pulumi.String("GP_Gen5"),
//				StorageSizeInGb:            pulumi.Int(32),
//				SubnetId:                   exampleSubnet.ID(),
//				Vcores:                     pulumi.Int(4),
//				AdministratorLogin:         pulumi.String("mradministrator"),
//				AdministratorLoginPassword: pulumi.String("thisIsDog11"),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				exampleSubnetNetworkSecurityGroupAssociation,
//				exampleSubnetRouteTableAssociation,
//			}))
//			if err != nil {
//				return err
//			}
//			_, err = mssql.NewManagedInstanceStartStopSchedule(ctx, "example", &mssql.ManagedInstanceStartStopScheduleArgs{
//				ManagedInstanceId: exampleManagedInstance.ID(),
//				TimezoneId:        pulumi.String("Central European Standard Time"),
//				Schedules: mssql.ManagedInstanceStartStopScheduleScheduleArray{
//					&mssql.ManagedInstanceStartStopScheduleScheduleArgs{
//						StartDay:  pulumi.String("Monday"),
//						StartTime: pulumi.String("08:00"),
//						StopDay:   pulumi.String("Monday"),
//						StopTime:  pulumi.String("11:00"),
//					},
//					&mssql.ManagedInstanceStartStopScheduleScheduleArgs{
//						StartDay:  pulumi.String("Tuesday"),
//						StartTime: pulumi.String("12:00"),
//						StopDay:   pulumi.String("Tuesday"),
//						StopTime:  pulumi.String("18:00"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This resource uses the following Azure API Providers:
//
// * `Microsoft.Sql` - 2023-08-01-preview
//
// ## Import
//
// MS SQL Managed Instance Start Stop Schedule can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:mssql/managedInstanceStartStopSchedule:ManagedInstanceStartStopSchedule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Sql/managedInstances/managedInstance1/startStopSchedules/default
// ```
type ManagedInstanceStartStopSchedule struct {
	pulumi.CustomResourceState

	// Specifies the description of the schedule.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the ID of the Managed Instance. Changing this forces a new Sql Start Stop Managed Instance Schedule to be created.
	ManagedInstanceId pulumi.StringOutput `pulumi:"managedInstanceId"`
	// Timestamp when the next action will be executed in the corresponding schedule time zone.
	NextExecutionTime pulumi.StringOutput `pulumi:"nextExecutionTime"`
	// Next action to be executed (Start or Stop).
	NextRunAction pulumi.StringOutput `pulumi:"nextRunAction"`
	// A `schedule` block as defined below.
	Schedules ManagedInstanceStartStopScheduleScheduleArrayOutput `pulumi:"schedules"`
	// Specifies the time zone of the schedule. Defaults to `UTC`.
	TimezoneId pulumi.StringPtrOutput `pulumi:"timezoneId"`
}

// NewManagedInstanceStartStopSchedule registers a new resource with the given unique name, arguments, and options.
func NewManagedInstanceStartStopSchedule(ctx *pulumi.Context,
	name string, args *ManagedInstanceStartStopScheduleArgs, opts ...pulumi.ResourceOption) (*ManagedInstanceStartStopSchedule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ManagedInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'ManagedInstanceId'")
	}
	if args.Schedules == nil {
		return nil, errors.New("invalid value for required argument 'Schedules'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ManagedInstanceStartStopSchedule
	err := ctx.RegisterResource("azure:mssql/managedInstanceStartStopSchedule:ManagedInstanceStartStopSchedule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedInstanceStartStopSchedule gets an existing ManagedInstanceStartStopSchedule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedInstanceStartStopSchedule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedInstanceStartStopScheduleState, opts ...pulumi.ResourceOption) (*ManagedInstanceStartStopSchedule, error) {
	var resource ManagedInstanceStartStopSchedule
	err := ctx.ReadResource("azure:mssql/managedInstanceStartStopSchedule:ManagedInstanceStartStopSchedule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedInstanceStartStopSchedule resources.
type managedInstanceStartStopScheduleState struct {
	// Specifies the description of the schedule.
	Description *string `pulumi:"description"`
	// Specifies the ID of the Managed Instance. Changing this forces a new Sql Start Stop Managed Instance Schedule to be created.
	ManagedInstanceId *string `pulumi:"managedInstanceId"`
	// Timestamp when the next action will be executed in the corresponding schedule time zone.
	NextExecutionTime *string `pulumi:"nextExecutionTime"`
	// Next action to be executed (Start or Stop).
	NextRunAction *string `pulumi:"nextRunAction"`
	// A `schedule` block as defined below.
	Schedules []ManagedInstanceStartStopScheduleSchedule `pulumi:"schedules"`
	// Specifies the time zone of the schedule. Defaults to `UTC`.
	TimezoneId *string `pulumi:"timezoneId"`
}

type ManagedInstanceStartStopScheduleState struct {
	// Specifies the description of the schedule.
	Description pulumi.StringPtrInput
	// Specifies the ID of the Managed Instance. Changing this forces a new Sql Start Stop Managed Instance Schedule to be created.
	ManagedInstanceId pulumi.StringPtrInput
	// Timestamp when the next action will be executed in the corresponding schedule time zone.
	NextExecutionTime pulumi.StringPtrInput
	// Next action to be executed (Start or Stop).
	NextRunAction pulumi.StringPtrInput
	// A `schedule` block as defined below.
	Schedules ManagedInstanceStartStopScheduleScheduleArrayInput
	// Specifies the time zone of the schedule. Defaults to `UTC`.
	TimezoneId pulumi.StringPtrInput
}

func (ManagedInstanceStartStopScheduleState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedInstanceStartStopScheduleState)(nil)).Elem()
}

type managedInstanceStartStopScheduleArgs struct {
	// Specifies the description of the schedule.
	Description *string `pulumi:"description"`
	// Specifies the ID of the Managed Instance. Changing this forces a new Sql Start Stop Managed Instance Schedule to be created.
	ManagedInstanceId string `pulumi:"managedInstanceId"`
	// A `schedule` block as defined below.
	Schedules []ManagedInstanceStartStopScheduleSchedule `pulumi:"schedules"`
	// Specifies the time zone of the schedule. Defaults to `UTC`.
	TimezoneId *string `pulumi:"timezoneId"`
}

// The set of arguments for constructing a ManagedInstanceStartStopSchedule resource.
type ManagedInstanceStartStopScheduleArgs struct {
	// Specifies the description of the schedule.
	Description pulumi.StringPtrInput
	// Specifies the ID of the Managed Instance. Changing this forces a new Sql Start Stop Managed Instance Schedule to be created.
	ManagedInstanceId pulumi.StringInput
	// A `schedule` block as defined below.
	Schedules ManagedInstanceStartStopScheduleScheduleArrayInput
	// Specifies the time zone of the schedule. Defaults to `UTC`.
	TimezoneId pulumi.StringPtrInput
}

func (ManagedInstanceStartStopScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedInstanceStartStopScheduleArgs)(nil)).Elem()
}

type ManagedInstanceStartStopScheduleInput interface {
	pulumi.Input

	ToManagedInstanceStartStopScheduleOutput() ManagedInstanceStartStopScheduleOutput
	ToManagedInstanceStartStopScheduleOutputWithContext(ctx context.Context) ManagedInstanceStartStopScheduleOutput
}

func (*ManagedInstanceStartStopSchedule) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstanceStartStopSchedule)(nil)).Elem()
}

func (i *ManagedInstanceStartStopSchedule) ToManagedInstanceStartStopScheduleOutput() ManagedInstanceStartStopScheduleOutput {
	return i.ToManagedInstanceStartStopScheduleOutputWithContext(context.Background())
}

func (i *ManagedInstanceStartStopSchedule) ToManagedInstanceStartStopScheduleOutputWithContext(ctx context.Context) ManagedInstanceStartStopScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceStartStopScheduleOutput)
}

// ManagedInstanceStartStopScheduleArrayInput is an input type that accepts ManagedInstanceStartStopScheduleArray and ManagedInstanceStartStopScheduleArrayOutput values.
// You can construct a concrete instance of `ManagedInstanceStartStopScheduleArrayInput` via:
//
//	ManagedInstanceStartStopScheduleArray{ ManagedInstanceStartStopScheduleArgs{...} }
type ManagedInstanceStartStopScheduleArrayInput interface {
	pulumi.Input

	ToManagedInstanceStartStopScheduleArrayOutput() ManagedInstanceStartStopScheduleArrayOutput
	ToManagedInstanceStartStopScheduleArrayOutputWithContext(context.Context) ManagedInstanceStartStopScheduleArrayOutput
}

type ManagedInstanceStartStopScheduleArray []ManagedInstanceStartStopScheduleInput

func (ManagedInstanceStartStopScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedInstanceStartStopSchedule)(nil)).Elem()
}

func (i ManagedInstanceStartStopScheduleArray) ToManagedInstanceStartStopScheduleArrayOutput() ManagedInstanceStartStopScheduleArrayOutput {
	return i.ToManagedInstanceStartStopScheduleArrayOutputWithContext(context.Background())
}

func (i ManagedInstanceStartStopScheduleArray) ToManagedInstanceStartStopScheduleArrayOutputWithContext(ctx context.Context) ManagedInstanceStartStopScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceStartStopScheduleArrayOutput)
}

// ManagedInstanceStartStopScheduleMapInput is an input type that accepts ManagedInstanceStartStopScheduleMap and ManagedInstanceStartStopScheduleMapOutput values.
// You can construct a concrete instance of `ManagedInstanceStartStopScheduleMapInput` via:
//
//	ManagedInstanceStartStopScheduleMap{ "key": ManagedInstanceStartStopScheduleArgs{...} }
type ManagedInstanceStartStopScheduleMapInput interface {
	pulumi.Input

	ToManagedInstanceStartStopScheduleMapOutput() ManagedInstanceStartStopScheduleMapOutput
	ToManagedInstanceStartStopScheduleMapOutputWithContext(context.Context) ManagedInstanceStartStopScheduleMapOutput
}

type ManagedInstanceStartStopScheduleMap map[string]ManagedInstanceStartStopScheduleInput

func (ManagedInstanceStartStopScheduleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedInstanceStartStopSchedule)(nil)).Elem()
}

func (i ManagedInstanceStartStopScheduleMap) ToManagedInstanceStartStopScheduleMapOutput() ManagedInstanceStartStopScheduleMapOutput {
	return i.ToManagedInstanceStartStopScheduleMapOutputWithContext(context.Background())
}

func (i ManagedInstanceStartStopScheduleMap) ToManagedInstanceStartStopScheduleMapOutputWithContext(ctx context.Context) ManagedInstanceStartStopScheduleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceStartStopScheduleMapOutput)
}

type ManagedInstanceStartStopScheduleOutput struct{ *pulumi.OutputState }

func (ManagedInstanceStartStopScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstanceStartStopSchedule)(nil)).Elem()
}

func (o ManagedInstanceStartStopScheduleOutput) ToManagedInstanceStartStopScheduleOutput() ManagedInstanceStartStopScheduleOutput {
	return o
}

func (o ManagedInstanceStartStopScheduleOutput) ToManagedInstanceStartStopScheduleOutputWithContext(ctx context.Context) ManagedInstanceStartStopScheduleOutput {
	return o
}

// Specifies the description of the schedule.
func (o ManagedInstanceStartStopScheduleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedInstanceStartStopSchedule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the ID of the Managed Instance. Changing this forces a new Sql Start Stop Managed Instance Schedule to be created.
func (o ManagedInstanceStartStopScheduleOutput) ManagedInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedInstanceStartStopSchedule) pulumi.StringOutput { return v.ManagedInstanceId }).(pulumi.StringOutput)
}

// Timestamp when the next action will be executed in the corresponding schedule time zone.
func (o ManagedInstanceStartStopScheduleOutput) NextExecutionTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedInstanceStartStopSchedule) pulumi.StringOutput { return v.NextExecutionTime }).(pulumi.StringOutput)
}

// Next action to be executed (Start or Stop).
func (o ManagedInstanceStartStopScheduleOutput) NextRunAction() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedInstanceStartStopSchedule) pulumi.StringOutput { return v.NextRunAction }).(pulumi.StringOutput)
}

// A `schedule` block as defined below.
func (o ManagedInstanceStartStopScheduleOutput) Schedules() ManagedInstanceStartStopScheduleScheduleArrayOutput {
	return o.ApplyT(func(v *ManagedInstanceStartStopSchedule) ManagedInstanceStartStopScheduleScheduleArrayOutput {
		return v.Schedules
	}).(ManagedInstanceStartStopScheduleScheduleArrayOutput)
}

// Specifies the time zone of the schedule. Defaults to `UTC`.
func (o ManagedInstanceStartStopScheduleOutput) TimezoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedInstanceStartStopSchedule) pulumi.StringPtrOutput { return v.TimezoneId }).(pulumi.StringPtrOutput)
}

type ManagedInstanceStartStopScheduleArrayOutput struct{ *pulumi.OutputState }

func (ManagedInstanceStartStopScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedInstanceStartStopSchedule)(nil)).Elem()
}

func (o ManagedInstanceStartStopScheduleArrayOutput) ToManagedInstanceStartStopScheduleArrayOutput() ManagedInstanceStartStopScheduleArrayOutput {
	return o
}

func (o ManagedInstanceStartStopScheduleArrayOutput) ToManagedInstanceStartStopScheduleArrayOutputWithContext(ctx context.Context) ManagedInstanceStartStopScheduleArrayOutput {
	return o
}

func (o ManagedInstanceStartStopScheduleArrayOutput) Index(i pulumi.IntInput) ManagedInstanceStartStopScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ManagedInstanceStartStopSchedule {
		return vs[0].([]*ManagedInstanceStartStopSchedule)[vs[1].(int)]
	}).(ManagedInstanceStartStopScheduleOutput)
}

type ManagedInstanceStartStopScheduleMapOutput struct{ *pulumi.OutputState }

func (ManagedInstanceStartStopScheduleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedInstanceStartStopSchedule)(nil)).Elem()
}

func (o ManagedInstanceStartStopScheduleMapOutput) ToManagedInstanceStartStopScheduleMapOutput() ManagedInstanceStartStopScheduleMapOutput {
	return o
}

func (o ManagedInstanceStartStopScheduleMapOutput) ToManagedInstanceStartStopScheduleMapOutputWithContext(ctx context.Context) ManagedInstanceStartStopScheduleMapOutput {
	return o
}

func (o ManagedInstanceStartStopScheduleMapOutput) MapIndex(k pulumi.StringInput) ManagedInstanceStartStopScheduleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ManagedInstanceStartStopSchedule {
		return vs[0].(map[string]*ManagedInstanceStartStopSchedule)[vs[1].(string)]
	}).(ManagedInstanceStartStopScheduleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceStartStopScheduleInput)(nil)).Elem(), &ManagedInstanceStartStopSchedule{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceStartStopScheduleArrayInput)(nil)).Elem(), ManagedInstanceStartStopScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceStartStopScheduleMapInput)(nil)).Elem(), ManagedInstanceStartStopScheduleMap{})
	pulumi.RegisterOutputType(ManagedInstanceStartStopScheduleOutput{})
	pulumi.RegisterOutputType(ManagedInstanceStartStopScheduleArrayOutput{})
	pulumi.RegisterOutputType(ManagedInstanceStartStopScheduleMapOutput{})
}
