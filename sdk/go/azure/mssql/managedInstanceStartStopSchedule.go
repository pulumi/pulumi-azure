// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mssql

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages Start Stop Schedules for an MS SQL Managed Instance.
//
// ## Import
//
// MS SQL Managed Instance Start Stop Schedule can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:mssql/managedInstanceStartStopSchedule:ManagedInstanceStartStopSchedule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Sql/managedInstances/managedInstance1/startStopSchedules/default
// ```
type ManagedInstanceStartStopSchedule struct {
	pulumi.CustomResourceState

	// Specifies the description of the schedule.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the ID of the Managed Instance. Changing this forces a new Sql Start Stop Managed Instance Schedule to be created.
	ManagedInstanceId pulumi.StringOutput `pulumi:"managedInstanceId"`
	// Timestamp when the next action will be executed in the corresponding schedule time zone.
	NextExecutionTime pulumi.StringOutput `pulumi:"nextExecutionTime"`
	// Next action to be executed (Start or Stop).
	NextRunAction pulumi.StringOutput `pulumi:"nextRunAction"`
	// A `schedule` block as defined below.
	Schedules ManagedInstanceStartStopScheduleScheduleArrayOutput `pulumi:"schedules"`
	// Specifies the time zone of the schedule. Defaults to `UTC`.
	TimezoneId pulumi.StringPtrOutput `pulumi:"timezoneId"`
}

// NewManagedInstanceStartStopSchedule registers a new resource with the given unique name, arguments, and options.
func NewManagedInstanceStartStopSchedule(ctx *pulumi.Context,
	name string, args *ManagedInstanceStartStopScheduleArgs, opts ...pulumi.ResourceOption) (*ManagedInstanceStartStopSchedule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ManagedInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'ManagedInstanceId'")
	}
	if args.Schedules == nil {
		return nil, errors.New("invalid value for required argument 'Schedules'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ManagedInstanceStartStopSchedule
	err := ctx.RegisterResource("azure:mssql/managedInstanceStartStopSchedule:ManagedInstanceStartStopSchedule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedInstanceStartStopSchedule gets an existing ManagedInstanceStartStopSchedule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedInstanceStartStopSchedule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedInstanceStartStopScheduleState, opts ...pulumi.ResourceOption) (*ManagedInstanceStartStopSchedule, error) {
	var resource ManagedInstanceStartStopSchedule
	err := ctx.ReadResource("azure:mssql/managedInstanceStartStopSchedule:ManagedInstanceStartStopSchedule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedInstanceStartStopSchedule resources.
type managedInstanceStartStopScheduleState struct {
	// Specifies the description of the schedule.
	Description *string `pulumi:"description"`
	// Specifies the ID of the Managed Instance. Changing this forces a new Sql Start Stop Managed Instance Schedule to be created.
	ManagedInstanceId *string `pulumi:"managedInstanceId"`
	// Timestamp when the next action will be executed in the corresponding schedule time zone.
	NextExecutionTime *string `pulumi:"nextExecutionTime"`
	// Next action to be executed (Start or Stop).
	NextRunAction *string `pulumi:"nextRunAction"`
	// A `schedule` block as defined below.
	Schedules []ManagedInstanceStartStopScheduleSchedule `pulumi:"schedules"`
	// Specifies the time zone of the schedule. Defaults to `UTC`.
	TimezoneId *string `pulumi:"timezoneId"`
}

type ManagedInstanceStartStopScheduleState struct {
	// Specifies the description of the schedule.
	Description pulumi.StringPtrInput
	// Specifies the ID of the Managed Instance. Changing this forces a new Sql Start Stop Managed Instance Schedule to be created.
	ManagedInstanceId pulumi.StringPtrInput
	// Timestamp when the next action will be executed in the corresponding schedule time zone.
	NextExecutionTime pulumi.StringPtrInput
	// Next action to be executed (Start or Stop).
	NextRunAction pulumi.StringPtrInput
	// A `schedule` block as defined below.
	Schedules ManagedInstanceStartStopScheduleScheduleArrayInput
	// Specifies the time zone of the schedule. Defaults to `UTC`.
	TimezoneId pulumi.StringPtrInput
}

func (ManagedInstanceStartStopScheduleState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedInstanceStartStopScheduleState)(nil)).Elem()
}

type managedInstanceStartStopScheduleArgs struct {
	// Specifies the description of the schedule.
	Description *string `pulumi:"description"`
	// Specifies the ID of the Managed Instance. Changing this forces a new Sql Start Stop Managed Instance Schedule to be created.
	ManagedInstanceId string `pulumi:"managedInstanceId"`
	// A `schedule` block as defined below.
	Schedules []ManagedInstanceStartStopScheduleSchedule `pulumi:"schedules"`
	// Specifies the time zone of the schedule. Defaults to `UTC`.
	TimezoneId *string `pulumi:"timezoneId"`
}

// The set of arguments for constructing a ManagedInstanceStartStopSchedule resource.
type ManagedInstanceStartStopScheduleArgs struct {
	// Specifies the description of the schedule.
	Description pulumi.StringPtrInput
	// Specifies the ID of the Managed Instance. Changing this forces a new Sql Start Stop Managed Instance Schedule to be created.
	ManagedInstanceId pulumi.StringInput
	// A `schedule` block as defined below.
	Schedules ManagedInstanceStartStopScheduleScheduleArrayInput
	// Specifies the time zone of the schedule. Defaults to `UTC`.
	TimezoneId pulumi.StringPtrInput
}

func (ManagedInstanceStartStopScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedInstanceStartStopScheduleArgs)(nil)).Elem()
}

type ManagedInstanceStartStopScheduleInput interface {
	pulumi.Input

	ToManagedInstanceStartStopScheduleOutput() ManagedInstanceStartStopScheduleOutput
	ToManagedInstanceStartStopScheduleOutputWithContext(ctx context.Context) ManagedInstanceStartStopScheduleOutput
}

func (*ManagedInstanceStartStopSchedule) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstanceStartStopSchedule)(nil)).Elem()
}

func (i *ManagedInstanceStartStopSchedule) ToManagedInstanceStartStopScheduleOutput() ManagedInstanceStartStopScheduleOutput {
	return i.ToManagedInstanceStartStopScheduleOutputWithContext(context.Background())
}

func (i *ManagedInstanceStartStopSchedule) ToManagedInstanceStartStopScheduleOutputWithContext(ctx context.Context) ManagedInstanceStartStopScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceStartStopScheduleOutput)
}

// ManagedInstanceStartStopScheduleArrayInput is an input type that accepts ManagedInstanceStartStopScheduleArray and ManagedInstanceStartStopScheduleArrayOutput values.
// You can construct a concrete instance of `ManagedInstanceStartStopScheduleArrayInput` via:
//
//	ManagedInstanceStartStopScheduleArray{ ManagedInstanceStartStopScheduleArgs{...} }
type ManagedInstanceStartStopScheduleArrayInput interface {
	pulumi.Input

	ToManagedInstanceStartStopScheduleArrayOutput() ManagedInstanceStartStopScheduleArrayOutput
	ToManagedInstanceStartStopScheduleArrayOutputWithContext(context.Context) ManagedInstanceStartStopScheduleArrayOutput
}

type ManagedInstanceStartStopScheduleArray []ManagedInstanceStartStopScheduleInput

func (ManagedInstanceStartStopScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedInstanceStartStopSchedule)(nil)).Elem()
}

func (i ManagedInstanceStartStopScheduleArray) ToManagedInstanceStartStopScheduleArrayOutput() ManagedInstanceStartStopScheduleArrayOutput {
	return i.ToManagedInstanceStartStopScheduleArrayOutputWithContext(context.Background())
}

func (i ManagedInstanceStartStopScheduleArray) ToManagedInstanceStartStopScheduleArrayOutputWithContext(ctx context.Context) ManagedInstanceStartStopScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceStartStopScheduleArrayOutput)
}

// ManagedInstanceStartStopScheduleMapInput is an input type that accepts ManagedInstanceStartStopScheduleMap and ManagedInstanceStartStopScheduleMapOutput values.
// You can construct a concrete instance of `ManagedInstanceStartStopScheduleMapInput` via:
//
//	ManagedInstanceStartStopScheduleMap{ "key": ManagedInstanceStartStopScheduleArgs{...} }
type ManagedInstanceStartStopScheduleMapInput interface {
	pulumi.Input

	ToManagedInstanceStartStopScheduleMapOutput() ManagedInstanceStartStopScheduleMapOutput
	ToManagedInstanceStartStopScheduleMapOutputWithContext(context.Context) ManagedInstanceStartStopScheduleMapOutput
}

type ManagedInstanceStartStopScheduleMap map[string]ManagedInstanceStartStopScheduleInput

func (ManagedInstanceStartStopScheduleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedInstanceStartStopSchedule)(nil)).Elem()
}

func (i ManagedInstanceStartStopScheduleMap) ToManagedInstanceStartStopScheduleMapOutput() ManagedInstanceStartStopScheduleMapOutput {
	return i.ToManagedInstanceStartStopScheduleMapOutputWithContext(context.Background())
}

func (i ManagedInstanceStartStopScheduleMap) ToManagedInstanceStartStopScheduleMapOutputWithContext(ctx context.Context) ManagedInstanceStartStopScheduleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceStartStopScheduleMapOutput)
}

type ManagedInstanceStartStopScheduleOutput struct{ *pulumi.OutputState }

func (ManagedInstanceStartStopScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstanceStartStopSchedule)(nil)).Elem()
}

func (o ManagedInstanceStartStopScheduleOutput) ToManagedInstanceStartStopScheduleOutput() ManagedInstanceStartStopScheduleOutput {
	return o
}

func (o ManagedInstanceStartStopScheduleOutput) ToManagedInstanceStartStopScheduleOutputWithContext(ctx context.Context) ManagedInstanceStartStopScheduleOutput {
	return o
}

// Specifies the description of the schedule.
func (o ManagedInstanceStartStopScheduleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedInstanceStartStopSchedule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the ID of the Managed Instance. Changing this forces a new Sql Start Stop Managed Instance Schedule to be created.
func (o ManagedInstanceStartStopScheduleOutput) ManagedInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedInstanceStartStopSchedule) pulumi.StringOutput { return v.ManagedInstanceId }).(pulumi.StringOutput)
}

// Timestamp when the next action will be executed in the corresponding schedule time zone.
func (o ManagedInstanceStartStopScheduleOutput) NextExecutionTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedInstanceStartStopSchedule) pulumi.StringOutput { return v.NextExecutionTime }).(pulumi.StringOutput)
}

// Next action to be executed (Start or Stop).
func (o ManagedInstanceStartStopScheduleOutput) NextRunAction() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedInstanceStartStopSchedule) pulumi.StringOutput { return v.NextRunAction }).(pulumi.StringOutput)
}

// A `schedule` block as defined below.
func (o ManagedInstanceStartStopScheduleOutput) Schedules() ManagedInstanceStartStopScheduleScheduleArrayOutput {
	return o.ApplyT(func(v *ManagedInstanceStartStopSchedule) ManagedInstanceStartStopScheduleScheduleArrayOutput {
		return v.Schedules
	}).(ManagedInstanceStartStopScheduleScheduleArrayOutput)
}

// Specifies the time zone of the schedule. Defaults to `UTC`.
func (o ManagedInstanceStartStopScheduleOutput) TimezoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedInstanceStartStopSchedule) pulumi.StringPtrOutput { return v.TimezoneId }).(pulumi.StringPtrOutput)
}

type ManagedInstanceStartStopScheduleArrayOutput struct{ *pulumi.OutputState }

func (ManagedInstanceStartStopScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedInstanceStartStopSchedule)(nil)).Elem()
}

func (o ManagedInstanceStartStopScheduleArrayOutput) ToManagedInstanceStartStopScheduleArrayOutput() ManagedInstanceStartStopScheduleArrayOutput {
	return o
}

func (o ManagedInstanceStartStopScheduleArrayOutput) ToManagedInstanceStartStopScheduleArrayOutputWithContext(ctx context.Context) ManagedInstanceStartStopScheduleArrayOutput {
	return o
}

func (o ManagedInstanceStartStopScheduleArrayOutput) Index(i pulumi.IntInput) ManagedInstanceStartStopScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ManagedInstanceStartStopSchedule {
		return vs[0].([]*ManagedInstanceStartStopSchedule)[vs[1].(int)]
	}).(ManagedInstanceStartStopScheduleOutput)
}

type ManagedInstanceStartStopScheduleMapOutput struct{ *pulumi.OutputState }

func (ManagedInstanceStartStopScheduleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedInstanceStartStopSchedule)(nil)).Elem()
}

func (o ManagedInstanceStartStopScheduleMapOutput) ToManagedInstanceStartStopScheduleMapOutput() ManagedInstanceStartStopScheduleMapOutput {
	return o
}

func (o ManagedInstanceStartStopScheduleMapOutput) ToManagedInstanceStartStopScheduleMapOutputWithContext(ctx context.Context) ManagedInstanceStartStopScheduleMapOutput {
	return o
}

func (o ManagedInstanceStartStopScheduleMapOutput) MapIndex(k pulumi.StringInput) ManagedInstanceStartStopScheduleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ManagedInstanceStartStopSchedule {
		return vs[0].(map[string]*ManagedInstanceStartStopSchedule)[vs[1].(string)]
	}).(ManagedInstanceStartStopScheduleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceStartStopScheduleInput)(nil)).Elem(), &ManagedInstanceStartStopSchedule{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceStartStopScheduleArrayInput)(nil)).Elem(), ManagedInstanceStartStopScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceStartStopScheduleMapInput)(nil)).Elem(), ManagedInstanceStartStopScheduleMap{})
	pulumi.RegisterOutputType(ManagedInstanceStartStopScheduleOutput{})
	pulumi.RegisterOutputType(ManagedInstanceStartStopScheduleArrayOutput{})
	pulumi.RegisterOutputType(ManagedInstanceStartStopScheduleMapOutput{})
}
