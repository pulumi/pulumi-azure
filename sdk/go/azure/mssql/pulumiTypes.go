// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package mssql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult struct {
	// A list representing a result of the baseline.
	Results []string `pulumi:"results"`
}

// DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultInput is an input type that accepts DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArgs and DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput values.
// You can construct a concrete instance of `DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultInput` via:
//
// 		 DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArgs{...}
//
type DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultInput interface {
	pulumi.Input

	ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput() DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput
	ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutputWithContext(context.Context) DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput
}

type DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArgs struct {
	// A list representing a result of the baseline.
	Results pulumi.StringArrayInput `pulumi:"results"`
}

func (DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult)(nil)).Elem()
}

func (i DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArgs) ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput() DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput {
	return i.ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutputWithContext(context.Background())
}

func (i DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArgs) ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutputWithContext(ctx context.Context) DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput)
}

// DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayInput is an input type that accepts DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArray and DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput values.
// You can construct a concrete instance of `DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayInput` via:
//
// 		 DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArray{ DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArgs{...} }
//
type DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayInput interface {
	pulumi.Input

	ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput() DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput
	ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutputWithContext(context.Context) DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput
}

type DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArray []DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultInput

func (DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult)(nil)).Elem()
}

func (i DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArray) ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput() DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput {
	return i.ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutputWithContext(context.Background())
}

func (i DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArray) ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutputWithContext(ctx context.Context) DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput)
}

type DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput struct{ *pulumi.OutputState }

func (DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult)(nil)).Elem()
}

func (o DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput) ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput() DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput {
	return o
}

func (o DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput) ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutputWithContext(ctx context.Context) DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput {
	return o
}

// A list representing a result of the baseline.
func (o DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput) Results() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult) []string { return v.Results }).(pulumi.StringArrayOutput)
}

type DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput struct{ *pulumi.OutputState }

func (DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult)(nil)).Elem()
}

func (o DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput) ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput() DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput {
	return o
}

func (o DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput) ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutputWithContext(ctx context.Context) DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput {
	return o
}

func (o DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput) Index(i pulumi.IntInput) DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult {
		return vs[0].([]DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult)[vs[1].(int)]
	}).(DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput)
}

type ElasticPoolPerDatabaseSettings struct {
	// The maximum capacity any one database can consume.
	MaxCapacity float64 `pulumi:"maxCapacity"`
	// The minimum capacity all databases are guaranteed.
	MinCapacity float64 `pulumi:"minCapacity"`
}

// ElasticPoolPerDatabaseSettingsInput is an input type that accepts ElasticPoolPerDatabaseSettingsArgs and ElasticPoolPerDatabaseSettingsOutput values.
// You can construct a concrete instance of `ElasticPoolPerDatabaseSettingsInput` via:
//
// 		 ElasticPoolPerDatabaseSettingsArgs{...}
//
type ElasticPoolPerDatabaseSettingsInput interface {
	pulumi.Input

	ToElasticPoolPerDatabaseSettingsOutput() ElasticPoolPerDatabaseSettingsOutput
	ToElasticPoolPerDatabaseSettingsOutputWithContext(context.Context) ElasticPoolPerDatabaseSettingsOutput
}

type ElasticPoolPerDatabaseSettingsArgs struct {
	// The maximum capacity any one database can consume.
	MaxCapacity pulumi.Float64Input `pulumi:"maxCapacity"`
	// The minimum capacity all databases are guaranteed.
	MinCapacity pulumi.Float64Input `pulumi:"minCapacity"`
}

func (ElasticPoolPerDatabaseSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticPoolPerDatabaseSettings)(nil)).Elem()
}

func (i ElasticPoolPerDatabaseSettingsArgs) ToElasticPoolPerDatabaseSettingsOutput() ElasticPoolPerDatabaseSettingsOutput {
	return i.ToElasticPoolPerDatabaseSettingsOutputWithContext(context.Background())
}

func (i ElasticPoolPerDatabaseSettingsArgs) ToElasticPoolPerDatabaseSettingsOutputWithContext(ctx context.Context) ElasticPoolPerDatabaseSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticPoolPerDatabaseSettingsOutput)
}

func (i ElasticPoolPerDatabaseSettingsArgs) ToElasticPoolPerDatabaseSettingsPtrOutput() ElasticPoolPerDatabaseSettingsPtrOutput {
	return i.ToElasticPoolPerDatabaseSettingsPtrOutputWithContext(context.Background())
}

func (i ElasticPoolPerDatabaseSettingsArgs) ToElasticPoolPerDatabaseSettingsPtrOutputWithContext(ctx context.Context) ElasticPoolPerDatabaseSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticPoolPerDatabaseSettingsOutput).ToElasticPoolPerDatabaseSettingsPtrOutputWithContext(ctx)
}

// ElasticPoolPerDatabaseSettingsPtrInput is an input type that accepts ElasticPoolPerDatabaseSettingsArgs, ElasticPoolPerDatabaseSettingsPtr and ElasticPoolPerDatabaseSettingsPtrOutput values.
// You can construct a concrete instance of `ElasticPoolPerDatabaseSettingsPtrInput` via:
//
// 		 ElasticPoolPerDatabaseSettingsArgs{...}
//
//  or:
//
// 		 nil
//
type ElasticPoolPerDatabaseSettingsPtrInput interface {
	pulumi.Input

	ToElasticPoolPerDatabaseSettingsPtrOutput() ElasticPoolPerDatabaseSettingsPtrOutput
	ToElasticPoolPerDatabaseSettingsPtrOutputWithContext(context.Context) ElasticPoolPerDatabaseSettingsPtrOutput
}

type elasticPoolPerDatabaseSettingsPtrType ElasticPoolPerDatabaseSettingsArgs

func ElasticPoolPerDatabaseSettingsPtr(v *ElasticPoolPerDatabaseSettingsArgs) ElasticPoolPerDatabaseSettingsPtrInput {
	return (*elasticPoolPerDatabaseSettingsPtrType)(v)
}

func (*elasticPoolPerDatabaseSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticPoolPerDatabaseSettings)(nil)).Elem()
}

func (i *elasticPoolPerDatabaseSettingsPtrType) ToElasticPoolPerDatabaseSettingsPtrOutput() ElasticPoolPerDatabaseSettingsPtrOutput {
	return i.ToElasticPoolPerDatabaseSettingsPtrOutputWithContext(context.Background())
}

func (i *elasticPoolPerDatabaseSettingsPtrType) ToElasticPoolPerDatabaseSettingsPtrOutputWithContext(ctx context.Context) ElasticPoolPerDatabaseSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticPoolPerDatabaseSettingsPtrOutput)
}

type ElasticPoolPerDatabaseSettingsOutput struct{ *pulumi.OutputState }

func (ElasticPoolPerDatabaseSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticPoolPerDatabaseSettings)(nil)).Elem()
}

func (o ElasticPoolPerDatabaseSettingsOutput) ToElasticPoolPerDatabaseSettingsOutput() ElasticPoolPerDatabaseSettingsOutput {
	return o
}

func (o ElasticPoolPerDatabaseSettingsOutput) ToElasticPoolPerDatabaseSettingsOutputWithContext(ctx context.Context) ElasticPoolPerDatabaseSettingsOutput {
	return o
}

func (o ElasticPoolPerDatabaseSettingsOutput) ToElasticPoolPerDatabaseSettingsPtrOutput() ElasticPoolPerDatabaseSettingsPtrOutput {
	return o.ToElasticPoolPerDatabaseSettingsPtrOutputWithContext(context.Background())
}

func (o ElasticPoolPerDatabaseSettingsOutput) ToElasticPoolPerDatabaseSettingsPtrOutputWithContext(ctx context.Context) ElasticPoolPerDatabaseSettingsPtrOutput {
	return o.ApplyT(func(v ElasticPoolPerDatabaseSettings) *ElasticPoolPerDatabaseSettings {
		return &v
	}).(ElasticPoolPerDatabaseSettingsPtrOutput)
}

// The maximum capacity any one database can consume.
func (o ElasticPoolPerDatabaseSettingsOutput) MaxCapacity() pulumi.Float64Output {
	return o.ApplyT(func(v ElasticPoolPerDatabaseSettings) float64 { return v.MaxCapacity }).(pulumi.Float64Output)
}

// The minimum capacity all databases are guaranteed.
func (o ElasticPoolPerDatabaseSettingsOutput) MinCapacity() pulumi.Float64Output {
	return o.ApplyT(func(v ElasticPoolPerDatabaseSettings) float64 { return v.MinCapacity }).(pulumi.Float64Output)
}

type ElasticPoolPerDatabaseSettingsPtrOutput struct{ *pulumi.OutputState }

func (ElasticPoolPerDatabaseSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticPoolPerDatabaseSettings)(nil)).Elem()
}

func (o ElasticPoolPerDatabaseSettingsPtrOutput) ToElasticPoolPerDatabaseSettingsPtrOutput() ElasticPoolPerDatabaseSettingsPtrOutput {
	return o
}

func (o ElasticPoolPerDatabaseSettingsPtrOutput) ToElasticPoolPerDatabaseSettingsPtrOutputWithContext(ctx context.Context) ElasticPoolPerDatabaseSettingsPtrOutput {
	return o
}

func (o ElasticPoolPerDatabaseSettingsPtrOutput) Elem() ElasticPoolPerDatabaseSettingsOutput {
	return o.ApplyT(func(v *ElasticPoolPerDatabaseSettings) ElasticPoolPerDatabaseSettings { return *v }).(ElasticPoolPerDatabaseSettingsOutput)
}

// The maximum capacity any one database can consume.
func (o ElasticPoolPerDatabaseSettingsPtrOutput) MaxCapacity() pulumi.Float64Output {
	return o.ApplyT(func(v ElasticPoolPerDatabaseSettings) float64 { return v.MaxCapacity }).(pulumi.Float64Output)
}

// The minimum capacity all databases are guaranteed.
func (o ElasticPoolPerDatabaseSettingsPtrOutput) MinCapacity() pulumi.Float64Output {
	return o.ApplyT(func(v ElasticPoolPerDatabaseSettings) float64 { return v.MinCapacity }).(pulumi.Float64Output)
}

type ElasticPoolSku struct {
	// The scale up/out capacity, representing server's compute units. For more information see the documentation for your Elasticpool configuration: [vCore-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-vcore-resource-limits-elastic-pools) or [DTU-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-dtu-resource-limits-elastic-pools).
	Capacity int `pulumi:"capacity"`
	// The `family` of hardware `Gen4` or `Gen5`.
	Family *string `pulumi:"family"`
	// Specifies the SKU Name for this Elasticpool. The name of the SKU, will be either `vCore` based `tier` + `family` pattern (e.g. GP_Gen4, BC_Gen5) or the `DTU` based `BasicPool`, `StandardPool`, or `PremiumPool` pattern.
	Name string `pulumi:"name"`
	// The tier of the particular SKU. Possible values are `GeneralPurpose`, `BusinessCritical`, `Basic`, `Standard`, or `Premium`. For more information see the documentation for your Elasticpool configuration: [vCore-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-vcore-resource-limits-elastic-pools) or [DTU-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-dtu-resource-limits-elastic-pools).
	Tier string `pulumi:"tier"`
}

// ElasticPoolSkuInput is an input type that accepts ElasticPoolSkuArgs and ElasticPoolSkuOutput values.
// You can construct a concrete instance of `ElasticPoolSkuInput` via:
//
// 		 ElasticPoolSkuArgs{...}
//
type ElasticPoolSkuInput interface {
	pulumi.Input

	ToElasticPoolSkuOutput() ElasticPoolSkuOutput
	ToElasticPoolSkuOutputWithContext(context.Context) ElasticPoolSkuOutput
}

type ElasticPoolSkuArgs struct {
	// The scale up/out capacity, representing server's compute units. For more information see the documentation for your Elasticpool configuration: [vCore-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-vcore-resource-limits-elastic-pools) or [DTU-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-dtu-resource-limits-elastic-pools).
	Capacity pulumi.IntInput `pulumi:"capacity"`
	// The `family` of hardware `Gen4` or `Gen5`.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// Specifies the SKU Name for this Elasticpool. The name of the SKU, will be either `vCore` based `tier` + `family` pattern (e.g. GP_Gen4, BC_Gen5) or the `DTU` based `BasicPool`, `StandardPool`, or `PremiumPool` pattern.
	Name pulumi.StringInput `pulumi:"name"`
	// The tier of the particular SKU. Possible values are `GeneralPurpose`, `BusinessCritical`, `Basic`, `Standard`, or `Premium`. For more information see the documentation for your Elasticpool configuration: [vCore-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-vcore-resource-limits-elastic-pools) or [DTU-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-dtu-resource-limits-elastic-pools).
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (ElasticPoolSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticPoolSku)(nil)).Elem()
}

func (i ElasticPoolSkuArgs) ToElasticPoolSkuOutput() ElasticPoolSkuOutput {
	return i.ToElasticPoolSkuOutputWithContext(context.Background())
}

func (i ElasticPoolSkuArgs) ToElasticPoolSkuOutputWithContext(ctx context.Context) ElasticPoolSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticPoolSkuOutput)
}

func (i ElasticPoolSkuArgs) ToElasticPoolSkuPtrOutput() ElasticPoolSkuPtrOutput {
	return i.ToElasticPoolSkuPtrOutputWithContext(context.Background())
}

func (i ElasticPoolSkuArgs) ToElasticPoolSkuPtrOutputWithContext(ctx context.Context) ElasticPoolSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticPoolSkuOutput).ToElasticPoolSkuPtrOutputWithContext(ctx)
}

// ElasticPoolSkuPtrInput is an input type that accepts ElasticPoolSkuArgs, ElasticPoolSkuPtr and ElasticPoolSkuPtrOutput values.
// You can construct a concrete instance of `ElasticPoolSkuPtrInput` via:
//
// 		 ElasticPoolSkuArgs{...}
//
//  or:
//
// 		 nil
//
type ElasticPoolSkuPtrInput interface {
	pulumi.Input

	ToElasticPoolSkuPtrOutput() ElasticPoolSkuPtrOutput
	ToElasticPoolSkuPtrOutputWithContext(context.Context) ElasticPoolSkuPtrOutput
}

type elasticPoolSkuPtrType ElasticPoolSkuArgs

func ElasticPoolSkuPtr(v *ElasticPoolSkuArgs) ElasticPoolSkuPtrInput {
	return (*elasticPoolSkuPtrType)(v)
}

func (*elasticPoolSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticPoolSku)(nil)).Elem()
}

func (i *elasticPoolSkuPtrType) ToElasticPoolSkuPtrOutput() ElasticPoolSkuPtrOutput {
	return i.ToElasticPoolSkuPtrOutputWithContext(context.Background())
}

func (i *elasticPoolSkuPtrType) ToElasticPoolSkuPtrOutputWithContext(ctx context.Context) ElasticPoolSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticPoolSkuPtrOutput)
}

type ElasticPoolSkuOutput struct{ *pulumi.OutputState }

func (ElasticPoolSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticPoolSku)(nil)).Elem()
}

func (o ElasticPoolSkuOutput) ToElasticPoolSkuOutput() ElasticPoolSkuOutput {
	return o
}

func (o ElasticPoolSkuOutput) ToElasticPoolSkuOutputWithContext(ctx context.Context) ElasticPoolSkuOutput {
	return o
}

func (o ElasticPoolSkuOutput) ToElasticPoolSkuPtrOutput() ElasticPoolSkuPtrOutput {
	return o.ToElasticPoolSkuPtrOutputWithContext(context.Background())
}

func (o ElasticPoolSkuOutput) ToElasticPoolSkuPtrOutputWithContext(ctx context.Context) ElasticPoolSkuPtrOutput {
	return o.ApplyT(func(v ElasticPoolSku) *ElasticPoolSku {
		return &v
	}).(ElasticPoolSkuPtrOutput)
}

// The scale up/out capacity, representing server's compute units. For more information see the documentation for your Elasticpool configuration: [vCore-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-vcore-resource-limits-elastic-pools) or [DTU-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-dtu-resource-limits-elastic-pools).
func (o ElasticPoolSkuOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v ElasticPoolSku) int { return v.Capacity }).(pulumi.IntOutput)
}

// The `family` of hardware `Gen4` or `Gen5`.
func (o ElasticPoolSkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticPoolSku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// Specifies the SKU Name for this Elasticpool. The name of the SKU, will be either `vCore` based `tier` + `family` pattern (e.g. GP_Gen4, BC_Gen5) or the `DTU` based `BasicPool`, `StandardPool`, or `PremiumPool` pattern.
func (o ElasticPoolSkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticPoolSku) string { return v.Name }).(pulumi.StringOutput)
}

// The tier of the particular SKU. Possible values are `GeneralPurpose`, `BusinessCritical`, `Basic`, `Standard`, or `Premium`. For more information see the documentation for your Elasticpool configuration: [vCore-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-vcore-resource-limits-elastic-pools) or [DTU-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-dtu-resource-limits-elastic-pools).
func (o ElasticPoolSkuOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticPoolSku) string { return v.Tier }).(pulumi.StringOutput)
}

type ElasticPoolSkuPtrOutput struct{ *pulumi.OutputState }

func (ElasticPoolSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticPoolSku)(nil)).Elem()
}

func (o ElasticPoolSkuPtrOutput) ToElasticPoolSkuPtrOutput() ElasticPoolSkuPtrOutput {
	return o
}

func (o ElasticPoolSkuPtrOutput) ToElasticPoolSkuPtrOutputWithContext(ctx context.Context) ElasticPoolSkuPtrOutput {
	return o
}

func (o ElasticPoolSkuPtrOutput) Elem() ElasticPoolSkuOutput {
	return o.ApplyT(func(v *ElasticPoolSku) ElasticPoolSku { return *v }).(ElasticPoolSkuOutput)
}

// The scale up/out capacity, representing server's compute units. For more information see the documentation for your Elasticpool configuration: [vCore-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-vcore-resource-limits-elastic-pools) or [DTU-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-dtu-resource-limits-elastic-pools).
func (o ElasticPoolSkuPtrOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v ElasticPoolSku) int { return v.Capacity }).(pulumi.IntOutput)
}

// The `family` of hardware `Gen4` or `Gen5`.
func (o ElasticPoolSkuPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticPoolSku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// Specifies the SKU Name for this Elasticpool. The name of the SKU, will be either `vCore` based `tier` + `family` pattern (e.g. GP_Gen4, BC_Gen5) or the `DTU` based `BasicPool`, `StandardPool`, or `PremiumPool` pattern.
func (o ElasticPoolSkuPtrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticPoolSku) string { return v.Name }).(pulumi.StringOutput)
}

// The tier of the particular SKU. Possible values are `GeneralPurpose`, `BusinessCritical`, `Basic`, `Standard`, or `Premium`. For more information see the documentation for your Elasticpool configuration: [vCore-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-vcore-resource-limits-elastic-pools) or [DTU-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-dtu-resource-limits-elastic-pools).
func (o ElasticPoolSkuPtrOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticPoolSku) string { return v.Tier }).(pulumi.StringOutput)
}

type ServerVulnerabilityAssessmentRecurringScans struct {
	// Boolean flag which specifies if the schedule scan notification will be sent to the subscription administrators. Defaults to `false`.
	EmailSubscriptionAdmins *bool `pulumi:"emailSubscriptionAdmins"`
	// Specifies an array of e-mail addresses to which the scan notification is sent.
	Emails []string `pulumi:"emails"`
	// Boolean flag which specifies if recurring scans is enabled or disabled. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
}

// ServerVulnerabilityAssessmentRecurringScansInput is an input type that accepts ServerVulnerabilityAssessmentRecurringScansArgs and ServerVulnerabilityAssessmentRecurringScansOutput values.
// You can construct a concrete instance of `ServerVulnerabilityAssessmentRecurringScansInput` via:
//
// 		 ServerVulnerabilityAssessmentRecurringScansArgs{...}
//
type ServerVulnerabilityAssessmentRecurringScansInput interface {
	pulumi.Input

	ToServerVulnerabilityAssessmentRecurringScansOutput() ServerVulnerabilityAssessmentRecurringScansOutput
	ToServerVulnerabilityAssessmentRecurringScansOutputWithContext(context.Context) ServerVulnerabilityAssessmentRecurringScansOutput
}

type ServerVulnerabilityAssessmentRecurringScansArgs struct {
	// Boolean flag which specifies if the schedule scan notification will be sent to the subscription administrators. Defaults to `false`.
	EmailSubscriptionAdmins pulumi.BoolPtrInput `pulumi:"emailSubscriptionAdmins"`
	// Specifies an array of e-mail addresses to which the scan notification is sent.
	Emails pulumi.StringArrayInput `pulumi:"emails"`
	// Boolean flag which specifies if recurring scans is enabled or disabled. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ServerVulnerabilityAssessmentRecurringScansArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerVulnerabilityAssessmentRecurringScans)(nil)).Elem()
}

func (i ServerVulnerabilityAssessmentRecurringScansArgs) ToServerVulnerabilityAssessmentRecurringScansOutput() ServerVulnerabilityAssessmentRecurringScansOutput {
	return i.ToServerVulnerabilityAssessmentRecurringScansOutputWithContext(context.Background())
}

func (i ServerVulnerabilityAssessmentRecurringScansArgs) ToServerVulnerabilityAssessmentRecurringScansOutputWithContext(ctx context.Context) ServerVulnerabilityAssessmentRecurringScansOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerVulnerabilityAssessmentRecurringScansOutput)
}

func (i ServerVulnerabilityAssessmentRecurringScansArgs) ToServerVulnerabilityAssessmentRecurringScansPtrOutput() ServerVulnerabilityAssessmentRecurringScansPtrOutput {
	return i.ToServerVulnerabilityAssessmentRecurringScansPtrOutputWithContext(context.Background())
}

func (i ServerVulnerabilityAssessmentRecurringScansArgs) ToServerVulnerabilityAssessmentRecurringScansPtrOutputWithContext(ctx context.Context) ServerVulnerabilityAssessmentRecurringScansPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerVulnerabilityAssessmentRecurringScansOutput).ToServerVulnerabilityAssessmentRecurringScansPtrOutputWithContext(ctx)
}

// ServerVulnerabilityAssessmentRecurringScansPtrInput is an input type that accepts ServerVulnerabilityAssessmentRecurringScansArgs, ServerVulnerabilityAssessmentRecurringScansPtr and ServerVulnerabilityAssessmentRecurringScansPtrOutput values.
// You can construct a concrete instance of `ServerVulnerabilityAssessmentRecurringScansPtrInput` via:
//
// 		 ServerVulnerabilityAssessmentRecurringScansArgs{...}
//
//  or:
//
// 		 nil
//
type ServerVulnerabilityAssessmentRecurringScansPtrInput interface {
	pulumi.Input

	ToServerVulnerabilityAssessmentRecurringScansPtrOutput() ServerVulnerabilityAssessmentRecurringScansPtrOutput
	ToServerVulnerabilityAssessmentRecurringScansPtrOutputWithContext(context.Context) ServerVulnerabilityAssessmentRecurringScansPtrOutput
}

type serverVulnerabilityAssessmentRecurringScansPtrType ServerVulnerabilityAssessmentRecurringScansArgs

func ServerVulnerabilityAssessmentRecurringScansPtr(v *ServerVulnerabilityAssessmentRecurringScansArgs) ServerVulnerabilityAssessmentRecurringScansPtrInput {
	return (*serverVulnerabilityAssessmentRecurringScansPtrType)(v)
}

func (*serverVulnerabilityAssessmentRecurringScansPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerVulnerabilityAssessmentRecurringScans)(nil)).Elem()
}

func (i *serverVulnerabilityAssessmentRecurringScansPtrType) ToServerVulnerabilityAssessmentRecurringScansPtrOutput() ServerVulnerabilityAssessmentRecurringScansPtrOutput {
	return i.ToServerVulnerabilityAssessmentRecurringScansPtrOutputWithContext(context.Background())
}

func (i *serverVulnerabilityAssessmentRecurringScansPtrType) ToServerVulnerabilityAssessmentRecurringScansPtrOutputWithContext(ctx context.Context) ServerVulnerabilityAssessmentRecurringScansPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerVulnerabilityAssessmentRecurringScansPtrOutput)
}

type ServerVulnerabilityAssessmentRecurringScansOutput struct{ *pulumi.OutputState }

func (ServerVulnerabilityAssessmentRecurringScansOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerVulnerabilityAssessmentRecurringScans)(nil)).Elem()
}

func (o ServerVulnerabilityAssessmentRecurringScansOutput) ToServerVulnerabilityAssessmentRecurringScansOutput() ServerVulnerabilityAssessmentRecurringScansOutput {
	return o
}

func (o ServerVulnerabilityAssessmentRecurringScansOutput) ToServerVulnerabilityAssessmentRecurringScansOutputWithContext(ctx context.Context) ServerVulnerabilityAssessmentRecurringScansOutput {
	return o
}

func (o ServerVulnerabilityAssessmentRecurringScansOutput) ToServerVulnerabilityAssessmentRecurringScansPtrOutput() ServerVulnerabilityAssessmentRecurringScansPtrOutput {
	return o.ToServerVulnerabilityAssessmentRecurringScansPtrOutputWithContext(context.Background())
}

func (o ServerVulnerabilityAssessmentRecurringScansOutput) ToServerVulnerabilityAssessmentRecurringScansPtrOutputWithContext(ctx context.Context) ServerVulnerabilityAssessmentRecurringScansPtrOutput {
	return o.ApplyT(func(v ServerVulnerabilityAssessmentRecurringScans) *ServerVulnerabilityAssessmentRecurringScans {
		return &v
	}).(ServerVulnerabilityAssessmentRecurringScansPtrOutput)
}

// Boolean flag which specifies if the schedule scan notification will be sent to the subscription administrators. Defaults to `false`.
func (o ServerVulnerabilityAssessmentRecurringScansOutput) EmailSubscriptionAdmins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServerVulnerabilityAssessmentRecurringScans) *bool { return v.EmailSubscriptionAdmins }).(pulumi.BoolPtrOutput)
}

// Specifies an array of e-mail addresses to which the scan notification is sent.
func (o ServerVulnerabilityAssessmentRecurringScansOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServerVulnerabilityAssessmentRecurringScans) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

// Boolean flag which specifies if recurring scans is enabled or disabled. Defaults to `false`.
func (o ServerVulnerabilityAssessmentRecurringScansOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServerVulnerabilityAssessmentRecurringScans) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ServerVulnerabilityAssessmentRecurringScansPtrOutput struct{ *pulumi.OutputState }

func (ServerVulnerabilityAssessmentRecurringScansPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerVulnerabilityAssessmentRecurringScans)(nil)).Elem()
}

func (o ServerVulnerabilityAssessmentRecurringScansPtrOutput) ToServerVulnerabilityAssessmentRecurringScansPtrOutput() ServerVulnerabilityAssessmentRecurringScansPtrOutput {
	return o
}

func (o ServerVulnerabilityAssessmentRecurringScansPtrOutput) ToServerVulnerabilityAssessmentRecurringScansPtrOutputWithContext(ctx context.Context) ServerVulnerabilityAssessmentRecurringScansPtrOutput {
	return o
}

func (o ServerVulnerabilityAssessmentRecurringScansPtrOutput) Elem() ServerVulnerabilityAssessmentRecurringScansOutput {
	return o.ApplyT(func(v *ServerVulnerabilityAssessmentRecurringScans) ServerVulnerabilityAssessmentRecurringScans {
		return *v
	}).(ServerVulnerabilityAssessmentRecurringScansOutput)
}

// Boolean flag which specifies if the schedule scan notification will be sent to the subscription administrators. Defaults to `false`.
func (o ServerVulnerabilityAssessmentRecurringScansPtrOutput) EmailSubscriptionAdmins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServerVulnerabilityAssessmentRecurringScans) *bool { return v.EmailSubscriptionAdmins }).(pulumi.BoolPtrOutput)
}

// Specifies an array of e-mail addresses to which the scan notification is sent.
func (o ServerVulnerabilityAssessmentRecurringScansPtrOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServerVulnerabilityAssessmentRecurringScans) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

// Boolean flag which specifies if recurring scans is enabled or disabled. Defaults to `false`.
func (o ServerVulnerabilityAssessmentRecurringScansPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServerVulnerabilityAssessmentRecurringScans) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type VirtualMachineAutoPatching struct {
	// The day of week to apply the patch on.
	DayOfWeek string `pulumi:"dayOfWeek"`
	// The size of the Maintenance Window in minutes.
	MaintenanceWindowDurationInMinutes int `pulumi:"maintenanceWindowDurationInMinutes"`
	// The Hour, in the Virtual Machine Time-Zone when the patching maintenance window should begin.
	MaintenanceWindowStartingHour int `pulumi:"maintenanceWindowStartingHour"`
}

// VirtualMachineAutoPatchingInput is an input type that accepts VirtualMachineAutoPatchingArgs and VirtualMachineAutoPatchingOutput values.
// You can construct a concrete instance of `VirtualMachineAutoPatchingInput` via:
//
// 		 VirtualMachineAutoPatchingArgs{...}
//
type VirtualMachineAutoPatchingInput interface {
	pulumi.Input

	ToVirtualMachineAutoPatchingOutput() VirtualMachineAutoPatchingOutput
	ToVirtualMachineAutoPatchingOutputWithContext(context.Context) VirtualMachineAutoPatchingOutput
}

type VirtualMachineAutoPatchingArgs struct {
	// The day of week to apply the patch on.
	DayOfWeek pulumi.StringInput `pulumi:"dayOfWeek"`
	// The size of the Maintenance Window in minutes.
	MaintenanceWindowDurationInMinutes pulumi.IntInput `pulumi:"maintenanceWindowDurationInMinutes"`
	// The Hour, in the Virtual Machine Time-Zone when the patching maintenance window should begin.
	MaintenanceWindowStartingHour pulumi.IntInput `pulumi:"maintenanceWindowStartingHour"`
}

func (VirtualMachineAutoPatchingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineAutoPatching)(nil)).Elem()
}

func (i VirtualMachineAutoPatchingArgs) ToVirtualMachineAutoPatchingOutput() VirtualMachineAutoPatchingOutput {
	return i.ToVirtualMachineAutoPatchingOutputWithContext(context.Background())
}

func (i VirtualMachineAutoPatchingArgs) ToVirtualMachineAutoPatchingOutputWithContext(ctx context.Context) VirtualMachineAutoPatchingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAutoPatchingOutput)
}

func (i VirtualMachineAutoPatchingArgs) ToVirtualMachineAutoPatchingPtrOutput() VirtualMachineAutoPatchingPtrOutput {
	return i.ToVirtualMachineAutoPatchingPtrOutputWithContext(context.Background())
}

func (i VirtualMachineAutoPatchingArgs) ToVirtualMachineAutoPatchingPtrOutputWithContext(ctx context.Context) VirtualMachineAutoPatchingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAutoPatchingOutput).ToVirtualMachineAutoPatchingPtrOutputWithContext(ctx)
}

// VirtualMachineAutoPatchingPtrInput is an input type that accepts VirtualMachineAutoPatchingArgs, VirtualMachineAutoPatchingPtr and VirtualMachineAutoPatchingPtrOutput values.
// You can construct a concrete instance of `VirtualMachineAutoPatchingPtrInput` via:
//
// 		 VirtualMachineAutoPatchingArgs{...}
//
//  or:
//
// 		 nil
//
type VirtualMachineAutoPatchingPtrInput interface {
	pulumi.Input

	ToVirtualMachineAutoPatchingPtrOutput() VirtualMachineAutoPatchingPtrOutput
	ToVirtualMachineAutoPatchingPtrOutputWithContext(context.Context) VirtualMachineAutoPatchingPtrOutput
}

type virtualMachineAutoPatchingPtrType VirtualMachineAutoPatchingArgs

func VirtualMachineAutoPatchingPtr(v *VirtualMachineAutoPatchingArgs) VirtualMachineAutoPatchingPtrInput {
	return (*virtualMachineAutoPatchingPtrType)(v)
}

func (*virtualMachineAutoPatchingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineAutoPatching)(nil)).Elem()
}

func (i *virtualMachineAutoPatchingPtrType) ToVirtualMachineAutoPatchingPtrOutput() VirtualMachineAutoPatchingPtrOutput {
	return i.ToVirtualMachineAutoPatchingPtrOutputWithContext(context.Background())
}

func (i *virtualMachineAutoPatchingPtrType) ToVirtualMachineAutoPatchingPtrOutputWithContext(ctx context.Context) VirtualMachineAutoPatchingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAutoPatchingPtrOutput)
}

type VirtualMachineAutoPatchingOutput struct{ *pulumi.OutputState }

func (VirtualMachineAutoPatchingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineAutoPatching)(nil)).Elem()
}

func (o VirtualMachineAutoPatchingOutput) ToVirtualMachineAutoPatchingOutput() VirtualMachineAutoPatchingOutput {
	return o
}

func (o VirtualMachineAutoPatchingOutput) ToVirtualMachineAutoPatchingOutputWithContext(ctx context.Context) VirtualMachineAutoPatchingOutput {
	return o
}

func (o VirtualMachineAutoPatchingOutput) ToVirtualMachineAutoPatchingPtrOutput() VirtualMachineAutoPatchingPtrOutput {
	return o.ToVirtualMachineAutoPatchingPtrOutputWithContext(context.Background())
}

func (o VirtualMachineAutoPatchingOutput) ToVirtualMachineAutoPatchingPtrOutputWithContext(ctx context.Context) VirtualMachineAutoPatchingPtrOutput {
	return o.ApplyT(func(v VirtualMachineAutoPatching) *VirtualMachineAutoPatching {
		return &v
	}).(VirtualMachineAutoPatchingPtrOutput)
}

// The day of week to apply the patch on.
func (o VirtualMachineAutoPatchingOutput) DayOfWeek() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineAutoPatching) string { return v.DayOfWeek }).(pulumi.StringOutput)
}

// The size of the Maintenance Window in minutes.
func (o VirtualMachineAutoPatchingOutput) MaintenanceWindowDurationInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualMachineAutoPatching) int { return v.MaintenanceWindowDurationInMinutes }).(pulumi.IntOutput)
}

// The Hour, in the Virtual Machine Time-Zone when the patching maintenance window should begin.
func (o VirtualMachineAutoPatchingOutput) MaintenanceWindowStartingHour() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualMachineAutoPatching) int { return v.MaintenanceWindowStartingHour }).(pulumi.IntOutput)
}

type VirtualMachineAutoPatchingPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineAutoPatchingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineAutoPatching)(nil)).Elem()
}

func (o VirtualMachineAutoPatchingPtrOutput) ToVirtualMachineAutoPatchingPtrOutput() VirtualMachineAutoPatchingPtrOutput {
	return o
}

func (o VirtualMachineAutoPatchingPtrOutput) ToVirtualMachineAutoPatchingPtrOutputWithContext(ctx context.Context) VirtualMachineAutoPatchingPtrOutput {
	return o
}

func (o VirtualMachineAutoPatchingPtrOutput) Elem() VirtualMachineAutoPatchingOutput {
	return o.ApplyT(func(v *VirtualMachineAutoPatching) VirtualMachineAutoPatching { return *v }).(VirtualMachineAutoPatchingOutput)
}

// The day of week to apply the patch on.
func (o VirtualMachineAutoPatchingPtrOutput) DayOfWeek() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineAutoPatching) string { return v.DayOfWeek }).(pulumi.StringOutput)
}

// The size of the Maintenance Window in minutes.
func (o VirtualMachineAutoPatchingPtrOutput) MaintenanceWindowDurationInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualMachineAutoPatching) int { return v.MaintenanceWindowDurationInMinutes }).(pulumi.IntOutput)
}

// The Hour, in the Virtual Machine Time-Zone when the patching maintenance window should begin.
func (o VirtualMachineAutoPatchingPtrOutput) MaintenanceWindowStartingHour() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualMachineAutoPatching) int { return v.MaintenanceWindowStartingHour }).(pulumi.IntOutput)
}

type VirtualMachineKeyVaultCredential struct {
	// The azure Key Vault url. Changing this forces a new resource to be created.
	KeyVaultUrl string `pulumi:"keyVaultUrl"`
	// The credential name.
	Name string `pulumi:"name"`
	// The service principal name to access key vault. Changing this forces a new resource to be created.
	ServicePrincipalName string `pulumi:"servicePrincipalName"`
	// The service principal name secret to access key vault. Changing this forces a new resource to be created.
	ServicePrincipalSecret string `pulumi:"servicePrincipalSecret"`
}

// VirtualMachineKeyVaultCredentialInput is an input type that accepts VirtualMachineKeyVaultCredentialArgs and VirtualMachineKeyVaultCredentialOutput values.
// You can construct a concrete instance of `VirtualMachineKeyVaultCredentialInput` via:
//
// 		 VirtualMachineKeyVaultCredentialArgs{...}
//
type VirtualMachineKeyVaultCredentialInput interface {
	pulumi.Input

	ToVirtualMachineKeyVaultCredentialOutput() VirtualMachineKeyVaultCredentialOutput
	ToVirtualMachineKeyVaultCredentialOutputWithContext(context.Context) VirtualMachineKeyVaultCredentialOutput
}

type VirtualMachineKeyVaultCredentialArgs struct {
	// The azure Key Vault url. Changing this forces a new resource to be created.
	KeyVaultUrl pulumi.StringInput `pulumi:"keyVaultUrl"`
	// The credential name.
	Name pulumi.StringInput `pulumi:"name"`
	// The service principal name to access key vault. Changing this forces a new resource to be created.
	ServicePrincipalName pulumi.StringInput `pulumi:"servicePrincipalName"`
	// The service principal name secret to access key vault. Changing this forces a new resource to be created.
	ServicePrincipalSecret pulumi.StringInput `pulumi:"servicePrincipalSecret"`
}

func (VirtualMachineKeyVaultCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineKeyVaultCredential)(nil)).Elem()
}

func (i VirtualMachineKeyVaultCredentialArgs) ToVirtualMachineKeyVaultCredentialOutput() VirtualMachineKeyVaultCredentialOutput {
	return i.ToVirtualMachineKeyVaultCredentialOutputWithContext(context.Background())
}

func (i VirtualMachineKeyVaultCredentialArgs) ToVirtualMachineKeyVaultCredentialOutputWithContext(ctx context.Context) VirtualMachineKeyVaultCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineKeyVaultCredentialOutput)
}

func (i VirtualMachineKeyVaultCredentialArgs) ToVirtualMachineKeyVaultCredentialPtrOutput() VirtualMachineKeyVaultCredentialPtrOutput {
	return i.ToVirtualMachineKeyVaultCredentialPtrOutputWithContext(context.Background())
}

func (i VirtualMachineKeyVaultCredentialArgs) ToVirtualMachineKeyVaultCredentialPtrOutputWithContext(ctx context.Context) VirtualMachineKeyVaultCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineKeyVaultCredentialOutput).ToVirtualMachineKeyVaultCredentialPtrOutputWithContext(ctx)
}

// VirtualMachineKeyVaultCredentialPtrInput is an input type that accepts VirtualMachineKeyVaultCredentialArgs, VirtualMachineKeyVaultCredentialPtr and VirtualMachineKeyVaultCredentialPtrOutput values.
// You can construct a concrete instance of `VirtualMachineKeyVaultCredentialPtrInput` via:
//
// 		 VirtualMachineKeyVaultCredentialArgs{...}
//
//  or:
//
// 		 nil
//
type VirtualMachineKeyVaultCredentialPtrInput interface {
	pulumi.Input

	ToVirtualMachineKeyVaultCredentialPtrOutput() VirtualMachineKeyVaultCredentialPtrOutput
	ToVirtualMachineKeyVaultCredentialPtrOutputWithContext(context.Context) VirtualMachineKeyVaultCredentialPtrOutput
}

type virtualMachineKeyVaultCredentialPtrType VirtualMachineKeyVaultCredentialArgs

func VirtualMachineKeyVaultCredentialPtr(v *VirtualMachineKeyVaultCredentialArgs) VirtualMachineKeyVaultCredentialPtrInput {
	return (*virtualMachineKeyVaultCredentialPtrType)(v)
}

func (*virtualMachineKeyVaultCredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineKeyVaultCredential)(nil)).Elem()
}

func (i *virtualMachineKeyVaultCredentialPtrType) ToVirtualMachineKeyVaultCredentialPtrOutput() VirtualMachineKeyVaultCredentialPtrOutput {
	return i.ToVirtualMachineKeyVaultCredentialPtrOutputWithContext(context.Background())
}

func (i *virtualMachineKeyVaultCredentialPtrType) ToVirtualMachineKeyVaultCredentialPtrOutputWithContext(ctx context.Context) VirtualMachineKeyVaultCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineKeyVaultCredentialPtrOutput)
}

type VirtualMachineKeyVaultCredentialOutput struct{ *pulumi.OutputState }

func (VirtualMachineKeyVaultCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineKeyVaultCredential)(nil)).Elem()
}

func (o VirtualMachineKeyVaultCredentialOutput) ToVirtualMachineKeyVaultCredentialOutput() VirtualMachineKeyVaultCredentialOutput {
	return o
}

func (o VirtualMachineKeyVaultCredentialOutput) ToVirtualMachineKeyVaultCredentialOutputWithContext(ctx context.Context) VirtualMachineKeyVaultCredentialOutput {
	return o
}

func (o VirtualMachineKeyVaultCredentialOutput) ToVirtualMachineKeyVaultCredentialPtrOutput() VirtualMachineKeyVaultCredentialPtrOutput {
	return o.ToVirtualMachineKeyVaultCredentialPtrOutputWithContext(context.Background())
}

func (o VirtualMachineKeyVaultCredentialOutput) ToVirtualMachineKeyVaultCredentialPtrOutputWithContext(ctx context.Context) VirtualMachineKeyVaultCredentialPtrOutput {
	return o.ApplyT(func(v VirtualMachineKeyVaultCredential) *VirtualMachineKeyVaultCredential {
		return &v
	}).(VirtualMachineKeyVaultCredentialPtrOutput)
}

// The azure Key Vault url. Changing this forces a new resource to be created.
func (o VirtualMachineKeyVaultCredentialOutput) KeyVaultUrl() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineKeyVaultCredential) string { return v.KeyVaultUrl }).(pulumi.StringOutput)
}

// The credential name.
func (o VirtualMachineKeyVaultCredentialOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineKeyVaultCredential) string { return v.Name }).(pulumi.StringOutput)
}

// The service principal name to access key vault. Changing this forces a new resource to be created.
func (o VirtualMachineKeyVaultCredentialOutput) ServicePrincipalName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineKeyVaultCredential) string { return v.ServicePrincipalName }).(pulumi.StringOutput)
}

// The service principal name secret to access key vault. Changing this forces a new resource to be created.
func (o VirtualMachineKeyVaultCredentialOutput) ServicePrincipalSecret() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineKeyVaultCredential) string { return v.ServicePrincipalSecret }).(pulumi.StringOutput)
}

type VirtualMachineKeyVaultCredentialPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineKeyVaultCredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineKeyVaultCredential)(nil)).Elem()
}

func (o VirtualMachineKeyVaultCredentialPtrOutput) ToVirtualMachineKeyVaultCredentialPtrOutput() VirtualMachineKeyVaultCredentialPtrOutput {
	return o
}

func (o VirtualMachineKeyVaultCredentialPtrOutput) ToVirtualMachineKeyVaultCredentialPtrOutputWithContext(ctx context.Context) VirtualMachineKeyVaultCredentialPtrOutput {
	return o
}

func (o VirtualMachineKeyVaultCredentialPtrOutput) Elem() VirtualMachineKeyVaultCredentialOutput {
	return o.ApplyT(func(v *VirtualMachineKeyVaultCredential) VirtualMachineKeyVaultCredential { return *v }).(VirtualMachineKeyVaultCredentialOutput)
}

// The azure Key Vault url. Changing this forces a new resource to be created.
func (o VirtualMachineKeyVaultCredentialPtrOutput) KeyVaultUrl() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineKeyVaultCredential) string { return v.KeyVaultUrl }).(pulumi.StringOutput)
}

// The credential name.
func (o VirtualMachineKeyVaultCredentialPtrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineKeyVaultCredential) string { return v.Name }).(pulumi.StringOutput)
}

// The service principal name to access key vault. Changing this forces a new resource to be created.
func (o VirtualMachineKeyVaultCredentialPtrOutput) ServicePrincipalName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineKeyVaultCredential) string { return v.ServicePrincipalName }).(pulumi.StringOutput)
}

// The service principal name secret to access key vault. Changing this forces a new resource to be created.
func (o VirtualMachineKeyVaultCredentialPtrOutput) ServicePrincipalSecret() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineKeyVaultCredential) string { return v.ServicePrincipalSecret }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput{})
	pulumi.RegisterOutputType(DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput{})
	pulumi.RegisterOutputType(ElasticPoolPerDatabaseSettingsOutput{})
	pulumi.RegisterOutputType(ElasticPoolPerDatabaseSettingsPtrOutput{})
	pulumi.RegisterOutputType(ElasticPoolSkuOutput{})
	pulumi.RegisterOutputType(ElasticPoolSkuPtrOutput{})
	pulumi.RegisterOutputType(ServerVulnerabilityAssessmentRecurringScansOutput{})
	pulumi.RegisterOutputType(ServerVulnerabilityAssessmentRecurringScansPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineAutoPatchingOutput{})
	pulumi.RegisterOutputType(VirtualMachineAutoPatchingPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineKeyVaultCredentialOutput{})
	pulumi.RegisterOutputType(VirtualMachineKeyVaultCredentialPtrOutput{})
}
