// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mssql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type DatabaseImport struct {
	// Specifies the name of the SQL administrator.
	AdministratorLogin string `pulumi:"administratorLogin"`
	// Specifies the password of the SQL administrator.
	AdministratorLoginPassword string `pulumi:"administratorLoginPassword"`
	// Specifies the type of authentication used to access the server. Valid values are `SQL` or `ADPassword`.
	AuthenticationType string `pulumi:"authenticationType"`
	// The resource id for the storage account used to store BACPAC file. If set, private endpoint connection will be created for the storage account. Must match storage account used for storageUri parameter.
	StorageAccountId *string `pulumi:"storageAccountId"`
	// Specifies the access key for the storage account.
	StorageKey string `pulumi:"storageKey"`
	// Specifies the type of access key for the storage account. Valid values are `StorageAccessKey` or `SharedAccessKey`.
	StorageKeyType string `pulumi:"storageKeyType"`
	// Specifies the blob URI of the .bacpac file.
	StorageUri string `pulumi:"storageUri"`
}

// DatabaseImportInput is an input type that accepts DatabaseImportArgs and DatabaseImportOutput values.
// You can construct a concrete instance of `DatabaseImportInput` via:
//
//	DatabaseImportArgs{...}
type DatabaseImportInput interface {
	pulumi.Input

	ToDatabaseImportOutput() DatabaseImportOutput
	ToDatabaseImportOutputWithContext(context.Context) DatabaseImportOutput
}

type DatabaseImportArgs struct {
	// Specifies the name of the SQL administrator.
	AdministratorLogin pulumi.StringInput `pulumi:"administratorLogin"`
	// Specifies the password of the SQL administrator.
	AdministratorLoginPassword pulumi.StringInput `pulumi:"administratorLoginPassword"`
	// Specifies the type of authentication used to access the server. Valid values are `SQL` or `ADPassword`.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// The resource id for the storage account used to store BACPAC file. If set, private endpoint connection will be created for the storage account. Must match storage account used for storageUri parameter.
	StorageAccountId pulumi.StringPtrInput `pulumi:"storageAccountId"`
	// Specifies the access key for the storage account.
	StorageKey pulumi.StringInput `pulumi:"storageKey"`
	// Specifies the type of access key for the storage account. Valid values are `StorageAccessKey` or `SharedAccessKey`.
	StorageKeyType pulumi.StringInput `pulumi:"storageKeyType"`
	// Specifies the blob URI of the .bacpac file.
	StorageUri pulumi.StringInput `pulumi:"storageUri"`
}

func (DatabaseImportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseImport)(nil)).Elem()
}

func (i DatabaseImportArgs) ToDatabaseImportOutput() DatabaseImportOutput {
	return i.ToDatabaseImportOutputWithContext(context.Background())
}

func (i DatabaseImportArgs) ToDatabaseImportOutputWithContext(ctx context.Context) DatabaseImportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseImportOutput)
}

func (i DatabaseImportArgs) ToOutput(ctx context.Context) pulumix.Output[DatabaseImport] {
	return pulumix.Output[DatabaseImport]{
		OutputState: i.ToDatabaseImportOutputWithContext(ctx).OutputState,
	}
}

func (i DatabaseImportArgs) ToDatabaseImportPtrOutput() DatabaseImportPtrOutput {
	return i.ToDatabaseImportPtrOutputWithContext(context.Background())
}

func (i DatabaseImportArgs) ToDatabaseImportPtrOutputWithContext(ctx context.Context) DatabaseImportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseImportOutput).ToDatabaseImportPtrOutputWithContext(ctx)
}

// DatabaseImportPtrInput is an input type that accepts DatabaseImportArgs, DatabaseImportPtr and DatabaseImportPtrOutput values.
// You can construct a concrete instance of `DatabaseImportPtrInput` via:
//
//	        DatabaseImportArgs{...}
//
//	or:
//
//	        nil
type DatabaseImportPtrInput interface {
	pulumi.Input

	ToDatabaseImportPtrOutput() DatabaseImportPtrOutput
	ToDatabaseImportPtrOutputWithContext(context.Context) DatabaseImportPtrOutput
}

type databaseImportPtrType DatabaseImportArgs

func DatabaseImportPtr(v *DatabaseImportArgs) DatabaseImportPtrInput {
	return (*databaseImportPtrType)(v)
}

func (*databaseImportPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseImport)(nil)).Elem()
}

func (i *databaseImportPtrType) ToDatabaseImportPtrOutput() DatabaseImportPtrOutput {
	return i.ToDatabaseImportPtrOutputWithContext(context.Background())
}

func (i *databaseImportPtrType) ToDatabaseImportPtrOutputWithContext(ctx context.Context) DatabaseImportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseImportPtrOutput)
}

func (i *databaseImportPtrType) ToOutput(ctx context.Context) pulumix.Output[*DatabaseImport] {
	return pulumix.Output[*DatabaseImport]{
		OutputState: i.ToDatabaseImportPtrOutputWithContext(ctx).OutputState,
	}
}

type DatabaseImportOutput struct{ *pulumi.OutputState }

func (DatabaseImportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseImport)(nil)).Elem()
}

func (o DatabaseImportOutput) ToDatabaseImportOutput() DatabaseImportOutput {
	return o
}

func (o DatabaseImportOutput) ToDatabaseImportOutputWithContext(ctx context.Context) DatabaseImportOutput {
	return o
}

func (o DatabaseImportOutput) ToDatabaseImportPtrOutput() DatabaseImportPtrOutput {
	return o.ToDatabaseImportPtrOutputWithContext(context.Background())
}

func (o DatabaseImportOutput) ToDatabaseImportPtrOutputWithContext(ctx context.Context) DatabaseImportPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseImport) *DatabaseImport {
		return &v
	}).(DatabaseImportPtrOutput)
}

func (o DatabaseImportOutput) ToOutput(ctx context.Context) pulumix.Output[DatabaseImport] {
	return pulumix.Output[DatabaseImport]{
		OutputState: o.OutputState,
	}
}

// Specifies the name of the SQL administrator.
func (o DatabaseImportOutput) AdministratorLogin() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseImport) string { return v.AdministratorLogin }).(pulumi.StringOutput)
}

// Specifies the password of the SQL administrator.
func (o DatabaseImportOutput) AdministratorLoginPassword() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseImport) string { return v.AdministratorLoginPassword }).(pulumi.StringOutput)
}

// Specifies the type of authentication used to access the server. Valid values are `SQL` or `ADPassword`.
func (o DatabaseImportOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseImport) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// The resource id for the storage account used to store BACPAC file. If set, private endpoint connection will be created for the storage account. Must match storage account used for storageUri parameter.
func (o DatabaseImportOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseImport) *string { return v.StorageAccountId }).(pulumi.StringPtrOutput)
}

// Specifies the access key for the storage account.
func (o DatabaseImportOutput) StorageKey() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseImport) string { return v.StorageKey }).(pulumi.StringOutput)
}

// Specifies the type of access key for the storage account. Valid values are `StorageAccessKey` or `SharedAccessKey`.
func (o DatabaseImportOutput) StorageKeyType() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseImport) string { return v.StorageKeyType }).(pulumi.StringOutput)
}

// Specifies the blob URI of the .bacpac file.
func (o DatabaseImportOutput) StorageUri() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseImport) string { return v.StorageUri }).(pulumi.StringOutput)
}

type DatabaseImportPtrOutput struct{ *pulumi.OutputState }

func (DatabaseImportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseImport)(nil)).Elem()
}

func (o DatabaseImportPtrOutput) ToDatabaseImportPtrOutput() DatabaseImportPtrOutput {
	return o
}

func (o DatabaseImportPtrOutput) ToDatabaseImportPtrOutputWithContext(ctx context.Context) DatabaseImportPtrOutput {
	return o
}

func (o DatabaseImportPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DatabaseImport] {
	return pulumix.Output[*DatabaseImport]{
		OutputState: o.OutputState,
	}
}

func (o DatabaseImportPtrOutput) Elem() DatabaseImportOutput {
	return o.ApplyT(func(v *DatabaseImport) DatabaseImport {
		if v != nil {
			return *v
		}
		var ret DatabaseImport
		return ret
	}).(DatabaseImportOutput)
}

// Specifies the name of the SQL administrator.
func (o DatabaseImportPtrOutput) AdministratorLogin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseImport) *string {
		if v == nil {
			return nil
		}
		return &v.AdministratorLogin
	}).(pulumi.StringPtrOutput)
}

// Specifies the password of the SQL administrator.
func (o DatabaseImportPtrOutput) AdministratorLoginPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseImport) *string {
		if v == nil {
			return nil
		}
		return &v.AdministratorLoginPassword
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of authentication used to access the server. Valid values are `SQL` or `ADPassword`.
func (o DatabaseImportPtrOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseImport) *string {
		if v == nil {
			return nil
		}
		return &v.AuthenticationType
	}).(pulumi.StringPtrOutput)
}

// The resource id for the storage account used to store BACPAC file. If set, private endpoint connection will be created for the storage account. Must match storage account used for storageUri parameter.
func (o DatabaseImportPtrOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseImport) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountId
	}).(pulumi.StringPtrOutput)
}

// Specifies the access key for the storage account.
func (o DatabaseImportPtrOutput) StorageKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseImport) *string {
		if v == nil {
			return nil
		}
		return &v.StorageKey
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of access key for the storage account. Valid values are `StorageAccessKey` or `SharedAccessKey`.
func (o DatabaseImportPtrOutput) StorageKeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseImport) *string {
		if v == nil {
			return nil
		}
		return &v.StorageKeyType
	}).(pulumi.StringPtrOutput)
}

// Specifies the blob URI of the .bacpac file.
func (o DatabaseImportPtrOutput) StorageUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseImport) *string {
		if v == nil {
			return nil
		}
		return &v.StorageUri
	}).(pulumi.StringPtrOutput)
}

type DatabaseLongTermRetentionPolicy struct {
	// The monthly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 120 months. e.g. `P1Y`, `P1M`, `P4W` or `P30D`.
	MonthlyRetention *string `pulumi:"monthlyRetention"`
	// The week of year to take the yearly backup. Value has to be between `1` and `52`.
	WeekOfYear *int `pulumi:"weekOfYear"`
	// The weekly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 520 weeks. e.g. `P1Y`, `P1M`, `P1W` or `P7D`.
	WeeklyRetention *string `pulumi:"weeklyRetention"`
	// The yearly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 10 years. e.g. `P1Y`, `P12M`, `P52W` or `P365D`.
	YearlyRetention *string `pulumi:"yearlyRetention"`
}

// DatabaseLongTermRetentionPolicyInput is an input type that accepts DatabaseLongTermRetentionPolicyArgs and DatabaseLongTermRetentionPolicyOutput values.
// You can construct a concrete instance of `DatabaseLongTermRetentionPolicyInput` via:
//
//	DatabaseLongTermRetentionPolicyArgs{...}
type DatabaseLongTermRetentionPolicyInput interface {
	pulumi.Input

	ToDatabaseLongTermRetentionPolicyOutput() DatabaseLongTermRetentionPolicyOutput
	ToDatabaseLongTermRetentionPolicyOutputWithContext(context.Context) DatabaseLongTermRetentionPolicyOutput
}

type DatabaseLongTermRetentionPolicyArgs struct {
	// The monthly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 120 months. e.g. `P1Y`, `P1M`, `P4W` or `P30D`.
	MonthlyRetention pulumi.StringPtrInput `pulumi:"monthlyRetention"`
	// The week of year to take the yearly backup. Value has to be between `1` and `52`.
	WeekOfYear pulumi.IntPtrInput `pulumi:"weekOfYear"`
	// The weekly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 520 weeks. e.g. `P1Y`, `P1M`, `P1W` or `P7D`.
	WeeklyRetention pulumi.StringPtrInput `pulumi:"weeklyRetention"`
	// The yearly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 10 years. e.g. `P1Y`, `P12M`, `P52W` or `P365D`.
	YearlyRetention pulumi.StringPtrInput `pulumi:"yearlyRetention"`
}

func (DatabaseLongTermRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseLongTermRetentionPolicy)(nil)).Elem()
}

func (i DatabaseLongTermRetentionPolicyArgs) ToDatabaseLongTermRetentionPolicyOutput() DatabaseLongTermRetentionPolicyOutput {
	return i.ToDatabaseLongTermRetentionPolicyOutputWithContext(context.Background())
}

func (i DatabaseLongTermRetentionPolicyArgs) ToDatabaseLongTermRetentionPolicyOutputWithContext(ctx context.Context) DatabaseLongTermRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseLongTermRetentionPolicyOutput)
}

func (i DatabaseLongTermRetentionPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[DatabaseLongTermRetentionPolicy] {
	return pulumix.Output[DatabaseLongTermRetentionPolicy]{
		OutputState: i.ToDatabaseLongTermRetentionPolicyOutputWithContext(ctx).OutputState,
	}
}

func (i DatabaseLongTermRetentionPolicyArgs) ToDatabaseLongTermRetentionPolicyPtrOutput() DatabaseLongTermRetentionPolicyPtrOutput {
	return i.ToDatabaseLongTermRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i DatabaseLongTermRetentionPolicyArgs) ToDatabaseLongTermRetentionPolicyPtrOutputWithContext(ctx context.Context) DatabaseLongTermRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseLongTermRetentionPolicyOutput).ToDatabaseLongTermRetentionPolicyPtrOutputWithContext(ctx)
}

// DatabaseLongTermRetentionPolicyPtrInput is an input type that accepts DatabaseLongTermRetentionPolicyArgs, DatabaseLongTermRetentionPolicyPtr and DatabaseLongTermRetentionPolicyPtrOutput values.
// You can construct a concrete instance of `DatabaseLongTermRetentionPolicyPtrInput` via:
//
//	        DatabaseLongTermRetentionPolicyArgs{...}
//
//	or:
//
//	        nil
type DatabaseLongTermRetentionPolicyPtrInput interface {
	pulumi.Input

	ToDatabaseLongTermRetentionPolicyPtrOutput() DatabaseLongTermRetentionPolicyPtrOutput
	ToDatabaseLongTermRetentionPolicyPtrOutputWithContext(context.Context) DatabaseLongTermRetentionPolicyPtrOutput
}

type databaseLongTermRetentionPolicyPtrType DatabaseLongTermRetentionPolicyArgs

func DatabaseLongTermRetentionPolicyPtr(v *DatabaseLongTermRetentionPolicyArgs) DatabaseLongTermRetentionPolicyPtrInput {
	return (*databaseLongTermRetentionPolicyPtrType)(v)
}

func (*databaseLongTermRetentionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseLongTermRetentionPolicy)(nil)).Elem()
}

func (i *databaseLongTermRetentionPolicyPtrType) ToDatabaseLongTermRetentionPolicyPtrOutput() DatabaseLongTermRetentionPolicyPtrOutput {
	return i.ToDatabaseLongTermRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i *databaseLongTermRetentionPolicyPtrType) ToDatabaseLongTermRetentionPolicyPtrOutputWithContext(ctx context.Context) DatabaseLongTermRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseLongTermRetentionPolicyPtrOutput)
}

func (i *databaseLongTermRetentionPolicyPtrType) ToOutput(ctx context.Context) pulumix.Output[*DatabaseLongTermRetentionPolicy] {
	return pulumix.Output[*DatabaseLongTermRetentionPolicy]{
		OutputState: i.ToDatabaseLongTermRetentionPolicyPtrOutputWithContext(ctx).OutputState,
	}
}

type DatabaseLongTermRetentionPolicyOutput struct{ *pulumi.OutputState }

func (DatabaseLongTermRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseLongTermRetentionPolicy)(nil)).Elem()
}

func (o DatabaseLongTermRetentionPolicyOutput) ToDatabaseLongTermRetentionPolicyOutput() DatabaseLongTermRetentionPolicyOutput {
	return o
}

func (o DatabaseLongTermRetentionPolicyOutput) ToDatabaseLongTermRetentionPolicyOutputWithContext(ctx context.Context) DatabaseLongTermRetentionPolicyOutput {
	return o
}

func (o DatabaseLongTermRetentionPolicyOutput) ToDatabaseLongTermRetentionPolicyPtrOutput() DatabaseLongTermRetentionPolicyPtrOutput {
	return o.ToDatabaseLongTermRetentionPolicyPtrOutputWithContext(context.Background())
}

func (o DatabaseLongTermRetentionPolicyOutput) ToDatabaseLongTermRetentionPolicyPtrOutputWithContext(ctx context.Context) DatabaseLongTermRetentionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseLongTermRetentionPolicy) *DatabaseLongTermRetentionPolicy {
		return &v
	}).(DatabaseLongTermRetentionPolicyPtrOutput)
}

func (o DatabaseLongTermRetentionPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[DatabaseLongTermRetentionPolicy] {
	return pulumix.Output[DatabaseLongTermRetentionPolicy]{
		OutputState: o.OutputState,
	}
}

// The monthly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 120 months. e.g. `P1Y`, `P1M`, `P4W` or `P30D`.
func (o DatabaseLongTermRetentionPolicyOutput) MonthlyRetention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseLongTermRetentionPolicy) *string { return v.MonthlyRetention }).(pulumi.StringPtrOutput)
}

// The week of year to take the yearly backup. Value has to be between `1` and `52`.
func (o DatabaseLongTermRetentionPolicyOutput) WeekOfYear() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseLongTermRetentionPolicy) *int { return v.WeekOfYear }).(pulumi.IntPtrOutput)
}

// The weekly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 520 weeks. e.g. `P1Y`, `P1M`, `P1W` or `P7D`.
func (o DatabaseLongTermRetentionPolicyOutput) WeeklyRetention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseLongTermRetentionPolicy) *string { return v.WeeklyRetention }).(pulumi.StringPtrOutput)
}

// The yearly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 10 years. e.g. `P1Y`, `P12M`, `P52W` or `P365D`.
func (o DatabaseLongTermRetentionPolicyOutput) YearlyRetention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseLongTermRetentionPolicy) *string { return v.YearlyRetention }).(pulumi.StringPtrOutput)
}

type DatabaseLongTermRetentionPolicyPtrOutput struct{ *pulumi.OutputState }

func (DatabaseLongTermRetentionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseLongTermRetentionPolicy)(nil)).Elem()
}

func (o DatabaseLongTermRetentionPolicyPtrOutput) ToDatabaseLongTermRetentionPolicyPtrOutput() DatabaseLongTermRetentionPolicyPtrOutput {
	return o
}

func (o DatabaseLongTermRetentionPolicyPtrOutput) ToDatabaseLongTermRetentionPolicyPtrOutputWithContext(ctx context.Context) DatabaseLongTermRetentionPolicyPtrOutput {
	return o
}

func (o DatabaseLongTermRetentionPolicyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DatabaseLongTermRetentionPolicy] {
	return pulumix.Output[*DatabaseLongTermRetentionPolicy]{
		OutputState: o.OutputState,
	}
}

func (o DatabaseLongTermRetentionPolicyPtrOutput) Elem() DatabaseLongTermRetentionPolicyOutput {
	return o.ApplyT(func(v *DatabaseLongTermRetentionPolicy) DatabaseLongTermRetentionPolicy {
		if v != nil {
			return *v
		}
		var ret DatabaseLongTermRetentionPolicy
		return ret
	}).(DatabaseLongTermRetentionPolicyOutput)
}

// The monthly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 120 months. e.g. `P1Y`, `P1M`, `P4W` or `P30D`.
func (o DatabaseLongTermRetentionPolicyPtrOutput) MonthlyRetention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseLongTermRetentionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.MonthlyRetention
	}).(pulumi.StringPtrOutput)
}

// The week of year to take the yearly backup. Value has to be between `1` and `52`.
func (o DatabaseLongTermRetentionPolicyPtrOutput) WeekOfYear() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseLongTermRetentionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.WeekOfYear
	}).(pulumi.IntPtrOutput)
}

// The weekly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 520 weeks. e.g. `P1Y`, `P1M`, `P1W` or `P7D`.
func (o DatabaseLongTermRetentionPolicyPtrOutput) WeeklyRetention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseLongTermRetentionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.WeeklyRetention
	}).(pulumi.StringPtrOutput)
}

// The yearly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 10 years. e.g. `P1Y`, `P12M`, `P52W` or `P365D`.
func (o DatabaseLongTermRetentionPolicyPtrOutput) YearlyRetention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseLongTermRetentionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.YearlyRetention
	}).(pulumi.StringPtrOutput)
}

type DatabaseShortTermRetentionPolicy struct {
	// The hours between each differential backup. This is only applicable to live databases but not dropped databases. Value has to be `12` or `24`. Defaults to `12` hours.
	BackupIntervalInHours *int `pulumi:"backupIntervalInHours"`
	// Point In Time Restore configuration. Value has to be between `1` and `35`.
	RetentionDays int `pulumi:"retentionDays"`
}

// DatabaseShortTermRetentionPolicyInput is an input type that accepts DatabaseShortTermRetentionPolicyArgs and DatabaseShortTermRetentionPolicyOutput values.
// You can construct a concrete instance of `DatabaseShortTermRetentionPolicyInput` via:
//
//	DatabaseShortTermRetentionPolicyArgs{...}
type DatabaseShortTermRetentionPolicyInput interface {
	pulumi.Input

	ToDatabaseShortTermRetentionPolicyOutput() DatabaseShortTermRetentionPolicyOutput
	ToDatabaseShortTermRetentionPolicyOutputWithContext(context.Context) DatabaseShortTermRetentionPolicyOutput
}

type DatabaseShortTermRetentionPolicyArgs struct {
	// The hours between each differential backup. This is only applicable to live databases but not dropped databases. Value has to be `12` or `24`. Defaults to `12` hours.
	BackupIntervalInHours pulumi.IntPtrInput `pulumi:"backupIntervalInHours"`
	// Point In Time Restore configuration. Value has to be between `1` and `35`.
	RetentionDays pulumi.IntInput `pulumi:"retentionDays"`
}

func (DatabaseShortTermRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseShortTermRetentionPolicy)(nil)).Elem()
}

func (i DatabaseShortTermRetentionPolicyArgs) ToDatabaseShortTermRetentionPolicyOutput() DatabaseShortTermRetentionPolicyOutput {
	return i.ToDatabaseShortTermRetentionPolicyOutputWithContext(context.Background())
}

func (i DatabaseShortTermRetentionPolicyArgs) ToDatabaseShortTermRetentionPolicyOutputWithContext(ctx context.Context) DatabaseShortTermRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseShortTermRetentionPolicyOutput)
}

func (i DatabaseShortTermRetentionPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[DatabaseShortTermRetentionPolicy] {
	return pulumix.Output[DatabaseShortTermRetentionPolicy]{
		OutputState: i.ToDatabaseShortTermRetentionPolicyOutputWithContext(ctx).OutputState,
	}
}

func (i DatabaseShortTermRetentionPolicyArgs) ToDatabaseShortTermRetentionPolicyPtrOutput() DatabaseShortTermRetentionPolicyPtrOutput {
	return i.ToDatabaseShortTermRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i DatabaseShortTermRetentionPolicyArgs) ToDatabaseShortTermRetentionPolicyPtrOutputWithContext(ctx context.Context) DatabaseShortTermRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseShortTermRetentionPolicyOutput).ToDatabaseShortTermRetentionPolicyPtrOutputWithContext(ctx)
}

// DatabaseShortTermRetentionPolicyPtrInput is an input type that accepts DatabaseShortTermRetentionPolicyArgs, DatabaseShortTermRetentionPolicyPtr and DatabaseShortTermRetentionPolicyPtrOutput values.
// You can construct a concrete instance of `DatabaseShortTermRetentionPolicyPtrInput` via:
//
//	        DatabaseShortTermRetentionPolicyArgs{...}
//
//	or:
//
//	        nil
type DatabaseShortTermRetentionPolicyPtrInput interface {
	pulumi.Input

	ToDatabaseShortTermRetentionPolicyPtrOutput() DatabaseShortTermRetentionPolicyPtrOutput
	ToDatabaseShortTermRetentionPolicyPtrOutputWithContext(context.Context) DatabaseShortTermRetentionPolicyPtrOutput
}

type databaseShortTermRetentionPolicyPtrType DatabaseShortTermRetentionPolicyArgs

func DatabaseShortTermRetentionPolicyPtr(v *DatabaseShortTermRetentionPolicyArgs) DatabaseShortTermRetentionPolicyPtrInput {
	return (*databaseShortTermRetentionPolicyPtrType)(v)
}

func (*databaseShortTermRetentionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseShortTermRetentionPolicy)(nil)).Elem()
}

func (i *databaseShortTermRetentionPolicyPtrType) ToDatabaseShortTermRetentionPolicyPtrOutput() DatabaseShortTermRetentionPolicyPtrOutput {
	return i.ToDatabaseShortTermRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i *databaseShortTermRetentionPolicyPtrType) ToDatabaseShortTermRetentionPolicyPtrOutputWithContext(ctx context.Context) DatabaseShortTermRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseShortTermRetentionPolicyPtrOutput)
}

func (i *databaseShortTermRetentionPolicyPtrType) ToOutput(ctx context.Context) pulumix.Output[*DatabaseShortTermRetentionPolicy] {
	return pulumix.Output[*DatabaseShortTermRetentionPolicy]{
		OutputState: i.ToDatabaseShortTermRetentionPolicyPtrOutputWithContext(ctx).OutputState,
	}
}

type DatabaseShortTermRetentionPolicyOutput struct{ *pulumi.OutputState }

func (DatabaseShortTermRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseShortTermRetentionPolicy)(nil)).Elem()
}

func (o DatabaseShortTermRetentionPolicyOutput) ToDatabaseShortTermRetentionPolicyOutput() DatabaseShortTermRetentionPolicyOutput {
	return o
}

func (o DatabaseShortTermRetentionPolicyOutput) ToDatabaseShortTermRetentionPolicyOutputWithContext(ctx context.Context) DatabaseShortTermRetentionPolicyOutput {
	return o
}

func (o DatabaseShortTermRetentionPolicyOutput) ToDatabaseShortTermRetentionPolicyPtrOutput() DatabaseShortTermRetentionPolicyPtrOutput {
	return o.ToDatabaseShortTermRetentionPolicyPtrOutputWithContext(context.Background())
}

func (o DatabaseShortTermRetentionPolicyOutput) ToDatabaseShortTermRetentionPolicyPtrOutputWithContext(ctx context.Context) DatabaseShortTermRetentionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseShortTermRetentionPolicy) *DatabaseShortTermRetentionPolicy {
		return &v
	}).(DatabaseShortTermRetentionPolicyPtrOutput)
}

func (o DatabaseShortTermRetentionPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[DatabaseShortTermRetentionPolicy] {
	return pulumix.Output[DatabaseShortTermRetentionPolicy]{
		OutputState: o.OutputState,
	}
}

// The hours between each differential backup. This is only applicable to live databases but not dropped databases. Value has to be `12` or `24`. Defaults to `12` hours.
func (o DatabaseShortTermRetentionPolicyOutput) BackupIntervalInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseShortTermRetentionPolicy) *int { return v.BackupIntervalInHours }).(pulumi.IntPtrOutput)
}

// Point In Time Restore configuration. Value has to be between `1` and `35`.
func (o DatabaseShortTermRetentionPolicyOutput) RetentionDays() pulumi.IntOutput {
	return o.ApplyT(func(v DatabaseShortTermRetentionPolicy) int { return v.RetentionDays }).(pulumi.IntOutput)
}

type DatabaseShortTermRetentionPolicyPtrOutput struct{ *pulumi.OutputState }

func (DatabaseShortTermRetentionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseShortTermRetentionPolicy)(nil)).Elem()
}

func (o DatabaseShortTermRetentionPolicyPtrOutput) ToDatabaseShortTermRetentionPolicyPtrOutput() DatabaseShortTermRetentionPolicyPtrOutput {
	return o
}

func (o DatabaseShortTermRetentionPolicyPtrOutput) ToDatabaseShortTermRetentionPolicyPtrOutputWithContext(ctx context.Context) DatabaseShortTermRetentionPolicyPtrOutput {
	return o
}

func (o DatabaseShortTermRetentionPolicyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DatabaseShortTermRetentionPolicy] {
	return pulumix.Output[*DatabaseShortTermRetentionPolicy]{
		OutputState: o.OutputState,
	}
}

func (o DatabaseShortTermRetentionPolicyPtrOutput) Elem() DatabaseShortTermRetentionPolicyOutput {
	return o.ApplyT(func(v *DatabaseShortTermRetentionPolicy) DatabaseShortTermRetentionPolicy {
		if v != nil {
			return *v
		}
		var ret DatabaseShortTermRetentionPolicy
		return ret
	}).(DatabaseShortTermRetentionPolicyOutput)
}

// The hours between each differential backup. This is only applicable to live databases but not dropped databases. Value has to be `12` or `24`. Defaults to `12` hours.
func (o DatabaseShortTermRetentionPolicyPtrOutput) BackupIntervalInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseShortTermRetentionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.BackupIntervalInHours
	}).(pulumi.IntPtrOutput)
}

// Point In Time Restore configuration. Value has to be between `1` and `35`.
func (o DatabaseShortTermRetentionPolicyPtrOutput) RetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseShortTermRetentionPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionDays
	}).(pulumi.IntPtrOutput)
}

type DatabaseThreatDetectionPolicy struct {
	// Specifies a list of alerts which should be disabled. Possible values include `Access_Anomaly`, `Sql_Injection` and `Sql_Injection_Vulnerability`.
	DisabledAlerts []string `pulumi:"disabledAlerts"`
	// Should the account administrators be emailed when this alert is triggered? Possible values are `Disabled` and `Enabled`. Defaults to `Disabled`.
	EmailAccountAdmins *string `pulumi:"emailAccountAdmins"`
	// A list of email addresses which alerts should be sent to.
	EmailAddresses []string `pulumi:"emailAddresses"`
	// Specifies the number of days to keep in the Threat Detection audit logs.
	RetentionDays *int `pulumi:"retentionDays"`
	// The State of the Policy. Possible values are `Enabled`, `Disabled` or `New`. Defaults to `Disabled`.
	State *string `pulumi:"state"`
	// Specifies the identifier key of the Threat Detection audit storage account. Required if `state` is `Enabled`.
	StorageAccountAccessKey *string `pulumi:"storageAccountAccessKey"`
	// Specifies the blob storage endpoint (e.g. <https://example.blob.core.windows.net>). This blob storage will hold all Threat Detection audit logs. Required if `state` is `Enabled`.
	StorageEndpoint *string `pulumi:"storageEndpoint"`
}

// DatabaseThreatDetectionPolicyInput is an input type that accepts DatabaseThreatDetectionPolicyArgs and DatabaseThreatDetectionPolicyOutput values.
// You can construct a concrete instance of `DatabaseThreatDetectionPolicyInput` via:
//
//	DatabaseThreatDetectionPolicyArgs{...}
type DatabaseThreatDetectionPolicyInput interface {
	pulumi.Input

	ToDatabaseThreatDetectionPolicyOutput() DatabaseThreatDetectionPolicyOutput
	ToDatabaseThreatDetectionPolicyOutputWithContext(context.Context) DatabaseThreatDetectionPolicyOutput
}

type DatabaseThreatDetectionPolicyArgs struct {
	// Specifies a list of alerts which should be disabled. Possible values include `Access_Anomaly`, `Sql_Injection` and `Sql_Injection_Vulnerability`.
	DisabledAlerts pulumi.StringArrayInput `pulumi:"disabledAlerts"`
	// Should the account administrators be emailed when this alert is triggered? Possible values are `Disabled` and `Enabled`. Defaults to `Disabled`.
	EmailAccountAdmins pulumi.StringPtrInput `pulumi:"emailAccountAdmins"`
	// A list of email addresses which alerts should be sent to.
	EmailAddresses pulumi.StringArrayInput `pulumi:"emailAddresses"`
	// Specifies the number of days to keep in the Threat Detection audit logs.
	RetentionDays pulumi.IntPtrInput `pulumi:"retentionDays"`
	// The State of the Policy. Possible values are `Enabled`, `Disabled` or `New`. Defaults to `Disabled`.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Specifies the identifier key of the Threat Detection audit storage account. Required if `state` is `Enabled`.
	StorageAccountAccessKey pulumi.StringPtrInput `pulumi:"storageAccountAccessKey"`
	// Specifies the blob storage endpoint (e.g. <https://example.blob.core.windows.net>). This blob storage will hold all Threat Detection audit logs. Required if `state` is `Enabled`.
	StorageEndpoint pulumi.StringPtrInput `pulumi:"storageEndpoint"`
}

func (DatabaseThreatDetectionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseThreatDetectionPolicy)(nil)).Elem()
}

func (i DatabaseThreatDetectionPolicyArgs) ToDatabaseThreatDetectionPolicyOutput() DatabaseThreatDetectionPolicyOutput {
	return i.ToDatabaseThreatDetectionPolicyOutputWithContext(context.Background())
}

func (i DatabaseThreatDetectionPolicyArgs) ToDatabaseThreatDetectionPolicyOutputWithContext(ctx context.Context) DatabaseThreatDetectionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseThreatDetectionPolicyOutput)
}

func (i DatabaseThreatDetectionPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[DatabaseThreatDetectionPolicy] {
	return pulumix.Output[DatabaseThreatDetectionPolicy]{
		OutputState: i.ToDatabaseThreatDetectionPolicyOutputWithContext(ctx).OutputState,
	}
}

func (i DatabaseThreatDetectionPolicyArgs) ToDatabaseThreatDetectionPolicyPtrOutput() DatabaseThreatDetectionPolicyPtrOutput {
	return i.ToDatabaseThreatDetectionPolicyPtrOutputWithContext(context.Background())
}

func (i DatabaseThreatDetectionPolicyArgs) ToDatabaseThreatDetectionPolicyPtrOutputWithContext(ctx context.Context) DatabaseThreatDetectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseThreatDetectionPolicyOutput).ToDatabaseThreatDetectionPolicyPtrOutputWithContext(ctx)
}

// DatabaseThreatDetectionPolicyPtrInput is an input type that accepts DatabaseThreatDetectionPolicyArgs, DatabaseThreatDetectionPolicyPtr and DatabaseThreatDetectionPolicyPtrOutput values.
// You can construct a concrete instance of `DatabaseThreatDetectionPolicyPtrInput` via:
//
//	        DatabaseThreatDetectionPolicyArgs{...}
//
//	or:
//
//	        nil
type DatabaseThreatDetectionPolicyPtrInput interface {
	pulumi.Input

	ToDatabaseThreatDetectionPolicyPtrOutput() DatabaseThreatDetectionPolicyPtrOutput
	ToDatabaseThreatDetectionPolicyPtrOutputWithContext(context.Context) DatabaseThreatDetectionPolicyPtrOutput
}

type databaseThreatDetectionPolicyPtrType DatabaseThreatDetectionPolicyArgs

func DatabaseThreatDetectionPolicyPtr(v *DatabaseThreatDetectionPolicyArgs) DatabaseThreatDetectionPolicyPtrInput {
	return (*databaseThreatDetectionPolicyPtrType)(v)
}

func (*databaseThreatDetectionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseThreatDetectionPolicy)(nil)).Elem()
}

func (i *databaseThreatDetectionPolicyPtrType) ToDatabaseThreatDetectionPolicyPtrOutput() DatabaseThreatDetectionPolicyPtrOutput {
	return i.ToDatabaseThreatDetectionPolicyPtrOutputWithContext(context.Background())
}

func (i *databaseThreatDetectionPolicyPtrType) ToDatabaseThreatDetectionPolicyPtrOutputWithContext(ctx context.Context) DatabaseThreatDetectionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseThreatDetectionPolicyPtrOutput)
}

func (i *databaseThreatDetectionPolicyPtrType) ToOutput(ctx context.Context) pulumix.Output[*DatabaseThreatDetectionPolicy] {
	return pulumix.Output[*DatabaseThreatDetectionPolicy]{
		OutputState: i.ToDatabaseThreatDetectionPolicyPtrOutputWithContext(ctx).OutputState,
	}
}

type DatabaseThreatDetectionPolicyOutput struct{ *pulumi.OutputState }

func (DatabaseThreatDetectionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseThreatDetectionPolicy)(nil)).Elem()
}

func (o DatabaseThreatDetectionPolicyOutput) ToDatabaseThreatDetectionPolicyOutput() DatabaseThreatDetectionPolicyOutput {
	return o
}

func (o DatabaseThreatDetectionPolicyOutput) ToDatabaseThreatDetectionPolicyOutputWithContext(ctx context.Context) DatabaseThreatDetectionPolicyOutput {
	return o
}

func (o DatabaseThreatDetectionPolicyOutput) ToDatabaseThreatDetectionPolicyPtrOutput() DatabaseThreatDetectionPolicyPtrOutput {
	return o.ToDatabaseThreatDetectionPolicyPtrOutputWithContext(context.Background())
}

func (o DatabaseThreatDetectionPolicyOutput) ToDatabaseThreatDetectionPolicyPtrOutputWithContext(ctx context.Context) DatabaseThreatDetectionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseThreatDetectionPolicy) *DatabaseThreatDetectionPolicy {
		return &v
	}).(DatabaseThreatDetectionPolicyPtrOutput)
}

func (o DatabaseThreatDetectionPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[DatabaseThreatDetectionPolicy] {
	return pulumix.Output[DatabaseThreatDetectionPolicy]{
		OutputState: o.OutputState,
	}
}

// Specifies a list of alerts which should be disabled. Possible values include `Access_Anomaly`, `Sql_Injection` and `Sql_Injection_Vulnerability`.
func (o DatabaseThreatDetectionPolicyOutput) DisabledAlerts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatabaseThreatDetectionPolicy) []string { return v.DisabledAlerts }).(pulumi.StringArrayOutput)
}

// Should the account administrators be emailed when this alert is triggered? Possible values are `Disabled` and `Enabled`. Defaults to `Disabled`.
func (o DatabaseThreatDetectionPolicyOutput) EmailAccountAdmins() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseThreatDetectionPolicy) *string { return v.EmailAccountAdmins }).(pulumi.StringPtrOutput)
}

// A list of email addresses which alerts should be sent to.
func (o DatabaseThreatDetectionPolicyOutput) EmailAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatabaseThreatDetectionPolicy) []string { return v.EmailAddresses }).(pulumi.StringArrayOutput)
}

// Specifies the number of days to keep in the Threat Detection audit logs.
func (o DatabaseThreatDetectionPolicyOutput) RetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseThreatDetectionPolicy) *int { return v.RetentionDays }).(pulumi.IntPtrOutput)
}

// The State of the Policy. Possible values are `Enabled`, `Disabled` or `New`. Defaults to `Disabled`.
func (o DatabaseThreatDetectionPolicyOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseThreatDetectionPolicy) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Specifies the identifier key of the Threat Detection audit storage account. Required if `state` is `Enabled`.
func (o DatabaseThreatDetectionPolicyOutput) StorageAccountAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseThreatDetectionPolicy) *string { return v.StorageAccountAccessKey }).(pulumi.StringPtrOutput)
}

// Specifies the blob storage endpoint (e.g. <https://example.blob.core.windows.net>). This blob storage will hold all Threat Detection audit logs. Required if `state` is `Enabled`.
func (o DatabaseThreatDetectionPolicyOutput) StorageEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseThreatDetectionPolicy) *string { return v.StorageEndpoint }).(pulumi.StringPtrOutput)
}

type DatabaseThreatDetectionPolicyPtrOutput struct{ *pulumi.OutputState }

func (DatabaseThreatDetectionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseThreatDetectionPolicy)(nil)).Elem()
}

func (o DatabaseThreatDetectionPolicyPtrOutput) ToDatabaseThreatDetectionPolicyPtrOutput() DatabaseThreatDetectionPolicyPtrOutput {
	return o
}

func (o DatabaseThreatDetectionPolicyPtrOutput) ToDatabaseThreatDetectionPolicyPtrOutputWithContext(ctx context.Context) DatabaseThreatDetectionPolicyPtrOutput {
	return o
}

func (o DatabaseThreatDetectionPolicyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DatabaseThreatDetectionPolicy] {
	return pulumix.Output[*DatabaseThreatDetectionPolicy]{
		OutputState: o.OutputState,
	}
}

func (o DatabaseThreatDetectionPolicyPtrOutput) Elem() DatabaseThreatDetectionPolicyOutput {
	return o.ApplyT(func(v *DatabaseThreatDetectionPolicy) DatabaseThreatDetectionPolicy {
		if v != nil {
			return *v
		}
		var ret DatabaseThreatDetectionPolicy
		return ret
	}).(DatabaseThreatDetectionPolicyOutput)
}

// Specifies a list of alerts which should be disabled. Possible values include `Access_Anomaly`, `Sql_Injection` and `Sql_Injection_Vulnerability`.
func (o DatabaseThreatDetectionPolicyPtrOutput) DisabledAlerts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DatabaseThreatDetectionPolicy) []string {
		if v == nil {
			return nil
		}
		return v.DisabledAlerts
	}).(pulumi.StringArrayOutput)
}

// Should the account administrators be emailed when this alert is triggered? Possible values are `Disabled` and `Enabled`. Defaults to `Disabled`.
func (o DatabaseThreatDetectionPolicyPtrOutput) EmailAccountAdmins() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseThreatDetectionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.EmailAccountAdmins
	}).(pulumi.StringPtrOutput)
}

// A list of email addresses which alerts should be sent to.
func (o DatabaseThreatDetectionPolicyPtrOutput) EmailAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DatabaseThreatDetectionPolicy) []string {
		if v == nil {
			return nil
		}
		return v.EmailAddresses
	}).(pulumi.StringArrayOutput)
}

// Specifies the number of days to keep in the Threat Detection audit logs.
func (o DatabaseThreatDetectionPolicyPtrOutput) RetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseThreatDetectionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.RetentionDays
	}).(pulumi.IntPtrOutput)
}

// The State of the Policy. Possible values are `Enabled`, `Disabled` or `New`. Defaults to `Disabled`.
func (o DatabaseThreatDetectionPolicyPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseThreatDetectionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Specifies the identifier key of the Threat Detection audit storage account. Required if `state` is `Enabled`.
func (o DatabaseThreatDetectionPolicyPtrOutput) StorageAccountAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseThreatDetectionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountAccessKey
	}).(pulumi.StringPtrOutput)
}

// Specifies the blob storage endpoint (e.g. <https://example.blob.core.windows.net>). This blob storage will hold all Threat Detection audit logs. Required if `state` is `Enabled`.
func (o DatabaseThreatDetectionPolicyPtrOutput) StorageEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseThreatDetectionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.StorageEndpoint
	}).(pulumi.StringPtrOutput)
}

type DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult struct {
	// A list representing a result of the baseline.
	Results []string `pulumi:"results"`
}

// DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultInput is an input type that accepts DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArgs and DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput values.
// You can construct a concrete instance of `DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultInput` via:
//
//	DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArgs{...}
type DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultInput interface {
	pulumi.Input

	ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput() DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput
	ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutputWithContext(context.Context) DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput
}

type DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArgs struct {
	// A list representing a result of the baseline.
	Results pulumi.StringArrayInput `pulumi:"results"`
}

func (DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult)(nil)).Elem()
}

func (i DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArgs) ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput() DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput {
	return i.ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutputWithContext(context.Background())
}

func (i DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArgs) ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutputWithContext(ctx context.Context) DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput)
}

func (i DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArgs) ToOutput(ctx context.Context) pulumix.Output[DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult] {
	return pulumix.Output[DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult]{
		OutputState: i.ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutputWithContext(ctx).OutputState,
	}
}

// DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayInput is an input type that accepts DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArray and DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput values.
// You can construct a concrete instance of `DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayInput` via:
//
//	DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArray{ DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArgs{...} }
type DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayInput interface {
	pulumi.Input

	ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput() DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput
	ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutputWithContext(context.Context) DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput
}

type DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArray []DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultInput

func (DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult)(nil)).Elem()
}

func (i DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArray) ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput() DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput {
	return i.ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutputWithContext(context.Background())
}

func (i DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArray) ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutputWithContext(ctx context.Context) DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput)
}

func (i DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArray) ToOutput(ctx context.Context) pulumix.Output[[]DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult] {
	return pulumix.Output[[]DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult]{
		OutputState: i.ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutputWithContext(ctx).OutputState,
	}
}

type DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput struct{ *pulumi.OutputState }

func (DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult)(nil)).Elem()
}

func (o DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput) ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput() DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput {
	return o
}

func (o DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput) ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutputWithContext(ctx context.Context) DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput {
	return o
}

func (o DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput) ToOutput(ctx context.Context) pulumix.Output[DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult] {
	return pulumix.Output[DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult]{
		OutputState: o.OutputState,
	}
}

// A list representing a result of the baseline.
func (o DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput) Results() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult) []string { return v.Results }).(pulumi.StringArrayOutput)
}

type DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput struct{ *pulumi.OutputState }

func (DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult)(nil)).Elem()
}

func (o DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput) ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput() DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput {
	return o
}

func (o DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput) ToDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutputWithContext(ctx context.Context) DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput {
	return o
}

func (o DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult] {
	return pulumix.Output[[]DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult]{
		OutputState: o.OutputState,
	}
}

func (o DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput) Index(i pulumi.IntInput) DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult {
		return vs[0].([]DatabaseVulnerabilityAssessmentRuleBaselineBaselineResult)[vs[1].(int)]
	}).(DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput)
}

type ElasticPoolPerDatabaseSettings struct {
	// The maximum capacity any one database can consume.
	MaxCapacity float64 `pulumi:"maxCapacity"`
	// The minimum capacity all databases are guaranteed.
	MinCapacity float64 `pulumi:"minCapacity"`
}

// ElasticPoolPerDatabaseSettingsInput is an input type that accepts ElasticPoolPerDatabaseSettingsArgs and ElasticPoolPerDatabaseSettingsOutput values.
// You can construct a concrete instance of `ElasticPoolPerDatabaseSettingsInput` via:
//
//	ElasticPoolPerDatabaseSettingsArgs{...}
type ElasticPoolPerDatabaseSettingsInput interface {
	pulumi.Input

	ToElasticPoolPerDatabaseSettingsOutput() ElasticPoolPerDatabaseSettingsOutput
	ToElasticPoolPerDatabaseSettingsOutputWithContext(context.Context) ElasticPoolPerDatabaseSettingsOutput
}

type ElasticPoolPerDatabaseSettingsArgs struct {
	// The maximum capacity any one database can consume.
	MaxCapacity pulumi.Float64Input `pulumi:"maxCapacity"`
	// The minimum capacity all databases are guaranteed.
	MinCapacity pulumi.Float64Input `pulumi:"minCapacity"`
}

func (ElasticPoolPerDatabaseSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticPoolPerDatabaseSettings)(nil)).Elem()
}

func (i ElasticPoolPerDatabaseSettingsArgs) ToElasticPoolPerDatabaseSettingsOutput() ElasticPoolPerDatabaseSettingsOutput {
	return i.ToElasticPoolPerDatabaseSettingsOutputWithContext(context.Background())
}

func (i ElasticPoolPerDatabaseSettingsArgs) ToElasticPoolPerDatabaseSettingsOutputWithContext(ctx context.Context) ElasticPoolPerDatabaseSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticPoolPerDatabaseSettingsOutput)
}

func (i ElasticPoolPerDatabaseSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[ElasticPoolPerDatabaseSettings] {
	return pulumix.Output[ElasticPoolPerDatabaseSettings]{
		OutputState: i.ToElasticPoolPerDatabaseSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i ElasticPoolPerDatabaseSettingsArgs) ToElasticPoolPerDatabaseSettingsPtrOutput() ElasticPoolPerDatabaseSettingsPtrOutput {
	return i.ToElasticPoolPerDatabaseSettingsPtrOutputWithContext(context.Background())
}

func (i ElasticPoolPerDatabaseSettingsArgs) ToElasticPoolPerDatabaseSettingsPtrOutputWithContext(ctx context.Context) ElasticPoolPerDatabaseSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticPoolPerDatabaseSettingsOutput).ToElasticPoolPerDatabaseSettingsPtrOutputWithContext(ctx)
}

// ElasticPoolPerDatabaseSettingsPtrInput is an input type that accepts ElasticPoolPerDatabaseSettingsArgs, ElasticPoolPerDatabaseSettingsPtr and ElasticPoolPerDatabaseSettingsPtrOutput values.
// You can construct a concrete instance of `ElasticPoolPerDatabaseSettingsPtrInput` via:
//
//	        ElasticPoolPerDatabaseSettingsArgs{...}
//
//	or:
//
//	        nil
type ElasticPoolPerDatabaseSettingsPtrInput interface {
	pulumi.Input

	ToElasticPoolPerDatabaseSettingsPtrOutput() ElasticPoolPerDatabaseSettingsPtrOutput
	ToElasticPoolPerDatabaseSettingsPtrOutputWithContext(context.Context) ElasticPoolPerDatabaseSettingsPtrOutput
}

type elasticPoolPerDatabaseSettingsPtrType ElasticPoolPerDatabaseSettingsArgs

func ElasticPoolPerDatabaseSettingsPtr(v *ElasticPoolPerDatabaseSettingsArgs) ElasticPoolPerDatabaseSettingsPtrInput {
	return (*elasticPoolPerDatabaseSettingsPtrType)(v)
}

func (*elasticPoolPerDatabaseSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticPoolPerDatabaseSettings)(nil)).Elem()
}

func (i *elasticPoolPerDatabaseSettingsPtrType) ToElasticPoolPerDatabaseSettingsPtrOutput() ElasticPoolPerDatabaseSettingsPtrOutput {
	return i.ToElasticPoolPerDatabaseSettingsPtrOutputWithContext(context.Background())
}

func (i *elasticPoolPerDatabaseSettingsPtrType) ToElasticPoolPerDatabaseSettingsPtrOutputWithContext(ctx context.Context) ElasticPoolPerDatabaseSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticPoolPerDatabaseSettingsPtrOutput)
}

func (i *elasticPoolPerDatabaseSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*ElasticPoolPerDatabaseSettings] {
	return pulumix.Output[*ElasticPoolPerDatabaseSettings]{
		OutputState: i.ToElasticPoolPerDatabaseSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

type ElasticPoolPerDatabaseSettingsOutput struct{ *pulumi.OutputState }

func (ElasticPoolPerDatabaseSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticPoolPerDatabaseSettings)(nil)).Elem()
}

func (o ElasticPoolPerDatabaseSettingsOutput) ToElasticPoolPerDatabaseSettingsOutput() ElasticPoolPerDatabaseSettingsOutput {
	return o
}

func (o ElasticPoolPerDatabaseSettingsOutput) ToElasticPoolPerDatabaseSettingsOutputWithContext(ctx context.Context) ElasticPoolPerDatabaseSettingsOutput {
	return o
}

func (o ElasticPoolPerDatabaseSettingsOutput) ToElasticPoolPerDatabaseSettingsPtrOutput() ElasticPoolPerDatabaseSettingsPtrOutput {
	return o.ToElasticPoolPerDatabaseSettingsPtrOutputWithContext(context.Background())
}

func (o ElasticPoolPerDatabaseSettingsOutput) ToElasticPoolPerDatabaseSettingsPtrOutputWithContext(ctx context.Context) ElasticPoolPerDatabaseSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticPoolPerDatabaseSettings) *ElasticPoolPerDatabaseSettings {
		return &v
	}).(ElasticPoolPerDatabaseSettingsPtrOutput)
}

func (o ElasticPoolPerDatabaseSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[ElasticPoolPerDatabaseSettings] {
	return pulumix.Output[ElasticPoolPerDatabaseSettings]{
		OutputState: o.OutputState,
	}
}

// The maximum capacity any one database can consume.
func (o ElasticPoolPerDatabaseSettingsOutput) MaxCapacity() pulumi.Float64Output {
	return o.ApplyT(func(v ElasticPoolPerDatabaseSettings) float64 { return v.MaxCapacity }).(pulumi.Float64Output)
}

// The minimum capacity all databases are guaranteed.
func (o ElasticPoolPerDatabaseSettingsOutput) MinCapacity() pulumi.Float64Output {
	return o.ApplyT(func(v ElasticPoolPerDatabaseSettings) float64 { return v.MinCapacity }).(pulumi.Float64Output)
}

type ElasticPoolPerDatabaseSettingsPtrOutput struct{ *pulumi.OutputState }

func (ElasticPoolPerDatabaseSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticPoolPerDatabaseSettings)(nil)).Elem()
}

func (o ElasticPoolPerDatabaseSettingsPtrOutput) ToElasticPoolPerDatabaseSettingsPtrOutput() ElasticPoolPerDatabaseSettingsPtrOutput {
	return o
}

func (o ElasticPoolPerDatabaseSettingsPtrOutput) ToElasticPoolPerDatabaseSettingsPtrOutputWithContext(ctx context.Context) ElasticPoolPerDatabaseSettingsPtrOutput {
	return o
}

func (o ElasticPoolPerDatabaseSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ElasticPoolPerDatabaseSettings] {
	return pulumix.Output[*ElasticPoolPerDatabaseSettings]{
		OutputState: o.OutputState,
	}
}

func (o ElasticPoolPerDatabaseSettingsPtrOutput) Elem() ElasticPoolPerDatabaseSettingsOutput {
	return o.ApplyT(func(v *ElasticPoolPerDatabaseSettings) ElasticPoolPerDatabaseSettings {
		if v != nil {
			return *v
		}
		var ret ElasticPoolPerDatabaseSettings
		return ret
	}).(ElasticPoolPerDatabaseSettingsOutput)
}

// The maximum capacity any one database can consume.
func (o ElasticPoolPerDatabaseSettingsPtrOutput) MaxCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ElasticPoolPerDatabaseSettings) *float64 {
		if v == nil {
			return nil
		}
		return &v.MaxCapacity
	}).(pulumi.Float64PtrOutput)
}

// The minimum capacity all databases are guaranteed.
func (o ElasticPoolPerDatabaseSettingsPtrOutput) MinCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ElasticPoolPerDatabaseSettings) *float64 {
		if v == nil {
			return nil
		}
		return &v.MinCapacity
	}).(pulumi.Float64PtrOutput)
}

type ElasticPoolSku struct {
	// The scale up/out capacity, representing server's compute units. For more information see the documentation for your Elasticpool configuration: [vCore-based](https://docs.microsoft.com/azure/sql-database/sql-database-vcore-resource-limits-elastic-pools) or [DTU-based](https://docs.microsoft.com/azure/sql-database/sql-database-dtu-resource-limits-elastic-pools).
	Capacity int `pulumi:"capacity"`
	// The `family` of hardware `Gen4`, `Gen5`, `Fsv2` or `DC`.
	Family *string `pulumi:"family"`
	// Specifies the SKU Name for this Elasticpool. The name of the SKU, will be either `vCore` based `tier` + `family` pattern (e.g. GP_Gen4, BC_Gen5) or the `DTU` based `BasicPool`, `StandardPool`, or `PremiumPool` pattern. Possible values are `BasicPool`, `StandardPool`, `PremiumPool`, `GP_Gen4`, `GP_Gen5`, `GP_Fsv2`, `GP_DC`, `BC_Gen4`, `BC_Gen5`, `BC_DC`, or `HS_Gen5`.
	Name string `pulumi:"name"`
	// The tier of the particular SKU. Possible values are `GeneralPurpose`, `BusinessCritical`, `Basic`, `Standard`, `Premium`, or `HyperScale`. For more information see the documentation for your Elasticpool configuration: [vCore-based](https://docs.microsoft.com/azure/sql-database/sql-database-vcore-resource-limits-elastic-pools) or [DTU-based](https://docs.microsoft.com/azure/sql-database/sql-database-dtu-resource-limits-elastic-pools).
	Tier string `pulumi:"tier"`
}

// ElasticPoolSkuInput is an input type that accepts ElasticPoolSkuArgs and ElasticPoolSkuOutput values.
// You can construct a concrete instance of `ElasticPoolSkuInput` via:
//
//	ElasticPoolSkuArgs{...}
type ElasticPoolSkuInput interface {
	pulumi.Input

	ToElasticPoolSkuOutput() ElasticPoolSkuOutput
	ToElasticPoolSkuOutputWithContext(context.Context) ElasticPoolSkuOutput
}

type ElasticPoolSkuArgs struct {
	// The scale up/out capacity, representing server's compute units. For more information see the documentation for your Elasticpool configuration: [vCore-based](https://docs.microsoft.com/azure/sql-database/sql-database-vcore-resource-limits-elastic-pools) or [DTU-based](https://docs.microsoft.com/azure/sql-database/sql-database-dtu-resource-limits-elastic-pools).
	Capacity pulumi.IntInput `pulumi:"capacity"`
	// The `family` of hardware `Gen4`, `Gen5`, `Fsv2` or `DC`.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// Specifies the SKU Name for this Elasticpool. The name of the SKU, will be either `vCore` based `tier` + `family` pattern (e.g. GP_Gen4, BC_Gen5) or the `DTU` based `BasicPool`, `StandardPool`, or `PremiumPool` pattern. Possible values are `BasicPool`, `StandardPool`, `PremiumPool`, `GP_Gen4`, `GP_Gen5`, `GP_Fsv2`, `GP_DC`, `BC_Gen4`, `BC_Gen5`, `BC_DC`, or `HS_Gen5`.
	Name pulumi.StringInput `pulumi:"name"`
	// The tier of the particular SKU. Possible values are `GeneralPurpose`, `BusinessCritical`, `Basic`, `Standard`, `Premium`, or `HyperScale`. For more information see the documentation for your Elasticpool configuration: [vCore-based](https://docs.microsoft.com/azure/sql-database/sql-database-vcore-resource-limits-elastic-pools) or [DTU-based](https://docs.microsoft.com/azure/sql-database/sql-database-dtu-resource-limits-elastic-pools).
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (ElasticPoolSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticPoolSku)(nil)).Elem()
}

func (i ElasticPoolSkuArgs) ToElasticPoolSkuOutput() ElasticPoolSkuOutput {
	return i.ToElasticPoolSkuOutputWithContext(context.Background())
}

func (i ElasticPoolSkuArgs) ToElasticPoolSkuOutputWithContext(ctx context.Context) ElasticPoolSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticPoolSkuOutput)
}

func (i ElasticPoolSkuArgs) ToOutput(ctx context.Context) pulumix.Output[ElasticPoolSku] {
	return pulumix.Output[ElasticPoolSku]{
		OutputState: i.ToElasticPoolSkuOutputWithContext(ctx).OutputState,
	}
}

func (i ElasticPoolSkuArgs) ToElasticPoolSkuPtrOutput() ElasticPoolSkuPtrOutput {
	return i.ToElasticPoolSkuPtrOutputWithContext(context.Background())
}

func (i ElasticPoolSkuArgs) ToElasticPoolSkuPtrOutputWithContext(ctx context.Context) ElasticPoolSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticPoolSkuOutput).ToElasticPoolSkuPtrOutputWithContext(ctx)
}

// ElasticPoolSkuPtrInput is an input type that accepts ElasticPoolSkuArgs, ElasticPoolSkuPtr and ElasticPoolSkuPtrOutput values.
// You can construct a concrete instance of `ElasticPoolSkuPtrInput` via:
//
//	        ElasticPoolSkuArgs{...}
//
//	or:
//
//	        nil
type ElasticPoolSkuPtrInput interface {
	pulumi.Input

	ToElasticPoolSkuPtrOutput() ElasticPoolSkuPtrOutput
	ToElasticPoolSkuPtrOutputWithContext(context.Context) ElasticPoolSkuPtrOutput
}

type elasticPoolSkuPtrType ElasticPoolSkuArgs

func ElasticPoolSkuPtr(v *ElasticPoolSkuArgs) ElasticPoolSkuPtrInput {
	return (*elasticPoolSkuPtrType)(v)
}

func (*elasticPoolSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticPoolSku)(nil)).Elem()
}

func (i *elasticPoolSkuPtrType) ToElasticPoolSkuPtrOutput() ElasticPoolSkuPtrOutput {
	return i.ToElasticPoolSkuPtrOutputWithContext(context.Background())
}

func (i *elasticPoolSkuPtrType) ToElasticPoolSkuPtrOutputWithContext(ctx context.Context) ElasticPoolSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticPoolSkuPtrOutput)
}

func (i *elasticPoolSkuPtrType) ToOutput(ctx context.Context) pulumix.Output[*ElasticPoolSku] {
	return pulumix.Output[*ElasticPoolSku]{
		OutputState: i.ToElasticPoolSkuPtrOutputWithContext(ctx).OutputState,
	}
}

type ElasticPoolSkuOutput struct{ *pulumi.OutputState }

func (ElasticPoolSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticPoolSku)(nil)).Elem()
}

func (o ElasticPoolSkuOutput) ToElasticPoolSkuOutput() ElasticPoolSkuOutput {
	return o
}

func (o ElasticPoolSkuOutput) ToElasticPoolSkuOutputWithContext(ctx context.Context) ElasticPoolSkuOutput {
	return o
}

func (o ElasticPoolSkuOutput) ToElasticPoolSkuPtrOutput() ElasticPoolSkuPtrOutput {
	return o.ToElasticPoolSkuPtrOutputWithContext(context.Background())
}

func (o ElasticPoolSkuOutput) ToElasticPoolSkuPtrOutputWithContext(ctx context.Context) ElasticPoolSkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticPoolSku) *ElasticPoolSku {
		return &v
	}).(ElasticPoolSkuPtrOutput)
}

func (o ElasticPoolSkuOutput) ToOutput(ctx context.Context) pulumix.Output[ElasticPoolSku] {
	return pulumix.Output[ElasticPoolSku]{
		OutputState: o.OutputState,
	}
}

// The scale up/out capacity, representing server's compute units. For more information see the documentation for your Elasticpool configuration: [vCore-based](https://docs.microsoft.com/azure/sql-database/sql-database-vcore-resource-limits-elastic-pools) or [DTU-based](https://docs.microsoft.com/azure/sql-database/sql-database-dtu-resource-limits-elastic-pools).
func (o ElasticPoolSkuOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v ElasticPoolSku) int { return v.Capacity }).(pulumi.IntOutput)
}

// The `family` of hardware `Gen4`, `Gen5`, `Fsv2` or `DC`.
func (o ElasticPoolSkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticPoolSku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// Specifies the SKU Name for this Elasticpool. The name of the SKU, will be either `vCore` based `tier` + `family` pattern (e.g. GP_Gen4, BC_Gen5) or the `DTU` based `BasicPool`, `StandardPool`, or `PremiumPool` pattern. Possible values are `BasicPool`, `StandardPool`, `PremiumPool`, `GP_Gen4`, `GP_Gen5`, `GP_Fsv2`, `GP_DC`, `BC_Gen4`, `BC_Gen5`, `BC_DC`, or `HS_Gen5`.
func (o ElasticPoolSkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticPoolSku) string { return v.Name }).(pulumi.StringOutput)
}

// The tier of the particular SKU. Possible values are `GeneralPurpose`, `BusinessCritical`, `Basic`, `Standard`, `Premium`, or `HyperScale`. For more information see the documentation for your Elasticpool configuration: [vCore-based](https://docs.microsoft.com/azure/sql-database/sql-database-vcore-resource-limits-elastic-pools) or [DTU-based](https://docs.microsoft.com/azure/sql-database/sql-database-dtu-resource-limits-elastic-pools).
func (o ElasticPoolSkuOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticPoolSku) string { return v.Tier }).(pulumi.StringOutput)
}

type ElasticPoolSkuPtrOutput struct{ *pulumi.OutputState }

func (ElasticPoolSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticPoolSku)(nil)).Elem()
}

func (o ElasticPoolSkuPtrOutput) ToElasticPoolSkuPtrOutput() ElasticPoolSkuPtrOutput {
	return o
}

func (o ElasticPoolSkuPtrOutput) ToElasticPoolSkuPtrOutputWithContext(ctx context.Context) ElasticPoolSkuPtrOutput {
	return o
}

func (o ElasticPoolSkuPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ElasticPoolSku] {
	return pulumix.Output[*ElasticPoolSku]{
		OutputState: o.OutputState,
	}
}

func (o ElasticPoolSkuPtrOutput) Elem() ElasticPoolSkuOutput {
	return o.ApplyT(func(v *ElasticPoolSku) ElasticPoolSku {
		if v != nil {
			return *v
		}
		var ret ElasticPoolSku
		return ret
	}).(ElasticPoolSkuOutput)
}

// The scale up/out capacity, representing server's compute units. For more information see the documentation for your Elasticpool configuration: [vCore-based](https://docs.microsoft.com/azure/sql-database/sql-database-vcore-resource-limits-elastic-pools) or [DTU-based](https://docs.microsoft.com/azure/sql-database/sql-database-dtu-resource-limits-elastic-pools).
func (o ElasticPoolSkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElasticPoolSku) *int {
		if v == nil {
			return nil
		}
		return &v.Capacity
	}).(pulumi.IntPtrOutput)
}

// The `family` of hardware `Gen4`, `Gen5`, `Fsv2` or `DC`.
func (o ElasticPoolSkuPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticPoolSku) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// Specifies the SKU Name for this Elasticpool. The name of the SKU, will be either `vCore` based `tier` + `family` pattern (e.g. GP_Gen4, BC_Gen5) or the `DTU` based `BasicPool`, `StandardPool`, or `PremiumPool` pattern. Possible values are `BasicPool`, `StandardPool`, `PremiumPool`, `GP_Gen4`, `GP_Gen5`, `GP_Fsv2`, `GP_DC`, `BC_Gen4`, `BC_Gen5`, `BC_DC`, or `HS_Gen5`.
func (o ElasticPoolSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticPoolSku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The tier of the particular SKU. Possible values are `GeneralPurpose`, `BusinessCritical`, `Basic`, `Standard`, `Premium`, or `HyperScale`. For more information see the documentation for your Elasticpool configuration: [vCore-based](https://docs.microsoft.com/azure/sql-database/sql-database-vcore-resource-limits-elastic-pools) or [DTU-based](https://docs.microsoft.com/azure/sql-database/sql-database-dtu-resource-limits-elastic-pools).
func (o ElasticPoolSkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticPoolSku) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

type FailoverGroupPartnerServer struct {
	// The ID of a partner SQL server to include in the failover group.
	Id string `pulumi:"id"`
	// The location of the partner server.
	Location *string `pulumi:"location"`
	// The replication role of the partner server. Possible values include `Primary` or `Secondary`.
	Role *string `pulumi:"role"`
}

// FailoverGroupPartnerServerInput is an input type that accepts FailoverGroupPartnerServerArgs and FailoverGroupPartnerServerOutput values.
// You can construct a concrete instance of `FailoverGroupPartnerServerInput` via:
//
//	FailoverGroupPartnerServerArgs{...}
type FailoverGroupPartnerServerInput interface {
	pulumi.Input

	ToFailoverGroupPartnerServerOutput() FailoverGroupPartnerServerOutput
	ToFailoverGroupPartnerServerOutputWithContext(context.Context) FailoverGroupPartnerServerOutput
}

type FailoverGroupPartnerServerArgs struct {
	// The ID of a partner SQL server to include in the failover group.
	Id pulumi.StringInput `pulumi:"id"`
	// The location of the partner server.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The replication role of the partner server. Possible values include `Primary` or `Secondary`.
	Role pulumi.StringPtrInput `pulumi:"role"`
}

func (FailoverGroupPartnerServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverGroupPartnerServer)(nil)).Elem()
}

func (i FailoverGroupPartnerServerArgs) ToFailoverGroupPartnerServerOutput() FailoverGroupPartnerServerOutput {
	return i.ToFailoverGroupPartnerServerOutputWithContext(context.Background())
}

func (i FailoverGroupPartnerServerArgs) ToFailoverGroupPartnerServerOutputWithContext(ctx context.Context) FailoverGroupPartnerServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FailoverGroupPartnerServerOutput)
}

func (i FailoverGroupPartnerServerArgs) ToOutput(ctx context.Context) pulumix.Output[FailoverGroupPartnerServer] {
	return pulumix.Output[FailoverGroupPartnerServer]{
		OutputState: i.ToFailoverGroupPartnerServerOutputWithContext(ctx).OutputState,
	}
}

// FailoverGroupPartnerServerArrayInput is an input type that accepts FailoverGroupPartnerServerArray and FailoverGroupPartnerServerArrayOutput values.
// You can construct a concrete instance of `FailoverGroupPartnerServerArrayInput` via:
//
//	FailoverGroupPartnerServerArray{ FailoverGroupPartnerServerArgs{...} }
type FailoverGroupPartnerServerArrayInput interface {
	pulumi.Input

	ToFailoverGroupPartnerServerArrayOutput() FailoverGroupPartnerServerArrayOutput
	ToFailoverGroupPartnerServerArrayOutputWithContext(context.Context) FailoverGroupPartnerServerArrayOutput
}

type FailoverGroupPartnerServerArray []FailoverGroupPartnerServerInput

func (FailoverGroupPartnerServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FailoverGroupPartnerServer)(nil)).Elem()
}

func (i FailoverGroupPartnerServerArray) ToFailoverGroupPartnerServerArrayOutput() FailoverGroupPartnerServerArrayOutput {
	return i.ToFailoverGroupPartnerServerArrayOutputWithContext(context.Background())
}

func (i FailoverGroupPartnerServerArray) ToFailoverGroupPartnerServerArrayOutputWithContext(ctx context.Context) FailoverGroupPartnerServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FailoverGroupPartnerServerArrayOutput)
}

func (i FailoverGroupPartnerServerArray) ToOutput(ctx context.Context) pulumix.Output[[]FailoverGroupPartnerServer] {
	return pulumix.Output[[]FailoverGroupPartnerServer]{
		OutputState: i.ToFailoverGroupPartnerServerArrayOutputWithContext(ctx).OutputState,
	}
}

type FailoverGroupPartnerServerOutput struct{ *pulumi.OutputState }

func (FailoverGroupPartnerServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverGroupPartnerServer)(nil)).Elem()
}

func (o FailoverGroupPartnerServerOutput) ToFailoverGroupPartnerServerOutput() FailoverGroupPartnerServerOutput {
	return o
}

func (o FailoverGroupPartnerServerOutput) ToFailoverGroupPartnerServerOutputWithContext(ctx context.Context) FailoverGroupPartnerServerOutput {
	return o
}

func (o FailoverGroupPartnerServerOutput) ToOutput(ctx context.Context) pulumix.Output[FailoverGroupPartnerServer] {
	return pulumix.Output[FailoverGroupPartnerServer]{
		OutputState: o.OutputState,
	}
}

// The ID of a partner SQL server to include in the failover group.
func (o FailoverGroupPartnerServerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v FailoverGroupPartnerServer) string { return v.Id }).(pulumi.StringOutput)
}

// The location of the partner server.
func (o FailoverGroupPartnerServerOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverGroupPartnerServer) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The replication role of the partner server. Possible values include `Primary` or `Secondary`.
func (o FailoverGroupPartnerServerOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverGroupPartnerServer) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type FailoverGroupPartnerServerArrayOutput struct{ *pulumi.OutputState }

func (FailoverGroupPartnerServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FailoverGroupPartnerServer)(nil)).Elem()
}

func (o FailoverGroupPartnerServerArrayOutput) ToFailoverGroupPartnerServerArrayOutput() FailoverGroupPartnerServerArrayOutput {
	return o
}

func (o FailoverGroupPartnerServerArrayOutput) ToFailoverGroupPartnerServerArrayOutputWithContext(ctx context.Context) FailoverGroupPartnerServerArrayOutput {
	return o
}

func (o FailoverGroupPartnerServerArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FailoverGroupPartnerServer] {
	return pulumix.Output[[]FailoverGroupPartnerServer]{
		OutputState: o.OutputState,
	}
}

func (o FailoverGroupPartnerServerArrayOutput) Index(i pulumi.IntInput) FailoverGroupPartnerServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FailoverGroupPartnerServer {
		return vs[0].([]FailoverGroupPartnerServer)[vs[1].(int)]
	}).(FailoverGroupPartnerServerOutput)
}

type FailoverGroupReadWriteEndpointFailoverPolicy struct {
	// The grace period in minutes, before failover with data loss is attempted for the read-write endpoint. Required when `mode` is `Automatic`.
	GraceMinutes *int `pulumi:"graceMinutes"`
	// The failover policy of the read-write endpoint for the failover group. Possible values are `Automatic` or `Manual`.
	Mode string `pulumi:"mode"`
}

// FailoverGroupReadWriteEndpointFailoverPolicyInput is an input type that accepts FailoverGroupReadWriteEndpointFailoverPolicyArgs and FailoverGroupReadWriteEndpointFailoverPolicyOutput values.
// You can construct a concrete instance of `FailoverGroupReadWriteEndpointFailoverPolicyInput` via:
//
//	FailoverGroupReadWriteEndpointFailoverPolicyArgs{...}
type FailoverGroupReadWriteEndpointFailoverPolicyInput interface {
	pulumi.Input

	ToFailoverGroupReadWriteEndpointFailoverPolicyOutput() FailoverGroupReadWriteEndpointFailoverPolicyOutput
	ToFailoverGroupReadWriteEndpointFailoverPolicyOutputWithContext(context.Context) FailoverGroupReadWriteEndpointFailoverPolicyOutput
}

type FailoverGroupReadWriteEndpointFailoverPolicyArgs struct {
	// The grace period in minutes, before failover with data loss is attempted for the read-write endpoint. Required when `mode` is `Automatic`.
	GraceMinutes pulumi.IntPtrInput `pulumi:"graceMinutes"`
	// The failover policy of the read-write endpoint for the failover group. Possible values are `Automatic` or `Manual`.
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (FailoverGroupReadWriteEndpointFailoverPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverGroupReadWriteEndpointFailoverPolicy)(nil)).Elem()
}

func (i FailoverGroupReadWriteEndpointFailoverPolicyArgs) ToFailoverGroupReadWriteEndpointFailoverPolicyOutput() FailoverGroupReadWriteEndpointFailoverPolicyOutput {
	return i.ToFailoverGroupReadWriteEndpointFailoverPolicyOutputWithContext(context.Background())
}

func (i FailoverGroupReadWriteEndpointFailoverPolicyArgs) ToFailoverGroupReadWriteEndpointFailoverPolicyOutputWithContext(ctx context.Context) FailoverGroupReadWriteEndpointFailoverPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FailoverGroupReadWriteEndpointFailoverPolicyOutput)
}

func (i FailoverGroupReadWriteEndpointFailoverPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[FailoverGroupReadWriteEndpointFailoverPolicy] {
	return pulumix.Output[FailoverGroupReadWriteEndpointFailoverPolicy]{
		OutputState: i.ToFailoverGroupReadWriteEndpointFailoverPolicyOutputWithContext(ctx).OutputState,
	}
}

func (i FailoverGroupReadWriteEndpointFailoverPolicyArgs) ToFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput() FailoverGroupReadWriteEndpointFailoverPolicyPtrOutput {
	return i.ToFailoverGroupReadWriteEndpointFailoverPolicyPtrOutputWithContext(context.Background())
}

func (i FailoverGroupReadWriteEndpointFailoverPolicyArgs) ToFailoverGroupReadWriteEndpointFailoverPolicyPtrOutputWithContext(ctx context.Context) FailoverGroupReadWriteEndpointFailoverPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FailoverGroupReadWriteEndpointFailoverPolicyOutput).ToFailoverGroupReadWriteEndpointFailoverPolicyPtrOutputWithContext(ctx)
}

// FailoverGroupReadWriteEndpointFailoverPolicyPtrInput is an input type that accepts FailoverGroupReadWriteEndpointFailoverPolicyArgs, FailoverGroupReadWriteEndpointFailoverPolicyPtr and FailoverGroupReadWriteEndpointFailoverPolicyPtrOutput values.
// You can construct a concrete instance of `FailoverGroupReadWriteEndpointFailoverPolicyPtrInput` via:
//
//	        FailoverGroupReadWriteEndpointFailoverPolicyArgs{...}
//
//	or:
//
//	        nil
type FailoverGroupReadWriteEndpointFailoverPolicyPtrInput interface {
	pulumi.Input

	ToFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput() FailoverGroupReadWriteEndpointFailoverPolicyPtrOutput
	ToFailoverGroupReadWriteEndpointFailoverPolicyPtrOutputWithContext(context.Context) FailoverGroupReadWriteEndpointFailoverPolicyPtrOutput
}

type failoverGroupReadWriteEndpointFailoverPolicyPtrType FailoverGroupReadWriteEndpointFailoverPolicyArgs

func FailoverGroupReadWriteEndpointFailoverPolicyPtr(v *FailoverGroupReadWriteEndpointFailoverPolicyArgs) FailoverGroupReadWriteEndpointFailoverPolicyPtrInput {
	return (*failoverGroupReadWriteEndpointFailoverPolicyPtrType)(v)
}

func (*failoverGroupReadWriteEndpointFailoverPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FailoverGroupReadWriteEndpointFailoverPolicy)(nil)).Elem()
}

func (i *failoverGroupReadWriteEndpointFailoverPolicyPtrType) ToFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput() FailoverGroupReadWriteEndpointFailoverPolicyPtrOutput {
	return i.ToFailoverGroupReadWriteEndpointFailoverPolicyPtrOutputWithContext(context.Background())
}

func (i *failoverGroupReadWriteEndpointFailoverPolicyPtrType) ToFailoverGroupReadWriteEndpointFailoverPolicyPtrOutputWithContext(ctx context.Context) FailoverGroupReadWriteEndpointFailoverPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FailoverGroupReadWriteEndpointFailoverPolicyPtrOutput)
}

func (i *failoverGroupReadWriteEndpointFailoverPolicyPtrType) ToOutput(ctx context.Context) pulumix.Output[*FailoverGroupReadWriteEndpointFailoverPolicy] {
	return pulumix.Output[*FailoverGroupReadWriteEndpointFailoverPolicy]{
		OutputState: i.ToFailoverGroupReadWriteEndpointFailoverPolicyPtrOutputWithContext(ctx).OutputState,
	}
}

type FailoverGroupReadWriteEndpointFailoverPolicyOutput struct{ *pulumi.OutputState }

func (FailoverGroupReadWriteEndpointFailoverPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverGroupReadWriteEndpointFailoverPolicy)(nil)).Elem()
}

func (o FailoverGroupReadWriteEndpointFailoverPolicyOutput) ToFailoverGroupReadWriteEndpointFailoverPolicyOutput() FailoverGroupReadWriteEndpointFailoverPolicyOutput {
	return o
}

func (o FailoverGroupReadWriteEndpointFailoverPolicyOutput) ToFailoverGroupReadWriteEndpointFailoverPolicyOutputWithContext(ctx context.Context) FailoverGroupReadWriteEndpointFailoverPolicyOutput {
	return o
}

func (o FailoverGroupReadWriteEndpointFailoverPolicyOutput) ToFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput() FailoverGroupReadWriteEndpointFailoverPolicyPtrOutput {
	return o.ToFailoverGroupReadWriteEndpointFailoverPolicyPtrOutputWithContext(context.Background())
}

func (o FailoverGroupReadWriteEndpointFailoverPolicyOutput) ToFailoverGroupReadWriteEndpointFailoverPolicyPtrOutputWithContext(ctx context.Context) FailoverGroupReadWriteEndpointFailoverPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FailoverGroupReadWriteEndpointFailoverPolicy) *FailoverGroupReadWriteEndpointFailoverPolicy {
		return &v
	}).(FailoverGroupReadWriteEndpointFailoverPolicyPtrOutput)
}

func (o FailoverGroupReadWriteEndpointFailoverPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[FailoverGroupReadWriteEndpointFailoverPolicy] {
	return pulumix.Output[FailoverGroupReadWriteEndpointFailoverPolicy]{
		OutputState: o.OutputState,
	}
}

// The grace period in minutes, before failover with data loss is attempted for the read-write endpoint. Required when `mode` is `Automatic`.
func (o FailoverGroupReadWriteEndpointFailoverPolicyOutput) GraceMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FailoverGroupReadWriteEndpointFailoverPolicy) *int { return v.GraceMinutes }).(pulumi.IntPtrOutput)
}

// The failover policy of the read-write endpoint for the failover group. Possible values are `Automatic` or `Manual`.
func (o FailoverGroupReadWriteEndpointFailoverPolicyOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v FailoverGroupReadWriteEndpointFailoverPolicy) string { return v.Mode }).(pulumi.StringOutput)
}

type FailoverGroupReadWriteEndpointFailoverPolicyPtrOutput struct{ *pulumi.OutputState }

func (FailoverGroupReadWriteEndpointFailoverPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FailoverGroupReadWriteEndpointFailoverPolicy)(nil)).Elem()
}

func (o FailoverGroupReadWriteEndpointFailoverPolicyPtrOutput) ToFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput() FailoverGroupReadWriteEndpointFailoverPolicyPtrOutput {
	return o
}

func (o FailoverGroupReadWriteEndpointFailoverPolicyPtrOutput) ToFailoverGroupReadWriteEndpointFailoverPolicyPtrOutputWithContext(ctx context.Context) FailoverGroupReadWriteEndpointFailoverPolicyPtrOutput {
	return o
}

func (o FailoverGroupReadWriteEndpointFailoverPolicyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FailoverGroupReadWriteEndpointFailoverPolicy] {
	return pulumix.Output[*FailoverGroupReadWriteEndpointFailoverPolicy]{
		OutputState: o.OutputState,
	}
}

func (o FailoverGroupReadWriteEndpointFailoverPolicyPtrOutput) Elem() FailoverGroupReadWriteEndpointFailoverPolicyOutput {
	return o.ApplyT(func(v *FailoverGroupReadWriteEndpointFailoverPolicy) FailoverGroupReadWriteEndpointFailoverPolicy {
		if v != nil {
			return *v
		}
		var ret FailoverGroupReadWriteEndpointFailoverPolicy
		return ret
	}).(FailoverGroupReadWriteEndpointFailoverPolicyOutput)
}

// The grace period in minutes, before failover with data loss is attempted for the read-write endpoint. Required when `mode` is `Automatic`.
func (o FailoverGroupReadWriteEndpointFailoverPolicyPtrOutput) GraceMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FailoverGroupReadWriteEndpointFailoverPolicy) *int {
		if v == nil {
			return nil
		}
		return v.GraceMinutes
	}).(pulumi.IntPtrOutput)
}

// The failover policy of the read-write endpoint for the failover group. Possible values are `Automatic` or `Manual`.
func (o FailoverGroupReadWriteEndpointFailoverPolicyPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FailoverGroupReadWriteEndpointFailoverPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

type ManagedDatabaseLongTermRetentionPolicy struct {
	// The monthly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 120 months. e.g. `P1Y`, `P1M`, `P4W` or `P30D`.
	MonthlyRetention *string `pulumi:"monthlyRetention"`
	// The week of year to take the yearly backup. Value has to be between `1` and `52`.
	WeekOfYear *int `pulumi:"weekOfYear"`
	// The weekly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 520 weeks. e.g. `P1Y`, `P1M`, `P1W` or `P7D`.
	WeeklyRetention *string `pulumi:"weeklyRetention"`
	// The yearly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 10 years. e.g. `P1Y`, `P12M`, `P52W` or `P365D`.
	YearlyRetention *string `pulumi:"yearlyRetention"`
}

// ManagedDatabaseLongTermRetentionPolicyInput is an input type that accepts ManagedDatabaseLongTermRetentionPolicyArgs and ManagedDatabaseLongTermRetentionPolicyOutput values.
// You can construct a concrete instance of `ManagedDatabaseLongTermRetentionPolicyInput` via:
//
//	ManagedDatabaseLongTermRetentionPolicyArgs{...}
type ManagedDatabaseLongTermRetentionPolicyInput interface {
	pulumi.Input

	ToManagedDatabaseLongTermRetentionPolicyOutput() ManagedDatabaseLongTermRetentionPolicyOutput
	ToManagedDatabaseLongTermRetentionPolicyOutputWithContext(context.Context) ManagedDatabaseLongTermRetentionPolicyOutput
}

type ManagedDatabaseLongTermRetentionPolicyArgs struct {
	// The monthly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 120 months. e.g. `P1Y`, `P1M`, `P4W` or `P30D`.
	MonthlyRetention pulumi.StringPtrInput `pulumi:"monthlyRetention"`
	// The week of year to take the yearly backup. Value has to be between `1` and `52`.
	WeekOfYear pulumi.IntPtrInput `pulumi:"weekOfYear"`
	// The weekly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 520 weeks. e.g. `P1Y`, `P1M`, `P1W` or `P7D`.
	WeeklyRetention pulumi.StringPtrInput `pulumi:"weeklyRetention"`
	// The yearly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 10 years. e.g. `P1Y`, `P12M`, `P52W` or `P365D`.
	YearlyRetention pulumi.StringPtrInput `pulumi:"yearlyRetention"`
}

func (ManagedDatabaseLongTermRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseLongTermRetentionPolicy)(nil)).Elem()
}

func (i ManagedDatabaseLongTermRetentionPolicyArgs) ToManagedDatabaseLongTermRetentionPolicyOutput() ManagedDatabaseLongTermRetentionPolicyOutput {
	return i.ToManagedDatabaseLongTermRetentionPolicyOutputWithContext(context.Background())
}

func (i ManagedDatabaseLongTermRetentionPolicyArgs) ToManagedDatabaseLongTermRetentionPolicyOutputWithContext(ctx context.Context) ManagedDatabaseLongTermRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseLongTermRetentionPolicyOutput)
}

func (i ManagedDatabaseLongTermRetentionPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[ManagedDatabaseLongTermRetentionPolicy] {
	return pulumix.Output[ManagedDatabaseLongTermRetentionPolicy]{
		OutputState: i.ToManagedDatabaseLongTermRetentionPolicyOutputWithContext(ctx).OutputState,
	}
}

func (i ManagedDatabaseLongTermRetentionPolicyArgs) ToManagedDatabaseLongTermRetentionPolicyPtrOutput() ManagedDatabaseLongTermRetentionPolicyPtrOutput {
	return i.ToManagedDatabaseLongTermRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i ManagedDatabaseLongTermRetentionPolicyArgs) ToManagedDatabaseLongTermRetentionPolicyPtrOutputWithContext(ctx context.Context) ManagedDatabaseLongTermRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseLongTermRetentionPolicyOutput).ToManagedDatabaseLongTermRetentionPolicyPtrOutputWithContext(ctx)
}

// ManagedDatabaseLongTermRetentionPolicyPtrInput is an input type that accepts ManagedDatabaseLongTermRetentionPolicyArgs, ManagedDatabaseLongTermRetentionPolicyPtr and ManagedDatabaseLongTermRetentionPolicyPtrOutput values.
// You can construct a concrete instance of `ManagedDatabaseLongTermRetentionPolicyPtrInput` via:
//
//	        ManagedDatabaseLongTermRetentionPolicyArgs{...}
//
//	or:
//
//	        nil
type ManagedDatabaseLongTermRetentionPolicyPtrInput interface {
	pulumi.Input

	ToManagedDatabaseLongTermRetentionPolicyPtrOutput() ManagedDatabaseLongTermRetentionPolicyPtrOutput
	ToManagedDatabaseLongTermRetentionPolicyPtrOutputWithContext(context.Context) ManagedDatabaseLongTermRetentionPolicyPtrOutput
}

type managedDatabaseLongTermRetentionPolicyPtrType ManagedDatabaseLongTermRetentionPolicyArgs

func ManagedDatabaseLongTermRetentionPolicyPtr(v *ManagedDatabaseLongTermRetentionPolicyArgs) ManagedDatabaseLongTermRetentionPolicyPtrInput {
	return (*managedDatabaseLongTermRetentionPolicyPtrType)(v)
}

func (*managedDatabaseLongTermRetentionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseLongTermRetentionPolicy)(nil)).Elem()
}

func (i *managedDatabaseLongTermRetentionPolicyPtrType) ToManagedDatabaseLongTermRetentionPolicyPtrOutput() ManagedDatabaseLongTermRetentionPolicyPtrOutput {
	return i.ToManagedDatabaseLongTermRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i *managedDatabaseLongTermRetentionPolicyPtrType) ToManagedDatabaseLongTermRetentionPolicyPtrOutputWithContext(ctx context.Context) ManagedDatabaseLongTermRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseLongTermRetentionPolicyPtrOutput)
}

func (i *managedDatabaseLongTermRetentionPolicyPtrType) ToOutput(ctx context.Context) pulumix.Output[*ManagedDatabaseLongTermRetentionPolicy] {
	return pulumix.Output[*ManagedDatabaseLongTermRetentionPolicy]{
		OutputState: i.ToManagedDatabaseLongTermRetentionPolicyPtrOutputWithContext(ctx).OutputState,
	}
}

type ManagedDatabaseLongTermRetentionPolicyOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseLongTermRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseLongTermRetentionPolicy)(nil)).Elem()
}

func (o ManagedDatabaseLongTermRetentionPolicyOutput) ToManagedDatabaseLongTermRetentionPolicyOutput() ManagedDatabaseLongTermRetentionPolicyOutput {
	return o
}

func (o ManagedDatabaseLongTermRetentionPolicyOutput) ToManagedDatabaseLongTermRetentionPolicyOutputWithContext(ctx context.Context) ManagedDatabaseLongTermRetentionPolicyOutput {
	return o
}

func (o ManagedDatabaseLongTermRetentionPolicyOutput) ToManagedDatabaseLongTermRetentionPolicyPtrOutput() ManagedDatabaseLongTermRetentionPolicyPtrOutput {
	return o.ToManagedDatabaseLongTermRetentionPolicyPtrOutputWithContext(context.Background())
}

func (o ManagedDatabaseLongTermRetentionPolicyOutput) ToManagedDatabaseLongTermRetentionPolicyPtrOutputWithContext(ctx context.Context) ManagedDatabaseLongTermRetentionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedDatabaseLongTermRetentionPolicy) *ManagedDatabaseLongTermRetentionPolicy {
		return &v
	}).(ManagedDatabaseLongTermRetentionPolicyPtrOutput)
}

func (o ManagedDatabaseLongTermRetentionPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[ManagedDatabaseLongTermRetentionPolicy] {
	return pulumix.Output[ManagedDatabaseLongTermRetentionPolicy]{
		OutputState: o.OutputState,
	}
}

// The monthly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 120 months. e.g. `P1Y`, `P1M`, `P4W` or `P30D`.
func (o ManagedDatabaseLongTermRetentionPolicyOutput) MonthlyRetention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseLongTermRetentionPolicy) *string { return v.MonthlyRetention }).(pulumi.StringPtrOutput)
}

// The week of year to take the yearly backup. Value has to be between `1` and `52`.
func (o ManagedDatabaseLongTermRetentionPolicyOutput) WeekOfYear() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseLongTermRetentionPolicy) *int { return v.WeekOfYear }).(pulumi.IntPtrOutput)
}

// The weekly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 520 weeks. e.g. `P1Y`, `P1M`, `P1W` or `P7D`.
func (o ManagedDatabaseLongTermRetentionPolicyOutput) WeeklyRetention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseLongTermRetentionPolicy) *string { return v.WeeklyRetention }).(pulumi.StringPtrOutput)
}

// The yearly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 10 years. e.g. `P1Y`, `P12M`, `P52W` or `P365D`.
func (o ManagedDatabaseLongTermRetentionPolicyOutput) YearlyRetention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseLongTermRetentionPolicy) *string { return v.YearlyRetention }).(pulumi.StringPtrOutput)
}

type ManagedDatabaseLongTermRetentionPolicyPtrOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseLongTermRetentionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseLongTermRetentionPolicy)(nil)).Elem()
}

func (o ManagedDatabaseLongTermRetentionPolicyPtrOutput) ToManagedDatabaseLongTermRetentionPolicyPtrOutput() ManagedDatabaseLongTermRetentionPolicyPtrOutput {
	return o
}

func (o ManagedDatabaseLongTermRetentionPolicyPtrOutput) ToManagedDatabaseLongTermRetentionPolicyPtrOutputWithContext(ctx context.Context) ManagedDatabaseLongTermRetentionPolicyPtrOutput {
	return o
}

func (o ManagedDatabaseLongTermRetentionPolicyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ManagedDatabaseLongTermRetentionPolicy] {
	return pulumix.Output[*ManagedDatabaseLongTermRetentionPolicy]{
		OutputState: o.OutputState,
	}
}

func (o ManagedDatabaseLongTermRetentionPolicyPtrOutput) Elem() ManagedDatabaseLongTermRetentionPolicyOutput {
	return o.ApplyT(func(v *ManagedDatabaseLongTermRetentionPolicy) ManagedDatabaseLongTermRetentionPolicy {
		if v != nil {
			return *v
		}
		var ret ManagedDatabaseLongTermRetentionPolicy
		return ret
	}).(ManagedDatabaseLongTermRetentionPolicyOutput)
}

// The monthly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 120 months. e.g. `P1Y`, `P1M`, `P4W` or `P30D`.
func (o ManagedDatabaseLongTermRetentionPolicyPtrOutput) MonthlyRetention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseLongTermRetentionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.MonthlyRetention
	}).(pulumi.StringPtrOutput)
}

// The week of year to take the yearly backup. Value has to be between `1` and `52`.
func (o ManagedDatabaseLongTermRetentionPolicyPtrOutput) WeekOfYear() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseLongTermRetentionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.WeekOfYear
	}).(pulumi.IntPtrOutput)
}

// The weekly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 520 weeks. e.g. `P1Y`, `P1M`, `P1W` or `P7D`.
func (o ManagedDatabaseLongTermRetentionPolicyPtrOutput) WeeklyRetention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseLongTermRetentionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.WeeklyRetention
	}).(pulumi.StringPtrOutput)
}

// The yearly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 10 years. e.g. `P1Y`, `P12M`, `P52W` or `P365D`.
func (o ManagedDatabaseLongTermRetentionPolicyPtrOutput) YearlyRetention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseLongTermRetentionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.YearlyRetention
	}).(pulumi.StringPtrOutput)
}

type ManagedInstanceFailoverGroupPartnerRegion struct {
	// The Azure Region where the Managed Instance Failover Group should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The partner replication role of the Managed Instance Failover Group.
	Role *string `pulumi:"role"`
}

// ManagedInstanceFailoverGroupPartnerRegionInput is an input type that accepts ManagedInstanceFailoverGroupPartnerRegionArgs and ManagedInstanceFailoverGroupPartnerRegionOutput values.
// You can construct a concrete instance of `ManagedInstanceFailoverGroupPartnerRegionInput` via:
//
//	ManagedInstanceFailoverGroupPartnerRegionArgs{...}
type ManagedInstanceFailoverGroupPartnerRegionInput interface {
	pulumi.Input

	ToManagedInstanceFailoverGroupPartnerRegionOutput() ManagedInstanceFailoverGroupPartnerRegionOutput
	ToManagedInstanceFailoverGroupPartnerRegionOutputWithContext(context.Context) ManagedInstanceFailoverGroupPartnerRegionOutput
}

type ManagedInstanceFailoverGroupPartnerRegionArgs struct {
	// The Azure Region where the Managed Instance Failover Group should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The partner replication role of the Managed Instance Failover Group.
	Role pulumi.StringPtrInput `pulumi:"role"`
}

func (ManagedInstanceFailoverGroupPartnerRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceFailoverGroupPartnerRegion)(nil)).Elem()
}

func (i ManagedInstanceFailoverGroupPartnerRegionArgs) ToManagedInstanceFailoverGroupPartnerRegionOutput() ManagedInstanceFailoverGroupPartnerRegionOutput {
	return i.ToManagedInstanceFailoverGroupPartnerRegionOutputWithContext(context.Background())
}

func (i ManagedInstanceFailoverGroupPartnerRegionArgs) ToManagedInstanceFailoverGroupPartnerRegionOutputWithContext(ctx context.Context) ManagedInstanceFailoverGroupPartnerRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceFailoverGroupPartnerRegionOutput)
}

func (i ManagedInstanceFailoverGroupPartnerRegionArgs) ToOutput(ctx context.Context) pulumix.Output[ManagedInstanceFailoverGroupPartnerRegion] {
	return pulumix.Output[ManagedInstanceFailoverGroupPartnerRegion]{
		OutputState: i.ToManagedInstanceFailoverGroupPartnerRegionOutputWithContext(ctx).OutputState,
	}
}

// ManagedInstanceFailoverGroupPartnerRegionArrayInput is an input type that accepts ManagedInstanceFailoverGroupPartnerRegionArray and ManagedInstanceFailoverGroupPartnerRegionArrayOutput values.
// You can construct a concrete instance of `ManagedInstanceFailoverGroupPartnerRegionArrayInput` via:
//
//	ManagedInstanceFailoverGroupPartnerRegionArray{ ManagedInstanceFailoverGroupPartnerRegionArgs{...} }
type ManagedInstanceFailoverGroupPartnerRegionArrayInput interface {
	pulumi.Input

	ToManagedInstanceFailoverGroupPartnerRegionArrayOutput() ManagedInstanceFailoverGroupPartnerRegionArrayOutput
	ToManagedInstanceFailoverGroupPartnerRegionArrayOutputWithContext(context.Context) ManagedInstanceFailoverGroupPartnerRegionArrayOutput
}

type ManagedInstanceFailoverGroupPartnerRegionArray []ManagedInstanceFailoverGroupPartnerRegionInput

func (ManagedInstanceFailoverGroupPartnerRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedInstanceFailoverGroupPartnerRegion)(nil)).Elem()
}

func (i ManagedInstanceFailoverGroupPartnerRegionArray) ToManagedInstanceFailoverGroupPartnerRegionArrayOutput() ManagedInstanceFailoverGroupPartnerRegionArrayOutput {
	return i.ToManagedInstanceFailoverGroupPartnerRegionArrayOutputWithContext(context.Background())
}

func (i ManagedInstanceFailoverGroupPartnerRegionArray) ToManagedInstanceFailoverGroupPartnerRegionArrayOutputWithContext(ctx context.Context) ManagedInstanceFailoverGroupPartnerRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceFailoverGroupPartnerRegionArrayOutput)
}

func (i ManagedInstanceFailoverGroupPartnerRegionArray) ToOutput(ctx context.Context) pulumix.Output[[]ManagedInstanceFailoverGroupPartnerRegion] {
	return pulumix.Output[[]ManagedInstanceFailoverGroupPartnerRegion]{
		OutputState: i.ToManagedInstanceFailoverGroupPartnerRegionArrayOutputWithContext(ctx).OutputState,
	}
}

type ManagedInstanceFailoverGroupPartnerRegionOutput struct{ *pulumi.OutputState }

func (ManagedInstanceFailoverGroupPartnerRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceFailoverGroupPartnerRegion)(nil)).Elem()
}

func (o ManagedInstanceFailoverGroupPartnerRegionOutput) ToManagedInstanceFailoverGroupPartnerRegionOutput() ManagedInstanceFailoverGroupPartnerRegionOutput {
	return o
}

func (o ManagedInstanceFailoverGroupPartnerRegionOutput) ToManagedInstanceFailoverGroupPartnerRegionOutputWithContext(ctx context.Context) ManagedInstanceFailoverGroupPartnerRegionOutput {
	return o
}

func (o ManagedInstanceFailoverGroupPartnerRegionOutput) ToOutput(ctx context.Context) pulumix.Output[ManagedInstanceFailoverGroupPartnerRegion] {
	return pulumix.Output[ManagedInstanceFailoverGroupPartnerRegion]{
		OutputState: o.OutputState,
	}
}

// The Azure Region where the Managed Instance Failover Group should exist. Changing this forces a new resource to be created.
func (o ManagedInstanceFailoverGroupPartnerRegionOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceFailoverGroupPartnerRegion) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The partner replication role of the Managed Instance Failover Group.
func (o ManagedInstanceFailoverGroupPartnerRegionOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceFailoverGroupPartnerRegion) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type ManagedInstanceFailoverGroupPartnerRegionArrayOutput struct{ *pulumi.OutputState }

func (ManagedInstanceFailoverGroupPartnerRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedInstanceFailoverGroupPartnerRegion)(nil)).Elem()
}

func (o ManagedInstanceFailoverGroupPartnerRegionArrayOutput) ToManagedInstanceFailoverGroupPartnerRegionArrayOutput() ManagedInstanceFailoverGroupPartnerRegionArrayOutput {
	return o
}

func (o ManagedInstanceFailoverGroupPartnerRegionArrayOutput) ToManagedInstanceFailoverGroupPartnerRegionArrayOutputWithContext(ctx context.Context) ManagedInstanceFailoverGroupPartnerRegionArrayOutput {
	return o
}

func (o ManagedInstanceFailoverGroupPartnerRegionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ManagedInstanceFailoverGroupPartnerRegion] {
	return pulumix.Output[[]ManagedInstanceFailoverGroupPartnerRegion]{
		OutputState: o.OutputState,
	}
}

func (o ManagedInstanceFailoverGroupPartnerRegionArrayOutput) Index(i pulumi.IntInput) ManagedInstanceFailoverGroupPartnerRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedInstanceFailoverGroupPartnerRegion {
		return vs[0].([]ManagedInstanceFailoverGroupPartnerRegion)[vs[1].(int)]
	}).(ManagedInstanceFailoverGroupPartnerRegionOutput)
}

type ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy struct {
	// Applies only if `mode` is `Automatic`. The grace period in minutes before failover with data loss is attempted.
	GraceMinutes *int `pulumi:"graceMinutes"`
	// The failover mode. Possible values are `Automatic` or `Manual`.
	Mode string `pulumi:"mode"`
}

// ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyInput is an input type that accepts ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyArgs and ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyOutput values.
// You can construct a concrete instance of `ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyInput` via:
//
//	ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyArgs{...}
type ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyInput interface {
	pulumi.Input

	ToManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyOutput() ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyOutput
	ToManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyOutputWithContext(context.Context) ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyOutput
}

type ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyArgs struct {
	// Applies only if `mode` is `Automatic`. The grace period in minutes before failover with data loss is attempted.
	GraceMinutes pulumi.IntPtrInput `pulumi:"graceMinutes"`
	// The failover mode. Possible values are `Automatic` or `Manual`.
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy)(nil)).Elem()
}

func (i ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyArgs) ToManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyOutput() ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyOutput {
	return i.ToManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyOutputWithContext(context.Background())
}

func (i ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyArgs) ToManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyOutputWithContext(ctx context.Context) ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyOutput)
}

func (i ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy] {
	return pulumix.Output[ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy]{
		OutputState: i.ToManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyOutputWithContext(ctx).OutputState,
	}
}

func (i ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyArgs) ToManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput() ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput {
	return i.ToManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutputWithContext(context.Background())
}

func (i ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyArgs) ToManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutputWithContext(ctx context.Context) ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyOutput).ToManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutputWithContext(ctx)
}

// ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrInput is an input type that accepts ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyArgs, ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtr and ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput values.
// You can construct a concrete instance of `ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrInput` via:
//
//	        ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyArgs{...}
//
//	or:
//
//	        nil
type ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrInput interface {
	pulumi.Input

	ToManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput() ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput
	ToManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutputWithContext(context.Context) ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput
}

type managedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrType ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyArgs

func ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtr(v *ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyArgs) ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrInput {
	return (*managedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrType)(v)
}

func (*managedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy)(nil)).Elem()
}

func (i *managedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrType) ToManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput() ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput {
	return i.ToManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutputWithContext(context.Background())
}

func (i *managedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrType) ToManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutputWithContext(ctx context.Context) ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput)
}

func (i *managedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrType) ToOutput(ctx context.Context) pulumix.Output[*ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy] {
	return pulumix.Output[*ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy]{
		OutputState: i.ToManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutputWithContext(ctx).OutputState,
	}
}

type ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyOutput struct{ *pulumi.OutputState }

func (ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy)(nil)).Elem()
}

func (o ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyOutput) ToManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyOutput() ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyOutput {
	return o
}

func (o ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyOutput) ToManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyOutputWithContext(ctx context.Context) ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyOutput {
	return o
}

func (o ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyOutput) ToManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput() ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput {
	return o.ToManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutputWithContext(context.Background())
}

func (o ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyOutput) ToManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutputWithContext(ctx context.Context) ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy) *ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy {
		return &v
	}).(ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput)
}

func (o ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy] {
	return pulumix.Output[ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy]{
		OutputState: o.OutputState,
	}
}

// Applies only if `mode` is `Automatic`. The grace period in minutes before failover with data loss is attempted.
func (o ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyOutput) GraceMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy) *int { return v.GraceMinutes }).(pulumi.IntPtrOutput)
}

// The failover mode. Possible values are `Automatic` or `Manual`.
func (o ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy) string { return v.Mode }).(pulumi.StringOutput)
}

type ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput struct{ *pulumi.OutputState }

func (ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy)(nil)).Elem()
}

func (o ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput) ToManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput() ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput {
	return o
}

func (o ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput) ToManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutputWithContext(ctx context.Context) ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput {
	return o
}

func (o ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy] {
	return pulumix.Output[*ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy]{
		OutputState: o.OutputState,
	}
}

func (o ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput) Elem() ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyOutput {
	return o.ApplyT(func(v *ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy) ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy {
		if v != nil {
			return *v
		}
		var ret ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy
		return ret
	}).(ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyOutput)
}

// Applies only if `mode` is `Automatic`. The grace period in minutes before failover with data loss is attempted.
func (o ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput) GraceMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy) *int {
		if v == nil {
			return nil
		}
		return v.GraceMinutes
	}).(pulumi.IntPtrOutput)
}

// The failover mode. Possible values are `Automatic` or `Manual`.
func (o ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

type ManagedInstanceIdentity struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this SQL Managed Instance. Required when `type` is set to `UserAssigned`.
	//
	// > The assigned `principalId` and `tenantId` can be retrieved after the identity `type` has been set to `SystemAssigned` and SQL Managed Instance has been created.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID for the Service Principal associated with the Identity of this SQL Managed Instance.
	PrincipalId *string `pulumi:"principalId"`
	// The Tenant ID for the Service Principal associated with the Identity of this SQL Managed Instance.
	TenantId *string `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this SQL Managed Instance. Possible values are `SystemAssigned`, `UserAssigned`.
	Type string `pulumi:"type"`
}

// ManagedInstanceIdentityInput is an input type that accepts ManagedInstanceIdentityArgs and ManagedInstanceIdentityOutput values.
// You can construct a concrete instance of `ManagedInstanceIdentityInput` via:
//
//	ManagedInstanceIdentityArgs{...}
type ManagedInstanceIdentityInput interface {
	pulumi.Input

	ToManagedInstanceIdentityOutput() ManagedInstanceIdentityOutput
	ToManagedInstanceIdentityOutputWithContext(context.Context) ManagedInstanceIdentityOutput
}

type ManagedInstanceIdentityArgs struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this SQL Managed Instance. Required when `type` is set to `UserAssigned`.
	//
	// > The assigned `principalId` and `tenantId` can be retrieved after the identity `type` has been set to `SystemAssigned` and SQL Managed Instance has been created.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID for the Service Principal associated with the Identity of this SQL Managed Instance.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The Tenant ID for the Service Principal associated with the Identity of this SQL Managed Instance.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this SQL Managed Instance. Possible values are `SystemAssigned`, `UserAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ManagedInstanceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceIdentity)(nil)).Elem()
}

func (i ManagedInstanceIdentityArgs) ToManagedInstanceIdentityOutput() ManagedInstanceIdentityOutput {
	return i.ToManagedInstanceIdentityOutputWithContext(context.Background())
}

func (i ManagedInstanceIdentityArgs) ToManagedInstanceIdentityOutputWithContext(ctx context.Context) ManagedInstanceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceIdentityOutput)
}

func (i ManagedInstanceIdentityArgs) ToOutput(ctx context.Context) pulumix.Output[ManagedInstanceIdentity] {
	return pulumix.Output[ManagedInstanceIdentity]{
		OutputState: i.ToManagedInstanceIdentityOutputWithContext(ctx).OutputState,
	}
}

func (i ManagedInstanceIdentityArgs) ToManagedInstanceIdentityPtrOutput() ManagedInstanceIdentityPtrOutput {
	return i.ToManagedInstanceIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedInstanceIdentityArgs) ToManagedInstanceIdentityPtrOutputWithContext(ctx context.Context) ManagedInstanceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceIdentityOutput).ToManagedInstanceIdentityPtrOutputWithContext(ctx)
}

// ManagedInstanceIdentityPtrInput is an input type that accepts ManagedInstanceIdentityArgs, ManagedInstanceIdentityPtr and ManagedInstanceIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedInstanceIdentityPtrInput` via:
//
//	        ManagedInstanceIdentityArgs{...}
//
//	or:
//
//	        nil
type ManagedInstanceIdentityPtrInput interface {
	pulumi.Input

	ToManagedInstanceIdentityPtrOutput() ManagedInstanceIdentityPtrOutput
	ToManagedInstanceIdentityPtrOutputWithContext(context.Context) ManagedInstanceIdentityPtrOutput
}

type managedInstanceIdentityPtrType ManagedInstanceIdentityArgs

func ManagedInstanceIdentityPtr(v *ManagedInstanceIdentityArgs) ManagedInstanceIdentityPtrInput {
	return (*managedInstanceIdentityPtrType)(v)
}

func (*managedInstanceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstanceIdentity)(nil)).Elem()
}

func (i *managedInstanceIdentityPtrType) ToManagedInstanceIdentityPtrOutput() ManagedInstanceIdentityPtrOutput {
	return i.ToManagedInstanceIdentityPtrOutputWithContext(context.Background())
}

func (i *managedInstanceIdentityPtrType) ToManagedInstanceIdentityPtrOutputWithContext(ctx context.Context) ManagedInstanceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceIdentityPtrOutput)
}

func (i *managedInstanceIdentityPtrType) ToOutput(ctx context.Context) pulumix.Output[*ManagedInstanceIdentity] {
	return pulumix.Output[*ManagedInstanceIdentity]{
		OutputState: i.ToManagedInstanceIdentityPtrOutputWithContext(ctx).OutputState,
	}
}

type ManagedInstanceIdentityOutput struct{ *pulumi.OutputState }

func (ManagedInstanceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceIdentity)(nil)).Elem()
}

func (o ManagedInstanceIdentityOutput) ToManagedInstanceIdentityOutput() ManagedInstanceIdentityOutput {
	return o
}

func (o ManagedInstanceIdentityOutput) ToManagedInstanceIdentityOutputWithContext(ctx context.Context) ManagedInstanceIdentityOutput {
	return o
}

func (o ManagedInstanceIdentityOutput) ToManagedInstanceIdentityPtrOutput() ManagedInstanceIdentityPtrOutput {
	return o.ToManagedInstanceIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedInstanceIdentityOutput) ToManagedInstanceIdentityPtrOutputWithContext(ctx context.Context) ManagedInstanceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedInstanceIdentity) *ManagedInstanceIdentity {
		return &v
	}).(ManagedInstanceIdentityPtrOutput)
}

func (o ManagedInstanceIdentityOutput) ToOutput(ctx context.Context) pulumix.Output[ManagedInstanceIdentity] {
	return pulumix.Output[ManagedInstanceIdentity]{
		OutputState: o.OutputState,
	}
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this SQL Managed Instance. Required when `type` is set to `UserAssigned`.
//
// > The assigned `principalId` and `tenantId` can be retrieved after the identity `type` has been set to `SystemAssigned` and SQL Managed Instance has been created.
func (o ManagedInstanceIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedInstanceIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID for the Service Principal associated with the Identity of this SQL Managed Instance.
func (o ManagedInstanceIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The Tenant ID for the Service Principal associated with the Identity of this SQL Managed Instance.
func (o ManagedInstanceIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedInstanceIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this SQL Managed Instance. Possible values are `SystemAssigned`, `UserAssigned`.
func (o ManagedInstanceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedInstanceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type ManagedInstanceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedInstanceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstanceIdentity)(nil)).Elem()
}

func (o ManagedInstanceIdentityPtrOutput) ToManagedInstanceIdentityPtrOutput() ManagedInstanceIdentityPtrOutput {
	return o
}

func (o ManagedInstanceIdentityPtrOutput) ToManagedInstanceIdentityPtrOutputWithContext(ctx context.Context) ManagedInstanceIdentityPtrOutput {
	return o
}

func (o ManagedInstanceIdentityPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ManagedInstanceIdentity] {
	return pulumix.Output[*ManagedInstanceIdentity]{
		OutputState: o.OutputState,
	}
}

func (o ManagedInstanceIdentityPtrOutput) Elem() ManagedInstanceIdentityOutput {
	return o.ApplyT(func(v *ManagedInstanceIdentity) ManagedInstanceIdentity {
		if v != nil {
			return *v
		}
		var ret ManagedInstanceIdentity
		return ret
	}).(ManagedInstanceIdentityOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this SQL Managed Instance. Required when `type` is set to `UserAssigned`.
//
// > The assigned `principalId` and `tenantId` can be retrieved after the identity `type` has been set to `SystemAssigned` and SQL Managed Instance has been created.
func (o ManagedInstanceIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedInstanceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The Principal ID for the Service Principal associated with the Identity of this SQL Managed Instance.
func (o ManagedInstanceIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedInstanceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID for the Service Principal associated with the Identity of this SQL Managed Instance.
func (o ManagedInstanceIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedInstanceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this SQL Managed Instance. Possible values are `SystemAssigned`, `UserAssigned`.
func (o ManagedInstanceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedInstanceIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ManagedInstanceVulnerabilityAssessmentRecurringScans struct {
	// Boolean flag which specifies if the schedule scan notification will be sent to the subscription administrators. Defaults to `true`.
	EmailSubscriptionAdmins *bool `pulumi:"emailSubscriptionAdmins"`
	// Specifies an array of e-mail addresses to which the scan notification is sent.
	Emails []string `pulumi:"emails"`
	// Boolean flag which specifies if recurring scans is enabled or disabled. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
}

// ManagedInstanceVulnerabilityAssessmentRecurringScansInput is an input type that accepts ManagedInstanceVulnerabilityAssessmentRecurringScansArgs and ManagedInstanceVulnerabilityAssessmentRecurringScansOutput values.
// You can construct a concrete instance of `ManagedInstanceVulnerabilityAssessmentRecurringScansInput` via:
//
//	ManagedInstanceVulnerabilityAssessmentRecurringScansArgs{...}
type ManagedInstanceVulnerabilityAssessmentRecurringScansInput interface {
	pulumi.Input

	ToManagedInstanceVulnerabilityAssessmentRecurringScansOutput() ManagedInstanceVulnerabilityAssessmentRecurringScansOutput
	ToManagedInstanceVulnerabilityAssessmentRecurringScansOutputWithContext(context.Context) ManagedInstanceVulnerabilityAssessmentRecurringScansOutput
}

type ManagedInstanceVulnerabilityAssessmentRecurringScansArgs struct {
	// Boolean flag which specifies if the schedule scan notification will be sent to the subscription administrators. Defaults to `true`.
	EmailSubscriptionAdmins pulumi.BoolPtrInput `pulumi:"emailSubscriptionAdmins"`
	// Specifies an array of e-mail addresses to which the scan notification is sent.
	Emails pulumi.StringArrayInput `pulumi:"emails"`
	// Boolean flag which specifies if recurring scans is enabled or disabled. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ManagedInstanceVulnerabilityAssessmentRecurringScansArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceVulnerabilityAssessmentRecurringScans)(nil)).Elem()
}

func (i ManagedInstanceVulnerabilityAssessmentRecurringScansArgs) ToManagedInstanceVulnerabilityAssessmentRecurringScansOutput() ManagedInstanceVulnerabilityAssessmentRecurringScansOutput {
	return i.ToManagedInstanceVulnerabilityAssessmentRecurringScansOutputWithContext(context.Background())
}

func (i ManagedInstanceVulnerabilityAssessmentRecurringScansArgs) ToManagedInstanceVulnerabilityAssessmentRecurringScansOutputWithContext(ctx context.Context) ManagedInstanceVulnerabilityAssessmentRecurringScansOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceVulnerabilityAssessmentRecurringScansOutput)
}

func (i ManagedInstanceVulnerabilityAssessmentRecurringScansArgs) ToOutput(ctx context.Context) pulumix.Output[ManagedInstanceVulnerabilityAssessmentRecurringScans] {
	return pulumix.Output[ManagedInstanceVulnerabilityAssessmentRecurringScans]{
		OutputState: i.ToManagedInstanceVulnerabilityAssessmentRecurringScansOutputWithContext(ctx).OutputState,
	}
}

func (i ManagedInstanceVulnerabilityAssessmentRecurringScansArgs) ToManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutput() ManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutput {
	return i.ToManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutputWithContext(context.Background())
}

func (i ManagedInstanceVulnerabilityAssessmentRecurringScansArgs) ToManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutputWithContext(ctx context.Context) ManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceVulnerabilityAssessmentRecurringScansOutput).ToManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutputWithContext(ctx)
}

// ManagedInstanceVulnerabilityAssessmentRecurringScansPtrInput is an input type that accepts ManagedInstanceVulnerabilityAssessmentRecurringScansArgs, ManagedInstanceVulnerabilityAssessmentRecurringScansPtr and ManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutput values.
// You can construct a concrete instance of `ManagedInstanceVulnerabilityAssessmentRecurringScansPtrInput` via:
//
//	        ManagedInstanceVulnerabilityAssessmentRecurringScansArgs{...}
//
//	or:
//
//	        nil
type ManagedInstanceVulnerabilityAssessmentRecurringScansPtrInput interface {
	pulumi.Input

	ToManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutput() ManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutput
	ToManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutputWithContext(context.Context) ManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutput
}

type managedInstanceVulnerabilityAssessmentRecurringScansPtrType ManagedInstanceVulnerabilityAssessmentRecurringScansArgs

func ManagedInstanceVulnerabilityAssessmentRecurringScansPtr(v *ManagedInstanceVulnerabilityAssessmentRecurringScansArgs) ManagedInstanceVulnerabilityAssessmentRecurringScansPtrInput {
	return (*managedInstanceVulnerabilityAssessmentRecurringScansPtrType)(v)
}

func (*managedInstanceVulnerabilityAssessmentRecurringScansPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstanceVulnerabilityAssessmentRecurringScans)(nil)).Elem()
}

func (i *managedInstanceVulnerabilityAssessmentRecurringScansPtrType) ToManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutput() ManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutput {
	return i.ToManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutputWithContext(context.Background())
}

func (i *managedInstanceVulnerabilityAssessmentRecurringScansPtrType) ToManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutputWithContext(ctx context.Context) ManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutput)
}

func (i *managedInstanceVulnerabilityAssessmentRecurringScansPtrType) ToOutput(ctx context.Context) pulumix.Output[*ManagedInstanceVulnerabilityAssessmentRecurringScans] {
	return pulumix.Output[*ManagedInstanceVulnerabilityAssessmentRecurringScans]{
		OutputState: i.ToManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutputWithContext(ctx).OutputState,
	}
}

type ManagedInstanceVulnerabilityAssessmentRecurringScansOutput struct{ *pulumi.OutputState }

func (ManagedInstanceVulnerabilityAssessmentRecurringScansOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedInstanceVulnerabilityAssessmentRecurringScans)(nil)).Elem()
}

func (o ManagedInstanceVulnerabilityAssessmentRecurringScansOutput) ToManagedInstanceVulnerabilityAssessmentRecurringScansOutput() ManagedInstanceVulnerabilityAssessmentRecurringScansOutput {
	return o
}

func (o ManagedInstanceVulnerabilityAssessmentRecurringScansOutput) ToManagedInstanceVulnerabilityAssessmentRecurringScansOutputWithContext(ctx context.Context) ManagedInstanceVulnerabilityAssessmentRecurringScansOutput {
	return o
}

func (o ManagedInstanceVulnerabilityAssessmentRecurringScansOutput) ToManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutput() ManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutput {
	return o.ToManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutputWithContext(context.Background())
}

func (o ManagedInstanceVulnerabilityAssessmentRecurringScansOutput) ToManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutputWithContext(ctx context.Context) ManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedInstanceVulnerabilityAssessmentRecurringScans) *ManagedInstanceVulnerabilityAssessmentRecurringScans {
		return &v
	}).(ManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutput)
}

func (o ManagedInstanceVulnerabilityAssessmentRecurringScansOutput) ToOutput(ctx context.Context) pulumix.Output[ManagedInstanceVulnerabilityAssessmentRecurringScans] {
	return pulumix.Output[ManagedInstanceVulnerabilityAssessmentRecurringScans]{
		OutputState: o.OutputState,
	}
}

// Boolean flag which specifies if the schedule scan notification will be sent to the subscription administrators. Defaults to `true`.
func (o ManagedInstanceVulnerabilityAssessmentRecurringScansOutput) EmailSubscriptionAdmins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedInstanceVulnerabilityAssessmentRecurringScans) *bool { return v.EmailSubscriptionAdmins }).(pulumi.BoolPtrOutput)
}

// Specifies an array of e-mail addresses to which the scan notification is sent.
func (o ManagedInstanceVulnerabilityAssessmentRecurringScansOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedInstanceVulnerabilityAssessmentRecurringScans) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

// Boolean flag which specifies if recurring scans is enabled or disabled. Defaults to `false`.
func (o ManagedInstanceVulnerabilityAssessmentRecurringScansOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedInstanceVulnerabilityAssessmentRecurringScans) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutput struct{ *pulumi.OutputState }

func (ManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedInstanceVulnerabilityAssessmentRecurringScans)(nil)).Elem()
}

func (o ManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutput) ToManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutput() ManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutput {
	return o
}

func (o ManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutput) ToManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutputWithContext(ctx context.Context) ManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutput {
	return o
}

func (o ManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ManagedInstanceVulnerabilityAssessmentRecurringScans] {
	return pulumix.Output[*ManagedInstanceVulnerabilityAssessmentRecurringScans]{
		OutputState: o.OutputState,
	}
}

func (o ManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutput) Elem() ManagedInstanceVulnerabilityAssessmentRecurringScansOutput {
	return o.ApplyT(func(v *ManagedInstanceVulnerabilityAssessmentRecurringScans) ManagedInstanceVulnerabilityAssessmentRecurringScans {
		if v != nil {
			return *v
		}
		var ret ManagedInstanceVulnerabilityAssessmentRecurringScans
		return ret
	}).(ManagedInstanceVulnerabilityAssessmentRecurringScansOutput)
}

// Boolean flag which specifies if the schedule scan notification will be sent to the subscription administrators. Defaults to `true`.
func (o ManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutput) EmailSubscriptionAdmins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedInstanceVulnerabilityAssessmentRecurringScans) *bool {
		if v == nil {
			return nil
		}
		return v.EmailSubscriptionAdmins
	}).(pulumi.BoolPtrOutput)
}

// Specifies an array of e-mail addresses to which the scan notification is sent.
func (o ManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedInstanceVulnerabilityAssessmentRecurringScans) []string {
		if v == nil {
			return nil
		}
		return v.Emails
	}).(pulumi.StringArrayOutput)
}

// Boolean flag which specifies if recurring scans is enabled or disabled. Defaults to `false`.
func (o ManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedInstanceVulnerabilityAssessmentRecurringScans) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ServerAzureadAdministrator struct {
	// Specifies whether only AD Users and administrators (e.g. `azuread_administrator.0.login_username`) can be used to login, or also local database users (e.g. `administratorLogin`). When `true`, the `administratorLogin` and `administratorLoginPassword` properties can be omitted.
	AzureadAuthenticationOnly *bool `pulumi:"azureadAuthenticationOnly"`
	// The login username of the Azure AD Administrator of this SQL Server.
	LoginUsername string `pulumi:"loginUsername"`
	// The object id of the Azure AD Administrator of this SQL Server.
	ObjectId string `pulumi:"objectId"`
	// The tenant id of the Azure AD Administrator of this SQL Server.
	TenantId *string `pulumi:"tenantId"`
}

// ServerAzureadAdministratorInput is an input type that accepts ServerAzureadAdministratorArgs and ServerAzureadAdministratorOutput values.
// You can construct a concrete instance of `ServerAzureadAdministratorInput` via:
//
//	ServerAzureadAdministratorArgs{...}
type ServerAzureadAdministratorInput interface {
	pulumi.Input

	ToServerAzureadAdministratorOutput() ServerAzureadAdministratorOutput
	ToServerAzureadAdministratorOutputWithContext(context.Context) ServerAzureadAdministratorOutput
}

type ServerAzureadAdministratorArgs struct {
	// Specifies whether only AD Users and administrators (e.g. `azuread_administrator.0.login_username`) can be used to login, or also local database users (e.g. `administratorLogin`). When `true`, the `administratorLogin` and `administratorLoginPassword` properties can be omitted.
	AzureadAuthenticationOnly pulumi.BoolPtrInput `pulumi:"azureadAuthenticationOnly"`
	// The login username of the Azure AD Administrator of this SQL Server.
	LoginUsername pulumi.StringInput `pulumi:"loginUsername"`
	// The object id of the Azure AD Administrator of this SQL Server.
	ObjectId pulumi.StringInput `pulumi:"objectId"`
	// The tenant id of the Azure AD Administrator of this SQL Server.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (ServerAzureadAdministratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerAzureadAdministrator)(nil)).Elem()
}

func (i ServerAzureadAdministratorArgs) ToServerAzureadAdministratorOutput() ServerAzureadAdministratorOutput {
	return i.ToServerAzureadAdministratorOutputWithContext(context.Background())
}

func (i ServerAzureadAdministratorArgs) ToServerAzureadAdministratorOutputWithContext(ctx context.Context) ServerAzureadAdministratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerAzureadAdministratorOutput)
}

func (i ServerAzureadAdministratorArgs) ToOutput(ctx context.Context) pulumix.Output[ServerAzureadAdministrator] {
	return pulumix.Output[ServerAzureadAdministrator]{
		OutputState: i.ToServerAzureadAdministratorOutputWithContext(ctx).OutputState,
	}
}

func (i ServerAzureadAdministratorArgs) ToServerAzureadAdministratorPtrOutput() ServerAzureadAdministratorPtrOutput {
	return i.ToServerAzureadAdministratorPtrOutputWithContext(context.Background())
}

func (i ServerAzureadAdministratorArgs) ToServerAzureadAdministratorPtrOutputWithContext(ctx context.Context) ServerAzureadAdministratorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerAzureadAdministratorOutput).ToServerAzureadAdministratorPtrOutputWithContext(ctx)
}

// ServerAzureadAdministratorPtrInput is an input type that accepts ServerAzureadAdministratorArgs, ServerAzureadAdministratorPtr and ServerAzureadAdministratorPtrOutput values.
// You can construct a concrete instance of `ServerAzureadAdministratorPtrInput` via:
//
//	        ServerAzureadAdministratorArgs{...}
//
//	or:
//
//	        nil
type ServerAzureadAdministratorPtrInput interface {
	pulumi.Input

	ToServerAzureadAdministratorPtrOutput() ServerAzureadAdministratorPtrOutput
	ToServerAzureadAdministratorPtrOutputWithContext(context.Context) ServerAzureadAdministratorPtrOutput
}

type serverAzureadAdministratorPtrType ServerAzureadAdministratorArgs

func ServerAzureadAdministratorPtr(v *ServerAzureadAdministratorArgs) ServerAzureadAdministratorPtrInput {
	return (*serverAzureadAdministratorPtrType)(v)
}

func (*serverAzureadAdministratorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerAzureadAdministrator)(nil)).Elem()
}

func (i *serverAzureadAdministratorPtrType) ToServerAzureadAdministratorPtrOutput() ServerAzureadAdministratorPtrOutput {
	return i.ToServerAzureadAdministratorPtrOutputWithContext(context.Background())
}

func (i *serverAzureadAdministratorPtrType) ToServerAzureadAdministratorPtrOutputWithContext(ctx context.Context) ServerAzureadAdministratorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerAzureadAdministratorPtrOutput)
}

func (i *serverAzureadAdministratorPtrType) ToOutput(ctx context.Context) pulumix.Output[*ServerAzureadAdministrator] {
	return pulumix.Output[*ServerAzureadAdministrator]{
		OutputState: i.ToServerAzureadAdministratorPtrOutputWithContext(ctx).OutputState,
	}
}

type ServerAzureadAdministratorOutput struct{ *pulumi.OutputState }

func (ServerAzureadAdministratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerAzureadAdministrator)(nil)).Elem()
}

func (o ServerAzureadAdministratorOutput) ToServerAzureadAdministratorOutput() ServerAzureadAdministratorOutput {
	return o
}

func (o ServerAzureadAdministratorOutput) ToServerAzureadAdministratorOutputWithContext(ctx context.Context) ServerAzureadAdministratorOutput {
	return o
}

func (o ServerAzureadAdministratorOutput) ToServerAzureadAdministratorPtrOutput() ServerAzureadAdministratorPtrOutput {
	return o.ToServerAzureadAdministratorPtrOutputWithContext(context.Background())
}

func (o ServerAzureadAdministratorOutput) ToServerAzureadAdministratorPtrOutputWithContext(ctx context.Context) ServerAzureadAdministratorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerAzureadAdministrator) *ServerAzureadAdministrator {
		return &v
	}).(ServerAzureadAdministratorPtrOutput)
}

func (o ServerAzureadAdministratorOutput) ToOutput(ctx context.Context) pulumix.Output[ServerAzureadAdministrator] {
	return pulumix.Output[ServerAzureadAdministrator]{
		OutputState: o.OutputState,
	}
}

// Specifies whether only AD Users and administrators (e.g. `azuread_administrator.0.login_username`) can be used to login, or also local database users (e.g. `administratorLogin`). When `true`, the `administratorLogin` and `administratorLoginPassword` properties can be omitted.
func (o ServerAzureadAdministratorOutput) AzureadAuthenticationOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServerAzureadAdministrator) *bool { return v.AzureadAuthenticationOnly }).(pulumi.BoolPtrOutput)
}

// The login username of the Azure AD Administrator of this SQL Server.
func (o ServerAzureadAdministratorOutput) LoginUsername() pulumi.StringOutput {
	return o.ApplyT(func(v ServerAzureadAdministrator) string { return v.LoginUsername }).(pulumi.StringOutput)
}

// The object id of the Azure AD Administrator of this SQL Server.
func (o ServerAzureadAdministratorOutput) ObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v ServerAzureadAdministrator) string { return v.ObjectId }).(pulumi.StringOutput)
}

// The tenant id of the Azure AD Administrator of this SQL Server.
func (o ServerAzureadAdministratorOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerAzureadAdministrator) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type ServerAzureadAdministratorPtrOutput struct{ *pulumi.OutputState }

func (ServerAzureadAdministratorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerAzureadAdministrator)(nil)).Elem()
}

func (o ServerAzureadAdministratorPtrOutput) ToServerAzureadAdministratorPtrOutput() ServerAzureadAdministratorPtrOutput {
	return o
}

func (o ServerAzureadAdministratorPtrOutput) ToServerAzureadAdministratorPtrOutputWithContext(ctx context.Context) ServerAzureadAdministratorPtrOutput {
	return o
}

func (o ServerAzureadAdministratorPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ServerAzureadAdministrator] {
	return pulumix.Output[*ServerAzureadAdministrator]{
		OutputState: o.OutputState,
	}
}

func (o ServerAzureadAdministratorPtrOutput) Elem() ServerAzureadAdministratorOutput {
	return o.ApplyT(func(v *ServerAzureadAdministrator) ServerAzureadAdministrator {
		if v != nil {
			return *v
		}
		var ret ServerAzureadAdministrator
		return ret
	}).(ServerAzureadAdministratorOutput)
}

// Specifies whether only AD Users and administrators (e.g. `azuread_administrator.0.login_username`) can be used to login, or also local database users (e.g. `administratorLogin`). When `true`, the `administratorLogin` and `administratorLoginPassword` properties can be omitted.
func (o ServerAzureadAdministratorPtrOutput) AzureadAuthenticationOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServerAzureadAdministrator) *bool {
		if v == nil {
			return nil
		}
		return v.AzureadAuthenticationOnly
	}).(pulumi.BoolPtrOutput)
}

// The login username of the Azure AD Administrator of this SQL Server.
func (o ServerAzureadAdministratorPtrOutput) LoginUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerAzureadAdministrator) *string {
		if v == nil {
			return nil
		}
		return &v.LoginUsername
	}).(pulumi.StringPtrOutput)
}

// The object id of the Azure AD Administrator of this SQL Server.
func (o ServerAzureadAdministratorPtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerAzureadAdministrator) *string {
		if v == nil {
			return nil
		}
		return &v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// The tenant id of the Azure AD Administrator of this SQL Server.
func (o ServerAzureadAdministratorPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerAzureadAdministrator) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

type ServerIdentity struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this SQL Server.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned`
	//
	// > **NOTE:** When `type` is set to `SystemAssigned`, the assigned `principalId` and `tenantId` can be retrieved after the Microsoft SQL Server has been created. More details are available below.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID for the Service Principal associated with the Identity of this SQL Server.
	PrincipalId *string `pulumi:"principalId"`
	// The tenant id of the Azure AD Administrator of this SQL Server.
	TenantId *string `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this SQL Server. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
	Type string `pulumi:"type"`
}

// ServerIdentityInput is an input type that accepts ServerIdentityArgs and ServerIdentityOutput values.
// You can construct a concrete instance of `ServerIdentityInput` via:
//
//	ServerIdentityArgs{...}
type ServerIdentityInput interface {
	pulumi.Input

	ToServerIdentityOutput() ServerIdentityOutput
	ToServerIdentityOutputWithContext(context.Context) ServerIdentityOutput
}

type ServerIdentityArgs struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this SQL Server.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned`
	//
	// > **NOTE:** When `type` is set to `SystemAssigned`, the assigned `principalId` and `tenantId` can be retrieved after the Microsoft SQL Server has been created. More details are available below.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID for the Service Principal associated with the Identity of this SQL Server.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The tenant id of the Azure AD Administrator of this SQL Server.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this SQL Server. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
	Type pulumi.StringInput `pulumi:"type"`
}

func (ServerIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerIdentity)(nil)).Elem()
}

func (i ServerIdentityArgs) ToServerIdentityOutput() ServerIdentityOutput {
	return i.ToServerIdentityOutputWithContext(context.Background())
}

func (i ServerIdentityArgs) ToServerIdentityOutputWithContext(ctx context.Context) ServerIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerIdentityOutput)
}

func (i ServerIdentityArgs) ToOutput(ctx context.Context) pulumix.Output[ServerIdentity] {
	return pulumix.Output[ServerIdentity]{
		OutputState: i.ToServerIdentityOutputWithContext(ctx).OutputState,
	}
}

func (i ServerIdentityArgs) ToServerIdentityPtrOutput() ServerIdentityPtrOutput {
	return i.ToServerIdentityPtrOutputWithContext(context.Background())
}

func (i ServerIdentityArgs) ToServerIdentityPtrOutputWithContext(ctx context.Context) ServerIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerIdentityOutput).ToServerIdentityPtrOutputWithContext(ctx)
}

// ServerIdentityPtrInput is an input type that accepts ServerIdentityArgs, ServerIdentityPtr and ServerIdentityPtrOutput values.
// You can construct a concrete instance of `ServerIdentityPtrInput` via:
//
//	        ServerIdentityArgs{...}
//
//	or:
//
//	        nil
type ServerIdentityPtrInput interface {
	pulumi.Input

	ToServerIdentityPtrOutput() ServerIdentityPtrOutput
	ToServerIdentityPtrOutputWithContext(context.Context) ServerIdentityPtrOutput
}

type serverIdentityPtrType ServerIdentityArgs

func ServerIdentityPtr(v *ServerIdentityArgs) ServerIdentityPtrInput {
	return (*serverIdentityPtrType)(v)
}

func (*serverIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerIdentity)(nil)).Elem()
}

func (i *serverIdentityPtrType) ToServerIdentityPtrOutput() ServerIdentityPtrOutput {
	return i.ToServerIdentityPtrOutputWithContext(context.Background())
}

func (i *serverIdentityPtrType) ToServerIdentityPtrOutputWithContext(ctx context.Context) ServerIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerIdentityPtrOutput)
}

func (i *serverIdentityPtrType) ToOutput(ctx context.Context) pulumix.Output[*ServerIdentity] {
	return pulumix.Output[*ServerIdentity]{
		OutputState: i.ToServerIdentityPtrOutputWithContext(ctx).OutputState,
	}
}

type ServerIdentityOutput struct{ *pulumi.OutputState }

func (ServerIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerIdentity)(nil)).Elem()
}

func (o ServerIdentityOutput) ToServerIdentityOutput() ServerIdentityOutput {
	return o
}

func (o ServerIdentityOutput) ToServerIdentityOutputWithContext(ctx context.Context) ServerIdentityOutput {
	return o
}

func (o ServerIdentityOutput) ToServerIdentityPtrOutput() ServerIdentityPtrOutput {
	return o.ToServerIdentityPtrOutputWithContext(context.Background())
}

func (o ServerIdentityOutput) ToServerIdentityPtrOutputWithContext(ctx context.Context) ServerIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerIdentity) *ServerIdentity {
		return &v
	}).(ServerIdentityPtrOutput)
}

func (o ServerIdentityOutput) ToOutput(ctx context.Context) pulumix.Output[ServerIdentity] {
	return pulumix.Output[ServerIdentity]{
		OutputState: o.OutputState,
	}
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this SQL Server.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned`
//
// > **NOTE:** When `type` is set to `SystemAssigned`, the assigned `principalId` and `tenantId` can be retrieved after the Microsoft SQL Server has been created. More details are available below.
func (o ServerIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServerIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID for the Service Principal associated with the Identity of this SQL Server.
func (o ServerIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The tenant id of the Azure AD Administrator of this SQL Server.
func (o ServerIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this SQL Server. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
func (o ServerIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServerIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type ServerIdentityPtrOutput struct{ *pulumi.OutputState }

func (ServerIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerIdentity)(nil)).Elem()
}

func (o ServerIdentityPtrOutput) ToServerIdentityPtrOutput() ServerIdentityPtrOutput {
	return o
}

func (o ServerIdentityPtrOutput) ToServerIdentityPtrOutputWithContext(ctx context.Context) ServerIdentityPtrOutput {
	return o
}

func (o ServerIdentityPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ServerIdentity] {
	return pulumix.Output[*ServerIdentity]{
		OutputState: o.OutputState,
	}
}

func (o ServerIdentityPtrOutput) Elem() ServerIdentityOutput {
	return o.ApplyT(func(v *ServerIdentity) ServerIdentity {
		if v != nil {
			return *v
		}
		var ret ServerIdentity
		return ret
	}).(ServerIdentityOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this SQL Server.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned`
//
// > **NOTE:** When `type` is set to `SystemAssigned`, the assigned `principalId` and `tenantId` can be retrieved after the Microsoft SQL Server has been created. More details are available below.
func (o ServerIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServerIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The Principal ID for the Service Principal associated with the Identity of this SQL Server.
func (o ServerIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant id of the Azure AD Administrator of this SQL Server.
func (o ServerIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this SQL Server. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
func (o ServerIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ServerVulnerabilityAssessmentRecurringScans struct {
	// Boolean flag which specifies if the schedule scan notification will be sent to the subscription administrators. Defaults to `false`.
	EmailSubscriptionAdmins *bool `pulumi:"emailSubscriptionAdmins"`
	// Specifies an array of email addresses to which the scan notification is sent.
	Emails []string `pulumi:"emails"`
	// Boolean flag which specifies if recurring scans is enabled or disabled. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
}

// ServerVulnerabilityAssessmentRecurringScansInput is an input type that accepts ServerVulnerabilityAssessmentRecurringScansArgs and ServerVulnerabilityAssessmentRecurringScansOutput values.
// You can construct a concrete instance of `ServerVulnerabilityAssessmentRecurringScansInput` via:
//
//	ServerVulnerabilityAssessmentRecurringScansArgs{...}
type ServerVulnerabilityAssessmentRecurringScansInput interface {
	pulumi.Input

	ToServerVulnerabilityAssessmentRecurringScansOutput() ServerVulnerabilityAssessmentRecurringScansOutput
	ToServerVulnerabilityAssessmentRecurringScansOutputWithContext(context.Context) ServerVulnerabilityAssessmentRecurringScansOutput
}

type ServerVulnerabilityAssessmentRecurringScansArgs struct {
	// Boolean flag which specifies if the schedule scan notification will be sent to the subscription administrators. Defaults to `false`.
	EmailSubscriptionAdmins pulumi.BoolPtrInput `pulumi:"emailSubscriptionAdmins"`
	// Specifies an array of email addresses to which the scan notification is sent.
	Emails pulumi.StringArrayInput `pulumi:"emails"`
	// Boolean flag which specifies if recurring scans is enabled or disabled. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ServerVulnerabilityAssessmentRecurringScansArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerVulnerabilityAssessmentRecurringScans)(nil)).Elem()
}

func (i ServerVulnerabilityAssessmentRecurringScansArgs) ToServerVulnerabilityAssessmentRecurringScansOutput() ServerVulnerabilityAssessmentRecurringScansOutput {
	return i.ToServerVulnerabilityAssessmentRecurringScansOutputWithContext(context.Background())
}

func (i ServerVulnerabilityAssessmentRecurringScansArgs) ToServerVulnerabilityAssessmentRecurringScansOutputWithContext(ctx context.Context) ServerVulnerabilityAssessmentRecurringScansOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerVulnerabilityAssessmentRecurringScansOutput)
}

func (i ServerVulnerabilityAssessmentRecurringScansArgs) ToOutput(ctx context.Context) pulumix.Output[ServerVulnerabilityAssessmentRecurringScans] {
	return pulumix.Output[ServerVulnerabilityAssessmentRecurringScans]{
		OutputState: i.ToServerVulnerabilityAssessmentRecurringScansOutputWithContext(ctx).OutputState,
	}
}

func (i ServerVulnerabilityAssessmentRecurringScansArgs) ToServerVulnerabilityAssessmentRecurringScansPtrOutput() ServerVulnerabilityAssessmentRecurringScansPtrOutput {
	return i.ToServerVulnerabilityAssessmentRecurringScansPtrOutputWithContext(context.Background())
}

func (i ServerVulnerabilityAssessmentRecurringScansArgs) ToServerVulnerabilityAssessmentRecurringScansPtrOutputWithContext(ctx context.Context) ServerVulnerabilityAssessmentRecurringScansPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerVulnerabilityAssessmentRecurringScansOutput).ToServerVulnerabilityAssessmentRecurringScansPtrOutputWithContext(ctx)
}

// ServerVulnerabilityAssessmentRecurringScansPtrInput is an input type that accepts ServerVulnerabilityAssessmentRecurringScansArgs, ServerVulnerabilityAssessmentRecurringScansPtr and ServerVulnerabilityAssessmentRecurringScansPtrOutput values.
// You can construct a concrete instance of `ServerVulnerabilityAssessmentRecurringScansPtrInput` via:
//
//	        ServerVulnerabilityAssessmentRecurringScansArgs{...}
//
//	or:
//
//	        nil
type ServerVulnerabilityAssessmentRecurringScansPtrInput interface {
	pulumi.Input

	ToServerVulnerabilityAssessmentRecurringScansPtrOutput() ServerVulnerabilityAssessmentRecurringScansPtrOutput
	ToServerVulnerabilityAssessmentRecurringScansPtrOutputWithContext(context.Context) ServerVulnerabilityAssessmentRecurringScansPtrOutput
}

type serverVulnerabilityAssessmentRecurringScansPtrType ServerVulnerabilityAssessmentRecurringScansArgs

func ServerVulnerabilityAssessmentRecurringScansPtr(v *ServerVulnerabilityAssessmentRecurringScansArgs) ServerVulnerabilityAssessmentRecurringScansPtrInput {
	return (*serverVulnerabilityAssessmentRecurringScansPtrType)(v)
}

func (*serverVulnerabilityAssessmentRecurringScansPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerVulnerabilityAssessmentRecurringScans)(nil)).Elem()
}

func (i *serverVulnerabilityAssessmentRecurringScansPtrType) ToServerVulnerabilityAssessmentRecurringScansPtrOutput() ServerVulnerabilityAssessmentRecurringScansPtrOutput {
	return i.ToServerVulnerabilityAssessmentRecurringScansPtrOutputWithContext(context.Background())
}

func (i *serverVulnerabilityAssessmentRecurringScansPtrType) ToServerVulnerabilityAssessmentRecurringScansPtrOutputWithContext(ctx context.Context) ServerVulnerabilityAssessmentRecurringScansPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerVulnerabilityAssessmentRecurringScansPtrOutput)
}

func (i *serverVulnerabilityAssessmentRecurringScansPtrType) ToOutput(ctx context.Context) pulumix.Output[*ServerVulnerabilityAssessmentRecurringScans] {
	return pulumix.Output[*ServerVulnerabilityAssessmentRecurringScans]{
		OutputState: i.ToServerVulnerabilityAssessmentRecurringScansPtrOutputWithContext(ctx).OutputState,
	}
}

type ServerVulnerabilityAssessmentRecurringScansOutput struct{ *pulumi.OutputState }

func (ServerVulnerabilityAssessmentRecurringScansOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerVulnerabilityAssessmentRecurringScans)(nil)).Elem()
}

func (o ServerVulnerabilityAssessmentRecurringScansOutput) ToServerVulnerabilityAssessmentRecurringScansOutput() ServerVulnerabilityAssessmentRecurringScansOutput {
	return o
}

func (o ServerVulnerabilityAssessmentRecurringScansOutput) ToServerVulnerabilityAssessmentRecurringScansOutputWithContext(ctx context.Context) ServerVulnerabilityAssessmentRecurringScansOutput {
	return o
}

func (o ServerVulnerabilityAssessmentRecurringScansOutput) ToServerVulnerabilityAssessmentRecurringScansPtrOutput() ServerVulnerabilityAssessmentRecurringScansPtrOutput {
	return o.ToServerVulnerabilityAssessmentRecurringScansPtrOutputWithContext(context.Background())
}

func (o ServerVulnerabilityAssessmentRecurringScansOutput) ToServerVulnerabilityAssessmentRecurringScansPtrOutputWithContext(ctx context.Context) ServerVulnerabilityAssessmentRecurringScansPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerVulnerabilityAssessmentRecurringScans) *ServerVulnerabilityAssessmentRecurringScans {
		return &v
	}).(ServerVulnerabilityAssessmentRecurringScansPtrOutput)
}

func (o ServerVulnerabilityAssessmentRecurringScansOutput) ToOutput(ctx context.Context) pulumix.Output[ServerVulnerabilityAssessmentRecurringScans] {
	return pulumix.Output[ServerVulnerabilityAssessmentRecurringScans]{
		OutputState: o.OutputState,
	}
}

// Boolean flag which specifies if the schedule scan notification will be sent to the subscription administrators. Defaults to `false`.
func (o ServerVulnerabilityAssessmentRecurringScansOutput) EmailSubscriptionAdmins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServerVulnerabilityAssessmentRecurringScans) *bool { return v.EmailSubscriptionAdmins }).(pulumi.BoolPtrOutput)
}

// Specifies an array of email addresses to which the scan notification is sent.
func (o ServerVulnerabilityAssessmentRecurringScansOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServerVulnerabilityAssessmentRecurringScans) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

// Boolean flag which specifies if recurring scans is enabled or disabled. Defaults to `false`.
func (o ServerVulnerabilityAssessmentRecurringScansOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServerVulnerabilityAssessmentRecurringScans) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ServerVulnerabilityAssessmentRecurringScansPtrOutput struct{ *pulumi.OutputState }

func (ServerVulnerabilityAssessmentRecurringScansPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerVulnerabilityAssessmentRecurringScans)(nil)).Elem()
}

func (o ServerVulnerabilityAssessmentRecurringScansPtrOutput) ToServerVulnerabilityAssessmentRecurringScansPtrOutput() ServerVulnerabilityAssessmentRecurringScansPtrOutput {
	return o
}

func (o ServerVulnerabilityAssessmentRecurringScansPtrOutput) ToServerVulnerabilityAssessmentRecurringScansPtrOutputWithContext(ctx context.Context) ServerVulnerabilityAssessmentRecurringScansPtrOutput {
	return o
}

func (o ServerVulnerabilityAssessmentRecurringScansPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ServerVulnerabilityAssessmentRecurringScans] {
	return pulumix.Output[*ServerVulnerabilityAssessmentRecurringScans]{
		OutputState: o.OutputState,
	}
}

func (o ServerVulnerabilityAssessmentRecurringScansPtrOutput) Elem() ServerVulnerabilityAssessmentRecurringScansOutput {
	return o.ApplyT(func(v *ServerVulnerabilityAssessmentRecurringScans) ServerVulnerabilityAssessmentRecurringScans {
		if v != nil {
			return *v
		}
		var ret ServerVulnerabilityAssessmentRecurringScans
		return ret
	}).(ServerVulnerabilityAssessmentRecurringScansOutput)
}

// Boolean flag which specifies if the schedule scan notification will be sent to the subscription administrators. Defaults to `false`.
func (o ServerVulnerabilityAssessmentRecurringScansPtrOutput) EmailSubscriptionAdmins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServerVulnerabilityAssessmentRecurringScans) *bool {
		if v == nil {
			return nil
		}
		return v.EmailSubscriptionAdmins
	}).(pulumi.BoolPtrOutput)
}

// Specifies an array of email addresses to which the scan notification is sent.
func (o ServerVulnerabilityAssessmentRecurringScansPtrOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServerVulnerabilityAssessmentRecurringScans) []string {
		if v == nil {
			return nil
		}
		return v.Emails
	}).(pulumi.StringArrayOutput)
}

// Boolean flag which specifies if recurring scans is enabled or disabled. Defaults to `false`.
func (o ServerVulnerabilityAssessmentRecurringScansPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServerVulnerabilityAssessmentRecurringScans) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type VirtualMachineAssessment struct {
	// Should Assessment be enabled? Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// Should Assessment be run immediately? Defaults to `false`.
	RunImmediately *bool `pulumi:"runImmediately"`
	// An `schedule` block as defined below.
	Schedule *VirtualMachineAssessmentSchedule `pulumi:"schedule"`
}

// VirtualMachineAssessmentInput is an input type that accepts VirtualMachineAssessmentArgs and VirtualMachineAssessmentOutput values.
// You can construct a concrete instance of `VirtualMachineAssessmentInput` via:
//
//	VirtualMachineAssessmentArgs{...}
type VirtualMachineAssessmentInput interface {
	pulumi.Input

	ToVirtualMachineAssessmentOutput() VirtualMachineAssessmentOutput
	ToVirtualMachineAssessmentOutputWithContext(context.Context) VirtualMachineAssessmentOutput
}

type VirtualMachineAssessmentArgs struct {
	// Should Assessment be enabled? Defaults to `true`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Should Assessment be run immediately? Defaults to `false`.
	RunImmediately pulumi.BoolPtrInput `pulumi:"runImmediately"`
	// An `schedule` block as defined below.
	Schedule VirtualMachineAssessmentSchedulePtrInput `pulumi:"schedule"`
}

func (VirtualMachineAssessmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineAssessment)(nil)).Elem()
}

func (i VirtualMachineAssessmentArgs) ToVirtualMachineAssessmentOutput() VirtualMachineAssessmentOutput {
	return i.ToVirtualMachineAssessmentOutputWithContext(context.Background())
}

func (i VirtualMachineAssessmentArgs) ToVirtualMachineAssessmentOutputWithContext(ctx context.Context) VirtualMachineAssessmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAssessmentOutput)
}

func (i VirtualMachineAssessmentArgs) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineAssessment] {
	return pulumix.Output[VirtualMachineAssessment]{
		OutputState: i.ToVirtualMachineAssessmentOutputWithContext(ctx).OutputState,
	}
}

func (i VirtualMachineAssessmentArgs) ToVirtualMachineAssessmentPtrOutput() VirtualMachineAssessmentPtrOutput {
	return i.ToVirtualMachineAssessmentPtrOutputWithContext(context.Background())
}

func (i VirtualMachineAssessmentArgs) ToVirtualMachineAssessmentPtrOutputWithContext(ctx context.Context) VirtualMachineAssessmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAssessmentOutput).ToVirtualMachineAssessmentPtrOutputWithContext(ctx)
}

// VirtualMachineAssessmentPtrInput is an input type that accepts VirtualMachineAssessmentArgs, VirtualMachineAssessmentPtr and VirtualMachineAssessmentPtrOutput values.
// You can construct a concrete instance of `VirtualMachineAssessmentPtrInput` via:
//
//	        VirtualMachineAssessmentArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineAssessmentPtrInput interface {
	pulumi.Input

	ToVirtualMachineAssessmentPtrOutput() VirtualMachineAssessmentPtrOutput
	ToVirtualMachineAssessmentPtrOutputWithContext(context.Context) VirtualMachineAssessmentPtrOutput
}

type virtualMachineAssessmentPtrType VirtualMachineAssessmentArgs

func VirtualMachineAssessmentPtr(v *VirtualMachineAssessmentArgs) VirtualMachineAssessmentPtrInput {
	return (*virtualMachineAssessmentPtrType)(v)
}

func (*virtualMachineAssessmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineAssessment)(nil)).Elem()
}

func (i *virtualMachineAssessmentPtrType) ToVirtualMachineAssessmentPtrOutput() VirtualMachineAssessmentPtrOutput {
	return i.ToVirtualMachineAssessmentPtrOutputWithContext(context.Background())
}

func (i *virtualMachineAssessmentPtrType) ToVirtualMachineAssessmentPtrOutputWithContext(ctx context.Context) VirtualMachineAssessmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAssessmentPtrOutput)
}

func (i *virtualMachineAssessmentPtrType) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineAssessment] {
	return pulumix.Output[*VirtualMachineAssessment]{
		OutputState: i.ToVirtualMachineAssessmentPtrOutputWithContext(ctx).OutputState,
	}
}

type VirtualMachineAssessmentOutput struct{ *pulumi.OutputState }

func (VirtualMachineAssessmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineAssessment)(nil)).Elem()
}

func (o VirtualMachineAssessmentOutput) ToVirtualMachineAssessmentOutput() VirtualMachineAssessmentOutput {
	return o
}

func (o VirtualMachineAssessmentOutput) ToVirtualMachineAssessmentOutputWithContext(ctx context.Context) VirtualMachineAssessmentOutput {
	return o
}

func (o VirtualMachineAssessmentOutput) ToVirtualMachineAssessmentPtrOutput() VirtualMachineAssessmentPtrOutput {
	return o.ToVirtualMachineAssessmentPtrOutputWithContext(context.Background())
}

func (o VirtualMachineAssessmentOutput) ToVirtualMachineAssessmentPtrOutputWithContext(ctx context.Context) VirtualMachineAssessmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineAssessment) *VirtualMachineAssessment {
		return &v
	}).(VirtualMachineAssessmentPtrOutput)
}

func (o VirtualMachineAssessmentOutput) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineAssessment] {
	return pulumix.Output[VirtualMachineAssessment]{
		OutputState: o.OutputState,
	}
}

// Should Assessment be enabled? Defaults to `true`.
func (o VirtualMachineAssessmentOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineAssessment) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Should Assessment be run immediately? Defaults to `false`.
func (o VirtualMachineAssessmentOutput) RunImmediately() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineAssessment) *bool { return v.RunImmediately }).(pulumi.BoolPtrOutput)
}

// An `schedule` block as defined below.
func (o VirtualMachineAssessmentOutput) Schedule() VirtualMachineAssessmentSchedulePtrOutput {
	return o.ApplyT(func(v VirtualMachineAssessment) *VirtualMachineAssessmentSchedule { return v.Schedule }).(VirtualMachineAssessmentSchedulePtrOutput)
}

type VirtualMachineAssessmentPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineAssessmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineAssessment)(nil)).Elem()
}

func (o VirtualMachineAssessmentPtrOutput) ToVirtualMachineAssessmentPtrOutput() VirtualMachineAssessmentPtrOutput {
	return o
}

func (o VirtualMachineAssessmentPtrOutput) ToVirtualMachineAssessmentPtrOutputWithContext(ctx context.Context) VirtualMachineAssessmentPtrOutput {
	return o
}

func (o VirtualMachineAssessmentPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineAssessment] {
	return pulumix.Output[*VirtualMachineAssessment]{
		OutputState: o.OutputState,
	}
}

func (o VirtualMachineAssessmentPtrOutput) Elem() VirtualMachineAssessmentOutput {
	return o.ApplyT(func(v *VirtualMachineAssessment) VirtualMachineAssessment {
		if v != nil {
			return *v
		}
		var ret VirtualMachineAssessment
		return ret
	}).(VirtualMachineAssessmentOutput)
}

// Should Assessment be enabled? Defaults to `true`.
func (o VirtualMachineAssessmentPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAssessment) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Should Assessment be run immediately? Defaults to `false`.
func (o VirtualMachineAssessmentPtrOutput) RunImmediately() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAssessment) *bool {
		if v == nil {
			return nil
		}
		return v.RunImmediately
	}).(pulumi.BoolPtrOutput)
}

// An `schedule` block as defined below.
func (o VirtualMachineAssessmentPtrOutput) Schedule() VirtualMachineAssessmentSchedulePtrOutput {
	return o.ApplyT(func(v *VirtualMachineAssessment) *VirtualMachineAssessmentSchedule {
		if v == nil {
			return nil
		}
		return v.Schedule
	}).(VirtualMachineAssessmentSchedulePtrOutput)
}

type VirtualMachineAssessmentSchedule struct {
	// What day of the week the assessment will be run. Possible values are `Friday`, `Monday`, `Saturday`, `Sunday`, `Thursday`, `Tuesday` and `Wednesday`.
	DayOfWeek string `pulumi:"dayOfWeek"`
	// How many months between assessment runs. Valid values are between `1` and `5`.
	//
	// > **NOTE:** Either one of `weeklyInterval` or `monthlyOccurrence` must be specified.
	MonthlyOccurrence *int `pulumi:"monthlyOccurrence"`
	// What time the assessment will be run. Must be in the format `HH:mm`.
	StartTime string `pulumi:"startTime"`
	// How many weeks between assessment runs. Valid values are between `1` and `6`.
	WeeklyInterval *int `pulumi:"weeklyInterval"`
}

// VirtualMachineAssessmentScheduleInput is an input type that accepts VirtualMachineAssessmentScheduleArgs and VirtualMachineAssessmentScheduleOutput values.
// You can construct a concrete instance of `VirtualMachineAssessmentScheduleInput` via:
//
//	VirtualMachineAssessmentScheduleArgs{...}
type VirtualMachineAssessmentScheduleInput interface {
	pulumi.Input

	ToVirtualMachineAssessmentScheduleOutput() VirtualMachineAssessmentScheduleOutput
	ToVirtualMachineAssessmentScheduleOutputWithContext(context.Context) VirtualMachineAssessmentScheduleOutput
}

type VirtualMachineAssessmentScheduleArgs struct {
	// What day of the week the assessment will be run. Possible values are `Friday`, `Monday`, `Saturday`, `Sunday`, `Thursday`, `Tuesday` and `Wednesday`.
	DayOfWeek pulumi.StringInput `pulumi:"dayOfWeek"`
	// How many months between assessment runs. Valid values are between `1` and `5`.
	//
	// > **NOTE:** Either one of `weeklyInterval` or `monthlyOccurrence` must be specified.
	MonthlyOccurrence pulumi.IntPtrInput `pulumi:"monthlyOccurrence"`
	// What time the assessment will be run. Must be in the format `HH:mm`.
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// How many weeks between assessment runs. Valid values are between `1` and `6`.
	WeeklyInterval pulumi.IntPtrInput `pulumi:"weeklyInterval"`
}

func (VirtualMachineAssessmentScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineAssessmentSchedule)(nil)).Elem()
}

func (i VirtualMachineAssessmentScheduleArgs) ToVirtualMachineAssessmentScheduleOutput() VirtualMachineAssessmentScheduleOutput {
	return i.ToVirtualMachineAssessmentScheduleOutputWithContext(context.Background())
}

func (i VirtualMachineAssessmentScheduleArgs) ToVirtualMachineAssessmentScheduleOutputWithContext(ctx context.Context) VirtualMachineAssessmentScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAssessmentScheduleOutput)
}

func (i VirtualMachineAssessmentScheduleArgs) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineAssessmentSchedule] {
	return pulumix.Output[VirtualMachineAssessmentSchedule]{
		OutputState: i.ToVirtualMachineAssessmentScheduleOutputWithContext(ctx).OutputState,
	}
}

func (i VirtualMachineAssessmentScheduleArgs) ToVirtualMachineAssessmentSchedulePtrOutput() VirtualMachineAssessmentSchedulePtrOutput {
	return i.ToVirtualMachineAssessmentSchedulePtrOutputWithContext(context.Background())
}

func (i VirtualMachineAssessmentScheduleArgs) ToVirtualMachineAssessmentSchedulePtrOutputWithContext(ctx context.Context) VirtualMachineAssessmentSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAssessmentScheduleOutput).ToVirtualMachineAssessmentSchedulePtrOutputWithContext(ctx)
}

// VirtualMachineAssessmentSchedulePtrInput is an input type that accepts VirtualMachineAssessmentScheduleArgs, VirtualMachineAssessmentSchedulePtr and VirtualMachineAssessmentSchedulePtrOutput values.
// You can construct a concrete instance of `VirtualMachineAssessmentSchedulePtrInput` via:
//
//	        VirtualMachineAssessmentScheduleArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineAssessmentSchedulePtrInput interface {
	pulumi.Input

	ToVirtualMachineAssessmentSchedulePtrOutput() VirtualMachineAssessmentSchedulePtrOutput
	ToVirtualMachineAssessmentSchedulePtrOutputWithContext(context.Context) VirtualMachineAssessmentSchedulePtrOutput
}

type virtualMachineAssessmentSchedulePtrType VirtualMachineAssessmentScheduleArgs

func VirtualMachineAssessmentSchedulePtr(v *VirtualMachineAssessmentScheduleArgs) VirtualMachineAssessmentSchedulePtrInput {
	return (*virtualMachineAssessmentSchedulePtrType)(v)
}

func (*virtualMachineAssessmentSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineAssessmentSchedule)(nil)).Elem()
}

func (i *virtualMachineAssessmentSchedulePtrType) ToVirtualMachineAssessmentSchedulePtrOutput() VirtualMachineAssessmentSchedulePtrOutput {
	return i.ToVirtualMachineAssessmentSchedulePtrOutputWithContext(context.Background())
}

func (i *virtualMachineAssessmentSchedulePtrType) ToVirtualMachineAssessmentSchedulePtrOutputWithContext(ctx context.Context) VirtualMachineAssessmentSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAssessmentSchedulePtrOutput)
}

func (i *virtualMachineAssessmentSchedulePtrType) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineAssessmentSchedule] {
	return pulumix.Output[*VirtualMachineAssessmentSchedule]{
		OutputState: i.ToVirtualMachineAssessmentSchedulePtrOutputWithContext(ctx).OutputState,
	}
}

type VirtualMachineAssessmentScheduleOutput struct{ *pulumi.OutputState }

func (VirtualMachineAssessmentScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineAssessmentSchedule)(nil)).Elem()
}

func (o VirtualMachineAssessmentScheduleOutput) ToVirtualMachineAssessmentScheduleOutput() VirtualMachineAssessmentScheduleOutput {
	return o
}

func (o VirtualMachineAssessmentScheduleOutput) ToVirtualMachineAssessmentScheduleOutputWithContext(ctx context.Context) VirtualMachineAssessmentScheduleOutput {
	return o
}

func (o VirtualMachineAssessmentScheduleOutput) ToVirtualMachineAssessmentSchedulePtrOutput() VirtualMachineAssessmentSchedulePtrOutput {
	return o.ToVirtualMachineAssessmentSchedulePtrOutputWithContext(context.Background())
}

func (o VirtualMachineAssessmentScheduleOutput) ToVirtualMachineAssessmentSchedulePtrOutputWithContext(ctx context.Context) VirtualMachineAssessmentSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineAssessmentSchedule) *VirtualMachineAssessmentSchedule {
		return &v
	}).(VirtualMachineAssessmentSchedulePtrOutput)
}

func (o VirtualMachineAssessmentScheduleOutput) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineAssessmentSchedule] {
	return pulumix.Output[VirtualMachineAssessmentSchedule]{
		OutputState: o.OutputState,
	}
}

// What day of the week the assessment will be run. Possible values are `Friday`, `Monday`, `Saturday`, `Sunday`, `Thursday`, `Tuesday` and `Wednesday`.
func (o VirtualMachineAssessmentScheduleOutput) DayOfWeek() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineAssessmentSchedule) string { return v.DayOfWeek }).(pulumi.StringOutput)
}

// How many months between assessment runs. Valid values are between `1` and `5`.
//
// > **NOTE:** Either one of `weeklyInterval` or `monthlyOccurrence` must be specified.
func (o VirtualMachineAssessmentScheduleOutput) MonthlyOccurrence() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineAssessmentSchedule) *int { return v.MonthlyOccurrence }).(pulumi.IntPtrOutput)
}

// What time the assessment will be run. Must be in the format `HH:mm`.
func (o VirtualMachineAssessmentScheduleOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineAssessmentSchedule) string { return v.StartTime }).(pulumi.StringOutput)
}

// How many weeks between assessment runs. Valid values are between `1` and `6`.
func (o VirtualMachineAssessmentScheduleOutput) WeeklyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineAssessmentSchedule) *int { return v.WeeklyInterval }).(pulumi.IntPtrOutput)
}

type VirtualMachineAssessmentSchedulePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineAssessmentSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineAssessmentSchedule)(nil)).Elem()
}

func (o VirtualMachineAssessmentSchedulePtrOutput) ToVirtualMachineAssessmentSchedulePtrOutput() VirtualMachineAssessmentSchedulePtrOutput {
	return o
}

func (o VirtualMachineAssessmentSchedulePtrOutput) ToVirtualMachineAssessmentSchedulePtrOutputWithContext(ctx context.Context) VirtualMachineAssessmentSchedulePtrOutput {
	return o
}

func (o VirtualMachineAssessmentSchedulePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineAssessmentSchedule] {
	return pulumix.Output[*VirtualMachineAssessmentSchedule]{
		OutputState: o.OutputState,
	}
}

func (o VirtualMachineAssessmentSchedulePtrOutput) Elem() VirtualMachineAssessmentScheduleOutput {
	return o.ApplyT(func(v *VirtualMachineAssessmentSchedule) VirtualMachineAssessmentSchedule {
		if v != nil {
			return *v
		}
		var ret VirtualMachineAssessmentSchedule
		return ret
	}).(VirtualMachineAssessmentScheduleOutput)
}

// What day of the week the assessment will be run. Possible values are `Friday`, `Monday`, `Saturday`, `Sunday`, `Thursday`, `Tuesday` and `Wednesday`.
func (o VirtualMachineAssessmentSchedulePtrOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAssessmentSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.DayOfWeek
	}).(pulumi.StringPtrOutput)
}

// How many months between assessment runs. Valid values are between `1` and `5`.
//
// > **NOTE:** Either one of `weeklyInterval` or `monthlyOccurrence` must be specified.
func (o VirtualMachineAssessmentSchedulePtrOutput) MonthlyOccurrence() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAssessmentSchedule) *int {
		if v == nil {
			return nil
		}
		return v.MonthlyOccurrence
	}).(pulumi.IntPtrOutput)
}

// What time the assessment will be run. Must be in the format `HH:mm`.
func (o VirtualMachineAssessmentSchedulePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAssessmentSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

// How many weeks between assessment runs. Valid values are between `1` and `6`.
func (o VirtualMachineAssessmentSchedulePtrOutput) WeeklyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAssessmentSchedule) *int {
		if v == nil {
			return nil
		}
		return v.WeeklyInterval
	}).(pulumi.IntPtrOutput)
}

type VirtualMachineAutoBackup struct {
	// Enable or disable encryption for backups. Defaults to `false`.
	EncryptionEnabled *bool `pulumi:"encryptionEnabled"`
	// Encryption password to use. Must be specified when encryption is enabled.
	EncryptionPassword *string `pulumi:"encryptionPassword"`
	// A `manualSchedule` block as documented below. When this block is present, the schedule type is set to `Manual`. Without this block, the schedule type is set to `Automated`.
	ManualSchedule *VirtualMachineAutoBackupManualSchedule `pulumi:"manualSchedule"`
	// Retention period of backups, in days. Valid values are from `1` to `30`.
	RetentionPeriodInDays int `pulumi:"retentionPeriodInDays"`
	// Access key for the storage account where backups will be kept.
	StorageAccountAccessKey string `pulumi:"storageAccountAccessKey"`
	// Blob endpoint for the storage account where backups will be kept.
	StorageBlobEndpoint string `pulumi:"storageBlobEndpoint"`
	// Include or exclude system databases from auto backup.
	SystemDatabasesBackupEnabled *bool `pulumi:"systemDatabasesBackupEnabled"`
}

// VirtualMachineAutoBackupInput is an input type that accepts VirtualMachineAutoBackupArgs and VirtualMachineAutoBackupOutput values.
// You can construct a concrete instance of `VirtualMachineAutoBackupInput` via:
//
//	VirtualMachineAutoBackupArgs{...}
type VirtualMachineAutoBackupInput interface {
	pulumi.Input

	ToVirtualMachineAutoBackupOutput() VirtualMachineAutoBackupOutput
	ToVirtualMachineAutoBackupOutputWithContext(context.Context) VirtualMachineAutoBackupOutput
}

type VirtualMachineAutoBackupArgs struct {
	// Enable or disable encryption for backups. Defaults to `false`.
	EncryptionEnabled pulumi.BoolPtrInput `pulumi:"encryptionEnabled"`
	// Encryption password to use. Must be specified when encryption is enabled.
	EncryptionPassword pulumi.StringPtrInput `pulumi:"encryptionPassword"`
	// A `manualSchedule` block as documented below. When this block is present, the schedule type is set to `Manual`. Without this block, the schedule type is set to `Automated`.
	ManualSchedule VirtualMachineAutoBackupManualSchedulePtrInput `pulumi:"manualSchedule"`
	// Retention period of backups, in days. Valid values are from `1` to `30`.
	RetentionPeriodInDays pulumi.IntInput `pulumi:"retentionPeriodInDays"`
	// Access key for the storage account where backups will be kept.
	StorageAccountAccessKey pulumi.StringInput `pulumi:"storageAccountAccessKey"`
	// Blob endpoint for the storage account where backups will be kept.
	StorageBlobEndpoint pulumi.StringInput `pulumi:"storageBlobEndpoint"`
	// Include or exclude system databases from auto backup.
	SystemDatabasesBackupEnabled pulumi.BoolPtrInput `pulumi:"systemDatabasesBackupEnabled"`
}

func (VirtualMachineAutoBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineAutoBackup)(nil)).Elem()
}

func (i VirtualMachineAutoBackupArgs) ToVirtualMachineAutoBackupOutput() VirtualMachineAutoBackupOutput {
	return i.ToVirtualMachineAutoBackupOutputWithContext(context.Background())
}

func (i VirtualMachineAutoBackupArgs) ToVirtualMachineAutoBackupOutputWithContext(ctx context.Context) VirtualMachineAutoBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAutoBackupOutput)
}

func (i VirtualMachineAutoBackupArgs) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineAutoBackup] {
	return pulumix.Output[VirtualMachineAutoBackup]{
		OutputState: i.ToVirtualMachineAutoBackupOutputWithContext(ctx).OutputState,
	}
}

func (i VirtualMachineAutoBackupArgs) ToVirtualMachineAutoBackupPtrOutput() VirtualMachineAutoBackupPtrOutput {
	return i.ToVirtualMachineAutoBackupPtrOutputWithContext(context.Background())
}

func (i VirtualMachineAutoBackupArgs) ToVirtualMachineAutoBackupPtrOutputWithContext(ctx context.Context) VirtualMachineAutoBackupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAutoBackupOutput).ToVirtualMachineAutoBackupPtrOutputWithContext(ctx)
}

// VirtualMachineAutoBackupPtrInput is an input type that accepts VirtualMachineAutoBackupArgs, VirtualMachineAutoBackupPtr and VirtualMachineAutoBackupPtrOutput values.
// You can construct a concrete instance of `VirtualMachineAutoBackupPtrInput` via:
//
//	        VirtualMachineAutoBackupArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineAutoBackupPtrInput interface {
	pulumi.Input

	ToVirtualMachineAutoBackupPtrOutput() VirtualMachineAutoBackupPtrOutput
	ToVirtualMachineAutoBackupPtrOutputWithContext(context.Context) VirtualMachineAutoBackupPtrOutput
}

type virtualMachineAutoBackupPtrType VirtualMachineAutoBackupArgs

func VirtualMachineAutoBackupPtr(v *VirtualMachineAutoBackupArgs) VirtualMachineAutoBackupPtrInput {
	return (*virtualMachineAutoBackupPtrType)(v)
}

func (*virtualMachineAutoBackupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineAutoBackup)(nil)).Elem()
}

func (i *virtualMachineAutoBackupPtrType) ToVirtualMachineAutoBackupPtrOutput() VirtualMachineAutoBackupPtrOutput {
	return i.ToVirtualMachineAutoBackupPtrOutputWithContext(context.Background())
}

func (i *virtualMachineAutoBackupPtrType) ToVirtualMachineAutoBackupPtrOutputWithContext(ctx context.Context) VirtualMachineAutoBackupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAutoBackupPtrOutput)
}

func (i *virtualMachineAutoBackupPtrType) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineAutoBackup] {
	return pulumix.Output[*VirtualMachineAutoBackup]{
		OutputState: i.ToVirtualMachineAutoBackupPtrOutputWithContext(ctx).OutputState,
	}
}

type VirtualMachineAutoBackupOutput struct{ *pulumi.OutputState }

func (VirtualMachineAutoBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineAutoBackup)(nil)).Elem()
}

func (o VirtualMachineAutoBackupOutput) ToVirtualMachineAutoBackupOutput() VirtualMachineAutoBackupOutput {
	return o
}

func (o VirtualMachineAutoBackupOutput) ToVirtualMachineAutoBackupOutputWithContext(ctx context.Context) VirtualMachineAutoBackupOutput {
	return o
}

func (o VirtualMachineAutoBackupOutput) ToVirtualMachineAutoBackupPtrOutput() VirtualMachineAutoBackupPtrOutput {
	return o.ToVirtualMachineAutoBackupPtrOutputWithContext(context.Background())
}

func (o VirtualMachineAutoBackupOutput) ToVirtualMachineAutoBackupPtrOutputWithContext(ctx context.Context) VirtualMachineAutoBackupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineAutoBackup) *VirtualMachineAutoBackup {
		return &v
	}).(VirtualMachineAutoBackupPtrOutput)
}

func (o VirtualMachineAutoBackupOutput) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineAutoBackup] {
	return pulumix.Output[VirtualMachineAutoBackup]{
		OutputState: o.OutputState,
	}
}

// Enable or disable encryption for backups. Defaults to `false`.
func (o VirtualMachineAutoBackupOutput) EncryptionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineAutoBackup) *bool { return v.EncryptionEnabled }).(pulumi.BoolPtrOutput)
}

// Encryption password to use. Must be specified when encryption is enabled.
func (o VirtualMachineAutoBackupOutput) EncryptionPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineAutoBackup) *string { return v.EncryptionPassword }).(pulumi.StringPtrOutput)
}

// A `manualSchedule` block as documented below. When this block is present, the schedule type is set to `Manual`. Without this block, the schedule type is set to `Automated`.
func (o VirtualMachineAutoBackupOutput) ManualSchedule() VirtualMachineAutoBackupManualSchedulePtrOutput {
	return o.ApplyT(func(v VirtualMachineAutoBackup) *VirtualMachineAutoBackupManualSchedule { return v.ManualSchedule }).(VirtualMachineAutoBackupManualSchedulePtrOutput)
}

// Retention period of backups, in days. Valid values are from `1` to `30`.
func (o VirtualMachineAutoBackupOutput) RetentionPeriodInDays() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualMachineAutoBackup) int { return v.RetentionPeriodInDays }).(pulumi.IntOutput)
}

// Access key for the storage account where backups will be kept.
func (o VirtualMachineAutoBackupOutput) StorageAccountAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineAutoBackup) string { return v.StorageAccountAccessKey }).(pulumi.StringOutput)
}

// Blob endpoint for the storage account where backups will be kept.
func (o VirtualMachineAutoBackupOutput) StorageBlobEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineAutoBackup) string { return v.StorageBlobEndpoint }).(pulumi.StringOutput)
}

// Include or exclude system databases from auto backup.
func (o VirtualMachineAutoBackupOutput) SystemDatabasesBackupEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineAutoBackup) *bool { return v.SystemDatabasesBackupEnabled }).(pulumi.BoolPtrOutput)
}

type VirtualMachineAutoBackupPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineAutoBackupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineAutoBackup)(nil)).Elem()
}

func (o VirtualMachineAutoBackupPtrOutput) ToVirtualMachineAutoBackupPtrOutput() VirtualMachineAutoBackupPtrOutput {
	return o
}

func (o VirtualMachineAutoBackupPtrOutput) ToVirtualMachineAutoBackupPtrOutputWithContext(ctx context.Context) VirtualMachineAutoBackupPtrOutput {
	return o
}

func (o VirtualMachineAutoBackupPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineAutoBackup] {
	return pulumix.Output[*VirtualMachineAutoBackup]{
		OutputState: o.OutputState,
	}
}

func (o VirtualMachineAutoBackupPtrOutput) Elem() VirtualMachineAutoBackupOutput {
	return o.ApplyT(func(v *VirtualMachineAutoBackup) VirtualMachineAutoBackup {
		if v != nil {
			return *v
		}
		var ret VirtualMachineAutoBackup
		return ret
	}).(VirtualMachineAutoBackupOutput)
}

// Enable or disable encryption for backups. Defaults to `false`.
func (o VirtualMachineAutoBackupPtrOutput) EncryptionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAutoBackup) *bool {
		if v == nil {
			return nil
		}
		return v.EncryptionEnabled
	}).(pulumi.BoolPtrOutput)
}

// Encryption password to use. Must be specified when encryption is enabled.
func (o VirtualMachineAutoBackupPtrOutput) EncryptionPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAutoBackup) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionPassword
	}).(pulumi.StringPtrOutput)
}

// A `manualSchedule` block as documented below. When this block is present, the schedule type is set to `Manual`. Without this block, the schedule type is set to `Automated`.
func (o VirtualMachineAutoBackupPtrOutput) ManualSchedule() VirtualMachineAutoBackupManualSchedulePtrOutput {
	return o.ApplyT(func(v *VirtualMachineAutoBackup) *VirtualMachineAutoBackupManualSchedule {
		if v == nil {
			return nil
		}
		return v.ManualSchedule
	}).(VirtualMachineAutoBackupManualSchedulePtrOutput)
}

// Retention period of backups, in days. Valid values are from `1` to `30`.
func (o VirtualMachineAutoBackupPtrOutput) RetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAutoBackup) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// Access key for the storage account where backups will be kept.
func (o VirtualMachineAutoBackupPtrOutput) StorageAccountAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAutoBackup) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountAccessKey
	}).(pulumi.StringPtrOutput)
}

// Blob endpoint for the storage account where backups will be kept.
func (o VirtualMachineAutoBackupPtrOutput) StorageBlobEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAutoBackup) *string {
		if v == nil {
			return nil
		}
		return &v.StorageBlobEndpoint
	}).(pulumi.StringPtrOutput)
}

// Include or exclude system databases from auto backup.
func (o VirtualMachineAutoBackupPtrOutput) SystemDatabasesBackupEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAutoBackup) *bool {
		if v == nil {
			return nil
		}
		return v.SystemDatabasesBackupEnabled
	}).(pulumi.BoolPtrOutput)
}

type VirtualMachineAutoBackupManualSchedule struct {
	// A list of days on which backup can take place. Possible values are `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday` and `Sunday`
	//
	// > **NOTE:** `daysOfWeek` can only be specified when `manualSchedule` is set to `Weekly`
	DaysOfWeeks []string `pulumi:"daysOfWeeks"`
	// Frequency of full backups. Valid values include `Daily` or `Weekly`.
	FullBackupFrequency string `pulumi:"fullBackupFrequency"`
	// Start hour of a given day during which full backups can take place. Valid values are from `0` to `23`.
	FullBackupStartHour int `pulumi:"fullBackupStartHour"`
	// Duration of the time window of a given day during which full backups can take place, in hours. Valid values are between `1` and `23`.
	FullBackupWindowInHours int `pulumi:"fullBackupWindowInHours"`
	// Frequency of log backups, in minutes. Valid values are from `5` to `60`.
	LogBackupFrequencyInMinutes int `pulumi:"logBackupFrequencyInMinutes"`
}

// VirtualMachineAutoBackupManualScheduleInput is an input type that accepts VirtualMachineAutoBackupManualScheduleArgs and VirtualMachineAutoBackupManualScheduleOutput values.
// You can construct a concrete instance of `VirtualMachineAutoBackupManualScheduleInput` via:
//
//	VirtualMachineAutoBackupManualScheduleArgs{...}
type VirtualMachineAutoBackupManualScheduleInput interface {
	pulumi.Input

	ToVirtualMachineAutoBackupManualScheduleOutput() VirtualMachineAutoBackupManualScheduleOutput
	ToVirtualMachineAutoBackupManualScheduleOutputWithContext(context.Context) VirtualMachineAutoBackupManualScheduleOutput
}

type VirtualMachineAutoBackupManualScheduleArgs struct {
	// A list of days on which backup can take place. Possible values are `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday` and `Sunday`
	//
	// > **NOTE:** `daysOfWeek` can only be specified when `manualSchedule` is set to `Weekly`
	DaysOfWeeks pulumi.StringArrayInput `pulumi:"daysOfWeeks"`
	// Frequency of full backups. Valid values include `Daily` or `Weekly`.
	FullBackupFrequency pulumi.StringInput `pulumi:"fullBackupFrequency"`
	// Start hour of a given day during which full backups can take place. Valid values are from `0` to `23`.
	FullBackupStartHour pulumi.IntInput `pulumi:"fullBackupStartHour"`
	// Duration of the time window of a given day during which full backups can take place, in hours. Valid values are between `1` and `23`.
	FullBackupWindowInHours pulumi.IntInput `pulumi:"fullBackupWindowInHours"`
	// Frequency of log backups, in minutes. Valid values are from `5` to `60`.
	LogBackupFrequencyInMinutes pulumi.IntInput `pulumi:"logBackupFrequencyInMinutes"`
}

func (VirtualMachineAutoBackupManualScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineAutoBackupManualSchedule)(nil)).Elem()
}

func (i VirtualMachineAutoBackupManualScheduleArgs) ToVirtualMachineAutoBackupManualScheduleOutput() VirtualMachineAutoBackupManualScheduleOutput {
	return i.ToVirtualMachineAutoBackupManualScheduleOutputWithContext(context.Background())
}

func (i VirtualMachineAutoBackupManualScheduleArgs) ToVirtualMachineAutoBackupManualScheduleOutputWithContext(ctx context.Context) VirtualMachineAutoBackupManualScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAutoBackupManualScheduleOutput)
}

func (i VirtualMachineAutoBackupManualScheduleArgs) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineAutoBackupManualSchedule] {
	return pulumix.Output[VirtualMachineAutoBackupManualSchedule]{
		OutputState: i.ToVirtualMachineAutoBackupManualScheduleOutputWithContext(ctx).OutputState,
	}
}

func (i VirtualMachineAutoBackupManualScheduleArgs) ToVirtualMachineAutoBackupManualSchedulePtrOutput() VirtualMachineAutoBackupManualSchedulePtrOutput {
	return i.ToVirtualMachineAutoBackupManualSchedulePtrOutputWithContext(context.Background())
}

func (i VirtualMachineAutoBackupManualScheduleArgs) ToVirtualMachineAutoBackupManualSchedulePtrOutputWithContext(ctx context.Context) VirtualMachineAutoBackupManualSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAutoBackupManualScheduleOutput).ToVirtualMachineAutoBackupManualSchedulePtrOutputWithContext(ctx)
}

// VirtualMachineAutoBackupManualSchedulePtrInput is an input type that accepts VirtualMachineAutoBackupManualScheduleArgs, VirtualMachineAutoBackupManualSchedulePtr and VirtualMachineAutoBackupManualSchedulePtrOutput values.
// You can construct a concrete instance of `VirtualMachineAutoBackupManualSchedulePtrInput` via:
//
//	        VirtualMachineAutoBackupManualScheduleArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineAutoBackupManualSchedulePtrInput interface {
	pulumi.Input

	ToVirtualMachineAutoBackupManualSchedulePtrOutput() VirtualMachineAutoBackupManualSchedulePtrOutput
	ToVirtualMachineAutoBackupManualSchedulePtrOutputWithContext(context.Context) VirtualMachineAutoBackupManualSchedulePtrOutput
}

type virtualMachineAutoBackupManualSchedulePtrType VirtualMachineAutoBackupManualScheduleArgs

func VirtualMachineAutoBackupManualSchedulePtr(v *VirtualMachineAutoBackupManualScheduleArgs) VirtualMachineAutoBackupManualSchedulePtrInput {
	return (*virtualMachineAutoBackupManualSchedulePtrType)(v)
}

func (*virtualMachineAutoBackupManualSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineAutoBackupManualSchedule)(nil)).Elem()
}

func (i *virtualMachineAutoBackupManualSchedulePtrType) ToVirtualMachineAutoBackupManualSchedulePtrOutput() VirtualMachineAutoBackupManualSchedulePtrOutput {
	return i.ToVirtualMachineAutoBackupManualSchedulePtrOutputWithContext(context.Background())
}

func (i *virtualMachineAutoBackupManualSchedulePtrType) ToVirtualMachineAutoBackupManualSchedulePtrOutputWithContext(ctx context.Context) VirtualMachineAutoBackupManualSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAutoBackupManualSchedulePtrOutput)
}

func (i *virtualMachineAutoBackupManualSchedulePtrType) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineAutoBackupManualSchedule] {
	return pulumix.Output[*VirtualMachineAutoBackupManualSchedule]{
		OutputState: i.ToVirtualMachineAutoBackupManualSchedulePtrOutputWithContext(ctx).OutputState,
	}
}

type VirtualMachineAutoBackupManualScheduleOutput struct{ *pulumi.OutputState }

func (VirtualMachineAutoBackupManualScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineAutoBackupManualSchedule)(nil)).Elem()
}

func (o VirtualMachineAutoBackupManualScheduleOutput) ToVirtualMachineAutoBackupManualScheduleOutput() VirtualMachineAutoBackupManualScheduleOutput {
	return o
}

func (o VirtualMachineAutoBackupManualScheduleOutput) ToVirtualMachineAutoBackupManualScheduleOutputWithContext(ctx context.Context) VirtualMachineAutoBackupManualScheduleOutput {
	return o
}

func (o VirtualMachineAutoBackupManualScheduleOutput) ToVirtualMachineAutoBackupManualSchedulePtrOutput() VirtualMachineAutoBackupManualSchedulePtrOutput {
	return o.ToVirtualMachineAutoBackupManualSchedulePtrOutputWithContext(context.Background())
}

func (o VirtualMachineAutoBackupManualScheduleOutput) ToVirtualMachineAutoBackupManualSchedulePtrOutputWithContext(ctx context.Context) VirtualMachineAutoBackupManualSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineAutoBackupManualSchedule) *VirtualMachineAutoBackupManualSchedule {
		return &v
	}).(VirtualMachineAutoBackupManualSchedulePtrOutput)
}

func (o VirtualMachineAutoBackupManualScheduleOutput) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineAutoBackupManualSchedule] {
	return pulumix.Output[VirtualMachineAutoBackupManualSchedule]{
		OutputState: o.OutputState,
	}
}

// A list of days on which backup can take place. Possible values are `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday` and `Sunday`
//
// > **NOTE:** `daysOfWeek` can only be specified when `manualSchedule` is set to `Weekly`
func (o VirtualMachineAutoBackupManualScheduleOutput) DaysOfWeeks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualMachineAutoBackupManualSchedule) []string { return v.DaysOfWeeks }).(pulumi.StringArrayOutput)
}

// Frequency of full backups. Valid values include `Daily` or `Weekly`.
func (o VirtualMachineAutoBackupManualScheduleOutput) FullBackupFrequency() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineAutoBackupManualSchedule) string { return v.FullBackupFrequency }).(pulumi.StringOutput)
}

// Start hour of a given day during which full backups can take place. Valid values are from `0` to `23`.
func (o VirtualMachineAutoBackupManualScheduleOutput) FullBackupStartHour() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualMachineAutoBackupManualSchedule) int { return v.FullBackupStartHour }).(pulumi.IntOutput)
}

// Duration of the time window of a given day during which full backups can take place, in hours. Valid values are between `1` and `23`.
func (o VirtualMachineAutoBackupManualScheduleOutput) FullBackupWindowInHours() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualMachineAutoBackupManualSchedule) int { return v.FullBackupWindowInHours }).(pulumi.IntOutput)
}

// Frequency of log backups, in minutes. Valid values are from `5` to `60`.
func (o VirtualMachineAutoBackupManualScheduleOutput) LogBackupFrequencyInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualMachineAutoBackupManualSchedule) int { return v.LogBackupFrequencyInMinutes }).(pulumi.IntOutput)
}

type VirtualMachineAutoBackupManualSchedulePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineAutoBackupManualSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineAutoBackupManualSchedule)(nil)).Elem()
}

func (o VirtualMachineAutoBackupManualSchedulePtrOutput) ToVirtualMachineAutoBackupManualSchedulePtrOutput() VirtualMachineAutoBackupManualSchedulePtrOutput {
	return o
}

func (o VirtualMachineAutoBackupManualSchedulePtrOutput) ToVirtualMachineAutoBackupManualSchedulePtrOutputWithContext(ctx context.Context) VirtualMachineAutoBackupManualSchedulePtrOutput {
	return o
}

func (o VirtualMachineAutoBackupManualSchedulePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineAutoBackupManualSchedule] {
	return pulumix.Output[*VirtualMachineAutoBackupManualSchedule]{
		OutputState: o.OutputState,
	}
}

func (o VirtualMachineAutoBackupManualSchedulePtrOutput) Elem() VirtualMachineAutoBackupManualScheduleOutput {
	return o.ApplyT(func(v *VirtualMachineAutoBackupManualSchedule) VirtualMachineAutoBackupManualSchedule {
		if v != nil {
			return *v
		}
		var ret VirtualMachineAutoBackupManualSchedule
		return ret
	}).(VirtualMachineAutoBackupManualScheduleOutput)
}

// A list of days on which backup can take place. Possible values are `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday` and `Sunday`
//
// > **NOTE:** `daysOfWeek` can only be specified when `manualSchedule` is set to `Weekly`
func (o VirtualMachineAutoBackupManualSchedulePtrOutput) DaysOfWeeks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualMachineAutoBackupManualSchedule) []string {
		if v == nil {
			return nil
		}
		return v.DaysOfWeeks
	}).(pulumi.StringArrayOutput)
}

// Frequency of full backups. Valid values include `Daily` or `Weekly`.
func (o VirtualMachineAutoBackupManualSchedulePtrOutput) FullBackupFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAutoBackupManualSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.FullBackupFrequency
	}).(pulumi.StringPtrOutput)
}

// Start hour of a given day during which full backups can take place. Valid values are from `0` to `23`.
func (o VirtualMachineAutoBackupManualSchedulePtrOutput) FullBackupStartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAutoBackupManualSchedule) *int {
		if v == nil {
			return nil
		}
		return &v.FullBackupStartHour
	}).(pulumi.IntPtrOutput)
}

// Duration of the time window of a given day during which full backups can take place, in hours. Valid values are between `1` and `23`.
func (o VirtualMachineAutoBackupManualSchedulePtrOutput) FullBackupWindowInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAutoBackupManualSchedule) *int {
		if v == nil {
			return nil
		}
		return &v.FullBackupWindowInHours
	}).(pulumi.IntPtrOutput)
}

// Frequency of log backups, in minutes. Valid values are from `5` to `60`.
func (o VirtualMachineAutoBackupManualSchedulePtrOutput) LogBackupFrequencyInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAutoBackupManualSchedule) *int {
		if v == nil {
			return nil
		}
		return &v.LogBackupFrequencyInMinutes
	}).(pulumi.IntPtrOutput)
}

type VirtualMachineAutoPatching struct {
	// The day of week to apply the patch on. Possible values are `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday` and `Sunday`.
	DayOfWeek string `pulumi:"dayOfWeek"`
	// The size of the Maintenance Window in minutes.
	MaintenanceWindowDurationInMinutes int `pulumi:"maintenanceWindowDurationInMinutes"`
	// The Hour, in the Virtual Machine Time-Zone when the patching maintenance window should begin.
	MaintenanceWindowStartingHour int `pulumi:"maintenanceWindowStartingHour"`
}

// VirtualMachineAutoPatchingInput is an input type that accepts VirtualMachineAutoPatchingArgs and VirtualMachineAutoPatchingOutput values.
// You can construct a concrete instance of `VirtualMachineAutoPatchingInput` via:
//
//	VirtualMachineAutoPatchingArgs{...}
type VirtualMachineAutoPatchingInput interface {
	pulumi.Input

	ToVirtualMachineAutoPatchingOutput() VirtualMachineAutoPatchingOutput
	ToVirtualMachineAutoPatchingOutputWithContext(context.Context) VirtualMachineAutoPatchingOutput
}

type VirtualMachineAutoPatchingArgs struct {
	// The day of week to apply the patch on. Possible values are `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday` and `Sunday`.
	DayOfWeek pulumi.StringInput `pulumi:"dayOfWeek"`
	// The size of the Maintenance Window in minutes.
	MaintenanceWindowDurationInMinutes pulumi.IntInput `pulumi:"maintenanceWindowDurationInMinutes"`
	// The Hour, in the Virtual Machine Time-Zone when the patching maintenance window should begin.
	MaintenanceWindowStartingHour pulumi.IntInput `pulumi:"maintenanceWindowStartingHour"`
}

func (VirtualMachineAutoPatchingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineAutoPatching)(nil)).Elem()
}

func (i VirtualMachineAutoPatchingArgs) ToVirtualMachineAutoPatchingOutput() VirtualMachineAutoPatchingOutput {
	return i.ToVirtualMachineAutoPatchingOutputWithContext(context.Background())
}

func (i VirtualMachineAutoPatchingArgs) ToVirtualMachineAutoPatchingOutputWithContext(ctx context.Context) VirtualMachineAutoPatchingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAutoPatchingOutput)
}

func (i VirtualMachineAutoPatchingArgs) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineAutoPatching] {
	return pulumix.Output[VirtualMachineAutoPatching]{
		OutputState: i.ToVirtualMachineAutoPatchingOutputWithContext(ctx).OutputState,
	}
}

func (i VirtualMachineAutoPatchingArgs) ToVirtualMachineAutoPatchingPtrOutput() VirtualMachineAutoPatchingPtrOutput {
	return i.ToVirtualMachineAutoPatchingPtrOutputWithContext(context.Background())
}

func (i VirtualMachineAutoPatchingArgs) ToVirtualMachineAutoPatchingPtrOutputWithContext(ctx context.Context) VirtualMachineAutoPatchingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAutoPatchingOutput).ToVirtualMachineAutoPatchingPtrOutputWithContext(ctx)
}

// VirtualMachineAutoPatchingPtrInput is an input type that accepts VirtualMachineAutoPatchingArgs, VirtualMachineAutoPatchingPtr and VirtualMachineAutoPatchingPtrOutput values.
// You can construct a concrete instance of `VirtualMachineAutoPatchingPtrInput` via:
//
//	        VirtualMachineAutoPatchingArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineAutoPatchingPtrInput interface {
	pulumi.Input

	ToVirtualMachineAutoPatchingPtrOutput() VirtualMachineAutoPatchingPtrOutput
	ToVirtualMachineAutoPatchingPtrOutputWithContext(context.Context) VirtualMachineAutoPatchingPtrOutput
}

type virtualMachineAutoPatchingPtrType VirtualMachineAutoPatchingArgs

func VirtualMachineAutoPatchingPtr(v *VirtualMachineAutoPatchingArgs) VirtualMachineAutoPatchingPtrInput {
	return (*virtualMachineAutoPatchingPtrType)(v)
}

func (*virtualMachineAutoPatchingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineAutoPatching)(nil)).Elem()
}

func (i *virtualMachineAutoPatchingPtrType) ToVirtualMachineAutoPatchingPtrOutput() VirtualMachineAutoPatchingPtrOutput {
	return i.ToVirtualMachineAutoPatchingPtrOutputWithContext(context.Background())
}

func (i *virtualMachineAutoPatchingPtrType) ToVirtualMachineAutoPatchingPtrOutputWithContext(ctx context.Context) VirtualMachineAutoPatchingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAutoPatchingPtrOutput)
}

func (i *virtualMachineAutoPatchingPtrType) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineAutoPatching] {
	return pulumix.Output[*VirtualMachineAutoPatching]{
		OutputState: i.ToVirtualMachineAutoPatchingPtrOutputWithContext(ctx).OutputState,
	}
}

type VirtualMachineAutoPatchingOutput struct{ *pulumi.OutputState }

func (VirtualMachineAutoPatchingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineAutoPatching)(nil)).Elem()
}

func (o VirtualMachineAutoPatchingOutput) ToVirtualMachineAutoPatchingOutput() VirtualMachineAutoPatchingOutput {
	return o
}

func (o VirtualMachineAutoPatchingOutput) ToVirtualMachineAutoPatchingOutputWithContext(ctx context.Context) VirtualMachineAutoPatchingOutput {
	return o
}

func (o VirtualMachineAutoPatchingOutput) ToVirtualMachineAutoPatchingPtrOutput() VirtualMachineAutoPatchingPtrOutput {
	return o.ToVirtualMachineAutoPatchingPtrOutputWithContext(context.Background())
}

func (o VirtualMachineAutoPatchingOutput) ToVirtualMachineAutoPatchingPtrOutputWithContext(ctx context.Context) VirtualMachineAutoPatchingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineAutoPatching) *VirtualMachineAutoPatching {
		return &v
	}).(VirtualMachineAutoPatchingPtrOutput)
}

func (o VirtualMachineAutoPatchingOutput) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineAutoPatching] {
	return pulumix.Output[VirtualMachineAutoPatching]{
		OutputState: o.OutputState,
	}
}

// The day of week to apply the patch on. Possible values are `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday` and `Sunday`.
func (o VirtualMachineAutoPatchingOutput) DayOfWeek() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineAutoPatching) string { return v.DayOfWeek }).(pulumi.StringOutput)
}

// The size of the Maintenance Window in minutes.
func (o VirtualMachineAutoPatchingOutput) MaintenanceWindowDurationInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualMachineAutoPatching) int { return v.MaintenanceWindowDurationInMinutes }).(pulumi.IntOutput)
}

// The Hour, in the Virtual Machine Time-Zone when the patching maintenance window should begin.
func (o VirtualMachineAutoPatchingOutput) MaintenanceWindowStartingHour() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualMachineAutoPatching) int { return v.MaintenanceWindowStartingHour }).(pulumi.IntOutput)
}

type VirtualMachineAutoPatchingPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineAutoPatchingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineAutoPatching)(nil)).Elem()
}

func (o VirtualMachineAutoPatchingPtrOutput) ToVirtualMachineAutoPatchingPtrOutput() VirtualMachineAutoPatchingPtrOutput {
	return o
}

func (o VirtualMachineAutoPatchingPtrOutput) ToVirtualMachineAutoPatchingPtrOutputWithContext(ctx context.Context) VirtualMachineAutoPatchingPtrOutput {
	return o
}

func (o VirtualMachineAutoPatchingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineAutoPatching] {
	return pulumix.Output[*VirtualMachineAutoPatching]{
		OutputState: o.OutputState,
	}
}

func (o VirtualMachineAutoPatchingPtrOutput) Elem() VirtualMachineAutoPatchingOutput {
	return o.ApplyT(func(v *VirtualMachineAutoPatching) VirtualMachineAutoPatching {
		if v != nil {
			return *v
		}
		var ret VirtualMachineAutoPatching
		return ret
	}).(VirtualMachineAutoPatchingOutput)
}

// The day of week to apply the patch on. Possible values are `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday` and `Sunday`.
func (o VirtualMachineAutoPatchingPtrOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAutoPatching) *string {
		if v == nil {
			return nil
		}
		return &v.DayOfWeek
	}).(pulumi.StringPtrOutput)
}

// The size of the Maintenance Window in minutes.
func (o VirtualMachineAutoPatchingPtrOutput) MaintenanceWindowDurationInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAutoPatching) *int {
		if v == nil {
			return nil
		}
		return &v.MaintenanceWindowDurationInMinutes
	}).(pulumi.IntPtrOutput)
}

// The Hour, in the Virtual Machine Time-Zone when the patching maintenance window should begin.
func (o VirtualMachineAutoPatchingPtrOutput) MaintenanceWindowStartingHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAutoPatching) *int {
		if v == nil {
			return nil
		}
		return &v.MaintenanceWindowStartingHour
	}).(pulumi.IntPtrOutput)
}

type VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration struct {
	// The ID of the Load Balancer. Changing this forces a new resource to be created.
	LoadBalancerId string `pulumi:"loadBalancerId"`
	// The private IP Address of the listener. Changing this forces a new resource to be created.
	PrivateIpAddress string `pulumi:"privateIpAddress"`
	// The probe port of the listener. Changing this forces a new resource to be created.
	ProbePort int `pulumi:"probePort"`
	// Specifies a list of SQL Virtual Machine IDs. Changing this forces a new resource to be created.
	SqlVirtualMachineIds []string `pulumi:"sqlVirtualMachineIds"`
	// The ID of the Subnet to create the listener. Changing this forces a new resource to be created.
	//
	// > **NOTE:** `sqlVirtualMachineIds` should match with the SQL Virtual Machines specified in `replica`.
	SubnetId string `pulumi:"subnetId"`
}

// VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationInput is an input type that accepts VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs and VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutput values.
// You can construct a concrete instance of `VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationInput` via:
//
//	VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs{...}
type VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationInput interface {
	pulumi.Input

	ToVirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutput() VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutput
	ToVirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutputWithContext(context.Context) VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutput
}

type VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs struct {
	// The ID of the Load Balancer. Changing this forces a new resource to be created.
	LoadBalancerId pulumi.StringInput `pulumi:"loadBalancerId"`
	// The private IP Address of the listener. Changing this forces a new resource to be created.
	PrivateIpAddress pulumi.StringInput `pulumi:"privateIpAddress"`
	// The probe port of the listener. Changing this forces a new resource to be created.
	ProbePort pulumi.IntInput `pulumi:"probePort"`
	// Specifies a list of SQL Virtual Machine IDs. Changing this forces a new resource to be created.
	SqlVirtualMachineIds pulumi.StringArrayInput `pulumi:"sqlVirtualMachineIds"`
	// The ID of the Subnet to create the listener. Changing this forces a new resource to be created.
	//
	// > **NOTE:** `sqlVirtualMachineIds` should match with the SQL Virtual Machines specified in `replica`.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration)(nil)).Elem()
}

func (i VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs) ToVirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutput() VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutput {
	return i.ToVirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutputWithContext(context.Background())
}

func (i VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs) ToVirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutputWithContext(ctx context.Context) VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutput)
}

func (i VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration] {
	return pulumix.Output[VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration]{
		OutputState: i.ToVirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs) ToVirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput() VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput {
	return i.ToVirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutputWithContext(context.Background())
}

func (i VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs) ToVirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutputWithContext(ctx context.Context) VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutput).ToVirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutputWithContext(ctx)
}

// VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrInput is an input type that accepts VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs, VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtr and VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput values.
// You can construct a concrete instance of `VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrInput` via:
//
//	        VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrInput interface {
	pulumi.Input

	ToVirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput() VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput
	ToVirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutputWithContext(context.Context) VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput
}

type virtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrType VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs

func VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtr(v *VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs) VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrInput {
	return (*virtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrType)(v)
}

func (*virtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration)(nil)).Elem()
}

func (i *virtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrType) ToVirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput() VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput {
	return i.ToVirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutputWithContext(context.Background())
}

func (i *virtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrType) ToVirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutputWithContext(ctx context.Context) VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput)
}

func (i *virtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration] {
	return pulumix.Output[*VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration]{
		OutputState: i.ToVirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutput struct{ *pulumi.OutputState }

func (VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration)(nil)).Elem()
}

func (o VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutput) ToVirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutput() VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutput {
	return o
}

func (o VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutput) ToVirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutputWithContext(ctx context.Context) VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutput {
	return o
}

func (o VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutput) ToVirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput() VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput {
	return o.ToVirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutputWithContext(context.Background())
}

func (o VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutput) ToVirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutputWithContext(ctx context.Context) VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration) *VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration {
		return &v
	}).(VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput)
}

func (o VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration] {
	return pulumix.Output[VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration]{
		OutputState: o.OutputState,
	}
}

// The ID of the Load Balancer. Changing this forces a new resource to be created.
func (o VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutput) LoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration) string {
		return v.LoadBalancerId
	}).(pulumi.StringOutput)
}

// The private IP Address of the listener. Changing this forces a new resource to be created.
func (o VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration) string {
		return v.PrivateIpAddress
	}).(pulumi.StringOutput)
}

// The probe port of the listener. Changing this forces a new resource to be created.
func (o VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutput) ProbePort() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration) int { return v.ProbePort }).(pulumi.IntOutput)
}

// Specifies a list of SQL Virtual Machine IDs. Changing this forces a new resource to be created.
func (o VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutput) SqlVirtualMachineIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration) []string {
		return v.SqlVirtualMachineIds
	}).(pulumi.StringArrayOutput)
}

// The ID of the Subnet to create the listener. Changing this forces a new resource to be created.
//
// > **NOTE:** `sqlVirtualMachineIds` should match with the SQL Virtual Machines specified in `replica`.
func (o VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration) string { return v.SubnetId }).(pulumi.StringOutput)
}

type VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration)(nil)).Elem()
}

func (o VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput) ToVirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput() VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput {
	return o
}

func (o VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput) ToVirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutputWithContext(ctx context.Context) VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput {
	return o
}

func (o VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration] {
	return pulumix.Output[*VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput) Elem() VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutput {
	return o.ApplyT(func(v *VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration) VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration {
		if v != nil {
			return *v
		}
		var ret VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration
		return ret
	}).(VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutput)
}

// The ID of the Load Balancer. Changing this forces a new resource to be created.
func (o VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput) LoadBalancerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.LoadBalancerId
	}).(pulumi.StringPtrOutput)
}

// The private IP Address of the listener. Changing this forces a new resource to be created.
func (o VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateIpAddress
	}).(pulumi.StringPtrOutput)
}

// The probe port of the listener. Changing this forces a new resource to be created.
func (o VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput) ProbePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.ProbePort
	}).(pulumi.IntPtrOutput)
}

// Specifies a list of SQL Virtual Machine IDs. Changing this forces a new resource to be created.
func (o VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput) SqlVirtualMachineIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.SqlVirtualMachineIds
	}).(pulumi.StringArrayOutput)
}

// The ID of the Subnet to create the listener. Changing this forces a new resource to be created.
//
// > **NOTE:** `sqlVirtualMachineIds` should match with the SQL Virtual Machines specified in `replica`.
func (o VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.SubnetId
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfiguration struct {
	// The private IP Address of the listener. Changing this forces a new resource to be created.
	PrivateIpAddress string `pulumi:"privateIpAddress"`
	// The ID of the Sql Virtual Machine. Changing this forces a new resource to be created.
	SqlVirtualMachineId string `pulumi:"sqlVirtualMachineId"`
	// The ID of the Subnet to create the listener. Changing this forces a new resource to be created.
	//
	// > **NOTE:** `sqlVirtualMachineId` should match with the SQL Virtual Machines specified in `replica`.
	SubnetId string `pulumi:"subnetId"`
}

// VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationInput is an input type that accepts VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArgs and VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationOutput values.
// You can construct a concrete instance of `VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationInput` via:
//
//	VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArgs{...}
type VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationInput interface {
	pulumi.Input

	ToVirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationOutput() VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationOutput
	ToVirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationOutputWithContext(context.Context) VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationOutput
}

type VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArgs struct {
	// The private IP Address of the listener. Changing this forces a new resource to be created.
	PrivateIpAddress pulumi.StringInput `pulumi:"privateIpAddress"`
	// The ID of the Sql Virtual Machine. Changing this forces a new resource to be created.
	SqlVirtualMachineId pulumi.StringInput `pulumi:"sqlVirtualMachineId"`
	// The ID of the Subnet to create the listener. Changing this forces a new resource to be created.
	//
	// > **NOTE:** `sqlVirtualMachineId` should match with the SQL Virtual Machines specified in `replica`.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfiguration)(nil)).Elem()
}

func (i VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArgs) ToVirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationOutput() VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationOutput {
	return i.ToVirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationOutputWithContext(context.Background())
}

func (i VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArgs) ToVirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationOutputWithContext(ctx context.Context) VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationOutput)
}

func (i VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfiguration] {
	return pulumix.Output[VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfiguration]{
		OutputState: i.ToVirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationOutputWithContext(ctx).OutputState,
	}
}

// VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayInput is an input type that accepts VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArray and VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayOutput values.
// You can construct a concrete instance of `VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayInput` via:
//
//	VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArray{ VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArgs{...} }
type VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayInput interface {
	pulumi.Input

	ToVirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayOutput() VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayOutput
	ToVirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayOutputWithContext(context.Context) VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayOutput
}

type VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArray []VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationInput

func (VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfiguration)(nil)).Elem()
}

func (i VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArray) ToVirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayOutput() VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayOutput {
	return i.ToVirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayOutputWithContext(context.Background())
}

func (i VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArray) ToVirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayOutputWithContext(ctx context.Context) VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayOutput)
}

func (i VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArray) ToOutput(ctx context.Context) pulumix.Output[[]VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfiguration] {
	return pulumix.Output[[]VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfiguration]{
		OutputState: i.ToVirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayOutputWithContext(ctx).OutputState,
	}
}

type VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationOutput struct{ *pulumi.OutputState }

func (VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfiguration)(nil)).Elem()
}

func (o VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationOutput) ToVirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationOutput() VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationOutput {
	return o
}

func (o VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationOutput) ToVirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationOutputWithContext(ctx context.Context) VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationOutput {
	return o
}

func (o VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfiguration] {
	return pulumix.Output[VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfiguration]{
		OutputState: o.OutputState,
	}
}

// The private IP Address of the listener. Changing this forces a new resource to be created.
func (o VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfiguration) string {
		return v.PrivateIpAddress
	}).(pulumi.StringOutput)
}

// The ID of the Sql Virtual Machine. Changing this forces a new resource to be created.
func (o VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationOutput) SqlVirtualMachineId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfiguration) string {
		return v.SqlVirtualMachineId
	}).(pulumi.StringOutput)
}

// The ID of the Subnet to create the listener. Changing this forces a new resource to be created.
//
// > **NOTE:** `sqlVirtualMachineId` should match with the SQL Virtual Machines specified in `replica`.
func (o VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfiguration) string { return v.SubnetId }).(pulumi.StringOutput)
}

type VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfiguration)(nil)).Elem()
}

func (o VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayOutput) ToVirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayOutput() VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayOutput {
	return o
}

func (o VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayOutput) ToVirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayOutputWithContext(ctx context.Context) VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayOutput {
	return o
}

func (o VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfiguration] {
	return pulumix.Output[[]VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayOutput) Index(i pulumi.IntInput) VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfiguration {
		return vs[0].([]VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfiguration)[vs[1].(int)]
	}).(VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationOutput)
}

type VirtualMachineAvailabilityGroupListenerReplica struct {
	// The replica commit mode for the availability group. Possible values are `Synchronous_Commit` and `Asynchronous_Commit`. Changing this forces a new resource to be created.
	Commit string `pulumi:"commit"`
	// The replica failover mode for the availability group. Possible values are `Manual` and `Automatic`. Changing this forces a new resource to be created.
	FailoverMode string `pulumi:"failoverMode"`
	// The replica readable secondary mode for the availability group. Possible values are `No`, `Read_Only` and `All`. Changing this forces a new resource to be created.
	ReadableSecondary string `pulumi:"readableSecondary"`
	// The replica role for the availability group. Possible values are `Primary` and `Secondary`. Changing this forces a new resource to be created.
	Role string `pulumi:"role"`
	// The ID of the SQL Virtual Machine. Changing this forces a new resource to be created.
	SqlVirtualMachineId string `pulumi:"sqlVirtualMachineId"`
}

// VirtualMachineAvailabilityGroupListenerReplicaInput is an input type that accepts VirtualMachineAvailabilityGroupListenerReplicaArgs and VirtualMachineAvailabilityGroupListenerReplicaOutput values.
// You can construct a concrete instance of `VirtualMachineAvailabilityGroupListenerReplicaInput` via:
//
//	VirtualMachineAvailabilityGroupListenerReplicaArgs{...}
type VirtualMachineAvailabilityGroupListenerReplicaInput interface {
	pulumi.Input

	ToVirtualMachineAvailabilityGroupListenerReplicaOutput() VirtualMachineAvailabilityGroupListenerReplicaOutput
	ToVirtualMachineAvailabilityGroupListenerReplicaOutputWithContext(context.Context) VirtualMachineAvailabilityGroupListenerReplicaOutput
}

type VirtualMachineAvailabilityGroupListenerReplicaArgs struct {
	// The replica commit mode for the availability group. Possible values are `Synchronous_Commit` and `Asynchronous_Commit`. Changing this forces a new resource to be created.
	Commit pulumi.StringInput `pulumi:"commit"`
	// The replica failover mode for the availability group. Possible values are `Manual` and `Automatic`. Changing this forces a new resource to be created.
	FailoverMode pulumi.StringInput `pulumi:"failoverMode"`
	// The replica readable secondary mode for the availability group. Possible values are `No`, `Read_Only` and `All`. Changing this forces a new resource to be created.
	ReadableSecondary pulumi.StringInput `pulumi:"readableSecondary"`
	// The replica role for the availability group. Possible values are `Primary` and `Secondary`. Changing this forces a new resource to be created.
	Role pulumi.StringInput `pulumi:"role"`
	// The ID of the SQL Virtual Machine. Changing this forces a new resource to be created.
	SqlVirtualMachineId pulumi.StringInput `pulumi:"sqlVirtualMachineId"`
}

func (VirtualMachineAvailabilityGroupListenerReplicaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineAvailabilityGroupListenerReplica)(nil)).Elem()
}

func (i VirtualMachineAvailabilityGroupListenerReplicaArgs) ToVirtualMachineAvailabilityGroupListenerReplicaOutput() VirtualMachineAvailabilityGroupListenerReplicaOutput {
	return i.ToVirtualMachineAvailabilityGroupListenerReplicaOutputWithContext(context.Background())
}

func (i VirtualMachineAvailabilityGroupListenerReplicaArgs) ToVirtualMachineAvailabilityGroupListenerReplicaOutputWithContext(ctx context.Context) VirtualMachineAvailabilityGroupListenerReplicaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAvailabilityGroupListenerReplicaOutput)
}

func (i VirtualMachineAvailabilityGroupListenerReplicaArgs) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineAvailabilityGroupListenerReplica] {
	return pulumix.Output[VirtualMachineAvailabilityGroupListenerReplica]{
		OutputState: i.ToVirtualMachineAvailabilityGroupListenerReplicaOutputWithContext(ctx).OutputState,
	}
}

// VirtualMachineAvailabilityGroupListenerReplicaArrayInput is an input type that accepts VirtualMachineAvailabilityGroupListenerReplicaArray and VirtualMachineAvailabilityGroupListenerReplicaArrayOutput values.
// You can construct a concrete instance of `VirtualMachineAvailabilityGroupListenerReplicaArrayInput` via:
//
//	VirtualMachineAvailabilityGroupListenerReplicaArray{ VirtualMachineAvailabilityGroupListenerReplicaArgs{...} }
type VirtualMachineAvailabilityGroupListenerReplicaArrayInput interface {
	pulumi.Input

	ToVirtualMachineAvailabilityGroupListenerReplicaArrayOutput() VirtualMachineAvailabilityGroupListenerReplicaArrayOutput
	ToVirtualMachineAvailabilityGroupListenerReplicaArrayOutputWithContext(context.Context) VirtualMachineAvailabilityGroupListenerReplicaArrayOutput
}

type VirtualMachineAvailabilityGroupListenerReplicaArray []VirtualMachineAvailabilityGroupListenerReplicaInput

func (VirtualMachineAvailabilityGroupListenerReplicaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineAvailabilityGroupListenerReplica)(nil)).Elem()
}

func (i VirtualMachineAvailabilityGroupListenerReplicaArray) ToVirtualMachineAvailabilityGroupListenerReplicaArrayOutput() VirtualMachineAvailabilityGroupListenerReplicaArrayOutput {
	return i.ToVirtualMachineAvailabilityGroupListenerReplicaArrayOutputWithContext(context.Background())
}

func (i VirtualMachineAvailabilityGroupListenerReplicaArray) ToVirtualMachineAvailabilityGroupListenerReplicaArrayOutputWithContext(ctx context.Context) VirtualMachineAvailabilityGroupListenerReplicaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineAvailabilityGroupListenerReplicaArrayOutput)
}

func (i VirtualMachineAvailabilityGroupListenerReplicaArray) ToOutput(ctx context.Context) pulumix.Output[[]VirtualMachineAvailabilityGroupListenerReplica] {
	return pulumix.Output[[]VirtualMachineAvailabilityGroupListenerReplica]{
		OutputState: i.ToVirtualMachineAvailabilityGroupListenerReplicaArrayOutputWithContext(ctx).OutputState,
	}
}

type VirtualMachineAvailabilityGroupListenerReplicaOutput struct{ *pulumi.OutputState }

func (VirtualMachineAvailabilityGroupListenerReplicaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineAvailabilityGroupListenerReplica)(nil)).Elem()
}

func (o VirtualMachineAvailabilityGroupListenerReplicaOutput) ToVirtualMachineAvailabilityGroupListenerReplicaOutput() VirtualMachineAvailabilityGroupListenerReplicaOutput {
	return o
}

func (o VirtualMachineAvailabilityGroupListenerReplicaOutput) ToVirtualMachineAvailabilityGroupListenerReplicaOutputWithContext(ctx context.Context) VirtualMachineAvailabilityGroupListenerReplicaOutput {
	return o
}

func (o VirtualMachineAvailabilityGroupListenerReplicaOutput) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineAvailabilityGroupListenerReplica] {
	return pulumix.Output[VirtualMachineAvailabilityGroupListenerReplica]{
		OutputState: o.OutputState,
	}
}

// The replica commit mode for the availability group. Possible values are `Synchronous_Commit` and `Asynchronous_Commit`. Changing this forces a new resource to be created.
func (o VirtualMachineAvailabilityGroupListenerReplicaOutput) Commit() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineAvailabilityGroupListenerReplica) string { return v.Commit }).(pulumi.StringOutput)
}

// The replica failover mode for the availability group. Possible values are `Manual` and `Automatic`. Changing this forces a new resource to be created.
func (o VirtualMachineAvailabilityGroupListenerReplicaOutput) FailoverMode() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineAvailabilityGroupListenerReplica) string { return v.FailoverMode }).(pulumi.StringOutput)
}

// The replica readable secondary mode for the availability group. Possible values are `No`, `Read_Only` and `All`. Changing this forces a new resource to be created.
func (o VirtualMachineAvailabilityGroupListenerReplicaOutput) ReadableSecondary() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineAvailabilityGroupListenerReplica) string { return v.ReadableSecondary }).(pulumi.StringOutput)
}

// The replica role for the availability group. Possible values are `Primary` and `Secondary`. Changing this forces a new resource to be created.
func (o VirtualMachineAvailabilityGroupListenerReplicaOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineAvailabilityGroupListenerReplica) string { return v.Role }).(pulumi.StringOutput)
}

// The ID of the SQL Virtual Machine. Changing this forces a new resource to be created.
func (o VirtualMachineAvailabilityGroupListenerReplicaOutput) SqlVirtualMachineId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineAvailabilityGroupListenerReplica) string { return v.SqlVirtualMachineId }).(pulumi.StringOutput)
}

type VirtualMachineAvailabilityGroupListenerReplicaArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineAvailabilityGroupListenerReplicaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineAvailabilityGroupListenerReplica)(nil)).Elem()
}

func (o VirtualMachineAvailabilityGroupListenerReplicaArrayOutput) ToVirtualMachineAvailabilityGroupListenerReplicaArrayOutput() VirtualMachineAvailabilityGroupListenerReplicaArrayOutput {
	return o
}

func (o VirtualMachineAvailabilityGroupListenerReplicaArrayOutput) ToVirtualMachineAvailabilityGroupListenerReplicaArrayOutputWithContext(ctx context.Context) VirtualMachineAvailabilityGroupListenerReplicaArrayOutput {
	return o
}

func (o VirtualMachineAvailabilityGroupListenerReplicaArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]VirtualMachineAvailabilityGroupListenerReplica] {
	return pulumix.Output[[]VirtualMachineAvailabilityGroupListenerReplica]{
		OutputState: o.OutputState,
	}
}

func (o VirtualMachineAvailabilityGroupListenerReplicaArrayOutput) Index(i pulumi.IntInput) VirtualMachineAvailabilityGroupListenerReplicaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineAvailabilityGroupListenerReplica {
		return vs[0].([]VirtualMachineAvailabilityGroupListenerReplica)[vs[1].(int)]
	}).(VirtualMachineAvailabilityGroupListenerReplicaOutput)
}

type VirtualMachineGroupWsfcDomainProfile struct {
	// The account name used for creating cluster. Changing this forces a new resource to be created.
	ClusterBootstrapAccountName *string `pulumi:"clusterBootstrapAccountName"`
	// The account name used for operating cluster. Changing this forces a new resource to be created.
	ClusterOperatorAccountName *string `pulumi:"clusterOperatorAccountName"`
	// The subnet type of the SQL Virtual Machine cluster. Possible values are `MultiSubnet` and `SingleSubnet`. Changing this forces a new resource to be created.
	ClusterSubnetType string `pulumi:"clusterSubnetType"`
	// The fully qualified name of the domain. Changing this forces a new resource to be created.
	Fqdn string `pulumi:"fqdn"`
	// The organizational Unit path in which the nodes and cluster will be present. Changing this forces a new resource to be created.
	OrganizationalUnitPath *string `pulumi:"organizationalUnitPath"`
	// The account name under which SQL service will run on all participating SQL virtual machines in the cluster. Changing this forces a new resource to be created.
	SqlServiceAccountName *string `pulumi:"sqlServiceAccountName"`
	// The primary key of the Storage Account.
	StorageAccountPrimaryKey *string `pulumi:"storageAccountPrimaryKey"`
	// The SAS URL to the Storage Container of the witness storage account. Changing this forces a new resource to be created.
	StorageAccountUrl *string `pulumi:"storageAccountUrl"`
}

// VirtualMachineGroupWsfcDomainProfileInput is an input type that accepts VirtualMachineGroupWsfcDomainProfileArgs and VirtualMachineGroupWsfcDomainProfileOutput values.
// You can construct a concrete instance of `VirtualMachineGroupWsfcDomainProfileInput` via:
//
//	VirtualMachineGroupWsfcDomainProfileArgs{...}
type VirtualMachineGroupWsfcDomainProfileInput interface {
	pulumi.Input

	ToVirtualMachineGroupWsfcDomainProfileOutput() VirtualMachineGroupWsfcDomainProfileOutput
	ToVirtualMachineGroupWsfcDomainProfileOutputWithContext(context.Context) VirtualMachineGroupWsfcDomainProfileOutput
}

type VirtualMachineGroupWsfcDomainProfileArgs struct {
	// The account name used for creating cluster. Changing this forces a new resource to be created.
	ClusterBootstrapAccountName pulumi.StringPtrInput `pulumi:"clusterBootstrapAccountName"`
	// The account name used for operating cluster. Changing this forces a new resource to be created.
	ClusterOperatorAccountName pulumi.StringPtrInput `pulumi:"clusterOperatorAccountName"`
	// The subnet type of the SQL Virtual Machine cluster. Possible values are `MultiSubnet` and `SingleSubnet`. Changing this forces a new resource to be created.
	ClusterSubnetType pulumi.StringInput `pulumi:"clusterSubnetType"`
	// The fully qualified name of the domain. Changing this forces a new resource to be created.
	Fqdn pulumi.StringInput `pulumi:"fqdn"`
	// The organizational Unit path in which the nodes and cluster will be present. Changing this forces a new resource to be created.
	OrganizationalUnitPath pulumi.StringPtrInput `pulumi:"organizationalUnitPath"`
	// The account name under which SQL service will run on all participating SQL virtual machines in the cluster. Changing this forces a new resource to be created.
	SqlServiceAccountName pulumi.StringPtrInput `pulumi:"sqlServiceAccountName"`
	// The primary key of the Storage Account.
	StorageAccountPrimaryKey pulumi.StringPtrInput `pulumi:"storageAccountPrimaryKey"`
	// The SAS URL to the Storage Container of the witness storage account. Changing this forces a new resource to be created.
	StorageAccountUrl pulumi.StringPtrInput `pulumi:"storageAccountUrl"`
}

func (VirtualMachineGroupWsfcDomainProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineGroupWsfcDomainProfile)(nil)).Elem()
}

func (i VirtualMachineGroupWsfcDomainProfileArgs) ToVirtualMachineGroupWsfcDomainProfileOutput() VirtualMachineGroupWsfcDomainProfileOutput {
	return i.ToVirtualMachineGroupWsfcDomainProfileOutputWithContext(context.Background())
}

func (i VirtualMachineGroupWsfcDomainProfileArgs) ToVirtualMachineGroupWsfcDomainProfileOutputWithContext(ctx context.Context) VirtualMachineGroupWsfcDomainProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineGroupWsfcDomainProfileOutput)
}

func (i VirtualMachineGroupWsfcDomainProfileArgs) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineGroupWsfcDomainProfile] {
	return pulumix.Output[VirtualMachineGroupWsfcDomainProfile]{
		OutputState: i.ToVirtualMachineGroupWsfcDomainProfileOutputWithContext(ctx).OutputState,
	}
}

func (i VirtualMachineGroupWsfcDomainProfileArgs) ToVirtualMachineGroupWsfcDomainProfilePtrOutput() VirtualMachineGroupWsfcDomainProfilePtrOutput {
	return i.ToVirtualMachineGroupWsfcDomainProfilePtrOutputWithContext(context.Background())
}

func (i VirtualMachineGroupWsfcDomainProfileArgs) ToVirtualMachineGroupWsfcDomainProfilePtrOutputWithContext(ctx context.Context) VirtualMachineGroupWsfcDomainProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineGroupWsfcDomainProfileOutput).ToVirtualMachineGroupWsfcDomainProfilePtrOutputWithContext(ctx)
}

// VirtualMachineGroupWsfcDomainProfilePtrInput is an input type that accepts VirtualMachineGroupWsfcDomainProfileArgs, VirtualMachineGroupWsfcDomainProfilePtr and VirtualMachineGroupWsfcDomainProfilePtrOutput values.
// You can construct a concrete instance of `VirtualMachineGroupWsfcDomainProfilePtrInput` via:
//
//	        VirtualMachineGroupWsfcDomainProfileArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineGroupWsfcDomainProfilePtrInput interface {
	pulumi.Input

	ToVirtualMachineGroupWsfcDomainProfilePtrOutput() VirtualMachineGroupWsfcDomainProfilePtrOutput
	ToVirtualMachineGroupWsfcDomainProfilePtrOutputWithContext(context.Context) VirtualMachineGroupWsfcDomainProfilePtrOutput
}

type virtualMachineGroupWsfcDomainProfilePtrType VirtualMachineGroupWsfcDomainProfileArgs

func VirtualMachineGroupWsfcDomainProfilePtr(v *VirtualMachineGroupWsfcDomainProfileArgs) VirtualMachineGroupWsfcDomainProfilePtrInput {
	return (*virtualMachineGroupWsfcDomainProfilePtrType)(v)
}

func (*virtualMachineGroupWsfcDomainProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineGroupWsfcDomainProfile)(nil)).Elem()
}

func (i *virtualMachineGroupWsfcDomainProfilePtrType) ToVirtualMachineGroupWsfcDomainProfilePtrOutput() VirtualMachineGroupWsfcDomainProfilePtrOutput {
	return i.ToVirtualMachineGroupWsfcDomainProfilePtrOutputWithContext(context.Background())
}

func (i *virtualMachineGroupWsfcDomainProfilePtrType) ToVirtualMachineGroupWsfcDomainProfilePtrOutputWithContext(ctx context.Context) VirtualMachineGroupWsfcDomainProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineGroupWsfcDomainProfilePtrOutput)
}

func (i *virtualMachineGroupWsfcDomainProfilePtrType) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineGroupWsfcDomainProfile] {
	return pulumix.Output[*VirtualMachineGroupWsfcDomainProfile]{
		OutputState: i.ToVirtualMachineGroupWsfcDomainProfilePtrOutputWithContext(ctx).OutputState,
	}
}

type VirtualMachineGroupWsfcDomainProfileOutput struct{ *pulumi.OutputState }

func (VirtualMachineGroupWsfcDomainProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineGroupWsfcDomainProfile)(nil)).Elem()
}

func (o VirtualMachineGroupWsfcDomainProfileOutput) ToVirtualMachineGroupWsfcDomainProfileOutput() VirtualMachineGroupWsfcDomainProfileOutput {
	return o
}

func (o VirtualMachineGroupWsfcDomainProfileOutput) ToVirtualMachineGroupWsfcDomainProfileOutputWithContext(ctx context.Context) VirtualMachineGroupWsfcDomainProfileOutput {
	return o
}

func (o VirtualMachineGroupWsfcDomainProfileOutput) ToVirtualMachineGroupWsfcDomainProfilePtrOutput() VirtualMachineGroupWsfcDomainProfilePtrOutput {
	return o.ToVirtualMachineGroupWsfcDomainProfilePtrOutputWithContext(context.Background())
}

func (o VirtualMachineGroupWsfcDomainProfileOutput) ToVirtualMachineGroupWsfcDomainProfilePtrOutputWithContext(ctx context.Context) VirtualMachineGroupWsfcDomainProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineGroupWsfcDomainProfile) *VirtualMachineGroupWsfcDomainProfile {
		return &v
	}).(VirtualMachineGroupWsfcDomainProfilePtrOutput)
}

func (o VirtualMachineGroupWsfcDomainProfileOutput) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineGroupWsfcDomainProfile] {
	return pulumix.Output[VirtualMachineGroupWsfcDomainProfile]{
		OutputState: o.OutputState,
	}
}

// The account name used for creating cluster. Changing this forces a new resource to be created.
func (o VirtualMachineGroupWsfcDomainProfileOutput) ClusterBootstrapAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineGroupWsfcDomainProfile) *string { return v.ClusterBootstrapAccountName }).(pulumi.StringPtrOutput)
}

// The account name used for operating cluster. Changing this forces a new resource to be created.
func (o VirtualMachineGroupWsfcDomainProfileOutput) ClusterOperatorAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineGroupWsfcDomainProfile) *string { return v.ClusterOperatorAccountName }).(pulumi.StringPtrOutput)
}

// The subnet type of the SQL Virtual Machine cluster. Possible values are `MultiSubnet` and `SingleSubnet`. Changing this forces a new resource to be created.
func (o VirtualMachineGroupWsfcDomainProfileOutput) ClusterSubnetType() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineGroupWsfcDomainProfile) string { return v.ClusterSubnetType }).(pulumi.StringOutput)
}

// The fully qualified name of the domain. Changing this forces a new resource to be created.
func (o VirtualMachineGroupWsfcDomainProfileOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineGroupWsfcDomainProfile) string { return v.Fqdn }).(pulumi.StringOutput)
}

// The organizational Unit path in which the nodes and cluster will be present. Changing this forces a new resource to be created.
func (o VirtualMachineGroupWsfcDomainProfileOutput) OrganizationalUnitPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineGroupWsfcDomainProfile) *string { return v.OrganizationalUnitPath }).(pulumi.StringPtrOutput)
}

// The account name under which SQL service will run on all participating SQL virtual machines in the cluster. Changing this forces a new resource to be created.
func (o VirtualMachineGroupWsfcDomainProfileOutput) SqlServiceAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineGroupWsfcDomainProfile) *string { return v.SqlServiceAccountName }).(pulumi.StringPtrOutput)
}

// The primary key of the Storage Account.
func (o VirtualMachineGroupWsfcDomainProfileOutput) StorageAccountPrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineGroupWsfcDomainProfile) *string { return v.StorageAccountPrimaryKey }).(pulumi.StringPtrOutput)
}

// The SAS URL to the Storage Container of the witness storage account. Changing this forces a new resource to be created.
func (o VirtualMachineGroupWsfcDomainProfileOutput) StorageAccountUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineGroupWsfcDomainProfile) *string { return v.StorageAccountUrl }).(pulumi.StringPtrOutput)
}

type VirtualMachineGroupWsfcDomainProfilePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineGroupWsfcDomainProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineGroupWsfcDomainProfile)(nil)).Elem()
}

func (o VirtualMachineGroupWsfcDomainProfilePtrOutput) ToVirtualMachineGroupWsfcDomainProfilePtrOutput() VirtualMachineGroupWsfcDomainProfilePtrOutput {
	return o
}

func (o VirtualMachineGroupWsfcDomainProfilePtrOutput) ToVirtualMachineGroupWsfcDomainProfilePtrOutputWithContext(ctx context.Context) VirtualMachineGroupWsfcDomainProfilePtrOutput {
	return o
}

func (o VirtualMachineGroupWsfcDomainProfilePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineGroupWsfcDomainProfile] {
	return pulumix.Output[*VirtualMachineGroupWsfcDomainProfile]{
		OutputState: o.OutputState,
	}
}

func (o VirtualMachineGroupWsfcDomainProfilePtrOutput) Elem() VirtualMachineGroupWsfcDomainProfileOutput {
	return o.ApplyT(func(v *VirtualMachineGroupWsfcDomainProfile) VirtualMachineGroupWsfcDomainProfile {
		if v != nil {
			return *v
		}
		var ret VirtualMachineGroupWsfcDomainProfile
		return ret
	}).(VirtualMachineGroupWsfcDomainProfileOutput)
}

// The account name used for creating cluster. Changing this forces a new resource to be created.
func (o VirtualMachineGroupWsfcDomainProfilePtrOutput) ClusterBootstrapAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineGroupWsfcDomainProfile) *string {
		if v == nil {
			return nil
		}
		return v.ClusterBootstrapAccountName
	}).(pulumi.StringPtrOutput)
}

// The account name used for operating cluster. Changing this forces a new resource to be created.
func (o VirtualMachineGroupWsfcDomainProfilePtrOutput) ClusterOperatorAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineGroupWsfcDomainProfile) *string {
		if v == nil {
			return nil
		}
		return v.ClusterOperatorAccountName
	}).(pulumi.StringPtrOutput)
}

// The subnet type of the SQL Virtual Machine cluster. Possible values are `MultiSubnet` and `SingleSubnet`. Changing this forces a new resource to be created.
func (o VirtualMachineGroupWsfcDomainProfilePtrOutput) ClusterSubnetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineGroupWsfcDomainProfile) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterSubnetType
	}).(pulumi.StringPtrOutput)
}

// The fully qualified name of the domain. Changing this forces a new resource to be created.
func (o VirtualMachineGroupWsfcDomainProfilePtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineGroupWsfcDomainProfile) *string {
		if v == nil {
			return nil
		}
		return &v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// The organizational Unit path in which the nodes and cluster will be present. Changing this forces a new resource to be created.
func (o VirtualMachineGroupWsfcDomainProfilePtrOutput) OrganizationalUnitPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineGroupWsfcDomainProfile) *string {
		if v == nil {
			return nil
		}
		return v.OrganizationalUnitPath
	}).(pulumi.StringPtrOutput)
}

// The account name under which SQL service will run on all participating SQL virtual machines in the cluster. Changing this forces a new resource to be created.
func (o VirtualMachineGroupWsfcDomainProfilePtrOutput) SqlServiceAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineGroupWsfcDomainProfile) *string {
		if v == nil {
			return nil
		}
		return v.SqlServiceAccountName
	}).(pulumi.StringPtrOutput)
}

// The primary key of the Storage Account.
func (o VirtualMachineGroupWsfcDomainProfilePtrOutput) StorageAccountPrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineGroupWsfcDomainProfile) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountPrimaryKey
	}).(pulumi.StringPtrOutput)
}

// The SAS URL to the Storage Container of the witness storage account. Changing this forces a new resource to be created.
func (o VirtualMachineGroupWsfcDomainProfilePtrOutput) StorageAccountUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineGroupWsfcDomainProfile) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountUrl
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineKeyVaultCredential struct {
	// The Azure Key Vault url. Changing this forces a new resource to be created.
	KeyVaultUrl string `pulumi:"keyVaultUrl"`
	// The credential name.
	Name string `pulumi:"name"`
	// The service principal name to access key vault. Changing this forces a new resource to be created.
	ServicePrincipalName string `pulumi:"servicePrincipalName"`
	// The service principal name secret to access key vault. Changing this forces a new resource to be created.
	ServicePrincipalSecret string `pulumi:"servicePrincipalSecret"`
}

// VirtualMachineKeyVaultCredentialInput is an input type that accepts VirtualMachineKeyVaultCredentialArgs and VirtualMachineKeyVaultCredentialOutput values.
// You can construct a concrete instance of `VirtualMachineKeyVaultCredentialInput` via:
//
//	VirtualMachineKeyVaultCredentialArgs{...}
type VirtualMachineKeyVaultCredentialInput interface {
	pulumi.Input

	ToVirtualMachineKeyVaultCredentialOutput() VirtualMachineKeyVaultCredentialOutput
	ToVirtualMachineKeyVaultCredentialOutputWithContext(context.Context) VirtualMachineKeyVaultCredentialOutput
}

type VirtualMachineKeyVaultCredentialArgs struct {
	// The Azure Key Vault url. Changing this forces a new resource to be created.
	KeyVaultUrl pulumi.StringInput `pulumi:"keyVaultUrl"`
	// The credential name.
	Name pulumi.StringInput `pulumi:"name"`
	// The service principal name to access key vault. Changing this forces a new resource to be created.
	ServicePrincipalName pulumi.StringInput `pulumi:"servicePrincipalName"`
	// The service principal name secret to access key vault. Changing this forces a new resource to be created.
	ServicePrincipalSecret pulumi.StringInput `pulumi:"servicePrincipalSecret"`
}

func (VirtualMachineKeyVaultCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineKeyVaultCredential)(nil)).Elem()
}

func (i VirtualMachineKeyVaultCredentialArgs) ToVirtualMachineKeyVaultCredentialOutput() VirtualMachineKeyVaultCredentialOutput {
	return i.ToVirtualMachineKeyVaultCredentialOutputWithContext(context.Background())
}

func (i VirtualMachineKeyVaultCredentialArgs) ToVirtualMachineKeyVaultCredentialOutputWithContext(ctx context.Context) VirtualMachineKeyVaultCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineKeyVaultCredentialOutput)
}

func (i VirtualMachineKeyVaultCredentialArgs) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineKeyVaultCredential] {
	return pulumix.Output[VirtualMachineKeyVaultCredential]{
		OutputState: i.ToVirtualMachineKeyVaultCredentialOutputWithContext(ctx).OutputState,
	}
}

func (i VirtualMachineKeyVaultCredentialArgs) ToVirtualMachineKeyVaultCredentialPtrOutput() VirtualMachineKeyVaultCredentialPtrOutput {
	return i.ToVirtualMachineKeyVaultCredentialPtrOutputWithContext(context.Background())
}

func (i VirtualMachineKeyVaultCredentialArgs) ToVirtualMachineKeyVaultCredentialPtrOutputWithContext(ctx context.Context) VirtualMachineKeyVaultCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineKeyVaultCredentialOutput).ToVirtualMachineKeyVaultCredentialPtrOutputWithContext(ctx)
}

// VirtualMachineKeyVaultCredentialPtrInput is an input type that accepts VirtualMachineKeyVaultCredentialArgs, VirtualMachineKeyVaultCredentialPtr and VirtualMachineKeyVaultCredentialPtrOutput values.
// You can construct a concrete instance of `VirtualMachineKeyVaultCredentialPtrInput` via:
//
//	        VirtualMachineKeyVaultCredentialArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineKeyVaultCredentialPtrInput interface {
	pulumi.Input

	ToVirtualMachineKeyVaultCredentialPtrOutput() VirtualMachineKeyVaultCredentialPtrOutput
	ToVirtualMachineKeyVaultCredentialPtrOutputWithContext(context.Context) VirtualMachineKeyVaultCredentialPtrOutput
}

type virtualMachineKeyVaultCredentialPtrType VirtualMachineKeyVaultCredentialArgs

func VirtualMachineKeyVaultCredentialPtr(v *VirtualMachineKeyVaultCredentialArgs) VirtualMachineKeyVaultCredentialPtrInput {
	return (*virtualMachineKeyVaultCredentialPtrType)(v)
}

func (*virtualMachineKeyVaultCredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineKeyVaultCredential)(nil)).Elem()
}

func (i *virtualMachineKeyVaultCredentialPtrType) ToVirtualMachineKeyVaultCredentialPtrOutput() VirtualMachineKeyVaultCredentialPtrOutput {
	return i.ToVirtualMachineKeyVaultCredentialPtrOutputWithContext(context.Background())
}

func (i *virtualMachineKeyVaultCredentialPtrType) ToVirtualMachineKeyVaultCredentialPtrOutputWithContext(ctx context.Context) VirtualMachineKeyVaultCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineKeyVaultCredentialPtrOutput)
}

func (i *virtualMachineKeyVaultCredentialPtrType) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineKeyVaultCredential] {
	return pulumix.Output[*VirtualMachineKeyVaultCredential]{
		OutputState: i.ToVirtualMachineKeyVaultCredentialPtrOutputWithContext(ctx).OutputState,
	}
}

type VirtualMachineKeyVaultCredentialOutput struct{ *pulumi.OutputState }

func (VirtualMachineKeyVaultCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineKeyVaultCredential)(nil)).Elem()
}

func (o VirtualMachineKeyVaultCredentialOutput) ToVirtualMachineKeyVaultCredentialOutput() VirtualMachineKeyVaultCredentialOutput {
	return o
}

func (o VirtualMachineKeyVaultCredentialOutput) ToVirtualMachineKeyVaultCredentialOutputWithContext(ctx context.Context) VirtualMachineKeyVaultCredentialOutput {
	return o
}

func (o VirtualMachineKeyVaultCredentialOutput) ToVirtualMachineKeyVaultCredentialPtrOutput() VirtualMachineKeyVaultCredentialPtrOutput {
	return o.ToVirtualMachineKeyVaultCredentialPtrOutputWithContext(context.Background())
}

func (o VirtualMachineKeyVaultCredentialOutput) ToVirtualMachineKeyVaultCredentialPtrOutputWithContext(ctx context.Context) VirtualMachineKeyVaultCredentialPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineKeyVaultCredential) *VirtualMachineKeyVaultCredential {
		return &v
	}).(VirtualMachineKeyVaultCredentialPtrOutput)
}

func (o VirtualMachineKeyVaultCredentialOutput) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineKeyVaultCredential] {
	return pulumix.Output[VirtualMachineKeyVaultCredential]{
		OutputState: o.OutputState,
	}
}

// The Azure Key Vault url. Changing this forces a new resource to be created.
func (o VirtualMachineKeyVaultCredentialOutput) KeyVaultUrl() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineKeyVaultCredential) string { return v.KeyVaultUrl }).(pulumi.StringOutput)
}

// The credential name.
func (o VirtualMachineKeyVaultCredentialOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineKeyVaultCredential) string { return v.Name }).(pulumi.StringOutput)
}

// The service principal name to access key vault. Changing this forces a new resource to be created.
func (o VirtualMachineKeyVaultCredentialOutput) ServicePrincipalName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineKeyVaultCredential) string { return v.ServicePrincipalName }).(pulumi.StringOutput)
}

// The service principal name secret to access key vault. Changing this forces a new resource to be created.
func (o VirtualMachineKeyVaultCredentialOutput) ServicePrincipalSecret() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineKeyVaultCredential) string { return v.ServicePrincipalSecret }).(pulumi.StringOutput)
}

type VirtualMachineKeyVaultCredentialPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineKeyVaultCredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineKeyVaultCredential)(nil)).Elem()
}

func (o VirtualMachineKeyVaultCredentialPtrOutput) ToVirtualMachineKeyVaultCredentialPtrOutput() VirtualMachineKeyVaultCredentialPtrOutput {
	return o
}

func (o VirtualMachineKeyVaultCredentialPtrOutput) ToVirtualMachineKeyVaultCredentialPtrOutputWithContext(ctx context.Context) VirtualMachineKeyVaultCredentialPtrOutput {
	return o
}

func (o VirtualMachineKeyVaultCredentialPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineKeyVaultCredential] {
	return pulumix.Output[*VirtualMachineKeyVaultCredential]{
		OutputState: o.OutputState,
	}
}

func (o VirtualMachineKeyVaultCredentialPtrOutput) Elem() VirtualMachineKeyVaultCredentialOutput {
	return o.ApplyT(func(v *VirtualMachineKeyVaultCredential) VirtualMachineKeyVaultCredential {
		if v != nil {
			return *v
		}
		var ret VirtualMachineKeyVaultCredential
		return ret
	}).(VirtualMachineKeyVaultCredentialOutput)
}

// The Azure Key Vault url. Changing this forces a new resource to be created.
func (o VirtualMachineKeyVaultCredentialPtrOutput) KeyVaultUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineKeyVaultCredential) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVaultUrl
	}).(pulumi.StringPtrOutput)
}

// The credential name.
func (o VirtualMachineKeyVaultCredentialPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineKeyVaultCredential) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The service principal name to access key vault. Changing this forces a new resource to be created.
func (o VirtualMachineKeyVaultCredentialPtrOutput) ServicePrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineKeyVaultCredential) *string {
		if v == nil {
			return nil
		}
		return &v.ServicePrincipalName
	}).(pulumi.StringPtrOutput)
}

// The service principal name secret to access key vault. Changing this forces a new resource to be created.
func (o VirtualMachineKeyVaultCredentialPtrOutput) ServicePrincipalSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineKeyVaultCredential) *string {
		if v == nil {
			return nil
		}
		return &v.ServicePrincipalSecret
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineSqlInstance struct {
	// Specifies if the SQL Server is optimized for adhoc workloads. Possible values are `true` and `false`. Defaults to `false`.
	AdhocWorkloadsOptimizationEnabled *bool `pulumi:"adhocWorkloadsOptimizationEnabled"`
	// Collation of the SQL Server. Defaults to `SQL_Latin1_General_CP1_CI_AS`. Changing this forces a new resource to be created.
	Collation *string `pulumi:"collation"`
	// Specifies if Instant File Initialization is enabled for the SQL Server. Possible values are `true` and `false`. Defaults to `false`. Changing this forces a new resource to be created.
	InstantFileInitializationEnabled *bool `pulumi:"instantFileInitializationEnabled"`
	// Specifies if Lock Pages in Memory is enabled for the SQL Server. Possible values are `true` and `false`. Defaults to `false`. Changing this forces a new resource to be created.
	LockPagesInMemoryEnabled *bool `pulumi:"lockPagesInMemoryEnabled"`
	// Maximum Degree of Parallelism of the SQL Server. Possible values are between `0` and `32767`. Defaults to `0`.
	MaxDop *int `pulumi:"maxDop"`
	// Maximum amount memory that SQL Server Memory Manager can allocate to the SQL Server process. Possible values are between `128` and `2147483647` Defaults to `2147483647`.
	MaxServerMemoryMb *int `pulumi:"maxServerMemoryMb"`
	// Minimum amount memory that SQL Server Memory Manager can allocate to the SQL Server process. Possible values are between `0` and `2147483647` Defaults to `0`.
	//
	// > **NOTE:** `maxServerMemoryMb` must be greater than or equal to `minServerMemoryMb`
	MinServerMemoryMb *int `pulumi:"minServerMemoryMb"`
}

// VirtualMachineSqlInstanceInput is an input type that accepts VirtualMachineSqlInstanceArgs and VirtualMachineSqlInstanceOutput values.
// You can construct a concrete instance of `VirtualMachineSqlInstanceInput` via:
//
//	VirtualMachineSqlInstanceArgs{...}
type VirtualMachineSqlInstanceInput interface {
	pulumi.Input

	ToVirtualMachineSqlInstanceOutput() VirtualMachineSqlInstanceOutput
	ToVirtualMachineSqlInstanceOutputWithContext(context.Context) VirtualMachineSqlInstanceOutput
}

type VirtualMachineSqlInstanceArgs struct {
	// Specifies if the SQL Server is optimized for adhoc workloads. Possible values are `true` and `false`. Defaults to `false`.
	AdhocWorkloadsOptimizationEnabled pulumi.BoolPtrInput `pulumi:"adhocWorkloadsOptimizationEnabled"`
	// Collation of the SQL Server. Defaults to `SQL_Latin1_General_CP1_CI_AS`. Changing this forces a new resource to be created.
	Collation pulumi.StringPtrInput `pulumi:"collation"`
	// Specifies if Instant File Initialization is enabled for the SQL Server. Possible values are `true` and `false`. Defaults to `false`. Changing this forces a new resource to be created.
	InstantFileInitializationEnabled pulumi.BoolPtrInput `pulumi:"instantFileInitializationEnabled"`
	// Specifies if Lock Pages in Memory is enabled for the SQL Server. Possible values are `true` and `false`. Defaults to `false`. Changing this forces a new resource to be created.
	LockPagesInMemoryEnabled pulumi.BoolPtrInput `pulumi:"lockPagesInMemoryEnabled"`
	// Maximum Degree of Parallelism of the SQL Server. Possible values are between `0` and `32767`. Defaults to `0`.
	MaxDop pulumi.IntPtrInput `pulumi:"maxDop"`
	// Maximum amount memory that SQL Server Memory Manager can allocate to the SQL Server process. Possible values are between `128` and `2147483647` Defaults to `2147483647`.
	MaxServerMemoryMb pulumi.IntPtrInput `pulumi:"maxServerMemoryMb"`
	// Minimum amount memory that SQL Server Memory Manager can allocate to the SQL Server process. Possible values are between `0` and `2147483647` Defaults to `0`.
	//
	// > **NOTE:** `maxServerMemoryMb` must be greater than or equal to `minServerMemoryMb`
	MinServerMemoryMb pulumi.IntPtrInput `pulumi:"minServerMemoryMb"`
}

func (VirtualMachineSqlInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineSqlInstance)(nil)).Elem()
}

func (i VirtualMachineSqlInstanceArgs) ToVirtualMachineSqlInstanceOutput() VirtualMachineSqlInstanceOutput {
	return i.ToVirtualMachineSqlInstanceOutputWithContext(context.Background())
}

func (i VirtualMachineSqlInstanceArgs) ToVirtualMachineSqlInstanceOutputWithContext(ctx context.Context) VirtualMachineSqlInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSqlInstanceOutput)
}

func (i VirtualMachineSqlInstanceArgs) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineSqlInstance] {
	return pulumix.Output[VirtualMachineSqlInstance]{
		OutputState: i.ToVirtualMachineSqlInstanceOutputWithContext(ctx).OutputState,
	}
}

func (i VirtualMachineSqlInstanceArgs) ToVirtualMachineSqlInstancePtrOutput() VirtualMachineSqlInstancePtrOutput {
	return i.ToVirtualMachineSqlInstancePtrOutputWithContext(context.Background())
}

func (i VirtualMachineSqlInstanceArgs) ToVirtualMachineSqlInstancePtrOutputWithContext(ctx context.Context) VirtualMachineSqlInstancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSqlInstanceOutput).ToVirtualMachineSqlInstancePtrOutputWithContext(ctx)
}

// VirtualMachineSqlInstancePtrInput is an input type that accepts VirtualMachineSqlInstanceArgs, VirtualMachineSqlInstancePtr and VirtualMachineSqlInstancePtrOutput values.
// You can construct a concrete instance of `VirtualMachineSqlInstancePtrInput` via:
//
//	        VirtualMachineSqlInstanceArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineSqlInstancePtrInput interface {
	pulumi.Input

	ToVirtualMachineSqlInstancePtrOutput() VirtualMachineSqlInstancePtrOutput
	ToVirtualMachineSqlInstancePtrOutputWithContext(context.Context) VirtualMachineSqlInstancePtrOutput
}

type virtualMachineSqlInstancePtrType VirtualMachineSqlInstanceArgs

func VirtualMachineSqlInstancePtr(v *VirtualMachineSqlInstanceArgs) VirtualMachineSqlInstancePtrInput {
	return (*virtualMachineSqlInstancePtrType)(v)
}

func (*virtualMachineSqlInstancePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineSqlInstance)(nil)).Elem()
}

func (i *virtualMachineSqlInstancePtrType) ToVirtualMachineSqlInstancePtrOutput() VirtualMachineSqlInstancePtrOutput {
	return i.ToVirtualMachineSqlInstancePtrOutputWithContext(context.Background())
}

func (i *virtualMachineSqlInstancePtrType) ToVirtualMachineSqlInstancePtrOutputWithContext(ctx context.Context) VirtualMachineSqlInstancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineSqlInstancePtrOutput)
}

func (i *virtualMachineSqlInstancePtrType) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineSqlInstance] {
	return pulumix.Output[*VirtualMachineSqlInstance]{
		OutputState: i.ToVirtualMachineSqlInstancePtrOutputWithContext(ctx).OutputState,
	}
}

type VirtualMachineSqlInstanceOutput struct{ *pulumi.OutputState }

func (VirtualMachineSqlInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineSqlInstance)(nil)).Elem()
}

func (o VirtualMachineSqlInstanceOutput) ToVirtualMachineSqlInstanceOutput() VirtualMachineSqlInstanceOutput {
	return o
}

func (o VirtualMachineSqlInstanceOutput) ToVirtualMachineSqlInstanceOutputWithContext(ctx context.Context) VirtualMachineSqlInstanceOutput {
	return o
}

func (o VirtualMachineSqlInstanceOutput) ToVirtualMachineSqlInstancePtrOutput() VirtualMachineSqlInstancePtrOutput {
	return o.ToVirtualMachineSqlInstancePtrOutputWithContext(context.Background())
}

func (o VirtualMachineSqlInstanceOutput) ToVirtualMachineSqlInstancePtrOutputWithContext(ctx context.Context) VirtualMachineSqlInstancePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineSqlInstance) *VirtualMachineSqlInstance {
		return &v
	}).(VirtualMachineSqlInstancePtrOutput)
}

func (o VirtualMachineSqlInstanceOutput) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineSqlInstance] {
	return pulumix.Output[VirtualMachineSqlInstance]{
		OutputState: o.OutputState,
	}
}

// Specifies if the SQL Server is optimized for adhoc workloads. Possible values are `true` and `false`. Defaults to `false`.
func (o VirtualMachineSqlInstanceOutput) AdhocWorkloadsOptimizationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineSqlInstance) *bool { return v.AdhocWorkloadsOptimizationEnabled }).(pulumi.BoolPtrOutput)
}

// Collation of the SQL Server. Defaults to `SQL_Latin1_General_CP1_CI_AS`. Changing this forces a new resource to be created.
func (o VirtualMachineSqlInstanceOutput) Collation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineSqlInstance) *string { return v.Collation }).(pulumi.StringPtrOutput)
}

// Specifies if Instant File Initialization is enabled for the SQL Server. Possible values are `true` and `false`. Defaults to `false`. Changing this forces a new resource to be created.
func (o VirtualMachineSqlInstanceOutput) InstantFileInitializationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineSqlInstance) *bool { return v.InstantFileInitializationEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies if Lock Pages in Memory is enabled for the SQL Server. Possible values are `true` and `false`. Defaults to `false`. Changing this forces a new resource to be created.
func (o VirtualMachineSqlInstanceOutput) LockPagesInMemoryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineSqlInstance) *bool { return v.LockPagesInMemoryEnabled }).(pulumi.BoolPtrOutput)
}

// Maximum Degree of Parallelism of the SQL Server. Possible values are between `0` and `32767`. Defaults to `0`.
func (o VirtualMachineSqlInstanceOutput) MaxDop() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineSqlInstance) *int { return v.MaxDop }).(pulumi.IntPtrOutput)
}

// Maximum amount memory that SQL Server Memory Manager can allocate to the SQL Server process. Possible values are between `128` and `2147483647` Defaults to `2147483647`.
func (o VirtualMachineSqlInstanceOutput) MaxServerMemoryMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineSqlInstance) *int { return v.MaxServerMemoryMb }).(pulumi.IntPtrOutput)
}

// Minimum amount memory that SQL Server Memory Manager can allocate to the SQL Server process. Possible values are between `0` and `2147483647` Defaults to `0`.
//
// > **NOTE:** `maxServerMemoryMb` must be greater than or equal to `minServerMemoryMb`
func (o VirtualMachineSqlInstanceOutput) MinServerMemoryMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineSqlInstance) *int { return v.MinServerMemoryMb }).(pulumi.IntPtrOutput)
}

type VirtualMachineSqlInstancePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineSqlInstancePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineSqlInstance)(nil)).Elem()
}

func (o VirtualMachineSqlInstancePtrOutput) ToVirtualMachineSqlInstancePtrOutput() VirtualMachineSqlInstancePtrOutput {
	return o
}

func (o VirtualMachineSqlInstancePtrOutput) ToVirtualMachineSqlInstancePtrOutputWithContext(ctx context.Context) VirtualMachineSqlInstancePtrOutput {
	return o
}

func (o VirtualMachineSqlInstancePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineSqlInstance] {
	return pulumix.Output[*VirtualMachineSqlInstance]{
		OutputState: o.OutputState,
	}
}

func (o VirtualMachineSqlInstancePtrOutput) Elem() VirtualMachineSqlInstanceOutput {
	return o.ApplyT(func(v *VirtualMachineSqlInstance) VirtualMachineSqlInstance {
		if v != nil {
			return *v
		}
		var ret VirtualMachineSqlInstance
		return ret
	}).(VirtualMachineSqlInstanceOutput)
}

// Specifies if the SQL Server is optimized for adhoc workloads. Possible values are `true` and `false`. Defaults to `false`.
func (o VirtualMachineSqlInstancePtrOutput) AdhocWorkloadsOptimizationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSqlInstance) *bool {
		if v == nil {
			return nil
		}
		return v.AdhocWorkloadsOptimizationEnabled
	}).(pulumi.BoolPtrOutput)
}

// Collation of the SQL Server. Defaults to `SQL_Latin1_General_CP1_CI_AS`. Changing this forces a new resource to be created.
func (o VirtualMachineSqlInstancePtrOutput) Collation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSqlInstance) *string {
		if v == nil {
			return nil
		}
		return v.Collation
	}).(pulumi.StringPtrOutput)
}

// Specifies if Instant File Initialization is enabled for the SQL Server. Possible values are `true` and `false`. Defaults to `false`. Changing this forces a new resource to be created.
func (o VirtualMachineSqlInstancePtrOutput) InstantFileInitializationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSqlInstance) *bool {
		if v == nil {
			return nil
		}
		return v.InstantFileInitializationEnabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies if Lock Pages in Memory is enabled for the SQL Server. Possible values are `true` and `false`. Defaults to `false`. Changing this forces a new resource to be created.
func (o VirtualMachineSqlInstancePtrOutput) LockPagesInMemoryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSqlInstance) *bool {
		if v == nil {
			return nil
		}
		return v.LockPagesInMemoryEnabled
	}).(pulumi.BoolPtrOutput)
}

// Maximum Degree of Parallelism of the SQL Server. Possible values are between `0` and `32767`. Defaults to `0`.
func (o VirtualMachineSqlInstancePtrOutput) MaxDop() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSqlInstance) *int {
		if v == nil {
			return nil
		}
		return v.MaxDop
	}).(pulumi.IntPtrOutput)
}

// Maximum amount memory that SQL Server Memory Manager can allocate to the SQL Server process. Possible values are between `128` and `2147483647` Defaults to `2147483647`.
func (o VirtualMachineSqlInstancePtrOutput) MaxServerMemoryMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSqlInstance) *int {
		if v == nil {
			return nil
		}
		return v.MaxServerMemoryMb
	}).(pulumi.IntPtrOutput)
}

// Minimum amount memory that SQL Server Memory Manager can allocate to the SQL Server process. Possible values are between `0` and `2147483647` Defaults to `0`.
//
// > **NOTE:** `maxServerMemoryMb` must be greater than or equal to `minServerMemoryMb`
func (o VirtualMachineSqlInstancePtrOutput) MinServerMemoryMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineSqlInstance) *int {
		if v == nil {
			return nil
		}
		return v.MinServerMemoryMb
	}).(pulumi.IntPtrOutput)
}

type VirtualMachineStorageConfiguration struct {
	// A `storageSettings` block as defined below.
	DataSettings *VirtualMachineStorageConfigurationDataSettings `pulumi:"dataSettings"`
	// The type of disk configuration to apply to the SQL Server. Valid values include `NEW`, `EXTEND`, or `ADD`.
	DiskType string `pulumi:"diskType"`
	// A `storageSettings` block as defined below.
	LogSettings *VirtualMachineStorageConfigurationLogSettings `pulumi:"logSettings"`
	// The type of storage workload. Valid values include `GENERAL`, `OLTP`, or `DW`.
	StorageWorkloadType string `pulumi:"storageWorkloadType"`
	// Specifies whether to set system databases (except tempDb) location to newly created data storage. Possible values are `true` and `false`. Defaults to `false`.
	SystemDbOnDataDiskEnabled *bool `pulumi:"systemDbOnDataDiskEnabled"`
	// An `tempDbSettings` block as defined below.
	TempDbSettings *VirtualMachineStorageConfigurationTempDbSettings `pulumi:"tempDbSettings"`
}

// VirtualMachineStorageConfigurationInput is an input type that accepts VirtualMachineStorageConfigurationArgs and VirtualMachineStorageConfigurationOutput values.
// You can construct a concrete instance of `VirtualMachineStorageConfigurationInput` via:
//
//	VirtualMachineStorageConfigurationArgs{...}
type VirtualMachineStorageConfigurationInput interface {
	pulumi.Input

	ToVirtualMachineStorageConfigurationOutput() VirtualMachineStorageConfigurationOutput
	ToVirtualMachineStorageConfigurationOutputWithContext(context.Context) VirtualMachineStorageConfigurationOutput
}

type VirtualMachineStorageConfigurationArgs struct {
	// A `storageSettings` block as defined below.
	DataSettings VirtualMachineStorageConfigurationDataSettingsPtrInput `pulumi:"dataSettings"`
	// The type of disk configuration to apply to the SQL Server. Valid values include `NEW`, `EXTEND`, or `ADD`.
	DiskType pulumi.StringInput `pulumi:"diskType"`
	// A `storageSettings` block as defined below.
	LogSettings VirtualMachineStorageConfigurationLogSettingsPtrInput `pulumi:"logSettings"`
	// The type of storage workload. Valid values include `GENERAL`, `OLTP`, or `DW`.
	StorageWorkloadType pulumi.StringInput `pulumi:"storageWorkloadType"`
	// Specifies whether to set system databases (except tempDb) location to newly created data storage. Possible values are `true` and `false`. Defaults to `false`.
	SystemDbOnDataDiskEnabled pulumi.BoolPtrInput `pulumi:"systemDbOnDataDiskEnabled"`
	// An `tempDbSettings` block as defined below.
	TempDbSettings VirtualMachineStorageConfigurationTempDbSettingsPtrInput `pulumi:"tempDbSettings"`
}

func (VirtualMachineStorageConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineStorageConfiguration)(nil)).Elem()
}

func (i VirtualMachineStorageConfigurationArgs) ToVirtualMachineStorageConfigurationOutput() VirtualMachineStorageConfigurationOutput {
	return i.ToVirtualMachineStorageConfigurationOutputWithContext(context.Background())
}

func (i VirtualMachineStorageConfigurationArgs) ToVirtualMachineStorageConfigurationOutputWithContext(ctx context.Context) VirtualMachineStorageConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineStorageConfigurationOutput)
}

func (i VirtualMachineStorageConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineStorageConfiguration] {
	return pulumix.Output[VirtualMachineStorageConfiguration]{
		OutputState: i.ToVirtualMachineStorageConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i VirtualMachineStorageConfigurationArgs) ToVirtualMachineStorageConfigurationPtrOutput() VirtualMachineStorageConfigurationPtrOutput {
	return i.ToVirtualMachineStorageConfigurationPtrOutputWithContext(context.Background())
}

func (i VirtualMachineStorageConfigurationArgs) ToVirtualMachineStorageConfigurationPtrOutputWithContext(ctx context.Context) VirtualMachineStorageConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineStorageConfigurationOutput).ToVirtualMachineStorageConfigurationPtrOutputWithContext(ctx)
}

// VirtualMachineStorageConfigurationPtrInput is an input type that accepts VirtualMachineStorageConfigurationArgs, VirtualMachineStorageConfigurationPtr and VirtualMachineStorageConfigurationPtrOutput values.
// You can construct a concrete instance of `VirtualMachineStorageConfigurationPtrInput` via:
//
//	        VirtualMachineStorageConfigurationArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineStorageConfigurationPtrInput interface {
	pulumi.Input

	ToVirtualMachineStorageConfigurationPtrOutput() VirtualMachineStorageConfigurationPtrOutput
	ToVirtualMachineStorageConfigurationPtrOutputWithContext(context.Context) VirtualMachineStorageConfigurationPtrOutput
}

type virtualMachineStorageConfigurationPtrType VirtualMachineStorageConfigurationArgs

func VirtualMachineStorageConfigurationPtr(v *VirtualMachineStorageConfigurationArgs) VirtualMachineStorageConfigurationPtrInput {
	return (*virtualMachineStorageConfigurationPtrType)(v)
}

func (*virtualMachineStorageConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineStorageConfiguration)(nil)).Elem()
}

func (i *virtualMachineStorageConfigurationPtrType) ToVirtualMachineStorageConfigurationPtrOutput() VirtualMachineStorageConfigurationPtrOutput {
	return i.ToVirtualMachineStorageConfigurationPtrOutputWithContext(context.Background())
}

func (i *virtualMachineStorageConfigurationPtrType) ToVirtualMachineStorageConfigurationPtrOutputWithContext(ctx context.Context) VirtualMachineStorageConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineStorageConfigurationPtrOutput)
}

func (i *virtualMachineStorageConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineStorageConfiguration] {
	return pulumix.Output[*VirtualMachineStorageConfiguration]{
		OutputState: i.ToVirtualMachineStorageConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type VirtualMachineStorageConfigurationOutput struct{ *pulumi.OutputState }

func (VirtualMachineStorageConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineStorageConfiguration)(nil)).Elem()
}

func (o VirtualMachineStorageConfigurationOutput) ToVirtualMachineStorageConfigurationOutput() VirtualMachineStorageConfigurationOutput {
	return o
}

func (o VirtualMachineStorageConfigurationOutput) ToVirtualMachineStorageConfigurationOutputWithContext(ctx context.Context) VirtualMachineStorageConfigurationOutput {
	return o
}

func (o VirtualMachineStorageConfigurationOutput) ToVirtualMachineStorageConfigurationPtrOutput() VirtualMachineStorageConfigurationPtrOutput {
	return o.ToVirtualMachineStorageConfigurationPtrOutputWithContext(context.Background())
}

func (o VirtualMachineStorageConfigurationOutput) ToVirtualMachineStorageConfigurationPtrOutputWithContext(ctx context.Context) VirtualMachineStorageConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineStorageConfiguration) *VirtualMachineStorageConfiguration {
		return &v
	}).(VirtualMachineStorageConfigurationPtrOutput)
}

func (o VirtualMachineStorageConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineStorageConfiguration] {
	return pulumix.Output[VirtualMachineStorageConfiguration]{
		OutputState: o.OutputState,
	}
}

// A `storageSettings` block as defined below.
func (o VirtualMachineStorageConfigurationOutput) DataSettings() VirtualMachineStorageConfigurationDataSettingsPtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageConfiguration) *VirtualMachineStorageConfigurationDataSettings {
		return v.DataSettings
	}).(VirtualMachineStorageConfigurationDataSettingsPtrOutput)
}

// The type of disk configuration to apply to the SQL Server. Valid values include `NEW`, `EXTEND`, or `ADD`.
func (o VirtualMachineStorageConfigurationOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineStorageConfiguration) string { return v.DiskType }).(pulumi.StringOutput)
}

// A `storageSettings` block as defined below.
func (o VirtualMachineStorageConfigurationOutput) LogSettings() VirtualMachineStorageConfigurationLogSettingsPtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageConfiguration) *VirtualMachineStorageConfigurationLogSettings {
		return v.LogSettings
	}).(VirtualMachineStorageConfigurationLogSettingsPtrOutput)
}

// The type of storage workload. Valid values include `GENERAL`, `OLTP`, or `DW`.
func (o VirtualMachineStorageConfigurationOutput) StorageWorkloadType() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineStorageConfiguration) string { return v.StorageWorkloadType }).(pulumi.StringOutput)
}

// Specifies whether to set system databases (except tempDb) location to newly created data storage. Possible values are `true` and `false`. Defaults to `false`.
func (o VirtualMachineStorageConfigurationOutput) SystemDbOnDataDiskEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageConfiguration) *bool { return v.SystemDbOnDataDiskEnabled }).(pulumi.BoolPtrOutput)
}

// An `tempDbSettings` block as defined below.
func (o VirtualMachineStorageConfigurationOutput) TempDbSettings() VirtualMachineStorageConfigurationTempDbSettingsPtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageConfiguration) *VirtualMachineStorageConfigurationTempDbSettings {
		return v.TempDbSettings
	}).(VirtualMachineStorageConfigurationTempDbSettingsPtrOutput)
}

type VirtualMachineStorageConfigurationPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineStorageConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineStorageConfiguration)(nil)).Elem()
}

func (o VirtualMachineStorageConfigurationPtrOutput) ToVirtualMachineStorageConfigurationPtrOutput() VirtualMachineStorageConfigurationPtrOutput {
	return o
}

func (o VirtualMachineStorageConfigurationPtrOutput) ToVirtualMachineStorageConfigurationPtrOutputWithContext(ctx context.Context) VirtualMachineStorageConfigurationPtrOutput {
	return o
}

func (o VirtualMachineStorageConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineStorageConfiguration] {
	return pulumix.Output[*VirtualMachineStorageConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o VirtualMachineStorageConfigurationPtrOutput) Elem() VirtualMachineStorageConfigurationOutput {
	return o.ApplyT(func(v *VirtualMachineStorageConfiguration) VirtualMachineStorageConfiguration {
		if v != nil {
			return *v
		}
		var ret VirtualMachineStorageConfiguration
		return ret
	}).(VirtualMachineStorageConfigurationOutput)
}

// A `storageSettings` block as defined below.
func (o VirtualMachineStorageConfigurationPtrOutput) DataSettings() VirtualMachineStorageConfigurationDataSettingsPtrOutput {
	return o.ApplyT(func(v *VirtualMachineStorageConfiguration) *VirtualMachineStorageConfigurationDataSettings {
		if v == nil {
			return nil
		}
		return v.DataSettings
	}).(VirtualMachineStorageConfigurationDataSettingsPtrOutput)
}

// The type of disk configuration to apply to the SQL Server. Valid values include `NEW`, `EXTEND`, or `ADD`.
func (o VirtualMachineStorageConfigurationPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineStorageConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.DiskType
	}).(pulumi.StringPtrOutput)
}

// A `storageSettings` block as defined below.
func (o VirtualMachineStorageConfigurationPtrOutput) LogSettings() VirtualMachineStorageConfigurationLogSettingsPtrOutput {
	return o.ApplyT(func(v *VirtualMachineStorageConfiguration) *VirtualMachineStorageConfigurationLogSettings {
		if v == nil {
			return nil
		}
		return v.LogSettings
	}).(VirtualMachineStorageConfigurationLogSettingsPtrOutput)
}

// The type of storage workload. Valid values include `GENERAL`, `OLTP`, or `DW`.
func (o VirtualMachineStorageConfigurationPtrOutput) StorageWorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineStorageConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.StorageWorkloadType
	}).(pulumi.StringPtrOutput)
}

// Specifies whether to set system databases (except tempDb) location to newly created data storage. Possible values are `true` and `false`. Defaults to `false`.
func (o VirtualMachineStorageConfigurationPtrOutput) SystemDbOnDataDiskEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineStorageConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.SystemDbOnDataDiskEnabled
	}).(pulumi.BoolPtrOutput)
}

// An `tempDbSettings` block as defined below.
func (o VirtualMachineStorageConfigurationPtrOutput) TempDbSettings() VirtualMachineStorageConfigurationTempDbSettingsPtrOutput {
	return o.ApplyT(func(v *VirtualMachineStorageConfiguration) *VirtualMachineStorageConfigurationTempDbSettings {
		if v == nil {
			return nil
		}
		return v.TempDbSettings
	}).(VirtualMachineStorageConfigurationTempDbSettingsPtrOutput)
}

type VirtualMachineStorageConfigurationDataSettings struct {
	// The SQL Server default path
	DefaultFilePath string `pulumi:"defaultFilePath"`
	// A list of Logical Unit Numbers for the disks.
	Luns []int `pulumi:"luns"`
}

// VirtualMachineStorageConfigurationDataSettingsInput is an input type that accepts VirtualMachineStorageConfigurationDataSettingsArgs and VirtualMachineStorageConfigurationDataSettingsOutput values.
// You can construct a concrete instance of `VirtualMachineStorageConfigurationDataSettingsInput` via:
//
//	VirtualMachineStorageConfigurationDataSettingsArgs{...}
type VirtualMachineStorageConfigurationDataSettingsInput interface {
	pulumi.Input

	ToVirtualMachineStorageConfigurationDataSettingsOutput() VirtualMachineStorageConfigurationDataSettingsOutput
	ToVirtualMachineStorageConfigurationDataSettingsOutputWithContext(context.Context) VirtualMachineStorageConfigurationDataSettingsOutput
}

type VirtualMachineStorageConfigurationDataSettingsArgs struct {
	// The SQL Server default path
	DefaultFilePath pulumi.StringInput `pulumi:"defaultFilePath"`
	// A list of Logical Unit Numbers for the disks.
	Luns pulumi.IntArrayInput `pulumi:"luns"`
}

func (VirtualMachineStorageConfigurationDataSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineStorageConfigurationDataSettings)(nil)).Elem()
}

func (i VirtualMachineStorageConfigurationDataSettingsArgs) ToVirtualMachineStorageConfigurationDataSettingsOutput() VirtualMachineStorageConfigurationDataSettingsOutput {
	return i.ToVirtualMachineStorageConfigurationDataSettingsOutputWithContext(context.Background())
}

func (i VirtualMachineStorageConfigurationDataSettingsArgs) ToVirtualMachineStorageConfigurationDataSettingsOutputWithContext(ctx context.Context) VirtualMachineStorageConfigurationDataSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineStorageConfigurationDataSettingsOutput)
}

func (i VirtualMachineStorageConfigurationDataSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineStorageConfigurationDataSettings] {
	return pulumix.Output[VirtualMachineStorageConfigurationDataSettings]{
		OutputState: i.ToVirtualMachineStorageConfigurationDataSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i VirtualMachineStorageConfigurationDataSettingsArgs) ToVirtualMachineStorageConfigurationDataSettingsPtrOutput() VirtualMachineStorageConfigurationDataSettingsPtrOutput {
	return i.ToVirtualMachineStorageConfigurationDataSettingsPtrOutputWithContext(context.Background())
}

func (i VirtualMachineStorageConfigurationDataSettingsArgs) ToVirtualMachineStorageConfigurationDataSettingsPtrOutputWithContext(ctx context.Context) VirtualMachineStorageConfigurationDataSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineStorageConfigurationDataSettingsOutput).ToVirtualMachineStorageConfigurationDataSettingsPtrOutputWithContext(ctx)
}

// VirtualMachineStorageConfigurationDataSettingsPtrInput is an input type that accepts VirtualMachineStorageConfigurationDataSettingsArgs, VirtualMachineStorageConfigurationDataSettingsPtr and VirtualMachineStorageConfigurationDataSettingsPtrOutput values.
// You can construct a concrete instance of `VirtualMachineStorageConfigurationDataSettingsPtrInput` via:
//
//	        VirtualMachineStorageConfigurationDataSettingsArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineStorageConfigurationDataSettingsPtrInput interface {
	pulumi.Input

	ToVirtualMachineStorageConfigurationDataSettingsPtrOutput() VirtualMachineStorageConfigurationDataSettingsPtrOutput
	ToVirtualMachineStorageConfigurationDataSettingsPtrOutputWithContext(context.Context) VirtualMachineStorageConfigurationDataSettingsPtrOutput
}

type virtualMachineStorageConfigurationDataSettingsPtrType VirtualMachineStorageConfigurationDataSettingsArgs

func VirtualMachineStorageConfigurationDataSettingsPtr(v *VirtualMachineStorageConfigurationDataSettingsArgs) VirtualMachineStorageConfigurationDataSettingsPtrInput {
	return (*virtualMachineStorageConfigurationDataSettingsPtrType)(v)
}

func (*virtualMachineStorageConfigurationDataSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineStorageConfigurationDataSettings)(nil)).Elem()
}

func (i *virtualMachineStorageConfigurationDataSettingsPtrType) ToVirtualMachineStorageConfigurationDataSettingsPtrOutput() VirtualMachineStorageConfigurationDataSettingsPtrOutput {
	return i.ToVirtualMachineStorageConfigurationDataSettingsPtrOutputWithContext(context.Background())
}

func (i *virtualMachineStorageConfigurationDataSettingsPtrType) ToVirtualMachineStorageConfigurationDataSettingsPtrOutputWithContext(ctx context.Context) VirtualMachineStorageConfigurationDataSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineStorageConfigurationDataSettingsPtrOutput)
}

func (i *virtualMachineStorageConfigurationDataSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineStorageConfigurationDataSettings] {
	return pulumix.Output[*VirtualMachineStorageConfigurationDataSettings]{
		OutputState: i.ToVirtualMachineStorageConfigurationDataSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

type VirtualMachineStorageConfigurationDataSettingsOutput struct{ *pulumi.OutputState }

func (VirtualMachineStorageConfigurationDataSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineStorageConfigurationDataSettings)(nil)).Elem()
}

func (o VirtualMachineStorageConfigurationDataSettingsOutput) ToVirtualMachineStorageConfigurationDataSettingsOutput() VirtualMachineStorageConfigurationDataSettingsOutput {
	return o
}

func (o VirtualMachineStorageConfigurationDataSettingsOutput) ToVirtualMachineStorageConfigurationDataSettingsOutputWithContext(ctx context.Context) VirtualMachineStorageConfigurationDataSettingsOutput {
	return o
}

func (o VirtualMachineStorageConfigurationDataSettingsOutput) ToVirtualMachineStorageConfigurationDataSettingsPtrOutput() VirtualMachineStorageConfigurationDataSettingsPtrOutput {
	return o.ToVirtualMachineStorageConfigurationDataSettingsPtrOutputWithContext(context.Background())
}

func (o VirtualMachineStorageConfigurationDataSettingsOutput) ToVirtualMachineStorageConfigurationDataSettingsPtrOutputWithContext(ctx context.Context) VirtualMachineStorageConfigurationDataSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineStorageConfigurationDataSettings) *VirtualMachineStorageConfigurationDataSettings {
		return &v
	}).(VirtualMachineStorageConfigurationDataSettingsPtrOutput)
}

func (o VirtualMachineStorageConfigurationDataSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineStorageConfigurationDataSettings] {
	return pulumix.Output[VirtualMachineStorageConfigurationDataSettings]{
		OutputState: o.OutputState,
	}
}

// The SQL Server default path
func (o VirtualMachineStorageConfigurationDataSettingsOutput) DefaultFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineStorageConfigurationDataSettings) string { return v.DefaultFilePath }).(pulumi.StringOutput)
}

// A list of Logical Unit Numbers for the disks.
func (o VirtualMachineStorageConfigurationDataSettingsOutput) Luns() pulumi.IntArrayOutput {
	return o.ApplyT(func(v VirtualMachineStorageConfigurationDataSettings) []int { return v.Luns }).(pulumi.IntArrayOutput)
}

type VirtualMachineStorageConfigurationDataSettingsPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineStorageConfigurationDataSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineStorageConfigurationDataSettings)(nil)).Elem()
}

func (o VirtualMachineStorageConfigurationDataSettingsPtrOutput) ToVirtualMachineStorageConfigurationDataSettingsPtrOutput() VirtualMachineStorageConfigurationDataSettingsPtrOutput {
	return o
}

func (o VirtualMachineStorageConfigurationDataSettingsPtrOutput) ToVirtualMachineStorageConfigurationDataSettingsPtrOutputWithContext(ctx context.Context) VirtualMachineStorageConfigurationDataSettingsPtrOutput {
	return o
}

func (o VirtualMachineStorageConfigurationDataSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineStorageConfigurationDataSettings] {
	return pulumix.Output[*VirtualMachineStorageConfigurationDataSettings]{
		OutputState: o.OutputState,
	}
}

func (o VirtualMachineStorageConfigurationDataSettingsPtrOutput) Elem() VirtualMachineStorageConfigurationDataSettingsOutput {
	return o.ApplyT(func(v *VirtualMachineStorageConfigurationDataSettings) VirtualMachineStorageConfigurationDataSettings {
		if v != nil {
			return *v
		}
		var ret VirtualMachineStorageConfigurationDataSettings
		return ret
	}).(VirtualMachineStorageConfigurationDataSettingsOutput)
}

// The SQL Server default path
func (o VirtualMachineStorageConfigurationDataSettingsPtrOutput) DefaultFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineStorageConfigurationDataSettings) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultFilePath
	}).(pulumi.StringPtrOutput)
}

// A list of Logical Unit Numbers for the disks.
func (o VirtualMachineStorageConfigurationDataSettingsPtrOutput) Luns() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *VirtualMachineStorageConfigurationDataSettings) []int {
		if v == nil {
			return nil
		}
		return v.Luns
	}).(pulumi.IntArrayOutput)
}

type VirtualMachineStorageConfigurationLogSettings struct {
	// The SQL Server default path
	DefaultFilePath string `pulumi:"defaultFilePath"`
	// A list of Logical Unit Numbers for the disks.
	Luns []int `pulumi:"luns"`
}

// VirtualMachineStorageConfigurationLogSettingsInput is an input type that accepts VirtualMachineStorageConfigurationLogSettingsArgs and VirtualMachineStorageConfigurationLogSettingsOutput values.
// You can construct a concrete instance of `VirtualMachineStorageConfigurationLogSettingsInput` via:
//
//	VirtualMachineStorageConfigurationLogSettingsArgs{...}
type VirtualMachineStorageConfigurationLogSettingsInput interface {
	pulumi.Input

	ToVirtualMachineStorageConfigurationLogSettingsOutput() VirtualMachineStorageConfigurationLogSettingsOutput
	ToVirtualMachineStorageConfigurationLogSettingsOutputWithContext(context.Context) VirtualMachineStorageConfigurationLogSettingsOutput
}

type VirtualMachineStorageConfigurationLogSettingsArgs struct {
	// The SQL Server default path
	DefaultFilePath pulumi.StringInput `pulumi:"defaultFilePath"`
	// A list of Logical Unit Numbers for the disks.
	Luns pulumi.IntArrayInput `pulumi:"luns"`
}

func (VirtualMachineStorageConfigurationLogSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineStorageConfigurationLogSettings)(nil)).Elem()
}

func (i VirtualMachineStorageConfigurationLogSettingsArgs) ToVirtualMachineStorageConfigurationLogSettingsOutput() VirtualMachineStorageConfigurationLogSettingsOutput {
	return i.ToVirtualMachineStorageConfigurationLogSettingsOutputWithContext(context.Background())
}

func (i VirtualMachineStorageConfigurationLogSettingsArgs) ToVirtualMachineStorageConfigurationLogSettingsOutputWithContext(ctx context.Context) VirtualMachineStorageConfigurationLogSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineStorageConfigurationLogSettingsOutput)
}

func (i VirtualMachineStorageConfigurationLogSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineStorageConfigurationLogSettings] {
	return pulumix.Output[VirtualMachineStorageConfigurationLogSettings]{
		OutputState: i.ToVirtualMachineStorageConfigurationLogSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i VirtualMachineStorageConfigurationLogSettingsArgs) ToVirtualMachineStorageConfigurationLogSettingsPtrOutput() VirtualMachineStorageConfigurationLogSettingsPtrOutput {
	return i.ToVirtualMachineStorageConfigurationLogSettingsPtrOutputWithContext(context.Background())
}

func (i VirtualMachineStorageConfigurationLogSettingsArgs) ToVirtualMachineStorageConfigurationLogSettingsPtrOutputWithContext(ctx context.Context) VirtualMachineStorageConfigurationLogSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineStorageConfigurationLogSettingsOutput).ToVirtualMachineStorageConfigurationLogSettingsPtrOutputWithContext(ctx)
}

// VirtualMachineStorageConfigurationLogSettingsPtrInput is an input type that accepts VirtualMachineStorageConfigurationLogSettingsArgs, VirtualMachineStorageConfigurationLogSettingsPtr and VirtualMachineStorageConfigurationLogSettingsPtrOutput values.
// You can construct a concrete instance of `VirtualMachineStorageConfigurationLogSettingsPtrInput` via:
//
//	        VirtualMachineStorageConfigurationLogSettingsArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineStorageConfigurationLogSettingsPtrInput interface {
	pulumi.Input

	ToVirtualMachineStorageConfigurationLogSettingsPtrOutput() VirtualMachineStorageConfigurationLogSettingsPtrOutput
	ToVirtualMachineStorageConfigurationLogSettingsPtrOutputWithContext(context.Context) VirtualMachineStorageConfigurationLogSettingsPtrOutput
}

type virtualMachineStorageConfigurationLogSettingsPtrType VirtualMachineStorageConfigurationLogSettingsArgs

func VirtualMachineStorageConfigurationLogSettingsPtr(v *VirtualMachineStorageConfigurationLogSettingsArgs) VirtualMachineStorageConfigurationLogSettingsPtrInput {
	return (*virtualMachineStorageConfigurationLogSettingsPtrType)(v)
}

func (*virtualMachineStorageConfigurationLogSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineStorageConfigurationLogSettings)(nil)).Elem()
}

func (i *virtualMachineStorageConfigurationLogSettingsPtrType) ToVirtualMachineStorageConfigurationLogSettingsPtrOutput() VirtualMachineStorageConfigurationLogSettingsPtrOutput {
	return i.ToVirtualMachineStorageConfigurationLogSettingsPtrOutputWithContext(context.Background())
}

func (i *virtualMachineStorageConfigurationLogSettingsPtrType) ToVirtualMachineStorageConfigurationLogSettingsPtrOutputWithContext(ctx context.Context) VirtualMachineStorageConfigurationLogSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineStorageConfigurationLogSettingsPtrOutput)
}

func (i *virtualMachineStorageConfigurationLogSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineStorageConfigurationLogSettings] {
	return pulumix.Output[*VirtualMachineStorageConfigurationLogSettings]{
		OutputState: i.ToVirtualMachineStorageConfigurationLogSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

type VirtualMachineStorageConfigurationLogSettingsOutput struct{ *pulumi.OutputState }

func (VirtualMachineStorageConfigurationLogSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineStorageConfigurationLogSettings)(nil)).Elem()
}

func (o VirtualMachineStorageConfigurationLogSettingsOutput) ToVirtualMachineStorageConfigurationLogSettingsOutput() VirtualMachineStorageConfigurationLogSettingsOutput {
	return o
}

func (o VirtualMachineStorageConfigurationLogSettingsOutput) ToVirtualMachineStorageConfigurationLogSettingsOutputWithContext(ctx context.Context) VirtualMachineStorageConfigurationLogSettingsOutput {
	return o
}

func (o VirtualMachineStorageConfigurationLogSettingsOutput) ToVirtualMachineStorageConfigurationLogSettingsPtrOutput() VirtualMachineStorageConfigurationLogSettingsPtrOutput {
	return o.ToVirtualMachineStorageConfigurationLogSettingsPtrOutputWithContext(context.Background())
}

func (o VirtualMachineStorageConfigurationLogSettingsOutput) ToVirtualMachineStorageConfigurationLogSettingsPtrOutputWithContext(ctx context.Context) VirtualMachineStorageConfigurationLogSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineStorageConfigurationLogSettings) *VirtualMachineStorageConfigurationLogSettings {
		return &v
	}).(VirtualMachineStorageConfigurationLogSettingsPtrOutput)
}

func (o VirtualMachineStorageConfigurationLogSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineStorageConfigurationLogSettings] {
	return pulumix.Output[VirtualMachineStorageConfigurationLogSettings]{
		OutputState: o.OutputState,
	}
}

// The SQL Server default path
func (o VirtualMachineStorageConfigurationLogSettingsOutput) DefaultFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineStorageConfigurationLogSettings) string { return v.DefaultFilePath }).(pulumi.StringOutput)
}

// A list of Logical Unit Numbers for the disks.
func (o VirtualMachineStorageConfigurationLogSettingsOutput) Luns() pulumi.IntArrayOutput {
	return o.ApplyT(func(v VirtualMachineStorageConfigurationLogSettings) []int { return v.Luns }).(pulumi.IntArrayOutput)
}

type VirtualMachineStorageConfigurationLogSettingsPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineStorageConfigurationLogSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineStorageConfigurationLogSettings)(nil)).Elem()
}

func (o VirtualMachineStorageConfigurationLogSettingsPtrOutput) ToVirtualMachineStorageConfigurationLogSettingsPtrOutput() VirtualMachineStorageConfigurationLogSettingsPtrOutput {
	return o
}

func (o VirtualMachineStorageConfigurationLogSettingsPtrOutput) ToVirtualMachineStorageConfigurationLogSettingsPtrOutputWithContext(ctx context.Context) VirtualMachineStorageConfigurationLogSettingsPtrOutput {
	return o
}

func (o VirtualMachineStorageConfigurationLogSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineStorageConfigurationLogSettings] {
	return pulumix.Output[*VirtualMachineStorageConfigurationLogSettings]{
		OutputState: o.OutputState,
	}
}

func (o VirtualMachineStorageConfigurationLogSettingsPtrOutput) Elem() VirtualMachineStorageConfigurationLogSettingsOutput {
	return o.ApplyT(func(v *VirtualMachineStorageConfigurationLogSettings) VirtualMachineStorageConfigurationLogSettings {
		if v != nil {
			return *v
		}
		var ret VirtualMachineStorageConfigurationLogSettings
		return ret
	}).(VirtualMachineStorageConfigurationLogSettingsOutput)
}

// The SQL Server default path
func (o VirtualMachineStorageConfigurationLogSettingsPtrOutput) DefaultFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineStorageConfigurationLogSettings) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultFilePath
	}).(pulumi.StringPtrOutput)
}

// A list of Logical Unit Numbers for the disks.
func (o VirtualMachineStorageConfigurationLogSettingsPtrOutput) Luns() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *VirtualMachineStorageConfigurationLogSettings) []int {
		if v == nil {
			return nil
		}
		return v.Luns
	}).(pulumi.IntArrayOutput)
}

type VirtualMachineStorageConfigurationTempDbSettings struct {
	// The SQL Server default file count. This value defaults to `8`
	DataFileCount *int `pulumi:"dataFileCount"`
	// The SQL Server default file size - This value defaults to `512`
	DataFileGrowthInMb *int `pulumi:"dataFileGrowthInMb"`
	// The SQL Server default file size - This value defaults to `256`
	DataFileSizeMb *int `pulumi:"dataFileSizeMb"`
	// The SQL Server default path
	DefaultFilePath string `pulumi:"defaultFilePath"`
	// The SQL Server default file size - This value defaults to `512`
	LogFileGrowthMb *int `pulumi:"logFileGrowthMb"`
	// The SQL Server default file size - This value defaults to `256`
	LogFileSizeMb *int `pulumi:"logFileSizeMb"`
	// A list of Logical Unit Numbers for the disks.
	Luns []int `pulumi:"luns"`
}

// VirtualMachineStorageConfigurationTempDbSettingsInput is an input type that accepts VirtualMachineStorageConfigurationTempDbSettingsArgs and VirtualMachineStorageConfigurationTempDbSettingsOutput values.
// You can construct a concrete instance of `VirtualMachineStorageConfigurationTempDbSettingsInput` via:
//
//	VirtualMachineStorageConfigurationTempDbSettingsArgs{...}
type VirtualMachineStorageConfigurationTempDbSettingsInput interface {
	pulumi.Input

	ToVirtualMachineStorageConfigurationTempDbSettingsOutput() VirtualMachineStorageConfigurationTempDbSettingsOutput
	ToVirtualMachineStorageConfigurationTempDbSettingsOutputWithContext(context.Context) VirtualMachineStorageConfigurationTempDbSettingsOutput
}

type VirtualMachineStorageConfigurationTempDbSettingsArgs struct {
	// The SQL Server default file count. This value defaults to `8`
	DataFileCount pulumi.IntPtrInput `pulumi:"dataFileCount"`
	// The SQL Server default file size - This value defaults to `512`
	DataFileGrowthInMb pulumi.IntPtrInput `pulumi:"dataFileGrowthInMb"`
	// The SQL Server default file size - This value defaults to `256`
	DataFileSizeMb pulumi.IntPtrInput `pulumi:"dataFileSizeMb"`
	// The SQL Server default path
	DefaultFilePath pulumi.StringInput `pulumi:"defaultFilePath"`
	// The SQL Server default file size - This value defaults to `512`
	LogFileGrowthMb pulumi.IntPtrInput `pulumi:"logFileGrowthMb"`
	// The SQL Server default file size - This value defaults to `256`
	LogFileSizeMb pulumi.IntPtrInput `pulumi:"logFileSizeMb"`
	// A list of Logical Unit Numbers for the disks.
	Luns pulumi.IntArrayInput `pulumi:"luns"`
}

func (VirtualMachineStorageConfigurationTempDbSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineStorageConfigurationTempDbSettings)(nil)).Elem()
}

func (i VirtualMachineStorageConfigurationTempDbSettingsArgs) ToVirtualMachineStorageConfigurationTempDbSettingsOutput() VirtualMachineStorageConfigurationTempDbSettingsOutput {
	return i.ToVirtualMachineStorageConfigurationTempDbSettingsOutputWithContext(context.Background())
}

func (i VirtualMachineStorageConfigurationTempDbSettingsArgs) ToVirtualMachineStorageConfigurationTempDbSettingsOutputWithContext(ctx context.Context) VirtualMachineStorageConfigurationTempDbSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineStorageConfigurationTempDbSettingsOutput)
}

func (i VirtualMachineStorageConfigurationTempDbSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineStorageConfigurationTempDbSettings] {
	return pulumix.Output[VirtualMachineStorageConfigurationTempDbSettings]{
		OutputState: i.ToVirtualMachineStorageConfigurationTempDbSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i VirtualMachineStorageConfigurationTempDbSettingsArgs) ToVirtualMachineStorageConfigurationTempDbSettingsPtrOutput() VirtualMachineStorageConfigurationTempDbSettingsPtrOutput {
	return i.ToVirtualMachineStorageConfigurationTempDbSettingsPtrOutputWithContext(context.Background())
}

func (i VirtualMachineStorageConfigurationTempDbSettingsArgs) ToVirtualMachineStorageConfigurationTempDbSettingsPtrOutputWithContext(ctx context.Context) VirtualMachineStorageConfigurationTempDbSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineStorageConfigurationTempDbSettingsOutput).ToVirtualMachineStorageConfigurationTempDbSettingsPtrOutputWithContext(ctx)
}

// VirtualMachineStorageConfigurationTempDbSettingsPtrInput is an input type that accepts VirtualMachineStorageConfigurationTempDbSettingsArgs, VirtualMachineStorageConfigurationTempDbSettingsPtr and VirtualMachineStorageConfigurationTempDbSettingsPtrOutput values.
// You can construct a concrete instance of `VirtualMachineStorageConfigurationTempDbSettingsPtrInput` via:
//
//	        VirtualMachineStorageConfigurationTempDbSettingsArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineStorageConfigurationTempDbSettingsPtrInput interface {
	pulumi.Input

	ToVirtualMachineStorageConfigurationTempDbSettingsPtrOutput() VirtualMachineStorageConfigurationTempDbSettingsPtrOutput
	ToVirtualMachineStorageConfigurationTempDbSettingsPtrOutputWithContext(context.Context) VirtualMachineStorageConfigurationTempDbSettingsPtrOutput
}

type virtualMachineStorageConfigurationTempDbSettingsPtrType VirtualMachineStorageConfigurationTempDbSettingsArgs

func VirtualMachineStorageConfigurationTempDbSettingsPtr(v *VirtualMachineStorageConfigurationTempDbSettingsArgs) VirtualMachineStorageConfigurationTempDbSettingsPtrInput {
	return (*virtualMachineStorageConfigurationTempDbSettingsPtrType)(v)
}

func (*virtualMachineStorageConfigurationTempDbSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineStorageConfigurationTempDbSettings)(nil)).Elem()
}

func (i *virtualMachineStorageConfigurationTempDbSettingsPtrType) ToVirtualMachineStorageConfigurationTempDbSettingsPtrOutput() VirtualMachineStorageConfigurationTempDbSettingsPtrOutput {
	return i.ToVirtualMachineStorageConfigurationTempDbSettingsPtrOutputWithContext(context.Background())
}

func (i *virtualMachineStorageConfigurationTempDbSettingsPtrType) ToVirtualMachineStorageConfigurationTempDbSettingsPtrOutputWithContext(ctx context.Context) VirtualMachineStorageConfigurationTempDbSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineStorageConfigurationTempDbSettingsPtrOutput)
}

func (i *virtualMachineStorageConfigurationTempDbSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineStorageConfigurationTempDbSettings] {
	return pulumix.Output[*VirtualMachineStorageConfigurationTempDbSettings]{
		OutputState: i.ToVirtualMachineStorageConfigurationTempDbSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

type VirtualMachineStorageConfigurationTempDbSettingsOutput struct{ *pulumi.OutputState }

func (VirtualMachineStorageConfigurationTempDbSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineStorageConfigurationTempDbSettings)(nil)).Elem()
}

func (o VirtualMachineStorageConfigurationTempDbSettingsOutput) ToVirtualMachineStorageConfigurationTempDbSettingsOutput() VirtualMachineStorageConfigurationTempDbSettingsOutput {
	return o
}

func (o VirtualMachineStorageConfigurationTempDbSettingsOutput) ToVirtualMachineStorageConfigurationTempDbSettingsOutputWithContext(ctx context.Context) VirtualMachineStorageConfigurationTempDbSettingsOutput {
	return o
}

func (o VirtualMachineStorageConfigurationTempDbSettingsOutput) ToVirtualMachineStorageConfigurationTempDbSettingsPtrOutput() VirtualMachineStorageConfigurationTempDbSettingsPtrOutput {
	return o.ToVirtualMachineStorageConfigurationTempDbSettingsPtrOutputWithContext(context.Background())
}

func (o VirtualMachineStorageConfigurationTempDbSettingsOutput) ToVirtualMachineStorageConfigurationTempDbSettingsPtrOutputWithContext(ctx context.Context) VirtualMachineStorageConfigurationTempDbSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineStorageConfigurationTempDbSettings) *VirtualMachineStorageConfigurationTempDbSettings {
		return &v
	}).(VirtualMachineStorageConfigurationTempDbSettingsPtrOutput)
}

func (o VirtualMachineStorageConfigurationTempDbSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineStorageConfigurationTempDbSettings] {
	return pulumix.Output[VirtualMachineStorageConfigurationTempDbSettings]{
		OutputState: o.OutputState,
	}
}

// The SQL Server default file count. This value defaults to `8`
func (o VirtualMachineStorageConfigurationTempDbSettingsOutput) DataFileCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageConfigurationTempDbSettings) *int { return v.DataFileCount }).(pulumi.IntPtrOutput)
}

// The SQL Server default file size - This value defaults to `512`
func (o VirtualMachineStorageConfigurationTempDbSettingsOutput) DataFileGrowthInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageConfigurationTempDbSettings) *int { return v.DataFileGrowthInMb }).(pulumi.IntPtrOutput)
}

// The SQL Server default file size - This value defaults to `256`
func (o VirtualMachineStorageConfigurationTempDbSettingsOutput) DataFileSizeMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageConfigurationTempDbSettings) *int { return v.DataFileSizeMb }).(pulumi.IntPtrOutput)
}

// The SQL Server default path
func (o VirtualMachineStorageConfigurationTempDbSettingsOutput) DefaultFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineStorageConfigurationTempDbSettings) string { return v.DefaultFilePath }).(pulumi.StringOutput)
}

// The SQL Server default file size - This value defaults to `512`
func (o VirtualMachineStorageConfigurationTempDbSettingsOutput) LogFileGrowthMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageConfigurationTempDbSettings) *int { return v.LogFileGrowthMb }).(pulumi.IntPtrOutput)
}

// The SQL Server default file size - This value defaults to `256`
func (o VirtualMachineStorageConfigurationTempDbSettingsOutput) LogFileSizeMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineStorageConfigurationTempDbSettings) *int { return v.LogFileSizeMb }).(pulumi.IntPtrOutput)
}

// A list of Logical Unit Numbers for the disks.
func (o VirtualMachineStorageConfigurationTempDbSettingsOutput) Luns() pulumi.IntArrayOutput {
	return o.ApplyT(func(v VirtualMachineStorageConfigurationTempDbSettings) []int { return v.Luns }).(pulumi.IntArrayOutput)
}

type VirtualMachineStorageConfigurationTempDbSettingsPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineStorageConfigurationTempDbSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineStorageConfigurationTempDbSettings)(nil)).Elem()
}

func (o VirtualMachineStorageConfigurationTempDbSettingsPtrOutput) ToVirtualMachineStorageConfigurationTempDbSettingsPtrOutput() VirtualMachineStorageConfigurationTempDbSettingsPtrOutput {
	return o
}

func (o VirtualMachineStorageConfigurationTempDbSettingsPtrOutput) ToVirtualMachineStorageConfigurationTempDbSettingsPtrOutputWithContext(ctx context.Context) VirtualMachineStorageConfigurationTempDbSettingsPtrOutput {
	return o
}

func (o VirtualMachineStorageConfigurationTempDbSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineStorageConfigurationTempDbSettings] {
	return pulumix.Output[*VirtualMachineStorageConfigurationTempDbSettings]{
		OutputState: o.OutputState,
	}
}

func (o VirtualMachineStorageConfigurationTempDbSettingsPtrOutput) Elem() VirtualMachineStorageConfigurationTempDbSettingsOutput {
	return o.ApplyT(func(v *VirtualMachineStorageConfigurationTempDbSettings) VirtualMachineStorageConfigurationTempDbSettings {
		if v != nil {
			return *v
		}
		var ret VirtualMachineStorageConfigurationTempDbSettings
		return ret
	}).(VirtualMachineStorageConfigurationTempDbSettingsOutput)
}

// The SQL Server default file count. This value defaults to `8`
func (o VirtualMachineStorageConfigurationTempDbSettingsPtrOutput) DataFileCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineStorageConfigurationTempDbSettings) *int {
		if v == nil {
			return nil
		}
		return v.DataFileCount
	}).(pulumi.IntPtrOutput)
}

// The SQL Server default file size - This value defaults to `512`
func (o VirtualMachineStorageConfigurationTempDbSettingsPtrOutput) DataFileGrowthInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineStorageConfigurationTempDbSettings) *int {
		if v == nil {
			return nil
		}
		return v.DataFileGrowthInMb
	}).(pulumi.IntPtrOutput)
}

// The SQL Server default file size - This value defaults to `256`
func (o VirtualMachineStorageConfigurationTempDbSettingsPtrOutput) DataFileSizeMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineStorageConfigurationTempDbSettings) *int {
		if v == nil {
			return nil
		}
		return v.DataFileSizeMb
	}).(pulumi.IntPtrOutput)
}

// The SQL Server default path
func (o VirtualMachineStorageConfigurationTempDbSettingsPtrOutput) DefaultFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineStorageConfigurationTempDbSettings) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultFilePath
	}).(pulumi.StringPtrOutput)
}

// The SQL Server default file size - This value defaults to `512`
func (o VirtualMachineStorageConfigurationTempDbSettingsPtrOutput) LogFileGrowthMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineStorageConfigurationTempDbSettings) *int {
		if v == nil {
			return nil
		}
		return v.LogFileGrowthMb
	}).(pulumi.IntPtrOutput)
}

// The SQL Server default file size - This value defaults to `256`
func (o VirtualMachineStorageConfigurationTempDbSettingsPtrOutput) LogFileSizeMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineStorageConfigurationTempDbSettings) *int {
		if v == nil {
			return nil
		}
		return v.LogFileSizeMb
	}).(pulumi.IntPtrOutput)
}

// A list of Logical Unit Numbers for the disks.
func (o VirtualMachineStorageConfigurationTempDbSettingsPtrOutput) Luns() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *VirtualMachineStorageConfigurationTempDbSettings) []int {
		if v == nil {
			return nil
		}
		return v.Luns
	}).(pulumi.IntArrayOutput)
}

type VirtualMachineWsfcDomainCredential struct {
	// The account password used for creating cluster.
	ClusterBootstrapAccountPassword string `pulumi:"clusterBootstrapAccountPassword"`
	// The account password used for operating cluster.
	ClusterOperatorAccountPassword string `pulumi:"clusterOperatorAccountPassword"`
	// The account password under which SQL service will run on all participating SQL virtual machines in the cluster.
	SqlServiceAccountPassword string `pulumi:"sqlServiceAccountPassword"`
}

// VirtualMachineWsfcDomainCredentialInput is an input type that accepts VirtualMachineWsfcDomainCredentialArgs and VirtualMachineWsfcDomainCredentialOutput values.
// You can construct a concrete instance of `VirtualMachineWsfcDomainCredentialInput` via:
//
//	VirtualMachineWsfcDomainCredentialArgs{...}
type VirtualMachineWsfcDomainCredentialInput interface {
	pulumi.Input

	ToVirtualMachineWsfcDomainCredentialOutput() VirtualMachineWsfcDomainCredentialOutput
	ToVirtualMachineWsfcDomainCredentialOutputWithContext(context.Context) VirtualMachineWsfcDomainCredentialOutput
}

type VirtualMachineWsfcDomainCredentialArgs struct {
	// The account password used for creating cluster.
	ClusterBootstrapAccountPassword pulumi.StringInput `pulumi:"clusterBootstrapAccountPassword"`
	// The account password used for operating cluster.
	ClusterOperatorAccountPassword pulumi.StringInput `pulumi:"clusterOperatorAccountPassword"`
	// The account password under which SQL service will run on all participating SQL virtual machines in the cluster.
	SqlServiceAccountPassword pulumi.StringInput `pulumi:"sqlServiceAccountPassword"`
}

func (VirtualMachineWsfcDomainCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineWsfcDomainCredential)(nil)).Elem()
}

func (i VirtualMachineWsfcDomainCredentialArgs) ToVirtualMachineWsfcDomainCredentialOutput() VirtualMachineWsfcDomainCredentialOutput {
	return i.ToVirtualMachineWsfcDomainCredentialOutputWithContext(context.Background())
}

func (i VirtualMachineWsfcDomainCredentialArgs) ToVirtualMachineWsfcDomainCredentialOutputWithContext(ctx context.Context) VirtualMachineWsfcDomainCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineWsfcDomainCredentialOutput)
}

func (i VirtualMachineWsfcDomainCredentialArgs) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineWsfcDomainCredential] {
	return pulumix.Output[VirtualMachineWsfcDomainCredential]{
		OutputState: i.ToVirtualMachineWsfcDomainCredentialOutputWithContext(ctx).OutputState,
	}
}

func (i VirtualMachineWsfcDomainCredentialArgs) ToVirtualMachineWsfcDomainCredentialPtrOutput() VirtualMachineWsfcDomainCredentialPtrOutput {
	return i.ToVirtualMachineWsfcDomainCredentialPtrOutputWithContext(context.Background())
}

func (i VirtualMachineWsfcDomainCredentialArgs) ToVirtualMachineWsfcDomainCredentialPtrOutputWithContext(ctx context.Context) VirtualMachineWsfcDomainCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineWsfcDomainCredentialOutput).ToVirtualMachineWsfcDomainCredentialPtrOutputWithContext(ctx)
}

// VirtualMachineWsfcDomainCredentialPtrInput is an input type that accepts VirtualMachineWsfcDomainCredentialArgs, VirtualMachineWsfcDomainCredentialPtr and VirtualMachineWsfcDomainCredentialPtrOutput values.
// You can construct a concrete instance of `VirtualMachineWsfcDomainCredentialPtrInput` via:
//
//	        VirtualMachineWsfcDomainCredentialArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineWsfcDomainCredentialPtrInput interface {
	pulumi.Input

	ToVirtualMachineWsfcDomainCredentialPtrOutput() VirtualMachineWsfcDomainCredentialPtrOutput
	ToVirtualMachineWsfcDomainCredentialPtrOutputWithContext(context.Context) VirtualMachineWsfcDomainCredentialPtrOutput
}

type virtualMachineWsfcDomainCredentialPtrType VirtualMachineWsfcDomainCredentialArgs

func VirtualMachineWsfcDomainCredentialPtr(v *VirtualMachineWsfcDomainCredentialArgs) VirtualMachineWsfcDomainCredentialPtrInput {
	return (*virtualMachineWsfcDomainCredentialPtrType)(v)
}

func (*virtualMachineWsfcDomainCredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineWsfcDomainCredential)(nil)).Elem()
}

func (i *virtualMachineWsfcDomainCredentialPtrType) ToVirtualMachineWsfcDomainCredentialPtrOutput() VirtualMachineWsfcDomainCredentialPtrOutput {
	return i.ToVirtualMachineWsfcDomainCredentialPtrOutputWithContext(context.Background())
}

func (i *virtualMachineWsfcDomainCredentialPtrType) ToVirtualMachineWsfcDomainCredentialPtrOutputWithContext(ctx context.Context) VirtualMachineWsfcDomainCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineWsfcDomainCredentialPtrOutput)
}

func (i *virtualMachineWsfcDomainCredentialPtrType) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineWsfcDomainCredential] {
	return pulumix.Output[*VirtualMachineWsfcDomainCredential]{
		OutputState: i.ToVirtualMachineWsfcDomainCredentialPtrOutputWithContext(ctx).OutputState,
	}
}

type VirtualMachineWsfcDomainCredentialOutput struct{ *pulumi.OutputState }

func (VirtualMachineWsfcDomainCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineWsfcDomainCredential)(nil)).Elem()
}

func (o VirtualMachineWsfcDomainCredentialOutput) ToVirtualMachineWsfcDomainCredentialOutput() VirtualMachineWsfcDomainCredentialOutput {
	return o
}

func (o VirtualMachineWsfcDomainCredentialOutput) ToVirtualMachineWsfcDomainCredentialOutputWithContext(ctx context.Context) VirtualMachineWsfcDomainCredentialOutput {
	return o
}

func (o VirtualMachineWsfcDomainCredentialOutput) ToVirtualMachineWsfcDomainCredentialPtrOutput() VirtualMachineWsfcDomainCredentialPtrOutput {
	return o.ToVirtualMachineWsfcDomainCredentialPtrOutputWithContext(context.Background())
}

func (o VirtualMachineWsfcDomainCredentialOutput) ToVirtualMachineWsfcDomainCredentialPtrOutputWithContext(ctx context.Context) VirtualMachineWsfcDomainCredentialPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineWsfcDomainCredential) *VirtualMachineWsfcDomainCredential {
		return &v
	}).(VirtualMachineWsfcDomainCredentialPtrOutput)
}

func (o VirtualMachineWsfcDomainCredentialOutput) ToOutput(ctx context.Context) pulumix.Output[VirtualMachineWsfcDomainCredential] {
	return pulumix.Output[VirtualMachineWsfcDomainCredential]{
		OutputState: o.OutputState,
	}
}

// The account password used for creating cluster.
func (o VirtualMachineWsfcDomainCredentialOutput) ClusterBootstrapAccountPassword() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineWsfcDomainCredential) string { return v.ClusterBootstrapAccountPassword }).(pulumi.StringOutput)
}

// The account password used for operating cluster.
func (o VirtualMachineWsfcDomainCredentialOutput) ClusterOperatorAccountPassword() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineWsfcDomainCredential) string { return v.ClusterOperatorAccountPassword }).(pulumi.StringOutput)
}

// The account password under which SQL service will run on all participating SQL virtual machines in the cluster.
func (o VirtualMachineWsfcDomainCredentialOutput) SqlServiceAccountPassword() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineWsfcDomainCredential) string { return v.SqlServiceAccountPassword }).(pulumi.StringOutput)
}

type VirtualMachineWsfcDomainCredentialPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineWsfcDomainCredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineWsfcDomainCredential)(nil)).Elem()
}

func (o VirtualMachineWsfcDomainCredentialPtrOutput) ToVirtualMachineWsfcDomainCredentialPtrOutput() VirtualMachineWsfcDomainCredentialPtrOutput {
	return o
}

func (o VirtualMachineWsfcDomainCredentialPtrOutput) ToVirtualMachineWsfcDomainCredentialPtrOutputWithContext(ctx context.Context) VirtualMachineWsfcDomainCredentialPtrOutput {
	return o
}

func (o VirtualMachineWsfcDomainCredentialPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VirtualMachineWsfcDomainCredential] {
	return pulumix.Output[*VirtualMachineWsfcDomainCredential]{
		OutputState: o.OutputState,
	}
}

func (o VirtualMachineWsfcDomainCredentialPtrOutput) Elem() VirtualMachineWsfcDomainCredentialOutput {
	return o.ApplyT(func(v *VirtualMachineWsfcDomainCredential) VirtualMachineWsfcDomainCredential {
		if v != nil {
			return *v
		}
		var ret VirtualMachineWsfcDomainCredential
		return ret
	}).(VirtualMachineWsfcDomainCredentialOutput)
}

// The account password used for creating cluster.
func (o VirtualMachineWsfcDomainCredentialPtrOutput) ClusterBootstrapAccountPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineWsfcDomainCredential) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterBootstrapAccountPassword
	}).(pulumi.StringPtrOutput)
}

// The account password used for operating cluster.
func (o VirtualMachineWsfcDomainCredentialPtrOutput) ClusterOperatorAccountPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineWsfcDomainCredential) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterOperatorAccountPassword
	}).(pulumi.StringPtrOutput)
}

// The account password under which SQL service will run on all participating SQL virtual machines in the cluster.
func (o VirtualMachineWsfcDomainCredentialPtrOutput) SqlServiceAccountPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineWsfcDomainCredential) *string {
		if v == nil {
			return nil
		}
		return &v.SqlServiceAccountPassword
	}).(pulumi.StringPtrOutput)
}

type GetElasticPoolSkus struct {
	// The scale up/out capacity, representing server's compute units.
	Capacity int `pulumi:"capacity"`
	// The `family` of hardware.
	Family string `pulumi:"family"`
	// The name of the elastic pool.
	Name string `pulumi:"name"`
	// The tier of the particular SKU.
	Tier string `pulumi:"tier"`
}

// GetElasticPoolSkusInput is an input type that accepts GetElasticPoolSkusArgs and GetElasticPoolSkusOutput values.
// You can construct a concrete instance of `GetElasticPoolSkusInput` via:
//
//	GetElasticPoolSkusArgs{...}
type GetElasticPoolSkusInput interface {
	pulumi.Input

	ToGetElasticPoolSkusOutput() GetElasticPoolSkusOutput
	ToGetElasticPoolSkusOutputWithContext(context.Context) GetElasticPoolSkusOutput
}

type GetElasticPoolSkusArgs struct {
	// The scale up/out capacity, representing server's compute units.
	Capacity pulumi.IntInput `pulumi:"capacity"`
	// The `family` of hardware.
	Family pulumi.StringInput `pulumi:"family"`
	// The name of the elastic pool.
	Name pulumi.StringInput `pulumi:"name"`
	// The tier of the particular SKU.
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (GetElasticPoolSkusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticPoolSkus)(nil)).Elem()
}

func (i GetElasticPoolSkusArgs) ToGetElasticPoolSkusOutput() GetElasticPoolSkusOutput {
	return i.ToGetElasticPoolSkusOutputWithContext(context.Background())
}

func (i GetElasticPoolSkusArgs) ToGetElasticPoolSkusOutputWithContext(ctx context.Context) GetElasticPoolSkusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticPoolSkusOutput)
}

func (i GetElasticPoolSkusArgs) ToOutput(ctx context.Context) pulumix.Output[GetElasticPoolSkus] {
	return pulumix.Output[GetElasticPoolSkus]{
		OutputState: i.ToGetElasticPoolSkusOutputWithContext(ctx).OutputState,
	}
}

// GetElasticPoolSkusArrayInput is an input type that accepts GetElasticPoolSkusArray and GetElasticPoolSkusArrayOutput values.
// You can construct a concrete instance of `GetElasticPoolSkusArrayInput` via:
//
//	GetElasticPoolSkusArray{ GetElasticPoolSkusArgs{...} }
type GetElasticPoolSkusArrayInput interface {
	pulumi.Input

	ToGetElasticPoolSkusArrayOutput() GetElasticPoolSkusArrayOutput
	ToGetElasticPoolSkusArrayOutputWithContext(context.Context) GetElasticPoolSkusArrayOutput
}

type GetElasticPoolSkusArray []GetElasticPoolSkusInput

func (GetElasticPoolSkusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElasticPoolSkus)(nil)).Elem()
}

func (i GetElasticPoolSkusArray) ToGetElasticPoolSkusArrayOutput() GetElasticPoolSkusArrayOutput {
	return i.ToGetElasticPoolSkusArrayOutputWithContext(context.Background())
}

func (i GetElasticPoolSkusArray) ToGetElasticPoolSkusArrayOutputWithContext(ctx context.Context) GetElasticPoolSkusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticPoolSkusArrayOutput)
}

func (i GetElasticPoolSkusArray) ToOutput(ctx context.Context) pulumix.Output[[]GetElasticPoolSkus] {
	return pulumix.Output[[]GetElasticPoolSkus]{
		OutputState: i.ToGetElasticPoolSkusArrayOutputWithContext(ctx).OutputState,
	}
}

type GetElasticPoolSkusOutput struct{ *pulumi.OutputState }

func (GetElasticPoolSkusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticPoolSkus)(nil)).Elem()
}

func (o GetElasticPoolSkusOutput) ToGetElasticPoolSkusOutput() GetElasticPoolSkusOutput {
	return o
}

func (o GetElasticPoolSkusOutput) ToGetElasticPoolSkusOutputWithContext(ctx context.Context) GetElasticPoolSkusOutput {
	return o
}

func (o GetElasticPoolSkusOutput) ToOutput(ctx context.Context) pulumix.Output[GetElasticPoolSkus] {
	return pulumix.Output[GetElasticPoolSkus]{
		OutputState: o.OutputState,
	}
}

// The scale up/out capacity, representing server's compute units.
func (o GetElasticPoolSkusOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetElasticPoolSkus) int { return v.Capacity }).(pulumi.IntOutput)
}

// The `family` of hardware.
func (o GetElasticPoolSkusOutput) Family() pulumi.StringOutput {
	return o.ApplyT(func(v GetElasticPoolSkus) string { return v.Family }).(pulumi.StringOutput)
}

// The name of the elastic pool.
func (o GetElasticPoolSkusOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetElasticPoolSkus) string { return v.Name }).(pulumi.StringOutput)
}

// The tier of the particular SKU.
func (o GetElasticPoolSkusOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v GetElasticPoolSkus) string { return v.Tier }).(pulumi.StringOutput)
}

type GetElasticPoolSkusArrayOutput struct{ *pulumi.OutputState }

func (GetElasticPoolSkusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElasticPoolSkus)(nil)).Elem()
}

func (o GetElasticPoolSkusArrayOutput) ToGetElasticPoolSkusArrayOutput() GetElasticPoolSkusArrayOutput {
	return o
}

func (o GetElasticPoolSkusArrayOutput) ToGetElasticPoolSkusArrayOutputWithContext(ctx context.Context) GetElasticPoolSkusArrayOutput {
	return o
}

func (o GetElasticPoolSkusArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetElasticPoolSkus] {
	return pulumix.Output[[]GetElasticPoolSkus]{
		OutputState: o.OutputState,
	}
}

func (o GetElasticPoolSkusArrayOutput) Index(i pulumi.IntInput) GetElasticPoolSkusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetElasticPoolSkus {
		return vs[0].([]GetElasticPoolSkus)[vs[1].(int)]
	}).(GetElasticPoolSkusOutput)
}

type GetManagedInstanceIdentity struct {
	// A list of User Assigned Managed Identity IDs assigned with the Identity of this SQL Managed Instance.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID for the Service Principal associated with the Identity of this SQL Managed Instance.
	PrincipalId string `pulumi:"principalId"`
	// The Tenant ID for the Service Principal associated with the Identity of this SQL Managed Instance.
	TenantId string `pulumi:"tenantId"`
	// The identity type of the SQL Managed Instance.
	Type string `pulumi:"type"`
}

// GetManagedInstanceIdentityInput is an input type that accepts GetManagedInstanceIdentityArgs and GetManagedInstanceIdentityOutput values.
// You can construct a concrete instance of `GetManagedInstanceIdentityInput` via:
//
//	GetManagedInstanceIdentityArgs{...}
type GetManagedInstanceIdentityInput interface {
	pulumi.Input

	ToGetManagedInstanceIdentityOutput() GetManagedInstanceIdentityOutput
	ToGetManagedInstanceIdentityOutputWithContext(context.Context) GetManagedInstanceIdentityOutput
}

type GetManagedInstanceIdentityArgs struct {
	// A list of User Assigned Managed Identity IDs assigned with the Identity of this SQL Managed Instance.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID for the Service Principal associated with the Identity of this SQL Managed Instance.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The Tenant ID for the Service Principal associated with the Identity of this SQL Managed Instance.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The identity type of the SQL Managed Instance.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetManagedInstanceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceIdentity)(nil)).Elem()
}

func (i GetManagedInstanceIdentityArgs) ToGetManagedInstanceIdentityOutput() GetManagedInstanceIdentityOutput {
	return i.ToGetManagedInstanceIdentityOutputWithContext(context.Background())
}

func (i GetManagedInstanceIdentityArgs) ToGetManagedInstanceIdentityOutputWithContext(ctx context.Context) GetManagedInstanceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceIdentityOutput)
}

func (i GetManagedInstanceIdentityArgs) ToOutput(ctx context.Context) pulumix.Output[GetManagedInstanceIdentity] {
	return pulumix.Output[GetManagedInstanceIdentity]{
		OutputState: i.ToGetManagedInstanceIdentityOutputWithContext(ctx).OutputState,
	}
}

// GetManagedInstanceIdentityArrayInput is an input type that accepts GetManagedInstanceIdentityArray and GetManagedInstanceIdentityArrayOutput values.
// You can construct a concrete instance of `GetManagedInstanceIdentityArrayInput` via:
//
//	GetManagedInstanceIdentityArray{ GetManagedInstanceIdentityArgs{...} }
type GetManagedInstanceIdentityArrayInput interface {
	pulumi.Input

	ToGetManagedInstanceIdentityArrayOutput() GetManagedInstanceIdentityArrayOutput
	ToGetManagedInstanceIdentityArrayOutputWithContext(context.Context) GetManagedInstanceIdentityArrayOutput
}

type GetManagedInstanceIdentityArray []GetManagedInstanceIdentityInput

func (GetManagedInstanceIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceIdentity)(nil)).Elem()
}

func (i GetManagedInstanceIdentityArray) ToGetManagedInstanceIdentityArrayOutput() GetManagedInstanceIdentityArrayOutput {
	return i.ToGetManagedInstanceIdentityArrayOutputWithContext(context.Background())
}

func (i GetManagedInstanceIdentityArray) ToGetManagedInstanceIdentityArrayOutputWithContext(ctx context.Context) GetManagedInstanceIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedInstanceIdentityArrayOutput)
}

func (i GetManagedInstanceIdentityArray) ToOutput(ctx context.Context) pulumix.Output[[]GetManagedInstanceIdentity] {
	return pulumix.Output[[]GetManagedInstanceIdentity]{
		OutputState: i.ToGetManagedInstanceIdentityArrayOutputWithContext(ctx).OutputState,
	}
}

type GetManagedInstanceIdentityOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedInstanceIdentity)(nil)).Elem()
}

func (o GetManagedInstanceIdentityOutput) ToGetManagedInstanceIdentityOutput() GetManagedInstanceIdentityOutput {
	return o
}

func (o GetManagedInstanceIdentityOutput) ToGetManagedInstanceIdentityOutputWithContext(ctx context.Context) GetManagedInstanceIdentityOutput {
	return o
}

func (o GetManagedInstanceIdentityOutput) ToOutput(ctx context.Context) pulumix.Output[GetManagedInstanceIdentity] {
	return pulumix.Output[GetManagedInstanceIdentity]{
		OutputState: o.OutputState,
	}
}

// A list of User Assigned Managed Identity IDs assigned with the Identity of this SQL Managed Instance.
func (o GetManagedInstanceIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedInstanceIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID for the Service Principal associated with the Identity of this SQL Managed Instance.
func (o GetManagedInstanceIdentityOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceIdentity) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The Tenant ID for the Service Principal associated with the Identity of this SQL Managed Instance.
func (o GetManagedInstanceIdentityOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceIdentity) string { return v.TenantId }).(pulumi.StringOutput)
}

// The identity type of the SQL Managed Instance.
func (o GetManagedInstanceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedInstanceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type GetManagedInstanceIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetManagedInstanceIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedInstanceIdentity)(nil)).Elem()
}

func (o GetManagedInstanceIdentityArrayOutput) ToGetManagedInstanceIdentityArrayOutput() GetManagedInstanceIdentityArrayOutput {
	return o
}

func (o GetManagedInstanceIdentityArrayOutput) ToGetManagedInstanceIdentityArrayOutputWithContext(ctx context.Context) GetManagedInstanceIdentityArrayOutput {
	return o
}

func (o GetManagedInstanceIdentityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetManagedInstanceIdentity] {
	return pulumix.Output[[]GetManagedInstanceIdentity]{
		OutputState: o.OutputState,
	}
}

func (o GetManagedInstanceIdentityArrayOutput) Index(i pulumi.IntInput) GetManagedInstanceIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedInstanceIdentity {
		return vs[0].([]GetManagedInstanceIdentity)[vs[1].(int)]
	}).(GetManagedInstanceIdentityOutput)
}

type GetServerIdentity struct {
	// The list of User Assigned Managed Identity IDs assigned to this Microsoft SQL Server.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID of the System Assigned Managed Service Identity that is configured on this Microsoft SQL Server.
	PrincipalId string `pulumi:"principalId"`
	// The Tenant ID of the System Assigned Managed Service Identity that is configured on this Microsoft SQL Server.
	TenantId string `pulumi:"tenantId"`
	// The type of Managed Service Identity that is configured on this Microsoft SQL Server.
	Type string `pulumi:"type"`
}

// GetServerIdentityInput is an input type that accepts GetServerIdentityArgs and GetServerIdentityOutput values.
// You can construct a concrete instance of `GetServerIdentityInput` via:
//
//	GetServerIdentityArgs{...}
type GetServerIdentityInput interface {
	pulumi.Input

	ToGetServerIdentityOutput() GetServerIdentityOutput
	ToGetServerIdentityOutputWithContext(context.Context) GetServerIdentityOutput
}

type GetServerIdentityArgs struct {
	// The list of User Assigned Managed Identity IDs assigned to this Microsoft SQL Server.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID of the System Assigned Managed Service Identity that is configured on this Microsoft SQL Server.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The Tenant ID of the System Assigned Managed Service Identity that is configured on this Microsoft SQL Server.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The type of Managed Service Identity that is configured on this Microsoft SQL Server.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetServerIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerIdentity)(nil)).Elem()
}

func (i GetServerIdentityArgs) ToGetServerIdentityOutput() GetServerIdentityOutput {
	return i.ToGetServerIdentityOutputWithContext(context.Background())
}

func (i GetServerIdentityArgs) ToGetServerIdentityOutputWithContext(ctx context.Context) GetServerIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerIdentityOutput)
}

func (i GetServerIdentityArgs) ToOutput(ctx context.Context) pulumix.Output[GetServerIdentity] {
	return pulumix.Output[GetServerIdentity]{
		OutputState: i.ToGetServerIdentityOutputWithContext(ctx).OutputState,
	}
}

// GetServerIdentityArrayInput is an input type that accepts GetServerIdentityArray and GetServerIdentityArrayOutput values.
// You can construct a concrete instance of `GetServerIdentityArrayInput` via:
//
//	GetServerIdentityArray{ GetServerIdentityArgs{...} }
type GetServerIdentityArrayInput interface {
	pulumi.Input

	ToGetServerIdentityArrayOutput() GetServerIdentityArrayOutput
	ToGetServerIdentityArrayOutputWithContext(context.Context) GetServerIdentityArrayOutput
}

type GetServerIdentityArray []GetServerIdentityInput

func (GetServerIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerIdentity)(nil)).Elem()
}

func (i GetServerIdentityArray) ToGetServerIdentityArrayOutput() GetServerIdentityArrayOutput {
	return i.ToGetServerIdentityArrayOutputWithContext(context.Background())
}

func (i GetServerIdentityArray) ToGetServerIdentityArrayOutputWithContext(ctx context.Context) GetServerIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerIdentityArrayOutput)
}

func (i GetServerIdentityArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServerIdentity] {
	return pulumix.Output[[]GetServerIdentity]{
		OutputState: i.ToGetServerIdentityArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServerIdentityOutput struct{ *pulumi.OutputState }

func (GetServerIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerIdentity)(nil)).Elem()
}

func (o GetServerIdentityOutput) ToGetServerIdentityOutput() GetServerIdentityOutput {
	return o
}

func (o GetServerIdentityOutput) ToGetServerIdentityOutputWithContext(ctx context.Context) GetServerIdentityOutput {
	return o
}

func (o GetServerIdentityOutput) ToOutput(ctx context.Context) pulumix.Output[GetServerIdentity] {
	return pulumix.Output[GetServerIdentity]{
		OutputState: o.OutputState,
	}
}

// The list of User Assigned Managed Identity IDs assigned to this Microsoft SQL Server.
func (o GetServerIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServerIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID of the System Assigned Managed Service Identity that is configured on this Microsoft SQL Server.
func (o GetServerIdentityOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerIdentity) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The Tenant ID of the System Assigned Managed Service Identity that is configured on this Microsoft SQL Server.
func (o GetServerIdentityOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerIdentity) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of Managed Service Identity that is configured on this Microsoft SQL Server.
func (o GetServerIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type GetServerIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetServerIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerIdentity)(nil)).Elem()
}

func (o GetServerIdentityArrayOutput) ToGetServerIdentityArrayOutput() GetServerIdentityArrayOutput {
	return o
}

func (o GetServerIdentityArrayOutput) ToGetServerIdentityArrayOutputWithContext(ctx context.Context) GetServerIdentityArrayOutput {
	return o
}

func (o GetServerIdentityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServerIdentity] {
	return pulumix.Output[[]GetServerIdentity]{
		OutputState: o.OutputState,
	}
}

func (o GetServerIdentityArrayOutput) Index(i pulumi.IntInput) GetServerIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerIdentity {
		return vs[0].([]GetServerIdentity)[vs[1].(int)]
	}).(GetServerIdentityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseImportInput)(nil)).Elem(), DatabaseImportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseImportPtrInput)(nil)).Elem(), DatabaseImportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseLongTermRetentionPolicyInput)(nil)).Elem(), DatabaseLongTermRetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseLongTermRetentionPolicyPtrInput)(nil)).Elem(), DatabaseLongTermRetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseShortTermRetentionPolicyInput)(nil)).Elem(), DatabaseShortTermRetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseShortTermRetentionPolicyPtrInput)(nil)).Elem(), DatabaseShortTermRetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseThreatDetectionPolicyInput)(nil)).Elem(), DatabaseThreatDetectionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseThreatDetectionPolicyPtrInput)(nil)).Elem(), DatabaseThreatDetectionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultInput)(nil)).Elem(), DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayInput)(nil)).Elem(), DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticPoolPerDatabaseSettingsInput)(nil)).Elem(), ElasticPoolPerDatabaseSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticPoolPerDatabaseSettingsPtrInput)(nil)).Elem(), ElasticPoolPerDatabaseSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticPoolSkuInput)(nil)).Elem(), ElasticPoolSkuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticPoolSkuPtrInput)(nil)).Elem(), ElasticPoolSkuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FailoverGroupPartnerServerInput)(nil)).Elem(), FailoverGroupPartnerServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FailoverGroupPartnerServerArrayInput)(nil)).Elem(), FailoverGroupPartnerServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FailoverGroupReadWriteEndpointFailoverPolicyInput)(nil)).Elem(), FailoverGroupReadWriteEndpointFailoverPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FailoverGroupReadWriteEndpointFailoverPolicyPtrInput)(nil)).Elem(), FailoverGroupReadWriteEndpointFailoverPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseLongTermRetentionPolicyInput)(nil)).Elem(), ManagedDatabaseLongTermRetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseLongTermRetentionPolicyPtrInput)(nil)).Elem(), ManagedDatabaseLongTermRetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceFailoverGroupPartnerRegionInput)(nil)).Elem(), ManagedInstanceFailoverGroupPartnerRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceFailoverGroupPartnerRegionArrayInput)(nil)).Elem(), ManagedInstanceFailoverGroupPartnerRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyInput)(nil)).Elem(), ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrInput)(nil)).Elem(), ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceIdentityInput)(nil)).Elem(), ManagedInstanceIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceIdentityPtrInput)(nil)).Elem(), ManagedInstanceIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceVulnerabilityAssessmentRecurringScansInput)(nil)).Elem(), ManagedInstanceVulnerabilityAssessmentRecurringScansArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedInstanceVulnerabilityAssessmentRecurringScansPtrInput)(nil)).Elem(), ManagedInstanceVulnerabilityAssessmentRecurringScansArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerAzureadAdministratorInput)(nil)).Elem(), ServerAzureadAdministratorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerAzureadAdministratorPtrInput)(nil)).Elem(), ServerAzureadAdministratorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerIdentityInput)(nil)).Elem(), ServerIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerIdentityPtrInput)(nil)).Elem(), ServerIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerVulnerabilityAssessmentRecurringScansInput)(nil)).Elem(), ServerVulnerabilityAssessmentRecurringScansArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerVulnerabilityAssessmentRecurringScansPtrInput)(nil)).Elem(), ServerVulnerabilityAssessmentRecurringScansArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineAssessmentInput)(nil)).Elem(), VirtualMachineAssessmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineAssessmentPtrInput)(nil)).Elem(), VirtualMachineAssessmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineAssessmentScheduleInput)(nil)).Elem(), VirtualMachineAssessmentScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineAssessmentSchedulePtrInput)(nil)).Elem(), VirtualMachineAssessmentScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineAutoBackupInput)(nil)).Elem(), VirtualMachineAutoBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineAutoBackupPtrInput)(nil)).Elem(), VirtualMachineAutoBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineAutoBackupManualScheduleInput)(nil)).Elem(), VirtualMachineAutoBackupManualScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineAutoBackupManualSchedulePtrInput)(nil)).Elem(), VirtualMachineAutoBackupManualScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineAutoPatchingInput)(nil)).Elem(), VirtualMachineAutoPatchingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineAutoPatchingPtrInput)(nil)).Elem(), VirtualMachineAutoPatchingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationInput)(nil)).Elem(), VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrInput)(nil)).Elem(), VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationInput)(nil)).Elem(), VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayInput)(nil)).Elem(), VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineAvailabilityGroupListenerReplicaInput)(nil)).Elem(), VirtualMachineAvailabilityGroupListenerReplicaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineAvailabilityGroupListenerReplicaArrayInput)(nil)).Elem(), VirtualMachineAvailabilityGroupListenerReplicaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineGroupWsfcDomainProfileInput)(nil)).Elem(), VirtualMachineGroupWsfcDomainProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineGroupWsfcDomainProfilePtrInput)(nil)).Elem(), VirtualMachineGroupWsfcDomainProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineKeyVaultCredentialInput)(nil)).Elem(), VirtualMachineKeyVaultCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineKeyVaultCredentialPtrInput)(nil)).Elem(), VirtualMachineKeyVaultCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineSqlInstanceInput)(nil)).Elem(), VirtualMachineSqlInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineSqlInstancePtrInput)(nil)).Elem(), VirtualMachineSqlInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineStorageConfigurationInput)(nil)).Elem(), VirtualMachineStorageConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineStorageConfigurationPtrInput)(nil)).Elem(), VirtualMachineStorageConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineStorageConfigurationDataSettingsInput)(nil)).Elem(), VirtualMachineStorageConfigurationDataSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineStorageConfigurationDataSettingsPtrInput)(nil)).Elem(), VirtualMachineStorageConfigurationDataSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineStorageConfigurationLogSettingsInput)(nil)).Elem(), VirtualMachineStorageConfigurationLogSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineStorageConfigurationLogSettingsPtrInput)(nil)).Elem(), VirtualMachineStorageConfigurationLogSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineStorageConfigurationTempDbSettingsInput)(nil)).Elem(), VirtualMachineStorageConfigurationTempDbSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineStorageConfigurationTempDbSettingsPtrInput)(nil)).Elem(), VirtualMachineStorageConfigurationTempDbSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineWsfcDomainCredentialInput)(nil)).Elem(), VirtualMachineWsfcDomainCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineWsfcDomainCredentialPtrInput)(nil)).Elem(), VirtualMachineWsfcDomainCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetElasticPoolSkusInput)(nil)).Elem(), GetElasticPoolSkusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetElasticPoolSkusArrayInput)(nil)).Elem(), GetElasticPoolSkusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceIdentityInput)(nil)).Elem(), GetManagedInstanceIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedInstanceIdentityArrayInput)(nil)).Elem(), GetManagedInstanceIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerIdentityInput)(nil)).Elem(), GetServerIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerIdentityArrayInput)(nil)).Elem(), GetServerIdentityArray{})
	pulumi.RegisterOutputType(DatabaseImportOutput{})
	pulumi.RegisterOutputType(DatabaseImportPtrOutput{})
	pulumi.RegisterOutputType(DatabaseLongTermRetentionPolicyOutput{})
	pulumi.RegisterOutputType(DatabaseLongTermRetentionPolicyPtrOutput{})
	pulumi.RegisterOutputType(DatabaseShortTermRetentionPolicyOutput{})
	pulumi.RegisterOutputType(DatabaseShortTermRetentionPolicyPtrOutput{})
	pulumi.RegisterOutputType(DatabaseThreatDetectionPolicyOutput{})
	pulumi.RegisterOutputType(DatabaseThreatDetectionPolicyPtrOutput{})
	pulumi.RegisterOutputType(DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultOutput{})
	pulumi.RegisterOutputType(DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArrayOutput{})
	pulumi.RegisterOutputType(ElasticPoolPerDatabaseSettingsOutput{})
	pulumi.RegisterOutputType(ElasticPoolPerDatabaseSettingsPtrOutput{})
	pulumi.RegisterOutputType(ElasticPoolSkuOutput{})
	pulumi.RegisterOutputType(ElasticPoolSkuPtrOutput{})
	pulumi.RegisterOutputType(FailoverGroupPartnerServerOutput{})
	pulumi.RegisterOutputType(FailoverGroupPartnerServerArrayOutput{})
	pulumi.RegisterOutputType(FailoverGroupReadWriteEndpointFailoverPolicyOutput{})
	pulumi.RegisterOutputType(FailoverGroupReadWriteEndpointFailoverPolicyPtrOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseLongTermRetentionPolicyOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseLongTermRetentionPolicyPtrOutput{})
	pulumi.RegisterOutputType(ManagedInstanceFailoverGroupPartnerRegionOutput{})
	pulumi.RegisterOutputType(ManagedInstanceFailoverGroupPartnerRegionArrayOutput{})
	pulumi.RegisterOutputType(ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyOutput{})
	pulumi.RegisterOutputType(ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyPtrOutput{})
	pulumi.RegisterOutputType(ManagedInstanceIdentityOutput{})
	pulumi.RegisterOutputType(ManagedInstanceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedInstanceVulnerabilityAssessmentRecurringScansOutput{})
	pulumi.RegisterOutputType(ManagedInstanceVulnerabilityAssessmentRecurringScansPtrOutput{})
	pulumi.RegisterOutputType(ServerAzureadAdministratorOutput{})
	pulumi.RegisterOutputType(ServerAzureadAdministratorPtrOutput{})
	pulumi.RegisterOutputType(ServerIdentityOutput{})
	pulumi.RegisterOutputType(ServerIdentityPtrOutput{})
	pulumi.RegisterOutputType(ServerVulnerabilityAssessmentRecurringScansOutput{})
	pulumi.RegisterOutputType(ServerVulnerabilityAssessmentRecurringScansPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineAssessmentOutput{})
	pulumi.RegisterOutputType(VirtualMachineAssessmentPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineAssessmentScheduleOutput{})
	pulumi.RegisterOutputType(VirtualMachineAssessmentSchedulePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineAutoBackupOutput{})
	pulumi.RegisterOutputType(VirtualMachineAutoBackupPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineAutoBackupManualScheduleOutput{})
	pulumi.RegisterOutputType(VirtualMachineAutoBackupManualSchedulePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineAutoPatchingOutput{})
	pulumi.RegisterOutputType(VirtualMachineAutoPatchingPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationOutput{})
	pulumi.RegisterOutputType(VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationOutput{})
	pulumi.RegisterOutputType(VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineAvailabilityGroupListenerReplicaOutput{})
	pulumi.RegisterOutputType(VirtualMachineAvailabilityGroupListenerReplicaArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineGroupWsfcDomainProfileOutput{})
	pulumi.RegisterOutputType(VirtualMachineGroupWsfcDomainProfilePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineKeyVaultCredentialOutput{})
	pulumi.RegisterOutputType(VirtualMachineKeyVaultCredentialPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineSqlInstanceOutput{})
	pulumi.RegisterOutputType(VirtualMachineSqlInstancePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineStorageConfigurationOutput{})
	pulumi.RegisterOutputType(VirtualMachineStorageConfigurationPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineStorageConfigurationDataSettingsOutput{})
	pulumi.RegisterOutputType(VirtualMachineStorageConfigurationDataSettingsPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineStorageConfigurationLogSettingsOutput{})
	pulumi.RegisterOutputType(VirtualMachineStorageConfigurationLogSettingsPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineStorageConfigurationTempDbSettingsOutput{})
	pulumi.RegisterOutputType(VirtualMachineStorageConfigurationTempDbSettingsPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineWsfcDomainCredentialOutput{})
	pulumi.RegisterOutputType(VirtualMachineWsfcDomainCredentialPtrOutput{})
	pulumi.RegisterOutputType(GetElasticPoolSkusOutput{})
	pulumi.RegisterOutputType(GetElasticPoolSkusArrayOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceIdentityOutput{})
	pulumi.RegisterOutputType(GetManagedInstanceIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetServerIdentityOutput{})
	pulumi.RegisterOutputType(GetServerIdentityArrayOutput{})
}
